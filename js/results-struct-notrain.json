[{"repo_owner": "gmabey", "repo_name": "qsoftfloat", "path": "gmabey/qsoftfloat/92afb784d747d9710f30217cacb14e358c3769e95e363504219c1f0f57850dd9", "path_in_repo": "gmabey/qsoftfloat/SoftFloat-3e/build/Linux-ARM-VFPv2-GCC/f64_sqrt.o", "objdump": "0000000000000000 <f64_sqrt>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 81 ec a0 00 00 00 \tsub    $0xa0,%rsp\n   b:\t48 89 bd 68 ff ff ff \tmov    %rdi,-0x98(%rbp)\n  12:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n  19:\t48 89 45 98          \tmov    %rax,-0x68(%rbp)\n  1d:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n  21:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n  25:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  29:\t48 c1 e8 3f          \tshr    $0x3f,%rax\n  2d:\t88 45 cf             \tmov    %al,-0x31(%rbp)\n  30:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  34:\t48 c1 e8 34          \tshr    $0x34,%rax\n  38:\t25 ff 07 00 00       \tand    $0x7ff,%eax\n  3d:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  41:\t48 b8 ff ff ff ff ff \tmovabs $0xfffffffffffff,%rax\n  48:\tff 0f 00 \n  4b:\t48 23 45 d0          \tand    -0x30(%rbp),%rax\n  4f:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  53:\t48 81 7d f8 ff 07 00 \tcmpq   $0x7ff,-0x8(%rbp)\n  5a:\t00 \n  5b:\t75 3c                \tjne    99 <f64_sqrt+0x99>\n  5d:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n  62:\t74 1a                \tje     7e <f64_sqrt+0x7e>\n  64:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  68:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  6d:\t48 89 c7             \tmov    %rax,%rdi\n  70:\te8 00 00 00 00       \tcallq  75 <f64_sqrt+0x75>\n  75:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  79:\te9 c5 01 00 00       \tjmpq   243 <f64_sqrt+0x243>\n  7e:\t0f b6 45 cf          \tmovzbl -0x31(%rbp),%eax\n  82:\t83 f0 01             \txor    $0x1,%eax\n  85:\t84 c0                \ttest   %al,%al\n  87:\t0f 84 9a 01 00 00    \tje     227 <f64_sqrt+0x227>\n  8d:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n  94:\te9 bc 01 00 00       \tjmpq   255 <f64_sqrt+0x255>\n  99:\t80 7d cf 00          \tcmpb   $0x0,-0x31(%rbp)\n  9d:\t74 1d                \tje     bc <f64_sqrt+0xbc>\n  9f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  a3:\t48 0b 45 f0          \tor     -0x10(%rbp),%rax\n  a7:\t48 85 c0             \ttest   %rax,%rax\n  aa:\t0f 85 7a 01 00 00    \tjne    22a <f64_sqrt+0x22a>\n  b0:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n  b7:\te9 99 01 00 00       \tjmpq   255 <f64_sqrt+0x255>\n  bc:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n  c1:\t75 37                \tjne    fa <f64_sqrt+0xfa>\n  c3:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n  c8:\t75 0c                \tjne    d6 <f64_sqrt+0xd6>\n  ca:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n  d1:\te9 7f 01 00 00       \tjmpq   255 <f64_sqrt+0x255>\n  d6:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  da:\t48 89 c7             \tmov    %rax,%rdi\n  dd:\te8 00 00 00 00       \tcallq  e2 <f64_sqrt+0xe2>\n  e2:\t48 89 45 80          \tmov    %rax,-0x80(%rbp)\n  e6:\t48 89 55 88          \tmov    %rdx,-0x78(%rbp)\n  ea:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n  ee:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  f2:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n  f6:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  fa:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  fe:\t48 2d ff 03 00 00    \tsub    $0x3ff,%rax\n 104:\t48 d1 f8             \tsar    %rax\n 107:\t48 05 fe 03 00 00    \tadd    $0x3fe,%rax\n 10d:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n 111:\t48 83 65 f8 01       \tandq   $0x1,-0x8(%rbp)\n 116:\t48 b8 00 00 00 00 00 \tmovabs $0x10000000000000,%rax\n 11d:\t00 10 00 \n 120:\t48 09 45 f0          \tor     %rax,-0x10(%rbp)\n 124:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 128:\t48 c1 e8 15          \tshr    $0x15,%rax\n 12c:\t89 45 bc             \tmov    %eax,-0x44(%rbp)\n 12f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 133:\t89 c2                \tmov    %eax,%edx\n 135:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n 138:\t89 c6                \tmov    %eax,%esi\n 13a:\t89 d7                \tmov    %edx,%edi\n 13c:\te8 00 00 00 00       \tcallq  141 <f64_sqrt+0x141>\n 141:\t89 45 b8             \tmov    %eax,-0x48(%rbp)\n 144:\t8b 55 bc             \tmov    -0x44(%rbp),%edx\n 147:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n 14a:\t48 0f af c2          \timul   %rdx,%rax\n 14e:\t48 c1 e8 20          \tshr    $0x20,%rax\n 152:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n 155:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n 15a:\t74 0a                \tje     166 <f64_sqrt+0x166>\n 15c:\t48 c1 65 f0 08       \tshlq   $0x8,-0x10(%rbp)\n 161:\td1 6d e4             \tshrl   -0x1c(%rbp)\n 164:\teb 05                \tjmp    16b <f64_sqrt+0x16b>\n 166:\t48 c1 65 f0 09       \tshlq   $0x9,-0x10(%rbp)\n 16b:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n 16e:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n 171:\t48 0f af c2          \timul   %rdx,%rax\n 175:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n 179:\t48 29 c2             \tsub    %rax,%rdx\n 17c:\t48 89 d0             \tmov    %rdx,%rax\n 17f:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n 183:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 187:\t48 c1 e8 02          \tshr    $0x2,%rax\n 18b:\t89 c2                \tmov    %eax,%edx\n 18d:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n 190:\t48 0f af c2          \timul   %rdx,%rax\n 194:\t48 c1 e8 20          \tshr    $0x20,%rax\n 198:\t89 45 ac             \tmov    %eax,-0x54(%rbp)\n 19b:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n 19e:\t48 c1 e0 20          \tshl    $0x20,%rax\n 1a2:\t48 83 c8 20          \tor     $0x20,%rax\n 1a6:\t48 89 c2             \tmov    %rax,%rdx\n 1a9:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n 1ac:\t48 c1 e0 03          \tshl    $0x3,%rax\n 1b0:\t48 01 d0             \tadd    %rdx,%rax\n 1b3:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n 1b7:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 1bb:\t25 ff 01 00 00       \tand    $0x1ff,%eax\n 1c0:\t48 83 f8 21          \tcmp    $0x21,%rax\n 1c4:\t77 4a                \tja     210 <f64_sqrt+0x210>\n 1c6:\t48 83 65 d8 c0       \tandq   $0xffffffffffffffc0,-0x28(%rbp)\n 1cb:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 1cf:\t48 c1 e8 06          \tshr    $0x6,%rax\n 1d3:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n 1d7:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 1db:\t48 c1 e0 34          \tshl    $0x34,%rax\n 1df:\t48 89 c2             \tmov    %rax,%rdx\n 1e2:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n 1e6:\t48 0f af c0          \timul   %rax,%rax\n 1ea:\t48 29 c2             \tsub    %rax,%rdx\n 1ed:\t48 89 d0             \tmov    %rdx,%rax\n 1f0:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n 1f4:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 1f8:\t48 85 c0             \ttest   %rax,%rax\n 1fb:\t79 07                \tjns    204 <f64_sqrt+0x204>\n 1fd:\t48 83 6d d8 01       \tsubq   $0x1,-0x28(%rbp)\n 202:\teb 0c                \tjmp    210 <f64_sqrt+0x210>\n 204:\t48 83 7d b0 00       \tcmpq   $0x0,-0x50(%rbp)\n 209:\t74 05                \tje     210 <f64_sqrt+0x210>\n 20b:\t48 83 4d d8 01       \torq    $0x1,-0x28(%rbp)\n 210:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n 214:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 218:\t48 89 c6             \tmov    %rax,%rsi\n 21b:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 220:\te8 00 00 00 00       \tcallq  225 <f64_sqrt+0x225>\n 225:\teb 2e                \tjmp    255 <f64_sqrt+0x255>\n 227:\t90                   \tnop\n 228:\teb 01                \tjmp    22b <f64_sqrt+0x22b>\n 22a:\t90                   \tnop\n 22b:\tbf 10 00 00 00       \tmov    $0x10,%edi\n 230:\te8 00 00 00 00       \tcallq  235 <f64_sqrt+0x235>\n 235:\t48 b8 00 00 00 00 00 \tmovabs $0x7ff8000000000000,%rax\n 23c:\t00 f8 7f \n 23f:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 243:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 247:\t48 89 85 78 ff ff ff \tmov    %rax,-0x88(%rbp)\n 24e:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n 255:\tc9                   \tleaveq \n 256:\tc3                   \tretq   \n", "code_s": "__int64 __fastcall f64_sqrt(__int64 a1) {\n  __int64 v2;\n  unsigned int v3;\n  __int64 v4;\n  unsigned __int64 v5;\n  unsigned int v6;\n  __int128 v8;\n  __int64 v9;\n  __int64 v10;\n  *((_QWORD *)&v8 + Number) = ((unsigned __int64)a1 >> Number) & Number;\n  *(_QWORD *)&v8 = a1 & Number;\n  if (*((_QWORD *)&v8 + Number) == Number L) {\n    if ((_QWORD)v8)\n      return softfloat_propagateNaNF64UI(a1, Number L);\n    if (a1 >= Number)\n      return a1;\n  LABEL_22:\n    softfloat_raiseFlags(Number L);\n    return Number;\n  }\n  if (a1 < Number) {\n    if (v8 == Number)\n      return a1;\n    goto LABEL_22;\n  }\n  if (!*((_QWORD *)&v8 + Number)) {\n    if (!(_QWORD)v8)\n      return a1;\n    *((_QWORD *)&v8 + Number) = softfloat_normSubnormalF64Sig(v8);\n    *(_QWORD *)&v8 = v2;\n  }\n  v4 = ((*((_QWORD *)&v8 + Number) - Number L) >> Number) + Number;\n  *((_QWORD *)&v8 + Number) = BYTE8(v8) & Number;\n  *(_QWORD *)&v8 = v8 | Number;\n  v3 = softfloat_approxRecipSqrt32_1(\n      DWORD2(v8), (unsigned int)((unsigned __int64)v8 >> Number));\n  v6 =\n      ((unsigned int)((unsigned __int64)v8 >> Number) * (unsigned __int64)v3) >>\n      Number;\n  if (*((_QWORD *)&v8 + Number)) {\n    v10 = v9 << Number;\n    v6 >>= Number;\n  } else {\n    v10 = v9 << Number;\n  }\n  v5 = (((unsigned __int64)v6 << Number) | Number) +\n       Number * (((unsigned int)((v10 - v6 * (unsigned __int64)v6) >> Number) *\n                  (unsigned __int64)v3) >>\n                 Number);\n  if (((Number *\n            (unsigned __int16)(((unsigned int)((v10 -\n                                                v6 * (unsigned __int64)v6) >>\n                                               Number) *\n                                (unsigned __int64)v3) >>\n                               Number) +\n        Number) &\n       Number) <= Number) {\n    v5 &= Number;\n    if ((__int64)((v10 << Number) - (v5 >> Number) * (v5 >> Number)) >=\n        Number) {\n      if (v10 << Number != (v5 >> Number) * (v5 >> Number))\n        v5 |= Number;\n    } else {\n      --v5;\n    }\n  }\n  return softfloat_roundPackToF64(Number L, v4, v5);\n}", "code_t": "float64_t __cdecl f64_sqrt(float64_t <span class=\"supfact\">a</span>) {\n  __int64 v2;\n  uint32_t recipSqrt32;\n  int_fast16_t expZ;\n  uint_fast64_t sigZ;\n  uint32_t sig32Z;\n  __int128 sigA;\n  uint_fast64_t sigAa;\n  uint_fast64_t sigAb;\n  *((_QWORD *)&sigA + Number) = (<span class=\"supfact\">a</span>.v >> Number) & Number;\n  *(_QWORD *)&sigA = <span class=\"supfact\">a</span>.v & Number;\n  if (*((_QWORD *)&sigA + Number) == Number L) {\n    if ((_QWORD)sigA)\n      return (float64_t)softfloat_propagateNaNF64UI(<span class=\"supfact\">a</span>.v,\n                                                    Number L);\n    if ((<span class=\"supfact\">a</span>.v & Number) == Number L)\n      return <span class=\"supfact\">a</span>;\n  invalid:\n    softfloat_raiseFlags(Number L);\n    return (float64_t)Number;\n  }\n  if ((<span class=\"supfact\">a</span>.v & Number) != Number L) {\n    if (sigA == Number)\n      return <span class=\"supfact\">a</span>;\n    goto invalid;\n  }\n  if (!*((_QWORD *)&sigA + Number)) {\n    if (!(_QWORD)sigA)\n      return <span class=\"supfact\">a</span>;\n    *((_QWORD *)&sigA + Number) = softfloat_normSubnormalF64Sig(sigA);\n    *(_QWORD *)&sigA = v2;\n  }\n  expZ = ((*((_QWORD *)&sigA + Number) - Number L) >> Number) + Number;\n  *((_QWORD *)&sigA + Number) = BYTE8(sigA) & Number;\n  *(_QWORD *)&sigA = sigA | Number;\n  recipSqrt32 = softfloat_approxRecipSqrt32_1(\n      DWORD2(sigA), (unsigned int)((unsigned __int64)sigA >> Number));\n  sig32Z = ((unsigned int)((unsigned __int64)sigA >> Number) *\n            (unsigned __int64)recipSqrt32) >>\n           Number;\n  if (*((_QWORD *)&sigA + Number)) {\n    sigAb = sigAa << Number;\n    sig32Z >>= Number;\n  } else {\n    sigAb = sigAa << Number;\n  }\n  sigZ =\n      (((unsigned __int64)sig32Z << Number) | Number) +\n      Number * (((unsigned int)((sigAb - sig32Z * (unsigned __int64)sig32Z) >>\n                                Number) *\n                 (unsigned __int64)recipSqrt32) >>\n                Number);\n  if (((Number * (unsigned __int16)(((unsigned int)((sigAb -\n                                                     sig32Z * (unsigned __int64)\n                                                                  sig32Z) >>\n                                                    Number) *\n                                     (unsigned __int64)recipSqrt32) >>\n                                    Number) +\n        Number) &\n       Number) <= Number) {\n    sigZ &= Number;\n    if ((__int64)((sigAb << Number) - (sigZ >> Number) * (sigZ >> Number)) >=\n        Number) {\n      if (sigAb << Number != (sigZ >> Number) * (sigZ >> Number))\n        sigZ |= Number;\n    } else {\n      --sigZ;\n    }\n  }\n  return (float64_t)softfloat_roundPackToF64(Number L, expZ, sigZ);\n}", "var": [{"name": "a1", "type": "struct float64_t { uint64_t v; }", "pred_name": "a", "ref_name": "a", "ref_type": "struct float64_t { uint64_t v; }"}], "body_in_train": false}, {"repo_owner": "darkspr1te", "repo_name": "uClinux-dist", "path": "darkspr1te/uClinux-dist/4f48b8dd337bdb9b572e329da46d270bff93562c94ef84e91a64c1ffdc36dabc", "path_in_repo": "darkspr1te/uClinux-dist/user/mysql/innobase/dict/dict0dict.o", "objdump": "0000000000001557 <dict_table_get_on_id_low>:\n    1557:\t55                   \tpush   %rbp\n    1558:\t48 89 e5             \tmov    %rsp,%rbp\n    155b:\t53                   \tpush   %rbx\n    155c:\t48 83 ec 38          \tsub    $0x38,%rsp\n    1560:\t48 89 f9             \tmov    %rdi,%rcx\n    1563:\t48 89 f0             \tmov    %rsi,%rax\n    1566:\t48 89 c3             \tmov    %rax,%rbx\n    1569:\t48 89 4d d0          \tmov    %rcx,-0x30(%rbp)\n    156d:\t48 89 5d d8          \tmov    %rbx,-0x28(%rbp)\n    1571:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n    1575:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    1579:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    157d:\t48 89 d7             \tmov    %rdx,%rdi\n    1580:\t48 89 c6             \tmov    %rax,%rsi\n    1583:\te8 14 f3 ff ff       \tcallq  89c <ut_fold_dulint>\n    1588:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    158c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1593 <dict_table_get_on_id_low+0x3c>\n    1593:\t48 8b 90 98 00 00 00 \tmov    0x98(%rax),%rdx\n    159a:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    159e:\t48 89 d6             \tmov    %rdx,%rsi\n    15a1:\t48 89 c7             \tmov    %rax,%rdi\n    15a4:\te8 9f fc ff ff       \tcallq  1248 <hash_calc_hash>\n    15a9:\t48 89 c2             \tmov    %rax,%rdx\n    15ac:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 15b3 <dict_table_get_on_id_low+0x5c>\n    15b3:\t48 8b 80 98 00 00 00 \tmov    0x98(%rax),%rax\n    15ba:\t48 89 d6             \tmov    %rdx,%rsi\n    15bd:\t48 89 c7             \tmov    %rax,%rdi\n    15c0:\te8 62 fc ff ff       \tcallq  1227 <hash_get_nth_cell>\n    15c5:\t48 8b 00             \tmov    (%rax),%rax\n    15c8:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    15cc:\teb 2e                \tjmp    15fc <dict_table_get_on_id_low+0xa5>\n    15ce:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    15d2:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    15d6:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n    15da:\t48 8b 39             \tmov    (%rcx),%rdi\n    15dd:\t48 8b 71 08          \tmov    0x8(%rcx),%rsi\n    15e1:\t48 89 d1             \tmov    %rdx,%rcx\n    15e4:\t48 89 c2             \tmov    %rax,%rdx\n    15e7:\te8 70 ea ff ff       \tcallq  5c <ut_dulint_cmp>\n    15ec:\t85 c0                \ttest   %eax,%eax\n    15ee:\t74 15                \tje     1605 <dict_table_get_on_id_low+0xae>\n    15f0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    15f4:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n    15f8:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    15fc:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    1601:\t75 cb                \tjne    15ce <dict_table_get_on_id_low+0x77>\n    1603:\teb 01                \tjmp    1606 <dict_table_get_on_id_low+0xaf>\n    1605:\t90                   \tnop\n    1606:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    160b:\t75 17                \tjne    1624 <dict_table_get_on_id_low+0xcd>\n    160d:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    1611:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1615:\t48 89 d7             \tmov    %rdx,%rdi\n    1618:\t48 89 c6             \tmov    %rax,%rsi\n    161b:\te8 00 00 00 00       \tcallq  1620 <dict_table_get_on_id_low+0xc9>\n    1620:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    1624:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    1629:\t74 1a                \tje     1645 <dict_table_get_on_id_low+0xee>\n    162b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    162f:\t48 8b 80 b0 00 00 00 \tmov    0xb0(%rax),%rax\n    1636:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    163a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    163e:\t48 89 90 b0 00 00 00 \tmov    %rdx,0xb0(%rax)\n    1645:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1649:\t48 83 c4 38          \tadd    $0x38,%rsp\n    164d:\t5b                   \tpop    %rbx\n    164e:\t5d                   \tpop    %rbp\n    164f:\tc3                   \tretq   ", "code_s": "unsigned __int64 *__fastcall dict_table_get_on_id_low(unsigned __int64 a1,\n                                                      unsigned __int64 a2) {\n  __int64 v2;\n  __int64 v4;\n  unsigned __int64 *i;\n  v4 = ut_fold_dulint(a1, a2);\n  v2 = hash_calc_hash(v4, *(unsigned __int64 **)(dict_sys + Number));\n  for (i = *(unsigned __int64 **)hash_get_nth_cell(\n           *(_QWORD *)(dict_sys + Number), v2);\n       i && (unsigned int)ut_dulint_cmp(*i, i[Number], a1, a2);\n       i = (unsigned __int64 *)i[Number]) {\n    ;\n  }\n  if (!i)\n    i = (unsigned __int64 *)dict_load_table_on_id(a1, a2);\n  if (i)\n    ++i[Number];\n  return i;\n}", "code_t": "dict_table_t *__cdecl dict_table_get_on_id_low(dulint <span class=\"supfact\">table_id</span>,\n                                               trx_t *trx) {\n  ulint v2;\n  ulint fold;\n  dict_table_t *table;\n  fold = ut_fold_dulint(<span class=\"supfact\">table_id</span>);\n  v2 = hash_calc_hash(fold, dict_sys->table_id_hash);\n  for (table =\n           (dict_table_t *)hash_get_nth_cell(dict_sys->table_id_hash, v2)->node;\n       table && ut_dulint_cmp(table->id, <span class=\"supfact\">table_id</span>);\n       table = (dict_table_t *)table->id_hash) {\n    ;\n  }\n  if (!table)\n    table = (dict_table_t *)dict_load_table_on_id(<span class=\"supfact\">table_id</span>.high,\n                                                  <span class=\"supfact\">table_id</span>.low);\n  if (table)\n    ++table->mem_fix;\n  return table;\n}", "var": [{"name": "a1", "type": "dict_table_t *", "pred_name": "table", "ref_name": "table_id", "ref_type": "struct dulint { ulint high; ulint low; }"}], "body_in_train": false}, {"repo_owner": "sipwise", "repo_name": "kamailio", "path": "sipwise/kamailio/c70d161be453f8e5ea1deb4bdc651b06d18e91973a2f9d654b58f61538e7f916", "path_in_repo": "sipwise/kamailio/src/modules/pv/pv.o", "objdump": "0000000000004b0d <ki_pv_evalx>:\n    4b0d:\t55                   \tpush   %rbp\n    4b0e:\t48 89 e5             \tmov    %rsp,%rbp\n    4b11:\t41 57                \tpush   %r15\n    4b13:\t41 56                \tpush   %r14\n    4b15:\t41 55                \tpush   %r13\n    4b17:\t41 54                \tpush   %r12\n    4b19:\t53                   \tpush   %rbx\n    4b1a:\t48 83 ec 68          \tsub    $0x68,%rsp\n    4b1e:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n    4b22:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n    4b26:\t48 89 55 88          \tmov    %rdx,-0x78(%rbp)\n    4b2a:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n    4b31:\t00 \n    4b32:\t48 83 7d 90 00       \tcmpq   $0x0,-0x70(%rbp)\n    4b37:\t74 1b                \tje     4b54 <ki_pv_evalx+0x47>\n    4b39:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    4b3d:\t48 8b 00             \tmov    (%rax),%rax\n    4b40:\t48 85 c0             \ttest   %rax,%rax\n    4b43:\t74 0f                \tje     4b54 <ki_pv_evalx+0x47>\n    4b45:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    4b49:\t8b 40 08             \tmov    0x8(%rax),%eax\n    4b4c:\t85 c0                \ttest   %eax,%eax\n    4b4e:\t0f 8f fe 02 00 00    \tjg     4e52 <ki_pv_evalx+0x345>\n    4b54:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    4b59:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4b60 <ki_pv_evalx+0x53>\n    4b60:\te8 00 00 00 00       \tcallq  4b65 <ki_pv_evalx+0x58>\n    4b65:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    4b68:\t0f 8c da 02 00 00    \tjl     4e48 <ki_pv_evalx+0x33b>\n    4b6e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4b75 <ki_pv_evalx+0x68>\n    4b75:\t8b 00                \tmov    (%rax),%eax\n    4b77:\t85 c0                \ttest   %eax,%eax\n    4b79:\t0f 85 c9 02 00 00    \tjne    4e48 <ki_pv_evalx+0x33b>\n    4b7f:\tc7 45 b8 ff ff ff ff \tmovl   $0xffffffff,-0x48(%rbp)\n    4b86:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4b8d <ki_pv_evalx+0x80>\n    4b8d:\t8b 00                \tmov    (%rax),%eax\n    4b8f:\t8d 50 01             \tlea    0x1(%rax),%edx\n    4b92:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4b99 <ki_pv_evalx+0x8c>\n    4b99:\t89 10                \tmov    %edx,(%rax)\n    4b9b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4ba2 <ki_pv_evalx+0x95>\n    4ba2:\t8b 00                \tmov    (%rax),%eax\n    4ba4:\t85 c0                \ttest   %eax,%eax\n    4ba6:\t0f 95 c0             \tsetne  %al\n    4ba9:\t0f b6 c0             \tmovzbl %al,%eax\n    4bac:\t48 85 c0             \ttest   %rax,%rax\n    4baf:\t0f 84 46 01 00 00    \tje     4cfb <ki_pv_evalx+0x1ee>\n    4bb5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4bbc <ki_pv_evalx+0xaf>\n    4bbc:\t8b 00                \tmov    (%rax),%eax\n    4bbe:\t85 c0                \ttest   %eax,%eax\n    4bc0:\t0f 95 c0             \tsetne  %al\n    4bc3:\t0f b6 c0             \tmovzbl %al,%eax\n    4bc6:\t48 85 c0             \ttest   %rax,%rax\n    4bc9:\t74 0a                \tje     4bd5 <ki_pv_evalx+0xc8>\n    4bcb:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n    4bce:\t89 c7                \tmov    %eax,%edi\n    4bd0:\te8 00 00 00 00       \tcallq  4bd5 <ki_pv_evalx+0xc8>\n    4bd5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4bdc <ki_pv_evalx+0xcf>\n    4bdc:\t48 8b 00             \tmov    (%rax),%rax\n    4bdf:\t48 85 c0             \ttest   %rax,%rax\n    4be2:\t0f 95 c0             \tsetne  %al\n    4be5:\t0f b6 c0             \tmovzbl %al,%eax\n    4be8:\t48 85 c0             \ttest   %rax,%rax\n    4beb:\t0f 84 84 00 00 00    \tje     4c75 <ki_pv_evalx+0x168>\n    4bf1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4bf8 <ki_pv_evalx+0xeb>\n    4bf8:\t48 8b 00             \tmov    (%rax),%rax\n    4bfb:\t48 8b 18             \tmov    (%rax),%rbx\n    4bfe:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4c05 <ki_pv_evalx+0xf8>\n    4c05:\t48 8b 00             \tmov    (%rax),%rax\n    4c08:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    4c0c:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n    4c0f:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4c12:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4c19 <ki_pv_evalx+0x10c>\n    4c19:\t48 63 d2             \tmovslq %edx,%rdx\n    4c1c:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4c20:\t48 01 d0             \tadd    %rdx,%rax\n    4c23:\t4c 8b 20             \tmov    (%rax),%r12\n    4c26:\te8 00 00 00 00       \tcallq  4c2b <ki_pv_evalx+0x11e>\n    4c2b:\t89 c1                \tmov    %eax,%ecx\n    4c2d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4c34 <ki_pv_evalx+0x127>\n    4c34:\t8b 10                \tmov    (%rax),%edx\n    4c36:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4c3d <ki_pv_evalx+0x130>\n    4c3d:\t48 8b 00             \tmov    (%rax),%rax\n    4c40:\t48 83 ec 08          \tsub    $0x8,%rsp\n    4c44:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4c4b <ki_pv_evalx+0x13e>\n    4c4b:\t56                   \tpush   %rsi\n    4c4c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4c53 <ki_pv_evalx+0x146>\n    4c53:\t56                   \tpush   %rsi\n    4c54:\t53                   \tpush   %rbx\n    4c55:\t45 89 e9             \tmov    %r13d,%r9d\n    4c58:\t4d 89 e0             \tmov    %r12,%r8\n    4c5b:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4c62 <ki_pv_evalx+0x155>\n    4c62:\t48 89 c7             \tmov    %rax,%rdi\n    4c65:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4c6a:\te8 00 00 00 00       \tcallq  4c6f <ki_pv_evalx+0x162>\n    4c6f:\t48 83 c4 20          \tadd    $0x20,%rsp\n    4c73:\teb 62                \tjmp    4cd7 <ki_pv_evalx+0x1ca>\n    4c75:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n    4c78:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4c7b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4c82 <ki_pv_evalx+0x175>\n    4c82:\t48 63 d2             \tmovslq %edx,%rdx\n    4c85:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4c89:\t48 01 d0             \tadd    %rdx,%rax\n    4c8c:\t48 8b 18             \tmov    (%rax),%rbx\n    4c8f:\te8 00 00 00 00       \tcallq  4c94 <ki_pv_evalx+0x187>\n    4c94:\t89 c1                \tmov    %eax,%ecx\n    4c96:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4c9d <ki_pv_evalx+0x190>\n    4c9d:\t8b 10                \tmov    (%rax),%edx\n    4c9f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4ca6 <ki_pv_evalx+0x199>\n    4ca6:\t48 8b 00             \tmov    (%rax),%rax\n    4ca9:\t48 83 ec 08          \tsub    $0x8,%rsp\n    4cad:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4cb4 <ki_pv_evalx+0x1a7>\n    4cb4:\t56                   \tpush   %rsi\n    4cb5:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 4cbc <ki_pv_evalx+0x1af>\n    4cbc:\t49 89 d8             \tmov    %rbx,%r8\n    4cbf:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4cc6 <ki_pv_evalx+0x1b9>\n    4cc6:\t48 89 c7             \tmov    %rax,%rdi\n    4cc9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4cce:\te8 00 00 00 00       \tcallq  4cd3 <ki_pv_evalx+0x1c6>\n    4cd3:\t48 83 c4 10          \tadd    $0x10,%rsp\n    4cd7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4cde <ki_pv_evalx+0x1d1>\n    4cde:\t8b 00                \tmov    (%rax),%eax\n    4ce0:\t85 c0                \ttest   %eax,%eax\n    4ce2:\t0f 95 c0             \tsetne  %al\n    4ce5:\t0f b6 c0             \tmovzbl %al,%eax\n    4ce8:\t48 85 c0             \ttest   %rax,%rax\n    4ceb:\t0f 84 42 01 00 00    \tje     4e33 <ki_pv_evalx+0x326>\n    4cf1:\te8 00 00 00 00       \tcallq  4cf6 <ki_pv_evalx+0x1e9>\n    4cf6:\te9 38 01 00 00       \tjmpq   4e33 <ki_pv_evalx+0x326>\n    4cfb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4d02 <ki_pv_evalx+0x1f5>\n    4d02:\t48 8b 00             \tmov    (%rax),%rax\n    4d05:\t48 85 c0             \ttest   %rax,%rax\n    4d08:\t0f 95 c0             \tsetne  %al\n    4d0b:\t0f b6 c0             \tmovzbl %al,%eax\n    4d0e:\t48 85 c0             \ttest   %rax,%rax\n    4d11:\t0f 84 a4 00 00 00    \tje     4dbb <ki_pv_evalx+0x2ae>\n    4d17:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4d1e <ki_pv_evalx+0x211>\n    4d1e:\t4c 8b 28             \tmov    (%rax),%r13\n    4d21:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4d28 <ki_pv_evalx+0x21b>\n    4d28:\t48 8b 00             \tmov    (%rax),%rax\n    4d2b:\t4c 8b 38             \tmov    (%rax),%r15\n    4d2e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4d35 <ki_pv_evalx+0x228>\n    4d35:\t48 8b 00             \tmov    (%rax),%rax\n    4d38:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    4d3c:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n    4d3f:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4d42:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4d49 <ki_pv_evalx+0x23c>\n    4d49:\t48 63 d2             \tmovslq %edx,%rdx\n    4d4c:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4d50:\t48 01 d0             \tadd    %rdx,%rax\n    4d53:\t48 8b 18             \tmov    (%rax),%rbx\n    4d56:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n    4d59:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4d5c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4d63 <ki_pv_evalx+0x256>\n    4d63:\t48 63 d2             \tmovslq %edx,%rdx\n    4d66:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4d6a:\t48 01 d0             \tadd    %rdx,%rax\n    4d6d:\t48 83 c0 08          \tadd    $0x8,%rax\n    4d71:\t44 8b 30             \tmov    (%rax),%r14d\n    4d74:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    4d79:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4d80 <ki_pv_evalx+0x273>\n    4d80:\te8 00 00 00 00       \tcallq  4d85 <ki_pv_evalx+0x278>\n    4d85:\t44 09 f0             \tor     %r14d,%eax\n    4d88:\t48 83 ec 08          \tsub    $0x8,%rsp\n    4d8c:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 4d93 <ki_pv_evalx+0x286>\n    4d93:\t52                   \tpush   %rdx\n    4d94:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 4d9b <ki_pv_evalx+0x28e>\n    4d9b:\t4d 89 f8             \tmov    %r15,%r8\n    4d9e:\t44 89 e1             \tmov    %r12d,%ecx\n    4da1:\t48 89 da             \tmov    %rbx,%rdx\n    4da4:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4dab <ki_pv_evalx+0x29e>\n    4dab:\t89 c7                \tmov    %eax,%edi\n    4dad:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4db2:\t41 ff d5             \tcallq  *%r13\n    4db5:\t48 83 c4 10          \tadd    $0x10,%rsp\n    4db9:\teb 78                \tjmp    4e33 <ki_pv_evalx+0x326>\n    4dbb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4dc2 <ki_pv_evalx+0x2b5>\n    4dc2:\t4c 8b 20             \tmov    (%rax),%r12\n    4dc5:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n    4dc8:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4dcb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4dd2 <ki_pv_evalx+0x2c5>\n    4dd2:\t48 63 d2             \tmovslq %edx,%rdx\n    4dd5:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4dd9:\t48 01 d0             \tadd    %rdx,%rax\n    4ddc:\t48 8b 18             \tmov    (%rax),%rbx\n    4ddf:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n    4de2:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4de5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4dec <ki_pv_evalx+0x2df>\n    4dec:\t48 63 d2             \tmovslq %edx,%rdx\n    4def:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4df3:\t48 01 d0             \tadd    %rdx,%rax\n    4df6:\t48 83 c0 08          \tadd    $0x8,%rax\n    4dfa:\t44 8b 28             \tmov    (%rax),%r13d\n    4dfd:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    4e02:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4e09 <ki_pv_evalx+0x2fc>\n    4e09:\te8 00 00 00 00       \tcallq  4e0e <ki_pv_evalx+0x301>\n    4e0e:\t44 09 e8             \tor     %r13d,%eax\n    4e11:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 4e18 <ki_pv_evalx+0x30b>\n    4e18:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 4e1f <ki_pv_evalx+0x312>\n    4e1f:\t48 89 da             \tmov    %rbx,%rdx\n    4e22:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4e29 <ki_pv_evalx+0x31c>\n    4e29:\t89 c7                \tmov    %eax,%edi\n    4e2b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4e30:\t41 ff d4             \tcallq  *%r12\n    4e33:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4e3a <ki_pv_evalx+0x32d>\n    4e3a:\t8b 00                \tmov    (%rax),%eax\n    4e3c:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    4e3f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4e46 <ki_pv_evalx+0x339>\n    4e46:\t89 10                \tmov    %edx,(%rax)\n    4e48:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    4e4d:\te9 e7 09 00 00       \tjmpq   5839 <ki_pv_evalx+0xd2c>\n    4e52:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    4e56:\t48 89 c7             \tmov    %rax,%rdi\n    4e59:\te8 00 00 00 00       \tcallq  4e5e <ki_pv_evalx+0x351>\n    4e5e:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    4e62:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n    4e67:\t0f 85 61 03 00 00    \tjne    51ce <ki_pv_evalx+0x6c1>\n    4e6d:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    4e72:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4e79 <ki_pv_evalx+0x36c>\n    4e79:\te8 00 00 00 00       \tcallq  4e7e <ki_pv_evalx+0x371>\n    4e7e:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    4e81:\t0f 8c 3d 03 00 00    \tjl     51c4 <ki_pv_evalx+0x6b7>\n    4e87:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4e8e <ki_pv_evalx+0x381>\n    4e8e:\t8b 00                \tmov    (%rax),%eax\n    4e90:\t85 c0                \ttest   %eax,%eax\n    4e92:\t0f 85 2c 03 00 00    \tjne    51c4 <ki_pv_evalx+0x6b7>\n    4e98:\tc7 45 bc ff ff ff ff \tmovl   $0xffffffff,-0x44(%rbp)\n    4e9f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4ea6 <ki_pv_evalx+0x399>\n    4ea6:\t8b 00                \tmov    (%rax),%eax\n    4ea8:\t8d 50 01             \tlea    0x1(%rax),%edx\n    4eab:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4eb2 <ki_pv_evalx+0x3a5>\n    4eb2:\t89 10                \tmov    %edx,(%rax)\n    4eb4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4ebb <ki_pv_evalx+0x3ae>\n    4ebb:\t8b 00                \tmov    (%rax),%eax\n    4ebd:\t85 c0                \ttest   %eax,%eax\n    4ebf:\t0f 95 c0             \tsetne  %al\n    4ec2:\t0f b6 c0             \tmovzbl %al,%eax\n    4ec5:\t48 85 c0             \ttest   %rax,%rax\n    4ec8:\t0f 84 6a 01 00 00    \tje     5038 <ki_pv_evalx+0x52b>\n    4ece:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4ed5 <ki_pv_evalx+0x3c8>\n    4ed5:\t8b 00                \tmov    (%rax),%eax\n    4ed7:\t85 c0                \ttest   %eax,%eax\n    4ed9:\t0f 95 c0             \tsetne  %al\n    4edc:\t0f b6 c0             \tmovzbl %al,%eax\n    4edf:\t48 85 c0             \ttest   %rax,%rax\n    4ee2:\t74 0a                \tje     4eee <ki_pv_evalx+0x3e1>\n    4ee4:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    4ee7:\t89 c7                \tmov    %eax,%edi\n    4ee9:\te8 00 00 00 00       \tcallq  4eee <ki_pv_evalx+0x3e1>\n    4eee:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4ef5 <ki_pv_evalx+0x3e8>\n    4ef5:\t48 8b 00             \tmov    (%rax),%rax\n    4ef8:\t48 85 c0             \ttest   %rax,%rax\n    4efb:\t0f 95 c0             \tsetne  %al\n    4efe:\t0f b6 c0             \tmovzbl %al,%eax\n    4f01:\t48 85 c0             \ttest   %rax,%rax\n    4f04:\t0f 84 97 00 00 00    \tje     4fa1 <ki_pv_evalx+0x494>\n    4f0a:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    4f0e:\t4c 8b 28             \tmov    (%rax),%r13\n    4f11:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    4f15:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    4f19:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4f20 <ki_pv_evalx+0x413>\n    4f20:\t48 8b 00             \tmov    (%rax),%rax\n    4f23:\t48 8b 18             \tmov    (%rax),%rbx\n    4f26:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4f2d <ki_pv_evalx+0x420>\n    4f2d:\t48 8b 00             \tmov    (%rax),%rax\n    4f30:\t44 8b 78 08          \tmov    0x8(%rax),%r15d\n    4f34:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    4f37:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4f3a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4f41 <ki_pv_evalx+0x434>\n    4f41:\t48 63 d2             \tmovslq %edx,%rdx\n    4f44:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4f48:\t48 01 d0             \tadd    %rdx,%rax\n    4f4b:\t4c 8b 30             \tmov    (%rax),%r14\n    4f4e:\te8 00 00 00 00       \tcallq  4f53 <ki_pv_evalx+0x446>\n    4f53:\t89 c1                \tmov    %eax,%ecx\n    4f55:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4f5c <ki_pv_evalx+0x44f>\n    4f5c:\t8b 10                \tmov    (%rax),%edx\n    4f5e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4f65 <ki_pv_evalx+0x458>\n    4f65:\t48 8b 00             \tmov    (%rax),%rax\n    4f68:\t48 83 ec 08          \tsub    $0x8,%rsp\n    4f6c:\t41 55                \tpush   %r13\n    4f6e:\t41 54                \tpush   %r12\n    4f70:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4f77 <ki_pv_evalx+0x46a>\n    4f77:\t56                   \tpush   %rsi\n    4f78:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4f7f <ki_pv_evalx+0x472>\n    4f7f:\t56                   \tpush   %rsi\n    4f80:\t53                   \tpush   %rbx\n    4f81:\t45 89 f9             \tmov    %r15d,%r9d\n    4f84:\t4d 89 f0             \tmov    %r14,%r8\n    4f87:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4f8e <ki_pv_evalx+0x481>\n    4f8e:\t48 89 c7             \tmov    %rax,%rdi\n    4f91:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4f96:\te8 00 00 00 00       \tcallq  4f9b <ki_pv_evalx+0x48e>\n    4f9b:\t48 83 c4 30          \tadd    $0x30,%rsp\n    4f9f:\teb 73                \tjmp    5014 <ki_pv_evalx+0x507>\n    4fa1:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    4fa5:\t4c 8b 20             \tmov    (%rax),%r12\n    4fa8:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    4fac:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    4faf:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    4fb2:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4fb5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4fbc <ki_pv_evalx+0x4af>\n    4fbc:\t48 63 d2             \tmovslq %edx,%rdx\n    4fbf:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4fc3:\t48 01 d0             \tadd    %rdx,%rax\n    4fc6:\t4c 8b 28             \tmov    (%rax),%r13\n    4fc9:\te8 00 00 00 00       \tcallq  4fce <ki_pv_evalx+0x4c1>\n    4fce:\t89 c1                \tmov    %eax,%ecx\n    4fd0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4fd7 <ki_pv_evalx+0x4ca>\n    4fd7:\t8b 10                \tmov    (%rax),%edx\n    4fd9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4fe0 <ki_pv_evalx+0x4d3>\n    4fe0:\t48 8b 00             \tmov    (%rax),%rax\n    4fe3:\t48 83 ec 08          \tsub    $0x8,%rsp\n    4fe7:\t41 54                \tpush   %r12\n    4fe9:\t53                   \tpush   %rbx\n    4fea:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4ff1 <ki_pv_evalx+0x4e4>\n    4ff1:\t56                   \tpush   %rsi\n    4ff2:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 4ff9 <ki_pv_evalx+0x4ec>\n    4ff9:\t4d 89 e8             \tmov    %r13,%r8\n    4ffc:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5003 <ki_pv_evalx+0x4f6>\n    5003:\t48 89 c7             \tmov    %rax,%rdi\n    5006:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    500b:\te8 00 00 00 00       \tcallq  5010 <ki_pv_evalx+0x503>\n    5010:\t48 83 c4 20          \tadd    $0x20,%rsp\n    5014:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 501b <ki_pv_evalx+0x50e>\n    501b:\t8b 00                \tmov    (%rax),%eax\n    501d:\t85 c0                \ttest   %eax,%eax\n    501f:\t0f 95 c0             \tsetne  %al\n    5022:\t0f b6 c0             \tmovzbl %al,%eax\n    5025:\t48 85 c0             \ttest   %rax,%rax\n    5028:\t0f 84 81 01 00 00    \tje     51af <ki_pv_evalx+0x6a2>\n    502e:\te8 00 00 00 00       \tcallq  5033 <ki_pv_evalx+0x526>\n    5033:\te9 77 01 00 00       \tjmpq   51af <ki_pv_evalx+0x6a2>\n    5038:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 503f <ki_pv_evalx+0x532>\n    503f:\t48 8b 00             \tmov    (%rax),%rax\n    5042:\t48 85 c0             \ttest   %rax,%rax\n    5045:\t0f 95 c0             \tsetne  %al\n    5048:\t0f b6 c0             \tmovzbl %al,%eax\n    504b:\t48 85 c0             \ttest   %rax,%rax\n    504e:\t0f 84 c7 00 00 00    \tje     511b <ki_pv_evalx+0x60e>\n    5054:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 505b <ki_pv_evalx+0x54e>\n    505b:\t4c 8b 28             \tmov    (%rax),%r13\n    505e:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    5062:\t4c 8b 38             \tmov    (%rax),%r15\n    5065:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    5069:\t44 8b 70 08          \tmov    0x8(%rax),%r14d\n    506d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5074 <ki_pv_evalx+0x567>\n    5074:\t48 8b 00             \tmov    (%rax),%rax\n    5077:\t48 8b 00             \tmov    (%rax),%rax\n    507a:\t48 89 45 80          \tmov    %rax,-0x80(%rbp)\n    507e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5085 <ki_pv_evalx+0x578>\n    5085:\t48 8b 00             \tmov    (%rax),%rax\n    5088:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    508c:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    508f:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5092:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5099 <ki_pv_evalx+0x58c>\n    5099:\t48 63 d2             \tmovslq %edx,%rdx\n    509c:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    50a0:\t48 01 d0             \tadd    %rdx,%rax\n    50a3:\t48 8b 18             \tmov    (%rax),%rbx\n    50a6:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    50a9:\t8d 50 05             \tlea    0x5(%rax),%edx\n    50ac:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 50b3 <ki_pv_evalx+0x5a6>\n    50b3:\t48 63 d2             \tmovslq %edx,%rdx\n    50b6:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    50ba:\t48 01 d0             \tadd    %rdx,%rax\n    50bd:\t48 83 c0 08          \tadd    $0x8,%rax\n    50c1:\t8b 08                \tmov    (%rax),%ecx\n    50c3:\t89 8d 7c ff ff ff    \tmov    %ecx,-0x84(%rbp)\n    50c9:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    50ce:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 50d5 <ki_pv_evalx+0x5c8>\n    50d5:\te8 00 00 00 00       \tcallq  50da <ki_pv_evalx+0x5cd>\n    50da:\t0b 85 7c ff ff ff    \tor     -0x84(%rbp),%eax\n    50e0:\t48 83 ec 08          \tsub    $0x8,%rsp\n    50e4:\t41 57                \tpush   %r15\n    50e6:\t41 56                \tpush   %r14\n    50e8:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 50ef <ki_pv_evalx+0x5e2>\n    50ef:\t52                   \tpush   %rdx\n    50f0:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 50f7 <ki_pv_evalx+0x5ea>\n    50f7:\t4c 8b 45 80          \tmov    -0x80(%rbp),%r8\n    50fb:\t44 89 e1             \tmov    %r12d,%ecx\n    50fe:\t48 89 da             \tmov    %rbx,%rdx\n    5101:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5108 <ki_pv_evalx+0x5fb>\n    5108:\t89 c7                \tmov    %eax,%edi\n    510a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    510f:\t41 ff d5             \tcallq  *%r13\n    5112:\t48 83 c4 20          \tadd    $0x20,%rsp\n    5116:\te9 94 00 00 00       \tjmpq   51af <ki_pv_evalx+0x6a2>\n    511b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5122 <ki_pv_evalx+0x615>\n    5122:\t4c 8b 20             \tmov    (%rax),%r12\n    5125:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    5129:\t4c 8b 28             \tmov    (%rax),%r13\n    512c:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    5130:\t44 8b 78 08          \tmov    0x8(%rax),%r15d\n    5134:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    5137:\t8d 50 05             \tlea    0x5(%rax),%edx\n    513a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5141 <ki_pv_evalx+0x634>\n    5141:\t48 63 d2             \tmovslq %edx,%rdx\n    5144:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5148:\t48 01 d0             \tadd    %rdx,%rax\n    514b:\t48 8b 18             \tmov    (%rax),%rbx\n    514e:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    5151:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5154:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 515b <ki_pv_evalx+0x64e>\n    515b:\t48 63 d2             \tmovslq %edx,%rdx\n    515e:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5162:\t48 01 d0             \tadd    %rdx,%rax\n    5165:\t48 83 c0 08          \tadd    $0x8,%rax\n    5169:\t44 8b 30             \tmov    (%rax),%r14d\n    516c:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    5171:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5178 <ki_pv_evalx+0x66b>\n    5178:\te8 00 00 00 00       \tcallq  517d <ki_pv_evalx+0x670>\n    517d:\t44 09 f0             \tor     %r14d,%eax\n    5180:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5184:\t41 55                \tpush   %r13\n    5186:\t45 89 f9             \tmov    %r15d,%r9d\n    5189:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 5190 <ki_pv_evalx+0x683>\n    5190:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 5197 <ki_pv_evalx+0x68a>\n    5197:\t48 89 da             \tmov    %rbx,%rdx\n    519a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 51a1 <ki_pv_evalx+0x694>\n    51a1:\t89 c7                \tmov    %eax,%edi\n    51a3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    51a8:\t41 ff d4             \tcallq  *%r12\n    51ab:\t48 83 c4 10          \tadd    $0x10,%rsp\n    51af:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 51b6 <ki_pv_evalx+0x6a9>\n    51b6:\t8b 00                \tmov    (%rax),%eax\n    51b8:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    51bb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 51c2 <ki_pv_evalx+0x6b5>\n    51c2:\t89 10                \tmov    %edx,(%rax)\n    51c4:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    51c9:\te9 6b 06 00 00       \tjmpq   5839 <ki_pv_evalx+0xd2c>\n    51ce:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n    51d2:\tba 18 00 00 00       \tmov    $0x18,%edx\n    51d7:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    51dc:\t48 89 c7             \tmov    %rax,%rdi\n    51df:\te8 00 00 00 00       \tcallq  51e4 <ki_pv_evalx+0x6d7>\n    51e4:\t48 8b 55 88          \tmov    -0x78(%rbp),%rdx\n    51e8:\t48 8d 4d a0          \tlea    -0x60(%rbp),%rcx\n    51ec:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    51f0:\t48 89 ce             \tmov    %rcx,%rsi\n    51f3:\t48 89 c7             \tmov    %rax,%rdi\n    51f6:\te8 00 00 00 00       \tcallq  51fb <ki_pv_evalx+0x6ee>\n    51fb:\t85 c0                \ttest   %eax,%eax\n    51fd:\t0f 89 fe 02 00 00    \tjns    5501 <ki_pv_evalx+0x9f4>\n    5203:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    5208:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 520f <ki_pv_evalx+0x702>\n    520f:\te8 00 00 00 00       \tcallq  5214 <ki_pv_evalx+0x707>\n    5214:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    5217:\t0f 8c da 02 00 00    \tjl     54f7 <ki_pv_evalx+0x9ea>\n    521d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5224 <ki_pv_evalx+0x717>\n    5224:\t8b 00                \tmov    (%rax),%eax\n    5226:\t85 c0                \ttest   %eax,%eax\n    5228:\t0f 85 c9 02 00 00    \tjne    54f7 <ki_pv_evalx+0x9ea>\n    522e:\tc7 45 c0 ff ff ff ff \tmovl   $0xffffffff,-0x40(%rbp)\n    5235:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 523c <ki_pv_evalx+0x72f>\n    523c:\t8b 00                \tmov    (%rax),%eax\n    523e:\t8d 50 01             \tlea    0x1(%rax),%edx\n    5241:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5248 <ki_pv_evalx+0x73b>\n    5248:\t89 10                \tmov    %edx,(%rax)\n    524a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5251 <ki_pv_evalx+0x744>\n    5251:\t8b 00                \tmov    (%rax),%eax\n    5253:\t85 c0                \ttest   %eax,%eax\n    5255:\t0f 95 c0             \tsetne  %al\n    5258:\t0f b6 c0             \tmovzbl %al,%eax\n    525b:\t48 85 c0             \ttest   %rax,%rax\n    525e:\t0f 84 46 01 00 00    \tje     53aa <ki_pv_evalx+0x89d>\n    5264:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 526b <ki_pv_evalx+0x75e>\n    526b:\t8b 00                \tmov    (%rax),%eax\n    526d:\t85 c0                \ttest   %eax,%eax\n    526f:\t0f 95 c0             \tsetne  %al\n    5272:\t0f b6 c0             \tmovzbl %al,%eax\n    5275:\t48 85 c0             \ttest   %rax,%rax\n    5278:\t74 0a                \tje     5284 <ki_pv_evalx+0x777>\n    527a:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    527d:\t89 c7                \tmov    %eax,%edi\n    527f:\te8 00 00 00 00       \tcallq  5284 <ki_pv_evalx+0x777>\n    5284:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 528b <ki_pv_evalx+0x77e>\n    528b:\t48 8b 00             \tmov    (%rax),%rax\n    528e:\t48 85 c0             \ttest   %rax,%rax\n    5291:\t0f 95 c0             \tsetne  %al\n    5294:\t0f b6 c0             \tmovzbl %al,%eax\n    5297:\t48 85 c0             \ttest   %rax,%rax\n    529a:\t0f 84 84 00 00 00    \tje     5324 <ki_pv_evalx+0x817>\n    52a0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 52a7 <ki_pv_evalx+0x79a>\n    52a7:\t48 8b 00             \tmov    (%rax),%rax\n    52aa:\t48 8b 18             \tmov    (%rax),%rbx\n    52ad:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 52b4 <ki_pv_evalx+0x7a7>\n    52b4:\t48 8b 00             \tmov    (%rax),%rax\n    52b7:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    52bb:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    52be:\t8d 50 05             \tlea    0x5(%rax),%edx\n    52c1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 52c8 <ki_pv_evalx+0x7bb>\n    52c8:\t48 63 d2             \tmovslq %edx,%rdx\n    52cb:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    52cf:\t48 01 d0             \tadd    %rdx,%rax\n    52d2:\t4c 8b 20             \tmov    (%rax),%r12\n    52d5:\te8 00 00 00 00       \tcallq  52da <ki_pv_evalx+0x7cd>\n    52da:\t89 c1                \tmov    %eax,%ecx\n    52dc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 52e3 <ki_pv_evalx+0x7d6>\n    52e3:\t8b 10                \tmov    (%rax),%edx\n    52e5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 52ec <ki_pv_evalx+0x7df>\n    52ec:\t48 8b 00             \tmov    (%rax),%rax\n    52ef:\t48 83 ec 08          \tsub    $0x8,%rsp\n    52f3:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 52fa <ki_pv_evalx+0x7ed>\n    52fa:\t56                   \tpush   %rsi\n    52fb:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5302 <ki_pv_evalx+0x7f5>\n    5302:\t56                   \tpush   %rsi\n    5303:\t53                   \tpush   %rbx\n    5304:\t45 89 e9             \tmov    %r13d,%r9d\n    5307:\t4d 89 e0             \tmov    %r12,%r8\n    530a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5311 <ki_pv_evalx+0x804>\n    5311:\t48 89 c7             \tmov    %rax,%rdi\n    5314:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5319:\te8 00 00 00 00       \tcallq  531e <ki_pv_evalx+0x811>\n    531e:\t48 83 c4 20          \tadd    $0x20,%rsp\n    5322:\teb 62                \tjmp    5386 <ki_pv_evalx+0x879>\n    5324:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    5327:\t8d 50 05             \tlea    0x5(%rax),%edx\n    532a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5331 <ki_pv_evalx+0x824>\n    5331:\t48 63 d2             \tmovslq %edx,%rdx\n    5334:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5338:\t48 01 d0             \tadd    %rdx,%rax\n    533b:\t48 8b 18             \tmov    (%rax),%rbx\n    533e:\te8 00 00 00 00       \tcallq  5343 <ki_pv_evalx+0x836>\n    5343:\t89 c1                \tmov    %eax,%ecx\n    5345:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 534c <ki_pv_evalx+0x83f>\n    534c:\t8b 10                \tmov    (%rax),%edx\n    534e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5355 <ki_pv_evalx+0x848>\n    5355:\t48 8b 00             \tmov    (%rax),%rax\n    5358:\t48 83 ec 08          \tsub    $0x8,%rsp\n    535c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5363 <ki_pv_evalx+0x856>\n    5363:\t56                   \tpush   %rsi\n    5364:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 536b <ki_pv_evalx+0x85e>\n    536b:\t49 89 d8             \tmov    %rbx,%r8\n    536e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5375 <ki_pv_evalx+0x868>\n    5375:\t48 89 c7             \tmov    %rax,%rdi\n    5378:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    537d:\te8 00 00 00 00       \tcallq  5382 <ki_pv_evalx+0x875>\n    5382:\t48 83 c4 10          \tadd    $0x10,%rsp\n    5386:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 538d <ki_pv_evalx+0x880>\n    538d:\t8b 00                \tmov    (%rax),%eax\n    538f:\t85 c0                \ttest   %eax,%eax\n    5391:\t0f 95 c0             \tsetne  %al\n    5394:\t0f b6 c0             \tmovzbl %al,%eax\n    5397:\t48 85 c0             \ttest   %rax,%rax\n    539a:\t0f 84 42 01 00 00    \tje     54e2 <ki_pv_evalx+0x9d5>\n    53a0:\te8 00 00 00 00       \tcallq  53a5 <ki_pv_evalx+0x898>\n    53a5:\te9 38 01 00 00       \tjmpq   54e2 <ki_pv_evalx+0x9d5>\n    53aa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 53b1 <ki_pv_evalx+0x8a4>\n    53b1:\t48 8b 00             \tmov    (%rax),%rax\n    53b4:\t48 85 c0             \ttest   %rax,%rax\n    53b7:\t0f 95 c0             \tsetne  %al\n    53ba:\t0f b6 c0             \tmovzbl %al,%eax\n    53bd:\t48 85 c0             \ttest   %rax,%rax\n    53c0:\t0f 84 a4 00 00 00    \tje     546a <ki_pv_evalx+0x95d>\n    53c6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 53cd <ki_pv_evalx+0x8c0>\n    53cd:\t4c 8b 28             \tmov    (%rax),%r13\n    53d0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 53d7 <ki_pv_evalx+0x8ca>\n    53d7:\t48 8b 00             \tmov    (%rax),%rax\n    53da:\t4c 8b 38             \tmov    (%rax),%r15\n    53dd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 53e4 <ki_pv_evalx+0x8d7>\n    53e4:\t48 8b 00             \tmov    (%rax),%rax\n    53e7:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    53eb:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    53ee:\t8d 50 05             \tlea    0x5(%rax),%edx\n    53f1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 53f8 <ki_pv_evalx+0x8eb>\n    53f8:\t48 63 d2             \tmovslq %edx,%rdx\n    53fb:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    53ff:\t48 01 d0             \tadd    %rdx,%rax\n    5402:\t48 8b 18             \tmov    (%rax),%rbx\n    5405:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    5408:\t8d 50 05             \tlea    0x5(%rax),%edx\n    540b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5412 <ki_pv_evalx+0x905>\n    5412:\t48 63 d2             \tmovslq %edx,%rdx\n    5415:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5419:\t48 01 d0             \tadd    %rdx,%rax\n    541c:\t48 83 c0 08          \tadd    $0x8,%rax\n    5420:\t44 8b 30             \tmov    (%rax),%r14d\n    5423:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    5428:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 542f <ki_pv_evalx+0x922>\n    542f:\te8 00 00 00 00       \tcallq  5434 <ki_pv_evalx+0x927>\n    5434:\t44 09 f0             \tor     %r14d,%eax\n    5437:\t48 83 ec 08          \tsub    $0x8,%rsp\n    543b:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 5442 <ki_pv_evalx+0x935>\n    5442:\t52                   \tpush   %rdx\n    5443:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 544a <ki_pv_evalx+0x93d>\n    544a:\t4d 89 f8             \tmov    %r15,%r8\n    544d:\t44 89 e1             \tmov    %r12d,%ecx\n    5450:\t48 89 da             \tmov    %rbx,%rdx\n    5453:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 545a <ki_pv_evalx+0x94d>\n    545a:\t89 c7                \tmov    %eax,%edi\n    545c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5461:\t41 ff d5             \tcallq  *%r13\n    5464:\t48 83 c4 10          \tadd    $0x10,%rsp\n    5468:\teb 78                \tjmp    54e2 <ki_pv_evalx+0x9d5>\n    546a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5471 <ki_pv_evalx+0x964>\n    5471:\t4c 8b 20             \tmov    (%rax),%r12\n    5474:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    5477:\t8d 50 05             \tlea    0x5(%rax),%edx\n    547a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5481 <ki_pv_evalx+0x974>\n    5481:\t48 63 d2             \tmovslq %edx,%rdx\n    5484:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5488:\t48 01 d0             \tadd    %rdx,%rax\n    548b:\t48 8b 18             \tmov    (%rax),%rbx\n    548e:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    5491:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5494:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 549b <ki_pv_evalx+0x98e>\n    549b:\t48 63 d2             \tmovslq %edx,%rdx\n    549e:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    54a2:\t48 01 d0             \tadd    %rdx,%rax\n    54a5:\t48 83 c0 08          \tadd    $0x8,%rax\n    54a9:\t44 8b 28             \tmov    (%rax),%r13d\n    54ac:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    54b1:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 54b8 <ki_pv_evalx+0x9ab>\n    54b8:\te8 00 00 00 00       \tcallq  54bd <ki_pv_evalx+0x9b0>\n    54bd:\t44 09 e8             \tor     %r13d,%eax\n    54c0:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 54c7 <ki_pv_evalx+0x9ba>\n    54c7:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 54ce <ki_pv_evalx+0x9c1>\n    54ce:\t48 89 da             \tmov    %rbx,%rdx\n    54d1:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 54d8 <ki_pv_evalx+0x9cb>\n    54d8:\t89 c7                \tmov    %eax,%edi\n    54da:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    54df:\t41 ff d4             \tcallq  *%r12\n    54e2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 54e9 <ki_pv_evalx+0x9dc>\n    54e9:\t8b 00                \tmov    (%rax),%eax\n    54eb:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    54ee:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 54f5 <ki_pv_evalx+0x9e8>\n    54f5:\t89 10                \tmov    %edx,(%rax)\n    54f7:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    54fc:\te9 38 03 00 00       \tjmpq   5839 <ki_pv_evalx+0xd2c>\n    5501:\tc7 45 b4 04 00 00 00 \tmovl   $0x4,-0x4c(%rbp)\n    5508:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    550c:\t4c 8b 40 10          \tmov    0x10(%rax),%r8\n    5510:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    5514:\t48 8d 70 18          \tlea    0x18(%rax),%rsi\n    5518:\t48 8d 55 a0          \tlea    -0x60(%rbp),%rdx\n    551c:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    5520:\t48 89 d1             \tmov    %rdx,%rcx\n    5523:\tba fe 00 00 00       \tmov    $0xfe,%edx\n    5528:\t48 89 c7             \tmov    %rax,%rdi\n    552b:\t41 ff d0             \tcallq  *%r8\n    552e:\t85 c0                \ttest   %eax,%eax\n    5530:\t0f 89 f6 02 00 00    \tjns    582c <ki_pv_evalx+0xd1f>\n    5536:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    553b:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5542 <ki_pv_evalx+0xa35>\n    5542:\te8 00 00 00 00       \tcallq  5547 <ki_pv_evalx+0xa3a>\n    5547:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    554a:\t0f 8c e3 02 00 00    \tjl     5833 <ki_pv_evalx+0xd26>\n    5550:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5557 <ki_pv_evalx+0xa4a>\n    5557:\t8b 00                \tmov    (%rax),%eax\n    5559:\t85 c0                \ttest   %eax,%eax\n    555b:\t0f 85 d2 02 00 00    \tjne    5833 <ki_pv_evalx+0xd26>\n    5561:\tc7 45 c4 ff ff ff ff \tmovl   $0xffffffff,-0x3c(%rbp)\n    5568:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 556f <ki_pv_evalx+0xa62>\n    556f:\t8b 00                \tmov    (%rax),%eax\n    5571:\t8d 50 01             \tlea    0x1(%rax),%edx\n    5574:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 557b <ki_pv_evalx+0xa6e>\n    557b:\t89 10                \tmov    %edx,(%rax)\n    557d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5584 <ki_pv_evalx+0xa77>\n    5584:\t8b 00                \tmov    (%rax),%eax\n    5586:\t85 c0                \ttest   %eax,%eax\n    5588:\t0f 95 c0             \tsetne  %al\n    558b:\t0f b6 c0             \tmovzbl %al,%eax\n    558e:\t48 85 c0             \ttest   %rax,%rax\n    5591:\t0f 84 46 01 00 00    \tje     56dd <ki_pv_evalx+0xbd0>\n    5597:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 559e <ki_pv_evalx+0xa91>\n    559e:\t8b 00                \tmov    (%rax),%eax\n    55a0:\t85 c0                \ttest   %eax,%eax\n    55a2:\t0f 95 c0             \tsetne  %al\n    55a5:\t0f b6 c0             \tmovzbl %al,%eax\n    55a8:\t48 85 c0             \ttest   %rax,%rax\n    55ab:\t74 0a                \tje     55b7 <ki_pv_evalx+0xaaa>\n    55ad:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    55b0:\t89 c7                \tmov    %eax,%edi\n    55b2:\te8 00 00 00 00       \tcallq  55b7 <ki_pv_evalx+0xaaa>\n    55b7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 55be <ki_pv_evalx+0xab1>\n    55be:\t48 8b 00             \tmov    (%rax),%rax\n    55c1:\t48 85 c0             \ttest   %rax,%rax\n    55c4:\t0f 95 c0             \tsetne  %al\n    55c7:\t0f b6 c0             \tmovzbl %al,%eax\n    55ca:\t48 85 c0             \ttest   %rax,%rax\n    55cd:\t0f 84 84 00 00 00    \tje     5657 <ki_pv_evalx+0xb4a>\n    55d3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 55da <ki_pv_evalx+0xacd>\n    55da:\t48 8b 00             \tmov    (%rax),%rax\n    55dd:\t48 8b 18             \tmov    (%rax),%rbx\n    55e0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 55e7 <ki_pv_evalx+0xada>\n    55e7:\t48 8b 00             \tmov    (%rax),%rax\n    55ea:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    55ee:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    55f1:\t8d 50 05             \tlea    0x5(%rax),%edx\n    55f4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 55fb <ki_pv_evalx+0xaee>\n    55fb:\t48 63 d2             \tmovslq %edx,%rdx\n    55fe:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5602:\t48 01 d0             \tadd    %rdx,%rax\n    5605:\t4c 8b 20             \tmov    (%rax),%r12\n    5608:\te8 00 00 00 00       \tcallq  560d <ki_pv_evalx+0xb00>\n    560d:\t89 c1                \tmov    %eax,%ecx\n    560f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5616 <ki_pv_evalx+0xb09>\n    5616:\t8b 10                \tmov    (%rax),%edx\n    5618:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 561f <ki_pv_evalx+0xb12>\n    561f:\t48 8b 00             \tmov    (%rax),%rax\n    5622:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5626:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 562d <ki_pv_evalx+0xb20>\n    562d:\t56                   \tpush   %rsi\n    562e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5635 <ki_pv_evalx+0xb28>\n    5635:\t56                   \tpush   %rsi\n    5636:\t53                   \tpush   %rbx\n    5637:\t45 89 e9             \tmov    %r13d,%r9d\n    563a:\t4d 89 e0             \tmov    %r12,%r8\n    563d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5644 <ki_pv_evalx+0xb37>\n    5644:\t48 89 c7             \tmov    %rax,%rdi\n    5647:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    564c:\te8 00 00 00 00       \tcallq  5651 <ki_pv_evalx+0xb44>\n    5651:\t48 83 c4 20          \tadd    $0x20,%rsp\n    5655:\teb 62                \tjmp    56b9 <ki_pv_evalx+0xbac>\n    5657:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    565a:\t8d 50 05             \tlea    0x5(%rax),%edx\n    565d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5664 <ki_pv_evalx+0xb57>\n    5664:\t48 63 d2             \tmovslq %edx,%rdx\n    5667:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    566b:\t48 01 d0             \tadd    %rdx,%rax\n    566e:\t48 8b 18             \tmov    (%rax),%rbx\n    5671:\te8 00 00 00 00       \tcallq  5676 <ki_pv_evalx+0xb69>\n    5676:\t89 c1                \tmov    %eax,%ecx\n    5678:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 567f <ki_pv_evalx+0xb72>\n    567f:\t8b 10                \tmov    (%rax),%edx\n    5681:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5688 <ki_pv_evalx+0xb7b>\n    5688:\t48 8b 00             \tmov    (%rax),%rax\n    568b:\t48 83 ec 08          \tsub    $0x8,%rsp\n    568f:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5696 <ki_pv_evalx+0xb89>\n    5696:\t56                   \tpush   %rsi\n    5697:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 569e <ki_pv_evalx+0xb91>\n    569e:\t49 89 d8             \tmov    %rbx,%r8\n    56a1:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 56a8 <ki_pv_evalx+0xb9b>\n    56a8:\t48 89 c7             \tmov    %rax,%rdi\n    56ab:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    56b0:\te8 00 00 00 00       \tcallq  56b5 <ki_pv_evalx+0xba8>\n    56b5:\t48 83 c4 10          \tadd    $0x10,%rsp\n    56b9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 56c0 <ki_pv_evalx+0xbb3>\n    56c0:\t8b 00                \tmov    (%rax),%eax\n    56c2:\t85 c0                \ttest   %eax,%eax\n    56c4:\t0f 95 c0             \tsetne  %al\n    56c7:\t0f b6 c0             \tmovzbl %al,%eax\n    56ca:\t48 85 c0             \ttest   %rax,%rax\n    56cd:\t0f 84 42 01 00 00    \tje     5815 <ki_pv_evalx+0xd08>\n    56d3:\te8 00 00 00 00       \tcallq  56d8 <ki_pv_evalx+0xbcb>\n    56d8:\te9 38 01 00 00       \tjmpq   5815 <ki_pv_evalx+0xd08>\n    56dd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 56e4 <ki_pv_evalx+0xbd7>\n    56e4:\t48 8b 00             \tmov    (%rax),%rax\n    56e7:\t48 85 c0             \ttest   %rax,%rax\n    56ea:\t0f 95 c0             \tsetne  %al\n    56ed:\t0f b6 c0             \tmovzbl %al,%eax\n    56f0:\t48 85 c0             \ttest   %rax,%rax\n    56f3:\t0f 84 a4 00 00 00    \tje     579d <ki_pv_evalx+0xc90>\n    56f9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5700 <ki_pv_evalx+0xbf3>\n    5700:\t4c 8b 28             \tmov    (%rax),%r13\n    5703:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 570a <ki_pv_evalx+0xbfd>\n    570a:\t48 8b 00             \tmov    (%rax),%rax\n    570d:\t4c 8b 38             \tmov    (%rax),%r15\n    5710:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5717 <ki_pv_evalx+0xc0a>\n    5717:\t48 8b 00             \tmov    (%rax),%rax\n    571a:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    571e:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    5721:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5724:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 572b <ki_pv_evalx+0xc1e>\n    572b:\t48 63 d2             \tmovslq %edx,%rdx\n    572e:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5732:\t48 01 d0             \tadd    %rdx,%rax\n    5735:\t48 8b 18             \tmov    (%rax),%rbx\n    5738:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    573b:\t8d 50 05             \tlea    0x5(%rax),%edx\n    573e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5745 <ki_pv_evalx+0xc38>\n    5745:\t48 63 d2             \tmovslq %edx,%rdx\n    5748:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    574c:\t48 01 d0             \tadd    %rdx,%rax\n    574f:\t48 83 c0 08          \tadd    $0x8,%rax\n    5753:\t44 8b 30             \tmov    (%rax),%r14d\n    5756:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    575b:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5762 <ki_pv_evalx+0xc55>\n    5762:\te8 00 00 00 00       \tcallq  5767 <ki_pv_evalx+0xc5a>\n    5767:\t44 09 f0             \tor     %r14d,%eax\n    576a:\t48 83 ec 08          \tsub    $0x8,%rsp\n    576e:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 5775 <ki_pv_evalx+0xc68>\n    5775:\t52                   \tpush   %rdx\n    5776:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 577d <ki_pv_evalx+0xc70>\n    577d:\t4d 89 f8             \tmov    %r15,%r8\n    5780:\t44 89 e1             \tmov    %r12d,%ecx\n    5783:\t48 89 da             \tmov    %rbx,%rdx\n    5786:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 578d <ki_pv_evalx+0xc80>\n    578d:\t89 c7                \tmov    %eax,%edi\n    578f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5794:\t41 ff d5             \tcallq  *%r13\n    5797:\t48 83 c4 10          \tadd    $0x10,%rsp\n    579b:\teb 78                \tjmp    5815 <ki_pv_evalx+0xd08>\n    579d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 57a4 <ki_pv_evalx+0xc97>\n    57a4:\t4c 8b 20             \tmov    (%rax),%r12\n    57a7:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    57aa:\t8d 50 05             \tlea    0x5(%rax),%edx\n    57ad:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 57b4 <ki_pv_evalx+0xca7>\n    57b4:\t48 63 d2             \tmovslq %edx,%rdx\n    57b7:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    57bb:\t48 01 d0             \tadd    %rdx,%rax\n    57be:\t48 8b 18             \tmov    (%rax),%rbx\n    57c1:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    57c4:\t8d 50 05             \tlea    0x5(%rax),%edx\n    57c7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 57ce <ki_pv_evalx+0xcc1>\n    57ce:\t48 63 d2             \tmovslq %edx,%rdx\n    57d1:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    57d5:\t48 01 d0             \tadd    %rdx,%rax\n    57d8:\t48 83 c0 08          \tadd    $0x8,%rax\n    57dc:\t44 8b 28             \tmov    (%rax),%r13d\n    57df:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    57e4:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 57eb <ki_pv_evalx+0xcde>\n    57eb:\te8 00 00 00 00       \tcallq  57f0 <ki_pv_evalx+0xce3>\n    57f0:\t44 09 e8             \tor     %r13d,%eax\n    57f3:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 57fa <ki_pv_evalx+0xced>\n    57fa:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 5801 <ki_pv_evalx+0xcf4>\n    5801:\t48 89 da             \tmov    %rbx,%rdx\n    5804:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 580b <ki_pv_evalx+0xcfe>\n    580b:\t89 c7                \tmov    %eax,%edi\n    580d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5812:\t41 ff d4             \tcallq  *%r12\n    5815:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 581c <ki_pv_evalx+0xd0f>\n    581c:\t8b 00                \tmov    (%rax),%eax\n    581e:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    5821:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5828 <ki_pv_evalx+0xd1b>\n    5828:\t89 10                \tmov    %edx,(%rax)\n    582a:\teb 07                \tjmp    5833 <ki_pv_evalx+0xd26>\n    582c:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    5831:\teb 06                \tjmp    5839 <ki_pv_evalx+0xd2c>\n    5833:\t90                   \tnop\n    5834:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    5839:\t48 8d 65 d8          \tlea    -0x28(%rbp),%rsp\n    583d:\t5b                   \tpop    %rbx\n    583e:\t41 5c                \tpop    %r12\n    5840:\t41 5d                \tpop    %r13\n    5842:\t41 5e                \tpop    %r14\n    5844:\t41 5f                \tpop    %r15\n    5846:\t5d                   \tpop    %rbp\n    5847:\tc3                   \tretq   ", "code_s": "__int64 __fastcall ki_pv_evalx(__int64 a1, __int64 a2, __int64 a3) {\n  char **v3;\n  const char *v4;\n  int v5;\n  const char *v6;\n  unsigned int v7;\n  const char *v8;\n  struct _IO_FILE *v9;\n  const char *v10;\n  unsigned int v11;\n  void (*v12)(_QWORD, const char *, ...);\n  __int64 v13;\n  unsigned int v14;\n  __int64 v15;\n  int v16;\n  unsigned int v17;\n  void (*v18)(_QWORD, const char *, ...);\n  const char *v19;\n  int v20;\n  unsigned int v21;\n  __int64 result;\n  char **v23;\n  const char *v24;\n  int v25;\n  const char *v26;\n  int v27;\n  const char *v28;\n  unsigned int v29;\n  const char *v30;\n  struct _IO_FILE *v31;\n  const char *v32;\n  int v33;\n  const char *v34;\n  unsigned int v35;\n  void (*v36)(_QWORD, const char *, ...);\n  const char *v37;\n  __int64 v38;\n  unsigned int v39;\n  __int64 v40;\n  unsigned int v41;\n  void (*v42)(_QWORD, const char *, ...);\n  const char *v43;\n  unsigned int v44;\n  __int64 v45;\n  int v46;\n  unsigned int v47;\n  char **v48;\n  const char *v49;\n  int v50;\n  const char *v51;\n  unsigned int v52;\n  const char *v53;\n  struct _IO_FILE *v54;\n  const char *v55;\n  unsigned int v56;\n  void (*v57)(_QWORD, const char *, ...);\n  __int64 v58;\n  unsigned int v59;\n  __int64 v60;\n  int v61;\n  unsigned int v62;\n  void (*v63)(_QWORD, const char *, ...);\n  const char *v64;\n  int v65;\n  unsigned int v66;\n  char **v67;\n  const char *v68;\n  int v69;\n  const char *v70;\n  unsigned int v71;\n  const char *v72;\n  struct _IO_FILE *v73;\n  const char *v74;\n  unsigned int v75;\n  void (*v76)(_QWORD, const char *, ...);\n  __int64 v77;\n  unsigned int v78;\n  __int64 v79;\n  int v80;\n  unsigned int v81;\n  void (*v82)(_QWORD, const char *, ...);\n  const char *v83;\n  int v84;\n  unsigned int v85;\n  int v86;\n  __int64 v87;\n  int s[Number];\n  unsigned int v90;\n  unsigned int v91;\n  unsigned int v92;\n  unsigned int v93;\n  __int64 v94;\n  v94 = Number L;\n  if (a2 && *(_QWORD *)a2 && *(int *)(a2 + Number) > Number) {\n    v94 = pv_cache_get(a2);\n    if (v94) {\n      memset(s, Number, sizeof(s));\n      if ((int)pv_eval_str(a1, s, a3) >= Number) {\n        s[Number] = Number;\n        if ((*(int(__fastcall **)(__int64, __int64, __int64, int *))(\n                v94 + Number))(a1, v94 + Number, Number L, s) >= Number) {\n          result = Number L;\n        } else {\n          v67 = &off_63F0;\n          if ((int)get_debug_level(&off_63F0, Number L) >= Number &&\n              !dprint_crit) {\n            v93 = Number;\n            ++dprint_crit;\n            if (log_stderr) {\n              if (log_color) {\n                v67 = (char **)v93;\n                dprint_color(v93);\n              }\n              if (log_prefix_val) {\n                v68 = (const char *)*log_prefix_val;\n                v69 = *((_DWORD *)log_prefix_val + Number);\n                v70 = (const char *)*((_QWORD *)&log_level_info +\n                                      Number * (int)(v93 + Number));\n                v71 = my_pid(v67, Number L);\n                v72 = String;\n                v73 = stderr;\n                fprintf(stderr, String, process_no, v71, v70, v69, v68, String,\n                        String);\n              } else {\n                v74 = (const char *)*((_QWORD *)&log_level_info +\n                                      Number * (int)(v93 + Number));\n                v75 = my_pid(v67, Number L);\n                v72 = String;\n                v73 = stderr;\n                fprintf(stderr, String, process_no, v75, v74, String, String);\n              }\n              if (log_color)\n                dprint_color_reset(v73, v72);\n            } else if (log_prefix_val) {\n              v76 = (void (*)(_QWORD, const char *, ...))km_log_func;\n              v77 = *log_prefix_val;\n              v78 = *((_DWORD *)log_prefix_val + Number);\n              v79 = *((_QWORD *)&log_level_info + Number * (int)(v93 + Number));\n              v80 = *((_DWORD *)&log_level_info + Number * (int)(v93 + Number) +\n                      Number);\n              v81 = get_debug_facility(&off_63F0, Number L);\n              v76(v80 | v81, String, v79, v78, v77, String, String);\n            } else {\n              v82 = (void (*)(_QWORD, const char *, ...))km_log_func;\n              v83 = (const char *)*((_QWORD *)&log_level_info +\n                                    Number * (int)(v93 + Number));\n              v84 = *((_DWORD *)&log_level_info + Number * (int)(v93 + Number) +\n                      Number);\n              v85 = get_debug_facility(&off_63F0, Number L);\n              v82(v84 | v85, String, v83, String, String);\n            }\n            --dprint_crit;\n          }\n          result = Number;\n        }\n      } else {\n        v48 = &off_63F0;\n        if ((int)get_debug_level(&off_63F0, Number L) >= Number &&\n            !dprint_crit) {\n          v92 = Number;\n          ++dprint_crit;\n          if (log_stderr) {\n            if (log_color) {\n              v48 = (char **)v92;\n              dprint_color(v92);\n            }\n            if (log_prefix_val) {\n              v49 = (const char *)*log_prefix_val;\n              v50 = *((_DWORD *)log_prefix_val + Number);\n              v51 = (const char *)*((_QWORD *)&log_level_info +\n                                    Number * (int)(v92 + Number));\n              v52 = my_pid(v48, Number L);\n              v53 = String;\n              v54 = stderr;\n              fprintf(stderr, String, process_no, v52, v51, v50, v49, String,\n                      String);\n            } else {\n              v55 = (const char *)*((_QWORD *)&log_level_info +\n                                    Number * (int)(v92 + Number));\n              v56 = my_pid(v48, Number L);\n              v53 = String;\n              v54 = stderr;\n              fprintf(stderr, String, process_no, v56, v55, String, String);\n            }\n            if (log_color)\n              dprint_color_reset(v54, v53);\n          } else if (log_prefix_val) {\n            v57 = (void (*)(_QWORD, const char *, ...))km_log_func;\n            v58 = *log_prefix_val;\n            v59 = *((_DWORD *)log_prefix_val + Number);\n            v60 = *((_QWORD *)&log_level_info + Number * (int)(v92 + Number));\n            v61 = *((_DWORD *)&log_level_info + Number * (int)(v92 + Number) +\n                    Number);\n            v62 = get_debug_facility(&off_63F0, Number L);\n            v57(v61 | v62, String, v60, v59, v58, String, String);\n          } else {\n            v63 = (void (*)(_QWORD, const char *, ...))km_log_func;\n            v64 = (const char *)*((_QWORD *)&log_level_info +\n                                  Number * (int)(v92 + Number));\n            v65 = *((_DWORD *)&log_level_info + Number * (int)(v92 + Number) +\n                    Number);\n            v66 = get_debug_facility(&off_63F0, Number L);\n            v63(v65 | v66, String, v64, String, String);\n          }\n          --dprint_crit;\n        }\n        result = Number;\n      }\n    } else {\n      v23 = &off_63F0;\n      if ((int)get_debug_level(&off_63F0, Number L) >= Number && !dprint_crit) {\n        v91 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color) {\n            v23 = (char **)v91;\n            dprint_color(v91);\n          }\n          if (log_prefix_val) {\n            v24 = *(const char **)a2;\n            v25 = *(_DWORD *)(a2 + Number);\n            v26 = (const char *)*log_prefix_val;\n            v27 = *((_DWORD *)log_prefix_val + Number);\n            v28 = (const char *)*((_QWORD *)&log_level_info +\n                                  Number * (int)(v91 + Number));\n            v29 = my_pid(v23, Number L);\n            v30 = String;\n            v31 = stderr;\n            fprintf(stderr, String, process_no, v29, v28, v27, v26, String,\n                    String, v25, v24);\n          } else {\n            v32 = *(const char **)a2;\n            v33 = *(_DWORD *)(a2 + Number);\n            v34 = (const char *)*((_QWORD *)&log_level_info +\n                                  Number * (int)(v91 + Number));\n            v35 = my_pid(v23, Number L);\n            v30 = String;\n            v31 = stderr;\n            fprintf(stderr, String, process_no, v35, v34, String, String, v33,\n                    v32);\n          }\n          if (log_color)\n            dprint_color_reset(v31, v30);\n        } else if (log_prefix_val) {\n          v36 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v37 = *(const char **)a2;\n          v38 = *(unsigned int *)(a2 + Number);\n          v87 = *log_prefix_val;\n          v39 = *((_DWORD *)log_prefix_val + Number);\n          v40 = *((_QWORD *)&log_level_info + Number * (int)(v91 + Number));\n          v86 = *((_DWORD *)&log_level_info + Number * (int)(v91 + Number) +\n                  Number);\n          v41 = get_debug_facility(&off_63F0, Number L);\n          v36(v86 | v41, String, v40, v39, v87, String, String, v38, v37);\n        } else {\n          v42 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v43 = *(const char **)a2;\n          v44 = *(_DWORD *)(a2 + Number);\n          v45 = *((_QWORD *)&log_level_info + Number * (int)(v91 + Number));\n          v46 = *((_DWORD *)&log_level_info + Number * (int)(v91 + Number) +\n                  Number);\n          v47 = get_debug_facility(&off_63F0, Number L);\n          v42(v46 | v47, String, v45, String, String, v44, v43);\n        }\n        --dprint_crit;\n      }\n      result = Number;\n    }\n  } else {\n    v3 = &off_63F0;\n    if ((int)get_debug_level(&off_63F0, Number L) >= Number && !dprint_crit) {\n      v90 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color) {\n          v3 = (char **)v90;\n          dprint_color(v90);\n        }\n        if (log_prefix_val) {\n          v4 = (const char *)*log_prefix_val;\n          v5 = *((_DWORD *)log_prefix_val + Number);\n          v6 = (const char *)*((_QWORD *)&log_level_info +\n                               Number * (int)(v90 + Number));\n          v7 = my_pid(v3, Number L);\n          v8 = String;\n          v9 = stderr;\n          fprintf(stderr, String, process_no, v7, v6, v5, v4, String, String);\n        } else {\n          v10 = (const char *)*((_QWORD *)&log_level_info +\n                                Number * (int)(v90 + Number));\n          v11 = my_pid(v3, Number L);\n          v8 = String;\n          v9 = stderr;\n          fprintf(stderr, String, process_no, v11, v10, String, String);\n        }\n        if (log_color)\n          dprint_color_reset(v9, v8);\n      } else if (log_prefix_val) {\n        v12 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v13 = *log_prefix_val;\n        v14 = *((_DWORD *)log_prefix_val + Number);\n        v15 = *((_QWORD *)&log_level_info + Number * (int)(v90 + Number));\n        v16 = *((_DWORD *)&log_level_info + Number * (int)(v90 + Number) +\n                Number);\n        v17 = get_debug_facility(&off_63F0, Number L);\n        v12(v16 | v17, String, v15, v14, v13, String, String);\n      } else {\n        v18 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v19 = (const char *)*((_QWORD *)&log_level_info +\n                              Number * (int)(v90 + Number));\n        v20 = *((_DWORD *)&log_level_info + Number * (int)(v90 + Number) +\n                Number);\n        v21 = get_debug_facility(&off_63F0, Number L);\n        v18(v20 | v21, String, v19, String, String);\n      }\n      --dprint_crit;\n    }\n    result = Number;\n  }\n  return result;\n}", "code_t": "int __cdecl ki_pv_evalx(sip_msg_t *msg, str *dst, str *fmt) {\n  unsigned __int64 v3;\n  const char *v4;\n  int v5;\n  const char *v6;\n  unsigned int v7;\n  const char *v8;\n  struct _IO_FILE *v9;\n  const char *v10;\n  unsigned int v11;\n  void (*v12)(_QWORD, const char *, ...);\n  __int64 v13;\n  unsigned int v14;\n  __int64 v15;\n  int v16;\n  unsigned int v17;\n  void (*v18)(_QWORD, const char *, ...);\n  const char *v19;\n  int v20;\n  unsigned int v21;\n  int result;\n  unsigned __int64 v23;\n  char *v24;\n  int v25;\n  const char *v26;\n  int v27;\n  const char *v28;\n  unsigned int v29;\n  const char *v30;\n  struct _IO_FILE *v31;\n  char *v32;\n  int v33;\n  const char *v34;\n  unsigned int v35;\n  void (*v36)(_QWORD, const char *, ...);\n  char *v37;\n  __int64 v38;\n  unsigned int v39;\n  __int64 v40;\n  unsigned int v41;\n  void (*v42)(_QWORD, const char *, ...);\n  char *v43;\n  unsigned int v44;\n  __int64 v45;\n  int v46;\n  unsigned int v47;\n  unsigned __int64 v48;\n  const char *v49;\n  int v50;\n  const char *v51;\n  unsigned int v52;\n  const char *v53;\n  struct _IO_FILE *v54;\n  const char *v55;\n  unsigned int v56;\n  void (*v57)(_QWORD, const char *, ...);\n  __int64 v58;\n  unsigned int v59;\n  __int64 v60;\n  int v61;\n  unsigned int v62;\n  void (*v63)(_QWORD, const char *, ...);\n  const char *v64;\n  int v65;\n  unsigned int v66;\n  unsigned __int64 v67;\n  const char *v68;\n  int v69;\n  const char *v70;\n  unsigned int v71;\n  const char *v72;\n  struct _IO_FILE *v73;\n  const char *v74;\n  unsigned int v75;\n  void (*v76)(_QWORD, const char *, ...);\n  __int64 v77;\n  unsigned int v78;\n  __int64 v79;\n  int v80;\n  unsigned int v81;\n  void (*v82)(_QWORD, const char *, ...);\n  const char *v83;\n  int v84;\n  unsigned int v85;\n  int v86;\n  __int64 v87;\n  pv_value_t <span class=\"supfact\">val</span>;\n  int __llevel;\n  int __llevel_0;\n  int __llevel_1;\n  int __llevel_2;\n  pv_spec_t *ispec;\n  ispec = Number L;\n  if (dst && dst->s && dst->len > Number) {\n    ispec = (pv_spec_t *)pv_cache_get(dst);\n    if (ispec) {\n      memset(&<span class=\"supfact\">val</span>, Number, sizeof(<span class=\"supfact\">val</span>));\n      if ((int)pv_eval_str(msg, &<span class=\"supfact\">val</span>, fmt) >= Number) {\n        <span class=\"supfact\">val</span>.flags = Number;\n        if (ispec->setf(msg, &ispec->pvp, Number, &<span class=\"supfact\">val</span>) >=\n            Number) {\n          result = Number;\n        } else {\n          v67 = (unsigned __int64)&off_63F0;\n          if ((int)get_debug_level(&off_63F0, Number L) >= Number &&\n              !dprint_crit) {\n            __llevel_2 = Number;\n            ++dprint_crit;\n            if (log_stderr) {\n              if (log_color) {\n                v67 = (unsigned int)__llevel_2;\n                dprint_color((unsigned int)__llevel_2);\n              }\n              if (log_prefix_val) {\n                v68 = (const char *)*log_prefix_val;\n                v69 = *((_DWORD *)log_prefix_val + Number);\n                v70 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                      Number * __llevel_2 + Number);\n                v71 = my_pid(v67, Number L);\n                v72 = String;\n                v73 = stderr;\n                fprintf(stderr, String, process_no, v71, v70, v69, v68, String,\n                        String);\n              } else {\n                v74 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                      Number * __llevel_2 + Number);\n                v75 = my_pid(v67, Number L);\n                v72 = String;\n                v73 = stderr;\n                fprintf(stderr, String, process_no, v75, v74, String, String);\n              }\n              if (log_color)\n                dprint_color_reset(v73, v72);\n            } else if (log_prefix_val) {\n              v76 = (void (*)(_QWORD, const char *, ...))km_log_func;\n              v77 = *log_prefix_val;\n              v78 = *((_DWORD *)log_prefix_val + Number);\n              v79 =\n                  *((_QWORD *)&log_level_info_0 + Number * __llevel_2 + Number);\n              v80 =\n                  *((_DWORD *)&log_level_info_0 + Number * __llevel_2 + Number);\n              v81 = get_debug_facility(&off_63F0, Number L);\n              v76(v80 | v81, String, v79, v78, v77, String, String);\n            } else {\n              v82 = (void (*)(_QWORD, const char *, ...))km_log_func;\n              v83 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                    Number * __llevel_2 + Number);\n              v84 =\n                  *((_DWORD *)&log_level_info_0 + Number * __llevel_2 + Number);\n              v85 = get_debug_facility(&off_63F0, Number L);\n              v82(v84 | v85, String, v83, String, String);\n            }\n            --dprint_crit;\n          }\n          result = Number;\n        }\n      } else {\n        v48 = (unsigned __int64)&off_63F0;\n        if ((int)get_debug_level(&off_63F0, Number L) >= Number &&\n            !dprint_crit) {\n          __llevel_1 = Number;\n          ++dprint_crit;\n          if (log_stderr) {\n            if (log_color) {\n              v48 = (unsigned int)__llevel_1;\n              dprint_color((unsigned int)__llevel_1);\n            }\n            if (log_prefix_val) {\n              v49 = (const char *)*log_prefix_val;\n              v50 = *((_DWORD *)log_prefix_val + Number);\n              v51 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                    Number * __llevel_1 + Number);\n              v52 = my_pid(v48, Number L);\n              v53 = String;\n              v54 = stderr;\n              fprintf(stderr, String, process_no, v52, v51, v50, v49, String,\n                      String);\n            } else {\n              v55 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                    Number * __llevel_1 + Number);\n              v56 = my_pid(v48, Number L);\n              v53 = String;\n              v54 = stderr;\n              fprintf(stderr, String, process_no, v56, v55, String, String);\n            }\n            if (log_color)\n              dprint_color_reset(v54, v53);\n          } else if (log_prefix_val) {\n            v57 = (void (*)(_QWORD, const char *, ...))km_log_func;\n            v58 = *log_prefix_val;\n            v59 = *((_DWORD *)log_prefix_val + Number);\n            v60 = *((_QWORD *)&log_level_info_0 + Number * __llevel_1 + Number);\n            v61 = *((_DWORD *)&log_level_info_0 + Number * __llevel_1 + Number);\n            v62 = get_debug_facility(&off_63F0, Number L);\n            v57(v61 | v62, String, v60, v59, v58, String, String);\n          } else {\n            v63 = (void (*)(_QWORD, const char *, ...))km_log_func;\n            v64 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                  Number * __llevel_1 + Number);\n            v65 = *((_DWORD *)&log_level_info_0 + Number * __llevel_1 + Number);\n            v66 = get_debug_facility(&off_63F0, Number L);\n            v63(v65 | v66, String, v64, String, String);\n          }\n          --dprint_crit;\n        }\n        result = Number;\n      }\n    } else {\n      v23 = (unsigned __int64)&off_63F0;\n      if ((int)get_debug_level(&off_63F0, Number L) >= Number && !dprint_crit) {\n        __llevel_0 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color) {\n            v23 = (unsigned int)__llevel_0;\n            dprint_color((unsigned int)__llevel_0);\n          }\n          if (log_prefix_val) {\n            v24 = dst->s;\n            v25 = dst->len;\n            v26 = (const char *)*log_prefix_val;\n            v27 = *((_DWORD *)log_prefix_val + Number);\n            v28 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                  Number * __llevel_0 + Number);\n            v29 = my_pid(v23, Number L);\n            v30 = String;\n            v31 = stderr;\n            fprintf(stderr, String, process_no, v29, v28, v27, v26, String,\n                    String, v25, v24);\n          } else {\n            v32 = dst->s;\n            v33 = dst->len;\n            v34 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                  Number * __llevel_0 + Number);\n            v35 = my_pid(v23, Number L);\n            v30 = String;\n            v31 = stderr;\n            fprintf(stderr, String, process_no, v35, v34, String, String, v33,\n                    v32);\n          }\n          if (log_color)\n            dprint_color_reset(v31, v30);\n        } else if (log_prefix_val) {\n          v36 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v37 = dst->s;\n          v38 = (unsigned int)dst->len;\n          v87 = *log_prefix_val;\n          v39 = *((_DWORD *)log_prefix_val + Number);\n          v40 = *((_QWORD *)&log_level_info_0 + Number * __llevel_0 + Number);\n          v86 = *((_DWORD *)&log_level_info_0 + Number * __llevel_0 + Number);\n          v41 = get_debug_facility(&off_63F0, Number L);\n          v36(v86 | v41, String, v40, v39, v87, String, String, v38, v37);\n        } else {\n          v42 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v43 = dst->s;\n          v44 = dst->len;\n          v45 = *((_QWORD *)&log_level_info_0 + Number * __llevel_0 + Number);\n          v46 = *((_DWORD *)&log_level_info_0 + Number * __llevel_0 + Number);\n          v47 = get_debug_facility(&off_63F0, Number L);\n          v42(v46 | v47, String, v45, String, String, v44, v43);\n        }\n        --dprint_crit;\n      }\n      result = Number;\n    }\n  } else {\n    v3 = (unsigned __int64)&off_63F0;\n    if ((int)get_debug_level(&off_63F0, Number L) >= Number && !dprint_crit) {\n      __llevel = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color) {\n          v3 = (unsigned int)__llevel;\n          dprint_color((unsigned int)__llevel);\n        }\n        if (log_prefix_val) {\n          v4 = (const char *)*log_prefix_val;\n          v5 = *((_DWORD *)log_prefix_val + Number);\n          v6 = (const char *)*((_QWORD *)&log_level_info_0 + Number * __llevel +\n                               Number);\n          v7 = my_pid(v3, Number L);\n          v8 = String;\n          v9 = stderr;\n          fprintf(stderr, String, process_no, v7, v6, v5, v4, String, String);\n        } else {\n          v10 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                Number * __llevel + Number);\n          v11 = my_pid(v3, Number L);\n          v8 = String;\n          v9 = stderr;\n          fprintf(stderr, String, process_no, v11, v10, String, String);\n        }\n        if (log_color)\n          dprint_color_reset(v9, v8);\n      } else if (log_prefix_val) {\n        v12 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v13 = *log_prefix_val;\n        v14 = *((_DWORD *)log_prefix_val + Number);\n        v15 = *((_QWORD *)&log_level_info_0 + Number * __llevel + Number);\n        v16 = *((_DWORD *)&log_level_info_0 + Number * __llevel + Number);\n        v17 = get_debug_facility(&off_63F0, Number L);\n        v12(v16 | v17, String, v15, v14, v13, String, String);\n      } else {\n        v18 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v19 = (const char *)*((_QWORD *)&log_level_info_0 + Number * __llevel +\n                              Number);\n        v20 = *((_DWORD *)&log_level_info_0 + Number * __llevel + Number);\n        v21 = get_debug_facility(&off_63F0, Number L);\n        v18(v20 | v21, String, v19, String, String);\n      }\n      --dprint_crit;\n    }\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "s", "type": "__unk__", "pred_name": "__unk__", "ref_name": "val", "ref_type": "struct pv_value_t { str rs; int ri; int flags; }"}], "body_in_train": false}, {"repo_owner": "himyxia", "repo_name": "c", "path": "himyxia/c/3824e960e5a413f67b7139f19f35385c9065ddf7acc57ab0f0b7e247b3d86968", "path_in_repo": "himyxia/c/network/unpv13e/names/daytimetcpcli1", "objdump": "0000000000402602 <main>:\n  402602:\t55                   \tpush   %rbp\n  402603:\t48 89 e5             \tmov    %rsp,%rbp\n  402606:\t48 81 ec 70 10 00 00 \tsub    $0x1070,%rsp\n  40260d:\t89 bd 9c ef ff ff    \tmov    %edi,-0x1064(%rbp)\n  402613:\t48 89 b5 90 ef ff ff \tmov    %rsi,-0x1070(%rbp)\n  40261a:\t83 bd 9c ef ff ff 03 \tcmpl   $0x3,-0x1064(%rbp)\n  402621:\t74 0f                \tje     402632 <main+0x30>\n  402623:\tbf 08 40 40 00       \tmov    $0x404008,%edi\n  402628:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  40262d:\te8 4e 06 00 00       \tcallq  402c80 <err_quit>\n  402632:\t48 8b 85 90 ef ff ff \tmov    -0x1070(%rbp),%rax\n  402639:\t48 83 c0 08          \tadd    $0x8,%rax\n  40263d:\t48 8b 00             \tmov    (%rax),%rax\n  402640:\t48 89 c7             \tmov    %rax,%rdi\n  402643:\te8 68 fc ff ff       \tcallq  4022b0 <gethostbyname@plt>\n  402648:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  40264c:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n  402651:\t75 7d                \tjne    4026d0 <main+0xce>\n  402653:\t48 8b 85 90 ef ff ff \tmov    -0x1070(%rbp),%rax\n  40265a:\t48 83 c0 08          \tadd    $0x8,%rax\n  40265e:\t48 8b 00             \tmov    (%rax),%rax\n  402661:\t48 8d 95 ac ef ff ff \tlea    -0x1054(%rbp),%rdx\n  402668:\t48 89 d6             \tmov    %rdx,%rsi\n  40266b:\t48 89 c7             \tmov    %rax,%rdi\n  40266e:\te8 ad fc ff ff       \tcallq  402320 <inet_aton@plt>\n  402673:\t85 c0                \ttest   %eax,%eax\n  402675:\t75 33                \tjne    4026aa <main+0xa8>\n  402677:\te8 b4 fa ff ff       \tcallq  402130 <__h_errno_location@plt>\n  40267c:\t8b 00                \tmov    (%rax),%eax\n  40267e:\t89 c7                \tmov    %eax,%edi\n  402680:\te8 fb fd ff ff       \tcallq  402480 <hstrerror@plt>\n  402685:\t48 89 c2             \tmov    %rax,%rdx\n  402688:\t48 8b 85 90 ef ff ff \tmov    -0x1070(%rbp),%rax\n  40268f:\t48 83 c0 08          \tadd    $0x8,%rax\n  402693:\t48 8b 00             \tmov    (%rax),%rax\n  402696:\t48 89 c6             \tmov    %rax,%rsi\n  402699:\tbf 33 40 40 00       \tmov    $0x404033,%edi\n  40269e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4026a3:\te8 d8 05 00 00       \tcallq  402c80 <err_quit>\n  4026a8:\teb 32                \tjmp    4026dc <main+0xda>\n  4026aa:\t48 8d 85 ac ef ff ff \tlea    -0x1054(%rbp),%rax\n  4026b1:\t48 89 85 b0 ef ff ff \tmov    %rax,-0x1050(%rbp)\n  4026b8:\t48 c7 85 b8 ef ff ff \tmovq   $0x0,-0x1048(%rbp)\n  4026bf:\t00 00 00 00 \n  4026c3:\t48 8d 85 b0 ef ff ff \tlea    -0x1050(%rbp),%rax\n  4026ca:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  4026ce:\teb 0c                \tjmp    4026dc <main+0xda>\n  4026d0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4026d4:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n  4026d8:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  4026dc:\t48 8b 85 90 ef ff ff \tmov    -0x1070(%rbp),%rax\n  4026e3:\t48 83 c0 10          \tadd    $0x10,%rax\n  4026e7:\t48 8b 00             \tmov    (%rax),%rax\n  4026ea:\tbe 4d 40 40 00       \tmov    $0x40404d,%esi\n  4026ef:\t48 89 c7             \tmov    %rax,%rdi\n  4026f2:\te8 09 fb ff ff       \tcallq  402200 <getservbyname@plt>\n  4026f7:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n  4026fb:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n  402700:\t0f 85 d9 00 00 00    \tjne    4027df <main+0x1dd>\n  402706:\t48 8b 85 90 ef ff ff \tmov    -0x1070(%rbp),%rax\n  40270d:\t48 83 c0 10          \tadd    $0x10,%rax\n  402711:\t48 8b 00             \tmov    (%rax),%rax\n  402714:\t48 89 c6             \tmov    %rax,%rsi\n  402717:\tbf 51 40 40 00       \tmov    $0x404051,%edi\n  40271c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  402721:\te8 5a 05 00 00       \tcallq  402c80 <err_quit>\n  402726:\te9 b4 00 00 00       \tjmpq   4027df <main+0x1dd>\n  40272b:\tba 00 00 00 00       \tmov    $0x0,%edx\n  402730:\tbe 01 00 00 00       \tmov    $0x1,%esi\n  402735:\tbf 02 00 00 00       \tmov    $0x2,%edi\n  40273a:\te8 f1 0c 00 00       \tcallq  403430 <Socket>\n  40273f:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  402742:\t48 8d 85 c0 ef ff ff \tlea    -0x1040(%rbp),%rax\n  402749:\t48 c7 00 00 00 00 00 \tmovq   $0x0,(%rax)\n  402750:\t48 c7 40 08 00 00 00 \tmovq   $0x0,0x8(%rax)\n  402757:\t00 \n  402758:\t66 c7 85 c0 ef ff ff \tmovw   $0x2,-0x1040(%rbp)\n  40275f:\t02 00 \n  402761:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  402765:\t8b 40 10             \tmov    0x10(%rax),%eax\n  402768:\t66 89 85 c2 ef ff ff \tmov    %ax,-0x103e(%rbp)\n  40276f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  402773:\t48 8b 00             \tmov    (%rax),%rax\n  402776:\t8b 00                \tmov    (%rax),%eax\n  402778:\t89 85 c4 ef ff ff    \tmov    %eax,-0x103c(%rbp)\n  40277e:\t48 8d 85 c0 ef ff ff \tlea    -0x1040(%rbp),%rax\n  402785:\tbe 10 00 00 00       \tmov    $0x10,%esi\n  40278a:\t48 89 c7             \tmov    %rax,%rdi\n  40278d:\te8 8e 07 00 00       \tcallq  402f20 <Sock_ntop>\n  402792:\t48 89 c6             \tmov    %rax,%rsi\n  402795:\tbf 6c 40 40 00       \tmov    $0x40406c,%edi\n  40279a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  40279f:\te8 1c fa ff ff       \tcallq  4021c0 <printf@plt>\n  4027a4:\t48 8d 8d c0 ef ff ff \tlea    -0x1040(%rbp),%rcx\n  4027ab:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  4027ae:\tba 10 00 00 00       \tmov    $0x10,%edx\n  4027b3:\t48 89 ce             \tmov    %rcx,%rsi\n  4027b6:\t89 c7                \tmov    %eax,%edi\n  4027b8:\te8 03 fd ff ff       \tcallq  4024c0 <connect@plt>\n  4027bd:\t85 c0                \ttest   %eax,%eax\n  4027bf:\t74 30                \tje     4027f1 <main+0x1ef>\n  4027c1:\tbf 77 40 40 00       \tmov    $0x404077,%edi\n  4027c6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4027cb:\te8 10 02 00 00       \tcallq  4029e0 <err_ret>\n  4027d0:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  4027d3:\t89 c7                \tmov    %eax,%edi\n  4027d5:\te8 56 fa ff ff       \tcallq  402230 <close@plt>\n  4027da:\t48 83 45 f0 08       \taddq   $0x8,-0x10(%rbp)\n  4027df:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  4027e3:\t48 8b 00             \tmov    (%rax),%rax\n  4027e6:\t48 85 c0             \ttest   %rax,%rax\n  4027e9:\t0f 85 3c ff ff ff    \tjne    40272b <main+0x129>\n  4027ef:\teb 01                \tjmp    4027f2 <main+0x1f0>\n  4027f1:\t90                   \tnop\n  4027f2:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  4027f6:\t48 8b 00             \tmov    (%rax),%rax\n  4027f9:\t48 85 c0             \ttest   %rax,%rax\n  4027fc:\t75 37                \tjne    402835 <main+0x233>\n  4027fe:\tbf 85 40 40 00       \tmov    $0x404085,%edi\n  402803:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  402808:\te8 73 04 00 00       \tcallq  402c80 <err_quit>\n  40280d:\teb 26                \tjmp    402835 <main+0x233>\n  40280f:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n  402812:\t48 98                \tcltq   \n  402814:\tc6 84 05 d0 ef ff ff \tmovb   $0x0,-0x1030(%rbp,%rax,1)\n  40281b:\t00 \n  40281c:\t48 8b 15 7d 4a 00 00 \tmov    0x4a7d(%rip),%rdx        # 4072a0 <stdout@@GLIBC_2.2.5>\n  402823:\t48 8d 85 d0 ef ff ff \tlea    -0x1030(%rbp),%rax\n  40282a:\t48 89 d6             \tmov    %rdx,%rsi\n  40282d:\t48 89 c7             \tmov    %rax,%rdi\n  402830:\te8 1b 0d 00 00       \tcallq  403550 <Fputs>\n  402835:\t48 8d 8d d0 ef ff ff \tlea    -0x1030(%rbp),%rcx\n  40283c:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40283f:\tba 00 10 00 00       \tmov    $0x1000,%edx\n  402844:\t48 89 ce             \tmov    %rcx,%rsi\n  402847:\t89 c7                \tmov    %eax,%edi\n  402849:\te8 72 0f 00 00       \tcallq  4037c0 <Read>\n  40284e:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n  402851:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n  402855:\t7f b8                \tjg     40280f <main+0x20d>\n  402857:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  40285c:\te8 4f fc ff ff       \tcallq  4024b0 <exit@plt>\n  402861:\t66 2e 0f 1f 84 00 00 \tnopw   %cs:0x0(%rax,%rax,1)\n  402868:\t00 00 00 \n  40286b:\t0f 1f 44 00 00       \tnopl   0x0(%rax,%rax,1)", "code_s": "int __cdecl __noreturn main(int argc, const char **argv, const char **envp) {\n  char v3;\n  int *v4;\n  unsigned int v5;\n  char v6;\n  struct sockaddr *v7;\n  int v8;\n  int v9;\n  const char *v10;\n  int v11;\n  int v12;\n  struct in_addr inp;\n  __int64 v15[Number];\n  struct sockaddr addr;\n  char v17[Number];\n  int v18;\n  struct servent *v19;\n  struct hostent *v20;\n  __int64 *v21;\n  int fd;\n  if (argc != Number)\n    err_quit((unsigned int)String, (_DWORD)argv, (_DWORD)envp, v3);\n  v20 = gethostbyname(argv[Number]);\n  if (v20) {\n    v21 = (__int64 *)v20->h_addr_list;\n  } else {\n    if (!inet_aton(argv[Number], &inp)) {\n      v4 = __h_errno_location();\n      v5 = (unsigned int)hstrerror(*v4);\n      err_quit((unsigned int)String, (unsigned int)argv[Number], v5, v6);\n    }\n    v15[Number] = (__int64)&inp;\n    v15[Number] = Number L;\n    v21 = v15;\n  }\n  v7 = (struct sockaddr *)String;\n  v19 = getservbyname(argv[Number], String);\n  if (!v19)\n    err_quit((unsigned int)String, (unsigned int)argv[Number], v8, v9);\n  while (*v21) {\n    fd = Socket(Number L, Number L, Number L);\n    *(_QWORD *)&addr.sa_family = Number L;\n    *(_QWORD *)&addr.sa_data[Number] = Number L;\n    *(_DWORD *)addr.sa_data = (unsigned __int16)v19->s_port;\n    *(_DWORD *)&addr.sa_data[Number] = *(_DWORD *)*v21;\n    v10 = (const char *)Sock_ntop(&addr, Number L);\n    printf(String, v10);\n    v7 = &addr;\n    if (!connect(fd, &addr, Number))\n      break;\n    err_ret((unsigned int)String, (unsigned int)&addr, v8, v9, v11, v12,\n            (char)argv);\n    close(fd);\n    ++v21;\n  }\n  if (!*v21)\n    err_quit((unsigned int)String, (_DWORD)v7, v8, v9);\n  while (Number) {\n    v18 = Read((unsigned int)fd, v17, Number L);\n    if (v18 <= Number)\n      break;\n    v17[v18] = Number;\n    Fputs(v17, _bss_start);\n  }\n  exit(Number);\n}", "code_t": "int __cdecl __noreturn main(int argc, const char **argv, const char **envp) {\n  int *v3;\n  const char *v4;\n  char *v5;\n  in_addr <span class=\"supfact\">inetaddr</span>;\n  in_addr *inetaddrp[Number];\n  sockaddr_in <span class=\"supfact\">servaddr</span>;\n  char recvline[Number];\n  int n;\n  servent *sp_0;\n  hostent *hp;\n  in_addr **pptr;\n  int sockfd;\n  if (argc != Number)\n    err_quit(String, argv, envp);\n  hp = gethostbyname(argv[Number]);\n  if (hp) {\n    pptr = (in_addr **)hp->h_addr_list;\n  } else {\n    if (!inet_aton(argv[Number], &<span class=\"supfact\">inetaddr</span>)) {\n      v3 = __h_errno_location();\n      v4 = hstrerror(*v3);\n      err_quit(String, argv[Number], v4);\n    }\n    inetaddrp[Number] = &<span class=\"supfact\">inetaddr</span>;\n    inetaddrp[Number] = Number L;\n    pptr = inetaddrp;\n  }\n  sp_0 = getservbyname(argv[Number], String);\n  if (!sp_0)\n    err_quit(String, argv[Number]);\n  while (*pptr) {\n    sockfd = Socket(Number, Number, Number);\n    *(_QWORD *)&<span class=\"supfact\">servaddr</span>.sin_family = Number L;\n    *(_QWORD *)<span class=\"supfact\">servaddr</span>.sin_zero = Number L;\n    *(_DWORD *)&<span class=\"supfact\">servaddr</span>.sin_port =\n        (unsigned __int16)sp_0->s_port;\n    <span class=\"supfact\">servaddr</span>.sin_addr = (in_addr)(*pptr)->s_addr;\n    v5 = Sock_ntop((const sockaddr *)&<span class=\"supfact\">servaddr</span>, Number);\n    printf(String, v5);\n    if (!connect(sockfd, (const struct sockaddr *)&<span class=\"supfact\">servaddr</span>,\n                 Number))\n      break;\n    err_ret(String);\n    close(sockfd);\n    ++pptr;\n  }\n  if (!*pptr)\n    err_quit(String);\n  while (Number) {\n    n = Read(sockfd, recvline, Number);\n    if (n <= Number)\n      break;\n    recvline[n] = Number;\n    Fputs(recvline, _bss_start);\n  }\n  exit(Number);\n}", "var": [{"name": "inp", "type": "struct in_addr { in_addr_t s_addr; }", "pred_name": "inetaddr", "ref_name": "inetaddr", "ref_type": "struct in_addr { in_addr_t s_addr; }"}, {"name": "addr", "type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }", "pred_name": "servaddr", "ref_name": "servaddr", "ref_type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }"}], "body_in_train": false}, {"repo_owner": "cmr", "repo_name": "simplectic-c", "path": "cmr/simplectic-c/4e83b14d7a90c2163caf124e937b53beb001f8722c9ddb88435e5b227f716dd0", "path_in_repo": "cmr/simplectic-c//example", "objdump": "00000000004013a9 <simplectic_seed_fill>:\n  4013a9:\t55                   \tpush   %rbp\n  4013aa:\t48 89 e5             \tmov    %rsp,%rbp\n  4013ad:\t48 83 ec 30          \tsub    $0x30,%rsp\n  4013b1:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n  4013b5:\t89 75 d4             \tmov    %esi,-0x2c(%rbp)\n  4013b8:\tc7 45 e0 00 00 00 00 \tmovl   $0x0,-0x20(%rbp)\n  4013bf:\teb 15                \tjmp    4013d6 <simplectic_seed_fill+0x2d>\n  4013c1:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n  4013c4:\t89 c1                \tmov    %eax,%ecx\n  4013c6:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n  4013ca:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n  4013cd:\t48 98                \tcltq   \n  4013cf:\t88 0c 02             \tmov    %cl,(%rdx,%rax,1)\n  4013d2:\t83 45 e0 01          \taddl   $0x1,-0x20(%rbp)\n  4013d6:\t81 7d e0 ff 00 00 00 \tcmpl   $0xff,-0x20(%rbp)\n  4013dd:\t7e e2                \tjle    4013c1 <simplectic_seed_fill+0x18>\n  4013df:\tc7 45 f0 01 00 00 00 \tmovl   $0x1,-0x10(%rbp)\n  4013e6:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n  4013e9:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  4013ec:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n  4013ef:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n  4013f2:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n  4013f5:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  4013f8:\tc7 45 e4 00 01 00 00 \tmovl   $0x100,-0x1c(%rbp)\n  4013ff:\teb 55                \tjmp    401456 <simplectic_seed_fill+0xad>\n  401401:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n  401405:\t48 89 c7             \tmov    %rax,%rdi\n  401408:\te8 26 ff ff ff       \tcallq  401333 <xorshift_next>\n  40140d:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n  401410:\t8d 4a 01             \tlea    0x1(%rdx),%ecx\n  401413:\tba 00 00 00 00       \tmov    $0x0,%edx\n  401418:\tf7 f1                \tdiv    %ecx\n  40141a:\t89 55 e8             \tmov    %edx,-0x18(%rbp)\n  40141d:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n  401421:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n  401424:\t0f b6 04 02          \tmovzbl (%rdx,%rax,1),%eax\n  401428:\t0f b6 c0             \tmovzbl %al,%eax\n  40142b:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n  40142e:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n  401432:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n  401435:\t0f b6 0c 02          \tmovzbl (%rdx,%rax,1),%ecx\n  401439:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n  40143d:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n  401440:\t88 0c 02             \tmov    %cl,(%rdx,%rax,1)\n  401443:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  401446:\t89 c1                \tmov    %eax,%ecx\n  401448:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n  40144c:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n  40144f:\t88 0c 02             \tmov    %cl,(%rdx,%rax,1)\n  401452:\t83 6d e4 01          \tsubl   $0x1,-0x1c(%rbp)\n  401456:\t83 7d e4 01          \tcmpl   $0x1,-0x1c(%rbp)\n  40145a:\t77 a5                \tja     401401 <simplectic_seed_fill+0x58>\n  40145c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  401460:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n  401464:\t48 8d 8a 00 01 00 00 \tlea    0x100(%rdx),%rcx\n  40146b:\tba 00 01 00 00       \tmov    $0x100,%edx\n  401470:\t48 89 c6             \tmov    %rax,%rsi\n  401473:\t48 89 cf             \tmov    %rcx,%rdi\n  401476:\te8 e5 fb ff ff       \tcallq  401060 <memcpy@plt>\n  40147b:\t90                   \tnop\n  40147c:\tc9                   \tleaveq \n  40147d:\tc3                   \tretq   ", "code_s": "void *__fastcall simplectic_seed_fill(__int64 a1, int a2) {\n  unsigned int v2;\n  int i;\n  unsigned int j;\n  char v6;\n  int v7[Number];\n  for (i = Number; i <= Number; ++i)\n    *(_BYTE *)(a1 + i) = i;\n  v7[Number] = Number;\n  v7[Number] = a2;\n  v7[Number] = a2;\n  v7[Number] = a2;\n  for (j = Number; j > Number; --j) {\n    v2 = xorshift_next(v7);\n    v6 = *(_BYTE *)(a1 + v2 % (j + Number));\n    *(_BYTE *)(a1 + v2 % (j + Number)) = *(_BYTE *)(a1 + j);\n    *(_BYTE *)(a1 + j) = v6;\n  }\n  return memcpy((void *)(a1 + Number), (const void *)a1, Number);\n}", "code_t": "void __cdecl simplectic_seed_fill(simplectic_seed_0 *sd, uint32_t seed) {\n  uint32_t v2;\n  int i;\n  uint32_t i_0;\n  uint8_t val;\n  xorshift <span class=\"supfact\">xs</span>;\n  for (i = Number; i <= Number; ++i)\n    sd->table[i] = i;\n  <span class=\"supfact\">xs</span>.x = Number;\n  <span class=\"supfact\">xs</span>.y = seed;\n  <span class=\"supfact\">xs</span>.z = seed;\n  <span class=\"supfact\">xs</span>.w = seed;\n  for (i_0 = Number; i_0 > Number; --i_0) {\n    v2 = xorshift_next(&<span class=\"supfact\">xs</span>);\n    val = sd->table[v2 % (i_0 + Number)];\n    sd->table[v2 % (i_0 + Number)] = sd->table[i_0];\n    sd->table[i_0] = val;\n  }\n  memcpy(&sd->table[Number], sd, Number);\n}", "var": [{"name": "v7", "type": "_BYTE[12]", "pred_name": "x", "ref_name": "xs", "ref_type": "struct xorshift { uint32_t x; uint32_t y; uint32_t z; uint32_t w; }"}], "body_in_train": false}, {"repo_owner": "cms-externals", "repo_name": "frontier_client", "path": "cms-externals/frontier_client/41fc641d183867082a2d741b498a5f39fe4e0cf13014c1336c343c35397375e4", "path_in_repo": "cms-externals/frontier_client//http/fn-socket.o", "objdump": "000000000000027f <frontier_connect>:\n 27f:\t55                   \tpush   %rbp\n 280:\t48 89 e5             \tmov    %rsp,%rbp\n 283:\t41 54                \tpush   %r12\n 285:\t53                   \tpush   %rbx\n 286:\t48 83 ec 40          \tsub    $0x40,%rsp\n 28a:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n 28d:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n 291:\t89 55 c8             \tmov    %edx,-0x38(%rbp)\n 294:\t89 4d bc             \tmov    %ecx,-0x44(%rbp)\n 297:\t8b 55 c8             \tmov    -0x38(%rbp),%edx\n 29a:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n 29e:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n 2a1:\t48 89 ce             \tmov    %rcx,%rsi\n 2a4:\t89 c7                \tmov    %eax,%edi\n 2a6:\te8 00 00 00 00       \tcallq  2ab <frontier_connect+0x2c>\n 2ab:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n 2ae:\t83 7d ec 00          \tcmpl   $0x0,-0x14(%rbp)\n 2b2:\t75 0a                \tjne    2be <frontier_connect+0x3f>\n 2b4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 2b9:\te9 43 02 00 00       \tjmpq   501 <frontier_connect+0x282>\n 2be:\te8 00 00 00 00       \tcallq  2c3 <frontier_connect+0x44>\n 2c3:\t8b 00                \tmov    (%rax),%eax\n 2c5:\t83 f8 73             \tcmp    $0x73,%eax\n 2c8:\t74 11                \tje     2db <frontier_connect+0x5c>\n 2ca:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 2ce:\t48 89 c7             \tmov    %rax,%rdi\n 2d1:\te8 d5 fe ff ff       \tcallq  1ab <handle_connect_error>\n 2d6:\te9 26 02 00 00       \tjmpq   501 <frontier_connect+0x282>\n 2db:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 2df:\t48 89 c7             \tmov    %rax,%rdi\n 2e2:\te8 00 00 00 00       \tcallq  2e7 <frontier_connect+0x68>\n 2e7:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n 2ea:\t49 89 c1             \tmov    %rax,%r9\n 2ed:\t41 89 d0             \tmov    %edx,%r8d\n 2f0:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 2f7 <frontier_connect+0x78>\n 2f7:\tba 6e 00 00 00       \tmov    $0x6e,%edx\n 2fc:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 303 <frontier_connect+0x84>\n 303:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 308:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 30d:\te8 00 00 00 00       \tcallq  312 <frontier_connect+0x93>\n 312:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n 315:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n 318:\t66 c7 45 e8 04 00    \tmovw   $0x4,-0x18(%rbp)\n 31e:\t66 c7 45 ea 00 00    \tmovw   $0x0,-0x16(%rbp)\n 324:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n 327:\t69 d0 e8 03 00 00    \timul   $0x3e8,%eax,%edx\n 32d:\t48 8d 45 e4          \tlea    -0x1c(%rbp),%rax\n 331:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 336:\t48 89 c7             \tmov    %rax,%rdi\n 339:\te8 00 00 00 00       \tcallq  33e <frontier_connect+0xbf>\n 33e:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n 341:\t83 7d ec 00          \tcmpl   $0x0,-0x14(%rbp)\n 345:\t79 0c                \tjns    353 <frontier_connect+0xd4>\n 347:\te8 00 00 00 00       \tcallq  34c <frontier_connect+0xcd>\n 34c:\t8b 00                \tmov    (%rax),%eax\n 34e:\t83 f8 04             \tcmp    $0x4,%eax\n 351:\t74 cb                \tje     31e <frontier_connect+0x9f>\n 353:\t83 7d ec 00          \tcmpl   $0x0,-0x14(%rbp)\n 357:\t79 56                \tjns    3af <frontier_connect+0x130>\n 359:\te8 00 00 00 00       \tcallq  35e <frontier_connect+0xdf>\n 35e:\t8b 00                \tmov    (%rax),%eax\n 360:\t89 c7                \tmov    %eax,%edi\n 362:\te8 00 00 00 00       \tcallq  367 <frontier_connect+0xe8>\n 367:\t49 89 c4             \tmov    %rax,%r12\n 36a:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 36e:\t48 89 c7             \tmov    %rax,%rdi\n 371:\te8 00 00 00 00       \tcallq  376 <frontier_connect+0xf7>\n 376:\t48 89 c3             \tmov    %rax,%rbx\n 379:\te8 00 00 00 00       \tcallq  37e <frontier_connect+0xff>\n 37e:\t8b 00                \tmov    (%rax),%eax\n 380:\t4d 89 e1             \tmov    %r12,%r9\n 383:\t49 89 d8             \tmov    %rbx,%r8\n 386:\t89 c1                \tmov    %eax,%ecx\n 388:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 38f <frontier_connect+0x110>\n 38f:\tbe 78 00 00 00       \tmov    $0x78,%esi\n 394:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 39b <frontier_connect+0x11c>\n 39b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 3a0:\te8 00 00 00 00       \tcallq  3a5 <frontier_connect+0x126>\n 3a5:\tb8 fc ff ff ff       \tmov    $0xfffffffc,%eax\n 3aa:\te9 52 01 00 00       \tjmpq   501 <frontier_connect+0x282>\n 3af:\t83 7d ec 00          \tcmpl   $0x0,-0x14(%rbp)\n 3b3:\t75 3c                \tjne    3f1 <frontier_connect+0x172>\n 3b5:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 3b9:\t48 89 c7             \tmov    %rax,%rdi\n 3bc:\te8 00 00 00 00       \tcallq  3c1 <frontier_connect+0x142>\n 3c1:\t8b 55 bc             \tmov    -0x44(%rbp),%edx\n 3c4:\t41 89 d0             \tmov    %edx,%r8d\n 3c7:\t48 89 c1             \tmov    %rax,%rcx\n 3ca:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 3d1 <frontier_connect+0x152>\n 3d1:\tbe 7d 00 00 00       \tmov    $0x7d,%esi\n 3d6:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 3dd <frontier_connect+0x15e>\n 3dd:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 3e2:\te8 00 00 00 00       \tcallq  3e7 <frontier_connect+0x168>\n 3e7:\tb8 f7 ff ff ff       \tmov    $0xfffffff7,%eax\n 3ec:\te9 10 01 00 00       \tjmpq   501 <frontier_connect+0x282>\n 3f1:\tc7 45 dc 04 00 00 00 \tmovl   $0x4,-0x24(%rbp)\n 3f8:\tc7 45 e0 00 00 00 00 \tmovl   $0x0,-0x20(%rbp)\n 3ff:\t48 8d 4d dc          \tlea    -0x24(%rbp),%rcx\n 403:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n 407:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n 40a:\t49 89 c8             \tmov    %rcx,%r8\n 40d:\t48 89 d1             \tmov    %rdx,%rcx\n 410:\tba 04 00 00 00       \tmov    $0x4,%edx\n 415:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 41a:\t89 c7                \tmov    %eax,%edi\n 41c:\te8 00 00 00 00       \tcallq  421 <frontier_connect+0x1a2>\n 421:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n 424:\t83 7d ec 00          \tcmpl   $0x0,-0x14(%rbp)\n 428:\t79 56                \tjns    480 <frontier_connect+0x201>\n 42a:\te8 00 00 00 00       \tcallq  42f <frontier_connect+0x1b0>\n 42f:\t8b 00                \tmov    (%rax),%eax\n 431:\t89 c7                \tmov    %eax,%edi\n 433:\te8 00 00 00 00       \tcallq  438 <frontier_connect+0x1b9>\n 438:\t49 89 c4             \tmov    %rax,%r12\n 43b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 43f:\t48 89 c7             \tmov    %rax,%rdi\n 442:\te8 00 00 00 00       \tcallq  447 <frontier_connect+0x1c8>\n 447:\t48 89 c3             \tmov    %rax,%rbx\n 44a:\te8 00 00 00 00       \tcallq  44f <frontier_connect+0x1d0>\n 44f:\t8b 00                \tmov    (%rax),%eax\n 451:\t4d 89 e1             \tmov    %r12,%r9\n 454:\t49 89 d8             \tmov    %rbx,%r8\n 457:\t89 c1                \tmov    %eax,%ecx\n 459:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 460 <frontier_connect+0x1e1>\n 460:\tbe 86 00 00 00       \tmov    $0x86,%esi\n 465:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 46c <frontier_connect+0x1ed>\n 46c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 471:\te8 00 00 00 00       \tcallq  476 <frontier_connect+0x1f7>\n 476:\tb8 fc ff ff ff       \tmov    $0xfffffffc,%eax\n 47b:\te9 81 00 00 00       \tjmpq   501 <frontier_connect+0x282>\n 480:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n 483:\t85 c0                \ttest   %eax,%eax\n 485:\t74 18                \tje     49f <frontier_connect+0x220>\n 487:\te8 00 00 00 00       \tcallq  48c <frontier_connect+0x20d>\n 48c:\t8b 55 e0             \tmov    -0x20(%rbp),%edx\n 48f:\t89 10                \tmov    %edx,(%rax)\n 491:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 495:\t48 89 c7             \tmov    %rax,%rdi\n 498:\te8 0e fd ff ff       \tcallq  1ab <handle_connect_error>\n 49d:\teb 62                \tjmp    501 <frontier_connect+0x282>\n 49f:\t0f b7 45 ea          \tmovzwl -0x16(%rbp),%eax\n 4a3:\t98                   \tcwtl   \n 4a4:\t83 e0 04             \tand    $0x4,%eax\n 4a7:\t85 c0                \ttest   %eax,%eax\n 4a9:\t75 29                \tjne    4d4 <frontier_connect+0x255>\n 4ab:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n 4ae:\t89 c1                \tmov    %eax,%ecx\n 4b0:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 4b7 <frontier_connect+0x238>\n 4b7:\tbe 91 00 00 00       \tmov    $0x91,%esi\n 4bc:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4c3 <frontier_connect+0x244>\n 4c3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 4c8:\te8 00 00 00 00       \tcallq  4cd <frontier_connect+0x24e>\n 4cd:\tb8 fb ff ff ff       \tmov    $0xfffffffb,%eax\n 4d2:\teb 2d                \tjmp    501 <frontier_connect+0x282>\n 4d4:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n 4d7:\t41 89 c0             \tmov    %eax,%r8d\n 4da:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 4e1 <frontier_connect+0x262>\n 4e1:\tba 95 00 00 00       \tmov    $0x95,%edx\n 4e6:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4ed <frontier_connect+0x26e>\n 4ed:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 4f2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 4f7:\te8 00 00 00 00       \tcallq  4fc <frontier_connect+0x27d>\n 4fc:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 501:\t48 83 c4 40          \tadd    $0x40,%rsp\n 505:\t5b                   \tpop    %rbx\n 506:\t41 5c                \tpop    %r12\n 508:\t5d                   \tpop    %rbp\n 509:\tc3                   \tretq   ", "code_s": "__int64 __fastcall frontier_connect(unsigned int a1, struct sockaddr *a2,\n                                    socklen_t a3, unsigned int a4) {\n  __int64 result;\n  char *v5;\n  int *v6;\n  char *v7;\n  char *v8;\n  int *v9;\n  char *v10;\n  int *v11;\n  char *v12;\n  char *v13;\n  int *v14;\n  socklen_t optlen;\n  int optval;\n  struct pollfd fds;\n  int v19;\n  v19 = connect(a1, a2, a3);\n  if (!v19)\n    return Number L;\n  if (*_errno_location() != Number)\n    return handle_connect_error(a2);\n  v5 = frontier_ipaddr(a2);\n  frontier_log(Number L, String, Number L, String, a1, v5);\n  fds.fd = a1;\n  fds.events = Number;\n  do {\n    fds.revents = Number;\n    v19 = poll(&fds, Number, Number * a4);\n  } while (v19 < Number && *_errno_location() == Number);\n  if (v19 >= Number) {\n    if (v19) {\n      optlen = Number;\n      optval = Number;\n      v19 = getsockopt(a1, Number, Number, &optval, &optlen);\n      if (v19 >= Number) {\n        if (optval) {\n          *_errno_location() = optval;\n          result = handle_connect_error(a2);\n        } else if ((fds.revents & Number) != Number) {\n          frontier_log(Number L, String, Number L, String, a1);\n          result = Number L;\n        } else {\n          frontier_setErrorMsg(String, Number L, String, a1);\n          result = Number L;\n        }\n      } else {\n        v11 = _errno_location();\n        v12 = strerror(*v11);\n        v13 = frontier_ipaddr(a2);\n        v14 = _errno_location();\n        frontier_setErrorMsg(String, Number L, String, (unsigned int)*v14, v13,\n                             v12);\n        result = Number L;\n      }\n    } else {\n      v10 = frontier_ipaddr(a2);\n      frontier_setErrorMsg(String, Number L, String, v10, a4);\n      result = Number L;\n    }\n  } else {\n    v6 = _errno_location();\n    v7 = strerror(*v6);\n    v8 = frontier_ipaddr(a2);\n    v9 = _errno_location();\n    frontier_setErrorMsg(String, Number L, String, (unsigned int)*v9, v8, v7);\n    result = Number L;\n  }\n  return result;\n}", "code_t": "int __cdecl frontier_connect(int s, const sockaddr *serv_addr,\n                             socklen_t addrlen, int timeoutsecs) {\n  int result;\n  char *v5;\n  int *v6;\n  char *v7;\n  char *v8;\n  int *v9;\n  char *v10;\n  int *v11;\n  char *v12;\n  char *v13;\n  int *v14;\n  socklen_t s_len;\n  int val;\n  pollfd <span class=\"supfact\">pfd</span>;\n  int ret;\n  ret = connect(s, serv_addr, addrlen);\n  if (!ret)\n    return Number;\n  if (*_errno_location() != Number)\n    return handle_connect_error(serv_addr);\n  v5 = frontier_ipaddr(serv_addr);\n  frontier_log(Number L, String, Number L, String, (unsigned int)s, v5);\n  <span class=\"supfact\">pfd</span>.fd = s;\n  <span class=\"supfact\">pfd</span>.events = Number;\n  do {\n    <span class=\"supfact\">pfd</span>.revents = Number;\n    ret = poll(&<span class=\"supfact\">pfd</span>, Number, Number * timeoutsecs);\n  } while (ret < Number && *_errno_location() == Number);\n  if (ret >= Number) {\n    if (ret) {\n      s_len = Number;\n      val = Number;\n      ret = getsockopt(s, Number, Number, &val, &s_len);\n      if (ret >= Number) {\n        if (val) {\n          *_errno_location() = val;\n          result = handle_connect_error(serv_addr);\n        } else if ((<span class=\"supfact\">pfd</span>.revents & Number) != Number) {\n          frontier_log(Number L, String, Number L, String, (unsigned int)s);\n          result = Number;\n        } else {\n          frontier_setErrorMsg(String, Number L, String, (unsigned int)s);\n          result = Number;\n        }\n      } else {\n        v11 = _errno_location();\n        v12 = strerror(*v11);\n        v13 = frontier_ipaddr(serv_addr);\n        v14 = _errno_location();\n        frontier_setErrorMsg(String, Number L, String, (unsigned int)*v14, v13,\n                             v12);\n        result = Number;\n      }\n    } else {\n      v10 = frontier_ipaddr(serv_addr);\n      frontier_setErrorMsg(String, Number L, String, v10,\n                           (unsigned int)timeoutsecs);\n      result = Number;\n    }\n  } else {\n    v6 = _errno_location();\n    v7 = strerror(*v6);\n    v8 = frontier_ipaddr(serv_addr);\n    v9 = _errno_location();\n    frontier_setErrorMsg(String, Number L, String, (unsigned int)*v9, v8, v7);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "fds", "type": "struct pollfd { int fd; __int16 events; __int16 revents; }", "pred_name": "pfd", "ref_name": "pfd", "ref_type": "struct pollfd { int fd; __int16 events; __int16 revents; }"}], "body_in_train": false}, {"repo_owner": "aschils", "repo_name": "packetdrill_mptcp", "path": "aschils/packetdrill_mptcp/f12586e93c870ce6d623d457774db79bece9afbd194c2c1db368116c352992a8", "path_in_repo": "aschils/packetdrill_mptcp/gtests/net/packetdrill/packet_to_string_test", "objdump": "00000000004078a2 <ipv6_to_sockaddr>:\n  4078a2:\t55                   \tpush   %rbp\n  4078a3:\t48 89 e5             \tmov    %rsp,%rbp\n  4078a6:\t48 83 ec 40          \tsub    $0x40,%rsp\n  4078aa:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n  4078ae:\t89 f0                \tmov    %esi,%eax\n  4078b0:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n  4078b4:\t48 89 4d c0          \tmov    %rcx,-0x40(%rbp)\n  4078b8:\t66 89 45 d4          \tmov    %ax,-0x2c(%rbp)\n  4078bc:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  4078c0:\tba 1c 00 00 00       \tmov    $0x1c,%edx\n  4078c5:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  4078ca:\t48 89 c7             \tmov    %rax,%rdi\n  4078cd:\te8 8e b7 ff ff       \tcallq  403060 <memset@plt>\n  4078d2:\t66 c7 45 e0 0a 00    \tmovw   $0xa,-0x20(%rbp)\n  4078d8:\t0f b7 45 d4          \tmovzwl -0x2c(%rbp),%eax\n  4078dc:\t89 c7                \tmov    %eax,%edi\n  4078de:\te8 2d b8 ff ff       \tcallq  403110 <htons@plt>\n  4078e3:\t66 89 45 e2          \tmov    %ax,-0x1e(%rbp)\n  4078e7:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  4078eb:\t48 83 c0 04          \tadd    $0x4,%rax\n  4078ef:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n  4078f3:\t48 8b 00             \tmov    (%rax),%rax\n  4078f6:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  4078fa:\t48 89 55 f0          \tmov    %rdx,-0x10(%rbp)\n  4078fe:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  407902:\tc7 00 1c 00 00 00    \tmovl   $0x1c,(%rax)\n  407908:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  40790c:\t8b 00                \tmov    (%rax),%eax\n  40790e:\t89 c2                \tmov    %eax,%edx\n  407910:\t48 8d 4d e0          \tlea    -0x20(%rbp),%rcx\n  407914:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  407918:\t48 89 ce             \tmov    %rcx,%rsi\n  40791b:\t48 89 c7             \tmov    %rax,%rdi\n  40791e:\te8 1d be ff ff       \tcallq  403740 <memcpy@plt>\n  407923:\t90                   \tnop\n  407924:\tc9                   \tleaveq \n  407925:\tc3                   \tretq   ", "code_s": "void *__fastcall ipv6_to_sockaddr(__int64 a1, uint16_t a2, void *a3,\n                                  _DWORD *a4) {\n  __int64 v4;\n  __int16 s[Number];\n  __int64 v9;\n  __int64 v10;\n  memset(s, Number, Number);\n  s[Number] = Number;\n  s[Number] = htons(a2);\n  v4 = *(_QWORD *)(a1 + Number);\n  v9 = *(_QWORD *)(a1 + Number);\n  v10 = v4;\n  *a4 = Number;\n  return memcpy(a3, s, (unsigned int)*a4);\n}", "code_t": "void __cdecl ipv6_to_sockaddr(const ip_address *ipv6, u16 port,\n                              sockaddr *address, socklen_t *length) {\n  __int64 v4;\n  sockaddr_in6 <span class=\"supfact\">sa_v6</span>;\n  memset(&<span class=\"supfact\">sa_v6</span>, Number, sizeof(<span class=\"supfact\">sa_v6</span>));\n  <span class=\"supfact\">sa_v6</span>.sin6_family = Number;\n  <span class=\"supfact\">sa_v6</span>.sin6_port = htons(port);\n  v4 = *(_QWORD *)&ipv6->ip.bytes[Number];\n  *(_QWORD *)<span class=\"supfact\">sa_v6</span>.sin6_addr.__u6_addr8 =\n      *(_QWORD *)&ipv6->ip.v4.s_addr;\n  *(_QWORD *)&<span class=\"supfact\">sa_v6</span>.sin6_addr.__u6_addr32[Number] = v4;\n  *length = Number;\n  memcpy(address, &<span class=\"supfact\">sa_v6</span>, *length);\n}", "var": [{"name": "s", "type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }", "pred_name": "addr", "ref_name": "sa_v6", "ref_type": "struct sockaddr_in6 { sa_family_t sin6_family; in_port_t sin6_port; uint32_t sin6_flowinfo; in6_addr sin6_addr; uint32_t sin6_scope_id; }"}], "body_in_train": false}, {"repo_owner": "ebe-forks", "repo_name": "ltp", "path": "ebe-forks/ltp/9328e3ee1c009af1d7eac77793edbe9d0d6bfb875df6961c07fd8f729fe3c7a1", "path_in_repo": "ebe-forks/ltp/testcases/kernel/fs/scsi/ltpscsi/scsimain.o", "objdump": "000000000000f333 <read_write_thread>:\n    f333:\t55                   \tpush   %rbp\n    f334:\t48 89 e5             \tmov    %rsp,%rbp\n    f337:\t48 81 ec a0 02 00 00 \tsub    $0x2a0,%rsp\n    f33e:\t48 89 bd 68 fd ff ff \tmov    %rdi,-0x298(%rbp)\n    f345:\t48 8b 85 68 fd ff ff \tmov    -0x298(%rbp),%rax\n    f34c:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    f350:\t48 8d 85 c0 fe ff ff \tlea    -0x140(%rbp),%rax\n    f357:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n    f35b:\t48 c7 45 b0 00 00 00 \tmovq   $0x0,-0x50(%rbp)\n    f362:\t00 \n    f363:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f367:\t8b 90 d4 00 00 00    \tmov    0xd4(%rax),%edx\n    f36d:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f371:\t8b 80 d0 00 00 00    \tmov    0xd0(%rax),%eax\n    f377:\t0f af c2             \timul   %edx,%eax\n    f37a:\t89 45 ac             \tmov    %eax,-0x54(%rbp)\n    f37d:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    f384:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f388:\t8b 50 54             \tmov    0x54(%rax),%edx\n    f38b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f38f:\t8b 40 04             \tmov    0x4(%rax),%eax\n    f392:\t29 c2                \tsub    %eax,%edx\n    f394:\t89 d0                \tmov    %edx,%eax\n    f396:\t89 45 a8             \tmov    %eax,-0x58(%rbp)\n    f399:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f39d:\tba d8 00 00 00       \tmov    $0xd8,%edx\n    f3a2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    f3a7:\t48 89 c7             \tmov    %rax,%rdi\n    f3aa:\te8 00 00 00 00       \tcallq  f3af <read_write_thread+0x7c>\n    f3af:\te8 00 00 00 00       \tcallq  f3b4 <read_write_thread+0x81>\n    f3b4:\t48 98                \tcltq   \n    f3b6:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n    f3ba:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n    f3bd:\t48 63 d0             \tmovslq %eax,%rdx\n    f3c0:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    f3c4:\t48 01 d0             \tadd    %rdx,%rax\n    f3c7:\t48 89 c7             \tmov    %rax,%rdi\n    f3ca:\te8 00 00 00 00       \tcallq  f3cf <read_write_thread+0x9c>\n    f3cf:\t48 89 c2             \tmov    %rax,%rdx\n    f3d2:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f3d6:\t48 89 50 20          \tmov    %rdx,0x20(%rax)\n    f3da:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f3de:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    f3e2:\t48 85 c0             \ttest   %rax,%rax\n    f3e5:\t75 43                \tjne    f42a <read_write_thread+0xf7>\n    f3e7:\tbf 0c 00 00 00       \tmov    $0xc,%edi\n    f3ec:\te8 00 00 00 00       \tcallq  f3f1 <read_write_thread+0xbe>\n    f3f1:\t48 89 c2             \tmov    %rax,%rdx\n    f3f4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # f3fb <read_write_thread+0xc8>\n    f3fb:\t49 89 d1             \tmov    %rdx,%r9\n    f3fe:\t41 b8 9f 1a 00 00    \tmov    $0x1a9f,%r8d\n    f404:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    f409:\tba 00 00 00 00       \tmov    $0x0,%edx\n    f40e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    f413:\t48 89 c7             \tmov    %rax,%rdi\n    f416:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    f41b:\te8 00 00 00 00       \tcallq  f420 <read_write_thread+0xed>\n    f420:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    f425:\te8 00 00 00 00       \tcallq  f42a <read_write_thread+0xf7>\n    f42a:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f42e:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    f432:\t48 89 c2             \tmov    %rax,%rdx\n    f435:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    f439:\t48 01 d0             \tadd    %rdx,%rax\n    f43c:\t48 8d 50 ff          \tlea    -0x1(%rax),%rdx\n    f440:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    f444:\t48 f7 d8             \tneg    %rax\n    f447:\t48 21 d0             \tand    %rdx,%rax\n    f44a:\t48 89 c2             \tmov    %rax,%rdx\n    f44d:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f451:\t48 89 50 18          \tmov    %rdx,0x18(%rax)\n    f455:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f459:\t8b 90 d0 00 00 00    \tmov    0xd0(%rax),%edx\n    f45f:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f463:\t89 90 b0 00 00 00    \tmov    %edx,0xb0(%rax)\n    f469:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f46d:\t8b 90 d8 00 00 00    \tmov    0xd8(%rax),%edx\n    f473:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f477:\t89 90 b4 00 00 00    \tmov    %edx,0xb4(%rax)\n    f47d:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f481:\t8b 90 dc 00 00 00    \tmov    0xdc(%rax),%edx\n    f487:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f48b:\t89 90 b8 00 00 00    \tmov    %edx,0xb8(%rax)\n    f491:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f495:\t8b 10                \tmov    (%rax),%edx\n    f497:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f49b:\t89 10                \tmov    %edx,(%rax)\n    f49d:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f4a1:\t8b 50 50             \tmov    0x50(%rax),%edx\n    f4a4:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f4a8:\t89 50 04             \tmov    %edx,0x4(%rax)\n    f4ab:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f4af:\t8b 90 18 01 00 00    \tmov    0x118(%rax),%edx\n    f4b5:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f4b9:\t89 90 d0 00 00 00    \tmov    %edx,0xd0(%rax)\n    f4bf:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f4c3:\t8b 50 0c             \tmov    0xc(%rax),%edx\n    f4c6:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f4ca:\t89 90 c4 00 00 00    \tmov    %edx,0xc4(%rax)\n    f4d0:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f4d4:\t8b 50 5c             \tmov    0x5c(%rax),%edx\n    f4d7:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f4db:\t89 90 c8 00 00 00    \tmov    %edx,0xc8(%rax)\n    f4e1:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f4e5:\t8b 90 14 01 00 00    \tmov    0x114(%rax),%edx\n    f4eb:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f4ef:\t89 90 cc 00 00 00    \tmov    %edx,0xcc(%rax)\n    f4f5:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f4f9:\t48 83 c0 28          \tadd    $0x28,%rax\n    f4fd:\t48 89 c7             \tmov    %rax,%rdi\n    f500:\te8 00 00 00 00       \tcallq  f505 <read_write_thread+0x1d2>\n    f505:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n    f508:\t83 7d a0 00          \tcmpl   $0x0,-0x60(%rbp)\n    f50c:\t74 43                \tje     f551 <read_write_thread+0x21e>\n    f50e:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n    f511:\t89 c7                \tmov    %eax,%edi\n    f513:\te8 00 00 00 00       \tcallq  f518 <read_write_thread+0x1e5>\n    f518:\t48 89 c2             \tmov    %rax,%rdx\n    f51b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # f522 <read_write_thread+0x1ef>\n    f522:\t49 89 d1             \tmov    %rdx,%r9\n    f525:\t41 b8 b1 1a 00 00    \tmov    $0x1ab1,%r8d\n    f52b:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    f530:\tba 00 00 00 00       \tmov    $0x0,%edx\n    f535:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    f53a:\t48 89 c7             \tmov    %rax,%rdi\n    f53d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    f542:\te8 00 00 00 00       \tcallq  f547 <read_write_thread+0x214>\n    f547:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    f54c:\te8 00 00 00 00       \tcallq  f551 <read_write_thread+0x21e>\n    f551:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f555:\t8b 40 20             \tmov    0x20(%rax),%eax\n    f558:\t85 c0                \ttest   %eax,%eax\n    f55a:\t75 0b                \tjne    f567 <read_write_thread+0x234>\n    f55c:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f560:\t8b 40 14             \tmov    0x14(%rax),%eax\n    f563:\t85 c0                \ttest   %eax,%eax\n    f565:\t7f 60                \tjg     f5c7 <read_write_thread+0x294>\n    f567:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f56b:\t48 83 c0 28          \tadd    $0x28,%rax\n    f56f:\t48 89 c7             \tmov    %rax,%rdi\n    f572:\te8 00 00 00 00       \tcallq  f577 <read_write_thread+0x244>\n    f577:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n    f57a:\t83 7d a0 00          \tcmpl   $0x0,-0x60(%rbp)\n    f57e:\t0f 84 8a 05 00 00    \tje     fb0e <read_write_thread+0x7db>\n    f584:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n    f587:\t89 c7                \tmov    %eax,%edi\n    f589:\te8 00 00 00 00       \tcallq  f58e <read_write_thread+0x25b>\n    f58e:\t48 89 c2             \tmov    %rax,%rdx\n    f591:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # f598 <read_write_thread+0x265>\n    f598:\t49 89 d1             \tmov    %rdx,%r9\n    f59b:\t41 b8 b6 1a 00 00    \tmov    $0x1ab6,%r8d\n    f5a1:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    f5a6:\tba 00 00 00 00       \tmov    $0x0,%edx\n    f5ab:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    f5b0:\t48 89 c7             \tmov    %rax,%rdi\n    f5b3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    f5b8:\te8 00 00 00 00       \tcallq  f5bd <read_write_thread+0x28a>\n    f5bd:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    f5c2:\te8 00 00 00 00       \tcallq  f5c7 <read_write_thread+0x294>\n    f5c7:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f5cb:\t8b 50 14             \tmov    0x14(%rax),%edx\n    f5ce:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f5d2:\t8b 80 d4 00 00 00    \tmov    0xd4(%rax),%eax\n    f5d8:\t39 c2                \tcmp    %eax,%edx\n    f5da:\t0f 4e c2             \tcmovle %edx,%eax\n    f5dd:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n    f5e0:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f5e4:\tc7 40 08 00 00 00 00 \tmovl   $0x0,0x8(%rax)\n    f5eb:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f5ef:\t8b 50 10             \tmov    0x10(%rax),%edx\n    f5f2:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f5f6:\t89 50 0c             \tmov    %edx,0xc(%rax)\n    f5f9:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f5fd:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    f600:\t89 50 10             \tmov    %edx,0x10(%rax)\n    f603:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f607:\t8b 50 10             \tmov    0x10(%rax),%edx\n    f60a:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    f60d:\t01 c2                \tadd    %eax,%edx\n    f60f:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f613:\t89 50 10             \tmov    %edx,0x10(%rax)\n    f616:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f61a:\t8b 40 14             \tmov    0x14(%rax),%eax\n    f61d:\t2b 45 f8             \tsub    -0x8(%rbp),%eax\n    f620:\t89 c2                \tmov    %eax,%edx\n    f622:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f626:\t89 50 14             \tmov    %edx,0x14(%rax)\n    f629:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    f630:\t00 \n    f631:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f635:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    f639:\t48 8d 85 70 fd ff ff \tlea    -0x290(%rbp),%rax\n    f640:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    f645:\t48 89 c7             \tmov    %rax,%rdi\n    f648:\te8 00 00 00 00       \tcallq  f64d <read_write_thread+0x31a>\n    f64d:\t89 45 a4             \tmov    %eax,-0x5c(%rbp)\n    f650:\t8b 45 a4             \tmov    -0x5c(%rbp),%eax\n    f653:\t48 98                \tcltq   \n    f655:\t48 85 c0             \ttest   %rax,%rax\n    f658:\t74 1c                \tje     f676 <read_write_thread+0x343>\n    f65a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    f65e:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    f662:\t48 89 c7             \tmov    %rax,%rdi\n    f665:\tff d2                \tcallq  *%rdx\n    f667:\t48 8d 85 70 fd ff ff \tlea    -0x290(%rbp),%rax\n    f66e:\t48 89 c7             \tmov    %rax,%rdi\n    f671:\te8 00 00 00 00       \tcallq  f676 <read_write_thread+0x343>\n    f676:\t48 8d 85 70 fd ff ff \tlea    -0x290(%rbp),%rax\n    f67d:\t48 89 c7             \tmov    %rax,%rdi\n    f680:\te8 00 00 00 00       \tcallq  f685 <read_write_thread+0x352>\n    f685:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f689:\t8b 40 08             \tmov    0x8(%rax),%eax\n    f68c:\t83 f8 02             \tcmp    $0x2,%eax\n    f68f:\t75 15                \tjne    f6a6 <read_write_thread+0x373>\n    f691:\t48 8b 55 b8          \tmov    -0x48(%rbp),%rdx\n    f695:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f699:\t48 89 d6             \tmov    %rdx,%rsi\n    f69c:\t48 89 c7             \tmov    %rax,%rdi\n    f69f:\te8 00 00 00 00       \tcallq  f6a4 <read_write_thread+0x371>\n    f6a4:\teb 75                \tjmp    f71b <read_write_thread+0x3e8>\n    f6a6:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    f6a9:\t48 8b 4d b8          \tmov    -0x48(%rbp),%rcx\n    f6ad:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f6b1:\t48 89 ce             \tmov    %rcx,%rsi\n    f6b4:\t48 89 c7             \tmov    %rax,%rdi\n    f6b7:\te8 00 00 00 00       \tcallq  f6bc <read_write_thread+0x389>\n    f6bc:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    f6bf:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f6c3:\t48 83 c0 28          \tadd    $0x28,%rax\n    f6c7:\t48 89 c7             \tmov    %rax,%rdi\n    f6ca:\te8 00 00 00 00       \tcallq  f6cf <read_write_thread+0x39c>\n    f6cf:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n    f6d2:\t83 7d a0 00          \tcmpl   $0x0,-0x60(%rbp)\n    f6d6:\t74 43                \tje     f71b <read_write_thread+0x3e8>\n    f6d8:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n    f6db:\t89 c7                \tmov    %eax,%edi\n    f6dd:\te8 00 00 00 00       \tcallq  f6e2 <read_write_thread+0x3af>\n    f6e2:\t48 89 c2             \tmov    %rax,%rdx\n    f6e5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # f6ec <read_write_thread+0x3b9>\n    f6ec:\t49 89 d1             \tmov    %rdx,%r9\n    f6ef:\t41 b8 c8 1a 00 00    \tmov    $0x1ac8,%r8d\n    f6f5:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    f6fa:\tba 00 00 00 00       \tmov    $0x0,%edx\n    f6ff:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    f704:\t48 89 c7             \tmov    %rax,%rdi\n    f707:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    f70c:\te8 00 00 00 00       \tcallq  f711 <read_write_thread+0x3de>\n    f711:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    f716:\te8 00 00 00 00       \tcallq  f71b <read_write_thread+0x3e8>\n    f71b:\t48 8d 85 70 fd ff ff \tlea    -0x290(%rbp),%rax\n    f722:\t48 89 c7             \tmov    %rax,%rdi\n    f725:\te8 00 00 00 00       \tcallq  f72a <read_write_thread+0x3f7>\n    f72a:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f72e:\t48 83 c0 78          \tadd    $0x78,%rax\n    f732:\t48 89 c7             \tmov    %rax,%rdi\n    f735:\te8 00 00 00 00       \tcallq  f73a <read_write_thread+0x407>\n    f73a:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n    f73d:\t83 7d a0 00          \tcmpl   $0x0,-0x60(%rbp)\n    f741:\t74 43                \tje     f786 <read_write_thread+0x453>\n    f743:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n    f746:\t89 c7                \tmov    %eax,%edi\n    f748:\te8 00 00 00 00       \tcallq  f74d <read_write_thread+0x41a>\n    f74d:\t48 89 c2             \tmov    %rax,%rdx\n    f750:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # f757 <read_write_thread+0x424>\n    f757:\t49 89 d1             \tmov    %rdx,%r9\n    f75a:\t41 b8 ce 1a 00 00    \tmov    $0x1ace,%r8d\n    f760:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    f765:\tba 00 00 00 00       \tmov    $0x0,%edx\n    f76a:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    f76f:\t48 89 c7             \tmov    %rax,%rdi\n    f772:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    f777:\te8 00 00 00 00       \tcallq  f77c <read_write_thread+0x449>\n    f77c:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    f781:\te8 00 00 00 00       \tcallq  f786 <read_write_thread+0x453>\n    f786:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f78a:\t8b 40 58             \tmov    0x58(%rax),%eax\n    f78d:\t83 f8 08             \tcmp    $0x8,%eax\n    f790:\t0f 84 ff 00 00 00    \tje     f895 <read_write_thread+0x562>\n    f796:\te9 d4 00 00 00       \tjmpq   f86f <read_write_thread+0x53c>\n    f79b:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    f7a2:\t00 \n    f7a3:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f7a7:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    f7ab:\t48 8d 85 e0 fd ff ff \tlea    -0x220(%rbp),%rax\n    f7b2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    f7b7:\t48 89 c7             \tmov    %rax,%rdi\n    f7ba:\te8 00 00 00 00       \tcallq  f7bf <read_write_thread+0x48c>\n    f7bf:\t89 45 98             \tmov    %eax,-0x68(%rbp)\n    f7c2:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n    f7c5:\t48 98                \tcltq   \n    f7c7:\t48 85 c0             \ttest   %rax,%rax\n    f7ca:\t74 1c                \tje     f7e8 <read_write_thread+0x4b5>\n    f7cc:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    f7d0:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    f7d4:\t48 89 c7             \tmov    %rax,%rdi\n    f7d7:\tff d2                \tcallq  *%rdx\n    f7d9:\t48 8d 85 e0 fd ff ff \tlea    -0x220(%rbp),%rax\n    f7e0:\t48 89 c7             \tmov    %rax,%rdi\n    f7e3:\te8 00 00 00 00       \tcallq  f7e8 <read_write_thread+0x4b5>\n    f7e8:\t48 8d 85 e0 fd ff ff \tlea    -0x220(%rbp),%rax\n    f7ef:\t48 89 c7             \tmov    %rax,%rdi\n    f7f2:\te8 00 00 00 00       \tcallq  f7f7 <read_write_thread+0x4c4>\n    f7f7:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f7fb:\t48 8d 50 78          \tlea    0x78(%rax),%rdx\n    f7ff:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f803:\t48 05 a0 00 00 00    \tadd    $0xa0,%rax\n    f809:\t48 89 d6             \tmov    %rdx,%rsi\n    f80c:\t48 89 c7             \tmov    %rax,%rdi\n    f80f:\te8 00 00 00 00       \tcallq  f814 <read_write_thread+0x4e1>\n    f814:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n    f817:\t83 7d a0 00          \tcmpl   $0x0,-0x60(%rbp)\n    f81b:\t74 43                \tje     f860 <read_write_thread+0x52d>\n    f81d:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n    f820:\t89 c7                \tmov    %eax,%edi\n    f822:\te8 00 00 00 00       \tcallq  f827 <read_write_thread+0x4f4>\n    f827:\t48 89 c2             \tmov    %rax,%rdx\n    f82a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # f831 <read_write_thread+0x4fe>\n    f831:\t49 89 d1             \tmov    %rdx,%r9\n    f834:\t41 b8 d8 1a 00 00    \tmov    $0x1ad8,%r8d\n    f83a:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    f83f:\tba 00 00 00 00       \tmov    $0x0,%edx\n    f844:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    f849:\t48 89 c7             \tmov    %rax,%rdi\n    f84c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    f851:\te8 00 00 00 00       \tcallq  f856 <read_write_thread+0x523>\n    f856:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    f85b:\te8 00 00 00 00       \tcallq  f860 <read_write_thread+0x52d>\n    f860:\t48 8d 85 e0 fd ff ff \tlea    -0x220(%rbp),%rax\n    f867:\t48 89 c7             \tmov    %rax,%rdi\n    f86a:\te8 00 00 00 00       \tcallq  f86f <read_write_thread+0x53c>\n    f86f:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f873:\t8b 40 70             \tmov    0x70(%rax),%eax\n    f876:\t85 c0                \ttest   %eax,%eax\n    f878:\t75 1b                \tjne    f895 <read_write_thread+0x562>\n    f87a:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f87e:\t8b 50 0c             \tmov    0xc(%rax),%edx\n    f881:\t8b 45 a8             \tmov    -0x58(%rbp),%eax\n    f884:\t01 c2                \tadd    %eax,%edx\n    f886:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f88a:\t8b 40 60             \tmov    0x60(%rax),%eax\n    f88d:\t39 c2                \tcmp    %eax,%edx\n    f88f:\t0f 85 06 ff ff ff    \tjne    f79b <read_write_thread+0x468>\n    f895:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f899:\t8b 40 70             \tmov    0x70(%rax),%eax\n    f89c:\t85 c0                \ttest   %eax,%eax\n    f89e:\t75 0b                \tjne    f8ab <read_write_thread+0x578>\n    f8a0:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f8a4:\t8b 40 64             \tmov    0x64(%rax),%eax\n    f8a7:\t85 c0                \ttest   %eax,%eax\n    f8a9:\t7f 76                \tjg     f921 <read_write_thread+0x5ee>\n    f8ab:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f8af:\t8b 40 70             \tmov    0x70(%rax),%eax\n    f8b2:\t85 c0                \ttest   %eax,%eax\n    f8b4:\t75 0b                \tjne    f8c1 <read_write_thread+0x58e>\n    f8b6:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f8ba:\tc7 40 70 01 00 00 00 \tmovl   $0x1,0x70(%rax)\n    f8c1:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f8c5:\t48 83 c0 78          \tadd    $0x78,%rax\n    f8c9:\t48 89 c7             \tmov    %rax,%rdi\n    f8cc:\te8 00 00 00 00       \tcallq  f8d1 <read_write_thread+0x59e>\n    f8d1:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n    f8d4:\t83 7d a0 00          \tcmpl   $0x0,-0x60(%rbp)\n    f8d8:\t0f 84 33 02 00 00    \tje     fb11 <read_write_thread+0x7de>\n    f8de:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n    f8e1:\t89 c7                \tmov    %eax,%edi\n    f8e3:\te8 00 00 00 00       \tcallq  f8e8 <read_write_thread+0x5b5>\n    f8e8:\t48 89 c2             \tmov    %rax,%rdx\n    f8eb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # f8f2 <read_write_thread+0x5bf>\n    f8f2:\t49 89 d1             \tmov    %rdx,%r9\n    f8f5:\t41 b8 e2 1a 00 00    \tmov    $0x1ae2,%r8d\n    f8fb:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    f900:\tba 00 00 00 00       \tmov    $0x0,%edx\n    f905:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    f90a:\t48 89 c7             \tmov    %rax,%rdi\n    f90d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    f912:\te8 00 00 00 00       \tcallq  f917 <read_write_thread+0x5e4>\n    f917:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    f91c:\te8 00 00 00 00       \tcallq  f921 <read_write_thread+0x5ee>\n    f921:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    f925:\t74 0b                \tje     f932 <read_write_thread+0x5ff>\n    f927:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f92b:\tc7 40 70 01 00 00 00 \tmovl   $0x1,0x70(%rax)\n    f932:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f936:\tc7 40 08 01 00 00 00 \tmovl   $0x1,0x8(%rax)\n    f93d:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f941:\t8b 50 60             \tmov    0x60(%rax),%edx\n    f944:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    f948:\t89 50 0c             \tmov    %edx,0xc(%rax)\n    f94b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f94f:\t8b 50 60             \tmov    0x60(%rax),%edx\n    f952:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    f955:\t01 c2                \tadd    %eax,%edx\n    f957:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f95b:\t89 50 60             \tmov    %edx,0x60(%rax)\n    f95e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f962:\t8b 40 64             \tmov    0x64(%rax),%eax\n    f965:\t2b 45 f8             \tsub    -0x8(%rbp),%eax\n    f968:\t89 c2                \tmov    %eax,%edx\n    f96a:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f96e:\t89 50 64             \tmov    %edx,0x64(%rax)\n    f971:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n    f978:\t00 \n    f979:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f97d:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    f981:\t48 8d 85 50 fe ff ff \tlea    -0x1b0(%rbp),%rax\n    f988:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    f98d:\t48 89 c7             \tmov    %rax,%rdi\n    f990:\te8 00 00 00 00       \tcallq  f995 <read_write_thread+0x662>\n    f995:\t89 45 9c             \tmov    %eax,-0x64(%rbp)\n    f998:\t8b 45 9c             \tmov    -0x64(%rbp),%eax\n    f99b:\t48 98                \tcltq   \n    f99d:\t48 85 c0             \ttest   %rax,%rax\n    f9a0:\t74 1c                \tje     f9be <read_write_thread+0x68b>\n    f9a2:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    f9a6:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    f9aa:\t48 89 c7             \tmov    %rax,%rdi\n    f9ad:\tff d2                \tcallq  *%rdx\n    f9af:\t48 8d 85 50 fe ff ff \tlea    -0x1b0(%rbp),%rax\n    f9b6:\t48 89 c7             \tmov    %rax,%rdi\n    f9b9:\te8 00 00 00 00       \tcallq  f9be <read_write_thread+0x68b>\n    f9be:\t48 8d 85 50 fe ff ff \tlea    -0x1b0(%rbp),%rax\n    f9c5:\t48 89 c7             \tmov    %rax,%rdi\n    f9c8:\te8 00 00 00 00       \tcallq  f9cd <read_write_thread+0x69a>\n    f9cd:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f9d1:\t8b 40 58             \tmov    0x58(%rax),%eax\n    f9d4:\t83 f8 02             \tcmp    $0x2,%eax\n    f9d7:\t75 18                \tjne    f9f1 <read_write_thread+0x6be>\n    f9d9:\t48 8b 55 b8          \tmov    -0x48(%rbp),%rdx\n    f9dd:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f9e1:\t48 89 d6             \tmov    %rdx,%rsi\n    f9e4:\t48 89 c7             \tmov    %rax,%rdi\n    f9e7:\te8 00 00 00 00       \tcallq  f9ec <read_write_thread+0x6b9>\n    f9ec:\te9 f1 00 00 00       \tjmpq   fae2 <read_write_thread+0x7af>\n    f9f1:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    f9f5:\t8b 40 58             \tmov    0x58(%rax),%eax\n    f9f8:\t83 f8 08             \tcmp    $0x8,%eax\n    f9fb:\t75 73                \tjne    fa70 <read_write_thread+0x73d>\n    f9fd:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    fa01:\t8b 40 68             \tmov    0x68(%rax),%eax\n    fa04:\t2b 45 f8             \tsub    -0x8(%rbp),%eax\n    fa07:\t89 c2                \tmov    %eax,%edx\n    fa09:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    fa0d:\t89 50 68             \tmov    %edx,0x68(%rax)\n    fa10:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    fa14:\t48 83 c0 78          \tadd    $0x78,%rax\n    fa18:\t48 89 c7             \tmov    %rax,%rdi\n    fa1b:\te8 00 00 00 00       \tcallq  fa20 <read_write_thread+0x6ed>\n    fa20:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n    fa23:\t83 7d a0 00          \tcmpl   $0x0,-0x60(%rbp)\n    fa27:\t0f 84 b5 00 00 00    \tje     fae2 <read_write_thread+0x7af>\n    fa2d:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n    fa30:\t89 c7                \tmov    %eax,%edi\n    fa32:\te8 00 00 00 00       \tcallq  fa37 <read_write_thread+0x704>\n    fa37:\t48 89 c2             \tmov    %rax,%rdx\n    fa3a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # fa41 <read_write_thread+0x70e>\n    fa41:\t49 89 d1             \tmov    %rdx,%r9\n    fa44:\t41 b8 f5 1a 00 00    \tmov    $0x1af5,%r8d\n    fa4a:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    fa4f:\tba 00 00 00 00       \tmov    $0x0,%edx\n    fa54:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    fa59:\t48 89 c7             \tmov    %rax,%rdi\n    fa5c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    fa61:\te8 00 00 00 00       \tcallq  fa66 <read_write_thread+0x733>\n    fa66:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    fa6b:\te8 00 00 00 00       \tcallq  fa70 <read_write_thread+0x73d>\n    fa70:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    fa73:\t48 8b 4d b8          \tmov    -0x48(%rbp),%rcx\n    fa77:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    fa7b:\t48 89 ce             \tmov    %rcx,%rsi\n    fa7e:\t48 89 c7             \tmov    %rax,%rdi\n    fa81:\te8 00 00 00 00       \tcallq  fa86 <read_write_thread+0x753>\n    fa86:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    fa8a:\t48 83 c0 78          \tadd    $0x78,%rax\n    fa8e:\t48 89 c7             \tmov    %rax,%rdi\n    fa91:\te8 00 00 00 00       \tcallq  fa96 <read_write_thread+0x763>\n    fa96:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n    fa99:\t83 7d a0 00          \tcmpl   $0x0,-0x60(%rbp)\n    fa9d:\t74 43                \tje     fae2 <read_write_thread+0x7af>\n    fa9f:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n    faa2:\t89 c7                \tmov    %eax,%edi\n    faa4:\te8 00 00 00 00       \tcallq  faa9 <read_write_thread+0x776>\n    faa9:\t48 89 c2             \tmov    %rax,%rdx\n    faac:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # fab3 <read_write_thread+0x780>\n    fab3:\t49 89 d1             \tmov    %rdx,%r9\n    fab6:\t41 b8 fa 1a 00 00    \tmov    $0x1afa,%r8d\n    fabc:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    fac1:\tba 00 00 00 00       \tmov    $0x0,%edx\n    fac6:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    facb:\t48 89 c7             \tmov    %rax,%rdi\n    face:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    fad3:\te8 00 00 00 00       \tcallq  fad8 <read_write_thread+0x7a5>\n    fad8:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    fadd:\te8 00 00 00 00       \tcallq  fae2 <read_write_thread+0x7af>\n    fae2:\t48 8d 85 50 fe ff ff \tlea    -0x1b0(%rbp),%rax\n    fae9:\t48 89 c7             \tmov    %rax,%rdi\n    faec:\te8 00 00 00 00       \tcallq  faf1 <read_write_thread+0x7be>\n    faf1:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    faf5:\t75 1d                \tjne    fb14 <read_write_thread+0x7e1>\n    faf7:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    fafb:\t48 05 a0 00 00 00    \tadd    $0xa0,%rax\n    fb01:\t48 89 c7             \tmov    %rax,%rdi\n    fb04:\te8 00 00 00 00       \tcallq  fb09 <read_write_thread+0x7d6>\n    fb09:\te9 e7 f9 ff ff       \tjmpq   f4f5 <read_write_thread+0x1c2>\n    fb0e:\t90                   \tnop\n    fb0f:\teb 04                \tjmp    fb15 <read_write_thread+0x7e2>\n    fb11:\t90                   \tnop\n    fb12:\teb 01                \tjmp    fb15 <read_write_thread+0x7e2>\n    fb14:\t90                   \tnop\n    fb15:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    fb19:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    fb1d:\t48 85 c0             \ttest   %rax,%rax\n    fb20:\t74 10                \tje     fb32 <read_write_thread+0x7ff>\n    fb22:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    fb26:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    fb2a:\t48 89 c7             \tmov    %rax,%rdi\n    fb2d:\te8 00 00 00 00       \tcallq  fb32 <read_write_thread+0x7ff>\n    fb32:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    fb36:\t48 83 c0 28          \tadd    $0x28,%rax\n    fb3a:\t48 89 c7             \tmov    %rax,%rdi\n    fb3d:\te8 00 00 00 00       \tcallq  fb42 <read_write_thread+0x80f>\n    fb42:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n    fb45:\t83 7d a0 00          \tcmpl   $0x0,-0x60(%rbp)\n    fb49:\t74 43                \tje     fb8e <read_write_thread+0x85b>\n    fb4b:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n    fb4e:\t89 c7                \tmov    %eax,%edi\n    fb50:\te8 00 00 00 00       \tcallq  fb55 <read_write_thread+0x822>\n    fb55:\t48 89 c2             \tmov    %rax,%rdx\n    fb58:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # fb5f <read_write_thread+0x82c>\n    fb5f:\t49 89 d1             \tmov    %rdx,%r9\n    fb62:\t41 b8 06 1b 00 00    \tmov    $0x1b06,%r8d\n    fb68:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    fb6d:\tba 00 00 00 00       \tmov    $0x0,%edx\n    fb72:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    fb77:\t48 89 c7             \tmov    %rax,%rdi\n    fb7a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    fb7f:\te8 00 00 00 00       \tcallq  fb84 <read_write_thread+0x851>\n    fb84:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    fb89:\te8 00 00 00 00       \tcallq  fb8e <read_write_thread+0x85b>\n    fb8e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    fb92:\t8b 40 20             \tmov    0x20(%rax),%eax\n    fb95:\t85 c0                \ttest   %eax,%eax\n    fb97:\t75 0b                \tjne    fba4 <read_write_thread+0x871>\n    fb99:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    fb9d:\tc7 40 20 01 00 00 00 \tmovl   $0x1,0x20(%rax)\n    fba4:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    fba8:\t48 83 c0 28          \tadd    $0x28,%rax\n    fbac:\t48 89 c7             \tmov    %rax,%rdi\n    fbaf:\te8 00 00 00 00       \tcallq  fbb4 <read_write_thread+0x881>\n    fbb4:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n    fbb7:\t83 7d a0 00          \tcmpl   $0x0,-0x60(%rbp)\n    fbbb:\t74 43                \tje     fc00 <read_write_thread+0x8cd>\n    fbbd:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n    fbc0:\t89 c7                \tmov    %eax,%edi\n    fbc2:\te8 00 00 00 00       \tcallq  fbc7 <read_write_thread+0x894>\n    fbc7:\t48 89 c2             \tmov    %rax,%rdx\n    fbca:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # fbd1 <read_write_thread+0x89e>\n    fbd1:\t49 89 d1             \tmov    %rdx,%r9\n    fbd4:\t41 b8 0b 1b 00 00    \tmov    $0x1b0b,%r8d\n    fbda:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    fbdf:\tba 00 00 00 00       \tmov    $0x0,%edx\n    fbe4:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    fbe9:\t48 89 c7             \tmov    %rax,%rdi\n    fbec:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    fbf1:\te8 00 00 00 00       \tcallq  fbf6 <read_write_thread+0x8c3>\n    fbf6:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    fbfb:\te8 00 00 00 00       \tcallq  fc00 <read_write_thread+0x8cd>\n    fc00:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    fc04:\t48 05 a0 00 00 00    \tadd    $0xa0,%rax\n    fc0a:\t48 89 c7             \tmov    %rax,%rdi\n    fc0d:\te8 00 00 00 00       \tcallq  fc12 <read_write_thread+0x8df>\n    fc12:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    fc16:\t75 09                \tjne    fc21 <read_write_thread+0x8ee>\n    fc18:\t48 8b 85 68 fd ff ff \tmov    -0x298(%rbp),%rax\n    fc1f:\teb 05                \tjmp    fc26 <read_write_thread+0x8f3>\n    fc21:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    fc26:\tc9                   \tleaveq \n    fc27:\tc3                   \tretq   ", "code_s": "void *__fastcall read_write_thread(void *a1) {\n  void *v1;\n  char *v2;\n  char *v3;\n  char *v4;\n  signed int v5;\n  char *v6;\n  char *v7;\n  char *v8;\n  char *v9;\n  char *v10;\n  char *v11;\n  char *v12;\n  char *v13;\n  void *result;\n  struct __jmp_buf_tag env;\n  struct __jmp_buf_tag v16;\n  int errnum;\n  int v21;\n  char v22[Number];\n  void *s;\n  char *v24;\n  __int64 v25;\n  int(__fastcall * v26)(__int64);\n  __int64 v27;\n  int(__fastcall * v28)(__int64);\n  __int64 v29;\n  int(__fastcall * v30)(__int64);\n  unsigned int v31;\n  int v32;\n  v24 = (char *)a1;\n  s = &v16.__saved_mask.__val[Number];\n  *(_QWORD *)&v22[Number] = Number L;\n  *(_QWORD *)v22 =\n      (unsigned int)(*((_DWORD *)a1 + Number) * *((_DWORD *)a1 + Number));\n  v32 = Number;\n  v21 = *((_DWORD *)a1 + Number) - *((_DWORD *)a1 + Number);\n  memset(&v16.__saved_mask.__val[Number], Number, Number);\n  *(_QWORD *)&v22[Number] = getpagesize();\n  v1 = malloc(*(int *)v22 + *(_QWORD *)&v22[Number]);\n  *((_QWORD *)s + Number) = v1;\n  if (!*((_QWORD *)s + Number)) {\n    v2 = strerror(Number);\n    fprintf(stderr, String, String, String, Number L, v2);\n    exit(Number);\n  }\n  *((_QWORD *)s + Number) =\n      (*((_QWORD *)s + Number) + *(_QWORD *)&v22[Number] - Number L) &\n      -*(_QWORD *)&v22[Number];\n  *((_DWORD *)s + Number) = *((_DWORD *)v24 + Number);\n  *((_DWORD *)s + Number) = *((_DWORD *)v24 + Number);\n  *((_DWORD *)s + Number) = *((_DWORD *)v24 + Number);\n  *(_DWORD *)s = *(_DWORD *)v24;\n  *((_DWORD *)s + Number) = *((_DWORD *)v24 + Number);\n  *((_DWORD *)s + Number) = *((_DWORD *)v24 + Number);\n  *((_DWORD *)s + Number) = *((_DWORD *)v24 + Number);\n  *((_DWORD *)s + Number) = *((_DWORD *)v24 + Number);\n  *((_DWORD *)s + Number) = *((_DWORD *)v24 + Number);\n  while (Number) {\n    errnum = pthread_mutex_lock((pthread_mutex_t *)v24 + Number);\n    if (errnum) {\n      v3 = strerror(errnum);\n      fprintf(stderr, String, String, String, Number L, v3);\n      exit(Number);\n    }\n    if (*((_DWORD *)v24 + Number) || *((int *)v24 + Number) <= Number) {\n      errnum = pthread_mutex_unlock((pthread_mutex_t *)v24 + Number);\n      if (errnum) {\n        v4 = strerror(errnum);\n        fprintf(stderr, String, String, String, Number L, v4);\n        exit(Number);\n      }\n      goto LABEL_48;\n    }\n    v5 = *((_DWORD *)v24 + Number);\n    if (*((_DWORD *)v24 + Number) <= v5)\n      v5 = *((_DWORD *)v24 + Number);\n    v31 = v5;\n    *((_DWORD *)s + Number) = Number;\n    *((_DWORD *)s + Number) = *((_DWORD *)v24 + Number);\n    *((_DWORD *)s + Number) = v31;\n    *((_DWORD *)v24 + Number) += v31;\n    *((_DWORD *)v24 + Number) -= v31;\n    v30 = cleanup_in;\n    v29 = (__int64)v24;\n    if (_sigsetjmp(&env, Number)) {\n      v30(v29);\n      _pthread_unwind_next((__pthread_unwind_buf_t *)&env);\n    }\n    _pthread_register_cancel((__pthread_unwind_buf_t *)&env);\n    if (*((_DWORD *)v24 + Number) == Number) {\n      sg_in_operation(v24, s);\n    } else {\n      v32 = normal_in_operation(v24, s, v31);\n      errnum = pthread_mutex_unlock((pthread_mutex_t *)v24 + Number);\n      if (errnum) {\n        v6 = strerror(errnum);\n        fprintf(stderr, String, String, String, Number L, v6);\n        exit(Number);\n      }\n    }\n    _pthread_unregister_cancel((__pthread_unwind_buf_t *)&env);\n    errnum = pthread_mutex_lock((pthread_mutex_t *)v24 + Number);\n    if (errnum) {\n      v7 = strerror(errnum);\n      fprintf(stderr, String, String, String, Number L, v7);\n      exit(Number);\n    }\n    if (*((_DWORD *)v24 + Number) != Number) {\n      while (!*((_DWORD *)v24 + Number) &&\n             v21 + *((_DWORD *)s + Number) != *((_DWORD *)v24 + Number)) {\n        v28 = cleanup_out;\n        v27 = (__int64)v24;\n        if (_sigsetjmp((struct __jmp_buf_tag *)&env.__saved_mask.__val[Number],\n                       Number)) {\n          v28(v27);\n          _pthread_unwind_next(\n              (__pthread_unwind_buf_t *)&env.__saved_mask.__val[Number]);\n        }\n        _pthread_register_cancel(\n            (__pthread_unwind_buf_t *)&env.__saved_mask.__val[Number]);\n        errnum = pthread_cond_wait((pthread_cond_t *)(v24 + Number),\n                                   (pthread_mutex_t *)v24 + Number);\n        if (errnum) {\n          v8 = strerror(errnum);\n          fprintf(stderr, String, String, String, Number L, v8);\n          exit(Number);\n        }\n        _pthread_unregister_cancel(\n            (__pthread_unwind_buf_t *)&env.__saved_mask.__val[Number]);\n      }\n    }\n    if (*((_DWORD *)v24 + Number) || *((int *)v24 + Number) <= Number)\n      break;\n    if (v32)\n      *((_DWORD *)v24 + Number) = Number;\n    *((_DWORD *)s + Number) = Number;\n    *((_DWORD *)s + Number) = *((_DWORD *)v24 + Number);\n    *((_DWORD *)v24 + Number) += v31;\n    *((_DWORD *)v24 + Number) -= v31;\n    v26 = cleanup_out;\n    v25 = (__int64)v24;\n    if (_sigsetjmp(&v16, Number)) {\n      v26(v25);\n      _pthread_unwind_next((__pthread_unwind_buf_t *)&v16);\n    }\n    _pthread_register_cancel((__pthread_unwind_buf_t *)&v16);\n    if (*((_DWORD *)v24 + Number) == Number) {\n      sg_out_operation(v24, s);\n    } else if (*((_DWORD *)v24 + Number) == Number) {\n      *((_DWORD *)v24 + Number) -= v31;\n      errnum = pthread_mutex_unlock((pthread_mutex_t *)v24 + Number);\n      if (errnum) {\n        v10 = strerror(errnum);\n        fprintf(stderr, String, String, String, Number L, v10);\n        exit(Number);\n      }\n    } else {\n      normal_out_operation(v24, s, v31);\n      errnum = pthread_mutex_unlock((pthread_mutex_t *)v24 + Number);\n      if (errnum) {\n        v11 = strerror(errnum);\n        fprintf(stderr, String, String, String, Number L, v11);\n        exit(Number);\n      }\n    }\n    _pthread_unregister_cancel((__pthread_unwind_buf_t *)&v16);\n    if (v32)\n      goto LABEL_48;\n    pthread_cond_broadcast((pthread_cond_t *)(v24 + Number));\n  }\n  if (!*((_DWORD *)v24 + Number))\n    *((_DWORD *)v24 + Number) = Number;\n  errnum = pthread_mutex_unlock((pthread_mutex_t *)v24 + Number);\n  if (errnum) {\n    v9 = strerror(errnum);\n    fprintf(stderr, String, String, String, Number L, v9);\n    exit(Number);\n  }\nLABEL_48:\n  if (*((_QWORD *)s + Number))\n    free(*((void **)s + Number));\n  errnum = pthread_mutex_lock((pthread_mutex_t *)v24 + Number);\n  if (errnum) {\n    v12 = strerror(errnum);\n    fprintf(stderr, String, String, String, Number L, v12);\n    exit(Number);\n  }\n  if (!*((_DWORD *)v24 + Number))\n    *((_DWORD *)v24 + Number) = Number;\n  errnum = pthread_mutex_unlock((pthread_mutex_t *)v24 + Number);\n  if (errnum) {\n    v13 = strerror(errnum);\n    fprintf(stderr, String, String, String, Number L, v13);\n    exit(Number);\n  }\n  pthread_cond_broadcast((pthread_cond_t *)(v24 + Number));\n  if (v32)\n    result = Number L;\n  else\n    result = a1;\n  return result;\n}", "code_t": "void *__cdecl read_write_thread(void *v_clp) {\n  unsigned __int8 *v1;\n  char *v2;\n  char *v3;\n  char *v4;\n  int v5;\n  char *v6;\n  char *v7;\n  char *v8;\n  char *v9;\n  char *v10;\n  char *v11;\n  char *v12;\n  char *v13;\n  void *result;\n  __pthread_unwind_buf_t <span class=\"supfact\">__cancel_buf</span>;\n  __pthread_unwind_buf_t __cancel_buf_0;\n  __pthread_unwind_buf_t <span class=\"supfact\">__cancel_buf_1</span>;\n  Rq_elem rel;\n  int status;\n  int seek_skip;\n  _BYTE sz[Number];\n  Rq_elem *rep;\n  Rq_coll *clp;\n  void *__cancel_arg_1;\n  void (*__cancel_routine_1)(void *);\n  void *__cancel_arg_0;\n  void (*__cancel_routine_0)(void *);\n  void *__cancel_arg;\n  void (*__cancel_routine)(void *);\n  int blocks;\n  int stop_after_write;\n  clp = (Rq_coll *)v_clp;\n  rep = &rel;\n  *(_QWORD *)&sz[Number] = Number L;\n  *(_QWORD *)sz =\n      (unsigned int)(*((_DWORD *)v_clp + Number) * *((_DWORD *)v_clp + Number));\n  stop_after_write = Number;\n  seek_skip = *((_DWORD *)v_clp + Number) - *((_DWORD *)v_clp + Number);\n  memset(&rel, Number, sizeof(rel));\n  *(_QWORD *)&sz[Number] = getpagesize();\n  v1 = (unsigned __int8 *)malloc(*(int *)sz + *(_QWORD *)&sz[Number]);\n  rep->alloc_bp = v1;\n  if (!rep->alloc_bp) {\n    v2 = strerror(Number);\n    fprintf(stderr, String, String, String, Number L, v2);\n    exit(Number);\n  }\n  rep->buffp =\n      (unsigned __int8 *)((__int64)&rep\n                              ->alloc_bp[*(_QWORD *)&sz[Number] - Number] &\n                          -*(_QWORD *)&sz[Number]);\n  rep->bs = clp->bs;\n  rep->fua_mode = clp->fua_mode;\n  rep->dio = clp->dio;\n  rep->infd = clp->infd;\n  rep->outfd = clp->outfd;\n  rep->debug = clp->debug;\n  rep->in_scsi_type = clp->in_scsi_type;\n  rep->out_scsi_type = clp->out_scsi_type;\n  rep->cdbsz = clp->cdbsz;\n  while (Number) {\n    status = pthread_mutex_lock(&clp->in_mutex);\n    if (status) {\n      v3 = strerror(status);\n      fprintf(stderr, String, String, String, Number L, v3);\n      exit(Number);\n    }\n    if (clp->in_stop || clp->in_count <= Number) {\n      status = pthread_mutex_unlock(&clp->in_mutex);\n      if (status) {\n        v4 = strerror(status);\n        fprintf(stderr, String, String, String, Number L, v4);\n        exit(Number);\n      }\n      goto LABEL_48;\n    }\n    v5 = clp->bpt;\n    if (clp->in_count <= v5)\n      v5 = clp->in_count;\n    blocks = v5;\n    rep->wr = Number;\n    rep->blk = clp->in_blk;\n    rep->num_blks = blocks;\n    clp->in_blk += blocks;\n    clp->in_count -= blocks;\n    __cancel_routine = (void (*)(void *))cleanup_in;\n    __cancel_arg = clp;\n    if (_sigsetjmp((struct __jmp_buf_tag *)&<span class=\"supfact\">__cancel_buf</span>,\n                   Number)) {\n      __cancel_routine(__cancel_arg);\n      _pthread_unwind_next(&<span class=\"supfact\">__cancel_buf</span>);\n    }\n    _pthread_register_cancel(&<span class=\"supfact\">__cancel_buf</span>);\n    if (clp->in_type == Number) {\n      sg_in_operation(clp, rep);\n    } else {\n      stop_after_write = normal_in_operation(clp, rep, blocks);\n      status = pthread_mutex_unlock(&clp->in_mutex);\n      if (status) {\n        v6 = strerror(status);\n        fprintf(stderr, String, String, String, Number L, v6);\n        exit(Number);\n      }\n    }\n    _pthread_unregister_cancel(&<span class=\"supfact\">__cancel_buf</span>);\n    status = pthread_mutex_lock(&clp->out_mutex);\n    if (status) {\n      v7 = strerror(status);\n      fprintf(stderr, String, String, String, Number L, v7);\n      exit(Number);\n    }\n    if (clp->out_type != Number) {\n      while (!clp->out_stop && seek_skip + rep->blk != clp->out_blk) {\n        __cancel_routine_0 = (void (*)(void *))cleanup_out;\n        __cancel_arg_0 = clp;\n        if (_sigsetjmp((struct __jmp_buf_tag *)&__cancel_buf_0, Number)) {\n          __cancel_routine_0(__cancel_arg_0);\n          _pthread_unwind_next(&__cancel_buf_0);\n        }\n        _pthread_register_cancel(&__cancel_buf_0);\n        status = pthread_cond_wait(&clp->out_sync_cv, &clp->out_mutex);\n        if (status) {\n          v8 = strerror(status);\n          fprintf(stderr, String, String, String, Number L, v8);\n          exit(Number);\n        }\n        _pthread_unregister_cancel(&__cancel_buf_0);\n      }\n    }\n    if (clp->out_stop || clp->out_count <= Number)\n      break;\n    if (stop_after_write)\n      clp->out_stop = Number;\n    rep->wr = Number;\n    rep->blk = clp->out_blk;\n    clp->out_blk += blocks;\n    clp->out_count -= blocks;\n    __cancel_routine_1 = (void (*)(void *))cleanup_out;\n    __cancel_arg_1 = clp;\n    if (_sigsetjmp((struct __jmp_buf_tag *)&<span class=\"supfact\">__cancel_buf_1</span>,\n                   Number)) {\n      __cancel_routine_1(__cancel_arg_1);\n      _pthread_unwind_next(&<span class=\"supfact\">__cancel_buf_1</span>);\n    }\n    _pthread_register_cancel(&<span class=\"supfact\">__cancel_buf_1</span>);\n    if (clp->out_type == Number) {\n      sg_out_operation(clp, rep);\n    } else if (clp->out_type == Number) {\n      clp->out_done_count -= blocks;\n      status = pthread_mutex_unlock(&clp->out_mutex);\n      if (status) {\n        v10 = strerror(status);\n        fprintf(stderr, String, String, String, Number L, v10);\n        exit(Number);\n      }\n    } else {\n      normal_out_operation(clp, rep, blocks);\n      status = pthread_mutex_unlock(&clp->out_mutex);\n      if (status) {\n        v11 = strerror(status);\n        fprintf(stderr, String, String, String, Number L, v11);\n        exit(Number);\n      }\n    }\n    _pthread_unregister_cancel(&<span class=\"supfact\">__cancel_buf_1</span>);\n    if (stop_after_write)\n      goto LABEL_48;\n    pthread_cond_broadcast(&clp->out_sync_cv);\n  }\n  if (!clp->out_stop)\n    clp->out_stop = Number;\n  status = pthread_mutex_unlock(&clp->out_mutex);\n  if (status) {\n    v9 = strerror(status);\n    fprintf(stderr, String, String, String, Number L, v9);\n    exit(Number);\n  }\nLABEL_48:\n  if (rep->alloc_bp)\n    free(rep->alloc_bp);\n  status = pthread_mutex_lock(&clp->in_mutex);\n  if (status) {\n    v12 = strerror(status);\n    fprintf(stderr, String, String, String, Number L, v12);\n    exit(Number);\n  }\n  if (!clp->in_stop)\n    clp->in_stop = Number;\n  status = pthread_mutex_unlock(&clp->in_mutex);\n  if (status) {\n    v13 = strerror(status);\n    fprintf(stderr, String, String, String, Number L, v13);\n    exit(Number);\n  }\n  pthread_cond_broadcast(&clp->out_sync_cv);\n  if (stop_after_write)\n    result = Number L;\n  else\n    result = v_clp;\n  return result;\n}", "var": [{"name": "env", "type": "struct __pthread_unwind_buf_t { $F375244F0743F14650A061143CBB9C02[1] __cancel_jmp_buf; void *[4] __pad; }", "pred_name": "__cancel_buf", "ref_name": "__cancel_buf", "ref_type": "struct __pthread_unwind_buf_t { $F375244F0743F14650A061143CBB9C02[1] __cancel_jmp_buf; void *[4] __pad; }"}, {"name": "v16", "type": "struct __pthread_unwind_buf_t { $F375244F0743F14650A061143CBB9C02[1] __cancel_jmp_buf; void *[4] __pad; }", "pred_name": "__cancel_arg_0", "ref_name": "__cancel_buf_1", "ref_type": "struct __pthread_unwind_buf_t { $F375244F0743F14650A061143CBB9C02[1] __cancel_jmp_buf; void *[4] __pad; }"}], "body_in_train": false}, {"repo_owner": "jaysnanavati", "repo_name": "MemoryMutationTestingFramework", "path": "jaysnanavati/MemoryMutationTestingFramework/7289c6780cc3662deccf9b64b694f18cf3b729645ee83b44e6d4f7b536cdd9c5", "path_in_repo": "jaysnanavati/MemoryMutationTestingFramework//Controller", "objdump": "0000000000404962 <inject_mutations>:\n  404962:\t55                   \tpush   %rbp\n  404963:\t48 89 e5             \tmov    %rsp,%rbp\n  404966:\t53                   \tpush   %rbx\n  404967:\t48 81 ec 08 05 00 00 \tsub    $0x508,%rsp\n  40496e:\t48 89 bd 18 fb ff ff \tmov    %rdi,-0x4e8(%rbp)\n  404975:\t48 89 b5 10 fb ff ff \tmov    %rsi,-0x4f0(%rbp)\n  40497c:\t48 89 95 08 fb ff ff \tmov    %rdx,-0x4f8(%rbp)\n  404983:\t48 89 8d 00 fb ff ff \tmov    %rcx,-0x500(%rbp)\n  40498a:\t4c 89 85 f8 fa ff ff \tmov    %r8,-0x508(%rbp)\n  404991:\t4c 89 8d f0 fa ff ff \tmov    %r9,-0x510(%rbp)\n  404998:\tc7 45 b4 c8 00 00 00 \tmovl   $0xc8,-0x4c(%rbp)\n  40499f:\tc7 45 b0 c8 00 00 00 \tmovl   $0xc8,-0x50(%rbp)\n  4049a6:\tbf 10 00 00 00       \tmov    $0x10,%edi\n  4049ab:\te8 c0 d9 ff ff       \tcallq  402370 <malloc@plt>\n  4049b0:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  4049b4:\tbf 70 00 00 00       \tmov    $0x70,%edi\n  4049b9:\te8 b2 d9 ff ff       \tcallq  402370 <malloc@plt>\n  4049be:\t48 89 c2             \tmov    %rax,%rdx\n  4049c1:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4049c5:\t48 89 10             \tmov    %rdx,(%rax)\n  4049c8:\tbf 08 00 00 00       \tmov    $0x8,%edi\n  4049cd:\te8 9e d9 ff ff       \tcallq  402370 <malloc@plt>\n  4049d2:\t48 89 c2             \tmov    %rax,%rdx\n  4049d5:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4049d9:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n  4049dd:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4049e1:\t48 8b 00             \tmov    (%rax),%rax\n  4049e4:\t48 c7 00 00 00 00 00 \tmovq   $0x0,(%rax)\n  4049eb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4049ef:\t48 8b 00             \tmov    (%rax),%rax\n  4049f2:\tc7 40 54 00 00 00 00 \tmovl   $0x0,0x54(%rax)\n  4049f9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4049fd:\t48 8b 00             \tmov    (%rax),%rax\n  404a00:\tc7 40 20 00 00 00 00 \tmovl   $0x0,0x20(%rax)\n  404a07:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404a0b:\t48 8b 00             \tmov    (%rax),%rax\n  404a0e:\tc7 40 08 00 00 00 00 \tmovl   $0x0,0x8(%rax)\n  404a15:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404a19:\t48 8b 00             \tmov    (%rax),%rax\n  404a1c:\t48 c7 40 18 00 00 00 \tmovq   $0x0,0x18(%rax)\n  404a23:\t00 \n  404a24:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n  404a27:\t48 98                \tcltq   \n  404a29:\t48 c1 e0 06          \tshl    $0x6,%rax\n  404a2d:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  404a31:\t48 8b 1a             \tmov    (%rdx),%rbx\n  404a34:\t48 89 c7             \tmov    %rax,%rdi\n  404a37:\te8 34 d9 ff ff       \tcallq  402370 <malloc@plt>\n  404a3c:\t48 89 43 10          \tmov    %rax,0x10(%rbx)\n  404a40:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n  404a43:\t48 98                \tcltq   \n  404a45:\t48 c1 e0 06          \tshl    $0x6,%rax\n  404a49:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  404a4d:\t48 8b 1a             \tmov    (%rdx),%rbx\n  404a50:\t48 89 c7             \tmov    %rax,%rdi\n  404a53:\te8 18 d9 ff ff       \tcallq  402370 <malloc@plt>\n  404a58:\t48 89 43 18          \tmov    %rax,0x18(%rbx)\n  404a5c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404a60:\t48 8b 00             \tmov    (%rax),%rax\n  404a63:\tc7 40 28 00 00 00 00 \tmovl   $0x0,0x28(%rax)\n  404a6a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404a6e:\t48 8b 00             \tmov    (%rax),%rax\n  404a71:\tc7 40 2c 00 00 00 00 \tmovl   $0x0,0x2c(%rax)\n  404a78:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404a7c:\t48 8b 00             \tmov    (%rax),%rax\n  404a7f:\tc7 40 40 00 00 00 00 \tmovl   $0x0,0x40(%rax)\n  404a86:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404a8a:\t48 8b 00             \tmov    (%rax),%rax\n  404a8d:\tc7 40 30 00 00 00 00 \tmovl   $0x0,0x30(%rax)\n  404a94:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404a98:\t48 8b 00             \tmov    (%rax),%rax\n  404a9b:\tc7 40 34 00 00 00 00 \tmovl   $0x0,0x34(%rax)\n  404aa2:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404aa6:\t48 8b 00             \tmov    (%rax),%rax\n  404aa9:\tc7 40 38 00 00 00 00 \tmovl   $0x0,0x38(%rax)\n  404ab0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404ab4:\t48 8b 00             \tmov    (%rax),%rax\n  404ab7:\tc7 40 24 00 00 00 00 \tmovl   $0x0,0x24(%rax)\n  404abe:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404ac2:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  404ac6:\tc7 40 04 00 00 00 00 \tmovl   $0x0,0x4(%rax)\n  404acd:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404ad1:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  404ad5:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n  404adb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404adf:\t48 8b 00             \tmov    (%rax),%rax\n  404ae2:\tc7 40 3c 00 00 00 00 \tmovl   $0x0,0x3c(%rax)\n  404ae9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404aed:\t48 8b 00             \tmov    (%rax),%rax\n  404af0:\tc7 40 40 00 00 00 00 \tmovl   $0x0,0x40(%rax)\n  404af7:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404afb:\t48 8b 00             \tmov    (%rax),%rax\n  404afe:\tc7 40 44 00 00 00 00 \tmovl   $0x0,0x44(%rax)\n  404b05:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404b09:\t48 8b 00             \tmov    (%rax),%rax\n  404b0c:\tc7 40 48 00 00 00 00 \tmovl   $0x0,0x48(%rax)\n  404b13:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404b17:\t48 8b 00             \tmov    (%rax),%rax\n  404b1a:\tc7 40 4c 00 00 00 00 \tmovl   $0x0,0x4c(%rax)\n  404b21:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404b25:\t48 8b 00             \tmov    (%rax),%rax\n  404b28:\tc7 40 50 00 00 00 00 \tmovl   $0x0,0x50(%rax)\n  404b2f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404b33:\t48 8b 00             \tmov    (%rax),%rax\n  404b36:\tc7 40 54 00 00 00 00 \tmovl   $0x0,0x54(%rax)\n  404b3d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404b41:\t48 8b 00             \tmov    (%rax),%rax\n  404b44:\tc7 40 58 00 00 00 00 \tmovl   $0x0,0x58(%rax)\n  404b4b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404b4f:\t48 8b 00             \tmov    (%rax),%rax\n  404b52:\tc7 40 5c 00 00 00 00 \tmovl   $0x0,0x5c(%rax)\n  404b59:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404b5d:\t48 8b 00             \tmov    (%rax),%rax\n  404b60:\tc7 40 60 00 00 00 00 \tmovl   $0x0,0x60(%rax)\n  404b67:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404b6b:\t48 8b 00             \tmov    (%rax),%rax\n  404b6e:\tc7 40 64 00 00 00 00 \tmovl   $0x0,0x64(%rax)\n  404b75:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404b79:\t48 8b 00             \tmov    (%rax),%rax\n  404b7c:\tc7 40 68 00 00 00 00 \tmovl   $0x0,0x68(%rax)\n  404b83:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404b87:\t48 8b 00             \tmov    (%rax),%rax\n  404b8a:\tc7 40 6c 00 00 00 00 \tmovl   $0x0,0x6c(%rax)\n  404b91:\t48 8b 95 00 fb ff ff \tmov    -0x500(%rbp),%rdx\n  404b98:\t48 8b 85 18 fb ff ff \tmov    -0x4e8(%rbp),%rax\n  404b9f:\t49 89 d0             \tmov    %rdx,%r8\n  404ba2:\t48 89 c1             \tmov    %rax,%rcx\n  404ba5:\tba 2a 96 40 00       \tmov    $0x40962a,%edx\n  404baa:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  404baf:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  404bb4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  404bb9:\te8 b2 d8 ff ff       \tcallq  402470 <snprintf@plt>\n  404bbe:\t83 c0 01             \tadd    $0x1,%eax\n  404bc1:\t48 98                \tcltq   \n  404bc3:\t48 89 c7             \tmov    %rax,%rdi\n  404bc6:\te8 a5 d7 ff ff       \tcallq  402370 <malloc@plt>\n  404bcb:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n  404bcf:\t48 8b 8d 00 fb ff ff \tmov    -0x500(%rbp),%rcx\n  404bd6:\t48 8b 95 18 fb ff ff \tmov    -0x4e8(%rbp),%rdx\n  404bdd:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  404be1:\tbe 2a 96 40 00       \tmov    $0x40962a,%esi\n  404be6:\t48 89 c7             \tmov    %rax,%rdi\n  404be9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  404bee:\te8 5d d4 ff ff       \tcallq  402050 <sprintf@plt>\n  404bf3:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  404bf7:\t48 89 c1             \tmov    %rax,%rcx\n  404bfa:\tba 30 96 40 00       \tmov    $0x409630,%edx\n  404bff:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  404c04:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  404c09:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  404c0e:\te8 5d d8 ff ff       \tcallq  402470 <snprintf@plt>\n  404c13:\t83 c0 01             \tadd    $0x1,%eax\n  404c16:\t48 98                \tcltq   \n  404c18:\t48 89 c7             \tmov    %rax,%rdi\n  404c1b:\te8 50 d7 ff ff       \tcallq  402370 <malloc@plt>\n  404c20:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n  404c24:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n  404c28:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  404c2c:\tbe 30 96 40 00       \tmov    $0x409630,%esi\n  404c31:\t48 89 c7             \tmov    %rax,%rdi\n  404c34:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  404c39:\te8 12 d4 ff ff       \tcallq  402050 <sprintf@plt>\n  404c3e:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n  404c42:\t48 8b 85 10 fb ff ff \tmov    -0x4f0(%rbp),%rax\n  404c49:\t48 89 d6             \tmov    %rdx,%rsi\n  404c4c:\t48 89 c7             \tmov    %rax,%rdi\n  404c4f:\te8 31 e2 ff ff       \tcallq  402e85 <copy_file>\n  404c54:\t48 8b 85 18 fb ff ff \tmov    -0x4e8(%rbp),%rax\n  404c5b:\t48 89 c7             \tmov    %rax,%rdi\n  404c5e:\te8 9d d7 ff ff       \tcallq  402400 <opendir@plt>\n  404c63:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n  404c67:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n  404c6c:\t0f 85 c6 01 00 00    \tjne    404e38 <inject_mutations+0x4d6>\n  404c72:\t48 8b 05 67 76 00 00 \tmov    0x7667(%rip),%rax        # 40c2e0 <stderr@@GLIBC_2.2.5>\n  404c79:\t48 8b 95 18 fb ff ff \tmov    -0x4e8(%rbp),%rdx\n  404c80:\tbe 3c 96 40 00       \tmov    $0x40963c,%esi\n  404c85:\t48 89 c7             \tmov    %rax,%rdi\n  404c88:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  404c8d:\te8 2e d7 ff ff       \tcallq  4023c0 <fprintf@plt>\n  404c92:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  404c97:\te8 94 d6 ff ff       \tcallq  402330 <exit@plt>\n  404c9c:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  404ca0:\t48 8d 48 13          \tlea    0x13(%rax),%rcx\n  404ca4:\t48 8b 95 18 fb ff ff \tmov    -0x4e8(%rbp),%rdx\n  404cab:\t48 8d 85 b0 fb ff ff \tlea    -0x450(%rbp),%rax\n  404cb2:\tbe 2a 96 40 00       \tmov    $0x40962a,%esi\n  404cb7:\t48 89 c7             \tmov    %rax,%rdi\n  404cba:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  404cbf:\te8 8c d3 ff ff       \tcallq  402050 <sprintf@plt>\n  404cc4:\t48 8d 95 20 fb ff ff \tlea    -0x4e0(%rbp),%rdx\n  404ccb:\t48 8d 85 b0 fb ff ff \tlea    -0x450(%rbp),%rax\n  404cd2:\t48 89 d6             \tmov    %rdx,%rsi\n  404cd5:\t48 89 c7             \tmov    %rax,%rdi\n  404cd8:\te8 03 42 00 00       \tcallq  408ee0 <__stat>\n  404cdd:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n  404ce0:\t75 1e                \tjne    404d00 <inject_mutations+0x39e>\n  404ce2:\t48 8d 85 b0 fb ff ff \tlea    -0x450(%rbp),%rax\n  404ce9:\t48 89 c6             \tmov    %rax,%rsi\n  404cec:\tbf 4b 96 40 00       \tmov    $0x40964b,%edi\n  404cf1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  404cf6:\te8 35 d3 ff ff       \tcallq  402030 <printf@plt>\n  404cfb:\te9 38 01 00 00       \tjmpq   404e38 <inject_mutations+0x4d6>\n  404d00:\t8b 85 38 fb ff ff    \tmov    -0x4c8(%rbp),%eax\n  404d06:\t25 00 f0 00 00       \tand    $0xf000,%eax\n  404d0b:\t3d 00 40 00 00       \tcmp    $0x4000,%eax\n  404d10:\t0f 84 21 01 00 00    \tje     404e37 <inject_mutations+0x4d5>\n  404d16:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  404d1a:\t48 8d 50 13          \tlea    0x13(%rax),%rdx\n  404d1e:\t48 8b 85 00 fb ff ff \tmov    -0x500(%rbp),%rax\n  404d25:\t48 89 d6             \tmov    %rdx,%rsi\n  404d28:\t48 89 c7             \tmov    %rax,%rdi\n  404d2b:\te8 70 d6 ff ff       \tcallq  4023a0 <strcmp@plt>\n  404d30:\t85 c0                \ttest   %eax,%eax\n  404d32:\t0f 84 00 01 00 00    \tje     404e38 <inject_mutations+0x4d6>\n  404d38:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  404d3c:\t48 83 c0 13          \tadd    $0x13,%rax\n  404d40:\t48 89 c6             \tmov    %rax,%rsi\n  404d43:\tbf 64 96 40 00       \tmov    $0x409664,%edi\n  404d48:\te8 53 d6 ff ff       \tcallq  4023a0 <strcmp@plt>\n  404d4d:\t85 c0                \ttest   %eax,%eax\n  404d4f:\t0f 84 e3 00 00 00    \tje     404e38 <inject_mutations+0x4d6>\n  404d55:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  404d59:\t48 83 c0 13          \tadd    $0x13,%rax\n  404d5d:\tbe 2e 00 00 00       \tmov    $0x2e,%esi\n  404d62:\t48 89 c7             \tmov    %rax,%rdi\n  404d65:\te8 76 d5 ff ff       \tcallq  4022e0 <strrchr@plt>\n  404d6a:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n  404d6e:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n  404d73:\t0f 84 bf 00 00 00    \tje     404e38 <inject_mutations+0x4d6>\n  404d79:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  404d7d:\tbe 73 96 40 00       \tmov    $0x409673,%esi\n  404d82:\t48 89 c7             \tmov    %rax,%rdi\n  404d85:\te8 16 d6 ff ff       \tcallq  4023a0 <strcmp@plt>\n  404d8a:\t85 c0                \ttest   %eax,%eax\n  404d8c:\t0f 85 a6 00 00 00    \tjne    404e38 <inject_mutations+0x4d6>\n  404d92:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  404d96:\t48 83 c0 13          \tadd    $0x13,%rax\n  404d9a:\t48 89 c7             \tmov    %rax,%rdi\n  404d9d:\te8 1e d3 ff ff       \tcallq  4020c0 <strlen@plt>\n  404da2:\t48 83 c0 01          \tadd    $0x1,%rax\n  404da6:\t48 89 c7             \tmov    %rax,%rdi\n  404da9:\te8 c2 d5 ff ff       \tcallq  402370 <malloc@plt>\n  404dae:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n  404db2:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  404db6:\t48 8d 50 13          \tlea    0x13(%rax),%rdx\n  404dba:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  404dbe:\t48 89 d6             \tmov    %rdx,%rsi\n  404dc1:\t48 89 c7             \tmov    %rax,%rdi\n  404dc4:\te8 97 d4 ff ff       \tcallq  402260 <strcpy@plt>\n  404dc9:\t48 8b 95 10 fb ff ff \tmov    -0x4f0(%rbp),%rdx\n  404dd0:\t48 8d 85 b0 fb ff ff \tlea    -0x450(%rbp),%rax\n  404dd7:\t48 89 d6             \tmov    %rdx,%rsi\n  404dda:\t48 89 c7             \tmov    %rax,%rdi\n  404ddd:\te8 a3 e0 ff ff       \tcallq  402e85 <copy_file>\n  404de2:\t4c 8b 4d e8          \tmov    -0x18(%rbp),%r9\n  404de6:\t4c 8b 85 f8 fa ff ff \tmov    -0x508(%rbp),%r8\n  404ded:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n  404df1:\t48 8d 95 b0 fb ff ff \tlea    -0x450(%rbp),%rdx\n  404df8:\t48 8b b5 08 fb ff ff \tmov    -0x4f8(%rbp),%rsi\n  404dff:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  404e03:\t48 83 ec 08          \tsub    $0x8,%rsp\n  404e07:\tff 75 18             \tpushq  0x18(%rbp)\n  404e0a:\tff 75 10             \tpushq  0x10(%rbp)\n  404e0d:\tff b5 f0 fa ff ff    \tpushq  -0x510(%rbp)\n  404e13:\t48 8d 7d b0          \tlea    -0x50(%rbp),%rdi\n  404e17:\t57                   \tpush   %rdi\n  404e18:\t48 8d 7d b4          \tlea    -0x4c(%rbp),%rdi\n  404e1c:\t57                   \tpush   %rdi\n  404e1d:\t48 89 c7             \tmov    %rax,%rdi\n  404e20:\te8 49 eb ff ff       \tcallq  40396e <genResultsFOM>\n  404e25:\t48 83 c4 30          \tadd    $0x30,%rsp\n  404e29:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  404e2d:\t48 89 c7             \tmov    %rax,%rdi\n  404e30:\te8 db d4 ff ff       \tcallq  402310 <free@plt>\n  404e35:\teb 01                \tjmp    404e38 <inject_mutations+0x4d6>\n  404e37:\t90                   \tnop\n  404e38:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  404e3c:\t48 89 c7             \tmov    %rax,%rdi\n  404e3f:\te8 ec d5 ff ff       \tcallq  402430 <readdir@plt>\n  404e44:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n  404e48:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n  404e4d:\t0f 85 49 fe ff ff    \tjne    404c9c <inject_mutations+0x33a>\n  404e53:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  404e57:\t48 8b 5d f8          \tmov    -0x8(%rbp),%rbx\n  404e5b:\tc9                   \tleaveq \n  404e5c:\tc3                   \tretq   ", "code_s": "__int64 *__fastcall inject_mutations(const char *a1, const char *a2,\n                                     const char *a3, const char *a4, __int64 a5,\n                                     const char *a6, const char *a7,\n                                     const char *a8) {\n  __int64 v8;\n  __int64 v9;\n  int v10;\n  int v11;\n  size_t v12;\n  struct stat v18;\n  char filename[Number];\n  int v20;\n  int v21;\n  char *dest;\n  char *v23;\n  struct dirent *v24;\n  DIR *dirp;\n  char *v26;\n  char *s;\n  __int64 *v28;\n  v21 = Number;\n  v20 = Number;\n  v28 = (__int64 *)malloc(Number);\n  *v28 = (__int64)malloc(Number);\n  v28[Number] = (__int64)malloc(Number);\n  *(_QWORD *)*v28 = Number L;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_QWORD *)(*v28 + Number) = Number L;\n  v8 = *v28;\n  *(_QWORD *)(v8 + Number) = malloc((__int64)v21 << Number);\n  v9 = *v28;\n  *(_QWORD *)(v9 + Number) = malloc((__int64)v20 << Number);\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(v28[Number] + Number) = Number;\n  *(_DWORD *)v28[Number] = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  *(_DWORD *)(*v28 + Number) = Number;\n  v10 = snprintf(Number L, Number L, String, a1, a4);\n  s = (char *)malloc(v10 + Number);\n  sprintf(s, String, a1, a4);\n  v11 = snprintf(Number L, Number L, String, s);\n  v26 = (char *)malloc(v11 + Number);\n  sprintf(v26, String, s);\n  copy_file(a2, v26);\n  dirp = opendir(a1);\n  if (!dirp) {\n    fprintf(stderr, String, a1);\n    exit(Number);\n  }\n  while (Number) {\n    v24 = readdir(dirp);\n    if (!v24)\n      break;\n    sprintf(filename, String, a1, v24->d_name);\n    if ((unsigned int)stat(filename, &v18) == Number) {\n      printf(String, filename);\n    } else if ((v18.st_mode & Number) != Number) {\n      if (strcmp(a4, v24->d_name)) {\n        if (strcmp(String, v24->d_name)) {\n          v23 = strrchr(v24->d_name, Number);\n          if (v23) {\n            if (!strcmp(v23, String)) {\n              v12 = strlen(v24->d_name);\n              dest = (char *)malloc(v12 + Number);\n              strcpy(dest, v24->d_name);\n              copy_file(filename, a2);\n              genResultsFOM(dest, a3, filename, (__int64)v26, a5, v28, &v21,\n                            &v20, a6, a7, a8);\n              free(dest);\n            }\n          }\n        }\n      }\n    }\n  }\n  return v28;\n}", "code_t": "MResult *__cdecl inject_mutations(char *srcDir, char *target, char *makeDir,\n                                  char *original_file_Name, Config *user_config,\n                                  char *txl_original,\n                                  char *original_file_Name_dir, char *cwd) {\n  FOMResult *v8;\n  FOMResult *v9;\n  int v10;\n  int v11;\n  size_t v12;\n  stat <span class=\"supfact\">stbuf</span>;\n  char filename_qfd[Number];\n  int survived_buffer;\n  int non_trivial_FOM_buffer;\n  char *str;\n  char *dot;\n  dirent *dp;\n  DIR *dfd;\n  char *mv_dir;\n  char *tmp;\n  MResult *mResult;\n  non_trivial_FOM_buffer = Number;\n  survived_buffer = Number;\n  mResult = (MResult *)malloc(Number);\n  mResult->fomResult = (FOMResult *)malloc(Number);\n  mResult->homResult = (HOMResult *)malloc(Number);\n  mResult->fomResult->original_source_file = Number L;\n  mResult->fomResult->mutant_kill_count = Number;\n  mResult->fomResult->total_mutants = Number;\n  mResult->fomResult->non_trivial_FOM_count = Number;\n  mResult->fomResult->survived = Number L;\n  v8 = mResult->fomResult;\n  v8->non_trivial_FOMS =\n      (Mutant *)malloc((__int64)non_trivial_FOM_buffer << Number);\n  v9 = mResult->fomResult;\n  v9->survived = (Mutant *)malloc((__int64)survived_buffer << Number);\n  mResult->fomResult->killed_by_valgrind = Number;\n  mResult->fomResult->caused_CFG_deviation = Number;\n  mResult->fomResult->survived_count = Number;\n  mResult->fomResult->total_valgrind_errors = Number;\n  mResult->fomResult->survived_caused_CFG_deviation = Number;\n  mResult->fomResult->survived_killed_by_valgrind = Number;\n  mResult->fomResult->total_tests = Number;\n  mResult->homResult->mutant_kill_count = Number;\n  mResult->homResult->total_mutants = Number;\n  mResult->fomResult->equivalent_mutants = Number;\n  mResult->fomResult->survived_count = Number;\n  mResult->fomResult->survived_SD = Number;\n  mResult->fomResult->survived_WD = Number;\n  mResult->fomResult->survived_WD_causedValgrindErrors = Number;\n  mResult->fomResult->survived_WD_caused_CFG_deviation = Number;\n  mResult->fomResult->mutant_kill_count = Number;\n  mResult->fomResult->killed_SD = Number;\n  mResult->fomResult->killed_WD = Number;\n  mResult->fomResult->killed_WD_causedValgrindErrors = Number;\n  mResult->fomResult->killed_WD_caused_CFG_deviation = Number;\n  mResult->fomResult->failed_injection = Number;\n  mResult->fomResult->dumb_mutants = Number;\n  v10 = snprintf(Number L, Number L, String, srcDir, original_file_Name);\n  tmp = (char *)malloc(v10 + Number);\n  sprintf(tmp, String, srcDir, original_file_Name);\n  v11 = snprintf(Number L, Number L, String, tmp);\n  mv_dir = (char *)malloc(v11 + Number);\n  sprintf(mv_dir, String, tmp);\n  copy_file(target, mv_dir);\n  dfd = opendir(srcDir);\n  if (!dfd) {\n    fprintf(stderr, String, srcDir);\n    exit(Number);\n  }\n  while (Number) {\n    dp = readdir(dfd);\n    if (!dp)\n      break;\n    sprintf(filename_qfd, String, srcDir, dp->d_name);\n    if ((unsigned int)stat_0(filename_qfd, &<span class=\"supfact\">stbuf</span>) == Number) {\n      printf(String, filename_qfd);\n    } else if ((<span class=\"supfact\">stbuf</span>.st_mode & Number) != Number) {\n      if (strcmp(original_file_Name, dp->d_name)) {\n        if (strcmp(String, dp->d_name)) {\n          dot = strrchr(dp->d_name, Number);\n          if (dot) {\n            if (!strcmp(dot, String)) {\n              v12 = strlen(dp->d_name);\n              str = (char *)malloc(v12 + Number);\n              strcpy(str, dp->d_name);\n              copy_file(filename_qfd, target);\n              genResultsFOM(str, makeDir, filename_qfd, mv_dir, user_config,\n                            mResult, &non_trivial_FOM_buffer, &survived_buffer,\n                            txl_original, original_file_Name_dir, cwd);\n              free(str);\n            }\n          }\n        }\n      }\n    }\n  }\n  return mResult;\n}", "var": [{"name": "v18", "type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }", "pred_name": "sb", "ref_name": "stbuf", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }"}], "body_in_train": false}, {"repo_owner": "moonlighting-apps", "repo_name": "ffmpeg", "path": "moonlighting-apps/ffmpeg/27be02ad44b4314209c71cfbfd2844a0bf799d14bc67cb3264ffd23bf0afc0d5", "path_in_repo": "moonlighting-apps/ffmpeg//libavcodec/on2avc.o", "objdump": "0000000000006bd6 <on2avc_decode_frame>:\n    6bd6:\t48 81 ec 08 01 00 00 \tsub    $0x108,%rsp\n    6bdd:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n    6be2:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n    6be7:\t48 89 54 24 08       \tmov    %rdx,0x8(%rsp)\n    6bec:\t48 89 0c 24          \tmov    %rcx,(%rsp)\n    6bf0:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    6bf5:\t48 89 84 24 f0 00 00 \tmov    %rax,0xf0(%rsp)\n    6bfc:\t00 \n    6bfd:\t48 8b 04 24          \tmov    (%rsp),%rax\n    6c01:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    6c05:\t48 89 84 24 e8 00 00 \tmov    %rax,0xe8(%rsp)\n    6c0c:\t00 \n    6c0d:\t48 8b 04 24          \tmov    (%rsp),%rax\n    6c11:\t8b 40 20             \tmov    0x20(%rax),%eax\n    6c14:\t89 84 24 e4 00 00 00 \tmov    %eax,0xe4(%rsp)\n    6c1b:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    6c20:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n    6c24:\t48 89 84 24 d8 00 00 \tmov    %rax,0xd8(%rsp)\n    6c2b:\t00 \n    6c2c:\tc7 84 24 fc 00 00 00 \tmovl   $0x0,0xfc(%rsp)\n    6c33:\t00 00 00 00 \n    6c37:\t48 8b 84 24 d8 00 00 \tmov    0xd8(%rsp),%rax\n    6c3e:\t00 \n    6c3f:\t8b 80 f0 02 00 00    \tmov    0x2f0(%rax),%eax\n    6c45:\t85 c0                \ttest   %eax,%eax\n    6c47:\t0f 84 97 00 00 00    \tje     6ce4 <on2avc_decode_frame+0x10e>\n    6c4d:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    6c54:\t00 \n    6c55:\tc7 40 70 00 04 00 00 \tmovl   $0x400,0x70(%rax)\n    6c5c:\t48 8b 8c 24 f0 00 00 \tmov    0xf0(%rsp),%rcx\n    6c63:\t00 \n    6c64:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    6c69:\tba 00 00 00 00       \tmov    $0x0,%edx\n    6c6e:\t48 89 ce             \tmov    %rcx,%rsi\n    6c71:\t48 89 c7             \tmov    %rax,%rdi\n    6c74:\te8 00 00 00 00       \tcallq  6c79 <on2avc_decode_frame+0xa3>\n    6c79:\t89 84 24 d4 00 00 00 \tmov    %eax,0xd4(%rsp)\n    6c80:\t83 bc 24 d4 00 00 00 \tcmpl   $0x0,0xd4(%rsp)\n    6c87:\t00 \n    6c88:\t79 0c                \tjns    6c96 <on2avc_decode_frame+0xc0>\n    6c8a:\t8b 84 24 d4 00 00 00 \tmov    0xd4(%rsp),%eax\n    6c91:\te9 3e 05 00 00       \tjmpq   71d4 <on2avc_decode_frame+0x5fe>\n    6c96:\t48 8b 8c 24 f0 00 00 \tmov    0xf0(%rsp),%rcx\n    6c9d:\t00 \n    6c9e:\t8b 94 24 e4 00 00 00 \tmov    0xe4(%rsp),%edx\n    6ca5:\t48 8b b4 24 e8 00 00 \tmov    0xe8(%rsp),%rsi\n    6cac:\t00 \n    6cad:\t48 8b 84 24 d8 00 00 \tmov    0xd8(%rsp),%rax\n    6cb4:\t00 \n    6cb5:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    6cbb:\t48 89 c7             \tmov    %rax,%rdi\n    6cbe:\te8 07 fc ff ff       \tcallq  68ca <on2avc_decode_subframe>\n    6cc3:\t89 84 24 d4 00 00 00 \tmov    %eax,0xd4(%rsp)\n    6cca:\t83 bc 24 d4 00 00 00 \tcmpl   $0x0,0xd4(%rsp)\n    6cd1:\t00 \n    6cd2:\t0f 89 ea 04 00 00    \tjns    71c2 <on2avc_decode_frame+0x5ec>\n    6cd8:\t8b 84 24 d4 00 00 00 \tmov    0xd4(%rsp),%eax\n    6cdf:\te9 f0 04 00 00       \tjmpq   71d4 <on2avc_decode_frame+0x5fe>\n    6ce4:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    6ce9:\t48 89 84 24 c8 00 00 \tmov    %rax,0xc8(%rsp)\n    6cf0:\t00 \n    6cf1:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    6cf8:\t00 \n    6cf9:\t48 89 84 24 c0 00 00 \tmov    %rax,0xc0(%rsp)\n    6d00:\t00 \n    6d01:\t8b 84 24 e4 00 00 00 \tmov    0xe4(%rsp),%eax\n    6d08:\t89 84 24 bc 00 00 00 \tmov    %eax,0xbc(%rsp)\n    6d0f:\t83 bc 24 bc 00 00 00 \tcmpl   $0x0,0xbc(%rsp)\n    6d16:\t00 \n    6d17:\t79 2f                \tjns    6d48 <on2avc_decode_frame+0x172>\n    6d19:\t41 b9 87 00 00 00    \tmov    $0x87,%r9d\n    6d1f:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    6d25:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    6d2a:\tba 00 00 00 00       \tmov    $0x0,%edx\n    6d2f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    6d34:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    6d39:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6d3e:\te8 00 00 00 00       \tcallq  6d43 <on2avc_decode_frame+0x16d>\n    6d43:\te8 00 00 00 00       \tcallq  6d48 <on2avc_decode_frame+0x172>\n    6d48:\t48 8b 84 24 c8 00 00 \tmov    0xc8(%rsp),%rax\n    6d4f:\t00 \n    6d50:\t48 8b 94 24 c0 00 00 \tmov    0xc0(%rsp),%rdx\n    6d57:\t00 \n    6d58:\t48 89 10             \tmov    %rdx,(%rax)\n    6d5b:\t48 8b 84 24 c8 00 00 \tmov    0xc8(%rsp),%rax\n    6d62:\t00 \n    6d63:\t48 8b 94 24 c0 00 00 \tmov    0xc0(%rsp),%rdx\n    6d6a:\t00 \n    6d6b:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n    6d6f:\t8b 84 24 bc 00 00 00 \tmov    0xbc(%rsp),%eax\n    6d76:\t48 63 d0             \tmovslq %eax,%rdx\n    6d79:\t48 8b 84 24 c0 00 00 \tmov    0xc0(%rsp),%rax\n    6d80:\t00 \n    6d81:\t48 01 c2             \tadd    %rax,%rdx\n    6d84:\t48 8b 84 24 c8 00 00 \tmov    0xc8(%rsp),%rax\n    6d8b:\t00 \n    6d8c:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n    6d90:\t90                   \tnop\n    6d91:\te9 88 01 00 00       \tjmpq   6f1e <on2avc_decode_frame+0x348>\n    6d96:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    6d9b:\t48 89 84 24 b0 00 00 \tmov    %rax,0xb0(%rsp)\n    6da2:\t00 \n    6da3:\t48 8b 84 24 b0 00 00 \tmov    0xb0(%rsp),%rax\n    6daa:\t00 \n    6dab:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    6daf:\t48 8b 84 24 b0 00 00 \tmov    0xb0(%rsp),%rax\n    6db6:\t00 \n    6db7:\t48 8b 00             \tmov    (%rax),%rax\n    6dba:\t48 29 c2             \tsub    %rax,%rdx\n    6dbd:\t48 89 d0             \tmov    %rdx,%rax\n    6dc0:\t48 83 f8 01          \tcmp    $0x1,%rax\n    6dc4:\t7f 07                \tjg     6dcd <on2avc_decode_frame+0x1f7>\n    6dc6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6dcb:\teb 51                \tjmp    6e1e <on2avc_decode_frame+0x248>\n    6dcd:\t48 8b 84 24 b0 00 00 \tmov    0xb0(%rsp),%rax\n    6dd4:\t00 \n    6dd5:\t48 89 84 24 a8 00 00 \tmov    %rax,0xa8(%rsp)\n    6ddc:\t00 \n    6ddd:\t48 8b 84 24 a8 00 00 \tmov    0xa8(%rsp),%rax\n    6de4:\t00 \n    6de5:\t48 89 84 24 a0 00 00 \tmov    %rax,0xa0(%rsp)\n    6dec:\t00 \n    6ded:\t48 8b 84 24 a0 00 00 \tmov    0xa0(%rsp),%rax\n    6df4:\t00 \n    6df5:\t48 8b 00             \tmov    (%rax),%rax\n    6df8:\t48 8d 50 02          \tlea    0x2(%rax),%rdx\n    6dfc:\t48 8b 84 24 a0 00 00 \tmov    0xa0(%rsp),%rax\n    6e03:\t00 \n    6e04:\t48 89 10             \tmov    %rdx,(%rax)\n    6e07:\t48 8b 84 24 a0 00 00 \tmov    0xa0(%rsp),%rax\n    6e0e:\t00 \n    6e0f:\t48 8b 00             \tmov    (%rax),%rax\n    6e12:\t48 83 e8 02          \tsub    $0x2,%rax\n    6e16:\t0f b7 00             \tmovzwl (%rax),%eax\n    6e19:\t0f b7 c0             \tmovzwl %ax,%eax\n    6e1c:\t90                   \tnop\n    6e1d:\t90                   \tnop\n    6e1e:\t89 84 24 d0 00 00 00 \tmov    %eax,0xd0(%rsp)\n    6e25:\t83 bc 24 d0 00 00 00 \tcmpl   $0x0,0xd0(%rsp)\n    6e2c:\t00 \n    6e2d:\t74 37                \tje     6e66 <on2avc_decode_frame+0x290>\n    6e2f:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    6e34:\t48 89 84 24 98 00 00 \tmov    %rax,0x98(%rsp)\n    6e3b:\t00 \n    6e3c:\t48 8b 84 24 98 00 00 \tmov    0x98(%rsp),%rax\n    6e43:\t00 \n    6e44:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    6e48:\t48 8b 84 24 98 00 00 \tmov    0x98(%rsp),%rax\n    6e4f:\t00 \n    6e50:\t48 8b 00             \tmov    (%rax),%rax\n    6e53:\t48 29 c2             \tsub    %rax,%rdx\n    6e56:\t48 89 d0             \tmov    %rdx,%rax\n    6e59:\t89 c2                \tmov    %eax,%edx\n    6e5b:\t8b 84 24 d0 00 00 00 \tmov    0xd0(%rsp),%eax\n    6e62:\t39 c2                \tcmp    %eax,%edx\n    6e64:\t73 2f                \tjae    6e95 <on2avc_decode_frame+0x2bf>\n    6e66:\t8b 94 24 d0 00 00 00 \tmov    0xd0(%rsp),%edx\n    6e6d:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    6e72:\t89 d1                \tmov    %edx,%ecx\n    6e74:\tba 00 00 00 00       \tmov    $0x0,%edx\n    6e79:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    6e7e:\t48 89 c7             \tmov    %rax,%rdi\n    6e81:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6e86:\te8 00 00 00 00       \tcallq  6e8b <on2avc_decode_frame+0x2b5>\n    6e8b:\tb8 b7 b1 bb be       \tmov    $0xbebbb1b7,%eax\n    6e90:\te9 3f 03 00 00       \tjmpq   71d4 <on2avc_decode_frame+0x5fe>\n    6e95:\t83 84 24 fc 00 00 00 \taddl   $0x1,0xfc(%rsp)\n    6e9c:\t01 \n    6e9d:\t8b 84 24 d0 00 00 00 \tmov    0xd0(%rsp),%eax\n    6ea4:\t48 8d 54 24 20       \tlea    0x20(%rsp),%rdx\n    6ea9:\t48 89 94 24 90 00 00 \tmov    %rdx,0x90(%rsp)\n    6eb0:\t00 \n    6eb1:\t89 84 24 8c 00 00 00 \tmov    %eax,0x8c(%rsp)\n    6eb8:\t48 8b 84 24 90 00 00 \tmov    0x90(%rsp),%rax\n    6ebf:\t00 \n    6ec0:\t48 8b 10             \tmov    (%rax),%rdx\n    6ec3:\t48 8b 84 24 90 00 00 \tmov    0x90(%rsp),%rax\n    6eca:\t00 \n    6ecb:\t48 8b 48 08          \tmov    0x8(%rax),%rcx\n    6ecf:\t48 8b 84 24 90 00 00 \tmov    0x90(%rsp),%rax\n    6ed6:\t00 \n    6ed7:\t48 8b 00             \tmov    (%rax),%rax\n    6eda:\t48 29 c1             \tsub    %rax,%rcx\n    6edd:\t8b 84 24 8c 00 00 00 \tmov    0x8c(%rsp),%eax\n    6ee4:\t48 39 c1             \tcmp    %rax,%rcx\n    6ee7:\t7e 09                \tjle    6ef2 <on2avc_decode_frame+0x31c>\n    6ee9:\t8b 84 24 8c 00 00 00 \tmov    0x8c(%rsp),%eax\n    6ef0:\teb 1d                \tjmp    6f0f <on2avc_decode_frame+0x339>\n    6ef2:\t48 8b 84 24 90 00 00 \tmov    0x90(%rsp),%rax\n    6ef9:\t00 \n    6efa:\t48 8b 48 08          \tmov    0x8(%rax),%rcx\n    6efe:\t48 8b 84 24 90 00 00 \tmov    0x90(%rsp),%rax\n    6f05:\t00 \n    6f06:\t48 8b 00             \tmov    (%rax),%rax\n    6f09:\t48 29 c1             \tsub    %rax,%rcx\n    6f0c:\t48 89 c8             \tmov    %rcx,%rax\n    6f0f:\t48 01 c2             \tadd    %rax,%rdx\n    6f12:\t48 8b 84 24 90 00 00 \tmov    0x90(%rsp),%rax\n    6f19:\t00 \n    6f1a:\t48 89 10             \tmov    %rdx,(%rax)\n    6f1d:\t90                   \tnop\n    6f1e:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    6f23:\t48 89 84 24 80 00 00 \tmov    %rax,0x80(%rsp)\n    6f2a:\t00 \n    6f2b:\t48 8b 84 24 80 00 00 \tmov    0x80(%rsp),%rax\n    6f32:\t00 \n    6f33:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    6f37:\t48 8b 84 24 80 00 00 \tmov    0x80(%rsp),%rax\n    6f3e:\t00 \n    6f3f:\t48 8b 00             \tmov    (%rax),%rax\n    6f42:\t48 29 c2             \tsub    %rax,%rdx\n    6f45:\t48 89 d0             \tmov    %rdx,%rax\n    6f48:\t83 f8 02             \tcmp    $0x2,%eax\n    6f4b:\t0f 87 45 fe ff ff    \tja     6d96 <on2avc_decode_frame+0x1c0>\n    6f51:\t83 bc 24 fc 00 00 00 \tcmpl   $0x0,0xfc(%rsp)\n    6f58:\t00 \n    6f59:\t75 26                \tjne    6f81 <on2avc_decode_frame+0x3ab>\n    6f5b:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    6f60:\tba 00 00 00 00       \tmov    $0x0,%edx\n    6f65:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    6f6a:\t48 89 c7             \tmov    %rax,%rdi\n    6f6d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6f72:\te8 00 00 00 00       \tcallq  6f77 <on2avc_decode_frame+0x3a1>\n    6f77:\tb8 b7 b1 bb be       \tmov    $0xbebbb1b7,%eax\n    6f7c:\te9 53 02 00 00       \tjmpq   71d4 <on2avc_decode_frame+0x5fe>\n    6f81:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    6f88:\tc1 e0 0a             \tshl    $0xa,%eax\n    6f8b:\t89 c2                \tmov    %eax,%edx\n    6f8d:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    6f94:\t00 \n    6f95:\t89 50 70             \tmov    %edx,0x70(%rax)\n    6f98:\t48 8b 8c 24 f0 00 00 \tmov    0xf0(%rsp),%rcx\n    6f9f:\t00 \n    6fa0:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    6fa5:\tba 00 00 00 00       \tmov    $0x0,%edx\n    6faa:\t48 89 ce             \tmov    %rcx,%rsi\n    6fad:\t48 89 c7             \tmov    %rax,%rdi\n    6fb0:\te8 00 00 00 00       \tcallq  6fb5 <on2avc_decode_frame+0x3df>\n    6fb5:\t89 84 24 d4 00 00 00 \tmov    %eax,0xd4(%rsp)\n    6fbc:\t83 bc 24 d4 00 00 00 \tcmpl   $0x0,0xd4(%rsp)\n    6fc3:\t00 \n    6fc4:\t79 0c                \tjns    6fd2 <on2avc_decode_frame+0x3fc>\n    6fc6:\t8b 84 24 d4 00 00 00 \tmov    0xd4(%rsp),%eax\n    6fcd:\te9 02 02 00 00       \tjmpq   71d4 <on2avc_decode_frame+0x5fe>\n    6fd2:\tc7 84 24 f8 00 00 00 \tmovl   $0x0,0xf8(%rsp)\n    6fd9:\t00 00 00 00 \n    6fdd:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    6fe2:\t48 89 44 24 78       \tmov    %rax,0x78(%rsp)\n    6fe7:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    6fee:\t00 \n    6fef:\t48 89 44 24 70       \tmov    %rax,0x70(%rsp)\n    6ff4:\t8b 84 24 e4 00 00 00 \tmov    0xe4(%rsp),%eax\n    6ffb:\t89 44 24 6c          \tmov    %eax,0x6c(%rsp)\n    6fff:\t83 7c 24 6c 00       \tcmpl   $0x0,0x6c(%rsp)\n    7004:\t79 2f                \tjns    7035 <on2avc_decode_frame+0x45f>\n    7006:\t41 b9 87 00 00 00    \tmov    $0x87,%r9d\n    700c:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    7012:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    7017:\tba 00 00 00 00       \tmov    $0x0,%edx\n    701c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    7021:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    7026:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    702b:\te8 00 00 00 00       \tcallq  7030 <on2avc_decode_frame+0x45a>\n    7030:\te8 00 00 00 00       \tcallq  7035 <on2avc_decode_frame+0x45f>\n    7035:\t48 8b 44 24 78       \tmov    0x78(%rsp),%rax\n    703a:\t48 8b 54 24 70       \tmov    0x70(%rsp),%rdx\n    703f:\t48 89 10             \tmov    %rdx,(%rax)\n    7042:\t48 8b 44 24 78       \tmov    0x78(%rsp),%rax\n    7047:\t48 8b 54 24 70       \tmov    0x70(%rsp),%rdx\n    704c:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n    7050:\t8b 44 24 6c          \tmov    0x6c(%rsp),%eax\n    7054:\t48 63 d0             \tmovslq %eax,%rdx\n    7057:\t48 8b 44 24 70       \tmov    0x70(%rsp),%rax\n    705c:\t48 01 c2             \tadd    %rax,%rdx\n    705f:\t48 8b 44 24 78       \tmov    0x78(%rsp),%rax\n    7064:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n    7068:\t90                   \tnop\n    7069:\te9 2a 01 00 00       \tjmpq   7198 <on2avc_decode_frame+0x5c2>\n    706e:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    7073:\t48 89 44 24 60       \tmov    %rax,0x60(%rsp)\n    7078:\t48 8b 44 24 60       \tmov    0x60(%rsp),%rax\n    707d:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    7081:\t48 8b 44 24 60       \tmov    0x60(%rsp),%rax\n    7086:\t48 8b 00             \tmov    (%rax),%rax\n    7089:\t48 29 c2             \tsub    %rax,%rdx\n    708c:\t48 89 d0             \tmov    %rdx,%rax\n    708f:\t48 83 f8 01          \tcmp    $0x1,%rax\n    7093:\t7f 07                \tjg     709c <on2avc_decode_frame+0x4c6>\n    7095:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    709a:\teb 3c                \tjmp    70d8 <on2avc_decode_frame+0x502>\n    709c:\t48 8b 44 24 60       \tmov    0x60(%rsp),%rax\n    70a1:\t48 89 44 24 58       \tmov    %rax,0x58(%rsp)\n    70a6:\t48 8b 44 24 58       \tmov    0x58(%rsp),%rax\n    70ab:\t48 89 44 24 50       \tmov    %rax,0x50(%rsp)\n    70b0:\t48 8b 44 24 50       \tmov    0x50(%rsp),%rax\n    70b5:\t48 8b 00             \tmov    (%rax),%rax\n    70b8:\t48 8d 50 02          \tlea    0x2(%rax),%rdx\n    70bc:\t48 8b 44 24 50       \tmov    0x50(%rsp),%rax\n    70c1:\t48 89 10             \tmov    %rdx,(%rax)\n    70c4:\t48 8b 44 24 50       \tmov    0x50(%rsp),%rax\n    70c9:\t48 8b 00             \tmov    (%rax),%rax\n    70cc:\t48 83 e8 02          \tsub    $0x2,%rax\n    70d0:\t0f b7 00             \tmovzwl (%rax),%eax\n    70d3:\t0f b7 c0             \tmovzwl %ax,%eax\n    70d6:\t90                   \tnop\n    70d7:\t90                   \tnop\n    70d8:\t89 84 24 d0 00 00 00 \tmov    %eax,0xd0(%rsp)\n    70df:\t48 8b 74 24 20       \tmov    0x20(%rsp),%rsi\n    70e4:\t8b bc 24 f8 00 00 00 \tmov    0xf8(%rsp),%edi\n    70eb:\t48 8b 8c 24 f0 00 00 \tmov    0xf0(%rsp),%rcx\n    70f2:\t00 \n    70f3:\t8b 94 24 d0 00 00 00 \tmov    0xd0(%rsp),%edx\n    70fa:\t48 8b 84 24 d8 00 00 \tmov    0xd8(%rsp),%rax\n    7101:\t00 \n    7102:\t41 89 f8             \tmov    %edi,%r8d\n    7105:\t48 89 c7             \tmov    %rax,%rdi\n    7108:\te8 bd f7 ff ff       \tcallq  68ca <on2avc_decode_subframe>\n    710d:\t89 84 24 d4 00 00 00 \tmov    %eax,0xd4(%rsp)\n    7114:\t83 bc 24 d4 00 00 00 \tcmpl   $0x0,0xd4(%rsp)\n    711b:\t00 \n    711c:\t79 0c                \tjns    712a <on2avc_decode_frame+0x554>\n    711e:\t8b 84 24 d4 00 00 00 \tmov    0xd4(%rsp),%eax\n    7125:\te9 aa 00 00 00       \tjmpq   71d4 <on2avc_decode_frame+0x5fe>\n    712a:\t81 84 24 f8 00 00 00 \taddl   $0x400,0xf8(%rsp)\n    7131:\t00 04 00 00 \n    7135:\t8b 84 24 d0 00 00 00 \tmov    0xd0(%rsp),%eax\n    713c:\t48 8d 54 24 20       \tlea    0x20(%rsp),%rdx\n    7141:\t48 89 54 24 48       \tmov    %rdx,0x48(%rsp)\n    7146:\t89 44 24 44          \tmov    %eax,0x44(%rsp)\n    714a:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n    714f:\t48 8b 10             \tmov    (%rax),%rdx\n    7152:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n    7157:\t48 8b 48 08          \tmov    0x8(%rax),%rcx\n    715b:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n    7160:\t48 8b 00             \tmov    (%rax),%rax\n    7163:\t48 29 c1             \tsub    %rax,%rcx\n    7166:\t8b 44 24 44          \tmov    0x44(%rsp),%eax\n    716a:\t48 39 c1             \tcmp    %rax,%rcx\n    716d:\t7e 06                \tjle    7175 <on2avc_decode_frame+0x59f>\n    716f:\t8b 44 24 44          \tmov    0x44(%rsp),%eax\n    7173:\teb 17                \tjmp    718c <on2avc_decode_frame+0x5b6>\n    7175:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n    717a:\t48 8b 48 08          \tmov    0x8(%rax),%rcx\n    717e:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n    7183:\t48 8b 00             \tmov    (%rax),%rax\n    7186:\t48 29 c1             \tsub    %rax,%rcx\n    7189:\t48 89 c8             \tmov    %rcx,%rax\n    718c:\t48 01 c2             \tadd    %rax,%rdx\n    718f:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n    7194:\t48 89 10             \tmov    %rdx,(%rax)\n    7197:\t90                   \tnop\n    7198:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    719d:\t48 89 44 24 38       \tmov    %rax,0x38(%rsp)\n    71a2:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    71a7:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    71ab:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    71b0:\t48 8b 00             \tmov    (%rax),%rax\n    71b3:\t48 29 c2             \tsub    %rax,%rdx\n    71b6:\t48 89 d0             \tmov    %rdx,%rax\n    71b9:\t83 f8 02             \tcmp    $0x2,%eax\n    71bc:\t0f 87 ac fe ff ff    \tja     706e <on2avc_decode_frame+0x498>\n    71c2:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    71c7:\tc7 00 01 00 00 00    \tmovl   $0x1,(%rax)\n    71cd:\t8b 84 24 e4 00 00 00 \tmov    0xe4(%rsp),%eax\n    71d4:\t48 81 c4 08 01 00 00 \tadd    $0x108,%rsp\n    71db:\tc3                   \tretq   ", "code_s": "__int64 __fastcall on2avc_decode_frame(__int64 a1, __int64 a2, _DWORD *a3,\n                                       __int64 a4) {\n  unsigned int v5;\n  __int64 v6;\n  int v7;\n  __int64 v8;\n  __int64 v10;\n  __int64 v11;\n  __int64 *v12;\n  unsigned int v13;\n  __int64 *v14;\n  __int64 *v15;\n  __int64 *v16;\n  __int64 *v17;\n  int v18;\n  __int64 v19;\n  __int64 *v20;\n  __int64 *v21;\n  unsigned int v22;\n  __int64 *v23;\n  __int64 *v24;\n  __int64 *v25;\n  __int64 *v26;\n  __int64 *v27;\n  int v28;\n  __int64 v29;\n  __int64 *v30;\n  unsigned int v31;\n  unsigned int v32;\n  _DWORD *v33;\n  int v34;\n  __int64 v35;\n  __int64 v36;\n  int v37;\n  int v38;\n  v36 = a2;\n  v35 = *(_QWORD *)(a4 + Number);\n  v34 = *(_DWORD *)(a4 + Number);\n  v33 = *(_DWORD **)(a1 + Number);\n  v38 = Number;\n  if (v33[Number]) {\n    *(_DWORD *)(v36 + Number) = Number;\n    v32 = ff_get_buffer(a1, v36, Number L);\n    if ((v32 & Number) != Number)\n      return v32;\n    v32 = on2avc_decode_subframe(v33, v35, v34, v36, Number);\n    if ((v32 & Number) != Number)\n      return v32;\n  } else {\n    v30 = &v10;\n    v29 = v35;\n    v28 = v34;\n    if (v34 < Number) {\n      av_log(Number L, Number L, String, String, String, Number L);\n      abort();\n    }\n    *v30 = v29;\n    v30[Number] = v29;\n    v30[Number] = v29 + v28;\n    while (Number) {\n      v21 = &v10;\n      if ((unsigned int)(v11 - v10) <= Number)\n        break;\n      v27 = &v10;\n      if (v11 - v10 > Number) {\n        v26 = v27;\n        v25 = v27;\n        *v27 += Number L;\n        v5 = *(unsigned __int16 *)(*v25 - Number);\n      } else {\n        v5 = Number;\n      }\n      v31 = v5;\n      if (!v5 || (v24 = &v10, (int)v11 - (int)v10 < v31)) {\n        av_log(a1, Number L, String, v31);\n        return Number L;\n      }\n      ++v38;\n      v23 = &v10;\n      v22 = v31;\n      if (v11 - v10 <= v31)\n        v6 = v23[Number] - *v23;\n      else\n        v6 = v22;\n      *v23 = v6 + v10;\n    }\n    if (!v38) {\n      av_log(a1, Number L, String);\n      return Number L;\n    }\n    *(_DWORD *)(v36 + Number) = v38 << Number;\n    v32 = ff_get_buffer(a1, v36, Number L);\n    if ((v32 & Number) != Number)\n      return v32;\n    v37 = Number;\n    v20 = &v10;\n    v19 = v35;\n    v18 = v34;\n    if (v34 < Number) {\n      av_log(Number L, Number L, String, String, String, Number L);\n      abort();\n    }\n    *v20 = v19;\n    v20[Number] = v19;\n    v20[Number] = v19 + v18;\n    while (Number) {\n      v12 = &v10;\n      if ((unsigned int)(v11 - v10) <= Number)\n        break;\n      v17 = &v10;\n      if (v11 - v10 > Number) {\n        v16 = v17;\n        v15 = v17;\n        *v17 += Number L;\n        v7 = *(unsigned __int16 *)(*v15 - Number);\n      } else {\n        v7 = Number;\n      }\n      v31 = v7;\n      v32 = on2avc_decode_subframe(v33, v10, v7, v36, v37);\n      if ((v32 & Number) != Number)\n        return v32;\n      v37 += Number;\n      v14 = &v10;\n      v13 = v31;\n      if (v11 - v10 <= v31)\n        v8 = v14[Number] - *v14;\n      else\n        v8 = v13;\n      *v14 = v8 + v10;\n    }\n  }\n  *a3 = Number;\n  return (unsigned int)v34;\n}", "code_t": "int __cdecl on2avc_decode_frame(AVCodecContext_0 *avctx, void *data,\n                                int *got_frame_ptr, AVPacket_0 *avpkt) {\n  int v5;\n  signed __int64 v6;\n  int v7;\n  signed __int64 v8;\n  GetByteContext_0 <span class=\"supfact\">gb</span>;\n  GetByteContext_0 *v11;\n  unsigned int v12;\n  GetByteContext_0 *v13;\n  GetByteContext_0 *v14;\n  GetByteContext_0 *v15;\n  GetByteContext_0 *v16;\n  int v17;\n  const uint8_t *v18;\n  GetByteContext_0 *v19;\n  GetByteContext_0 *v20;\n  unsigned int v21;\n  GetByteContext_0 *v22;\n  GetByteContext_0 *v23;\n  GetByteContext_0 *v24;\n  GetByteContext_0 *v25;\n  GetByteContext_0 *v26;\n  int v27;\n  const uint8_t *v28;\n  GetByteContext_0 *v29;\n  int frame_size;\n  int ret;\n  On2AVCContext_0 *c;\n  int buf_size;\n  const uint8_t *buf;\n  AVFrame_0 *frame;\n  int audio_off;\n  int num_frames;\n  frame = (AVFrame_0 *)data;\n  buf = avpkt->data;\n  buf_size = avpkt->size;\n  c = (On2AVCContext_0 *)avctx->priv_data;\n  num_frames = Number;\n  if (c->is_av500) {\n    frame->nb_samples = Number;\n    ret = ff_get_buffer(avctx, frame, Number L);\n    if (ret < Number)\n      return ret;\n    ret = on2avc_decode_subframe(c, buf, buf_size, frame, Number);\n    if (ret < Number)\n      return ret;\n  } else {\n    v29 = &<span class=\"supfact\">gb</span>;\n    v28 = buf;\n    v27 = buf_size;\n    if (buf_size < Number) {\n      av_log(Number L, Number L, String, String, String, Number L);\n      abort();\n    }\n    v29->buffer = v28;\n    v29->buffer_start = v28;\n    v29->buffer_end = &v28[v27];\n    while (Number) {\n      v20 = &<span class=\"supfact\">gb</span>;\n      if ((unsigned int)(LODWORD(<span class=\"supfact\">gb</span>.buffer_end) -\n                         LODWORD(<span class=\"supfact\">gb</span>.buffer)) <= Number)\n        break;\n      v26 = &<span class=\"supfact\">gb</span>;\n      if (<span class=\"supfact\">gb</span>.buffer_end - <span class=\"supfact\">gb</span>.buffer > Number) {\n        v25 = v26;\n        v24 = v26;\n        v26->buffer += Number;\n        v5 = *((unsigned __int16 *)v24->buffer - Number);\n      } else {\n        v5 = Number;\n      }\n      frame_size = v5;\n      if (!v5 || (v23 = &<span class=\"supfact\">gb</span>,\n                  LODWORD(<span class=\"supfact\">gb</span>.buffer_end) -\n                          LODWORD(<span class=\"supfact\">gb</span>.buffer) <\n                      (unsigned int)frame_size)) {\n        av_log(avctx, Number L, String, (unsigned int)frame_size);\n        return Number;\n      }\n      ++num_frames;\n      v22 = &<span class=\"supfact\">gb</span>;\n      v21 = frame_size;\n      if (<span class=\"supfact\">gb</span>.buffer_end - <span class=\"supfact\">gb</span>.buffer <=\n          (unsigned int)frame_size)\n        v6 = v22->buffer_end - v22->buffer;\n      else\n        v6 = v21;\n      v22->buffer = &<span class=\"supfact\">gb</span>.buffer[v6];\n    }\n    if (!num_frames) {\n      av_log(avctx, Number L, String);\n      return Number;\n    }\n    frame->nb_samples = num_frames << Number;\n    ret = ff_get_buffer(avctx, frame, Number L);\n    if (ret < Number)\n      return ret;\n    audio_off = Number;\n    v19 = &<span class=\"supfact\">gb</span>;\n    v18 = buf;\n    v17 = buf_size;\n    if (buf_size < Number) {\n      av_log(Number L, Number L, String, String, String, Number L);\n      abort();\n    }\n    v19->buffer = v18;\n    v19->buffer_start = v18;\n    v19->buffer_end = &v18[v17];\n    while (Number) {\n      v11 = &<span class=\"supfact\">gb</span>;\n      if ((unsigned int)(LODWORD(<span class=\"supfact\">gb</span>.buffer_end) -\n                         LODWORD(<span class=\"supfact\">gb</span>.buffer)) <= Number)\n        break;\n      v16 = &<span class=\"supfact\">gb</span>;\n      if (<span class=\"supfact\">gb</span>.buffer_end - <span class=\"supfact\">gb</span>.buffer > Number) {\n        v15 = v16;\n        v14 = v16;\n        v16->buffer += Number;\n        v7 = *((unsigned __int16 *)v14->buffer - Number);\n      } else {\n        v7 = Number;\n      }\n      frame_size = v7;\n      ret = on2avc_decode_subframe(c, <span class=\"supfact\">gb</span>.buffer, v7, frame,\n                                   audio_off);\n      if (ret < Number)\n        return ret;\n      audio_off += Number;\n      v13 = &<span class=\"supfact\">gb</span>;\n      v12 = frame_size;\n      if (<span class=\"supfact\">gb</span>.buffer_end - <span class=\"supfact\">gb</span>.buffer <=\n          (unsigned int)frame_size)\n        v8 = v13->buffer_end - v13->buffer;\n      else\n        v8 = v12;\n      v13->buffer = &<span class=\"supfact\">gb</span>.buffer[v8];\n    }\n  }\n  *got_frame_ptr = Number;\n  return buf_size;\n}", "var": [{"name": "v10", "type": "struct GetByteContext_0 { const uint8_t * buffer; const uint8_t * buffer_end; const uint8_t * buffer_start; }", "pred_name": "gb", "ref_name": "gb", "ref_type": "struct GetByteContext_0 { const uint8_t * buffer; const uint8_t * buffer_end; const uint8_t * buffer_start; }"}], "body_in_train": false}, {"repo_owner": "hach-que", "repo_name": "roket3d", "path": "hach-que/roket3d/bc0af757950da88ff9718e4b0e4269fe79b7b139734beaefc3fbbc4a063b919f", "path_in_repo": "hach-que/roket3d/IDE.NET/Dependencies/Irrlicht.NET CP/Irrlicht SDK/source/Irrlicht/CGUIStaticText.o", "objdump": "000000000000065a <_ZN3irr3gui14CGUIStaticText4drawEv>:\n     65a:\t55                   \tpush   %rbp\n     65b:\t48 89 e5             \tmov    %rsp,%rbp\n     65e:\t41 57                \tpush   %r15\n     660:\t41 56                \tpush   %r14\n     662:\t41 55                \tpush   %r13\n     664:\t41 54                \tpush   %r12\n     666:\t53                   \tpush   %rbx\n     667:\t48 81 ec c8 00 00 00 \tsub    $0xc8,%rsp\n     66e:\t48 89 bd 18 ff ff ff \tmov    %rdi,-0xe8(%rbp)\n     675:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     67c:\t0f b6 80 a0 00 00 00 \tmovzbl 0xa0(%rax),%eax\n     683:\t83 f0 01             \txor    $0x1,%eax\n     686:\t84 c0                \ttest   %al,%al\n     688:\t0f 85 7b 06 00 00    \tjne    d09 <_ZN3irr3gui14CGUIStaticText4drawEv+0x6af>\n     68e:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     695:\t48 8b 80 08 01 00 00 \tmov    0x108(%rax),%rax\n     69c:\t48 8b 95 18 ff ff ff \tmov    -0xe8(%rbp),%rdx\n     6a3:\t48 8b 92 08 01 00 00 \tmov    0x108(%rdx),%rdx\n     6aa:\t48 8b 12             \tmov    (%rdx),%rdx\n     6ad:\t48 83 c2 58          \tadd    $0x58,%rdx\n     6b1:\t48 8b 12             \tmov    (%rdx),%rdx\n     6b4:\t48 89 c7             \tmov    %rax,%rdi\n     6b7:\tff d2                \tcallq  *%rdx\n     6b9:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n     6bd:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n     6c2:\t0f 84 44 06 00 00    \tje     d0c <_ZN3irr3gui14CGUIStaticText4drawEv+0x6b2>\n     6c8:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     6cf:\t48 8b 80 08 01 00 00 \tmov    0x108(%rax),%rax\n     6d6:\t48 8b 95 18 ff ff ff \tmov    -0xe8(%rbp),%rdx\n     6dd:\t48 8b 92 08 01 00 00 \tmov    0x108(%rdx),%rdx\n     6e4:\t48 8b 12             \tmov    (%rdx),%rdx\n     6e7:\t48 83 c2 28          \tadd    $0x28,%rdx\n     6eb:\t48 8b 12             \tmov    (%rdx),%rdx\n     6ee:\t48 89 c7             \tmov    %rax,%rdi\n     6f1:\tff d2                \tcallq  *%rdx\n     6f3:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n     6f7:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     6fe:\t48 8d 50 40          \tlea    0x40(%rax),%rdx\n     702:\t48 8d 85 30 ff ff ff \tlea    -0xd0(%rbp),%rax\n     709:\t48 89 d6             \tmov    %rdx,%rsi\n     70c:\t48 89 c7             \tmov    %rax,%rdi\n     70f:\te8 00 00 00 00       \tcallq  714 <_ZN3irr3gui14CGUIStaticText4drawEv+0xba>\n     714:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     71b:\t0f b6 80 1f 01 00 00 \tmovzbl 0x11f(%rax),%eax\n     722:\t84 c0                \ttest   %al,%al\n     724:\t74 39                \tje     75f <_ZN3irr3gui14CGUIStaticText4drawEv+0x105>\n     726:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n     72a:\t48 8b 00             \tmov    (%rax),%rax\n     72d:\t48 05 70 01 00 00    \tadd    $0x170,%rax\n     733:\t4c 8b 00             \tmov    (%rax),%r8\n     736:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     73d:\t48 8d 48 50          \tlea    0x50(%rax),%rcx\n     741:\t48 8d 95 30 ff ff ff \tlea    -0xd0(%rbp),%rdx\n     748:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     74f:\t8b b0 24 01 00 00    \tmov    0x124(%rax),%esi\n     755:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n     759:\t48 89 c7             \tmov    %rax,%rdi\n     75c:\t41 ff d0             \tcallq  *%r8\n     75f:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     766:\t0f b6 80 1c 01 00 00 \tmovzbl 0x11c(%rax),%eax\n     76d:\t84 c0                \ttest   %al,%al\n     76f:\t0f 84 8e 00 00 00    \tje     803 <_ZN3irr3gui14CGUIStaticText4drawEv+0x1a9>\n     775:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     779:\t48 8b 00             \tmov    (%rax),%rax\n     77c:\t48 05 90 00 00 00    \tadd    $0x90,%rax\n     782:\t48 8b 18             \tmov    (%rax),%rbx\n     785:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     78c:\t4c 8d 60 50          \tlea    0x50(%rax),%r12\n     790:\t48 8d 85 4c ff ff ff \tlea    -0xb4(%rbp),%rax\n     797:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     79c:\t48 89 c7             \tmov    %rax,%rdi\n     79f:\te8 00 00 00 00       \tcallq  7a4 <_ZN3irr3gui14CGUIStaticText4drawEv+0x14a>\n     7a4:\t48 8b b5 18 ff ff ff \tmov    -0xe8(%rbp),%rsi\n     7ab:\t48 8d 8d 30 ff ff ff \tlea    -0xd0(%rbp),%rcx\n     7b2:\t8b 95 4c ff ff ff    \tmov    -0xb4(%rbp),%edx\n     7b8:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     7bc:\t48 83 ec 08          \tsub    $0x8,%rsp\n     7c0:\t41 54                \tpush   %r12\n     7c2:\t49 89 c9             \tmov    %rcx,%r9\n     7c5:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n     7cb:\tb9 01 00 00 00       \tmov    $0x1,%ecx\n     7d0:\t48 89 c7             \tmov    %rax,%rdi\n     7d3:\tff d3                \tcallq  *%rbx\n     7d5:\t48 83 c4 10          \tadd    $0x10,%rsp\n     7d9:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     7dd:\t48 8b 00             \tmov    (%rax),%rax\n     7e0:\t48 83 c0 30          \tadd    $0x30,%rax\n     7e4:\t48 8b 10             \tmov    (%rax),%rdx\n     7e7:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     7eb:\tbe 08 00 00 00       \tmov    $0x8,%esi\n     7f0:\t48 89 c7             \tmov    %rax,%rdi\n     7f3:\tff d2                \tcallq  *%rdx\n     7f5:\t8b 95 30 ff ff ff    \tmov    -0xd0(%rbp),%edx\n     7fb:\t01 d0                \tadd    %edx,%eax\n     7fd:\t89 85 30 ff ff ff    \tmov    %eax,-0xd0(%rbp)\n     803:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     80a:\t48 05 a8 00 00 00    \tadd    $0xa8,%rax\n     810:\t48 89 c7             \tmov    %rax,%rdi\n     813:\te8 00 00 00 00       \tcallq  818 <_ZN3irr3gui14CGUIStaticText4drawEv+0x1be>\n     818:\t85 c0                \ttest   %eax,%eax\n     81a:\t0f 95 c0             \tsetne  %al\n     81d:\t84 c0                \ttest   %al,%al\n     81f:\t0f 84 d3 04 00 00    \tje     cf8 <_ZN3irr3gui14CGUIStaticText4drawEv+0x69e>\n     825:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     82c:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n     833:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n     837:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     83e:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n     845:\t48 85 c0             \ttest   %rax,%rax\n     848:\t75 20                \tjne    86a <_ZN3irr3gui14CGUIStaticText4drawEv+0x210>\n     84a:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     84e:\t48 8b 00             \tmov    (%rax),%rax\n     851:\t48 83 c0 50          \tadd    $0x50,%rax\n     855:\t48 8b 10             \tmov    (%rax),%rdx\n     858:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     85c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     861:\t48 89 c7             \tmov    %rax,%rdi\n     864:\tff d2                \tcallq  *%rdx\n     866:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n     86a:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n     86f:\t0f 84 83 04 00 00    \tje     cf8 <_ZN3irr3gui14CGUIStaticText4drawEv+0x69e>\n     875:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     87c:\t0f b6 80 1e 01 00 00 \tmovzbl 0x11e(%rax),%eax\n     883:\t83 f0 01             \txor    $0x1,%eax\n     886:\t84 c0                \ttest   %al,%al\n     888:\t0f 84 bb 01 00 00    \tje     a49 <_ZN3irr3gui14CGUIStaticText4drawEv+0x3ef>\n     88e:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     895:\t8b 80 18 01 00 00    \tmov    0x118(%rax),%eax\n     89b:\t83 f8 01             \tcmp    $0x1,%eax\n     89e:\t75 4b                \tjne    8eb <_ZN3irr3gui14CGUIStaticText4drawEv+0x291>\n     8a0:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n     8a6:\t89 c3                \tmov    %eax,%ebx\n     8a8:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     8ac:\t48 8b 00             \tmov    (%rax),%rax\n     8af:\t48 83 c0 08          \tadd    $0x8,%rax\n     8b3:\t48 8b 10             \tmov    (%rax),%rdx\n     8b6:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     8ba:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     8bf:\t48 89 c7             \tmov    %rax,%rdi\n     8c2:\tff d2                \tcallq  *%rdx\n     8c4:\t48 c1 e8 20          \tshr    $0x20,%rax\n     8c8:\t29 c3                \tsub    %eax,%ebx\n     8ca:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     8ce:\t48 8b 00             \tmov    (%rax),%rax\n     8d1:\t48 83 c0 38          \tadd    $0x38,%rax\n     8d5:\t48 8b 10             \tmov    (%rax),%rdx\n     8d8:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     8dc:\t48 89 c7             \tmov    %rax,%rdi\n     8df:\tff d2                \tcallq  *%rdx\n     8e1:\t29 c3                \tsub    %eax,%ebx\n     8e3:\t89 d8                \tmov    %ebx,%eax\n     8e5:\t89 85 34 ff ff ff    \tmov    %eax,-0xcc(%rbp)\n     8eb:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     8f2:\t8b 80 14 01 00 00    \tmov    0x114(%rax),%eax\n     8f8:\t83 f8 01             \tcmp    $0x1,%eax\n     8fb:\t75 47                \tjne    944 <_ZN3irr3gui14CGUIStaticText4drawEv+0x2ea>\n     8fd:\t8b 85 38 ff ff ff    \tmov    -0xc8(%rbp),%eax\n     903:\t41 89 c4             \tmov    %eax,%r12d\n     906:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     90a:\t48 8b 00             \tmov    (%rax),%rax\n     90d:\t48 83 c0 08          \tadd    $0x8,%rax\n     911:\t48 8b 18             \tmov    (%rax),%rbx\n     914:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     91b:\t48 05 a8 00 00 00    \tadd    $0xa8,%rax\n     921:\t48 89 c7             \tmov    %rax,%rdi\n     924:\te8 00 00 00 00       \tcallq  929 <_ZN3irr3gui14CGUIStaticText4drawEv+0x2cf>\n     929:\t48 89 c2             \tmov    %rax,%rdx\n     92c:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     930:\t48 89 d6             \tmov    %rdx,%rsi\n     933:\t48 89 c7             \tmov    %rax,%rdi\n     936:\tff d3                \tcallq  *%rbx\n     938:\t41 29 c4             \tsub    %eax,%r12d\n     93b:\t44 89 e0             \tmov    %r12d,%eax\n     93e:\t89 85 30 ff ff ff    \tmov    %eax,-0xd0(%rbp)\n     944:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     948:\t48 8b 00             \tmov    (%rax),%rax\n     94b:\t4c 8b 20             \tmov    (%rax),%r12\n     94e:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     955:\t4c 8d 68 50          \tlea    0x50(%rax),%r13\n     959:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     960:\t8b 80 18 01 00 00    \tmov    0x118(%rax),%eax\n     966:\t83 f8 02             \tcmp    $0x2,%eax\n     969:\t0f 94 c0             \tsete   %al\n     96c:\t44 0f b6 f8          \tmovzbl %al,%r15d\n     970:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     977:\t8b 80 14 01 00 00    \tmov    0x114(%rax),%eax\n     97d:\t83 f8 02             \tcmp    $0x2,%eax\n     980:\t0f 94 c0             \tsete   %al\n     983:\t44 0f b6 f0          \tmovzbl %al,%r14d\n     987:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     98e:\t0f b6 80 1d 01 00 00 \tmovzbl 0x11d(%rax),%eax\n     995:\t84 c0                \ttest   %al,%al\n     997:\t74 0f                \tje     9a8 <_ZN3irr3gui14CGUIStaticText4drawEv+0x34e>\n     999:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     9a0:\t8b 98 20 01 00 00    \tmov    0x120(%rax),%ebx\n     9a6:\teb 39                \tjmp    9e1 <_ZN3irr3gui14CGUIStaticText4drawEv+0x387>\n     9a8:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     9ac:\t48 8b 00             \tmov    (%rax),%rax\n     9af:\t48 83 c0 20          \tadd    $0x20,%rax\n     9b3:\t48 8b 10             \tmov    (%rax),%rdx\n     9b6:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     9bd:\t0f b6 80 a1 00 00 00 \tmovzbl 0xa1(%rax),%eax\n     9c4:\t84 c0                \ttest   %al,%al\n     9c6:\t74 07                \tje     9cf <_ZN3irr3gui14CGUIStaticText4drawEv+0x375>\n     9c8:\tb9 08 00 00 00       \tmov    $0x8,%ecx\n     9cd:\teb 05                \tjmp    9d4 <_ZN3irr3gui14CGUIStaticText4drawEv+0x37a>\n     9cf:\tb9 09 00 00 00       \tmov    $0x9,%ecx\n     9d4:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     9d8:\t89 ce                \tmov    %ecx,%esi\n     9da:\t48 89 c7             \tmov    %rax,%rdi\n     9dd:\tff d2                \tcallq  *%rdx\n     9df:\t89 c3                \tmov    %eax,%ebx\n     9e1:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     9e8:\t48 05 a8 00 00 00    \tadd    $0xa8,%rax\n     9ee:\t48 89 c7             \tmov    %rax,%rdi\n     9f1:\te8 00 00 00 00       \tcallq  9f6 <_ZN3irr3gui14CGUIStaticText4drawEv+0x39c>\n     9f6:\t48 89 c2             \tmov    %rax,%rdx\n     9f9:\t48 8d 85 50 ff ff ff \tlea    -0xb0(%rbp),%rax\n     a00:\t48 89 d6             \tmov    %rdx,%rsi\n     a03:\t48 89 c7             \tmov    %rax,%rdi\n     a06:\te8 00 00 00 00       \tcallq  a0b <_ZN3irr3gui14CGUIStaticText4drawEv+0x3b1>\n     a0b:\t48 8d 95 30 ff ff ff \tlea    -0xd0(%rbp),%rdx\n     a12:\t48 8d b5 50 ff ff ff \tlea    -0xb0(%rbp),%rsi\n     a19:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     a1d:\t48 83 ec 08          \tsub    $0x8,%rsp\n     a21:\t41 55                \tpush   %r13\n     a23:\t45 89 f9             \tmov    %r15d,%r9d\n     a26:\t45 89 f0             \tmov    %r14d,%r8d\n     a29:\t89 d9                \tmov    %ebx,%ecx\n     a2b:\t48 89 c7             \tmov    %rax,%rdi\n     a2e:\t41 ff d4             \tcallq  *%r12\n     a31:\t48 83 c4 10          \tadd    $0x10,%rsp\n     a35:\t48 8d 85 50 ff ff ff \tlea    -0xb0(%rbp),%rax\n     a3c:\t48 89 c7             \tmov    %rax,%rdi\n     a3f:\te8 00 00 00 00       \tcallq  a44 <_ZN3irr3gui14CGUIStaticText4drawEv+0x3ea>\n     a44:\te9 af 02 00 00       \tjmpq   cf8 <_ZN3irr3gui14CGUIStaticText4drawEv+0x69e>\n     a49:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     a50:\t48 8b 80 30 01 00 00 \tmov    0x130(%rax),%rax\n     a57:\t48 39 45 c8          \tcmp    %rax,-0x38(%rbp)\n     a5b:\t74 0f                \tje     a6c <_ZN3irr3gui14CGUIStaticText4drawEv+0x412>\n     a5d:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     a64:\t48 89 c7             \tmov    %rax,%rdi\n     a67:\te8 00 00 00 00       \tcallq  a6c <_ZN3irr3gui14CGUIStaticText4drawEv+0x412>\n     a6c:\t48 8d 95 30 ff ff ff \tlea    -0xd0(%rbp),%rdx\n     a73:\t48 8d 85 20 ff ff ff \tlea    -0xe0(%rbp),%rax\n     a7a:\t48 89 d6             \tmov    %rdx,%rsi\n     a7d:\t48 89 c7             \tmov    %rax,%rdi\n     a80:\te8 00 00 00 00       \tcallq  a85 <_ZN3irr3gui14CGUIStaticText4drawEv+0x42b>\n     a85:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     a89:\t48 8b 00             \tmov    (%rax),%rax\n     a8c:\t48 83 c0 08          \tadd    $0x8,%rax\n     a90:\t48 8b 10             \tmov    (%rax),%rdx\n     a93:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     a97:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     a9c:\t48 89 c7             \tmov    %rax,%rdi\n     a9f:\tff d2                \tcallq  *%rdx\n     aa1:\t48 c1 e8 20          \tshr    $0x20,%rax\n     aa5:\t89 c3                \tmov    %eax,%ebx\n     aa7:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     aab:\t48 8b 00             \tmov    (%rax),%rax\n     aae:\t48 83 c0 38          \tadd    $0x38,%rax\n     ab2:\t48 8b 10             \tmov    (%rax),%rdx\n     ab5:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     ab9:\t48 89 c7             \tmov    %rax,%rdi\n     abc:\tff d2                \tcallq  *%rdx\n     abe:\t01 d8                \tadd    %ebx,%eax\n     ac0:\t89 45 ac             \tmov    %eax,-0x54(%rbp)\n     ac3:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     aca:\t48 05 38 01 00 00    \tadd    $0x138,%rax\n     ad0:\t48 89 c7             \tmov    %rax,%rdi\n     ad3:\te8 00 00 00 00       \tcallq  ad8 <_ZN3irr3gui14CGUIStaticText4drawEv+0x47e>\n     ad8:\t8b 55 ac             \tmov    -0x54(%rbp),%edx\n     adb:\t0f af c2             \timul   %edx,%eax\n     ade:\t89 45 a8             \tmov    %eax,-0x58(%rbp)\n     ae1:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     ae8:\t8b 80 18 01 00 00    \tmov    0x118(%rax),%eax\n     aee:\t83 f8 02             \tcmp    $0x2,%eax\n     af1:\t75 37                \tjne    b2a <_ZN3irr3gui14CGUIStaticText4drawEv+0x4d0>\n     af3:\t48 8d 85 78 ff ff ff \tlea    -0x88(%rbp),%rax\n     afa:\t48 8d 95 20 ff ff ff \tlea    -0xe0(%rbp),%rdx\n     b01:\t48 89 d6             \tmov    %rdx,%rsi\n     b04:\t48 89 c7             \tmov    %rax,%rdi\n     b07:\te8 00 00 00 00       \tcallq  b0c <_ZN3irr3gui14CGUIStaticText4drawEv+0x4b2>\n     b0c:\t8b 95 7c ff ff ff    \tmov    -0x84(%rbp),%edx\n     b12:\t8b 45 a8             \tmov    -0x58(%rbp),%eax\n     b15:\t89 c1                \tmov    %eax,%ecx\n     b17:\tc1 e9 1f             \tshr    $0x1f,%ecx\n     b1a:\t01 c8                \tadd    %ecx,%eax\n     b1c:\td1 f8                \tsar    %eax\n     b1e:\tf7 d8                \tneg    %eax\n     b20:\t01 d0                \tadd    %edx,%eax\n     b22:\t89 85 24 ff ff ff    \tmov    %eax,-0xdc(%rbp)\n     b28:\teb 21                \tjmp    b4b <_ZN3irr3gui14CGUIStaticText4drawEv+0x4f1>\n     b2a:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     b31:\t8b 80 18 01 00 00    \tmov    0x118(%rax),%eax\n     b37:\t83 f8 01             \tcmp    $0x1,%eax\n     b3a:\t75 0f                \tjne    b4b <_ZN3irr3gui14CGUIStaticText4drawEv+0x4f1>\n     b3c:\t8b 85 2c ff ff ff    \tmov    -0xd4(%rbp),%eax\n     b42:\t2b 45 a8             \tsub    -0x58(%rbp),%eax\n     b45:\t89 85 24 ff ff ff    \tmov    %eax,-0xdc(%rbp)\n     b4b:\tc7 45 c4 00 00 00 00 \tmovl   $0x0,-0x3c(%rbp)\n     b52:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     b59:\t48 05 38 01 00 00    \tadd    $0x138,%rax\n     b5f:\t48 89 c7             \tmov    %rax,%rdi\n     b62:\te8 00 00 00 00       \tcallq  b67 <_ZN3irr3gui14CGUIStaticText4drawEv+0x50d>\n     b67:\t39 45 c4             \tcmp    %eax,-0x3c(%rbp)\n     b6a:\t0f 92 c0             \tsetb   %al\n     b6d:\t84 c0                \ttest   %al,%al\n     b6f:\t0f 84 83 01 00 00    \tje     cf8 <_ZN3irr3gui14CGUIStaticText4drawEv+0x69e>\n     b75:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     b7c:\t8b 80 14 01 00 00    \tmov    0x114(%rax),%eax\n     b82:\t83 f8 01             \tcmp    $0x1,%eax\n     b85:\t75 55                \tjne    bdc <_ZN3irr3gui14CGUIStaticText4drawEv+0x582>\n     b87:\t8b 85 38 ff ff ff    \tmov    -0xc8(%rbp),%eax\n     b8d:\t41 89 c4             \tmov    %eax,%r12d\n     b90:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     b94:\t48 8b 00             \tmov    (%rax),%rax\n     b97:\t48 83 c0 08          \tadd    $0x8,%rax\n     b9b:\t48 8b 18             \tmov    (%rax),%rbx\n     b9e:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     ba5:\t48 8d 90 38 01 00 00 \tlea    0x138(%rax),%rdx\n     bac:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n     baf:\t89 c6                \tmov    %eax,%esi\n     bb1:\t48 89 d7             \tmov    %rdx,%rdi\n     bb4:\te8 00 00 00 00       \tcallq  bb9 <_ZN3irr3gui14CGUIStaticText4drawEv+0x55f>\n     bb9:\t48 89 c7             \tmov    %rax,%rdi\n     bbc:\te8 00 00 00 00       \tcallq  bc1 <_ZN3irr3gui14CGUIStaticText4drawEv+0x567>\n     bc1:\t48 89 c2             \tmov    %rax,%rdx\n     bc4:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     bc8:\t48 89 d6             \tmov    %rdx,%rsi\n     bcb:\t48 89 c7             \tmov    %rax,%rdi\n     bce:\tff d3                \tcallq  *%rbx\n     bd0:\t41 29 c4             \tsub    %eax,%r12d\n     bd3:\t44 89 e0             \tmov    %r12d,%eax\n     bd6:\t89 85 20 ff ff ff    \tmov    %eax,-0xe0(%rbp)\n     bdc:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     be0:\t48 8b 00             \tmov    (%rax),%rax\n     be3:\t4c 8b 20             \tmov    (%rax),%r12\n     be6:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     bed:\t4c 8d 68 50          \tlea    0x50(%rax),%r13\n     bf1:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     bf8:\t8b 80 14 01 00 00    \tmov    0x114(%rax),%eax\n     bfe:\t83 f8 02             \tcmp    $0x2,%eax\n     c01:\t0f 94 c0             \tsete   %al\n     c04:\t44 0f b6 f0          \tmovzbl %al,%r14d\n     c08:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     c0f:\t0f b6 80 1d 01 00 00 \tmovzbl 0x11d(%rax),%eax\n     c16:\t84 c0                \ttest   %al,%al\n     c18:\t74 0f                \tje     c29 <_ZN3irr3gui14CGUIStaticText4drawEv+0x5cf>\n     c1a:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     c21:\t8b 98 20 01 00 00    \tmov    0x120(%rax),%ebx\n     c27:\teb 39                \tjmp    c62 <_ZN3irr3gui14CGUIStaticText4drawEv+0x608>\n     c29:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     c2d:\t48 8b 00             \tmov    (%rax),%rax\n     c30:\t48 83 c0 20          \tadd    $0x20,%rax\n     c34:\t48 8b 10             \tmov    (%rax),%rdx\n     c37:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     c3e:\t0f b6 80 a1 00 00 00 \tmovzbl 0xa1(%rax),%eax\n     c45:\t84 c0                \ttest   %al,%al\n     c47:\t74 07                \tje     c50 <_ZN3irr3gui14CGUIStaticText4drawEv+0x5f6>\n     c49:\tb9 08 00 00 00       \tmov    $0x8,%ecx\n     c4e:\teb 05                \tjmp    c55 <_ZN3irr3gui14CGUIStaticText4drawEv+0x5fb>\n     c50:\tb9 09 00 00 00       \tmov    $0x9,%ecx\n     c55:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     c59:\t89 ce                \tmov    %ecx,%esi\n     c5b:\t48 89 c7             \tmov    %rax,%rdi\n     c5e:\tff d2                \tcallq  *%rdx\n     c60:\t89 c3                \tmov    %eax,%ebx\n     c62:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     c69:\t48 8d 90 38 01 00 00 \tlea    0x138(%rax),%rdx\n     c70:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n     c73:\t89 c6                \tmov    %eax,%esi\n     c75:\t48 89 d7             \tmov    %rdx,%rdi\n     c78:\te8 00 00 00 00       \tcallq  c7d <_ZN3irr3gui14CGUIStaticText4drawEv+0x623>\n     c7d:\t48 89 c7             \tmov    %rax,%rdi\n     c80:\te8 00 00 00 00       \tcallq  c85 <_ZN3irr3gui14CGUIStaticText4drawEv+0x62b>\n     c85:\t48 89 c2             \tmov    %rax,%rdx\n     c88:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n     c8c:\t48 89 d6             \tmov    %rdx,%rsi\n     c8f:\t48 89 c7             \tmov    %rax,%rdi\n     c92:\te8 00 00 00 00       \tcallq  c97 <_ZN3irr3gui14CGUIStaticText4drawEv+0x63d>\n     c97:\t48 8d 95 20 ff ff ff \tlea    -0xe0(%rbp),%rdx\n     c9e:\t48 8d 75 80          \tlea    -0x80(%rbp),%rsi\n     ca2:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     ca6:\t48 83 ec 08          \tsub    $0x8,%rsp\n     caa:\t41 55                \tpush   %r13\n     cac:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n     cb2:\t45 89 f0             \tmov    %r14d,%r8d\n     cb5:\t89 d9                \tmov    %ebx,%ecx\n     cb7:\t48 89 c7             \tmov    %rax,%rdi\n     cba:\t41 ff d4             \tcallq  *%r12\n     cbd:\t48 83 c4 10          \tadd    $0x10,%rsp\n     cc1:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n     cc5:\t48 89 c7             \tmov    %rax,%rdi\n     cc8:\te8 00 00 00 00       \tcallq  ccd <_ZN3irr3gui14CGUIStaticText4drawEv+0x673>\n     ccd:\t8b 95 2c ff ff ff    \tmov    -0xd4(%rbp),%edx\n     cd3:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n     cd6:\t01 d0                \tadd    %edx,%eax\n     cd8:\t89 85 2c ff ff ff    \tmov    %eax,-0xd4(%rbp)\n     cde:\t8b 95 24 ff ff ff    \tmov    -0xdc(%rbp),%edx\n     ce4:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n     ce7:\t01 d0                \tadd    %edx,%eax\n     ce9:\t89 85 24 ff ff ff    \tmov    %eax,-0xdc(%rbp)\n     cef:\t83 45 c4 01          \taddl   $0x1,-0x3c(%rbp)\n     cf3:\te9 5a fe ff ff       \tjmpq   b52 <_ZN3irr3gui14CGUIStaticText4drawEv+0x4f8>\n     cf8:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n     cff:\t48 89 c7             \tmov    %rax,%rdi\n     d02:\te8 00 00 00 00       \tcallq  d07 <_ZN3irr3gui14CGUIStaticText4drawEv+0x6ad>\n     d07:\teb 04                \tjmp    d0d <_ZN3irr3gui14CGUIStaticText4drawEv+0x6b3>\n     d09:\t90                   \tnop\n     d0a:\teb 01                \tjmp    d0d <_ZN3irr3gui14CGUIStaticText4drawEv+0x6b3>\n     d0c:\t90                   \tnop\n     d0d:\t48 8d 65 d8          \tlea    -0x28(%rbp),%rsp\n     d11:\t5b                   \tpop    %rbx\n     d12:\t41 5c                \tpop    %r12\n     d14:\t41 5d                \tpop    %r13\n     d16:\t41 5e                \tpop    %r14\n     d18:\t41 5f                \tpop    %r15\n     d1a:\t5d                   \tpop    %rbp\n     d1b:\tc3                   \tretq   ", "code_s": "__int64 __fastcall irr gui CGUIStaticText draw(irr gui CGUIStaticText *this) {\n  __int64 result;\n  void(__fastcall * v2)(__int64, irr gui CGUIStaticText *, _QWORD, __int64,\n                        _QWORD, int *, char *);\n  int v3;\n  int v4;\n  int v5;\n  int v6;\n  __int64(__fastcall * v7)(void(__fastcall ***)(_QWORD, char *, int *, _QWORD,\n                                                _BOOL4, _BOOL4, char *),\n                           __int64);\n  __int64 v8;\n  void(__fastcall * v9)(_QWORD, char *, int *, _QWORD, _BOOL4, _BOOL4, char *);\n  _BOOL4 v10;\n  _BOOL4 v11;\n  unsigned int v12;\n  unsigned int v13;\n  __int64 v14;\n  int v15;\n  int v16;\n  unsigned int v17;\n  int v18;\n  __int64(__fastcall * v19)(void(__fastcall ***)(_QWORD, char *, int *, _QWORD,\n                                                 _BOOL4, _BOOL4, char *),\n                            __int64);\n  __int64 v20;\n  __int64 v21;\n  void(__fastcall * v22)(_QWORD, char *, int *, _QWORD, _BOOL4, _QWORD, char *);\n  _BOOL4 v23;\n  unsigned int v24;\n  unsigned int v25;\n  __int64 v26;\n  __int64 v27;\n  int v28;\n  int v29;\n  int v30;\n  int v31[Number];\n  int v32;\n  int v33;\n  unsigned int v34;\n  char v35[Number];\n  char v36[Number];\n  int v37;\n  char v38[Number];\n  int v39;\n  int v40;\n  __int64 v41;\n  __int64 v42;\n  unsigned int i;\n  void(__fastcall * **v44)(_QWORD, char *, int *, _QWORD, _BOOL4, _BOOL4,\n                           char *);\n  result = *((unsigned __int8 *)this + Number) ^ Number;\n  if (*((_BYTE *)this + Number) == Number) {\n    result = (*(__int64(__fastcall **)(_QWORD))(\n        **((_QWORD **)this + Number) + Number L))(*((_QWORD *)this + Number));\n    v42 = result;\n    if (result) {\n      v41 = (*(__int64(__fastcall **)(_QWORD))(\n          **((_QWORD **)this + Number) + Number L))(*((_QWORD *)this + Number));\n      irr core rect<int> rect(v31, (char *)this + Number);\n      if (*((_BYTE *)this + Number))\n        (*(void(__fastcall **)(__int64, _QWORD, int *, char *))(\n            *(_QWORD *)v41 + Number L))(v41, *((unsigned int *)this + Number),\n                                        v31, (char *)this + Number);\n      if (*((_BYTE *)this + Number)) {\n        v2 = *(void(__fastcall **)(__int64, irr gui CGUIStaticText *, _QWORD,\n                                   __int64, _QWORD, int *,\n                                   char *))(*(_QWORD *)v42 + Number L);\n        irr video SColor SColor((irr video SColor *)&v34, Number);\n        v2(v42, this, v34, Number L, Number L, v31, (char *)this + Number);\n        v3 = (*(__int64(__fastcall **)(__int64, __int64))(\n            *(_QWORD *)v42 + Number L))(v42, Number L);\n        v31[Number] += v3;\n      }\n      if ((unsigned int)irr core string<wchar_t, irr core irrAllocator<wchar_t>>\n              size((char *)this + Number)) {\n        v44 = (void(__fastcall ***)(_QWORD, char *, int *, _QWORD, _BOOL4,\n                                    _BOOL4, char *)) *\n              ((_QWORD *)this + Number);\n        if (!*((_QWORD *)this + Number))\n          v44 = (void(__fastcall ***)(_QWORD, char *, int *, _QWORD, _BOOL4,\n                                      _BOOL4, char *))(\n              *(__int64(__fastcall **)(__int64, _QWORD))(\n                  *(_QWORD *)v42 + Number L))(v42, Number L);\n        if (v44) {\n          if (*((_BYTE *)this + Number) != Number) {\n            if (*((_DWORD *)this + Number) == Number) {\n              v4 = v33;\n              v5 = v4 - ((unsigned __int64)((__int64(__fastcall *)(\n                             void(__fastcall ***)(_QWORD, char *, int *, _QWORD,\n                                                  _BOOL4, _BOOL4, char *),\n                             const char *))(*v44)[Number])(v44, String) >>\n                         Number);\n              v31[Number] = v5 - ((__int64(__fastcall *)(void(__fastcall ***)(\n                                     _QWORD, char *, int *, _QWORD, _BOOL4,\n                                     _BOOL4, char *)))(*v44)[Number])(v44);\n            }\n            if (*((_DWORD *)this + Number) == Number) {\n              v6 = v32;\n              v7 = (__int64(__fastcall *)(\n                  void(__fastcall ***)(_QWORD, char *, int *, _QWORD, _BOOL4,\n                                       _BOOL4, char *),\n                  __int64))(*v44)[Number];\n              v8 = irr core string<wchar_t, irr core irrAllocator<wchar_t>>\n                  c_str((char *)this + Number);\n              v31[Number] = v6 - v7(v44, v8);\n            }\n            v9 = **v44;\n            v10 = *((_DWORD *)this + Number) == Number;\n            v11 = *((_DWORD *)this + Number) == Number;\n            if (*((_BYTE *)this + Number)) {\n              v12 = *((_DWORD *)this + Number);\n            } else {\n              if (*((_BYTE *)this + Number))\n                v13 = Number;\n              else\n                v13 = Number;\n              v12 = (*(__int64(__fastcall **)(__int64, _QWORD))(\n                  *(_QWORD *)v42 + Number L))(v42, v13);\n            }\n            v14 =\n                irr core string<wchar_t, irr core irrAllocator<wchar_t>> c_str(\n                    (char *)this + Number);\n            irr core string<wchar_t, irr core irrAllocator<wchar_t>>\n                string<wchar_t>(v35, v14);\n            v9(v44, v35, v31, v12, v11, v10, (char *)this + Number);\n            irr core string<wchar_t, irr core irrAllocator<wchar_t>> ~string(\n                v35);\n          } else {\n            if (v44 != *((void(__fastcall ****)(_QWORD, char *, int *, _QWORD,\n                                                _BOOL4, _BOOL4, char *))this +\n                         Number))\n              irr gui CGUIStaticText breakText(this);\n            irr core rect<int> rect(&v28, v31);\n            v15 = (unsigned __int64)((__int64(__fastcall *)(\n                      void(__fastcall ***)(_QWORD, char *, int *, _QWORD,\n                                           _BOOL4, _BOOL4, char *),\n                      const char *))(*v44)[Number])(v44, String) >>\n                  Number;\n            v40 = v15 + ((__int64(__fastcall *)(void(__fastcall ***)(\n                            _QWORD, char *, int *, _QWORD, _BOOL4, _BOOL4,\n                            char *)))(*v44)[Number])(v44);\n            v16 = irr core\n                array<irr core string<wchar_t, irr core irrAllocator<wchar_t>>,\n                      irr core irrAllocator<irr core string<\n                          wchar_t, irr core irrAllocator<wchar_t>>>>\n                    size((char *)this + Number);\n            v39 = v40 * v16;\n            if (*((_DWORD *)this + Number) == Number) {\n              irr core rect<int> getCenter(v36, &v28);\n              v29 = v37 + v39 / Number;\n            } else if (*((_DWORD *)this + Number) == Number) {\n              v29 = v30 - v39;\n            }\n            for (i = Number;; ++i) {\n              v17 = irr core array<\n                  irr core string<wchar_t, irr core irrAllocator<wchar_t>>,\n                  irr core irrAllocator<\n                      irr core string<wchar_t, irr core irrAllocator<wchar_t>>>>\n                  size((char *)this + Number);\n              if (i >= v17)\n                break;\n              if (*((_DWORD *)this + Number) == Number) {\n                v18 = v32;\n                v19 = (__int64(__fastcall *)(\n                    void(__fastcall ***)(_QWORD, char *, int *, _QWORD, _BOOL4,\n                                         _BOOL4, char *),\n                    __int64))(*v44)[Number];\n                v20 = irr core array<\n                    irr core string<wchar_t, irr core irrAllocator<wchar_t>>,\n                    irr core irrAllocator<irr core string<\n                        wchar_t, irr core irrAllocator<wchar_t>>>>\n                operator[]((char *)this + Number, i);\n                v21 = irr core string<wchar_t, irr core irrAllocator<wchar_t>>\n                    c_str(v20);\n                v28 = v18 - v19(v44, v21);\n              }\n              v22 = (void(__fastcall *)(_QWORD, char *, int *, _QWORD, _BOOL4,\n                                        _QWORD, char *)) *\n                    *v44;\n              v23 = *((_DWORD *)this + Number) == Number;\n              if (*((_BYTE *)this + Number)) {\n                v24 = *((_DWORD *)this + Number);\n              } else {\n                if (*((_BYTE *)this + Number))\n                  v25 = Number;\n                else\n                  v25 = Number;\n                v24 = (*(__int64(__fastcall **)(__int64, _QWORD))(\n                    *(_QWORD *)v42 + Number L))(v42, v25);\n              }\n              v26 = irr core array<\n                  irr core string<wchar_t, irr core irrAllocator<wchar_t>>,\n                  irr core irrAllocator<\n                      irr core string<wchar_t, irr core irrAllocator<wchar_t>>>>\n              operator[]((char *)this + Number, i);\n              v27 = irr core string<wchar_t, irr core irrAllocator<wchar_t>>\n                  c_str(v26);\n              irr core string<wchar_t, irr core irrAllocator<wchar_t>>\n                  string<wchar_t>(v38, v27);\n              v22(v44, v38, &v28, v24, v23, Number L, (char *)this + Number);\n              irr core string<wchar_t, irr core irrAllocator<wchar_t>> ~string(\n                  v38);\n              v30 += v40;\n              v29 += v40;\n            }\n          }\n        }\n      }\n      result = irr gui IGUIElement draw(this);\n    }\n  }\n  return result;\n}", "code_t": "void __cdecl irr gui CGUIStaticText draw(irr gui CGUIStaticText *const this) {\n  void(__fastcall * v1)(irr gui IGUISkin *, irr gui CGUIStaticText *const,\n                        _QWORD, __int64, _QWORD, irr core rect<int> *,\n                        irr core rect<int> *);\n  int v2;\n  int v3;\n  int v4;\n  int v5;\n  __int64(__fastcall * v6)(irr gui IGUIFont *, const wchar_t *);\n  const wchar_t *v7;\n  void(__fastcall *\n       v8)(irr gui IGUIFont *,\n           irr core string<wchar_t, irr core irrAllocator<wchar_t>> *,\n           irr core rect<int> *, _QWORD, _BOOL4, _BOOL4, irr core rect<int> *);\n  _BOOL4 v9;\n  _BOOL4 v10;\n  irr u32 v11;\n  unsigned int v12;\n  const wchar_t *v13;\n  int v14;\n  irr u32 v15;\n  irr u32 v16;\n  int v17;\n  __int64(__fastcall * v18)(irr gui IGUIFont *, const wchar_t *);\n  irr core string<wchar_t, irr core irrAllocator<wchar_t>> *v19;\n  const wchar_t *v20;\n  void(__fastcall * v21)(irr gui IGUIFont *, irr core vector2d<int> *,\n                         irr core rect<int> *, _QWORD, _BOOL4, _QWORD,\n                         irr core rect<int> *);\n  _BOOL4 v22;\n  irr u32 v23;\n  unsigned int v24;\n  irr core string<wchar_t, irr core irrAllocator<wchar_t>> *v25;\n  const wchar_t *v26;\n  irr core rect<int> <span class=\"supfact\">r</span>;\n  irr core rect<int> <span class=\"supfact\">frameRect</span>;\n  irr video SColor <span class=\"supfact\">v29</span>;\n  irr core string<wchar_t, irr core irrAllocator<wchar_t>> <span class=\"supfact\">v30</span>;\n  irr core rect<int> <span class=\"supfact\">v31</span>;\n  irr s32 totalHeight;\n  irr s32 height;\n  irr video IVideoDriver *driver;\n  irr gui IGUISkin *skin;\n  irr u32 i;\n  irr gui IGUIFont *font;\n  if (this->IsVisible) {\n    skin = (irr gui IGUISkin *)(*(\n        (__int64(__fastcall **)(irr gui IGUIEnvironment *))this->Environment\n            ->_vptr_IGUIEnvironment +\n        Number))(this->Environment);\n    if (skin) {\n      driver = (irr video IVideoDriver *)(*(\n          (__int64(__fastcall **)(irr gui IGUIEnvironment *))this->Environment\n              ->_vptr_IGUIEnvironment +\n          Number))(this->Environment);\n      irr core rect<int> rect(&<span class=\"supfact\">frameRect</span>, &this->AbsoluteRect);\n      if (this->Background)\n        (*(void(__fastcall **)(irr video IVideoDriver *, _QWORD,\n                               irr core rect<int> *, irr core rect<int> *))(\n            *(_QWORD *)driver + Number L))(driver, this->BGColor.color,\n                                           &<span class=\"supfact\">frameRect</span>,\n                                           &this->AbsoluteClippingRect);\n      if (this->Border) {\n        v1 = *(void(__fastcall **)(\n            irr gui IGUISkin *, irr gui CGUIStaticText *const, _QWORD, __int64,\n            _QWORD, irr core rect<int> *,\n            irr core rect<int> *))(*(_QWORD *)skin + Number L);\n        irr video SColor SColor(&<span class=\"supfact\">v29</span>, Number);\n        v1(skin, this, <span class=\"supfact\">v29</span>.color, Number L, Number L,\n           &<span class=\"supfact\">frameRect</span>, &this->AbsoluteClippingRect);\n        v2 = (*(__int64(__fastcall **)(irr gui IGUISkin *, __int64))(\n            *(_QWORD *)skin + Number L))(skin, Number L);\n        <span class=\"supfact\">frameRect</span>.UpperLeftCorner.X += v2;\n      }\n      if (irr core string<wchar_t, irr core irrAllocator<wchar_t>> size(\n              &this->Text)) {\n        font = this->OverrideFont;\n        if (!this->OverrideFont)\n          font = (irr gui IGUIFont *)(*(__int64(__fastcall **)(\n              irr gui IGUISkin *, _QWORD))(*(_QWORD *)skin + Number L))(\n              skin, Number L);\n        if (font) {\n          if (!this->WordWrap) {\n            if (this->VAlign == EGUIA_LOWERRIGHT) {\n              v3 = <span class=\"supfact\">frameRect</span>.LowerRightCorner.Y;\n              v4 = v3 - ((unsigned __int64)(*(__int64(__fastcall **)(\n                             irr gui IGUIFont *, const char *))(\n                             *(_QWORD *)font + Number L))(font, String) >>\n                         Number);\n              <span class=\"supfact\">frameRect</span>.UpperLeftCorner.Y =\n                  v4 - (*(__int64(__fastcall **)(irr gui IGUIFont *))(\n                           *(_QWORD *)font + Number L))(font);\n            }\n            if (this->HAlign == EGUIA_LOWERRIGHT) {\n              v5 = <span class=\"supfact\">frameRect</span>.LowerRightCorner.X;\n              v6 = *(__int64(__fastcall **)(irr gui IGUIFont *,\n                                            const wchar_t *))(*(_QWORD *)font +\n                                                              Number L);\n              v7 = irr core string<wchar_t, irr core irrAllocator<wchar_t>>\n                  c_str(&this->Text);\n              <span class=\"supfact\">frameRect</span>.UpperLeftCorner.X = v5 - v6(font, v7);\n            }\n            v8 = **(void(__fastcall ***)(\n                irr gui IGUIFont *,\n                irr core string<wchar_t, irr core irrAllocator<wchar_t>> *,\n                irr core rect<int> *, _QWORD, _BOOL4, _BOOL4,\n                irr core rect<int> *))font;\n            v9 = this->VAlign == EGUIA_CENTER;\n            v10 = this->HAlign == EGUIA_CENTER;\n            if (this->OverrideColorEnabled) {\n              v11 = this->OverrideColor.color;\n            } else {\n              if (this->IsEnabled)\n                v12 = Number;\n              else\n                v12 = Number;\n              v11 = (*(__int64(__fastcall **)(irr gui IGUISkin *, _QWORD))(\n                  *(_QWORD *)skin + Number L))(skin, v12);\n            }\n            v13 =\n                irr core string<wchar_t, irr core irrAllocator<wchar_t>> c_str(\n                    &this->Text);\n            irr core string<wchar_t, irr core irrAllocator<wchar_t>>\n                string<wchar_t>(&<span class=\"supfact\">v30</span>, v13);\n            v8(font, &<span class=\"supfact\">v30</span>, &<span class=\"supfact\">frameRect</span>, v11, v10,\n               v9, &this->AbsoluteClippingRect);\n            irr core string<wchar_t, irr core irrAllocator<wchar_t>> ~string(\n                &<span class=\"supfact\">v30</span>);\n          } else {\n            if (font != this->LastBreakFont)\n              irr gui CGUIStaticText breakText(this);\n            irr core rect<int> rect(&<span class=\"supfact\">r</span>,\n                                    &<span class=\"supfact\">frameRect</span>);\n            v14 = (unsigned __int64)(*(\n                      __int64(__fastcall **)(irr gui IGUIFont *, const char *))(\n                      *(_QWORD *)font + Number L))(font, String) >>\n                  Number;\n            height = v14 + (*(__int64(__fastcall **)(irr gui IGUIFont *))(\n                               *(_QWORD *)font + Number L))(font);\n            v15 = irr core\n                array<irr core string<wchar_t, irr core irrAllocator<wchar_t>>,\n                      irr core irrAllocator<irr core string<\n                          wchar_t, irr core irrAllocator<wchar_t>>>>\n                    size(&this->BrokenText);\n            totalHeight = height * v15;\n            if (this->VAlign == EGUIA_CENTER) {\n              irr core rect<int> getCenter(&<span class=\"supfact\">v31</span>);\n              <span class=\"supfact\">r</span>.UpperLeftCorner.Y =\n                  <span class=\"supfact\">v31</span>.UpperLeftCorner.Y + totalHeight / Number;\n            } else if (this->VAlign == EGUIA_LOWERRIGHT) {\n              <span class=\"supfact\">r</span>.UpperLeftCorner.Y =\n                  <span class=\"supfact\">r</span>.LowerRightCorner.Y - totalHeight;\n            }\n            for (i = Number;; ++i) {\n              v16 = irr core array<\n                  irr core string<wchar_t, irr core irrAllocator<wchar_t>>,\n                  irr core irrAllocator<\n                      irr core string<wchar_t, irr core irrAllocator<wchar_t>>>>\n                  size(&this->BrokenText);\n              if (i >= v16)\n                break;\n              if (this->HAlign == EGUIA_LOWERRIGHT) {\n                v17 = <span class=\"supfact\">frameRect</span>.LowerRightCorner.X;\n                v18 = *(__int64(__fastcall **)(irr gui IGUIFont *,\n                                               const wchar_t *))(\n                    *(_QWORD *)font + Number L);\n                v19 = irr core array<\n                    irr core string<wchar_t, irr core irrAllocator<wchar_t>>,\n                    irr core irrAllocator<irr core string<\n                        wchar_t, irr core irrAllocator<wchar_t>>>>\n                operator[](&this->BrokenText, i);\n                v20 = irr core string<wchar_t, irr core irrAllocator<wchar_t>>\n                    c_str(v19);\n                <span class=\"supfact\">r</span>.UpperLeftCorner.X = v17 - v18(font, v20);\n              }\n              v21 = **(void(__fastcall ***)(\n                  irr gui IGUIFont *, irr core vector2d<int> *,\n                  irr core rect<int> *, _QWORD, _BOOL4, _QWORD,\n                  irr core rect<int> *))font;\n              v22 = this->HAlign == EGUIA_CENTER;\n              if (this->OverrideColorEnabled) {\n                v23 = this->OverrideColor.color;\n              } else {\n                if (this->IsEnabled)\n                  v24 = Number;\n                else\n                  v24 = Number;\n                v23 = (*(__int64(__fastcall **)(irr gui IGUISkin *, _QWORD))(\n                    *(_QWORD *)skin + Number L))(skin, v24);\n              }\n              v25 = irr core array<\n                  irr core string<wchar_t, irr core irrAllocator<wchar_t>>,\n                  irr core irrAllocator<\n                      irr core string<wchar_t, irr core irrAllocator<wchar_t>>>>\n              operator[](&this->BrokenText, i);\n              v26 = irr core string<wchar_t, irr core irrAllocator<wchar_t>>\n                  c_str(v25);\n              irr core string<wchar_t, irr core irrAllocator<wchar_t>>\n                  string<wchar_t>(\n                      (irr core string<wchar_t, irr core irrAllocator<wchar_t>>\n                           *const) &\n                          <span class=\"supfact\">v31</span>.LowerRightCorner,\n                      v26);\n              v21(font, &<span class=\"supfact\">v31</span>.LowerRightCorner,\n                  &<span class=\"supfact\">r</span>, v23, v22, Number L,\n                  &this->AbsoluteClippingRect);\n              irr core string<wchar_t, irr core irrAllocator<wchar_t>> ~string(\n                  (irr core\n                       string<wchar_t, irr core irrAllocator<wchar_t>> *const) &\n                  <span class=\"supfact\">v31</span>.LowerRightCorner);\n              <span class=\"supfact\">r</span>.LowerRightCorner.Y += height;\n              <span class=\"supfact\">r</span>.UpperLeftCorner.Y += height;\n            }\n          }\n        }\n      }\n      irr gui IGUIElement draw((irr gui IGUIElement *const)this);\n    }\n  }\n}", "var": [{"name": "v28", "type": "int", "pred_name": "v28", "ref_name": "r", "ref_type": "struct irr::core::rect<int> { irr::core::vector2d<int> UpperLeftCorner; irr::core::vector2d<int> LowerRightCorner; }"}, {"name": "v31", "type": "void *[2]", "pred_name": "v31", "ref_name": "frameRect", "ref_type": "struct irr::core::rect<int> { irr::core::vector2d<int> UpperLeftCorner; irr::core::vector2d<int> LowerRightCorner; }"}, {"name": "v34", "type": "int", "pred_name": "v34", "ref_name": "v29", "ref_type": "struct irr::video::SColor { irr::u32 color; }"}, {"name": "v35", "type": "char[40]", "pred_name": "v35", "ref_name": "v30", "ref_type": "struct irr::core::string<wchar_t,irr::core::irrAllocator<wchar_t> > { int (**)(...) _vptr_string; wchar_t * array; irr::core::irrAllocator<wchar_t> allocator; irr::u32 allocated; irr::u32 used; }"}, {"name": "v36", "type": "int", "pred_name": "v36", "ref_name": "v31", "ref_type": "struct irr::core::rect<int> { irr::core::vector2d<int> UpperLeftCorner; irr::core::vector2d<int> LowerRightCorner; }"}], "body_in_train": false}, {"repo_owner": "mrkj", "repo_name": "abc", "path": "mrkj/abc/d4fbeb2190e48d633a51e2997716fc4a448cf9e4bd7db05a92c0634530c486e1", "path_in_repo": "mrkj/abc//src/aig/dar/darScript.o", "objdump": "0000000000000f6d <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii>:\n     f6d:\t41 56                \tpush   %r14\n     f6f:\t41 55                \tpush   %r13\n     f71:\t41 54                \tpush   %r12\n     f73:\t55                   \tpush   %rbp\n     f74:\t53                   \tpush   %rbx\n     f75:\t48 83 ec 50          \tsub    $0x50,%rsp\n     f79:\t48 89 fb             \tmov    %rdi,%rbx\n     f7c:\t41 89 f5             \tmov    %esi,%r13d\n     f7f:\t89 d5                \tmov    %edx,%ebp\n     f81:\t41 89 ce             \tmov    %ecx,%r14d\n     f84:\t45 89 c4             \tmov    %r8d,%r12d\n     f87:\t48 8d 7c 24 20       \tlea    0x20(%rsp),%rdi\n     f8c:\te8 00 00 00 00       \tcallq  f91 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x24>\n     f91:\t48 89 e7             \tmov    %rsp,%rdi\n     f94:\te8 00 00 00 00       \tcallq  f99 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x2c>\n     f99:\t89 6c 24 2c          \tmov    %ebp,0x2c(%rsp)\n     f9d:\t89 6c 24 10          \tmov    %ebp,0x10(%rsp)\n     fa1:\t44 89 74 24 34       \tmov    %r14d,0x34(%rsp)\n     fa6:\tc7 44 24 3c 00 00 00 \tmovl   $0x0,0x3c(%rsp)\n     fad:\t00 \n     fae:\tc7 44 24 18 00 00 00 \tmovl   $0x0,0x18(%rsp)\n     fb5:\t00 \n     fb6:\t45 85 e4             \ttest   %r12d,%r12d\n     fb9:\t0f 85 87 00 00 00    \tjne    1046 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0xd9>\n     fbf:\t48 8d 74 24 20       \tlea    0x20(%rsp),%rsi\n     fc4:\t48 89 df             \tmov    %rbx,%rdi\n     fc7:\te8 00 00 00 00       \tcallq  fcc <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x5f>\n     fcc:\t48 89 df             \tmov    %rbx,%rdi\n     fcf:\te8 00 00 00 00       \tcallq  fd4 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x67>\n     fd4:\t49 89 c4             \tmov    %rax,%r12\n     fd7:\t48 89 df             \tmov    %rbx,%rdi\n     fda:\te8 00 00 00 00       \tcallq  fdf <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x72>\n     fdf:\t48 89 e6             \tmov    %rsp,%rsi\n     fe2:\t4c 89 e7             \tmov    %r12,%rdi\n     fe5:\te8 00 00 00 00       \tcallq  fea <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x7d>\n     fea:\t4c 89 e7             \tmov    %r12,%rdi\n     fed:\te8 00 00 00 00       \tcallq  ff2 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x85>\n     ff2:\t49 89 c6             \tmov    %rax,%r14\n     ff5:\t4c 89 e7             \tmov    %r12,%rdi\n     ff8:\te8 00 00 00 00       \tcallq  ffd <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x90>\n     ffd:\t45 85 ed             \ttest   %r13d,%r13d\n    1000:\t0f 85 dc 00 00 00    \tjne    10e2 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x175>\n    1006:\tc7 44 24 30 01 00 00 \tmovl   $0x1,0x30(%rsp)\n    100d:\t00 \n    100e:\tc7 44 24 14 01 00 00 \tmovl   $0x1,0x14(%rsp)\n    1015:\t00 \n    1016:\t48 8d 74 24 20       \tlea    0x20(%rsp),%rsi\n    101b:\t4c 89 f7             \tmov    %r14,%rdi\n    101e:\te8 00 00 00 00       \tcallq  1023 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0xb6>\n    1023:\t4c 89 f7             \tmov    %r14,%rdi\n    1026:\te8 00 00 00 00       \tcallq  102b <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0xbe>\n    102b:\t48 89 c3             \tmov    %rax,%rbx\n    102e:\t4c 89 f7             \tmov    %r14,%rdi\n    1031:\te8 00 00 00 00       \tcallq  1036 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0xc9>\n    1036:\t48 89 d8             \tmov    %rbx,%rax\n    1039:\t48 83 c4 50          \tadd    $0x50,%rsp\n    103d:\t5b                   \tpop    %rbx\n    103e:\t5d                   \tpop    %rbp\n    103f:\t41 5c                \tpop    %r12\n    1041:\t41 5d                \tpop    %r13\n    1043:\t41 5e                \tpop    %r14\n    1045:\tc3                   \tretq   \n    1046:\t48 89 df             \tmov    %rbx,%rdi\n    1049:\te8 00 00 00 00       \tcallq  104e <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0xe1>\n    104e:\t48 8d 74 24 20       \tlea    0x20(%rsp),%rsi\n    1053:\t48 89 df             \tmov    %rbx,%rdi\n    1056:\te8 00 00 00 00       \tcallq  105b <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0xee>\n    105b:\t48 89 df             \tmov    %rbx,%rdi\n    105e:\te8 00 00 00 00       \tcallq  1063 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0xf6>\n    1063:\t49 89 c4             \tmov    %rax,%r12\n    1066:\t48 89 df             \tmov    %rbx,%rdi\n    1069:\te8 00 00 00 00       \tcallq  106e <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x101>\n    106e:\t4c 89 e7             \tmov    %r12,%rdi\n    1071:\te8 00 00 00 00       \tcallq  1076 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x109>\n    1076:\t48 89 e6             \tmov    %rsp,%rsi\n    1079:\t4c 89 e7             \tmov    %r12,%rdi\n    107c:\te8 00 00 00 00       \tcallq  1081 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x114>\n    1081:\t4c 89 e7             \tmov    %r12,%rdi\n    1084:\te8 00 00 00 00       \tcallq  1089 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x11c>\n    1089:\t49 89 c6             \tmov    %rax,%r14\n    108c:\t4c 89 e7             \tmov    %r12,%rdi\n    108f:\te8 00 00 00 00       \tcallq  1094 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x127>\n    1094:\t4c 89 f7             \tmov    %r14,%rdi\n    1097:\te8 00 00 00 00       \tcallq  109c <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x12f>\n    109c:\t45 85 ed             \ttest   %r13d,%r13d\n    109f:\t0f 85 87 00 00 00    \tjne    112c <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x1bf>\n    10a5:\tc7 44 24 30 01 00 00 \tmovl   $0x1,0x30(%rsp)\n    10ac:\t00 \n    10ad:\tc7 44 24 14 01 00 00 \tmovl   $0x1,0x14(%rsp)\n    10b4:\t00 \n    10b5:\t48 8d 74 24 20       \tlea    0x20(%rsp),%rsi\n    10ba:\t4c 89 f7             \tmov    %r14,%rdi\n    10bd:\te8 00 00 00 00       \tcallq  10c2 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x155>\n    10c2:\t4c 89 f7             \tmov    %r14,%rdi\n    10c5:\te8 00 00 00 00       \tcallq  10ca <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x15d>\n    10ca:\t48 89 c3             \tmov    %rax,%rbx\n    10cd:\t4c 89 f7             \tmov    %r14,%rdi\n    10d0:\te8 00 00 00 00       \tcallq  10d5 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x168>\n    10d5:\t48 89 df             \tmov    %rbx,%rdi\n    10d8:\te8 00 00 00 00       \tcallq  10dd <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x170>\n    10dd:\te9 54 ff ff ff       \tjmpq   1036 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0xc9>\n    10e2:\t89 ee                \tmov    %ebp,%esi\n    10e4:\t4c 89 f7             \tmov    %r14,%rdi\n    10e7:\te8 00 00 00 00       \tcallq  10ec <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x17f>\n    10ec:\t48 89 c5             \tmov    %rax,%rbp\n    10ef:\t4c 89 f7             \tmov    %r14,%rdi\n    10f2:\te8 00 00 00 00       \tcallq  10f7 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x18a>\n    10f7:\tc7 44 24 30 01 00 00 \tmovl   $0x1,0x30(%rsp)\n    10fe:\t00 \n    10ff:\tc7 44 24 14 01 00 00 \tmovl   $0x1,0x14(%rsp)\n    1106:\t00 \n    1107:\t48 8d 74 24 20       \tlea    0x20(%rsp),%rsi\n    110c:\t48 89 ef             \tmov    %rbp,%rdi\n    110f:\te8 00 00 00 00       \tcallq  1114 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x1a7>\n    1114:\t48 89 ef             \tmov    %rbp,%rdi\n    1117:\te8 00 00 00 00       \tcallq  111c <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x1af>\n    111c:\t48 89 c3             \tmov    %rax,%rbx\n    111f:\t48 89 ef             \tmov    %rbp,%rdi\n    1122:\te8 00 00 00 00       \tcallq  1127 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x1ba>\n    1127:\te9 0a ff ff ff       \tjmpq   1036 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0xc9>\n    112c:\t89 ee                \tmov    %ebp,%esi\n    112e:\t4c 89 f7             \tmov    %r14,%rdi\n    1131:\te8 00 00 00 00       \tcallq  1136 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x1c9>\n    1136:\t48 89 c5             \tmov    %rax,%rbp\n    1139:\t4c 89 f7             \tmov    %r14,%rdi\n    113c:\te8 00 00 00 00       \tcallq  1141 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x1d4>\n    1141:\t48 89 ef             \tmov    %rbp,%rdi\n    1144:\te8 00 00 00 00       \tcallq  1149 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x1dc>\n    1149:\tc7 44 24 30 01 00 00 \tmovl   $0x1,0x30(%rsp)\n    1150:\t00 \n    1151:\tc7 44 24 14 01 00 00 \tmovl   $0x1,0x14(%rsp)\n    1158:\t00 \n    1159:\t48 8d 74 24 20       \tlea    0x20(%rsp),%rsi\n    115e:\t48 89 ef             \tmov    %rbp,%rdi\n    1161:\te8 00 00 00 00       \tcallq  1166 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x1f9>\n    1166:\t48 89 ef             \tmov    %rbp,%rdi\n    1169:\te8 00 00 00 00       \tcallq  116e <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x201>\n    116e:\t48 89 c3             \tmov    %rax,%rbx\n    1171:\t48 89 ef             \tmov    %rbp,%rdi\n    1174:\te8 00 00 00 00       \tcallq  1179 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x20c>\n    1179:\te9 57 ff ff ff       \tjmpq   10d5 <_ZN3xxx15Dar_NewCompressEPNS_10Aig_Man_t_Eiiii+0x168>", "code_s": "__int64 __fastcall xxx Dar_NewCompress(__int64 a1, int a2, unsigned int a3,\n                                       int a4, int a5) {\n  __int64 v8;\n  __int64 v9;\n  __int64 v10;\n  __int64 v12;\n  __int64 v13;\n  __int64 v14;\n  __int64 v15;\n  _DWORD v16[Number];\n  int v17;\n  int v18;\n  char v19[Number];\n  unsigned int v20;\n  int v21;\n  int v22;\n  int v23;\n  xxx Dar_ManDefaultRwrParams(v19);\n  xxx Dar_ManDefaultRefParams(v16);\n  v20 = a3;\n  v16[Number] = a3;\n  v22 = a4;\n  v23 = Number;\n  v18 = Number;\n  if (a5) {\n    xxx Aig_ManPrintStats(a1);\n    xxx Dar_ManRewrite(a1, v19);\n    v12 = xxx Aig_ManDupDfs(a1);\n    xxx Aig_ManStop(a1);\n    xxx Aig_ManPrintStats(v12);\n    xxx Dar_ManRefactor(v12, v16);\n    v13 = xxx Aig_ManDupDfs(v12);\n    xxx Aig_ManStop(v12);\n    xxx Aig_ManPrintStats(v13);\n    if (a2) {\n      v15 = xxx Dar_ManBalance(v13, a3);\n      xxx Aig_ManStop(v13);\n      xxx Aig_ManPrintStats(v15);\n      v21 = Number;\n      v17 = Number;\n      xxx Dar_ManRewrite(v15, v19);\n      v10 = xxx Aig_ManDupDfs(v15);\n      xxx Aig_ManStop(v15);\n    } else {\n      v21 = Number;\n      v17 = Number;\n      xxx Dar_ManRewrite(v13, v19);\n      v10 = xxx Aig_ManDupDfs(v13);\n      xxx Aig_ManStop(v13);\n    }\n    xxx Aig_ManPrintStats(v10);\n  } else {\n    xxx Dar_ManRewrite(a1, v19);\n    v8 = xxx Aig_ManDupDfs(a1);\n    xxx Aig_ManStop(a1);\n    xxx Dar_ManRefactor(v8, v16);\n    v9 = xxx Aig_ManDupDfs(v8);\n    xxx Aig_ManStop(v8);\n    if (a2) {\n      v14 = xxx Dar_ManBalance(v9, a3);\n      xxx Aig_ManStop(v9);\n      v21 = Number;\n      v17 = Number;\n      xxx Dar_ManRewrite(v14, v19);\n      v10 = xxx Aig_ManDupDfs(v14);\n      xxx Aig_ManStop(v14);\n    } else {\n      v21 = Number;\n      v17 = Number;\n      xxx Dar_ManRewrite(v9, v19);\n      v10 = xxx Aig_ManDupDfs(v9);\n      xxx Aig_ManStop(v9);\n    }\n  }\n  return v10;\n}", "code_t": "xxx Aig_Man_t *__fastcall xxx Dar_NewCompress(xxx Aig_Man_t *pAig, int fBalance,\n                                              int fUpdateLevel, int fPower,\n                                              int fVerbose) {\n  xxx Dar_RwrPar_t_ *v8;\n  xxx *v9;\n  xxx Dar_RefPar_t_ *v10;\n  xxx *v11;\n  xxx Dar_RwrPar_t_ *v12;\n  xxx *v13;\n  xxx Dar_RwrPar_t_ *v15;\n  xxx *v16;\n  xxx Dar_RefPar_t_ *v17;\n  xxx *v18;\n  xxx Dar_RwrPar_t_ *v19;\n  xxx Aig_Man_t_ *v20;\n  xxx *v21;\n  xxx Dar_RwrPar_t_ *v22;\n  xxx Aig_Man_t_ *v23;\n  xxx *v24;\n  xxx Dar_RwrPar_t_ *v25;\n  xxx Dar_RefPar_t <span class=\"supfact\">ParsRef</span>;\n  xxx Dar_RwrPar_t <span class=\"supfact\">ParsRwr</span>;\n  xxx Dar_ManDefaultRwrParams((xxx *)&<span class=\"supfact\">ParsRwr</span>,\n                              *(xxx Dar_RwrPar_t_ **)&fBalance);\n  xxx Dar_ManDefaultRefParams((xxx *)&<span class=\"supfact\">ParsRef</span>,\n                              *(xxx Dar_RefPar_t_ **)&fBalance);\n  <span class=\"supfact\">ParsRwr</span>.fUpdateLevel = fUpdateLevel;\n  <span class=\"supfact\">ParsRef</span>.fUpdateLevel = fUpdateLevel;\n  <span class=\"supfact\">ParsRwr</span>.fPower = fPower;\n  <span class=\"supfact\">ParsRwr</span>.fVerbose = Number;\n  <span class=\"supfact\">ParsRef</span>.fVerbose = Number;\n  if (fVerbose) {\n    xxx Aig_ManPrintStats((xxx *)pAig, *(xxx Aig_Man_t_ **)&fBalance);\n    xxx Dar_ManRewrite((xxx *)pAig, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>,\n                       v15);\n    v16 = (xxx *)xxx Aig_ManDupDfs((xxx *)pAig,\n                                   (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>);\n    xxx Aig_ManStop((xxx *)pAig, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>);\n    xxx Aig_ManPrintStats(v16, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>);\n    xxx Dar_ManRefactor(v16, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRef</span>, v17);\n    v18 = (xxx *)xxx Aig_ManDupDfs(v16,\n                                   (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRef</span>);\n    xxx Aig_ManStop(v16, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRef</span>);\n    xxx Aig_ManPrintStats(v18, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRef</span>);\n    if (fBalance) {\n      v23 = (xxx Aig_Man_t_ *)(unsigned int)fUpdateLevel;\n      v24 = (xxx *)xxx Dar_ManBalance(\n          v18, (xxx Aig_Man_t_ *)(unsigned int)fUpdateLevel, (int)v19);\n      xxx Aig_ManStop(v18, v23);\n      xxx Aig_ManPrintStats(v24, v23);\n      <span class=\"supfact\">ParsRwr</span>.fUseZeros = Number;\n      <span class=\"supfact\">ParsRef</span>.fUseZeros = Number;\n      xxx Dar_ManRewrite(v24, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>, v25);\n      v13 = (xxx *)xxx Aig_ManDupDfs(\n          v24, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>);\n      xxx Aig_ManStop(v24, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>);\n    } else {\n      <span class=\"supfact\">ParsRwr</span>.fUseZeros = Number;\n      <span class=\"supfact\">ParsRef</span>.fUseZeros = Number;\n      xxx Dar_ManRewrite(v18, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>, v19);\n      v13 = (xxx *)xxx Aig_ManDupDfs(\n          v18, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>);\n      xxx Aig_ManStop(v18, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>);\n    }\n    xxx Aig_ManPrintStats(v13, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>);\n  } else {\n    xxx Dar_ManRewrite((xxx *)pAig, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>,\n                       v8);\n    v9 = (xxx *)xxx Aig_ManDupDfs((xxx *)pAig,\n                                  (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>);\n    xxx Aig_ManStop((xxx *)pAig, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>);\n    xxx Dar_ManRefactor(v9, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRef</span>, v10);\n    v11 = (xxx *)xxx Aig_ManDupDfs(v9,\n                                   (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRef</span>);\n    xxx Aig_ManStop(v9, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRef</span>);\n    if (fBalance) {\n      v20 = (xxx Aig_Man_t_ *)(unsigned int)fUpdateLevel;\n      v21 = (xxx *)xxx Dar_ManBalance(\n          v11, (xxx Aig_Man_t_ *)(unsigned int)fUpdateLevel, (int)v12);\n      xxx Aig_ManStop(v11, v20);\n      <span class=\"supfact\">ParsRwr</span>.fUseZeros = Number;\n      <span class=\"supfact\">ParsRef</span>.fUseZeros = Number;\n      xxx Dar_ManRewrite(v21, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>, v22);\n      v13 = (xxx *)xxx Aig_ManDupDfs(\n          v21, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>);\n      xxx Aig_ManStop(v21, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>);\n    } else {\n      <span class=\"supfact\">ParsRwr</span>.fUseZeros = Number;\n      <span class=\"supfact\">ParsRef</span>.fUseZeros = Number;\n      xxx Dar_ManRewrite(v11, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>, v12);\n      v13 = (xxx *)xxx Aig_ManDupDfs(\n          v11, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>);\n      xxx Aig_ManStop(v11, (xxx Aig_Man_t_ *)&<span class=\"supfact\">ParsRwr</span>);\n    }\n  }\n  return (xxx Aig_Man_t *)v13;\n}", "var": [{"name": "v16", "type": "int", "pred_name": "v16", "ref_name": "ParsRef", "ref_type": "struct xxx::Dar_RefPar_t { int nMffcMin; int nLeafMax; int nCutsMax; int fExtend; int fUpdateLevel; int fUseZeros; int fVerbose; int fVeryVerbose; }"}, {"name": "v19", "type": "_BYTE[12]", "pred_name": "v19", "ref_name": "ParsRwr", "ref_type": "struct xxx::Dar_RwrPar_t { int nCutsMax; int nSubgMax; int fFanout; int fUpdateLevel; int fUseZeros; int fPower; int fRecycle; int fVerbose; int fVeryVerbose; }"}], "body_in_train": false}, {"repo_owner": "v4o6", "repo_name": "cpsc314", "path": "v4o6/cpsc314/a25c6f651200c99b5d3b2a5b5317b70c75a4cab6d83283e756e97ad31a5762e2", "path_in_repo": "v4o6/cpsc314/template_clean/a3", "objdump": "0000000000412d1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_>:\n  412d1e:\t55                   \tpush   %rbp\n  412d1f:\t48 89 e5             \tmov    %rsp,%rbp\n  412d22:\t53                   \tpush   %rbx\n  412d23:\t48 83 ec 78          \tsub    $0x78,%rsp\n  412d27:\t48 89 7d 88          \tmov    %rdi,-0x78(%rbp)\n  412d2b:\t48 89 75 80          \tmov    %rsi,-0x80(%rbp)\n  412d2f:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n  412d33:\t48 89 c7             \tmov    %rax,%rdi\n  412d36:\te8 63 f3 ff ff       \tcallq  41209e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_M_beginEv>\n  412d3b:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n  412d3f:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n  412d43:\t48 89 c7             \tmov    %rax,%rdi\n  412d46:\te8 5b fd ff ff       \tcallq  412aa6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_M_endEv>\n  412d4b:\t48 89 45 98          \tmov    %rax,-0x68(%rbp)\n  412d4f:\tc6 45 ef 01          \tmovb   $0x1,-0x11(%rbp)\n  412d53:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  412d57:\t48 85 c0             \ttest   %rax,%rax\n  412d5a:\t74 53                \tje     412daf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x91>\n  412d5c:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  412d60:\t48 89 45 98          \tmov    %rax,-0x68(%rbp)\n  412d64:\t48 8b 5d 88          \tmov    -0x78(%rbp),%rbx\n  412d68:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  412d6c:\t48 89 c7             \tmov    %rax,%rdi\n  412d6f:\te8 b2 fb ff ff       \tcallq  412926 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E>\n  412d74:\t48 89 c2             \tmov    %rax,%rdx\n  412d77:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n  412d7b:\t48 89 c6             \tmov    %rax,%rsi\n  412d7e:\t48 89 df             \tmov    %rbx,%rdi\n  412d81:\te8 cc f3 ff ff       \tcallq  412152 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>\n  412d86:\t88 45 ef             \tmov    %al,-0x11(%rbp)\n  412d89:\t80 7d ef 00          \tcmpb   $0x0,-0x11(%rbp)\n  412d8d:\t74 0e                \tje     412d9d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x7f>\n  412d8f:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  412d93:\t48 89 c7             \tmov    %rax,%rdi\n  412d96:\te8 5a f5 ff ff       \tcallq  4122f5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base>\n  412d9b:\teb 0c                \tjmp    412da9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x8b>\n  412d9d:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  412da1:\t48 89 c7             \tmov    %rax,%rdi\n  412da4:\te8 3a f5 ff ff       \tcallq  4122e3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base>\n  412da9:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n  412dad:\teb a4                \tjmp    412d53 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x35>\n  412daf:\t48 8b 55 98          \tmov    -0x68(%rbp),%rdx\n  412db3:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n  412db7:\t48 89 d6             \tmov    %rdx,%rsi\n  412dba:\t48 89 c7             \tmov    %rax,%rdi\n  412dbd:\te8 54 fc ff ff       \tcallq  412a16 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE5ImageEEC1EPSt18_Rb_tree_node_base>\n  412dc2:\t80 7d ef 00          \tcmpb   $0x0,-0x11(%rbp)\n  412dc6:\t74 54                \tje     412e1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xfe>\n  412dc8:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n  412dcc:\t48 89 c7             \tmov    %rax,%rdi\n  412dcf:\te8 e6 02 00 00       \tcallq  4130ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE5beginEv>\n  412dd4:\t48 89 45 a8          \tmov    %rax,-0x58(%rbp)\n  412dd8:\t48 8d 55 a8          \tlea    -0x58(%rbp),%rdx\n  412ddc:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n  412de0:\t48 89 d6             \tmov    %rdx,%rsi\n  412de3:\t48 89 c7             \tmov    %rax,%rdi\n  412de6:\te8 05 f3 ff ff       \tcallq  4120f0 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE5ImageEESC_>\n  412deb:\t84 c0                \ttest   %al,%al\n  412ded:\t74 21                \tje     412e10 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0xf2>\n  412def:\t48 8d 55 98          \tlea    -0x68(%rbp),%rdx\n  412df3:\t48 8d 4d a0          \tlea    -0x60(%rbp),%rcx\n  412df7:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n  412dfb:\t48 89 ce             \tmov    %rcx,%rsi\n  412dfe:\t48 89 c7             \tmov    %rax,%rdi\n  412e01:\te8 de 02 00 00       \tcallq  4130e4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE5ImageEERS1_Lb1EEEOT_OT0_>\n  412e06:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  412e0a:\t48 8b 55 b8          \tmov    -0x48(%rbp),%rdx\n  412e0e:\teb 7d                \tjmp    412e8d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x16f>\n  412e10:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n  412e14:\t48 89 c7             \tmov    %rax,%rdi\n  412e17:\te8 ce 00 00 00       \tcallq  412eea <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE5ImageEEmmEv>\n  412e1c:\t48 8b 5d 88          \tmov    -0x78(%rbp),%rbx\n  412e20:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  412e24:\t48 89 c7             \tmov    %rax,%rdi\n  412e27:\te8 9c fe ff ff       \tcallq  412cc8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base>\n  412e2c:\t48 89 c1             \tmov    %rax,%rcx\n  412e2f:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n  412e33:\t48 89 c2             \tmov    %rax,%rdx\n  412e36:\t48 89 ce             \tmov    %rcx,%rsi\n  412e39:\t48 89 df             \tmov    %rbx,%rdi\n  412e3c:\te8 11 f3 ff ff       \tcallq  412152 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>\n  412e41:\t84 c0                \ttest   %al,%al\n  412e43:\t74 21                \tje     412e66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x148>\n  412e45:\t48 8d 55 98          \tlea    -0x68(%rbp),%rdx\n  412e49:\t48 8d 4d a0          \tlea    -0x60(%rbp),%rcx\n  412e4d:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  412e51:\t48 89 ce             \tmov    %rcx,%rsi\n  412e54:\t48 89 c7             \tmov    %rax,%rdi\n  412e57:\te8 88 02 00 00       \tcallq  4130e4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE5ImageEERS1_Lb1EEEOT_OT0_>\n  412e5c:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  412e60:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n  412e64:\teb 27                \tjmp    412e8d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_5ImageESt10_Select1stIS9_ESt4lessIS5_ESaIS9_EE24_M_get_insert_unique_posERS7_+0x16f>\n  412e66:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n  412e6d:\t00 \n  412e6e:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n  412e72:\t48 8d 4d 90          \tlea    -0x70(%rbp),%rcx\n  412e76:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  412e7a:\t48 89 ce             \tmov    %rcx,%rsi\n  412e7d:\t48 89 c7             \tmov    %rax,%rdi\n  412e80:\te8 b5 00 00 00       \tcallq  412f3a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_Lb1EEEOT_RKS1_>\n  412e85:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  412e89:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n  412e8d:\t48 83 c4 78          \tadd    $0x78,%rsp\n  412e91:\t5b                   \tpop    %rbx\n  412e92:\t5d                   \tpop    %rbp\n  412e93:\tc3                   \tretq   ", "code_s": "__int64 __fastcall std _Rb_tree<\n    std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>,\n    std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                      std allocator<char>> const,\n             Image>,\n    std _Select1st<\n        std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                          std allocator<char>> const,\n                 Image>>,\n    std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                      std allocator<char>>>,\n    std allocator<std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                    std allocator<char>> const,\n                           Image>>>\n_M_get_insert_unique_pos(__int64 a1, __int64 a2) {\n  __int64 v2;\n  __int64 v3;\n  __int64 result;\n  __int64 v5;\n  __int64 v6;\n  __int64 v7;\n  __int64 v8;\n  __int64 v9;\n  __int64 v10;\n  __int64 v11;\n  __int64 v12;\n  __int64 v13;\n  char v14;\n  v8 = std _Rb_tree<\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>,\n      std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>> const,\n               Image>,\n      std _Select1st<\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>>,\n      std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>>>,\n      std allocator<\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>>>\n      _M_begin(a1);\n  v7 = std _Rb_tree<\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>,\n      std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>> const,\n               Image>,\n      std _Select1st<\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>>,\n      std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>>>,\n      std allocator<\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>>>\n      _M_end(a1);\n  v14 = Number;\n  while (v8) {\n    v7 = v8;\n    v2 = std _Rb_tree<\n        std __cxx11\n            basic_string<char, std char_traits<char>, std allocator<char>>,\n        std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                          std allocator<char>> const,\n                 Image>,\n        std _Select1st<\n            std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>> const,\n                     Image>>,\n        std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                          std allocator<char>>>,\n        std allocator<\n            std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>> const,\n                     Image>>>\n        _S_key(v8);\n    v14 = std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>>>\n    operator()(a1, a2, v2);\n    if (v14)\n      v3 = std _Rb_tree<\n          std __cxx11\n              basic_string<char, std char_traits<char>, std allocator<char>>,\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>,\n          std _Select1st<\n              std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                std allocator<char>> const,\n                       Image>>,\n          std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>>>,\n          std allocator<\n              std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                std allocator<char>> const,\n                       Image>>>\n          _S_left(v8);\n    else\n      v3 = std _Rb_tree<\n          std __cxx11\n              basic_string<char, std char_traits<char>, std allocator<char>>,\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>,\n          std _Select1st<\n              std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                std allocator<char>> const,\n                       Image>>,\n          std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>>>,\n          std allocator<\n              std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                std allocator<char>> const,\n                       Image>>>\n          _S_right(v8);\n    v8 = v3;\n  }\n  std _Rb_tree_iterator<\n      std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>> const,\n               Image>>\n      _Rb_tree_iterator(&v6, v7);\n  if (v14) {\n    v9 = std _Rb_tree<\n        std __cxx11\n            basic_string<char, std char_traits<char>, std allocator<char>>,\n        std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                          std allocator<char>> const,\n                 Image>,\n        std _Select1st<\n            std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>> const,\n                     Image>>,\n        std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                          std allocator<char>>>,\n        std allocator<\n            std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>> const,\n                     Image>>>\n        begin(a1);\n    if (std operator==(&v6, &v9)) {\n      std pair<std _Rb_tree_node_base *, std _Rb_tree_node_base *> pair<\n          std _Rb_tree_node<\n              std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                std allocator<char>> const,\n                       Image>> *&,\n          std _Rb_tree_node_base *&, true>(&v10, &v8, &v7);\n      return v10;\n    }\n    std _Rb_tree_iterator<\n        std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                          std allocator<char>> const,\n                 Image>>\n    operator--(&v6);\n  }\n  v5 = std _Rb_tree<\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>,\n      std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>> const,\n               Image>,\n      std _Select1st<\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>>,\n      std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>>>,\n      std allocator<\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>>>\n      _S_key(v6);\n  if ((unsigned __int8)std less<std __cxx11 basic_string<\n          char, std char_traits<char>, std allocator<char>>>\n      operator()(a1, v5, a2)) {\n    std pair<std _Rb_tree_node_base *, std _Rb_tree_node_base *>\n        pair<std _Rb_tree_node<\n                 std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                   std allocator<char>> const,\n                          Image>> *&,\n             std _Rb_tree_node_base *&, true>(&v11, &v8, &v7);\n    result = v11;\n  } else {\n    v13 = Number L;\n    std pair<std _Rb_tree_node_base *, std _Rb_tree_node_base *>\n        pair<std _Rb_tree_node_base *&, true>(&v12, &v6, &v13);\n    result = v12;\n  }\n  return result;\n}", "code_t": "std pair<std _Rb_tree_node_base *, std _Rb_tree_node_base *> __cdecl std\n    _Rb_tree<std __cxx11\n                 basic_string<char, std char_traits<char>, std allocator<char>>,\n             std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                               std allocator<char>> const,\n                      Image>,\n             std _Select1st<\n                 std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                   std allocator<char>> const,\n                          Image>>,\n             std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                               std allocator<char>>>,\n             std allocator<\n                 std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                   std allocator<char>> const,\n                          Image>>>\n    _M_get_insert_unique_pos(\n        std _Rb_tree<\n            std __cxx11\n                basic_string<char, std char_traits<char>, std allocator<char>>,\n            std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                                    std allocator<char>>,\n                     Image>,\n            std _Select1st<\n                std pair<const std __cxx11 basic_string<\n                             char, std char_traits<char>, std allocator<char>>,\n                         Image>>,\n            std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>>>,\n            std allocator<\n                std pair<const std __cxx11 basic_string<\n                             char, std char_traits<char>, std allocator<char>>,\n                         Image>>> *const this,\n        const std _Rb_tree<\n            std __cxx11\n                basic_string<char, std char_traits<char>, std allocator<char>>,\n            std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                                    std allocator<char>>,\n                     Image>,\n            std _Select1st<\n                std pair<const std __cxx11 basic_string<\n                             char, std char_traits<char>, std allocator<char>>,\n                         Image>>,\n            std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>>>,\n            std allocator<\n                std pair<const std __cxx11 basic_string<\n                             char, std char_traits<char>, std allocator<char>>,\n                         Image>>>\n            key_type *__k) {\n  const std __cxx11\n      basic_string<char, std char_traits<char>, std allocator<char>> *v2;\n  std _Rb_tree_node<\n      std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>>,\n               Image>> *v3;\n  std pair<std _Rb_tree_node_base *, std _Rb_tree_node_base *> result;\n  const std __cxx11\n      basic_string<char, std char_traits<char>, std allocator<char>> *v5;\n  std _Rb_tree<\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>,\n      std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>>,\n               Image>,\n      std _Select1st<\n          std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                                  std allocator<char>>,\n                   Image>>,\n      std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>>>,\n      std allocator<\n          std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                                  std allocator<char>>,\n                   Image>>>\n      iterator <span class=\"supfact\">__j</span>;\n  std _Rb_tree<\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>,\n      std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>>,\n               Image>,\n      std _Select1st<\n          std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                                  std allocator<char>>,\n                   Image>>,\n      std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>>>,\n      std allocator<\n          std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                                  std allocator<char>>,\n                   Image>>>\n      _Base_ptr __y;\n  std _Rb_tree<\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>,\n      std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>>,\n               Image>,\n      std _Select1st<\n          std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                                  std allocator<char>>,\n                   Image>>,\n      std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>>>,\n      std allocator<\n          std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                                  std allocator<char>>,\n                   Image>>>\n      _Link_type __x;\n  std _Rb_tree_iterator<\n      std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>>,\n               Image>>\n      _Self <span class=\"supfact\">v9</span>;\n  std pair<std _Rb_tree_node_base *, std _Rb_tree_node_base *>\n      <span class=\"supfact\">v10</span>;\n  std pair<std _Rb_tree_node_base *, std _Rb_tree_node_base *>\n      <span class=\"supfact\">v11</span>;\n  std pair<std _Rb_tree_node_base *, std _Rb_tree_node_base *>\n      <span class=\"supfact\">v12</span>;\n  std _Rb_tree_node_base *v13;\n  bool __comp;\n  __x = std _Rb_tree<\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>,\n      std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>> const,\n               Image>,\n      std _Select1st<\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>>,\n      std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>>>,\n      std allocator<\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>>>\n      _M_begin(this);\n  __y = std _Rb_tree<\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>,\n      std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>> const,\n               Image>,\n      std _Select1st<\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>>,\n      std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>>>,\n      std allocator<\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>>>\n      _M_end(this);\n  __comp = Number;\n  while (__x) {\n    __y = __x;\n    v2 = std _Rb_tree<\n        std __cxx11\n            basic_string<char, std char_traits<char>, std allocator<char>>,\n        std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                          std allocator<char>> const,\n                 Image>,\n        std _Select1st<\n            std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>> const,\n                     Image>>,\n        std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                          std allocator<char>>>,\n        std allocator<\n            std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>> const,\n                     Image>>>\n        _S_key(__x);\n    __comp = std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                               std allocator<char>>>\n    operator()(\n        (const std less<std __cxx11 basic_string<\n             char, std char_traits<char>, std allocator<char>>> *const)this,\n        __k, v2);\n    if (__comp)\n      v3 = std _Rb_tree<\n          std __cxx11\n              basic_string<char, std char_traits<char>, std allocator<char>>,\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>,\n          std _Select1st<\n              std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                std allocator<char>> const,\n                       Image>>,\n          std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>>>,\n          std allocator<\n              std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                std allocator<char>> const,\n                       Image>>>\n          _S_left(__x);\n    else\n      v3 = std _Rb_tree<\n          std __cxx11\n              basic_string<char, std char_traits<char>, std allocator<char>>,\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>,\n          std _Select1st<\n              std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                std allocator<char>> const,\n                       Image>>,\n          std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>>>,\n          std allocator<\n              std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                std allocator<char>> const,\n                       Image>>>\n          _S_right(__x);\n    __x = v3;\n  }\n  std _Rb_tree_iterator<\n      std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>> const,\n               Image>>\n      _Rb_tree_iterator(&<span class=\"supfact\">__j</span>, __y);\n  if (__comp) {\n    <span class=\"supfact\">v9</span>._M_node =\n        std _Rb_tree<\n            std __cxx11\n                basic_string<char, std char_traits<char>, std allocator<char>>,\n            std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>> const,\n                     Image>,\n            std _Select1st<\n                std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                  std allocator<char>> const,\n                         Image>>,\n            std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>>>,\n            std allocator<\n                std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                  std allocator<char>> const,\n                         Image>>>\n            begin(this)._M_node;\n    if (std operator==(&<span class=\"supfact\">__j</span>, &<span class=\"supfact\">v9</span>)) {\n      std pair<std _Rb_tree_node_base *, std _Rb_tree_node_base *> pair<\n          std _Rb_tree_node<\n              std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                std allocator<char>> const,\n                       Image>> *&,\n          std _Rb_tree_node_base *&, true>(&<span class=\"supfact\">v10</span>, &__x, &__y);\n      return <span class=\"supfact\">v10</span>;\n    }\n    std _Rb_tree_iterator<\n        std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                          std allocator<char>> const,\n                 Image>>\n    operator--(&<span class=\"supfact\">__j</span>);\n  }\n  v5 = std _Rb_tree<\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>,\n      std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>> const,\n               Image>,\n      std _Select1st<\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>>,\n      std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>>>,\n      std allocator<\n          std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                            std allocator<char>> const,\n                   Image>>>\n      _S_key(<span class=\"supfact\">__j</span>._M_node);\n  if (std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>>>\n      operator()(\n          (const std less<std __cxx11 basic_string<\n               char, std char_traits<char>, std allocator<char>>> *const)this,\n          v5, __k)) {\n    std pair<std _Rb_tree_node_base *, std _Rb_tree_node_base *>\n        pair<std _Rb_tree_node<\n                 std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                   std allocator<char>> const,\n                          Image>> *&,\n             std _Rb_tree_node_base *&, true>(&<span class=\"supfact\">v11</span>, &__x, &__y);\n    result = <span class=\"supfact\">v11</span>;\n  } else {\n    v13 = Number L;\n    std pair<std _Rb_tree_node_base *, std _Rb_tree_node_base *>\n        pair<std _Rb_tree_node_base *&, true>(\n            &<span class=\"supfact\">v12</span>, &<span class=\"supfact\">__j</span>._M_node, &v13);\n    result = <span class=\"supfact\">v12</span>;\n  }\n  return result;\n}", "var": [{"name": "v6", "type": "__int64", "pred_name": "v6", "ref_name": "__j", "ref_type": "struct std::_Rb_tree<std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::pair<const std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >,Image>,std::_Select1st<std::pair<const std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >,Image> >,std::less<std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<const std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >,Image> > >::iterator { std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >,Image> >::_Base_ptr _M_node; }"}, {"name": "v9", "type": "__int64", "pred_name": "v9", "ref_name": "v9", "ref_type": "struct std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >,Image> >::_Self { std::_Rb_tree_iterator<std::pair<const std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >,Image> >::_Base_ptr _M_node; }"}, {"name": "v10", "type": "__int64", "pred_name": "v10", "ref_name": "v10", "ref_type": "struct std::pair<std::_Rb_tree_node_base*,std::_Rb_tree_node_base*> { std::_Rb_tree_node_base * first; std::_Rb_tree_node_base * second; }"}, {"name": "v11", "type": "__int64", "pred_name": "v11", "ref_name": "v11", "ref_type": "struct std::pair<std::_Rb_tree_node_base*,std::_Rb_tree_node_base*> { std::_Rb_tree_node_base * first; std::_Rb_tree_node_base * second; }"}, {"name": "v12", "type": "__int64", "pred_name": "v12", "ref_name": "v12", "ref_type": "struct std::pair<std::_Rb_tree_node_base*,std::_Rb_tree_node_base*> { std::_Rb_tree_node_base * first; std::_Rb_tree_node_base * second; }"}], "body_in_train": false}, {"repo_owner": "luknw", "repo_name": "os", "path": "luknw/os/47fee36e901e6a93f22ec387f90c4f4bca6e462af8baa0e4e5be9948804b7d51", "path_in_repo": "luknw/os/barberqueue/mothership_SYSV", "objdump": "00000000004026ee <Semaphore_releaseTickets>:\n  4026ee:\t55                   \tpush   %rbp\n  4026ef:\t48 89 e5             \tmov    %rsp,%rbp\n  4026f2:\t48 83 ec 20          \tsub    $0x20,%rsp\n  4026f6:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  4026fa:\t89 f0                \tmov    %esi,%eax\n  4026fc:\t66 89 45 e4          \tmov    %ax,-0x1c(%rbp)\n  402700:\t66 83 7d e4 00       \tcmpw   $0x0,-0x1c(%rbp)\n  402705:\t7f 19                \tjg     402720 <Semaphore_releaseTickets+0x32>\n  402707:\tb9 70 41 40 00       \tmov    $0x404170,%ecx\n  40270c:\tba 22 00 00 00       \tmov    $0x22,%edx\n  402711:\tbe 38 41 40 00       \tmov    $0x404138,%esi\n  402716:\tbf 52 41 40 00       \tmov    $0x404152,%edi\n  40271b:\te8 60 fa ff ff       \tcallq  402180 <__assert_fail@plt>\n  402720:\t66 c7 45 fa 00 00    \tmovw   $0x0,-0x6(%rbp)\n  402726:\t0f b7 45 e4          \tmovzwl -0x1c(%rbp),%eax\n  40272a:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  40272e:\t66 c7 45 fe 00 00    \tmovw   $0x0,-0x2(%rbp)\n  402734:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  402738:\t8b 00                \tmov    (%rax),%eax\n  40273a:\t48 8d 4d fa          \tlea    -0x6(%rbp),%rcx\n  40273e:\tba 01 00 00 00       \tmov    $0x1,%edx\n  402743:\t48 89 ce             \tmov    %rcx,%rsi\n  402746:\t89 c7                \tmov    %eax,%edi\n  402748:\te8 d3 fb ff ff       \tcallq  402320 <semop@plt>\n  40274d:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n  402750:\t75 17                \tjne    402769 <Semaphore_releaseTickets+0x7b>\n  402752:\tb8 a0 40 40 00       \tmov    $0x4040a0,%eax\n  402757:\t48 89 c7             \tmov    %rax,%rdi\n  40275a:\te8 41 fb ff ff       \tcallq  4022a0 <perror@plt>\n  40275f:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  402764:\te8 c7 fb ff ff       \tcallq  402330 <exit@plt>\n  402769:\t90                   \tnop\n  40276a:\tc9                   \tleaveq \n  40276b:\tc3                   \tretq   ", "code_s": "int __fastcall Semaphore_releaseTickets(int *a1, __int16 a2) {\n  int result;\n  struct sembuf sops;\n  if (a2 <= Number)\n    __assert_fail(String, String, Number, String);\n  sops.sem_num = Number;\n  sops.sem_op = a2;\n  sops.sem_flg = Number;\n  result = semop(*a1, &sops, Number);\n  if (result == Number) {\n    perror(String);\n    exit(Number);\n  }\n  return result;\n}", "code_t": "void __cdecl Semaphore_releaseTickets(Semaphore_0 *s, __int16 tickets) {\n  sembuf <span class=\"supfact\">increment</span>;\n  if (tickets <= Number)\n    __assert_fail(String, String, Number, String);\n  <span class=\"supfact\">increment</span>.sem_num = Number;\n  <span class=\"supfact\">increment</span>.sem_op = tickets;\n  <span class=\"supfact\">increment</span>.sem_flg = Number;\n  if (semop(s->id, &<span class=\"supfact\">increment</span>, Number) == Number) {\n    perror(String);\n    exit(Number);\n  }\n}", "var": [{"name": "sops", "type": "struct sembuf { unsigned __int16 sem_num; __int16 sem_op; __int16 sem_flg; }", "pred_name": "sops", "ref_name": "increment", "ref_type": "struct sembuf { unsigned __int16 sem_num; __int16 sem_op; __int16 sem_flg; }"}], "body_in_train": false}, {"repo_owner": "nmacs", "repo_name": "print3d", "path": "nmacs/print3d/142ee0ab03aaea08c1cce3b49aba610648f7bc1ddb53dfc348f2f9408898fa3c", "path_in_repo": "nmacs/print3d//toolchain/openocd-0.7.0/jimtcl/jimsh", "objdump": "00000000004343db <JimTestBitLittleEndian>:\n  4343db:\t55                   \tpush   %rbp\n  4343dc:\t48 89 e5             \tmov    %rsp,%rbp\n  4343df:\t48 83 ec 20          \tsub    $0x20,%rsp\n  4343e3:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  4343e7:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n  4343ea:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n  4343ed:\tbe 08 00 00 00       \tmov    $0x8,%esi\n  4343f2:\t89 c7                \tmov    %eax,%edi\n  4343f4:\te8 07 22 fd ff       \tcallq  406600 <div@plt>\n  4343f9:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  4343fd:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  434400:\t48 63 d0             \tmovslq %eax,%rdx\n  434403:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  434407:\t48 01 d0             \tadd    %rdx,%rax\n  43440a:\t0f b6 00             \tmovzbl (%rax),%eax\n  43440d:\t0f b6 d0             \tmovzbl %al,%edx\n  434410:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  434413:\tbe 01 00 00 00       \tmov    $0x1,%esi\n  434418:\t89 c1                \tmov    %eax,%ecx\n  43441a:\td3 e6                \tshl    %cl,%esi\n  43441c:\t89 f0                \tmov    %esi,%eax\n  43441e:\t21 d0                \tand    %edx,%eax\n  434420:\tc9                   \tleaveq \n  434421:\tc3                   \tretq   ", "code_s": "__int64 __fastcall JimTestBitLittleEndian(__int64 a1, int a2) {\n  div_t v3;\n  v3 = div(a2, Number);\n  return *(unsigned __int8 *)(v3.quot + a1) &\n         (unsigned int)(Number << SLOBYTE(v3.rem));\n}", "code_t": "int __cdecl JimTestBitLittleEndian(const unsigned __int8 *bitvec, int b) {\n  div_t <span class=\"supfact\">pos</span>;\n  <span class=\"supfact\">pos</span> = div(b, Number);\n  return bitvec[<span class=\"supfact\">pos</span>.quot] &\n         (Number << SLOBYTE(<span class=\"supfact\">pos</span>.rem));\n}", "var": [{"name": "v3", "type": "int", "pred_name": "mask", "ref_name": "pos", "ref_type": "struct div_t { int quot; int rem; }"}], "body_in_train": false}, {"repo_owner": "wtlin2015", "repo_name": "git-test", "path": "wtlin2015/git-test/2b09429475539c51ee3792fd62c66f7c1139aee5b6dfbb0f98397645140f2abe", "path_in_repo": "wtlin2015/git-test/YahooKeyKey-Source-1.1.2528/ExternalLibraries/UnitTest++/src/tests/TestXmlTestReporter.o", "objdump": "0000000000002a15 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE>:\n    2a15:\t55                   \tpush   %rbp\n    2a16:\t48 89 e5             \tmov    %rsp,%rbp\n    2a19:\t41 54                \tpush   %r12\n    2a1b:\t53                   \tpush   %rbx\n    2a1c:\t48 81 ec 50 06 00 00 \tsub    $0x650,%rsp\n    2a23:\t48 89 bd b8 f9 ff ff \tmov    %rdi,-0x648(%rbp)\n    2a2a:\t48 89 b5 b0 f9 ff ff \tmov    %rsi,-0x650(%rbp)\n    2a31:\t48 89 95 a8 f9 ff ff \tmov    %rdx,-0x658(%rbp)\n    2a38:\t48 8d 85 60 fb ff ff \tlea    -0x4a0(%rbp),%rax\n    2a3f:\t48 89 c7             \tmov    %rax,%rdi\n    2a42:\te8 00 00 00 00       \tcallq  2a47 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x32>\n    2a47:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2a4e <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x39>\n    2a4e:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    2a53:\t48 89 c7             \tmov    %rax,%rdi\n    2a56:\te8 00 00 00 00       \tcallq  2a5b <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x46>\n    2a5b:\t85 c0                \ttest   %eax,%eax\n    2a5d:\t0f 95 c0             \tsetne  %al\n    2a60:\t84 c0                \ttest   %al,%al\n    2a62:\t74 23                \tje     2a87 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x72>\n    2a64:\tbf 08 00 00 00       \tmov    $0x8,%edi\n    2a69:\te8 00 00 00 00       \tcallq  2a6e <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x59>\n    2a6e:\t48 c7 00 00 00 00 00 \tmovq   $0x0,(%rax)\n    2a75:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2a7a:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2a7f:\t48 89 c7             \tmov    %rax,%rdi\n    2a82:\te8 00 00 00 00       \tcallq  2a87 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x72>\n    2a87:\t48 8b 95 b0 f9 ff ff \tmov    -0x650(%rbp),%rdx\n    2a8e:\t48 8b 85 b8 f9 ff ff \tmov    -0x648(%rbp),%rax\n    2a95:\t48 89 d6             \tmov    %rdx,%rsi\n    2a98:\t48 89 c7             \tmov    %rax,%rdi\n    2a9b:\te8 96 e9 ff ff       \tcallq  1436 <_ZN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper7RunImplERN8UnitTest11TestResultsE>\n    2aa0:\t48 8d 85 60 fb ff ff \tlea    -0x4a0(%rbp),%rax\n    2aa7:\t48 89 c7             \tmov    %rax,%rdi\n    2aaa:\te8 00 00 00 00       \tcallq  2aaf <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x9a>\n    2aaf:\te9 cc 01 00 00       \tjmpq   2c80 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x26b>\n    2ab4:\t49 89 c4             \tmov    %rax,%r12\n    2ab7:\t48 89 d3             \tmov    %rdx,%rbx\n    2aba:\t48 8d 85 60 fb ff ff \tlea    -0x4a0(%rbp),%rax\n    2ac1:\t48 89 c7             \tmov    %rax,%rdi\n    2ac4:\te8 00 00 00 00       \tcallq  2ac9 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0xb4>\n    2ac9:\t4c 89 e0             \tmov    %r12,%rax\n    2acc:\t48 89 da             \tmov    %rbx,%rdx\n    2acf:\teb 00                \tjmp    2ad1 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0xbc>\n    2ad1:\t48 83 fa 01          \tcmp    $0x1,%rdx\n    2ad5:\t74 0f                \tje     2ae6 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0xd1>\n    2ad7:\t48 83 fa 02          \tcmp    $0x2,%rdx\n    2adb:\t0f 84 90 00 00 00    \tje     2b71 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x15c>\n    2ae1:\te9 20 01 00 00       \tjmpq   2c06 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x1f1>\n    2ae6:\t48 89 c7             \tmov    %rax,%rdi\n    2ae9:\te8 00 00 00 00       \tcallq  2aee <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0xd9>\n    2aee:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    2af2:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    2af6:\t48 8b 00             \tmov    (%rax),%rax\n    2af9:\t48 83 c0 10          \tadd    $0x10,%rax\n    2afd:\t48 8b 10             \tmov    (%rax),%rdx\n    2b00:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    2b04:\t48 89 c7             \tmov    %rax,%rdi\n    2b07:\tff d2                \tcallq  *%rdx\n    2b09:\t48 89 c3             \tmov    %rax,%rbx\n    2b0c:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    2b10:\t48 89 c7             \tmov    %rax,%rdi\n    2b13:\te8 00 00 00 00       \tcallq  2b18 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x103>\n    2b18:\t41 89 c4             \tmov    %eax,%r12d\n    2b1b:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    2b1f:\t48 89 c7             \tmov    %rax,%rdi\n    2b22:\te8 00 00 00 00       \tcallq  2b27 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x112>\n    2b27:\t48 89 c1             \tmov    %rax,%rcx\n    2b2a:\t48 8b 85 a8 f9 ff ff \tmov    -0x658(%rbp),%rax\n    2b31:\t48 8b 10             \tmov    (%rax),%rdx\n    2b34:\t48 8b 85 a8 f9 ff ff \tmov    -0x658(%rbp),%rax\n    2b3b:\t48 8b 70 08          \tmov    0x8(%rax),%rsi\n    2b3f:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    2b43:\t45 89 e0             \tmov    %r12d,%r8d\n    2b46:\t48 89 c7             \tmov    %rax,%rdi\n    2b49:\te8 00 00 00 00       \tcallq  2b4e <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x139>\n    2b4e:\t48 8d 4d c0          \tlea    -0x40(%rbp),%rcx\n    2b52:\t48 8b 85 b0 f9 ff ff \tmov    -0x650(%rbp),%rax\n    2b59:\t48 89 da             \tmov    %rbx,%rdx\n    2b5c:\t48 89 ce             \tmov    %rcx,%rsi\n    2b5f:\t48 89 c7             \tmov    %rax,%rdi\n    2b62:\te8 00 00 00 00       \tcallq  2b67 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x152>\n    2b67:\te8 00 00 00 00       \tcallq  2b6c <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x157>\n    2b6c:\te9 0f 01 00 00       \tjmpq   2c80 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x26b>\n    2b71:\t48 89 c7             \tmov    %rax,%rdi\n    2b74:\te8 00 00 00 00       \tcallq  2b79 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x164>\n    2b79:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    2b7d:\t48 8d 85 c0 f9 ff ff \tlea    -0x640(%rbp),%rax\n    2b84:\t48 89 c7             \tmov    %rax,%rdi\n    2b87:\te8 00 00 00 00       \tcallq  2b8c <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x177>\n    2b8c:\t48 8d 85 c0 f9 ff ff \tlea    -0x640(%rbp),%rax\n    2b93:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2b98:\t48 89 c7             \tmov    %rax,%rdi\n    2b9b:\te8 00 00 00 00       \tcallq  2ba0 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x18b>\n    2ba0:\t48 89 c3             \tmov    %rax,%rbx\n    2ba3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2ba7:\t48 8b 00             \tmov    (%rax),%rax\n    2baa:\t48 83 c0 10          \tadd    $0x10,%rax\n    2bae:\t48 8b 10             \tmov    (%rax),%rdx\n    2bb1:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2bb5:\t48 89 c7             \tmov    %rax,%rdi\n    2bb8:\tff d2                \tcallq  *%rdx\n    2bba:\t48 89 c6             \tmov    %rax,%rsi\n    2bbd:\t48 89 df             \tmov    %rbx,%rdi\n    2bc0:\te8 00 00 00 00       \tcallq  2bc5 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x1b0>\n    2bc5:\t48 8d 85 c0 f9 ff ff \tlea    -0x640(%rbp),%rax\n    2bcc:\t48 89 c7             \tmov    %rax,%rdi\n    2bcf:\te8 00 00 00 00       \tcallq  2bd4 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x1bf>\n    2bd4:\t48 89 c2             \tmov    %rax,%rdx\n    2bd7:\t48 8b 8d a8 f9 ff ff \tmov    -0x658(%rbp),%rcx\n    2bde:\t48 8b 85 b0 f9 ff ff \tmov    -0x650(%rbp),%rax\n    2be5:\t48 89 ce             \tmov    %rcx,%rsi\n    2be8:\t48 89 c7             \tmov    %rax,%rdi\n    2beb:\te8 00 00 00 00       \tcallq  2bf0 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x1db>\n    2bf0:\t48 8d 85 c0 f9 ff ff \tlea    -0x640(%rbp),%rax\n    2bf7:\t48 89 c7             \tmov    %rax,%rdi\n    2bfa:\te8 00 00 00 00       \tcallq  2bff <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x1ea>\n    2bff:\te8 00 00 00 00       \tcallq  2c04 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x1ef>\n    2c04:\teb 7a                \tjmp    2c80 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x26b>\n    2c06:\t48 89 c7             \tmov    %rax,%rdi\n    2c09:\te8 00 00 00 00       \tcallq  2c0e <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x1f9>\n    2c0e:\t48 8b 8d a8 f9 ff ff \tmov    -0x658(%rbp),%rcx\n    2c15:\t48 8b 85 b0 f9 ff ff \tmov    -0x650(%rbp),%rax\n    2c1c:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2c21:\t48 89 ce             \tmov    %rcx,%rsi\n    2c24:\t48 89 c7             \tmov    %rax,%rdi\n    2c27:\te8 00 00 00 00       \tcallq  2c2c <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x217>\n    2c2c:\te8 00 00 00 00       \tcallq  2c31 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x21c>\n    2c31:\teb 4d                \tjmp    2c80 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x26b>\n    2c33:\t48 89 c3             \tmov    %rax,%rbx\n    2c36:\te8 00 00 00 00       \tcallq  2c3b <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x226>\n    2c3b:\t48 89 d8             \tmov    %rbx,%rax\n    2c3e:\t48 89 c7             \tmov    %rax,%rdi\n    2c41:\te8 00 00 00 00       \tcallq  2c46 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x231>\n    2c46:\t48 89 c3             \tmov    %rax,%rbx\n    2c49:\t48 8d 85 c0 f9 ff ff \tlea    -0x640(%rbp),%rax\n    2c50:\t48 89 c7             \tmov    %rax,%rdi\n    2c53:\te8 00 00 00 00       \tcallq  2c58 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x243>\n    2c58:\teb 03                \tjmp    2c5d <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x248>\n    2c5a:\t48 89 c3             \tmov    %rax,%rbx\n    2c5d:\te8 00 00 00 00       \tcallq  2c62 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x24d>\n    2c62:\t48 89 d8             \tmov    %rbx,%rax\n    2c65:\t48 89 c7             \tmov    %rax,%rdi\n    2c68:\te8 00 00 00 00       \tcallq  2c6d <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x258>\n    2c6d:\t48 89 c3             \tmov    %rax,%rbx\n    2c70:\te8 00 00 00 00       \tcallq  2c75 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x260>\n    2c75:\t48 89 d8             \tmov    %rbx,%rax\n    2c78:\t48 89 c7             \tmov    %rax,%rdi\n    2c7b:\te8 00 00 00 00       \tcallq  2c80 <_ZN8UnitTest11ExecuteTestIN12_GLOBAL__N_154XmlTestReporterFixtureFailureMessageIsXMLEscapedHelperEEEvRT_RNS_11TestResultsERKNS_11TestDetailsE+0x26b>\n    2c80:\t48 81 c4 50 06 00 00 \tadd    $0x650,%rsp\n    2c87:\t5b                   \tpop    %rbx\n    2c88:\t41 5c                \tpop    %r12\n    2c8a:\t5d                   \tpop    %rbp\n    2c8b:\tc3                   \tretq   ", "code_s": "void __fastcall UnitTest ExecuteTest < ` anonymous namespace ' XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper > ( const UnitTest TestDetails * * a1 , UnitTest TestResults * a2 ) { _QWORD * v2 ; char v3 [ Number ] ; UnitTest SignalTranslator SignalTranslator ( ( UnitTest SignalTranslator * ) v3 ) ; if ( _sigsetjmp ( UnitTest SignalTranslator s_jumpTarget , Number ) ) { v2 = _cxa_allocate_exception ( Number ) ; * v2 = String ; _cxa_throw ( v2 , ( struct type_info * ) & ` typeinfo for ' char const * , Number L ) ;\n}\n` anonymous namespace ' XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper RunImpl ( a1 , a2 ) ; UnitTest SignalTranslator ~ SignalTranslator ( ( UnitTest SignalTranslator * ) v3 ) ; }", "code_t": "void __cdecl UnitTest ExecuteTest < ` anonymous namespace ' XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper > ( ` anonymous namespace ' XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper * testObject , UnitTest TestResults * testResults , const UnitTest TestDetails * details ) {\n  _QWORD *v3;\n  UnitTest SignalTranslator <span class=\"supfact\">sig</span>;\n  UnitTest SignalTranslator SignalTranslator(&<span class=\"supfact\">sig</span>);\n  if (_sigsetjmp(UnitTest SignalTranslator s_jumpTarget, Number)) {\n    v3 = _cxa_allocate_exception(Number);\n    *v3 = String; _cxa_throw ( v3 , ( struct type_info * ) & ` typeinfo for ' char const * , Number L ) ; } ` anonymous namespace ' XmlTestReporterFixtureFailureMessageIsXMLEscapedHelper RunImpl ( testObject , testResults ) ; UnitTest SignalTranslator ~ SignalTranslator ( & <span class=\"supfact\">sig</span> ) ;\n  }", "var": [{"name": "v3", "type": "__unk__", "pred_name": "sig", "ref_name": "sig", "ref_type": "struct UnitTest::SignalTranslator { sigjmp_buf m_currentJumpTarget; sigjmp_buf * m_oldJumpTarget; sigaction m_old_SIGFPE_action; sigaction m_old_SIGTRAP_action; sigaction m_old_SIGSEGV_action; sigaction m_old_SIGBUS_action; sigaction m_old_SIGABRT_action; sigaction m_old_SIGALRM_action; }"}], "body_in_train": false}, {"repo_owner": "xrl", "repo_name": "pf_ring", "path": "xrl/pf_ring/340292dd7655fa8f50f2135244ff16793bd62d9844f155ede6802eab5aed13b8", "path_in_repo": "xrl/pf_ring/userland/examples/dummy_plugin_pfcount.o", "objdump": "0000000000000a29 <main>:\n a29:\t55                   \tpush   %rbp\n a2a:\t48 89 e5             \tmov    %rsp,%rbp\n a2d:\t48 81 ec 70 0a 00 00 \tsub    $0xa70,%rsp\n a34:\t89 bd 9c f5 ff ff    \tmov    %edi,-0xa64(%rbp)\n a3a:\t48 89 b5 90 f5 ff ff \tmov    %rsi,-0xa70(%rbp)\n a41:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n a48:\t00 \n a49:\tc7 45 f0 01 00 00 00 \tmovl   $0x1,-0x10(%rbp)\n a50:\tc6 45 f7 06          \tmovb   $0x6,-0x9(%rbp)\n a54:\tbf 00 00 00 00       \tmov    $0x0,%edi\n a59:\te8 00 00 00 00       \tcallq  a5e <main+0x35>\n a5e:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # a64 <main+0x3b>\n a64:\teb 67                \tjmp    acd <main+0xa4>\n a66:\t0f be 45 ef          \tmovsbl -0x11(%rbp),%eax\n a6a:\t83 f8 76             \tcmp    $0x76,%eax\n a6d:\t74 53                \tje     ac2 <main+0x99>\n a6f:\t83 f8 76             \tcmp    $0x76,%eax\n a72:\t7f 59                \tjg     acd <main+0xa4>\n a74:\t83 f8 70             \tcmp    $0x70,%eax\n a77:\t74 35                \tje     aae <main+0x85>\n a79:\t83 f8 70             \tcmp    $0x70,%eax\n a7c:\t7f 4f                \tjg     acd <main+0xa4>\n a7e:\t83 f8 68             \tcmp    $0x68,%eax\n a81:\t74 07                \tje     a8a <main+0x61>\n a83:\t83 f8 69             \tcmp    $0x69,%eax\n a86:\t74 11                \tje     a99 <main+0x70>\n a88:\teb 43                \tjmp    acd <main+0xa4>\n a8a:\te8 00 00 00 00       \tcallq  a8f <main+0x66>\n a8f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n a94:\te9 3d 02 00 00       \tjmpq   cd6 <main+0x2ad>\n a99:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # aa0 <main+0x77>\n aa0:\t48 89 c7             \tmov    %rax,%rdi\n aa3:\te8 00 00 00 00       \tcallq  aa8 <main+0x7f>\n aa8:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n aac:\teb 1f                \tjmp    acd <main+0xa4>\n aae:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # ab5 <main+0x8c>\n ab5:\t48 89 c7             \tmov    %rax,%rdi\n ab8:\te8 00 00 00 00       \tcallq  abd <main+0x94>\n abd:\t88 45 f7             \tmov    %al,-0x9(%rbp)\n ac0:\teb 0b                \tjmp    acd <main+0xa4>\n ac2:\tc7 05 00 00 00 00 01 \tmovl   $0x1,0x0(%rip)        # acc <main+0xa3>\n ac9:\t00 00 00 \n acc:\t90                   \tnop\n acd:\t48 8b 8d 90 f5 ff ff \tmov    -0xa70(%rbp),%rcx\n ad4:\t8b 85 9c f5 ff ff    \tmov    -0xa64(%rbp),%eax\n ada:\tba 00 00 00 00       \tmov    $0x0,%edx\n adf:\t48 89 ce             \tmov    %rcx,%rsi\n ae2:\t89 c7                \tmov    %eax,%edi\n ae4:\te8 00 00 00 00       \tcallq  ae9 <main+0xc0>\n ae9:\t88 45 ef             \tmov    %al,-0x11(%rbp)\n aec:\t80 7d ef ff          \tcmpb   $0xff,-0x11(%rbp)\n af0:\t0f 85 70 ff ff ff    \tjne    a66 <main+0x3d>\n af6:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n afb:\t75 08                \tjne    b05 <main+0xdc>\n afd:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n b04:\t00 \n b05:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n b09:\t48 89 c6             \tmov    %rax,%rsi\n b0c:\tbf 00 00 00 00       \tmov    $0x0,%edi\n b11:\tb8 00 00 00 00       \tmov    $0x0,%eax\n b16:\te8 00 00 00 00       \tcallq  b1b <main+0xf2>\n b1b:\tc7 45 e8 01 00 00 00 \tmovl   $0x1,-0x18(%rbp)\n b22:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n b25:\t0f b6 f0             \tmovzbl %al,%esi\n b28:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n b2c:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n b31:\tba dc 05 00 00       \tmov    $0x5dc,%edx\n b36:\t48 89 c7             \tmov    %rax,%rdi\n b39:\te8 00 00 00 00       \tcallq  b3e <main+0x115>\n b3e:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # b45 <main+0x11c>\n b45:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # b4c <main+0x123>\n b4c:\t48 85 c0             \ttest   %rax,%rax\n b4f:\t75 14                \tjne    b65 <main+0x13c>\n b51:\tbf 00 00 00 00       \tmov    $0x0,%edi\n b56:\te8 00 00 00 00       \tcallq  b5b <main+0x132>\n b5b:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n b60:\te9 71 01 00 00       \tjmpq   cd6 <main+0x2ad>\n b65:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # b6c <main+0x143>\n b6c:\t48 8d 95 5c fe ff ff \tlea    -0x1a4(%rbp),%rdx\n b73:\t48 89 d6             \tmov    %rdx,%rsi\n b76:\t48 89 c7             \tmov    %rax,%rdi\n b79:\te8 00 00 00 00       \tcallq  b7e <main+0x155>\n b7e:\t8b 85 5c fe ff ff    \tmov    -0x1a4(%rbp),%eax\n b84:\t0f b6 d0             \tmovzbl %al,%edx\n b87:\t8b 85 5c fe ff ff    \tmov    -0x1a4(%rbp),%eax\n b8d:\tc1 e8 08             \tshr    $0x8,%eax\n b90:\t0f b6 c0             \tmovzbl %al,%eax\n b93:\t8b 8d 5c fe ff ff    \tmov    -0x1a4(%rbp),%ecx\n b99:\tc1 e9 10             \tshr    $0x10,%ecx\n b9c:\t89 ce                \tmov    %ecx,%esi\n b9e:\t89 d1                \tmov    %edx,%ecx\n ba0:\t89 c2                \tmov    %eax,%edx\n ba2:\tbf 00 00 00 00       \tmov    $0x0,%edi\n ba7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n bac:\te8 00 00 00 00       \tcallq  bb1 <main+0x188>\n bb1:\t83 7d f0 00          \tcmpl   $0x0,-0x10(%rbp)\n bb5:\t74 14                \tje     bcb <main+0x1a2>\n bb7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # bbe <main+0x195>\n bbe:\tbe 00 00 00 00       \tmov    $0x0,%esi\n bc3:\t48 89 c7             \tmov    %rax,%rdi\n bc6:\te8 00 00 00 00       \tcallq  bcb <main+0x1a2>\n bcb:\t48 8d 85 60 fe ff ff \tlea    -0x1a0(%rbp),%rax\n bd2:\tba 80 01 00 00       \tmov    $0x180,%edx\n bd7:\tbe 00 00 00 00       \tmov    $0x0,%esi\n bdc:\t48 89 c7             \tmov    %rax,%rdi\n bdf:\te8 00 00 00 00       \tcallq  be4 <main+0x1bb>\n be4:\t66 c7 85 60 fe ff ff \tmovw   $0x5,-0x1a0(%rbp)\n beb:\t05 00 \n bed:\tc7 85 64 fe ff ff 00 \tmovl   $0x0,-0x19c(%rbp)\n bf4:\t00 00 00 \n bf7:\tc6 85 7a fe ff ff 06 \tmovb   $0x6,-0x186(%rbp)\n bfe:\t66 c7 45 c2 01 00    \tmovw   $0x1,-0x3e(%rbp)\n c04:\t66 c7 85 c0 fe ff ff \tmovw   $0x1,-0x140(%rbp)\n c0b:\t01 00 \n c0d:\t48 8d 85 60 fe ff ff \tlea    -0x1a0(%rbp),%rax\n c14:\t48 83 c0 62          \tadd    $0x62,%rax\n c18:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n c1c:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n c20:\t0f b6 55 f7          \tmovzbl -0x9(%rbp),%edx\n c24:\t88 10                \tmov    %dl,(%rax)\n c26:\t83 7d f0 00          \tcmpl   $0x0,-0x10(%rbp)\n c2a:\t74 2e                \tje     c5a <main+0x231>\n c2c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c33 <main+0x20a>\n c33:\t48 8d 95 60 fe ff ff \tlea    -0x1a0(%rbp),%rdx\n c3a:\t48 89 d6             \tmov    %rdx,%rsi\n c3d:\t48 89 c7             \tmov    %rax,%rdi\n c40:\te8 00 00 00 00       \tcallq  c45 <main+0x21c>\n c45:\t85 c0                \ttest   %eax,%eax\n c47:\t79 11                \tjns    c5a <main+0x231>\n c49:\tbf 00 00 00 00       \tmov    $0x0,%edi\n c4e:\te8 00 00 00 00       \tcallq  c53 <main+0x22a>\n c53:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n c58:\teb 7c                \tjmp    cd6 <main+0x2ad>\n c5a:\tbe 00 00 00 00       \tmov    $0x0,%esi\n c5f:\tbf 02 00 00 00       \tmov    $0x2,%edi\n c64:\te8 00 00 00 00       \tcallq  c69 <main+0x240>\n c69:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # c6f <main+0x246>\n c6f:\t85 c0                \ttest   %eax,%eax\n c71:\t75 19                \tjne    c8c <main+0x263>\n c73:\tbe 00 00 00 00       \tmov    $0x0,%esi\n c78:\tbf 0e 00 00 00       \tmov    $0xe,%edi\n c7d:\te8 00 00 00 00       \tcallq  c82 <main+0x259>\n c82:\tbf 01 00 00 00       \tmov    $0x1,%edi\n c87:\te8 00 00 00 00       \tcallq  c8c <main+0x263>\n c8c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c93 <main+0x26a>\n c93:\t48 8d 95 a0 f5 ff ff \tlea    -0xa60(%rbp),%rdx\n c9a:\t48 8d b5 50 f6 ff ff \tlea    -0x9b0(%rbp),%rsi\n ca1:\t41 b8 01 00 00 00    \tmov    $0x1,%r8d\n ca7:\t48 89 d1             \tmov    %rdx,%rcx\n caa:\tba 00 08 00 00       \tmov    $0x800,%edx\n caf:\t48 89 c7             \tmov    %rax,%rdi\n cb2:\te8 00 00 00 00       \tcallq  cb7 <main+0x28e>\n cb7:\t85 c0                \ttest   %eax,%eax\n cb9:\t7e d1                \tjle    c8c <main+0x263>\n cbb:\t48 8d 95 50 f6 ff ff \tlea    -0x9b0(%rbp),%rdx\n cc2:\t48 8d 85 a0 f5 ff ff \tlea    -0xa60(%rbp),%rax\n cc9:\t48 89 d6             \tmov    %rdx,%rsi\n ccc:\t48 89 c7             \tmov    %rax,%rdi\n ccf:\te8 00 00 00 00       \tcallq  cd4 <main+0x2ab>\n cd4:\teb b6                \tjmp    c8c <main+0x263>\n cd6:\tc9                   \tleaveq \n cd7:\tc3                   \tretq   \n", "code_s": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  int result;\n  char v4[Number];\n  char v5[Number];\n  unsigned int v6;\n  int s[Number];\n  __int64 v8;\n  int v9;\n  char v10;\n  int v11;\n  char v12;\n  char *v13;\n  v13 = Number L;\n  v11 = Number;\n  v12 = Number;\n  thiszone = gmt2local(Number L);\n  while (Number) {\n    v10 = getopt(argc, (char *const *)argv, String);\n    if (v10 == Number)\n      break;\n    if (v10 == Number) {\n      verbose = Number;\n    } else if (v10 <= Number) {\n      if (v10 == Number) {\n        v12 = atoi(optarg);\n      } else if (v10 <= Number) {\n        if (v10 == Number) {\n          printHelp();\n          return Number;\n        }\n        if (v10 == Number)\n          v13 = strdup(optarg);\n      }\n    }\n  }\n  if (!v13)\n    v13 = String;\n  printf(String, v13);\n  v9 = Number;\n  pd = pfring_open(v13, Number L, Number L, Number L);\n  if (pd) {\n    pfring_version(pd, &v6);\n    printf(String, HIWORD(v6), BYTE1(v6), (unsigned __int8)v6);\n    if (v11)\n      pfring_toggle_filtering_policy(pd, Number L);\n    memset(s, Number, sizeof(s));\n    LOWORD(s[Number]) = Number;\n    s[Number] = Number;\n    BYTE2(s[Number]) = Number;\n    HIWORD(s[Number]) = Number;\n    LOWORD(s[Number]) = Number;\n    v8 = (__int64)&s[Number] + Number;\n    BYTE2(s[Number]) = v12;\n    if (!v11 || (int)pfring_add_filtering_rule(pd, s) >= Number) {\n      signal(Number, (__sighandler_t)sigproc);\n      if (!verbose) {\n        signal(Number, (__sighandler_t)my_sigalarm);\n        alarm(Number);\n      }\n      while (Number) {\n        while ((int)pfring_recv(pd, v5, Number L, v4, Number L) <= Number)\n          ;\n        dummyProcesssPacket((__int64)v4, v5);\n      }\n    }\n    puts(String);\n    result = Number;\n  } else {\n    puts(String);\n    result = Number;\n  }\n  return result;\n}", "code_t": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  int result;\n  pfring_pkthdr <span class=\"supfact\">hdr</span>;\n  u_char buffer[Number];\n  u_int32_t version;\n  filtering_rule <span class=\"supfact\">rule</span>;\n  dummy_filter *filter;\n  int promisc;\n  char c;\n  int add_rule;\n  u_int8_t protocol;\n  char *device;\n  device = Number L;\n  add_rule = Number;\n  protocol = Number;\n  thiszone = gmt2local(Number L);\n  while (Number) {\n    c = getopt(argc, (char *const *)argv, String);\n    if (c == Number)\n      break;\n    if (c == Number) {\n      verbose = Number;\n    } else if (c <= Number) {\n      if (c == Number) {\n        protocol = atoi(optarg);\n      } else if (c <= Number) {\n        if (c == Number) {\n          printHelp();\n          return Number;\n        }\n        if (c == Number)\n          device = strdup(optarg);\n      }\n    }\n  }\n  if (!device)\n    device = String;\n  printf(String, device);\n  promisc = Number;\n  pd = (pfring *)pfring_open(device, Number L, Number L, Number L);\n  if (pd) {\n    pfring_version(pd, &version);\n    printf(String, HIWORD(version), BYTE1(version), (unsigned __int8)version);\n    if (add_rule)\n      pfring_toggle_filtering_policy(pd, Number L);\n    memset(&<span class=\"supfact\">rule</span>, Number, sizeof(<span class=\"supfact\">rule</span>));\n    <span class=\"supfact\">rule</span>.rule_id = Number;\n    <span class=\"supfact\">rule</span>.rule_action = forward_packet_and_stop_rule_evaluation;\n    <span class=\"supfact\">rule</span>.core_fields.proto = Number;\n    <span class=\"supfact\">rule</span>.plugin_action.plugin_id = Number;\n    <span class=\"supfact\">rule</span>.extended_fields.filter_plugin_id = Number;\n    filter =\n        (dummy_filter *)<span class=\"supfact\">rule</span>.extended_fields.filter_plugin_data;\n    <span class=\"supfact\">rule</span>.extended_fields.filter_plugin_data[Number] = protocol;\n    if (!add_rule ||\n        (int)pfring_add_filtering_rule(pd, &<span class=\"supfact\">rule</span>) >= Number) {\n      signal(Number, (__sighandler_t)sigproc);\n      if (!verbose) {\n        signal(Number, (__sighandler_t)my_sigalarm);\n        alarm(Number);\n      }\n      while (Number) {\n        while ((int)pfring_recv(pd, buffer, Number L, &<span class=\"supfact\">hdr</span>,\n                                Number L) <= Number)\n          ;\n        dummyProcesssPacket(&<span class=\"supfact\">hdr</span>, buffer);\n      }\n    }\n    puts(String);\n    result = Number;\n  } else {\n    puts(String);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "v4", "type": "__unk__", "pred_name": "x", "ref_name": "hdr", "ref_type": "struct pfring_pkthdr { timeval ts; u_int32_t caplen; u_int32_t len; pfring_extended_pkthdr extended_hdr; }"}, {"name": "s", "type": "__unk__", "pred_name": "z", "ref_name": "rule", "ref_type": "struct filtering_rule { u_int16_t rule_id; PADDING (2); rule_action_behaviour rule_action; u_int8_t balance_id; u_int8_t balance_pool; PADDING (2); filtering_rule_core_fields core_fields; filtering_rule_extended_fields extended_fields; filtering_rule_plugin_action plugin_action; char[8] reflector_device_name; PADDING (4); filtering_internals internals; }"}], "body_in_train": false}, {"repo_owner": "morispi", "repo_name": "CONSENT", "path": "morispi/CONSENT/93e34db3646fe8c25ba7f785f15d8ddf10150faf3183dd236099eaf029fd3285", "path_in_repo": "morispi/CONSENT//src/merge.o", "objdump": "000000000000001c <_Z15getSmallestLineRSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmESaIS7_EEmPFiRKS7_SC_E.cold>:\n  1c:\t48 8b 7c 24 20       \tmov    0x20(%rsp),%rdi\n  21:\t48 8d 44 24 30       \tlea    0x30(%rsp),%rax\n  26:\t48 39 c7             \tcmp    %rax,%rdi\n  29:\t74 05                \tje     30 <_Z15getSmallestLineRSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmESaIS7_EEmPFiRKS7_SC_E.cold+0x14>\n  2b:\te8 00 00 00 00       \tcallq  30 <_Z15getSmallestLineRSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmESaIS7_EEmPFiRKS7_SC_E.cold+0x14>\n  30:\t48 89 ef             \tmov    %rbp,%rdi\n  33:\te8 00 00 00 00       \tcallq  38 <_Z11splitStringbNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES4_.cold>", "code_s": "void __fastcall __noreturn getSmallestLine(__int64 a1, __int64 a2, __int64 a3,\n                                           __int64 a4, __int64 a5, __int64 a6,\n                                           __int64 a7, __int64 a8, __int64 a9,\n                                           char *a10, __int64 a11, char a12) {\n  struct _Unwind_Exception *v12;\n  if (a10 != &a12)\n    operator delete(a10);\n  Unwind_Resume(v12);\n}", "code_t": "void __fastcall __noreturn getSmallestLine(__int64 a1, __int64 a2, __int64 a3,\n                                           __int64 a4, __int64 a5, __int64 a6,\n                                           __int64 a7, __int64 a8, __int64 a9,\n                                           char *a10, __int64 a11, char a12) {\n  struct _Unwind_Exception *<span class=\"supfact\">v12</span>;\n  if (a10 != &a12)\n    operator delete(a10);\n  Unwind_Resume(<span class=\"supfact\">v12</span>);\n}", "var": [{"name": "v12", "type": "struct _Unwind_Exception *", "pred_name": "v12", "ref_name": "v12", "ref_type": "struct _Unwind_Exception *"}], "body_in_train": false}, {"repo_owner": "isDerek", "repo_name": "BTC-Device", "path": "isDerek/BTC-Device/9eb5bdb0143a63b31132ea31d83410eefa0b801b31f29f5ffc43fd093e6ca1ae", "path_in_repo": "isDerek/BTC-Device/BTC_APP/middleware/multicore/erpc/Debug/Linux/erpcsniffer/obj/erpcgen/src/types/Type.o", "objdump": "0000000000000000 <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t53                   \tpush   %rbx\n   5:\t48 83 ec 48          \tsub    $0x48,%rsp\n   9:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n   d:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n  11:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  15:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  19:\t48 89 d6             \tmov    %rdx,%rsi\n  1c:\t48 89 c7             \tmov    %rax,%rdi\n  1f:\te8 00 00 00 00       \tcallq  24 <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_+0x24>\n  24:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n  28:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  2c:\t48 89 c7             \tmov    %rax,%rdi\n  2f:\te8 00 00 00 00       \tcallq  34 <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_+0x34>\n  34:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n  38:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n  3c:\t48 8d 45 c8          \tlea    -0x38(%rbp),%rax\n  40:\t48 89 d6             \tmov    %rdx,%rsi\n  43:\t48 89 c7             \tmov    %rax,%rdi\n  46:\te8 00 00 00 00       \tcallq  4b <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_+0x4b>\n  4b:\t84 c0                \ttest   %al,%al\n  4d:\t75 35                \tjne    84 <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_+0x84>\n  4f:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  53:\t48 89 c7             \tmov    %rax,%rdi\n  56:\te8 00 00 00 00       \tcallq  5b <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_+0x5b>\n  5b:\t48 8d 45 c8          \tlea    -0x38(%rbp),%rax\n  5f:\t48 89 c7             \tmov    %rax,%rdi\n  62:\te8 00 00 00 00       \tcallq  67 <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_+0x67>\n  67:\t48 8b 10             \tmov    (%rax),%rdx\n  6a:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  6e:\t48 8b 08             \tmov    (%rax),%rcx\n  71:\t48 8d 45 de          \tlea    -0x22(%rbp),%rax\n  75:\t48 89 ce             \tmov    %rcx,%rsi\n  78:\t48 89 c7             \tmov    %rax,%rdi\n  7b:\te8 00 00 00 00       \tcallq  80 <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_+0x80>\n  80:\t84 c0                \ttest   %al,%al\n  82:\t74 07                \tje     8b <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_+0x8b>\n  84:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  89:\teb 05                \tjmp    90 <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_+0x90>\n  8b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  90:\t84 c0                \ttest   %al,%al\n  92:\t74 50                \tje     e4 <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_+0xe4>\n  94:\t48 8b 5d b8          \tmov    -0x48(%rbp),%rbx\n  98:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  9c:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  a0:\t48 89 d6             \tmov    %rdx,%rsi\n  a3:\t48 89 c7             \tmov    %rax,%rdi\n  a6:\te8 00 00 00 00       \tcallq  ab <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_+0xab>\n  ab:\t48 8d 55 c8          \tlea    -0x38(%rbp),%rdx\n  af:\t48 8d 45 e8          \tlea    -0x18(%rbp),%rax\n  b3:\t48 89 d6             \tmov    %rdx,%rsi\n  b6:\t48 89 c7             \tmov    %rax,%rdi\n  b9:\te8 00 00 00 00       \tcallq  be <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_+0xbe>\n  be:\t48 8d 4d df          \tlea    -0x21(%rbp),%rcx\n  c2:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n  c6:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  ca:\t49 89 c8             \tmov    %rcx,%r8\n  cd:\t48 89 d1             \tmov    %rdx,%rcx\n  d0:\tba 00 00 00 00       \tmov    $0x0,%edx\n  d5:\t48 89 c6             \tmov    %rax,%rsi\n  d8:\t48 89 df             \tmov    %rbx,%rdi\n  db:\te8 00 00 00 00       \tcallq  e0 <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_+0xe0>\n  e0:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n  e4:\t48 8d 45 c8          \tlea    -0x38(%rbp),%rax\n  e8:\t48 89 c7             \tmov    %rax,%rdi\n  eb:\te8 00 00 00 00       \tcallq  f0 <_ZNSt3mapIPN7erpcgen6SymbolESt3setINS0_16_param_directionESt4lessIS4_ESaIS4_EES5_IS2_ESaISt4pairIKS2_S8_EEEixERSB_+0xf0>\n  f0:\t48 83 c0 08          \tadd    $0x8,%rax\n  f4:\t48 83 c4 48          \tadd    $0x48,%rsp\n  f8:\t5b                   \tpop    %rbx\n  f9:\t5d                   \tpop    %rbp\n  fa:\tc3                   \tretq   ", "code_s": "__int64 __fastcall std map<erpcgen Symbol *, std set<erpcgen _param_direction>>\noperator[](__int64 a1, _QWORD *a2) {\n  _QWORD *v2;\n  __int64 v5;\n  __int64 v6;\n  char v7;\n  char v8;\n  char v9[Number];\n  __int64 v10[Number];\n  v5 = std map<erpcgen Symbol *, std set<erpcgen _param_direction>> lower_bound(\n      a1, a2);\n  v6 = std map<erpcgen Symbol *, std set<erpcgen _param_direction>> end(a1);\n  if (std operator==(&v5, &v6) ||\n      (std map<erpcgen Symbol *, std set<erpcgen _param_direction>> key_comp(\n           a1),\n       v2 = (_QWORD *)std _Rb_tree_iterator<\n           std pair<erpcgen Symbol *const, std set<erpcgen _param_direction>>>\n       operator*(&v5),\n       (unsigned __int8)std less<erpcgen Symbol *> operator()(&v7, *a2, *v2))) {\n    std tuple<erpcgen Symbol *const &> tuple<void, true>(v9, a2);\n    std _Rb_tree_const_iterator<\n        std pair<erpcgen Symbol *const, std set<erpcgen _param_direction>>>\n        _Rb_tree_const_iterator(v10, &v5);\n    v5 = std _Rb_tree<\n        erpcgen Symbol *,\n        std pair<erpcgen Symbol *const, std set<erpcgen _param_direction>>,\n        std _Select1st<\n            std pair<erpcgen Symbol *const, std set<erpcgen _param_direction>>>,\n        std less<erpcgen Symbol *>,\n        std allocator<\n            std pair<erpcgen Symbol *const, std set<erpcgen _param_direction>>>>\n    _M_emplace_hint_unique<std piecewise_construct_t const &,\n                           std tuple<erpcgen Symbol *const &>, std tuple<>>(\n        a1, v10[Number], &std piecewise_construct, v9, &v8);\n  }\n  return std _Rb_tree_iterator<\n             std pair<erpcgen Symbol *const, std set<erpcgen _param_direction>>>\n         operator*(&v5) + Number;\n}", "code_t": "std map<erpcgen Symbol *, std set<erpcgen _param_direction>>\n    mapped_type *__cdecl std\n        map<erpcgen Symbol *, std set<erpcgen _param_direction>>\n        operator[](\n            std map<erpcgen Symbol *, std set<erpcgen _param_direction>>\n                *const this,\n            const std map<erpcgen Symbol *, std set<erpcgen _param_direction>>\n                key_type *__k) {\n  std _Rb_tree_iterator<\n      std pair<erpcgen Symbol *const, std set<erpcgen _param_direction>>>\n      reference v2;\n  const std piecewise_construct_t *v4;\n  std map<erpcgen Symbol *, std set<erpcgen _param_direction>> iterator\n      <span class=\"supfact\">__i</span>;\n  std _Rb_tree_iterator<\n      std pair<erpcgen Symbol *const, std set<erpcgen _param_direction>>>\n      _Self <span class=\"supfact\">__y</span>;\n  std less<erpcgen Symbol *> <span class=\"supfact\">v8</span>;\n  std tuple<> <span class=\"supfact\">v9</span>;\n  std tuple<erpcgen Symbol *const &> <span class=\"supfact\">v10</span>;\n  std _Rb_tree_const_iterator<\n      std pair<erpcgen Symbol *const, std set<erpcgen _param_direction>>>\n      <span class=\"supfact\">__pos</span>;\n  <span class=\"supfact\">__i</span>._M_node =\n      std map<erpcgen Symbol *, std set<erpcgen _param_direction>>\n          lower_bound(this, __k)._M_node;\n  <span class=\"supfact\">__y</span>._M_node =\n      std map<erpcgen Symbol *, std set<erpcgen _param_direction>> end(this)\n          ._M_node;\n  if (std operator==(&<span class=\"supfact\">__i</span>, &<span class=\"supfact\">__y</span>) ||\n      (std map<erpcgen Symbol *, std set<erpcgen _param_direction>> key_comp(\n           this),\n       v2 = std _Rb_tree_iterator<\n           std pair<erpcgen Symbol *const, std set<erpcgen _param_direction>>>\n       operator*(&<span class=\"supfact\">__i</span>),\n       std less<erpcgen Symbol *> operator()(&<span class=\"supfact\">v8</span>, *__k,\n                                             v2->first))) {\n    std tuple<erpcgen Symbol *const &> tuple<void, true>(&<span class=\"supfact\">v10</span>,\n                                                         __k);\n    std _Rb_tree_const_iterator<\n        std pair<erpcgen Symbol *const, std set<erpcgen _param_direction>>>\n        _Rb_tree_const_iterator(&<span class=\"supfact\">__pos</span>, &<span class=\"supfact\">__i</span>);\n    <span class=\"supfact\">__i</span>._M_node =\n        std _Rb_tree<\n            erpcgen Symbol *,\n            std pair<erpcgen Symbol *const, std set<erpcgen _param_direction>>,\n            std _Select1st<std pair<erpcgen Symbol *const,\n                                    std set<erpcgen _param_direction>>>,\n            std less<erpcgen Symbol *>,\n            std allocator<std pair<erpcgen Symbol *const,\n                                   std set<erpcgen _param_direction>>>>\n        _M_emplace_hint_unique<std piecewise_construct_t const &,\n                               std tuple<erpcgen Symbol *const &>, std tuple<>>(\n            &this->_M_t, <span class=\"supfact\">__pos</span>, &std piecewise_construct,\n            &<span class=\"supfact\">v10</span>, &<span class=\"supfact\">v9</span>, v4,\n            (std tuple<erpcgen Symbol *const &> *)__k, (std tuple<> *)this)\n            ._M_node;\n  }\n  return &std _Rb_tree_iterator<std pair<erpcgen Symbol *const,\n                                         std set<erpcgen _param_direction>>>\n          operator*(&<span class=\"supfact\">__i</span>)->second;\n}", "var": [{"name": "v5", "type": "__unk__", "pred_name": "__i", "ref_name": "__i", "ref_type": "struct std::map<erpcgen::Symbol*,std::set<erpcgen::_param_direction>>::iterator { std::_Rb_tree_iterator<std::pair<erpcgen::Symbol* const,std::set<erpcgen::_param_direction> > >::_Base_ptr _M_node; }"}, {"name": "v6", "type": "__unk__", "pred_name": "__y", "ref_name": "__y", "ref_type": "struct std::_Rb_tree_iterator<std::pair<erpcgen::Symbol* const,std::set<erpcgen::_param_direction> > >::_Self { std::_Rb_tree_iterator<std::pair<erpcgen::Symbol* const,std::set<erpcgen::_param_direction> > >::_Base_ptr _M_node; }"}, {"name": "v7", "type": "__unk__", "pred_name": "v8", "ref_name": "v8", "ref_type": "struct std::less<erpcgen::Symbol*> { std::binary_function<erpcgen::Symbol*,erpcgen::Symbol*,bool> baseclass_0; }"}, {"name": "v8", "type": "struct std::tuple<> { __int8[1] gap0; }", "pred_name": "v9", "ref_name": "v9", "ref_type": "struct std::tuple<> { __int8[1] gap0; }"}, {"name": "v9", "type": "struct std::tuple<const dstring&> { std::_Tuple_impl<0,const dstring&> baseclass_0; }", "pred_name": "v10", "ref_name": "v10", "ref_type": "struct std::tuple<erpcgen::Symbol* const&> { std::_Tuple_impl<0,erpcgen::Symbol* const&> baseclass_0; }"}, {"name": "v10", "type": "__unk__", "pred_name": "__pos", "ref_name": "__pos", "ref_type": "struct std::_Rb_tree_const_iterator<std::pair<erpcgen::Symbol* const,std::set<erpcgen::_param_direction> > > { std::_Rb_tree_const_iterator<std::pair<erpcgen::Symbol* const,std::set<erpcgen::_param_direction> > >::_Base_ptr _M_node; }"}], "body_in_train": false}, {"repo_owner": "thingyjp", "repo_name": "thingymcconfig", "path": "thingyjp/thingymcconfig/b3cb36c4dfb8364ee5d587a40b01c790bc2077f8ff5fe6666c38c9f3122cc098", "path_in_repo": "thingyjp/thingymcconfig/hostap/wlantest/process.o", "objdump": "0000000000000bd3 <wlantest_process>:\n     bd3:\t55                   \tpush   %rbp\n     bd4:\t48 89 e5             \tmov    %rsp,%rbp\n     bd7:\t48 81 ec b0 00 00 00 \tsub    $0xb0,%rsp\n     bde:\t48 89 bd 68 ff ff ff \tmov    %rdi,-0x98(%rbp)\n     be5:\t48 89 b5 60 ff ff ff \tmov    %rsi,-0xa0(%rbp)\n     bec:\t48 89 95 58 ff ff ff \tmov    %rdx,-0xa8(%rbp)\n     bf3:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n     bfa:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n     c01:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n     c08:\tc7 45 f0 00 00 00 00 \tmovl   $0x0,-0x10(%rbp)\n     c0f:\t48 8b 95 58 ff ff ff \tmov    -0xa8(%rbp),%rdx\n     c16:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n     c1d:\t48 89 d1             \tmov    %rdx,%rcx\n     c20:\t48 89 c2             \tmov    %rax,%rdx\n     c23:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     c28:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     c2d:\te8 00 00 00 00       \tcallq  c32 <wlantest_process+0x5f>\n     c32:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n     c39:\t89 c2                \tmov    %eax,%edx\n     c3b:\t48 8b b5 60 ff ff ff \tmov    -0xa0(%rbp),%rsi\n     c42:\t48 8d 85 70 ff ff ff \tlea    -0x90(%rbp),%rax\n     c49:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n     c4e:\t48 89 c7             \tmov    %rax,%rdi\n     c51:\te8 00 00 00 00       \tcallq  c56 <wlantest_process+0x83>\n     c56:\t85 c0                \ttest   %eax,%eax\n     c58:\t74 23                \tje     c7d <wlantest_process+0xaa>\n     c5a:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n     c61:\tba 00 00 00 00       \tmov    $0x0,%edx\n     c66:\tbe 03 00 00 00       \tmov    $0x3,%esi\n     c6b:\t48 89 c7             \tmov    %rax,%rdi\n     c6e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     c73:\te8 00 00 00 00       \tcallq  c78 <wlantest_process+0xa5>\n     c78:\te9 4e 02 00 00       \tjmpq   ecb <wlantest_process+0x2f8>\n     c7d:\t48 8d 85 70 ff ff ff \tlea    -0x90(%rbp),%rax\n     c84:\t48 89 c7             \tmov    %rax,%rdi\n     c87:\te8 00 00 00 00       \tcallq  c8c <wlantest_process+0xb9>\n     c8c:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n     c8f:\t8b 55 a8             \tmov    -0x58(%rbp),%edx\n     c92:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n     c95:\t89 d1                \tmov    %edx,%ecx\n     c97:\t89 c2                \tmov    %eax,%edx\n     c99:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     c9e:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     ca3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     ca8:\te8 00 00 00 00       \tcallq  cad <wlantest_process+0xda>\n     cad:\t83 7d e4 fe          \tcmpl   $0xfffffffe,-0x1c(%rbp)\n     cb1:\t0f 84 e3 00 00 00    \tje     d9a <wlantest_process+0x1c7>\n     cb7:\t83 7d e4 00          \tcmpl   $0x0,-0x1c(%rbp)\n     cbb:\t74 28                \tje     ce5 <wlantest_process+0x112>\n     cbd:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n     cc0:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n     cc7:\t89 d1                \tmov    %edx,%ecx\n     cc9:\tba 00 00 00 00       \tmov    $0x0,%edx\n     cce:\tbe 03 00 00 00       \tmov    $0x3,%esi\n     cd3:\t48 89 c7             \tmov    %rax,%rdi\n     cd6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     cdb:\te8 00 00 00 00       \tcallq  ce0 <wlantest_process+0x10d>\n     ce0:\te9 e6 01 00 00       \tjmpq   ecb <wlantest_process+0x2f8>\n     ce5:\t8b 45 a8             \tmov    -0x58(%rbp),%eax\n     ce8:\t83 f8 1e             \tcmp    $0x1e,%eax\n     ceb:\t74 5a                \tje     d47 <wlantest_process+0x174>\n     ced:\t83 f8 1e             \tcmp    $0x1e,%eax\n     cf0:\t7f 8b                \tjg     c7d <wlantest_process+0xaa>\n     cf2:\t83 f8 0f             \tcmp    $0xf,%eax\n     cf5:\t74 37                \tje     d2e <wlantest_process+0x15b>\n     cf7:\t83 f8 0f             \tcmp    $0xf,%eax\n     cfa:\t7f 81                \tjg     c7d <wlantest_process+0xaa>\n     cfc:\t83 f8 01             \tcmp    $0x1,%eax\n     cff:\t74 0a                \tje     d0b <wlantest_process+0x138>\n     d01:\t83 f8 0e             \tcmp    $0xe,%eax\n     d04:\t74 1f                \tje     d25 <wlantest_process+0x152>\n     d06:\te9 8a 00 00 00       \tjmpq   d95 <wlantest_process+0x1c2>\n     d0b:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n     d0f:\t0f b6 00             \tmovzbl (%rax),%eax\n     d12:\t0f b6 c0             \tmovzbl %al,%eax\n     d15:\t83 e0 10             \tand    $0x10,%eax\n     d18:\t85 c0                \ttest   %eax,%eax\n     d1a:\t74 78                \tje     d94 <wlantest_process+0x1c1>\n     d1c:\tc7 45 f0 01 00 00 00 \tmovl   $0x1,-0x10(%rbp)\n     d23:\teb 6f                \tjmp    d94 <wlantest_process+0x1c1>\n     d25:\tc7 45 fc 01 00 00 00 \tmovl   $0x1,-0x4(%rbp)\n     d2c:\teb 67                \tjmp    d95 <wlantest_process+0x1c2>\n     d2e:\tc7 45 f8 01 00 00 00 \tmovl   $0x1,-0x8(%rbp)\n     d35:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n     d39:\t0f b7 00             \tmovzwl (%rax),%eax\n     d3c:\t0f b7 c0             \tmovzwl %ax,%eax\n     d3f:\t83 e0 01             \tand    $0x1,%eax\n     d42:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n     d45:\teb 4e                \tjmp    d95 <wlantest_process+0x1c2>\n     d47:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n     d4b:\t48 89 c7             \tmov    %rax,%rdi\n     d4e:\te8 ad f2 ff ff       \tcallq  0 <WPA_GET_BE24>\n     d53:\t3d 74 13 00 00       \tcmp    $0x1374,%eax\n     d58:\t0f 85 1f ff ff ff    \tjne    c7d <wlantest_process+0xaa>\n     d5e:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n     d62:\t48 83 c0 03          \tadd    $0x3,%rax\n     d66:\t0f b6 00             \tmovzbl (%rax),%eax\n     d69:\t84 c0                \ttest   %al,%al\n     d6b:\t0f 85 0c ff ff ff    \tjne    c7d <wlantest_process+0xaa>\n     d71:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n     d78:\tba 00 00 00 00       \tmov    $0x0,%edx\n     d7d:\tbe 02 00 00 00       \tmov    $0x2,%esi\n     d82:\t48 89 c7             \tmov    %rax,%rdi\n     d85:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     d8a:\te8 00 00 00 00       \tcallq  d8f <wlantest_process+0x1bc>\n     d8f:\te9 37 01 00 00       \tjmpq   ecb <wlantest_process+0x2f8>\n     d94:\t90                   \tnop\n     d95:\te9 e3 fe ff ff       \tjmpq   c7d <wlantest_process+0xaa>\n     d9a:\t90                   \tnop\n     d9b:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n     d9e:\t48 63 d0             \tmovslq %eax,%rdx\n     da1:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n     da8:\t48 01 d0             \tadd    %rdx,%rax\n     dab:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n     daf:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n     db2:\t48 98                \tcltq   \n     db4:\t48 8b 95 58 ff ff ff \tmov    -0xa8(%rbp),%rdx\n     dbb:\t48 29 c2             \tsub    %rax,%rdx\n     dbe:\t48 89 d0             \tmov    %rdx,%rax\n     dc1:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     dc5:\t83 7d f0 00          \tcmpl   $0x0,-0x10(%rbp)\n     dc9:\t74 76                \tje     e41 <wlantest_process+0x26e>\n     dcb:\t48 83 7d e8 03       \tcmpq   $0x3,-0x18(%rbp)\n     dd0:\t76 6f                \tjbe    e41 <wlantest_process+0x26e>\n     dd2:\t48 83 6d e8 04       \tsubq   $0x4,-0x18(%rbp)\n     dd7:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n     ddb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     ddf:\t48 01 d0             \tadd    %rdx,%rax\n     de2:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n     de6:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n     dea:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n     dee:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     df2:\t48 89 ce             \tmov    %rcx,%rsi\n     df5:\t48 89 c7             \tmov    %rax,%rdi\n     df8:\te8 89 fd ff ff       \tcallq  b86 <check_fcs>\n     dfd:\t85 c0                \ttest   %eax,%eax\n     dff:\t79 40                \tjns    e41 <wlantest_process+0x26e>\n     e01:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n     e08:\tba 00 00 00 00       \tmov    $0x0,%edx\n     e0d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     e12:\t48 89 c7             \tmov    %rax,%rdi\n     e15:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     e1a:\te8 00 00 00 00       \tcallq  e1f <wlantest_process+0x24c>\n     e1f:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n     e26:\t8b 80 b4 00 00 00    \tmov    0xb4(%rax),%eax\n     e2c:\t8d 50 01             \tlea    0x1(%rax),%edx\n     e2f:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n     e36:\t89 90 b4 00 00 00    \tmov    %edx,0xb4(%rax)\n     e3c:\te9 8a 00 00 00       \tjmpq   ecb <wlantest_process+0x2f8>\n     e41:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n     e45:\t74 06                \tje     e4d <wlantest_process+0x27a>\n     e47:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n     e4b:\t75 7d                \tjne    eca <wlantest_process+0x2f7>\n     e4d:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n     e51:\t75 1c                \tjne    e6f <wlantest_process+0x29c>\n     e53:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n     e57:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n     e5b:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n     e62:\t48 89 ce             \tmov    %rcx,%rsi\n     e65:\t48 89 c7             \tmov    %rax,%rdi\n     e68:\te8 5b fa ff ff       \tcallq  8c8 <rx_frame>\n     e6d:\teb 5c                \tjmp    ecb <wlantest_process+0x2f8>\n     e6f:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n     e76:\tba 00 00 00 00       \tmov    $0x0,%edx\n     e7b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     e80:\t48 89 c7             \tmov    %rax,%rdi\n     e83:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     e88:\te8 00 00 00 00       \tcallq  e8d <wlantest_process+0x2ba>\n     e8d:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n     e91:\t0f 94 c0             \tsete   %al\n     e94:\t0f b6 c8             \tmovzbl %al,%ecx\n     e97:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n     e9b:\t48 8b 75 d8          \tmov    -0x28(%rbp),%rsi\n     e9f:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n     ea6:\t48 89 c7             \tmov    %rax,%rdi\n     ea9:\te8 88 fc ff ff       \tcallq  b36 <tx_status>\n     eae:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n     eb2:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n     eb6:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n     ebd:\t48 89 ce             \tmov    %rcx,%rsi\n     ec0:\t48 89 c7             \tmov    %rax,%rdi\n     ec3:\te8 00 fa ff ff       \tcallq  8c8 <rx_frame>\n     ec8:\teb 01                \tjmp    ecb <wlantest_process+0x2f8>\n     eca:\t90                   \tnop\n     ecb:\tc9                   \tleaveq \n     ecc:\tc3                   \tretq   ", "code_s": "__int64 __fastcall wlantest_process(__int64 a1, __int64 a2, __int64 a3) {\n  __int64 result;\n  char v5[Number];\n  unsigned __int8 *v6;\n  int v7;\n  int v8;\n  __int64 v9;\n  unsigned __int16 *v10;\n  unsigned int v11;\n  unsigned __int64 v12;\n  int v13;\n  int v14;\n  int v15;\n  int v16;\n  v16 = Number;\n  v15 = Number;\n  v14 = Number;\n  v13 = Number;\n  wpa_hexdump(Number L, String, a2, a3);\n  if ((unsigned int)ieee80211_radiotap_iterator_init(v5, a2, (unsigned int)a3,\n                                                     Number L))\n    return add_note(a1, Number L, String);\n  while (Number) {\n    v11 = ieee80211_radiotap_iterator_next(v5);\n    wpa_printf(Number L, String, v11, (unsigned int)v7);\n    if (v11 == Number)\n      break;\n    if (v11)\n      return add_note(a1, Number L, String, v11);\n    if (v7 == Number) {\n      if ((unsigned int)WPA_GET_BE24(v6) == Number && !v6[Number])\n        return add_note(a1, Number L, String);\n    } else if (v7 <= Number) {\n      if (v7 == Number) {\n        v15 = Number;\n        v14 = *(_WORD *)v6 & Number;\n      } else if (v7 <= Number) {\n        if (v7 == Number) {\n          if ((*v6 & Number) != Number)\n            v13 = Number;\n        } else if (v7 == Number) {\n          v16 = Number;\n        }\n      }\n    }\n  }\n  v10 = (unsigned __int16 *)(v8 + a2);\n  result = a3 - v8;\n  v12 = result;\n  if (v13 && v12 > Number &&\n      (v12 -= Number L, v9 = (__int64)v10 + v12,\n       result = check_fcs((__int64)v10, v12, (unsigned __int8 *)v10 + v12),\n       (int)result < Number)) {\n    add_note(a1, Number L, String);\n    result = a1;\n    ++*(_DWORD *)(a1 + Number);\n  } else if (!v16 || !v15) {\n    if (v15) {\n      add_note(a1, Number L, String);\n      tx_status(a1, (__int64)v10, v12, v14 == Number);\n    }\n    result = rx_frame(a1, v10, v12);\n  }\n  return result;\n}", "code_t": "void __cdecl wlantest_process(wlantest *wt, const u8 *data, size_t len) {\n  ieee80211_radiotap_iterator <span class=\"supfact\">iter</span>;\n  const u8 *fcspos;\n  const u8 *frame;\n  int ret;\n  size_t frame_len;\n  int fcs;\n  int failed;\n  int txflags;\n  int rxflags;\n  rxflags = Number;\n  txflags = Number;\n  failed = Number;\n  fcs = Number;\n  wpa_hexdump(Number L, String, data, len);\n  if ((unsigned int)ieee80211_radiotap_iterator_init(\n          &<span class=\"supfact\">iter</span>, data, (unsigned int)len, Number L)) {\n    add_note(wt, Number L, String);\n  } else {\n    while (Number) {\n      ret = ieee80211_radiotap_iterator_next(&<span class=\"supfact\">iter</span>);\n      wpa_printf(Number L, String, (unsigned int)ret,\n                 (unsigned int)<span class=\"supfact\">iter</span>.this_arg_index);\n      if (ret == Number)\n        break;\n      if (ret) {\n        add_note(wt, Number L, String, (unsigned int)ret);\n        return;\n      }\n      if (<span class=\"supfact\">iter</span>.this_arg_index == Number) {\n        if (WPA_GET_BE24(<span class=\"supfact\">iter</span>.this_arg) == Number &&\n            !<span class=\"supfact\">iter</span>.this_arg[Number]) {\n          add_note(wt, Number L, String);\n          return;\n        }\n      } else if (<span class=\"supfact\">iter</span>.this_arg_index <= Number) {\n        if (<span class=\"supfact\">iter</span>.this_arg_index == Number) {\n          txflags = Number;\n          failed = *(_WORD *)<span class=\"supfact\">iter</span>.this_arg & Number;\n        } else if (<span class=\"supfact\">iter</span>.this_arg_index <= Number) {\n          if (<span class=\"supfact\">iter</span>.this_arg_index == Number) {\n            if ((*<span class=\"supfact\">iter</span>.this_arg & Number) != Number)\n              fcs = Number;\n          } else if (<span class=\"supfact\">iter</span>.this_arg_index == Number) {\n            rxflags = Number;\n          }\n        }\n      }\n    }\n    frame = &data[<span class=\"supfact\">iter</span>._max_length];\n    frame_len = len - <span class=\"supfact\">iter</span>._max_length;\n    if (fcs && frame_len > Number &&\n        (frame_len -= Number L, fcspos = &frame[frame_len],\n         check_fcs(frame, frame_len, &frame[frame_len]) < Number)) {\n      add_note(wt, Number L, String);\n      ++wt->fcs_error;\n    } else if (!rxflags || !txflags) {\n      if (txflags) {\n        add_note(wt, Number L, String);\n        tx_status(wt, frame, frame_len, failed == Number);\n      }\n      rx_frame(wt, frame, frame_len);\n    }\n  }\n}", "var": [{"name": "v5", "type": "__unk__", "pred_name": "iter", "ref_name": "iter", "ref_type": "struct ieee80211_radiotap_iterator { ieee80211_radiotap_header * _rtheader; const ieee80211_radiotap_vendor_namespaces * _vns; const ieee80211_radiotap_namespace * current_namespace; unsigned __int8 * _arg; unsigned __int8 * _next_ns_data; le32 * _next_bitmap; unsigned __int8 * this_arg; int this_arg_index; int this_arg_size; int is_radiotap_ns; int _max_length; int _arg_index; uint32_t _bitmap_shifter; int _reset_on_ext; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "dilawar", "repo_name": "genesis-sim", "path": "dilawar/genesis-sim/31952c9a1d062b103f69dc59862c5b7ac01e7814e930305e319a2e0e923a4929", "path_in_repo": "dilawar/genesis-sim/src/contrib/xplot/psdriver.o", "objdump": "0000000000000f6e <XPSFillPolygon>:\n     f6e:\t55                   \tpush   %rbp\n     f6f:\t48 89 e5             \tmov    %rsp,%rbp\n     f72:\t48 81 ec c0 00 00 00 \tsub    $0xc0,%rsp\n     f79:\t48 89 bd 68 ff ff ff \tmov    %rdi,-0x98(%rbp)\n     f80:\t48 89 b5 60 ff ff ff \tmov    %rsi,-0xa0(%rbp)\n     f87:\t48 89 95 58 ff ff ff \tmov    %rdx,-0xa8(%rbp)\n     f8e:\t48 89 8d 50 ff ff ff \tmov    %rcx,-0xb0(%rbp)\n     f95:\t44 89 85 4c ff ff ff \tmov    %r8d,-0xb4(%rbp)\n     f9c:\t44 89 8d 48 ff ff ff \tmov    %r9d,-0xb8(%rbp)\n     fa3:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # fa9 <XPSFillPolygon+0x3b>\n     fa9:\t85 c0                \ttest   %eax,%eax\n     fab:\t75 43                \tjne    ff0 <XPSFillPolygon+0x82>\n     fad:\t44 8b 8d 48 ff ff ff \tmov    -0xb8(%rbp),%r9d\n     fb4:\t44 8b 85 4c ff ff ff \tmov    -0xb4(%rbp),%r8d\n     fbb:\t48 8b 8d 50 ff ff ff \tmov    -0xb0(%rbp),%rcx\n     fc2:\t48 8b 95 58 ff ff ff \tmov    -0xa8(%rbp),%rdx\n     fc9:\t48 8b b5 60 ff ff ff \tmov    -0xa0(%rbp),%rsi\n     fd0:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n     fd7:\t48 83 ec 08          \tsub    $0x8,%rsp\n     fdb:\t8b 7d 10             \tmov    0x10(%rbp),%edi\n     fde:\t57                   \tpush   %rdi\n     fdf:\t48 89 c7             \tmov    %rax,%rdi\n     fe2:\te8 00 00 00 00       \tcallq  fe7 <XPSFillPolygon+0x79>\n     fe7:\t48 83 c4 10          \tadd    $0x10,%rsp\n     feb:\te9 3b 01 00 00       \tjmpq   112b <XPSFillPolygon+0x1bd>\n     ff0:\t48 8d 95 70 ff ff ff \tlea    -0x90(%rbp),%rdx\n     ff7:\t48 8b b5 58 ff ff ff \tmov    -0xa8(%rbp),%rsi\n     ffe:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    1005:\t48 89 d1             \tmov    %rdx,%rcx\n    1008:\tba 14 00 00 00       \tmov    $0x14,%edx\n    100d:\t48 89 c7             \tmov    %rax,%rdi\n    1010:\te8 00 00 00 00       \tcallq  1015 <XPSFillPolygon+0xa7>\n    1015:\t83 bd 4c ff ff ff 00 \tcmpl   $0x0,-0xb4(%rbp)\n    101c:\t0f 8e 08 01 00 00    \tjle    112a <XPSFillPolygon+0x1bc>\n    1022:\te8 00 00 00 00       \tcallq  1027 <XPSFillPolygon+0xb9>\n    1027:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n    102b:\t89 c2                \tmov    %eax,%edx\n    102d:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    1034:\t89 d6                \tmov    %edx,%esi\n    1036:\t48 89 c7             \tmov    %rax,%rdi\n    1039:\te8 00 00 00 00       \tcallq  103e <XPSFillPolygon+0xd0>\n    103e:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    1045:\t0f b7 40 02          \tmovzwl 0x2(%rax),%eax\n    1049:\t0f bf d0             \tmovswl %ax,%edx\n    104c:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    1053:\t0f b7 00             \tmovzwl (%rax),%eax\n    1056:\t98                   \tcwtl   \n    1057:\t89 d6                \tmov    %edx,%esi\n    1059:\t89 c7                \tmov    %eax,%edi\n    105b:\te8 00 00 00 00       \tcallq  1060 <XPSFillPolygon+0xf2>\n    1060:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n    1067:\tc7 45 fc 01 00 00 00 \tmovl   $0x1,-0x4(%rbp)\n    106e:\te9 a1 00 00 00       \tjmpq   1114 <XPSFillPolygon+0x1a6>\n    1073:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    1076:\t48 98                \tcltq   \n    1078:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    107f:\t00 \n    1080:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    1087:\t48 01 d0             \tadd    %rdx,%rax\n    108a:\t0f b7 40 02          \tmovzwl 0x2(%rax),%eax\n    108e:\t0f bf d0             \tmovswl %ax,%edx\n    1091:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    1094:\t48 98                \tcltq   \n    1096:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    109d:\t00 \n    109e:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    10a5:\t48 01 c8             \tadd    %rcx,%rax\n    10a8:\t0f b7 00             \tmovzwl (%rax),%eax\n    10ab:\t98                   \tcwtl   \n    10ac:\t89 d6                \tmov    %edx,%esi\n    10ae:\t89 c7                \tmov    %eax,%edi\n    10b0:\te8 00 00 00 00       \tcallq  10b5 <XPSFillPolygon+0x147>\n    10b5:\t81 7d f8 c8 00 00 00 \tcmpl   $0xc8,-0x8(%rbp)\n    10bc:\t7e 4e                \tjle    110c <XPSFillPolygon+0x19e>\n    10be:\te8 00 00 00 00       \tcallq  10c3 <XPSFillPolygon+0x155>\n    10c3:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    10c6:\t48 98                \tcltq   \n    10c8:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    10cf:\t00 \n    10d0:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    10d7:\t48 01 d0             \tadd    %rdx,%rax\n    10da:\t0f b7 40 02          \tmovzwl 0x2(%rax),%eax\n    10de:\t0f bf d0             \tmovswl %ax,%edx\n    10e1:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    10e4:\t48 98                \tcltq   \n    10e6:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    10ed:\t00 \n    10ee:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    10f5:\t48 01 c8             \tadd    %rcx,%rax\n    10f8:\t0f b7 00             \tmovzwl (%rax),%eax\n    10fb:\t98                   \tcwtl   \n    10fc:\t89 d6                \tmov    %edx,%esi\n    10fe:\t89 c7                \tmov    %eax,%edi\n    1100:\te8 00 00 00 00       \tcallq  1105 <XPSFillPolygon+0x197>\n    1105:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n    110c:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n    1110:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    1114:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    1117:\t3b 85 4c ff ff ff    \tcmp    -0xb4(%rbp),%eax\n    111d:\t0f 8c 50 ff ff ff    \tjl     1073 <XPSFillPolygon+0x105>\n    1123:\te8 00 00 00 00       \tcallq  1128 <XPSFillPolygon+0x1ba>\n    1128:\teb 01                \tjmp    112b <XPSFillPolygon+0x1bd>\n    112a:\t90                   \tnop\n    112b:\tc9                   \tleaveq \n    112c:\tc3                   \tretq   ", "code_s": "int __fastcall XPSFillPolygon(Display *a1, Drawable a2, _XGC *a3, XPoint *a4,\n                              int a5, int a6, int a7) {\n  int result;\n  XGCValues v10;\n  int v11;\n  int i;\n  if (!output_flag)\n    return XFillPolygon(a1, a2, a3, a4, a5, a6, a7);\n  result = XGetGCValues(a1, a3, Number, &v10);\n  if (a5 > Number) {\n    PSNewpath();\n    PSSetPixel(a1, v10.foreground);\n    PSMoveto(a4->x, a4->y);\n    v11 = Number;\n    for (i = Number; i < a5; ++i) {\n      PSLineto(a4[i].x, a4[i].y);\n      if (v11 > Number) {\n        PSClosefill();\n        PSMoveto(a4[i].x, a4[i].y);\n        v11 = Number;\n      }\n      ++v11;\n    }\n    result = PSClosefill();\n  }\n  return result;\n}", "code_t": "void __cdecl XPSFillPolygon(Display *display, Drawable drawable, GC context,\n                            Coord *coord, int ncoords, int shape, int mode) {\n  XGCValues <span class=\"supfact\">values</span>;\n  int pcount;\n  int i;\n  if (output_flag) {\n    XGetGCValues(display, context, Number, &<span class=\"supfact\">values</span>);\n    if (ncoords > Number) {\n      PSNewpath();\n      PSSetPixel(display, <span class=\"supfact\">values</span>.foreground);\n      PSMoveto(coord->x, coord->y);\n      pcount = Number;\n      for (i = Number; i < ncoords; ++i) {\n        PSLineto(coord[i].x, coord[i].y);\n        if (pcount > Number) {\n          PSClosefill();\n          PSMoveto(coord[i].x, coord[i].y);\n          pcount = Number;\n        }\n        ++pcount;\n      }\n      PSClosefill();\n    }\n  } else {\n    XFillPolygon(display, drawable, context, (XPoint *)coord, ncoords, shape,\n                 mode);\n  }\n}", "var": [{"name": "v10", "type": "struct XGCValues { int function; PADDING (4); unsigned __int64 plane_mask; unsigned __int64 foreground; unsigned __int64 background; int line_width; int line_style; int cap_style; int join_style; int fill_style; int fill_rule; int arc_mode; PADDING (4); Pixmap tile; Pixmap stipple; int ts_x_origin; int ts_y_origin; Font font; int subwindow_mode; int graphics_exposures; int clip_x_origin; int clip_y_origin; Pixmap clip_mask; int dash_offset; char dashes; PADDING (3); }", "pred_name": "xgc", "ref_name": "values", "ref_type": "struct XGCValues { int function; PADDING (4); unsigned __int64 plane_mask; unsigned __int64 foreground; unsigned __int64 background; int line_width; int line_style; int cap_style; int join_style; int fill_style; int fill_rule; int arc_mode; PADDING (4); Pixmap tile; Pixmap stipple; int ts_x_origin; int ts_y_origin; Font font; int subwindow_mode; int graphics_exposures; int clip_x_origin; int clip_y_origin; Pixmap clip_mask; int dash_offset; char dashes; PADDING (3); }"}], "body_in_train": false}, {"repo_owner": "allinurl", "repo_name": "dwm", "path": "allinurl/dwm/3839b87a1610eefa38917bf8b7c7486cd1534140cb424a37d2ea27bfcf7ada15", "path_in_repo": "allinurl/dwm//dwm.o", "objdump": "0000000000003260 <manage>:\n    3260:\t55                   \tpush   %rbp\n    3261:\t48 89 e5             \tmov    %rsp,%rbp\n    3264:\t48 83 ec 50          \tsub    $0x50,%rsp\n    3268:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n    326c:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n    3270:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n    3277:\t00 \n    3278:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    327f:\t00 \n    3280:\tbe 90 01 00 00       \tmov    $0x190,%esi\n    3285:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    328a:\te8 00 00 00 00       \tcallq  328f <manage+0x2f>\n    328f:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    3293:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3297:\t48 8b 55 b8          \tmov    -0x48(%rbp),%rdx\n    329b:\t48 89 90 88 01 00 00 \tmov    %rdx,0x188(%rax)\n    32a2:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    32a6:\t48 89 c7             \tmov    %rax,%rdi\n    32a9:\te8 c7 3e 00 00       \tcallq  7175 <updatetitle>\n    32ae:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 32b5 <manage+0x55>\n    32b5:\t48 8d 55 e8          \tlea    -0x18(%rbp),%rdx\n    32b9:\t48 8b 4d b8          \tmov    -0x48(%rbp),%rcx\n    32bd:\t48 89 ce             \tmov    %rcx,%rsi\n    32c0:\t48 89 c7             \tmov    %rax,%rdi\n    32c3:\te8 00 00 00 00       \tcallq  32c8 <manage+0x68>\n    32c8:\t85 c0                \ttest   %eax,%eax\n    32ca:\t74 43                \tje     330f <manage+0xaf>\n    32cc:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    32d0:\t48 89 c7             \tmov    %rax,%rdi\n    32d3:\te8 d3 43 00 00       \tcallq  76ab <wintoclient>\n    32d8:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    32dc:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    32e1:\t74 2c                \tje     330f <manage+0xaf>\n    32e3:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    32e7:\t48 8b 90 80 01 00 00 \tmov    0x180(%rax),%rdx\n    32ee:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    32f2:\t48 89 90 80 01 00 00 \tmov    %rdx,0x180(%rax)\n    32f9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    32fd:\t8b 90 50 01 00 00    \tmov    0x150(%rax),%edx\n    3303:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3307:\t89 90 50 01 00 00    \tmov    %edx,0x150(%rax)\n    330d:\teb 1e                \tjmp    332d <manage+0xcd>\n    330f:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 3316 <manage+0xb6>\n    3316:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    331a:\t48 89 90 80 01 00 00 \tmov    %rdx,0x180(%rax)\n    3321:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3325:\t48 89 c7             \tmov    %rax,%rdi\n    3328:\te8 9e d0 ff ff       \tcallq  3cb <applyrules>\n    332d:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    3331:\t8b 10                \tmov    (%rax),%edx\n    3333:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3337:\t89 90 18 01 00 00    \tmov    %edx,0x118(%rax)\n    333d:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3341:\t8b 90 18 01 00 00    \tmov    0x118(%rax),%edx\n    3347:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    334b:\t89 90 08 01 00 00    \tmov    %edx,0x108(%rax)\n    3351:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    3355:\t8b 50 04             \tmov    0x4(%rax),%edx\n    3358:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    335c:\t89 90 1c 01 00 00    \tmov    %edx,0x11c(%rax)\n    3362:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3366:\t8b 90 1c 01 00 00    \tmov    0x11c(%rax),%edx\n    336c:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3370:\t89 90 0c 01 00 00    \tmov    %edx,0x10c(%rax)\n    3376:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    337a:\t8b 50 08             \tmov    0x8(%rax),%edx\n    337d:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3381:\t89 90 20 01 00 00    \tmov    %edx,0x120(%rax)\n    3387:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    338b:\t8b 90 20 01 00 00    \tmov    0x120(%rax),%edx\n    3391:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3395:\t89 90 10 01 00 00    \tmov    %edx,0x110(%rax)\n    339b:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    339f:\t8b 50 0c             \tmov    0xc(%rax),%edx\n    33a2:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    33a6:\t89 90 24 01 00 00    \tmov    %edx,0x124(%rax)\n    33ac:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    33b0:\t8b 90 24 01 00 00    \tmov    0x124(%rax),%edx\n    33b6:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    33ba:\t89 90 14 01 00 00    \tmov    %edx,0x114(%rax)\n    33c0:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    33c4:\t8b 50 10             \tmov    0x10(%rax),%edx\n    33c7:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    33cb:\t89 90 4c 01 00 00    \tmov    %edx,0x14c(%rax)\n    33d1:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    33d5:\t8b 90 08 01 00 00    \tmov    0x108(%rax),%edx\n    33db:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    33df:\t8b 88 10 01 00 00    \tmov    0x110(%rax),%ecx\n    33e5:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    33e9:\t8b 80 48 01 00 00    \tmov    0x148(%rax),%eax\n    33ef:\t01 c0                \tadd    %eax,%eax\n    33f1:\t01 c8                \tadd    %ecx,%eax\n    33f3:\t8d 0c 02             \tlea    (%rdx,%rax,1),%ecx\n    33f6:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    33fa:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    3401:\t8b 50 20             \tmov    0x20(%rax),%edx\n    3404:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3408:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    340f:\t8b 40 28             \tmov    0x28(%rax),%eax\n    3412:\t01 d0                \tadd    %edx,%eax\n    3414:\t39 c1                \tcmp    %eax,%ecx\n    3416:\t7e 45                \tjle    345d <manage+0x1fd>\n    3418:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    341c:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    3423:\t8b 50 20             \tmov    0x20(%rax),%edx\n    3426:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    342a:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    3431:\t8b 40 28             \tmov    0x28(%rax),%eax\n    3434:\t8d 0c 02             \tlea    (%rdx,%rax,1),%ecx\n    3437:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    343b:\t8b 90 10 01 00 00    \tmov    0x110(%rax),%edx\n    3441:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3445:\t8b 80 48 01 00 00    \tmov    0x148(%rax),%eax\n    344b:\t01 c0                \tadd    %eax,%eax\n    344d:\t01 d0                \tadd    %edx,%eax\n    344f:\t29 c1                \tsub    %eax,%ecx\n    3451:\t89 ca                \tmov    %ecx,%edx\n    3453:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3457:\t89 90 08 01 00 00    \tmov    %edx,0x108(%rax)\n    345d:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3461:\t8b 90 0c 01 00 00    \tmov    0x10c(%rax),%edx\n    3467:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    346b:\t8b 88 14 01 00 00    \tmov    0x114(%rax),%ecx\n    3471:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3475:\t8b 80 48 01 00 00    \tmov    0x148(%rax),%eax\n    347b:\t01 c0                \tadd    %eax,%eax\n    347d:\t01 c8                \tadd    %ecx,%eax\n    347f:\t8d 0c 02             \tlea    (%rdx,%rax,1),%ecx\n    3482:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3486:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    348d:\t8b 50 24             \tmov    0x24(%rax),%edx\n    3490:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3494:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    349b:\t8b 40 2c             \tmov    0x2c(%rax),%eax\n    349e:\t01 d0                \tadd    %edx,%eax\n    34a0:\t39 c1                \tcmp    %eax,%ecx\n    34a2:\t7e 45                \tjle    34e9 <manage+0x289>\n    34a4:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    34a8:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    34af:\t8b 50 24             \tmov    0x24(%rax),%edx\n    34b2:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    34b6:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    34bd:\t8b 40 2c             \tmov    0x2c(%rax),%eax\n    34c0:\t8d 0c 02             \tlea    (%rdx,%rax,1),%ecx\n    34c3:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    34c7:\t8b 90 14 01 00 00    \tmov    0x114(%rax),%edx\n    34cd:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    34d1:\t8b 80 48 01 00 00    \tmov    0x148(%rax),%eax\n    34d7:\t01 c0                \tadd    %eax,%eax\n    34d9:\t01 d0                \tadd    %edx,%eax\n    34db:\t29 c1                \tsub    %eax,%ecx\n    34dd:\t89 ca                \tmov    %ecx,%edx\n    34df:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    34e3:\t89 90 0c 01 00 00    \tmov    %edx,0x10c(%rax)\n    34e9:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    34ed:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    34f4:\t8b 50 20             \tmov    0x20(%rax),%edx\n    34f7:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    34fb:\t8b 80 08 01 00 00    \tmov    0x108(%rax),%eax\n    3501:\t39 c2                \tcmp    %eax,%edx\n    3503:\t0f 4c d0             \tcmovl  %eax,%edx\n    3506:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    350a:\t89 90 08 01 00 00    \tmov    %edx,0x108(%rax)\n    3510:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3514:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    351b:\t8b 50 1c             \tmov    0x1c(%rax),%edx\n    351e:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3522:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    3529:\t8b 40 24             \tmov    0x24(%rax),%eax\n    352c:\t39 c2                \tcmp    %eax,%edx\n    352e:\t75 73                \tjne    35a3 <manage+0x343>\n    3530:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3534:\t8b 90 08 01 00 00    \tmov    0x108(%rax),%edx\n    353a:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    353e:\t8b 80 10 01 00 00    \tmov    0x110(%rax),%eax\n    3544:\t89 c1                \tmov    %eax,%ecx\n    3546:\tc1 e9 1f             \tshr    $0x1f,%ecx\n    3549:\t01 c8                \tadd    %ecx,%eax\n    354b:\td1 f8                \tsar    %eax\n    354d:\t01 c2                \tadd    %eax,%edx\n    354f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3553:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    355a:\t8b 40 30             \tmov    0x30(%rax),%eax\n    355d:\t39 c2                \tcmp    %eax,%edx\n    355f:\t7c 42                \tjl     35a3 <manage+0x343>\n    3561:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3565:\t8b 90 08 01 00 00    \tmov    0x108(%rax),%edx\n    356b:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    356f:\t8b 80 10 01 00 00    \tmov    0x110(%rax),%eax\n    3575:\t89 c1                \tmov    %eax,%ecx\n    3577:\tc1 e9 1f             \tshr    $0x1f,%ecx\n    357a:\t01 c8                \tadd    %ecx,%eax\n    357c:\td1 f8                \tsar    %eax\n    357e:\t8d 0c 02             \tlea    (%rdx,%rax,1),%ecx\n    3581:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3585:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    358c:\t8b 50 30             \tmov    0x30(%rax),%edx\n    358f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3593:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    359a:\t8b 40 38             \tmov    0x38(%rax),%eax\n    359d:\t01 d0                \tadd    %edx,%eax\n    359f:\t39 c1                \tcmp    %eax,%ecx\n    35a1:\t7c 10                \tjl     35b3 <manage+0x353>\n    35a3:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    35a7:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    35ae:\t8b 40 24             \tmov    0x24(%rax),%eax\n    35b1:\teb 06                \tjmp    35b9 <manage+0x359>\n    35b3:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 35b9 <manage+0x359>\n    35b9:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    35bd:\t8b 92 0c 01 00 00    \tmov    0x10c(%rdx),%edx\n    35c3:\t39 d0                \tcmp    %edx,%eax\n    35c5:\t0f 4d d0             \tcmovge %eax,%edx\n    35c8:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    35cc:\t89 90 0c 01 00 00    \tmov    %edx,0x10c(%rax)\n    35d2:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    35d7:\t89 c2                \tmov    %eax,%edx\n    35d9:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    35dd:\t89 90 48 01 00 00    \tmov    %edx,0x148(%rax)\n    35e3:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    35e7:\t8b 80 48 01 00 00    \tmov    0x148(%rax),%eax\n    35ed:\t89 45 d0             \tmov    %eax,-0x30(%rbp)\n    35f0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 35f7 <manage+0x397>\n    35f7:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n    35fb:\t48 8b 75 b8          \tmov    -0x48(%rbp),%rsi\n    35ff:\t48 89 d1             \tmov    %rdx,%rcx\n    3602:\tba 10 00 00 00       \tmov    $0x10,%edx\n    3607:\t48 89 c7             \tmov    %rax,%rdi\n    360a:\te8 00 00 00 00       \tcallq  360f <manage+0x3af>\n    360f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3616 <manage+0x3b6>\n    3616:\t48 8b 10             \tmov    (%rax),%rdx\n    3619:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3620 <manage+0x3c0>\n    3620:\t48 8b 4d b8          \tmov    -0x48(%rbp),%rcx\n    3624:\t48 89 ce             \tmov    %rcx,%rsi\n    3627:\t48 89 c7             \tmov    %rax,%rdi\n    362a:\te8 00 00 00 00       \tcallq  362f <manage+0x3cf>\n    362f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3633:\t48 89 c7             \tmov    %rax,%rdi\n    3636:\te8 39 df ff ff       \tcallq  1574 <configure>\n    363b:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    363f:\t48 89 c7             \tmov    %rax,%rdi\n    3642:\te8 fa 3b 00 00       \tcallq  7241 <updatewindowtype>\n    3647:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    364b:\t48 89 c7             \tmov    %rax,%rdi\n    364e:\te8 77 38 00 00       \tcallq  6eca <updatesizehints>\n    3653:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3657:\t48 89 c7             \tmov    %rax,%rdi\n    365a:\te8 5e 3c 00 00       \tcallq  72bd <updatewmhints>\n    365f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3666 <manage+0x406>\n    3666:\t48 8b 4d b8          \tmov    -0x48(%rbp),%rcx\n    366a:\tba 10 00 62 00       \tmov    $0x620010,%edx\n    366f:\t48 89 ce             \tmov    %rcx,%rsi\n    3672:\t48 89 c7             \tmov    %rax,%rdi\n    3675:\te8 00 00 00 00       \tcallq  367a <manage+0x41a>\n    367a:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    367e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    3683:\t48 89 c7             \tmov    %rax,%rdi\n    3686:\te8 8c f6 ff ff       \tcallq  2d17 <grabbuttons>\n    368b:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    368f:\t8b 80 58 01 00 00    \tmov    0x158(%rax),%eax\n    3695:\t85 c0                \ttest   %eax,%eax\n    3697:\t75 41                \tjne    36da <manage+0x47a>\n    3699:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    369d:\t48 85 c0             \ttest   %rax,%rax\n    36a0:\t75 0e                \tjne    36b0 <manage+0x450>\n    36a2:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    36a6:\t8b 80 54 01 00 00    \tmov    0x154(%rax),%eax\n    36ac:\t85 c0                \ttest   %eax,%eax\n    36ae:\t74 07                \tje     36b7 <manage+0x457>\n    36b0:\tba 01 00 00 00       \tmov    $0x1,%edx\n    36b5:\teb 05                \tjmp    36bc <manage+0x45c>\n    36b7:\tba 00 00 00 00       \tmov    $0x0,%edx\n    36bc:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    36c0:\t89 90 64 01 00 00    \tmov    %edx,0x164(%rax)\n    36c6:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    36ca:\t8b 90 64 01 00 00    \tmov    0x164(%rax),%edx\n    36d0:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    36d4:\t89 90 58 01 00 00    \tmov    %edx,0x158(%rax)\n    36da:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    36de:\t8b 80 58 01 00 00    \tmov    0x158(%rax),%eax\n    36e4:\t85 c0                \ttest   %eax,%eax\n    36e6:\t74 1d                \tje     3705 <manage+0x4a5>\n    36e8:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    36ec:\t48 8b 90 88 01 00 00 \tmov    0x188(%rax),%rdx\n    36f3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 36fa <manage+0x49a>\n    36fa:\t48 89 d6             \tmov    %rdx,%rsi\n    36fd:\t48 89 c7             \tmov    %rax,%rdi\n    3700:\te8 00 00 00 00       \tcallq  3705 <manage+0x4a5>\n    3705:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3709:\t48 89 c7             \tmov    %rax,%rdi\n    370c:\te8 b1 d5 ff ff       \tcallq  cc2 <attach>\n    3711:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3715:\t48 89 c7             \tmov    %rax,%rdi\n    3718:\te8 dd d5 ff ff       \tcallq  cfa <attachstack>\n    371d:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3721:\t48 8d 88 88 01 00 00 \tlea    0x188(%rax),%rcx\n    3728:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 372f <manage+0x4cf>\n    372f:\t48 8b 35 00 00 00 00 \tmov    0x0(%rip),%rsi        # 3736 <manage+0x4d6>\n    3736:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 373d <manage+0x4dd>\n    373d:\t6a 01                \tpushq  $0x1\n    373f:\t51                   \tpush   %rcx\n    3740:\t41 b9 02 00 00 00    \tmov    $0x2,%r9d\n    3746:\t41 b8 20 00 00 00    \tmov    $0x20,%r8d\n    374c:\tb9 21 00 00 00       \tmov    $0x21,%ecx\n    3751:\t48 89 c7             \tmov    %rax,%rdi\n    3754:\te8 00 00 00 00       \tcallq  3759 <manage+0x4f9>\n    3759:\t48 83 c4 10          \tadd    $0x10,%rsp\n    375d:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3761:\t8b 80 14 01 00 00    \tmov    0x114(%rax),%eax\n    3767:\t41 89 c1             \tmov    %eax,%r9d\n    376a:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    376e:\t8b 80 10 01 00 00    \tmov    0x110(%rax),%eax\n    3774:\t41 89 c0             \tmov    %eax,%r8d\n    3777:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    377b:\t8b 90 0c 01 00 00    \tmov    0x10c(%rax),%edx\n    3781:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3785:\t8b 80 08 01 00 00    \tmov    0x108(%rax),%eax\n    378b:\t8b 0d 00 00 00 00    \tmov    0x0(%rip),%ecx        # 3791 <manage+0x531>\n    3791:\t01 c9                \tadd    %ecx,%ecx\n    3793:\t8d 3c 08             \tlea    (%rax,%rcx,1),%edi\n    3796:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    379a:\t48 8b b0 88 01 00 00 \tmov    0x188(%rax),%rsi\n    37a1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 37a8 <manage+0x548>\n    37a8:\t89 d1                \tmov    %edx,%ecx\n    37aa:\t89 fa                \tmov    %edi,%edx\n    37ac:\t48 89 c7             \tmov    %rax,%rdi\n    37af:\te8 00 00 00 00       \tcallq  37b4 <manage+0x554>\n    37b4:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    37b8:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    37bd:\t48 89 c7             \tmov    %rax,%rdi\n    37c0:\te8 f0 15 00 00       \tcallq  4db5 <setclientstate>\n    37c5:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    37c9:\t48 8b 90 80 01 00 00 \tmov    0x180(%rax),%rdx\n    37d0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 37d7 <manage+0x577>\n    37d7:\t48 39 c2             \tcmp    %rax,%rdx\n    37da:\t75 18                \tjne    37f4 <manage+0x594>\n    37dc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 37e3 <manage+0x583>\n    37e3:\t48 8b 40 60          \tmov    0x60(%rax),%rax\n    37e7:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    37ec:\t48 89 c7             \tmov    %rax,%rdi\n    37ef:\te8 e7 2b 00 00       \tcallq  63db <unfocus>\n    37f4:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    37f8:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    37ff:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    3803:\t48 89 50 60          \tmov    %rdx,0x60(%rax)\n    3807:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    380b:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n    3812:\t48 89 c7             \tmov    %rax,%rdi\n    3815:\te8 88 d3 ff ff       \tcallq  ba2 <arrange>\n    381a:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    381e:\t48 8b 90 88 01 00 00 \tmov    0x188(%rax),%rdx\n    3825:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 382c <manage+0x5cc>\n    382c:\t48 89 d6             \tmov    %rdx,%rsi\n    382f:\t48 89 c7             \tmov    %rax,%rdi\n    3832:\te8 00 00 00 00       \tcallq  3837 <manage+0x5d7>\n    3837:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    383c:\te8 a4 ed ff ff       \tcallq  25e5 <focus>\n    3841:\t90                   \tnop\n    3842:\tc9                   \tleaveq \n    3843:\tc3                   \tretq   ", "code_s": "__int64 __fastcall manage(Window a1, _DWORD *a2) {\n  int v2;\n  signed int v3;\n  signed int v4;\n  _BOOL4 v5;\n  XWindowChanges v7;\n  Window v8;\n  __int64 v9;\n  __int64 v10;\n  v10 = Number L;\n  v8 = Number L;\n  v9 = ecalloc(Number L, Number L);\n  *(_QWORD *)(v9 + Number) = a1;\n  updatetitle(v9);\n  if (XGetTransientForHint(dpy, a1, &v8) && (v10 = wintoclient(v8)) != Number) {\n    *(_QWORD *)(v9 + Number) = *(_QWORD *)(v10 + Number);\n    *(_DWORD *)(v9 + Number) = *(_DWORD *)(v10 + Number);\n  } else {\n    *(_QWORD *)(v9 + Number) = selmon;\n    applyrules(v9);\n  }\n  *(_DWORD *)(v9 + Number) = *a2;\n  *(_DWORD *)(v9 + Number) = *(_DWORD *)(v9 + Number);\n  *(_DWORD *)(v9 + Number) = a2[Number];\n  *(_DWORD *)(v9 + Number) = *(_DWORD *)(v9 + Number);\n  *(_DWORD *)(v9 + Number) = a2[Number];\n  *(_DWORD *)(v9 + Number) = *(_DWORD *)(v9 + Number);\n  *(_DWORD *)(v9 + Number) = a2[Number];\n  *(_DWORD *)(v9 + Number) = *(_DWORD *)(v9 + Number);\n  *(_DWORD *)(v9 + Number) = a2[Number];\n  if (*(_DWORD *)(v9 + Number) + *(_DWORD *)(v9 + Number) +\n          Number * *(_DWORD *)(v9 + Number) >\n      *(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L) +\n          *(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L))\n    *(_DWORD *)(v9 + Number) =\n        *(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L) +\n        *(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L) -\n        (*(_DWORD *)(v9 + Number) + Number * *(_DWORD *)(v9 + Number));\n  if (*(_DWORD *)(v9 + Number) + *(_DWORD *)(v9 + Number) +\n          Number * *(_DWORD *)(v9 + Number) >\n      *(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L) +\n          *(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L))\n    *(_DWORD *)(v9 + Number) =\n        *(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L) +\n        *(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L) -\n        (*(_DWORD *)(v9 + Number) + Number * *(_DWORD *)(v9 + Number));\n  v2 = *(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L);\n  if (v2 < *(_DWORD *)(v9 + Number))\n    v2 = *(_DWORD *)(v9 + Number);\n  *(_DWORD *)(v9 + Number) = v2;\n  if (*(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L) ==\n          *(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L) &&\n      *(_DWORD *)(v9 + Number) / Number + *(_DWORD *)(v9 + Number) >=\n          *(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L) &&\n      *(_DWORD *)(v9 + Number) + *(_DWORD *)(v9 + Number) / Number <\n          *(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L) +\n              *(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L)) {\n    v3 = dword_898C;\n  } else {\n    v3 = *(_DWORD *)(*(_QWORD *)(v9 + Number) + Number L);\n  }\n  v4 = *(_DWORD *)(v9 + Number);\n  if (v3 >= v4)\n    v4 = v3;\n  *(_DWORD *)(v9 + Number) = v4;\n  *(_DWORD *)(v9 + Number) = Number;\n  v7.border_width = *(_DWORD *)(v9 + Number);\n  XConfigureWindow(dpy, a1, Number, &v7);\n  XSetWindowBorder(dpy, a1, *(_QWORD *)qword_8A50[Number]);\n  configure(v9);\n  updatewindowtype(v9);\n  updatesizehints(v9);\n  updatewmhints(v9);\n  XSelectInput(dpy, a1, Number L);\n  grabbuttons(v9, Number);\n  if (!*(_DWORD *)(v9 + Number)) {\n    v5 = v8 || *(_DWORD *)(v9 + Number);\n    *(_DWORD *)(v9 + Number) = v5;\n    *(_DWORD *)(v9 + Number) = *(_DWORD *)(v9 + Number);\n  }\n  if (*(_DWORD *)(v9 + Number))\n    XRaiseWindow(dpy, *(_QWORD *)(v9 + Number));\n  attach(v9);\n  attachstack(v9);\n  XChangeProperty(dpy, root, qword_8A18, Number, Number, Number,\n                  (const unsigned __int8 *)(v9 + Number), Number);\n  XMoveResizeWindow(dpy, *(_QWORD *)(v9 + Number),\n                    *(_DWORD *)(v9 + Number) + Number * sw,\n                    *(_DWORD *)(v9 + Number), *(_DWORD *)(v9 + Number),\n                    *(_DWORD *)(v9 + Number));\n  setclientstate(v9, Number L);\n  if (*(char **)(v9 + Number) == selmon)\n    unfocus(*((_QWORD *)selmon + Number), Number L);\n  *(_QWORD *)(*(_QWORD *)(v9 + Number) + Number L) = v9;\n  arrange(*(_QWORD *)(v9 + Number));\n  XMapWindow(dpy, *(_QWORD *)(v9 + Number));\n  return focus(Number L);\n}", "code_t": "void __cdecl manage(Window w, XWindowAttributes *wa) {\n  int v2;\n  int v3;\n  int v4;\n  int v5;\n  XWindowChanges <span class=\"supfact\">wc</span>;\n  Window trans;\n  Client_0 *c;\n  Client_0 *t;\n  t = Number L;\n  trans = Number L;\n  c = (Client_0 *)ecalloc(Number L, Number L);\n  c->win = w;\n  updatetitle(c);\n  if (XGetTransientForHint(dpy, w, &trans) &&\n      (t = wintoclient(trans)) != Number L) {\n    c->mon = t->mon;\n    c->tags = t->tags;\n  } else {\n    c->mon = selmon;\n    applyrules(c);\n  }\n  c->oldx = wa->x;\n  c->x = c->oldx;\n  c->oldy = wa->y;\n  c->y = c->oldy;\n  c->oldw = wa->width;\n  c->w = c->oldw;\n  c->oldh = wa->height;\n  c->h = c->oldh;\n  c->oldbw = wa->border_width;\n  if (c->x + c->w + Number * c->bw > c->mon->mx + c->mon->mw)\n    c->x = c->mon->mx + c->mon->mw - (c->w + Number * c->bw);\n  if (c->y + c->h + Number * c->bw > c->mon->my + c->mon->mh)\n    c->y = c->mon->my + c->mon->mh - (c->h + Number * c->bw);\n  v2 = c->mon->mx;\n  if (v2 < c->x)\n    v2 = c->x;\n  c->x = v2;\n  if (c->mon->by == c->mon->my && c->w / Number + c->x >= c->mon->wx &&\n      c->x + c->w / Number < c->mon->wx + c->mon->ww)\n    v3 = dword_898C;\n  else\n    v3 = c->mon->my;\n  v4 = c->y;\n  if (v3 >= v4)\n    v4 = v3;\n  c->y = v4;\n  c->bw = Number;\n  <span class=\"supfact\">wc</span>.border_width = c->bw;\n  XConfigureWindow(dpy, w, Number, &<span class=\"supfact\">wc</span>);\n  XSetWindowBorder(dpy, w, scheme[Number].border->pix);\n  configure(c);\n  updatewindowtype(c);\n  updatesizehints(c);\n  updatewmhints(c);\n  XSelectInput(dpy, w, Number L);\n  grabbuttons(c, Number);\n  if (!c->isfloating) {\n    v5 = trans || c->isfixed;\n    c->oldstate = v5;\n    c->isfloating = c->oldstate;\n  }\n  if (c->isfloating)\n    XRaiseWindow(dpy, c->win);\n  attach(c);\n  attachstack(c);\n  XChangeProperty(dpy, root, netatom[Number], Number, Number, Number,\n                  (const unsigned __int8 *)&c->win, Number);\n  XMoveResizeWindow(dpy, c->win, c->x + Number * sw, c->y, c->w, c->h);\n  setclientstate(c, Number L);\n  if (c->mon == selmon)\n    unfocus(selmon->sel, Number);\n  c->mon->sel = c;\n  arrange(c->mon);\n  XMapWindow(dpy, c->win);\n  focus(Number L);\n}", "var": [{"name": "v7", "type": "struct XWindowChanges { int x; int y; int width; int height; int border_width; PADDING (4); Window sibling; int stack_mode; PADDING (4); }", "pred_name": "wc", "ref_name": "wc", "ref_type": "struct XWindowChanges { int x; int y; int width; int height; int border_width; PADDING (4); Window sibling; int stack_mode; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "cmr", "repo_name": "simplectic-c", "path": "cmr/simplectic-c/4e83b14d7a90c2163caf124e937b53beb001f8722c9ddb88435e5b227f716dd0", "path_in_repo": "cmr/simplectic-c//example", "objdump": "00000000004031d7 <simplectic2>:\n  4031d7:\t55                   \tpush   %rbp\n  4031d8:\t48 89 e5             \tmov    %rsp,%rbp\n  4031db:\t48 83 c4 80          \tadd    $0xffffffffffffff80,%rsp\n  4031df:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n  4031e3:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n  4031e7:\t48 8d 55 a0          \tlea    -0x60(%rbp),%rdx\n  4031eb:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n  4031ef:\t48 89 d6             \tmov    %rdx,%rsi\n  4031f2:\t48 89 c7             \tmov    %rax,%rdi\n  4031f5:\te8 84 e2 ff ff       \tcallq  40147e <simplectic2_points>\n  4031fa:\t48 8d 55 a0          \tlea    -0x60(%rbp),%rdx\n  4031fe:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  403202:\t48 89 d6             \tmov    %rdx,%rsi\n  403205:\t48 89 c7             \tmov    %rax,%rdi\n  403208:\te8 e6 fe ff ff       \tcallq  4030f3 <gradient2>\n  40320d:\tf2 0f 11 45 88       \tmovsd  %xmm0,-0x78(%rbp)\n  403212:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  403216:\t48 8d 50 20          \tlea    0x20(%rax),%rdx\n  40321a:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  40321e:\t48 89 d6             \tmov    %rdx,%rsi\n  403221:\t48 89 c7             \tmov    %rax,%rdi\n  403224:\te8 ca fe ff ff       \tcallq  4030f3 <gradient2>\n  403229:\t66 0f 28 d0          \tmovapd %xmm0,%xmm2\n  40322d:\tf2 0f 58 55 88       \taddsd  -0x78(%rbp),%xmm2\n  403232:\tf2 0f 11 55 88       \tmovsd  %xmm2,-0x78(%rbp)\n  403237:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  40323b:\t48 8d 50 40          \tlea    0x40(%rax),%rdx\n  40323f:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  403243:\t48 89 d6             \tmov    %rdx,%rsi\n  403246:\t48 89 c7             \tmov    %rax,%rdi\n  403249:\te8 a5 fe ff ff       \tcallq  4030f3 <gradient2>\n  40324e:\tf2 0f 10 4d 88       \tmovsd  -0x78(%rbp),%xmm1\n  403253:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n  403257:\tf2 0f 10 05 21 0f 00 \tmovsd  0xf21(%rip),%xmm0        # 404180 <_IO_stdin_used+0x180>\n  40325e:\t00 \n  40325f:\tf2 0f 59 c1          \tmulsd  %xmm1,%xmm0\n  403263:\tc9                   \tleaveq \n  403264:\tc3                   \tretq   ", "code_s": "double __fastcall simplectic2(double *a1, __int64 a2) {\n  double v3;\n  double v4;\n  char v5[Number];\n  __int64 v6;\n  __int64 v7;\n  simplectic2_points(a1, (__int64)v5);\n  v3 = gradient2(a2, (__int64)v5);\n  v4 = gradient2(a2, (__int64)&v6) + v3;\n  return Number * (v4 + gradient2(a2, (__int64)&v7));\n}", "code_t": "double __cdecl simplectic2(const double *const point,\n                           const simplectic_seed_0 *seed) {\n  double v3;\n  double v4;\n  simplectic2_points <span class=\"supfact\">ps</span>;\n  simplectic2_points_0(point, &<span class=\"supfact\">ps</span>);\n  v3 = gradient2(seed, <span class=\"supfact\">ps</span>.elts);\n  v4 = gradient2(seed, &<span class=\"supfact\">ps</span>.elts[Number]) + v3;\n  return Number * (v4 + gradient2(seed, &<span class=\"supfact\">ps</span>.elts[Number]));\n}", "var": [{"name": "v5", "type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }", "pred_name": "s", "ref_name": "ps", "ref_type": "struct simplectic2_points { simplectic_point2_0[3] elts; }"}], "body_in_train": false}, {"repo_owner": "franziskuskiefer", "repo_name": "nss-benchmark", "path": "franziskuskiefer/nss-benchmark/0cd9bc721c370efa169a79962c2449acc48f375d6d576e87190b3ee5a1a4a906", "path_in_repo": "franziskuskiefer/nss-benchmark/supercop-20171218/ntl-10.5.0/src/GF2EX.o", "objdump": "00000000000032e0 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_>:\n    32e0:\t41 57                \tpush   %r15\n    32e2:\t41 56                \tpush   %r14\n    32e4:\t41 55                \tpush   %r13\n    32e6:\t41 54                \tpush   %r12\n    32e8:\t49 89 fc             \tmov    %rdi,%r12\n    32eb:\t55                   \tpush   %rbp\n    32ec:\t48 89 d5             \tmov    %rdx,%rbp\n    32ef:\t53                   \tpush   %rbx\n    32f0:\t48 89 f3             \tmov    %rsi,%rbx\n    32f3:\t48 83 ec 18          \tsub    $0x18,%rsp\n    32f7:\t48 8b 02             \tmov    (%rdx),%rax\n    32fa:\t48 85 c0             \ttest   %rax,%rax\n    32fd:\t74 1b                \tje     331a <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x3a>\n    32ff:\t48 8b 50 e0          \tmov    -0x20(%rax),%rdx\n    3303:\t48 83 fa 01          \tcmp    $0x1,%rdx\n    3307:\t7e 11                \tjle    331a <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x3a>\n    3309:\t48 8b 06             \tmov    (%rsi),%rax\n    330c:\t48 85 c0             \ttest   %rax,%rax\n    330f:\t74 24                \tje     3335 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x55>\n    3311:\t48 8b 40 e0          \tmov    -0x20(%rax),%rax\n    3315:\t48 39 c2             \tcmp    %rax,%rdx\n    3318:\t7f 16                \tjg     3330 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x50>\n    331a:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    331f:\te8 00 00 00 00       \tcallq  3324 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x44>\n    3324:\t48 8b 03             \tmov    (%rbx),%rax\n    3327:\t48 85 c0             \ttest   %rax,%rax\n    332a:\t74 09                \tje     3335 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x55>\n    332c:\t48 8b 40 e0          \tmov    -0x20(%rax),%rax\n    3330:\t48 85 c0             \ttest   %rax,%rax\n    3333:\t75 23                \tjne    3358 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x78>\n    3335:\t49 8b 04 24          \tmov    (%r12),%rax\n    3339:\t48 85 c0             \ttest   %rax,%rax\n    333c:\t74 08                \tje     3346 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x66>\n    333e:\t48 c7 40 f8 00 00 00 \tmovq   $0x0,-0x8(%rax)\n    3345:\t00 \n    3346:\t48 83 c4 18          \tadd    $0x18,%rsp\n    334a:\t5b                   \tpop    %rbx\n    334b:\t5d                   \tpop    %rbp\n    334c:\t41 5c                \tpop    %r12\n    334e:\t41 5d                \tpop    %r13\n    3350:\t41 5e                \tpop    %r14\n    3352:\t41 5f                \tpop    %r15\n    3354:\tc3                   \tretq   \n    3355:\t0f 1f 00             \tnopl   (%rax)\n    3358:\t48 89 da             \tmov    %rbx,%rdx\n    335b:\t48 89 ee             \tmov    %rbp,%rsi\n    335e:\t48 89 e7             \tmov    %rsp,%rdi\n    3361:\t48 c7 04 24 00 00 00 \tmovq   $0x0,(%rsp)\n    3368:\t00 \n    3369:\te8 00 00 00 00       \tcallq  336e <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x8e>\n    336e:\t48 89 ef             \tmov    %rbp,%rdi\n    3371:\te8 00 00 00 00       \tcallq  3376 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x96>\n    3376:\t48 89 c7             \tmov    %rax,%rdi\n    3379:\te8 00 00 00 00       \tcallq  337e <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x9e>\n    337e:\t48 85 c0             \ttest   %rax,%rax\n    3381:\t0f 85 81 00 00 00    \tjne    3408 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x128>\n    3387:\t48 8b 03             \tmov    (%rbx),%rax\n    338a:\t49 c7 c6 ff ff ff ff \tmov    $0xffffffffffffffff,%r14\n    3391:\t48 c7 44 24 08 00 00 \tmovq   $0x0,0x8(%rsp)\n    3398:\t00 00 \n    339a:\t48 85 c0             \ttest   %rax,%rax\n    339d:\t74 07                \tje     33a6 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0xc6>\n    339f:\t4c 8b 70 e0          \tmov    -0x20(%rax),%r14\n    33a3:\t49 ff ce             \tdec    %r14\n    33a6:\t48 89 ef             \tmov    %rbp,%rdi\n    33a9:\t4c 8d 6c 24 08       \tlea    0x8(%rsp),%r13\n    33ae:\te8 00 00 00 00       \tcallq  33b3 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0xd3>\n    33b3:\t4c 89 f7             \tmov    %r14,%rdi\n    33b6:\t4c 8b 3d 00 00 00 00 \tmov    0x0(%rip),%r15        # 33bd <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0xdd>\n    33bd:\t48 89 c5             \tmov    %rax,%rbp\n    33c0:\t4c 8d 6c 24 08       \tlea    0x8(%rsp),%r13\n    33c5:\te8 00 00 00 00       \tcallq  33ca <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0xea>\n    33ca:\t4c 8d 6c 24 08       \tlea    0x8(%rsp),%r13\n    33cf:\t48 89 c2             \tmov    %rax,%rdx\n    33d2:\t4c 89 f9             \tmov    %r15,%rcx\n    33d5:\t48 89 ee             \tmov    %rbp,%rsi\n    33d8:\t4c 89 ef             \tmov    %r13,%rdi\n    33db:\te8 00 00 00 00       \tcallq  33e0 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x100>\n    33e0:\t4c 89 ee             \tmov    %r13,%rsi\n    33e3:\t4c 89 ef             \tmov    %r13,%rdi\n    33e6:\te8 00 00 00 00       \tcallq  33eb <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x10b>\n    33eb:\t48 8b 0d 00 00 00 00 \tmov    0x0(%rip),%rcx        # 33f2 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x112>\n    33f2:\t4c 89 ea             \tmov    %r13,%rdx\n    33f5:\t48 89 e6             \tmov    %rsp,%rsi\n    33f8:\t48 89 e7             \tmov    %rsp,%rdi\n    33fb:\te8 00 00 00 00       \tcallq  3400 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x120>\n    3400:\t4c 89 ef             \tmov    %r13,%rdi\n    3403:\te8 00 00 00 00       \tcallq  3408 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x128>\n    3408:\t48 89 e6             \tmov    %rsp,%rsi\n    340b:\t4c 89 e7             \tmov    %r12,%rdi\n    340e:\te8 00 00 00 00       \tcallq  3413 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x133>\n    3413:\t48 89 e7             \tmov    %rsp,%rdi\n    3416:\te8 00 00 00 00       \tcallq  341b <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x13b>\n    341b:\t48 83 c4 18          \tadd    $0x18,%rsp\n    341f:\t5b                   \tpop    %rbx\n    3420:\t5d                   \tpop    %rbp\n    3421:\t41 5c                \tpop    %r12\n    3423:\t41 5d                \tpop    %r13\n    3425:\t41 5e                \tpop    %r14\n    3427:\t41 5f                \tpop    %r15\n    3429:\tc3                   \tretq   \n    342a:\t48 89 c5             \tmov    %rax,%rbp\n    342d:\tc5 f8 77             \tvzeroupper \n    3430:\te9 00 00 00 00       \tjmpq   3435 <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x155>\n    3435:\t48 89 c5             \tmov    %rax,%rbp\n    3438:\te9 00 00 00 00       \tjmpq   343d <_ZN3NTL7NormModERNS_4GF2EERKNS_5GF2EXES4_+0x15d>\n    343d:\t0f 1f 00             \tnopl   (%rax)", "code_s": "void __fastcall NTL NormMod(NTL *this, NTL GF2E *a2, const NTL GF2EX *a3,\n                            const NTL GF2EX *a4) {\n  NTL GF2E *v5;\n  __int64 v6;\n  __int64 v7;\n  const NTL GF2EX *v9;\n  NTL *v10;\n  __int64 v11;\n  __int64 v12;\n  __int64 v13;\n  __int64 v14;\n  __int64 v15;\n  __int64 v16;\n  const NTL GF2E *v17;\n  __int64 v18;\n  __int64 v19[Number];\n  v5 = a2;\n  if (!*(_QWORD *)a3)\n    goto LABEL_5;\n  v6 = *(_QWORD *)(*(_QWORD *)a3 - Number L);\n  if (v6 <= Number)\n    goto LABEL_5;\n  if (!*(_QWORD *)a2)\n    goto LABEL_8;\n  v7 = *(_QWORD *)(*(_QWORD *)a2 - Number L);\n  if (v6 <= v7) {\n  LABEL_5:\n    NTL TerminalError((NTL *)String, (const char *)a2);\n    if (!*(_QWORD *)a2)\n      goto LABEL_8;\n    v7 = *(_QWORD *)(*(_QWORD *)a2 - Number L);\n  }\n  if (!v7) {\n  LABEL_8:\n    if (*(_QWORD *)this)\n      *(_QWORD *)(*(_QWORD *)this - Number L) = Number L;\n    return;\n  }\n  v9 = a3;\n  v18 = Number L;\n  NTL PlainResultant((NTL *)&v18, a3, a2, a4);\n  v10 = (NTL *)NTL LeadCoeff(a3, a3);\n  if (!NTL IsOne(v10, a3)) {\n    v11 = *(_QWORD *)v5;\n    v12 = Number;\n    v19[Number] = Number L;\n    if (v11)\n      v12 = *(_QWORD *)(v11 - Number) - Number L;\n    v13 = NTL LeadCoeff(a3, a3);\n    v14 = NTL GF2EInfo;\n    v15 = v13;\n    v16 = NTL ZZ_expo((NTL *)v12, (__int64)v9);\n    NTL PowerMod(v19, v15, v16, v14);\n    NTL inv((NTL *)v19, (NTL GF2E *)v19, v17);\n    NTL MulMod(&v18, &v18, v19, NTL GF2EInfo);\n    NTL WordVector ~WordVector((NTL WordVector *)v19);\n  }\n  NTL WordVector operator=(this, &v18);\n  NTL WordVector ~WordVector((NTL WordVector *)&v18);\n}", "code_t": "void __fastcall NTL NormMod(NTL *this, NTL GF2E *a2, const NTL GF2EX *a3,\n                            const NTL GF2EX *a4) {\n  NTL GF2E *v5;\n  _ntl_ulong *v6;\n  __int64 v7;\n  const NTL GF2EX *v9;\n  NTL *v10;\n  _ntl_ulong *v11;\n  __int64 v12;\n  const NTL GF2E *v13;\n  const NTL ZZ *v14;\n  NTL GF2X *v15;\n  const NTL GF2X *v16;\n  const NTL GF2XModulus *v17;\n  const NTL GF2E *v18;\n  const NTL GF2XModulus *v19;\n  NTL WordVector <span class=\"supfact\">v20</span>;\n  NTL WordVector <span class=\"supfact\">v21</span>;\n  v5 = a2;\n  if (!a3->rep._vec__rep.rep)\n    goto LABEL_5;\n  v6 = a3->rep._vec__rep.rep[Number]._GF2E__rep.xrep.rep;\n  if ((__int64)v6 <= Number)\n    goto LABEL_5;\n  if (!a2->_GF2E__rep.xrep.rep)\n    goto LABEL_8;\n  v7 = *(a2->_GF2E__rep.xrep.rep - Number);\n  if ((__int64)v6 <= v7) {\n  LABEL_5:\n    NTL TerminalError((NTL *)String, (const char *)a2);\n    if (!a2->_GF2E__rep.xrep.rep)\n      goto LABEL_8;\n    v7 = *(a2->_GF2E__rep.xrep.rep - Number);\n  }\n  if (!v7) {\n  LABEL_8:\n    if (*(_QWORD *)this)\n      *(_QWORD *)(*(_QWORD *)this - Number L) = Number L;\n    return;\n  }\n  v9 = a3;\n  <span class=\"supfact\">v20</span>.rep = Number L;\n  NTL PlainResultant((NTL *)&<span class=\"supfact\">v20</span>, (NTL GF2E *)a3,\n                     (const NTL GF2EX *)a2, a4);\n  v10 = (NTL *)NTL LeadCoeff(a3);\n  if (!NTL IsOne(v10, (const NTL GF2X *)a3)) {\n    v11 = v5->_GF2E__rep.xrep.rep;\n    v12 = Number;\n    <span class=\"supfact\">v21</span>.rep = Number L;\n    if (v11)\n      v12 = *(v11 - Number) - Number;\n    v13 = NTL LeadCoeff(a3);\n    v14 = (const NTL ZZ *)NTL GF2EInfo;\n    v15 = &v13->_GF2E__rep;\n    v16 = (const NTL GF2X *)NTL ZZ_expo((NTL *)v12, (__int64)v9);\n    NTL PowerMod((NTL *)&<span class=\"supfact\">v21</span>, v15, v16, v14, v17);\n    NTL inv((NTL *)&<span class=\"supfact\">v21</span>, (NTL GF2E *)&<span class=\"supfact\">v21</span>, v18);\n    NTL MulMod((NTL *)&<span class=\"supfact\">v20</span>, (NTL GF2X *)&<span class=\"supfact\">v20</span>,\n               (const NTL GF2X *)&<span class=\"supfact\">v21</span>, NTL GF2EInfo, v19);\n    NTL WordVector ~WordVector(&<span class=\"supfact\">v21</span>);\n  }\n  NTL WordVector operator=(this, &<span class=\"supfact\">v20</span>);\n  NTL WordVector ~WordVector(&<span class=\"supfact\">v20</span>);\n}", "var": [{"name": "v18", "type": "__int64", "pred_name": "v18", "ref_name": "v20", "ref_type": "struct NTL::WordVector { _ntl_ulong * rep; }"}, {"name": "v19", "type": "struct NTL::Vec<NTL::zz_p> { NTL::WrappedPtr<NTL::zz_p,NTL::Vec<NTL::zz_p>::_vec_deleter> _vec__rep; }", "pred_name": "a", "ref_name": "v21", "ref_type": "struct NTL::WordVector { _ntl_ulong * rep; }"}], "body_in_train": false}, {"repo_owner": "thepaul", "repo_name": "debian-libnatpmp", "path": "thepaul/debian-libnatpmp/d54150225009a87fc6e60431aabfeaf4090f7ae7f29612c60e20fa84992cfb2e", "path_in_repo": "thepaul/debian-libnatpmp//libnatpmp.so", "objdump": "00000000000018c9 <readnatpmpresponseorretry>:\n    18c9:\t55                   \tpush   %rbp\n    18ca:\t48 89 e5             \tmov    %rsp,%rbp\n    18cd:\t48 83 ec 30          \tsub    $0x30,%rsp\n    18d1:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    18d5:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n    18d9:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n    18de:\t74 07                \tje     18e7 <readnatpmpresponseorretry+0x1e>\n    18e0:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n    18e5:\t75 0a                \tjne    18f1 <readnatpmpresponseorretry+0x28>\n    18e7:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    18ec:\te9 9f 01 00 00       \tjmpq   1a90 <readnatpmpresponseorretry+0x1c7>\n    18f1:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    18f5:\t8b 40 08             \tmov    0x8(%rax),%eax\n    18f8:\t85 c0                \ttest   %eax,%eax\n    18fa:\t75 0a                \tjne    1906 <readnatpmpresponseorretry+0x3d>\n    18fc:\tb8 fa ff ff ff       \tmov    $0xfffffffa,%eax\n    1901:\te9 8a 01 00 00       \tjmpq   1a90 <readnatpmpresponseorretry+0x1c7>\n    1906:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    190a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    190e:\t48 89 d6             \tmov    %rdx,%rsi\n    1911:\t48 89 c7             \tmov    %rax,%rdi\n    1914:\te8 c7 f7 ff ff       \tcallq  10e0 <readnatpmpresponse@plt>\n    1919:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    191c:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    1920:\t0f 89 5c 01 00 00    \tjns    1a82 <readnatpmpresponseorretry+0x1b9>\n    1926:\t83 7d fc 9c          \tcmpl   $0xffffff9c,-0x4(%rbp)\n    192a:\t0f 85 5d 01 00 00    \tjne    1a8d <readnatpmpresponseorretry+0x1c4>\n    1930:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n    1934:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1939:\t48 89 c7             \tmov    %rax,%rdi\n    193c:\te8 4f f7 ff ff       \tcallq  1090 <gettimeofday@plt>\n    1941:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    1945:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1949:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    194d:\t48 39 c2             \tcmp    %rax,%rdx\n    1950:\t75 14                \tjne    1966 <readnatpmpresponseorretry+0x9d>\n    1952:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    1956:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    195a:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n    195e:\t48 39 c2             \tcmp    %rax,%rdx\n    1961:\t0f 9d c0             \tsetge  %al\n    1964:\teb 12                \tjmp    1978 <readnatpmpresponseorretry+0xaf>\n    1966:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    196a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    196e:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    1972:\t48 39 c2             \tcmp    %rax,%rdx\n    1975:\t0f 9d c0             \tsetge  %al\n    1978:\t84 c0                \ttest   %al,%al\n    197a:\t0f 84 0d 01 00 00    \tje     1a8d <readnatpmpresponseorretry+0x1c4>\n    1980:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1984:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n    1987:\t83 f8 08             \tcmp    $0x8,%eax\n    198a:\t7e 0a                \tjle    1996 <readnatpmpresponseorretry+0xcd>\n    198c:\tb8 f9 ff ff ff       \tmov    $0xfffffff9,%eax\n    1991:\te9 fa 00 00 00       \tjmpq   1a90 <readnatpmpresponseorretry+0x1c7>\n    1996:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    199a:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n    199d:\tba fa 00 00 00       \tmov    $0xfa,%edx\n    19a2:\t89 c1                \tmov    %eax,%ecx\n    19a4:\td3 e2                \tshl    %cl,%edx\n    19a6:\t89 d0                \tmov    %edx,%eax\n    19a8:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n    19ab:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    19af:\t48 8b 50 20          \tmov    0x20(%rax),%rdx\n    19b3:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    19b6:\t48 63 c8             \tmovslq %eax,%rcx\n    19b9:\t48 69 c9 d3 4d 62 10 \timul   $0x10624dd3,%rcx,%rcx\n    19c0:\t48 c1 e9 20          \tshr    $0x20,%rcx\n    19c4:\tc1 f9 06             \tsar    $0x6,%ecx\n    19c7:\tc1 f8 1f             \tsar    $0x1f,%eax\n    19ca:\t29 c1                \tsub    %eax,%ecx\n    19cc:\t89 c8                \tmov    %ecx,%eax\n    19ce:\t48 98                \tcltq   \n    19d0:\t48 01 c2             \tadd    %rax,%rdx\n    19d3:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    19d7:\t48 89 50 20          \tmov    %rdx,0x20(%rax)\n    19db:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    19df:\t48 8b 48 28          \tmov    0x28(%rax),%rcx\n    19e3:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    19e6:\t48 63 d0             \tmovslq %eax,%rdx\n    19e9:\t48 69 d2 d3 4d 62 10 \timul   $0x10624dd3,%rdx,%rdx\n    19f0:\t48 c1 ea 20          \tshr    $0x20,%rdx\n    19f4:\t89 d6                \tmov    %edx,%esi\n    19f6:\tc1 fe 06             \tsar    $0x6,%esi\n    19f9:\t99                   \tcltd   \n    19fa:\t29 d6                \tsub    %edx,%esi\n    19fc:\t89 f2                \tmov    %esi,%edx\n    19fe:\t69 d2 e8 03 00 00    \timul   $0x3e8,%edx,%edx\n    1a04:\t29 d0                \tsub    %edx,%eax\n    1a06:\t89 c2                \tmov    %eax,%edx\n    1a08:\t69 c2 e8 03 00 00    \timul   $0x3e8,%edx,%eax\n    1a0e:\t48 98                \tcltq   \n    1a10:\t48 8d 14 01          \tlea    (%rcx,%rax,1),%rdx\n    1a14:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1a18:\t48 89 50 28          \tmov    %rdx,0x28(%rax)\n    1a1c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1a20:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n    1a24:\t48 3d 3f 42 0f 00    \tcmp    $0xf423f,%rax\n    1a2a:\t7e 2b                \tjle    1a57 <readnatpmpresponseorretry+0x18e>\n    1a2c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1a30:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n    1a34:\t48 8d 90 c0 bd f0 ff \tlea    -0xf4240(%rax),%rdx\n    1a3b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1a3f:\t48 89 50 28          \tmov    %rdx,0x28(%rax)\n    1a43:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1a47:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    1a4b:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    1a4f:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1a53:\t48 89 50 20          \tmov    %rdx,0x20(%rax)\n    1a57:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1a5b:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n    1a5e:\t8d 50 01             \tlea    0x1(%rax),%edx\n    1a61:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1a65:\t89 50 1c             \tmov    %edx,0x1c(%rax)\n    1a68:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1a6c:\t48 89 c7             \tmov    %rax,%rdi\n    1a6f:\te8 ac f6 ff ff       \tcallq  1120 <sendpendingrequest@plt>\n    1a74:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    1a77:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    1a7b:\t79 10                \tjns    1a8d <readnatpmpresponseorretry+0x1c4>\n    1a7d:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    1a80:\teb 0e                \tjmp    1a90 <readnatpmpresponseorretry+0x1c7>\n    1a82:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1a86:\tc7 40 08 00 00 00 00 \tmovl   $0x0,0x8(%rax)\n    1a8d:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    1a90:\tc9                   \tleaveq \n    1a91:\tc3                   \tretq   ", "code_s": "__int64 __fastcall readnatpmpresponseorretry(__int64 a1, __int64 a2) {\n  struct timeval tv;\n  unsigned int v5;\n  int v6;\n  unsigned int v7;\n  if (!a1 || !a2)\n    return Number;\n  if (!*(_DWORD *)(a1 + Number))\n    return Number L;\n  v7 = readnatpmpresponse(a1, a2);\n  if ((v7 & Number) == Number) {\n    *(_DWORD *)(a1 + Number) = Number;\n  } else if (v7 == Number) {\n    gettimeofday(&tv, Number L);\n    if (tv.tv_sec == *(_QWORD *)(a1 + Number)\n            ? tv.tv_usec >= *(_QWORD *)(a1 + Number)\n            : tv.tv_sec >= *(_QWORD *)(a1 + Number)) {\n      if (*(int *)(a1 + Number) > Number)\n        return Number L;\n      v6 = Number << *(_DWORD *)(a1 + Number);\n      *(_QWORD *)(a1 + Number) += v6 / Number;\n      *(_QWORD *)(a1 + Number) += Number * (v6 % Number);\n      if (*(__int64 *)(a1 + Number) > Number) {\n        *(_QWORD *)(a1 + Number) -= Number L;\n        ++*(_QWORD *)(a1 + Number);\n      }\n      ++*(_DWORD *)(a1 + Number);\n      v5 = sendpendingrequest(a1);\n      if ((v5 & Number) != Number)\n        return v5;\n    }\n  }\n  return v7;\n}", "code_t": "int __cdecl readnatpmpresponseorretry(natpmp_t *p, natpmpresp_t *response) {\n  timeval <span class=\"supfact\">now</span>;\n  int r;\n  int delay;\n  int n;\n  if (!p || !response)\n    return Number;\n  if (!p->has_pending_request)\n    return Number;\n  n = readnatpmpresponse(p, response);\n  if (n >= Number) {\n    p->has_pending_request = Number;\n  } else if (n == Number) {\n    gettimeofday(&<span class=\"supfact\">now</span>, Number L);\n    if (<span class=\"supfact\">now</span>.tv_sec == p->retry_time.tv_sec\n            ? <span class=\"supfact\">now</span>.tv_usec >= p->retry_time.tv_usec\n            : <span class=\"supfact\">now</span>.tv_sec >= p->retry_time.tv_sec) {\n      if (p->try_number > Number)\n        return Number;\n      delay = Number << p->try_number;\n      p->retry_time.tv_sec += delay / Number;\n      p->retry_time.tv_usec += Number * (delay % Number);\n      if (p->retry_time.tv_usec > Number) {\n        p->retry_time.tv_usec -= Number L;\n        ++p->retry_time.tv_sec;\n      }\n      ++p->try_number;\n      r = sendpendingrequest(p);\n      if (r < Number)\n        return r;\n    }\n  }\n  return n;\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "pred_name": "now", "ref_name": "now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "intel", "repo_name": "KVMGT-kernel", "path": "intel/KVMGT-kernel/58f10ab91a55111d015e36a95386c0336224a26dcaae6ea8604f1877fe2459af", "path_in_repo": "intel/KVMGT-kernel/tools/lib/traceevent/event-parse.o", "objdump": "0000000000008152 <pretty_print>:\n    8152:\t55                   \tpush   %rbp\n    8153:\t48 89 e5             \tmov    %rsp,%rbp\n    8156:\t48 81 ec c0 00 00 00 \tsub    $0xc0,%rsp\n    815d:\t48 89 bd 58 ff ff ff \tmov    %rdi,-0xa8(%rbp)\n    8164:\t48 89 b5 50 ff ff ff \tmov    %rsi,-0xb0(%rbp)\n    816b:\t89 95 4c ff ff ff    \tmov    %edx,-0xb4(%rbp)\n    8171:\t48 89 8d 40 ff ff ff \tmov    %rcx,-0xc0(%rbp)\n    8178:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    817f:\t48 8b 00             \tmov    (%rax),%rax\n    8182:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    8186:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    818d:\t48 83 c0 30          \tadd    $0x30,%rax\n    8191:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n    8195:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    8199:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    819d:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    81a1:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    81a8:\t00 \n    81a9:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    81ad:\t48 8b 00             \tmov    (%rax),%rax\n    81b0:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    81b4:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    81bb:\t00 \n    81bc:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    81c3:\t8b 40 14             \tmov    0x14(%rax),%eax\n    81c6:\t85 c0                \ttest   %eax,%eax\n    81c8:\t79 43                \tjns    820d <pretty_print+0xbb>\n    81ca:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    81d1:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 81d8 <pretty_print+0x86>\n    81d8:\t48 89 c7             \tmov    %rax,%rdi\n    81db:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    81e0:\te8 00 00 00 00       \tcallq  81e5 <pretty_print+0x93>\n    81e5:\t48 8b 8d 40 ff ff ff \tmov    -0xc0(%rbp),%rcx\n    81ec:\t8b 95 4c ff ff ff    \tmov    -0xb4(%rbp),%edx\n    81f2:\t48 8b b5 50 ff ff ff \tmov    -0xb0(%rbp),%rsi\n    81f9:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    8200:\t48 89 c7             \tmov    %rax,%rdi\n    8203:\te8 ea fb ff ff       \tcallq  7df2 <print_event_fields>\n    8208:\te9 72 08 00 00       \tjmpq   8a7f <pretty_print+0x92d>\n    820d:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    8214:\t8b 40 14             \tmov    0x14(%rax),%eax\n    8217:\t83 e0 04             \tand    $0x4,%eax\n    821a:\t85 c0                \ttest   %eax,%eax\n    821c:\t0f 84 05 08 00 00    \tje     8a27 <pretty_print+0x8d5>\n    8222:\t48 8b 95 40 ff ff ff \tmov    -0xc0(%rbp),%rdx\n    8229:\t8b 8d 4c ff ff ff    \tmov    -0xb4(%rbp),%ecx\n    822f:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    8236:\t89 ce                \tmov    %ecx,%esi\n    8238:\t48 89 c7             \tmov    %rax,%rdi\n    823b:\te8 17 f8 ff ff       \tcallq  7a57 <get_bprint_format>\n    8240:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    8244:\t48 8b 8d 40 ff ff ff \tmov    -0xc0(%rbp),%rcx\n    824b:\t8b 95 4c ff ff ff    \tmov    -0xb4(%rbp),%edx\n    8251:\t48 8b b5 50 ff ff ff \tmov    -0xb0(%rbp),%rsi\n    8258:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    825c:\t48 89 c7             \tmov    %rax,%rdi\n    825f:\te8 8a f3 ff ff       \tcallq  75ee <make_bprint_args>\n    8264:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    8268:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    826c:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    8270:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    8274:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    8278:\te9 aa 07 00 00       \tjmpq   8a27 <pretty_print+0x8d5>\n    827d:\tc7 45 cc 00 00 00 00 \tmovl   $0x0,-0x34(%rbp)\n    8284:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    8288:\t0f b6 00             \tmovzbl (%rax),%eax\n    828b:\t3c 5c                \tcmp    $0x5c,%al\n    828d:\t0f 85 b1 00 00 00    \tjne    8344 <pretty_print+0x1f2>\n    8293:\t48 83 45 e8 01       \taddq   $0x1,-0x18(%rbp)\n    8298:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    829c:\t0f b6 00             \tmovzbl (%rax),%eax\n    829f:\t0f be c0             \tmovsbl %al,%eax\n    82a2:\t83 f8 74             \tcmp    $0x74,%eax\n    82a5:\t74 32                \tje     82d9 <pretty_print+0x187>\n    82a7:\t83 f8 74             \tcmp    $0x74,%eax\n    82aa:\t7f 78                \tjg     8324 <pretty_print+0x1d2>\n    82ac:\t83 f8 72             \tcmp    $0x72,%eax\n    82af:\t74 41                \tje     82f2 <pretty_print+0x1a0>\n    82b1:\t83 f8 72             \tcmp    $0x72,%eax\n    82b4:\t7f 6e                \tjg     8324 <pretty_print+0x1d2>\n    82b6:\t83 f8 5c             \tcmp    $0x5c,%eax\n    82b9:\t74 50                \tje     830b <pretty_print+0x1b9>\n    82bb:\t83 f8 6e             \tcmp    $0x6e,%eax\n    82be:\t75 64                \tjne    8324 <pretty_print+0x1d2>\n    82c0:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    82c7:\tbe 0a 00 00 00       \tmov    $0xa,%esi\n    82cc:\t48 89 c7             \tmov    %rax,%rdi\n    82cf:\te8 00 00 00 00       \tcallq  82d4 <pretty_print+0x182>\n    82d4:\te9 49 07 00 00       \tjmpq   8a22 <pretty_print+0x8d0>\n    82d9:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    82e0:\tbe 09 00 00 00       \tmov    $0x9,%esi\n    82e5:\t48 89 c7             \tmov    %rax,%rdi\n    82e8:\te8 00 00 00 00       \tcallq  82ed <pretty_print+0x19b>\n    82ed:\te9 30 07 00 00       \tjmpq   8a22 <pretty_print+0x8d0>\n    82f2:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    82f9:\tbe 0d 00 00 00       \tmov    $0xd,%esi\n    82fe:\t48 89 c7             \tmov    %rax,%rdi\n    8301:\te8 00 00 00 00       \tcallq  8306 <pretty_print+0x1b4>\n    8306:\te9 17 07 00 00       \tjmpq   8a22 <pretty_print+0x8d0>\n    830b:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    8312:\tbe 5c 00 00 00       \tmov    $0x5c,%esi\n    8317:\t48 89 c7             \tmov    %rax,%rdi\n    831a:\te8 00 00 00 00       \tcallq  831f <pretty_print+0x1cd>\n    831f:\te9 fe 06 00 00       \tjmpq   8a22 <pretty_print+0x8d0>\n    8324:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    8328:\t0f b6 00             \tmovzbl (%rax),%eax\n    832b:\t0f b6 d0             \tmovzbl %al,%edx\n    832e:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    8335:\t89 d6                \tmov    %edx,%esi\n    8337:\t48 89 c7             \tmov    %rax,%rdi\n    833a:\te8 00 00 00 00       \tcallq  833f <pretty_print+0x1ed>\n    833f:\te9 de 06 00 00       \tjmpq   8a22 <pretty_print+0x8d0>\n    8344:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    8348:\t0f b6 00             \tmovzbl (%rax),%eax\n    834b:\t3c 25                \tcmp    $0x25,%al\n    834d:\t0f 85 b1 06 00 00    \tjne    8a04 <pretty_print+0x8b2>\n    8353:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    8357:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n    835b:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n    8362:\tc7 45 d8 00 00 00 00 \tmovl   $0x0,-0x28(%rbp)\n    8369:\t48 83 45 e8 01       \taddq   $0x1,-0x18(%rbp)\n    836e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    8372:\t0f b6 00             \tmovzbl (%rax),%eax\n    8375:\t0f be c0             \tmovsbl %al,%eax\n    8378:\t83 e8 23             \tsub    $0x23,%eax\n    837b:\t83 f8 57             \tcmp    $0x57,%eax\n    837e:\t0f 87 59 06 00 00    \tja     89dd <pretty_print+0x88b>\n    8384:\t89 c0                \tmov    %eax,%eax\n    8386:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    838d:\t00 \n    838e:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 8395 <pretty_print+0x243>\n    8395:\t8b 04 02             \tmov    (%rdx,%rax,1),%eax\n    8398:\t48 98                \tcltq   \n    839a:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 83a1 <pretty_print+0x24f>\n    83a1:\t48 01 d0             \tadd    %rdx,%rax\n    83a4:\tff e0                \tjmpq   *%rax\n    83a6:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    83ad:\tbe 25 00 00 00       \tmov    $0x25,%esi\n    83b2:\t48 89 c7             \tmov    %rax,%rdi\n    83b5:\te8 00 00 00 00       \tcallq  83ba <pretty_print+0x268>\n    83ba:\te9 63 06 00 00       \tjmpq   8a22 <pretty_print+0x8d0>\n    83bf:\t83 6d cc 01          \tsubl   $0x1,-0x34(%rbp)\n    83c3:\teb a4                \tjmp    8369 <pretty_print+0x217>\n    83c5:\t83 45 cc 01          \taddl   $0x1,-0x34(%rbp)\n    83c9:\teb 9e                \tjmp    8369 <pretty_print+0x217>\n    83cb:\tc7 45 cc 02 00 00 00 \tmovl   $0x2,-0x34(%rbp)\n    83d2:\teb 95                \tjmp    8369 <pretty_print+0x217>\n    83d4:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    83d9:\t75 3b                \tjne    8416 <pretty_print+0x2c4>\n    83db:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 83e1 <pretty_print+0x28f>\n    83e1:\t85 c0                \ttest   %eax,%eax\n    83e3:\t74 11                \tje     83f6 <pretty_print+0x2a4>\n    83e5:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 83ec <pretty_print+0x29a>\n    83ec:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    83f1:\te8 00 00 00 00       \tcallq  83f6 <pretty_print+0x2a4>\n    83f6:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    83fd:\t8b 40 14             \tmov    0x14(%rax),%eax\n    8400:\t0d 00 00 00 80       \tor     $0x80000000,%eax\n    8405:\t89 c2                \tmov    %eax,%edx\n    8407:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    840e:\t89 50 14             \tmov    %edx,0x14(%rax)\n    8411:\te9 2f 06 00 00       \tjmpq   8a45 <pretty_print+0x8f3>\n    8416:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    841a:\t48 8b 95 40 ff ff ff \tmov    -0xc0(%rbp),%rdx\n    8421:\t8b b5 4c ff ff ff    \tmov    -0xb4(%rbp),%esi\n    8427:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    842e:\t48 89 c7             \tmov    %rax,%rdi\n    8431:\te8 cf de ff ff       \tcallq  6305 <eval_num_arg>\n    8436:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n    8439:\tc7 45 d8 01 00 00 00 \tmovl   $0x1,-0x28(%rbp)\n    8440:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    8444:\t48 8b 00             \tmov    (%rax),%rax\n    8447:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    844b:\te9 19 ff ff ff       \tjmpq   8369 <pretty_print+0x217>\n    8450:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    8454:\t8b 40 34             \tmov    0x34(%rax),%eax\n    8457:\t83 f8 04             \tcmp    $0x4,%eax\n    845a:\t75 09                \tjne    8465 <pretty_print+0x313>\n    845c:\tc7 45 cc 01 00 00 00 \tmovl   $0x1,-0x34(%rbp)\n    8463:\teb 07                \tjmp    846c <pretty_print+0x31a>\n    8465:\tc7 45 cc 02 00 00 00 \tmovl   $0x2,-0x34(%rbp)\n    846c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    8470:\t48 83 c0 01          \tadd    $0x1,%rax\n    8474:\t0f b6 00             \tmovzbl (%rax),%eax\n    8477:\t3c 46                \tcmp    $0x46,%al\n    8479:\t74 0f                \tje     848a <pretty_print+0x338>\n    847b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    847f:\t48 83 c0 01          \tadd    $0x1,%rax\n    8483:\t0f b6 00             \tmovzbl (%rax),%eax\n    8486:\t3c 66                \tcmp    $0x66,%al\n    8488:\t75 14                \tjne    849e <pretty_print+0x34c>\n    848a:\t48 83 45 e8 01       \taddq   $0x1,-0x18(%rbp)\n    848f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    8493:\t0f b6 00             \tmovzbl (%rax),%eax\n    8496:\t0f be c0             \tmovsbl %al,%eax\n    8499:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n    849c:\teb 6e                \tjmp    850c <pretty_print+0x3ba>\n    849e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    84a2:\t48 83 c0 01          \tadd    $0x1,%rax\n    84a6:\t0f b6 00             \tmovzbl (%rax),%eax\n    84a9:\t3c 4d                \tcmp    $0x4d,%al\n    84ab:\t74 0f                \tje     84bc <pretty_print+0x36a>\n    84ad:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    84b1:\t48 83 c0 01          \tadd    $0x1,%rax\n    84b5:\t0f b6 00             \tmovzbl (%rax),%eax\n    84b8:\t3c 6d                \tcmp    $0x6d,%al\n    84ba:\t75 50                \tjne    850c <pretty_print+0x3ba>\n    84bc:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    84c0:\t48 83 c0 01          \tadd    $0x1,%rax\n    84c4:\t0f b6 00             \tmovzbl (%rax),%eax\n    84c7:\t0f be f0             \tmovsbl %al,%esi\n    84ca:\t4c 8b 45 f8          \tmov    -0x8(%rbp),%r8\n    84ce:\t48 8b bd 40 ff ff ff \tmov    -0xc0(%rbp),%rdi\n    84d5:\t8b 8d 4c ff ff ff    \tmov    -0xb4(%rbp),%ecx\n    84db:\t48 8b 95 50 ff ff ff \tmov    -0xb0(%rbp),%rdx\n    84e2:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    84e9:\t4d 89 c1             \tmov    %r8,%r9\n    84ec:\t49 89 f8             \tmov    %rdi,%r8\n    84ef:\t48 89 c7             \tmov    %rax,%rdi\n    84f2:\te8 97 f6 ff ff       \tcallq  7b8e <print_mac_arg>\n    84f7:\t48 83 45 e8 01       \taddq   $0x1,-0x18(%rbp)\n    84fc:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    8500:\t48 8b 00             \tmov    (%rax),%rax\n    8503:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    8507:\te9 16 05 00 00       \tjmpq   8a22 <pretty_print+0x8d0>\n    850c:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    8511:\t75 3b                \tjne    854e <pretty_print+0x3fc>\n    8513:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 8519 <pretty_print+0x3c7>\n    8519:\t85 c0                \ttest   %eax,%eax\n    851b:\t74 11                \tje     852e <pretty_print+0x3dc>\n    851d:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8524 <pretty_print+0x3d2>\n    8524:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8529:\te8 00 00 00 00       \tcallq  852e <pretty_print+0x3dc>\n    852e:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    8535:\t8b 40 14             \tmov    0x14(%rax),%eax\n    8538:\t0d 00 00 00 80       \tor     $0x80000000,%eax\n    853d:\t89 c2                \tmov    %eax,%edx\n    853f:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    8546:\t89 50 14             \tmov    %edx,0x14(%rax)\n    8549:\te9 f7 04 00 00       \tjmpq   8a45 <pretty_print+0x8f3>\n    854e:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    8552:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    8556:\t48 29 c2             \tsub    %rax,%rdx\n    8559:\t48 89 d0             \tmov    %rdx,%rax\n    855c:\t83 c0 01             \tadd    $0x1,%eax\n    855f:\t89 45 d0             \tmov    %eax,-0x30(%rbp)\n    8562:\t83 7d d0 1f          \tcmpl   $0x1f,-0x30(%rbp)\n    8566:\t7e 3d                \tjle    85a5 <pretty_print+0x453>\n    8568:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 856e <pretty_print+0x41c>\n    856e:\t85 c0                \ttest   %eax,%eax\n    8570:\t74 11                \tje     8583 <pretty_print+0x431>\n    8572:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8579 <pretty_print+0x427>\n    8579:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    857e:\te8 00 00 00 00       \tcallq  8583 <pretty_print+0x431>\n    8583:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    858a:\t8b 40 14             \tmov    0x14(%rax),%eax\n    858d:\t0d 00 00 00 80       \tor     $0x80000000,%eax\n    8592:\t89 c2                \tmov    %eax,%edx\n    8594:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    859b:\t89 50 14             \tmov    %edx,0x14(%rax)\n    859e:\tc7 45 d0 1f 00 00 00 \tmovl   $0x1f,-0x30(%rbp)\n    85a5:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n    85a8:\t48 63 d0             \tmovslq %eax,%rdx\n    85ab:\t48 8b 4d b0          \tmov    -0x50(%rbp),%rcx\n    85af:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n    85b6:\t48 89 ce             \tmov    %rcx,%rsi\n    85b9:\t48 89 c7             \tmov    %rax,%rdi\n    85bc:\te8 00 00 00 00       \tcallq  85c1 <pretty_print+0x46f>\n    85c1:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n    85c4:\t48 98                \tcltq   \n    85c6:\tc6 84 05 60 ff ff ff \tmovb   $0x0,-0xa0(%rbp,%rax,1)\n    85cd:\t00 \n    85ce:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    85d2:\t48 8b 95 40 ff ff ff \tmov    -0xc0(%rbp),%rdx\n    85d9:\t8b b5 4c ff ff ff    \tmov    -0xb4(%rbp),%esi\n    85df:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    85e6:\t48 89 c7             \tmov    %rax,%rdi\n    85e9:\te8 17 dd ff ff       \tcallq  6305 <eval_num_arg>\n    85ee:\t48 89 45 a8          \tmov    %rax,-0x58(%rbp)\n    85f2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    85f6:\t48 8b 00             \tmov    (%rax),%rax\n    85f9:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    85fd:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n    8601:\t74 70                \tje     8673 <pretty_print+0x521>\n    8603:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    8607:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    860b:\t48 89 d6             \tmov    %rdx,%rsi\n    860e:\t48 89 c7             \tmov    %rax,%rdi\n    8611:\te8 64 83 ff ff       \tcallq  97a <find_func>\n    8616:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n    861a:\t48 83 7d a0 00       \tcmpq   $0x0,-0x60(%rbp)\n    861f:\t74 52                \tje     8673 <pretty_print+0x521>\n    8621:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    8625:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    8629:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    8630:\t48 89 d6             \tmov    %rdx,%rsi\n    8633:\t48 89 c7             \tmov    %rax,%rdi\n    8636:\te8 00 00 00 00       \tcallq  863b <pretty_print+0x4e9>\n    863b:\t83 7d dc 46          \tcmpl   $0x46,-0x24(%rbp)\n    863f:\t0f 85 dc 03 00 00    \tjne    8a21 <pretty_print+0x8cf>\n    8645:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    8649:\t48 8b 00             \tmov    (%rax),%rax\n    864c:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    8650:\t48 29 c2             \tsub    %rax,%rdx\n    8653:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    865a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8661 <pretty_print+0x50f>\n    8661:\t48 89 c7             \tmov    %rax,%rdi\n    8664:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8669:\te8 00 00 00 00       \tcallq  866e <pretty_print+0x51c>\n    866e:\te9 ae 03 00 00       \tjmpq   8a21 <pretty_print+0x8cf>\n    8673:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n    8676:\t83 c0 02             \tadd    $0x2,%eax\n    8679:\t83 f8 04             \tcmp    $0x4,%eax\n    867c:\t0f 87 d0 01 00 00    \tja     8852 <pretty_print+0x700>\n    8682:\t89 c0                \tmov    %eax,%eax\n    8684:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    868b:\t00 \n    868c:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 8693 <pretty_print+0x541>\n    8693:\t8b 04 02             \tmov    (%rdx,%rax,1),%eax\n    8696:\t48 98                \tcltq   \n    8698:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 869f <pretty_print+0x54d>\n    869f:\t48 01 d0             \tadd    %rdx,%rax\n    86a2:\tff e0                \tjmpq   *%rax\n    86a4:\t83 7d d8 00          \tcmpl   $0x0,-0x28(%rbp)\n    86a8:\t74 2a                \tje     86d4 <pretty_print+0x582>\n    86aa:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    86ae:\t0f be c8             \tmovsbl %al,%ecx\n    86b1:\t8b 55 d4             \tmov    -0x2c(%rbp),%edx\n    86b4:\t48 8d b5 60 ff ff ff \tlea    -0xa0(%rbp),%rsi\n    86bb:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    86c2:\t48 89 c7             \tmov    %rax,%rdi\n    86c5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    86ca:\te8 00 00 00 00       \tcallq  86cf <pretty_print+0x57d>\n    86cf:\te9 be 01 00 00       \tjmpq   8892 <pretty_print+0x740>\n    86d4:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    86d8:\t0f be d0             \tmovsbl %al,%edx\n    86db:\t48 8d 8d 60 ff ff ff \tlea    -0xa0(%rbp),%rcx\n    86e2:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    86e9:\t48 89 ce             \tmov    %rcx,%rsi\n    86ec:\t48 89 c7             \tmov    %rax,%rdi\n    86ef:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    86f4:\te8 00 00 00 00       \tcallq  86f9 <pretty_print+0x5a7>\n    86f9:\te9 94 01 00 00       \tjmpq   8892 <pretty_print+0x740>\n    86fe:\t83 7d d8 00          \tcmpl   $0x0,-0x28(%rbp)\n    8702:\t74 2a                \tje     872e <pretty_print+0x5dc>\n    8704:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    8708:\t0f bf c8             \tmovswl %ax,%ecx\n    870b:\t8b 55 d4             \tmov    -0x2c(%rbp),%edx\n    870e:\t48 8d b5 60 ff ff ff \tlea    -0xa0(%rbp),%rsi\n    8715:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    871c:\t48 89 c7             \tmov    %rax,%rdi\n    871f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8724:\te8 00 00 00 00       \tcallq  8729 <pretty_print+0x5d7>\n    8729:\te9 64 01 00 00       \tjmpq   8892 <pretty_print+0x740>\n    872e:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    8732:\t0f bf d0             \tmovswl %ax,%edx\n    8735:\t48 8d 8d 60 ff ff ff \tlea    -0xa0(%rbp),%rcx\n    873c:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    8743:\t48 89 ce             \tmov    %rcx,%rsi\n    8746:\t48 89 c7             \tmov    %rax,%rdi\n    8749:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    874e:\te8 00 00 00 00       \tcallq  8753 <pretty_print+0x601>\n    8753:\te9 3a 01 00 00       \tjmpq   8892 <pretty_print+0x740>\n    8758:\t83 7d d8 00          \tcmpl   $0x0,-0x28(%rbp)\n    875c:\t74 29                \tje     8787 <pretty_print+0x635>\n    875e:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    8762:\t89 c1                \tmov    %eax,%ecx\n    8764:\t8b 55 d4             \tmov    -0x2c(%rbp),%edx\n    8767:\t48 8d b5 60 ff ff ff \tlea    -0xa0(%rbp),%rsi\n    876e:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    8775:\t48 89 c7             \tmov    %rax,%rdi\n    8778:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    877d:\te8 00 00 00 00       \tcallq  8782 <pretty_print+0x630>\n    8782:\te9 0b 01 00 00       \tjmpq   8892 <pretty_print+0x740>\n    8787:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    878b:\t89 c2                \tmov    %eax,%edx\n    878d:\t48 8d 8d 60 ff ff ff \tlea    -0xa0(%rbp),%rcx\n    8794:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    879b:\t48 89 ce             \tmov    %rcx,%rsi\n    879e:\t48 89 c7             \tmov    %rax,%rdi\n    87a1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    87a6:\te8 00 00 00 00       \tcallq  87ab <pretty_print+0x659>\n    87ab:\te9 e2 00 00 00       \tjmpq   8892 <pretty_print+0x740>\n    87b0:\t83 7d d8 00          \tcmpl   $0x0,-0x28(%rbp)\n    87b4:\t74 27                \tje     87dd <pretty_print+0x68b>\n    87b6:\t48 8b 4d a8          \tmov    -0x58(%rbp),%rcx\n    87ba:\t8b 55 d4             \tmov    -0x2c(%rbp),%edx\n    87bd:\t48 8d b5 60 ff ff ff \tlea    -0xa0(%rbp),%rsi\n    87c4:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    87cb:\t48 89 c7             \tmov    %rax,%rdi\n    87ce:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    87d3:\te8 00 00 00 00       \tcallq  87d8 <pretty_print+0x686>\n    87d8:\te9 b5 00 00 00       \tjmpq   8892 <pretty_print+0x740>\n    87dd:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    87e1:\t48 8d 8d 60 ff ff ff \tlea    -0xa0(%rbp),%rcx\n    87e8:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    87ef:\t48 89 ce             \tmov    %rcx,%rsi\n    87f2:\t48 89 c7             \tmov    %rax,%rdi\n    87f5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    87fa:\te8 00 00 00 00       \tcallq  87ff <pretty_print+0x6ad>\n    87ff:\te9 8e 00 00 00       \tjmpq   8892 <pretty_print+0x740>\n    8804:\t83 7d d8 00          \tcmpl   $0x0,-0x28(%rbp)\n    8808:\t74 24                \tje     882e <pretty_print+0x6dc>\n    880a:\t48 8b 4d a8          \tmov    -0x58(%rbp),%rcx\n    880e:\t8b 55 d4             \tmov    -0x2c(%rbp),%edx\n    8811:\t48 8d b5 60 ff ff ff \tlea    -0xa0(%rbp),%rsi\n    8818:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    881f:\t48 89 c7             \tmov    %rax,%rdi\n    8822:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8827:\te8 00 00 00 00       \tcallq  882c <pretty_print+0x6da>\n    882c:\teb 64                \tjmp    8892 <pretty_print+0x740>\n    882e:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    8832:\t48 8d 8d 60 ff ff ff \tlea    -0xa0(%rbp),%rcx\n    8839:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    8840:\t48 89 ce             \tmov    %rcx,%rsi\n    8843:\t48 89 c7             \tmov    %rax,%rdi\n    8846:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    884b:\te8 00 00 00 00       \tcallq  8850 <pretty_print+0x6fe>\n    8850:\teb 40                \tjmp    8892 <pretty_print+0x740>\n    8852:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 8858 <pretty_print+0x706>\n    8858:\t85 c0                \ttest   %eax,%eax\n    885a:\t74 16                \tje     8872 <pretty_print+0x720>\n    885c:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n    885f:\t89 c6                \tmov    %eax,%esi\n    8861:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8868 <pretty_print+0x716>\n    8868:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    886d:\te8 00 00 00 00       \tcallq  8872 <pretty_print+0x720>\n    8872:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    8879:\t8b 40 14             \tmov    0x14(%rax),%eax\n    887c:\t0d 00 00 00 80       \tor     $0x80000000,%eax\n    8881:\t89 c2                \tmov    %eax,%edx\n    8883:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    888a:\t89 50 14             \tmov    %edx,0x14(%rax)\n    888d:\te9 90 01 00 00       \tjmpq   8a22 <pretty_print+0x8d0>\n    8892:\te9 8b 01 00 00       \tjmpq   8a22 <pretty_print+0x8d0>\n    8897:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    889c:\t75 3b                \tjne    88d9 <pretty_print+0x787>\n    889e:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 88a4 <pretty_print+0x752>\n    88a4:\t85 c0                \ttest   %eax,%eax\n    88a6:\t74 11                \tje     88b9 <pretty_print+0x767>\n    88a8:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 88af <pretty_print+0x75d>\n    88af:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    88b4:\te8 00 00 00 00       \tcallq  88b9 <pretty_print+0x767>\n    88b9:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    88c0:\t8b 40 14             \tmov    0x14(%rax),%eax\n    88c3:\t0d 00 00 00 80       \tor     $0x80000000,%eax\n    88c8:\t89 c2                \tmov    %eax,%edx\n    88ca:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    88d1:\t89 50 14             \tmov    %edx,0x14(%rax)\n    88d4:\te9 6c 01 00 00       \tjmpq   8a45 <pretty_print+0x8f3>\n    88d9:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    88dd:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    88e1:\t48 29 c2             \tsub    %rax,%rdx\n    88e4:\t48 89 d0             \tmov    %rdx,%rax\n    88e7:\t83 c0 01             \tadd    $0x1,%eax\n    88ea:\t89 45 d0             \tmov    %eax,-0x30(%rbp)\n    88ed:\t83 7d d0 1f          \tcmpl   $0x1f,-0x30(%rbp)\n    88f1:\t7e 3d                \tjle    8930 <pretty_print+0x7de>\n    88f3:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 88f9 <pretty_print+0x7a7>\n    88f9:\t85 c0                \ttest   %eax,%eax\n    88fb:\t74 11                \tje     890e <pretty_print+0x7bc>\n    88fd:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8904 <pretty_print+0x7b2>\n    8904:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8909:\te8 00 00 00 00       \tcallq  890e <pretty_print+0x7bc>\n    890e:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    8915:\t8b 40 14             \tmov    0x14(%rax),%eax\n    8918:\t0d 00 00 00 80       \tor     $0x80000000,%eax\n    891d:\t89 c2                \tmov    %eax,%edx\n    891f:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    8926:\t89 50 14             \tmov    %edx,0x14(%rax)\n    8929:\tc7 45 d0 1f 00 00 00 \tmovl   $0x1f,-0x30(%rbp)\n    8930:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n    8933:\t48 63 d0             \tmovslq %eax,%rdx\n    8936:\t48 8b 4d b0          \tmov    -0x50(%rbp),%rcx\n    893a:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n    8941:\t48 89 ce             \tmov    %rcx,%rsi\n    8944:\t48 89 c7             \tmov    %rax,%rdi\n    8947:\te8 00 00 00 00       \tcallq  894c <pretty_print+0x7fa>\n    894c:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n    894f:\t48 98                \tcltq   \n    8951:\tc6 84 05 60 ff ff ff \tmovb   $0x0,-0xa0(%rbp,%rax,1)\n    8958:\t00 \n    8959:\t83 7d d8 00          \tcmpl   $0x0,-0x28(%rbp)\n    895d:\t75 07                \tjne    8966 <pretty_print+0x814>\n    895f:\tc7 45 d4 ff ff ff ff \tmovl   $0xffffffff,-0x2c(%rbp)\n    8966:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n    896a:\t48 89 c7             \tmov    %rax,%rdi\n    896d:\te8 00 00 00 00       \tcallq  8972 <pretty_print+0x820>\n    8972:\t44 8b 45 d4          \tmov    -0x2c(%rbp),%r8d\n    8976:\t48 8d bd 60 ff ff ff \tlea    -0xa0(%rbp),%rdi\n    897d:\t48 8b 8d 40 ff ff ff \tmov    -0xc0(%rbp),%rcx\n    8984:\t8b 95 4c ff ff ff    \tmov    -0xb4(%rbp),%edx\n    898a:\t48 8b b5 50 ff ff ff \tmov    -0xb0(%rbp),%rsi\n    8991:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n    8995:\t48 83 ec 08          \tsub    $0x8,%rsp\n    8999:\tff 75 f8             \tpushq  -0x8(%rbp)\n    899c:\t45 89 c1             \tmov    %r8d,%r9d\n    899f:\t49 89 f8             \tmov    %rdi,%r8\n    89a2:\t48 89 c7             \tmov    %rax,%rdi\n    89a5:\te8 e6 e1 ff ff       \tcallq  6b90 <print_str_arg>\n    89aa:\t48 83 c4 10          \tadd    $0x10,%rsp\n    89ae:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n    89b2:\t48 89 c7             \tmov    %rax,%rdi\n    89b5:\te8 00 00 00 00       \tcallq  89ba <pretty_print+0x868>\n    89ba:\t48 8b 55 80          \tmov    -0x80(%rbp),%rdx\n    89be:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    89c5:\t48 89 d6             \tmov    %rdx,%rsi\n    89c8:\t48 89 c7             \tmov    %rax,%rdi\n    89cb:\te8 00 00 00 00       \tcallq  89d0 <pretty_print+0x87e>\n    89d0:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    89d4:\t48 8b 00             \tmov    (%rax),%rax\n    89d7:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    89db:\teb 45                \tjmp    8a22 <pretty_print+0x8d0>\n    89dd:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    89e1:\t0f b6 00             \tmovzbl (%rax),%eax\n    89e4:\t0f be d0             \tmovsbl %al,%edx\n    89e7:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    89ee:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 89f5 <pretty_print+0x8a3>\n    89f5:\t48 89 c7             \tmov    %rax,%rdi\n    89f8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    89fd:\te8 00 00 00 00       \tcallq  8a02 <pretty_print+0x8b0>\n    8a02:\teb 1e                \tjmp    8a22 <pretty_print+0x8d0>\n    8a04:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    8a08:\t0f b6 00             \tmovzbl (%rax),%eax\n    8a0b:\t0f b6 d0             \tmovzbl %al,%edx\n    8a0e:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    8a15:\t89 d6                \tmov    %edx,%esi\n    8a17:\t48 89 c7             \tmov    %rax,%rdi\n    8a1a:\te8 00 00 00 00       \tcallq  8a1f <pretty_print+0x8cd>\n    8a1f:\teb 01                \tjmp    8a22 <pretty_print+0x8d0>\n    8a21:\t90                   \tnop\n    8a22:\t48 83 45 e8 01       \taddq   $0x1,-0x18(%rbp)\n    8a27:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    8a2b:\t0f b6 00             \tmovzbl (%rax),%eax\n    8a2e:\t84 c0                \ttest   %al,%al\n    8a30:\t0f 85 47 f8 ff ff    \tjne    827d <pretty_print+0x12b>\n    8a36:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    8a3d:\t8b 40 14             \tmov    0x14(%rax),%eax\n    8a40:\t85 c0                \ttest   %eax,%eax\n    8a42:\t79 1c                \tjns    8a60 <pretty_print+0x90e>\n    8a44:\t90                   \tnop\n    8a45:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    8a4c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8a53 <pretty_print+0x901>\n    8a53:\t48 89 c7             \tmov    %rax,%rdi\n    8a56:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8a5b:\te8 00 00 00 00       \tcallq  8a60 <pretty_print+0x90e>\n    8a60:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    8a65:\t74 18                \tje     8a7f <pretty_print+0x92d>\n    8a67:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    8a6b:\t48 89 c7             \tmov    %rax,%rdi\n    8a6e:\te8 43 eb ff ff       \tcallq  75b6 <free_args>\n    8a73:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    8a77:\t48 89 c7             \tmov    %rax,%rdi\n    8a7a:\te8 00 00 00 00       \tcallq  8a7f <pretty_print+0x92d>\n    8a7f:\tc9                   \tleaveq \n    8a80:\tc3                   \tretq   ", "code_s": "void __fastcall pretty_print(__int64 a1, __int64 a2, unsigned int a3,\n                             __int64 a4) {\n  int v4;\n  char dest[Number];\n  __int64 v8[Number];\n  _QWORD *v9;\n  __int64 v10;\n  void *src;\n  __int64 v12;\n  __int64 v13;\n  unsigned int v14;\n  int v15;\n  unsigned int v16;\n  int v17;\n  int v18;\n  void *ptr;\n  _BYTE *v20;\n  __int64 *v21;\n  __int64 *v22;\n  v13 = *(_QWORD *)a4;\n  v12 = a4 + Number;\n  v22 = *(__int64 **)(a4 + Number);\n  v21 = Number L;\n  v20 = *(_BYTE **)(a4 + Number);\n  ptr = Number L;\n  if (*(int *)(a4 + Number) < Number) {\n    trace_seq_printf(a1, String);\n    print_event_fields(a1, a2, a3, (__int64 *)a4);\n    return;\n  }\n  if ((*(_DWORD *)(a4 + Number) & Number) != Number) {\n    ptr = get_bprint_format(a2, a3, (__int64 *)a4);\n    v21 = make_bprint_args((__int64)ptr, a2, a3, a4);\n    v22 = v21;\n    v20 = ptr;\n  }\nLABEL_82:\n  if (!*v20) {\n    if (*(int *)(a4 + Number) < Number)\n      goto LABEL_84;\n    goto LABEL_85;\n  }\n  v14 = Number;\n  if (*v20 == Number) {\n    v4 = (char)*++v20;\n    if (v4 == Number) {\n      trace_seq_putc(a1, Number L);\n      goto LABEL_81;\n    }\n    if (v4 <= Number) {\n      if (v4 == Number) {\n        trace_seq_putc(a1, Number L);\n        goto LABEL_81;\n      }\n      if (v4 <= Number) {\n        if (v4 == Number) {\n          trace_seq_putc(a1, Number L);\n          goto LABEL_81;\n        }\n        if (v4 == Number) {\n          trace_seq_putc(a1, Number L);\n          goto LABEL_81;\n        }\n      }\n    }\n  LABEL_80:\n    trace_seq_putc(a1, (unsigned __int8)*v20);\n    goto LABEL_81;\n  }\n  if (*v20 != Number)\n    goto LABEL_80;\n  src = v20;\n  v18 = Number;\n  v17 = Number;\n  while (Number) {\n    switch (*++v20) {\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n      continue;\n    case String:\n      trace_seq_putc(a1, Number L);\n      goto LABEL_81;\n    case String:\n      if (!v22) {\n        if (show_warning)\n          warning(String);\n        *(_DWORD *)(a4 + Number) |= Number;\n        goto LABEL_84;\n      }\n      v16 = eval_num_arg(a2, a3, (__int64 *)a4, (__int64)v22);\n      v17 = Number;\n      v22 = (__int64 *)*v22;\n      continue;\n    case String:\n      v14 = Number;\n      continue;\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n      goto LABEL_38;\n    case String:\n      --v14;\n      continue;\n    case String:\n      ++v14;\n      continue;\n    case String:\n      if (*(_DWORD *)(v13 + Number) == Number)\n        v14 = Number;\n      else\n        v14 = Number;\n      if (v20[Number] == Number || v20[Number] == Number) {\n        v18 = (char)*++v20;\n      } else if (v20[Number] == Number || v20[Number] == Number) {\n        print_mac_arg(a1, (char)*++v20, a2, a3, (__int64 *)a4, (__int64)v22);\n        v22 = (__int64 *)*v22;\n        goto LABEL_81;\n      }\n    LABEL_38:\n      if (!v22) {\n        if (show_warning)\n          warning(String);\n        *(_DWORD *)(a4 + Number) |= Number;\n        goto LABEL_84;\n      }\n      v15 = (_DWORD)v20 - (_DWORD)src + Number;\n      if (v15 > Number) {\n        if (show_warning)\n          warning(String);\n        *(_DWORD *)(a4 + Number) |= Number;\n        v15 = Number;\n      }\n      memcpy(dest, src, v15);\n      dest[v15] = Number;\n      v10 = eval_num_arg(a2, a3, (__int64 *)a4, (__int64)v22);\n      v22 = (__int64 *)*v22;\n      if (v18 && (v9 = find_func(v13, v10)) != Number L) {\n        trace_seq_puts(a1, v9[Number]);\n        if (v18 == Number)\n          trace_seq_printf(a1, String, v10 - *v9);\n      } else {\n        switch (v14) {\n        case Number:\n          if (v17)\n            trace_seq_printf(a1, dest, v16, (unsigned int)(char)v10);\n          else\n            trace_seq_printf(a1, dest, (unsigned int)(char)v10);\n          break;\n        case Number:\n          if (v17)\n            trace_seq_printf(a1, dest, v16, (unsigned int)(__int16)v10);\n          else\n            trace_seq_printf(a1, dest, (unsigned int)(__int16)v10);\n          break;\n        case Number:\n          if (v17)\n            trace_seq_printf(a1, dest, v16, (unsigned int)v10);\n          else\n            trace_seq_printf(a1, dest, (unsigned int)v10);\n          break;\n        case Number:\n          if (!v17)\n            goto LABEL_64;\n          goto LABEL_61;\n        case Number:\n          if (v17)\n          LABEL_61:\n            trace_seq_printf(a1, dest, v16, v10);\n          else\n          LABEL_64:\n            trace_seq_printf(a1, dest, v10);\n          break;\n        default:\n          if (show_warning)\n            warning(String, v14);\n          *(_DWORD *)(a4 + Number) |= Number;\n          break;\n        }\n      }\n      goto LABEL_81;\n    case String:\n      if (v22) {\n        v15 = (_DWORD)v20 - (_DWORD)src + Number;\n        if (v15 > Number) {\n          if (show_warning)\n            warning(String);\n          *(_DWORD *)(a4 + Number) |= Number;\n          v15 = Number;\n        }\n        memcpy(dest, src, v15);\n        dest[v15] = Number;\n        if (!v17)\n          v16 = Number;\n        trace_seq_init(v8);\n        print_str_arg((__int64)v8, a2, a3, (__int64 *)a4, (__int64)dest, v16,\n                      (__int64)v22);\n        trace_seq_terminate(v8);\n        trace_seq_puts(a1, v8[Number]);\n        v22 = (__int64 *)*v22;\n      LABEL_81:\n        ++v20;\n        goto LABEL_82;\n      }\n      if (show_warning)\n        warning(String);\n      *(_DWORD *)(a4 + Number) |= Number;\n    LABEL_84:\n      trace_seq_printf(a1, String);\n    LABEL_85:\n      if (v21) {\n        free_args(v21);\n        free(ptr);\n      }\n      return;\n    default:\n      trace_seq_printf(a1, String, (unsigned int)(char)*v20);\n      goto LABEL_81;\n    }\n  }\n}", "code_t": "void __cdecl pretty_print(trace_seq *s, void *data, int size,\n                          event_format *event) {\n  int v4;\n  char format[Number];\n  trace_seq <span class=\"supfact\">p</span>;\n  func_map *func;\n  unsigned __int64 val;\n  const char *saveptr;\n  print_fmt *print_fmt;\n  pevent *pevent;\n  int ls;\n  int len;\n  int len_arg;\n  int len_as_arg;\n  int show_func;\n  char *bprint_fmt;\n  const char *ptr;\n  print_arg *args;\n  print_arg *arg;\n  pevent = event->pevent;\n  print_fmt = &event->print_fmt;\n  arg = event->print_fmt.args;\n  args = Number L;\n  ptr = event->print_fmt.format;\n  bprint_fmt = Number L;\n  if (event->flags < Number) {\n    trace_seq_printf(s, String);\n    print_event_fields(s, data, size, event);\n    return;\n  }\n  if ((event->flags & Number) != Number) {\n    bprint_fmt = get_bprint_format(data, size, event);\n    args = make_bprint_args(bprint_fmt, data, size, event);\n    arg = args;\n    ptr = bprint_fmt;\n  }\nLABEL_82:\n  if (!*ptr) {\n    if (event->flags < Number)\n      goto out_failed;\n    goto LABEL_85;\n  }\n  ls = Number;\n  if (*ptr == Number) {\n    v4 = *++ptr;\n    if (v4 == Number) {\n      trace_seq_putc(s, Number L);\n      goto LABEL_81;\n    }\n    if (v4 <= Number) {\n      if (v4 == Number) {\n        trace_seq_putc(s, Number L);\n        goto LABEL_81;\n      }\n      if (v4 <= Number) {\n        if (v4 == Number) {\n          trace_seq_putc(s, Number L);\n          goto LABEL_81;\n        }\n        if (v4 == Number) {\n          trace_seq_putc(s, Number L);\n          goto LABEL_81;\n        }\n      }\n    }\n  LABEL_80:\n    trace_seq_putc(s, *(unsigned __int8 *)ptr);\n    goto LABEL_81;\n  }\n  if (*ptr != Number)\n    goto LABEL_80;\n  saveptr = ptr;\n  show_func = Number;\n  len_as_arg = Number;\n  while (Number) {\n    switch (*++ptr) {\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n      continue;\n    case String:\n      trace_seq_putc(s, Number L);\n      goto LABEL_81;\n    case String:\n      if (!arg) {\n        if (show_warning)\n          warning(String);\n        event->flags |= Number;\n        goto out_failed;\n      }\n      len_arg = eval_num_arg(data, size, event, arg);\n      len_as_arg = Number;\n      arg = arg->next;\n      continue;\n    case String:\n      ls = Number;\n      continue;\n    case String:\n    case String:\n    case String:\n    case String:\n    case String:\n      goto LABEL_38;\n    case String:\n      --ls;\n      continue;\n    case String:\n      ++ls;\n      continue;\n    case String:\n      if (pevent->long_size == Number)\n        ls = Number;\n      else\n        ls = Number;\n      if (ptr[Number] == Number || ptr[Number] == Number) {\n        show_func = *++ptr;\n      } else if (ptr[Number] == Number || ptr[Number] == Number) {\n        print_mac_arg(s, *++ptr, data, size, event, arg);\n        arg = arg->next;\n        goto LABEL_81;\n      }\n    LABEL_38:\n      if (!arg) {\n        if (show_warning)\n          warning(String);\n        event->flags |= Number;\n        goto out_failed;\n      }\n      len = (_DWORD)ptr - (_DWORD)saveptr + Number;\n      if (len > Number) {\n        if (show_warning)\n          warning(String);\n        event->flags |= Number;\n        len = Number;\n      }\n      memcpy(format, saveptr, len);\n      format[len] = Number;\n      val = eval_num_arg(data, size, event, arg);\n      arg = arg->next;\n      if (show_func && (func = find_func(pevent, val)) != Number L) {\n        trace_seq_puts(s, func->func);\n        if (show_func == Number)\n          trace_seq_printf(s, String, val - func->addr);\n      } else {\n        switch (ls) {\n        case Number:\n          if (len_as_arg)\n            trace_seq_printf(s, format, (unsigned int)len_arg,\n                             (unsigned int)(char)val);\n          else\n            trace_seq_printf(s, format, (unsigned int)(char)val);\n          break;\n        case Number:\n          if (len_as_arg)\n            trace_seq_printf(s, format, (unsigned int)len_arg,\n                             (unsigned int)(__int16)val);\n          else\n            trace_seq_printf(s, format, (unsigned int)(__int16)val);\n          break;\n        case Number:\n          if (len_as_arg)\n            trace_seq_printf(s, format, (unsigned int)len_arg,\n                             (unsigned int)val);\n          else\n            trace_seq_printf(s, format, (unsigned int)val);\n          break;\n        case Number:\n          if (!len_as_arg)\n            goto LABEL_64;\n          goto LABEL_61;\n        case Number:\n          if (len_as_arg)\n          LABEL_61:\n            trace_seq_printf(s, format, (unsigned int)len_arg, val);\n          else\n          LABEL_64:\n            trace_seq_printf(s, format, val);\n          break;\n        default:\n          if (show_warning)\n            warning(String, (unsigned int)ls);\n          event->flags |= Number;\n          break;\n        }\n      }\n      goto LABEL_81;\n    case String:\n      if (arg) {\n        len = (_DWORD)ptr - (_DWORD)saveptr + Number;\n        if (len > Number) {\n          if (show_warning)\n            warning(String);\n          event->flags |= Number;\n          len = Number;\n        }\n        memcpy(format, saveptr, len);\n        format[len] = Number;\n        if (!len_as_arg)\n          len_arg = Number;\n        trace_seq_init(&<span class=\"supfact\">p</span>);\n        print_str_arg(&<span class=\"supfact\">p</span>, data, size, event, format, len_arg,\n                      arg);\n        trace_seq_terminate(&<span class=\"supfact\">p</span>);\n        trace_seq_puts(s, <span class=\"supfact\">p</span>.buffer);\n        arg = arg->next;\n      LABEL_81:\n        ++ptr;\n        goto LABEL_82;\n      }\n      if (show_warning)\n        warning(String);\n      event->flags |= Number;\n    out_failed:\n      trace_seq_printf(s, String);\n    LABEL_85:\n      if (args) {\n        free_args(args);\n        free(bprint_fmt);\n      }\n      return;\n    default:\n      trace_seq_printf(s, String, (unsigned int)*ptr);\n      goto LABEL_81;\n    }\n  }\n}", "var": [{"name": "v8", "type": "struct trace_seq { char * buffer; unsigned int buffer_size; unsigned int len; unsigned int readpos; trace_seq_fail state; }", "pred_name": "p", "ref_name": "p", "ref_type": "struct trace_seq { char * buffer; unsigned int buffer_size; unsigned int len; unsigned int readpos; trace_seq_fail state; }"}], "body_in_train": false}, {"repo_owner": "Descendant", "repo_name": "external_selinux", "path": "Descendant/external_selinux/17d16ebc340b4b2284aa30e43c3d6175ff9b5db13b6f4f8c6a90d4b6e6eb34e2", "path_in_repo": "Descendant/external_selinux/secilc/secilc.o", "objdump": "000000000000013a <main>:\n 13a:\t55                   \tpush   %rbp\n 13b:\t48 89 e5             \tmov    %rsp,%rbp\n 13e:\t48 81 ec 60 01 00 00 \tsub    $0x160,%rsp\n 145:\t89 bd ac fe ff ff    \tmov    %edi,-0x154(%rbp)\n 14b:\t48 89 b5 a0 fe ff ff \tmov    %rsi,-0x160(%rbp)\n 152:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n 159:\t48 c7 45 80 00 00 00 \tmovq   $0x0,-0x80(%rbp)\n 160:\t00 \n 161:\t48 c7 85 78 ff ff ff \tmovq   $0x0,-0x88(%rbp)\n 168:\t00 00 00 00 \n 16c:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n 173:\t00 \n 174:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n 17b:\t00 \n 17c:\t48 c7 45 d8 00 00 00 \tmovq   $0x0,-0x28(%rbp)\n 183:\t00 \n 184:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n 18b:\t00 \n 18c:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n 193:\t00 \n 194:\t48 c7 85 d8 fe ff ff \tmovq   $0x0,-0x128(%rbp)\n 19b:\t00 00 00 00 \n 19f:\tc7 45 c4 00 00 00 00 \tmovl   $0x0,-0x3c(%rbp)\n 1a6:\tc7 45 c0 ff ff ff ff \tmovl   $0xffffffff,-0x40(%rbp)\n 1ad:\tc7 45 bc 00 00 00 00 \tmovl   $0x0,-0x44(%rbp)\n 1b4:\tc7 45 b8 01 00 00 00 \tmovl   $0x1,-0x48(%rbp)\n 1bb:\tc7 45 b4 00 00 00 00 \tmovl   $0x0,-0x4c(%rbp)\n 1c2:\tc7 45 b0 00 00 00 00 \tmovl   $0x0,-0x50(%rbp)\n 1c9:\tc7 45 ac ff ff ff ff \tmovl   $0xffffffff,-0x54(%rbp)\n 1d0:\tc7 45 a8 1f 00 00 00 \tmovl   $0x1f,-0x58(%rbp)\n 1d7:\tc7 45 a4 00 00 00 00 \tmovl   $0x0,-0x5c(%rbp)\n 1de:\tc7 45 a0 ff ff ff ff \tmovl   $0xffffffff,-0x60(%rbp)\n 1e5:\tc7 85 d4 fe ff ff 00 \tmovl   $0x0,-0x12c(%rbp)\n 1ec:\t00 00 00 \n 1ef:\t48 c7 85 c8 fe ff ff \tmovq   $0x0,-0x138(%rbp)\n 1f6:\t00 00 00 00 \n 1fa:\tc7 45 9c 02 00 00 00 \tmovl   $0x2,-0x64(%rbp)\n 201:\t48 8d 95 d4 fe ff ff \tlea    -0x12c(%rbp),%rdx\n 208:\t48 8b b5 a0 fe ff ff \tmov    -0x160(%rbp),%rsi\n 20f:\t8b 85 ac fe ff ff    \tmov    -0x154(%rbp),%eax\n 215:\t49 89 d0             \tmov    %rdx,%r8\n 218:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 21d:\tba 00 00 00 00       \tmov    $0x0,%edx\n 222:\t89 c7                \tmov    %eax,%edi\n 224:\te8 00 00 00 00       \tcallq  229 <main+0xef>\n 229:\t89 45 94             \tmov    %eax,-0x6c(%rbp)\n 22c:\t83 7d 94 ff          \tcmpl   $0xffffffff,-0x6c(%rbp)\n 230:\t0f 84 10 04 00 00    \tje     646 <main+0x50c>\n 236:\t8b 45 94             \tmov    -0x6c(%rbp),%eax\n 239:\t83 e8 3f             \tsub    $0x3f,%eax\n 23c:\t83 f8 37             \tcmp    $0x37,%eax\n 23f:\t0f 87 bd 03 00 00    \tja     602 <main+0x4c8>\n 245:\t89 c0                \tmov    %eax,%eax\n 247:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n 24e:\t00 \n 24f:\tff e0                \tjmpq   *%rax\n 251:\t83 45 9c 01          \taddl   $0x1,-0x64(%rbp)\n 255:\te9 e7 03 00 00       \tjmpq   641 <main+0x507>\n 25a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 261 <main+0x127>\n 261:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 266:\t48 89 c7             \tmov    %rax,%rdi\n 269:\te8 00 00 00 00       \tcallq  26e <main+0x134>\n 26e:\t85 c0                \ttest   %eax,%eax\n 270:\t75 0c                \tjne    27e <main+0x144>\n 272:\tc7 45 c4 00 00 00 00 \tmovl   $0x0,-0x3c(%rbp)\n 279:\te9 c3 03 00 00       \tjmpq   641 <main+0x507>\n 27e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 285 <main+0x14b>\n 285:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 28a:\t48 89 c7             \tmov    %rax,%rdi\n 28d:\te8 00 00 00 00       \tcallq  292 <main+0x158>\n 292:\t85 c0                \ttest   %eax,%eax\n 294:\t75 0c                \tjne    2a2 <main+0x168>\n 296:\tc7 45 c4 01 00 00 00 \tmovl   $0x1,-0x3c(%rbp)\n 29d:\te9 9f 03 00 00       \tjmpq   641 <main+0x507>\n 2a2:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 2a9 <main+0x16f>\n 2a9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2b0 <main+0x176>\n 2b0:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 2b5:\t48 89 c7             \tmov    %rax,%rdi\n 2b8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 2bd:\te8 00 00 00 00       \tcallq  2c2 <main+0x188>\n 2c2:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 2c9:\t48 8b 00             \tmov    (%rax),%rax\n 2cc:\t48 89 c7             \tmov    %rax,%rdi\n 2cf:\te8 2c fd ff ff       \tcallq  0 <usage>\n 2d4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2db <main+0x1a1>\n 2db:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 2e0:\t48 89 c7             \tmov    %rax,%rdi\n 2e3:\te8 00 00 00 00       \tcallq  2e8 <main+0x1ae>\n 2e8:\t85 c0                \ttest   %eax,%eax\n 2ea:\t74 18                \tje     304 <main+0x1ca>\n 2ec:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2f3 <main+0x1b9>\n 2f3:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 2f8:\t48 89 c7             \tmov    %rax,%rdi\n 2fb:\te8 00 00 00 00       \tcallq  300 <main+0x1c6>\n 300:\t85 c0                \ttest   %eax,%eax\n 302:\t75 09                \tjne    30d <main+0x1d3>\n 304:\tc7 45 c0 01 00 00 00 \tmovl   $0x1,-0x40(%rbp)\n 30b:\teb 4b                \tjmp    358 <main+0x21e>\n 30d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 314 <main+0x1da>\n 314:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 319:\t48 89 c7             \tmov    %rax,%rdi\n 31c:\te8 00 00 00 00       \tcallq  321 <main+0x1e7>\n 321:\t85 c0                \ttest   %eax,%eax\n 323:\t74 18                \tje     33d <main+0x203>\n 325:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 32c <main+0x1f2>\n 32c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 331:\t48 89 c7             \tmov    %rax,%rdi\n 334:\te8 00 00 00 00       \tcallq  339 <main+0x1ff>\n 339:\t85 c0                \ttest   %eax,%eax\n 33b:\t75 09                \tjne    346 <main+0x20c>\n 33d:\tc7 45 c0 00 00 00 00 \tmovl   $0x0,-0x40(%rbp)\n 344:\teb 12                \tjmp    358 <main+0x21e>\n 346:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 34d:\t48 8b 00             \tmov    (%rax),%rax\n 350:\t48 89 c7             \tmov    %rax,%rdi\n 353:\te8 a8 fc ff ff       \tcallq  0 <usage>\n 358:\te9 e4 02 00 00       \tjmpq   641 <main+0x507>\n 35d:\t48 c7 85 b8 fe ff ff \tmovq   $0x0,-0x148(%rbp)\n 364:\t00 00 00 00 \n 368:\te8 00 00 00 00       \tcallq  36d <main+0x233>\n 36d:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n 373:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 37a <main+0x240>\n 37a:\t48 8d 8d b8 fe ff ff \tlea    -0x148(%rbp),%rcx\n 381:\tba 0a 00 00 00       \tmov    $0xa,%edx\n 386:\t48 89 ce             \tmov    %rcx,%rsi\n 389:\t48 89 c7             \tmov    %rax,%rdi\n 38c:\te8 00 00 00 00       \tcallq  391 <main+0x257>\n 391:\t89 45 a8             \tmov    %eax,-0x58(%rbp)\n 394:\te8 00 00 00 00       \tcallq  399 <main+0x25f>\n 399:\t8b 00                \tmov    (%rax),%eax\n 39b:\t85 c0                \ttest   %eax,%eax\n 39d:\t75 21                \tjne    3c0 <main+0x286>\n 39f:\t48 8b 95 b8 fe ff ff \tmov    -0x148(%rbp),%rdx\n 3a6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3ad <main+0x273>\n 3ad:\t48 39 c2             \tcmp    %rax,%rdx\n 3b0:\t74 0e                \tje     3c0 <main+0x286>\n 3b2:\t48 8b 85 b8 fe ff ff \tmov    -0x148(%rbp),%rax\n 3b9:\t0f b6 00             \tmovzbl (%rax),%eax\n 3bc:\t84 c0                \ttest   %al,%al\n 3be:\t74 32                \tje     3f2 <main+0x2b8>\n 3c0:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 3c7 <main+0x28d>\n 3c7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3ce <main+0x294>\n 3ce:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 3d3:\t48 89 c7             \tmov    %rax,%rdi\n 3d6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 3db:\te8 00 00 00 00       \tcallq  3e0 <main+0x2a6>\n 3e0:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 3e7:\t48 8b 00             \tmov    (%rax),%rax\n 3ea:\t48 89 c7             \tmov    %rax,%rdi\n 3ed:\te8 0e fc ff ff       \tcallq  0 <usage>\n 3f2:\t83 7d a8 1f          \tcmpl   $0x1f,-0x58(%rbp)\n 3f6:\t7f 0a                \tjg     402 <main+0x2c8>\n 3f8:\t83 7d a8 0e          \tcmpl   $0xe,-0x58(%rbp)\n 3fc:\t0f 8f 38 02 00 00    \tjg     63a <main+0x500>\n 402:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 409 <main+0x2cf>\n 409:\tb9 1f 00 00 00       \tmov    $0x1f,%ecx\n 40e:\tba 0f 00 00 00       \tmov    $0xf,%edx\n 413:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 418:\t48 89 c7             \tmov    %rax,%rdi\n 41b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 420:\te8 00 00 00 00       \tcallq  425 <main+0x2eb>\n 425:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 42c:\t48 8b 00             \tmov    (%rax),%rax\n 42f:\t48 89 c7             \tmov    %rax,%rdi\n 432:\te8 c9 fb ff ff       \tcallq  0 <usage>\n 437:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 43e <main+0x304>\n 43e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 443:\t48 89 c7             \tmov    %rax,%rdi\n 446:\te8 00 00 00 00       \tcallq  44b <main+0x311>\n 44b:\t85 c0                \ttest   %eax,%eax\n 44d:\t75 0c                \tjne    45b <main+0x321>\n 44f:\tc7 45 ac 00 00 00 00 \tmovl   $0x0,-0x54(%rbp)\n 456:\te9 e6 01 00 00       \tjmpq   641 <main+0x507>\n 45b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 462 <main+0x328>\n 462:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 467:\t48 89 c7             \tmov    %rax,%rdi\n 46a:\te8 00 00 00 00       \tcallq  46f <main+0x335>\n 46f:\t85 c0                \ttest   %eax,%eax\n 471:\t75 0c                \tjne    47f <main+0x345>\n 473:\tc7 45 ac 04 00 00 00 \tmovl   $0x4,-0x54(%rbp)\n 47a:\te9 c2 01 00 00       \tjmpq   641 <main+0x507>\n 47f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 486 <main+0x34c>\n 486:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 48b:\t48 89 c7             \tmov    %rax,%rdi\n 48e:\te8 00 00 00 00       \tcallq  493 <main+0x359>\n 493:\t85 c0                \ttest   %eax,%eax\n 495:\t75 0c                \tjne    4a3 <main+0x369>\n 497:\tc7 45 ac 02 00 00 00 \tmovl   $0x2,-0x54(%rbp)\n 49e:\te9 9e 01 00 00       \tjmpq   641 <main+0x507>\n 4a3:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 4aa:\t48 8b 00             \tmov    (%rax),%rax\n 4ad:\t48 89 c7             \tmov    %rax,%rdi\n 4b0:\te8 4b fb ff ff       \tcallq  0 <usage>\n 4b5:\tc7 45 bc 01 00 00 00 \tmovl   $0x1,-0x44(%rbp)\n 4bc:\te9 80 01 00 00       \tjmpq   641 <main+0x507>\n 4c1:\tc7 45 b8 01 00 00 00 \tmovl   $0x1,-0x48(%rbp)\n 4c8:\te9 74 01 00 00       \tjmpq   641 <main+0x507>\n 4cd:\tc7 45 b4 01 00 00 00 \tmovl   $0x1,-0x4c(%rbp)\n 4d4:\te9 68 01 00 00       \tjmpq   641 <main+0x507>\n 4d9:\tc7 45 b0 01 00 00 00 \tmovl   $0x1,-0x50(%rbp)\n 4e0:\te9 5c 01 00 00       \tjmpq   641 <main+0x507>\n 4e5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4ec <main+0x3b2>\n 4ec:\t48 89 c7             \tmov    %rax,%rdi\n 4ef:\te8 00 00 00 00       \tcallq  4f4 <main+0x3ba>\n 4f4:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n 4f8:\te9 44 01 00 00       \tjmpq   641 <main+0x507>\n 4fd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 504 <main+0x3ca>\n 504:\t48 89 c7             \tmov    %rax,%rdi\n 507:\te8 00 00 00 00       \tcallq  50c <main+0x3d2>\n 50c:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n 510:\te9 2c 01 00 00       \tjmpq   641 <main+0x507>\n 515:\tc7 45 a4 01 00 00 00 \tmovl   $0x1,-0x5c(%rbp)\n 51c:\te9 20 01 00 00       \tjmpq   641 <main+0x507>\n 521:\t48 c7 85 b0 fe ff ff \tmovq   $0x0,-0x150(%rbp)\n 528:\t00 00 00 00 \n 52c:\te8 00 00 00 00       \tcallq  531 <main+0x3f7>\n 531:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n 537:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 53e <main+0x404>\n 53e:\t48 8d 8d b0 fe ff ff \tlea    -0x150(%rbp),%rcx\n 545:\tba 0a 00 00 00       \tmov    $0xa,%edx\n 54a:\t48 89 ce             \tmov    %rcx,%rsi\n 54d:\t48 89 c7             \tmov    %rax,%rdi\n 550:\te8 00 00 00 00       \tcallq  555 <main+0x41b>\n 555:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n 558:\te8 00 00 00 00       \tcallq  55d <main+0x423>\n 55d:\t8b 00                \tmov    (%rax),%eax\n 55f:\t85 c0                \ttest   %eax,%eax\n 561:\t75 21                \tjne    584 <main+0x44a>\n 563:\t48 8b 95 b0 fe ff ff \tmov    -0x150(%rbp),%rdx\n 56a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 571 <main+0x437>\n 571:\t48 39 c2             \tcmp    %rax,%rdx\n 574:\t74 0e                \tje     584 <main+0x44a>\n 576:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n 57d:\t0f b6 00             \tmovzbl (%rax),%eax\n 580:\t84 c0                \ttest   %al,%al\n 582:\t74 32                \tje     5b6 <main+0x47c>\n 584:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 58b <main+0x451>\n 58b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 592 <main+0x458>\n 592:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 597:\t48 89 c7             \tmov    %rax,%rdi\n 59a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 59f:\te8 00 00 00 00       \tcallq  5a4 <main+0x46a>\n 5a4:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 5ab:\t48 8b 00             \tmov    (%rax),%rax\n 5ae:\t48 89 c7             \tmov    %rax,%rdi\n 5b1:\te8 4a fa ff ff       \tcallq  0 <usage>\n 5b6:\t83 7d a0 00          \tcmpl   $0x0,-0x60(%rbp)\n 5ba:\t0f 89 80 00 00 00    \tjns    640 <main+0x506>\n 5c0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5c7 <main+0x48d>\n 5c7:\t48 89 c1             \tmov    %rax,%rcx\n 5ca:\tba 22 00 00 00       \tmov    $0x22,%edx\n 5cf:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 5d4:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 5d9:\te8 00 00 00 00       \tcallq  5de <main+0x4a4>\n 5de:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 5e5:\t48 8b 00             \tmov    (%rax),%rax\n 5e8:\t48 89 c7             \tmov    %rax,%rdi\n 5eb:\te8 10 fa ff ff       \tcallq  0 <usage>\n 5f0:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 5f7:\t48 8b 00             \tmov    (%rax),%rax\n 5fa:\t48 89 c7             \tmov    %rax,%rdi\n 5fd:\te8 fe f9 ff ff       \tcallq  0 <usage>\n 602:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 609 <main+0x4cf>\n 609:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 610 <main+0x4d6>\n 610:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 615:\t48 89 c7             \tmov    %rax,%rdi\n 618:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 61d:\te8 00 00 00 00       \tcallq  622 <main+0x4e8>\n 622:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 629:\t48 8b 00             \tmov    (%rax),%rax\n 62c:\t48 89 c7             \tmov    %rax,%rdi\n 62f:\te8 cc f9 ff ff       \tcallq  0 <usage>\n 634:\t90                   \tnop\n 635:\te9 c7 fb ff ff       \tjmpq   201 <main+0xc7>\n 63a:\t90                   \tnop\n 63b:\te9 c1 fb ff ff       \tjmpq   201 <main+0xc7>\n 640:\t90                   \tnop\n 641:\te9 bb fb ff ff       \tjmpq   201 <main+0xc7>\n 646:\t90                   \tnop\n 647:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 64d <main+0x513>\n 64d:\t39 85 ac fe ff ff    \tcmp    %eax,-0x154(%rbp)\n 653:\t7f 30                \tjg     685 <main+0x54b>\n 655:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 65c <main+0x522>\n 65c:\t48 89 c1             \tmov    %rax,%rcx\n 65f:\tba 17 00 00 00       \tmov    $0x17,%edx\n 664:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 669:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 66e:\te8 00 00 00 00       \tcallq  673 <main+0x539>\n 673:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 67a:\t48 8b 00             \tmov    (%rax),%rax\n 67d:\t48 89 c7             \tmov    %rax,%rdi\n 680:\te8 7b f9 ff ff       \tcallq  0 <usage>\n 685:\t8b 45 9c             \tmov    -0x64(%rbp),%eax\n 688:\t89 c7                \tmov    %eax,%edi\n 68a:\te8 00 00 00 00       \tcallq  68f <main+0x555>\n 68f:\t48 8d 85 d8 fe ff ff \tlea    -0x128(%rbp),%rax\n 696:\t48 89 c7             \tmov    %rax,%rdi\n 699:\te8 00 00 00 00       \tcallq  69e <main+0x564>\n 69e:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n 6a5:\t8b 55 bc             \tmov    -0x44(%rbp),%edx\n 6a8:\t89 d6                \tmov    %edx,%esi\n 6aa:\t48 89 c7             \tmov    %rax,%rdi\n 6ad:\te8 00 00 00 00       \tcallq  6b2 <main+0x578>\n 6b2:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n 6b9:\t8b 55 b8             \tmov    -0x48(%rbp),%edx\n 6bc:\t89 d6                \tmov    %edx,%esi\n 6be:\t48 89 c7             \tmov    %rax,%rdi\n 6c1:\te8 00 00 00 00       \tcallq  6c6 <main+0x58c>\n 6c6:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n 6cd:\t8b 55 b4             \tmov    -0x4c(%rbp),%edx\n 6d0:\t89 d6                \tmov    %edx,%esi\n 6d2:\t48 89 c7             \tmov    %rax,%rdi\n 6d5:\te8 00 00 00 00       \tcallq  6da <main+0x5a0>\n 6da:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n 6e1:\t8b 55 b0             \tmov    -0x50(%rbp),%edx\n 6e4:\t89 d6                \tmov    %edx,%esi\n 6e6:\t48 89 c7             \tmov    %rax,%rdi\n 6e9:\te8 00 00 00 00       \tcallq  6ee <main+0x5b4>\n 6ee:\t83 7d ac ff          \tcmpl   $0xffffffff,-0x54(%rbp)\n 6f2:\t74 21                \tje     715 <main+0x5db>\n 6f4:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n 6fb:\t8b 55 ac             \tmov    -0x54(%rbp),%edx\n 6fe:\t89 d6                \tmov    %edx,%esi\n 700:\t48 89 c7             \tmov    %rax,%rdi\n 703:\te8 00 00 00 00       \tcallq  708 <main+0x5ce>\n 708:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 70b:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n 70f:\t0f 85 ab 05 00 00    \tjne    cc0 <main+0xb86>\n 715:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n 71c:\t8b 55 c0             \tmov    -0x40(%rbp),%edx\n 71f:\t89 d6                \tmov    %edx,%esi\n 721:\t48 89 c7             \tmov    %rax,%rdi\n 724:\te8 00 00 00 00       \tcallq  729 <main+0x5ef>\n 729:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n 730:\t8b 55 c4             \tmov    -0x3c(%rbp),%edx\n 733:\t89 d6                \tmov    %edx,%esi\n 735:\t48 89 c7             \tmov    %rax,%rdi\n 738:\te8 00 00 00 00       \tcallq  73d <main+0x603>\n 73d:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n 744:\t8b 55 a8             \tmov    -0x58(%rbp),%edx\n 747:\t89 d6                \tmov    %edx,%esi\n 749:\t48 89 c7             \tmov    %rax,%rdi\n 74c:\te8 00 00 00 00       \tcallq  751 <main+0x617>\n 751:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n 758:\t8b 55 a4             \tmov    -0x5c(%rbp),%edx\n 75b:\t89 d6                \tmov    %edx,%esi\n 75d:\t48 89 c7             \tmov    %rax,%rdi\n 760:\te8 00 00 00 00       \tcallq  765 <main+0x62b>\n 765:\t83 7d a0 00          \tcmpl   $0x0,-0x60(%rbp)\n 769:\t78 14                \tjs     77f <main+0x645>\n 76b:\t8b 55 a0             \tmov    -0x60(%rbp),%edx\n 76e:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n 775:\t89 d6                \tmov    %edx,%esi\n 777:\t48 89 c7             \tmov    %rax,%rdi\n 77a:\te8 00 00 00 00       \tcallq  77f <main+0x645>\n 77f:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 785 <main+0x64b>\n 785:\t89 45 98             \tmov    %eax,-0x68(%rbp)\n 788:\te9 f0 01 00 00       \tjmpq   97d <main+0x843>\n 78d:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n 790:\t48 98                \tcltq   \n 792:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 799:\t00 \n 79a:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 7a1:\t48 01 d0             \tadd    %rdx,%rax\n 7a4:\t48 8b 00             \tmov    (%rax),%rax\n 7a7:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 7ac:\t48 89 c7             \tmov    %rax,%rdi\n 7af:\te8 00 00 00 00       \tcallq  7b4 <main+0x67a>\n 7b4:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 7b8:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n 7bd:\t75 3f                \tjne    7fe <main+0x6c4>\n 7bf:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n 7c2:\t48 98                \tcltq   \n 7c4:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 7cb:\t00 \n 7cc:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 7d3:\t48 01 d0             \tadd    %rdx,%rax\n 7d6:\t48 8b 10             \tmov    (%rax),%rdx\n 7d9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7e0 <main+0x6a6>\n 7e0:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 7e5:\t48 89 c7             \tmov    %rax,%rdi\n 7e8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 7ed:\te8 00 00 00 00       \tcallq  7f2 <main+0x6b8>\n 7f2:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n 7f9:\te9 c3 04 00 00       \tjmpq   cc1 <main+0xb87>\n 7fe:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n 801:\t48 98                \tcltq   \n 803:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 80a:\t00 \n 80b:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 812:\t48 01 d0             \tadd    %rdx,%rax\n 815:\t48 8b 00             \tmov    (%rax),%rax\n 818:\t48 8d 95 e0 fe ff ff \tlea    -0x120(%rbp),%rdx\n 81f:\t48 89 d6             \tmov    %rdx,%rsi\n 822:\t48 89 c7             \tmov    %rax,%rdi\n 825:\te8 00 00 00 00       \tcallq  82a <main+0x6f0>\n 82a:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 82d:\t83 7d fc ff          \tcmpl   $0xffffffff,-0x4(%rbp)\n 831:\t75 38                \tjne    86b <main+0x731>\n 833:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n 836:\t48 98                \tcltq   \n 838:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 83f:\t00 \n 840:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 847:\t48 01 d0             \tadd    %rdx,%rax\n 84a:\t48 8b 10             \tmov    (%rax),%rdx\n 84d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 854 <main+0x71a>\n 854:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 859:\t48 89 c7             \tmov    %rax,%rdi\n 85c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 861:\te8 00 00 00 00       \tcallq  866 <main+0x72c>\n 866:\te9 56 04 00 00       \tjmpq   cc1 <main+0xb87>\n 86b:\t48 8b 85 10 ff ff ff \tmov    -0xf0(%rbp),%rax\n 872:\t89 45 8c             \tmov    %eax,-0x74(%rbp)\n 875:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n 878:\t48 89 c7             \tmov    %rax,%rdi\n 87b:\te8 00 00 00 00       \tcallq  880 <main+0x746>\n 880:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n 884:\t8b 75 8c             \tmov    -0x74(%rbp),%esi\n 887:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n 88b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 88f:\t48 89 d1             \tmov    %rdx,%rcx\n 892:\tba 01 00 00 00       \tmov    $0x1,%edx\n 897:\t48 89 c7             \tmov    %rax,%rdi\n 89a:\te8 00 00 00 00       \tcallq  89f <main+0x765>\n 89f:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 8a2:\t83 7d fc 01          \tcmpl   $0x1,-0x4(%rbp)\n 8a6:\t74 38                \tje     8e0 <main+0x7a6>\n 8a8:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n 8ab:\t48 98                \tcltq   \n 8ad:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 8b4:\t00 \n 8b5:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 8bc:\t48 01 d0             \tadd    %rdx,%rax\n 8bf:\t48 8b 10             \tmov    (%rax),%rdx\n 8c2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8c9 <main+0x78f>\n 8c9:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 8ce:\t48 89 c7             \tmov    %rax,%rdi\n 8d1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 8d6:\te8 00 00 00 00       \tcallq  8db <main+0x7a1>\n 8db:\te9 e1 03 00 00       \tjmpq   cc1 <main+0xb87>\n 8e0:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 8e4:\t48 89 c7             \tmov    %rax,%rdi\n 8e7:\te8 00 00 00 00       \tcallq  8ec <main+0x7b2>\n 8ec:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n 8f3:\t00 \n 8f4:\t8b 4d 8c             \tmov    -0x74(%rbp),%ecx\n 8f7:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n 8fa:\t48 98                \tcltq   \n 8fc:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 903:\t00 \n 904:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 90b:\t48 01 d0             \tadd    %rdx,%rax\n 90e:\t48 8b 30             \tmov    (%rax),%rsi\n 911:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n 918:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n 91c:\t48 89 c7             \tmov    %rax,%rdi\n 91f:\te8 00 00 00 00       \tcallq  924 <main+0x7ea>\n 924:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 927:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n 92b:\t74 38                \tje     965 <main+0x82b>\n 92d:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n 930:\t48 98                \tcltq   \n 932:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 939:\t00 \n 93a:\t48 8b 85 a0 fe ff ff \tmov    -0x160(%rbp),%rax\n 941:\t48 01 d0             \tadd    %rdx,%rax\n 944:\t48 8b 10             \tmov    (%rax),%rdx\n 947:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 94e <main+0x814>\n 94e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 953:\t48 89 c7             \tmov    %rax,%rdi\n 956:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 95b:\te8 00 00 00 00       \tcallq  960 <main+0x826>\n 960:\te9 5c 03 00 00       \tjmpq   cc1 <main+0xb87>\n 965:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 969:\t48 89 c7             \tmov    %rax,%rdi\n 96c:\te8 00 00 00 00       \tcallq  971 <main+0x837>\n 971:\t48 c7 45 d8 00 00 00 \tmovq   $0x0,-0x28(%rbp)\n 978:\t00 \n 979:\t83 45 98 01          \taddl   $0x1,-0x68(%rbp)\n 97d:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n 980:\t3b 85 ac fe ff ff    \tcmp    -0x154(%rbp),%eax\n 986:\t0f 8c 01 fe ff ff    \tjl     78d <main+0x653>\n 98c:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n 993:\t48 89 c7             \tmov    %rax,%rdi\n 996:\te8 00 00 00 00       \tcallq  99b <main+0x861>\n 99b:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 99e:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n 9a2:\t74 21                \tje     9c5 <main+0x88b>\n 9a4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9ab <main+0x871>\n 9ab:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n 9ae:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 9b3:\t48 89 c7             \tmov    %rax,%rdi\n 9b6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 9bb:\te8 00 00 00 00       \tcallq  9c0 <main+0x886>\n 9c0:\te9 fc 02 00 00       \tjmpq   cc1 <main+0xb87>\n 9c5:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n 9cc:\t48 8d 55 80          \tlea    -0x80(%rbp),%rdx\n 9d0:\t48 89 d6             \tmov    %rdx,%rsi\n 9d3:\t48 89 c7             \tmov    %rax,%rdi\n 9d6:\te8 00 00 00 00       \tcallq  9db <main+0x8a1>\n 9db:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 9de:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n 9e2:\t74 23                \tje     a07 <main+0x8cd>\n 9e4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9eb <main+0x8b1>\n 9eb:\t48 89 c1             \tmov    %rax,%rcx\n 9ee:\tba 19 00 00 00       \tmov    $0x19,%edx\n 9f3:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 9f8:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 9fd:\te8 00 00 00 00       \tcallq  a02 <main+0x8c8>\n a02:\te9 ba 02 00 00       \tjmpq   cc1 <main+0xb87>\n a07:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n a0c:\t0f 85 b9 00 00 00    \tjne    acb <main+0x991>\n a12:\t8b 45 a8             \tmov    -0x58(%rbp),%eax\n a15:\t89 c1                \tmov    %eax,%ecx\n a17:\tba 00 00 00 00       \tmov    $0x0,%edx\n a1c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n a21:\tbf 00 00 00 00       \tmov    $0x0,%edi\n a26:\tb8 00 00 00 00       \tmov    $0x0,%eax\n a2b:\te8 00 00 00 00       \tcallq  a30 <main+0x8f6>\n a30:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n a33:\t8b 45 90             \tmov    -0x70(%rbp),%eax\n a36:\t83 c0 01             \tadd    $0x1,%eax\n a39:\t48 98                \tcltq   \n a3b:\t48 89 c7             \tmov    %rax,%rdi\n a3e:\te8 00 00 00 00       \tcallq  a43 <main+0x909>\n a43:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n a47:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n a4c:\t75 2a                \tjne    a78 <main+0x93e>\n a4e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a55 <main+0x91b>\n a55:\t48 89 c1             \tmov    %rax,%rcx\n a58:\tba 21 00 00 00       \tmov    $0x21,%edx\n a5d:\tbe 01 00 00 00       \tmov    $0x1,%esi\n a62:\tbf 00 00 00 00       \tmov    $0x0,%edi\n a67:\te8 00 00 00 00       \tcallq  a6c <main+0x932>\n a6c:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n a73:\te9 49 02 00 00       \tjmpq   cc1 <main+0xb87>\n a78:\t8b 45 90             \tmov    -0x70(%rbp),%eax\n a7b:\t83 c0 01             \tadd    $0x1,%eax\n a7e:\t48 63 f0             \tmovslq %eax,%rsi\n a81:\t8b 55 a8             \tmov    -0x58(%rbp),%edx\n a84:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n a88:\t89 d1                \tmov    %edx,%ecx\n a8a:\tba 00 00 00 00       \tmov    $0x0,%edx\n a8f:\t48 89 c7             \tmov    %rax,%rdi\n a92:\tb8 00 00 00 00       \tmov    $0x0,%eax\n a97:\te8 00 00 00 00       \tcallq  a9c <main+0x962>\n a9c:\t39 45 90             \tcmp    %eax,-0x70(%rbp)\n a9f:\t74 2a                \tje     acb <main+0x991>\n aa1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # aa8 <main+0x96e>\n aa8:\t48 89 c1             \tmov    %rax,%rcx\n aab:\tba 21 00 00 00       \tmov    $0x21,%edx\n ab0:\tbe 01 00 00 00       \tmov    $0x1,%esi\n ab5:\tbf 00 00 00 00       \tmov    $0x0,%edi\n aba:\te8 00 00 00 00       \tcallq  abf <main+0x985>\n abf:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n ac6:\te9 f6 01 00 00       \tjmpq   cc1 <main+0xb87>\n acb:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n acf:\tbe 00 00 00 00       \tmov    $0x0,%esi\n ad4:\t48 89 c7             \tmov    %rax,%rdi\n ad7:\te8 00 00 00 00       \tcallq  adc <main+0x9a2>\n adc:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n ae0:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n ae5:\t75 2a                \tjne    b11 <main+0x9d7>\n ae7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # aee <main+0x9b4>\n aee:\t48 89 c1             \tmov    %rax,%rcx\n af1:\tba 28 00 00 00       \tmov    $0x28,%edx\n af6:\tbe 01 00 00 00       \tmov    $0x1,%esi\n afb:\tbf 00 00 00 00       \tmov    $0x0,%edi\n b00:\te8 00 00 00 00       \tcallq  b05 <main+0x9cb>\n b05:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n b0c:\te9 b0 01 00 00       \tjmpq   cc1 <main+0xb87>\n b11:\t48 8d 85 78 ff ff ff \tlea    -0x88(%rbp),%rax\n b18:\t48 89 c7             \tmov    %rax,%rdi\n b1b:\te8 00 00 00 00       \tcallq  b20 <main+0x9e6>\n b20:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n b23:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n b27:\t74 21                \tje     b4a <main+0xa10>\n b29:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # b30 <main+0x9f6>\n b30:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n b33:\tbe 00 00 00 00       \tmov    $0x0,%esi\n b38:\t48 89 c7             \tmov    %rax,%rdi\n b3b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n b40:\te8 00 00 00 00       \tcallq  b45 <main+0xa0b>\n b45:\te9 77 01 00 00       \tjmpq   cc1 <main+0xb87>\n b4a:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n b51:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n b55:\t48 89 d6             \tmov    %rdx,%rsi\n b58:\t48 89 c7             \tmov    %rax,%rdi\n b5b:\te8 00 00 00 00       \tcallq  b60 <main+0xa26>\n b60:\t48 8b 95 78 ff ff ff \tmov    -0x88(%rbp),%rdx\n b67:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n b6b:\t48 89 d6             \tmov    %rdx,%rsi\n b6e:\t48 89 c7             \tmov    %rax,%rdi\n b71:\te8 00 00 00 00       \tcallq  b76 <main+0xa3c>\n b76:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n b79:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n b7d:\t74 21                \tje     ba0 <main+0xa66>\n b7f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # b86 <main+0xa4c>\n b86:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n b89:\tbe 00 00 00 00       \tmov    $0x0,%esi\n b8e:\t48 89 c7             \tmov    %rax,%rdi\n b91:\tb8 00 00 00 00       \tmov    $0x0,%eax\n b96:\te8 00 00 00 00       \tcallq  b9b <main+0xa61>\n b9b:\te9 21 01 00 00       \tjmpq   cc1 <main+0xb87>\n ba0:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n ba4:\t48 89 c7             \tmov    %rax,%rdi\n ba7:\te8 00 00 00 00       \tcallq  bac <main+0xa72>\n bac:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n bb3:\t00 \n bb4:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n bbb:\t48 8d 95 c0 fe ff ff \tlea    -0x140(%rbp),%rdx\n bc2:\t48 8d 8d c8 fe ff ff \tlea    -0x138(%rbp),%rcx\n bc9:\t48 89 ce             \tmov    %rcx,%rsi\n bcc:\t48 89 c7             \tmov    %rax,%rdi\n bcf:\te8 00 00 00 00       \tcallq  bd4 <main+0xa9a>\n bd4:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n bd7:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n bdb:\t74 23                \tje     c00 <main+0xac6>\n bdd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # be4 <main+0xaaa>\n be4:\t48 89 c1             \tmov    %rax,%rcx\n be7:\tba 20 00 00 00       \tmov    $0x20,%edx\n bec:\tbe 01 00 00 00       \tmov    $0x1,%esi\n bf1:\tbf 00 00 00 00       \tmov    $0x0,%edi\n bf6:\te8 00 00 00 00       \tcallq  bfb <main+0xac1>\n bfb:\te9 c1 00 00 00       \tjmpq   cc1 <main+0xb87>\n c00:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n c05:\t75 15                \tjne    c1c <main+0xae2>\n c07:\tbe 00 00 00 00       \tmov    $0x0,%esi\n c0c:\tbf 00 00 00 00       \tmov    $0x0,%edi\n c11:\te8 00 00 00 00       \tcallq  c16 <main+0xadc>\n c16:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n c1a:\teb 15                \tjmp    c31 <main+0xaf7>\n c1c:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n c20:\tbe 00 00 00 00       \tmov    $0x0,%esi\n c25:\t48 89 c7             \tmov    %rax,%rdi\n c28:\te8 00 00 00 00       \tcallq  c2d <main+0xaf3>\n c2d:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n c31:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n c36:\t75 20                \tjne    c58 <main+0xb1e>\n c38:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c3f <main+0xb05>\n c3f:\t48 89 c1             \tmov    %rax,%rcx\n c42:\tba 22 00 00 00       \tmov    $0x22,%edx\n c47:\tbe 01 00 00 00       \tmov    $0x1,%esi\n c4c:\tbf 00 00 00 00       \tmov    $0x0,%edi\n c51:\te8 00 00 00 00       \tcallq  c56 <main+0xb1c>\n c56:\teb 69                \tjmp    cc1 <main+0xb87>\n c58:\t48 8b 95 c0 fe ff ff \tmov    -0x140(%rbp),%rdx\n c5f:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n c66:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n c6a:\tbe 01 00 00 00       \tmov    $0x1,%esi\n c6f:\t48 89 c7             \tmov    %rax,%rdi\n c72:\te8 00 00 00 00       \tcallq  c77 <main+0xb3d>\n c77:\t48 8b 95 c0 fe ff ff \tmov    -0x140(%rbp),%rdx\n c7e:\t48 39 d0             \tcmp    %rdx,%rax\n c81:\t74 20                \tje     ca3 <main+0xb69>\n c83:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c8a <main+0xb50>\n c8a:\t48 89 c1             \tmov    %rax,%rcx\n c8d:\tba 23 00 00 00       \tmov    $0x23,%edx\n c92:\tbe 01 00 00 00       \tmov    $0x1,%esi\n c97:\tbf 00 00 00 00       \tmov    $0x0,%edi\n c9c:\te8 00 00 00 00       \tcallq  ca1 <main+0xb67>\n ca1:\teb 1e                \tjmp    cc1 <main+0xb87>\n ca3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n ca7:\t48 89 c7             \tmov    %rax,%rdi\n caa:\te8 00 00 00 00       \tcallq  caf <main+0xb75>\n caf:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n cb6:\t00 \n cb7:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n cbe:\teb 01                \tjmp    cc1 <main+0xb87>\n cc0:\t90                   \tnop\n cc1:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n cc6:\t74 0c                \tje     cd4 <main+0xb9a>\n cc8:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n ccc:\t48 89 c7             \tmov    %rax,%rdi\n ccf:\te8 00 00 00 00       \tcallq  cd4 <main+0xb9a>\n cd4:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n cd9:\t74 0c                \tje     ce7 <main+0xbad>\n cdb:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n cdf:\t48 89 c7             \tmov    %rax,%rdi\n ce2:\te8 00 00 00 00       \tcallq  ce7 <main+0xbad>\n ce7:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n ceb:\t48 89 c7             \tmov    %rax,%rdi\n cee:\te8 00 00 00 00       \tcallq  cf3 <main+0xbb9>\n cf3:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n cf7:\t48 89 c7             \tmov    %rax,%rdi\n cfa:\te8 00 00 00 00       \tcallq  cff <main+0xbc5>\n cff:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n d03:\t48 89 c7             \tmov    %rax,%rdi\n d06:\te8 00 00 00 00       \tcallq  d0b <main+0xbd1>\n d0b:\t48 8d 85 d8 fe ff ff \tlea    -0x128(%rbp),%rax\n d12:\t48 89 c7             \tmov    %rax,%rdi\n d15:\te8 00 00 00 00       \tcallq  d1a <main+0xbe0>\n d1a:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n d1e:\t48 89 c7             \tmov    %rax,%rdi\n d21:\te8 00 00 00 00       \tcallq  d26 <main+0xbec>\n d26:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n d2d:\t48 89 c7             \tmov    %rax,%rdi\n d30:\te8 00 00 00 00       \tcallq  d35 <main+0xbfb>\n d35:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n d3c:\t48 89 c7             \tmov    %rax,%rdi\n d3f:\te8 00 00 00 00       \tcallq  d44 <main+0xc0a>\n d44:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n d47:\tc9                   \tleaveq \n d48:\tc3                   \tretq   \n", "code_s": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  int v3;\n  size_t v4;\n  int result;\n  char *v6;\n  char *endptr;\n  size_t n;\n  void *v9;\n  int longind;\n  __int64 v11;\n  struct stat64 v12;\n  __int64 v13;\n  __int64 v14;\n  size_t size;\n  int v16;\n  int i;\n  unsigned int v18;\n  int v19;\n  unsigned int v20;\n  unsigned int v21;\n  unsigned int v22;\n  unsigned int v23;\n  unsigned int v24;\n  unsigned int v25;\n  unsigned int v26;\n  unsigned int v27;\n  unsigned int v28;\n  char *filename;\n  char *s;\n  void *ptr;\n  FILE *stream;\n  FILE *v33;\n  FILE *v34;\n  unsigned int v35;\n  v35 = Number;\n  v14 = Number L;\n  v13 = Number L;\n  v34 = Number L;\n  stream = Number L;\n  ptr = Number L;\n  s = Number L;\n  filename = Number L;\n  v11 = Number L;\n  v28 = Number;\n  v27 = Number;\n  v26 = Number;\n  v25 = Number;\n  v24 = Number;\n  v23 = Number;\n  v22 = Number;\n  v21 = Number;\n  v20 = Number;\n  v19 = Number;\n  longind = Number;\n  v9 = Number L;\n  v18 = Number;\n  while (Number) {\n    v16 = getopt_long(argc, (char *const *)argv, String, &long_opts_4536,\n                      &longind);\n    if (v16 == Number)\n      break;\n    switch (v16) {\n    case String:\n      continue;\n    case String:\n      v26 = Number;\n      break;\n    case String:\n      v20 = Number;\n      break;\n    case String:\n      if (!strcasecmp(optarg, String) || !strcasecmp(optarg, String)) {\n        v27 = Number;\n      } else {\n        if (strcasecmp(optarg, String)) {\n          if (strcasecmp(optarg, String))\n            usage(*argv);\n        }\n        v27 = Number;\n      }\n      break;\n    case String:\n      v24 = Number;\n      break;\n    case String:\n      v23 = Number;\n      break;\n    case String:\n      if (!strcasecmp(optarg, String)) {\n        v22 = Number;\n      } else if (!strcasecmp(optarg, String)) {\n        v22 = Number;\n      } else {\n        if (strcasecmp(optarg, String))\n          usage(*argv);\n        v22 = Number;\n      }\n      break;\n    case String:\n      v6 = Number L;\n      *_errno_location() = Number;\n      v19 = strtol(optarg, &v6, Number);\n      if (*_errno_location() || v6 == optarg || *v6) {\n        fprintf(stderr, String, optarg);\n        usage(*argv);\n      }\n      if (v19 < Number) {\n        fwrite(String, Number, Number, stderr);\n        usage(*argv);\n      }\n      return result;\n    case String:\n      endptr = Number L;\n      *_errno_location() = Number;\n      v21 = strtol(optarg, &endptr, Number);\n      if (*_errno_location() || endptr == optarg || *endptr) {\n        fprintf(stderr, String, optarg);\n        usage(*argv);\n      }\n      if ((int)v21 > Number || (int)v21 <= Number) {\n        fprintf(stderr, String, Number L, Number L);\n        usage(*argv);\n      }\n      return result;\n    case String:\n      filename = strdup(optarg);\n      break;\n    case String:\n      usage(*argv);\n    case String:\n      v25 = Number;\n      break;\n    case String:\n      s = strdup(optarg);\n      break;\n    case String:\n      if (!strcmp(optarg, String)) {\n        v28 = Number;\n      } else {\n        if (strcmp(optarg, String)) {\n          fprintf(stderr, String, optarg);\n          usage(*argv);\n        }\n        v28 = Number;\n      }\n      break;\n    case String:\n      ++v18;\n      break;\n    default:\n      fprintf(stderr, String, optarg);\n      usage(*argv);\n    }\n  }\n  if (argc <= optind) {\n    fwrite(String, Number, Number, stderr);\n    usage(*argv);\n  }\n  cil_set_log_level(v18);\n  cil_db_init(&v11);\n  cil_set_disable_dontaudit(v11, v26);\n  cil_set_multiple_decls(v11, v25);\n  cil_set_disable_neverallow(v11, v24);\n  cil_set_preserve_tunables(v11, v23);\n  if (v22 == Number || (v35 = cil_set_handle_unknown(v11, v22)) == Number) {\n    cil_set_mls(v11, v27);\n    cil_set_target_platform(v11, v28);\n    cil_set_policy_version(v11, v21);\n    cil_set_attrs_expand_generated(v11, v20);\n    if (v19 >= Number)\n      cil_set_attrs_expand_size(v11, (unsigned int)v19);\n    for (i = optind; i < argc; ++i) {\n      stream = fopen64(argv[i], String);\n      if (!stream) {\n        fprintf(stderr, String, argv[i]);\n        v35 = Number;\n        goto LABEL_89;\n      }\n      v35 = stat64(argv[i], &v12);\n      if (v35 == Number) {\n        fprintf(stderr, String, argv[i]);\n        goto LABEL_89;\n      }\n      LODWORD(size) = v12.st_size;\n      ptr = malloc(LODWORD(v12.st_size));\n      v35 = fread(ptr, (unsigned int)size, Number, stream);\n      if (v35 != Number) {\n        fprintf(stderr, String, argv[i]);\n        goto LABEL_89;\n      }\n      fclose(stream);\n      stream = Number L;\n      v35 = cil_add_file(v11, argv[i], ptr, (unsigned int)size);\n      if (v35) {\n        fprintf(stderr, String, argv[i]);\n        goto LABEL_89;\n      }\n      free(ptr);\n      ptr = Number L;\n    }\n    v35 = cil_compile(v11);\n    if (v35) {\n      fprintf(stderr, String, v35);\n    } else {\n      v35 = cil_build_policydb(v11, &v14);\n      if (v35) {\n        fwrite(String, Number, Number, stderr);\n      } else if (s ||\n                 (HIDWORD(size) = snprintf(Number L, Number L, String, v21),\n                  (s = (char *)malloc(HIDWORD(size) + Number)) != Number L) &&\n                     (v3 = snprintf(s, HIDWORD(size) + Number, String, v21),\n                      HIDWORD(size) == v3)) {\n        v34 = fopen64(s, String);\n        if (v34) {\n          v35 = sepol_policy_file_create(&v13);\n          if (v35) {\n            fprintf(stderr, String, v35);\n          } else {\n            sepol_policy_file_set_fp(v13, v34);\n            v35 = sepol_policydb_write(v14, v13);\n            if (v35) {\n              fprintf(stderr, String, v35);\n            } else {\n              fclose(v34);\n              v34 = Number L;\n              v35 = cil_filecons_to_string(v11, &v9, &n);\n              if (v35) {\n                fwrite(String, Number, Number, stderr);\n              } else {\n                if (filename)\n                  v33 = fopen64(filename, String);\n                else\n                  v33 = fopen64(String, String);\n                if (v33) {\n                  v4 = fwrite(v9, Number, n, v33);\n                  if (v4 == n) {\n                    fclose(v33);\n                    v33 = Number L;\n                    v35 = Number;\n                  } else {\n                    fwrite(String, Number, Number, stderr);\n                  }\n                } else {\n                  fwrite(String, Number, Number, stderr);\n                }\n              }\n            }\n          }\n        } else {\n          fwrite(String, Number, Number, stderr);\n          v35 = Number;\n        }\n      } else {\n        fwrite(String, Number, Number, stderr);\n        v35 = Number;\n      }\n    }\n  }\nLABEL_89:\n  if (v34)\n    fclose(v34);\n  if (stream)\n    fclose(stream);\n  free(ptr);\n  free(s);\n  free(filename);\n  cil_db_destroy(&v11);\n  sepol_policydb_free(v14);\n  sepol_policy_file_free(v13);\n  free(v9);\n  return v35;\n}", "code_t": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  int v3;\n  size_t v4;\n  int result;\n  char *endptr_0;\n  char *endptr;\n  size_t fc_size;\n  char *fc_buf;\n  int opt_index;\n  cil_db *db;\n  stat <span class=\"supfact\">filedata</span>;\n  sepol_policy_file *pf_0;\n  sepol_policydb_t *pdb;\n  uint32_t file_size;\n  int size;\n  int opt_char;\n  int i;\n  cil_log_level log_level;\n  int attrs_expand_size;\n  int attrs_expand_generated;\n  int policyvers;\n  int handle_unknown;\n  int preserve_tunables;\n  int disable_neverallow;\n  int multiple_decls;\n  int disable_dontaudit;\n  int mls;\n  int target;\n  char *filecontexts;\n  char *output;\n  char *buffer;\n  FILE *file;\n  FILE *file_contexts;\n  FILE *binary;\n  int rc;\n  rc = Number;\n  pdb = Number L;\n  pf_0 = Number L;\n  binary = Number L;\n  file = Number L;\n  buffer = Number L;\n  output = Number L;\n  filecontexts = Number L;\n  db = Number L;\n  target = Number;\n  mls = Number;\n  disable_dontaudit = Number;\n  multiple_decls = Number;\n  disable_neverallow = Number;\n  preserve_tunables = Number;\n  handle_unknown = Number;\n  policyvers = Number;\n  attrs_expand_generated = Number;\n  attrs_expand_size = Number;\n  opt_index = Number;\n  fc_buf = Number L;\n  log_level = CIL_WARN;\n  while (Number) {\n    opt_char = getopt_long(argc, (char *const *)argv, String, long_opts_4536,\n                           &opt_index);\n    if (opt_char == Number)\n      break;\n    switch (opt_char) {\n    case String:\n      continue;\n    case String:\n      disable_dontaudit = Number;\n      break;\n    case String:\n      attrs_expand_generated = Number;\n      break;\n    case String:\n      if (!strcasecmp(optarg, String) || !strcasecmp(optarg, String)) {\n        mls = Number;\n      } else {\n        if (strcasecmp(optarg, String)) {\n          if (strcasecmp(optarg, String))\n            usage(*argv);\n        }\n        mls = Number;\n      }\n      break;\n    case String:\n      disable_neverallow = Number;\n      break;\n    case String:\n      preserve_tunables = Number;\n      break;\n    case String:\n      if (!strcasecmp(optarg, String)) {\n        handle_unknown = Number;\n      } else if (!strcasecmp(optarg, String)) {\n        handle_unknown = Number;\n      } else {\n        if (strcasecmp(optarg, String))\n          usage(*argv);\n        handle_unknown = Number;\n      }\n      break;\n    case String:\n      endptr_0 = Number L;\n      *_errno_location() = Number;\n      attrs_expand_size = strtol(optarg, &endptr_0, Number);\n      if (*_errno_location() || endptr_0 == optarg || *endptr_0) {\n        fprintf(stderr, String, optarg);\n        usage(*argv);\n      }\n      if (attrs_expand_size < Number) {\n        fwrite(String, Number, Number, stderr);\n        usage(*argv);\n      }\n      return result;\n    case String:\n      endptr = Number L;\n      *_errno_location() = Number;\n      policyvers = strtol(optarg, &endptr, Number);\n      if (*_errno_location() || endptr == optarg || *endptr) {\n        fprintf(stderr, String, optarg);\n        usage(*argv);\n      }\n      if (policyvers > Number || policyvers <= Number) {\n        fprintf(stderr, String, Number L, Number L);\n        usage(*argv);\n      }\n      return result;\n    case String:\n      filecontexts = strdup(optarg);\n      break;\n    case String:\n      usage(*argv);\n      return result;\n    case String:\n      multiple_decls = Number;\n      break;\n    case String:\n      output = strdup(optarg);\n      break;\n    case String:\n      if (!strcmp(optarg, String)) {\n        target = Number;\n      } else {\n        if (strcmp(optarg, String)) {\n          fprintf(stderr, String, optarg);\n          usage(*argv);\n        }\n        target = Number;\n      }\n      break;\n    case String:\n      ++log_level;\n      break;\n    default:\n      fprintf(stderr, String, optarg);\n      usage(*argv);\n      return result;\n    }\n  }\n  if (argc <= optind) {\n    fwrite(String, Number, Number, stderr);\n    usage(*argv);\n  }\n  cil_set_log_level((unsigned int)log_level);\n  cil_db_init(&db);\n  cil_set_disable_dontaudit(db, (unsigned int)disable_dontaudit);\n  cil_set_multiple_decls(db, (unsigned int)multiple_decls);\n  cil_set_disable_neverallow(db, (unsigned int)disable_neverallow);\n  cil_set_preserve_tunables(db, (unsigned int)preserve_tunables);\n  if (handle_unknown == Number ||\n      (rc = cil_set_handle_unknown(db, (unsigned int)handle_unknown)) ==\n          Number) {\n    cil_set_mls(db, (unsigned int)mls);\n    cil_set_target_platform(db, (unsigned int)target);\n    cil_set_policy_version(db, (unsigned int)policyvers);\n    cil_set_attrs_expand_generated(db, (unsigned int)attrs_expand_generated);\n    if (attrs_expand_size >= Number)\n      cil_set_attrs_expand_size(db, (unsigned int)attrs_expand_size);\n    for (i = optind; i < argc; ++i) {\n      file = fopen64(argv[i], String);\n      if (!file) {\n        fprintf(stderr, String, argv[i]);\n        rc = Number;\n        goto exit;\n      }\n      rc = stat64(argv[i], (struct stat64 *)&<span class=\"supfact\">filedata</span>);\n      if (rc == Number) {\n        fprintf(stderr, String, argv[i]);\n        goto exit;\n      }\n      file_size = <span class=\"supfact\">filedata</span>.st_size;\n      buffer = (char *)malloc(LODWORD(<span class=\"supfact\">filedata</span>.st_size));\n      rc = fread(buffer, file_size, Number, file);\n      if (rc != Number) {\n        fprintf(stderr, String, argv[i]);\n        goto exit;\n      }\n      fclose(file);\n      file = Number L;\n      rc = cil_add_file(db, argv[i], buffer, file_size);\n      if (rc) {\n        fprintf(stderr, String, argv[i]);\n        goto exit;\n      }\n      free(buffer);\n      buffer = Number L;\n    }\n    rc = cil_compile(db);\n    if (rc) {\n      fprintf(stderr, String, (unsigned int)rc);\n    } else {\n      rc = cil_build_policydb(db, &pdb);\n      if (rc) {\n        fwrite(String, Number, Number, stderr);\n      } else if (output ||\n                 (size = snprintf(Number L, Number L, String,\n                                  (unsigned int)policyvers),\n                  (output = (char *)malloc(size + Number)) != Number L) &&\n                     (v3 = snprintf(output, size + Number, String,\n                                    (unsigned int)policyvers),\n                      size == v3)) {\n        binary = fopen64(output, String);\n        if (binary) {\n          rc = sepol_policy_file_create(&pf_0);\n          if (rc) {\n            fprintf(stderr, String, (unsigned int)rc);\n          } else {\n            sepol_policy_file_set_fp(pf_0, binary);\n            rc = sepol_policydb_write(pdb, pf_0);\n            if (rc) {\n              fprintf(stderr, String, (unsigned int)rc);\n            } else {\n              fclose(binary);\n              binary = Number L;\n              rc = cil_filecons_to_string(db, &fc_buf, &fc_size);\n              if (rc) {\n                fwrite(String, Number, Number, stderr);\n              } else {\n                if (filecontexts)\n                  file_contexts = fopen64(filecontexts, String);\n                else\n                  file_contexts = fopen64(String, String);\n                if (file_contexts) {\n                  v4 = fwrite(fc_buf, Number, fc_size, file_contexts);\n                  if (v4 == fc_size) {\n                    fclose(file_contexts);\n                    file_contexts = Number L;\n                    rc = Number;\n                  } else {\n                    fwrite(String, Number, Number, stderr);\n                  }\n                } else {\n                  fwrite(String, Number, Number, stderr);\n                }\n              }\n            }\n          }\n        } else {\n          fwrite(String, Number, Number, stderr);\n          rc = Number;\n        }\n      } else {\n        fwrite(String, Number, Number, stderr);\n        rc = Number;\n      }\n    }\n  }\nexit:\n  if (binary)\n    fclose(binary);\n  if (file)\n    fclose(file);\n  free(buffer);\n  free(output);\n  free(filecontexts);\n  cil_db_destroy(&db);\n  sepol_policydb_free(pdb);\n  sepol_policy_file_free(pf_0);\n  free(fc_buf);\n  return rc;\n}", "var": [{"name": "v12", "type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }", "pred_name": "sb", "ref_name": "filedata", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }"}], "body_in_train": false}, {"repo_owner": "ubuntustudio-kernel", "repo_name": "ubuntu-quantal-lowlatency", "path": "ubuntustudio-kernel/ubuntu-quantal-lowlatency/1012e41fbb33779ec5e2611c5fdb20be3dbce8381cc5e8b1dda560dbadb89287", "path_in_repo": "ubuntustudio-kernel/ubuntu-quantal-lowlatency/tools/perf/builtin-top.o", "objdump": "000000000000236e <perf_top__mmap_read_idx>:\n    236e:\t55                   \tpush   %rbp\n    236f:\t48 89 e5             \tmov    %rsp,%rbp\n    2372:\t48 81 ec a0 00 00 00 \tsub    $0xa0,%rsp\n    2379:\t48 89 bd 68 ff ff ff \tmov    %rdi,-0x98(%rbp)\n    2380:\t89 b5 64 ff ff ff    \tmov    %esi,-0x9c(%rbp)\n    2386:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    238d:\t00 00 \n    238f:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    2393:\t31 c0                \txor    %eax,%eax\n    2395:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    239c:\t48 8b 80 08 01 00 00 \tmov    0x108(%rax),%rax\n    23a3:\t48 89 45 88          \tmov    %rax,-0x78(%rbp)\n    23a7:\te9 7a 02 00 00       \tjmpq   2626 <perf_top__mmap_read_idx+0x2b8>\n    23ac:\t48 8d 55 a0          \tlea    -0x60(%rbp),%rdx\n    23b0:\t48 8b 4d 90          \tmov    -0x70(%rbp),%rcx\n    23b4:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    23b8:\t48 89 ce             \tmov    %rcx,%rsi\n    23bb:\t48 89 c7             \tmov    %rax,%rdi\n    23be:\te8 40 de ff ff       \tcallq  203 <perf_session__parse_sample>\n    23c3:\t89 85 7c ff ff ff    \tmov    %eax,-0x84(%rbp)\n    23c9:\t83 bd 7c ff ff ff 00 \tcmpl   $0x0,-0x84(%rbp)\n    23d0:\t74 21                \tje     23f3 <perf_top__mmap_read_idx+0x85>\n    23d2:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    23d8:\t89 c2                \tmov    %eax,%edx\n    23da:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    23df:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    23e4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    23e9:\te8 00 00 00 00       \tcallq  23ee <perf_top__mmap_read_idx+0x80>\n    23ee:\te9 33 02 00 00       \tjmpq   2626 <perf_top__mmap_read_idx+0x2b8>\n    23f3:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    23f7:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    23fb:\t48 8b 80 18 01 00 00 \tmov    0x118(%rax),%rax\n    2402:\t48 89 d6             \tmov    %rdx,%rsi\n    2405:\t48 89 c7             \tmov    %rax,%rdi\n    2408:\te8 00 00 00 00       \tcallq  240d <perf_top__mmap_read_idx+0x9f>\n    240d:\t48 89 45 98          \tmov    %rax,-0x68(%rbp)\n    2411:\t48 83 7d 98 00       \tcmpq   $0x0,-0x68(%rbp)\n    2416:\t75 19                \tjne    2431 <perf_top__mmap_read_idx+0xc3>\n    2418:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    241d:\tba 35 03 00 00       \tmov    $0x335,%edx\n    2422:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2427:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    242c:\te8 00 00 00 00       \tcallq  2431 <perf_top__mmap_read_idx+0xc3>\n    2431:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    2435:\t0f b7 40 04          \tmovzwl 0x4(%rax),%eax\n    2439:\t83 e0 07             \tand    $0x7,%eax\n    243c:\t88 85 7b ff ff ff    \tmov    %al,-0x85(%rbp)\n    2442:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    2446:\t8b 00                \tmov    (%rax),%eax\n    2448:\t83 f8 09             \tcmp    $0x9,%eax\n    244b:\t75 20                \tjne    246d <perf_top__mmap_read_idx+0xff>\n    244d:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    2454:\t48 8b 80 a8 00 00 00 \tmov    0xa8(%rax),%rax\n    245b:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    245f:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    2466:\t48 89 90 a8 00 00 00 \tmov    %rdx,0xa8(%rax)\n    246d:\t0f b6 85 7b ff ff ff \tmovzbl -0x85(%rbp),%eax\n    2474:\t83 f8 05             \tcmp    $0x5,%eax\n    2477:\t0f 84 fb 00 00 00    \tje     2578 <perf_top__mmap_read_idx+0x20a>\n    247d:\t83 f8 05             \tcmp    $0x5,%eax\n    2480:\t0f 8f a0 01 00 00    \tjg     2626 <perf_top__mmap_read_idx+0x2b8>\n    2486:\t83 f8 04             \tcmp    $0x4,%eax\n    2489:\t0f 84 ac 00 00 00    \tje     253b <perf_top__mmap_read_idx+0x1cd>\n    248f:\t83 f8 04             \tcmp    $0x4,%eax\n    2492:\t0f 8f 8e 01 00 00    \tjg     2626 <perf_top__mmap_read_idx+0x2b8>\n    2498:\t83 f8 01             \tcmp    $0x1,%eax\n    249b:\t74 55                \tje     24f2 <perf_top__mmap_read_idx+0x184>\n    249d:\t83 f8 02             \tcmp    $0x2,%eax\n    24a0:\t0f 85 80 01 00 00    \tjne    2626 <perf_top__mmap_read_idx+0x2b8>\n    24a6:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    24ad:\t48 8b 80 b8 00 00 00 \tmov    0xb8(%rax),%rax\n    24b4:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    24b8:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    24bf:\t48 89 90 b8 00 00 00 \tmov    %rdx,0xb8(%rax)\n    24c6:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    24cd:\t0f b6 80 e9 00 00 00 \tmovzbl 0xe9(%rax),%eax\n    24d4:\t84 c0                \ttest   %al,%al\n    24d6:\t74 05                \tje     24dd <perf_top__mmap_read_idx+0x16f>\n    24d8:\te9 49 01 00 00       \tjmpq   2626 <perf_top__mmap_read_idx+0x2b8>\n    24dd:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    24e1:\t48 89 c7             \tmov    %rax,%rdi\n    24e4:\te8 85 dc ff ff       \tcallq  16e <perf_session__find_host_machine>\n    24e9:\t48 89 45 80          \tmov    %rax,-0x80(%rbp)\n    24ed:\te9 ab 00 00 00       \tjmpq   259d <perf_top__mmap_read_idx+0x22f>\n    24f2:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    24f9:\t48 8b 80 b0 00 00 00 \tmov    0xb0(%rax),%rax\n    2500:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    2504:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    250b:\t48 89 90 b0 00 00 00 \tmov    %rdx,0xb0(%rax)\n    2512:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    2519:\t0f b6 80 e8 00 00 00 \tmovzbl 0xe8(%rax),%eax\n    2520:\t84 c0                \ttest   %al,%al\n    2522:\t74 05                \tje     2529 <perf_top__mmap_read_idx+0x1bb>\n    2524:\te9 fd 00 00 00       \tjmpq   2626 <perf_top__mmap_read_idx+0x2b8>\n    2529:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    252d:\t48 89 c7             \tmov    %rax,%rdi\n    2530:\te8 39 dc ff ff       \tcallq  16e <perf_session__find_host_machine>\n    2535:\t48 89 45 80          \tmov    %rax,-0x80(%rbp)\n    2539:\teb 62                \tjmp    259d <perf_top__mmap_read_idx+0x22f>\n    253b:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    2542:\t48 8b 80 d0 00 00 00 \tmov    0xd0(%rax),%rax\n    2549:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    254d:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    2554:\t48 89 90 d0 00 00 00 \tmov    %rdx,0xd0(%rax)\n    255b:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    255f:\t8b 40 10             \tmov    0x10(%rax),%eax\n    2562:\t89 c2                \tmov    %eax,%edx\n    2564:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    2568:\t89 d6                \tmov    %edx,%esi\n    256a:\t48 89 c7             \tmov    %rax,%rdi\n    256d:\te8 35 dc ff ff       \tcallq  1a7 <perf_session__find_machine>\n    2572:\t48 89 45 80          \tmov    %rax,-0x80(%rbp)\n    2576:\teb 25                \tjmp    259d <perf_top__mmap_read_idx+0x22f>\n    2578:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    257f:\t48 8b 80 c8 00 00 00 \tmov    0xc8(%rax),%rax\n    2586:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    258a:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    2591:\t48 89 90 c8 00 00 00 \tmov    %rdx,0xc8(%rax)\n    2598:\te9 89 00 00 00       \tjmpq   2626 <perf_top__mmap_read_idx+0x2b8>\n    259d:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    25a1:\t8b 00                \tmov    (%rax),%eax\n    25a3:\t83 f8 09             \tcmp    $0x9,%eax\n    25a6:\t75 24                \tjne    25cc <perf_top__mmap_read_idx+0x25e>\n    25a8:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    25af:\t48 8b 7d 80          \tmov    -0x80(%rbp),%rdi\n    25b3:\t48 8d 4d a0          \tlea    -0x60(%rbp),%rcx\n    25b7:\t48 8b 55 98          \tmov    -0x68(%rbp),%rdx\n    25bb:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n    25bf:\t49 89 f8             \tmov    %rdi,%r8\n    25c2:\t48 89 c7             \tmov    %rax,%rdi\n    25c5:\te8 dc f9 ff ff       \tcallq  1fa6 <perf_event__process_sample>\n    25ca:\teb 5a                \tjmp    2626 <perf_top__mmap_read_idx+0x2b8>\n    25cc:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    25d0:\t8b 00                \tmov    (%rax),%eax\n    25d2:\t83 f8 09             \tcmp    $0x9,%eax\n    25d5:\t77 38                \tja     260f <perf_top__mmap_read_idx+0x2a1>\n    25d7:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    25db:\t8b 00                \tmov    (%rax),%eax\n    25dd:\t48 8b 55 98          \tmov    -0x68(%rbp),%rdx\n    25e1:\t48 81 c2 90 00 00 00 \tadd    $0x90,%rdx\n    25e8:\t89 c6                \tmov    %eax,%esi\n    25ea:\t48 89 d7             \tmov    %rdx,%rdi\n    25ed:\te8 00 00 00 00       \tcallq  25f2 <perf_top__mmap_read_idx+0x284>\n    25f2:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    25f9:\t48 8b 4d 80          \tmov    -0x80(%rbp),%rcx\n    25fd:\t48 8d 55 a0          \tlea    -0x60(%rbp),%rdx\n    2601:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n    2605:\t48 89 c7             \tmov    %rax,%rdi\n    2608:\te8 00 00 00 00       \tcallq  260d <perf_top__mmap_read_idx+0x29f>\n    260d:\teb 17                \tjmp    2626 <perf_top__mmap_read_idx+0x2b8>\n    260f:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    2613:\t8b 80 c8 02 00 00    \tmov    0x2c8(%rax),%eax\n    2619:\t8d 50 01             \tlea    0x1(%rax),%edx\n    261c:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    2620:\t89 90 c8 02 00 00    \tmov    %edx,0x2c8(%rax)\n    2626:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    262d:\t48 8b 40 78          \tmov    0x78(%rax),%rax\n    2631:\t8b 95 64 ff ff ff    \tmov    -0x9c(%rbp),%edx\n    2637:\t89 d6                \tmov    %edx,%esi\n    2639:\t48 89 c7             \tmov    %rax,%rdi\n    263c:\te8 00 00 00 00       \tcallq  2641 <perf_top__mmap_read_idx+0x2d3>\n    2641:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n    2645:\t48 83 7d 90 00       \tcmpq   $0x0,-0x70(%rbp)\n    264a:\t0f 85 5c fd ff ff    \tjne    23ac <perf_top__mmap_read_idx+0x3e>\n    2650:\t90                   \tnop\n    2651:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2655:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    265c:\t00 00 \n    265e:\t74 05                \tje     2665 <perf_top__mmap_read_idx+0x2f7>\n    2660:\te8 00 00 00 00       \tcallq  2665 <perf_top__mmap_read_idx+0x2f7>\n    2665:\tc9                   \tleaveq \n    2666:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall perf_top__mmap_read_idx(__int64 a1,\n                                                    unsigned int a2) {\n  unsigned __int8 v3;\n  unsigned int v4;\n  __int64 v5;\n  __int64 v6;\n  unsigned int *v7;\n  __int64 v8;\n  char v9[Number];\n  __int64 v10;\n  unsigned __int64 v11;\n  v11 = __readfsqword(Number);\n  v6 = *(_QWORD *)(a1 + Number);\n  while (Number) {\n    v7 = (unsigned int *)perf_evlist__mmap_read(*(_QWORD *)(a1 + Number), a2);\n    if (!v7)\n      return __readfsqword(Number) ^ v11;\n    v4 = perf_session__parse_sample(v6, (__int64)v7, (__int64)v9);\n    if (v4) {\n      eprintf(Number L, String, v4);\n    } else {\n      v8 = perf_evlist__id2evsel(*(_QWORD *)(v6 + Number), v10);\n      if (!v8)\n        _assert_fail(String, String, Number, String);\n      v3 = v7[Number] & Number;\n      if (*v7 == Number)\n        ++*(_QWORD *)(a1 + Number);\n      if (v3 == Number) {\n        ++*(_QWORD *)(a1 + Number);\n      } else if (v3 <= Number) {\n        if (v3 == Number) {\n          ++*(_QWORD *)(a1 + Number);\n          v5 = perf_session__find_machine(v6, v7[Number]);\n          goto LABEL_20;\n        }\n        if (v3 <= Number) {\n          if (v3 == Number) {\n            ++*(_QWORD *)(a1 + Number);\n            if (!*(_BYTE *)(a1 + Number)) {\n            LABEL_15:\n              v5 = perf_session__find_host_machine(v6);\n            LABEL_20:\n              if (*v7 == Number) {\n                perf_event__process_sample(a1, (__int64)v7, v8, (__int64)v9,\n                                           v5);\n              } else if (*v7 > Number) {\n                ++*(_DWORD *)(v6 + Number);\n              } else {\n                hists__inc_nr_events(v8 + Number, *v7);\n                perf_event__process(a1, v7, v9, v5);\n              }\n            }\n          } else if (v3 == Number) {\n            ++*(_QWORD *)(a1 + Number);\n            if (!*(_BYTE *)(a1 + Number))\n              goto LABEL_15;\n          }\n        }\n      }\n    }\n  }\n}", "code_t": "void __cdecl perf_top__mmap_read_idx(perf_top *top, int idx) {\n  u8 origin;\n  unsigned int ret;\n  machine *machine;\n  perf_session *session;\n  perf_event *event;\n  perf_evsel *evsel;\n  perf_sample <span class=\"supfact\">sample</span>;\n  unsigned __int64 v9;\n  v9 = __readfsqword(Number);\n  session = top->session;\n  while (Number) {\n    event =\n        (perf_event *)perf_evlist__mmap_read(top->evlist, (unsigned int)idx);\n    if (!event)\n      break;\n    ret = perf_session__parse_sample(session, event, &<span class=\"supfact\">sample</span>);\n    if (ret) {\n      eprintf(Number L, String, ret);\n    } else {\n      evsel = (perf_evsel *)perf_evlist__id2evsel(session->evlist,\n                                                  <span class=\"supfact\">sample</span>.id);\n      if (!evsel)\n        _assert_fail(String, String, Number, String);\n      origin = event->header.misc & Number;\n      if (event->header.type == Number)\n        ++top->samples;\n      if (origin == Number) {\n        ++top->guest_us_samples;\n      } else if (origin <= Number) {\n        if (origin == Number) {\n          ++top->guest_kernel_samples;\n          machine = perf_session__find_machine(session, event->ip.pid);\n          goto LABEL_20;\n        }\n        if (origin <= Number) {\n          if (origin == Number) {\n            ++top->kernel_samples;\n            if (!top->hide_kernel_symbols) {\n            LABEL_15:\n              machine = perf_session__find_host_machine(session);\n            LABEL_20:\n              if (event->header.type == Number) {\n                perf_event__process_sample(&top->tool, event, evsel,\n                                           &<span class=\"supfact\">sample</span>, machine);\n              } else if (event->header.type > Number) {\n                ++session->hists.stats.nr_unknown_events;\n              } else {\n                hists__inc_nr_events(&evsel->hists, event->header.type);\n                perf_event__process(top, event, &<span class=\"supfact\">sample</span>,\n                                    machine);\n              }\n            }\n          } else if (origin == Number) {\n            ++top->us_samples;\n            if (!top->hide_user_symbols)\n              goto LABEL_15;\n          }\n        }\n      }\n    }\n  }\n}", "var": [{"name": "v9", "type": "struct perf_sample { u64 ip; u32 pid; u32 tid; u64 time; u64 addr; u64 id; u64 stream_id; u64 period; u32 cpu; u32 raw_size; void * raw_data; ip_callchain * callchain; branch_stack * branch_stack; }", "pred_name": "sample", "ref_name": "sample", "ref_type": "struct perf_sample { u64 ip; u32 pid; u32 tid; u64 time; u64 addr; u64 id; u64 stream_id; u64 period; u32 cpu; u32 raw_size; void * raw_data; ip_callchain * callchain; branch_stack * branch_stack; }"}], "body_in_train": false}, {"repo_owner": "wlanjie", "repo_name": "MacFFPlay", "path": "wlanjie/MacFFPlay/0a4e75d878dfdf151f1ae9890f3da2e0ba566268bfd99916c77cbf6533e904d4", "path_in_repo": "wlanjie/MacFFPlay/ffmpeg/libavformat/mpegts.o", "objdump": "0000000000001de8 <read_sl_header>:\n    1de8:\t48 81 ec 28 01 00 00 \tsub    $0x128,%rsp\n    1def:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n    1df4:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n    1df9:\t48 89 54 24 08       \tmov    %rdx,0x8(%rsp)\n    1dfe:\t89 4c 24 04          \tmov    %ecx,0x4(%rsp)\n    1e02:\tc7 84 24 1c 01 00 00 \tmovl   $0x0,0x11c(%rsp)\n    1e09:\t00 00 00 00 \n    1e0d:\tc7 84 24 ec 00 00 00 \tmovl   $0x0,0xec(%rsp)\n    1e14:\t00 00 00 00 \n    1e18:\tc7 84 24 18 01 00 00 \tmovl   $0x0,0x118(%rsp)\n    1e1f:\t00 00 00 00 \n    1e23:\tc7 84 24 14 01 00 00 \tmovl   $0x0,0x114(%rsp)\n    1e2a:\t00 00 00 00 \n    1e2e:\tc7 84 24 10 01 00 00 \tmovl   $0x0,0x110(%rsp)\n    1e35:\t00 00 00 00 \n    1e39:\tc7 84 24 0c 01 00 00 \tmovl   $0x0,0x10c(%rsp)\n    1e40:\t00 00 00 00 \n    1e44:\tc7 84 24 08 01 00 00 \tmovl   $0x0,0x108(%rsp)\n    1e4b:\t00 00 00 00 \n    1e4f:\tc7 84 24 04 01 00 00 \tmovl   $0xffffffff,0x104(%rsp)\n    1e56:\tff ff ff ff \n    1e5a:\tc7 84 24 00 01 00 00 \tmovl   $0xffffffff,0x100(%rsp)\n    1e61:\tff ff ff ff \n    1e65:\t48 b8 00 00 00 00 00 \tmovabs $0x8000000000000000,%rax\n    1e6c:\t00 00 80 \n    1e6f:\t48 89 84 24 f8 00 00 \tmov    %rax,0xf8(%rsp)\n    1e76:\t00 \n    1e77:\t48 89 84 24 f0 00 00 \tmov    %rax,0xf0(%rsp)\n    1e7e:\t00 \n    1e7f:\t8b 44 24 04          \tmov    0x4(%rsp),%eax\n    1e83:\tba 80 00 00 00       \tmov    $0x80,%edx\n    1e88:\t3d 80 00 00 00       \tcmp    $0x80,%eax\n    1e8d:\t0f 47 c2             \tcmova  %edx,%eax\n    1e90:\t89 84 24 e8 00 00 00 \tmov    %eax,0xe8(%rsp)\n    1e97:\t8b 84 24 e8 00 00 00 \tmov    0xe8(%rsp),%eax\n    1e9e:\t48 63 d0             \tmovslq %eax,%rdx\n    1ea1:\t48 8b 4c 24 08       \tmov    0x8(%rsp),%rcx\n    1ea6:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    1eab:\t48 89 ce             \tmov    %rcx,%rsi\n    1eae:\t48 89 c7             \tmov    %rax,%rdi\n    1eb1:\te8 00 00 00 00       \tcallq  1eb6 <read_sl_header+0xce>\n    1eb6:\t8b 84 24 e8 00 00 00 \tmov    0xe8(%rsp),%eax\n    1ebd:\t8d 14 c5 00 00 00 00 \tlea    0x0(,%rax,8),%edx\n    1ec4:\t48 8d 4c 24 20       \tlea    0x20(%rsp),%rcx\n    1ec9:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    1ed0:\t00 \n    1ed1:\t48 89 ce             \tmov    %rcx,%rsi\n    1ed4:\t48 89 c7             \tmov    %rax,%rdi\n    1ed7:\te8 25 e4 ff ff       \tcallq  301 <init_get_bits>\n    1edc:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    1ee1:\t8b 00                \tmov    (%rax),%eax\n    1ee3:\t85 c0                \ttest   %eax,%eax\n    1ee5:\t74 17                \tje     1efe <read_sl_header+0x116>\n    1ee7:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    1eee:\t00 \n    1eef:\t48 89 c7             \tmov    %rax,%rdi\n    1ef2:\te8 b7 e2 ff ff       \tcallq  1ae <get_bits1>\n    1ef7:\t89 84 24 1c 01 00 00 \tmov    %eax,0x11c(%rsp)\n    1efe:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    1f03:\t8b 40 04             \tmov    0x4(%rax),%eax\n    1f06:\t85 c0                \ttest   %eax,%eax\n    1f08:\t74 17                \tje     1f21 <read_sl_header+0x139>\n    1f0a:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    1f11:\t00 \n    1f12:\t48 89 c7             \tmov    %rax,%rdi\n    1f15:\te8 94 e2 ff ff       \tcallq  1ae <get_bits1>\n    1f1a:\t89 84 24 ec 00 00 00 \tmov    %eax,0xec(%rsp)\n    1f21:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    1f26:\t8b 00                \tmov    (%rax),%eax\n    1f28:\t85 c0                \ttest   %eax,%eax\n    1f2a:\t75 25                \tjne    1f51 <read_sl_header+0x169>\n    1f2c:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    1f31:\t8b 40 04             \tmov    0x4(%rax),%eax\n    1f34:\t85 c0                \ttest   %eax,%eax\n    1f36:\t75 19                \tjne    1f51 <read_sl_header+0x169>\n    1f38:\tc7 84 24 ec 00 00 00 \tmovl   $0x1,0xec(%rsp)\n    1f3f:\t01 00 00 00 \n    1f43:\t8b 84 24 ec 00 00 00 \tmov    0xec(%rsp),%eax\n    1f4a:\t89 84 24 1c 01 00 00 \tmov    %eax,0x11c(%rsp)\n    1f51:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    1f56:\t8b 40 20             \tmov    0x20(%rax),%eax\n    1f59:\t85 c0                \ttest   %eax,%eax\n    1f5b:\t7e 17                \tjle    1f74 <read_sl_header+0x18c>\n    1f5d:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    1f64:\t00 \n    1f65:\t48 89 c7             \tmov    %rax,%rdi\n    1f68:\te8 41 e2 ff ff       \tcallq  1ae <get_bits1>\n    1f6d:\t89 84 24 18 01 00 00 \tmov    %eax,0x118(%rsp)\n    1f74:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    1f79:\t8b 40 14             \tmov    0x14(%rax),%eax\n    1f7c:\t85 c0                \ttest   %eax,%eax\n    1f7e:\t74 17                \tje     1f97 <read_sl_header+0x1af>\n    1f80:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    1f87:\t00 \n    1f88:\t48 89 c7             \tmov    %rax,%rdi\n    1f8b:\te8 1e e2 ff ff       \tcallq  1ae <get_bits1>\n    1f90:\t89 84 24 14 01 00 00 \tmov    %eax,0x114(%rsp)\n    1f97:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    1f9c:\t8b 40 0c             \tmov    0xc(%rax),%eax\n    1f9f:\t85 c0                \ttest   %eax,%eax\n    1fa1:\t74 17                \tje     1fba <read_sl_header+0x1d2>\n    1fa3:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    1faa:\t00 \n    1fab:\t48 89 c7             \tmov    %rax,%rdi\n    1fae:\te8 fb e1 ff ff       \tcallq  1ae <get_bits1>\n    1fb3:\t89 84 24 10 01 00 00 \tmov    %eax,0x110(%rsp)\n    1fba:\t83 bc 24 10 01 00 00 \tcmpl   $0x0,0x110(%rsp)\n    1fc1:\t00 \n    1fc2:\t74 1c                \tje     1fe0 <read_sl_header+0x1f8>\n    1fc4:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    1fcb:\t00 \n    1fcc:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    1fd1:\t48 89 c7             \tmov    %rax,%rdi\n    1fd4:\te8 c8 e0 ff ff       \tcallq  a1 <get_bits>\n    1fd9:\t89 84 24 0c 01 00 00 \tmov    %eax,0x10c(%rsp)\n    1fe0:\t83 bc 24 14 01 00 00 \tcmpl   $0x0,0x114(%rsp)\n    1fe7:\t00 \n    1fe8:\t0f 85 e7 01 00 00    \tjne    21d5 <read_sl_header+0x3ed>\n    1fee:\t83 bc 24 10 01 00 00 \tcmpl   $0x0,0x110(%rsp)\n    1ff5:\t00 \n    1ff6:\t74 0e                \tje     2006 <read_sl_header+0x21e>\n    1ff8:\t83 bc 24 0c 01 00 00 \tcmpl   $0x0,0x10c(%rsp)\n    1fff:\t00 \n    2000:\t0f 84 cf 01 00 00    \tje     21d5 <read_sl_header+0x3ed>\n    2006:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    200b:\t8b 40 34             \tmov    0x34(%rax),%eax\n    200e:\t85 c0                \ttest   %eax,%eax\n    2010:\t74 1a                \tje     202c <read_sl_header+0x244>\n    2012:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    2017:\t8b 50 34             \tmov    0x34(%rax),%edx\n    201a:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    2021:\t00 \n    2022:\t89 d6                \tmov    %edx,%esi\n    2024:\t48 89 c7             \tmov    %rax,%rdi\n    2027:\te8 06 e0 ff ff       \tcallq  32 <skip_bits_long>\n    202c:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    2031:\t8b 40 2c             \tmov    0x2c(%rax),%eax\n    2034:\t85 c0                \ttest   %eax,%eax\n    2036:\t74 2e                \tje     2066 <read_sl_header+0x27e>\n    2038:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    203f:\t00 \n    2040:\t48 89 c7             \tmov    %rax,%rdi\n    2043:\te8 66 e1 ff ff       \tcallq  1ae <get_bits1>\n    2048:\t85 c0                \ttest   %eax,%eax\n    204a:\t74 1a                \tje     2066 <read_sl_header+0x27e>\n    204c:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    2051:\t8b 50 2c             \tmov    0x2c(%rax),%edx\n    2054:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    205b:\t00 \n    205c:\t89 d6                \tmov    %edx,%esi\n    205e:\t48 89 c7             \tmov    %rax,%rdi\n    2061:\te8 02 e1 ff ff       \tcallq  168 <skip_bits>\n    2066:\t83 bc 24 18 01 00 00 \tcmpl   $0x0,0x118(%rsp)\n    206d:\t00 \n    206e:\t74 1a                \tje     208a <read_sl_header+0x2a2>\n    2070:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    2075:\t8b 50 20             \tmov    0x20(%rax),%edx\n    2078:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    207f:\t00 \n    2080:\t89 d6                \tmov    %edx,%esi\n    2082:\t48 89 c7             \tmov    %rax,%rdi\n    2085:\te8 a8 df ff ff       \tcallq  32 <skip_bits_long>\n    208a:\t83 bc 24 1c 01 00 00 \tcmpl   $0x0,0x11c(%rsp)\n    2091:\t00 \n    2092:\t74 7c                \tje     2110 <read_sl_header+0x328>\n    2094:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    2099:\t8b 40 08             \tmov    0x8(%rax),%eax\n    209c:\t85 c0                \ttest   %eax,%eax\n    209e:\t74 10                \tje     20b0 <read_sl_header+0x2c8>\n    20a0:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    20a7:\t00 \n    20a8:\t48 89 c7             \tmov    %rax,%rdi\n    20ab:\te8 fe e0 ff ff       \tcallq  1ae <get_bits1>\n    20b0:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    20b5:\t8b 40 30             \tmov    0x30(%rax),%eax\n    20b8:\t85 c0                \ttest   %eax,%eax\n    20ba:\t7e 1a                \tjle    20d6 <read_sl_header+0x2ee>\n    20bc:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    20c1:\t8b 50 30             \tmov    0x30(%rax),%edx\n    20c4:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    20cb:\t00 \n    20cc:\t89 d6                \tmov    %edx,%esi\n    20ce:\t48 89 c7             \tmov    %rax,%rdi\n    20d1:\te8 5c df ff ff       \tcallq  32 <skip_bits_long>\n    20d6:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    20db:\t8b 40 10             \tmov    0x10(%rax),%eax\n    20de:\t85 c0                \ttest   %eax,%eax\n    20e0:\t74 2e                \tje     2110 <read_sl_header+0x328>\n    20e2:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    20e9:\t00 \n    20ea:\t48 89 c7             \tmov    %rax,%rdi\n    20ed:\te8 bc e0 ff ff       \tcallq  1ae <get_bits1>\n    20f2:\t89 84 24 04 01 00 00 \tmov    %eax,0x104(%rsp)\n    20f9:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    2100:\t00 \n    2101:\t48 89 c7             \tmov    %rax,%rdi\n    2104:\te8 a5 e0 ff ff       \tcallq  1ae <get_bits1>\n    2109:\t89 84 24 00 01 00 00 \tmov    %eax,0x100(%rsp)\n    2110:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    2115:\t8b 40 28             \tmov    0x28(%rax),%eax\n    2118:\t85 c0                \ttest   %eax,%eax\n    211a:\t74 17                \tje     2133 <read_sl_header+0x34b>\n    211c:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    2123:\t00 \n    2124:\t48 89 c7             \tmov    %rax,%rdi\n    2127:\te8 82 e0 ff ff       \tcallq  1ae <get_bits1>\n    212c:\t89 84 24 08 01 00 00 \tmov    %eax,0x108(%rsp)\n    2133:\t83 bc 24 04 01 00 00 \tcmpl   $0x1,0x104(%rsp)\n    213a:\t01 \n    213b:\t75 22                \tjne    215f <read_sl_header+0x377>\n    213d:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    2142:\t8b 50 1c             \tmov    0x1c(%rax),%edx\n    2145:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    214c:\t00 \n    214d:\t89 d6                \tmov    %edx,%esi\n    214f:\t48 89 c7             \tmov    %rax,%rdi\n    2152:\te8 4d fc ff ff       \tcallq  1da4 <get_ts64>\n    2157:\t48 89 84 24 f8 00 00 \tmov    %rax,0xf8(%rsp)\n    215e:\t00 \n    215f:\t83 bc 24 00 01 00 00 \tcmpl   $0x1,0x100(%rsp)\n    2166:\t01 \n    2167:\t75 22                \tjne    218b <read_sl_header+0x3a3>\n    2169:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    216e:\t8b 50 1c             \tmov    0x1c(%rax),%edx\n    2171:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    2178:\t00 \n    2179:\t89 d6                \tmov    %edx,%esi\n    217b:\t48 89 c7             \tmov    %rax,%rdi\n    217e:\te8 21 fc ff ff       \tcallq  1da4 <get_ts64>\n    2183:\t48 89 84 24 f0 00 00 \tmov    %rax,0xf0(%rsp)\n    218a:\t00 \n    218b:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    2190:\t8b 40 24             \tmov    0x24(%rax),%eax\n    2193:\t85 c0                \ttest   %eax,%eax\n    2195:\t7e 1a                \tjle    21b1 <read_sl_header+0x3c9>\n    2197:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    219c:\t8b 50 24             \tmov    0x24(%rax),%edx\n    219f:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    21a6:\t00 \n    21a7:\t89 d6                \tmov    %edx,%esi\n    21a9:\t48 89 c7             \tmov    %rax,%rdi\n    21ac:\te8 81 de ff ff       \tcallq  32 <skip_bits_long>\n    21b1:\t83 bc 24 08 01 00 00 \tcmpl   $0x0,0x108(%rsp)\n    21b8:\t00 \n    21b9:\t74 1a                \tje     21d5 <read_sl_header+0x3ed>\n    21bb:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    21c0:\t8b 50 28             \tmov    0x28(%rax),%edx\n    21c3:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    21ca:\t00 \n    21cb:\t89 d6                \tmov    %edx,%esi\n    21cd:\t48 89 c7             \tmov    %rax,%rdi\n    21d0:\te8 5d de ff ff       \tcallq  32 <skip_bits_long>\n    21d5:\t48 b8 00 00 00 00 00 \tmovabs $0x8000000000000000,%rax\n    21dc:\t00 00 80 \n    21df:\t48 39 84 24 f8 00 00 \tcmp    %rax,0xf8(%rsp)\n    21e6:\t00 \n    21e7:\t74 11                \tje     21fa <read_sl_header+0x412>\n    21e9:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    21ee:\t48 8b 94 24 f8 00 00 \tmov    0xf8(%rsp),%rdx\n    21f5:\t00 \n    21f6:\t48 89 50 58          \tmov    %rdx,0x58(%rax)\n    21fa:\t48 b8 00 00 00 00 00 \tmovabs $0x8000000000000000,%rax\n    2201:\t00 00 80 \n    2204:\t48 39 84 24 f0 00 00 \tcmp    %rax,0xf0(%rsp)\n    220b:\t00 \n    220c:\t74 11                \tje     221f <read_sl_header+0x437>\n    220e:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2213:\t48 8b 94 24 f0 00 00 \tmov    0xf0(%rsp),%rdx\n    221a:\t00 \n    221b:\t48 89 50 50          \tmov    %rdx,0x50(%rax)\n    221f:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    2224:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n    2227:\t85 c0                \ttest   %eax,%eax\n    2229:\t74 36                \tje     2261 <read_sl_header+0x479>\n    222b:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    2230:\t8b 40 18             \tmov    0x18(%rax),%eax\n    2233:\t85 c0                \ttest   %eax,%eax\n    2235:\t74 2a                \tje     2261 <read_sl_header+0x479>\n    2237:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    223c:\t8b 40 18             \tmov    0x18(%rax),%eax\n    223f:\t89 c2                \tmov    %eax,%edx\n    2241:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    2246:\t8b 70 1c             \tmov    0x1c(%rax),%esi\n    2249:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    224e:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    2252:\t89 d1                \tmov    %edx,%ecx\n    2254:\tba 01 00 00 00       \tmov    $0x1,%edx\n    2259:\t48 89 c7             \tmov    %rax,%rdi\n    225c:\te8 00 00 00 00       \tcallq  2261 <read_sl_header+0x479>\n    2261:\t48 8d 84 24 c0 00 00 \tlea    0xc0(%rsp),%rax\n    2268:\t00 \n    2269:\t48 89 c7             \tmov    %rax,%rdi\n    226c:\te8 b3 dd ff ff       \tcallq  24 <get_bits_count>\n    2271:\t83 c0 07             \tadd    $0x7,%eax\n    2274:\tc1 f8 03             \tsar    $0x3,%eax\n    2277:\t48 81 c4 28 01 00 00 \tadd    $0x128,%rsp\n    227e:\tc3                   \tretq   ", "code_s": "__int64 __fastcall read_sl_header(_QWORD *a1, _DWORD *a2, const void *a3,\n                                  unsigned int a4) {\n  int v4;\n  char dest[Number];\n  char v7[Number];\n  int v8;\n  int v9;\n  unsigned __int64 v10;\n  unsigned __int64 v11;\n  int v12;\n  int v13;\n  int v14;\n  int v15;\n  int v16;\n  int v17;\n  int v18;\n  int v19;\n  v19 = Number;\n  v9 = Number;\n  v18 = Number;\n  v17 = Number;\n  v16 = Number;\n  v15 = Number;\n  v14 = Number;\n  v13 = Number;\n  v12 = Number;\n  v11 = Number;\n  v10 = Number;\n  v4 = a4;\n  if (a4 > Number)\n    v4 = Number;\n  v8 = v4;\n  memcpy(dest, a3, v4);\n  init_get_bits((__int64)v7, (__int64)dest, Number * v8);\n  if (*a2)\n    v19 = get_bits1((__int64)v7);\n  if (a2[Number])\n    v9 = get_bits1((__int64)v7);\n  if (!*a2 && !a2[Number]) {\n    v9 = Number;\n    v19 = Number;\n  }\n  if ((int)a2[Number] > Number)\n    v18 = get_bits1((__int64)v7);\n  if (a2[Number])\n    v17 = get_bits1((__int64)v7);\n  if (a2[Number])\n    v16 = get_bits1((__int64)v7);\n  if (v16)\n    v15 = get_bits((__int64)v7, Number);\n  if (!v17 && (!v16 || v15)) {\n    if (a2[Number])\n      skip_bits_long((__int64)v7, a2[Number]);\n    if (a2[Number] && (unsigned int)get_bits1((__int64)v7))\n      skip_bits((__int64)v7, a2[Number]);\n    if (v18)\n      skip_bits_long((__int64)v7, a2[Number]);\n    if (v19) {\n      if (a2[Number])\n        get_bits1((__int64)v7);\n      if ((int)a2[Number] > Number)\n        skip_bits_long((__int64)v7, a2[Number]);\n      if (a2[Number]) {\n        v13 = get_bits1((__int64)v7);\n        v12 = get_bits1((__int64)v7);\n      }\n    }\n    if (a2[Number])\n      v14 = get_bits1((__int64)v7);\n    if (v13 == Number)\n      v11 = get_ts64((__int64)v7, a2[Number]);\n    if (v12 == Number)\n      v10 = get_ts64((__int64)v7, a2[Number]);\n    if ((int)a2[Number] > Number)\n      skip_bits_long((__int64)v7, a2[Number]);\n    if (v14)\n      skip_bits_long((__int64)v7, a2[Number]);\n  }\n  if (v11 != Number)\n    a1[Number] = v11;\n  if (v10 != Number)\n    a1[Number] = v10;\n  if (a2[Number] && a2[Number])\n    avpriv_set_pts_info(a1[Number], (unsigned int)a2[Number], Number L,\n                        (unsigned int)a2[Number]);\n  return (unsigned int)((int)(get_bits_count((__int64)v7) + Number) >> Number);\n}", "code_t": "int __cdecl read_sl_header(PESContext_0 *pes, SLConfigDescr_0 *sl,\n                           const uint8_t *buf, int buf_size) {\n  int v4;\n  uint8_t buf_padded[Number];\n  GetBitContext_0 <span class=\"supfact\">gb</span>;\n  int buf_padded_size;\n  int au_end_flag;\n  int64_t cts;\n  int64_t dts;\n  int cts_flag;\n  int dts_flag;\n  int inst_bitrate_flag;\n  int padding_bits;\n  int padding_flag;\n  int idle_flag;\n  int ocr_flag;\n  int au_start_flag;\n  au_start_flag = Number;\n  au_end_flag = Number;\n  ocr_flag = Number;\n  idle_flag = Number;\n  padding_flag = Number;\n  padding_bits = Number;\n  inst_bitrate_flag = Number;\n  dts_flag = Number;\n  cts_flag = Number;\n  dts = Number;\n  cts = Number;\n  v4 = buf_size;\n  if ((unsigned int)buf_size > Number)\n    v4 = Number;\n  buf_padded_size = v4;\n  memcpy(buf_padded, buf, v4);\n  init_get_bits(&<span class=\"supfact\">gb</span>, buf_padded, Number * buf_padded_size);\n  if (sl->use_au_start)\n    au_start_flag = get_bits1(&<span class=\"supfact\">gb</span>);\n  if (sl->use_au_end)\n    au_end_flag = get_bits1(&<span class=\"supfact\">gb</span>);\n  if (!sl->use_au_start && !sl->use_au_end) {\n    au_end_flag = Number;\n    au_start_flag = Number;\n  }\n  if (sl->ocr_len > Number)\n    ocr_flag = get_bits1(&<span class=\"supfact\">gb</span>);\n  if (sl->use_idle)\n    idle_flag = get_bits1(&<span class=\"supfact\">gb</span>);\n  if (sl->use_padding)\n    padding_flag = get_bits1(&<span class=\"supfact\">gb</span>);\n  if (padding_flag)\n    padding_bits = get_bits(&<span class=\"supfact\">gb</span>, Number);\n  if (!idle_flag && (!padding_flag || padding_bits)) {\n    if (sl->packet_seq_num_len)\n      skip_bits_long(&<span class=\"supfact\">gb</span>, sl->packet_seq_num_len);\n    if (sl->degr_prior_len && get_bits1(&<span class=\"supfact\">gb</span>))\n      skip_bits(&<span class=\"supfact\">gb</span>, sl->degr_prior_len);\n    if (ocr_flag)\n      skip_bits_long(&<span class=\"supfact\">gb</span>, sl->ocr_len);\n    if (au_start_flag) {\n      if (sl->use_rand_acc_pt)\n        get_bits1(&<span class=\"supfact\">gb</span>);\n      if (sl->au_seq_num_len > Number)\n        skip_bits_long(&<span class=\"supfact\">gb</span>, sl->au_seq_num_len);\n      if (sl->use_timestamps) {\n        dts_flag = get_bits1(&<span class=\"supfact\">gb</span>);\n        cts_flag = get_bits1(&<span class=\"supfact\">gb</span>);\n      }\n    }\n    if (sl->inst_bitrate_len)\n      inst_bitrate_flag = get_bits1(&<span class=\"supfact\">gb</span>);\n    if (dts_flag == Number)\n      dts = get_ts64(&<span class=\"supfact\">gb</span>, sl->timestamp_len);\n    if (cts_flag == Number)\n      cts = get_ts64(&<span class=\"supfact\">gb</span>, sl->timestamp_len);\n    if (sl->au_len > Number)\n      skip_bits_long(&<span class=\"supfact\">gb</span>, sl->au_len);\n    if (inst_bitrate_flag)\n      skip_bits_long(&<span class=\"supfact\">gb</span>, sl->inst_bitrate_len);\n  }\n  if (dts != Number)\n    pes->dts = dts;\n  if (cts != Number)\n    pes->pts = cts;\n  if (sl->timestamp_len && sl->timestamp_res)\n    avpriv_set_pts_info(pes->st, (unsigned int)sl->timestamp_len, Number L,\n                        (unsigned int)sl->timestamp_res);\n  return (get_bits_count(&<span class=\"supfact\">gb</span>) + Number) >> Number;\n}", "var": [{"name": "v7", "type": "struct GetBitContext_0 { const uint8_t * buffer; const uint8_t * buffer_end; int index; int size_in_bits; int size_in_bits_plus8; PADDING (4); }", "pred_name": "gb0", "ref_name": "gb", "ref_type": "struct GetBitContext_0 { const uint8_t * buffer; const uint8_t * buffer_end; int index; int size_in_bits; int size_in_bits_plus8; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "wwAlarm", "repo_name": "Android", "path": "wwAlarm/Android/3c26caf86dce575006b23e76f5728a770aa0f66c0ad4d8f97a42c423dacdd0c6", "path_in_repo": "wwAlarm/Android/AVCodec/jni_ffmpeg/libavcodec/lagarith.o", "objdump": "000000000000142e <lag_decode_arith_plane>:\n    142e:\t48 81 ec b8 05 00 00 \tsub    $0x5b8,%rsp\n    1435:\t48 89 7c 24 28       \tmov    %rdi,0x28(%rsp)\n    143a:\t48 89 74 24 20       \tmov    %rsi,0x20(%rsp)\n    143f:\t89 54 24 1c          \tmov    %edx,0x1c(%rsp)\n    1443:\t89 4c 24 18          \tmov    %ecx,0x18(%rsp)\n    1447:\t44 89 44 24 14       \tmov    %r8d,0x14(%rsp)\n    144c:\t4c 89 4c 24 08       \tmov    %r9,0x8(%rsp)\n    1451:\tc7 84 24 ac 05 00 00 \tmovl   $0x0,0x5ac(%rsp)\n    1458:\t00 00 00 00 \n    145c:\tc7 84 24 a8 05 00 00 \tmovl   $0x0,0x5a8(%rsp)\n    1463:\t00 00 00 00 \n    1467:\tc7 84 24 a0 05 00 00 \tmovl   $0x1,0x5a0(%rsp)\n    146e:\t01 00 00 00 \n    1472:\t8b 84 24 c0 05 00 00 \tmov    0x5c0(%rsp),%eax\n    1479:\t48 63 d0             \tmovslq %eax,%rdx\n    147c:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1481:\t48 01 d0             \tadd    %rdx,%rax\n    1484:\t48 89 84 24 98 05 00 \tmov    %rax,0x598(%rsp)\n    148b:\t00 \n    148c:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    1491:\t48 8b 00             \tmov    (%rax),%rax\n    1494:\t48 89 44 24 30       \tmov    %rax,0x30(%rsp)\n    1499:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    149e:\tc7 80 48 0d 00 00 00 \tmovl   $0x0,0xd48(%rax)\n    14a5:\t00 00 00 \n    14a8:\t83 bc 24 c0 05 00 00 \tcmpl   $0x1,0x5c0(%rsp)\n    14af:\t01 \n    14b0:\t7f 0a                \tjg     14bc <lag_decode_arith_plane+0x8e>\n    14b2:\tb8 b7 b1 bb be       \tmov    $0xbebbb1b7,%eax\n    14b7:\te9 68 04 00 00       \tjmpq   1924 <lag_decode_arith_plane+0x4f6>\n    14bc:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    14c1:\t0f b6 00             \tmovzbl (%rax),%eax\n    14c4:\t0f b6 c0             \tmovzbl %al,%eax\n    14c7:\t89 84 24 94 05 00 00 \tmov    %eax,0x594(%rsp)\n    14ce:\t83 bc 24 94 05 00 00 \tcmpl   $0x3,0x594(%rsp)\n    14d5:\t03 \n    14d6:\t0f 8f 94 01 00 00    \tjg     1670 <lag_decode_arith_plane+0x242>\n    14dc:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    14e0:\t0f af 44 24 18       \timul   0x18(%rsp),%eax\n    14e5:\t89 84 24 a4 05 00 00 \tmov    %eax,0x5a4(%rsp)\n    14ec:\t83 bc 24 c0 05 00 00 \tcmpl   $0x4,0x5c0(%rsp)\n    14f3:\t04 \n    14f4:\t7f 0a                \tjg     1500 <lag_decode_arith_plane+0xd2>\n    14f6:\tb8 b7 b1 bb be       \tmov    $0xbebbb1b7,%eax\n    14fb:\te9 24 04 00 00       \tjmpq   1924 <lag_decode_arith_plane+0x4f6>\n    1500:\t83 bc 24 94 05 00 00 \tcmpl   $0x0,0x594(%rsp)\n    1507:\t00 \n    1508:\t74 2e                \tje     1538 <lag_decode_arith_plane+0x10a>\n    150a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    150f:\t48 83 c0 01          \tadd    $0x1,%rax\n    1513:\t8b 00                \tmov    (%rax),%eax\n    1515:\t39 84 24 a4 05 00 00 \tcmp    %eax,0x5a4(%rsp)\n    151c:\t76 1a                \tjbe    1538 <lag_decode_arith_plane+0x10a>\n    151e:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1523:\t48 83 c0 01          \tadd    $0x1,%rax\n    1527:\t8b 00                \tmov    (%rax),%eax\n    1529:\t89 84 24 a4 05 00 00 \tmov    %eax,0x5a4(%rsp)\n    1530:\t83 84 24 a0 05 00 00 \taddl   $0x4,0x5a0(%rsp)\n    1537:\t04 \n    1538:\t8b 84 24 c0 05 00 00 \tmov    0x5c0(%rsp),%eax\n    153f:\t8d 14 c5 00 00 00 00 \tlea    0x0(,%rax,8),%edx\n    1546:\t8b 8c 24 a0 05 00 00 \tmov    0x5a0(%rsp),%ecx\n    154d:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1552:\t48 01 c1             \tadd    %rax,%rcx\n    1555:\t48 8d 84 24 70 05 00 \tlea    0x570(%rsp),%rax\n    155c:\t00 \n    155d:\t48 89 ce             \tmov    %rcx,%rsi\n    1560:\t48 89 c7             \tmov    %rax,%rdi\n    1563:\te8 b7 ec ff ff       \tcallq  21f <init_get_bits>\n    1568:\t48 8d 94 24 70 05 00 \tlea    0x570(%rsp),%rdx\n    156f:\t00 \n    1570:\t48 8d 44 24 30       \tlea    0x30(%rsp),%rax\n    1575:\t48 89 d6             \tmov    %rdx,%rsi\n    1578:\t48 89 c7             \tmov    %rax,%rdi\n    157b:\te8 2c f2 ff ff       \tcallq  7ac <lag_read_prob_header>\n    1580:\t85 c0                \ttest   %eax,%eax\n    1582:\t79 0a                \tjns    158e <lag_decode_arith_plane+0x160>\n    1584:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    1589:\te9 96 03 00 00       \tjmpq   1924 <lag_decode_arith_plane+0x4f6>\n    158e:\t8b 44 24 14          \tmov    0x14(%rsp),%eax\n    1592:\t8b 94 24 a4 05 00 00 \tmov    0x5a4(%rsp),%edx\n    1599:\t29 c2                \tsub    %eax,%edx\n    159b:\t89 d0                \tmov    %edx,%eax\n    159d:\t89 c2                \tmov    %eax,%edx\n    159f:\t48 8d 8c 24 70 05 00 \tlea    0x570(%rsp),%rcx\n    15a6:\t00 \n    15a7:\t48 8d 44 24 30       \tlea    0x30(%rsp),%rax\n    15ac:\t48 89 ce             \tmov    %rcx,%rsi\n    15af:\t48 89 c7             \tmov    %rax,%rdi\n    15b2:\te8 00 00 00 00       \tcallq  15b7 <lag_decode_arith_plane+0x189>\n    15b7:\tc7 84 24 ac 05 00 00 \tmovl   $0x0,0x5ac(%rsp)\n    15be:\t00 00 00 00 \n    15c2:\teb 54                \tjmp    1618 <lag_decode_arith_plane+0x1ea>\n    15c4:\t8b 84 24 ac 05 00 00 \tmov    0x5ac(%rsp),%eax\n    15cb:\t0f af 44 24 14       \timul   0x14(%rsp),%eax\n    15d0:\t48 63 d0             \tmovslq %eax,%rdx\n    15d3:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    15d8:\t48 8d 3c 02          \tlea    (%rdx,%rax,1),%rdi\n    15dc:\t44 8b 84 24 94 05 00 \tmov    0x594(%rsp),%r8d\n    15e3:\t00 \n    15e4:\t8b 4c 24 14          \tmov    0x14(%rsp),%ecx\n    15e8:\t8b 54 24 1c          \tmov    0x1c(%rsp),%edx\n    15ec:\t48 8d 74 24 30       \tlea    0x30(%rsp),%rsi\n    15f1:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    15f6:\t45 89 c1             \tmov    %r8d,%r9d\n    15f9:\t41 89 c8             \tmov    %ecx,%r8d\n    15fc:\t89 d1                \tmov    %edx,%ecx\n    15fe:\t48 89 fa             \tmov    %rdi,%rdx\n    1601:\t48 89 c7             \tmov    %rax,%rdi\n    1604:\te8 fa f9 ff ff       \tcallq  1003 <lag_decode_line>\n    1609:\t01 84 24 a8 05 00 00 \tadd    %eax,0x5a8(%rsp)\n    1610:\t83 84 24 ac 05 00 00 \taddl   $0x1,0x5ac(%rsp)\n    1617:\t01 \n    1618:\t8b 84 24 ac 05 00 00 \tmov    0x5ac(%rsp),%eax\n    161f:\t3b 44 24 18          \tcmp    0x18(%rsp),%eax\n    1623:\t7c 9f                \tjl     15c4 <lag_decode_arith_plane+0x196>\n    1625:\t8b 84 24 a8 05 00 00 \tmov    0x5a8(%rsp),%eax\n    162c:\t39 84 24 a4 05 00 00 \tcmp    %eax,0x5a4(%rsp)\n    1633:\t0f 83 13 02 00 00    \tjae    184c <lag_decode_arith_plane+0x41e>\n    1639:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    163e:\t48 8b 00             \tmov    (%rax),%rax\n    1641:\t8b 8c 24 a4 05 00 00 \tmov    0x5a4(%rsp),%ecx\n    1648:\t8b 94 24 a8 05 00 00 \tmov    0x5a8(%rsp),%edx\n    164f:\t41 89 c8             \tmov    %ecx,%r8d\n    1652:\t89 d1                \tmov    %edx,%ecx\n    1654:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1659:\tbe 18 00 00 00       \tmov    $0x18,%esi\n    165e:\t48 89 c7             \tmov    %rax,%rdi\n    1661:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1666:\te8 00 00 00 00       \tcallq  166b <lag_decode_arith_plane+0x23d>\n    166b:\te9 dc 01 00 00       \tjmpq   184c <lag_decode_arith_plane+0x41e>\n    1670:\t83 bc 24 94 05 00 00 \tcmpl   $0x7,0x594(%rsp)\n    1677:\t07 \n    1678:\t0f 8f 2c 01 00 00    \tjg     17aa <lag_decode_arith_plane+0x37c>\n    167e:\t83 ac 24 94 05 00 00 \tsubl   $0x4,0x594(%rsp)\n    1685:\t04 \n    1686:\t83 bc 24 94 05 00 00 \tcmpl   $0x0,0x594(%rsp)\n    168d:\t00 \n    168e:\t0f 8e 9a 00 00 00    \tjle    172e <lag_decode_arith_plane+0x300>\n    1694:\tc7 84 24 ac 05 00 00 \tmovl   $0x0,0x5ac(%rsp)\n    169b:\t00 00 00 00 \n    169f:\teb 77                \tjmp    1718 <lag_decode_arith_plane+0x2ea>\n    16a1:\t8b 84 24 ac 05 00 00 \tmov    0x5ac(%rsp),%eax\n    16a8:\t0f af 44 24 14       \timul   0x14(%rsp),%eax\n    16ad:\t48 63 d0             \tmovslq %eax,%rdx\n    16b0:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    16b5:\t48 8d 34 02          \tlea    (%rdx,%rax,1),%rsi\n    16b9:\t44 8b 84 24 94 05 00 \tmov    0x594(%rsp),%r8d\n    16c0:\t00 \n    16c1:\t8b 7c 24 1c          \tmov    0x1c(%rsp),%edi\n    16c5:\t48 8b 8c 24 98 05 00 \tmov    0x598(%rsp),%rcx\n    16cc:\t00 \n    16cd:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n    16d2:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    16d7:\t45 89 c1             \tmov    %r8d,%r9d\n    16da:\t41 89 f8             \tmov    %edi,%r8d\n    16dd:\t48 89 c7             \tmov    %rax,%rdi\n    16e0:\te8 ba fa ff ff       \tcallq  119f <lag_decode_zero_run_line>\n    16e5:\t89 84 24 90 05 00 00 \tmov    %eax,0x590(%rsp)\n    16ec:\t83 bc 24 90 05 00 00 \tcmpl   $0x0,0x590(%rsp)\n    16f3:\t00 \n    16f4:\t79 0c                \tjns    1702 <lag_decode_arith_plane+0x2d4>\n    16f6:\t8b 84 24 90 05 00 00 \tmov    0x590(%rsp),%eax\n    16fd:\te9 22 02 00 00       \tjmpq   1924 <lag_decode_arith_plane+0x4f6>\n    1702:\t8b 84 24 90 05 00 00 \tmov    0x590(%rsp),%eax\n    1709:\t48 98                \tcltq   \n    170b:\t48 01 44 24 08       \tadd    %rax,0x8(%rsp)\n    1710:\t83 84 24 ac 05 00 00 \taddl   $0x1,0x5ac(%rsp)\n    1717:\t01 \n    1718:\t8b 84 24 ac 05 00 00 \tmov    0x5ac(%rsp),%eax\n    171f:\t3b 44 24 18          \tcmp    0x18(%rsp),%eax\n    1723:\t0f 8c 78 ff ff ff    \tjl     16a1 <lag_decode_arith_plane+0x273>\n    1729:\te9 1e 01 00 00       \tjmpq   184c <lag_decode_arith_plane+0x41e>\n    172e:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    1732:\t0f af 44 24 18       \timul   0x18(%rsp),%eax\n    1737:\t39 84 24 c0 05 00 00 \tcmp    %eax,0x5c0(%rsp)\n    173e:\t7d 0a                \tjge    174a <lag_decode_arith_plane+0x31c>\n    1740:\tb8 b7 b1 bb be       \tmov    $0xbebbb1b7,%eax\n    1745:\te9 da 01 00 00       \tjmpq   1924 <lag_decode_arith_plane+0x4f6>\n    174a:\tc7 84 24 ac 05 00 00 \tmovl   $0x0,0x5ac(%rsp)\n    1751:\t00 00 00 00 \n    1755:\teb 41                \tjmp    1798 <lag_decode_arith_plane+0x36a>\n    1757:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    175b:\t48 63 d0             \tmovslq %eax,%rdx\n    175e:\t8b 84 24 ac 05 00 00 \tmov    0x5ac(%rsp),%eax\n    1765:\t0f af 44 24 14       \timul   0x14(%rsp),%eax\n    176a:\t48 63 c8             \tmovslq %eax,%rcx\n    176d:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    1772:\t48 01 c1             \tadd    %rax,%rcx\n    1775:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    177a:\t48 89 c6             \tmov    %rax,%rsi\n    177d:\t48 89 cf             \tmov    %rcx,%rdi\n    1780:\te8 00 00 00 00       \tcallq  1785 <lag_decode_arith_plane+0x357>\n    1785:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    1789:\t48 98                \tcltq   \n    178b:\t48 01 44 24 08       \tadd    %rax,0x8(%rsp)\n    1790:\t83 84 24 ac 05 00 00 \taddl   $0x1,0x5ac(%rsp)\n    1797:\t01 \n    1798:\t8b 84 24 ac 05 00 00 \tmov    0x5ac(%rsp),%eax\n    179f:\t3b 44 24 18          \tcmp    0x18(%rsp),%eax\n    17a3:\t7c b2                \tjl     1757 <lag_decode_arith_plane+0x329>\n    17a5:\te9 a2 00 00 00       \tjmpq   184c <lag_decode_arith_plane+0x41e>\n    17aa:\t81 bc 24 94 05 00 00 \tcmpl   $0xff,0x594(%rsp)\n    17b1:\tff 00 00 00 \n    17b5:\t75 63                \tjne    181a <lag_decode_arith_plane+0x3ec>\n    17b7:\tc7 84 24 ac 05 00 00 \tmovl   $0x0,0x5ac(%rsp)\n    17be:\t00 00 00 00 \n    17c2:\teb 3f                \tjmp    1803 <lag_decode_arith_plane+0x3d5>\n    17c4:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    17c8:\t48 63 d0             \tmovslq %eax,%rdx\n    17cb:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    17d0:\t48 83 c0 01          \tadd    $0x1,%rax\n    17d4:\t0f b6 00             \tmovzbl (%rax),%eax\n    17d7:\t0f b6 c0             \tmovzbl %al,%eax\n    17da:\t8b 8c 24 ac 05 00 00 \tmov    0x5ac(%rsp),%ecx\n    17e1:\t0f af 4c 24 14       \timul   0x14(%rsp),%ecx\n    17e6:\t48 63 f1             \tmovslq %ecx,%rsi\n    17e9:\t48 8b 4c 24 20       \tmov    0x20(%rsp),%rcx\n    17ee:\t48 01 f1             \tadd    %rsi,%rcx\n    17f1:\t89 c6                \tmov    %eax,%esi\n    17f3:\t48 89 cf             \tmov    %rcx,%rdi\n    17f6:\te8 00 00 00 00       \tcallq  17fb <lag_decode_arith_plane+0x3cd>\n    17fb:\t83 84 24 ac 05 00 00 \taddl   $0x1,0x5ac(%rsp)\n    1802:\t01 \n    1803:\t8b 84 24 ac 05 00 00 \tmov    0x5ac(%rsp),%eax\n    180a:\t3b 44 24 18          \tcmp    0x18(%rsp),%eax\n    180e:\t7c b4                \tjl     17c4 <lag_decode_arith_plane+0x396>\n    1810:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1815:\te9 0a 01 00 00       \tjmpq   1924 <lag_decode_arith_plane+0x4f6>\n    181a:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    181f:\t48 8b 00             \tmov    (%rax),%rax\n    1822:\t8b 94 24 94 05 00 00 \tmov    0x594(%rsp),%edx\n    1829:\t89 d1                \tmov    %edx,%ecx\n    182b:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1830:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    1835:\t48 89 c7             \tmov    %rax,%rdi\n    1838:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    183d:\te8 00 00 00 00       \tcallq  1842 <lag_decode_arith_plane+0x414>\n    1842:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    1847:\te9 d8 00 00 00       \tjmpq   1924 <lag_decode_arith_plane+0x4f6>\n    184c:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    1851:\t48 8b 00             \tmov    (%rax),%rax\n    1854:\t8b 80 a8 00 00 00    \tmov    0xa8(%rax),%eax\n    185a:\t83 f8 04             \tcmp    $0x4,%eax\n    185d:\t74 53                \tje     18b2 <lag_decode_arith_plane+0x484>\n    185f:\tc7 84 24 ac 05 00 00 \tmovl   $0x0,0x5ac(%rsp)\n    1866:\t00 00 00 00 \n    186a:\teb 37                \tjmp    18a3 <lag_decode_arith_plane+0x475>\n    186c:\t8b bc 24 ac 05 00 00 \tmov    0x5ac(%rsp),%edi\n    1873:\t8b 4c 24 14          \tmov    0x14(%rsp),%ecx\n    1877:\t8b 54 24 1c          \tmov    0x1c(%rsp),%edx\n    187b:\t48 8b 74 24 20       \tmov    0x20(%rsp),%rsi\n    1880:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    1885:\t41 89 f8             \tmov    %edi,%r8d\n    1888:\t48 89 c7             \tmov    %rax,%rdi\n    188b:\te8 dc f3 ff ff       \tcallq  c6c <lag_pred_line>\n    1890:\t8b 44 24 14          \tmov    0x14(%rsp),%eax\n    1894:\t48 98                \tcltq   \n    1896:\t48 01 44 24 20       \tadd    %rax,0x20(%rsp)\n    189b:\t83 84 24 ac 05 00 00 \taddl   $0x1,0x5ac(%rsp)\n    18a2:\t01 \n    18a3:\t8b 84 24 ac 05 00 00 \tmov    0x5ac(%rsp),%eax\n    18aa:\t3b 44 24 18          \tcmp    0x18(%rsp),%eax\n    18ae:\t7c bc                \tjl     186c <lag_decode_arith_plane+0x43e>\n    18b0:\teb 6d                \tjmp    191f <lag_decode_arith_plane+0x4f1>\n    18b2:\tc7 84 24 ac 05 00 00 \tmovl   $0x0,0x5ac(%rsp)\n    18b9:\t00 00 00 00 \n    18bd:\teb 53                \tjmp    1912 <lag_decode_arith_plane+0x4e4>\n    18bf:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    18c4:\t48 8b 00             \tmov    (%rax),%rax\n    18c7:\t8b 80 94 00 00 00    \tmov    0x94(%rax),%eax\n    18cd:\t39 44 24 1c          \tcmp    %eax,0x1c(%rsp)\n    18d1:\t0f 94 c0             \tsete   %al\n    18d4:\t44 0f b6 c0          \tmovzbl %al,%r8d\n    18d8:\t8b bc 24 ac 05 00 00 \tmov    0x5ac(%rsp),%edi\n    18df:\t8b 4c 24 14          \tmov    0x14(%rsp),%ecx\n    18e3:\t8b 54 24 1c          \tmov    0x1c(%rsp),%edx\n    18e7:\t48 8b 74 24 20       \tmov    0x20(%rsp),%rsi\n    18ec:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    18f1:\t45 89 c1             \tmov    %r8d,%r9d\n    18f4:\t41 89 f8             \tmov    %edi,%r8d\n    18f7:\t48 89 c7             \tmov    %rax,%rdi\n    18fa:\te8 7f f4 ff ff       \tcallq  d7e <lag_pred_line_yuy2>\n    18ff:\t8b 44 24 14          \tmov    0x14(%rsp),%eax\n    1903:\t48 98                \tcltq   \n    1905:\t48 01 44 24 20       \tadd    %rax,0x20(%rsp)\n    190a:\t83 84 24 ac 05 00 00 \taddl   $0x1,0x5ac(%rsp)\n    1911:\t01 \n    1912:\t8b 84 24 ac 05 00 00 \tmov    0x5ac(%rsp),%eax\n    1919:\t3b 44 24 18          \tcmp    0x18(%rsp),%eax\n    191d:\t7c a0                \tjl     18bf <lag_decode_arith_plane+0x491>\n    191f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1924:\t48 81 c4 b8 05 00 00 \tadd    $0x5b8,%rsp\n    192b:\tc3                   \tretq   ", "code_s": "__int64 __fastcall lag_decode_arith_plane(_DWORD **a1, _BYTE *a2, signed int a3,\n                                          int a4, int a5, unsigned __int8 *a6,\n                                          int a7) {\n  __int64 result;\n  int v8;\n  unsigned __int8 *src;\n  _BYTE *v13;\n  __int64 v14[Number];\n  char v15[Number];\n  unsigned int v16;\n  int v17;\n  unsigned __int8 *v18;\n  unsigned int v19;\n  unsigned int v20;\n  unsigned int v21;\n  int i;\n  v13 = a2;\n  src = a6;\n  i = Number;\n  v21 = Number;\n  v19 = Number;\n  v18 = &a6[a7];\n  v14[Number] = (__int64)*a1;\n  *((_DWORD *)a1 + Number) = Number;\n  if (a7 <= Number)\n    return Number L;\n  v17 = *a6;\n  if (v17 > Number) {\n    if (v17 > Number) {\n      if (v17 == Number) {\n        for (i = Number; i < a4; ++i)\n          memset(&a2[a5 * i], src[Number], a3);\n        result = Number L;\n      } else {\n        av_log(*a1, Number L, String, (unsigned int)v17);\n        result = Number;\n      }\n      return result;\n    }\n    v17 -= Number;\n    if (v17 <= Number) {\n      if (a7 < a4 * a3)\n        return Number L;\n      for (i = Number; i < a4; ++i) {\n        memcpy(&a2[a5 * i], src, a3);\n        src += a3;\n      }\n    } else {\n      for (i = Number; i < a4; ++i) {\n        v16 = lag_decode_zero_run_line((__int64)a1, &a2[a5 * i], src,\n                                       (__int64)v18, a3, v17);\n        if ((v16 & Number) != Number)\n          return v16;\n        src += (int)v16;\n      }\n    }\n  } else {\n    v20 = a4 * a3;\n    if (a7 <= Number)\n      return Number L;\n    if (v17 && v20 > *(_DWORD *)(a6 + Number)) {\n      v20 = *(_DWORD *)(a6 + Number);\n      v19 += Number;\n    }\n    init_get_bits((__int64)v15, (__int64)&a6[v19], Number * a7);\n    if ((int)lag_read_prob_header(v14, (__int64)v15) < Number)\n      return Number;\n    ff_lag_rac_init(v14, v15, v20 - a5);\n    for (i = Number; i < a4; ++i) {\n      v8 = lag_decode_line((__int64)a1, (unsigned int *)v14,\n                           (__int64)&a2[a5 * i], a3, (unsigned int)a5, v17);\n      v21 += v8;\n    }\n    if (v20 < v21)\n      av_log(*a1, Number L, String, v21, v20);\n  }\n  if ((*a1)[Number] == Number) {\n    for (i = Number; i < a4; ++i) {\n      lag_pred_line_yuy2((__int64)a1, v13, a3, a5, i, a3 == (*a1)[Number]);\n      v13 += a5;\n    }\n  } else {\n    for (i = Number; i < a4; ++i) {\n      lag_pred_line(a1, (__int64)v13, a3, a5, i);\n      v13 += a5;\n    }\n  }\n  return Number L;\n}", "code_t": "int __cdecl lag_decode_arith_plane(LagarithContext_0 *l, uint8_t *dst,\n                                   int width, int height, int stride,\n                                   const uint8_t *src, int src_size) {\n  int result;\n  int v8;\n  const uint8_t *srca;\n  uint8_t *dsta;\n  lag_rac_0 <span class=\"supfact\">rac</span>;\n  GetBitContext_0 <span class=\"supfact\">gb</span>;\n  int res;\n  int esc_count;\n  const uint8_t *src_end;\n  uint32_t offset;\n  uint32_t length;\n  int read;\n  int i;\n  dsta = dst;\n  srca = src;\n  i = Number;\n  read = Number;\n  offset = Number;\n  src_end = &src[src_size];\n  <span class=\"supfact\">rac</span>.avctx = l->avctx;\n  l->zeros = Number;\n  if (src_size <= Number)\n    return Number;\n  esc_count = *src;\n  if (esc_count > Number) {\n    if (esc_count > Number) {\n      if (esc_count == Number) {\n        for (i = Number; i < height; ++i)\n          memset(&dst[stride * i], srca[Number], width);\n        result = Number;\n      } else {\n        av_log(l->avctx, Number L, String, (unsigned int)esc_count);\n        result = Number;\n      }\n      return result;\n    }\n    esc_count -= Number;\n    if (esc_count <= Number) {\n      if (src_size < height * width)\n        return Number;\n      for (i = Number; i < height; ++i) {\n        memcpy(&dst[stride * i], srca, width);\n        srca += width;\n      }\n    } else {\n      for (i = Number; i < height; ++i) {\n        res = lag_decode_zero_run_line(l, &dst[stride * i], srca, src_end,\n                                       width, esc_count);\n        if (res < Number)\n          return res;\n        srca += res;\n      }\n    }\n  } else {\n    length = height * width;\n    if (src_size <= Number)\n      return Number;\n    if (esc_count && length > *(_DWORD *)(src + Number)) {\n      length = *(_DWORD *)(src + Number);\n      offset += Number;\n    }\n    init_get_bits(&<span class=\"supfact\">gb</span>, &src[offset], Number * src_size);\n    if (lag_read_prob_header(&<span class=\"supfact\">rac</span>, &<span class=\"supfact\">gb</span>) <\n        Number)\n      return Number;\n    ff_lag_rac_init(&<span class=\"supfact\">rac</span>, &<span class=\"supfact\">gb</span>, length - stride);\n    for (i = Number; i < height; ++i) {\n      v8 = lag_decode_line(l, &<span class=\"supfact\">rac</span>, &dst[stride * i], width,\n                           stride, esc_count);\n      read += v8;\n    }\n    if (length < read)\n      av_log(l->avctx, Number L, String, (unsigned int)read, length);\n  }\n  if (l->avctx->pix_fmt == AV_PIX_FMT_YUV422P) {\n    for (i = Number; i < height; ++i) {\n      lag_pred_line_yuy2(l, dsta, width, stride, i, width == l->avctx->width);\n      dsta += stride;\n    }\n  } else {\n    for (i = Number; i < height; ++i) {\n      lag_pred_line(l, dsta, width, stride, i);\n      dsta += stride;\n    }\n  }\n  return Number;\n}", "var": [{"name": "v14", "type": "__unk__", "pred_name": "rac", "ref_name": "rac", "ref_type": "struct lag_rac_0 { AVCodecContext_0 * avctx; unsigned int low; unsigned int range; unsigned int scale; unsigned int hash_shift; const uint8_t * bytestream_start; const uint8_t * bytestream; const uint8_t * bytestream_end; uint32_t[258] prob; uint8_t[256] range_hash; }"}, {"name": "v15", "type": "struct GetBitContext_0 { const uint8_t * buffer; const uint8_t * buffer_end; int index; int size_in_bits; int size_in_bits_plus8; PADDING (4); }", "pred_name": "gb", "ref_name": "gb", "ref_type": "struct GetBitContext_0 { const uint8_t * buffer; const uint8_t * buffer_end; int index; int size_in_bits; int size_in_bits_plus8; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/0f72d8620f11b5709c3510958efd32157c97c471263af340f398146353b65190", "path_in_repo": "XanClic/qemu//hw/virtio/virtio-mmio.o", "objdump": "00000000000002c2 <_nocheck__trace_virtio_mmio_guest_page>:\n     2c2:\t55                   \tpush   %rbp\n     2c3:\t48 89 e5             \tmov    %rsp,%rbp\n     2c6:\t41 54                \tpush   %r12\n     2c8:\t53                   \tpush   %rbx\n     2c9:\t48 83 ec 30          \tsub    $0x30,%rsp\n     2cd:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n     2d1:\t89 75 c4             \tmov    %esi,-0x3c(%rbp)\n     2d4:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     2db:\t00 00 \n     2dd:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     2e1:\t31 c0                \txor    %eax,%eax\n     2e3:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2e9 <_nocheck__trace_virtio_mmio_guest_page+0x27>\n     2e9:\t85 c0                \ttest   %eax,%eax\n     2eb:\t0f 95 c0             \tsetne  %al\n     2ee:\t0f b6 c0             \tmovzbl %al,%eax\n     2f1:\t48 85 c0             \ttest   %rax,%rax\n     2f4:\t74 64                \tje     35a <_nocheck__trace_virtio_mmio_guest_page+0x98>\n     2f6:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 2fd <_nocheck__trace_virtio_mmio_guest_page+0x3b>\n     2fd:\t66 85 c0             \ttest   %ax,%ax\n     300:\t74 58                \tje     35a <_nocheck__trace_virtio_mmio_guest_page+0x98>\n     302:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n     307:\te8 f9 fd ff ff       \tcallq  105 <qemu_loglevel_mask>\n     30c:\t84 c0                \ttest   %al,%al\n     30e:\t74 4a                \tje     35a <_nocheck__trace_virtio_mmio_guest_page+0x98>\n     310:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     314:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     319:\t48 89 c7             \tmov    %rax,%rdi\n     31c:\te8 00 00 00 00       \tcallq  321 <_nocheck__trace_virtio_mmio_guest_page+0x5f>\n     321:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     325:\t49 89 c4             \tmov    %rax,%r12\n     328:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     32c:\t48 89 c3             \tmov    %rax,%rbx\n     32f:\te8 00 00 00 00       \tcallq  334 <_nocheck__trace_virtio_mmio_guest_page+0x72>\n     334:\t8b 4d c4             \tmov    -0x3c(%rbp),%ecx\n     337:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n     33b:\t41 89 c9             \tmov    %ecx,%r9d\n     33e:\t49 89 d0             \tmov    %rdx,%r8\n     341:\t4c 89 e1             \tmov    %r12,%rcx\n     344:\t48 89 da             \tmov    %rbx,%rdx\n     347:\t89 c6                \tmov    %eax,%esi\n     349:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 350 <_nocheck__trace_virtio_mmio_guest_page+0x8e>\n     350:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     355:\te8 00 00 00 00       \tcallq  35a <_nocheck__trace_virtio_mmio_guest_page+0x98>\n     35a:\t90                   \tnop\n     35b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     35f:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n     366:\t00 00 \n     368:\t74 05                \tje     36f <_nocheck__trace_virtio_mmio_guest_page+0xad>\n     36a:\te8 00 00 00 00       \tcallq  36f <_nocheck__trace_virtio_mmio_guest_page+0xad>\n     36f:\t48 83 c4 30          \tadd    $0x30,%rsp\n     373:\t5b                   \tpop    %rbx\n     374:\t41 5c                \tpop    %r12\n     376:\t5d                   \tpop    %rbp\n     377:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_virtio_mmio_guest_page(\n    __int64 a1, unsigned int a2) {\n  __suseconds_t v2;\n  __time_t v3;\n  unsigned int v4;\n  struct timeval tv;\n  unsigned __int64 v7;\n  v7 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_VIRTIO_MMIO_GUEST_PAGE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&tv, Number L);\n    v2 = tv.tv_usec;\n    v3 = tv.tv_sec;\n    v4 = qemu_get_thread_id();\n    qemu_log(String, v4, v3, v2, a1, a2);\n  }\n  return __readfsqword(Number) ^ v7;\n}", "code_t": "void __cdecl nocheck__trace_virtio_mmio_guest_page(uint64_t size, int shift) {\n  __suseconds_t v2;\n  __time_t v3;\n  unsigned int v4;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v6;\n  v6 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_VIRTIO_MMIO_GUEST_PAGE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v2 = <span class=\"supfact\">_now</span>.tv_usec;\n    v3 = <span class=\"supfact\">_now</span>.tv_sec;\n    v4 = qemu_get_thread_id();\n    qemu_log(String, v4, v3, v2, size, (unsigned int)shift);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "pred_name": "_now", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "evirt", "repo_name": "qemu-gl", "path": "evirt/qemu-gl/e906f086095c052102079deb6ed1c903d913ac22911e5f45982346070cb98883", "path_in_repo": "evirt/qemu-gl//x86_64-linux-user/signal.o", "objdump": "0000000000000d7b <force_sig>:\n     d7b:\t55                   \tpush   %rbp\n     d7c:\t48 89 e5             \tmov    %rsp,%rbp\n     d7f:\t48 81 ec d0 00 00 00 \tsub    $0xd0,%rsp\n     d86:\t89 bd 3c ff ff ff    \tmov    %edi,-0xc4(%rbp)\n     d8c:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     d93:\t00 00 \n     d95:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     d99:\t31 c0                \txor    %eax,%eax\n     d9b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # da2 <force_sig+0x27>\n     da2:\t48 8b 80 28 8a 00 00 \tmov    0x8a28(%rax),%rax\n     da9:\t48 89 85 48 ff ff ff \tmov    %rax,-0xb8(%rbp)\n     db0:\tc7 85 40 ff ff ff 00 \tmovl   $0x0,-0xc0(%rbp)\n     db7:\t00 00 00 \n     dba:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n     dc0:\t89 c7                \tmov    %eax,%edi\n     dc2:\te8 00 00 00 00       \tcallq  dc7 <force_sig+0x4c>\n     dc7:\t89 85 44 ff ff ff    \tmov    %eax,-0xbc(%rbp)\n     dcd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # dd4 <force_sig+0x59>\n     dd4:\t8b 95 3c ff ff ff    \tmov    -0xc4(%rbp),%edx\n     dda:\t89 d6                \tmov    %edx,%esi\n     ddc:\t48 89 c7             \tmov    %rax,%rdi\n     ddf:\te8 00 00 00 00       \tcallq  de4 <force_sig+0x69>\n     de4:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n     dea:\t89 c7                \tmov    %eax,%edi\n     dec:\te8 96 fc ff ff       \tcallq  a87 <core_dump_signal>\n     df1:\t85 c0                \ttest   %eax,%eax\n     df3:\t74 50                \tje     e45 <force_sig+0xca>\n     df5:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n     dfc:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     e00:\t48 8b 80 c0 01 00 00 \tmov    0x1c0(%rax),%rax\n     e07:\t48 85 c0             \ttest   %rax,%rax\n     e0a:\t74 39                \tje     e45 <force_sig+0xca>\n     e0c:\te8 00 00 00 00       \tcallq  e11 <force_sig+0x96>\n     e11:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n     e18:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     e1c:\t48 8b 88 c0 01 00 00 \tmov    0x1c0(%rax),%rcx\n     e23:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # e2a <force_sig+0xaf>\n     e2a:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n     e30:\t48 89 d6             \tmov    %rdx,%rsi\n     e33:\t89 c7                \tmov    %eax,%edi\n     e35:\tff d1                \tcallq  *%rcx\n     e37:\t85 c0                \ttest   %eax,%eax\n     e39:\t0f 94 c0             \tsete   %al\n     e3c:\t0f b6 c0             \tmovzbl %al,%eax\n     e3f:\t89 85 40 ff ff ff    \tmov    %eax,-0xc0(%rbp)\n     e45:\t83 bd 40 ff ff ff 00 \tcmpl   $0x0,-0xc0(%rbp)\n     e4c:\t74 68                \tje     eb6 <force_sig+0x13b>\n     e4e:\t48 8d 85 50 ff ff ff \tlea    -0xb0(%rbp),%rax\n     e55:\t48 89 c6             \tmov    %rax,%rsi\n     e58:\tbf 04 00 00 00       \tmov    $0x4,%edi\n     e5d:\te8 00 00 00 00       \tcallq  e62 <force_sig+0xe7>\n     e62:\t48 c7 85 50 ff ff ff \tmovq   $0x0,-0xb0(%rbp)\n     e69:\t00 00 00 00 \n     e6d:\t48 8d 85 50 ff ff ff \tlea    -0xb0(%rbp),%rax\n     e74:\t48 89 c6             \tmov    %rax,%rsi\n     e77:\tbf 04 00 00 00       \tmov    $0x4,%edi\n     e7c:\te8 00 00 00 00       \tcallq  e81 <force_sig+0x106>\n     e81:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n     e87:\t89 c7                \tmov    %eax,%edi\n     e89:\te8 00 00 00 00       \tcallq  e8e <force_sig+0x113>\n     e8e:\t48 89 c1             \tmov    %rax,%rcx\n     e91:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # e98 <force_sig+0x11d>\n     e98:\t8b 95 3c ff ff ff    \tmov    -0xc4(%rbp),%edx\n     e9e:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n     ea4:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     ea9:\t48 89 c7             \tmov    %rax,%rdi\n     eac:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     eb1:\te8 00 00 00 00       \tcallq  eb6 <force_sig+0x13b>\n     eb6:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n     ebd:\t48 83 c0 08          \tadd    $0x8,%rax\n     ec1:\t48 89 c7             \tmov    %rax,%rdi\n     ec4:\te8 00 00 00 00       \tcallq  ec9 <force_sig+0x14e>\n     ec9:\t48 c7 85 60 ff ff ff \tmovq   $0x0,-0xa0(%rbp)\n     ed0:\t00 00 00 00 \n     ed4:\t48 8d 8d 60 ff ff ff \tlea    -0xa0(%rbp),%rcx\n     edb:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n     ee1:\tba 00 00 00 00       \tmov    $0x0,%edx\n     ee6:\t48 89 ce             \tmov    %rcx,%rsi\n     ee9:\t89 c7                \tmov    %eax,%edi\n     eeb:\te8 00 00 00 00       \tcallq  ef0 <force_sig+0x175>\n     ef0:\te8 00 00 00 00       \tcallq  ef5 <force_sig+0x17a>\n     ef5:\t89 c2                \tmov    %eax,%edx\n     ef7:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n     efd:\t89 c6                \tmov    %eax,%esi\n     eff:\t89 d7                \tmov    %edx,%edi\n     f01:\te8 00 00 00 00       \tcallq  f06 <force_sig+0x18b>\n     f06:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n     f0c:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n     f13:\t48 83 c2 08          \tadd    $0x8,%rdx\n     f17:\t89 c6                \tmov    %eax,%esi\n     f19:\t48 89 d7             \tmov    %rdx,%rdi\n     f1c:\te8 00 00 00 00       \tcallq  f21 <force_sig+0x1a6>\n     f21:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n     f28:\t48 83 c0 08          \tadd    $0x8,%rax\n     f2c:\t48 89 c7             \tmov    %rax,%rdi\n     f2f:\te8 00 00 00 00       \tcallq  f34 <force_sig+0x1b9>\n     f34:\te8 00 00 00 00       \tcallq  f39 <queue_signal>", "code_s": "void __fastcall __noreturn force_sig(unsigned int a1) {\n  char *v1;\n  __pid_t v2;\n  _BOOL4 v3;\n  int sig;\n  __int64 v5;\n  struct rlimit64 rlimits;\n  struct sigaction v7;\n  unsigned __int64 v8;\n  v8 = __readfsqword(Number);\n  v5 = *(_QWORD *)(thread_env + Number L);\n  v3 = Number;\n  sig = target_to_host_signal(a1);\n  gdb_signalled(thread_env, a1);\n  if (core_dump_signal(a1) &&\n      *(_QWORD *)(*(_QWORD *)(v5 + Number) + Number L)) {\n    stop_all_tasks();\n    v3 = (*(__int64(__fastcall **)(_QWORD, _QWORD))(\n             *(_QWORD *)(v5 + Number) + Number L))(a1, thread_env) == Number;\n  }\n  if (v3) {\n    getrlimit64(RLIMIT_CORE, &rlimits);\n    rlimits.rlim_cur = Number L;\n    setrlimit64(RLIMIT_CORE, &rlimits);\n    v1 = strsignal(sig);\n    fprintf(stderr, String, a1, v1, String);\n  }\n  sigfillset(&v7.sa_mask);\n  v7.sa_handler = Number L;\n  sigaction(sig, &v7, Number L);\n  v2 = getpid();\n  kill(v2, sig);\n  sigdelset(&v7.sa_mask, sig);\n  sigsuspend(&v7.sa_mask);\n  abort();\n}", "code_t": "void __cdecl __noreturn force_sig(int target_sig) {\n  char *v1;\n  __pid_t v2;\n  int core_dumped;\n  int host_sig;\n  TaskState_0 *ts;\n  rlimit <span class=\"supfact\">nodump</span>;\n  sigaction <span class=\"supfact\">act</span>;\n  unsigned __int64 v8;\n  v8 = __readfsqword(Number);\n  ts = (TaskState_0 *)thread_env->opaque;\n  core_dumped = Number;\n  host_sig = target_to_host_signal(target_sig);\n  gdb_signalled(thread_env, (unsigned int)target_sig);\n  if (core_dump_signal(target_sig) && ts->bprm->core_dump) {\n    stop_all_tasks();\n    core_dumped =\n        ((__int64(__fastcall *)(_QWORD, CPUX86State *))ts->bprm->core_dump)(\n            (unsigned int)target_sig, thread_env) == Number;\n  }\n  if (core_dumped) {\n    getrlimit64(RLIMIT_CORE, (struct rlimit64 *)&<span class=\"supfact\">nodump</span>);\n    <span class=\"supfact\">nodump</span>.rlim_cur = Number L;\n    setrlimit64(RLIMIT_CORE, (const struct rlimit64 *)&<span class=\"supfact\">nodump</span>);\n    v1 = strsignal(host_sig);\n    fprintf(stderr, String, (unsigned int)target_sig, v1, String);\n  }\n  sigfillset(&<span class=\"supfact\">act</span>.sa_mask);\n  <span class=\"supfact\">act</span>.sa_handler = Number L;\n  sigaction_0(host_sig, &<span class=\"supfact\">act</span>, Number L);\n  v2 = getpid();\n  kill(v2, host_sig);\n  sigdelset(&<span class=\"supfact\">act</span>.sa_mask, host_sig);\n  sigsuspend(&<span class=\"supfact\">act</span>.sa_mask);\n  abort();\n}", "var": [{"name": "rlimits", "type": "struct rlimit { rlim_t rlim_cur; rlim_t rlim_max; }", "pred_name": "nodump", "ref_name": "nodump", "ref_type": "struct rlimit { rlim_t rlim_cur; rlim_t rlim_max; }"}, {"name": "v7", "type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }", "pred_name": "act", "ref_name": "act", "ref_type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }"}], "body_in_train": false}, {"repo_owner": "antmicro", "repo_name": "riscv-qemu-archived", "path": "antmicro/riscv-qemu-archived/18f0d6b071b0cc11d3b7c164c4db44fbee9ffe94d0162b1001c633f454298927", "path_in_repo": "antmicro/riscv-qemu-archived//hw/usb/dev-storage.o", "objdump": "0000000000000854 <usb_msd_handle_data>:\n     854:\t55                   \tpush   %rbp\n     855:\t48 89 e5             \tmov    %rsp,%rbp\n     858:\t48 83 ec 70          \tsub    $0x70,%rsp\n     85c:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n     860:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n     864:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     86b:\t00 00 \n     86d:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     871:\t31 c0                \txor    %eax,%eax\n     873:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n     877:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n     87b:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     87f:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     883:\t0f b6 00             \tmovzbl (%rax),%eax\n     886:\t88 45 af             \tmov    %al,-0x51(%rbp)\n     889:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     88d:\t8b 00                \tmov    (%rax),%eax\n     88f:\t83 f8 69             \tcmp    $0x69,%eax\n     892:\t0f 84 f5 02 00 00    \tje     b8d <usb_msd_handle_data+0x339>\n     898:\t3d e1 00 00 00       \tcmp    $0xe1,%eax\n     89d:\t0f 85 ab 04 00 00    \tjne    d4e <usb_msd_handle_data+0x4fa>\n     8a3:\t80 7d af 02          \tcmpb   $0x2,-0x51(%rbp)\n     8a7:\t0f 85 91 04 00 00    \tjne    d3e <usb_msd_handle_data+0x4ea>\n     8ad:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     8b1:\t8b 80 a8 16 00 00    \tmov    0x16a8(%rax),%eax\n     8b7:\t85 c0                \ttest   %eax,%eax\n     8b9:\t74 0e                \tje     8c9 <usb_msd_handle_data+0x75>\n     8bb:\t83 f8 01             \tcmp    $0x1,%eax\n     8be:\t0f 84 cf 01 00 00    \tje     a93 <usb_msd_handle_data+0x23f>\n     8c4:\te9 85 04 00 00       \tjmpq   d4e <usb_msd_handle_data+0x4fa>\n     8c9:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     8cd:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n     8d1:\t48 83 f8 1f          \tcmp    $0x1f,%rax\n     8d5:\t74 16                \tje     8ed <usb_msd_handle_data+0x99>\n     8d7:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8de <usb_msd_handle_data+0x8a>\n     8de:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     8e3:\te8 00 00 00 00       \tcallq  8e8 <usb_msd_handle_data+0x94>\n     8e8:\te9 61 04 00 00       \tjmpq   d4e <usb_msd_handle_data+0x4fa>\n     8ed:\t48 8d 4d d0          \tlea    -0x30(%rbp),%rcx\n     8f1:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     8f5:\tba 1f 00 00 00       \tmov    $0x1f,%edx\n     8fa:\t48 89 ce             \tmov    %rcx,%rsi\n     8fd:\t48 89 c7             \tmov    %rax,%rdi\n     900:\te8 00 00 00 00       \tcallq  905 <usb_msd_handle_data+0xb1>\n     905:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n     908:\t89 c7                \tmov    %eax,%edi\n     90a:\te8 f1 f6 ff ff       \tcallq  0 <le32_to_cpu>\n     90f:\t3d 55 53 42 43       \tcmp    $0x43425355,%eax\n     914:\t74 22                \tje     938 <usb_msd_handle_data+0xe4>\n     916:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n     919:\t89 c7                \tmov    %eax,%edi\n     91b:\te8 e0 f6 ff ff       \tcallq  0 <le32_to_cpu>\n     920:\t89 c6                \tmov    %eax,%esi\n     922:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 929 <usb_msd_handle_data+0xd5>\n     929:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     92e:\te8 00 00 00 00       \tcallq  933 <usb_msd_handle_data+0xdf>\n     933:\te9 16 04 00 00       \tjmpq   d4e <usb_msd_handle_data+0x4fa>\n     938:\t0f b6 45 dd          \tmovzbl -0x23(%rbp),%eax\n     93c:\t0f b6 c0             \tmovzbl %al,%eax\n     93f:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n     943:\t48 8d ba d0 16 00 00 \tlea    0x16d0(%rdx),%rdi\n     94a:\t89 c1                \tmov    %eax,%ecx\n     94c:\tba 00 00 00 00       \tmov    $0x0,%edx\n     951:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     956:\te8 00 00 00 00       \tcallq  95b <usb_msd_handle_data+0x107>\n     95b:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n     95f:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n     964:\t75 1f                \tjne    985 <usb_msd_handle_data+0x131>\n     966:\t0f b6 45 dd          \tmovzbl -0x23(%rbp),%eax\n     96a:\t0f b6 c0             \tmovzbl %al,%eax\n     96d:\t89 c6                \tmov    %eax,%esi\n     96f:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 976 <usb_msd_handle_data+0x122>\n     976:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     97b:\te8 00 00 00 00       \tcallq  980 <usb_msd_handle_data+0x12c>\n     980:\te9 c9 03 00 00       \tjmpq   d4e <usb_msd_handle_data+0x4fa>\n     985:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n     988:\t89 c7                \tmov    %eax,%edi\n     98a:\te8 71 f6 ff ff       \tcallq  0 <le32_to_cpu>\n     98f:\t89 45 b4             \tmov    %eax,-0x4c(%rbp)\n     992:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n     995:\t89 c7                \tmov    %eax,%edi\n     997:\te8 64 f6 ff ff       \tcallq  0 <le32_to_cpu>\n     99c:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n     9a0:\t89 82 b4 16 00 00    \tmov    %eax,0x16b4(%rdx)\n     9a6:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     9aa:\t8b 80 b4 16 00 00    \tmov    0x16b4(%rax),%eax\n     9b0:\t85 c0                \ttest   %eax,%eax\n     9b2:\t75 10                \tjne    9c4 <usb_msd_handle_data+0x170>\n     9b4:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     9b8:\tc7 80 a8 16 00 00 03 \tmovl   $0x3,0x16a8(%rax)\n     9bf:\t00 00 00 \n     9c2:\teb 26                \tjmp    9ea <usb_msd_handle_data+0x196>\n     9c4:\t0f b6 45 dc          \tmovzbl -0x24(%rbp),%eax\n     9c8:\t84 c0                \ttest   %al,%al\n     9ca:\t79 10                \tjns    9dc <usb_msd_handle_data+0x188>\n     9cc:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     9d0:\tc7 80 a8 16 00 00 02 \tmovl   $0x2,0x16a8(%rax)\n     9d7:\t00 00 00 \n     9da:\teb 0e                \tjmp    9ea <usb_msd_handle_data+0x196>\n     9dc:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     9e0:\tc7 80 a8 16 00 00 01 \tmovl   $0x1,0x16a8(%rax)\n     9e7:\t00 00 00 \n     9ea:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     9ee:\t8b 80 c0 16 00 00    \tmov    0x16c0(%rax),%eax\n     9f4:\t89 c7                \tmov    %eax,%edi\n     9f6:\te8 05 f6 ff ff       \tcallq  0 <le32_to_cpu>\n     9fb:\t85 c0                \ttest   %eax,%eax\n     9fd:\t74 1f                \tje     a1e <usb_msd_handle_data+0x1ca>\n     9ff:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # a06 <usb_msd_handle_data+0x1b2>\n     a06:\tba bd 01 00 00       \tmov    $0x1bd,%edx\n     a0b:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a12 <usb_msd_handle_data+0x1be>\n     a12:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # a19 <usb_msd_handle_data+0x1c5>\n     a19:\te8 00 00 00 00       \tcallq  a1e <usb_msd_handle_data+0x1ca>\n     a1e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     a22:\tc7 80 b0 16 00 00 00 \tmovl   $0x0,0x16b0(%rax)\n     a29:\t00 00 00 \n     a2c:\t0f b6 45 dd          \tmovzbl -0x23(%rbp),%eax\n     a30:\t0f b6 d0             \tmovzbl %al,%edx\n     a33:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     a37:\t48 8d 48 0f          \tlea    0xf(%rax),%rcx\n     a3b:\t8b 75 b4             \tmov    -0x4c(%rbp),%esi\n     a3e:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     a42:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n     a48:\t48 89 c7             \tmov    %rax,%rdi\n     a4b:\te8 00 00 00 00       \tcallq  a50 <usb_msd_handle_data+0x1fc>\n     a50:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n     a54:\t48 89 82 c8 16 00 00 \tmov    %rax,0x16c8(%rdx)\n     a5b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     a5f:\t48 8b 80 c8 16 00 00 \tmov    0x16c8(%rax),%rax\n     a66:\t48 89 c7             \tmov    %rax,%rdi\n     a69:\te8 00 00 00 00       \tcallq  a6e <usb_msd_handle_data+0x21a>\n     a6e:\t89 45 b8             \tmov    %eax,-0x48(%rbp)\n     a71:\t83 7d b8 00          \tcmpl   $0x0,-0x48(%rbp)\n     a75:\t0f 84 06 01 00 00    \tje     b81 <usb_msd_handle_data+0x32d>\n     a7b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     a7f:\t48 8b 80 c8 16 00 00 \tmov    0x16c8(%rax),%rax\n     a86:\t48 89 c7             \tmov    %rax,%rdi\n     a89:\te8 00 00 00 00       \tcallq  a8e <usb_msd_handle_data+0x23a>\n     a8e:\te9 ee 00 00 00       \tjmpq   b81 <usb_msd_handle_data+0x32d>\n     a93:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     a97:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n     a9b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     a9f:\t8b 80 b4 16 00 00    \tmov    0x16b4(%rax),%eax\n     aa5:\t89 c0                \tmov    %eax,%eax\n     aa7:\t48 39 c2             \tcmp    %rax,%rdx\n     aaa:\t0f 87 91 02 00 00    \tja     d41 <usb_msd_handle_data+0x4ed>\n     ab0:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     ab4:\t8b 80 b0 16 00 00    \tmov    0x16b0(%rax),%eax\n     aba:\t85 c0                \ttest   %eax,%eax\n     abc:\t74 13                \tje     ad1 <usb_msd_handle_data+0x27d>\n     abe:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n     ac2:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     ac6:\t48 89 d6             \tmov    %rdx,%rsi\n     ac9:\t48 89 c7             \tmov    %rax,%rdi\n     acc:\te8 9e f5 ff ff       \tcallq  6f <usb_msd_copy_data>\n     ad1:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     ad5:\t8b 80 c0 16 00 00    \tmov    0x16c0(%rax),%eax\n     adb:\t89 c7                \tmov    %eax,%edi\n     add:\te8 1e f5 ff ff       \tcallq  0 <le32_to_cpu>\n     ae2:\t85 c0                \ttest   %eax,%eax\n     ae4:\t74 68                \tje     b4e <usb_msd_handle_data+0x2fa>\n     ae6:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     aea:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n     aee:\t89 c2                \tmov    %eax,%edx\n     af0:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     af4:\t8b 40 48             \tmov    0x48(%rax),%eax\n     af7:\t29 c2                \tsub    %eax,%edx\n     af9:\t89 d0                \tmov    %edx,%eax\n     afb:\t89 45 b0             \tmov    %eax,-0x50(%rbp)\n     afe:\t83 7d b0 00          \tcmpl   $0x0,-0x50(%rbp)\n     b02:\t74 4a                \tje     b4e <usb_msd_handle_data+0x2fa>\n     b04:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n     b07:\t48 63 d0             \tmovslq %eax,%rdx\n     b0a:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     b0e:\t48 89 d6             \tmov    %rdx,%rsi\n     b11:\t48 89 c7             \tmov    %rax,%rdi\n     b14:\te8 00 00 00 00       \tcallq  b19 <usb_msd_handle_data+0x2c5>\n     b19:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     b1d:\t8b 90 b4 16 00 00    \tmov    0x16b4(%rax),%edx\n     b23:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n     b26:\t29 c2                \tsub    %eax,%edx\n     b28:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     b2c:\t89 90 b4 16 00 00    \tmov    %edx,0x16b4(%rax)\n     b32:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     b36:\t8b 80 b4 16 00 00    \tmov    0x16b4(%rax),%eax\n     b3c:\t85 c0                \ttest   %eax,%eax\n     b3e:\t75 0e                \tjne    b4e <usb_msd_handle_data+0x2fa>\n     b40:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     b44:\tc7 80 a8 16 00 00 03 \tmovl   $0x3,0x16a8(%rax)\n     b4b:\t00 00 00 \n     b4e:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     b52:\t8b 40 48             \tmov    0x48(%rax),%eax\n     b55:\t48 63 d0             \tmovslq %eax,%rdx\n     b58:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     b5c:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n     b60:\t48 39 c2             \tcmp    %rax,%rdx\n     b63:\t73 22                \tjae    b87 <usb_msd_handle_data+0x333>\n     b65:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     b69:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n     b6d:\t48 89 90 48 17 00 00 \tmov    %rdx,0x1748(%rax)\n     b74:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     b78:\tc7 40 44 fa ff ff ff \tmovl   $0xfffffffa,0x44(%rax)\n     b7f:\teb 06                \tjmp    b87 <usb_msd_handle_data+0x333>\n     b81:\t90                   \tnop\n     b82:\te9 d3 01 00 00       \tjmpq   d5a <usb_msd_handle_data+0x506>\n     b87:\t90                   \tnop\n     b88:\te9 cd 01 00 00       \tjmpq   d5a <usb_msd_handle_data+0x506>\n     b8d:\t80 7d af 01          \tcmpb   $0x1,-0x51(%rbp)\n     b91:\t0f 85 ad 01 00 00    \tjne    d44 <usb_msd_handle_data+0x4f0>\n     b97:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     b9b:\t8b 80 a8 16 00 00    \tmov    0x16a8(%rax),%eax\n     ba1:\t83 f8 03             \tcmp    $0x3,%eax\n     ba4:\t74 5f                \tje     c05 <usb_msd_handle_data+0x3b1>\n     ba6:\t83 f8 03             \tcmp    $0x3,%eax\n     ba9:\t0f 87 98 01 00 00    \tja     d47 <usb_msd_handle_data+0x4f3>\n     baf:\t83 f8 01             \tcmp    $0x1,%eax\n     bb2:\t74 0e                \tje     bc2 <usb_msd_handle_data+0x36e>\n     bb4:\t83 f8 02             \tcmp    $0x2,%eax\n     bb7:\t0f 84 af 00 00 00    \tje     c6c <usb_msd_handle_data+0x418>\n     bbd:\te9 85 01 00 00       \tjmpq   d47 <usb_msd_handle_data+0x4f3>\n     bc2:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     bc6:\t8b 80 b4 16 00 00    \tmov    0x16b4(%rax),%eax\n     bcc:\t85 c0                \ttest   %eax,%eax\n     bce:\t0f 85 76 01 00 00    \tjne    d4a <usb_msd_handle_data+0x4f6>\n     bd4:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     bd8:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n     bdc:\t48 83 f8 0c          \tcmp    $0xc,%rax\n     be0:\t0f 86 64 01 00 00    \tjbe    d4a <usb_msd_handle_data+0x4f6>\n     be6:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     bea:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n     bee:\t48 89 90 48 17 00 00 \tmov    %rdx,0x1748(%rax)\n     bf5:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     bf9:\tc7 40 44 fa ff ff ff \tmovl   $0xfffffffa,0x44(%rax)\n     c00:\te9 37 01 00 00       \tjmpq   d3c <usb_msd_handle_data+0x4e8>\n     c05:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     c09:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n     c0d:\t48 83 f8 0c          \tcmp    $0xc,%rax\n     c11:\t0f 86 36 01 00 00    \tjbe    d4d <usb_msd_handle_data+0x4f9>\n     c17:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     c1b:\t48 8b 80 c8 16 00 00 \tmov    0x16c8(%rax),%rax\n     c22:\t48 85 c0             \ttest   %rax,%rax\n     c25:\t74 1f                \tje     c46 <usb_msd_handle_data+0x3f2>\n     c27:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     c2b:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n     c2f:\t48 89 90 48 17 00 00 \tmov    %rdx,0x1748(%rax)\n     c36:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     c3a:\tc7 40 44 fa ff ff ff \tmovl   $0xfffffffa,0x44(%rax)\n     c41:\te9 f6 00 00 00       \tjmpq   d3c <usb_msd_handle_data+0x4e8>\n     c46:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n     c4a:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     c4e:\t48 89 d6             \tmov    %rdx,%rsi\n     c51:\t48 89 c7             \tmov    %rax,%rdi\n     c54:\te8 15 f5 ff ff       \tcallq  16e <usb_msd_send_status>\n     c59:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     c5d:\tc7 80 a8 16 00 00 00 \tmovl   $0x0,0x16a8(%rax)\n     c64:\t00 00 00 \n     c67:\te9 d0 00 00 00       \tjmpq   d3c <usb_msd_handle_data+0x4e8>\n     c6c:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     c70:\t8b 80 b0 16 00 00    \tmov    0x16b0(%rax),%eax\n     c76:\t85 c0                \ttest   %eax,%eax\n     c78:\t74 13                \tje     c8d <usb_msd_handle_data+0x439>\n     c7a:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n     c7e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     c82:\t48 89 d6             \tmov    %rdx,%rsi\n     c85:\t48 89 c7             \tmov    %rax,%rdi\n     c88:\te8 e2 f3 ff ff       \tcallq  6f <usb_msd_copy_data>\n     c8d:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     c91:\t8b 80 c0 16 00 00    \tmov    0x16c0(%rax),%eax\n     c97:\t89 c7                \tmov    %eax,%edi\n     c99:\te8 62 f3 ff ff       \tcallq  0 <le32_to_cpu>\n     c9e:\t85 c0                \ttest   %eax,%eax\n     ca0:\t74 68                \tje     d0a <usb_msd_handle_data+0x4b6>\n     ca2:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     ca6:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n     caa:\t89 c2                \tmov    %eax,%edx\n     cac:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     cb0:\t8b 40 48             \tmov    0x48(%rax),%eax\n     cb3:\t29 c2                \tsub    %eax,%edx\n     cb5:\t89 d0                \tmov    %edx,%eax\n     cb7:\t89 45 bc             \tmov    %eax,-0x44(%rbp)\n     cba:\t83 7d bc 00          \tcmpl   $0x0,-0x44(%rbp)\n     cbe:\t74 4a                \tje     d0a <usb_msd_handle_data+0x4b6>\n     cc0:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n     cc3:\t48 63 d0             \tmovslq %eax,%rdx\n     cc6:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     cca:\t48 89 d6             \tmov    %rdx,%rsi\n     ccd:\t48 89 c7             \tmov    %rax,%rdi\n     cd0:\te8 00 00 00 00       \tcallq  cd5 <usb_msd_handle_data+0x481>\n     cd5:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     cd9:\t8b 90 b4 16 00 00    \tmov    0x16b4(%rax),%edx\n     cdf:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n     ce2:\t29 c2                \tsub    %eax,%edx\n     ce4:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     ce8:\t89 90 b4 16 00 00    \tmov    %edx,0x16b4(%rax)\n     cee:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     cf2:\t8b 80 b4 16 00 00    \tmov    0x16b4(%rax),%eax\n     cf8:\t85 c0                \ttest   %eax,%eax\n     cfa:\t75 0e                \tjne    d0a <usb_msd_handle_data+0x4b6>\n     cfc:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     d00:\tc7 80 a8 16 00 00 03 \tmovl   $0x3,0x16a8(%rax)\n     d07:\t00 00 00 \n     d0a:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     d0e:\t8b 40 48             \tmov    0x48(%rax),%eax\n     d11:\t48 63 d0             \tmovslq %eax,%rdx\n     d14:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     d18:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n     d1c:\t48 39 c2             \tcmp    %rax,%rdx\n     d1f:\t73 1a                \tjae    d3b <usb_msd_handle_data+0x4e7>\n     d21:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     d25:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n     d29:\t48 89 90 48 17 00 00 \tmov    %rdx,0x1748(%rax)\n     d30:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     d34:\tc7 40 44 fa ff ff ff \tmovl   $0xfffffffa,0x44(%rax)\n     d3b:\t90                   \tnop\n     d3c:\teb 1c                \tjmp    d5a <usb_msd_handle_data+0x506>\n     d3e:\t90                   \tnop\n     d3f:\teb 0d                \tjmp    d4e <usb_msd_handle_data+0x4fa>\n     d41:\t90                   \tnop\n     d42:\teb 0a                \tjmp    d4e <usb_msd_handle_data+0x4fa>\n     d44:\t90                   \tnop\n     d45:\teb 07                \tjmp    d4e <usb_msd_handle_data+0x4fa>\n     d47:\t90                   \tnop\n     d48:\teb 04                \tjmp    d4e <usb_msd_handle_data+0x4fa>\n     d4a:\t90                   \tnop\n     d4b:\teb 01                \tjmp    d4e <usb_msd_handle_data+0x4fa>\n     d4d:\t90                   \tnop\n     d4e:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     d52:\tc7 40 44 fd ff ff ff \tmovl   $0xfffffffd,0x44(%rax)\n     d59:\t90                   \tnop\n     d5a:\t90                   \tnop\n     d5b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     d5f:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n     d66:\t00 00 \n     d68:\t74 05                \tje     d6f <usb_msd_handle_data+0x51b>\n     d6a:\te8 00 00 00 00       \tcallq  d6f <usb_msd_handle_data+0x51b>\n     d6f:\tc9                   \tleaveq \n     d70:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall usb_msd_handle_data(__int64 a1, __int64 a2) {\n  int v2;\n  unsigned int v3;\n  unsigned int v4;\n  char v6;\n  int v7;\n  unsigned int v8;\n  int v9;\n  __int64 v10;\n  unsigned int v11[Number];\n  char v12;\n  unsigned __int8 v13;\n  char v14;\n  unsigned __int64 v15;\n  v15 = __readfsqword(Number);\n  v6 = **(_BYTE **)(a2 + Number);\n  if (*(_DWORD *)a2 == Number) {\n    if (v6 != Number)\n      goto LABEL_55;\n    v4 = *(_DWORD *)(a1 + Number);\n    if (v4 == Number) {\n      if (*(_QWORD *)(a2 + Number) > Number) {\n        if (*(_QWORD *)(a1 + Number)) {\n          *(_QWORD *)(a1 + Number) = a2;\n          *(_DWORD *)(a2 + Number) = Number;\n        } else {\n          usb_msd_send_status(a1, a2);\n          *(_DWORD *)(a1 + Number) = Number;\n        }\n        return __readfsqword(Number) ^ v15;\n      }\n      goto LABEL_55;\n    }\n    if (v4 > Number)\n      goto LABEL_55;\n    if (v4 == Number) {\n      if (!*(_DWORD *)(a1 + Number) && *(_QWORD *)(a2 + Number) > Number) {\n        *(_QWORD *)(a1 + Number) = a2;\n        *(_DWORD *)(a2 + Number) = Number;\n        return __readfsqword(Number) ^ v15;\n      }\n      goto LABEL_55;\n    }\n    if (v4 != Number)\n      goto LABEL_55;\n    if (*(_DWORD *)(a1 + Number))\n      usb_msd_copy_data(a1, a2);\n    if ((unsigned int)le32_to_cpu(*(_DWORD *)(a1 + Number))) {\n      v9 = *(_QWORD *)(a2 + Number) - *(_DWORD *)(a2 + Number);\n      if (v9) {\n        usb_packet_skip(a2, v9);\n        *(_DWORD *)(a1 + Number) -= v9;\n        if (!*(_DWORD *)(a1 + Number))\n          *(_DWORD *)(a1 + Number) = Number;\n      }\n    }\n    if ((unsigned __int64)*(int *)(a2 + Number) < *(_QWORD *)(a2 + Number)) {\n      *(_QWORD *)(a1 + Number) = a2;\n      *(_DWORD *)(a2 + Number) = Number;\n    }\n  } else {\n    if (*(_DWORD *)a2 != Number || v6 != Number)\n      goto LABEL_55;\n    v2 = *(_DWORD *)(a1 + Number);\n    if (v2) {\n      if (v2 == Number &&\n          *(_QWORD *)(a2 + Number) <=\n              (unsigned __int64)*(unsigned int *)(a1 + Number)) {\n        if (*(_DWORD *)(a1 + Number))\n          usb_msd_copy_data(a1, a2);\n        if ((unsigned int)le32_to_cpu(*(_DWORD *)(a1 + Number))) {\n          v7 = *(_QWORD *)(a2 + Number) - *(_DWORD *)(a2 + Number);\n          if (v7) {\n            usb_packet_skip(a2, v7);\n            *(_DWORD *)(a1 + Number) -= v7;\n            if (!*(_DWORD *)(a1 + Number))\n              *(_DWORD *)(a1 + Number) = Number;\n          }\n        }\n        if ((unsigned __int64)*(int *)(a2 + Number) <\n            *(_QWORD *)(a2 + Number)) {\n          *(_QWORD *)(a1 + Number) = a2;\n          *(_DWORD *)(a2 + Number) = Number;\n        }\n        return __readfsqword(Number) ^ v15;\n      }\n    LABEL_55:\n      *(_DWORD *)(a2 + Number) = Number;\n      return __readfsqword(Number) ^ v15;\n    }\n    if (*(_QWORD *)(a2 + Number) != Number L) {\n      error_report(String);\n      goto LABEL_55;\n    }\n    usb_packet_copy(a2, v11, Number L);\n    if ((unsigned int)le32_to_cpu(v11[Number]) != Number) {\n      v3 = le32_to_cpu(v11[Number]);\n      error_report(String, v3);\n      goto LABEL_55;\n    }\n    v10 = scsi_device_find(a1 + Number, Number L, Number L, v13);\n    if (!v10) {\n      error_report(String, v13);\n      goto LABEL_55;\n    }\n    v8 = le32_to_cpu(v11[Number]);\n    *(_DWORD *)(a1 + Number) = le32_to_cpu(v11[Number]);\n    if (*(_DWORD *)(a1 + Number)) {\n      if (v12 >= Number)\n        *(_DWORD *)(a1 + Number) = Number;\n      else\n        *(_DWORD *)(a1 + Number) = Number;\n    } else {\n      *(_DWORD *)(a1 + Number) = Number;\n    }\n    if ((unsigned int)le32_to_cpu(*(_DWORD *)(a1 + Number)))\n      _assert_fail(String, String, Number, String);\n    *(_DWORD *)(a1 + Number) = Number;\n    *(_QWORD *)(a1 + Number) = scsi_req_new(v10, v8, v13, &v14, Number L);\n    if ((unsigned int)scsi_req_enqueue(*(_QWORD *)(a1 + Number)))\n      scsi_req_continue(*(_QWORD *)(a1 + Number));\n  }\n  return __readfsqword(Number) ^ v15;\n}", "code_t": "void __cdecl usb_msd_handle_data(USBDevice_0 *dev, USBPacket_0 *p) {\n  int v2;\n  uint32_t v3;\n  unsigned int v4;\n  uint8_t devep;\n  int len_0;\n  uint32_t tag;\n  int len_1;\n  SCSIDevice_0 *scsi_dev;\n  usb_msd_cbw <span class=\"supfact\">cbw</span>;\n  unsigned __int64 v11;\n  v11 = __readfsqword(Number);\n  devep = p->ep->nr;\n  if (p->pid == Number) {\n    if (devep != Number)\n      goto fail;\n    v4 = (unsigned int)dev[Number].qdev.parent_obj.class;\n    if (v4 == Number) {\n      if (p->iov.size > Number) {\n        if (dev[Number].qdev.parent_obj.parent) {\n          *(_QWORD *)&dev[Number].product_desc[Number] = p;\n          p->status = Number;\n        } else {\n          usb_msd_send_status((MSDState *)dev, p);\n          LODWORD(dev[Number].qdev.parent_obj.class) = Number;\n        }\n        return;\n      }\n      goto fail;\n    }\n    if (v4 > Number)\n      goto fail;\n    if (v4 == Number) {\n      if (!HIDWORD(dev[Number].qdev.parent_obj.free) && p->iov.size > Number) {\n        *(_QWORD *)&dev[Number].product_desc[Number] = p;\n        p->status = Number;\n        return;\n      }\n      goto fail;\n    }\n    if (v4 != Number) {\n    fail:\n      p->status = Number;\n      return;\n    }\n    if (LODWORD(dev[Number].qdev.parent_obj.free))\n      usb_msd_copy_data((MSDState *)dev, p);\n    if (le32_to_cpu(dev[Number].qdev.parent_obj.ref)) {\n      len_1 = p->iov.size - p->actual_length;\n      if (len_1) {\n        usb_packet_skip(p, len_1);\n        HIDWORD(dev[Number].qdev.parent_obj.free) -= len_1;\n        if (!HIDWORD(dev[Number].qdev.parent_obj.free))\n          LODWORD(dev[Number].qdev.parent_obj.class) = Number;\n      }\n    }\n    if (p->actual_length < p->iov.size) {\n      *(_QWORD *)&dev[Number].product_desc[Number] = p;\n      p->status = Number;\n    }\n  } else {\n    if (p->pid != Number || devep != Number)\n      goto fail;\n    v2 = (int)dev[Number].qdev.parent_obj.class;\n    if (v2) {\n      if (v2 == Number &&\n          p->iov.size <= HIDWORD(dev[Number].qdev.parent_obj.free)) {\n        if (LODWORD(dev[Number].qdev.parent_obj.free))\n          usb_msd_copy_data((MSDState *)dev, p);\n        if (le32_to_cpu(dev[Number].qdev.parent_obj.ref)) {\n          len_0 = p->iov.size - p->actual_length;\n          if (len_0) {\n            usb_packet_skip(p, len_0);\n            HIDWORD(dev[Number].qdev.parent_obj.free) -= len_0;\n            if (!HIDWORD(dev[Number].qdev.parent_obj.free))\n              LODWORD(dev[Number].qdev.parent_obj.class) = Number;\n          }\n        }\n        if (p->actual_length < p->iov.size) {\n          *(_QWORD *)&dev[Number].product_desc[Number] = p;\n          p->status = Number;\n        }\n        return;\n      }\n      goto fail;\n    }\n    if (p->iov.size != Number) {\n      error_report(String);\n      goto fail;\n    }\n    usb_packet_copy(p, &<span class=\"supfact\">cbw</span>, Number L);\n    if (le32_to_cpu(<span class=\"supfact\">cbw</span>.sig) != Number) {\n      v3 = le32_to_cpu(<span class=\"supfact\">cbw</span>.sig);\n      error_report(String, v3);\n      goto fail;\n    }\n    scsi_dev = (SCSIDevice_0 *)scsi_device_find(\n        &dev[Number].qdev.id, Number L, Number L, <span class=\"supfact\">cbw</span>.lun);\n    if (!scsi_dev) {\n      error_report(String, <span class=\"supfact\">cbw</span>.lun);\n      goto fail;\n    }\n    tag = le32_to_cpu(<span class=\"supfact\">cbw</span>.tag);\n    HIDWORD(dev[Number].qdev.parent_obj.free) =\n        le32_to_cpu(<span class=\"supfact\">cbw</span>.data_len);\n    if (HIDWORD(dev[Number].qdev.parent_obj.free)) {\n      if ((<span class=\"supfact\">cbw</span>.flags & Number) == Number)\n        LODWORD(dev[Number].qdev.parent_obj.class) = Number;\n      else\n        LODWORD(dev[Number].qdev.parent_obj.class) = Number;\n    } else {\n      LODWORD(dev[Number].qdev.parent_obj.class) = Number;\n    }\n    if (le32_to_cpu(dev[Number].qdev.parent_obj.ref))\n      _assert_fail(String, String, Number, String);\n    LODWORD(dev[Number].qdev.parent_obj.free) = Number;\n    dev[Number].qdev.parent_obj.parent =\n        (Object_0 *)scsi_req_new(scsi_dev, tag, <span class=\"supfact\">cbw</span>.lun,\n                                 <span class=\"supfact\">cbw</span>.cmd, Number L);\n    if ((unsigned int)scsi_req_enqueue(dev[Number].qdev.parent_obj.parent))\n      scsi_req_continue(dev[Number].qdev.parent_obj.parent);\n  }\n}", "var": [{"name": "v11", "type": "struct usb_msd_cbw { uint32_t sig; uint32_t tag; uint32_t data_len; uint8_t flags; uint8_t lun; uint8_t cmd_len; uint8_t[16] cmd; PADDING (1); }", "pred_name": "cbw", "ref_name": "cbw", "ref_type": "struct usb_msd_cbw { uint32_t sig; uint32_t tag; uint32_t data_len; uint8_t flags; uint8_t lun; uint8_t cmd_len; uint8_t[16] cmd; PADDING (1); }"}], "body_in_train": false}, {"repo_owner": "KAMEDAkyosuke", "repo_name": "lobirecsdk_cocs2dx_box2d_sample", "path": "KAMEDAkyosuke/lobirecsdk_cocs2dx_box2d_sample/59f9bd273aee06a5ccc923e391d6c351ca0eaa2c7811d1f60281339cb54fd3d2", "path_in_repo": "KAMEDAkyosuke/lobirecsdk_cocs2dx_box2d_sample/cocos2d-x-2.2.2/cocos2dx/proj.linux/obj/release/sprite_nodes/CCAnimation.o", "objdump": "000000000000006c <_ZN7cocos2d11CCAnimation6createEPNS_7CCArrayEfj.cold>:\n  6c:\t4c 89 e7             \tmov    %r12,%rdi\n  6f:\tbe 38 00 00 00       \tmov    $0x38,%esi\n  74:\te8 00 00 00 00       \tcallq  79 <_ZN7cocos2d11CCAnimation6createEPNS_7CCArrayEfj.cold+0xd>\n  79:\t48 89 ef             \tmov    %rbp,%rdi\n  7c:\te8 00 00 00 00       \tcallq  81 <_ZN7cocos2d11CCAnimation6createEPNS_7CCArrayEfj.cold+0x15>\n  81:\t90                   \tnop", "code_s": "void __fastcall __noreturn cocos2d CCAnimation create() {\n  struct _Unwind_Exception *v0;\n  void *v1;\n  operator delete(v1, Number);\n  Unwind_Resume(v0);\n}", "code_t": "void __fastcall __noreturn cocos2d CCAnimation create() {\n  struct _Unwind_Exception *<span class=\"supfact\">v0</span>;\n  void *v1;\n  operator delete(v1, Number);\n  Unwind_Resume(<span class=\"supfact\">v0</span>);\n}", "var": [{"name": "v0", "type": "struct _Unwind_Exception *", "pred_name": "v0", "ref_name": "v0", "ref_type": "struct _Unwind_Exception *"}], "body_in_train": false}, {"repo_owner": "Dar13", "repo_name": "OpenMemDB", "path": "Dar13/OpenMemDB/b98517f921a22ee963150c9de49c0c55296ce5a93797c17e43769ad084e3c0f6", "path_in_repo": "Dar13/OpenMemDB/database/libomdb/connection.o", "objdump": "0000000000000000 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t53                   \tpush   %rbx\n   5:\t48 83 ec 38          \tsub    $0x38,%rsp\n   9:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n   d:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n  11:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n  15:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  19:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  1d:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n  21:\t48 8d 45 d8          \tlea    -0x28(%rbp),%rax\n  25:\t48 89 d6             \tmov    %rdx,%rsi\n  28:\t48 89 c7             \tmov    %rax,%rdi\n  2b:\te8 00 00 00 00       \tcallq  30 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_+0x30>\n  30:\t84 c0                \ttest   %al,%al\n  32:\t74 39                \tje     6d <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_+0x6d>\n  34:\t48 8d 45 d8          \tlea    -0x28(%rbp),%rax\n  38:\t48 89 c7             \tmov    %rax,%rdi\n  3b:\te8 00 00 00 00       \tcallq  40 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_+0x40>\n  40:\t48 89 c3             \tmov    %rax,%rbx\n  43:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  47:\t48 89 c7             \tmov    %rax,%rdi\n  4a:\te8 00 00 00 00       \tcallq  4f <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_+0x4f>\n  4f:\t48 89 de             \tmov    %rbx,%rsi\n  52:\t48 89 c7             \tmov    %rax,%rdi\n  55:\te8 00 00 00 00       \tcallq  5a <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_+0x5a>\n  5a:\t48 8d 45 d8          \tlea    -0x28(%rbp),%rax\n  5e:\t48 89 c7             \tmov    %rax,%rdi\n  61:\te8 00 00 00 00       \tcallq  66 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_+0x66>\n  66:\t48 83 45 e8 18       \taddq   $0x18,-0x18(%rbp)\n  6b:\teb b0                \tjmp    1d <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_+0x1d>\n  6d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  71:\teb 33                \tjmp    a6 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_+0xa6>\n  73:\t48 89 c7             \tmov    %rax,%rdi\n  76:\te8 00 00 00 00       \tcallq  7b <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_+0x7b>\n  7b:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  7f:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  83:\t48 89 d6             \tmov    %rdx,%rsi\n  86:\t48 89 c7             \tmov    %rax,%rdi\n  89:\te8 00 00 00 00       \tcallq  8e <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_+0x8e>\n  8e:\te8 00 00 00 00       \tcallq  93 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_+0x93>\n  93:\t48 89 c3             \tmov    %rax,%rbx\n  96:\te8 00 00 00 00       \tcallq  9b <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_+0x9b>\n  9b:\t48 89 d8             \tmov    %rbx,%rax\n  9e:\t48 89 c7             \tmov    %rax,%rdi\n  a1:\te8 00 00 00 00       \tcallq  a6 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIlSaIlEEES6_EET0_T_S9_S8_+0xa6>\n  a6:\t48 83 c4 38          \tadd    $0x38,%rsp\n  aa:\t5b                   \tpop    %rbx\n  ab:\t5d                   \tpop    %rbp\n  ac:\tc3                   \tretq   ", "code_s": "__int64 __fastcall std __uninitialized_copy<false>\n__uninit_copy<std move_iterator<std vector<long> *>, std vector<long> *>(\n    __int64 a1, __int64 a2, __int64 a3) {\n  __int64 v3;\n  __int64 v4;\n  __int64 v6;\n  __int64 v7[Number];\n  __int64 v8;\n  v7[Number] = a1;\n  v6 = a2;\n  v8 = a3;\n  while ((unsigned __int8)std operator!=<std vector<long> *>(v7, &v6)) {\n    v3 = std move_iterator<std vector<long> *> operator*(v7);\n    v4 = std __addressof<std vector<long>>(v8);\n    std _Construct<std vector<long>, std vector<long>>(v4, v3);\n    std move_iterator<std vector<long> *> operator++(v7);\n    v8 += Number L;\n  }\n  return v8;\n}", "code_t": "std vector<long int> *__cdecl std __uninitialized_copy<false>\n__uninit_copy<std move_iterator<std vector<long> *>, std vector<long> *>(\n    std move_iterator<std vector<long int> *> <span class=\"supfact\">__first</span>,\n    std move_iterator<std vector<long int> *> <span class=\"supfact\">__last</span>,\n    std vector<long int> *__result) {\n  std vector<long int> *v3;\n  std vector<long int> *v4;\n  std vector<long int> *v5;\n  std move_iterator<std vector<long int> *> <span class=\"supfact\">__lasta</span>;\n  std move_iterator<std vector<long int> *> <span class=\"supfact\">__firsta</span>;\n  std vector<long int> *__cur;\n  <span class=\"supfact\">__firsta</span>._M_current = <span class=\"supfact\">__first</span>._M_current;\n  <span class=\"supfact\">__lasta</span>._M_current = <span class=\"supfact\">__last</span>._M_current;\n  __cur = __result;\n  while (std operator!=<std vector<long> *>(&<span class=\"supfact\">__firsta</span>,\n                                            &<span class=\"supfact\">__lasta</span>)) {\n    v3 = std move_iterator<std vector<long> *> operator*(\n        &<span class=\"supfact\">__firsta</span>);\n    v4 = std __addressof<std vector<long>>(__cur);\n    std _Construct<std vector<long>, std vector<long>>(v4, v3, v5);\n    std move_iterator<std vector<long> *> operator++(&<span class=\"supfact\">__firsta</span>);\n    ++__cur;\n  }\n  return __cur;\n}", "var": [{"name": "a1", "type": "__int64", "pred_name": "a1", "ref_name": "__first", "ref_type": "struct std::move_iterator<std::vector<long int>*> { std::vector<long int> * _M_current; }"}, {"name": "a2", "type": "__int64", "pred_name": "a2", "ref_name": "__last", "ref_type": "struct std::move_iterator<std::vector<long int>*> { std::vector<long int> * _M_current; }"}, {"name": "v6", "type": "__int64", "pred_name": "v6", "ref_name": "__lasta", "ref_type": "struct std::move_iterator<std::vector<long int>*> { std::vector<long int> * _M_current; }"}, {"name": "v7", "type": "__int64[2]", "pred_name": "v7", "ref_name": "__firsta", "ref_type": "struct std::move_iterator<std::vector<long int>*> { std::vector<long int> * _M_current; }"}], "body_in_train": false}, {"repo_owner": "tuan-nng", "repo_name": "mloop", "path": "tuan-nng/mloop/b4000bb7c535bef216fb827ca034c8ee13037fc028fe6c843c0cdde697527042", "path_in_repo": "tuan-nng/mloop//a.out", "objdump": "0000000000000b5b <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:\n     b5b:\t55                   \tpush   %rbp\n     b5c:\t48 89 e5             \tmov    %rsp,%rbp\n     b5f:\t41 54                \tpush   %r12\n     b61:\t53                   \tpush   %rbx\n     b62:\t48 81 ec 10 03 00 00 \tsub    $0x310,%rsp\n     b69:\t48 89 bd e8 fc ff ff \tmov    %rdi,-0x318(%rbp)\n     b70:\t48 89 b5 e0 fc ff ff \tmov    %rsi,-0x320(%rbp)\n     b77:\t48 8b 95 e0 fc ff ff \tmov    -0x320(%rbp),%rdx\n     b7e:\t48 8b 85 e8 fc ff ff \tmov    -0x318(%rbp),%rax\n     b85:\t48 89 d6             \tmov    %rdx,%rsi\n     b88:\t48 89 c7             \tmov    %rax,%rdi\n     b8b:\te8 00 00 00 00       \tcallq  b90 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x35>\n     b90:\t48 8b 85 e8 fc ff ff \tmov    -0x318(%rbp),%rax\n     b97:\tba 00 00 00 00       \tmov    $0x0,%edx\n     b9c:\tbe 5c 00 00 00       \tmov    $0x5c,%esi\n     ba1:\t48 89 c7             \tmov    %rax,%rdi\n     ba4:\te8 00 00 00 00       \tcallq  ba9 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4e>\n     ba9:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     bad:\t48 83 7d e8 ff       \tcmpq   $0xffffffffffffffff,-0x18(%rbp)\n     bb2:\t0f 84 6c 09 00 00    \tje     1524 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9c9>\n     bb8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     bbc:\t48 8d 58 01          \tlea    0x1(%rax),%rbx\n     bc0:\t48 8b 85 e8 fc ff ff \tmov    -0x318(%rbp),%rax\n     bc7:\t48 89 c7             \tmov    %rax,%rdi\n     bca:\te8 00 00 00 00       \tcallq  bcf <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x74>\n     bcf:\t48 39 c3             \tcmp    %rax,%rbx\n     bd2:\t0f 92 c0             \tsetb   %al\n     bd5:\t84 c0                \ttest   %al,%al\n     bd7:\t0f 84 e3 05 00 00    \tje     11c0 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x665>\n     bdd:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     be1:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n     be5:\t48 8b 85 e8 fc ff ff \tmov    -0x318(%rbp),%rax\n     bec:\t48 89 d6             \tmov    %rdx,%rsi\n     bef:\t48 89 c7             \tmov    %rax,%rdi\n     bf2:\te8 00 00 00 00       \tcallq  bf7 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9c>\n     bf7:\t0f b6 00             \tmovzbl (%rax),%eax\n     bfa:\t0f be c0             \tmovsbl %al,%eax\n     bfd:\t89 c7                \tmov    %eax,%edi\n     bff:\te8 00 00 00 00       \tcallq  c04 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa9>\n     c04:\t85 c0                \ttest   %eax,%eax\n     c06:\t0f 95 c0             \tsetne  %al\n     c09:\t84 c0                \ttest   %al,%al\n     c0b:\t0f 84 2d 03 00 00    \tje     f3e <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3e3>\n     c11:\tc7 45 e0 02 00 00 00 \tmovl   $0x2,-0x20(%rbp)\n     c18:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n     c1b:\t48 63 d0             \tmovslq %eax,%rdx\n     c1e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     c22:\t48 8d 1c 02          \tlea    (%rdx,%rax,1),%rbx\n     c26:\t48 8b 85 e8 fc ff ff \tmov    -0x318(%rbp),%rax\n     c2d:\t48 89 c7             \tmov    %rax,%rdi\n     c30:\te8 00 00 00 00       \tcallq  c35 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xda>\n     c35:\t48 39 c3             \tcmp    %rax,%rbx\n     c38:\t0f 93 c0             \tsetae  %al\n     c3b:\t84 c0                \ttest   %al,%al\n     c3d:\t0f 84 2e 01 00 00    \tje     d71 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x216>\n     c43:\tbf 20 00 00 00       \tmov    $0x20,%edi\n     c48:\te8 00 00 00 00       \tcallq  c4d <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xf2>\n     c4d:\t48 89 c3             \tmov    %rax,%rbx\n     c50:\t48 8d 85 4f fd ff ff \tlea    -0x2b1(%rbp),%rax\n     c57:\t48 89 c7             \tmov    %rax,%rdi\n     c5a:\te8 00 00 00 00       \tcallq  c5f <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x104>\n     c5f:\t48 8d 95 4f fd ff ff \tlea    -0x2b1(%rbp),%rdx\n     c66:\t48 8d 85 20 fd ff ff \tlea    -0x2e0(%rbp),%rax\n     c6d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     c72:\t48 89 c7             \tmov    %rax,%rdi\n     c75:\te8 00 00 00 00       \tcallq  c7a <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x11f>\n     c7a:\t48 8d 85 7f fd ff ff \tlea    -0x281(%rbp),%rax\n     c81:\t48 89 c7             \tmov    %rax,%rdi\n     c84:\te8 00 00 00 00       \tcallq  c89 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x12e>\n     c89:\t48 8d 95 7f fd ff ff \tlea    -0x281(%rbp),%rdx\n     c90:\t48 8d 85 50 fd ff ff \tlea    -0x2b0(%rbp),%rax\n     c97:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     c9c:\t48 89 c7             \tmov    %rax,%rdi\n     c9f:\te8 00 00 00 00       \tcallq  ca4 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x149>\n     ca4:\t48 8d 85 a0 fd ff ff \tlea    -0x260(%rbp),%rax\n     cab:\t48 8b 95 e0 fc ff ff \tmov    -0x320(%rbp),%rdx\n     cb2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     cb7:\t48 89 c7             \tmov    %rax,%rdi\n     cba:\te8 00 00 00 00       \tcallq  cbf <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x164>\n     cbf:\t48 8d 85 80 fd ff ff \tlea    -0x280(%rbp),%rax\n     cc6:\t48 8d 8d a0 fd ff ff \tlea    -0x260(%rbp),%rcx\n     ccd:\tba 00 00 00 00       \tmov    $0x0,%edx\n     cd2:\t48 89 ce             \tmov    %rcx,%rsi\n     cd5:\t48 89 c7             \tmov    %rax,%rdi\n     cd8:\te8 00 00 00 00       \tcallq  cdd <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x182>\n     cdd:\t48 8d 8d 20 fd ff ff \tlea    -0x2e0(%rbp),%rcx\n     ce4:\t48 8d 95 50 fd ff ff \tlea    -0x2b0(%rbp),%rdx\n     ceb:\t48 8d 85 80 fd ff ff \tlea    -0x280(%rbp),%rax\n     cf2:\t49 89 c8             \tmov    %rcx,%r8\n     cf5:\tb9 8a 00 00 00       \tmov    $0x8a,%ecx\n     cfa:\t48 89 c6             \tmov    %rax,%rsi\n     cfd:\t48 89 df             \tmov    %rbx,%rdi\n     d00:\te8 00 00 00 00       \tcallq  d05 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1aa>\n     d05:\t48 8d 85 80 fd ff ff \tlea    -0x280(%rbp),%rax\n     d0c:\t48 89 c7             \tmov    %rax,%rdi\n     d0f:\te8 00 00 00 00       \tcallq  d14 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1b9>\n     d14:\t48 8d 85 a0 fd ff ff \tlea    -0x260(%rbp),%rax\n     d1b:\t48 89 c7             \tmov    %rax,%rdi\n     d1e:\te8 00 00 00 00       \tcallq  d23 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1c8>\n     d23:\t48 8d 85 50 fd ff ff \tlea    -0x2b0(%rbp),%rax\n     d2a:\t48 89 c7             \tmov    %rax,%rdi\n     d2d:\te8 00 00 00 00       \tcallq  d32 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1d7>\n     d32:\t48 8d 85 7f fd ff ff \tlea    -0x281(%rbp),%rax\n     d39:\t48 89 c7             \tmov    %rax,%rdi\n     d3c:\te8 00 00 00 00       \tcallq  d41 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1e6>\n     d41:\t48 8d 85 20 fd ff ff \tlea    -0x2e0(%rbp),%rax\n     d48:\t48 89 c7             \tmov    %rax,%rdi\n     d4b:\te8 00 00 00 00       \tcallq  d50 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1f5>\n     d50:\t48 8d 85 4f fd ff ff \tlea    -0x2b1(%rbp),%rax\n     d57:\t48 89 c7             \tmov    %rax,%rdi\n     d5a:\te8 00 00 00 00       \tcallq  d5f <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x204>\n     d5f:\tba 00 00 00 00       \tmov    $0x0,%edx\n     d64:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     d69:\t48 89 df             \tmov    %rbx,%rdi\n     d6c:\te8 00 00 00 00       \tcallq  d71 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x216>\n     d71:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     d75:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n     d79:\t48 8b 85 e8 fc ff ff \tmov    -0x318(%rbp),%rax\n     d80:\t48 89 d6             \tmov    %rdx,%rsi\n     d83:\t48 89 c7             \tmov    %rax,%rdi\n     d86:\te8 00 00 00 00       \tcallq  d8b <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x230>\n     d8b:\t0f b6 00             \tmovzbl (%rax),%eax\n     d8e:\t88 85 1d fd ff ff    \tmov    %al,-0x2e3(%rbp)\n     d94:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     d98:\t48 8d 50 02          \tlea    0x2(%rax),%rdx\n     d9c:\t48 8b 85 e8 fc ff ff \tmov    -0x318(%rbp),%rax\n     da3:\t48 89 d6             \tmov    %rdx,%rsi\n     da6:\t48 89 c7             \tmov    %rax,%rdi\n     da9:\te8 00 00 00 00       \tcallq  dae <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x253>\n     dae:\t0f b6 00             \tmovzbl (%rax),%eax\n     db1:\t88 85 1e fd ff ff    \tmov    %al,-0x2e2(%rbp)\n     db7:\tc6 85 1f fd ff ff 00 \tmovb   $0x0,-0x2e1(%rbp)\n     dbe:\t48 c7 85 10 fd ff ff \tmovq   $0x0,-0x2f0(%rbp)\n     dc5:\t00 00 00 00 \n     dc9:\t48 8d 8d 10 fd ff ff \tlea    -0x2f0(%rbp),%rcx\n     dd0:\t48 8d 85 1d fd ff ff \tlea    -0x2e3(%rbp),%rax\n     dd7:\tba 10 00 00 00       \tmov    $0x10,%edx\n     ddc:\t48 89 ce             \tmov    %rcx,%rsi\n     ddf:\t48 89 c7             \tmov    %rax,%rdi\n     de2:\te8 00 00 00 00       \tcallq  de7 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x28c>\n     de7:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n     deb:\t48 8b 85 10 fd ff ff \tmov    -0x2f0(%rbp),%rax\n     df2:\t0f b6 00             \tmovzbl (%rax),%eax\n     df5:\t84 c0                \ttest   %al,%al\n     df7:\t75 0b                \tjne    e04 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2a9>\n     df9:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n     dfe:\t0f 89 2e 01 00 00    \tjns    f32 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3d7>\n     e04:\tbf 20 00 00 00       \tmov    $0x20,%edi\n     e09:\te8 00 00 00 00       \tcallq  e0e <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2b3>\n     e0e:\t48 89 c3             \tmov    %rax,%rbx\n     e11:\t48 8d 85 ef fd ff ff \tlea    -0x211(%rbp),%rax\n     e18:\t48 89 c7             \tmov    %rax,%rdi\n     e1b:\te8 00 00 00 00       \tcallq  e20 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c5>\n     e20:\t48 8d 95 ef fd ff ff \tlea    -0x211(%rbp),%rdx\n     e27:\t48 8d 85 c0 fd ff ff \tlea    -0x240(%rbp),%rax\n     e2e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     e33:\t48 89 c7             \tmov    %rax,%rdi\n     e36:\te8 00 00 00 00       \tcallq  e3b <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2e0>\n     e3b:\t48 8d 85 1f fe ff ff \tlea    -0x1e1(%rbp),%rax\n     e42:\t48 89 c7             \tmov    %rax,%rdi\n     e45:\te8 00 00 00 00       \tcallq  e4a <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2ef>\n     e4a:\t48 8d 95 1f fe ff ff \tlea    -0x1e1(%rbp),%rdx\n     e51:\t48 8d 85 f0 fd ff ff \tlea    -0x210(%rbp),%rax\n     e58:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     e5d:\t48 89 c7             \tmov    %rax,%rdi\n     e60:\te8 00 00 00 00       \tcallq  e65 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x30a>\n     e65:\t48 8d 85 40 fe ff ff \tlea    -0x1c0(%rbp),%rax\n     e6c:\t48 8b 95 e0 fc ff ff \tmov    -0x320(%rbp),%rdx\n     e73:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     e78:\t48 89 c7             \tmov    %rax,%rdi\n     e7b:\te8 00 00 00 00       \tcallq  e80 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x325>\n     e80:\t48 8d 85 20 fe ff ff \tlea    -0x1e0(%rbp),%rax\n     e87:\t48 8d 8d 40 fe ff ff \tlea    -0x1c0(%rbp),%rcx\n     e8e:\tba 00 00 00 00       \tmov    $0x0,%edx\n     e93:\t48 89 ce             \tmov    %rcx,%rsi\n     e96:\t48 89 c7             \tmov    %rax,%rdi\n     e99:\te8 00 00 00 00       \tcallq  e9e <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x343>\n     e9e:\t48 8d 8d c0 fd ff ff \tlea    -0x240(%rbp),%rcx\n     ea5:\t48 8d 95 f0 fd ff ff \tlea    -0x210(%rbp),%rdx\n     eac:\t48 8d 85 20 fe ff ff \tlea    -0x1e0(%rbp),%rax\n     eb3:\t49 89 c8             \tmov    %rcx,%r8\n     eb6:\tb9 93 00 00 00       \tmov    $0x93,%ecx\n     ebb:\t48 89 c6             \tmov    %rax,%rsi\n     ebe:\t48 89 df             \tmov    %rbx,%rdi\n     ec1:\te8 00 00 00 00       \tcallq  ec6 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x36b>\n     ec6:\t48 8d 85 20 fe ff ff \tlea    -0x1e0(%rbp),%rax\n     ecd:\t48 89 c7             \tmov    %rax,%rdi\n     ed0:\te8 00 00 00 00       \tcallq  ed5 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37a>\n     ed5:\t48 8d 85 40 fe ff ff \tlea    -0x1c0(%rbp),%rax\n     edc:\t48 89 c7             \tmov    %rax,%rdi\n     edf:\te8 00 00 00 00       \tcallq  ee4 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x389>\n     ee4:\t48 8d 85 f0 fd ff ff \tlea    -0x210(%rbp),%rax\n     eeb:\t48 89 c7             \tmov    %rax,%rdi\n     eee:\te8 00 00 00 00       \tcallq  ef3 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x398>\n     ef3:\t48 8d 85 1f fe ff ff \tlea    -0x1e1(%rbp),%rax\n     efa:\t48 89 c7             \tmov    %rax,%rdi\n     efd:\te8 00 00 00 00       \tcallq  f02 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3a7>\n     f02:\t48 8d 85 c0 fd ff ff \tlea    -0x240(%rbp),%rax\n     f09:\t48 89 c7             \tmov    %rax,%rdi\n     f0c:\te8 00 00 00 00       \tcallq  f11 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3b6>\n     f11:\t48 8d 85 ef fd ff ff \tlea    -0x211(%rbp),%rax\n     f18:\t48 89 c7             \tmov    %rax,%rdi\n     f1b:\te8 00 00 00 00       \tcallq  f20 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3c5>\n     f20:\tba 00 00 00 00       \tmov    $0x0,%edx\n     f25:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     f2a:\t48 89 df             \tmov    %rbx,%rdi\n     f2d:\te8 00 00 00 00       \tcallq  f32 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3d7>\n     f32:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     f36:\t88 45 e7             \tmov    %al,-0x19(%rbp)\n     f39:\te9 35 02 00 00       \tjmpq   1173 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x618>\n     f3e:\tc7 45 e0 01 00 00 00 \tmovl   $0x1,-0x20(%rbp)\n     f45:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     f49:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n     f4d:\t48 8b 85 e8 fc ff ff \tmov    -0x318(%rbp),%rax\n     f54:\t48 89 d6             \tmov    %rdx,%rsi\n     f57:\t48 89 c7             \tmov    %rax,%rdi\n     f5a:\te8 00 00 00 00       \tcallq  f5f <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x404>\n     f5f:\t0f b6 00             \tmovzbl (%rax),%eax\n     f62:\t0f be c0             \tmovsbl %al,%eax\n     f65:\t83 f8 74             \tcmp    $0x74,%eax\n     f68:\t74 24                \tje     f8e <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x433>\n     f6a:\t83 f8 74             \tcmp    $0x74,%eax\n     f6d:\t7f 3a                \tjg     fa9 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44e>\n     f6f:\t83 f8 73             \tcmp    $0x73,%eax\n     f72:\t74 2c                \tje     fa0 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x445>\n     f74:\t83 f8 73             \tcmp    $0x73,%eax\n     f77:\t7f 30                \tjg     fa9 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44e>\n     f79:\t83 f8 5c             \tcmp    $0x5c,%eax\n     f7c:\t74 07                \tje     f85 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x42a>\n     f7e:\t83 f8 6e             \tcmp    $0x6e,%eax\n     f81:\t74 14                \tje     f97 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x43c>\n     f83:\teb 24                \tjmp    fa9 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44e>\n     f85:\tc6 45 e7 5c          \tmovb   $0x5c,-0x19(%rbp)\n     f89:\te9 e5 01 00 00       \tjmpq   1173 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x618>\n     f8e:\tc6 45 e7 09          \tmovb   $0x9,-0x19(%rbp)\n     f92:\te9 dc 01 00 00       \tjmpq   1173 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x618>\n     f97:\tc6 45 e7 0a          \tmovb   $0xa,-0x19(%rbp)\n     f9b:\te9 d3 01 00 00       \tjmpq   1173 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x618>\n     fa0:\tc6 45 e7 20          \tmovb   $0x20,-0x19(%rbp)\n     fa4:\te9 ca 01 00 00       \tjmpq   1173 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x618>\n     fa9:\t48 8d 85 6f fe ff ff \tlea    -0x191(%rbp),%rax\n     fb0:\t48 89 c7             \tmov    %rax,%rdi\n     fb3:\te8 00 00 00 00       \tcallq  fb8 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x45d>\n     fb8:\t48 8d 95 6f fe ff ff \tlea    -0x191(%rbp),%rdx\n     fbf:\t48 8d 85 f0 fc ff ff \tlea    -0x310(%rbp),%rax\n     fc6:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     fcb:\t48 89 c7             \tmov    %rax,%rdi\n     fce:\te8 00 00 00 00       \tcallq  fd3 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x478>\n     fd3:\t48 8d 85 6f fe ff ff \tlea    -0x191(%rbp),%rax\n     fda:\t48 89 c7             \tmov    %rax,%rdi\n     fdd:\te8 00 00 00 00       \tcallq  fe2 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x487>\n     fe2:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     fe6:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n     fea:\t48 8b 85 e8 fc ff ff \tmov    -0x318(%rbp),%rax\n     ff1:\t48 89 d6             \tmov    %rdx,%rsi\n     ff4:\t48 89 c7             \tmov    %rax,%rdi\n     ff7:\te8 00 00 00 00       \tcallq  ffc <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4a1>\n     ffc:\t0f b6 00             \tmovzbl (%rax),%eax\n     fff:\t0f be d0             \tmovsbl %al,%edx\n    1002:\t48 8d 85 f0 fc ff ff \tlea    -0x310(%rbp),%rax\n    1009:\t89 d6                \tmov    %edx,%esi\n    100b:\t48 89 c7             \tmov    %rax,%rdi\n    100e:\te8 00 00 00 00       \tcallq  1013 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4b8>\n    1013:\tbf 20 00 00 00       \tmov    $0x20,%edi\n    1018:\te8 00 00 00 00       \tcallq  101d <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4c2>\n    101d:\t48 89 c3             \tmov    %rax,%rbx\n    1020:\t48 8d 85 9f fe ff ff \tlea    -0x161(%rbp),%rax\n    1027:\t48 89 c7             \tmov    %rax,%rdi\n    102a:\te8 00 00 00 00       \tcallq  102f <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4d4>\n    102f:\t48 8d 95 9f fe ff ff \tlea    -0x161(%rbp),%rdx\n    1036:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n    103d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1042:\t48 89 c7             \tmov    %rax,%rdi\n    1045:\te8 00 00 00 00       \tcallq  104a <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ef>\n    104a:\t48 8d 85 cf fe ff ff \tlea    -0x131(%rbp),%rax\n    1051:\t48 89 c7             \tmov    %rax,%rdi\n    1054:\te8 00 00 00 00       \tcallq  1059 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4fe>\n    1059:\t48 8d 95 cf fe ff ff \tlea    -0x131(%rbp),%rdx\n    1060:\t48 8d 85 a0 fe ff ff \tlea    -0x160(%rbp),%rax\n    1067:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    106c:\t48 89 c7             \tmov    %rax,%rdi\n    106f:\te8 00 00 00 00       \tcallq  1074 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x519>\n    1074:\t48 8d 85 10 ff ff ff \tlea    -0xf0(%rbp),%rax\n    107b:\t48 8d 8d f0 fc ff ff \tlea    -0x310(%rbp),%rcx\n    1082:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1087:\t48 89 ce             \tmov    %rcx,%rsi\n    108a:\t48 89 c7             \tmov    %rax,%rdi\n    108d:\te8 00 00 00 00       \tcallq  1092 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x537>\n    1092:\t48 8d 85 f0 fe ff ff \tlea    -0x110(%rbp),%rax\n    1099:\t48 8b 95 e0 fc ff ff \tmov    -0x320(%rbp),%rdx\n    10a0:\t48 8d 8d 10 ff ff ff \tlea    -0xf0(%rbp),%rcx\n    10a7:\t48 89 ce             \tmov    %rcx,%rsi\n    10aa:\t48 89 c7             \tmov    %rax,%rdi\n    10ad:\te8 00 00 00 00       \tcallq  10b2 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x557>\n    10b2:\t48 8d 85 d0 fe ff ff \tlea    -0x130(%rbp),%rax\n    10b9:\t48 8d 8d f0 fe ff ff \tlea    -0x110(%rbp),%rcx\n    10c0:\tba 00 00 00 00       \tmov    $0x0,%edx\n    10c5:\t48 89 ce             \tmov    %rcx,%rsi\n    10c8:\t48 89 c7             \tmov    %rax,%rdi\n    10cb:\te8 00 00 00 00       \tcallq  10d0 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x575>\n    10d0:\t48 8d 8d 70 fe ff ff \tlea    -0x190(%rbp),%rcx\n    10d7:\t48 8d 95 a0 fe ff ff \tlea    -0x160(%rbp),%rdx\n    10de:\t48 8d 85 d0 fe ff ff \tlea    -0x130(%rbp),%rax\n    10e5:\t49 89 c8             \tmov    %rcx,%r8\n    10e8:\tb9 a8 00 00 00       \tmov    $0xa8,%ecx\n    10ed:\t48 89 c6             \tmov    %rax,%rsi\n    10f0:\t48 89 df             \tmov    %rbx,%rdi\n    10f3:\te8 00 00 00 00       \tcallq  10f8 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x59d>\n    10f8:\t48 8d 85 d0 fe ff ff \tlea    -0x130(%rbp),%rax\n    10ff:\t48 89 c7             \tmov    %rax,%rdi\n    1102:\te8 00 00 00 00       \tcallq  1107 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x5ac>\n    1107:\t48 8d 85 f0 fe ff ff \tlea    -0x110(%rbp),%rax\n    110e:\t48 89 c7             \tmov    %rax,%rdi\n    1111:\te8 00 00 00 00       \tcallq  1116 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x5bb>\n    1116:\t48 8d 85 10 ff ff ff \tlea    -0xf0(%rbp),%rax\n    111d:\t48 89 c7             \tmov    %rax,%rdi\n    1120:\te8 00 00 00 00       \tcallq  1125 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x5ca>\n    1125:\t48 8d 85 a0 fe ff ff \tlea    -0x160(%rbp),%rax\n    112c:\t48 89 c7             \tmov    %rax,%rdi\n    112f:\te8 00 00 00 00       \tcallq  1134 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x5d9>\n    1134:\t48 8d 85 cf fe ff ff \tlea    -0x131(%rbp),%rax\n    113b:\t48 89 c7             \tmov    %rax,%rdi\n    113e:\te8 00 00 00 00       \tcallq  1143 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x5e8>\n    1143:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n    114a:\t48 89 c7             \tmov    %rax,%rdi\n    114d:\te8 00 00 00 00       \tcallq  1152 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x5f7>\n    1152:\t48 8d 85 9f fe ff ff \tlea    -0x161(%rbp),%rax\n    1159:\t48 89 c7             \tmov    %rax,%rdi\n    115c:\te8 00 00 00 00       \tcallq  1161 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x606>\n    1161:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1166:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    116b:\t48 89 df             \tmov    %rbx,%rdi\n    116e:\te8 00 00 00 00       \tcallq  1173 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x618>\n    1173:\t0f be 4d e7          \tmovsbl -0x19(%rbp),%ecx\n    1177:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n    117a:\t83 c0 01             \tadd    $0x1,%eax\n    117d:\t48 63 d0             \tmovslq %eax,%rdx\n    1180:\t48 8b 75 e8          \tmov    -0x18(%rbp),%rsi\n    1184:\t48 8b 85 e8 fc ff ff \tmov    -0x318(%rbp),%rax\n    118b:\t41 89 c8             \tmov    %ecx,%r8d\n    118e:\tb9 01 00 00 00       \tmov    $0x1,%ecx\n    1193:\t48 89 c7             \tmov    %rax,%rdi\n    1196:\te8 00 00 00 00       \tcallq  119b <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x640>\n    119b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    119f:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    11a3:\t48 8b 85 e8 fc ff ff \tmov    -0x318(%rbp),%rax\n    11aa:\tbe 5c 00 00 00       \tmov    $0x5c,%esi\n    11af:\t48 89 c7             \tmov    %rax,%rdi\n    11b2:\te8 00 00 00 00       \tcallq  11b7 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x65c>\n    11b7:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    11bb:\te9 ed f9 ff ff       \tjmpq   bad <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x52>\n    11c0:\tbf 20 00 00 00       \tmov    $0x20,%edi\n    11c5:\te8 00 00 00 00       \tcallq  11ca <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x66f>\n    11ca:\t48 89 c3             \tmov    %rax,%rbx\n    11cd:\t48 8d 85 5f ff ff ff \tlea    -0xa1(%rbp),%rax\n    11d4:\t48 89 c7             \tmov    %rax,%rdi\n    11d7:\te8 00 00 00 00       \tcallq  11dc <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x681>\n    11dc:\t48 8d 95 5f ff ff ff \tlea    -0xa1(%rbp),%rdx\n    11e3:\t48 8d 85 30 ff ff ff \tlea    -0xd0(%rbp),%rax\n    11ea:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    11ef:\t48 89 c7             \tmov    %rax,%rdi\n    11f2:\te8 00 00 00 00       \tcallq  11f7 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x69c>\n    11f7:\t48 8d 45 8f          \tlea    -0x71(%rbp),%rax\n    11fb:\t48 89 c7             \tmov    %rax,%rdi\n    11fe:\te8 00 00 00 00       \tcallq  1203 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6a8>\n    1203:\t48 8d 55 8f          \tlea    -0x71(%rbp),%rdx\n    1207:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n    120e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1213:\t48 89 c7             \tmov    %rax,%rdi\n    1216:\te8 00 00 00 00       \tcallq  121b <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6c0>\n    121b:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    121f:\t48 8b 95 e0 fc ff ff \tmov    -0x320(%rbp),%rdx\n    1226:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    122b:\t48 89 c7             \tmov    %rax,%rdi\n    122e:\te8 00 00 00 00       \tcallq  1233 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6d8>\n    1233:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    1237:\t48 8d 4d b0          \tlea    -0x50(%rbp),%rcx\n    123b:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1240:\t48 89 ce             \tmov    %rcx,%rsi\n    1243:\t48 89 c7             \tmov    %rax,%rdi\n    1246:\te8 00 00 00 00       \tcallq  124b <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6f0>\n    124b:\t48 8d 8d 30 ff ff ff \tlea    -0xd0(%rbp),%rcx\n    1252:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n    1259:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    125d:\t49 89 c8             \tmov    %rcx,%r8\n    1260:\tb9 ae 00 00 00       \tmov    $0xae,%ecx\n    1265:\t48 89 c6             \tmov    %rax,%rsi\n    1268:\t48 89 df             \tmov    %rbx,%rdi\n    126b:\te8 00 00 00 00       \tcallq  1270 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x715>\n    1270:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    1274:\t48 89 c7             \tmov    %rax,%rdi\n    1277:\te8 00 00 00 00       \tcallq  127c <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x721>\n    127c:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    1280:\t48 89 c7             \tmov    %rax,%rdi\n    1283:\te8 00 00 00 00       \tcallq  1288 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x72d>\n    1288:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n    128f:\t48 89 c7             \tmov    %rax,%rdi\n    1292:\te8 00 00 00 00       \tcallq  1297 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x73c>\n    1297:\t48 8d 45 8f          \tlea    -0x71(%rbp),%rax\n    129b:\t48 89 c7             \tmov    %rax,%rdi\n    129e:\te8 00 00 00 00       \tcallq  12a3 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x748>\n    12a3:\t48 8d 85 30 ff ff ff \tlea    -0xd0(%rbp),%rax\n    12aa:\t48 89 c7             \tmov    %rax,%rdi\n    12ad:\te8 00 00 00 00       \tcallq  12b2 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x757>\n    12b2:\t48 8d 85 5f ff ff ff \tlea    -0xa1(%rbp),%rax\n    12b9:\t48 89 c7             \tmov    %rax,%rdi\n    12bc:\te8 00 00 00 00       \tcallq  12c1 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x766>\n    12c1:\tba 00 00 00 00       \tmov    $0x0,%edx\n    12c6:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    12cb:\t48 89 df             \tmov    %rbx,%rdi\n    12ce:\te8 00 00 00 00       \tcallq  12d3 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x778>\n    12d3:\t49 89 c4             \tmov    %rax,%r12\n    12d6:\t48 8d 85 80 fd ff ff \tlea    -0x280(%rbp),%rax\n    12dd:\t48 89 c7             \tmov    %rax,%rdi\n    12e0:\te8 00 00 00 00       \tcallq  12e5 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x78a>\n    12e5:\teb 03                \tjmp    12ea <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x78f>\n    12e7:\t49 89 c4             \tmov    %rax,%r12\n    12ea:\t48 8d 85 a0 fd ff ff \tlea    -0x260(%rbp),%rax\n    12f1:\t48 89 c7             \tmov    %rax,%rdi\n    12f4:\te8 00 00 00 00       \tcallq  12f9 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x79e>\n    12f9:\teb 03                \tjmp    12fe <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7a3>\n    12fb:\t49 89 c4             \tmov    %rax,%r12\n    12fe:\t48 8d 85 50 fd ff ff \tlea    -0x2b0(%rbp),%rax\n    1305:\t48 89 c7             \tmov    %rax,%rdi\n    1308:\te8 00 00 00 00       \tcallq  130d <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7b2>\n    130d:\teb 03                \tjmp    1312 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7b7>\n    130f:\t49 89 c4             \tmov    %rax,%r12\n    1312:\t48 8d 85 7f fd ff ff \tlea    -0x281(%rbp),%rax\n    1319:\t48 89 c7             \tmov    %rax,%rdi\n    131c:\te8 00 00 00 00       \tcallq  1321 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7c6>\n    1321:\t48 8d 85 20 fd ff ff \tlea    -0x2e0(%rbp),%rax\n    1328:\t48 89 c7             \tmov    %rax,%rdi\n    132b:\te8 00 00 00 00       \tcallq  1330 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7d5>\n    1330:\teb 03                \tjmp    1335 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7da>\n    1332:\t49 89 c4             \tmov    %rax,%r12\n    1335:\t48 8d 85 4f fd ff ff \tlea    -0x2b1(%rbp),%rax\n    133c:\t48 89 c7             \tmov    %rax,%rdi\n    133f:\te8 00 00 00 00       \tcallq  1344 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7e9>\n    1344:\t48 89 df             \tmov    %rbx,%rdi\n    1347:\te8 00 00 00 00       \tcallq  134c <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x7f1>\n    134c:\t4c 89 e3             \tmov    %r12,%rbx\n    134f:\te9 b6 01 00 00       \tjmpq   150a <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9af>\n    1354:\t49 89 c4             \tmov    %rax,%r12\n    1357:\t48 8d 85 20 fe ff ff \tlea    -0x1e0(%rbp),%rax\n    135e:\t48 89 c7             \tmov    %rax,%rdi\n    1361:\te8 00 00 00 00       \tcallq  1366 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x80b>\n    1366:\teb 03                \tjmp    136b <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x810>\n    1368:\t49 89 c4             \tmov    %rax,%r12\n    136b:\t48 8d 85 40 fe ff ff \tlea    -0x1c0(%rbp),%rax\n    1372:\t48 89 c7             \tmov    %rax,%rdi\n    1375:\te8 00 00 00 00       \tcallq  137a <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x81f>\n    137a:\teb 03                \tjmp    137f <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x824>\n    137c:\t49 89 c4             \tmov    %rax,%r12\n    137f:\t48 8d 85 f0 fd ff ff \tlea    -0x210(%rbp),%rax\n    1386:\t48 89 c7             \tmov    %rax,%rdi\n    1389:\te8 00 00 00 00       \tcallq  138e <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x833>\n    138e:\teb 03                \tjmp    1393 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x838>\n    1390:\t49 89 c4             \tmov    %rax,%r12\n    1393:\t48 8d 85 1f fe ff ff \tlea    -0x1e1(%rbp),%rax\n    139a:\t48 89 c7             \tmov    %rax,%rdi\n    139d:\te8 00 00 00 00       \tcallq  13a2 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>\n    13a2:\t48 8d 85 c0 fd ff ff \tlea    -0x240(%rbp),%rax\n    13a9:\t48 89 c7             \tmov    %rax,%rdi\n    13ac:\te8 00 00 00 00       \tcallq  13b1 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x856>\n    13b1:\teb 03                \tjmp    13b6 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x85b>\n    13b3:\t49 89 c4             \tmov    %rax,%r12\n    13b6:\t48 8d 85 ef fd ff ff \tlea    -0x211(%rbp),%rax\n    13bd:\t48 89 c7             \tmov    %rax,%rdi\n    13c0:\te8 00 00 00 00       \tcallq  13c5 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x86a>\n    13c5:\t48 89 df             \tmov    %rbx,%rdi\n    13c8:\te8 00 00 00 00       \tcallq  13cd <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x872>\n    13cd:\t4c 89 e3             \tmov    %r12,%rbx\n    13d0:\te9 35 01 00 00       \tjmpq   150a <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9af>\n    13d5:\t48 89 c3             \tmov    %rax,%rbx\n    13d8:\t48 8d 85 6f fe ff ff \tlea    -0x191(%rbp),%rax\n    13df:\t48 89 c7             \tmov    %rax,%rdi\n    13e2:\te8 00 00 00 00       \tcallq  13e7 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x88c>\n    13e7:\te9 1e 01 00 00       \tjmpq   150a <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9af>\n    13ec:\t49 89 c4             \tmov    %rax,%r12\n    13ef:\t48 8d 85 d0 fe ff ff \tlea    -0x130(%rbp),%rax\n    13f6:\t48 89 c7             \tmov    %rax,%rdi\n    13f9:\te8 00 00 00 00       \tcallq  13fe <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a3>\n    13fe:\teb 03                \tjmp    1403 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a8>\n    1400:\t49 89 c4             \tmov    %rax,%r12\n    1403:\t48 8d 85 f0 fe ff ff \tlea    -0x110(%rbp),%rax\n    140a:\t48 89 c7             \tmov    %rax,%rdi\n    140d:\te8 00 00 00 00       \tcallq  1412 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8b7>\n    1412:\teb 03                \tjmp    1417 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8bc>\n    1414:\t49 89 c4             \tmov    %rax,%r12\n    1417:\t48 8d 85 10 ff ff ff \tlea    -0xf0(%rbp),%rax\n    141e:\t48 89 c7             \tmov    %rax,%rdi\n    1421:\te8 00 00 00 00       \tcallq  1426 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8cb>\n    1426:\teb 03                \tjmp    142b <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8d0>\n    1428:\t49 89 c4             \tmov    %rax,%r12\n    142b:\t48 8d 85 a0 fe ff ff \tlea    -0x160(%rbp),%rax\n    1432:\t48 89 c7             \tmov    %rax,%rdi\n    1435:\te8 00 00 00 00       \tcallq  143a <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8df>\n    143a:\teb 03                \tjmp    143f <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e4>\n    143c:\t49 89 c4             \tmov    %rax,%r12\n    143f:\t48 8d 85 cf fe ff ff \tlea    -0x131(%rbp),%rax\n    1446:\t48 89 c7             \tmov    %rax,%rdi\n    1449:\te8 00 00 00 00       \tcallq  144e <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8f3>\n    144e:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n    1455:\t48 89 c7             \tmov    %rax,%rdi\n    1458:\te8 00 00 00 00       \tcallq  145d <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x902>\n    145d:\teb 03                \tjmp    1462 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x907>\n    145f:\t49 89 c4             \tmov    %rax,%r12\n    1462:\t48 8d 85 9f fe ff ff \tlea    -0x161(%rbp),%rax\n    1469:\t48 89 c7             \tmov    %rax,%rdi\n    146c:\te8 00 00 00 00       \tcallq  1471 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x916>\n    1471:\t48 89 df             \tmov    %rbx,%rdi\n    1474:\te8 00 00 00 00       \tcallq  1479 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x91e>\n    1479:\t4c 89 e3             \tmov    %r12,%rbx\n    147c:\teb 03                \tjmp    1481 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x926>\n    147e:\t48 89 c3             \tmov    %rax,%rbx\n    1481:\t48 8d 85 f0 fc ff ff \tlea    -0x310(%rbp),%rax\n    1488:\t48 89 c7             \tmov    %rax,%rdi\n    148b:\te8 00 00 00 00       \tcallq  1490 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x935>\n    1490:\teb 78                \tjmp    150a <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9af>\n    1492:\t49 89 c4             \tmov    %rax,%r12\n    1495:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    1499:\t48 89 c7             \tmov    %rax,%rdi\n    149c:\te8 00 00 00 00       \tcallq  14a1 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x946>\n    14a1:\teb 03                \tjmp    14a6 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x94b>\n    14a3:\t49 89 c4             \tmov    %rax,%r12\n    14a6:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    14aa:\t48 89 c7             \tmov    %rax,%rdi\n    14ad:\te8 00 00 00 00       \tcallq  14b2 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x957>\n    14b2:\teb 03                \tjmp    14b7 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x95c>\n    14b4:\t49 89 c4             \tmov    %rax,%r12\n    14b7:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n    14be:\t48 89 c7             \tmov    %rax,%rdi\n    14c1:\te8 00 00 00 00       \tcallq  14c6 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x96b>\n    14c6:\teb 03                \tjmp    14cb <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x970>\n    14c8:\t49 89 c4             \tmov    %rax,%r12\n    14cb:\t48 8d 45 8f          \tlea    -0x71(%rbp),%rax\n    14cf:\t48 89 c7             \tmov    %rax,%rdi\n    14d2:\te8 00 00 00 00       \tcallq  14d7 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x97c>\n    14d7:\t48 8d 85 30 ff ff ff \tlea    -0xd0(%rbp),%rax\n    14de:\t48 89 c7             \tmov    %rax,%rdi\n    14e1:\te8 00 00 00 00       \tcallq  14e6 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x98b>\n    14e6:\teb 03                \tjmp    14eb <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x990>\n    14e8:\t49 89 c4             \tmov    %rax,%r12\n    14eb:\t48 8d 85 5f ff ff ff \tlea    -0xa1(%rbp),%rax\n    14f2:\t48 89 c7             \tmov    %rax,%rdi\n    14f5:\te8 00 00 00 00       \tcallq  14fa <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x99f>\n    14fa:\t48 89 df             \tmov    %rbx,%rdi\n    14fd:\te8 00 00 00 00       \tcallq  1502 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9a7>\n    1502:\t4c 89 e3             \tmov    %r12,%rbx\n    1505:\teb 03                \tjmp    150a <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9af>\n    1507:\t48 89 c3             \tmov    %rax,%rbx\n    150a:\t48 8b 85 e8 fc ff ff \tmov    -0x318(%rbp),%rax\n    1511:\t48 89 c7             \tmov    %rax,%rdi\n    1514:\te8 00 00 00 00       \tcallq  1519 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9be>\n    1519:\t48 89 d8             \tmov    %rbx,%rax\n    151c:\t48 89 c7             \tmov    %rax,%rdi\n    151f:\te8 00 00 00 00       \tcallq  1524 <_ZN11HadoopUtils13unquoteStringERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9c9>\n    1524:\t90                   \tnop\n    1525:\t48 8b 85 e8 fc ff ff \tmov    -0x318(%rbp),%rax\n    152c:\t48 81 c4 10 03 00 00 \tadd    $0x310,%rsp\n    1533:\t5b                   \tpop    %rbx\n    1534:\t41 5c                \tpop    %r12\n    1536:\t5d                   \tpop    %rbp\n    1537:\tc3                   \tretq   ", "code_s": "__int64 __fastcall HadoopUtils unquoteString(__int64 a1, __int64 a2) {\n  unsigned __int64 v2;\n  char *v3;\n  unsigned __int64 v4;\n  void *v5;\n  void *v6;\n  int v7;\n  char *v8;\n  void *v9;\n  void *v10;\n  char v12[Number];\n  char *endptr;\n  char nptr[Number];\n  char v15[Number];\n  char v16;\n  char v17[Number];\n  char v18;\n  char v19[Number];\n  char v20[Number];\n  char v21[Number];\n  char v22;\n  char v23[Number];\n  char v24;\n  char v25[Number];\n  char v26[Number];\n  char v27;\n  char v28[Number];\n  char v29;\n  char v30[Number];\n  char v31;\n  char v32[Number];\n  char v33[Number];\n  char v34[Number];\n  char v35[Number];\n  char v36;\n  char v37[Number];\n  char v38;\n  char v39[Number];\n  char v40[Number];\n  __int64 v41;\n  int v42;\n  char v43;\n  __int64 i;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(a1, a2);\n  for (i = std __cxx11\n           basic_string<char, std char_traits<char>, std allocator<char>>\n               find(a1, Number L, Number L);\n       i != Number;\n       i = std __cxx11\n           basic_string<char, std char_traits<char>, std allocator<char>>\n               find(a1, Number L, i + Number)) {\n    v2 = i + Number;\n    if (v2 >= std __cxx11\n                  basic_string<char, std char_traits<char>, std allocator<char>>\n                      size(a1)) {\n      v10 = _cxa_allocate_exception(Number);\n      std allocator<char> allocator(&v36);\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          basic_string(v35, String, &v36);\n      std allocator<char> allocator(&v38);\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          basic_string(v37, String, &v38);\n      std operator+<char>(v40, String, a2);\n      std operator+<char>(v39, v40, String);\n      HadoopUtils Error Error(v10, v39, v37, Number L, v35);\n      std __cxx11 basic_string<char, std char_traits<char>,\n                               std allocator<char>> ~basic_string(v39);\n      std __cxx11 basic_string<char, std char_traits<char>,\n                               std allocator<char>> ~basic_string(v40);\n      std __cxx11 basic_string<char, std char_traits<char>,\n                               std allocator<char>> ~basic_string(v37);\n      std allocator<char> ~allocator(&v38);\n      std __cxx11 basic_string<char, std char_traits<char>,\n                               std allocator<char>> ~basic_string(v35);\n      std allocator<char> ~allocator(&v36); _cxa_throw ( v10 , ( struct type_info * ) & ` typeinfo for ' HadoopUtils Error , HadoopUtils Error ~ Error ) ; } v3 = ( char * ) std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> operator [ ] ( a1 , i + Number ) ; if ( isxdigit ( * v3 ) ) { v42 = Number ; v4 = i + Number ; if ( v4 >= std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> size ( a1 ) ) { v5 = _cxa_allocate_exception ( Number ) ; std allocator < char > allocator ( & v16 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> basic_string ( v15 , String , & v16 ) ; std allocator < char > allocator ( & v18 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> basic_string ( v17 , String , & v18 ) ; std operator + < char > ( v20 , String , a2 ) ; std operator + < char > ( v19 , v20 , String ) ; HadoopUtils Error Error ( v5 , v19 , v17 , Number L , v15 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( v19 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( v20 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( v17 ) ; std allocator < char > ~ allocator ( & v18 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( v15 ) ; std allocator < char > ~ allocator ( & v16 ) ; _cxa_throw ( v5 , ( struct type_info * ) & ` typeinfo for ' HadoopUtils Error , HadoopUtils Error ~ Error ) ;\n    }\n    nptr[Number] =\n        *(_BYTE *)std __cxx11\n            basic_string<char, std char_traits<char>, std allocator<char>>\n            operator[](a1, i + Number);\n    nptr[Number] =\n        *(_BYTE *)std __cxx11\n            basic_string<char, std char_traits<char>, std allocator<char>>\n            operator[](a1, i + Number);\n    nptr[Number] = Number;\n    endptr = Number L;\n    v41 = strtol(nptr, &endptr, Number);\n    if (*endptr || v41 < Number) {\n      v6 = _cxa_allocate_exception(Number);\n      std allocator<char> allocator(&v22);\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          basic_string(v21, String, &v22);\n      std allocator<char> allocator(&v24);\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          basic_string(v23, String, &v24);\n      std operator+<char>(v26, String, a2);\n      std operator+<char>(v25, v26, String);\n      HadoopUtils Error Error(v6, v25, v23, Number L, v21);\n      std __cxx11 basic_string<char, std char_traits<char>,\n                               std allocator<char>> ~basic_string(v25);\n      std __cxx11 basic_string<char, std char_traits<char>,\n                               std allocator<char>> ~basic_string(v26);\n      std __cxx11 basic_string<char, std char_traits<char>,\n                               std allocator<char>> ~basic_string(v23);\n      std allocator<char> ~allocator(&v24);\n      std __cxx11 basic_string<char, std char_traits<char>,\n                               std allocator<char>> ~basic_string(v21);\n      std allocator<char> ~allocator(&v22); _cxa_throw ( v6 , ( struct type_info * ) & ` typeinfo for ' HadoopUtils Error , HadoopUtils Error ~ Error ) ; } v43 = v41 ; } else { v42 = Number ; v7 = * ( char * ) std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> operator [ ] ( a1 , i + Number ) ; if ( v7 == Number ) { v43 = Number ; } else { if ( v7 > Number ) goto LABEL_21 ; switch ( v7 ) { case String : v43 = Number ; break ; case String : v43 = Number ; break ; case String : v43 = Number ; break ; default : LABEL_21 : std allocator < char > allocator ( & v27 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> basic_string ( v12 , String , & v27 ) ; std allocator < char > ~ allocator ( & v27 ) ; v8 = ( char * ) std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> operator [ ] ( a1 , i + Number ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> operator += ( v12 , ( unsigned int ) * v8 ) ; v9 = _cxa_allocate_exception ( Number ) ; std allocator < char > allocator ( & v29 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> basic_string ( v28 , String , & v29 ) ; std allocator < char > allocator ( & v31 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> basic_string ( v30 , String , & v31 ) ; std operator + < char > ( v34 , v12 , String ) ; std operator + < char > ( v33 , v34 , a2 ) ; std operator + < char > ( v32 , v33 , String ) ; HadoopUtils Error Error ( v9 , v32 , v30 , Number L , v28 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( v32 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( v33 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( v34 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( v30 ) ; std allocator < char > ~ allocator ( & v31 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( v28 ) ; std allocator < char > ~ allocator ( & v29 ) ; _cxa_throw ( v9 , ( struct type_info * ) & ` typeinfo for ' HadoopUtils Error , HadoopUtils Error ~ Error ) ;\n    }\n  }\n}\nstd __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\nreplace(a1, i, v42 + Number, Number L, (unsigned int)v43);\n}\nreturn a1;\n}", "code_t": "std string *__cdecl HadoopUtils unquoteString(std string *retstr,\n                                              const std string *str) {\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      size_type v2;\n  char *v3;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      size_type v4;\n  void *v5;\n  void *v6;\n  int v7;\n  char *v8;\n  void *v9;\n  void *v10;\n  std string <span class=\"supfact\">msg</span>;\n  char *end_ptr;\n  char sub_str[Number];\n  char v15[Number];\n  char v16;\n  char v17[Number];\n  char v18;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      <span class=\"supfact\">v19</span>;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      <span class=\"supfact\">__lhs</span>;\n  char v21[Number];\n  char v22;\n  char v23[Number];\n  char v24;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      <span class=\"supfact\">v25</span>;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      <span class=\"supfact\">v26</span>;\n  char v27;\n  char v28[Number];\n  char v29;\n  char v30[Number];\n  char v31;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      <span class=\"supfact\">v32</span>;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      <span class=\"supfact\">v33</span>;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      <span class=\"supfact\">v34</span>;\n  char v35[Number];\n  char v36;\n  char v37[Number];\n  char v38;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      <span class=\"supfact\">v39</span>;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      <span class=\"supfact\">v40</span>;\n  __int64 int_val;\n  int num_chars;\n  char new_ch;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      size_type current;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(retstr, str);\n  for (current = std __cxx11\n           basic_string<char, std char_traits<char>, std allocator<char>>\n               find(retstr, Number L, Number L);\n       current != Number;\n       current = std __cxx11\n           basic_string<char, std char_traits<char>, std allocator<char>>\n               find(retstr, Number L, current + Number)) {\n    v2 = current + Number;\n    if (v2 >= std __cxx11\n                  basic_string<char, std char_traits<char>, std allocator<char>>\n                      size(retstr)) {\n      v10 = _cxa_allocate_exception(Number);\n      std allocator<char> allocator(&v36);\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          basic_string(v35, String, &v36);\n      std allocator<char> allocator(&v38);\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          basic_string(v37, String, &v38);\n      std operator+<char>(&<span class=\"supfact\">v40</span>, String, str);\n      std operator+<char>(&<span class=\"supfact\">v39</span>, &<span class=\"supfact\">v40</span>, String);\n      HadoopUtils Error Error(v10, &<span class=\"supfact\">v39</span>, v37, Number L, v35);\n      std __cxx11\n          basic_string<char, std char_traits<char>,\n                       std allocator<char>> ~basic_string(&<span class=\"supfact\">v39</span>);\n      std __cxx11\n          basic_string<char, std char_traits<char>,\n                       std allocator<char>> ~basic_string(&<span class=\"supfact\">v40</span>);\n      std __cxx11 basic_string<char, std char_traits<char>,\n                               std allocator<char>> ~basic_string(v37);\n      std allocator<char> ~allocator(&v38);\n      std __cxx11 basic_string<char, std char_traits<char>,\n                               std allocator<char>> ~basic_string(v35);\n      std allocator<char> ~allocator(&v36); _cxa_throw ( v10 , ( struct type_info * ) & ` typeinfo for ' HadoopUtils Error , ( void ( __fastcall * ) ( void * ) ) HadoopUtils Error ~ Error ) ; } v3 = ( char * ) std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> operator [ ] ( retstr , current + Number ) ; if ( isxdigit ( * v3 ) ) { num_chars = Number ; v4 = current + Number ; if ( v4 >= std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> size ( retstr ) ) { v5 = _cxa_allocate_exception ( Number ) ; std allocator < char > allocator ( & v16 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> basic_string ( v15 , String , & v16 ) ; std allocator < char > allocator ( & v18 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> basic_string ( v17 , String , & v18 ) ; std operator + < char > ( & <span class=\"supfact\">__lhs</span> , String , str ) ; std operator + < char > ( & <span class=\"supfact\">v19</span> , & <span class=\"supfact\">__lhs</span> , String ) ; HadoopUtils Error Error ( v5 , & <span class=\"supfact\">v19</span> , v17 , Number L , v15 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( & <span class=\"supfact\">v19</span> ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( & <span class=\"supfact\">__lhs</span> ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( v17 ) ; std allocator < char > ~ allocator ( & v18 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( v15 ) ; std allocator < char > ~ allocator ( & v16 ) ; _cxa_throw ( v5 , ( struct type_info * ) & ` typeinfo for ' HadoopUtils Error , ( void ( __fastcall * ) ( void * ) ) HadoopUtils Error ~ Error ) ;\n    }\n    sub_str[Number] =\n        *(_BYTE *)std __cxx11\n            basic_string<char, std char_traits<char>, std allocator<char>>\n            operator[](retstr, current + Number);\n    sub_str[Number] =\n        *(_BYTE *)std __cxx11\n            basic_string<char, std char_traits<char>, std allocator<char>>\n            operator[](retstr, current + Number);\n    sub_str[Number] = Number;\n    end_ptr = Number L;\n    int_val = strtol(sub_str, &end_ptr, Number);\n    if (*end_ptr || int_val < Number) {\n      v6 = _cxa_allocate_exception(Number);\n      std allocator<char> allocator(&v22);\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          basic_string(v21, String, &v22);\n      std allocator<char> allocator(&v24);\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          basic_string(v23, String, &v24);\n      std operator+<char>(&<span class=\"supfact\">v26</span>, String, str);\n      std operator+<char>(&<span class=\"supfact\">v25</span>, &<span class=\"supfact\">v26</span>, String);\n      HadoopUtils Error Error(v6, &<span class=\"supfact\">v25</span>, v23, Number L, v21);\n      std __cxx11\n          basic_string<char, std char_traits<char>,\n                       std allocator<char>> ~basic_string(&<span class=\"supfact\">v25</span>);\n      std __cxx11\n          basic_string<char, std char_traits<char>,\n                       std allocator<char>> ~basic_string(&<span class=\"supfact\">v26</span>);\n      std __cxx11 basic_string<char, std char_traits<char>,\n                               std allocator<char>> ~basic_string(v23);\n      std allocator<char> ~allocator(&v24);\n      std __cxx11 basic_string<char, std char_traits<char>,\n                               std allocator<char>> ~basic_string(v21);\n      std allocator<char> ~allocator(&v22); _cxa_throw ( v6 , ( struct type_info * ) & ` typeinfo for ' HadoopUtils Error , ( void ( __fastcall * ) ( void * ) ) HadoopUtils Error ~ Error ) ; } new_ch = int_val ; } else { num_chars = Number ; v7 = * ( char * ) std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> operator [ ] ( retstr , current + Number ) ; if ( v7 == Number ) { new_ch = Number ; } else { if ( v7 > Number ) goto LABEL_21 ; switch ( v7 ) { case String : new_ch = Number ; break ; case String : new_ch = Number ; break ; case String : new_ch = Number ; break ; default : LABEL_21 : std allocator < char > allocator ( & v27 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> basic_string ( & <span class=\"supfact\">msg</span> , String , & v27 ) ; std allocator < char > ~ allocator ( & v27 ) ; v8 = ( char * ) std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> operator [ ] ( retstr , current + Number ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> operator += ( & <span class=\"supfact\">msg</span> , ( unsigned int ) * v8 ) ; v9 = _cxa_allocate_exception ( Number ) ; std allocator < char > allocator ( & v29 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> basic_string ( v28 , String , & v29 ) ; std allocator < char > allocator ( & v31 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> basic_string ( v30 , String , & v31 ) ; std operator + < char > ( & <span class=\"supfact\">v34</span> , & <span class=\"supfact\">msg</span> , String ) ; std operator + < char > ( & <span class=\"supfact\">v33</span> , & <span class=\"supfact\">v34</span> , str ) ; std operator + < char > ( & <span class=\"supfact\">v32</span> , & <span class=\"supfact\">v33</span> , String ) ; HadoopUtils Error Error ( v9 , & <span class=\"supfact\">v32</span> , v30 , Number L , v28 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( & <span class=\"supfact\">v32</span> ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( & <span class=\"supfact\">v33</span> ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( & <span class=\"supfact\">v34</span> ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( v30 ) ; std allocator < char > ~ allocator ( & v31 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( v28 ) ; std allocator < char > ~ allocator ( & v29 ) ; _cxa_throw ( v9 , ( struct type_info * ) & ` typeinfo for ' HadoopUtils Error , ( void ( __fastcall * ) ( void * ) ) HadoopUtils Error ~ Error ) ;\n    }\n  }\n}\nstd __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\nreplace(retstr, current, num_chars + Number, Number L, (unsigned int)new_ch);\n}\nreturn retstr;\n}", "var": [{"name": "v12", "type": "char[32]", "pred_name": "v12", "ref_name": "msg", "ref_type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}, {"name": "v19", "type": "char[32]", "pred_name": "v19", "ref_name": "v19", "ref_type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}, {"name": "v20", "type": "char[32]", "pred_name": "v20", "ref_name": "__lhs", "ref_type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}, {"name": "v25", "type": "char[32]", "pred_name": "v25", "ref_name": "v25", "ref_type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}, {"name": "v26", "type": "char[47]", "pred_name": "v26", "ref_name": "v26", "ref_type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}, {"name": "v32", "type": "char[32]", "pred_name": "v32", "ref_name": "v32", "ref_type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}, {"name": "v33", "type": "char[32]", "pred_name": "v33", "ref_name": "v33", "ref_type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}, {"name": "v34", "type": "char[32]", "pred_name": "v34", "ref_name": "v34", "ref_type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}, {"name": "v39", "type": "char[32]", "pred_name": "v39", "ref_name": "v39", "ref_type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}, {"name": "v40", "type": "char[40]", "pred_name": "v40", "ref_name": "v40", "ref_type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}], "body_in_train": false}, {"repo_owner": "macmade", "repo_name": "XEOS-core-acpi", "path": "macmade/XEOS-core-acpi/bd0bf0a979a66c4ac5344deef6bd8e32d0323e7ee0132c29fd38bb3eaad05bd6", "path_in_repo": "macmade/XEOS-core-acpi/acpica/tests/aapits/atresource.o", "objdump": "0000000000002513 <AtRsrcTest0022>:\n    2513:\t55                   \tpush   %rbp\n    2514:\t48 89 e5             \tmov    %rsp,%rbp\n    2517:\t48 83 ec 30          \tsub    $0x30,%rsp\n    251b:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    2522:\t00 \n    2523:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    252a:\t00 \n    252b:\t48 c7 45 e0 ff ff ff \tmovq   $0xffffffffffffffff,-0x20(%rbp)\n    2532:\tff \n    2533:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n    253a:\t00 \n    253b:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    2540:\te8 00 00 00 00       \tcallq  2545 <AtRsrcTest0022+0x32>\n    2545:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    2548:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    254c:\t74 08                \tje     2556 <AtRsrcTest0022+0x43>\n    254e:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    2551:\te9 1c 01 00 00       \tjmpq   2672 <AtRsrcTest0022+0x15f>\n    2556:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 255d <AtRsrcTest0022+0x4a>\n    255d:\t48 89 c1             \tmov    %rax,%rcx\n    2560:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2565:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    256a:\tbf fd 00 00 00       \tmov    $0xfd,%edi\n    256f:\te8 00 00 00 00       \tcallq  2574 <AtRsrcTest0022+0x61>\n    2574:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    2577:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    257b:\t74 08                \tje     2585 <AtRsrcTest0022+0x72>\n    257d:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    2580:\te9 ed 00 00 00       \tjmpq   2672 <AtRsrcTest0022+0x15f>\n    2585:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    258a:\te8 00 00 00 00       \tcallq  258f <AtRsrcTest0022+0x7c>\n    258f:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    2592:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    2596:\t74 08                \tje     25a0 <AtRsrcTest0022+0x8d>\n    2598:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    259b:\te9 d2 00 00 00       \tjmpq   2672 <AtRsrcTest0022+0x15f>\n    25a0:\t48 8d 55 d8          \tlea    -0x28(%rbp),%rdx\n    25a4:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    25a8:\t48 89 c6             \tmov    %rax,%rsi\n    25ab:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    25b0:\te8 00 00 00 00       \tcallq  25b5 <AtRsrcTest0022+0xa2>\n    25b5:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    25b8:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    25bc:\t74 37                \tje     25f5 <AtRsrcTest0022+0xe2>\n    25be:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 25c4 <AtRsrcTest0022+0xb1>\n    25c4:\t83 c0 01             \tadd    $0x1,%eax\n    25c7:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 25cd <AtRsrcTest0022+0xba>\n    25cd:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    25d0:\t89 c7                \tmov    %eax,%edi\n    25d2:\te8 00 00 00 00       \tcallq  25d7 <AtRsrcTest0022+0xc4>\n    25d7:\t48 89 c2             \tmov    %rax,%rdx\n    25da:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    25de:\t48 89 c6             \tmov    %rax,%rsi\n    25e1:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    25e6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    25eb:\te8 00 00 00 00       \tcallq  25f0 <AtRsrcTest0022+0xdd>\n    25f0:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    25f3:\teb 7d                \tjmp    2672 <AtRsrcTest0022+0x15f>\n    25f5:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    25fa:\te8 00 00 00 00       \tcallq  25ff <AtRsrcTest0022+0xec>\n    25ff:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    2602:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    2606:\t74 05                \tje     260d <AtRsrcTest0022+0xfa>\n    2608:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    260b:\teb 65                \tjmp    2672 <AtRsrcTest0022+0x15f>\n    260d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    2611:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n    2615:\t48 89 d6             \tmov    %rdx,%rsi\n    2618:\t48 89 c7             \tmov    %rax,%rdi\n    261b:\te8 00 00 00 00       \tcallq  2620 <AtRsrcTest0022+0x10d>\n    2620:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    2623:\t81 7d f4 01 10 00 00 \tcmpl   $0x1001,-0xc(%rbp)\n    262a:\t74 37                \tje     2663 <AtRsrcTest0022+0x150>\n    262c:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2632 <AtRsrcTest0022+0x11f>\n    2632:\t83 c0 01             \tadd    $0x1,%eax\n    2635:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 263b <AtRsrcTest0022+0x128>\n    263b:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    263e:\t89 c7                \tmov    %eax,%edi\n    2640:\te8 00 00 00 00       \tcallq  2645 <AtRsrcTest0022+0x132>\n    2645:\t48 89 c2             \tmov    %rax,%rdx\n    2648:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    264c:\t48 89 c6             \tmov    %rax,%rsi\n    264f:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    2654:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2659:\te8 00 00 00 00       \tcallq  265e <AtRsrcTest0022+0x14b>\n    265e:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    2661:\teb 0f                \tjmp    2672 <AtRsrcTest0022+0x15f>\n    2663:\tbe 5f 00 00 00       \tmov    $0x5f,%esi\n    2668:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    266d:\te8 00 00 00 00       \tcallq  2672 <AtRsrcTest0022+0x15f>\n    2672:\tc9                   \tleaveq \n    2673:\tc3                   \tretq   ", "code_s": "__int64 AtRsrcTest0022() {\n  __int64 result;\n  const char *v1;\n  const char *v2;\n  __int64 v3;\n  __int64 v4[Number];\n  unsigned int v5;\n  const char *v6;\n  v4[Number] = Number L;\n  v4[Number] = Number;\n  v6 = String;\n  v5 = AtAMLcodeFileNameSet(String);\n  if (v5)\n    return v5;\n  v5 = AtSubsystemInit(Number L, Number L, Number L, AtAMLcodeFileName);\n  if (v5)\n    return v5;\n  v5 = AtAuxiliarySsdt(Number L);\n  if (v5)\n    return v5;\n  v5 = AcpiGetHandle(Number L, v6, &v3);\n  if (v5) {\n    ++AapiErrors;\n    v1 = (const char *)AcpiFormatException(v5);\n    printf(String, v6, v1);\n    result = v5;\n  } else {\n    v5 = AtAuxiliarySsdt(Number L);\n    if (v5) {\n      result = v5;\n    } else {\n      v5 = AcpiGetIrqRoutingTable(v3, v4);\n      if (v5 == Number) {\n        result = AtTerminateCtrlCheck(Number L, Number L);\n      } else {\n        ++AapiErrors;\n        v2 = (const char *)AcpiFormatException(v5);\n        printf(String, v6, v2);\n        result = v5;\n      }\n    }\n  }\n  return result;\n}", "code_t": "ACPI_STATUS __cdecl AtRsrcTest0022() {\n  ACPI_STATUS result;\n  const char *v1;\n  const char *v2;\n  ACPI_HANDLE Device;\n  ACPI_BUFFER <span class=\"supfact\">OutBuffer</span>;\n  ACPI_STATUS Status;\n  ACPI_STRING Pathname;\n  <span class=\"supfact\">OutBuffer</span>.Pointer = Number L;\n  <span class=\"supfact\">OutBuffer</span>.Length = Number;\n  Pathname = String;\n  Status = AtAMLcodeFileNameSet(String);\n  if (Status)\n    return Status;\n  Status = AtSubsystemInit(Number L, Number L, Number L, AtAMLcodeFileName);\n  if (Status)\n    return Status;\n  Status = AtAuxiliarySsdt(Number L);\n  if (Status)\n    return Status;\n  Status = AcpiGetHandle(Number L, Pathname, &Device);\n  if (Status) {\n    ++AapiErrors;\n    v1 = (const char *)AcpiFormatException(Status);\n    printf(String, Pathname, v1);\n    result = Status;\n  } else {\n    Status = AtAuxiliarySsdt(Number L);\n    if (Status) {\n      result = Status;\n    } else {\n      Status = AcpiGetIrqRoutingTable(Device, &<span class=\"supfact\">OutBuffer</span>);\n      if (Status == Number) {\n        result = AtTerminateCtrlCheck(Number L, Number L);\n      } else {\n        ++AapiErrors;\n        v2 = (const char *)AcpiFormatException(Status);\n        printf(String, Pathname, v2);\n        result = Status;\n      }\n    }\n  }\n  return result;\n}", "var": [{"name": "v4", "type": "__unk__", "pred_name": "__unk__", "ref_name": "OutBuffer", "ref_type": "struct ACPI_BUFFER { ACPI_SIZE Length; void * Pointer; }"}], "body_in_train": false}, {"repo_owner": "Panopto", "repo_name": "panopto-ffmpeg", "path": "Panopto/panopto-ffmpeg/a63472c27a755ce97888042c117bfc4d165fd089137cd50d405827b60c7e140c", "path_in_repo": "Panopto/panopto-ffmpeg//libavformat/rtpdec_latm.o", "objdump": "00000000000004c0 <parse_fmtp_config>:\n 4c0:\t48 83 ec 68          \tsub    $0x68,%rsp\n 4c4:\t48 89 7c 24 08       \tmov    %rdi,0x8(%rsp)\n 4c9:\t48 89 34 24          \tmov    %rsi,(%rsp)\n 4cd:\t48 8b 04 24          \tmov    (%rsp),%rax\n 4d1:\t48 89 c6             \tmov    %rax,%rsi\n 4d4:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 4d9:\te8 00 00 00 00       \tcallq  4de <parse_fmtp_config+0x1e>\n 4de:\t89 44 24 54          \tmov    %eax,0x54(%rsp)\n 4e2:\tc7 44 24 58 00 00 00 \tmovl   $0x0,0x58(%rsp)\n 4e9:\t00 \n 4ea:\t8b 44 24 54          \tmov    0x54(%rsp),%eax\n 4ee:\t83 c0 20             \tadd    $0x20,%eax\n 4f1:\t48 98                \tcltq   \n 4f3:\t48 89 c7             \tmov    %rax,%rdi\n 4f6:\te8 00 00 00 00       \tcallq  4fb <parse_fmtp_config+0x3b>\n 4fb:\t48 89 44 24 48       \tmov    %rax,0x48(%rsp)\n 500:\t48 83 7c 24 48 00    \tcmpq   $0x0,0x48(%rsp)\n 506:\t75 0a                \tjne    512 <parse_fmtp_config+0x52>\n 508:\tb8 f4 ff ff ff       \tmov    $0xfffffff4,%eax\n 50d:\te9 b5 01 00 00       \tjmpq   6c7 <parse_fmtp_config+0x207>\n 512:\t48 8b 14 24          \tmov    (%rsp),%rdx\n 516:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n 51b:\t48 89 d6             \tmov    %rdx,%rsi\n 51e:\t48 89 c7             \tmov    %rax,%rdi\n 521:\te8 00 00 00 00       \tcallq  526 <parse_fmtp_config+0x66>\n 526:\t8b 44 24 54          \tmov    0x54(%rsp),%eax\n 52a:\t8d 14 c5 00 00 00 00 \tlea    0x0(,%rax,8),%edx\n 531:\t48 8b 4c 24 48       \tmov    0x48(%rsp),%rcx\n 536:\t48 8d 44 24 10       \tlea    0x10(%rsp),%rax\n 53b:\t48 89 ce             \tmov    %rcx,%rsi\n 53e:\t48 89 c7             \tmov    %rax,%rdi\n 541:\te8 f9 fb ff ff       \tcallq  13f <init_get_bits>\n 546:\t48 8d 44 24 10       \tlea    0x10(%rsp),%rax\n 54b:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 550:\t48 89 c7             \tmov    %rax,%rdi\n 553:\te8 da fa ff ff       \tcallq  32 <get_bits>\n 558:\t89 44 24 44          \tmov    %eax,0x44(%rsp)\n 55c:\t48 8d 44 24 10       \tlea    0x10(%rsp),%rax\n 561:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 566:\t48 89 c7             \tmov    %rax,%rdi\n 569:\te8 c4 fa ff ff       \tcallq  32 <get_bits>\n 56e:\t89 44 24 40          \tmov    %eax,0x40(%rsp)\n 572:\t48 8d 44 24 10       \tlea    0x10(%rsp),%rax\n 577:\tbe 06 00 00 00       \tmov    $0x6,%esi\n 57c:\t48 89 c7             \tmov    %rax,%rdi\n 57f:\te8 75 fb ff ff       \tcallq  f9 <skip_bits>\n 584:\t48 8d 44 24 10       \tlea    0x10(%rsp),%rax\n 589:\tbe 04 00 00 00       \tmov    $0x4,%esi\n 58e:\t48 89 c7             \tmov    %rax,%rdi\n 591:\te8 9c fa ff ff       \tcallq  32 <get_bits>\n 596:\t89 44 24 3c          \tmov    %eax,0x3c(%rsp)\n 59a:\t48 8d 44 24 10       \tlea    0x10(%rsp),%rax\n 59f:\tbe 03 00 00 00       \tmov    $0x3,%esi\n 5a4:\t48 89 c7             \tmov    %rax,%rdi\n 5a7:\te8 86 fa ff ff       \tcallq  32 <get_bits>\n 5ac:\t89 44 24 38          \tmov    %eax,0x38(%rsp)\n 5b0:\t83 7c 24 44 00       \tcmpl   $0x0,0x44(%rsp)\n 5b5:\t75 15                \tjne    5cc <parse_fmtp_config+0x10c>\n 5b7:\t83 7c 24 40 01       \tcmpl   $0x1,0x40(%rsp)\n 5bc:\t75 0e                \tjne    5cc <parse_fmtp_config+0x10c>\n 5be:\t83 7c 24 3c 00       \tcmpl   $0x0,0x3c(%rsp)\n 5c3:\t75 07                \tjne    5cc <parse_fmtp_config+0x10c>\n 5c5:\t83 7c 24 38 00       \tcmpl   $0x0,0x38(%rsp)\n 5ca:\t74 3b                \tje     607 <parse_fmtp_config+0x147>\n 5cc:\t8b 74 24 38          \tmov    0x38(%rsp),%esi\n 5d0:\t8b 4c 24 3c          \tmov    0x3c(%rsp),%ecx\n 5d4:\t8b 54 24 40          \tmov    0x40(%rsp),%edx\n 5d8:\t8b 44 24 44          \tmov    0x44(%rsp),%eax\n 5dc:\t41 89 f1             \tmov    %esi,%r9d\n 5df:\t41 89 c8             \tmov    %ecx,%r8d\n 5e2:\t89 d1                \tmov    %edx,%ecx\n 5e4:\t89 c2                \tmov    %eax,%edx\n 5e6:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 5eb:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 5f0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 5f5:\te8 00 00 00 00       \tcallq  5fa <parse_fmtp_config+0x13a>\n 5fa:\tc7 44 24 58 b0 be a8 \tmovl   $0xbaa8beb0,0x58(%rsp)\n 601:\tba \n 602:\te9 af 00 00 00       \tjmpq   6b6 <parse_fmtp_config+0x1f6>\n 607:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n 60c:\t48 8b 80 10 03 00 00 \tmov    0x310(%rax),%rax\n 613:\t48 83 c0 10          \tadd    $0x10,%rax\n 617:\t48 89 c7             \tmov    %rax,%rdi\n 61a:\te8 00 00 00 00       \tcallq  61f <parse_fmtp_config+0x15f>\n 61f:\t48 8d 44 24 10       \tlea    0x10(%rsp),%rax\n 624:\t48 89 c7             \tmov    %rax,%rdi\n 627:\te8 ba fb ff ff       \tcallq  1e6 <get_bits_left>\n 62c:\t83 c0 07             \tadd    $0x7,%eax\n 62f:\t8d 50 07             \tlea    0x7(%rax),%edx\n 632:\t85 c0                \ttest   %eax,%eax\n 634:\t0f 48 c2             \tcmovs  %edx,%eax\n 637:\tc1 f8 03             \tsar    $0x3,%eax\n 63a:\t89 c2                \tmov    %eax,%edx\n 63c:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n 641:\t48 8b 80 10 03 00 00 \tmov    0x310(%rax),%rax\n 648:\t89 d6                \tmov    %edx,%esi\n 64a:\t48 89 c7             \tmov    %rax,%rdi\n 64d:\te8 00 00 00 00       \tcallq  652 <parse_fmtp_config+0x192>\n 652:\t85 c0                \ttest   %eax,%eax\n 654:\t74 0a                \tje     660 <parse_fmtp_config+0x1a0>\n 656:\tc7 44 24 58 f4 ff ff \tmovl   $0xfffffff4,0x58(%rsp)\n 65d:\tff \n 65e:\teb 56                \tjmp    6b6 <parse_fmtp_config+0x1f6>\n 660:\tc7 44 24 5c 00 00 00 \tmovl   $0x0,0x5c(%rsp)\n 667:\t00 \n 668:\teb 36                \tjmp    6a0 <parse_fmtp_config+0x1e0>\n 66a:\t48 8d 44 24 10       \tlea    0x10(%rsp),%rax\n 66f:\tbe 08 00 00 00       \tmov    $0x8,%esi\n 674:\t48 89 c7             \tmov    %rax,%rdi\n 677:\te8 b6 f9 ff ff       \tcallq  32 <get_bits>\n 67c:\t89 c1                \tmov    %eax,%ecx\n 67e:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n 683:\t48 8b 80 10 03 00 00 \tmov    0x310(%rax),%rax\n 68a:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n 68e:\t8b 44 24 5c          \tmov    0x5c(%rsp),%eax\n 692:\t48 98                \tcltq   \n 694:\t48 01 d0             \tadd    %rdx,%rax\n 697:\t89 ca                \tmov    %ecx,%edx\n 699:\t88 10                \tmov    %dl,(%rax)\n 69b:\t83 44 24 5c 01       \taddl   $0x1,0x5c(%rsp)\n 6a0:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n 6a5:\t48 8b 80 10 03 00 00 \tmov    0x310(%rax),%rax\n 6ac:\t8b 40 18             \tmov    0x18(%rax),%eax\n 6af:\t39 44 24 5c          \tcmp    %eax,0x5c(%rsp)\n 6b3:\t7c b5                \tjl     66a <parse_fmtp_config+0x1aa>\n 6b5:\t90                   \tnop\n 6b6:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n 6bb:\t48 89 c7             \tmov    %rax,%rdi\n 6be:\te8 00 00 00 00       \tcallq  6c3 <parse_fmtp_config+0x203>\n 6c3:\t8b 44 24 58          \tmov    0x58(%rsp),%eax\n 6c7:\t48 83 c4 68          \tadd    $0x68,%rsp\n 6cb:\tc3                   \tretq   ", "code_s": "__int64 __fastcall parse_fmtp_config(__int64 a1, __int64 a2) {\n  int v3;\n  char v4;\n  char v5[Number];\n  unsigned int v6;\n  unsigned int v7;\n  unsigned int v8;\n  unsigned int v9;\n  __int64 v10;\n  int v11;\n  unsigned int v12;\n  int i;\n  v11 = ff_hex_to_data(Number L, a2);\n  v12 = Number;\n  v10 = av_mallocz(v11 + Number);\n  if (!v10)\n    return Number L;\n  ff_hex_to_data(v10, a2);\n  init_get_bits((__int64)v5, v10, Number * v11);\n  v9 = get_bits((__int64)v5, Number);\n  v8 = get_bits((__int64)v5, Number);\n  skip_bits((__int64)v5, Number);\n  v7 = get_bits((__int64)v5, Number);\n  v6 = get_bits((__int64)v5, Number);\n  if (v9 || v8 != Number || v7 || v6) {\n    avpriv_report_missing_feature(Number L, String, v9, v8, v7, v6);\n    v12 = Number;\n  } else {\n    av_freep(*(_QWORD *)(a1 + Number) + Number L);\n    v3 = get_bits_left((__int64)v5) + Number;\n    if ((unsigned int)ff_alloc_extradata(*(_QWORD *)(a1 + Number),\n                                         (unsigned int)(v3 / Number))) {\n      v12 = Number;\n    } else {\n      for (i = Number; i < *(_DWORD *)(*(_QWORD *)(a1 + Number) + Number L);\n           ++i) {\n        v4 = get_bits((__int64)v5, Number);\n        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + Number) + Number L) + i) = v4;\n      }\n    }\n  }\n  av_free(v10);\n  return v12;\n}", "code_t": "int __cdecl parse_fmtp_config(AVStream_0 *st, const char *value) {\n  int v3;\n  uint8_t v4;\n  GetBitContext_0 <span class=\"supfact\">gb</span>;\n  int num_layers;\n  int num_programs;\n  __int64 same_time_framing;\n  uint8_t *config;\n  int len;\n  int ret;\n  int i;\n  len = ff_hex_to_data(Number L, value);\n  ret = Number;\n  config = (uint8_t *)av_mallocz(len + Number);\n  if (!config)\n    return Number;\n  ff_hex_to_data(config, value);\n  init_get_bits(&<span class=\"supfact\">gb</span>, config, Number * len);\n  HIDWORD(same_time_framing) = get_bits(&<span class=\"supfact\">gb</span>, Number);\n  LODWORD(same_time_framing) = get_bits(&<span class=\"supfact\">gb</span>, Number);\n  skip_bits(&<span class=\"supfact\">gb</span>, Number);\n  num_programs = get_bits(&<span class=\"supfact\">gb</span>, Number);\n  num_layers = get_bits(&<span class=\"supfact\">gb</span>, Number);\n  if (same_time_framing != Number || num_programs || num_layers) {\n    avpriv_report_missing_feature(Number L, String, HIDWORD(same_time_framing),\n                                  (unsigned int)same_time_framing,\n                                  (unsigned int)num_programs,\n                                  (unsigned int)num_layers);\n    ret = Number;\n  } else {\n    av_freep(&st->codecpar->extradata);\n    v3 = get_bits_left(&<span class=\"supfact\">gb</span>) + Number;\n    if ((unsigned int)ff_alloc_extradata(st->codecpar,\n                                         (unsigned int)(v3 / Number))) {\n      ret = Number;\n    } else {\n      for (i = Number; i < st->codecpar->extradata_size; ++i) {\n        v4 = get_bits(&<span class=\"supfact\">gb</span>, Number);\n        st->codecpar->extradata[i] = v4;\n      }\n    }\n  }\n  av_free(config);\n  return ret;\n}", "var": [{"name": "v5", "type": "struct GetBitContext_0 { const uint8_t * buffer; const uint8_t * buffer_end; int index; int size_in_bits; }", "pred_name": "gb", "ref_name": "gb", "ref_type": "struct GetBitContext_0 { const uint8_t * buffer; const uint8_t * buffer_end; int index; int size_in_bits; int size_in_bits_plus8; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "aschils", "repo_name": "packetdrill_mptcp", "path": "aschils/packetdrill_mptcp/f12586e93c870ce6d623d457774db79bece9afbd194c2c1db368116c352992a8", "path_in_repo": "aschils/packetdrill_mptcp/gtests/net/packetdrill/packet_to_string_test", "objdump": "00000000004290fd <sha1_least_32bits>:\n  4290fd:\t55                   \tpush   %rbp\n  4290fe:\t48 89 e5             \tmov    %rsp,%rbp\n  429101:\t48 83 ec 30          \tsub    $0x30,%rsp\n  429105:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n  429109:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  42910d:\t48 89 c7             \tmov    %rax,%rdi\n  429110:\te8 ea fe ff ff       \tcallq  428fff <get_barray_from_key64>\n  429115:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  429119:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  42911d:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  429121:\t48 89 d6             \tmov    %rdx,%rsi\n  429124:\t48 89 c7             \tmov    %rax,%rdi\n  429127:\te8 89 fe ff ff       \tcallq  428fb5 <hash_key_sha1>\n  42912c:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  429130:\t8b 00                \tmov    (%rax),%eax\n  429132:\t89 c7                \tmov    %eax,%edi\n  429134:\te8 4e cf ff ff       \tcallq  426087 <__bswap_32>\n  429139:\tc9                   \tleaveq \n  42913a:\tc3                   \tretq   ", "code_s": "__int64 __fastcall sha1_least_32bits(__int64 a1) {\n  unsigned int v2[Number];\n  __int64 v3;\n  v3 = get_barray_from_key64(a1);\n  hash_key_sha1(v2, v3);\n  return _bswap_32_0(v2[Number]);\n}", "code_t": "u32 __cdecl sha1_least_32bits(u64 key) {\n  __uint32_t hash[Number];\n  key64 <span class=\"supfact\">key_arr</span>;\n  <span class=\"supfact\">key_arr</span> = get_barray_from_key64(key);\n  hash_key_sha1((uint8_t *)hash, <span class=\"supfact\">key_arr</span>);\n  return _bswap_32_0(hash[Number]);\n}", "var": [{"name": "v3", "type": "__unk__", "pred_name": "hash", "ref_name": "key_arr", "ref_type": "struct key64 { uint8_t[8] data; }"}], "body_in_train": false}, {"repo_owner": "KoraggKnightWolf", "repo_name": "ircservices-5.1.24", "path": "KoraggKnightWolf/ircservices-5.1.24/bcf6a10f540a682e296dcce6bb6d5573b777a1ac59f572d36c91302fd0cdda99", "path_in_repo": "KoraggKnightWolf/ircservices-5.1.24/tools/convert-sirv.o", "objdump": "0000000000001230 <sirv_load_chan>:\n    1230:\t55                   \tpush   %rbp\n    1231:\t48 89 e5             \tmov    %rsp,%rbp\n    1234:\t53                   \tpush   %rbx\n    1235:\t48 81 ec f8 03 00 00 \tsub    $0x3f8,%rsp\n    123c:\t48 89 bd 08 fc ff ff \tmov    %rdi,-0x3f8(%rbp)\n    1243:\t89 b5 04 fc ff ff    \tmov    %esi,-0x3fc(%rbp)\n    1249:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n    1250:\t00 \n    1251:\t83 bd 04 fc ff ff 00 \tcmpl   $0x0,-0x3fc(%rbp)\n    1258:\t75 2e                \tjne    1288 <sirv_load_chan+0x58>\n    125a:\t48 8d 55 84          \tlea    -0x7c(%rbp),%rdx\n    125e:\t48 8b 85 08 fc ff ff \tmov    -0x3f8(%rbp),%rax\n    1265:\t49 89 d0             \tmov    %rdx,%r8\n    1268:\tb9 08 00 00 00       \tmov    $0x8,%ecx\n    126d:\tba 05 00 00 00       \tmov    $0x5,%edx\n    1272:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1277:\t48 89 c7             \tmov    %rax,%rdi\n    127a:\te8 00 00 00 00       \tcallq  127f <sirv_load_chan+0x4f>\n    127f:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    1283:\te9 91 00 00 00       \tjmpq   1319 <sirv_load_chan+0xe9>\n    1288:\t83 bd 04 fc ff ff 01 \tcmpl   $0x1,-0x3fc(%rbp)\n    128f:\t75 2b                \tjne    12bc <sirv_load_chan+0x8c>\n    1291:\t48 8d 55 84          \tlea    -0x7c(%rbp),%rdx\n    1295:\t48 8b 85 08 fc ff ff \tmov    -0x3f8(%rbp),%rax\n    129c:\t49 89 d0             \tmov    %rdx,%r8\n    129f:\tb9 08 00 00 00       \tmov    $0x8,%ecx\n    12a4:\tba 07 00 00 00       \tmov    $0x7,%edx\n    12a9:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    12ae:\t48 89 c7             \tmov    %rax,%rdi\n    12b1:\te8 00 00 00 00       \tcallq  12b6 <sirv_load_chan+0x86>\n    12b6:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    12ba:\teb 5d                \tjmp    1319 <sirv_load_chan+0xe9>\n    12bc:\t83 bd 04 fc ff ff 02 \tcmpl   $0x2,-0x3fc(%rbp)\n    12c3:\t75 2b                \tjne    12f0 <sirv_load_chan+0xc0>\n    12c5:\t48 8d 55 84          \tlea    -0x7c(%rbp),%rdx\n    12c9:\t48 8b 85 08 fc ff ff \tmov    -0x3f8(%rbp),%rax\n    12d0:\t49 89 d0             \tmov    %rdx,%r8\n    12d3:\tb9 05 00 00 00       \tmov    $0x5,%ecx\n    12d8:\tba 05 00 00 00       \tmov    $0x5,%edx\n    12dd:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    12e2:\t48 89 c7             \tmov    %rax,%rdi\n    12e5:\te8 00 00 00 00       \tcallq  12ea <sirv_load_chan+0xba>\n    12ea:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    12ee:\teb 29                \tjmp    1319 <sirv_load_chan+0xe9>\n    12f0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 12f7 <sirv_load_chan+0xc7>\n    12f7:\t8b 95 04 fc ff ff    \tmov    -0x3fc(%rbp),%edx\n    12fd:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1302:\t48 89 c7             \tmov    %rax,%rdi\n    1305:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    130a:\te8 00 00 00 00       \tcallq  130f <sirv_load_chan+0xdf>\n    130f:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    1314:\te8 00 00 00 00       \tcallq  1319 <sirv_load_chan+0xe9>\n    1319:\t83 bd 04 fc ff ff 01 \tcmpl   $0x1,-0x3fc(%rbp)\n    1320:\t74 08                \tje     132a <sirv_load_chan+0xfa>\n    1322:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    1325:\t83 f8 07             \tcmp    $0x7,%eax\n    1328:\t7e 07                \tjle    1331 <sirv_load_chan+0x101>\n    132a:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    132f:\teb 05                \tjmp    1336 <sirv_load_chan+0x106>\n    1331:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1336:\t89 45 b4             \tmov    %eax,-0x4c(%rbp)\n    1339:\t48 c7 45 b8 21 00 00 \tmovq   $0x21,-0x48(%rbp)\n    1340:\t00 \n    1341:\te9 39 1b 00 00       \tjmpq   2e7f <sirv_load_chan+0x1c4f>\n    1346:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    134a:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    134e:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n    1355:\t48 89 d1             \tmov    %rdx,%rcx\n    1358:\tba c8 00 00 00       \tmov    $0xc8,%edx\n    135d:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    1362:\t48 89 c7             \tmov    %rax,%rdi\n    1365:\te8 00 00 00 00       \tcallq  136a <sirv_load_chan+0x13a>\n    136a:\t83 bd 04 fc ff ff 01 \tcmpl   $0x1,-0x3fc(%rbp)\n    1371:\t0f 85 64 01 00 00    \tjne    14db <sirv_load_chan+0x2ab>\n    1377:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    137b:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    137f:\t48 8d 85 20 fe ff ff \tlea    -0x1e0(%rbp),%rax\n    1386:\t48 89 d1             \tmov    %rdx,%rcx\n    1389:\tba 40 00 00 00       \tmov    $0x40,%edx\n    138e:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    1393:\t48 89 c7             \tmov    %rax,%rdi\n    1396:\te8 00 00 00 00       \tcallq  139b <sirv_load_chan+0x16b>\n    139b:\t48 83 f8 40          \tcmp    $0x40,%rax\n    139f:\t74 2b                \tje     13cc <sirv_load_chan+0x19c>\n    13a1:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    13a5:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    13a9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 13b0 <sirv_load_chan+0x180>\n    13b0:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    13b5:\t48 89 c7             \tmov    %rax,%rdi\n    13b8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    13bd:\te8 00 00 00 00       \tcallq  13c2 <sirv_load_chan+0x192>\n    13c2:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    13c7:\te8 00 00 00 00       \tcallq  13cc <sirv_load_chan+0x19c>\n    13cc:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    13d0:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    13d4:\t48 8d 85 e0 fd ff ff \tlea    -0x220(%rbp),%rax\n    13db:\t48 89 d1             \tmov    %rdx,%rcx\n    13de:\tba 40 00 00 00       \tmov    $0x40,%edx\n    13e3:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    13e8:\t48 89 c7             \tmov    %rax,%rdi\n    13eb:\te8 00 00 00 00       \tcallq  13f0 <sirv_load_chan+0x1c0>\n    13f0:\t48 83 f8 40          \tcmp    $0x40,%rax\n    13f4:\t74 2b                \tje     1421 <sirv_load_chan+0x1f1>\n    13f6:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    13fa:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    13fe:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1405 <sirv_load_chan+0x1d5>\n    1405:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    140a:\t48 89 c7             \tmov    %rax,%rdi\n    140d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1412:\te8 00 00 00 00       \tcallq  1417 <sirv_load_chan+0x1e7>\n    1417:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    141c:\te8 00 00 00 00       \tcallq  1421 <sirv_load_chan+0x1f1>\n    1421:\t48 8d 85 20 fe ff ff \tlea    -0x1e0(%rbp),%rax\n    1428:\t48 89 45 88          \tmov    %rax,-0x78(%rbp)\n    142c:\teb 44                \tjmp    1472 <sirv_load_chan+0x242>\n    142e:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    1432:\t0f b6 00             \tmovzbl (%rax),%eax\n    1435:\t3c 0d                \tcmp    $0xd,%al\n    1437:\t75 2d                \tjne    1466 <sirv_load_chan+0x236>\n    1439:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    143d:\t48 83 c0 01          \tadd    $0x1,%rax\n    1441:\t48 89 c7             \tmov    %rax,%rdi\n    1444:\te8 00 00 00 00       \tcallq  1449 <sirv_load_chan+0x219>\n    1449:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    144d:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    1451:\t48 8d 48 01          \tlea    0x1(%rax),%rcx\n    1455:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    1459:\t48 89 ce             \tmov    %rcx,%rsi\n    145c:\t48 89 c7             \tmov    %rax,%rdi\n    145f:\te8 00 00 00 00       \tcallq  1464 <sirv_load_chan+0x234>\n    1464:\teb 0c                \tjmp    1472 <sirv_load_chan+0x242>\n    1466:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    146a:\t48 83 c0 01          \tadd    $0x1,%rax\n    146e:\t48 89 45 88          \tmov    %rax,-0x78(%rbp)\n    1472:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    1476:\t0f b6 00             \tmovzbl (%rax),%eax\n    1479:\t84 c0                \ttest   %al,%al\n    147b:\t75 b1                \tjne    142e <sirv_load_chan+0x1fe>\n    147d:\t48 8d 85 e0 fd ff ff \tlea    -0x220(%rbp),%rax\n    1484:\t48 89 45 88          \tmov    %rax,-0x78(%rbp)\n    1488:\teb 44                \tjmp    14ce <sirv_load_chan+0x29e>\n    148a:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    148e:\t0f b6 00             \tmovzbl (%rax),%eax\n    1491:\t3c 0d                \tcmp    $0xd,%al\n    1493:\t75 2d                \tjne    14c2 <sirv_load_chan+0x292>\n    1495:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    1499:\t48 83 c0 01          \tadd    $0x1,%rax\n    149d:\t48 89 c7             \tmov    %rax,%rdi\n    14a0:\te8 00 00 00 00       \tcallq  14a5 <sirv_load_chan+0x275>\n    14a5:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    14a9:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    14ad:\t48 8d 48 01          \tlea    0x1(%rax),%rcx\n    14b1:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    14b5:\t48 89 ce             \tmov    %rcx,%rsi\n    14b8:\t48 89 c7             \tmov    %rax,%rdi\n    14bb:\te8 00 00 00 00       \tcallq  14c0 <sirv_load_chan+0x290>\n    14c0:\teb 0c                \tjmp    14ce <sirv_load_chan+0x29e>\n    14c2:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    14c6:\t48 83 c0 01          \tadd    $0x1,%rax\n    14ca:\t48 89 45 88          \tmov    %rax,-0x78(%rbp)\n    14ce:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    14d2:\t0f b6 00             \tmovzbl (%rax),%eax\n    14d5:\t84 c0                \ttest   %al,%al\n    14d7:\t75 b1                \tjne    148a <sirv_load_chan+0x25a>\n    14d9:\teb 48                \tjmp    1523 <sirv_load_chan+0x2f3>\n    14db:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    14df:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    14e3:\t48 8d 85 6e fe ff ff \tlea    -0x192(%rbp),%rax\n    14ea:\t48 89 d1             \tmov    %rdx,%rcx\n    14ed:\tba 02 00 00 00       \tmov    $0x2,%edx\n    14f2:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    14f7:\t48 89 c7             \tmov    %rax,%rdi\n    14fa:\te8 00 00 00 00       \tcallq  14ff <sirv_load_chan+0x2cf>\n    14ff:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1503:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    1507:\t48 8d 85 6c fe ff ff \tlea    -0x194(%rbp),%rax\n    150e:\t48 89 d1             \tmov    %rdx,%rcx\n    1511:\tba 02 00 00 00       \tmov    $0x2,%edx\n    1516:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    151b:\t48 89 c7             \tmov    %rax,%rdi\n    151e:\te8 00 00 00 00       \tcallq  1523 <sirv_load_chan+0x2f3>\n    1523:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1527:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    152b:\t48 8d 85 50 fd ff ff \tlea    -0x2b0(%rbp),%rax\n    1532:\t48 89 d1             \tmov    %rdx,%rcx\n    1535:\tba 90 00 00 00       \tmov    $0x90,%edx\n    153a:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    153f:\t48 89 c7             \tmov    %rax,%rdi\n    1542:\te8 00 00 00 00       \tcallq  1547 <sirv_load_chan+0x317>\n    1547:\t83 bd 04 fc ff ff 01 \tcmpl   $0x1,-0x3fc(%rbp)\n    154e:\t0f 85 d6 00 00 00    \tjne    162a <sirv_load_chan+0x3fa>\n    1554:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    1557:\t83 f8 08             \tcmp    $0x8,%eax\n    155a:\t0f 85 a4 00 00 00    \tjne    1604 <sirv_load_chan+0x3d4>\n    1560:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1564:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    1568:\t48 8d 85 40 fc ff ff \tlea    -0x3c0(%rbp),%rax\n    156f:\t48 89 d1             \tmov    %rdx,%rcx\n    1572:\tba 80 00 00 00       \tmov    $0x80,%edx\n    1577:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    157c:\t48 89 c7             \tmov    %rax,%rdi\n    157f:\te8 00 00 00 00       \tcallq  1584 <sirv_load_chan+0x354>\n    1584:\t48 8b 85 40 fc ff ff \tmov    -0x3c0(%rbp),%rax\n    158b:\t48 89 85 c0 fc ff ff \tmov    %rax,-0x340(%rbp)\n    1592:\t48 8b 85 48 fc ff ff \tmov    -0x3b8(%rbp),%rax\n    1599:\t48 89 85 c8 fc ff ff \tmov    %rax,-0x338(%rbp)\n    15a0:\t48 8b 85 50 fc ff ff \tmov    -0x3b0(%rbp),%rax\n    15a7:\t48 89 85 d0 fc ff ff \tmov    %rax,-0x330(%rbp)\n    15ae:\t48 8b 85 98 fc ff ff \tmov    -0x368(%rbp),%rax\n    15b5:\t48 89 85 d8 fc ff ff \tmov    %rax,-0x328(%rbp)\n    15bc:\t48 8b 85 a0 fc ff ff \tmov    -0x360(%rbp),%rax\n    15c3:\t48 89 85 e0 fc ff ff \tmov    %rax,-0x320(%rbp)\n    15ca:\t48 8b 85 58 fc ff ff \tmov    -0x3a8(%rbp),%rax\n    15d1:\t48 89 85 e8 fc ff ff \tmov    %rax,-0x318(%rbp)\n    15d8:\t48 8b 85 60 fc ff ff \tmov    -0x3a0(%rbp),%rax\n    15df:\t48 89 85 f0 fc ff ff \tmov    %rax,-0x310(%rbp)\n    15e6:\t48 8b 85 68 fc ff ff \tmov    -0x398(%rbp),%rax\n    15ed:\t48 89 85 f8 fc ff ff \tmov    %rax,-0x308(%rbp)\n    15f4:\t48 8b 85 70 fc ff ff \tmov    -0x390(%rbp),%rax\n    15fb:\t48 89 85 00 fd ff ff \tmov    %rax,-0x300(%rbp)\n    1602:\teb 79                \tjmp    167d <sirv_load_chan+0x44d>\n    1604:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1608:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    160c:\t48 8d 85 c0 fc ff ff \tlea    -0x340(%rbp),%rax\n    1613:\t48 89 d1             \tmov    %rdx,%rcx\n    1616:\tba 60 00 00 00       \tmov    $0x60,%edx\n    161b:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    1620:\t48 89 c7             \tmov    %rax,%rdi\n    1623:\te8 00 00 00 00       \tcallq  1628 <sirv_load_chan+0x3f8>\n    1628:\teb 53                \tjmp    167d <sirv_load_chan+0x44d>\n    162a:\t83 bd 04 fc ff ff 02 \tcmpl   $0x2,-0x3fc(%rbp)\n    1631:\t75 26                \tjne    1659 <sirv_load_chan+0x429>\n    1633:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1637:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    163b:\t48 8d 85 10 fc ff ff \tlea    -0x3f0(%rbp),%rax\n    1642:\t48 89 d1             \tmov    %rdx,%rcx\n    1645:\tba 28 00 00 00       \tmov    $0x28,%edx\n    164a:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    164f:\t48 89 c7             \tmov    %rax,%rdi\n    1652:\te8 00 00 00 00       \tcallq  1657 <sirv_load_chan+0x427>\n    1657:\teb 24                \tjmp    167d <sirv_load_chan+0x44d>\n    1659:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    165d:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    1661:\t48 8d 85 20 fd ff ff \tlea    -0x2e0(%rbp),%rax\n    1668:\t48 89 d1             \tmov    %rdx,%rcx\n    166b:\tba 28 00 00 00       \tmov    $0x28,%edx\n    1670:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    1675:\t48 89 c7             \tmov    %rax,%rdi\n    1678:\te8 00 00 00 00       \tcallq  167d <sirv_load_chan+0x44d>\n    167d:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1681:\t48 8d 95 70 fe ff ff \tlea    -0x190(%rbp),%rdx\n    1688:\t48 81 c2 90 00 00 00 \tadd    $0x90,%rdx\n    168f:\t48 89 c6             \tmov    %rax,%rsi\n    1692:\t48 89 d7             \tmov    %rdx,%rdi\n    1695:\te8 00 00 00 00       \tcallq  169a <sirv_load_chan+0x46a>\n    169a:\t85 c0                \ttest   %eax,%eax\n    169c:\t79 2b                \tjns    16c9 <sirv_load_chan+0x499>\n    169e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    16a2:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    16a6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 16ad <sirv_load_chan+0x47d>\n    16ad:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    16b2:\t48 89 c7             \tmov    %rax,%rdi\n    16b5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    16ba:\te8 00 00 00 00       \tcallq  16bf <sirv_load_chan+0x48f>\n    16bf:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    16c4:\te8 00 00 00 00       \tcallq  16c9 <sirv_load_chan+0x499>\n    16c9:\t48 8b 85 a0 fd ff ff \tmov    -0x260(%rbp),%rax\n    16d0:\t48 85 c0             \ttest   %rax,%rax\n    16d3:\t74 49                \tje     171e <sirv_load_chan+0x4ee>\n    16d5:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    16d9:\t48 8d 95 50 fd ff ff \tlea    -0x2b0(%rbp),%rdx\n    16e0:\t48 83 c2 50          \tadd    $0x50,%rdx\n    16e4:\t48 89 c6             \tmov    %rax,%rsi\n    16e7:\t48 89 d7             \tmov    %rdx,%rdi\n    16ea:\te8 00 00 00 00       \tcallq  16ef <sirv_load_chan+0x4bf>\n    16ef:\t85 c0                \ttest   %eax,%eax\n    16f1:\t79 2b                \tjns    171e <sirv_load_chan+0x4ee>\n    16f3:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    16f7:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    16fb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1702 <sirv_load_chan+0x4d2>\n    1702:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1707:\t48 89 c7             \tmov    %rax,%rdi\n    170a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    170f:\te8 00 00 00 00       \tcallq  1714 <sirv_load_chan+0x4e4>\n    1714:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    1719:\te8 00 00 00 00       \tcallq  171e <sirv_load_chan+0x4ee>\n    171e:\t48 8b 85 a8 fd ff ff \tmov    -0x258(%rbp),%rax\n    1725:\t48 85 c0             \ttest   %rax,%rax\n    1728:\t74 49                \tje     1773 <sirv_load_chan+0x543>\n    172a:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    172e:\t48 8d 95 50 fd ff ff \tlea    -0x2b0(%rbp),%rdx\n    1735:\t48 83 c2 58          \tadd    $0x58,%rdx\n    1739:\t48 89 c6             \tmov    %rax,%rsi\n    173c:\t48 89 d7             \tmov    %rdx,%rdi\n    173f:\te8 00 00 00 00       \tcallq  1744 <sirv_load_chan+0x514>\n    1744:\t85 c0                \ttest   %eax,%eax\n    1746:\t79 2b                \tjns    1773 <sirv_load_chan+0x543>\n    1748:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    174c:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    1750:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1757 <sirv_load_chan+0x527>\n    1757:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    175c:\t48 89 c7             \tmov    %rax,%rdi\n    175f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1764:\te8 00 00 00 00       \tcallq  1769 <sirv_load_chan+0x539>\n    1769:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    176e:\te8 00 00 00 00       \tcallq  1773 <sirv_load_chan+0x543>\n    1773:\t48 8b 85 58 fd ff ff \tmov    -0x2a8(%rbp),%rax\n    177a:\t48 85 c0             \ttest   %rax,%rax\n    177d:\t74 49                \tje     17c8 <sirv_load_chan+0x598>\n    177f:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1783:\t48 8d 95 50 fd ff ff \tlea    -0x2b0(%rbp),%rdx\n    178a:\t48 83 c2 08          \tadd    $0x8,%rdx\n    178e:\t48 89 c6             \tmov    %rax,%rsi\n    1791:\t48 89 d7             \tmov    %rdx,%rdi\n    1794:\te8 00 00 00 00       \tcallq  1799 <sirv_load_chan+0x569>\n    1799:\t85 c0                \ttest   %eax,%eax\n    179b:\t79 2b                \tjns    17c8 <sirv_load_chan+0x598>\n    179d:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    17a1:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    17a5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 17ac <sirv_load_chan+0x57c>\n    17ac:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    17b1:\t48 89 c7             \tmov    %rax,%rdi\n    17b4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    17b9:\te8 00 00 00 00       \tcallq  17be <sirv_load_chan+0x58e>\n    17be:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    17c3:\te8 00 00 00 00       \tcallq  17c8 <sirv_load_chan+0x598>\n    17c8:\t48 8b 85 60 fd ff ff \tmov    -0x2a0(%rbp),%rax\n    17cf:\t48 85 c0             \ttest   %rax,%rax\n    17d2:\t74 49                \tje     181d <sirv_load_chan+0x5ed>\n    17d4:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    17d8:\t48 8d 95 50 fd ff ff \tlea    -0x2b0(%rbp),%rdx\n    17df:\t48 83 c2 10          \tadd    $0x10,%rdx\n    17e3:\t48 89 c6             \tmov    %rax,%rsi\n    17e6:\t48 89 d7             \tmov    %rdx,%rdi\n    17e9:\te8 00 00 00 00       \tcallq  17ee <sirv_load_chan+0x5be>\n    17ee:\t85 c0                \ttest   %eax,%eax\n    17f0:\t79 2b                \tjns    181d <sirv_load_chan+0x5ed>\n    17f2:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    17f6:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    17fa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1801 <sirv_load_chan+0x5d1>\n    1801:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1806:\t48 89 c7             \tmov    %rax,%rdi\n    1809:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    180e:\te8 00 00 00 00       \tcallq  1813 <sirv_load_chan+0x5e3>\n    1813:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    1818:\te8 00 00 00 00       \tcallq  181d <sirv_load_chan+0x5ed>\n    181d:\t48 8b 85 b0 fd ff ff \tmov    -0x250(%rbp),%rax\n    1824:\t48 85 c0             \ttest   %rax,%rax\n    1827:\t74 49                \tje     1872 <sirv_load_chan+0x642>\n    1829:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    182d:\t48 8d 95 50 fd ff ff \tlea    -0x2b0(%rbp),%rdx\n    1834:\t48 83 c2 60          \tadd    $0x60,%rdx\n    1838:\t48 89 c6             \tmov    %rax,%rsi\n    183b:\t48 89 d7             \tmov    %rdx,%rdi\n    183e:\te8 00 00 00 00       \tcallq  1843 <sirv_load_chan+0x613>\n    1843:\t85 c0                \ttest   %eax,%eax\n    1845:\t79 2b                \tjns    1872 <sirv_load_chan+0x642>\n    1847:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    184b:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    184f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1856 <sirv_load_chan+0x626>\n    1856:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    185b:\t48 89 c7             \tmov    %rax,%rdi\n    185e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1863:\te8 00 00 00 00       \tcallq  1868 <sirv_load_chan+0x638>\n    1868:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    186d:\te8 00 00 00 00       \tcallq  1872 <sirv_load_chan+0x642>\n    1872:\t48 8b 85 b8 fd ff ff \tmov    -0x248(%rbp),%rax\n    1879:\t48 85 c0             \ttest   %rax,%rax\n    187c:\t74 49                \tje     18c7 <sirv_load_chan+0x697>\n    187e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1882:\t48 8d 95 50 fd ff ff \tlea    -0x2b0(%rbp),%rdx\n    1889:\t48 83 c2 68          \tadd    $0x68,%rdx\n    188d:\t48 89 c6             \tmov    %rax,%rsi\n    1890:\t48 89 d7             \tmov    %rdx,%rdi\n    1893:\te8 00 00 00 00       \tcallq  1898 <sirv_load_chan+0x668>\n    1898:\t85 c0                \ttest   %eax,%eax\n    189a:\t79 2b                \tjns    18c7 <sirv_load_chan+0x697>\n    189c:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    18a0:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    18a4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 18ab <sirv_load_chan+0x67b>\n    18ab:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    18b0:\t48 89 c7             \tmov    %rax,%rdi\n    18b3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    18b8:\te8 00 00 00 00       \tcallq  18bd <sirv_load_chan+0x68d>\n    18bd:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    18c2:\te8 00 00 00 00       \tcallq  18c7 <sirv_load_chan+0x697>\n    18c7:\t48 8b 85 c0 fd ff ff \tmov    -0x240(%rbp),%rax\n    18ce:\t48 85 c0             \ttest   %rax,%rax\n    18d1:\t74 49                \tje     191c <sirv_load_chan+0x6ec>\n    18d3:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    18d7:\t48 8d 95 50 fd ff ff \tlea    -0x2b0(%rbp),%rdx\n    18de:\t48 83 c2 70          \tadd    $0x70,%rdx\n    18e2:\t48 89 c6             \tmov    %rax,%rsi\n    18e5:\t48 89 d7             \tmov    %rdx,%rdi\n    18e8:\te8 00 00 00 00       \tcallq  18ed <sirv_load_chan+0x6bd>\n    18ed:\t85 c0                \ttest   %eax,%eax\n    18ef:\t79 2b                \tjns    191c <sirv_load_chan+0x6ec>\n    18f1:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    18f5:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    18f9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1900 <sirv_load_chan+0x6d0>\n    1900:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1905:\t48 89 c7             \tmov    %rax,%rdi\n    1908:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    190d:\te8 00 00 00 00       \tcallq  1912 <sirv_load_chan+0x6e2>\n    1912:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    1917:\te8 00 00 00 00       \tcallq  191c <sirv_load_chan+0x6ec>\n    191c:\t48 8b 85 c8 fd ff ff \tmov    -0x238(%rbp),%rax\n    1923:\t48 85 c0             \ttest   %rax,%rax\n    1926:\t74 49                \tje     1971 <sirv_load_chan+0x741>\n    1928:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    192c:\t48 8d 95 50 fd ff ff \tlea    -0x2b0(%rbp),%rdx\n    1933:\t48 83 c2 78          \tadd    $0x78,%rdx\n    1937:\t48 89 c6             \tmov    %rax,%rsi\n    193a:\t48 89 d7             \tmov    %rdx,%rdi\n    193d:\te8 00 00 00 00       \tcallq  1942 <sirv_load_chan+0x712>\n    1942:\t85 c0                \ttest   %eax,%eax\n    1944:\t79 2b                \tjns    1971 <sirv_load_chan+0x741>\n    1946:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    194a:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    194e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1955 <sirv_load_chan+0x725>\n    1955:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    195a:\t48 89 c7             \tmov    %rax,%rdi\n    195d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1962:\te8 00 00 00 00       \tcallq  1967 <sirv_load_chan+0x737>\n    1967:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    196c:\te8 00 00 00 00       \tcallq  1971 <sirv_load_chan+0x741>\n    1971:\t48 8b 85 d0 fd ff ff \tmov    -0x230(%rbp),%rax\n    1978:\t48 85 c0             \ttest   %rax,%rax\n    197b:\t74 49                \tje     19c6 <sirv_load_chan+0x796>\n    197d:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1981:\t48 8d 95 50 fd ff ff \tlea    -0x2b0(%rbp),%rdx\n    1988:\t48 83 ea 80          \tsub    $0xffffffffffffff80,%rdx\n    198c:\t48 89 c6             \tmov    %rax,%rsi\n    198f:\t48 89 d7             \tmov    %rdx,%rdi\n    1992:\te8 00 00 00 00       \tcallq  1997 <sirv_load_chan+0x767>\n    1997:\t85 c0                \ttest   %eax,%eax\n    1999:\t79 2b                \tjns    19c6 <sirv_load_chan+0x796>\n    199b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    199f:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    19a3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 19aa <sirv_load_chan+0x77a>\n    19aa:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    19af:\t48 89 c7             \tmov    %rax,%rdi\n    19b2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    19b7:\te8 00 00 00 00       \tcallq  19bc <sirv_load_chan+0x78c>\n    19bc:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    19c1:\te8 00 00 00 00       \tcallq  19c6 <sirv_load_chan+0x796>\n    19c6:\t83 bd 04 fc ff ff 01 \tcmpl   $0x1,-0x3fc(%rbp)\n    19cd:\t0f 85 c4 02 00 00    \tjne    1c97 <sirv_load_chan+0xa67>\n    19d3:\t48 8b 85 c0 fc ff ff \tmov    -0x340(%rbp),%rax\n    19da:\t48 85 c0             \ttest   %rax,%rax\n    19dd:\t74 45                \tje     1a24 <sirv_load_chan+0x7f4>\n    19df:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    19e3:\t48 8d 85 c0 fc ff ff \tlea    -0x340(%rbp),%rax\n    19ea:\t48 89 d6             \tmov    %rdx,%rsi\n    19ed:\t48 89 c7             \tmov    %rax,%rdi\n    19f0:\te8 00 00 00 00       \tcallq  19f5 <sirv_load_chan+0x7c5>\n    19f5:\t85 c0                \ttest   %eax,%eax\n    19f7:\t79 2b                \tjns    1a24 <sirv_load_chan+0x7f4>\n    19f9:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    19fd:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    1a01:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1a08 <sirv_load_chan+0x7d8>\n    1a08:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1a0d:\t48 89 c7             \tmov    %rax,%rdi\n    1a10:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1a15:\te8 00 00 00 00       \tcallq  1a1a <sirv_load_chan+0x7ea>\n    1a1a:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    1a1f:\te8 00 00 00 00       \tcallq  1a24 <sirv_load_chan+0x7f4>\n    1a24:\t48 8b 85 c8 fc ff ff \tmov    -0x338(%rbp),%rax\n    1a2b:\t48 85 c0             \ttest   %rax,%rax\n    1a2e:\t74 49                \tje     1a79 <sirv_load_chan+0x849>\n    1a30:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1a34:\t48 8d 95 c0 fc ff ff \tlea    -0x340(%rbp),%rdx\n    1a3b:\t48 83 c2 08          \tadd    $0x8,%rdx\n    1a3f:\t48 89 c6             \tmov    %rax,%rsi\n    1a42:\t48 89 d7             \tmov    %rdx,%rdi\n    1a45:\te8 00 00 00 00       \tcallq  1a4a <sirv_load_chan+0x81a>\n    1a4a:\t85 c0                \ttest   %eax,%eax\n    1a4c:\t79 2b                \tjns    1a79 <sirv_load_chan+0x849>\n    1a4e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1a52:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    1a56:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1a5d <sirv_load_chan+0x82d>\n    1a5d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1a62:\t48 89 c7             \tmov    %rax,%rdi\n    1a65:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1a6a:\te8 00 00 00 00       \tcallq  1a6f <sirv_load_chan+0x83f>\n    1a6f:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    1a74:\te8 00 00 00 00       \tcallq  1a79 <sirv_load_chan+0x849>\n    1a79:\t48 8b 85 d0 fc ff ff \tmov    -0x330(%rbp),%rax\n    1a80:\t48 85 c0             \ttest   %rax,%rax\n    1a83:\t74 49                \tje     1ace <sirv_load_chan+0x89e>\n    1a85:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1a89:\t48 8d 95 c0 fc ff ff \tlea    -0x340(%rbp),%rdx\n    1a90:\t48 83 c2 10          \tadd    $0x10,%rdx\n    1a94:\t48 89 c6             \tmov    %rax,%rsi\n    1a97:\t48 89 d7             \tmov    %rdx,%rdi\n    1a9a:\te8 00 00 00 00       \tcallq  1a9f <sirv_load_chan+0x86f>\n    1a9f:\t85 c0                \ttest   %eax,%eax\n    1aa1:\t79 2b                \tjns    1ace <sirv_load_chan+0x89e>\n    1aa3:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1aa7:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    1aab:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1ab2 <sirv_load_chan+0x882>\n    1ab2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1ab7:\t48 89 c7             \tmov    %rax,%rdi\n    1aba:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1abf:\te8 00 00 00 00       \tcallq  1ac4 <sirv_load_chan+0x894>\n    1ac4:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    1ac9:\te8 00 00 00 00       \tcallq  1ace <sirv_load_chan+0x89e>\n    1ace:\t48 8b 85 d8 fc ff ff \tmov    -0x328(%rbp),%rax\n    1ad5:\t48 85 c0             \ttest   %rax,%rax\n    1ad8:\t74 49                \tje     1b23 <sirv_load_chan+0x8f3>\n    1ada:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1ade:\t48 8d 95 c0 fc ff ff \tlea    -0x340(%rbp),%rdx\n    1ae5:\t48 83 c2 18          \tadd    $0x18,%rdx\n    1ae9:\t48 89 c6             \tmov    %rax,%rsi\n    1aec:\t48 89 d7             \tmov    %rdx,%rdi\n    1aef:\te8 00 00 00 00       \tcallq  1af4 <sirv_load_chan+0x8c4>\n    1af4:\t85 c0                \ttest   %eax,%eax\n    1af6:\t79 2b                \tjns    1b23 <sirv_load_chan+0x8f3>\n    1af8:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1afc:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    1b00:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1b07 <sirv_load_chan+0x8d7>\n    1b07:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1b0c:\t48 89 c7             \tmov    %rax,%rdi\n    1b0f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1b14:\te8 00 00 00 00       \tcallq  1b19 <sirv_load_chan+0x8e9>\n    1b19:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    1b1e:\te8 00 00 00 00       \tcallq  1b23 <sirv_load_chan+0x8f3>\n    1b23:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    1b26:\t83 f8 07             \tcmp    $0x7,%eax\n    1b29:\t7e 55                \tjle    1b80 <sirv_load_chan+0x950>\n    1b2b:\t48 8b 85 78 fc ff ff \tmov    -0x388(%rbp),%rax\n    1b32:\t48 85 c0             \ttest   %rax,%rax\n    1b35:\t74 49                \tje     1b80 <sirv_load_chan+0x950>\n    1b37:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1b3b:\t48 8d 95 40 fc ff ff \tlea    -0x3c0(%rbp),%rdx\n    1b42:\t48 83 c2 38          \tadd    $0x38,%rdx\n    1b46:\t48 89 c6             \tmov    %rax,%rsi\n    1b49:\t48 89 d7             \tmov    %rdx,%rdi\n    1b4c:\te8 00 00 00 00       \tcallq  1b51 <sirv_load_chan+0x921>\n    1b51:\t85 c0                \ttest   %eax,%eax\n    1b53:\t79 2b                \tjns    1b80 <sirv_load_chan+0x950>\n    1b55:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1b59:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    1b5d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1b64 <sirv_load_chan+0x934>\n    1b64:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1b69:\t48 89 c7             \tmov    %rax,%rdi\n    1b6c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1b71:\te8 00 00 00 00       \tcallq  1b76 <sirv_load_chan+0x946>\n    1b76:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    1b7b:\te8 00 00 00 00       \tcallq  1b80 <sirv_load_chan+0x950>\n    1b80:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    1b83:\t83 f8 07             \tcmp    $0x7,%eax\n    1b86:\t7e 55                \tjle    1bdd <sirv_load_chan+0x9ad>\n    1b88:\t48 8b 85 80 fc ff ff \tmov    -0x380(%rbp),%rax\n    1b8f:\t48 85 c0             \ttest   %rax,%rax\n    1b92:\t74 49                \tje     1bdd <sirv_load_chan+0x9ad>\n    1b94:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1b98:\t48 8d 95 40 fc ff ff \tlea    -0x3c0(%rbp),%rdx\n    1b9f:\t48 83 c2 40          \tadd    $0x40,%rdx\n    1ba3:\t48 89 c6             \tmov    %rax,%rsi\n    1ba6:\t48 89 d7             \tmov    %rdx,%rdi\n    1ba9:\te8 00 00 00 00       \tcallq  1bae <sirv_load_chan+0x97e>\n    1bae:\t85 c0                \ttest   %eax,%eax\n    1bb0:\t79 2b                \tjns    1bdd <sirv_load_chan+0x9ad>\n    1bb2:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1bb6:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    1bba:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1bc1 <sirv_load_chan+0x991>\n    1bc1:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1bc6:\t48 89 c7             \tmov    %rax,%rdi\n    1bc9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1bce:\te8 00 00 00 00       \tcallq  1bd3 <sirv_load_chan+0x9a3>\n    1bd3:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    1bd8:\te8 00 00 00 00       \tcallq  1bdd <sirv_load_chan+0x9ad>\n    1bdd:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    1be0:\t83 f8 07             \tcmp    $0x7,%eax\n    1be3:\t7e 55                \tjle    1c3a <sirv_load_chan+0xa0a>\n    1be5:\t48 8b 85 88 fc ff ff \tmov    -0x378(%rbp),%rax\n    1bec:\t48 85 c0             \ttest   %rax,%rax\n    1bef:\t74 49                \tje     1c3a <sirv_load_chan+0xa0a>\n    1bf1:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1bf5:\t48 8d 95 40 fc ff ff \tlea    -0x3c0(%rbp),%rdx\n    1bfc:\t48 83 c2 48          \tadd    $0x48,%rdx\n    1c00:\t48 89 c6             \tmov    %rax,%rsi\n    1c03:\t48 89 d7             \tmov    %rdx,%rdi\n    1c06:\te8 00 00 00 00       \tcallq  1c0b <sirv_load_chan+0x9db>\n    1c0b:\t85 c0                \ttest   %eax,%eax\n    1c0d:\t79 2b                \tjns    1c3a <sirv_load_chan+0xa0a>\n    1c0f:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1c13:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    1c17:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1c1e <sirv_load_chan+0x9ee>\n    1c1e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1c23:\t48 89 c7             \tmov    %rax,%rdi\n    1c26:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1c2b:\te8 00 00 00 00       \tcallq  1c30 <sirv_load_chan+0xa00>\n    1c30:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    1c35:\te8 00 00 00 00       \tcallq  1c3a <sirv_load_chan+0xa0a>\n    1c3a:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    1c3d:\t83 f8 07             \tcmp    $0x7,%eax\n    1c40:\t7e 55                \tjle    1c97 <sirv_load_chan+0xa67>\n    1c42:\t48 8b 85 90 fc ff ff \tmov    -0x370(%rbp),%rax\n    1c49:\t48 85 c0             \ttest   %rax,%rax\n    1c4c:\t74 49                \tje     1c97 <sirv_load_chan+0xa67>\n    1c4e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1c52:\t48 8d 95 40 fc ff ff \tlea    -0x3c0(%rbp),%rdx\n    1c59:\t48 83 c2 50          \tadd    $0x50,%rdx\n    1c5d:\t48 89 c6             \tmov    %rax,%rsi\n    1c60:\t48 89 d7             \tmov    %rdx,%rdi\n    1c63:\te8 00 00 00 00       \tcallq  1c68 <sirv_load_chan+0xa38>\n    1c68:\t85 c0                \ttest   %eax,%eax\n    1c6a:\t79 2b                \tjns    1c97 <sirv_load_chan+0xa67>\n    1c6c:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1c70:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    1c74:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1c7b <sirv_load_chan+0xa4b>\n    1c7b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1c80:\t48 89 c7             \tmov    %rax,%rdi\n    1c83:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1c88:\te8 00 00 00 00       \tcallq  1c8d <sirv_load_chan+0xa5d>\n    1c8d:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    1c92:\te8 00 00 00 00       \tcallq  1c97 <sirv_load_chan+0xa67>\n    1c97:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n    1c9e:\t48 83 c0 10          \tadd    $0x10,%rax\n    1ca2:\t48 89 c7             \tmov    %rax,%rdi\n    1ca5:\te8 00 00 00 00       \tcallq  1caa <sirv_load_chan+0xa7a>\n    1caa:\t48 89 45 a8          \tmov    %rax,-0x58(%rbp)\n    1cae:\t0f b6 85 c0 fe ff ff \tmovzbl -0x140(%rbp),%eax\n    1cb5:\t84 c0                \ttest   %al,%al\n    1cb7:\t0f 84 a2 00 00 00    \tje     1d5f <sirv_load_chan+0xb2f>\n    1cbd:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n    1cc4:\t48 83 c0 50          \tadd    $0x50,%rax\n    1cc8:\t48 89 c7             \tmov    %rax,%rdi\n    1ccb:\te8 00 00 00 00       \tcallq  1cd0 <sirv_load_chan+0xaa0>\n    1cd0:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n    1cd4:\t48 83 7d a0 00       \tcmpq   $0x0,-0x60(%rbp)\n    1cd9:\t75 31                \tjne    1d0c <sirv_load_chan+0xadc>\n    1cdb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1ce2 <sirv_load_chan+0xab2>\n    1ce2:\t48 8d 95 70 fe ff ff \tlea    -0x190(%rbp),%rdx\n    1ce9:\t48 8d 4a 10          \tlea    0x10(%rdx),%rcx\n    1ced:\t48 8d 95 70 fe ff ff \tlea    -0x190(%rbp),%rdx\n    1cf4:\t48 83 c2 50          \tadd    $0x50,%rdx\n    1cf8:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1cfd:\t48 89 c7             \tmov    %rax,%rdi\n    1d00:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1d05:\te8 00 00 00 00       \tcallq  1d0a <sirv_load_chan+0xada>\n    1d0a:\teb 53                \tjmp    1d5f <sirv_load_chan+0xb2f>\n    1d0c:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    1d10:\t8b 80 48 01 00 00    \tmov    0x148(%rax),%eax\n    1d16:\t85 c0                \ttest   %eax,%eax\n    1d18:\t75 31                \tjne    1d4b <sirv_load_chan+0xb1b>\n    1d1a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1d21 <sirv_load_chan+0xaf1>\n    1d21:\t48 8d 95 70 fe ff ff \tlea    -0x190(%rbp),%rdx\n    1d28:\t48 8d 4a 10          \tlea    0x10(%rdx),%rcx\n    1d2c:\t48 8d 95 70 fe ff ff \tlea    -0x190(%rbp),%rdx\n    1d33:\t48 83 c2 50          \tadd    $0x50,%rdx\n    1d37:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1d3c:\t48 89 c7             \tmov    %rax,%rdi\n    1d3f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1d44:\te8 00 00 00 00       \tcallq  1d49 <sirv_load_chan+0xb19>\n    1d49:\teb 14                \tjmp    1d5f <sirv_load_chan+0xb2f>\n    1d4b:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    1d4f:\t8b 90 48 01 00 00    \tmov    0x148(%rax),%edx\n    1d55:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1d59:\t89 90 14 02 00 00    \tmov    %edx,0x214(%rax)\n    1d5f:\t83 bd 04 fc ff ff 01 \tcmpl   $0x1,-0x3fc(%rbp)\n    1d66:\t0f 85 ee 00 00 00    \tjne    1e5a <sirv_load_chan+0xc2a>\n    1d6c:\t48 8b 85 c0 fc ff ff \tmov    -0x340(%rbp),%rax\n    1d73:\t48 85 c0             \ttest   %rax,%rax\n    1d76:\t0f 84 de 00 00 00    \tje     1e5a <sirv_load_chan+0xc2a>\n    1d7c:\t48 8b 85 c0 fc ff ff \tmov    -0x340(%rbp),%rax\n    1d83:\t48 89 c7             \tmov    %rax,%rdi\n    1d86:\te8 00 00 00 00       \tcallq  1d8b <sirv_load_chan+0xb5b>\n    1d8b:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n    1d8f:\t48 83 7d a0 00       \tcmpq   $0x0,-0x60(%rbp)\n    1d94:\t75 30                \tjne    1dc6 <sirv_load_chan+0xb96>\n    1d96:\t48 8b 95 c0 fc ff ff \tmov    -0x340(%rbp),%rdx\n    1d9d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1da4 <sirv_load_chan+0xb74>\n    1da4:\t48 8d 8d 70 fe ff ff \tlea    -0x190(%rbp),%rcx\n    1dab:\t48 83 c1 10          \tadd    $0x10,%rcx\n    1daf:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1db4:\t48 89 c7             \tmov    %rax,%rdi\n    1db7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1dbc:\te8 00 00 00 00       \tcallq  1dc1 <sirv_load_chan+0xb91>\n    1dc1:\te9 94 00 00 00       \tjmpq   1e5a <sirv_load_chan+0xc2a>\n    1dc6:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    1dca:\t8b 80 48 01 00 00    \tmov    0x148(%rax),%eax\n    1dd0:\t85 c0                \ttest   %eax,%eax\n    1dd2:\t75 2d                \tjne    1e01 <sirv_load_chan+0xbd1>\n    1dd4:\t48 8b 95 c0 fc ff ff \tmov    -0x340(%rbp),%rdx\n    1ddb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1de2 <sirv_load_chan+0xbb2>\n    1de2:\t48 8d 8d 70 fe ff ff \tlea    -0x190(%rbp),%rcx\n    1de9:\t48 83 c1 10          \tadd    $0x10,%rcx\n    1ded:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1df2:\t48 89 c7             \tmov    %rax,%rdi\n    1df5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1dfa:\te8 00 00 00 00       \tcallq  1dff <sirv_load_chan+0xbcf>\n    1dff:\teb 59                \tjmp    1e5a <sirv_load_chan+0xc2a>\n    1e01:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    1e05:\t8b 90 48 01 00 00    \tmov    0x148(%rax),%edx\n    1e0b:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1e0f:\t8b 80 14 02 00 00    \tmov    0x214(%rax),%eax\n    1e15:\t39 c2                \tcmp    %eax,%edx\n    1e17:\t75 2d                \tjne    1e46 <sirv_load_chan+0xc16>\n    1e19:\t48 8b 95 c0 fc ff ff \tmov    -0x340(%rbp),%rdx\n    1e20:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1e27 <sirv_load_chan+0xbf7>\n    1e27:\t48 8d 8d 70 fe ff ff \tlea    -0x190(%rbp),%rcx\n    1e2e:\t48 83 c1 10          \tadd    $0x10,%rcx\n    1e32:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1e37:\t48 89 c7             \tmov    %rax,%rdi\n    1e3a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1e3f:\te8 00 00 00 00       \tcallq  1e44 <sirv_load_chan+0xc14>\n    1e44:\teb 14                \tjmp    1e5a <sirv_load_chan+0xc2a>\n    1e46:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    1e4a:\t8b 90 48 01 00 00    \tmov    0x148(%rax),%edx\n    1e50:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1e54:\t89 90 18 02 00 00    \tmov    %edx,0x218(%rax)\n    1e5a:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1e5e:\t48 05 20 02 00 00    \tadd    $0x220,%rax\n    1e64:\t48 89 c7             \tmov    %rax,%rdi\n    1e67:\te8 00 00 00 00       \tcallq  1e6c <sirv_load_chan+0xc3c>\n    1e6c:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1e70:\t48 05 20 02 00 00    \tadd    $0x220,%rax\n    1e76:\t48 8d 95 70 fe ff ff \tlea    -0x190(%rbp),%rdx\n    1e7d:\t48 8d 4a 70          \tlea    0x70(%rdx),%rcx\n    1e81:\tba 00 01 00 00       \tmov    $0x100,%edx\n    1e86:\t48 89 ce             \tmov    %rcx,%rsi\n    1e89:\t48 89 c7             \tmov    %rax,%rdi\n    1e8c:\te8 00 00 00 00       \tcallq  1e91 <sirv_load_chan+0xc61>\n    1e91:\t48 8b 95 00 ff ff ff \tmov    -0x100(%rbp),%rdx\n    1e98:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1e9c:\t48 89 90 28 03 00 00 \tmov    %rdx,0x328(%rax)\n    1ea3:\t48 8b 95 a0 fd ff ff \tmov    -0x260(%rbp),%rdx\n    1eaa:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1eae:\t48 89 90 30 03 00 00 \tmov    %rdx,0x330(%rax)\n    1eb5:\t48 8b 95 a8 fd ff ff \tmov    -0x258(%rbp),%rdx\n    1ebc:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1ec0:\t48 89 90 38 03 00 00 \tmov    %rdx,0x338(%rax)\n    1ec7:\t48 8b 95 08 ff ff ff \tmov    -0xf8(%rbp),%rdx\n    1ece:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1ed2:\t48 89 90 48 03 00 00 \tmov    %rdx,0x348(%rax)\n    1ed9:\t48 8b 95 10 ff ff ff \tmov    -0xf0(%rbp),%rdx\n    1ee0:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1ee4:\t48 89 90 50 03 00 00 \tmov    %rdx,0x350(%rax)\n    1eeb:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n    1ef2:\t89 c2                \tmov    %eax,%edx\n    1ef4:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1ef8:\t66 89 90 c0 05 00 00 \tmov    %dx,0x5c0(%rax)\n    1eff:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    1f06:\t89 c2                \tmov    %eax,%edx\n    1f08:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1f0c:\t66 89 90 d0 05 00 00 \tmov    %dx,0x5d0(%rax)\n    1f13:\t48 8b 85 50 fd ff ff \tmov    -0x2b0(%rbp),%rax\n    1f1a:\t89 c2                \tmov    %eax,%edx\n    1f1c:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1f20:\t89 90 e8 05 00 00    \tmov    %edx,0x5e8(%rax)\n    1f26:\t48 8b 95 58 fd ff ff \tmov    -0x2a8(%rbp),%rdx\n    1f2d:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1f31:\t48 89 90 f0 05 00 00 \tmov    %rdx,0x5f0(%rax)\n    1f38:\t83 bd 04 fc ff ff 01 \tcmpl   $0x1,-0x3fc(%rbp)\n    1f3f:\t75 24                \tjne    1f65 <sirv_load_chan+0xd35>\n    1f41:\t48 8b 95 c8 fc ff ff \tmov    -0x338(%rbp),%rdx\n    1f48:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1f4c:\t48 89 90 f8 05 00 00 \tmov    %rdx,0x5f8(%rax)\n    1f53:\t48 8b 95 d0 fc ff ff \tmov    -0x330(%rbp),%rdx\n    1f5a:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1f5e:\t48 89 90 00 06 00 00 \tmov    %rdx,0x600(%rax)\n    1f65:\t48 8b 95 60 fd ff ff \tmov    -0x2a0(%rbp),%rdx\n    1f6c:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1f70:\t48 89 90 58 03 00 00 \tmov    %rdx,0x358(%rax)\n    1f77:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1f7b:\t48 05 60 03 00 00    \tadd    $0x360,%rax\n    1f81:\t48 8d 95 50 fd ff ff \tlea    -0x2b0(%rbp),%rdx\n    1f88:\t48 8d 4a 18          \tlea    0x18(%rdx),%rcx\n    1f8c:\tba 00 01 00 00       \tmov    $0x100,%edx\n    1f91:\t48 89 ce             \tmov    %rcx,%rsi\n    1f94:\t48 89 c7             \tmov    %rax,%rdi\n    1f97:\te8 00 00 00 00       \tcallq  1f9c <sirv_load_chan+0xd6c>\n    1f9c:\t48 8b 95 88 fd ff ff \tmov    -0x278(%rbp),%rdx\n    1fa3:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1fa7:\t48 89 90 60 04 00 00 \tmov    %rdx,0x460(%rax)\n    1fae:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    1fb5:\t83 e0 01             \tand    $0x1,%eax\n    1fb8:\t48 85 c0             \ttest   %rax,%rax\n    1fbb:\t74 19                \tje     1fd6 <sirv_load_chan+0xda6>\n    1fbd:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1fc1:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    1fc7:\t83 c8 01             \tor     $0x1,%eax\n    1fca:\t89 c2                \tmov    %eax,%edx\n    1fcc:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1fd0:\t89 90 68 04 00 00    \tmov    %edx,0x468(%rax)\n    1fd6:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    1fdd:\t83 e0 02             \tand    $0x2,%eax\n    1fe0:\t48 85 c0             \ttest   %rax,%rax\n    1fe3:\t74 19                \tje     1ffe <sirv_load_chan+0xdce>\n    1fe5:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1fe9:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    1fef:\t83 c8 02             \tor     $0x2,%eax\n    1ff2:\t89 c2                \tmov    %eax,%edx\n    1ff4:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1ff8:\t89 90 68 04 00 00    \tmov    %edx,0x468(%rax)\n    1ffe:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    2005:\t83 e0 04             \tand    $0x4,%eax\n    2008:\t48 85 c0             \ttest   %rax,%rax\n    200b:\t74 3d                \tje     204a <sirv_load_chan+0xe1a>\n    200d:\t83 bd 04 fc ff ff 02 \tcmpl   $0x2,-0x3fc(%rbp)\n    2014:\t75 1b                \tjne    2031 <sirv_load_chan+0xe01>\n    2016:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    201a:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    2020:\t80 cc 08             \tor     $0x8,%ah\n    2023:\t89 c2                \tmov    %eax,%edx\n    2025:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2029:\t89 90 68 04 00 00    \tmov    %edx,0x468(%rax)\n    202f:\teb 19                \tjmp    204a <sirv_load_chan+0xe1a>\n    2031:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2035:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    203b:\t83 c8 04             \tor     $0x4,%eax\n    203e:\t89 c2                \tmov    %eax,%edx\n    2040:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2044:\t89 90 68 04 00 00    \tmov    %edx,0x468(%rax)\n    204a:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    2051:\t83 e0 08             \tand    $0x8,%eax\n    2054:\t48 85 c0             \ttest   %rax,%rax\n    2057:\t74 19                \tje     2072 <sirv_load_chan+0xe42>\n    2059:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    205d:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    2063:\t83 c8 08             \tor     $0x8,%eax\n    2066:\t89 c2                \tmov    %eax,%edx\n    2068:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    206c:\t89 90 68 04 00 00    \tmov    %edx,0x468(%rax)\n    2072:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    2079:\t83 e0 10             \tand    $0x10,%eax\n    207c:\t48 85 c0             \ttest   %rax,%rax\n    207f:\t74 19                \tje     209a <sirv_load_chan+0xe6a>\n    2081:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2085:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    208b:\t83 c8 10             \tor     $0x10,%eax\n    208e:\t89 c2                \tmov    %eax,%edx\n    2090:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2094:\t89 90 68 04 00 00    \tmov    %edx,0x468(%rax)\n    209a:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    20a1:\t83 e0 20             \tand    $0x20,%eax\n    20a4:\t48 85 c0             \ttest   %rax,%rax\n    20a7:\t74 19                \tje     20c2 <sirv_load_chan+0xe92>\n    20a9:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    20ad:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    20b3:\t83 c8 20             \tor     $0x20,%eax\n    20b6:\t89 c2                \tmov    %eax,%edx\n    20b8:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    20bc:\t89 90 68 04 00 00    \tmov    %edx,0x468(%rax)\n    20c2:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    20c9:\t83 e0 40             \tand    $0x40,%eax\n    20cc:\t48 85 c0             \ttest   %rax,%rax\n    20cf:\t74 19                \tje     20ea <sirv_load_chan+0xeba>\n    20d1:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    20d5:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    20db:\t83 c8 40             \tor     $0x40,%eax\n    20de:\t89 c2                \tmov    %eax,%edx\n    20e0:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    20e4:\t89 90 68 04 00 00    \tmov    %edx,0x468(%rax)\n    20ea:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    20f1:\t25 80 00 00 00       \tand    $0x80,%eax\n    20f6:\t48 85 c0             \ttest   %rax,%rax\n    20f9:\t74 18                \tje     2113 <sirv_load_chan+0xee3>\n    20fb:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    20ff:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    2105:\t0c 80                \tor     $0x80,%al\n    2107:\t89 c2                \tmov    %eax,%edx\n    2109:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    210d:\t89 90 68 04 00 00    \tmov    %edx,0x468(%rax)\n    2113:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    211a:\t25 00 01 00 00       \tand    $0x100,%eax\n    211f:\t48 85 c0             \ttest   %rax,%rax\n    2122:\t74 15                \tje     2139 <sirv_load_chan+0xf09>\n    2124:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    2129:\te8 00 00 00 00       \tcallq  212e <sirv_load_chan+0xefe>\n    212e:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    2132:\t48 89 82 20 03 00 00 \tmov    %rax,0x320(%rdx)\n    2139:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    2140:\t25 00 02 00 00       \tand    $0x200,%eax\n    2145:\t48 85 c0             \ttest   %rax,%rax\n    2148:\t74 19                \tje     2163 <sirv_load_chan+0xf33>\n    214a:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    214e:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    2154:\t80 cc 02             \tor     $0x2,%ah\n    2157:\t89 c2                \tmov    %eax,%edx\n    2159:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    215d:\t89 90 68 04 00 00    \tmov    %edx,0x468(%rax)\n    2163:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2167:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    216d:\t0d 00 00 02 00       \tor     $0x20000,%eax\n    2172:\t89 c2                \tmov    %eax,%edx\n    2174:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2178:\t89 90 68 04 00 00    \tmov    %edx,0x468(%rax)\n    217e:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    2185:\t25 00 00 04 00       \tand    $0x40000,%eax\n    218a:\t48 85 c0             \ttest   %rax,%rax\n    218d:\t74 12                \tje     21a1 <sirv_load_chan+0xf71>\n    218f:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2193:\t66 c7 80 a0 05 00 00 \tmovw   $0x1e,0x5a0(%rax)\n    219a:\t1e 00 \n    219c:\te9 b0 00 00 00       \tjmpq   2251 <sirv_load_chan+0x1021>\n    21a1:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    21a8:\t25 00 00 08 00       \tand    $0x80000,%eax\n    21ad:\t48 85 c0             \ttest   %rax,%rax\n    21b0:\t74 12                \tje     21c4 <sirv_load_chan+0xf94>\n    21b2:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    21b6:\t66 c7 80 a0 05 00 00 \tmovw   $0x32,0x5a0(%rax)\n    21bd:\t32 00 \n    21bf:\te9 8d 00 00 00       \tjmpq   2251 <sirv_load_chan+0x1021>\n    21c4:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    21cb:\t25 00 00 10 00       \tand    $0x100000,%eax\n    21d0:\t48 85 c0             \ttest   %rax,%rax\n    21d3:\t74 0f                \tje     21e4 <sirv_load_chan+0xfb4>\n    21d5:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    21d9:\t66 c7 80 a0 05 00 00 \tmovw   $0x64,0x5a0(%rax)\n    21e0:\t64 00 \n    21e2:\teb 6d                \tjmp    2251 <sirv_load_chan+0x1021>\n    21e4:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    21eb:\t25 00 00 20 00       \tand    $0x200000,%eax\n    21f0:\t48 85 c0             \ttest   %rax,%rax\n    21f3:\t74 0f                \tje     2204 <sirv_load_chan+0xfd4>\n    21f5:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    21f9:\t66 c7 80 a0 05 00 00 \tmovw   $0x3e8,0x5a0(%rax)\n    2200:\te8 03 \n    2202:\teb 4d                \tjmp    2251 <sirv_load_chan+0x1021>\n    2204:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    220b:\t25 00 00 40 00       \tand    $0x400000,%eax\n    2210:\t48 85 c0             \ttest   %rax,%rax\n    2213:\t74 0f                \tje     2224 <sirv_load_chan+0xff4>\n    2215:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2219:\t66 c7 80 a0 05 00 00 \tmovw   $0x3e8,0x5a0(%rax)\n    2220:\te8 03 \n    2222:\teb 2d                \tjmp    2251 <sirv_load_chan+0x1021>\n    2224:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    222b:\t25 00 00 80 00       \tand    $0x800000,%eax\n    2230:\t48 85 c0             \ttest   %rax,%rax\n    2233:\t74 0f                \tje     2244 <sirv_load_chan+0x1014>\n    2235:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2239:\t66 c7 80 a0 05 00 00 \tmovw   $0xfc18,0x5a0(%rax)\n    2240:\t18 fc \n    2242:\teb 0d                \tjmp    2251 <sirv_load_chan+0x1021>\n    2244:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2248:\t66 c7 80 a0 05 00 00 \tmovw   $0x1e,0x5a0(%rax)\n    224f:\t1e 00 \n    2251:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    2258:\t25 00 00 00 01       \tand    $0x1000000,%eax\n    225d:\t48 85 c0             \ttest   %rax,%rax\n    2260:\t75 19                \tjne    227b <sirv_load_chan+0x104b>\n    2262:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2266:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    226c:\t83 c8 40             \tor     $0x40,%eax\n    226f:\t89 c2                \tmov    %eax,%edx\n    2271:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2275:\t89 90 68 04 00 00    \tmov    %edx,0x468(%rax)\n    227b:\t83 bd 04 fc ff ff 00 \tcmpl   $0x0,-0x3fc(%rbp)\n    2282:\t75 2a                \tjne    22ae <sirv_load_chan+0x107e>\n    2284:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    228b:\t25 00 00 00 04       \tand    $0x4000000,%eax\n    2290:\t48 85 c0             \ttest   %rax,%rax\n    2293:\t74 19                \tje     22ae <sirv_load_chan+0x107e>\n    2295:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2299:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    229f:\t80 cc 10             \tor     $0x10,%ah\n    22a2:\t89 c2                \tmov    %eax,%edx\n    22a4:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    22a8:\t89 90 68 04 00 00    \tmov    %edx,0x468(%rax)\n    22ae:\t83 bd 04 fc ff ff 02 \tcmpl   $0x2,-0x3fc(%rbp)\n    22b5:\t0f 84 99 00 00 00    \tje     2354 <sirv_load_chan+0x1124>\n    22bb:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    22c2:\t25 00 00 00 08       \tand    $0x8000000,%eax\n    22c7:\t48 85 c0             \ttest   %rax,%rax\n    22ca:\t0f 84 84 00 00 00    \tje     2354 <sirv_load_chan+0x1124>\n    22d0:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    22d4:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    22da:\t0d 00 00 01 00       \tor     $0x10000,%eax\n    22df:\t89 c2                \tmov    %eax,%edx\n    22e1:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    22e5:\t89 90 68 04 00 00    \tmov    %edx,0x468(%rax)\n    22eb:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    22ef:\t48 05 6c 04 00 00    \tadd    $0x46c,%rax\n    22f5:\tba 00 01 00 00       \tmov    $0x100,%edx\n    22fa:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    22ff:\t48 89 c7             \tmov    %rax,%rdi\n    2302:\te8 00 00 00 00       \tcallq  2307 <sirv_load_chan+0x10d7>\n    2307:\t83 bd 04 fc ff ff 01 \tcmpl   $0x1,-0x3fc(%rbp)\n    230e:\t75 11                \tjne    2321 <sirv_load_chan+0x10f1>\n    2310:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2314:\t48 c7 80 70 05 00 00 \tmovq   $0x0,0x570(%rax)\n    231b:\t00 00 00 00 \n    231f:\teb 0f                \tjmp    2330 <sirv_load_chan+0x1100>\n    2321:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2325:\t48 c7 80 70 05 00 00 \tmovq   $0x0,0x570(%rax)\n    232c:\t00 00 00 00 \n    2330:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    2335:\te8 00 00 00 00       \tcallq  233a <sirv_load_chan+0x110a>\n    233a:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    233e:\t48 89 82 78 05 00 00 \tmov    %rax,0x578(%rdx)\n    2345:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2349:\t48 c7 80 80 05 00 00 \tmovq   $0x0,0x580(%rax)\n    2350:\t00 00 00 00 \n    2354:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    2359:\tbf 40 00 00 00       \tmov    $0x40,%edi\n    235e:\te8 00 00 00 00       \tcallq  2363 <sirv_load_chan+0x1133>\n    2363:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    2367:\t48 89 82 d8 05 00 00 \tmov    %rax,0x5d8(%rdx)\n    236e:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    2373:\tbf 40 00 00 00       \tmov    $0x40,%edi\n    2378:\te8 00 00 00 00       \tcallq  237d <sirv_load_chan+0x114d>\n    237d:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    2381:\t48 89 82 e0 05 00 00 \tmov    %rax,0x5e0(%rdx)\n    2388:\t83 bd 04 fc ff ff 01 \tcmpl   $0x1,-0x3fc(%rbp)\n    238f:\t75 49                \tjne    23da <sirv_load_chan+0x11aa>\n    2391:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2395:\t48 8b 80 d8 05 00 00 \tmov    0x5d8(%rax),%rax\n    239c:\t48 8d 8d 20 fe ff ff \tlea    -0x1e0(%rbp),%rcx\n    23a3:\tba 40 00 00 00       \tmov    $0x40,%edx\n    23a8:\t48 89 ce             \tmov    %rcx,%rsi\n    23ab:\t48 89 c7             \tmov    %rax,%rdi\n    23ae:\te8 00 00 00 00       \tcallq  23b3 <sirv_load_chan+0x1183>\n    23b3:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    23b7:\t48 8b 80 e0 05 00 00 \tmov    0x5e0(%rax),%rax\n    23be:\t48 8d 8d e0 fd ff ff \tlea    -0x220(%rbp),%rcx\n    23c5:\tba 40 00 00 00       \tmov    $0x40,%edx\n    23ca:\t48 89 ce             \tmov    %rcx,%rsi\n    23cd:\t48 89 c7             \tmov    %rax,%rdi\n    23d0:\te8 00 00 00 00       \tcallq  23d5 <sirv_load_chan+0x11a5>\n    23d5:\te9 0c 01 00 00       \tjmpq   24e6 <sirv_load_chan+0x12b6>\n    23da:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    23de:\t48 8b 80 d8 05 00 00 \tmov    0x5d8(%rax),%rax\n    23e5:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    23e9:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    23ed:\t48 8b 80 e0 05 00 00 \tmov    0x5e0(%rax),%rax\n    23f4:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    23f8:\t83 bd 04 fc ff ff 02 \tcmpl   $0x2,-0x3fc(%rbp)\n    23ff:\t75 0a                \tjne    240b <sirv_load_chan+0x11db>\n    2401:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    2408:\t00 \n    2409:\teb 08                \tjmp    2413 <sirv_load_chan+0x11e3>\n    240b:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    2412:\t00 \n    2413:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n    241a:\t00 \n    241b:\te9 99 00 00 00       \tjmpq   24b9 <sirv_load_chan+0x1289>\n    2420:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2424:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    242b:\t00 \n    242c:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    2430:\t48 01 d0             \tadd    %rdx,%rax\n    2433:\t0f b7 10             \tmovzwl (%rax),%edx\n    2436:\t0f b7 85 6e fe ff ff \tmovzwl -0x192(%rbp),%eax\n    243d:\t21 d0                \tand    %edx,%eax\n    243f:\t66 85 c0             \ttest   %ax,%ax\n    2442:\t74 26                \tje     246a <sirv_load_chan+0x123a>\n    2444:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2448:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    244f:\t00 \n    2450:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    2454:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n    2458:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    245c:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    2460:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    2464:\t0f b6 51 02          \tmovzbl 0x2(%rcx),%edx\n    2468:\t88 10                \tmov    %dl,(%rax)\n    246a:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    246e:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2475:\t00 \n    2476:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    247a:\t48 01 d0             \tadd    %rdx,%rax\n    247d:\t0f b7 10             \tmovzwl (%rax),%edx\n    2480:\t0f b7 85 6c fe ff ff \tmovzwl -0x194(%rbp),%eax\n    2487:\t21 d0                \tand    %edx,%eax\n    2489:\t66 85 c0             \ttest   %ax,%ax\n    248c:\t74 26                \tje     24b4 <sirv_load_chan+0x1284>\n    248e:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2492:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2499:\t00 \n    249a:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    249e:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n    24a2:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    24a6:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    24aa:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n    24ae:\t0f b6 51 02          \tmovzbl 0x2(%rcx),%edx\n    24b2:\t88 10                \tmov    %dl,(%rax)\n    24b4:\t48 83 45 c8 01       \taddq   $0x1,-0x38(%rbp)\n    24b9:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    24bd:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    24c4:\t00 \n    24c5:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    24c9:\t48 01 d0             \tadd    %rdx,%rax\n    24cc:\t0f b7 00             \tmovzwl (%rax),%eax\n    24cf:\t66 85 c0             \ttest   %ax,%ax\n    24d2:\t0f 85 48 ff ff ff    \tjne    2420 <sirv_load_chan+0x11f0>\n    24d8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    24dc:\tc6 00 00             \tmovb   $0x0,(%rax)\n    24df:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    24e3:\tc6 00 00             \tmovb   $0x0,(%rax)\n    24e6:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n    24ed:\t48 89 c6             \tmov    %rax,%rsi\n    24f0:\tbf 10 00 00 00       \tmov    $0x10,%edi\n    24f5:\te8 00 00 00 00       \tcallq  24fa <sirv_load_chan+0x12ca>\n    24fa:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    24fe:\t48 89 82 b8 05 00 00 \tmov    %rax,0x5b8(%rdx)\n    2505:\t83 7d b4 00          \tcmpl   $0x0,-0x4c(%rbp)\n    2509:\t74 18                \tje     2523 <sirv_load_chan+0x12f3>\n    250b:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n    2512:\t48 89 c6             \tmov    %rax,%rsi\n    2515:\tbf 08 00 00 00       \tmov    $0x8,%edi\n    251a:\te8 00 00 00 00       \tcallq  251f <sirv_load_chan+0x12ef>\n    251f:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    2523:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n    252a:\t00 \n    252b:\te9 3a 01 00 00       \tjmpq   266a <sirv_load_chan+0x143a>\n    2530:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2534:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    2538:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n    253f:\t48 89 d1             \tmov    %rdx,%rcx\n    2542:\tba 10 00 00 00       \tmov    $0x10,%edx\n    2547:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    254c:\t48 89 c7             \tmov    %rax,%rdi\n    254f:\te8 00 00 00 00       \tcallq  2554 <sirv_load_chan+0x1324>\n    2554:\t83 7d b4 00          \tcmpl   $0x0,-0x4c(%rbp)\n    2558:\t74 2e                \tje     2588 <sirv_load_chan+0x1358>\n    255a:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    255e:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2562:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2566:\t48 8d 0c d5 00 00 00 \tlea    0x0(,%rdx,8),%rcx\n    256d:\t00 \n    256e:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    2572:\t48 8d 3c 11          \tlea    (%rcx,%rdx,1),%rdi\n    2576:\t48 89 c1             \tmov    %rax,%rcx\n    2579:\tba 08 00 00 00       \tmov    $0x8,%edx\n    257e:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    2583:\te8 00 00 00 00       \tcallq  2588 <sirv_load_chan+0x1358>\n    2588:\t0f b7 8d 62 ff ff ff \tmovzwl -0x9e(%rbp),%ecx\n    258f:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2593:\t48 8b 80 b8 05 00 00 \tmov    0x5b8(%rax),%rax\n    259a:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    259e:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    25a2:\t48 01 c2             \tadd    %rax,%rdx\n    25a5:\t0f bf c1             \tmovswl %cx,%eax\n    25a8:\t89 42 08             \tmov    %eax,0x8(%rdx)\n    25ab:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    25af:\t48 8b 80 b8 05 00 00 \tmov    0x5b8(%rax),%rax\n    25b6:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    25ba:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    25be:\t48 01 c2             \tadd    %rax,%rdx\n    25c1:\t0f b7 85 60 ff ff ff \tmovzwl -0xa0(%rbp),%eax\n    25c8:\t66 89 42 0c          \tmov    %ax,0xc(%rdx)\n    25cc:\t83 bd 04 fc ff ff 01 \tcmpl   $0x1,-0x3fc(%rbp)\n    25d3:\t75 53                \tjne    2628 <sirv_load_chan+0x13f8>\n    25d5:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    25d8:\t83 f8 07             \tcmp    $0x7,%eax\n    25db:\t7e 4b                \tjle    2628 <sirv_load_chan+0x13f8>\n    25dd:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    25e1:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    25e5:\t48 8d 85 7c ff ff ff \tlea    -0x84(%rbp),%rax\n    25ec:\t48 89 d1             \tmov    %rdx,%rcx\n    25ef:\tba 04 00 00 00       \tmov    $0x4,%edx\n    25f4:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    25f9:\t48 89 c7             \tmov    %rax,%rdi\n    25fc:\te8 00 00 00 00       \tcallq  2601 <sirv_load_chan+0x13d1>\n    2601:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    2607:\t85 c0                \ttest   %eax,%eax\n    2609:\t74 1d                \tje     2628 <sirv_load_chan+0x13f8>\n    260b:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    260f:\t48 8b 80 b8 05 00 00 \tmov    0x5b8(%rax),%rax\n    2616:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    261a:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    261e:\t48 01 d0             \tadd    %rdx,%rax\n    2621:\tc7 40 08 00 00 00 00 \tmovl   $0x0,0x8(%rax)\n    2628:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    262c:\t48 8b 80 b8 05 00 00 \tmov    0x5b8(%rax),%rax\n    2633:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2637:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    263b:\t48 01 d0             \tadd    %rdx,%rax\n    263e:\t0f b7 40 0c          \tmovzwl 0xc(%rax),%eax\n    2642:\t98                   \tcwtl   \n    2643:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    2647:\t48 8b 92 b8 05 00 00 \tmov    0x5b8(%rdx),%rdx\n    264e:\t48 8b 4d c8          \tmov    -0x38(%rbp),%rcx\n    2652:\t48 c1 e1 04          \tshl    $0x4,%rcx\n    2656:\t48 8d 1c 0a          \tlea    (%rdx,%rcx,1),%rbx\n    265a:\t89 c7                \tmov    %eax,%edi\n    265c:\te8 00 00 00 00       \tcallq  2661 <sirv_load_chan+0x1431>\n    2661:\t66 89 43 0c          \tmov    %ax,0xc(%rbx)\n    2665:\t48 83 45 c8 01       \taddq   $0x1,-0x38(%rbp)\n    266a:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n    2671:\t48 39 45 c8          \tcmp    %rax,-0x38(%rbp)\n    2675:\t0f 8c b5 fe ff ff    \tjl     2530 <sirv_load_chan+0x1300>\n    267b:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n    2682:\t00 \n    2683:\te9 3f 01 00 00       \tjmpq   27c7 <sirv_load_chan+0x1597>\n    2688:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    268c:\t48 8d 45 88          \tlea    -0x78(%rbp),%rax\n    2690:\t48 89 d6             \tmov    %rdx,%rsi\n    2693:\t48 89 c7             \tmov    %rax,%rdi\n    2696:\te8 00 00 00 00       \tcallq  269b <sirv_load_chan+0x146b>\n    269b:\t85 c0                \ttest   %eax,%eax\n    269d:\t79 2b                \tjns    26ca <sirv_load_chan+0x149a>\n    269f:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    26a3:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    26a7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 26ae <sirv_load_chan+0x147e>\n    26ae:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    26b3:\t48 89 c7             \tmov    %rax,%rdi\n    26b6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    26bb:\te8 00 00 00 00       \tcallq  26c0 <sirv_load_chan+0x1490>\n    26c0:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    26c5:\te8 00 00 00 00       \tcallq  26ca <sirv_load_chan+0x149a>\n    26ca:\t83 7d b4 00          \tcmpl   $0x0,-0x4c(%rbp)\n    26ce:\t74 6c                \tje     273c <sirv_load_chan+0x150c>\n    26d0:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    26d4:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    26db:\t00 \n    26dc:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    26e0:\t48 01 d0             \tadd    %rdx,%rax\n    26e3:\t48 8b 00             \tmov    (%rax),%rax\n    26e6:\t48 85 c0             \ttest   %rax,%rax\n    26e9:\t74 51                \tje     273c <sirv_load_chan+0x150c>\n    26eb:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    26ef:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    26f6:\t00 \n    26f7:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    26fb:\t48 01 c2             \tadd    %rax,%rdx\n    26fe:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2702:\t48 89 c6             \tmov    %rax,%rsi\n    2705:\t48 89 d7             \tmov    %rdx,%rdi\n    2708:\te8 00 00 00 00       \tcallq  270d <sirv_load_chan+0x14dd>\n    270d:\t85 c0                \ttest   %eax,%eax\n    270f:\t79 2b                \tjns    273c <sirv_load_chan+0x150c>\n    2711:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2715:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    2719:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2720 <sirv_load_chan+0x14f0>\n    2720:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2725:\t48 89 c7             \tmov    %rax,%rdi\n    2728:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    272d:\te8 00 00 00 00       \tcallq  2732 <sirv_load_chan+0x1502>\n    2732:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    2737:\te8 00 00 00 00       \tcallq  273c <sirv_load_chan+0x150c>\n    273c:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    2740:\t48 85 c0             \ttest   %rax,%rax\n    2743:\t75 1f                \tjne    2764 <sirv_load_chan+0x1534>\n    2745:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2749:\t48 8b 80 b8 05 00 00 \tmov    0x5b8(%rax),%rax\n    2750:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2754:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    2758:\t48 01 d0             \tadd    %rdx,%rax\n    275b:\tc7 40 08 00 00 00 00 \tmovl   $0x0,0x8(%rax)\n    2762:\teb 5e                \tjmp    27c2 <sirv_load_chan+0x1592>\n    2764:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2768:\t48 8b 80 b8 05 00 00 \tmov    0x5b8(%rax),%rax\n    276f:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2773:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    2777:\t48 01 d0             \tadd    %rdx,%rax\n    277a:\t8b 40 08             \tmov    0x8(%rax),%eax\n    277d:\t85 c0                \ttest   %eax,%eax\n    277f:\t74 41                \tje     27c2 <sirv_load_chan+0x1592>\n    2781:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    2785:\t48 89 c7             \tmov    %rax,%rdi\n    2788:\te8 00 00 00 00       \tcallq  278d <sirv_load_chan+0x155d>\n    278d:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n    2791:\t48 83 7d a0 00       \tcmpq   $0x0,-0x60(%rbp)\n    2796:\t74 0c                \tje     27a4 <sirv_load_chan+0x1574>\n    2798:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    279c:\t8b 80 48 01 00 00    \tmov    0x148(%rax),%eax\n    27a2:\teb 05                \tjmp    27a9 <sirv_load_chan+0x1579>\n    27a4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    27a9:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    27ad:\t48 8b 92 b8 05 00 00 \tmov    0x5b8(%rdx),%rdx\n    27b4:\t48 8b 4d c8          \tmov    -0x38(%rbp),%rcx\n    27b8:\t48 c1 e1 04          \tshl    $0x4,%rcx\n    27bc:\t48 01 ca             \tadd    %rcx,%rdx\n    27bf:\t89 42 08             \tmov    %eax,0x8(%rdx)\n    27c2:\t48 83 45 c8 01       \taddq   $0x1,-0x38(%rbp)\n    27c7:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n    27ce:\t48 39 45 c8          \tcmp    %rax,-0x38(%rbp)\n    27d2:\t0f 8c b0 fe ff ff    \tjl     2688 <sirv_load_chan+0x1458>\n    27d8:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    27df:\t48 89 c6             \tmov    %rax,%rsi\n    27e2:\tbf 28 01 00 00       \tmov    $0x128,%edi\n    27e7:\te8 00 00 00 00       \tcallq  27ec <sirv_load_chan+0x15bc>\n    27ec:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    27f0:\t48 89 82 c8 05 00 00 \tmov    %rax,0x5c8(%rdx)\n    27f7:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n    27fe:\t00 \n    27ff:\te9 0c 01 00 00       \tjmpq   2910 <sirv_load_chan+0x16e0>\n    2804:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2808:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    280c:\t48 8d 85 40 ff ff ff \tlea    -0xc0(%rbp),%rax\n    2813:\t48 89 d1             \tmov    %rdx,%rcx\n    2816:\tba 18 00 00 00       \tmov    $0x18,%edx\n    281b:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    2820:\t48 89 c7             \tmov    %rax,%rdi\n    2823:\te8 00 00 00 00       \tcallq  2828 <sirv_load_chan+0x15f8>\n    2828:\t0f b7 8d 40 ff ff ff \tmovzwl -0xc0(%rbp),%ecx\n    282f:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2833:\t48 8b b0 c8 05 00 00 \tmov    0x5c8(%rax),%rsi\n    283a:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    283e:\t48 89 d0             \tmov    %rdx,%rax\n    2841:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2845:\t48 01 d0             \tadd    %rdx,%rax\n    2848:\t48 c1 e0 02          \tshl    $0x2,%rax\n    284c:\t48 01 d0             \tadd    %rdx,%rax\n    284f:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2853:\t48 8d 14 06          \tlea    (%rsi,%rax,1),%rdx\n    2857:\t48 0f bf c1          \tmovswq %cx,%rax\n    285b:\t48 89 82 20 01 00 00 \tmov    %rax,0x120(%rdx)\n    2862:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2866:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    286d:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2871:\t48 89 d0             \tmov    %rdx,%rax\n    2874:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2878:\t48 01 d0             \tadd    %rdx,%rax\n    287b:\t48 c1 e0 02          \tshl    $0x2,%rax\n    287f:\t48 01 d0             \tadd    %rdx,%rax\n    2882:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2886:\t48 8d 14 01          \tlea    (%rcx,%rax,1),%rdx\n    288a:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    2891:\t48 89 42 10          \tmov    %rax,0x10(%rdx)\n    2895:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2899:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    28a0:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    28a4:\t48 89 d0             \tmov    %rdx,%rax\n    28a7:\t48 c1 e0 03          \tshl    $0x3,%rax\n    28ab:\t48 01 d0             \tadd    %rdx,%rax\n    28ae:\t48 c1 e0 02          \tshl    $0x2,%rax\n    28b2:\t48 01 d0             \tadd    %rdx,%rax\n    28b5:\t48 c1 e0 03          \tshl    $0x3,%rax\n    28b9:\t48 01 c8             \tadd    %rcx,%rax\n    28bc:\t48 83 c0 18          \tadd    $0x18,%rax\n    28c0:\tba 00 01 00 00       \tmov    $0x100,%edx\n    28c5:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    28ca:\t48 89 c7             \tmov    %rax,%rdi\n    28cd:\te8 00 00 00 00       \tcallq  28d2 <sirv_load_chan+0x16a2>\n    28d2:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    28d6:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    28dd:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    28e1:\t48 89 d0             \tmov    %rdx,%rax\n    28e4:\t48 c1 e0 03          \tshl    $0x3,%rax\n    28e8:\t48 01 d0             \tadd    %rdx,%rax\n    28eb:\t48 c1 e0 02          \tshl    $0x2,%rax\n    28ef:\t48 01 d0             \tadd    %rdx,%rax\n    28f2:\t48 c1 e0 03          \tshl    $0x3,%rax\n    28f6:\t48 8d 1c 01          \tlea    (%rcx,%rax,1),%rbx\n    28fa:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    28ff:\te8 00 00 00 00       \tcallq  2904 <sirv_load_chan+0x16d4>\n    2904:\t48 89 83 18 01 00 00 \tmov    %rax,0x118(%rbx)\n    290b:\t48 83 45 c8 01       \taddq   $0x1,-0x38(%rbp)\n    2910:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    2917:\t48 39 45 c8          \tcmp    %rax,-0x38(%rbp)\n    291b:\t0f 8c e3 fe ff ff    \tjl     2804 <sirv_load_chan+0x15d4>\n    2921:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n    2928:\t00 \n    2929:\te9 ea 02 00 00       \tjmpq   2c18 <sirv_load_chan+0x19e8>\n    292e:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2932:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    2939:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    293d:\t48 89 d0             \tmov    %rdx,%rax\n    2940:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2944:\t48 01 d0             \tadd    %rdx,%rax\n    2947:\t48 c1 e0 02          \tshl    $0x2,%rax\n    294b:\t48 01 d0             \tadd    %rdx,%rax\n    294e:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2952:\t48 01 c8             \tadd    %rcx,%rax\n    2955:\t48 8d 50 08          \tlea    0x8(%rax),%rdx\n    2959:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    295d:\t48 89 c6             \tmov    %rax,%rsi\n    2960:\t48 89 d7             \tmov    %rdx,%rdi\n    2963:\te8 00 00 00 00       \tcallq  2968 <sirv_load_chan+0x1738>\n    2968:\t85 c0                \ttest   %eax,%eax\n    296a:\t79 2b                \tjns    2997 <sirv_load_chan+0x1767>\n    296c:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2970:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    2974:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 297b <sirv_load_chan+0x174b>\n    297b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2980:\t48 89 c7             \tmov    %rax,%rdi\n    2983:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2988:\te8 00 00 00 00       \tcallq  298d <sirv_load_chan+0x175d>\n    298d:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    2992:\te8 00 00 00 00       \tcallq  2997 <sirv_load_chan+0x1767>\n    2997:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    299b:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    29a2:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    29a6:\t48 89 d0             \tmov    %rdx,%rax\n    29a9:\t48 c1 e0 03          \tshl    $0x3,%rax\n    29ad:\t48 01 d0             \tadd    %rdx,%rax\n    29b0:\t48 c1 e0 02          \tshl    $0x2,%rax\n    29b4:\t48 01 d0             \tadd    %rdx,%rax\n    29b7:\t48 c1 e0 03          \tshl    $0x3,%rax\n    29bb:\t48 01 c8             \tadd    %rcx,%rax\n    29be:\t48 8b 80 20 01 00 00 \tmov    0x120(%rax),%rax\n    29c5:\t48 85 c0             \ttest   %rax,%rax\n    29c8:\t0f 84 e7 00 00 00    \tje     2ab5 <sirv_load_chan+0x1885>\n    29ce:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    29d2:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    29d9:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    29dd:\t48 89 d0             \tmov    %rdx,%rax\n    29e0:\t48 c1 e0 03          \tshl    $0x3,%rax\n    29e4:\t48 01 d0             \tadd    %rdx,%rax\n    29e7:\t48 c1 e0 02          \tshl    $0x2,%rax\n    29eb:\t48 01 d0             \tadd    %rdx,%rax\n    29ee:\t48 c1 e0 03          \tshl    $0x3,%rax\n    29f2:\t48 01 c8             \tadd    %rcx,%rax\n    29f5:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    29f9:\t48 89 c7             \tmov    %rax,%rdi\n    29fc:\te8 00 00 00 00       \tcallq  2a01 <sirv_load_chan+0x17d1>\n    2a01:\t48 83 c0 05          \tadd    $0x5,%rax\n    2a05:\t48 89 c7             \tmov    %rax,%rdi\n    2a08:\te8 00 00 00 00       \tcallq  2a0d <sirv_load_chan+0x17dd>\n    2a0d:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n    2a11:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2a15:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    2a1c:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2a20:\t48 89 d0             \tmov    %rdx,%rax\n    2a23:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2a27:\t48 01 d0             \tadd    %rdx,%rax\n    2a2a:\t48 c1 e0 02          \tshl    $0x2,%rax\n    2a2e:\t48 01 d0             \tadd    %rdx,%rax\n    2a31:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2a35:\t48 01 c8             \tadd    %rcx,%rax\n    2a38:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    2a3c:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    2a40:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2a45:\t48 89 c7             \tmov    %rax,%rdi\n    2a48:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2a4d:\te8 00 00 00 00       \tcallq  2a52 <sirv_load_chan+0x1822>\n    2a52:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2a56:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    2a5d:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2a61:\t48 89 d0             \tmov    %rdx,%rax\n    2a64:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2a68:\t48 01 d0             \tadd    %rdx,%rax\n    2a6b:\t48 c1 e0 02          \tshl    $0x2,%rax\n    2a6f:\t48 01 d0             \tadd    %rdx,%rax\n    2a72:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2a76:\t48 01 c8             \tadd    %rcx,%rax\n    2a79:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2a7d:\t48 89 c7             \tmov    %rax,%rdi\n    2a80:\te8 00 00 00 00       \tcallq  2a85 <sirv_load_chan+0x1855>\n    2a85:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2a89:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    2a90:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2a94:\t48 89 d0             \tmov    %rdx,%rax\n    2a97:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2a9b:\t48 01 d0             \tadd    %rdx,%rax\n    2a9e:\t48 c1 e0 02          \tshl    $0x2,%rax\n    2aa2:\t48 01 d0             \tadd    %rdx,%rax\n    2aa5:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2aa9:\t48 8d 14 01          \tlea    (%rcx,%rax,1),%rdx\n    2aad:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    2ab1:\t48 89 42 08          \tmov    %rax,0x8(%rdx)\n    2ab5:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2ab9:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    2ac0:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2ac4:\t48 89 d0             \tmov    %rdx,%rax\n    2ac7:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2acb:\t48 01 d0             \tadd    %rdx,%rax\n    2ace:\t48 c1 e0 02          \tshl    $0x2,%rax\n    2ad2:\t48 01 d0             \tadd    %rdx,%rax\n    2ad5:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2ad9:\t48 01 c8             \tadd    %rcx,%rax\n    2adc:\t48 c7 80 20 01 00 00 \tmovq   $0x0,0x120(%rax)\n    2ae3:\t00 00 00 00 \n    2ae7:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2aeb:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    2af2:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2af6:\t48 89 d0             \tmov    %rdx,%rax\n    2af9:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2afd:\t48 01 d0             \tadd    %rdx,%rax\n    2b00:\t48 c1 e0 02          \tshl    $0x2,%rax\n    2b04:\t48 01 d0             \tadd    %rdx,%rax\n    2b07:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2b0b:\t48 01 c8             \tadd    %rcx,%rax\n    2b0e:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    2b12:\t48 85 c0             \ttest   %rax,%rax\n    2b15:\t0f 84 f8 00 00 00    \tje     2c13 <sirv_load_chan+0x19e3>\n    2b1b:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2b1f:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    2b26:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2b2a:\t48 89 d0             \tmov    %rdx,%rax\n    2b2d:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2b31:\t48 01 d0             \tadd    %rdx,%rax\n    2b34:\t48 c1 e0 02          \tshl    $0x2,%rax\n    2b38:\t48 01 d0             \tadd    %rdx,%rax\n    2b3b:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2b3f:\t48 01 c8             \tadd    %rcx,%rax\n    2b42:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    2b46:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2b4a:\t48 89 c6             \tmov    %rax,%rsi\n    2b4d:\t48 89 d7             \tmov    %rdx,%rdi\n    2b50:\te8 00 00 00 00       \tcallq  2b55 <sirv_load_chan+0x1925>\n    2b55:\t85 c0                \ttest   %eax,%eax\n    2b57:\t79 2b                \tjns    2b84 <sirv_load_chan+0x1954>\n    2b59:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2b5d:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    2b61:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2b68 <sirv_load_chan+0x1938>\n    2b68:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2b6d:\t48 89 c7             \tmov    %rax,%rdi\n    2b70:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2b75:\te8 00 00 00 00       \tcallq  2b7a <sirv_load_chan+0x194a>\n    2b7a:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    2b7f:\te8 00 00 00 00       \tcallq  2b84 <sirv_load_chan+0x1954>\n    2b84:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2b88:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    2b8f:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2b93:\t48 89 d0             \tmov    %rdx,%rax\n    2b96:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2b9a:\t48 01 d0             \tadd    %rdx,%rax\n    2b9d:\t48 c1 e0 02          \tshl    $0x2,%rax\n    2ba1:\t48 01 d0             \tadd    %rdx,%rax\n    2ba4:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2ba8:\t48 01 c8             \tadd    %rcx,%rax\n    2bab:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2baf:\t48 85 c0             \ttest   %rax,%rax\n    2bb2:\t75 5f                \tjne    2c13 <sirv_load_chan+0x19e3>\n    2bb4:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2bb8:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    2bbf:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2bc3:\t48 89 d0             \tmov    %rdx,%rax\n    2bc6:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2bca:\t48 01 d0             \tadd    %rdx,%rax\n    2bcd:\t48 c1 e0 02          \tshl    $0x2,%rax\n    2bd1:\t48 01 d0             \tadd    %rdx,%rax\n    2bd4:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2bd8:\t48 01 c8             \tadd    %rcx,%rax\n    2bdb:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    2bdf:\t48 85 c0             \ttest   %rax,%rax\n    2be2:\t74 2f                \tje     2c13 <sirv_load_chan+0x19e3>\n    2be4:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2be8:\t48 8b 88 c8 05 00 00 \tmov    0x5c8(%rax),%rcx\n    2bef:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2bf3:\t48 89 d0             \tmov    %rdx,%rax\n    2bf6:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2bfa:\t48 01 d0             \tadd    %rdx,%rax\n    2bfd:\t48 c1 e0 02          \tshl    $0x2,%rax\n    2c01:\t48 01 d0             \tadd    %rdx,%rax\n    2c04:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2c08:\t48 01 c8             \tadd    %rcx,%rax\n    2c0b:\t48 c7 40 10 00 00 00 \tmovq   $0x0,0x10(%rax)\n    2c12:\t00 \n    2c13:\t48 83 45 c8 01       \taddq   $0x1,-0x38(%rbp)\n    2c18:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    2c1f:\t48 39 45 c8          \tcmp    %rax,-0x38(%rbp)\n    2c23:\t0f 8c 05 fd ff ff    \tjl     292e <sirv_load_chan+0x16fe>\n    2c29:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    2c2d:\t48 8d 45 82          \tlea    -0x7e(%rbp),%rax\n    2c31:\t48 89 d6             \tmov    %rdx,%rsi\n    2c34:\t48 89 c7             \tmov    %rax,%rdi\n    2c37:\te8 00 00 00 00       \tcallq  2c3c <sirv_load_chan+0x1a0c>\n    2c3c:\t85 c0                \ttest   %eax,%eax\n    2c3e:\t79 2b                \tjns    2c6b <sirv_load_chan+0x1a3b>\n    2c40:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2c44:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    2c48:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2c4f <sirv_load_chan+0x1a1f>\n    2c4f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2c54:\t48 89 c7             \tmov    %rax,%rdi\n    2c57:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2c5c:\te8 00 00 00 00       \tcallq  2c61 <sirv_load_chan+0x1a31>\n    2c61:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    2c66:\te8 00 00 00 00       \tcallq  2c6b <sirv_load_chan+0x1a3b>\n    2c6b:\t0f b7 45 82          \tmovzwl -0x7e(%rbp),%eax\n    2c6f:\t48 0f bf c0          \tmovswq %ax,%rax\n    2c73:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    2c77:\teb 47                \tjmp    2cc0 <sirv_load_chan+0x1a90>\n    2c79:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    2c7d:\t48 8d 45 82          \tlea    -0x7e(%rbp),%rax\n    2c81:\t48 89 d6             \tmov    %rdx,%rsi\n    2c84:\t48 89 c7             \tmov    %rax,%rdi\n    2c87:\te8 00 00 00 00       \tcallq  2c8c <sirv_load_chan+0x1a5c>\n    2c8c:\t85 c0                \ttest   %eax,%eax\n    2c8e:\t79 2b                \tjns    2cbb <sirv_load_chan+0x1a8b>\n    2c90:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2c94:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    2c98:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2c9f <sirv_load_chan+0x1a6f>\n    2c9f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2ca4:\t48 89 c7             \tmov    %rax,%rdi\n    2ca7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2cac:\te8 00 00 00 00       \tcallq  2cb1 <sirv_load_chan+0x1a81>\n    2cb1:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    2cb6:\te8 00 00 00 00       \tcallq  2cbb <sirv_load_chan+0x1a8b>\n    2cbb:\t48 83 6d c8 01       \tsubq   $0x1,-0x38(%rbp)\n    2cc0:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n    2cc5:\t7f b2                \tjg     2c79 <sirv_load_chan+0x1a49>\n    2cc7:\t83 bd 04 fc ff ff 01 \tcmpl   $0x1,-0x3fc(%rbp)\n    2cce:\t0f 85 bc 00 00 00    \tjne    2d90 <sirv_load_chan+0x1b60>\n    2cd4:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n    2cdb:\t00 \n    2cdc:\teb 47                \tjmp    2d25 <sirv_load_chan+0x1af5>\n    2cde:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    2ce2:\t48 8d 45 88          \tlea    -0x78(%rbp),%rax\n    2ce6:\t48 89 d6             \tmov    %rdx,%rsi\n    2ce9:\t48 89 c7             \tmov    %rax,%rdi\n    2cec:\te8 00 00 00 00       \tcallq  2cf1 <sirv_load_chan+0x1ac1>\n    2cf1:\t85 c0                \ttest   %eax,%eax\n    2cf3:\t79 2b                \tjns    2d20 <sirv_load_chan+0x1af0>\n    2cf5:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2cf9:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    2cfd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2d04 <sirv_load_chan+0x1ad4>\n    2d04:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2d09:\t48 89 c7             \tmov    %rax,%rdi\n    2d0c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2d11:\te8 00 00 00 00       \tcallq  2d16 <sirv_load_chan+0x1ae6>\n    2d16:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    2d1b:\te8 00 00 00 00       \tcallq  2d20 <sirv_load_chan+0x1af0>\n    2d20:\t48 83 45 c8 01       \taddq   $0x1,-0x38(%rbp)\n    2d25:\t48 8b 85 e8 fc ff ff \tmov    -0x318(%rbp),%rax\n    2d2c:\t48 39 45 c8          \tcmp    %rax,-0x38(%rbp)\n    2d30:\t7c ac                \tjl     2cde <sirv_load_chan+0x1aae>\n    2d32:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n    2d39:\t00 \n    2d3a:\teb 47                \tjmp    2d83 <sirv_load_chan+0x1b53>\n    2d3c:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    2d40:\t48 8d 45 88          \tlea    -0x78(%rbp),%rax\n    2d44:\t48 89 d6             \tmov    %rdx,%rsi\n    2d47:\t48 89 c7             \tmov    %rax,%rdi\n    2d4a:\te8 00 00 00 00       \tcallq  2d4f <sirv_load_chan+0x1b1f>\n    2d4f:\t85 c0                \ttest   %eax,%eax\n    2d51:\t79 2b                \tjns    2d7e <sirv_load_chan+0x1b4e>\n    2d53:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2d57:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    2d5b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2d62 <sirv_load_chan+0x1b32>\n    2d62:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2d67:\t48 89 c7             \tmov    %rax,%rdi\n    2d6a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2d6f:\te8 00 00 00 00       \tcallq  2d74 <sirv_load_chan+0x1b44>\n    2d74:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    2d79:\te8 00 00 00 00       \tcallq  2d7e <sirv_load_chan+0x1b4e>\n    2d7e:\t48 83 45 c8 01       \taddq   $0x1,-0x38(%rbp)\n    2d83:\t48 8b 85 f8 fc ff ff \tmov    -0x308(%rbp),%rax\n    2d8a:\t48 39 45 c8          \tcmp    %rax,-0x38(%rbp)\n    2d8e:\t7c ac                \tjl     2d3c <sirv_load_chan+0x1b0c>\n    2d90:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2d94:\t8b 80 68 04 00 00    \tmov    0x468(%rax),%eax\n    2d9a:\t25 80 00 00 00       \tand    $0x80,%eax\n    2d9f:\t85 c0                \ttest   %eax,%eax\n    2da1:\t0f 85 85 00 00 00    \tjne    2e2c <sirv_load_chan+0x1bfc>\n    2da7:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2dab:\t8b 80 14 02 00 00    \tmov    0x214(%rax),%eax\n    2db1:\t85 c0                \ttest   %eax,%eax\n    2db3:\t75 77                \tjne    2e2c <sirv_load_chan+0x1bfc>\n    2db5:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2db9:\t48 8d 50 14          \tlea    0x14(%rax),%rdx\n    2dbd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2dc4 <sirv_load_chan+0x1b94>\n    2dc4:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2dc9:\t48 89 c7             \tmov    %rax,%rdi\n    2dcc:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2dd1:\te8 00 00 00 00       \tcallq  2dd6 <sirv_load_chan+0x1ba6>\n    2dd6:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2dda:\t48 89 45 98          \tmov    %rax,-0x68(%rbp)\n    2dde:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2de2:\t48 8b 00             \tmov    (%rax),%rax\n    2de5:\t48 85 c0             \ttest   %rax,%rax\n    2de8:\t74 13                \tje     2dfd <sirv_load_chan+0x1bcd>\n    2dea:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2dee:\t48 8b 00             \tmov    (%rax),%rax\n    2df1:\t48 8b 55 98          \tmov    -0x68(%rbp),%rdx\n    2df5:\t48 8b 52 08          \tmov    0x8(%rdx),%rdx\n    2df9:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n    2dfd:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2e01:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2e05:\t48 85 c0             \ttest   %rax,%rax\n    2e08:\t74 14                \tje     2e1e <sirv_load_chan+0x1bee>\n    2e0a:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2e0e:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2e12:\t48 8b 55 98          \tmov    -0x68(%rbp),%rdx\n    2e16:\t48 8b 12             \tmov    (%rdx),%rdx\n    2e19:\t48 89 10             \tmov    %rdx,(%rax)\n    2e1c:\teb 0e                \tjmp    2e2c <sirv_load_chan+0x1bfc>\n    2e1e:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2e22:\t48 8b 00             \tmov    (%rax),%rax\n    2e25:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 2e2c <sirv_load_chan+0x1bfc>\n    2e2c:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2e30:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2e34:\t48 89 c7             \tmov    %rax,%rdi\n    2e37:\te8 00 00 00 00       \tcallq  2e3c <sirv_load_chan+0x1c0c>\n    2e3c:\t89 45 b0             \tmov    %eax,-0x50(%rbp)\n    2e3f:\t83 7d b0 01          \tcmpl   $0x1,-0x50(%rbp)\n    2e43:\t0f 84 fd e4 ff ff    \tje     1346 <sirv_load_chan+0x116>\n    2e49:\t83 7d b0 00          \tcmpl   $0x0,-0x50(%rbp)\n    2e4d:\t74 2b                \tje     2e7a <sirv_load_chan+0x1c4a>\n    2e4f:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2e53:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n    2e57:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2e5e <sirv_load_chan+0x1c2e>\n    2e5e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2e63:\t48 89 c7             \tmov    %rax,%rdi\n    2e66:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2e6b:\te8 00 00 00 00       \tcallq  2e70 <sirv_load_chan+0x1c40>\n    2e70:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    2e75:\te8 00 00 00 00       \tcallq  2e7a <sirv_load_chan+0x1c4a>\n    2e7a:\t48 83 45 b8 01       \taddq   $0x1,-0x48(%rbp)\n    2e7f:\t48 81 7d b8 ff 00 00 \tcmpq   $0xff,-0x48(%rbp)\n    2e86:\t00 \n    2e87:\t7e a3                \tjle    2e2c <sirv_load_chan+0x1bfc>\n    2e89:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2e8d:\t48 89 c7             \tmov    %rax,%rdi\n    2e90:\te8 00 00 00 00       \tcallq  2e95 <sirv_load_chan+0x1c65>\n    2e95:\t90                   \tnop\n    2e96:\t48 81 c4 f8 03 00 00 \tadd    $0x3f8,%rsp\n    2e9d:\t5b                   \tpop    %rbx\n    2e9e:\t5d                   \tpop    %rbp\n    2e9f:\tc3                   \tretq   ", "code_s": "__int64 __fastcall sirv_load_chan(__int64 a1, unsigned int a2) {\n  _BOOL4 v2;\n  size_t v3;\n  size_t v4;\n  int v5;\n  int v6;\n  int v7;\n  __int64 v8;\n  int v9;\n  int v10;\n  _BYTE *v11;\n  _BYTE *v12;\n  __int64 v13;\n  __int64 v14;\n  int v15;\n  __int64 v16;\n  __int64 v17;\n  size_t v18;\n  char v20[Number];\n  __int64 v21[Number];\n  __int64 v22;\n  __int64 v23;\n  __int64 v24;\n  __int64 v25[Number];\n  const char *v26;\n  __int64 v27;\n  __int64 v28;\n  __int64 v29[Number];\n  __int64 v30;\n  __int64 v31;\n  __int64 v32;\n  __int64 v33;\n  char v34[Number];\n  __int64 v35;\n  __int64 v36;\n  __int64 v37;\n  _QWORD v38[Number];\n  __int64 v39;\n  __int64 v40;\n  __int64 v41;\n  __int64 v42;\n  __int64 v43;\n  __int64 v44;\n  __int64 v45;\n  __int64 v46;\n  char v47[Number];\n  char v48[Number];\n  unsigned __int16 v49;\n  unsigned __int16 v50;\n  char ptr[Number];\n  char v52[Number];\n  char v53[Number];\n  __int64 v54;\n  __int64 v55[Number];\n  __int64 v56;\n  __int64 v57;\n  __int16 v58[Number];\n  __int64 v59;\n  __int16 v60[Number];\n  int v61;\n  __int16 v62;\n  int v63;\n  void *dest;\n  char *s;\n  _QWORD *v66;\n  __int64 v67;\n  _QWORD *v68;\n  int v69;\n  _BOOL4 v70;\n  __int64 i;\n  __int64 v72;\n  __int64 j;\n  __int64 v74;\n  _BYTE *v75;\n  _BYTE *v76;\n  _BYTE *v77;\n  v74 = Number L;\n  if (a2) {\n    if (a2 == Number) {\n      v72 = open_db_ver(a1, String, Number L, Number L, &v63);\n    } else {\n      if (a2 != Number) {\n        fprintf(stderr, String, a2);\n        exit(Number);\n      }\n      v72 = open_db_ver(a1, String, Number L, Number L, &v63);\n    }\n  } else {\n    v72 = open_db_ver(a1, String, Number L, Number L, &v63);\n  }\n  v2 = a2 == Number || v63 > Number;\n  v70 = v2;\n  for (i = Number L; i <= Number; ++i) {\n    while (Number) {\n      v69 = fgetc(*(FILE **)(v72 + Number));\n      if (v69 != Number)\n        break;\n      fread(ptr, Number, Number, *(FILE **)(v72 + Number));\n      if (a2 == Number) {\n        if (fread(v48, Number, Number, *(FILE **)(v72 + Number)) != Number) {\n          fprintf(stderr, String, (const char *)(v72 + Number));\n          exit(Number);\n        }\n        if (fread(v47, Number, Number, *(FILE **)(v72 + Number)) != Number) {\n          fprintf(stderr, String, (const char *)(v72 + Number));\n          exit(Number);\n        }\n        dest = v48;\n        while (*(_BYTE *)dest) {\n          if (*(_BYTE *)dest == Number) {\n            v3 = strlen((const char *)dest + Number);\n            memmove(dest, (char *)dest + Number, v3 + Number);\n          } else {\n            dest = (char *)dest + Number;\n          }\n        }\n        dest = v47;\n        while (*(_BYTE *)dest) {\n          if (*(_BYTE *)dest == Number) {\n            v4 = strlen((const char *)dest + Number);\n            memmove(dest, (char *)dest + Number, v4 + Number);\n          } else {\n            dest = (char *)dest + Number;\n          }\n        }\n      } else {\n        fread(&v50, Number, Number, *(FILE **)(v72 + Number));\n        fread(&v49, Number, Number, *(FILE **)(v72 + Number));\n      }\n      fread(&v35, Number, Number, *(FILE **)(v72 + Number));\n      if (a2 == Number) {\n        if (v63 == Number) {\n          fread(v21, Number, Number, *(FILE **)(v72 + Number));\n          v26 = (const char *)v21[Number];\n          v27 = v21[Number];\n          v28 = v21[Number];\n          v29[Number] = v25[Number];\n          v29[Number] = v25[Number];\n          v30 = v21[Number];\n          v31 = v21[Number];\n          v32 = v21[Number];\n          v33 = v21[Number];\n        } else {\n          fread(&v26, Number, Number, *(FILE **)(v72 + Number));\n        }\n      } else if (a2 == Number) {\n        fread(v20, Number, Number, *(FILE **)(v72 + Number));\n      } else {\n        fread(v34, Number, Number, *(FILE **)(v72 + Number));\n      }\n      if ((int)read_string(v55, v72) < Number) {\n        fprintf(stderr, String, (const char *)(v72 + Number));\n        exit(Number);\n      }\n      if (v40 && (int)read_string(&v40, v72) < Number) {\n        fprintf(stderr, String, (const char *)(v72 + Number));\n        exit(Number);\n      }\n      if (v41 && (int)read_string(&v41, v72) < Number) {\n        fprintf(stderr, String, (const char *)(v72 + Number));\n        exit(Number);\n      }\n      if (v36 && (int)read_string(&v36, v72) < Number) {\n        fprintf(stderr, String, (const char *)(v72 + Number));\n        exit(Number);\n      }\n      if (v37 && (int)read_string(&v37, v72) < Number) {\n        fprintf(stderr, String, (const char *)(v72 + Number));\n        exit(Number);\n      }\n      if (v42 && (int)read_string(&v42, v72) < Number) {\n        fprintf(stderr, String, (const char *)(v72 + Number));\n        exit(Number);\n      }\n      if (v43 && (int)read_string(&v43, v72) < Number) {\n        fprintf(stderr, String, (const char *)(v72 + Number));\n        exit(Number);\n      }\n      if (v44 && (int)read_string(&v44, v72) < Number) {\n        fprintf(stderr, String, (const char *)(v72 + Number));\n        exit(Number);\n      }\n      if (v45 && (int)read_string(&v45, v72) < Number) {\n        fprintf(stderr, String, (const char *)(v72 + Number));\n        exit(Number);\n      }\n      if (v46 && (int)read_string(&v46, v72) < Number) {\n        fprintf(stderr, String, (const char *)(v72 + Number));\n        exit(Number);\n      }\n      if (a2 == Number) {\n        if (v26 && (int)read_string(&v26, v72) < Number) {\n          fprintf(stderr, String, (const char *)(v72 + Number));\n          exit(Number);\n        }\n        if (v27 && (int)read_string(&v27, v72) < Number) {\n          fprintf(stderr, String, (const char *)(v72 + Number));\n          exit(Number);\n        }\n        if (v28 && (int)read_string(&v28, v72) < Number) {\n          fprintf(stderr, String, (const char *)(v72 + Number));\n          exit(Number);\n        }\n        if (v29[Number] && (int)read_string(v29, v72) < Number) {\n          fprintf(stderr, String, (const char *)(v72 + Number));\n          exit(Number);\n        }\n        if (v63 > Number && v22 && (int)read_string(&v22, v72) < Number) {\n          fprintf(stderr, String, (const char *)(v72 + Number));\n          exit(Number);\n        }\n        if (v63 > Number && v23 && (int)read_string(&v23, v72) < Number) {\n          fprintf(stderr, String, (const char *)(v72 + Number));\n          exit(Number);\n        }\n        if (v63 > Number && v24 && (int)read_string(&v24, v72) < Number) {\n          fprintf(stderr, String, (const char *)(v72 + Number));\n          exit(Number);\n        }\n        if (v63 > Number && v25[Number] &&\n            (int)read_string(v25, v72) < Number) {\n          fprintf(stderr, String, (const char *)(v72 + Number));\n          exit(Number);\n        }\n      }\n      v68 = (_QWORD *)makechan(v52);\n      if (v53[Number]) {\n        v67 = get_nickinfo(v53);\n        if (v67) {\n          if (*(_DWORD *)(v67 + Number))\n            *((_DWORD *)v68 + Number) = *(_DWORD *)(v67 + Number);\n          else\n            fprintf(stderr, String, v53, v52);\n        } else {\n          fprintf(stderr, String, v53, v52);\n        }\n      }\n      if (a2 == Number && v26) {\n        v67 = get_nickinfo(v26);\n        if (v67) {\n          if (*(_DWORD *)(v67 + Number)) {\n            if (*(_DWORD *)(v67 + Number) == *((_DWORD *)v68 + Number))\n              fprintf(stderr, String, v26, v52);\n            else\n              *((_DWORD *)v68 + Number) = *(_DWORD *)(v67 + Number);\n          } else {\n            fprintf(stderr, String, v26, v52);\n          }\n        } else {\n          fprintf(stderr, String, v26, v52);\n        }\n      }\n      init_password(v68 + Number);\n      strscpy(v68 + Number, &v54, Number L);\n      v68[Number] = v55[Number];\n      v68[Number] = v40;\n      v68[Number] = v41;\n      v68[Number] = v55[Number];\n      v68[Number] = v55[Number];\n      *((_WORD *)v68 + Number) = v56;\n      *((_WORD *)v68 + Number) = v57;\n      *((_DWORD *)v68 + Number) = v35;\n      v68[Number] = v36;\n      if (a2 == Number) {\n        v68[Number] = v27;\n        v68[Number] = v28;\n      }\n      v68[Number] = v37;\n      strscpy(v68 + Number, v38, Number L);\n      v68[Number] = v38[Number];\n      if ((v39 & Number) != Number)\n        *((_DWORD *)v68 + Number) |= Number;\n      if ((v39 & Number) != Number)\n        *((_DWORD *)v68 + Number) |= Number;\n      if ((v39 & Number) != Number) {\n        if (a2 == Number) {\n          v5 = *((_DWORD *)v68 + Number);\n          BYTE1(v5) |= Number;\n          v6 = v5;\n        } else {\n          v6 = *((_DWORD *)v68 + Number) | Number;\n        }\n        *((_DWORD *)v68 + Number) = v6;\n      }\n      if ((v39 & Number) != Number)\n        *((_DWORD *)v68 + Number) |= Number;\n      if ((v39 & Number) != Number)\n        *((_DWORD *)v68 + Number) |= Number;\n      if ((v39 & Number) != Number)\n        *((_DWORD *)v68 + Number) |= Number;\n      if ((v39 & Number) != Number)\n        *((_DWORD *)v68 + Number) |= Number;\n      if ((v39 & Number) != Number) {\n        v7 = *((_DWORD *)v68 + Number);\n        LOBYTE(v7) = v7 | Number;\n        *((_DWORD *)v68 + Number) = v7;\n      }\n      if ((v39 & Number) != Number) {\n        v8 = sstrdup(String);\n        v68[Number] = v8;\n      }\n      if ((v39 & Number) != Number) {\n        v9 = *((_DWORD *)v68 + Number);\n        BYTE1(v9) |= Number;\n        *((_DWORD *)v68 + Number) = v9;\n      }\n      *((_DWORD *)v68 + Number) |= Number;\n      if ((v39 & Number) != Number) {\n        *((_WORD *)v68 + Number) = Number;\n      } else if ((v39 & Number) != Number) {\n        *((_WORD *)v68 + Number) = Number;\n      } else if ((v39 & Number) != Number) {\n        *((_WORD *)v68 + Number) = Number;\n      } else if ((v39 & Number) != Number) {\n        *((_WORD *)v68 + Number) = Number;\n      } else if ((v39 & Number) != Number) {\n        *((_WORD *)v68 + Number) = Number;\n      } else if ((v39 & Number) != Number) {\n        *((_WORD *)v68 + Number) = Number;\n      } else {\n        *((_WORD *)v68 + Number) = Number;\n      }\n      if ((v39 & Number) == Number)\n        *((_DWORD *)v68 + Number) |= Number;\n      if (!a2 && (v39 & Number) != Number) {\n        v10 = *((_DWORD *)v68 + Number);\n        BYTE1(v10) |= Number;\n        *((_DWORD *)v68 + Number) = v10;\n      }\n      if (a2 != Number && (v39 & Number) != Number) {\n        *((_DWORD *)v68 + Number) |= Number;\n        strscpy((char *)v68 + Number, String, Number L);\n        if (a2 == Number)\n          v68[Number] = String;\n        else\n          v68[Number] = String;\n        v68[Number] = time(Number L);\n        v68[Number] = Number L;\n      }\n      v68[Number] = scalloc(Number L, Number L);\n      v68[Number] = scalloc(Number L, Number L);\n      if (a2 == Number) {\n        strscpy(v68[Number], v48, Number L);\n        strscpy(v68[Number], v47, Number L);\n      } else {\n        v75 = (_BYTE *)v68[Number];\n        v77 = (_BYTE *)v68[Number];\n        if (a2 == Number)\n          v76 = &bolivia_cmodes;\n        else\n          v76 = &sirv_cmodes;\n        for (j = Number L; *(_WORD *)&v76[Number * j]; ++j) {\n          if ((*(_WORD *)&v76[Number * j] & v50) != Number) {\n            v11 = v75++;\n            *v11 = v76[Number * j + Number];\n          }\n          if ((*(_WORD *)&v76[Number * j] & v49) != Number) {\n            v12 = v77++;\n            *v12 = v76[Number * j + Number];\n          }\n        }\n        *v75 = Number;\n        *v77 = Number;\n      }\n      v13 = scalloc(Number L, v56);\n      v68[Number] = v13;\n      if (v70)\n        v74 = scalloc(Number L, v56);\n      for (j = Number L; j < v56; ++j) {\n        fread(v60, Number, Number, *(FILE **)(v72 + Number));\n        if (v70)\n          fread((void *)(Number * j + v74), Number, Number,\n                *(FILE **)(v72 + Number));\n        *(_DWORD *)(v68[Number] + Number * j + Number) = v60[Number];\n        *(_WORD *)(v68[Number] + Number * j + Number) = v60[Number];\n        if (a2 == Number && v63 > Number) {\n          fread(&v61, Number, Number, *(FILE **)(v72 + Number));\n          if (v61)\n            *(_DWORD *)(Number * j + v68[Number] + Number) = Number;\n        }\n        v14 = v68[Number] + Number * j;\n        *(_WORD *)(v14 + Number) =\n            convert_acclev((unsigned int)*(__int16 *)(v14 + Number));\n      }\n      for (j = Number L; j < v56; ++j) {\n        if ((int)read_string(&dest, v72) < Number) {\n          fprintf(stderr, String, (const char *)(v72 + Number));\n          exit(Number);\n        }\n        if (v70 && *(_QWORD *)(Number * j + v74) &&\n            (int)read_string(v74 + Number * j, v72) < Number) {\n          fprintf(stderr, String, (const char *)(v72 + Number));\n          exit(Number);\n        }\n        if (dest) {\n          if (*(_DWORD *)(Number * j + v68[Number] + Number)) {\n            v67 = get_nickinfo(dest);\n            if (v67)\n              v15 = *(_DWORD *)(v67 + Number);\n            else\n              v15 = Number;\n            *(_DWORD *)(Number * j + v68[Number] + Number) = v15;\n          }\n        } else {\n          *(_DWORD *)(Number * j + v68[Number] + Number) = Number;\n        }\n      }\n      v16 = scalloc(Number L, v57);\n      v68[Number] = v16;\n      for (j = Number L; j < v57; ++j) {\n        fread(v58, Number, Number, *(FILE **)(v72 + Number));\n        *(_QWORD *)(v68[Number] + Number * j + Number) = v58[Number];\n        *(_QWORD *)(v68[Number] + Number * j + Number) = v59;\n        strscpy(v68[Number] + Number * j + Number, String, Number L);\n        v17 = v68[Number] + Number * j;\n        *(_QWORD *)(v17 + Number) = time(Number L);\n      }\n      for (j = Number L; j < v57; ++j) {\n        if ((int)read_string(v68[Number] + Number * j + Number, v72) < Number) {\n          fprintf(stderr, String, (const char *)(v72 + Number));\n          exit(Number);\n        }\n        if (*(_QWORD *)(v68[Number] + Number * j + Number)) {\n          v18 = strlen(*(const char **)(v68[Number] + Number * j + Number));\n          s = (char *)smalloc(v18 + Number);\n          sprintf(s, String,\n                  *(const char **)(v68[Number] + Number * j + Number));\n          free(*(void **)(v68[Number] + Number * j + Number));\n          *(_QWORD *)(v68[Number] + Number * j + Number) = s;\n        }\n        *(_QWORD *)(v68[Number] + Number * j + Number) = Number L;\n        if (*(_QWORD *)(v68[Number] + Number * j + Number)) {\n          if ((int)read_string(v68[Number] + Number * j + Number, v72) <\n              Number) {\n            fprintf(stderr, String, (const char *)(v72 + Number));\n            exit(Number);\n          }\n          if (!*(_QWORD *)(v68[Number] + Number * j + Number) &&\n              *(_QWORD *)(v68[Number] + Number * j + Number))\n            *(_QWORD *)(v68[Number] + Number * j + Number) = Number L;\n        }\n      }\n      if ((int)read_int16(&v62, v72) < Number) {\n        fprintf(stderr, String, (const char *)(v72 + Number));\n        exit(Number);\n      }\n      for (j = v62; j > Number; --j) {\n        if ((int)read_int16(&v62, v72) < Number) {\n          fprintf(stderr, String, (const char *)(v72 + Number));\n          exit(Number);\n        }\n      }\n      if (a2 == Number) {\n        for (j = Number L; j < v30; ++j) {\n          if ((int)read_string(&dest, v72) < Number) {\n            fprintf(stderr, String, (const char *)(v72 + Number));\n            exit(Number);\n          }\n        }\n        for (j = Number L; j < v32; ++j) {\n          if ((int)read_string(&dest, v72) < Number) {\n            fprintf(stderr, String, (const char *)(v72 + Number));\n            exit(Number);\n          }\n        }\n      }\n      if ((v68[Number] & Number) == Number && !*((_DWORD *)v68 + Number)) {\n        fprintf(stderr, String, (const char *)v68 + Number);\n        v66 = v68;\n        if (*v68)\n          *(_QWORD *)(*v66 + Number L) = v66[Number];\n        if (v66[Number])\n          *(_QWORD *)v66[Number] = *v66;\n        else\n          ci_list = *v66;\n      }\n    }\n    if (v69) {\n      fprintf(stderr, String, (const char *)(v72 + Number));\n      exit(Number);\n    }\n  }\n  return close_db(v72);\n}", "code_t": "void __cdecl sirv_load_chan(const char *dir, int type) {\n  int v2;\n  size_t v3;\n  size_t v4;\n  int32_t v5;\n  int v6;\n  int32_t v7;\n  const char *v8;\n  int32_t v9;\n  int32_t v10;\n  char *v11;\n  char *v12;\n  ChanAccess *v13;\n  ChanAccess *v14;\n  uint32_t v15;\n  AutoKick *v16;\n  AutoKick *v17;\n  size_t v18;\n  sirv_load_chan $A6D1031853CF6F38F55D3A90174C211E\n      <span class=\"supfact\">oldci_bolivia</span>;\n  sirv_load_chan $240BF8F0F13B218CBD2ED01844F1BC26\n      <span class=\"supfact\">oldci_auspice8</span>;\n  sirv_load_chan $F46569F2E584AD9C9BFD4A18552BF258\n      <span class=\"supfact\">oldci_auspice</span>;\n  sirv_load_chan $615204297D4D8AE76BBA9252EABD48C6 <span class=\"supfact\">oldci_sirv</span>;\n  sirv_load_chan $2817F0C3AC3CCAC7EE1B10BDE8948E10 <span class=\"supfact\">oldci2</span>;\n  char mlock_off_auspice[Number];\n  char mlock_on_auspice[Number];\n  __int16 mlock_off_sirv;\n  __int16 mlock_on_sirv;\n  sirv_load_chan oldci_ <span class=\"supfact\">oldci</span>;\n  sirv_load_chan akick_ <span class=\"supfact\">akick</span>;\n  sirv_load_chan access_ <span class=\"supfact\">access</span>;\n  int tmpint;\n  int16_t tmp16;\n  int32_t ver;\n  char *s;\n  char *s_0;\n  ChannelInfo *_node;\n  NickInfo *ni;\n  ChannelInfo *ci;\n  int c;\n  int has_adders;\n  __int64 i;\n  dbFILE *f;\n  __int64 j;\n  char **adders;\n  char *on;\n  flagmode *cmodes;\n  char *off;\n  adders = Number L;\n  if (type) {\n    if (type == Number) {\n      f = (dbFILE *)open_db_ver(dir, String, Number L, Number L, &ver);\n    } else {\n      if (type != Number) {\n        fprintf(stderr, String, (unsigned int)type);\n        exit(Number);\n      }\n      f = (dbFILE *)open_db_ver(dir, String, Number L, Number L, &ver);\n    }\n  } else {\n    f = (dbFILE *)open_db_ver(dir, String, Number L, Number L, &ver);\n  }\n  v2 = type == Number || ver > Number;\n  has_adders = v2;\n  for (i = Number L; i <= Number; ++i) {\n    while (Number) {\n      c = fgetc(f->fp);\n      if (c != Number)\n        break;\n      fread(&<span class=\"supfact\">oldci</span>, Number, Number, f->fp);\n      if (type == Number) {\n        if (fread(mlock_on_auspice, Number, Number, f->fp) != Number) {\n          fprintf(stderr, String, f->filename);\n          exit(Number);\n        }\n        if (fread(mlock_off_auspice, Number, Number, f->fp) != Number) {\n          fprintf(stderr, String, f->filename);\n          exit(Number);\n        }\n        s = mlock_on_auspice;\n        while (*s) {\n          if (*s == Number) {\n            v3 = strlen(s + Number);\n            memmove(s, s + Number, v3 + Number);\n          } else {\n            ++s;\n          }\n        }\n        s = mlock_off_auspice;\n        while (*s) {\n          if (*s == Number) {\n            v4 = strlen(s + Number);\n            memmove(s, s + Number, v4 + Number);\n          } else {\n            ++s;\n          }\n        }\n      } else {\n        fread(&mlock_on_sirv, Number, Number, f->fp);\n        fread(&mlock_off_sirv, Number, Number, f->fp);\n      }\n      fread(&<span class=\"supfact\">oldci2</span>, Number, Number, f->fp);\n      if (type == Number) {\n        if (ver == Number) {\n          fread(&<span class=\"supfact\">oldci_auspice8</span>, Number, Number, f->fp);\n          <span class=\"supfact\">oldci_auspice</span>.successor =\n              <span class=\"supfact\">oldci_auspice8</span>.successor;\n          <span class=\"supfact\">oldci_auspice</span>.mlock_link =\n              <span class=\"supfact\">oldci_auspice8</span>.mlock_link;\n          <span class=\"supfact\">oldci_auspice</span>.mlock_flood =\n              <span class=\"supfact\">oldci_auspice8</span>.mlock_flood;\n          <span class=\"supfact\">oldci_auspice</span>.bot =\n              <span class=\"supfact\">oldci_auspice8</span>.bot;\n          <span class=\"supfact\">oldci_auspice</span>.botflag =\n              <span class=\"supfact\">oldci_auspice8</span>.botflag;\n          <span class=\"supfact\">oldci_auspice</span>.newsline =\n              <span class=\"supfact\">oldci_auspice8</span>.newsline;\n          <span class=\"supfact\">oldci_auspice</span>.news =\n              <span class=\"supfact\">oldci_auspice8</span>.news;\n          <span class=\"supfact\">oldci_auspice</span>.badwline =\n              <span class=\"supfact\">oldci_auspice8</span>.badwline;\n          <span class=\"supfact\">oldci_auspice</span>.badwords =\n              <span class=\"supfact\">oldci_auspice8</span>.badwords;\n        } else {\n          fread(&<span class=\"supfact\">oldci_auspice</span>, Number, Number, f->fp);\n        }\n      } else if (type == Number) {\n        fread(&<span class=\"supfact\">oldci_bolivia</span>, Number, Number, f->fp);\n      } else {\n        fread(&<span class=\"supfact\">oldci_sirv</span>, Number, Number, f->fp);\n      }\n      if ((int)read_string(&<span class=\"supfact\">oldci</span>.desc, f) < Number) {\n        fprintf(stderr, String, f->filename);\n        exit(Number);\n      }\n      if (<span class=\"supfact\">oldci2</span>.url &&\n          (int)read_string(&<span class=\"supfact\">oldci2</span>.url, f) < Number) {\n        fprintf(stderr, String, f->filename);\n        exit(Number);\n      }\n      if (<span class=\"supfact\">oldci2</span>.email &&\n          (int)read_string(&<span class=\"supfact\">oldci2</span>.email, f) < Number) {\n        fprintf(stderr, String, f->filename);\n        exit(Number);\n      }\n      if (<span class=\"supfact\">oldci2</span>.mlock_key &&\n          (int)read_string(&<span class=\"supfact\">oldci2</span>.mlock_key, f) < Number) {\n        fprintf(stderr, String, f->filename);\n        exit(Number);\n      }\n      if (<span class=\"supfact\">oldci2</span>.topic &&\n          (int)read_string(&<span class=\"supfact\">oldci2</span>.topic, f) < Number) {\n        fprintf(stderr, String, f->filename);\n        exit(Number);\n      }\n      if (<span class=\"supfact\">oldci2</span>.welcome &&\n          (int)read_string(&<span class=\"supfact\">oldci2</span>.welcome, f) < Number) {\n        fprintf(stderr, String, f->filename);\n        exit(Number);\n      }\n      if (<span class=\"supfact\">oldci2</span>.hold &&\n          (int)read_string(&<span class=\"supfact\">oldci2</span>.hold, f) < Number) {\n        fprintf(stderr, String, f->filename);\n        exit(Number);\n      }\n      if (<span class=\"supfact\">oldci2</span>.mark &&\n          (int)read_string(&<span class=\"supfact\">oldci2</span>.mark, f) < Number) {\n        fprintf(stderr, String, f->filename);\n        exit(Number);\n      }\n      if (<span class=\"supfact\">oldci2</span>.freeze &&\n          (int)read_string(&<span class=\"supfact\">oldci2</span>.freeze, f) < Number) {\n        fprintf(stderr, String, f->filename);\n        exit(Number);\n      }\n      if (<span class=\"supfact\">oldci2</span>.forbid &&\n          (int)read_string(&<span class=\"supfact\">oldci2</span>.forbid, f) < Number) {\n        fprintf(stderr, String, f->filename);\n        exit(Number);\n      }\n      if (type == Number) {\n        if (<span class=\"supfact\">oldci_auspice</span>.successor &&\n            (int)read_string(&<span class=\"supfact\">oldci_auspice</span>, f) < Number) {\n          fprintf(stderr, String, f->filename);\n          exit(Number);\n        }\n        if (<span class=\"supfact\">oldci_auspice</span>.mlock_link &&\n            (int)read_string(&<span class=\"supfact\">oldci_auspice</span>.mlock_link, f) <\n                Number) {\n          fprintf(stderr, String, f->filename);\n          exit(Number);\n        }\n        if (<span class=\"supfact\">oldci_auspice</span>.mlock_flood &&\n            (int)read_string(&<span class=\"supfact\">oldci_auspice</span>.mlock_flood, f) <\n                Number) {\n          fprintf(stderr, String, f->filename);\n          exit(Number);\n        }\n        if (<span class=\"supfact\">oldci_auspice</span>.bot &&\n            (int)read_string(&<span class=\"supfact\">oldci_auspice</span>.bot, f) < Number) {\n          fprintf(stderr, String, f->filename);\n          exit(Number);\n        }\n        if (ver > Number && <span class=\"supfact\">oldci_auspice8</span>.markreason &&\n            (int)read_string(&<span class=\"supfact\">oldci_auspice8</span>.markreason, f) <\n                Number) {\n          fprintf(stderr, String, f->filename);\n          exit(Number);\n        }\n        if (ver > Number && <span class=\"supfact\">oldci_auspice8</span>.freezereason &&\n            (int)read_string(&<span class=\"supfact\">oldci_auspice8</span>.freezereason, f) <\n                Number) {\n          fprintf(stderr, String, f->filename);\n          exit(Number);\n        }\n        if (ver > Number && <span class=\"supfact\">oldci_auspice8</span>.holdreason &&\n            (int)read_string(&<span class=\"supfact\">oldci_auspice8</span>.holdreason, f) <\n                Number) {\n          fprintf(stderr, String, f->filename);\n          exit(Number);\n        }\n        if (ver > Number && <span class=\"supfact\">oldci_auspice8</span>.lastgetpass &&\n            (int)read_string(&<span class=\"supfact\">oldci_auspice8</span>.lastgetpass, f) <\n                Number) {\n          fprintf(stderr, String, f->filename);\n          exit(Number);\n        }\n      }\n      ci = (ChannelInfo *)makechan(<span class=\"supfact\">oldci</span>.name);\n      if (<span class=\"supfact\">oldci</span>.founder[Number]) {\n        ni = (NickInfo *)get_nickinfo(<span class=\"supfact\">oldci</span>.founder);\n        if (ni) {\n          if (ni->nickgroup)\n            ci->founder = ni->nickgroup;\n          else\n            fprintf(stderr, String, <span class=\"supfact\">oldci</span>.founder,\n                    <span class=\"supfact\">oldci</span>.name);\n        } else {\n          fprintf(stderr, String, <span class=\"supfact\">oldci</span>.founder,\n                  <span class=\"supfact\">oldci</span>.name);\n        }\n      }\n      if (type == Number && <span class=\"supfact\">oldci_auspice</span>.successor) {\n        ni = (NickInfo *)get_nickinfo(<span class=\"supfact\">oldci_auspice</span>.successor);\n        if (ni) {\n          if (ni->nickgroup) {\n            if (ni->nickgroup == ci->founder)\n              fprintf(stderr, String, <span class=\"supfact\">oldci_auspice</span>.successor,\n                      <span class=\"supfact\">oldci</span>.name);\n            else\n              ci->successor = ni->nickgroup;\n          } else {\n            fprintf(stderr, String, <span class=\"supfact\">oldci_auspice</span>.successor,\n                    <span class=\"supfact\">oldci</span>.name);\n          }\n        } else {\n          fprintf(stderr, String, <span class=\"supfact\">oldci_auspice</span>.successor,\n                  <span class=\"supfact\">oldci</span>.name);\n        }\n      }\n      init_password(&ci->founderpass);\n      strscpy(&ci->founderpass, <span class=\"supfact\">oldci</span>.pass, Number L);\n      ci->desc = <span class=\"supfact\">oldci</span>.desc;\n      ci->url = <span class=\"supfact\">oldci2</span>.url;\n      ci->email = <span class=\"supfact\">oldci2</span>.email;\n      ci->time_registered = <span class=\"supfact\">oldci</span>.reg;\n      ci->last_used = <span class=\"supfact\">oldci</span>.used;\n      ci->access_count = <span class=\"supfact\">oldci</span>.naccess;\n      ci->akick_count = <span class=\"supfact\">oldci</span>.nakick;\n      ci->mlock.limit = <span class=\"supfact\">oldci2</span>.mlock_limit;\n      ci->mlock.key = <span class=\"supfact\">oldci2</span>.mlock_key;\n      if (type == Number) {\n        ci->mlock.link = <span class=\"supfact\">oldci_auspice</span>.mlock_link;\n        ci->mlock.flood = <span class=\"supfact\">oldci_auspice</span>.mlock_flood;\n      }\n      ci->last_topic = <span class=\"supfact\">oldci2</span>.topic;\n      strscpy(ci->last_topic_setter, <span class=\"supfact\">oldci2</span>.topic_setter,\n              Number L);\n      ci->last_topic_time = <span class=\"supfact\">oldci2</span>.topic_time;\n      if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number)\n        ci->flags |= Number;\n      if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number)\n        ci->flags |= Number;\n      if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number) {\n        if (type == Number) {\n          v5 = ci->flags;\n          BYTE1(v5) |= Number;\n          v6 = v5;\n        } else {\n          v6 = ci->flags | Number;\n        }\n        ci->flags = v6;\n      }\n      if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number)\n        ci->flags |= Number;\n      if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number)\n        ci->flags |= Number;\n      if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number)\n        ci->flags |= Number;\n      if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number)\n        ci->flags |= Number;\n      if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number) {\n        v7 = ci->flags;\n        LOBYTE(v7) = v7 | Number;\n        ci->flags = v7;\n      }\n      if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number) {\n        v8 = (const char *)sstrdup(String);\n        ci->founderpass.cipher = v8;\n      }\n      if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number) {\n        v9 = ci->flags;\n        BYTE1(v9) |= Number;\n        ci->flags = v9;\n      }\n      ci->flags |= Number;\n      if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number) {\n        ci->levels[Number] = Number;\n      } else if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number) {\n        ci->levels[Number] = Number;\n      } else if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number) {\n        ci->levels[Number] = Number;\n      } else if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number) {\n        ci->levels[Number] = Number;\n      } else if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number) {\n        ci->levels[Number] = Number;\n      } else if ((<span class=\"supfact\">oldci2</span>.flags & Number) != Number) {\n        ci->levels[Number] = Number;\n      } else {\n        ci->levels[Number] = Number;\n      }\n      if ((<span class=\"supfact\">oldci2</span>.flags & Number) == Number)\n        ci->flags |= Number;\n      if (!type && (<span class=\"supfact\">oldci2</span>.flags & Number) != Number) {\n        v10 = ci->flags;\n        BYTE1(v10) |= Number;\n        ci->flags = v10;\n      }\n      if (type != Number && (<span class=\"supfact\">oldci2</span>.flags & Number) != Number) {\n        ci->flags |= Number;\n        strscpy(ci->suspend_who, String, Number L);\n        if (type == Number)\n          ci->suspend_reason = String;\n        else\n          ci->suspend_reason = String;\n        ci->suspend_time = time(Number L);\n        ci->suspend_expires = Number L;\n      }\n      ci->mlock.on = (char *)scalloc(Number L, Number L);\n      ci->mlock.off = (char *)scalloc(Number L, Number L);\n      if (type == Number) {\n        strscpy(ci->mlock.on, mlock_on_auspice, Number L);\n        strscpy(ci->mlock.off, mlock_off_auspice, Number L);\n      } else {\n        on = ci->mlock.on;\n        off = ci->mlock.off;\n        if (type == Number)\n          cmodes = bolivia_cmodes;\n        else\n          cmodes = sirv_cmodes;\n        for (j = Number L; cmodes[j].flag; ++j) {\n          if ((cmodes[j].flag & (unsigned __int16)mlock_on_sirv) != Number) {\n            v11 = on++;\n            *v11 = cmodes[j].mode;\n          }\n          if ((cmodes[j].flag & (unsigned __int16)mlock_off_sirv) != Number) {\n            v12 = off++;\n            *v12 = cmodes[j].mode;\n          }\n        }\n        *on = Number;\n        *off = Number;\n      }\n      v13 = (ChanAccess *)scalloc(Number L, <span class=\"supfact\">oldci</span>.naccess);\n      ci-><span class=\"supfact\">access</span> = v13;\n      if (has_adders)\n        adders = (char **)scalloc(Number L, <span class=\"supfact\">oldci</span>.naccess);\n      for (j = Number L; j < <span class=\"supfact\">oldci</span>.naccess; ++j) {\n        fread(&<span class=\"supfact\">access</span>, Number, Number, f->fp);\n        if (has_adders)\n          fread(&adders[j], Number, Number, f->fp);\n        ci-><span class=\"supfact\">access</span>[j].nickgroup = <span class=\"supfact\">access</span>.in_use;\n        ci-><span class=\"supfact\">access</span>[j].level = <span class=\"supfact\">access</span>.level;\n        if (type == Number && ver > Number) {\n          fread(&tmpint, Number, Number, f->fp);\n          if (tmpint)\n            ci-><span class=\"supfact\">access</span>[j].nickgroup = Number;\n        }\n        v14 = &ci-><span class=\"supfact\">access</span>[j];\n        v14->level = convert_acclev((unsigned int)v14->level);\n      }\n      for (j = Number L; j < <span class=\"supfact\">oldci</span>.naccess; ++j) {\n        if ((int)read_string(&s, f) < Number) {\n          fprintf(stderr, String, f->filename);\n          exit(Number);\n        }\n        if (has_adders && adders[j] &&\n            (int)read_string(&adders[j], f) < Number) {\n          fprintf(stderr, String, f->filename);\n          exit(Number);\n        }\n        if (s) {\n          if (ci-><span class=\"supfact\">access</span>[j].nickgroup) {\n            ni = (NickInfo *)get_nickinfo(s);\n            if (ni)\n              v15 = ni->nickgroup;\n            else\n              v15 = Number;\n            ci-><span class=\"supfact\">access</span>[j].nickgroup = v15;\n          }\n        } else {\n          ci-><span class=\"supfact\">access</span>[j].nickgroup = Number;\n        }\n      }\n      v16 = (AutoKick *)scalloc(Number L, <span class=\"supfact\">oldci</span>.nakick);\n      ci-><span class=\"supfact\">akick</span> = v16;\n      for (j = Number L; j < <span class=\"supfact\">oldci</span>.nakick; ++j) {\n        fread(&<span class=\"supfact\">akick</span>, Number, Number, f->fp);\n        ci-><span class=\"supfact\">akick</span>[j].lastused = <span class=\"supfact\">akick</span>.is_nick;\n        ci-><span class=\"supfact\">akick</span>[j].reason = <span class=\"supfact\">akick</span>.reason;\n        strscpy(ci-><span class=\"supfact\">akick</span>[j].who, String, Number L);\n        v17 = &ci-><span class=\"supfact\">akick</span>[j];\n        v17->set = time(Number L);\n      }\n      for (j = Number L; j < <span class=\"supfact\">oldci</span>.nakick; ++j) {\n        if ((int)read_string(&ci-><span class=\"supfact\">akick</span>[j].mask, f) < Number) {\n          fprintf(stderr, String, f->filename);\n          exit(Number);\n        }\n        if (ci-><span class=\"supfact\">akick</span>[j].lastused) {\n          v18 = strlen(ci-><span class=\"supfact\">akick</span>[j].mask);\n          s_0 = (char *)smalloc(v18 + Number);\n          sprintf(s_0, String, ci-><span class=\"supfact\">akick</span>[j].mask);\n          free(ci-><span class=\"supfact\">akick</span>[j].mask);\n          ci-><span class=\"supfact\">akick</span>[j].mask = s_0;\n        }\n        ci-><span class=\"supfact\">akick</span>[j].lastused = Number L;\n        if (ci-><span class=\"supfact\">akick</span>[j].reason) {\n          if ((int)read_string(&ci-><span class=\"supfact\">akick</span>[j].reason, f) <\n              Number) {\n            fprintf(stderr, String, f->filename);\n            exit(Number);\n          }\n          if (!ci-><span class=\"supfact\">akick</span>[j].mask &&\n              ci-><span class=\"supfact\">akick</span>[j].reason)\n            ci-><span class=\"supfact\">akick</span>[j].reason = Number L;\n        }\n      }\n      if ((int)read_int16(&tmp16, f) < Number) {\n        fprintf(stderr, String, f->filename);\n        exit(Number);\n      }\n      for (j = tmp16; j > Number; --j) {\n        if ((int)read_int16(&tmp16, f) < Number) {\n          fprintf(stderr, String, f->filename);\n          exit(Number);\n        }\n      }\n      if (type == Number) {\n        for (j = Number L; j < <span class=\"supfact\">oldci_auspice</span>.newsline; ++j) {\n          if ((int)read_string(&s, f) < Number) {\n            fprintf(stderr, String, f->filename);\n            exit(Number);\n          }\n        }\n        for (j = Number L; j < <span class=\"supfact\">oldci_auspice</span>.badwline; ++j) {\n          if ((int)read_string(&s, f) < Number) {\n            fprintf(stderr, String, f->filename);\n            exit(Number);\n          }\n        }\n      }\n      if ((ci->flags & Number) == Number && !ci->founder) {\n        fprintf(stderr, String, ci->name);\n        _node = ci;\n        if (ci->next)\n          _node->next->prev = _node->prev;\n        if (_node->prev)\n          _node->prev->next = _node->next;\n        else\n          ci_list = _node->next;\n      }\n    }\n    if (c) {\n      fprintf(stderr, String, f->filename);\n      exit(Number);\n    }\n  }\n  close_db(f);\n}", "var": [{"name": "v20", "type": "char[48]", "pred_name": "v20", "ref_name": "oldci_bolivia", "ref_type": "struct sirv_load_chan::$A6D1031853CF6F38F55D3A90174C211E { __int64[5] resv; }"}, {"name": "v21", "type": "__int64[7]", "pred_name": "v21", "ref_name": "oldci_auspice8", "ref_type": "struct sirv_load_chan::$240BF8F0F13B218CBD2ED01844F1BC26 { char * successor; char * mlock_link; char * mlock_flood; __int64 newsline; char ** news; __int64 badwline; char ** badwords; char * markreason; char * freezereason; char * holdreason; char * lastgetpass; char * bot; __int64 botflag; int ttb; int capsmin; int capspercent; int floodlines; int floodsecs; int repeattimes; }"}, {"name": "v26", "type": "disappear", "pred_name": "", "ref_name": "oldci_auspice", "ref_type": "struct sirv_load_chan::$F46569F2E584AD9C9BFD4A18552BF258 { char * successor; char * mlock_link; char * mlock_flood; char * bot; __int64 botflag; __int64 newsline; char ** news; __int64 badwline; char ** badwords; __int64[3] resv; }"}, {"name": "v34", "type": "__unk__", "pred_name": "v37", "ref_name": "oldci_sirv", "ref_type": "struct sirv_load_chan::$615204297D4D8AE76BBA9252EABD48C6 { __int64 auth; __int64[4] resv; }"}, {"name": "v35", "type": "disappear", "pred_name": "", "ref_name": "oldci2", "ref_type": "struct sirv_load_chan::$2817F0C3AC3CCAC7EE1B10BDE8948E10 { __int64 mlock_limit; char * mlock_key; char * topic; char[32] topic_setter; time_t topic_time; __int64 flags; __int16 * levels; char * url; char * email; char * welcome; char * hold; char * mark; char * freeze; char * forbid; int topic_allow; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "dilawar", "repo_name": "genesis-sim", "path": "dilawar/genesis-sim/31952c9a1d062b103f69dc59862c5b7ac01e7814e930305e319a2e0e923a4929", "path_in_repo": "dilawar/genesis-sim/src/contrib/xplot/psdriver.o", "objdump": "000000000000073e <XPSDrawLines>:\n     73e:\t55                   \tpush   %rbp\n     73f:\t48 89 e5             \tmov    %rsp,%rbp\n     742:\t48 81 ec c0 00 00 00 \tsub    $0xc0,%rsp\n     749:\t48 89 bd 68 ff ff ff \tmov    %rdi,-0x98(%rbp)\n     750:\t48 89 b5 60 ff ff ff \tmov    %rsi,-0xa0(%rbp)\n     757:\t48 89 95 58 ff ff ff \tmov    %rdx,-0xa8(%rbp)\n     75e:\t48 89 8d 50 ff ff ff \tmov    %rcx,-0xb0(%rbp)\n     765:\t44 89 85 4c ff ff ff \tmov    %r8d,-0xb4(%rbp)\n     76c:\t44 89 8d 48 ff ff ff \tmov    %r9d,-0xb8(%rbp)\n     773:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 779 <XPSDrawLines+0x3b>\n     779:\t85 c0                \ttest   %eax,%eax\n     77b:\t0f 85 c6 00 00 00    \tjne    847 <XPSDrawLines+0x109>\n     781:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n     787:\t83 e8 01             \tsub    $0x1,%eax\n     78a:\t48 63 d0             \tmovslq %eax,%rdx\n     78d:\t48 69 d2 ad 8b db 68 \timul   $0x68db8bad,%rdx,%rdx\n     794:\t48 c1 ea 20          \tshr    $0x20,%rdx\n     798:\tc1 fa 0c             \tsar    $0xc,%edx\n     79b:\tc1 f8 1f             \tsar    $0x1f,%eax\n     79e:\t29 c2                \tsub    %eax,%edx\n     7a0:\t89 d0                \tmov    %edx,%eax\n     7a2:\t83 c0 01             \tadd    $0x1,%eax\n     7a5:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n     7a8:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n     7af:\te9 82 00 00 00       \tjmpq   836 <XPSDrawLines+0xf8>\n     7b4:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     7b7:\t69 d0 f0 d8 ff ff    \timul   $0xffffd8f0,%eax,%edx\n     7bd:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n     7c3:\t01 d0                \tadd    %edx,%eax\n     7c5:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n     7c8:\t81 7d f4 10 27 00 00 \tcmpl   $0x2710,-0xc(%rbp)\n     7cf:\t7e 07                \tjle    7d8 <XPSDrawLines+0x9a>\n     7d1:\tc7 45 f4 10 27 00 00 \tmovl   $0x2710,-0xc(%rbp)\n     7d8:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n     7db:\t83 e8 01             \tsub    $0x1,%eax\n     7de:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n     7e1:\t7d 04                \tjge    7e7 <XPSDrawLines+0xa9>\n     7e3:\t83 45 f4 01          \taddl   $0x1,-0xc(%rbp)\n     7e7:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     7ea:\t69 c0 10 27 00 00    \timul   $0x2710,%eax,%eax\n     7f0:\t48 98                \tcltq   \n     7f2:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n     7f9:\t00 \n     7fa:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n     801:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n     805:\t44 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%r8d\n     80c:\t8b 7d f4             \tmov    -0xc(%rbp),%edi\n     80f:\t48 8b 95 58 ff ff ff \tmov    -0xa8(%rbp),%rdx\n     816:\t48 8b b5 60 ff ff ff \tmov    -0xa0(%rbp),%rsi\n     81d:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n     824:\t45 89 c1             \tmov    %r8d,%r9d\n     827:\t41 89 f8             \tmov    %edi,%r8d\n     82a:\t48 89 c7             \tmov    %rax,%rdi\n     82d:\te8 00 00 00 00       \tcallq  832 <XPSDrawLines+0xf4>\n     832:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n     836:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     839:\t3b 45 f0             \tcmp    -0x10(%rbp),%eax\n     83c:\t0f 8c 72 ff ff ff    \tjl     7b4 <XPSDrawLines+0x76>\n     842:\te9 d3 01 00 00       \tjmpq   a1a <XPSDrawLines+0x2dc>\n     847:\t48 8d 95 70 ff ff ff \tlea    -0x90(%rbp),%rdx\n     84e:\t48 8b b5 58 ff ff ff \tmov    -0xa8(%rbp),%rsi\n     855:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n     85c:\t48 89 d1             \tmov    %rdx,%rcx\n     85f:\tba 14 00 00 00       \tmov    $0x14,%edx\n     864:\t48 89 c7             \tmov    %rax,%rdi\n     867:\te8 00 00 00 00       \tcallq  86c <XPSDrawLines+0x12e>\n     86c:\t83 bd 4c ff ff ff 00 \tcmpl   $0x0,-0xb4(%rbp)\n     873:\t0f 8e a0 01 00 00    \tjle    a19 <XPSDrawLines+0x2db>\n     879:\te8 00 00 00 00       \tcallq  87e <XPSDrawLines+0x140>\n     87e:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n     882:\t89 c2                \tmov    %eax,%edx\n     884:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n     88b:\t89 d6                \tmov    %edx,%esi\n     88d:\t48 89 c7             \tmov    %rax,%rdi\n     890:\te8 00 00 00 00       \tcallq  895 <XPSDrawLines+0x157>\n     895:\t8b 45 90             \tmov    -0x70(%rbp),%eax\n     898:\t89 c7                \tmov    %eax,%edi\n     89a:\te8 00 00 00 00       \tcallq  89f <XPSDrawLines+0x161>\n     89f:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n     8a6:\t0f b7 40 02          \tmovzwl 0x2(%rax),%eax\n     8aa:\t0f bf d0             \tmovswl %ax,%edx\n     8ad:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n     8b4:\t0f b7 00             \tmovzwl (%rax),%eax\n     8b7:\t98                   \tcwtl   \n     8b8:\t89 d6                \tmov    %edx,%esi\n     8ba:\t89 c7                \tmov    %eax,%edi\n     8bc:\te8 00 00 00 00       \tcallq  8c1 <XPSDrawLines+0x183>\n     8c1:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n     8c8:\tc7 45 fc 01 00 00 00 \tmovl   $0x1,-0x4(%rbp)\n     8cf:\te9 2f 01 00 00       \tjmpq   a03 <XPSDrawLines+0x2c5>\n     8d4:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     8d7:\t48 98                \tcltq   \n     8d9:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n     8e0:\t00 \n     8e1:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n     8e8:\t48 01 d0             \tadd    %rdx,%rax\n     8eb:\t0f b7 10             \tmovzwl (%rax),%edx\n     8ee:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     8f1:\t48 98                \tcltq   \n     8f3:\t48 c1 e0 02          \tshl    $0x2,%rax\n     8f7:\t48 8d 48 fc          \tlea    -0x4(%rax),%rcx\n     8fb:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n     902:\t48 01 c8             \tadd    %rcx,%rax\n     905:\t0f b7 00             \tmovzwl (%rax),%eax\n     908:\t66 39 c2             \tcmp    %ax,%dx\n     90b:\t75 4d                \tjne    95a <XPSDrawLines+0x21c>\n     90d:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     910:\t48 98                \tcltq   \n     912:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n     919:\t00 \n     91a:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n     921:\t48 01 d0             \tadd    %rdx,%rax\n     924:\t0f b7 50 02          \tmovzwl 0x2(%rax),%edx\n     928:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     92b:\t48 98                \tcltq   \n     92d:\t48 c1 e0 02          \tshl    $0x2,%rax\n     931:\t48 8d 48 fc          \tlea    -0x4(%rax),%rcx\n     935:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n     93c:\t48 01 c8             \tadd    %rcx,%rax\n     93f:\t0f b7 40 02          \tmovzwl 0x2(%rax),%eax\n     943:\t66 39 c2             \tcmp    %ax,%dx\n     946:\t75 12                \tjne    95a <XPSDrawLines+0x21c>\n     948:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n     94e:\t83 e8 01             \tsub    $0x1,%eax\n     951:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n     954:\t0f 8c a4 00 00 00    \tjl     9fe <XPSDrawLines+0x2c0>\n     95a:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     95d:\t48 98                \tcltq   \n     95f:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n     966:\t00 \n     967:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n     96e:\t48 01 d0             \tadd    %rdx,%rax\n     971:\t0f b7 40 02          \tmovzwl 0x2(%rax),%eax\n     975:\t0f bf d0             \tmovswl %ax,%edx\n     978:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     97b:\t48 98                \tcltq   \n     97d:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n     984:\t00 \n     985:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n     98c:\t48 01 c8             \tadd    %rcx,%rax\n     98f:\t0f b7 00             \tmovzwl (%rax),%eax\n     992:\t98                   \tcwtl   \n     993:\t89 d6                \tmov    %edx,%esi\n     995:\t89 c7                \tmov    %eax,%edi\n     997:\te8 00 00 00 00       \tcallq  99c <XPSDrawLines+0x25e>\n     99c:\t81 7d f8 c8 00 00 00 \tcmpl   $0xc8,-0x8(%rbp)\n     9a3:\t7e 53                \tjle    9f8 <XPSDrawLines+0x2ba>\n     9a5:\te8 00 00 00 00       \tcallq  9aa <XPSDrawLines+0x26c>\n     9aa:\te8 00 00 00 00       \tcallq  9af <XPSDrawLines+0x271>\n     9af:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     9b2:\t48 98                \tcltq   \n     9b4:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n     9bb:\t00 \n     9bc:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n     9c3:\t48 01 d0             \tadd    %rdx,%rax\n     9c6:\t0f b7 40 02          \tmovzwl 0x2(%rax),%eax\n     9ca:\t0f bf d0             \tmovswl %ax,%edx\n     9cd:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     9d0:\t48 98                \tcltq   \n     9d2:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n     9d9:\t00 \n     9da:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n     9e1:\t48 01 c8             \tadd    %rcx,%rax\n     9e4:\t0f b7 00             \tmovzwl (%rax),%eax\n     9e7:\t98                   \tcwtl   \n     9e8:\t89 d6                \tmov    %edx,%esi\n     9ea:\t89 c7                \tmov    %eax,%edi\n     9ec:\te8 00 00 00 00       \tcallq  9f1 <XPSDrawLines+0x2b3>\n     9f1:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n     9f8:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n     9fc:\teb 01                \tjmp    9ff <XPSDrawLines+0x2c1>\n     9fe:\t90                   \tnop\n     9ff:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n     a03:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     a06:\t3b 85 4c ff ff ff    \tcmp    -0xb4(%rbp),%eax\n     a0c:\t0f 8c c2 fe ff ff    \tjl     8d4 <XPSDrawLines+0x196>\n     a12:\te8 00 00 00 00       \tcallq  a17 <XPSDrawLines+0x2d9>\n     a17:\teb 01                \tjmp    a1a <XPSDrawLines+0x2dc>\n     a19:\t90                   \tnop\n     a1a:\tc9                   \tleaveq \n     a1b:\tc3                   \tretq   ", "code_s": "int __fastcall XPSDrawLines(Display *a1, Drawable a2, _XGC *a3, __int16 *a4,\n                            int a5, int a6) {\n  int result;\n  XGCValues v11;\n  int v12;\n  int v13;\n  int v14;\n  int i;\n  if (output_flag) {\n    result = XGetGCValues(a1, a3, Number, &v11);\n    if (a5 > Number) {\n      PSNewpath();\n      PSSetPixel(a1, v11.foreground);\n      PSSetLineWidth(v11.line_width);\n      PSMoveto(*a4, a4[Number]);\n      v14 = Number;\n      for (i = Number; i < a5; ++i) {\n        if (a4[Number * i] != a4[Number * i - Number] ||\n            a4[Number * i + Number] != a4[Number * i - Number] ||\n            i >= a5 - Number) {\n          PSLineto(a4[Number * i], a4[Number * i + Number]);\n          if (v14 > Number) {\n            PSStroke();\n            PSNewpath();\n            PSMoveto(a4[Number * i], a4[Number * i + Number]);\n            v14 = Number;\n          }\n          ++v14;\n        }\n      }\n      result = PSStroke();\n    }\n  } else {\n    v12 = (a5 - Number) / Number + Number;\n    for (i = Number;; ++i) {\n      result = i;\n      if (i >= v12)\n        break;\n      v13 = Number * i + a5;\n      if (v13 > Number)\n        v13 = Number;\n      if (i < v12 - Number)\n        ++v13;\n      XDrawLines(a1, a2, a3, (XPoint *)&a4[Number * i], v13, a6);\n    }\n  }\n  return result;\n}", "code_t": "void __cdecl XPSDrawLines(Display *display, Drawable drawable, GC context,\n                          Coord *coord, int ncoords, int mode) {\n  XGCValues <span class=\"supfact\">values</span>;\n  int nchunks;\n  int chunksize;\n  int pcount;\n  int i;\n  if (output_flag) {\n    XGetGCValues(display, context, Number, &<span class=\"supfact\">values</span>);\n    if (ncoords > Number) {\n      PSNewpath();\n      PSSetPixel(display, <span class=\"supfact\">values</span>.foreground);\n      PSSetLineWidth(<span class=\"supfact\">values</span>.line_width);\n      PSMoveto(coord->x, coord->y);\n      pcount = Number;\n      for (i = Number; i < ncoords; ++i) {\n        if (coord[i].x != coord[i - Number].x ||\n            coord[i].y != coord[i - Number].y || i >= ncoords - Number) {\n          PSLineto(coord[i].x, coord[i].y);\n          if (pcount > Number) {\n            PSStroke();\n            PSNewpath();\n            PSMoveto(coord[i].x, coord[i].y);\n            pcount = Number;\n          }\n          ++pcount;\n        }\n      }\n      PSStroke();\n    }\n  } else {\n    nchunks = (ncoords - Number) / Number + Number;\n    for (i = Number; i < nchunks; ++i) {\n      chunksize = Number * i + ncoords;\n      if (chunksize > Number)\n        chunksize = Number;\n      if (i < nchunks - Number)\n        ++chunksize;\n      XDrawLines(display, drawable, context, (XPoint *)&coord[Number * i],\n                 chunksize, mode);\n    }\n  }\n}", "var": [{"name": "v11", "type": "struct XGCValues { int function; PADDING (4); unsigned __int64 plane_mask; unsigned __int64 foreground; unsigned __int64 background; int line_width; int line_style; int cap_style; int join_style; int fill_style; int fill_rule; int arc_mode; PADDING (4); Pixmap tile; Pixmap stipple; int ts_x_origin; int ts_y_origin; Font font; int subwindow_mode; int graphics_exposures; int clip_x_origin; int clip_y_origin; Pixmap clip_mask; int dash_offset; char dashes; PADDING (3); }", "pred_name": "xgcv", "ref_name": "values", "ref_type": "struct XGCValues { int function; PADDING (4); unsigned __int64 plane_mask; unsigned __int64 foreground; unsigned __int64 background; int line_width; int line_style; int cap_style; int join_style; int fill_style; int fill_rule; int arc_mode; PADDING (4); Pixmap tile; Pixmap stipple; int ts_x_origin; int ts_y_origin; Font font; int subwindow_mode; int graphics_exposures; int clip_x_origin; int clip_y_origin; Pixmap clip_mask; int dash_offset; char dashes; PADDING (3); }"}], "body_in_train": false}, {"repo_owner": "daveti", "repo_name": "GoodUSB", "path": "daveti/GoodUSB/cc106b8f45c10383e83fa68796c0d482ee45dec45138d80d9ed94b9e9b660d93", "path_in_repo": "daveti/GoodUSB/kernel/linux-3.13.0/tools/perf/util/session.o", "objdump": "0000000000003568 <perf_session__process_event>:\n    3568:\t55                   \tpush   %rbp\n    3569:\t48 89 e5             \tmov    %rsp,%rbp\n    356c:\t48 81 ec f0 00 00 00 \tsub    $0xf0,%rsp\n    3573:\t48 89 bd 28 ff ff ff \tmov    %rdi,-0xd8(%rbp)\n    357a:\t48 89 b5 20 ff ff ff \tmov    %rsi,-0xe0(%rbp)\n    3581:\t48 89 95 18 ff ff ff \tmov    %rdx,-0xe8(%rbp)\n    3588:\t48 89 8d 10 ff ff ff \tmov    %rcx,-0xf0(%rbp)\n    358f:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    3596:\t00 00 \n    3598:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    359c:\t31 c0                \txor    %eax,%eax\n    359e:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    35a5:\t0f b6 40 04          \tmovzbl 0x4(%rax),%eax\n    35a9:\t84 c0                \ttest   %al,%al\n    35ab:\t74 2a                \tje     35d7 <perf_session__process_event+0x6f>\n    35ad:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    35b4:\t48 8b 80 a0 01 00 00 \tmov    0x1a0(%rax),%rax\n    35bb:\t48 89 c7             \tmov    %rax,%rdi\n    35be:\te8 00 00 00 00       \tcallq  35c3 <perf_session__process_event+0x5b>\n    35c3:\t0f b6 d0             \tmovzbl %al,%edx\n    35c6:\t48 8b 85 20 ff ff ff \tmov    -0xe0(%rbp),%rax\n    35cd:\t89 d6                \tmov    %edx,%esi\n    35cf:\t48 89 c7             \tmov    %rax,%rdi\n    35d2:\te8 2c ff ff ff       \tcallq  3503 <event_swap>\n    35d7:\t48 8b 85 20 ff ff ff \tmov    -0xe0(%rbp),%rax\n    35de:\t8b 00                \tmov    (%rax),%eax\n    35e0:\t83 f8 44             \tcmp    $0x44,%eax\n    35e3:\t76 0a                \tjbe    35ef <perf_session__process_event+0x87>\n    35e5:\tb8 ea ff ff ff       \tmov    $0xffffffea,%eax\n    35ea:\te9 0e 01 00 00       \tjmpq   36fd <perf_session__process_event+0x195>\n    35ef:\t48 8b 85 20 ff ff ff \tmov    -0xe0(%rbp),%rax\n    35f6:\t8b 00                \tmov    (%rax),%eax\n    35f8:\t48 8b 95 28 ff ff ff \tmov    -0xd8(%rbp),%rdx\n    35ff:\t48 81 c2 b0 01 00 00 \tadd    $0x1b0,%rdx\n    3606:\t89 c6                \tmov    %eax,%esi\n    3608:\t48 89 d7             \tmov    %rdx,%rdi\n    360b:\te8 00 00 00 00       \tcallq  3610 <perf_session__process_event+0xa8>\n    3610:\t48 8b 85 20 ff ff ff \tmov    -0xe0(%rbp),%rax\n    3617:\t8b 00                \tmov    (%rax),%eax\n    3619:\t83 f8 3f             \tcmp    $0x3f,%eax\n    361c:\t76 29                \tjbe    3647 <perf_session__process_event+0xdf>\n    361e:\t48 8b 8d 10 ff ff ff \tmov    -0xf0(%rbp),%rcx\n    3625:\t48 8b 95 18 ff ff ff \tmov    -0xe8(%rbp),%rdx\n    362c:\t48 8b b5 20 ff ff ff \tmov    -0xe0(%rbp),%rsi\n    3633:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    363a:\t48 89 c7             \tmov    %rax,%rdi\n    363d:\te8 66 fd ff ff       \tcallq  33a8 <perf_session__process_user_event>\n    3642:\te9 b6 00 00 00       \tjmpq   36fd <perf_session__process_event+0x195>\n    3647:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    364e:\t48 8b 80 a0 01 00 00 \tmov    0x1a0(%rax),%rax\n    3655:\t48 8d 95 40 ff ff ff \tlea    -0xc0(%rbp),%rdx\n    365c:\t48 8b 8d 20 ff ff ff \tmov    -0xe0(%rbp),%rcx\n    3663:\t48 89 ce             \tmov    %rcx,%rsi\n    3666:\t48 89 c7             \tmov    %rax,%rdi\n    3669:\te8 00 00 00 00       \tcallq  366e <perf_session__process_event+0x106>\n    366e:\t89 85 3c ff ff ff    \tmov    %eax,-0xc4(%rbp)\n    3674:\t83 bd 3c ff ff ff 00 \tcmpl   $0x0,-0xc4(%rbp)\n    367b:\t74 08                \tje     3685 <perf_session__process_event+0x11d>\n    367d:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n    3683:\teb 78                \tjmp    36fd <perf_session__process_event+0x195>\n    3685:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n    368c:\t0f b6 40 70          \tmovzbl 0x70(%rax),%eax\n    3690:\t84 c0                \ttest   %al,%al\n    3692:\t74 3b                \tje     36cf <perf_session__process_event+0x167>\n    3694:\t48 8b 8d 10 ff ff ff \tmov    -0xf0(%rbp),%rcx\n    369b:\t48 8d 95 40 ff ff ff \tlea    -0xc0(%rbp),%rdx\n    36a2:\t48 8b b5 20 ff ff ff \tmov    -0xe0(%rbp),%rsi\n    36a9:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    36b0:\t48 89 c7             \tmov    %rax,%rdi\n    36b3:\te8 00 00 00 00       \tcallq  36b8 <perf_session__process_event+0x150>\n    36b8:\t89 85 3c ff ff ff    \tmov    %eax,-0xc4(%rbp)\n    36be:\t83 bd 3c ff ff ff c2 \tcmpl   $0xffffffc2,-0xc4(%rbp)\n    36c5:\t74 08                \tje     36cf <perf_session__process_event+0x167>\n    36c7:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n    36cd:\teb 2e                \tjmp    36fd <perf_session__process_event+0x195>\n    36cf:\t48 8b bd 10 ff ff ff \tmov    -0xf0(%rbp),%rdi\n    36d6:\t48 8b 8d 18 ff ff ff \tmov    -0xe8(%rbp),%rcx\n    36dd:\t48 8d 95 40 ff ff ff \tlea    -0xc0(%rbp),%rdx\n    36e4:\t48 8b b5 20 ff ff ff \tmov    -0xe0(%rbp),%rsi\n    36eb:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    36f2:\t49 89 f8             \tmov    %rdi,%r8\n    36f5:\t48 89 c7             \tmov    %rax,%rdi\n    36f8:\te8 b5 f9 ff ff       \tcallq  30b2 <perf_session_deliver_event>\n    36fd:\t48 8b 7d f8          \tmov    -0x8(%rbp),%rdi\n    3701:\t64 48 33 3c 25 28 00 \txor    %fs:0x28,%rdi\n    3708:\t00 00 \n    370a:\t74 05                \tje     3711 <perf_session__process_event+0x1a9>\n    370c:\te8 00 00 00 00       \tcallq  3711 <perf_session__process_event+0x1a9>\n    3711:\tc9                   \tleaveq \n    3712:\tc3                   \tretq   ", "code_s": "__int64 __fastcall perf_session__process_event(__int64 a1, unsigned int *a2,\n                                               __int64 a3, unsigned __int64 a4,\n                                               float a5, double a6) {\n  unsigned __int8 v6;\n  unsigned int v10;\n  unsigned int v11;\n  char v12[Number];\n  unsigned __int64 v13;\n  v13 = __readfsqword(Number);\n  if (*(_BYTE *)(a1 + Number)) {\n    v6 = perf_evlist__sample_id_all(*(_QWORD *)(a1 + Number));\n    event_swap(a2, v6);\n  }\n  if (*a2 > Number)\n    return Number L;\n  events_stats__inc(a1 + Number, *a2);\n  if (*a2 > Number)\n    return perf_session__process_user_event(\n        a1, a2, (__int64(__fastcall **)(_QWORD, _QWORD, _QWORD))a3, a4, a5, a6);\n  v10 = perf_evlist__parse_sample(*(_QWORD *)(a1 + Number), a2, v12);\n  if (v10)\n    return v10;\n  if (!*(_BYTE *)(a3 + Number))\n    return perf_session_deliver_event(a1, a2, (__int64)v12, a3, a4);\n  v11 = perf_session_queue_event(a1, (unsigned __int64)a2, (__int64)v12, a4);\n  if (v11 == Number)\n    return perf_session_deliver_event(a1, a2, (__int64)v12, a3, a4);\n  return v11;\n}", "code_t": "int __cdecl perf_session__process_event(perf_session *session,\n                                        perf_event *event, perf_tool *tool,\n                                        u64 file_offset) {\n  char v4;\n  int ret;\n  int reta;\n  perf_sample <span class=\"supfact\">sample</span>;\n  unsigned __int64 v11;\n  v11 = __readfsqword(Number);\n  if (session->header.needs_swap) {\n    v4 = perf_evlist__sample_id_all(session->evlist);\n    event_swap(event, v4);\n  }\n  if (event->header.type > Number)\n    return Number;\n  events_stats__inc(&session->stats, event->header.type);\n  if (event->header.type > Number)\n    return perf_session__process_user_event(session, event, tool, file_offset);\n  ret = perf_evlist__parse_sample(session->evlist, event,\n                                  &<span class=\"supfact\">sample</span>);\n  if (ret)\n    return ret;\n  if (!tool->ordered_samples)\n    return perf_session_deliver_event(session, event, &<span class=\"supfact\">sample</span>,\n                                      tool, file_offset);\n  reta = perf_session_queue_event(session, event, &<span class=\"supfact\">sample</span>,\n                                  file_offset);\n  if (reta == Number)\n    return perf_session_deliver_event(session, event, &<span class=\"supfact\">sample</span>,\n                                      tool, file_offset);\n  return reta;\n}", "var": [{"name": "v12", "type": "struct perf_sample { u64 ip; u32 pid; u32 tid; u64 time; u64 addr; u64 id; u64 stream_id; u64 period; u64 weight; u64 transaction; u32 cpu; u32 raw_size; u64 data_src; void * raw_data; ip_callchain * callchain; branch_stack * branch_stack; regs_dump user_regs; stack_dump user_stack; sample_read read; }", "pred_name": "sample", "ref_name": "sample", "ref_type": "struct perf_sample { u64 ip; u32 pid; u32 tid; u64 time; u64 addr; u64 id; u64 stream_id; u64 period; u64 weight; u64 transaction; u32 cpu; u32 raw_size; u64 data_src; void * raw_data; ip_callchain * callchain; branch_stack * branch_stack; regs_dump user_regs; stack_dump user_stack; sample_read read; }"}], "body_in_train": false}, {"repo_owner": "afni", "repo_name": "afni", "path": "afni/afni/12f9e4a9d90aa4f3633a7351f4acfc4d9829f9345666ef901b82ad04dd05acd1", "path_in_repo": "afni/afni/src/gifti/gifti_tool", "objdump": "0000000000428788 <nifti_dmat44_to_orientation>:\n  428788:\t55                   \tpush   %rbp\n  428789:\t48 89 e5             \tmov    %rsp,%rbp\n  42878c:\t48 81 ec a0 01 00 00 \tsub    $0x1a0,%rsp\n  428793:\t48 89 bd 78 fe ff ff \tmov    %rdi,-0x188(%rbp)\n  42879a:\t48 89 b5 70 fe ff ff \tmov    %rsi,-0x190(%rbp)\n  4287a1:\t48 89 95 68 fe ff ff \tmov    %rdx,-0x198(%rbp)\n  4287a8:\tc7 45 c4 00 00 00 00 \tmovl   $0x0,-0x3c(%rbp)\n  4287af:\t48 83 bd 78 fe ff ff \tcmpq   $0x0,-0x188(%rbp)\n  4287b6:\t00 \n  4287b7:\t0f 84 8b 0b 00 00    \tje     429348 <nifti_dmat44_to_orientation+0xbc0>\n  4287bd:\t48 83 bd 70 fe ff ff \tcmpq   $0x0,-0x190(%rbp)\n  4287c4:\t00 \n  4287c5:\t0f 84 7d 0b 00 00    \tje     429348 <nifti_dmat44_to_orientation+0xbc0>\n  4287cb:\t48 83 bd 68 fe ff ff \tcmpq   $0x0,-0x198(%rbp)\n  4287d2:\t00 \n  4287d3:\t0f 84 6f 0b 00 00    \tje     429348 <nifti_dmat44_to_orientation+0xbc0>\n  4287d9:\t48 8b 85 68 fe ff ff \tmov    -0x198(%rbp),%rax\n  4287e0:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n  4287e6:\t48 8b 85 68 fe ff ff \tmov    -0x198(%rbp),%rax\n  4287ed:\t8b 10                \tmov    (%rax),%edx\n  4287ef:\t48 8b 85 70 fe ff ff \tmov    -0x190(%rbp),%rax\n  4287f6:\t89 10                \tmov    %edx,(%rax)\n  4287f8:\t48 8b 85 70 fe ff ff \tmov    -0x190(%rbp),%rax\n  4287ff:\t8b 10                \tmov    (%rax),%edx\n  428801:\t48 8b 85 78 fe ff ff \tmov    -0x188(%rbp),%rax\n  428808:\t89 10                \tmov    %edx,(%rax)\n  42880a:\tf2 0f 10 45 10       \tmovsd  0x10(%rbp),%xmm0\n  42880f:\tf2 0f 11 45 90       \tmovsd  %xmm0,-0x70(%rbp)\n  428814:\tf2 0f 10 45 18       \tmovsd  0x18(%rbp),%xmm0\n  428819:\tf2 0f 11 45 f8       \tmovsd  %xmm0,-0x8(%rbp)\n  42881e:\tf2 0f 10 45 20       \tmovsd  0x20(%rbp),%xmm0\n  428823:\tf2 0f 11 45 f0       \tmovsd  %xmm0,-0x10(%rbp)\n  428828:\tf2 0f 10 45 30       \tmovsd  0x30(%rbp),%xmm0\n  42882d:\tf2 0f 11 45 88       \tmovsd  %xmm0,-0x78(%rbp)\n  428832:\tf2 0f 10 45 38       \tmovsd  0x38(%rbp),%xmm0\n  428837:\tf2 0f 11 45 e8       \tmovsd  %xmm0,-0x18(%rbp)\n  42883c:\tf2 0f 10 45 40       \tmovsd  0x40(%rbp),%xmm0\n  428841:\tf2 0f 11 45 e0       \tmovsd  %xmm0,-0x20(%rbp)\n  428846:\tf2 0f 10 45 50       \tmovsd  0x50(%rbp),%xmm0\n  42884b:\tf2 0f 11 45 80       \tmovsd  %xmm0,-0x80(%rbp)\n  428850:\tf2 0f 10 45 58       \tmovsd  0x58(%rbp),%xmm0\n  428855:\tf2 0f 11 45 d8       \tmovsd  %xmm0,-0x28(%rbp)\n  42885a:\tf2 0f 10 45 60       \tmovsd  0x60(%rbp),%xmm0\n  42885f:\tf2 0f 11 45 d0       \tmovsd  %xmm0,-0x30(%rbp)\n  428864:\tf2 0f 10 45 90       \tmovsd  -0x70(%rbp),%xmm0\n  428869:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  42886d:\tf2 0f 59 c8          \tmulsd  %xmm0,%xmm1\n  428871:\tf2 0f 10 45 88       \tmovsd  -0x78(%rbp),%xmm0\n  428876:\tf2 0f 59 c0          \tmulsd  %xmm0,%xmm0\n  42887a:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n  42887e:\tf2 0f 10 45 80       \tmovsd  -0x80(%rbp),%xmm0\n  428883:\tf2 0f 59 c0          \tmulsd  %xmm0,%xmm0\n  428887:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n  42888b:\te8 a0 9c fd ff       \tcallq  402530 <sqrt@plt>\n  428890:\t66 48 0f 7e c0       \tmovq   %xmm0,%rax\n  428895:\t48 89 85 78 ff ff ff \tmov    %rax,-0x88(%rbp)\n  42889c:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  4288a0:\t66 0f 2e 85 78 ff ff \tucomisd -0x88(%rbp),%xmm0\n  4288a7:\tff \n  4288a8:\t7a 12                \tjp     4288bc <nifti_dmat44_to_orientation+0x134>\n  4288aa:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  4288ae:\t66 0f 2e 85 78 ff ff \tucomisd -0x88(%rbp),%xmm0\n  4288b5:\tff \n  4288b6:\t0f 84 8f 0a 00 00    \tje     42934b <nifti_dmat44_to_orientation+0xbc3>\n  4288bc:\tf2 0f 10 45 90       \tmovsd  -0x70(%rbp),%xmm0\n  4288c1:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  4288c8:\tff \n  4288c9:\tf2 0f 11 45 90       \tmovsd  %xmm0,-0x70(%rbp)\n  4288ce:\tf2 0f 10 45 88       \tmovsd  -0x78(%rbp),%xmm0\n  4288d3:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  4288da:\tff \n  4288db:\tf2 0f 11 45 88       \tmovsd  %xmm0,-0x78(%rbp)\n  4288e0:\tf2 0f 10 45 80       \tmovsd  -0x80(%rbp),%xmm0\n  4288e5:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  4288ec:\tff \n  4288ed:\tf2 0f 11 45 80       \tmovsd  %xmm0,-0x80(%rbp)\n  4288f2:\tf2 0f 10 45 f8       \tmovsd  -0x8(%rbp),%xmm0\n  4288f7:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  4288fb:\tf2 0f 59 c8          \tmulsd  %xmm0,%xmm1\n  4288ff:\tf2 0f 10 45 e8       \tmovsd  -0x18(%rbp),%xmm0\n  428904:\tf2 0f 59 c0          \tmulsd  %xmm0,%xmm0\n  428908:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n  42890c:\tf2 0f 10 45 d8       \tmovsd  -0x28(%rbp),%xmm0\n  428911:\tf2 0f 59 c0          \tmulsd  %xmm0,%xmm0\n  428915:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n  428919:\te8 12 9c fd ff       \tcallq  402530 <sqrt@plt>\n  42891e:\t66 48 0f 7e c0       \tmovq   %xmm0,%rax\n  428923:\t48 89 85 78 ff ff ff \tmov    %rax,-0x88(%rbp)\n  42892a:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  42892e:\t66 0f 2e 85 78 ff ff \tucomisd -0x88(%rbp),%xmm0\n  428935:\tff \n  428936:\t7a 12                \tjp     42894a <nifti_dmat44_to_orientation+0x1c2>\n  428938:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  42893c:\t66 0f 2e 85 78 ff ff \tucomisd -0x88(%rbp),%xmm0\n  428943:\tff \n  428944:\t0f 84 04 0a 00 00    \tje     42934e <nifti_dmat44_to_orientation+0xbc6>\n  42894a:\tf2 0f 10 45 f8       \tmovsd  -0x8(%rbp),%xmm0\n  42894f:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  428956:\tff \n  428957:\tf2 0f 11 45 f8       \tmovsd  %xmm0,-0x8(%rbp)\n  42895c:\tf2 0f 10 45 e8       \tmovsd  -0x18(%rbp),%xmm0\n  428961:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  428968:\tff \n  428969:\tf2 0f 11 45 e8       \tmovsd  %xmm0,-0x18(%rbp)\n  42896e:\tf2 0f 10 45 d8       \tmovsd  -0x28(%rbp),%xmm0\n  428973:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  42897a:\tff \n  42897b:\tf2 0f 11 45 d8       \tmovsd  %xmm0,-0x28(%rbp)\n  428980:\tf2 0f 10 45 90       \tmovsd  -0x70(%rbp),%xmm0\n  428985:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  428989:\tf2 0f 59 4d f8       \tmulsd  -0x8(%rbp),%xmm1\n  42898e:\tf2 0f 10 45 88       \tmovsd  -0x78(%rbp),%xmm0\n  428993:\tf2 0f 59 45 e8       \tmulsd  -0x18(%rbp),%xmm0\n  428998:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n  42899c:\tf2 0f 10 45 80       \tmovsd  -0x80(%rbp),%xmm0\n  4289a1:\tf2 0f 59 45 d8       \tmulsd  -0x28(%rbp),%xmm0\n  4289a6:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n  4289aa:\tf2 0f 11 85 78 ff ff \tmovsd  %xmm0,-0x88(%rbp)\n  4289b1:\tff \n  4289b2:\tf2 0f 10 85 78 ff ff \tmovsd  -0x88(%rbp),%xmm0\n  4289b9:\tff \n  4289ba:\tf3 0f 7e 0d 6e f5 02 \tmovq   0x2f56e(%rip),%xmm1        # 457f30 <nifti_type_list+0x5cf0>\n  4289c1:\t00 \n  4289c2:\t66 0f 54 c1          \tandpd  %xmm1,%xmm0\n  4289c6:\t66 0f 2f 05 aa f5 02 \tcomisd 0x2f5aa(%rip),%xmm0        # 457f78 <nifti_type_list+0x5d38>\n  4289cd:\t00 \n  4289ce:\t0f 86 eb 00 00 00    \tjbe    428abf <nifti_dmat44_to_orientation+0x337>\n  4289d4:\tf2 0f 10 85 78 ff ff \tmovsd  -0x88(%rbp),%xmm0\n  4289db:\tff \n  4289dc:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  4289e0:\tf2 0f 59 4d 90       \tmulsd  -0x70(%rbp),%xmm1\n  4289e5:\tf2 0f 10 45 f8       \tmovsd  -0x8(%rbp),%xmm0\n  4289ea:\tf2 0f 5c c1          \tsubsd  %xmm1,%xmm0\n  4289ee:\tf2 0f 11 45 f8       \tmovsd  %xmm0,-0x8(%rbp)\n  4289f3:\tf2 0f 10 85 78 ff ff \tmovsd  -0x88(%rbp),%xmm0\n  4289fa:\tff \n  4289fb:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  4289ff:\tf2 0f 59 4d 88       \tmulsd  -0x78(%rbp),%xmm1\n  428a04:\tf2 0f 10 45 e8       \tmovsd  -0x18(%rbp),%xmm0\n  428a09:\tf2 0f 5c c1          \tsubsd  %xmm1,%xmm0\n  428a0d:\tf2 0f 11 45 e8       \tmovsd  %xmm0,-0x18(%rbp)\n  428a12:\tf2 0f 10 85 78 ff ff \tmovsd  -0x88(%rbp),%xmm0\n  428a19:\tff \n  428a1a:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  428a1e:\tf2 0f 59 4d 80       \tmulsd  -0x80(%rbp),%xmm1\n  428a23:\tf2 0f 10 45 d8       \tmovsd  -0x28(%rbp),%xmm0\n  428a28:\tf2 0f 5c c1          \tsubsd  %xmm1,%xmm0\n  428a2c:\tf2 0f 11 45 d8       \tmovsd  %xmm0,-0x28(%rbp)\n  428a31:\tf2 0f 10 45 f8       \tmovsd  -0x8(%rbp),%xmm0\n  428a36:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  428a3a:\tf2 0f 59 c8          \tmulsd  %xmm0,%xmm1\n  428a3e:\tf2 0f 10 45 e8       \tmovsd  -0x18(%rbp),%xmm0\n  428a43:\tf2 0f 59 c0          \tmulsd  %xmm0,%xmm0\n  428a47:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n  428a4b:\tf2 0f 10 45 d8       \tmovsd  -0x28(%rbp),%xmm0\n  428a50:\tf2 0f 59 c0          \tmulsd  %xmm0,%xmm0\n  428a54:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n  428a58:\te8 d3 9a fd ff       \tcallq  402530 <sqrt@plt>\n  428a5d:\t66 48 0f 7e c0       \tmovq   %xmm0,%rax\n  428a62:\t48 89 85 78 ff ff ff \tmov    %rax,-0x88(%rbp)\n  428a69:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  428a6d:\t66 0f 2e 85 78 ff ff \tucomisd -0x88(%rbp),%xmm0\n  428a74:\tff \n  428a75:\t7a 12                \tjp     428a89 <nifti_dmat44_to_orientation+0x301>\n  428a77:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  428a7b:\t66 0f 2e 85 78 ff ff \tucomisd -0x88(%rbp),%xmm0\n  428a82:\tff \n  428a83:\t0f 84 c8 08 00 00    \tje     429351 <nifti_dmat44_to_orientation+0xbc9>\n  428a89:\tf2 0f 10 45 f8       \tmovsd  -0x8(%rbp),%xmm0\n  428a8e:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  428a95:\tff \n  428a96:\tf2 0f 11 45 f8       \tmovsd  %xmm0,-0x8(%rbp)\n  428a9b:\tf2 0f 10 45 e8       \tmovsd  -0x18(%rbp),%xmm0\n  428aa0:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  428aa7:\tff \n  428aa8:\tf2 0f 11 45 e8       \tmovsd  %xmm0,-0x18(%rbp)\n  428aad:\tf2 0f 10 45 d8       \tmovsd  -0x28(%rbp),%xmm0\n  428ab2:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  428ab9:\tff \n  428aba:\tf2 0f 11 45 d8       \tmovsd  %xmm0,-0x28(%rbp)\n  428abf:\tf2 0f 10 45 f0       \tmovsd  -0x10(%rbp),%xmm0\n  428ac4:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  428ac8:\tf2 0f 59 c8          \tmulsd  %xmm0,%xmm1\n  428acc:\tf2 0f 10 45 e0       \tmovsd  -0x20(%rbp),%xmm0\n  428ad1:\tf2 0f 59 c0          \tmulsd  %xmm0,%xmm0\n  428ad5:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n  428ad9:\tf2 0f 10 45 d0       \tmovsd  -0x30(%rbp),%xmm0\n  428ade:\tf2 0f 59 c0          \tmulsd  %xmm0,%xmm0\n  428ae2:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n  428ae6:\te8 45 9a fd ff       \tcallq  402530 <sqrt@plt>\n  428aeb:\t66 48 0f 7e c0       \tmovq   %xmm0,%rax\n  428af0:\t48 89 85 78 ff ff ff \tmov    %rax,-0x88(%rbp)\n  428af7:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  428afb:\t66 0f 2e 85 78 ff ff \tucomisd -0x88(%rbp),%xmm0\n  428b02:\tff \n  428b03:\t7a 67                \tjp     428b6c <nifti_dmat44_to_orientation+0x3e4>\n  428b05:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  428b09:\t66 0f 2e 85 78 ff ff \tucomisd -0x88(%rbp),%xmm0\n  428b10:\tff \n  428b11:\t75 59                \tjne    428b6c <nifti_dmat44_to_orientation+0x3e4>\n  428b13:\tf2 0f 10 45 88       \tmovsd  -0x78(%rbp),%xmm0\n  428b18:\tf2 0f 59 45 d8       \tmulsd  -0x28(%rbp),%xmm0\n  428b1d:\tf2 0f 10 4d 80       \tmovsd  -0x80(%rbp),%xmm1\n  428b22:\tf2 0f 59 4d e8       \tmulsd  -0x18(%rbp),%xmm1\n  428b27:\tf2 0f 5c c1          \tsubsd  %xmm1,%xmm0\n  428b2b:\tf2 0f 11 45 f0       \tmovsd  %xmm0,-0x10(%rbp)\n  428b30:\tf2 0f 10 45 80       \tmovsd  -0x80(%rbp),%xmm0\n  428b35:\tf2 0f 59 45 f8       \tmulsd  -0x8(%rbp),%xmm0\n  428b3a:\tf2 0f 10 4d d8       \tmovsd  -0x28(%rbp),%xmm1\n  428b3f:\tf2 0f 59 4d 90       \tmulsd  -0x70(%rbp),%xmm1\n  428b44:\tf2 0f 5c c1          \tsubsd  %xmm1,%xmm0\n  428b48:\tf2 0f 11 45 e0       \tmovsd  %xmm0,-0x20(%rbp)\n  428b4d:\tf2 0f 10 45 90       \tmovsd  -0x70(%rbp),%xmm0\n  428b52:\tf2 0f 59 45 e8       \tmulsd  -0x18(%rbp),%xmm0\n  428b57:\tf2 0f 10 4d 88       \tmovsd  -0x78(%rbp),%xmm1\n  428b5c:\tf2 0f 59 4d f8       \tmulsd  -0x8(%rbp),%xmm1\n  428b61:\tf2 0f 5c c1          \tsubsd  %xmm1,%xmm0\n  428b65:\tf2 0f 11 45 d0       \tmovsd  %xmm0,-0x30(%rbp)\n  428b6a:\teb 36                \tjmp    428ba2 <nifti_dmat44_to_orientation+0x41a>\n  428b6c:\tf2 0f 10 45 f0       \tmovsd  -0x10(%rbp),%xmm0\n  428b71:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  428b78:\tff \n  428b79:\tf2 0f 11 45 f0       \tmovsd  %xmm0,-0x10(%rbp)\n  428b7e:\tf2 0f 10 45 e0       \tmovsd  -0x20(%rbp),%xmm0\n  428b83:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  428b8a:\tff \n  428b8b:\tf2 0f 11 45 e0       \tmovsd  %xmm0,-0x20(%rbp)\n  428b90:\tf2 0f 10 45 d0       \tmovsd  -0x30(%rbp),%xmm0\n  428b95:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  428b9c:\tff \n  428b9d:\tf2 0f 11 45 d0       \tmovsd  %xmm0,-0x30(%rbp)\n  428ba2:\tf2 0f 10 45 90       \tmovsd  -0x70(%rbp),%xmm0\n  428ba7:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  428bab:\tf2 0f 59 4d f0       \tmulsd  -0x10(%rbp),%xmm1\n  428bb0:\tf2 0f 10 45 88       \tmovsd  -0x78(%rbp),%xmm0\n  428bb5:\tf2 0f 59 45 e0       \tmulsd  -0x20(%rbp),%xmm0\n  428bba:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n  428bbe:\tf2 0f 10 45 80       \tmovsd  -0x80(%rbp),%xmm0\n  428bc3:\tf2 0f 59 45 d0       \tmulsd  -0x30(%rbp),%xmm0\n  428bc8:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n  428bcc:\tf2 0f 11 85 78 ff ff \tmovsd  %xmm0,-0x88(%rbp)\n  428bd3:\tff \n  428bd4:\tf2 0f 10 85 78 ff ff \tmovsd  -0x88(%rbp),%xmm0\n  428bdb:\tff \n  428bdc:\tf3 0f 7e 0d 4c f3 02 \tmovq   0x2f34c(%rip),%xmm1        # 457f30 <nifti_type_list+0x5cf0>\n  428be3:\t00 \n  428be4:\t66 0f 54 c1          \tandpd  %xmm1,%xmm0\n  428be8:\t66 0f 2f 05 88 f3 02 \tcomisd 0x2f388(%rip),%xmm0        # 457f78 <nifti_type_list+0x5d38>\n  428bef:\t00 \n  428bf0:\t0f 86 eb 00 00 00    \tjbe    428ce1 <nifti_dmat44_to_orientation+0x559>\n  428bf6:\tf2 0f 10 85 78 ff ff \tmovsd  -0x88(%rbp),%xmm0\n  428bfd:\tff \n  428bfe:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  428c02:\tf2 0f 59 4d 90       \tmulsd  -0x70(%rbp),%xmm1\n  428c07:\tf2 0f 10 45 f0       \tmovsd  -0x10(%rbp),%xmm0\n  428c0c:\tf2 0f 5c c1          \tsubsd  %xmm1,%xmm0\n  428c10:\tf2 0f 11 45 f0       \tmovsd  %xmm0,-0x10(%rbp)\n  428c15:\tf2 0f 10 85 78 ff ff \tmovsd  -0x88(%rbp),%xmm0\n  428c1c:\tff \n  428c1d:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  428c21:\tf2 0f 59 4d 88       \tmulsd  -0x78(%rbp),%xmm1\n  428c26:\tf2 0f 10 45 e0       \tmovsd  -0x20(%rbp),%xmm0\n  428c2b:\tf2 0f 5c c1          \tsubsd  %xmm1,%xmm0\n  428c2f:\tf2 0f 11 45 e0       \tmovsd  %xmm0,-0x20(%rbp)\n  428c34:\tf2 0f 10 85 78 ff ff \tmovsd  -0x88(%rbp),%xmm0\n  428c3b:\tff \n  428c3c:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  428c40:\tf2 0f 59 4d 80       \tmulsd  -0x80(%rbp),%xmm1\n  428c45:\tf2 0f 10 45 d0       \tmovsd  -0x30(%rbp),%xmm0\n  428c4a:\tf2 0f 5c c1          \tsubsd  %xmm1,%xmm0\n  428c4e:\tf2 0f 11 45 d0       \tmovsd  %xmm0,-0x30(%rbp)\n  428c53:\tf2 0f 10 45 f0       \tmovsd  -0x10(%rbp),%xmm0\n  428c58:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  428c5c:\tf2 0f 59 c8          \tmulsd  %xmm0,%xmm1\n  428c60:\tf2 0f 10 45 e0       \tmovsd  -0x20(%rbp),%xmm0\n  428c65:\tf2 0f 59 c0          \tmulsd  %xmm0,%xmm0\n  428c69:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n  428c6d:\tf2 0f 10 45 d0       \tmovsd  -0x30(%rbp),%xmm0\n  428c72:\tf2 0f 59 c0          \tmulsd  %xmm0,%xmm0\n  428c76:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n  428c7a:\te8 b1 98 fd ff       \tcallq  402530 <sqrt@plt>\n  428c7f:\t66 48 0f 7e c0       \tmovq   %xmm0,%rax\n  428c84:\t48 89 85 78 ff ff ff \tmov    %rax,-0x88(%rbp)\n  428c8b:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  428c8f:\t66 0f 2e 85 78 ff ff \tucomisd -0x88(%rbp),%xmm0\n  428c96:\tff \n  428c97:\t7a 12                \tjp     428cab <nifti_dmat44_to_orientation+0x523>\n  428c99:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  428c9d:\t66 0f 2e 85 78 ff ff \tucomisd -0x88(%rbp),%xmm0\n  428ca4:\tff \n  428ca5:\t0f 84 a9 06 00 00    \tje     429354 <nifti_dmat44_to_orientation+0xbcc>\n  428cab:\tf2 0f 10 45 f0       \tmovsd  -0x10(%rbp),%xmm0\n  428cb0:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  428cb7:\tff \n  428cb8:\tf2 0f 11 45 f0       \tmovsd  %xmm0,-0x10(%rbp)\n  428cbd:\tf2 0f 10 45 e0       \tmovsd  -0x20(%rbp),%xmm0\n  428cc2:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  428cc9:\tff \n  428cca:\tf2 0f 11 45 e0       \tmovsd  %xmm0,-0x20(%rbp)\n  428ccf:\tf2 0f 10 45 d0       \tmovsd  -0x30(%rbp),%xmm0\n  428cd4:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  428cdb:\tff \n  428cdc:\tf2 0f 11 45 d0       \tmovsd  %xmm0,-0x30(%rbp)\n  428ce1:\tf2 0f 10 45 f8       \tmovsd  -0x8(%rbp),%xmm0\n  428ce6:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  428cea:\tf2 0f 59 4d f0       \tmulsd  -0x10(%rbp),%xmm1\n  428cef:\tf2 0f 10 45 e8       \tmovsd  -0x18(%rbp),%xmm0\n  428cf4:\tf2 0f 59 45 e0       \tmulsd  -0x20(%rbp),%xmm0\n  428cf9:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n  428cfd:\tf2 0f 10 45 d8       \tmovsd  -0x28(%rbp),%xmm0\n  428d02:\tf2 0f 59 45 d0       \tmulsd  -0x30(%rbp),%xmm0\n  428d07:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n  428d0b:\tf2 0f 11 85 78 ff ff \tmovsd  %xmm0,-0x88(%rbp)\n  428d12:\tff \n  428d13:\tf2 0f 10 85 78 ff ff \tmovsd  -0x88(%rbp),%xmm0\n  428d1a:\tff \n  428d1b:\tf3 0f 7e 0d 0d f2 02 \tmovq   0x2f20d(%rip),%xmm1        # 457f30 <nifti_type_list+0x5cf0>\n  428d22:\t00 \n  428d23:\t66 0f 54 c1          \tandpd  %xmm1,%xmm0\n  428d27:\t66 0f 2f 05 49 f2 02 \tcomisd 0x2f249(%rip),%xmm0        # 457f78 <nifti_type_list+0x5d38>\n  428d2e:\t00 \n  428d2f:\t0f 86 eb 00 00 00    \tjbe    428e20 <nifti_dmat44_to_orientation+0x698>\n  428d35:\tf2 0f 10 85 78 ff ff \tmovsd  -0x88(%rbp),%xmm0\n  428d3c:\tff \n  428d3d:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  428d41:\tf2 0f 59 4d f8       \tmulsd  -0x8(%rbp),%xmm1\n  428d46:\tf2 0f 10 45 f0       \tmovsd  -0x10(%rbp),%xmm0\n  428d4b:\tf2 0f 5c c1          \tsubsd  %xmm1,%xmm0\n  428d4f:\tf2 0f 11 45 f0       \tmovsd  %xmm0,-0x10(%rbp)\n  428d54:\tf2 0f 10 85 78 ff ff \tmovsd  -0x88(%rbp),%xmm0\n  428d5b:\tff \n  428d5c:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  428d60:\tf2 0f 59 4d e8       \tmulsd  -0x18(%rbp),%xmm1\n  428d65:\tf2 0f 10 45 e0       \tmovsd  -0x20(%rbp),%xmm0\n  428d6a:\tf2 0f 5c c1          \tsubsd  %xmm1,%xmm0\n  428d6e:\tf2 0f 11 45 e0       \tmovsd  %xmm0,-0x20(%rbp)\n  428d73:\tf2 0f 10 85 78 ff ff \tmovsd  -0x88(%rbp),%xmm0\n  428d7a:\tff \n  428d7b:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  428d7f:\tf2 0f 59 4d d8       \tmulsd  -0x28(%rbp),%xmm1\n  428d84:\tf2 0f 10 45 d0       \tmovsd  -0x30(%rbp),%xmm0\n  428d89:\tf2 0f 5c c1          \tsubsd  %xmm1,%xmm0\n  428d8d:\tf2 0f 11 45 d0       \tmovsd  %xmm0,-0x30(%rbp)\n  428d92:\tf2 0f 10 45 f0       \tmovsd  -0x10(%rbp),%xmm0\n  428d97:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  428d9b:\tf2 0f 59 c8          \tmulsd  %xmm0,%xmm1\n  428d9f:\tf2 0f 10 45 e0       \tmovsd  -0x20(%rbp),%xmm0\n  428da4:\tf2 0f 59 c0          \tmulsd  %xmm0,%xmm0\n  428da8:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n  428dac:\tf2 0f 10 45 d0       \tmovsd  -0x30(%rbp),%xmm0\n  428db1:\tf2 0f 59 c0          \tmulsd  %xmm0,%xmm0\n  428db5:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n  428db9:\te8 72 97 fd ff       \tcallq  402530 <sqrt@plt>\n  428dbe:\t66 48 0f 7e c0       \tmovq   %xmm0,%rax\n  428dc3:\t48 89 85 78 ff ff ff \tmov    %rax,-0x88(%rbp)\n  428dca:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  428dce:\t66 0f 2e 85 78 ff ff \tucomisd -0x88(%rbp),%xmm0\n  428dd5:\tff \n  428dd6:\t7a 12                \tjp     428dea <nifti_dmat44_to_orientation+0x662>\n  428dd8:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  428ddc:\t66 0f 2e 85 78 ff ff \tucomisd -0x88(%rbp),%xmm0\n  428de3:\tff \n  428de4:\t0f 84 6d 05 00 00    \tje     429357 <nifti_dmat44_to_orientation+0xbcf>\n  428dea:\tf2 0f 10 45 f0       \tmovsd  -0x10(%rbp),%xmm0\n  428def:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  428df6:\tff \n  428df7:\tf2 0f 11 45 f0       \tmovsd  %xmm0,-0x10(%rbp)\n  428dfc:\tf2 0f 10 45 e0       \tmovsd  -0x20(%rbp),%xmm0\n  428e01:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  428e08:\tff \n  428e09:\tf2 0f 11 45 e0       \tmovsd  %xmm0,-0x20(%rbp)\n  428e0e:\tf2 0f 10 45 d0       \tmovsd  -0x30(%rbp),%xmm0\n  428e13:\tf2 0f 5e 85 78 ff ff \tdivsd  -0x88(%rbp),%xmm0\n  428e1a:\tff \n  428e1b:\tf2 0f 11 45 d0       \tmovsd  %xmm0,-0x30(%rbp)\n  428e20:\tf2 0f 10 45 90       \tmovsd  -0x70(%rbp),%xmm0\n  428e25:\tf2 0f 11 85 d0 fe ff \tmovsd  %xmm0,-0x130(%rbp)\n  428e2c:\tff \n  428e2d:\tf2 0f 10 45 f8       \tmovsd  -0x8(%rbp),%xmm0\n  428e32:\tf2 0f 11 85 d8 fe ff \tmovsd  %xmm0,-0x128(%rbp)\n  428e39:\tff \n  428e3a:\tf2 0f 10 45 f0       \tmovsd  -0x10(%rbp),%xmm0\n  428e3f:\tf2 0f 11 85 e0 fe ff \tmovsd  %xmm0,-0x120(%rbp)\n  428e46:\tff \n  428e47:\tf2 0f 10 45 88       \tmovsd  -0x78(%rbp),%xmm0\n  428e4c:\tf2 0f 11 85 e8 fe ff \tmovsd  %xmm0,-0x118(%rbp)\n  428e53:\tff \n  428e54:\tf2 0f 10 45 e8       \tmovsd  -0x18(%rbp),%xmm0\n  428e59:\tf2 0f 11 85 f0 fe ff \tmovsd  %xmm0,-0x110(%rbp)\n  428e60:\tff \n  428e61:\tf2 0f 10 45 e0       \tmovsd  -0x20(%rbp),%xmm0\n  428e66:\tf2 0f 11 85 f8 fe ff \tmovsd  %xmm0,-0x108(%rbp)\n  428e6d:\tff \n  428e6e:\tf2 0f 10 45 80       \tmovsd  -0x80(%rbp),%xmm0\n  428e73:\tf2 0f 11 85 00 ff ff \tmovsd  %xmm0,-0x100(%rbp)\n  428e7a:\tff \n  428e7b:\tf2 0f 10 45 d8       \tmovsd  -0x28(%rbp),%xmm0\n  428e80:\tf2 0f 11 85 08 ff ff \tmovsd  %xmm0,-0xf8(%rbp)\n  428e87:\tff \n  428e88:\tf2 0f 10 45 d0       \tmovsd  -0x30(%rbp),%xmm0\n  428e8d:\tf2 0f 11 85 10 ff ff \tmovsd  %xmm0,-0xf0(%rbp)\n  428e94:\tff \n  428e95:\t48 83 ec 08          \tsub    $0x8,%rsp\n  428e99:\tff b5 10 ff ff ff    \tpushq  -0xf0(%rbp)\n  428e9f:\tff b5 08 ff ff ff    \tpushq  -0xf8(%rbp)\n  428ea5:\tff b5 00 ff ff ff    \tpushq  -0x100(%rbp)\n  428eab:\tff b5 f8 fe ff ff    \tpushq  -0x108(%rbp)\n  428eb1:\tff b5 f0 fe ff ff    \tpushq  -0x110(%rbp)\n  428eb7:\tff b5 e8 fe ff ff    \tpushq  -0x118(%rbp)\n  428ebd:\tff b5 e0 fe ff ff    \tpushq  -0x120(%rbp)\n  428ec3:\tff b5 d8 fe ff ff    \tpushq  -0x128(%rbp)\n  428ec9:\tff b5 d0 fe ff ff    \tpushq  -0x130(%rbp)\n  428ecf:\te8 d2 df ff ff       \tcallq  426ea6 <nifti_dmat33_determ>\n  428ed4:\t48 83 c4 50          \tadd    $0x50,%rsp\n  428ed8:\t66 48 0f 7e c0       \tmovq   %xmm0,%rax\n  428edd:\t48 89 85 70 ff ff ff \tmov    %rax,-0x90(%rbp)\n  428ee4:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  428ee8:\t66 0f 2e 85 70 ff ff \tucomisd -0x90(%rbp),%xmm0\n  428eef:\tff \n  428ef0:\t7a 12                \tjp     428f04 <nifti_dmat44_to_orientation+0x77c>\n  428ef2:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  428ef6:\t66 0f 2e 85 70 ff ff \tucomisd -0x90(%rbp),%xmm0\n  428efd:\tff \n  428efe:\t0f 84 56 04 00 00    \tje     42935a <nifti_dmat44_to_orientation+0xbd2>\n  428f04:\tf2 0f 10 05 74 f0 02 \tmovsd  0x2f074(%rip),%xmm0        # 457f80 <nifti_type_list+0x5d40>\n  428f0b:\t00 \n  428f0c:\tf2 0f 11 45 98       \tmovsd  %xmm0,-0x68(%rbp)\n  428f11:\tc7 45 a0 01 00 00 00 \tmovl   $0x1,-0x60(%rbp)\n  428f18:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n  428f1b:\t89 45 a4             \tmov    %eax,-0x5c(%rbp)\n  428f1e:\t8b 45 a4             \tmov    -0x5c(%rbp),%eax\n  428f21:\t89 45 a8             \tmov    %eax,-0x58(%rbp)\n  428f24:\t8b 45 a8             \tmov    -0x58(%rbp),%eax\n  428f27:\t89 45 b4             \tmov    %eax,-0x4c(%rbp)\n  428f2a:\tc7 45 b0 02 00 00 00 \tmovl   $0x2,-0x50(%rbp)\n  428f31:\tc7 45 ac 03 00 00 00 \tmovl   $0x3,-0x54(%rbp)\n  428f38:\tc7 45 cc 01 00 00 00 \tmovl   $0x1,-0x34(%rbp)\n  428f3f:\te9 e4 02 00 00       \tjmpq   429228 <nifti_dmat44_to_orientation+0xaa0>\n  428f44:\tc7 45 c8 01 00 00 00 \tmovl   $0x1,-0x38(%rbp)\n  428f4b:\te9 ca 02 00 00       \tjmpq   42921a <nifti_dmat44_to_orientation+0xa92>\n  428f50:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  428f53:\t3b 45 c8             \tcmp    -0x38(%rbp),%eax\n  428f56:\t0f 84 b9 02 00 00    \tje     429215 <nifti_dmat44_to_orientation+0xa8d>\n  428f5c:\tc7 45 c4 01 00 00 00 \tmovl   $0x1,-0x3c(%rbp)\n  428f63:\te9 a1 02 00 00       \tjmpq   429209 <nifti_dmat44_to_orientation+0xa81>\n  428f68:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  428f6b:\t3b 45 c4             \tcmp    -0x3c(%rbp),%eax\n  428f6e:\t0f 84 90 02 00 00    \tje     429204 <nifti_dmat44_to_orientation+0xa7c>\n  428f74:\t8b 45 c8             \tmov    -0x38(%rbp),%eax\n  428f77:\t3b 45 c4             \tcmp    -0x3c(%rbp),%eax\n  428f7a:\t0f 84 84 02 00 00    \tje     429204 <nifti_dmat44_to_orientation+0xa7c>\n  428f80:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  428f84:\tf2 0f 11 85 60 ff ff \tmovsd  %xmm0,-0xa0(%rbp)\n  428f8b:\tff \n  428f8c:\tf2 0f 10 85 60 ff ff \tmovsd  -0xa0(%rbp),%xmm0\n  428f93:\tff \n  428f94:\tf2 0f 11 85 58 ff ff \tmovsd  %xmm0,-0xa8(%rbp)\n  428f9b:\tff \n  428f9c:\tf2 0f 10 85 58 ff ff \tmovsd  -0xa8(%rbp),%xmm0\n  428fa3:\tff \n  428fa4:\tf2 0f 11 85 50 ff ff \tmovsd  %xmm0,-0xb0(%rbp)\n  428fab:\tff \n  428fac:\tf2 0f 10 85 50 ff ff \tmovsd  -0xb0(%rbp),%xmm0\n  428fb3:\tff \n  428fb4:\tf2 0f 11 85 48 ff ff \tmovsd  %xmm0,-0xb8(%rbp)\n  428fbb:\tff \n  428fbc:\tf2 0f 10 85 48 ff ff \tmovsd  -0xb8(%rbp),%xmm0\n  428fc3:\tff \n  428fc4:\tf2 0f 11 85 40 ff ff \tmovsd  %xmm0,-0xc0(%rbp)\n  428fcb:\tff \n  428fcc:\tf2 0f 10 85 40 ff ff \tmovsd  -0xc0(%rbp),%xmm0\n  428fd3:\tff \n  428fd4:\tf2 0f 11 85 38 ff ff \tmovsd  %xmm0,-0xc8(%rbp)\n  428fdb:\tff \n  428fdc:\tf2 0f 10 85 38 ff ff \tmovsd  -0xc8(%rbp),%xmm0\n  428fe3:\tff \n  428fe4:\tf2 0f 11 85 30 ff ff \tmovsd  %xmm0,-0xd0(%rbp)\n  428feb:\tff \n  428fec:\tf2 0f 10 85 30 ff ff \tmovsd  -0xd0(%rbp),%xmm0\n  428ff3:\tff \n  428ff4:\tf2 0f 11 85 28 ff ff \tmovsd  %xmm0,-0xd8(%rbp)\n  428ffb:\tff \n  428ffc:\tf2 0f 10 85 28 ff ff \tmovsd  -0xd8(%rbp),%xmm0\n  429003:\tff \n  429004:\tf2 0f 11 85 20 ff ff \tmovsd  %xmm0,-0xe0(%rbp)\n  42900b:\tff \n  42900c:\tc7 45 c0 ff ff ff ff \tmovl   $0xffffffff,-0x40(%rbp)\n  429013:\te9 e0 01 00 00       \tjmpq   4291f8 <nifti_dmat44_to_orientation+0xa70>\n  429018:\tc7 45 bc ff ff ff ff \tmovl   $0xffffffff,-0x44(%rbp)\n  42901f:\te9 c6 01 00 00       \tjmpq   4291ea <nifti_dmat44_to_orientation+0xa62>\n  429024:\tc7 45 b8 ff ff ff ff \tmovl   $0xffffffff,-0x48(%rbp)\n  42902b:\te9 ac 01 00 00       \tjmpq   4291dc <nifti_dmat44_to_orientation+0xa54>\n  429030:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  429033:\t83 e8 01             \tsub    $0x1,%eax\n  429036:\tf2 0f 2a 45 c0       \tcvtsi2sdl -0x40(%rbp),%xmm0\n  42903b:\t48 98                \tcltq   \n  42903d:\tf2 0f 11 84 c5 20 ff \tmovsd  %xmm0,-0xe0(%rbp,%rax,8)\n  429044:\tff ff \n  429046:\t8b 45 c8             \tmov    -0x38(%rbp),%eax\n  429049:\t83 e8 01             \tsub    $0x1,%eax\n  42904c:\tf2 0f 2a 45 bc       \tcvtsi2sdl -0x44(%rbp),%xmm0\n  429051:\t48 98                \tcltq   \n  429053:\t48 83 c0 03          \tadd    $0x3,%rax\n  429057:\tf2 0f 11 84 c5 20 ff \tmovsd  %xmm0,-0xe0(%rbp,%rax,8)\n  42905e:\tff ff \n  429060:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n  429063:\t83 e8 01             \tsub    $0x1,%eax\n  429066:\tf2 0f 2a 45 b8       \tcvtsi2sdl -0x48(%rbp),%xmm0\n  42906b:\t48 98                \tcltq   \n  42906d:\t48 83 c0 06          \tadd    $0x6,%rax\n  429071:\tf2 0f 11 84 c5 20 ff \tmovsd  %xmm0,-0xe0(%rbp,%rax,8)\n  429078:\tff ff \n  42907a:\t48 83 ec 08          \tsub    $0x8,%rsp\n  42907e:\tff b5 60 ff ff ff    \tpushq  -0xa0(%rbp)\n  429084:\tff b5 58 ff ff ff    \tpushq  -0xa8(%rbp)\n  42908a:\tff b5 50 ff ff ff    \tpushq  -0xb0(%rbp)\n  429090:\tff b5 48 ff ff ff    \tpushq  -0xb8(%rbp)\n  429096:\tff b5 40 ff ff ff    \tpushq  -0xc0(%rbp)\n  42909c:\tff b5 38 ff ff ff    \tpushq  -0xc8(%rbp)\n  4290a2:\tff b5 30 ff ff ff    \tpushq  -0xd0(%rbp)\n  4290a8:\tff b5 28 ff ff ff    \tpushq  -0xd8(%rbp)\n  4290ae:\tff b5 20 ff ff ff    \tpushq  -0xe0(%rbp)\n  4290b4:\te8 ed dd ff ff       \tcallq  426ea6 <nifti_dmat33_determ>\n  4290b9:\t48 83 c4 50          \tadd    $0x50,%rsp\n  4290bd:\t66 48 0f 7e c0       \tmovq   %xmm0,%rax\n  4290c2:\t48 89 85 68 ff ff ff \tmov    %rax,-0x98(%rbp)\n  4290c9:\tf2 0f 10 85 68 ff ff \tmovsd  -0x98(%rbp),%xmm0\n  4290d0:\tff \n  4290d1:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  4290d5:\tf2 0f 59 8d 70 ff ff \tmulsd  -0x90(%rbp),%xmm1\n  4290dc:\tff \n  4290dd:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  4290e1:\t66 0f 2f c1          \tcomisd %xmm1,%xmm0\n  4290e5:\t0f 83 ec 00 00 00    \tjae    4291d7 <nifti_dmat44_to_orientation+0xa4f>\n  4290eb:\t48 8d 85 80 fe ff ff \tlea    -0x180(%rbp),%rax\n  4290f2:\tff b5 10 ff ff ff    \tpushq  -0xf0(%rbp)\n  4290f8:\tff b5 08 ff ff ff    \tpushq  -0xf8(%rbp)\n  4290fe:\tff b5 00 ff ff ff    \tpushq  -0x100(%rbp)\n  429104:\tff b5 f8 fe ff ff    \tpushq  -0x108(%rbp)\n  42910a:\tff b5 f0 fe ff ff    \tpushq  -0x110(%rbp)\n  429110:\tff b5 e8 fe ff ff    \tpushq  -0x118(%rbp)\n  429116:\tff b5 e0 fe ff ff    \tpushq  -0x120(%rbp)\n  42911c:\tff b5 d8 fe ff ff    \tpushq  -0x128(%rbp)\n  429122:\tff b5 d0 fe ff ff    \tpushq  -0x130(%rbp)\n  429128:\tff b5 60 ff ff ff    \tpushq  -0xa0(%rbp)\n  42912e:\tff b5 58 ff ff ff    \tpushq  -0xa8(%rbp)\n  429134:\tff b5 50 ff ff ff    \tpushq  -0xb0(%rbp)\n  42913a:\tff b5 48 ff ff ff    \tpushq  -0xb8(%rbp)\n  429140:\tff b5 40 ff ff ff    \tpushq  -0xc0(%rbp)\n  429146:\tff b5 38 ff ff ff    \tpushq  -0xc8(%rbp)\n  42914c:\tff b5 30 ff ff ff    \tpushq  -0xd0(%rbp)\n  429152:\tff b5 28 ff ff ff    \tpushq  -0xd8(%rbp)\n  429158:\tff b5 20 ff ff ff    \tpushq  -0xe0(%rbp)\n  42915e:\t48 89 c7             \tmov    %rax,%rdi\n  429161:\te8 32 e3 ff ff       \tcallq  427498 <nifti_dmat33_mul>\n  429166:\t48 81 c4 90 00 00 00 \tadd    $0x90,%rsp\n  42916d:\tf2 0f 10 8d 80 fe ff \tmovsd  -0x180(%rbp),%xmm1\n  429174:\tff \n  429175:\tf2 0f 10 85 a0 fe ff \tmovsd  -0x160(%rbp),%xmm0\n  42917c:\tff \n  42917d:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n  429181:\tf2 0f 10 85 c0 fe ff \tmovsd  -0x140(%rbp),%xmm0\n  429188:\tff \n  429189:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n  42918d:\tf2 0f 11 85 78 ff ff \tmovsd  %xmm0,-0x88(%rbp)\n  429194:\tff \n  429195:\tf2 0f 10 85 78 ff ff \tmovsd  -0x88(%rbp),%xmm0\n  42919c:\tff \n  42919d:\t66 0f 2f 45 98       \tcomisd -0x68(%rbp),%xmm0\n  4291a2:\t76 34                \tjbe    4291d8 <nifti_dmat44_to_orientation+0xa50>\n  4291a4:\tf2 0f 10 85 78 ff ff \tmovsd  -0x88(%rbp),%xmm0\n  4291ab:\tff \n  4291ac:\tf2 0f 11 45 98       \tmovsd  %xmm0,-0x68(%rbp)\n  4291b1:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  4291b4:\t89 45 b4             \tmov    %eax,-0x4c(%rbp)\n  4291b7:\t8b 45 c8             \tmov    -0x38(%rbp),%eax\n  4291ba:\t89 45 b0             \tmov    %eax,-0x50(%rbp)\n  4291bd:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n  4291c0:\t89 45 ac             \tmov    %eax,-0x54(%rbp)\n  4291c3:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n  4291c6:\t89 45 a8             \tmov    %eax,-0x58(%rbp)\n  4291c9:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n  4291cc:\t89 45 a4             \tmov    %eax,-0x5c(%rbp)\n  4291cf:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n  4291d2:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n  4291d5:\teb 01                \tjmp    4291d8 <nifti_dmat44_to_orientation+0xa50>\n  4291d7:\t90                   \tnop\n  4291d8:\t83 45 b8 02          \taddl   $0x2,-0x48(%rbp)\n  4291dc:\t83 7d b8 01          \tcmpl   $0x1,-0x48(%rbp)\n  4291e0:\t0f 8e 4a fe ff ff    \tjle    429030 <nifti_dmat44_to_orientation+0x8a8>\n  4291e6:\t83 45 bc 02          \taddl   $0x2,-0x44(%rbp)\n  4291ea:\t83 7d bc 01          \tcmpl   $0x1,-0x44(%rbp)\n  4291ee:\t0f 8e 30 fe ff ff    \tjle    429024 <nifti_dmat44_to_orientation+0x89c>\n  4291f4:\t83 45 c0 02          \taddl   $0x2,-0x40(%rbp)\n  4291f8:\t83 7d c0 01          \tcmpl   $0x1,-0x40(%rbp)\n  4291fc:\t0f 8e 16 fe ff ff    \tjle    429018 <nifti_dmat44_to_orientation+0x890>\n  429202:\teb 01                \tjmp    429205 <nifti_dmat44_to_orientation+0xa7d>\n  429204:\t90                   \tnop\n  429205:\t83 45 c4 01          \taddl   $0x1,-0x3c(%rbp)\n  429209:\t83 7d c4 03          \tcmpl   $0x3,-0x3c(%rbp)\n  42920d:\t0f 8e 55 fd ff ff    \tjle    428f68 <nifti_dmat44_to_orientation+0x7e0>\n  429213:\teb 01                \tjmp    429216 <nifti_dmat44_to_orientation+0xa8e>\n  429215:\t90                   \tnop\n  429216:\t83 45 c8 01          \taddl   $0x1,-0x38(%rbp)\n  42921a:\t83 7d c8 03          \tcmpl   $0x3,-0x38(%rbp)\n  42921e:\t0f 8e 2c fd ff ff    \tjle    428f50 <nifti_dmat44_to_orientation+0x7c8>\n  429224:\t83 45 cc 01          \taddl   $0x1,-0x34(%rbp)\n  429228:\t83 7d cc 03          \tcmpl   $0x3,-0x34(%rbp)\n  42922c:\t0f 8e 12 fd ff ff    \tjle    428f44 <nifti_dmat44_to_orientation+0x7bc>\n  429232:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n  429235:\t0f af 45 a8          \timul   -0x58(%rbp),%eax\n  429239:\t83 c0 03             \tadd    $0x3,%eax\n  42923c:\t83 f8 06             \tcmp    $0x6,%eax\n  42923f:\t77 41                \tja     429282 <nifti_dmat44_to_orientation+0xafa>\n  429241:\t89 c0                \tmov    %eax,%eax\n  429243:\t48 8b 04 c5 58 38 45 \tmov    0x453858(,%rax,8),%rax\n  42924a:\t00 \n  42924b:\tff e0                \tjmpq   *%rax\n  42924d:\tc7 45 cc 01 00 00 00 \tmovl   $0x1,-0x34(%rbp)\n  429254:\teb 2c                \tjmp    429282 <nifti_dmat44_to_orientation+0xafa>\n  429256:\tc7 45 cc 02 00 00 00 \tmovl   $0x2,-0x34(%rbp)\n  42925d:\teb 23                \tjmp    429282 <nifti_dmat44_to_orientation+0xafa>\n  42925f:\tc7 45 cc 03 00 00 00 \tmovl   $0x3,-0x34(%rbp)\n  429266:\teb 1a                \tjmp    429282 <nifti_dmat44_to_orientation+0xafa>\n  429268:\tc7 45 cc 04 00 00 00 \tmovl   $0x4,-0x34(%rbp)\n  42926f:\teb 11                \tjmp    429282 <nifti_dmat44_to_orientation+0xafa>\n  429271:\tc7 45 cc 05 00 00 00 \tmovl   $0x5,-0x34(%rbp)\n  429278:\teb 08                \tjmp    429282 <nifti_dmat44_to_orientation+0xafa>\n  42927a:\tc7 45 cc 06 00 00 00 \tmovl   $0x6,-0x34(%rbp)\n  429281:\t90                   \tnop\n  429282:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n  429285:\t0f af 45 a4          \timul   -0x5c(%rbp),%eax\n  429289:\t83 c0 03             \tadd    $0x3,%eax\n  42928c:\t83 f8 06             \tcmp    $0x6,%eax\n  42928f:\t77 41                \tja     4292d2 <nifti_dmat44_to_orientation+0xb4a>\n  429291:\t89 c0                \tmov    %eax,%eax\n  429293:\t48 8b 04 c5 90 38 45 \tmov    0x453890(,%rax,8),%rax\n  42929a:\t00 \n  42929b:\tff e0                \tjmpq   *%rax\n  42929d:\tc7 45 c8 01 00 00 00 \tmovl   $0x1,-0x38(%rbp)\n  4292a4:\teb 2c                \tjmp    4292d2 <nifti_dmat44_to_orientation+0xb4a>\n  4292a6:\tc7 45 c8 02 00 00 00 \tmovl   $0x2,-0x38(%rbp)\n  4292ad:\teb 23                \tjmp    4292d2 <nifti_dmat44_to_orientation+0xb4a>\n  4292af:\tc7 45 c8 03 00 00 00 \tmovl   $0x3,-0x38(%rbp)\n  4292b6:\teb 1a                \tjmp    4292d2 <nifti_dmat44_to_orientation+0xb4a>\n  4292b8:\tc7 45 c8 04 00 00 00 \tmovl   $0x4,-0x38(%rbp)\n  4292bf:\teb 11                \tjmp    4292d2 <nifti_dmat44_to_orientation+0xb4a>\n  4292c1:\tc7 45 c8 05 00 00 00 \tmovl   $0x5,-0x38(%rbp)\n  4292c8:\teb 08                \tjmp    4292d2 <nifti_dmat44_to_orientation+0xb4a>\n  4292ca:\tc7 45 c8 06 00 00 00 \tmovl   $0x6,-0x38(%rbp)\n  4292d1:\t90                   \tnop\n  4292d2:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n  4292d5:\t0f af 45 a0          \timul   -0x60(%rbp),%eax\n  4292d9:\t83 c0 03             \tadd    $0x3,%eax\n  4292dc:\t83 f8 06             \tcmp    $0x6,%eax\n  4292df:\t77 41                \tja     429322 <nifti_dmat44_to_orientation+0xb9a>\n  4292e1:\t89 c0                \tmov    %eax,%eax\n  4292e3:\t48 8b 04 c5 c8 38 45 \tmov    0x4538c8(,%rax,8),%rax\n  4292ea:\t00 \n  4292eb:\tff e0                \tjmpq   *%rax\n  4292ed:\tc7 45 c4 01 00 00 00 \tmovl   $0x1,-0x3c(%rbp)\n  4292f4:\teb 2c                \tjmp    429322 <nifti_dmat44_to_orientation+0xb9a>\n  4292f6:\tc7 45 c4 02 00 00 00 \tmovl   $0x2,-0x3c(%rbp)\n  4292fd:\teb 23                \tjmp    429322 <nifti_dmat44_to_orientation+0xb9a>\n  4292ff:\tc7 45 c4 03 00 00 00 \tmovl   $0x3,-0x3c(%rbp)\n  429306:\teb 1a                \tjmp    429322 <nifti_dmat44_to_orientation+0xb9a>\n  429308:\tc7 45 c4 04 00 00 00 \tmovl   $0x4,-0x3c(%rbp)\n  42930f:\teb 11                \tjmp    429322 <nifti_dmat44_to_orientation+0xb9a>\n  429311:\tc7 45 c4 05 00 00 00 \tmovl   $0x5,-0x3c(%rbp)\n  429318:\teb 08                \tjmp    429322 <nifti_dmat44_to_orientation+0xb9a>\n  42931a:\tc7 45 c4 06 00 00 00 \tmovl   $0x6,-0x3c(%rbp)\n  429321:\t90                   \tnop\n  429322:\t48 8b 85 78 fe ff ff \tmov    -0x188(%rbp),%rax\n  429329:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n  42932c:\t89 10                \tmov    %edx,(%rax)\n  42932e:\t48 8b 85 70 fe ff ff \tmov    -0x190(%rbp),%rax\n  429335:\t8b 55 c8             \tmov    -0x38(%rbp),%edx\n  429338:\t89 10                \tmov    %edx,(%rax)\n  42933a:\t48 8b 85 68 fe ff ff \tmov    -0x198(%rbp),%rax\n  429341:\t8b 55 c4             \tmov    -0x3c(%rbp),%edx\n  429344:\t89 10                \tmov    %edx,(%rax)\n  429346:\teb 13                \tjmp    42935b <nifti_dmat44_to_orientation+0xbd3>\n  429348:\t90                   \tnop\n  429349:\teb 10                \tjmp    42935b <nifti_dmat44_to_orientation+0xbd3>\n  42934b:\t90                   \tnop\n  42934c:\teb 0d                \tjmp    42935b <nifti_dmat44_to_orientation+0xbd3>\n  42934e:\t90                   \tnop\n  42934f:\teb 0a                \tjmp    42935b <nifti_dmat44_to_orientation+0xbd3>\n  429351:\t90                   \tnop\n  429352:\teb 07                \tjmp    42935b <nifti_dmat44_to_orientation+0xbd3>\n  429354:\t90                   \tnop\n  429355:\teb 04                \tjmp    42935b <nifti_dmat44_to_orientation+0xbd3>\n  429357:\t90                   \tnop\n  429358:\teb 01                \tjmp    42935b <nifti_dmat44_to_orientation+0xbd3>\n  42935a:\t90                   \tnop\n  42935b:\tc9                   \tleaveq \n  42935c:\tc3                   \tretq   ", "code_s": "__int64 __fastcall nifti_dmat44_to_orientation(\n    _DWORD *a1, _DWORD *a2, _DWORD *a3, double a4, double a5, double a6,\n    double a7, double a8, double a9, double a10, double a11, __int64 a12,\n    __int64 a13, __int64 a14, double a15, double a16, double a17, int a18,\n    double a19, double a20, double a21, int a22, double a23, double a24,\n    double a25) {\n  __int64 result;\n  double v26;\n  double v27;\n  double v28;\n  double v29;\n  double v30;\n  double v31;\n  __int64 v32;\n  __int64 v33;\n  __int64 v34;\n  __int64 v35;\n  double v37[Number];\n  double v38;\n  double v39;\n  __int64 v40;\n  double v41;\n  double v42;\n  double v43;\n  double v44;\n  double v45;\n  double v46;\n  double v47;\n  double v48;\n  double v49;\n  double v50;\n  double v51;\n  double v52;\n  double v53;\n  double v54;\n  double v55;\n  double v56;\n  double v57;\n  double v58;\n  double v59;\n  double v60;\n  double v61;\n  double v62;\n  double v63;\n  double v64;\n  __int64 v65;\n  int v66;\n  int v67;\n  int v68;\n  int v69;\n  __int64 v70;\n  int l;\n  int k;\n  int j;\n  int i;\n  double v75;\n  double v76;\n  double v77;\n  double v78;\n  double v79;\n  double v80;\n  k = Number;\n  if (a1) {\n    if (a2) {\n      if (*(double *)&a3 != Number) {\n        *a3 = Number;\n        *a2 = *a3;\n        *a1 = *a2;\n        v63 = a15;\n        v80 = a16;\n        v79 = a17;\n        v62 = a19;\n        v78 = a20;\n        v77 = a21;\n        v61 = a23;\n        v76 = a24;\n        v75 = a25;\n        *(double *)&result = sqrt(a23 * a23 + a15 * a15 + a19 * a19);\n        v60 = *(double *)&result;\n        if (*(double *)&result != Number) {\n          v63 = v63 / v60;\n          v62 = v62 / v60;\n          v61 = v61 / v60;\n          *(double *)&result = sqrt(v76 * v76 + v80 * v80 + v78 * v78);\n          v60 = *(double *)&result;\n          if (*(double *)&result != Number) {\n            v80 = v80 / v60;\n            v78 = v78 / v60;\n            v76 = v76 / v60;\n            v60 = v61 * v76 + v63 * v80 + v62 * v78;\n            if (fabs(v60) > Number) {\n              v80 = v80 - v60 * v63;\n              v78 = v78 - v60 * v62;\n              v76 = v76 - v60 * v61;\n              *(double *)&result = sqrt(v76 * v76 + v80 * v80 + v78 * v78);\n              v60 = *(double *)&result;\n              if (*(double *)&result == Number)\n                return result;\n              v80 = v80 / v60;\n              v78 = v78 / v60;\n              v76 = v76 / v60;\n            }\n            v60 = sqrt(v75 * v75 + v79 * v79 + v77 * v77);\n            if (v60 == Number) {\n              v79 = v62 * v76 - v61 * v78;\n              v77 = v61 * v80 - v76 * v63;\n              v75 = v63 * v78 - v62 * v80;\n            } else {\n              v79 = v79 / v60;\n              v77 = v77 / v60;\n              v75 = v75 / v60;\n            }\n            v60 = v61 * v75 + v63 * v79 + v62 * v77;\n            if (fabs(v60) > Number) {\n              v79 = v79 - v60 * v63;\n              v77 = v77 - v60 * v62;\n              v75 = v75 - v60 * v61;\n              *(double *)&result = sqrt(v75 * v75 + v79 * v79 + v77 * v77);\n              v60 = *(double *)&result;\n              if (*(double *)&result == Number)\n                return result;\n              v79 = v79 / v60;\n              v77 = v77 / v60;\n              v75 = v75 / v60;\n            }\n            v60 = v76 * v75 + v80 * v79 + v78 * v77;\n            v28 = NAN;\n            if (fabs(v60) > Number) {\n              v79 = v79 - v60 * v80;\n              v77 = v77 - v60 * v78;\n              v75 = v75 - v60 * v76;\n              v28 = v79 * v79 + v77 * v77;\n              *(double *)&result = sqrt(v75 * v75 + v28);\n              v60 = *(double *)&result;\n              if (*(double *)&result == Number)\n                return result;\n              v79 = v79 / v60;\n              v77 = v77 / v60;\n              v75 = v75 / v60;\n            }\n            v40 = *(_QWORD *)&v63;\n            v41 = v80;\n            v42 = v79;\n            v43 = v62;\n            v44 = v78;\n            v45 = v77;\n            v46 = v61;\n            v47 = v76;\n            v48 = v75;\n            *(double *)&result =\n                nifti_dmat33_determ(v75, v28, a6, a7, v26, v27, a10, a11, v63,\n                                    v80, v79, v62, v78, v77, v61, v76, v75);\n            v59 = *(double *)&result;\n            if (*(double *)&result != Number) {\n              v64 = Number;\n              v65 = Number;\n              v66 = Number;\n              v69 = Number;\n              v68 = Number;\n              v67 = Number;\n              for (i = Number; i <= Number; ++i) {\n                for (j = Number; j <= Number; ++j) {\n                  if (i != j) {\n                    for (k = Number; k <= Number; ++k) {\n                      if (i != k && j != k) {\n                        v57 = Number;\n                        v56 = Number;\n                        v55 = Number;\n                        v54 = Number;\n                        v53 = Number;\n                        v52 = Number;\n                        v51 = Number;\n                        v50 = Number;\n                        v49 = Number;\n                        for (l = Number; l <= Number; l += Number) {\n                          HIDWORD(v70) = Number;\n                          while (SHIDWORD(v70) <= Number) {\n                            LODWORD(v70) = Number;\n                            while ((int)v70 <= Number) {\n                              *(&v49 + i - Number) = (double)l;\n                              *(&v49 + j + Number) = (double)SHIDWORD(v70);\n                              v31 = (double)(int)v70;\n                              *(&v49 + k + Number) = (double)(int)v70;\n                              v58 = nifti_dmat33_determ(\n                                  v31, v28, a6, a7, v29, v30, a10, a11, v49,\n                                  v50, v51, v52, v53, v54, v55, v56, v57);\n                              v28 = v58 * v59;\n                              if (v58 * v59 > Number) {\n                                nifti_dmat33_mul(\n                                    v37, (__int64)a2, v32, v33, v34, v35,\n                                    SLOBYTE(v49), SLODWORD(v50), SLODWORD(v51),\n                                    SLODWORD(v52), SLODWORD(v53), SLODWORD(v54),\n                                    SLODWORD(v55), SLODWORD(v56), SLODWORD(v57),\n                                    v40);\n                                v28 = v37[Number] + v38;\n                                v60 = v39 + v37[Number] + v38;\n                                if (v60 > v64) {\n                                  v64 = v60;\n                                  v69 = i;\n                                  v68 = j;\n                                  v67 = k;\n                                  v66 = l;\n                                  v65 = v70;\n                                }\n                              }\n                              LODWORD(v70) = v70 + Number;\n                            }\n                            HIDWORD(v70) += Number;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              switch (v66 * v69) {\n              case Number:\n                i = Number;\n                break;\n              case Number:\n                i = Number;\n                break;\n              case Number:\n                i = Number;\n                break;\n              case Number:\n                i = Number;\n                break;\n              case Number:\n                i = Number;\n                break;\n              case Number:\n                i = Number;\n                break;\n              default:\n                break;\n              }\n              switch (HIDWORD(v65) * v68) {\n              case Number:\n                j = Number;\n                break;\n              case Number:\n                j = Number;\n                break;\n              case Number:\n                j = Number;\n                break;\n              case Number:\n                j = Number;\n                break;\n              case Number:\n                j = Number;\n                break;\n              case Number:\n                j = Number;\n                break;\n              default:\n                break;\n              }\n              switch ((int)v65 * v67) {\n              case Number:\n                k = Number;\n                break;\n              case Number:\n                k = Number;\n                break;\n              case Number:\n                k = Number;\n                break;\n              case Number:\n                k = Number;\n                break;\n              case Number:\n                k = Number;\n                break;\n              case Number:\n                k = Number;\n                break;\n              default:\n                break;\n              }\n              *a1 = i;\n              *a2 = j;\n              result = (__int64)a3;\n              *a3 = k;\n            }\n          }\n        }\n      }\n    }\n  }\n  return result;\n}", "code_t": "void __cdecl nifti_dmat44_to_orientation(nifti_dmat44 <span class=\"supfact\">R</span>,\n                                         int *icod, int *jcod, int *kcod) {\n  nifti_dmat33 v4;\n  nifti_dmat33 <span class=\"supfact\">M</span>;\n  nifti_dmat33 <span class=\"supfact\">Q</span>;\n  nifti_dmat33 <span class=\"supfact\">P</span>;\n  double detP;\n  double detQ;\n  double val;\n  double zi;\n  double yi;\n  double xi;\n  double vbest;\n  unsigned __int64 rbest;\n  int pbest;\n  int kbest;\n  int jbest;\n  int ibest;\n  int r;\n  int q;\n  int p;\n  int k;\n  int j;\n  int i;\n  double zk;\n  double zj;\n  double yk;\n  double yj;\n  double xk;\n  double xj;\n  k = Number;\n  if (icod) {\n    if (jcod) {\n      if (kcod) {\n        *kcod = Number;\n        *jcod = *kcod;\n        *icod = *jcod;\n        xj = <span class=\"supfact\">R</span>.m[Number][Number];\n        xi = <span class=\"supfact\">R</span>.m[Number][Number];\n        xk = <span class=\"supfact\">R</span>.m[Number][Number];\n        yj = <span class=\"supfact\">R</span>.m[Number][Number];\n        yi = <span class=\"supfact\">R</span>.m[Number][Number];\n        yk = <span class=\"supfact\">R</span>.m[Number][Number];\n        zj = <span class=\"supfact\">R</span>.m[Number][Number];\n        zi = <span class=\"supfact\">R</span>.m[Number][Number];\n        zk = <span class=\"supfact\">R</span>.m[Number][Number];\n        val = sqrt(<span class=\"supfact\">R</span>.m[Number][Number] *\n                       <span class=\"supfact\">R</span>.m[Number][Number] +\n                   <span class=\"supfact\">R</span>.m[Number][Number] *\n                       <span class=\"supfact\">R</span>.m[Number][Number] +\n                   <span class=\"supfact\">R</span>.m[Number][Number] *\n                       <span class=\"supfact\">R</span>.m[Number][Number]);\n        if (val != Number) {\n          xi = xi / val;\n          yi = yi / val;\n          zi = zi / val;\n          val = sqrt(zj * zj + xj * xj + yj * yj);\n          if (val != Number) {\n            xj = xj / val;\n            yj = yj / val;\n            zj = zj / val;\n            val = zi * zj + xi * xj + yi * yj;\n            if (fabs(val) > Number) {\n              xj = xj - val * xi;\n              yj = yj - val * yi;\n              zj = zj - val * zi;\n              val = sqrt(zj * zj + xj * xj + yj * yj);\n              if (val == Number)\n                return;\n              xj = xj / val;\n              yj = yj / val;\n              zj = zj / val;\n            }\n            val = sqrt(zk * zk + xk * xk + yk * yk);\n            if (val == Number) {\n              xk = yi * zj - zi * yj;\n              yk = zi * xj - zj * xi;\n              zk = xi * yj - yi * xj;\n            } else {\n              xk = xk / val;\n              yk = yk / val;\n              zk = zk / val;\n            }\n            val = zi * zk + xi * xk + yi * yk;\n            if (fabs(val) > Number) {\n              xk = xk - val * xi;\n              yk = yk - val * yi;\n              zk = zk - val * zi;\n              val = sqrt(zk * zk + xk * xk + yk * yk);\n              if (val == Number)\n                return;\n              xk = xk / val;\n              yk = yk / val;\n              zk = zk / val;\n            }\n            val = zj * zk + xj * xk + yj * yk;\n            if (fabs(val) > Number) {\n              xk = xk - val * xj;\n              yk = yk - val * yj;\n              zk = zk - val * zj;\n              val = sqrt(zk * zk + xk * xk + yk * yk);\n              if (val == Number)\n                return;\n              xk = xk / val;\n              yk = yk / val;\n              zk = zk / val;\n            }\n            <span class=\"supfact\">Q</span>.m[Number][Number] = xi;\n            <span class=\"supfact\">Q</span>.m[Number][Number] = xj;\n            <span class=\"supfact\">Q</span>.m[Number][Number] = xk;\n            <span class=\"supfact\">Q</span>.m[Number][Number] = yi;\n            <span class=\"supfact\">Q</span>.m[Number][Number] = yj;\n            <span class=\"supfact\">Q</span>.m[Number][Number] = yk;\n            <span class=\"supfact\">Q</span>.m[Number][Number] = zi;\n            <span class=\"supfact\">Q</span>.m[Number][Number] = zj;\n            <span class=\"supfact\">Q</span>.m[Number][Number] = zk;\n            v4.m[Number][Number] = zk;\n            v4.m[Number][Number] = zj;\n            v4.m[Number][Number] = zi;\n            v4.m[Number][Number] = yk;\n            v4.m[Number][Number] = yj;\n            v4.m[Number][Number] = yi;\n            v4.m[Number][Number] = xk;\n            v4.m[Number][Number] = xj;\n            v4.m[Number][Number] = xi;\n            detQ = nifti_dmat33_determ(v4);\n            if (detQ != Number) {\n              vbest = Number;\n              rbest = Number;\n              pbest = Number;\n              ibest = Number;\n              jbest = Number;\n              kbest = Number;\n              for (i = Number; i <= Number; ++i) {\n                for (j = Number; j <= Number; ++j) {\n                  if (i != j) {\n                    for (k = Number; k <= Number; ++k) {\n                      if (i != k && j != k) {\n                        *(_OWORD *)&<span class=\"supfact\">P</span>.m[Number][Number] =\n                            Number;\n                        <span class=\"supfact\">P</span>.m[Number][Number] = Number;\n                        *(_OWORD *)&<span class=\"supfact\">P</span>.m[Number][Number] =\n                            Number;\n                        <span class=\"supfact\">P</span>.m[Number][Number] = Number;\n                        *(_OWORD *)&<span class=\"supfact\">P</span>.m[Number][Number] =\n                            Number;\n                        <span class=\"supfact\">P</span>.m[Number][Number] = Number;\n                        for (p = Number; p <= Number; p += Number) {\n                          for (q = Number; q <= Number; q += Number) {\n                            for (r = Number; r <= Number; r += Number) {\n                              <span class=\"supfact\">P</span>.m[Number][i - Number] =\n                                  (double)p;\n                              <span class=\"supfact\">P</span>.m[Number][j + Number] =\n                                  (double)q;\n                              <span class=\"supfact\">P</span>.m[Number][k + Number] =\n                                  (double)r;\n                              detP = nifti_dmat33_determ(<span class=\"supfact\">P</span>);\n                              if (detP * detQ > Number) {\n                                nifti_dmat33_mul(&<span class=\"supfact\">M</span>,\n                                                 <span class=\"supfact\">P</span>,\n                                                 <span class=\"supfact\">Q</span>);\n                                val = <span class=\"supfact\">M</span>.m[Number][Number] +\n                                      <span class=\"supfact\">M</span>.m[Number][Number] +\n                                      <span class=\"supfact\">M</span>.m[Number][Number];\n                                if (val > vbest) {\n                                  vbest = val;\n                                  ibest = i;\n                                  jbest = j;\n                                  kbest = k;\n                                  pbest = p;\n                                  rbest = __PAIR64__(q, r);\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              switch (pbest * ibest) {\n              case Number:\n                i = Number;\n                break;\n              case Number:\n                i = Number;\n                break;\n              case Number:\n                i = Number;\n                break;\n              case Number:\n                i = Number;\n                break;\n              case Number:\n                i = Number;\n                break;\n              case Number:\n                i = Number;\n                break;\n              default:\n                break;\n              }\n              switch (HIDWORD(rbest) * jbest) {\n              case Number:\n                j = Number;\n                break;\n              case Number:\n                j = Number;\n                break;\n              case Number:\n                j = Number;\n                break;\n              case Number:\n                j = Number;\n                break;\n              case Number:\n                j = Number;\n                break;\n              case Number:\n                j = Number;\n                break;\n              default:\n                break;\n              }\n              switch ((int)rbest * kbest) {\n              case Number:\n                k = Number;\n                break;\n              case Number:\n                k = Number;\n                break;\n              case Number:\n                k = Number;\n                break;\n              case Number:\n                k = Number;\n                break;\n              case Number:\n                k = Number;\n                break;\n              case Number:\n                k = Number;\n                break;\n              default:\n                break;\n              }\n              *icod = i;\n              *jcod = j;\n              *kcod = k;\n            }\n          }\n        }\n      }\n    }\n  }\n}", "var": [{"name": "a15", "type": "__unk__", "pred_name": "__unk__", "ref_name": "R", "ref_type": "struct nifti_dmat44 { double[4][4] m; }"}, {"name": "v37", "type": "double[4]", "pred_name": "__unk__", "ref_name": "M", "ref_type": "struct nifti_dmat33 { double[3][3] m; }"}, {"name": "v40", "type": "disappear", "pred_name": "", "ref_name": "Q", "ref_type": "struct nifti_dmat33 { double[3][3] m; }"}], "body_in_train": false}, {"repo_owner": "postgrespro", "repo_name": "postgres_cluster", "path": "postgrespro/postgres_cluster/13f0814227d170a9790a3c5ec3e28b7522c34e12b8acfc1bade07c173fd9f620", "path_in_repo": "postgrespro/postgres_cluster//src/interfaces/ecpg/ecpglib/libecpg.so.6.8", "objdump": "0000000000013299 <get_home_path>:\n   13299:\t55                   \tpush   %rbp\n   1329a:\t48 89 e5             \tmov    %rsp,%rbp\n   1329d:\t48 81 ec 50 20 00 00 \tsub    $0x2050,%rsp\n   132a4:\t48 89 bd b8 df ff ff \tmov    %rdi,-0x2048(%rbp)\n   132ab:\t48 c7 85 c8 df ff ff \tmovq   $0x0,-0x2038(%rbp)\n   132b2:\t00 00 00 00 \n   132b6:\te8 85 ff fe ff       \tcallq  3240 <geteuid@plt>\n   132bb:\t89 c7                \tmov    %eax,%edi\n   132bd:\t48 8d 8d c8 df ff ff \tlea    -0x2038(%rbp),%rcx\n   132c4:\t48 8d 95 00 e0 ff ff \tlea    -0x2000(%rbp),%rdx\n   132cb:\t48 8d 85 d0 df ff ff \tlea    -0x2030(%rbp),%rax\n   132d2:\t49 89 c8             \tmov    %rcx,%r8\n   132d5:\tb9 00 20 00 00       \tmov    $0x2000,%ecx\n   132da:\t48 89 c6             \tmov    %rax,%rsi\n   132dd:\te8 33 05 00 00       \tcallq  13815 <pqGetpwuid>\n   132e2:\t48 8b 85 c8 df ff ff \tmov    -0x2038(%rbp),%rax\n   132e9:\t48 85 c0             \ttest   %rax,%rax\n   132ec:\t75 07                \tjne    132f5 <get_home_path+0x5c>\n   132ee:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   132f3:\teb 27                \tjmp    1331c <get_home_path+0x83>\n   132f5:\t48 8b 85 c8 df ff ff \tmov    -0x2038(%rbp),%rax\n   132fc:\t48 8b 48 20          \tmov    0x20(%rax),%rcx\n   13300:\t48 8b 85 b8 df ff ff \tmov    -0x2048(%rbp),%rax\n   13307:\tba 00 04 00 00       \tmov    $0x400,%edx\n   1330c:\t48 89 ce             \tmov    %rcx,%rsi\n   1330f:\t48 89 c7             \tmov    %rax,%rdi\n   13312:\te8 39 04 00 00       \tcallq  13750 <strlcpy>\n   13317:\tb8 01 00 00 00       \tmov    $0x1,%eax\n   1331c:\tc9                   \tleaveq \n   1331d:\tc3                   \tretq   ", "code_s": "__int64 __fastcall get_home_path(__int64 a1) {\n  __uid_t v1;\n  __int64 v3;\n  char v4[Number];\n  char v5[Number];\n  v3 = Number L;\n  v1 = geteuid();\n  pqGetpwuid(v1, v4, v5, Number, &v3);\n  if (!v3)\n    return Number L;\n  strlcpy(a1, *(_QWORD *)(v3 + Number), Number L);\n  return Number L;\n}", "code_t": "bool __cdecl get_home_path(char *ret_path) {\n  uid_t v1;\n  passwd *pwd;\n  passwd <span class=\"supfact\">pwdstr</span>;\n  char pwdbuf[Number];\n  pwd = Number L;\n  v1 = geteuid();\n  pqGetpwuid(v1, &<span class=\"supfact\">pwdstr</span>, pwdbuf, Number, &pwd);\n  if (!pwd)\n    return Number;\n  strlcpy(ret_path, pwd->pw_dir, Number);\n  return Number;\n}", "var": [{"name": "v4", "type": "struct passwd { char * pw_name; char * pw_passwd; __uid_t pw_uid; __gid_t pw_gid; char * pw_gecos; char * pw_dir; char * pw_shell; }", "pred_name": "pwdstr", "ref_name": "pwdstr", "ref_type": "struct passwd { char * pw_name; char * pw_passwd; __uid_t pw_uid; __gid_t pw_gid; char * pw_gecos; char * pw_dir; char * pw_shell; }"}], "body_in_train": false}, {"repo_owner": "AlexanderVangelov", "repo_name": "pjsip", "path": "AlexanderVangelov/pjsip/b91df0dd35cf5646c5a75dc0470b01a9002de38c1a4bbbd76c40360aac3725bd", "path_in_repo": "AlexanderVangelov/pjsip//pjlib/bin/pjlib-test-x86_64-unknown-linux-gnu", "objdump": "000000000042f954 <pj_sockaddr_parse2>:\n  42f954:\t55                   \tpush   %rbp\n  42f955:\t48 89 e5             \tmov    %rsp,%rbp\n  42f958:\t48 81 ec b0 00 00 00 \tsub    $0xb0,%rsp\n  42f95f:\t89 bd 7c ff ff ff    \tmov    %edi,-0x84(%rbp)\n  42f965:\t89 b5 78 ff ff ff    \tmov    %esi,-0x88(%rbp)\n  42f96b:\t48 89 95 70 ff ff ff \tmov    %rdx,-0x90(%rbp)\n  42f972:\t48 89 8d 68 ff ff ff \tmov    %rcx,-0x98(%rbp)\n  42f979:\t4c 89 85 60 ff ff ff \tmov    %r8,-0xa0(%rbp)\n  42f980:\t4c 89 8d 58 ff ff ff \tmov    %r9,-0xa8(%rbp)\n  42f987:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n  42f98e:\t48 8b 10             \tmov    (%rax),%rdx\n  42f991:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n  42f998:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  42f99c:\t48 01 d0             \tadd    %rdx,%rax\n  42f99f:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n  42f9a3:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n  42f9aa:\t00 \n  42f9ab:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n  42f9b2:\t0f b7 05 7b 16 01 00 \tmovzwl 0x1167b(%rip),%eax        # 441034 <PJ_AF_INET>\n  42f9b9:\t0f b7 c0             \tmovzwl %ax,%eax\n  42f9bc:\t39 85 7c ff ff ff    \tcmp    %eax,-0x84(%rbp)\n  42f9c2:\t74 24                \tje     42f9e8 <pj_sockaddr_parse2+0x94>\n  42f9c4:\t0f b7 05 6b 16 01 00 \tmovzwl 0x1166b(%rip),%eax        # 441036 <PJ_AF_INET6>\n  42f9cb:\t0f b7 c0             \tmovzwl %ax,%eax\n  42f9ce:\t39 85 7c ff ff ff    \tcmp    %eax,-0x84(%rbp)\n  42f9d4:\t74 12                \tje     42f9e8 <pj_sockaddr_parse2+0x94>\n  42f9d6:\t0f b7 05 53 16 01 00 \tmovzwl 0x11653(%rip),%eax        # 441030 <PJ_AF_UNSPEC>\n  42f9dd:\t0f b7 c0             \tmovzwl %ax,%eax\n  42f9e0:\t39 85 7c ff ff ff    \tcmp    %eax,-0x84(%rbp)\n  42f9e6:\t75 13                \tjne    42f9fb <pj_sockaddr_parse2+0xa7>\n  42f9e8:\t83 bd 78 ff ff ff 00 \tcmpl   $0x0,-0x88(%rbp)\n  42f9ef:\t75 0a                \tjne    42f9fb <pj_sockaddr_parse2+0xa7>\n  42f9f1:\t48 83 bd 70 ff ff ff \tcmpq   $0x0,-0x90(%rbp)\n  42f9f8:\t00 \n  42f9f9:\t75 6c                \tjne    42fa67 <pj_sockaddr_parse2+0x113>\n  42f9fb:\t0f b7 05 32 16 01 00 \tmovzwl 0x11632(%rip),%eax        # 441034 <PJ_AF_INET>\n  42fa02:\t0f b7 c0             \tmovzwl %ax,%eax\n  42fa05:\t39 85 7c ff ff ff    \tcmp    %eax,-0x84(%rbp)\n  42fa0b:\t74 24                \tje     42fa31 <pj_sockaddr_parse2+0xdd>\n  42fa0d:\t0f b7 05 22 16 01 00 \tmovzwl 0x11622(%rip),%eax        # 441036 <PJ_AF_INET6>\n  42fa14:\t0f b7 c0             \tmovzwl %ax,%eax\n  42fa17:\t39 85 7c ff ff ff    \tcmp    %eax,-0x84(%rbp)\n  42fa1d:\t74 12                \tje     42fa31 <pj_sockaddr_parse2+0xdd>\n  42fa1f:\t0f b7 05 0a 16 01 00 \tmovzwl 0x1160a(%rip),%eax        # 441030 <PJ_AF_UNSPEC>\n  42fa26:\t0f b7 c0             \tmovzwl %ax,%eax\n  42fa29:\t39 85 7c ff ff ff    \tcmp    %eax,-0x84(%rbp)\n  42fa2f:\t75 13                \tjne    42fa44 <pj_sockaddr_parse2+0xf0>\n  42fa31:\t83 bd 78 ff ff ff 00 \tcmpl   $0x0,-0x88(%rbp)\n  42fa38:\t75 0a                \tjne    42fa44 <pj_sockaddr_parse2+0xf0>\n  42fa3a:\t48 83 bd 70 ff ff ff \tcmpq   $0x0,-0x90(%rbp)\n  42fa41:\t00 \n  42fa42:\t75 19                \tjne    42fa5d <pj_sockaddr_parse2+0x109>\n  42fa44:\tb9 30 2b 44 00       \tmov    $0x442b30,%ecx\n  42fa49:\tba 01 02 00 00       \tmov    $0x201,%edx\n  42fa4e:\tbe c2 27 44 00       \tmov    $0x4427c2,%esi\n  42fa53:\tbf 98 28 44 00       \tmov    $0x442898,%edi\n  42fa58:\te8 f3 56 fd ff       \tcallq  405150 <__assert_fail@plt>\n  42fa5d:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n  42fa62:\te9 fc 03 00 00       \tjmpq   42fe63 <pj_sockaddr_parse2+0x50f>\n  42fa67:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n  42fa6e:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  42fa72:\t48 85 c0             \ttest   %rax,%rax\n  42fa75:\t74 0f                \tje     42fa86 <pj_sockaddr_parse2+0x132>\n  42fa77:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n  42fa7e:\t48 8b 00             \tmov    (%rax),%rax\n  42fa81:\t48 85 c0             \ttest   %rax,%rax\n  42fa84:\t75 56                \tjne    42fadc <pj_sockaddr_parse2+0x188>\n  42fa86:\t48 83 bd 68 ff ff ff \tcmpq   $0x0,-0x98(%rbp)\n  42fa8d:\t00 \n  42fa8e:\t74 0f                \tje     42fa9f <pj_sockaddr_parse2+0x14b>\n  42fa90:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n  42fa97:\t48 c7 40 08 00 00 00 \tmovq   $0x0,0x8(%rax)\n  42fa9e:\t00 \n  42fa9f:\t48 83 bd 60 ff ff ff \tcmpq   $0x0,-0xa0(%rbp)\n  42faa6:\t00 \n  42faa7:\t74 0c                \tje     42fab5 <pj_sockaddr_parse2+0x161>\n  42faa9:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n  42fab0:\t66 c7 00 00 00       \tmovw   $0x0,(%rax)\n  42fab5:\t48 83 bd 58 ff ff ff \tcmpq   $0x0,-0xa8(%rbp)\n  42fabc:\t00 \n  42fabd:\t74 13                \tje     42fad2 <pj_sockaddr_parse2+0x17e>\n  42fabf:\t0f b7 05 6e 15 01 00 \tmovzwl 0x1156e(%rip),%eax        # 441034 <PJ_AF_INET>\n  42fac6:\t0f b7 d0             \tmovzwl %ax,%edx\n  42fac9:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n  42fad0:\t89 10                \tmov    %edx,(%rax)\n  42fad2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  42fad7:\te9 87 03 00 00       \tjmpq   42fe63 <pj_sockaddr_parse2+0x50f>\n  42fadc:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n  42fae3:\t48 8b 00             \tmov    (%rax),%rax\n  42fae6:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  42faea:\teb 1c                \tjmp    42fb08 <pj_sockaddr_parse2+0x1b4>\n  42faec:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  42faf0:\t0f b6 00             \tmovzbl (%rax),%eax\n  42faf3:\t3c 3a                \tcmp    $0x3a,%al\n  42faf5:\t75 0c                \tjne    42fb03 <pj_sockaddr_parse2+0x1af>\n  42faf7:\t83 45 f4 01          \taddl   $0x1,-0xc(%rbp)\n  42fafb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  42faff:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  42fb03:\t48 83 45 e8 01       \taddq   $0x1,-0x18(%rbp)\n  42fb08:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  42fb0c:\t48 3b 45 d0          \tcmp    -0x30(%rbp),%rax\n  42fb10:\t75 da                \tjne    42faec <pj_sockaddr_parse2+0x198>\n  42fb12:\t0f b7 05 17 15 01 00 \tmovzwl 0x11517(%rip),%eax        # 441030 <PJ_AF_UNSPEC>\n  42fb19:\t0f b7 c0             \tmovzwl %ax,%eax\n  42fb1c:\t39 85 7c ff ff ff    \tcmp    %eax,-0x84(%rbp)\n  42fb22:\t75 2a                \tjne    42fb4e <pj_sockaddr_parse2+0x1fa>\n  42fb24:\t83 7d f4 01          \tcmpl   $0x1,-0xc(%rbp)\n  42fb28:\t76 12                \tjbe    42fb3c <pj_sockaddr_parse2+0x1e8>\n  42fb2a:\t0f b7 05 05 15 01 00 \tmovzwl 0x11505(%rip),%eax        # 441036 <PJ_AF_INET6>\n  42fb31:\t0f b7 c0             \tmovzwl %ax,%eax\n  42fb34:\t89 85 7c ff ff ff    \tmov    %eax,-0x84(%rbp)\n  42fb3a:\teb 34                \tjmp    42fb70 <pj_sockaddr_parse2+0x21c>\n  42fb3c:\t0f b7 05 f1 14 01 00 \tmovzwl 0x114f1(%rip),%eax        # 441034 <PJ_AF_INET>\n  42fb43:\t0f b7 c0             \tmovzwl %ax,%eax\n  42fb46:\t89 85 7c ff ff ff    \tmov    %eax,-0x84(%rbp)\n  42fb4c:\teb 22                \tjmp    42fb70 <pj_sockaddr_parse2+0x21c>\n  42fb4e:\t0f b7 05 df 14 01 00 \tmovzwl 0x114df(%rip),%eax        # 441034 <PJ_AF_INET>\n  42fb55:\t0f b7 c0             \tmovzwl %ax,%eax\n  42fb58:\t39 85 7c ff ff ff    \tcmp    %eax,-0x84(%rbp)\n  42fb5e:\t75 10                \tjne    42fb70 <pj_sockaddr_parse2+0x21c>\n  42fb60:\t83 7d f4 01          \tcmpl   $0x1,-0xc(%rbp)\n  42fb64:\t76 0a                \tjbe    42fb70 <pj_sockaddr_parse2+0x21c>\n  42fb66:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n  42fb6b:\te9 f3 02 00 00       \tjmpq   42fe63 <pj_sockaddr_parse2+0x50f>\n  42fb70:\t48 83 bd 58 ff ff ff \tcmpq   $0x0,-0xa8(%rbp)\n  42fb77:\t00 \n  42fb78:\t74 0f                \tje     42fb89 <pj_sockaddr_parse2+0x235>\n  42fb7a:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n  42fb81:\t8b 95 7c ff ff ff    \tmov    -0x84(%rbp),%edx\n  42fb87:\t89 10                \tmov    %edx,(%rax)\n  42fb89:\t0f b7 05 a4 14 01 00 \tmovzwl 0x114a4(%rip),%eax        # 441034 <PJ_AF_INET>\n  42fb90:\t0f b7 c0             \tmovzwl %ax,%eax\n  42fb93:\t39 85 7c ff ff ff    \tcmp    %eax,-0x84(%rbp)\n  42fb99:\t0f 85 11 01 00 00    \tjne    42fcb0 <pj_sockaddr_parse2+0x35c>\n  42fb9f:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n  42fba6:\t48 8b 00             \tmov    (%rax),%rax\n  42fba9:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n  42fbad:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n  42fbb2:\t0f 84 9d 00 00 00    \tje     42fc55 <pj_sockaddr_parse2+0x301>\n  42fbb8:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n  42fbbf:\t48 8b 00             \tmov    (%rax),%rax\n  42fbc2:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  42fbc6:\t48 29 c2             \tsub    %rax,%rdx\n  42fbc9:\t48 89 d0             \tmov    %rdx,%rax\n  42fbcc:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n  42fbd0:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  42fbd4:\t48 83 c0 01          \tadd    $0x1,%rax\n  42fbd8:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n  42fbdc:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  42fbe0:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n  42fbe4:\t48 29 c2             \tsub    %rax,%rdx\n  42fbe7:\t48 89 d0             \tmov    %rdx,%rax\n  42fbea:\t48 89 45 a8          \tmov    %rax,-0x58(%rbp)\n  42fbee:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n  42fbf5:\teb 2b                \tjmp    42fc22 <pj_sockaddr_parse2+0x2ce>\n  42fbf7:\t48 8b 55 a0          \tmov    -0x60(%rbp),%rdx\n  42fbfb:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n  42fbfe:\t48 98                \tcltq   \n  42fc00:\t48 01 d0             \tadd    %rdx,%rax\n  42fc03:\t0f b6 00             \tmovzbl (%rax),%eax\n  42fc06:\t0f b6 c0             \tmovzbl %al,%eax\n  42fc09:\t89 c7                \tmov    %eax,%edi\n  42fc0b:\te8 b6 ee ff ff       \tcallq  42eac6 <pj_isdigit>\n  42fc10:\t85 c0                \ttest   %eax,%eax\n  42fc12:\t75 0a                \tjne    42fc1e <pj_sockaddr_parse2+0x2ca>\n  42fc14:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n  42fc19:\te9 45 02 00 00       \tjmpq   42fe63 <pj_sockaddr_parse2+0x50f>\n  42fc1e:\t83 45 dc 01          \taddl   $0x1,-0x24(%rbp)\n  42fc22:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n  42fc25:\t48 63 d0             \tmovslq %eax,%rdx\n  42fc28:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  42fc2c:\t48 39 c2             \tcmp    %rax,%rdx\n  42fc2f:\t7c c6                \tjl     42fbf7 <pj_sockaddr_parse2+0x2a3>\n  42fc31:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  42fc35:\t48 89 c7             \tmov    %rax,%rdi\n  42fc38:\te8 f9 93 00 00       \tcallq  439036 <pj_strtoul>\n  42fc3d:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n  42fc41:\t48 81 7d e0 ff ff 00 \tcmpq   $0xffff,-0x20(%rbp)\n  42fc48:\t00 \n  42fc49:\t76 21                \tjbe    42fc6c <pj_sockaddr_parse2+0x318>\n  42fc4b:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n  42fc50:\te9 0e 02 00 00       \tjmpq   42fe63 <pj_sockaddr_parse2+0x50f>\n  42fc55:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n  42fc5c:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  42fc60:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n  42fc64:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n  42fc6b:\t00 \n  42fc6c:\t48 83 bd 68 ff ff ff \tcmpq   $0x0,-0x98(%rbp)\n  42fc73:\t00 \n  42fc74:\t74 16                \tje     42fc8c <pj_sockaddr_parse2+0x338>\n  42fc76:\t48 8b 8d 68 ff ff ff \tmov    -0x98(%rbp),%rcx\n  42fc7d:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  42fc81:\t48 8b 55 b8          \tmov    -0x48(%rbp),%rdx\n  42fc85:\t48 89 01             \tmov    %rax,(%rcx)\n  42fc88:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n  42fc8c:\t48 83 bd 60 ff ff ff \tcmpq   $0x0,-0xa0(%rbp)\n  42fc93:\t00 \n  42fc94:\t74 10                \tje     42fca6 <pj_sockaddr_parse2+0x352>\n  42fc96:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  42fc9a:\t89 c2                \tmov    %eax,%edx\n  42fc9c:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n  42fca3:\t66 89 10             \tmov    %dx,(%rax)\n  42fca6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  42fcab:\te9 b3 01 00 00       \tjmpq   42fe63 <pj_sockaddr_parse2+0x50f>\n  42fcb0:\t0f b7 05 7f 13 01 00 \tmovzwl 0x1137f(%rip),%eax        # 441036 <PJ_AF_INET6>\n  42fcb7:\t0f b7 c0             \tmovzwl %ax,%eax\n  42fcba:\t39 85 7c ff ff ff    \tcmp    %eax,-0x84(%rbp)\n  42fcc0:\t0f 85 98 01 00 00    \tjne    42fe5e <pj_sockaddr_parse2+0x50a>\n  42fcc6:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n  42fccd:\t48 8b 00             \tmov    (%rax),%rax\n  42fcd0:\t0f b6 00             \tmovzbl (%rax),%eax\n  42fcd3:\t3c 5b                \tcmp    $0x5b,%al\n  42fcd5:\t0f 85 40 01 00 00    \tjne    42fe1b <pj_sockaddr_parse2+0x4c7>\n  42fcdb:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n  42fce0:\t75 0a                \tjne    42fcec <pj_sockaddr_parse2+0x398>\n  42fce2:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n  42fce7:\te9 77 01 00 00       \tjmpq   42fe63 <pj_sockaddr_parse2+0x50f>\n  42fcec:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n  42fcf3:\tbe 5d 00 00 00       \tmov    $0x5d,%esi\n  42fcf8:\t48 89 c7             \tmov    %rax,%rdi\n  42fcfb:\te8 f2 ed ff ff       \tcallq  42eaf2 <pj_strchr>\n  42fd00:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n  42fd04:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n  42fd09:\t75 0a                \tjne    42fd15 <pj_sockaddr_parse2+0x3c1>\n  42fd0b:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n  42fd10:\te9 4e 01 00 00       \tjmpq   42fe63 <pj_sockaddr_parse2+0x50f>\n  42fd15:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n  42fd1c:\t48 8b 00             \tmov    (%rax),%rax\n  42fd1f:\t48 83 c0 01          \tadd    $0x1,%rax\n  42fd23:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n  42fd27:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  42fd2b:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n  42fd2f:\t48 29 c2             \tsub    %rax,%rdx\n  42fd32:\t48 89 d0             \tmov    %rdx,%rax\n  42fd35:\t48 89 45 98          \tmov    %rax,-0x68(%rbp)\n  42fd39:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  42fd3d:\t48 3b 45 c8          \tcmp    -0x38(%rbp),%rax\n  42fd41:\t73 12                \tjae    42fd55 <pj_sockaddr_parse2+0x401>\n  42fd43:\t48 c7 45 80 00 00 00 \tmovq   $0x0,-0x80(%rbp)\n  42fd4a:\t00 \n  42fd4b:\t48 c7 45 88 00 00 00 \tmovq   $0x0,-0x78(%rbp)\n  42fd52:\t00 \n  42fd53:\teb 1e                \tjmp    42fd73 <pj_sockaddr_parse2+0x41f>\n  42fd55:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  42fd59:\t48 83 c0 01          \tadd    $0x1,%rax\n  42fd5d:\t48 89 45 80          \tmov    %rax,-0x80(%rbp)\n  42fd61:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n  42fd65:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n  42fd69:\t48 29 c2             \tsub    %rax,%rdx\n  42fd6c:\t48 89 d0             \tmov    %rdx,%rax\n  42fd6f:\t48 89 45 88          \tmov    %rax,-0x78(%rbp)\n  42fd73:\tc7 45 d8 00 00 00 00 \tmovl   $0x0,-0x28(%rbp)\n  42fd7a:\teb 2b                \tjmp    42fda7 <pj_sockaddr_parse2+0x453>\n  42fd7c:\t48 8b 55 80          \tmov    -0x80(%rbp),%rdx\n  42fd80:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n  42fd83:\t48 98                \tcltq   \n  42fd85:\t48 01 d0             \tadd    %rdx,%rax\n  42fd88:\t0f b6 00             \tmovzbl (%rax),%eax\n  42fd8b:\t0f b6 c0             \tmovzbl %al,%eax\n  42fd8e:\t89 c7                \tmov    %eax,%edi\n  42fd90:\te8 31 ed ff ff       \tcallq  42eac6 <pj_isdigit>\n  42fd95:\t85 c0                \ttest   %eax,%eax\n  42fd97:\t75 0a                \tjne    42fda3 <pj_sockaddr_parse2+0x44f>\n  42fd99:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n  42fd9e:\te9 c0 00 00 00       \tjmpq   42fe63 <pj_sockaddr_parse2+0x50f>\n  42fda3:\t83 45 d8 01          \taddl   $0x1,-0x28(%rbp)\n  42fda7:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n  42fdaa:\t48 63 d0             \tmovslq %eax,%rdx\n  42fdad:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n  42fdb1:\t48 39 c2             \tcmp    %rax,%rdx\n  42fdb4:\t7c c6                \tjl     42fd7c <pj_sockaddr_parse2+0x428>\n  42fdb6:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n  42fdba:\t48 89 c7             \tmov    %rax,%rdi\n  42fdbd:\te8 74 92 00 00       \tcallq  439036 <pj_strtoul>\n  42fdc2:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n  42fdc6:\t48 81 7d c0 ff ff 00 \tcmpq   $0xffff,-0x40(%rbp)\n  42fdcd:\t00 \n  42fdce:\t76 0a                \tjbe    42fdda <pj_sockaddr_parse2+0x486>\n  42fdd0:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n  42fdd5:\te9 89 00 00 00       \tjmpq   42fe63 <pj_sockaddr_parse2+0x50f>\n  42fdda:\t48 83 bd 68 ff ff ff \tcmpq   $0x0,-0x98(%rbp)\n  42fde1:\t00 \n  42fde2:\t74 16                \tje     42fdfa <pj_sockaddr_parse2+0x4a6>\n  42fde4:\t48 8b 8d 68 ff ff ff \tmov    -0x98(%rbp),%rcx\n  42fdeb:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  42fdef:\t48 8b 55 98          \tmov    -0x68(%rbp),%rdx\n  42fdf3:\t48 89 01             \tmov    %rax,(%rcx)\n  42fdf6:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n  42fdfa:\t48 83 bd 60 ff ff ff \tcmpq   $0x0,-0xa0(%rbp)\n  42fe01:\t00 \n  42fe02:\t74 10                \tje     42fe14 <pj_sockaddr_parse2+0x4c0>\n  42fe04:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  42fe08:\t89 c2                \tmov    %eax,%edx\n  42fe0a:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n  42fe11:\t66 89 10             \tmov    %dx,(%rax)\n  42fe14:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  42fe19:\teb 48                \tjmp    42fe63 <pj_sockaddr_parse2+0x50f>\n  42fe1b:\t48 83 bd 68 ff ff ff \tcmpq   $0x0,-0x98(%rbp)\n  42fe22:\t00 \n  42fe23:\t74 1c                \tje     42fe41 <pj_sockaddr_parse2+0x4ed>\n  42fe25:\t48 8b 8d 68 ff ff ff \tmov    -0x98(%rbp),%rcx\n  42fe2c:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n  42fe33:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n  42fe37:\t48 8b 00             \tmov    (%rax),%rax\n  42fe3a:\t48 89 01             \tmov    %rax,(%rcx)\n  42fe3d:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n  42fe41:\t48 83 bd 60 ff ff ff \tcmpq   $0x0,-0xa0(%rbp)\n  42fe48:\t00 \n  42fe49:\t74 0c                \tje     42fe57 <pj_sockaddr_parse2+0x503>\n  42fe4b:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n  42fe52:\t66 c7 00 00 00       \tmovw   $0x0,(%rax)\n  42fe57:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  42fe5c:\teb 05                \tjmp    42fe63 <pj_sockaddr_parse2+0x50f>\n  42fe5e:\tb8 86 11 01 00       \tmov    $0x11186,%eax\n  42fe63:\tc9                   \tleaveq \n  42fe64:\tc3                   \tretq   ", "code_s": "__int64 __fastcall pj_sockaddr_parse2(int a1, int a2, _QWORD *a3, _QWORD *a4,\n                                      _WORD *a5, _DWORD *a6) {\n  __int64 result;\n  __int64 v7;\n  __int64 v8;\n  __int64 v9;\n  int v13;\n  _BYTE *v14;\n  __int64 v15;\n  __int64 v16;\n  _BYTE *v17;\n  _BYTE *v18;\n  __int64 v19;\n  _BYTE *v20;\n  _BYTE *v21;\n  unsigned __int64 v22;\n  _BYTE *v23;\n  _BYTE *v24;\n  int k;\n  int j;\n  unsigned __int64 v27;\n  _BYTE *i;\n  unsigned int v29;\n  _BYTE *v30;\n  v13 = a1;\n  v24 = (_BYTE *)(*a3 + a3[Number]);\n  v30 = Number L;\n  v29 = Number;\n  if ((a1 == (unsigned __int16)PJ_AF_INET ||\n       a1 == (unsigned __int16)PJ_AF_INET6 ||\n       a1 == (unsigned __int16)PJ_AF_UNSPEC) &&\n      !a2 && a3) {\n    if (a3[Number] && *a3) {\n      for (i = (_BYTE *)*a3; i != v24; ++i) {\n        if (*i == Number) {\n          ++v29;\n          v30 = i;\n        }\n      }\n      if (a1 == (unsigned __int16)PJ_AF_UNSPEC) {\n        if (v29 <= Number)\n          v13 = (unsigned __int16)PJ_AF_INET;\n        else\n          v13 = (unsigned __int16)PJ_AF_INET6;\n      } else if (a1 == (unsigned __int16)PJ_AF_INET && v29 > Number) {\n        return Number L;\n      }\n      if (a6)\n        *a6 = v13;\n      if (v13 == (unsigned __int16)PJ_AF_INET) {\n        v20 = (_BYTE *)*a3;\n        if (v30) {\n          v21 = &v30[-*a3];\n          v18 = v30 + Number;\n          v19 = v24 - (v30 + Number);\n          for (j = Number; j < v19; ++j) {\n            if (!(unsigned int)pj_isdigit_0(v18[j]))\n              return Number L;\n          }\n          v27 = pj_strtoul(&v18);\n          if (v27 > Number)\n            return Number L;\n        } else {\n          v21 = (_BYTE *)a3[Number];\n          v27 = Number L;\n        }\n        if (a4) {\n          v7 = (__int64)v21;\n          *a4 = v20;\n          a4[Number] = v7;\n        }\n        if (a5)\n          *a5 = v27;\n        result = Number L;\n      } else if (v13 == (unsigned __int16)PJ_AF_INET6) {\n        if (*(_BYTE *)*a3 == Number) {\n          if (v30) {\n            v23 = pj_strchr_0((__int64)a3, Number);\n            if (v23) {\n              v16 = *a3 + Number L;\n              v17 = &v23[-v16];\n              if (v30 >= v23) {\n                v14 = v30 + Number;\n                v15 = v24 - (v30 + Number);\n              } else {\n                v14 = Number L;\n                v15 = Number L;\n              }\n              for (k = Number; k < v15; ++k) {\n                if (!(unsigned int)pj_isdigit_0(v14[k]))\n                  return Number L;\n              }\n              v22 = pj_strtoul(&v14);\n              if (v22 <= Number) {\n                if (a4) {\n                  v8 = (__int64)v17;\n                  *a4 = v16;\n                  a4[Number] = v8;\n                }\n                if (a5)\n                  *a5 = v22;\n                result = Number L;\n              } else {\n                result = Number L;\n              }\n            } else {\n              result = Number L;\n            }\n          } else {\n            result = Number L;\n          }\n        } else {\n          if (a4) {\n            v9 = a3[Number];\n            *a4 = *a3;\n            a4[Number] = v9;\n          }\n          if (a5)\n            *a5 = Number;\n          result = Number L;\n        }\n      } else {\n        result = Number L;\n      }\n    } else {\n      if (a4)\n        a4[Number] = Number L;\n      if (a5)\n        *a5 = Number;\n      if (a6)\n        *a6 = (unsigned __int16)PJ_AF_INET;\n      result = Number L;\n    }\n  } else {\n    if (a1 != (unsigned __int16)PJ_AF_INET &&\n            a1 != (unsigned __int16)PJ_AF_INET6 &&\n            a1 != (unsigned __int16)PJ_AF_UNSPEC ||\n        a2 || !a3) {\n      __assert_fail(String, String, Number, String);\n    }\n    result = Number L;\n  }\n  return result;\n}", "code_t": "pj_status_t __cdecl pj_sockaddr_parse2(int af_0, unsigned int options,\n                                       const pj_str_t_0 *str,\n                                       pj_str_t_0 *p_hostpart,\n                                       pj_uint16_t *p_port, int *raf) {\n  pj_status_t result;\n  pj_ssize_t v7;\n  pj_ssize_t v8;\n  pj_ssize_t v9;\n  int af_0a;\n  pj_str_t_0 <span class=\"supfact\">port_part_0</span>;\n  pj_str_t_0 <span class=\"supfact\">hostpart_0</span>;\n  pj_str_t_0 <span class=\"supfact\">port_part</span>;\n  pj_str_t_0 <span class=\"supfact\">hostpart</span>;\n  unsigned __int64 port_0;\n  char *end_bracket;\n  const char *end;\n  int i_0;\n  int i;\n  unsigned __int64 port;\n  const char *p;\n  unsigned int colon_cnt;\n  const char *last_colon_pos;\n  af_0a = af_0;\n  end = &str->ptr[str->slen];\n  last_colon_pos = Number L;\n  colon_cnt = Number;\n  if ((af_0 == PJ_AF_INET || af_0 == PJ_AF_INET6 || af_0 == PJ_AF_UNSPEC) &&\n      !options && str) {\n    if (str->slen && str->ptr) {\n      for (p = str->ptr; p != end; ++p) {\n        if (*p == Number) {\n          ++colon_cnt;\n          last_colon_pos = p;\n        }\n      }\n      if (af_0 == PJ_AF_UNSPEC) {\n        if (colon_cnt <= Number)\n          af_0a = PJ_AF_INET;\n        else\n          af_0a = PJ_AF_INET6;\n      } else if (af_0 == PJ_AF_INET && colon_cnt > Number) {\n        return Number;\n      }\n      if (raf)\n        *raf = af_0a;\n      if (af_0a == PJ_AF_INET) {\n        <span class=\"supfact\">hostpart</span>.ptr = str->ptr;\n        if (last_colon_pos) {\n          <span class=\"supfact\">hostpart</span>.slen = last_colon_pos - str->ptr;\n          <span class=\"supfact\">port_part</span>.ptr = (char *)(last_colon_pos + Number);\n          <span class=\"supfact\">port_part</span>.slen = end - (last_colon_pos + Number);\n          for (i = Number; i < <span class=\"supfact\">port_part</span>.slen; ++i) {\n            if (!pj_isdigit_0(<span class=\"supfact\">port_part</span>.ptr[i]))\n              return Number;\n          }\n          port = pj_strtoul(&<span class=\"supfact\">port_part</span>);\n          if (port > Number)\n            return Number;\n        } else {\n          <span class=\"supfact\">hostpart</span>.slen = str->slen;\n          port = Number L;\n        }\n        if (p_hostpart) {\n          v7 = <span class=\"supfact\">hostpart</span>.slen;\n          p_hostpart->ptr = <span class=\"supfact\">hostpart</span>.ptr;\n          p_hostpart->slen = v7;\n        }\n        if (p_port)\n          *p_port = port;\n        result = Number;\n      } else if (af_0a == PJ_AF_INET6) {\n        if (*str->ptr == Number) {\n          if (last_colon_pos) {\n            end_bracket = pj_strchr_0(str, Number);\n            if (end_bracket) {\n              <span class=\"supfact\">hostpart_0</span>.ptr = str->ptr + Number;\n              <span class=\"supfact\">hostpart_0</span>.slen =\n                  end_bracket - <span class=\"supfact\">hostpart_0</span>.ptr;\n              if (last_colon_pos >= end_bracket) {\n                <span class=\"supfact\">port_part_0</span>.ptr =\n                    (char *)(last_colon_pos + Number);\n                <span class=\"supfact\">port_part_0</span>.slen =\n                    end - (last_colon_pos + Number);\n              } else {\n                <span class=\"supfact\">port_part_0</span>.ptr = Number L;\n                <span class=\"supfact\">port_part_0</span>.slen = Number L;\n              }\n              for (i_0 = Number; i_0 < <span class=\"supfact\">port_part_0</span>.slen;\n                   ++i_0) {\n                if (!pj_isdigit_0(<span class=\"supfact\">port_part_0</span>.ptr[i_0]))\n                  return Number;\n              }\n              port_0 = pj_strtoul(&<span class=\"supfact\">port_part_0</span>);\n              if (port_0 <= Number) {\n                if (p_hostpart) {\n                  v8 = <span class=\"supfact\">hostpart_0</span>.slen;\n                  p_hostpart->ptr = <span class=\"supfact\">hostpart_0</span>.ptr;\n                  p_hostpart->slen = v8;\n                }\n                if (p_port)\n                  *p_port = port_0;\n                result = Number;\n              } else {\n                result = Number;\n              }\n            } else {\n              result = Number;\n            }\n          } else {\n            result = Number;\n          }\n        } else {\n          if (p_hostpart) {\n            v9 = str->slen;\n            p_hostpart->ptr = str->ptr;\n            p_hostpart->slen = v9;\n          }\n          if (p_port)\n            *p_port = Number;\n          result = Number;\n        }\n      } else {\n        result = Number;\n      }\n    } else {\n      if (p_hostpart)\n        p_hostpart->slen = Number L;\n      if (p_port)\n        *p_port = Number;\n      if (raf)\n        *raf = PJ_AF_INET;\n      result = Number;\n    }\n  } else {\n    if (af_0 != PJ_AF_INET && af_0 != PJ_AF_INET6 && af_0 != PJ_AF_UNSPEC ||\n        options || !str)\n      __assert_fail(String, String, Number, String);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "v14", "type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }", "pred_name": "port_part_0", "ref_name": "port_part_0", "ref_type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }"}, {"name": "v16", "type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }", "pred_name": "hostpart_0", "ref_name": "hostpart_0", "ref_type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }"}, {"name": "v18", "type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }", "pred_name": "port_part", "ref_name": "port_part", "ref_type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }"}, {"name": "v20", "type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }", "pred_name": "hostpart", "ref_name": "hostpart", "ref_type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }"}], "body_in_train": false}, {"repo_owner": "sipwise", "repo_name": "kamailio", "path": "sipwise/kamailio/8c3071e527987d96d407a071feb7dba3422777c13c3368f774a577040069e91d", "path_in_repo": "sipwise/kamailio/src/modules/presence/publish.o", "objdump": "0000000000004f55 <ki_handle_publish_uri>:\n    4f55:\t55                   \tpush   %rbp\n    4f56:\t48 89 e5             \tmov    %rsp,%rbp\n    4f59:\t41 57                \tpush   %r15\n    4f5b:\t41 56                \tpush   %r14\n    4f5d:\t41 55                \tpush   %r13\n    4f5f:\t41 54                \tpush   %r12\n    4f61:\t53                   \tpush   %rbx\n    4f62:\t48 81 ec b8 02 00 00 \tsub    $0x2b8,%rsp\n    4f69:\t48 89 bd 38 fd ff ff \tmov    %rdi,-0x2c8(%rbp)\n    4f70:\t48 89 b5 30 fd ff ff \tmov    %rsi,-0x2d0(%rbp)\n    4f77:\t48 c7 45 c0 00 00 00 \tmovq   $0x0,-0x40(%rbp)\n    4f7e:\t00 \n    4f7f:\tc7 45 b4 00 00 00 00 \tmovl   $0x0,-0x4c(%rbp)\n    4f86:\tc7 45 b0 00 00 00 00 \tmovl   $0x0,-0x50(%rbp)\n    4f8d:\t48 c7 85 80 fd ff ff \tmovq   $0x0,-0x280(%rbp)\n    4f94:\t00 00 00 00 \n    4f98:\tc7 85 88 fd ff ff 00 \tmovl   $0x0,-0x278(%rbp)\n    4f9f:\t00 00 00 \n    4fa2:\t48 c7 45 a8 00 00 00 \tmovq   $0x0,-0x58(%rbp)\n    4fa9:\t00 \n    4faa:\tc7 45 94 ff 00 00 00 \tmovl   $0xff,-0x6c(%rbp)\n    4fb1:\t48 c7 45 88 00 00 00 \tmovq   $0x0,-0x78(%rbp)\n    4fb8:\t00 \n    4fb9:\tc7 85 4c fd ff ff 00 \tmovl   $0x0,-0x2b4(%rbp)\n    4fc0:\t00 00 00 \n    4fc3:\t48 c7 45 98 00 00 00 \tmovq   $0x0,-0x68(%rbp)\n    4fca:\t00 \n    4fcb:\tc7 45 a4 f4 01 00 00 \tmovl   $0x1f4,-0x5c(%rbp)\n    4fd2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4fd9 <ki_handle_publish_uri+0x84>\n    4fd9:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 4fe0 <ki_handle_publish_uri+0x8b>\n    4fe0:\t48 89 85 50 fd ff ff \tmov    %rax,-0x2b0(%rbp)\n    4fe7:\t48 89 95 58 fd ff ff \tmov    %rdx,-0x2a8(%rbp)\n    4fee:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4ff5 <ki_handle_publish_uri+0xa0>\n    4ff5:\t8b 00                \tmov    (%rax),%eax\n    4ff7:\t8d 50 01             \tlea    0x1(%rax),%edx\n    4ffa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5001 <ki_handle_publish_uri+0xac>\n    5001:\t89 10                \tmov    %edx,(%rax)\n    5003:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    500a:\tba 00 00 00 00       \tmov    $0x0,%edx\n    500f:\t48 c7 c6 ff ff ff ff \tmov    $0xffffffffffffffff,%rsi\n    5016:\t48 89 c7             \tmov    %rax,%rdi\n    5019:\te8 00 00 00 00       \tcallq  501e <ki_handle_publish_uri+0xc9>\n    501e:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    5021:\t0f 85 34 03 00 00    \tjne    535b <ki_handle_publish_uri+0x406>\n    5027:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    502c:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5033 <ki_handle_publish_uri+0xde>\n    5033:\te8 00 00 00 00       \tcallq  5038 <ki_handle_publish_uri+0xe3>\n    5038:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    503b:\t0f 8c f2 02 00 00    \tjl     5333 <ki_handle_publish_uri+0x3de>\n    5041:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5048 <ki_handle_publish_uri+0xf3>\n    5048:\t8b 00                \tmov    (%rax),%eax\n    504a:\t85 c0                \ttest   %eax,%eax\n    504c:\t0f 85 e1 02 00 00    \tjne    5333 <ki_handle_publish_uri+0x3de>\n    5052:\tc7 85 28 ff ff ff ff \tmovl   $0xffffffff,-0xd8(%rbp)\n    5059:\tff ff ff \n    505c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5063 <ki_handle_publish_uri+0x10e>\n    5063:\t8b 00                \tmov    (%rax),%eax\n    5065:\t8d 50 01             \tlea    0x1(%rax),%edx\n    5068:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 506f <ki_handle_publish_uri+0x11a>\n    506f:\t89 10                \tmov    %edx,(%rax)\n    5071:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5078 <ki_handle_publish_uri+0x123>\n    5078:\t8b 00                \tmov    (%rax),%eax\n    507a:\t85 c0                \ttest   %eax,%eax\n    507c:\t0f 95 c0             \tsetne  %al\n    507f:\t0f b6 c0             \tmovzbl %al,%eax\n    5082:\t48 85 c0             \ttest   %rax,%rax\n    5085:\t0f 84 4f 01 00 00    \tje     51da <ki_handle_publish_uri+0x285>\n    508b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5092 <ki_handle_publish_uri+0x13d>\n    5092:\t8b 00                \tmov    (%rax),%eax\n    5094:\t85 c0                \ttest   %eax,%eax\n    5096:\t0f 95 c0             \tsetne  %al\n    5099:\t0f b6 c0             \tmovzbl %al,%eax\n    509c:\t48 85 c0             \ttest   %rax,%rax\n    509f:\t74 0d                \tje     50ae <ki_handle_publish_uri+0x159>\n    50a1:\t8b 85 28 ff ff ff    \tmov    -0xd8(%rbp),%eax\n    50a7:\t89 c7                \tmov    %eax,%edi\n    50a9:\te8 00 00 00 00       \tcallq  50ae <ki_handle_publish_uri+0x159>\n    50ae:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 50b5 <ki_handle_publish_uri+0x160>\n    50b5:\t48 8b 00             \tmov    (%rax),%rax\n    50b8:\t48 85 c0             \ttest   %rax,%rax\n    50bb:\t0f 95 c0             \tsetne  %al\n    50be:\t0f b6 c0             \tmovzbl %al,%eax\n    50c1:\t48 85 c0             \ttest   %rax,%rax\n    50c4:\t0f 84 87 00 00 00    \tje     5151 <ki_handle_publish_uri+0x1fc>\n    50ca:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 50d1 <ki_handle_publish_uri+0x17c>\n    50d1:\t48 8b 00             \tmov    (%rax),%rax\n    50d4:\t48 8b 18             \tmov    (%rax),%rbx\n    50d7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 50de <ki_handle_publish_uri+0x189>\n    50de:\t48 8b 00             \tmov    (%rax),%rax\n    50e1:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    50e5:\t8b 85 28 ff ff ff    \tmov    -0xd8(%rbp),%eax\n    50eb:\t8d 50 05             \tlea    0x5(%rax),%edx\n    50ee:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 50f5 <ki_handle_publish_uri+0x1a0>\n    50f5:\t48 63 d2             \tmovslq %edx,%rdx\n    50f8:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    50fc:\t48 01 d0             \tadd    %rdx,%rax\n    50ff:\t4c 8b 20             \tmov    (%rax),%r12\n    5102:\te8 00 00 00 00       \tcallq  5107 <ki_handle_publish_uri+0x1b2>\n    5107:\t89 c1                \tmov    %eax,%ecx\n    5109:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5110 <ki_handle_publish_uri+0x1bb>\n    5110:\t8b 10                \tmov    (%rax),%edx\n    5112:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5119 <ki_handle_publish_uri+0x1c4>\n    5119:\t48 8b 00             \tmov    (%rax),%rax\n    511c:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5120:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5127 <ki_handle_publish_uri+0x1d2>\n    5127:\t56                   \tpush   %rsi\n    5128:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 512f <ki_handle_publish_uri+0x1da>\n    512f:\t56                   \tpush   %rsi\n    5130:\t53                   \tpush   %rbx\n    5131:\t45 89 e9             \tmov    %r13d,%r9d\n    5134:\t4d 89 e0             \tmov    %r12,%r8\n    5137:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 513e <ki_handle_publish_uri+0x1e9>\n    513e:\t48 89 c7             \tmov    %rax,%rdi\n    5141:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5146:\te8 00 00 00 00       \tcallq  514b <ki_handle_publish_uri+0x1f6>\n    514b:\t48 83 c4 20          \tadd    $0x20,%rsp\n    514f:\teb 65                \tjmp    51b6 <ki_handle_publish_uri+0x261>\n    5151:\t8b 85 28 ff ff ff    \tmov    -0xd8(%rbp),%eax\n    5157:\t8d 50 05             \tlea    0x5(%rax),%edx\n    515a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5161 <ki_handle_publish_uri+0x20c>\n    5161:\t48 63 d2             \tmovslq %edx,%rdx\n    5164:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5168:\t48 01 d0             \tadd    %rdx,%rax\n    516b:\t48 8b 18             \tmov    (%rax),%rbx\n    516e:\te8 00 00 00 00       \tcallq  5173 <ki_handle_publish_uri+0x21e>\n    5173:\t89 c1                \tmov    %eax,%ecx\n    5175:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 517c <ki_handle_publish_uri+0x227>\n    517c:\t8b 10                \tmov    (%rax),%edx\n    517e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5185 <ki_handle_publish_uri+0x230>\n    5185:\t48 8b 00             \tmov    (%rax),%rax\n    5188:\t48 83 ec 08          \tsub    $0x8,%rsp\n    518c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5193 <ki_handle_publish_uri+0x23e>\n    5193:\t56                   \tpush   %rsi\n    5194:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 519b <ki_handle_publish_uri+0x246>\n    519b:\t49 89 d8             \tmov    %rbx,%r8\n    519e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 51a5 <ki_handle_publish_uri+0x250>\n    51a5:\t48 89 c7             \tmov    %rax,%rdi\n    51a8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    51ad:\te8 00 00 00 00       \tcallq  51b2 <ki_handle_publish_uri+0x25d>\n    51b2:\t48 83 c4 10          \tadd    $0x10,%rsp\n    51b6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 51bd <ki_handle_publish_uri+0x268>\n    51bd:\t8b 00                \tmov    (%rax),%eax\n    51bf:\t85 c0                \ttest   %eax,%eax\n    51c1:\t0f 95 c0             \tsetne  %al\n    51c4:\t0f b6 c0             \tmovzbl %al,%eax\n    51c7:\t48 85 c0             \ttest   %rax,%rax\n    51ca:\t0f 84 4e 01 00 00    \tje     531e <ki_handle_publish_uri+0x3c9>\n    51d0:\te8 00 00 00 00       \tcallq  51d5 <ki_handle_publish_uri+0x280>\n    51d5:\te9 44 01 00 00       \tjmpq   531e <ki_handle_publish_uri+0x3c9>\n    51da:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 51e1 <ki_handle_publish_uri+0x28c>\n    51e1:\t48 8b 00             \tmov    (%rax),%rax\n    51e4:\t48 85 c0             \ttest   %rax,%rax\n    51e7:\t0f 95 c0             \tsetne  %al\n    51ea:\t0f b6 c0             \tmovzbl %al,%eax\n    51ed:\t48 85 c0             \ttest   %rax,%rax\n    51f0:\t0f 84 aa 00 00 00    \tje     52a0 <ki_handle_publish_uri+0x34b>\n    51f6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 51fd <ki_handle_publish_uri+0x2a8>\n    51fd:\t4c 8b 28             \tmov    (%rax),%r13\n    5200:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5207 <ki_handle_publish_uri+0x2b2>\n    5207:\t48 8b 00             \tmov    (%rax),%rax\n    520a:\t4c 8b 38             \tmov    (%rax),%r15\n    520d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5214 <ki_handle_publish_uri+0x2bf>\n    5214:\t48 8b 00             \tmov    (%rax),%rax\n    5217:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    521b:\t8b 85 28 ff ff ff    \tmov    -0xd8(%rbp),%eax\n    5221:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5224:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 522b <ki_handle_publish_uri+0x2d6>\n    522b:\t48 63 d2             \tmovslq %edx,%rdx\n    522e:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5232:\t48 01 d0             \tadd    %rdx,%rax\n    5235:\t48 8b 18             \tmov    (%rax),%rbx\n    5238:\t8b 85 28 ff ff ff    \tmov    -0xd8(%rbp),%eax\n    523e:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5241:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5248 <ki_handle_publish_uri+0x2f3>\n    5248:\t48 63 d2             \tmovslq %edx,%rdx\n    524b:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    524f:\t48 01 d0             \tadd    %rdx,%rax\n    5252:\t48 83 c0 08          \tadd    $0x8,%rax\n    5256:\t44 8b 30             \tmov    (%rax),%r14d\n    5259:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    525e:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5265 <ki_handle_publish_uri+0x310>\n    5265:\te8 00 00 00 00       \tcallq  526a <ki_handle_publish_uri+0x315>\n    526a:\t44 09 f0             \tor     %r14d,%eax\n    526d:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5271:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 5278 <ki_handle_publish_uri+0x323>\n    5278:\t52                   \tpush   %rdx\n    5279:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5280 <ki_handle_publish_uri+0x32b>\n    5280:\t4d 89 f8             \tmov    %r15,%r8\n    5283:\t44 89 e1             \tmov    %r12d,%ecx\n    5286:\t48 89 da             \tmov    %rbx,%rdx\n    5289:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5290 <ki_handle_publish_uri+0x33b>\n    5290:\t89 c7                \tmov    %eax,%edi\n    5292:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5297:\t41 ff d5             \tcallq  *%r13\n    529a:\t48 83 c4 10          \tadd    $0x10,%rsp\n    529e:\teb 7e                \tjmp    531e <ki_handle_publish_uri+0x3c9>\n    52a0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 52a7 <ki_handle_publish_uri+0x352>\n    52a7:\t4c 8b 20             \tmov    (%rax),%r12\n    52aa:\t8b 85 28 ff ff ff    \tmov    -0xd8(%rbp),%eax\n    52b0:\t8d 50 05             \tlea    0x5(%rax),%edx\n    52b3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 52ba <ki_handle_publish_uri+0x365>\n    52ba:\t48 63 d2             \tmovslq %edx,%rdx\n    52bd:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    52c1:\t48 01 d0             \tadd    %rdx,%rax\n    52c4:\t48 8b 18             \tmov    (%rax),%rbx\n    52c7:\t8b 85 28 ff ff ff    \tmov    -0xd8(%rbp),%eax\n    52cd:\t8d 50 05             \tlea    0x5(%rax),%edx\n    52d0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 52d7 <ki_handle_publish_uri+0x382>\n    52d7:\t48 63 d2             \tmovslq %edx,%rdx\n    52da:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    52de:\t48 01 d0             \tadd    %rdx,%rax\n    52e1:\t48 83 c0 08          \tadd    $0x8,%rax\n    52e5:\t44 8b 28             \tmov    (%rax),%r13d\n    52e8:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    52ed:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 52f4 <ki_handle_publish_uri+0x39f>\n    52f4:\te8 00 00 00 00       \tcallq  52f9 <ki_handle_publish_uri+0x3a4>\n    52f9:\t44 09 e8             \tor     %r13d,%eax\n    52fc:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 5303 <ki_handle_publish_uri+0x3ae>\n    5303:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 530a <ki_handle_publish_uri+0x3b5>\n    530a:\t48 89 da             \tmov    %rbx,%rdx\n    530d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5314 <ki_handle_publish_uri+0x3bf>\n    5314:\t89 c7                \tmov    %eax,%edi\n    5316:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    531b:\t41 ff d4             \tcallq  *%r12\n    531e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5325 <ki_handle_publish_uri+0x3d0>\n    5325:\t8b 00                \tmov    (%rax),%eax\n    5327:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    532a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5331 <ki_handle_publish_uri+0x3dc>\n    5331:\t89 10                \tmov    %edx,(%rax)\n    5333:\tc7 45 a4 90 01 00 00 \tmovl   $0x190,-0x5c(%rbp)\n    533a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5341 <ki_handle_publish_uri+0x3ec>\n    5341:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 5348 <ki_handle_publish_uri+0x3f3>\n    5348:\t48 89 85 50 fd ff ff \tmov    %rax,-0x2b0(%rbp)\n    534f:\t48 89 95 58 fd ff ff \tmov    %rdx,-0x2a8(%rbp)\n    5356:\te9 46 50 00 00       \tjmpq   a3a1 <ki_handle_publish_uri+0x544c>\n    535b:\t48 8d 85 90 fd ff ff \tlea    -0x270(%rbp),%rax\n    5362:\tba 10 00 00 00       \tmov    $0x10,%edx\n    5367:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    536c:\t48 89 c7             \tmov    %rax,%rdi\n    536f:\te8 00 00 00 00       \tcallq  5374 <ki_handle_publish_uri+0x41f>\n    5374:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    537b:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    5382:\t48 85 c0             \ttest   %rax,%rax\n    5385:\t0f 84 b5 48 00 00    \tje     9c40 <ki_handle_publish_uri+0x4ceb>\n    538b:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    5392:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    5399:\t8b 40 20             \tmov    0x20(%rax),%eax\n    539c:\t85 c0                \ttest   %eax,%eax\n    539e:\t0f 8e 9c 48 00 00    \tjle    9c40 <ki_handle_publish_uri+0x4ceb>\n    53a4:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    53ab:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    53b2:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    53b6:\t48 85 c0             \ttest   %rax,%rax\n    53b9:\t0f 85 3a 03 00 00    \tjne    56f9 <ki_handle_publish_uri+0x7a4>\n    53bf:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    53c6:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    53cd:\t48 89 c7             \tmov    %rax,%rdi\n    53d0:\te8 00 00 00 00       \tcallq  53d5 <ki_handle_publish_uri+0x480>\n    53d5:\t85 c0                \ttest   %eax,%eax\n    53d7:\t0f 89 1c 03 00 00    \tjns    56f9 <ki_handle_publish_uri+0x7a4>\n    53dd:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    53e2:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 53e9 <ki_handle_publish_uri+0x494>\n    53e9:\te8 00 00 00 00       \tcallq  53ee <ki_handle_publish_uri+0x499>\n    53ee:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    53f1:\t0f 8c da 02 00 00    \tjl     56d1 <ki_handle_publish_uri+0x77c>\n    53f7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 53fe <ki_handle_publish_uri+0x4a9>\n    53fe:\t8b 00                \tmov    (%rax),%eax\n    5400:\t85 c0                \ttest   %eax,%eax\n    5402:\t0f 85 c9 02 00 00    \tjne    56d1 <ki_handle_publish_uri+0x77c>\n    5408:\tc7 45 84 ff ff ff ff \tmovl   $0xffffffff,-0x7c(%rbp)\n    540f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5416 <ki_handle_publish_uri+0x4c1>\n    5416:\t8b 00                \tmov    (%rax),%eax\n    5418:\t8d 50 01             \tlea    0x1(%rax),%edx\n    541b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5422 <ki_handle_publish_uri+0x4cd>\n    5422:\t89 10                \tmov    %edx,(%rax)\n    5424:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 542b <ki_handle_publish_uri+0x4d6>\n    542b:\t8b 00                \tmov    (%rax),%eax\n    542d:\t85 c0                \ttest   %eax,%eax\n    542f:\t0f 95 c0             \tsetne  %al\n    5432:\t0f b6 c0             \tmovzbl %al,%eax\n    5435:\t48 85 c0             \ttest   %rax,%rax\n    5438:\t0f 84 46 01 00 00    \tje     5584 <ki_handle_publish_uri+0x62f>\n    543e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5445 <ki_handle_publish_uri+0x4f0>\n    5445:\t8b 00                \tmov    (%rax),%eax\n    5447:\t85 c0                \ttest   %eax,%eax\n    5449:\t0f 95 c0             \tsetne  %al\n    544c:\t0f b6 c0             \tmovzbl %al,%eax\n    544f:\t48 85 c0             \ttest   %rax,%rax\n    5452:\t74 0a                \tje     545e <ki_handle_publish_uri+0x509>\n    5454:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    5457:\t89 c7                \tmov    %eax,%edi\n    5459:\te8 00 00 00 00       \tcallq  545e <ki_handle_publish_uri+0x509>\n    545e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5465 <ki_handle_publish_uri+0x510>\n    5465:\t48 8b 00             \tmov    (%rax),%rax\n    5468:\t48 85 c0             \ttest   %rax,%rax\n    546b:\t0f 95 c0             \tsetne  %al\n    546e:\t0f b6 c0             \tmovzbl %al,%eax\n    5471:\t48 85 c0             \ttest   %rax,%rax\n    5474:\t0f 84 84 00 00 00    \tje     54fe <ki_handle_publish_uri+0x5a9>\n    547a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5481 <ki_handle_publish_uri+0x52c>\n    5481:\t48 8b 00             \tmov    (%rax),%rax\n    5484:\t48 8b 18             \tmov    (%rax),%rbx\n    5487:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 548e <ki_handle_publish_uri+0x539>\n    548e:\t48 8b 00             \tmov    (%rax),%rax\n    5491:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    5495:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    5498:\t8d 50 05             \tlea    0x5(%rax),%edx\n    549b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 54a2 <ki_handle_publish_uri+0x54d>\n    54a2:\t48 63 d2             \tmovslq %edx,%rdx\n    54a5:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    54a9:\t48 01 d0             \tadd    %rdx,%rax\n    54ac:\t4c 8b 20             \tmov    (%rax),%r12\n    54af:\te8 00 00 00 00       \tcallq  54b4 <ki_handle_publish_uri+0x55f>\n    54b4:\t89 c1                \tmov    %eax,%ecx\n    54b6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 54bd <ki_handle_publish_uri+0x568>\n    54bd:\t8b 10                \tmov    (%rax),%edx\n    54bf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 54c6 <ki_handle_publish_uri+0x571>\n    54c6:\t48 8b 00             \tmov    (%rax),%rax\n    54c9:\t48 83 ec 08          \tsub    $0x8,%rsp\n    54cd:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 54d4 <ki_handle_publish_uri+0x57f>\n    54d4:\t56                   \tpush   %rsi\n    54d5:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 54dc <ki_handle_publish_uri+0x587>\n    54dc:\t56                   \tpush   %rsi\n    54dd:\t53                   \tpush   %rbx\n    54de:\t45 89 e9             \tmov    %r13d,%r9d\n    54e1:\t4d 89 e0             \tmov    %r12,%r8\n    54e4:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 54eb <ki_handle_publish_uri+0x596>\n    54eb:\t48 89 c7             \tmov    %rax,%rdi\n    54ee:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    54f3:\te8 00 00 00 00       \tcallq  54f8 <ki_handle_publish_uri+0x5a3>\n    54f8:\t48 83 c4 20          \tadd    $0x20,%rsp\n    54fc:\teb 62                \tjmp    5560 <ki_handle_publish_uri+0x60b>\n    54fe:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    5501:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5504:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 550b <ki_handle_publish_uri+0x5b6>\n    550b:\t48 63 d2             \tmovslq %edx,%rdx\n    550e:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5512:\t48 01 d0             \tadd    %rdx,%rax\n    5515:\t48 8b 18             \tmov    (%rax),%rbx\n    5518:\te8 00 00 00 00       \tcallq  551d <ki_handle_publish_uri+0x5c8>\n    551d:\t89 c1                \tmov    %eax,%ecx\n    551f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5526 <ki_handle_publish_uri+0x5d1>\n    5526:\t8b 10                \tmov    (%rax),%edx\n    5528:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 552f <ki_handle_publish_uri+0x5da>\n    552f:\t48 8b 00             \tmov    (%rax),%rax\n    5532:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5536:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 553d <ki_handle_publish_uri+0x5e8>\n    553d:\t56                   \tpush   %rsi\n    553e:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5545 <ki_handle_publish_uri+0x5f0>\n    5545:\t49 89 d8             \tmov    %rbx,%r8\n    5548:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 554f <ki_handle_publish_uri+0x5fa>\n    554f:\t48 89 c7             \tmov    %rax,%rdi\n    5552:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5557:\te8 00 00 00 00       \tcallq  555c <ki_handle_publish_uri+0x607>\n    555c:\t48 83 c4 10          \tadd    $0x10,%rsp\n    5560:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5567 <ki_handle_publish_uri+0x612>\n    5567:\t8b 00                \tmov    (%rax),%eax\n    5569:\t85 c0                \ttest   %eax,%eax\n    556b:\t0f 95 c0             \tsetne  %al\n    556e:\t0f b6 c0             \tmovzbl %al,%eax\n    5571:\t48 85 c0             \ttest   %rax,%rax\n    5574:\t0f 84 42 01 00 00    \tje     56bc <ki_handle_publish_uri+0x767>\n    557a:\te8 00 00 00 00       \tcallq  557f <ki_handle_publish_uri+0x62a>\n    557f:\te9 38 01 00 00       \tjmpq   56bc <ki_handle_publish_uri+0x767>\n    5584:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 558b <ki_handle_publish_uri+0x636>\n    558b:\t48 8b 00             \tmov    (%rax),%rax\n    558e:\t48 85 c0             \ttest   %rax,%rax\n    5591:\t0f 95 c0             \tsetne  %al\n    5594:\t0f b6 c0             \tmovzbl %al,%eax\n    5597:\t48 85 c0             \ttest   %rax,%rax\n    559a:\t0f 84 a4 00 00 00    \tje     5644 <ki_handle_publish_uri+0x6ef>\n    55a0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 55a7 <ki_handle_publish_uri+0x652>\n    55a7:\t4c 8b 28             \tmov    (%rax),%r13\n    55aa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 55b1 <ki_handle_publish_uri+0x65c>\n    55b1:\t48 8b 00             \tmov    (%rax),%rax\n    55b4:\t4c 8b 38             \tmov    (%rax),%r15\n    55b7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 55be <ki_handle_publish_uri+0x669>\n    55be:\t48 8b 00             \tmov    (%rax),%rax\n    55c1:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    55c5:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    55c8:\t8d 50 05             \tlea    0x5(%rax),%edx\n    55cb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 55d2 <ki_handle_publish_uri+0x67d>\n    55d2:\t48 63 d2             \tmovslq %edx,%rdx\n    55d5:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    55d9:\t48 01 d0             \tadd    %rdx,%rax\n    55dc:\t48 8b 18             \tmov    (%rax),%rbx\n    55df:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    55e2:\t8d 50 05             \tlea    0x5(%rax),%edx\n    55e5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 55ec <ki_handle_publish_uri+0x697>\n    55ec:\t48 63 d2             \tmovslq %edx,%rdx\n    55ef:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    55f3:\t48 01 d0             \tadd    %rdx,%rax\n    55f6:\t48 83 c0 08          \tadd    $0x8,%rax\n    55fa:\t44 8b 30             \tmov    (%rax),%r14d\n    55fd:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    5602:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5609 <ki_handle_publish_uri+0x6b4>\n    5609:\te8 00 00 00 00       \tcallq  560e <ki_handle_publish_uri+0x6b9>\n    560e:\t44 09 f0             \tor     %r14d,%eax\n    5611:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5615:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 561c <ki_handle_publish_uri+0x6c7>\n    561c:\t52                   \tpush   %rdx\n    561d:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5624 <ki_handle_publish_uri+0x6cf>\n    5624:\t4d 89 f8             \tmov    %r15,%r8\n    5627:\t44 89 e1             \tmov    %r12d,%ecx\n    562a:\t48 89 da             \tmov    %rbx,%rdx\n    562d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5634 <ki_handle_publish_uri+0x6df>\n    5634:\t89 c7                \tmov    %eax,%edi\n    5636:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    563b:\t41 ff d5             \tcallq  *%r13\n    563e:\t48 83 c4 10          \tadd    $0x10,%rsp\n    5642:\teb 78                \tjmp    56bc <ki_handle_publish_uri+0x767>\n    5644:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 564b <ki_handle_publish_uri+0x6f6>\n    564b:\t4c 8b 20             \tmov    (%rax),%r12\n    564e:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    5651:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5654:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 565b <ki_handle_publish_uri+0x706>\n    565b:\t48 63 d2             \tmovslq %edx,%rdx\n    565e:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5662:\t48 01 d0             \tadd    %rdx,%rax\n    5665:\t48 8b 18             \tmov    (%rax),%rbx\n    5668:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    566b:\t8d 50 05             \tlea    0x5(%rax),%edx\n    566e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5675 <ki_handle_publish_uri+0x720>\n    5675:\t48 63 d2             \tmovslq %edx,%rdx\n    5678:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    567c:\t48 01 d0             \tadd    %rdx,%rax\n    567f:\t48 83 c0 08          \tadd    $0x8,%rax\n    5683:\t44 8b 28             \tmov    (%rax),%r13d\n    5686:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    568b:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5692 <ki_handle_publish_uri+0x73d>\n    5692:\te8 00 00 00 00       \tcallq  5697 <ki_handle_publish_uri+0x742>\n    5697:\t44 09 e8             \tor     %r13d,%eax\n    569a:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 56a1 <ki_handle_publish_uri+0x74c>\n    56a1:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 56a8 <ki_handle_publish_uri+0x753>\n    56a8:\t48 89 da             \tmov    %rbx,%rdx\n    56ab:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 56b2 <ki_handle_publish_uri+0x75d>\n    56b2:\t89 c7                \tmov    %eax,%edi\n    56b4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    56b9:\t41 ff d4             \tcallq  *%r12\n    56bc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 56c3 <ki_handle_publish_uri+0x76e>\n    56c3:\t8b 00                \tmov    (%rax),%eax\n    56c5:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    56c8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 56cf <ki_handle_publish_uri+0x77a>\n    56cf:\t89 10                \tmov    %edx,(%rax)\n    56d1:\tc7 45 a4 90 01 00 00 \tmovl   $0x190,-0x5c(%rbp)\n    56d8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 56df <ki_handle_publish_uri+0x78a>\n    56df:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 56e6 <ki_handle_publish_uri+0x791>\n    56e6:\t48 89 85 50 fd ff ff \tmov    %rax,-0x2b0(%rbp)\n    56ed:\t48 89 95 58 fd ff ff \tmov    %rdx,-0x2a8(%rbp)\n    56f4:\te9 a8 4c 00 00       \tjmpq   a3a1 <ki_handle_publish_uri+0x544c>\n    56f9:\t90                   \tnop\n    56fa:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    5701:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    5708:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    570c:\t48 89 c7             \tmov    %rax,%rdi\n    570f:\te8 00 00 00 00       \tcallq  5714 <ki_handle_publish_uri+0x7bf>\n    5714:\t48 89 45 88          \tmov    %rax,-0x78(%rbp)\n    5718:\t48 83 7d 88 00       \tcmpq   $0x0,-0x78(%rbp)\n    571d:\t0f 84 20 45 00 00    \tje     9c43 <ki_handle_publish_uri+0x4cee>\n    5723:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    572a:\t48 8b 40 70          \tmov    0x70(%rax),%rax\n    572e:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n    5732:\teb 35                \tjmp    5769 <ki_handle_publish_uri+0x814>\n    5734:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    5738:\t48 83 c0 08          \tadd    $0x8,%rax\n    573c:\tba 0c 00 00 00       \tmov    $0xc,%edx\n    5741:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5748 <ki_handle_publish_uri+0x7f3>\n    5748:\t48 89 c7             \tmov    %rax,%rdi\n    574b:\te8 00 00 00 00       \tcallq  5750 <ki_handle_publish_uri+0x7fb>\n    5750:\t85 c0                \ttest   %eax,%eax\n    5752:\t75 09                \tjne    575d <ki_handle_publish_uri+0x808>\n    5754:\tc7 45 b4 01 00 00 00 \tmovl   $0x1,-0x4c(%rbp)\n    575b:\teb 13                \tjmp    5770 <ki_handle_publish_uri+0x81b>\n    575d:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    5761:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n    5765:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n    5769:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n    576e:\t75 c4                \tjne    5734 <ki_handle_publish_uri+0x7df>\n    5770:\t83 7d b4 00          \tcmpl   $0x0,-0x4c(%rbp)\n    5774:\t0f 85 d0 09 00 00    \tjne    614a <ki_handle_publish_uri+0x11f5>\n    577a:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    577f:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5786 <ki_handle_publish_uri+0x831>\n    5786:\te8 00 00 00 00       \tcallq  578b <ki_handle_publish_uri+0x836>\n    578b:\t83 f8 02             \tcmp    $0x2,%eax\n    578e:\t0f 8e f2 02 00 00    \tjle    5a86 <ki_handle_publish_uri+0xb31>\n    5794:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 579b <ki_handle_publish_uri+0x846>\n    579b:\t8b 00                \tmov    (%rax),%eax\n    579d:\t85 c0                \ttest   %eax,%eax\n    579f:\t0f 85 e1 02 00 00    \tjne    5a86 <ki_handle_publish_uri+0xb31>\n    57a5:\tc7 85 74 ff ff ff 03 \tmovl   $0x3,-0x8c(%rbp)\n    57ac:\t00 00 00 \n    57af:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 57b6 <ki_handle_publish_uri+0x861>\n    57b6:\t8b 00                \tmov    (%rax),%eax\n    57b8:\t8d 50 01             \tlea    0x1(%rax),%edx\n    57bb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 57c2 <ki_handle_publish_uri+0x86d>\n    57c2:\t89 10                \tmov    %edx,(%rax)\n    57c4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 57cb <ki_handle_publish_uri+0x876>\n    57cb:\t8b 00                \tmov    (%rax),%eax\n    57cd:\t85 c0                \ttest   %eax,%eax\n    57cf:\t0f 95 c0             \tsetne  %al\n    57d2:\t0f b6 c0             \tmovzbl %al,%eax\n    57d5:\t48 85 c0             \ttest   %rax,%rax\n    57d8:\t0f 84 4f 01 00 00    \tje     592d <ki_handle_publish_uri+0x9d8>\n    57de:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 57e5 <ki_handle_publish_uri+0x890>\n    57e5:\t8b 00                \tmov    (%rax),%eax\n    57e7:\t85 c0                \ttest   %eax,%eax\n    57e9:\t0f 95 c0             \tsetne  %al\n    57ec:\t0f b6 c0             \tmovzbl %al,%eax\n    57ef:\t48 85 c0             \ttest   %rax,%rax\n    57f2:\t74 0d                \tje     5801 <ki_handle_publish_uri+0x8ac>\n    57f4:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n    57fa:\t89 c7                \tmov    %eax,%edi\n    57fc:\te8 00 00 00 00       \tcallq  5801 <ki_handle_publish_uri+0x8ac>\n    5801:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5808 <ki_handle_publish_uri+0x8b3>\n    5808:\t48 8b 00             \tmov    (%rax),%rax\n    580b:\t48 85 c0             \ttest   %rax,%rax\n    580e:\t0f 95 c0             \tsetne  %al\n    5811:\t0f b6 c0             \tmovzbl %al,%eax\n    5814:\t48 85 c0             \ttest   %rax,%rax\n    5817:\t0f 84 87 00 00 00    \tje     58a4 <ki_handle_publish_uri+0x94f>\n    581d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5824 <ki_handle_publish_uri+0x8cf>\n    5824:\t48 8b 00             \tmov    (%rax),%rax\n    5827:\t48 8b 18             \tmov    (%rax),%rbx\n    582a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5831 <ki_handle_publish_uri+0x8dc>\n    5831:\t48 8b 00             \tmov    (%rax),%rax\n    5834:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    5838:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n    583e:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5841:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5848 <ki_handle_publish_uri+0x8f3>\n    5848:\t48 63 d2             \tmovslq %edx,%rdx\n    584b:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    584f:\t48 01 d0             \tadd    %rdx,%rax\n    5852:\t4c 8b 20             \tmov    (%rax),%r12\n    5855:\te8 00 00 00 00       \tcallq  585a <ki_handle_publish_uri+0x905>\n    585a:\t89 c1                \tmov    %eax,%ecx\n    585c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5863 <ki_handle_publish_uri+0x90e>\n    5863:\t8b 10                \tmov    (%rax),%edx\n    5865:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 586c <ki_handle_publish_uri+0x917>\n    586c:\t48 8b 00             \tmov    (%rax),%rax\n    586f:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5873:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 587a <ki_handle_publish_uri+0x925>\n    587a:\t56                   \tpush   %rsi\n    587b:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5882 <ki_handle_publish_uri+0x92d>\n    5882:\t56                   \tpush   %rsi\n    5883:\t53                   \tpush   %rbx\n    5884:\t45 89 e9             \tmov    %r13d,%r9d\n    5887:\t4d 89 e0             \tmov    %r12,%r8\n    588a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5891 <ki_handle_publish_uri+0x93c>\n    5891:\t48 89 c7             \tmov    %rax,%rdi\n    5894:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5899:\te8 00 00 00 00       \tcallq  589e <ki_handle_publish_uri+0x949>\n    589e:\t48 83 c4 20          \tadd    $0x20,%rsp\n    58a2:\teb 65                \tjmp    5909 <ki_handle_publish_uri+0x9b4>\n    58a4:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n    58aa:\t8d 50 05             \tlea    0x5(%rax),%edx\n    58ad:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 58b4 <ki_handle_publish_uri+0x95f>\n    58b4:\t48 63 d2             \tmovslq %edx,%rdx\n    58b7:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    58bb:\t48 01 d0             \tadd    %rdx,%rax\n    58be:\t48 8b 18             \tmov    (%rax),%rbx\n    58c1:\te8 00 00 00 00       \tcallq  58c6 <ki_handle_publish_uri+0x971>\n    58c6:\t89 c1                \tmov    %eax,%ecx\n    58c8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 58cf <ki_handle_publish_uri+0x97a>\n    58cf:\t8b 10                \tmov    (%rax),%edx\n    58d1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 58d8 <ki_handle_publish_uri+0x983>\n    58d8:\t48 8b 00             \tmov    (%rax),%rax\n    58db:\t48 83 ec 08          \tsub    $0x8,%rsp\n    58df:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 58e6 <ki_handle_publish_uri+0x991>\n    58e6:\t56                   \tpush   %rsi\n    58e7:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 58ee <ki_handle_publish_uri+0x999>\n    58ee:\t49 89 d8             \tmov    %rbx,%r8\n    58f1:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 58f8 <ki_handle_publish_uri+0x9a3>\n    58f8:\t48 89 c7             \tmov    %rax,%rdi\n    58fb:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5900:\te8 00 00 00 00       \tcallq  5905 <ki_handle_publish_uri+0x9b0>\n    5905:\t48 83 c4 10          \tadd    $0x10,%rsp\n    5909:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5910 <ki_handle_publish_uri+0x9bb>\n    5910:\t8b 00                \tmov    (%rax),%eax\n    5912:\t85 c0                \ttest   %eax,%eax\n    5914:\t0f 95 c0             \tsetne  %al\n    5917:\t0f b6 c0             \tmovzbl %al,%eax\n    591a:\t48 85 c0             \ttest   %rax,%rax\n    591d:\t0f 84 4e 01 00 00    \tje     5a71 <ki_handle_publish_uri+0xb1c>\n    5923:\te8 00 00 00 00       \tcallq  5928 <ki_handle_publish_uri+0x9d3>\n    5928:\te9 44 01 00 00       \tjmpq   5a71 <ki_handle_publish_uri+0xb1c>\n    592d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5934 <ki_handle_publish_uri+0x9df>\n    5934:\t48 8b 00             \tmov    (%rax),%rax\n    5937:\t48 85 c0             \ttest   %rax,%rax\n    593a:\t0f 95 c0             \tsetne  %al\n    593d:\t0f b6 c0             \tmovzbl %al,%eax\n    5940:\t48 85 c0             \ttest   %rax,%rax\n    5943:\t0f 84 aa 00 00 00    \tje     59f3 <ki_handle_publish_uri+0xa9e>\n    5949:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5950 <ki_handle_publish_uri+0x9fb>\n    5950:\t4c 8b 28             \tmov    (%rax),%r13\n    5953:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 595a <ki_handle_publish_uri+0xa05>\n    595a:\t48 8b 00             \tmov    (%rax),%rax\n    595d:\t4c 8b 38             \tmov    (%rax),%r15\n    5960:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5967 <ki_handle_publish_uri+0xa12>\n    5967:\t48 8b 00             \tmov    (%rax),%rax\n    596a:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    596e:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n    5974:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5977:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 597e <ki_handle_publish_uri+0xa29>\n    597e:\t48 63 d2             \tmovslq %edx,%rdx\n    5981:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5985:\t48 01 d0             \tadd    %rdx,%rax\n    5988:\t48 8b 18             \tmov    (%rax),%rbx\n    598b:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n    5991:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5994:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 599b <ki_handle_publish_uri+0xa46>\n    599b:\t48 63 d2             \tmovslq %edx,%rdx\n    599e:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    59a2:\t48 01 d0             \tadd    %rdx,%rax\n    59a5:\t48 83 c0 08          \tadd    $0x8,%rax\n    59a9:\t44 8b 30             \tmov    (%rax),%r14d\n    59ac:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    59b1:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 59b8 <ki_handle_publish_uri+0xa63>\n    59b8:\te8 00 00 00 00       \tcallq  59bd <ki_handle_publish_uri+0xa68>\n    59bd:\t44 09 f0             \tor     %r14d,%eax\n    59c0:\t48 83 ec 08          \tsub    $0x8,%rsp\n    59c4:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 59cb <ki_handle_publish_uri+0xa76>\n    59cb:\t52                   \tpush   %rdx\n    59cc:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 59d3 <ki_handle_publish_uri+0xa7e>\n    59d3:\t4d 89 f8             \tmov    %r15,%r8\n    59d6:\t44 89 e1             \tmov    %r12d,%ecx\n    59d9:\t48 89 da             \tmov    %rbx,%rdx\n    59dc:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 59e3 <ki_handle_publish_uri+0xa8e>\n    59e3:\t89 c7                \tmov    %eax,%edi\n    59e5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    59ea:\t41 ff d5             \tcallq  *%r13\n    59ed:\t48 83 c4 10          \tadd    $0x10,%rsp\n    59f1:\teb 7e                \tjmp    5a71 <ki_handle_publish_uri+0xb1c>\n    59f3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 59fa <ki_handle_publish_uri+0xaa5>\n    59fa:\t4c 8b 20             \tmov    (%rax),%r12\n    59fd:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n    5a03:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5a06:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5a0d <ki_handle_publish_uri+0xab8>\n    5a0d:\t48 63 d2             \tmovslq %edx,%rdx\n    5a10:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5a14:\t48 01 d0             \tadd    %rdx,%rax\n    5a17:\t48 8b 18             \tmov    (%rax),%rbx\n    5a1a:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n    5a20:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5a23:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5a2a <ki_handle_publish_uri+0xad5>\n    5a2a:\t48 63 d2             \tmovslq %edx,%rdx\n    5a2d:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5a31:\t48 01 d0             \tadd    %rdx,%rax\n    5a34:\t48 83 c0 08          \tadd    $0x8,%rax\n    5a38:\t44 8b 28             \tmov    (%rax),%r13d\n    5a3b:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    5a40:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5a47 <ki_handle_publish_uri+0xaf2>\n    5a47:\te8 00 00 00 00       \tcallq  5a4c <ki_handle_publish_uri+0xaf7>\n    5a4c:\t44 09 e8             \tor     %r13d,%eax\n    5a4f:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 5a56 <ki_handle_publish_uri+0xb01>\n    5a56:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 5a5d <ki_handle_publish_uri+0xb08>\n    5a5d:\t48 89 da             \tmov    %rbx,%rdx\n    5a60:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5a67 <ki_handle_publish_uri+0xb12>\n    5a67:\t89 c7                \tmov    %eax,%edi\n    5a69:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5a6e:\t41 ff d4             \tcallq  *%r12\n    5a71:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5a78 <ki_handle_publish_uri+0xb23>\n    5a78:\t8b 00                \tmov    (%rax),%eax\n    5a7a:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    5a7d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5a84 <ki_handle_publish_uri+0xb2f>\n    5a84:\t89 10                \tmov    %edx,(%rax)\n    5a86:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    5a8b:\te8 00 00 00 00       \tcallq  5a90 <ki_handle_publish_uri+0xb3b>\n    5a90:\t48 89 85 80 fd ff ff \tmov    %rax,-0x280(%rbp)\n    5a97:\t48 8b 85 80 fd ff ff \tmov    -0x280(%rbp),%rax\n    5a9e:\t48 85 c0             \ttest   %rax,%rax\n    5aa1:\t0f 85 11 03 00 00    \tjne    5db8 <ki_handle_publish_uri+0xe63>\n    5aa7:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    5aac:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5ab3 <ki_handle_publish_uri+0xb5e>\n    5ab3:\te8 00 00 00 00       \tcallq  5ab8 <ki_handle_publish_uri+0xb63>\n    5ab8:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    5abb:\t0f 8c ca 48 00 00    \tjl     a38b <ki_handle_publish_uri+0x5436>\n    5ac1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5ac8 <ki_handle_publish_uri+0xb73>\n    5ac8:\t8b 00                \tmov    (%rax),%eax\n    5aca:\t85 c0                \ttest   %eax,%eax\n    5acc:\t0f 85 b9 48 00 00    \tjne    a38b <ki_handle_publish_uri+0x5436>\n    5ad2:\tc7 85 6c ff ff ff ff \tmovl   $0xffffffff,-0x94(%rbp)\n    5ad9:\tff ff ff \n    5adc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5ae3 <ki_handle_publish_uri+0xb8e>\n    5ae3:\t8b 00                \tmov    (%rax),%eax\n    5ae5:\t8d 50 01             \tlea    0x1(%rax),%edx\n    5ae8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5aef <ki_handle_publish_uri+0xb9a>\n    5aef:\t89 10                \tmov    %edx,(%rax)\n    5af1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5af8 <ki_handle_publish_uri+0xba3>\n    5af8:\t8b 00                \tmov    (%rax),%eax\n    5afa:\t85 c0                \ttest   %eax,%eax\n    5afc:\t0f 95 c0             \tsetne  %al\n    5aff:\t0f b6 c0             \tmovzbl %al,%eax\n    5b02:\t48 85 c0             \ttest   %rax,%rax\n    5b05:\t0f 84 4f 01 00 00    \tje     5c5a <ki_handle_publish_uri+0xd05>\n    5b0b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5b12 <ki_handle_publish_uri+0xbbd>\n    5b12:\t8b 00                \tmov    (%rax),%eax\n    5b14:\t85 c0                \ttest   %eax,%eax\n    5b16:\t0f 95 c0             \tsetne  %al\n    5b19:\t0f b6 c0             \tmovzbl %al,%eax\n    5b1c:\t48 85 c0             \ttest   %rax,%rax\n    5b1f:\t74 0d                \tje     5b2e <ki_handle_publish_uri+0xbd9>\n    5b21:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    5b27:\t89 c7                \tmov    %eax,%edi\n    5b29:\te8 00 00 00 00       \tcallq  5b2e <ki_handle_publish_uri+0xbd9>\n    5b2e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5b35 <ki_handle_publish_uri+0xbe0>\n    5b35:\t48 8b 00             \tmov    (%rax),%rax\n    5b38:\t48 85 c0             \ttest   %rax,%rax\n    5b3b:\t0f 95 c0             \tsetne  %al\n    5b3e:\t0f b6 c0             \tmovzbl %al,%eax\n    5b41:\t48 85 c0             \ttest   %rax,%rax\n    5b44:\t0f 84 87 00 00 00    \tje     5bd1 <ki_handle_publish_uri+0xc7c>\n    5b4a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5b51 <ki_handle_publish_uri+0xbfc>\n    5b51:\t48 8b 00             \tmov    (%rax),%rax\n    5b54:\t48 8b 18             \tmov    (%rax),%rbx\n    5b57:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5b5e <ki_handle_publish_uri+0xc09>\n    5b5e:\t48 8b 00             \tmov    (%rax),%rax\n    5b61:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    5b65:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    5b6b:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5b6e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5b75 <ki_handle_publish_uri+0xc20>\n    5b75:\t48 63 d2             \tmovslq %edx,%rdx\n    5b78:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5b7c:\t48 01 d0             \tadd    %rdx,%rax\n    5b7f:\t4c 8b 20             \tmov    (%rax),%r12\n    5b82:\te8 00 00 00 00       \tcallq  5b87 <ki_handle_publish_uri+0xc32>\n    5b87:\t89 c1                \tmov    %eax,%ecx\n    5b89:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5b90 <ki_handle_publish_uri+0xc3b>\n    5b90:\t8b 10                \tmov    (%rax),%edx\n    5b92:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5b99 <ki_handle_publish_uri+0xc44>\n    5b99:\t48 8b 00             \tmov    (%rax),%rax\n    5b9c:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5ba0:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5ba7 <ki_handle_publish_uri+0xc52>\n    5ba7:\t56                   \tpush   %rsi\n    5ba8:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5baf <ki_handle_publish_uri+0xc5a>\n    5baf:\t56                   \tpush   %rsi\n    5bb0:\t53                   \tpush   %rbx\n    5bb1:\t45 89 e9             \tmov    %r13d,%r9d\n    5bb4:\t4d 89 e0             \tmov    %r12,%r8\n    5bb7:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5bbe <ki_handle_publish_uri+0xc69>\n    5bbe:\t48 89 c7             \tmov    %rax,%rdi\n    5bc1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5bc6:\te8 00 00 00 00       \tcallq  5bcb <ki_handle_publish_uri+0xc76>\n    5bcb:\t48 83 c4 20          \tadd    $0x20,%rsp\n    5bcf:\teb 65                \tjmp    5c36 <ki_handle_publish_uri+0xce1>\n    5bd1:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    5bd7:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5bda:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5be1 <ki_handle_publish_uri+0xc8c>\n    5be1:\t48 63 d2             \tmovslq %edx,%rdx\n    5be4:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5be8:\t48 01 d0             \tadd    %rdx,%rax\n    5beb:\t48 8b 18             \tmov    (%rax),%rbx\n    5bee:\te8 00 00 00 00       \tcallq  5bf3 <ki_handle_publish_uri+0xc9e>\n    5bf3:\t89 c1                \tmov    %eax,%ecx\n    5bf5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5bfc <ki_handle_publish_uri+0xca7>\n    5bfc:\t8b 10                \tmov    (%rax),%edx\n    5bfe:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5c05 <ki_handle_publish_uri+0xcb0>\n    5c05:\t48 8b 00             \tmov    (%rax),%rax\n    5c08:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5c0c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5c13 <ki_handle_publish_uri+0xcbe>\n    5c13:\t56                   \tpush   %rsi\n    5c14:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5c1b <ki_handle_publish_uri+0xcc6>\n    5c1b:\t49 89 d8             \tmov    %rbx,%r8\n    5c1e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5c25 <ki_handle_publish_uri+0xcd0>\n    5c25:\t48 89 c7             \tmov    %rax,%rdi\n    5c28:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5c2d:\te8 00 00 00 00       \tcallq  5c32 <ki_handle_publish_uri+0xcdd>\n    5c32:\t48 83 c4 10          \tadd    $0x10,%rsp\n    5c36:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5c3d <ki_handle_publish_uri+0xce8>\n    5c3d:\t8b 00                \tmov    (%rax),%eax\n    5c3f:\t85 c0                \ttest   %eax,%eax\n    5c41:\t0f 95 c0             \tsetne  %al\n    5c44:\t0f b6 c0             \tmovzbl %al,%eax\n    5c47:\t48 85 c0             \ttest   %rax,%rax\n    5c4a:\t0f 84 4e 01 00 00    \tje     5d9e <ki_handle_publish_uri+0xe49>\n    5c50:\te8 00 00 00 00       \tcallq  5c55 <ki_handle_publish_uri+0xd00>\n    5c55:\te9 44 01 00 00       \tjmpq   5d9e <ki_handle_publish_uri+0xe49>\n    5c5a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5c61 <ki_handle_publish_uri+0xd0c>\n    5c61:\t48 8b 00             \tmov    (%rax),%rax\n    5c64:\t48 85 c0             \ttest   %rax,%rax\n    5c67:\t0f 95 c0             \tsetne  %al\n    5c6a:\t0f b6 c0             \tmovzbl %al,%eax\n    5c6d:\t48 85 c0             \ttest   %rax,%rax\n    5c70:\t0f 84 aa 00 00 00    \tje     5d20 <ki_handle_publish_uri+0xdcb>\n    5c76:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5c7d <ki_handle_publish_uri+0xd28>\n    5c7d:\t4c 8b 28             \tmov    (%rax),%r13\n    5c80:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5c87 <ki_handle_publish_uri+0xd32>\n    5c87:\t48 8b 00             \tmov    (%rax),%rax\n    5c8a:\t4c 8b 38             \tmov    (%rax),%r15\n    5c8d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5c94 <ki_handle_publish_uri+0xd3f>\n    5c94:\t48 8b 00             \tmov    (%rax),%rax\n    5c97:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    5c9b:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    5ca1:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5ca4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5cab <ki_handle_publish_uri+0xd56>\n    5cab:\t48 63 d2             \tmovslq %edx,%rdx\n    5cae:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5cb2:\t48 01 d0             \tadd    %rdx,%rax\n    5cb5:\t48 8b 18             \tmov    (%rax),%rbx\n    5cb8:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    5cbe:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5cc1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5cc8 <ki_handle_publish_uri+0xd73>\n    5cc8:\t48 63 d2             \tmovslq %edx,%rdx\n    5ccb:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5ccf:\t48 01 d0             \tadd    %rdx,%rax\n    5cd2:\t48 83 c0 08          \tadd    $0x8,%rax\n    5cd6:\t44 8b 30             \tmov    (%rax),%r14d\n    5cd9:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    5cde:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5ce5 <ki_handle_publish_uri+0xd90>\n    5ce5:\te8 00 00 00 00       \tcallq  5cea <ki_handle_publish_uri+0xd95>\n    5cea:\t44 09 f0             \tor     %r14d,%eax\n    5ced:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5cf1:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 5cf8 <ki_handle_publish_uri+0xda3>\n    5cf8:\t52                   \tpush   %rdx\n    5cf9:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5d00 <ki_handle_publish_uri+0xdab>\n    5d00:\t4d 89 f8             \tmov    %r15,%r8\n    5d03:\t44 89 e1             \tmov    %r12d,%ecx\n    5d06:\t48 89 da             \tmov    %rbx,%rdx\n    5d09:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5d10 <ki_handle_publish_uri+0xdbb>\n    5d10:\t89 c7                \tmov    %eax,%edi\n    5d12:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5d17:\t41 ff d5             \tcallq  *%r13\n    5d1a:\t48 83 c4 10          \tadd    $0x10,%rsp\n    5d1e:\teb 7e                \tjmp    5d9e <ki_handle_publish_uri+0xe49>\n    5d20:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5d27 <ki_handle_publish_uri+0xdd2>\n    5d27:\t4c 8b 20             \tmov    (%rax),%r12\n    5d2a:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    5d30:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5d33:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5d3a <ki_handle_publish_uri+0xde5>\n    5d3a:\t48 63 d2             \tmovslq %edx,%rdx\n    5d3d:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5d41:\t48 01 d0             \tadd    %rdx,%rax\n    5d44:\t48 8b 18             \tmov    (%rax),%rbx\n    5d47:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    5d4d:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5d50:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5d57 <ki_handle_publish_uri+0xe02>\n    5d57:\t48 63 d2             \tmovslq %edx,%rdx\n    5d5a:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5d5e:\t48 01 d0             \tadd    %rdx,%rax\n    5d61:\t48 83 c0 08          \tadd    $0x8,%rax\n    5d65:\t44 8b 28             \tmov    (%rax),%r13d\n    5d68:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    5d6d:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5d74 <ki_handle_publish_uri+0xe1f>\n    5d74:\te8 00 00 00 00       \tcallq  5d79 <ki_handle_publish_uri+0xe24>\n    5d79:\t44 09 e8             \tor     %r13d,%eax\n    5d7c:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 5d83 <ki_handle_publish_uri+0xe2e>\n    5d83:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 5d8a <ki_handle_publish_uri+0xe35>\n    5d8a:\t48 89 da             \tmov    %rbx,%rdx\n    5d8d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5d94 <ki_handle_publish_uri+0xe3f>\n    5d94:\t89 c7                \tmov    %eax,%edi\n    5d96:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5d9b:\t41 ff d4             \tcallq  *%r12\n    5d9e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5da5 <ki_handle_publish_uri+0xe50>\n    5da5:\t8b 00                \tmov    (%rax),%eax\n    5da7:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    5daa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5db1 <ki_handle_publish_uri+0xe5c>\n    5db1:\t89 10                \tmov    %edx,(%rax)\n    5db3:\te9 d3 45 00 00       \tjmpq   a38b <ki_handle_publish_uri+0x5436>\n    5db8:\t48 8b 85 80 fd ff ff \tmov    -0x280(%rbp),%rax\n    5dbf:\t48 89 c7             \tmov    %rax,%rdi\n    5dc2:\te8 00 00 00 00       \tcallq  5dc7 <ki_handle_publish_uri+0xe72>\n    5dc7:\t89 85 88 fd ff ff    \tmov    %eax,-0x278(%rbp)\n    5dcd:\tc7 45 b0 01 00 00 00 \tmovl   $0x1,-0x50(%rbp)\n    5dd4:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    5dd9:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5de0 <ki_handle_publish_uri+0xe8b>\n    5de0:\te8 00 00 00 00       \tcallq  5de5 <ki_handle_publish_uri+0xe90>\n    5de5:\t83 f8 02             \tcmp    $0x2,%eax\n    5de8:\t0f 8e 89 0d 00 00    \tjle    6b77 <ki_handle_publish_uri+0x1c22>\n    5dee:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5df5 <ki_handle_publish_uri+0xea0>\n    5df5:\t8b 00                \tmov    (%rax),%eax\n    5df7:\t85 c0                \ttest   %eax,%eax\n    5df9:\t0f 85 78 0d 00 00    \tjne    6b77 <ki_handle_publish_uri+0x1c22>\n    5dff:\tc7 85 70 ff ff ff 03 \tmovl   $0x3,-0x90(%rbp)\n    5e06:\t00 00 00 \n    5e09:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5e10 <ki_handle_publish_uri+0xebb>\n    5e10:\t8b 00                \tmov    (%rax),%eax\n    5e12:\t8d 50 01             \tlea    0x1(%rax),%edx\n    5e15:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5e1c <ki_handle_publish_uri+0xec7>\n    5e1c:\t89 10                \tmov    %edx,(%rax)\n    5e1e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5e25 <ki_handle_publish_uri+0xed0>\n    5e25:\t8b 00                \tmov    (%rax),%eax\n    5e27:\t85 c0                \ttest   %eax,%eax\n    5e29:\t0f 95 c0             \tsetne  %al\n    5e2c:\t0f b6 c0             \tmovzbl %al,%eax\n    5e2f:\t48 85 c0             \ttest   %rax,%rax\n    5e32:\t0f 84 71 01 00 00    \tje     5fa9 <ki_handle_publish_uri+0x1054>\n    5e38:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5e3f <ki_handle_publish_uri+0xeea>\n    5e3f:\t8b 00                \tmov    (%rax),%eax\n    5e41:\t85 c0                \ttest   %eax,%eax\n    5e43:\t0f 95 c0             \tsetne  %al\n    5e46:\t0f b6 c0             \tmovzbl %al,%eax\n    5e49:\t48 85 c0             \ttest   %rax,%rax\n    5e4c:\t74 0d                \tje     5e5b <ki_handle_publish_uri+0xf06>\n    5e4e:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n    5e54:\t89 c7                \tmov    %eax,%edi\n    5e56:\te8 00 00 00 00       \tcallq  5e5b <ki_handle_publish_uri+0xf06>\n    5e5b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5e62 <ki_handle_publish_uri+0xf0d>\n    5e62:\t48 8b 00             \tmov    (%rax),%rax\n    5e65:\t48 85 c0             \ttest   %rax,%rax\n    5e68:\t0f 95 c0             \tsetne  %al\n    5e6b:\t0f b6 c0             \tmovzbl %al,%eax\n    5e6e:\t48 85 c0             \ttest   %rax,%rax\n    5e71:\t0f 84 99 00 00 00    \tje     5f10 <ki_handle_publish_uri+0xfbb>\n    5e77:\t4c 8b ad 80 fd ff ff \tmov    -0x280(%rbp),%r13\n    5e7e:\t44 8b a5 88 fd ff ff \tmov    -0x278(%rbp),%r12d\n    5e85:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5e8c <ki_handle_publish_uri+0xf37>\n    5e8c:\t48 8b 00             \tmov    (%rax),%rax\n    5e8f:\t48 8b 18             \tmov    (%rax),%rbx\n    5e92:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5e99 <ki_handle_publish_uri+0xf44>\n    5e99:\t48 8b 00             \tmov    (%rax),%rax\n    5e9c:\t44 8b 78 08          \tmov    0x8(%rax),%r15d\n    5ea0:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n    5ea6:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5ea9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5eb0 <ki_handle_publish_uri+0xf5b>\n    5eb0:\t48 63 d2             \tmovslq %edx,%rdx\n    5eb3:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5eb7:\t48 01 d0             \tadd    %rdx,%rax\n    5eba:\t4c 8b 30             \tmov    (%rax),%r14\n    5ebd:\te8 00 00 00 00       \tcallq  5ec2 <ki_handle_publish_uri+0xf6d>\n    5ec2:\t89 c1                \tmov    %eax,%ecx\n    5ec4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5ecb <ki_handle_publish_uri+0xf76>\n    5ecb:\t8b 10                \tmov    (%rax),%edx\n    5ecd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5ed4 <ki_handle_publish_uri+0xf7f>\n    5ed4:\t48 8b 00             \tmov    (%rax),%rax\n    5ed7:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5edb:\t41 55                \tpush   %r13\n    5edd:\t41 54                \tpush   %r12\n    5edf:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5ee6 <ki_handle_publish_uri+0xf91>\n    5ee6:\t56                   \tpush   %rsi\n    5ee7:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5eee <ki_handle_publish_uri+0xf99>\n    5eee:\t56                   \tpush   %rsi\n    5eef:\t53                   \tpush   %rbx\n    5ef0:\t45 89 f9             \tmov    %r15d,%r9d\n    5ef3:\t4d 89 f0             \tmov    %r14,%r8\n    5ef6:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5efd <ki_handle_publish_uri+0xfa8>\n    5efd:\t48 89 c7             \tmov    %rax,%rdi\n    5f00:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5f05:\te8 00 00 00 00       \tcallq  5f0a <ki_handle_publish_uri+0xfb5>\n    5f0a:\t48 83 c4 30          \tadd    $0x30,%rsp\n    5f0e:\teb 75                \tjmp    5f85 <ki_handle_publish_uri+0x1030>\n    5f10:\t4c 8b a5 80 fd ff ff \tmov    -0x280(%rbp),%r12\n    5f17:\t8b 9d 88 fd ff ff    \tmov    -0x278(%rbp),%ebx\n    5f1d:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n    5f23:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5f26:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5f2d <ki_handle_publish_uri+0xfd8>\n    5f2d:\t48 63 d2             \tmovslq %edx,%rdx\n    5f30:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5f34:\t48 01 d0             \tadd    %rdx,%rax\n    5f37:\t4c 8b 28             \tmov    (%rax),%r13\n    5f3a:\te8 00 00 00 00       \tcallq  5f3f <ki_handle_publish_uri+0xfea>\n    5f3f:\t89 c1                \tmov    %eax,%ecx\n    5f41:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5f48 <ki_handle_publish_uri+0xff3>\n    5f48:\t8b 10                \tmov    (%rax),%edx\n    5f4a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5f51 <ki_handle_publish_uri+0xffc>\n    5f51:\t48 8b 00             \tmov    (%rax),%rax\n    5f54:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5f58:\t41 54                \tpush   %r12\n    5f5a:\t53                   \tpush   %rbx\n    5f5b:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5f62 <ki_handle_publish_uri+0x100d>\n    5f62:\t56                   \tpush   %rsi\n    5f63:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5f6a <ki_handle_publish_uri+0x1015>\n    5f6a:\t4d 89 e8             \tmov    %r13,%r8\n    5f6d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5f74 <ki_handle_publish_uri+0x101f>\n    5f74:\t48 89 c7             \tmov    %rax,%rdi\n    5f77:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5f7c:\te8 00 00 00 00       \tcallq  5f81 <ki_handle_publish_uri+0x102c>\n    5f81:\t48 83 c4 20          \tadd    $0x20,%rsp\n    5f85:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5f8c <ki_handle_publish_uri+0x1037>\n    5f8c:\t8b 00                \tmov    (%rax),%eax\n    5f8e:\t85 c0                \ttest   %eax,%eax\n    5f90:\t0f 95 c0             \tsetne  %al\n    5f93:\t0f b6 c0             \tmovzbl %al,%eax\n    5f96:\t48 85 c0             \ttest   %rax,%rax\n    5f99:\t0f 84 91 01 00 00    \tje     6130 <ki_handle_publish_uri+0x11db>\n    5f9f:\te8 00 00 00 00       \tcallq  5fa4 <ki_handle_publish_uri+0x104f>\n    5fa4:\te9 87 01 00 00       \tjmpq   6130 <ki_handle_publish_uri+0x11db>\n    5fa9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5fb0 <ki_handle_publish_uri+0x105b>\n    5fb0:\t48 8b 00             \tmov    (%rax),%rax\n    5fb3:\t48 85 c0             \ttest   %rax,%rax\n    5fb6:\t0f 95 c0             \tsetne  %al\n    5fb9:\t0f b6 c0             \tmovzbl %al,%eax\n    5fbc:\t48 85 c0             \ttest   %rax,%rax\n    5fbf:\t0f 84 d2 00 00 00    \tje     6097 <ki_handle_publish_uri+0x1142>\n    5fc5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5fcc <ki_handle_publish_uri+0x1077>\n    5fcc:\t4c 8b 28             \tmov    (%rax),%r13\n    5fcf:\t4c 8b bd 80 fd ff ff \tmov    -0x280(%rbp),%r15\n    5fd6:\t44 8b b5 88 fd ff ff \tmov    -0x278(%rbp),%r14d\n    5fdd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5fe4 <ki_handle_publish_uri+0x108f>\n    5fe4:\t48 8b 00             \tmov    (%rax),%rax\n    5fe7:\t48 8b 00             \tmov    (%rax),%rax\n    5fea:\t48 89 85 28 fd ff ff \tmov    %rax,-0x2d8(%rbp)\n    5ff1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5ff8 <ki_handle_publish_uri+0x10a3>\n    5ff8:\t48 8b 00             \tmov    (%rax),%rax\n    5ffb:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    5fff:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n    6005:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6008:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 600f <ki_handle_publish_uri+0x10ba>\n    600f:\t48 63 d2             \tmovslq %edx,%rdx\n    6012:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6016:\t48 01 d0             \tadd    %rdx,%rax\n    6019:\t48 8b 18             \tmov    (%rax),%rbx\n    601c:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n    6022:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6025:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 602c <ki_handle_publish_uri+0x10d7>\n    602c:\t48 63 d2             \tmovslq %edx,%rdx\n    602f:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6033:\t48 01 d0             \tadd    %rdx,%rax\n    6036:\t48 83 c0 08          \tadd    $0x8,%rax\n    603a:\t8b 08                \tmov    (%rax),%ecx\n    603c:\t89 8d 24 fd ff ff    \tmov    %ecx,-0x2dc(%rbp)\n    6042:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    6047:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 604e <ki_handle_publish_uri+0x10f9>\n    604e:\te8 00 00 00 00       \tcallq  6053 <ki_handle_publish_uri+0x10fe>\n    6053:\t0b 85 24 fd ff ff    \tor     -0x2dc(%rbp),%eax\n    6059:\t48 83 ec 08          \tsub    $0x8,%rsp\n    605d:\t41 57                \tpush   %r15\n    605f:\t41 56                \tpush   %r14\n    6061:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6068 <ki_handle_publish_uri+0x1113>\n    6068:\t52                   \tpush   %rdx\n    6069:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6070 <ki_handle_publish_uri+0x111b>\n    6070:\t4c 8b 85 28 fd ff ff \tmov    -0x2d8(%rbp),%r8\n    6077:\t44 89 e1             \tmov    %r12d,%ecx\n    607a:\t48 89 da             \tmov    %rbx,%rdx\n    607d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6084 <ki_handle_publish_uri+0x112f>\n    6084:\t89 c7                \tmov    %eax,%edi\n    6086:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    608b:\t41 ff d5             \tcallq  *%r13\n    608e:\t48 83 c4 20          \tadd    $0x20,%rsp\n    6092:\te9 99 00 00 00       \tjmpq   6130 <ki_handle_publish_uri+0x11db>\n    6097:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 609e <ki_handle_publish_uri+0x1149>\n    609e:\t4c 8b 20             \tmov    (%rax),%r12\n    60a1:\t4c 8b ad 80 fd ff ff \tmov    -0x280(%rbp),%r13\n    60a8:\t44 8b bd 88 fd ff ff \tmov    -0x278(%rbp),%r15d\n    60af:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n    60b5:\t8d 50 05             \tlea    0x5(%rax),%edx\n    60b8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 60bf <ki_handle_publish_uri+0x116a>\n    60bf:\t48 63 d2             \tmovslq %edx,%rdx\n    60c2:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    60c6:\t48 01 d0             \tadd    %rdx,%rax\n    60c9:\t48 8b 18             \tmov    (%rax),%rbx\n    60cc:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n    60d2:\t8d 50 05             \tlea    0x5(%rax),%edx\n    60d5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 60dc <ki_handle_publish_uri+0x1187>\n    60dc:\t48 63 d2             \tmovslq %edx,%rdx\n    60df:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    60e3:\t48 01 d0             \tadd    %rdx,%rax\n    60e6:\t48 83 c0 08          \tadd    $0x8,%rax\n    60ea:\t44 8b 30             \tmov    (%rax),%r14d\n    60ed:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    60f2:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 60f9 <ki_handle_publish_uri+0x11a4>\n    60f9:\te8 00 00 00 00       \tcallq  60fe <ki_handle_publish_uri+0x11a9>\n    60fe:\t44 09 f0             \tor     %r14d,%eax\n    6101:\t48 83 ec 08          \tsub    $0x8,%rsp\n    6105:\t41 55                \tpush   %r13\n    6107:\t45 89 f9             \tmov    %r15d,%r9d\n    610a:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 6111 <ki_handle_publish_uri+0x11bc>\n    6111:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6118 <ki_handle_publish_uri+0x11c3>\n    6118:\t48 89 da             \tmov    %rbx,%rdx\n    611b:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6122 <ki_handle_publish_uri+0x11cd>\n    6122:\t89 c7                \tmov    %eax,%edi\n    6124:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6129:\t41 ff d4             \tcallq  *%r12\n    612c:\t48 83 c4 10          \tadd    $0x10,%rsp\n    6130:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6137 <ki_handle_publish_uri+0x11e2>\n    6137:\t8b 00                \tmov    (%rax),%eax\n    6139:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    613c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6143 <ki_handle_publish_uri+0x11ee>\n    6143:\t89 10                \tmov    %edx,(%rax)\n    6145:\te9 2d 0a 00 00       \tjmpq   6b77 <ki_handle_publish_uri+0x1c22>\n    614a:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    614f:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6156 <ki_handle_publish_uri+0x1201>\n    6156:\te8 00 00 00 00       \tcallq  615b <ki_handle_publish_uri+0x1206>\n    615b:\t83 f8 02             \tcmp    $0x2,%eax\n    615e:\t0f 8e da 02 00 00    \tjle    643e <ki_handle_publish_uri+0x14e9>\n    6164:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 616b <ki_handle_publish_uri+0x1216>\n    616b:\t8b 00                \tmov    (%rax),%eax\n    616d:\t85 c0                \ttest   %eax,%eax\n    616f:\t0f 85 c9 02 00 00    \tjne    643e <ki_handle_publish_uri+0x14e9>\n    6175:\tc7 45 80 03 00 00 00 \tmovl   $0x3,-0x80(%rbp)\n    617c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6183 <ki_handle_publish_uri+0x122e>\n    6183:\t8b 00                \tmov    (%rax),%eax\n    6185:\t8d 50 01             \tlea    0x1(%rax),%edx\n    6188:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 618f <ki_handle_publish_uri+0x123a>\n    618f:\t89 10                \tmov    %edx,(%rax)\n    6191:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6198 <ki_handle_publish_uri+0x1243>\n    6198:\t8b 00                \tmov    (%rax),%eax\n    619a:\t85 c0                \ttest   %eax,%eax\n    619c:\t0f 95 c0             \tsetne  %al\n    619f:\t0f b6 c0             \tmovzbl %al,%eax\n    61a2:\t48 85 c0             \ttest   %rax,%rax\n    61a5:\t0f 84 46 01 00 00    \tje     62f1 <ki_handle_publish_uri+0x139c>\n    61ab:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 61b2 <ki_handle_publish_uri+0x125d>\n    61b2:\t8b 00                \tmov    (%rax),%eax\n    61b4:\t85 c0                \ttest   %eax,%eax\n    61b6:\t0f 95 c0             \tsetne  %al\n    61b9:\t0f b6 c0             \tmovzbl %al,%eax\n    61bc:\t48 85 c0             \ttest   %rax,%rax\n    61bf:\t74 0a                \tje     61cb <ki_handle_publish_uri+0x1276>\n    61c1:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    61c4:\t89 c7                \tmov    %eax,%edi\n    61c6:\te8 00 00 00 00       \tcallq  61cb <ki_handle_publish_uri+0x1276>\n    61cb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 61d2 <ki_handle_publish_uri+0x127d>\n    61d2:\t48 8b 00             \tmov    (%rax),%rax\n    61d5:\t48 85 c0             \ttest   %rax,%rax\n    61d8:\t0f 95 c0             \tsetne  %al\n    61db:\t0f b6 c0             \tmovzbl %al,%eax\n    61de:\t48 85 c0             \ttest   %rax,%rax\n    61e1:\t0f 84 84 00 00 00    \tje     626b <ki_handle_publish_uri+0x1316>\n    61e7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 61ee <ki_handle_publish_uri+0x1299>\n    61ee:\t48 8b 00             \tmov    (%rax),%rax\n    61f1:\t48 8b 18             \tmov    (%rax),%rbx\n    61f4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 61fb <ki_handle_publish_uri+0x12a6>\n    61fb:\t48 8b 00             \tmov    (%rax),%rax\n    61fe:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    6202:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    6205:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6208:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 620f <ki_handle_publish_uri+0x12ba>\n    620f:\t48 63 d2             \tmovslq %edx,%rdx\n    6212:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6216:\t48 01 d0             \tadd    %rdx,%rax\n    6219:\t4c 8b 20             \tmov    (%rax),%r12\n    621c:\te8 00 00 00 00       \tcallq  6221 <ki_handle_publish_uri+0x12cc>\n    6221:\t89 c1                \tmov    %eax,%ecx\n    6223:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 622a <ki_handle_publish_uri+0x12d5>\n    622a:\t8b 10                \tmov    (%rax),%edx\n    622c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6233 <ki_handle_publish_uri+0x12de>\n    6233:\t48 8b 00             \tmov    (%rax),%rax\n    6236:\t48 83 ec 08          \tsub    $0x8,%rsp\n    623a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6241 <ki_handle_publish_uri+0x12ec>\n    6241:\t56                   \tpush   %rsi\n    6242:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6249 <ki_handle_publish_uri+0x12f4>\n    6249:\t56                   \tpush   %rsi\n    624a:\t53                   \tpush   %rbx\n    624b:\t45 89 e9             \tmov    %r13d,%r9d\n    624e:\t4d 89 e0             \tmov    %r12,%r8\n    6251:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6258 <ki_handle_publish_uri+0x1303>\n    6258:\t48 89 c7             \tmov    %rax,%rdi\n    625b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6260:\te8 00 00 00 00       \tcallq  6265 <ki_handle_publish_uri+0x1310>\n    6265:\t48 83 c4 20          \tadd    $0x20,%rsp\n    6269:\teb 62                \tjmp    62cd <ki_handle_publish_uri+0x1378>\n    626b:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    626e:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6271:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6278 <ki_handle_publish_uri+0x1323>\n    6278:\t48 63 d2             \tmovslq %edx,%rdx\n    627b:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    627f:\t48 01 d0             \tadd    %rdx,%rax\n    6282:\t48 8b 18             \tmov    (%rax),%rbx\n    6285:\te8 00 00 00 00       \tcallq  628a <ki_handle_publish_uri+0x1335>\n    628a:\t89 c1                \tmov    %eax,%ecx\n    628c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6293 <ki_handle_publish_uri+0x133e>\n    6293:\t8b 10                \tmov    (%rax),%edx\n    6295:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 629c <ki_handle_publish_uri+0x1347>\n    629c:\t48 8b 00             \tmov    (%rax),%rax\n    629f:\t48 83 ec 08          \tsub    $0x8,%rsp\n    62a3:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 62aa <ki_handle_publish_uri+0x1355>\n    62aa:\t56                   \tpush   %rsi\n    62ab:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 62b2 <ki_handle_publish_uri+0x135d>\n    62b2:\t49 89 d8             \tmov    %rbx,%r8\n    62b5:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 62bc <ki_handle_publish_uri+0x1367>\n    62bc:\t48 89 c7             \tmov    %rax,%rdi\n    62bf:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    62c4:\te8 00 00 00 00       \tcallq  62c9 <ki_handle_publish_uri+0x1374>\n    62c9:\t48 83 c4 10          \tadd    $0x10,%rsp\n    62cd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 62d4 <ki_handle_publish_uri+0x137f>\n    62d4:\t8b 00                \tmov    (%rax),%eax\n    62d6:\t85 c0                \ttest   %eax,%eax\n    62d8:\t0f 95 c0             \tsetne  %al\n    62db:\t0f b6 c0             \tmovzbl %al,%eax\n    62de:\t48 85 c0             \ttest   %rax,%rax\n    62e1:\t0f 84 42 01 00 00    \tje     6429 <ki_handle_publish_uri+0x14d4>\n    62e7:\te8 00 00 00 00       \tcallq  62ec <ki_handle_publish_uri+0x1397>\n    62ec:\te9 38 01 00 00       \tjmpq   6429 <ki_handle_publish_uri+0x14d4>\n    62f1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 62f8 <ki_handle_publish_uri+0x13a3>\n    62f8:\t48 8b 00             \tmov    (%rax),%rax\n    62fb:\t48 85 c0             \ttest   %rax,%rax\n    62fe:\t0f 95 c0             \tsetne  %al\n    6301:\t0f b6 c0             \tmovzbl %al,%eax\n    6304:\t48 85 c0             \ttest   %rax,%rax\n    6307:\t0f 84 a4 00 00 00    \tje     63b1 <ki_handle_publish_uri+0x145c>\n    630d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6314 <ki_handle_publish_uri+0x13bf>\n    6314:\t4c 8b 28             \tmov    (%rax),%r13\n    6317:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 631e <ki_handle_publish_uri+0x13c9>\n    631e:\t48 8b 00             \tmov    (%rax),%rax\n    6321:\t4c 8b 38             \tmov    (%rax),%r15\n    6324:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 632b <ki_handle_publish_uri+0x13d6>\n    632b:\t48 8b 00             \tmov    (%rax),%rax\n    632e:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    6332:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    6335:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6338:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 633f <ki_handle_publish_uri+0x13ea>\n    633f:\t48 63 d2             \tmovslq %edx,%rdx\n    6342:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6346:\t48 01 d0             \tadd    %rdx,%rax\n    6349:\t48 8b 18             \tmov    (%rax),%rbx\n    634c:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    634f:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6352:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6359 <ki_handle_publish_uri+0x1404>\n    6359:\t48 63 d2             \tmovslq %edx,%rdx\n    635c:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6360:\t48 01 d0             \tadd    %rdx,%rax\n    6363:\t48 83 c0 08          \tadd    $0x8,%rax\n    6367:\t44 8b 30             \tmov    (%rax),%r14d\n    636a:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    636f:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6376 <ki_handle_publish_uri+0x1421>\n    6376:\te8 00 00 00 00       \tcallq  637b <ki_handle_publish_uri+0x1426>\n    637b:\t44 09 f0             \tor     %r14d,%eax\n    637e:\t48 83 ec 08          \tsub    $0x8,%rsp\n    6382:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6389 <ki_handle_publish_uri+0x1434>\n    6389:\t52                   \tpush   %rdx\n    638a:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6391 <ki_handle_publish_uri+0x143c>\n    6391:\t4d 89 f8             \tmov    %r15,%r8\n    6394:\t44 89 e1             \tmov    %r12d,%ecx\n    6397:\t48 89 da             \tmov    %rbx,%rdx\n    639a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 63a1 <ki_handle_publish_uri+0x144c>\n    63a1:\t89 c7                \tmov    %eax,%edi\n    63a3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    63a8:\t41 ff d5             \tcallq  *%r13\n    63ab:\t48 83 c4 10          \tadd    $0x10,%rsp\n    63af:\teb 78                \tjmp    6429 <ki_handle_publish_uri+0x14d4>\n    63b1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 63b8 <ki_handle_publish_uri+0x1463>\n    63b8:\t4c 8b 20             \tmov    (%rax),%r12\n    63bb:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    63be:\t8d 50 05             \tlea    0x5(%rax),%edx\n    63c1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 63c8 <ki_handle_publish_uri+0x1473>\n    63c8:\t48 63 d2             \tmovslq %edx,%rdx\n    63cb:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    63cf:\t48 01 d0             \tadd    %rdx,%rax\n    63d2:\t48 8b 18             \tmov    (%rax),%rbx\n    63d5:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    63d8:\t8d 50 05             \tlea    0x5(%rax),%edx\n    63db:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 63e2 <ki_handle_publish_uri+0x148d>\n    63e2:\t48 63 d2             \tmovslq %edx,%rdx\n    63e5:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    63e9:\t48 01 d0             \tadd    %rdx,%rax\n    63ec:\t48 83 c0 08          \tadd    $0x8,%rax\n    63f0:\t44 8b 28             \tmov    (%rax),%r13d\n    63f3:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    63f8:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 63ff <ki_handle_publish_uri+0x14aa>\n    63ff:\te8 00 00 00 00       \tcallq  6404 <ki_handle_publish_uri+0x14af>\n    6404:\t44 09 e8             \tor     %r13d,%eax\n    6407:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 640e <ki_handle_publish_uri+0x14b9>\n    640e:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6415 <ki_handle_publish_uri+0x14c0>\n    6415:\t48 89 da             \tmov    %rbx,%rdx\n    6418:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 641f <ki_handle_publish_uri+0x14ca>\n    641f:\t89 c7                \tmov    %eax,%edi\n    6421:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6426:\t41 ff d4             \tcallq  *%r12\n    6429:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6430 <ki_handle_publish_uri+0x14db>\n    6430:\t8b 00                \tmov    (%rax),%eax\n    6432:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    6435:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 643c <ki_handle_publish_uri+0x14e7>\n    643c:\t89 10                \tmov    %edx,(%rax)\n    643e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6445 <ki_handle_publish_uri+0x14f0>\n    6445:\t4c 8b 50 18          \tmov    0x18(%rax),%r10\n    6449:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    644d:\t8b 40 20             \tmov    0x20(%rax),%eax\n    6450:\t83 c0 01             \tadd    $0x1,%eax\n    6453:\t48 63 f0             \tmovslq %eax,%rsi\n    6456:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 645d <ki_handle_publish_uri+0x1508>\n    645d:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    6461:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6468 <ki_handle_publish_uri+0x1513>\n    6468:\t41 b8 6d 01 00 00    \tmov    $0x16d,%r8d\n    646e:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6475 <ki_handle_publish_uri+0x1520>\n    6475:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 647c <ki_handle_publish_uri+0x1527>\n    647c:\t48 89 c7             \tmov    %rax,%rdi\n    647f:\t41 ff d2             \tcallq  *%r10\n    6482:\t48 89 85 80 fd ff ff \tmov    %rax,-0x280(%rbp)\n    6489:\t48 8b 85 80 fd ff ff \tmov    -0x280(%rbp),%rax\n    6490:\t48 85 c0             \ttest   %rax,%rax\n    6493:\t0f 85 27 03 00 00    \tjne    67c0 <ki_handle_publish_uri+0x186b>\n    6499:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    649e:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 64a5 <ki_handle_publish_uri+0x1550>\n    64a5:\te8 00 00 00 00       \tcallq  64aa <ki_handle_publish_uri+0x1555>\n    64aa:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    64ad:\t0f 8c db 3e 00 00    \tjl     a38e <ki_handle_publish_uri+0x5439>\n    64b3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 64ba <ki_handle_publish_uri+0x1565>\n    64ba:\t8b 00                \tmov    (%rax),%eax\n    64bc:\t85 c0                \ttest   %eax,%eax\n    64be:\t0f 85 ca 3e 00 00    \tjne    a38e <ki_handle_publish_uri+0x5439>\n    64c4:\tc7 85 78 ff ff ff ff \tmovl   $0xffffffff,-0x88(%rbp)\n    64cb:\tff ff ff \n    64ce:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 64d5 <ki_handle_publish_uri+0x1580>\n    64d5:\t8b 00                \tmov    (%rax),%eax\n    64d7:\t8d 50 01             \tlea    0x1(%rax),%edx\n    64da:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 64e1 <ki_handle_publish_uri+0x158c>\n    64e1:\t89 10                \tmov    %edx,(%rax)\n    64e3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 64ea <ki_handle_publish_uri+0x1595>\n    64ea:\t8b 00                \tmov    (%rax),%eax\n    64ec:\t85 c0                \ttest   %eax,%eax\n    64ee:\t0f 95 c0             \tsetne  %al\n    64f1:\t0f b6 c0             \tmovzbl %al,%eax\n    64f4:\t48 85 c0             \ttest   %rax,%rax\n    64f7:\t0f 84 57 01 00 00    \tje     6654 <ki_handle_publish_uri+0x16ff>\n    64fd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6504 <ki_handle_publish_uri+0x15af>\n    6504:\t8b 00                \tmov    (%rax),%eax\n    6506:\t85 c0                \ttest   %eax,%eax\n    6508:\t0f 95 c0             \tsetne  %al\n    650b:\t0f b6 c0             \tmovzbl %al,%eax\n    650e:\t48 85 c0             \ttest   %rax,%rax\n    6511:\t74 0d                \tje     6520 <ki_handle_publish_uri+0x15cb>\n    6513:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    6519:\t89 c7                \tmov    %eax,%edi\n    651b:\te8 00 00 00 00       \tcallq  6520 <ki_handle_publish_uri+0x15cb>\n    6520:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6527 <ki_handle_publish_uri+0x15d2>\n    6527:\t48 8b 00             \tmov    (%rax),%rax\n    652a:\t48 85 c0             \ttest   %rax,%rax\n    652d:\t0f 95 c0             \tsetne  %al\n    6530:\t0f b6 c0             \tmovzbl %al,%eax\n    6533:\t48 85 c0             \ttest   %rax,%rax\n    6536:\t0f 84 8b 00 00 00    \tje     65c7 <ki_handle_publish_uri+0x1672>\n    653c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6543 <ki_handle_publish_uri+0x15ee>\n    6543:\t48 8b 00             \tmov    (%rax),%rax\n    6546:\t48 8b 18             \tmov    (%rax),%rbx\n    6549:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6550 <ki_handle_publish_uri+0x15fb>\n    6550:\t48 8b 00             \tmov    (%rax),%rax\n    6553:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    6557:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    655d:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6560:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6567 <ki_handle_publish_uri+0x1612>\n    6567:\t48 63 d2             \tmovslq %edx,%rdx\n    656a:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    656e:\t48 01 d0             \tadd    %rdx,%rax\n    6571:\t4c 8b 20             \tmov    (%rax),%r12\n    6574:\te8 00 00 00 00       \tcallq  6579 <ki_handle_publish_uri+0x1624>\n    6579:\t89 c1                \tmov    %eax,%ecx\n    657b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6582 <ki_handle_publish_uri+0x162d>\n    6582:\t8b 10                \tmov    (%rax),%edx\n    6584:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 658b <ki_handle_publish_uri+0x1636>\n    658b:\t48 8b 00             \tmov    (%rax),%rax\n    658e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6595 <ki_handle_publish_uri+0x1640>\n    6595:\t56                   \tpush   %rsi\n    6596:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 659d <ki_handle_publish_uri+0x1648>\n    659d:\t56                   \tpush   %rsi\n    659e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 65a5 <ki_handle_publish_uri+0x1650>\n    65a5:\t56                   \tpush   %rsi\n    65a6:\t53                   \tpush   %rbx\n    65a7:\t45 89 e9             \tmov    %r13d,%r9d\n    65aa:\t4d 89 e0             \tmov    %r12,%r8\n    65ad:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 65b4 <ki_handle_publish_uri+0x165f>\n    65b4:\t48 89 c7             \tmov    %rax,%rdi\n    65b7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    65bc:\te8 00 00 00 00       \tcallq  65c1 <ki_handle_publish_uri+0x166c>\n    65c1:\t48 83 c4 20          \tadd    $0x20,%rsp\n    65c5:\teb 69                \tjmp    6630 <ki_handle_publish_uri+0x16db>\n    65c7:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    65cd:\t8d 50 05             \tlea    0x5(%rax),%edx\n    65d0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 65d7 <ki_handle_publish_uri+0x1682>\n    65d7:\t48 63 d2             \tmovslq %edx,%rdx\n    65da:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    65de:\t48 01 d0             \tadd    %rdx,%rax\n    65e1:\t48 8b 18             \tmov    (%rax),%rbx\n    65e4:\te8 00 00 00 00       \tcallq  65e9 <ki_handle_publish_uri+0x1694>\n    65e9:\t89 c1                \tmov    %eax,%ecx\n    65eb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 65f2 <ki_handle_publish_uri+0x169d>\n    65f2:\t8b 10                \tmov    (%rax),%edx\n    65f4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 65fb <ki_handle_publish_uri+0x16a6>\n    65fb:\t48 8b 00             \tmov    (%rax),%rax\n    65fe:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6605 <ki_handle_publish_uri+0x16b0>\n    6605:\t56                   \tpush   %rsi\n    6606:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 660d <ki_handle_publish_uri+0x16b8>\n    660d:\t56                   \tpush   %rsi\n    660e:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6615 <ki_handle_publish_uri+0x16c0>\n    6615:\t49 89 d8             \tmov    %rbx,%r8\n    6618:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 661f <ki_handle_publish_uri+0x16ca>\n    661f:\t48 89 c7             \tmov    %rax,%rdi\n    6622:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6627:\te8 00 00 00 00       \tcallq  662c <ki_handle_publish_uri+0x16d7>\n    662c:\t48 83 c4 10          \tadd    $0x10,%rsp\n    6630:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6637 <ki_handle_publish_uri+0x16e2>\n    6637:\t8b 00                \tmov    (%rax),%eax\n    6639:\t85 c0                \ttest   %eax,%eax\n    663b:\t0f 95 c0             \tsetne  %al\n    663e:\t0f b6 c0             \tmovzbl %al,%eax\n    6641:\t48 85 c0             \ttest   %rax,%rax\n    6644:\t0f 84 5c 01 00 00    \tje     67a6 <ki_handle_publish_uri+0x1851>\n    664a:\te8 00 00 00 00       \tcallq  664f <ki_handle_publish_uri+0x16fa>\n    664f:\te9 52 01 00 00       \tjmpq   67a6 <ki_handle_publish_uri+0x1851>\n    6654:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 665b <ki_handle_publish_uri+0x1706>\n    665b:\t48 8b 00             \tmov    (%rax),%rax\n    665e:\t48 85 c0             \ttest   %rax,%rax\n    6661:\t0f 95 c0             \tsetne  %al\n    6664:\t0f b6 c0             \tmovzbl %al,%eax\n    6667:\t48 85 c0             \ttest   %rax,%rax\n    666a:\t0f 84 b1 00 00 00    \tje     6721 <ki_handle_publish_uri+0x17cc>\n    6670:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6677 <ki_handle_publish_uri+0x1722>\n    6677:\t4c 8b 28             \tmov    (%rax),%r13\n    667a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6681 <ki_handle_publish_uri+0x172c>\n    6681:\t48 8b 00             \tmov    (%rax),%rax\n    6684:\t4c 8b 38             \tmov    (%rax),%r15\n    6687:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 668e <ki_handle_publish_uri+0x1739>\n    668e:\t48 8b 00             \tmov    (%rax),%rax\n    6691:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    6695:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    669b:\t8d 50 05             \tlea    0x5(%rax),%edx\n    669e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 66a5 <ki_handle_publish_uri+0x1750>\n    66a5:\t48 63 d2             \tmovslq %edx,%rdx\n    66a8:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    66ac:\t48 01 d0             \tadd    %rdx,%rax\n    66af:\t48 8b 18             \tmov    (%rax),%rbx\n    66b2:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    66b8:\t8d 50 05             \tlea    0x5(%rax),%edx\n    66bb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 66c2 <ki_handle_publish_uri+0x176d>\n    66c2:\t48 63 d2             \tmovslq %edx,%rdx\n    66c5:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    66c9:\t48 01 d0             \tadd    %rdx,%rax\n    66cc:\t48 83 c0 08          \tadd    $0x8,%rax\n    66d0:\t44 8b 30             \tmov    (%rax),%r14d\n    66d3:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    66d8:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 66df <ki_handle_publish_uri+0x178a>\n    66df:\te8 00 00 00 00       \tcallq  66e4 <ki_handle_publish_uri+0x178f>\n    66e4:\t44 09 f0             \tor     %r14d,%eax\n    66e7:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 66ee <ki_handle_publish_uri+0x1799>\n    66ee:\t52                   \tpush   %rdx\n    66ef:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 66f6 <ki_handle_publish_uri+0x17a1>\n    66f6:\t52                   \tpush   %rdx\n    66f7:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 66fe <ki_handle_publish_uri+0x17a9>\n    66fe:\t4d 89 f8             \tmov    %r15,%r8\n    6701:\t44 89 e1             \tmov    %r12d,%ecx\n    6704:\t48 89 da             \tmov    %rbx,%rdx\n    6707:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 670e <ki_handle_publish_uri+0x17b9>\n    670e:\t89 c7                \tmov    %eax,%edi\n    6710:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6715:\t41 ff d5             \tcallq  *%r13\n    6718:\t48 83 c4 10          \tadd    $0x10,%rsp\n    671c:\te9 85 00 00 00       \tjmpq   67a6 <ki_handle_publish_uri+0x1851>\n    6721:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6728 <ki_handle_publish_uri+0x17d3>\n    6728:\t4c 8b 20             \tmov    (%rax),%r12\n    672b:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    6731:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6734:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 673b <ki_handle_publish_uri+0x17e6>\n    673b:\t48 63 d2             \tmovslq %edx,%rdx\n    673e:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6742:\t48 01 d0             \tadd    %rdx,%rax\n    6745:\t48 8b 18             \tmov    (%rax),%rbx\n    6748:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    674e:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6751:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6758 <ki_handle_publish_uri+0x1803>\n    6758:\t48 63 d2             \tmovslq %edx,%rdx\n    675b:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    675f:\t48 01 d0             \tadd    %rdx,%rax\n    6762:\t48 83 c0 08          \tadd    $0x8,%rax\n    6766:\t44 8b 28             \tmov    (%rax),%r13d\n    6769:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    676e:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6775 <ki_handle_publish_uri+0x1820>\n    6775:\te8 00 00 00 00       \tcallq  677a <ki_handle_publish_uri+0x1825>\n    677a:\t44 09 e8             \tor     %r13d,%eax\n    677d:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6784 <ki_handle_publish_uri+0x182f>\n    6784:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 678b <ki_handle_publish_uri+0x1836>\n    678b:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6792 <ki_handle_publish_uri+0x183d>\n    6792:\t48 89 da             \tmov    %rbx,%rdx\n    6795:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 679c <ki_handle_publish_uri+0x1847>\n    679c:\t89 c7                \tmov    %eax,%edi\n    679e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    67a3:\t41 ff d4             \tcallq  *%r12\n    67a6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 67ad <ki_handle_publish_uri+0x1858>\n    67ad:\t8b 00                \tmov    (%rax),%eax\n    67af:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    67b2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 67b9 <ki_handle_publish_uri+0x1864>\n    67b9:\t89 10                \tmov    %edx,(%rax)\n    67bb:\te9 ce 3b 00 00       \tjmpq   a38e <ki_handle_publish_uri+0x5439>\n    67c0:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    67c4:\t8b 40 20             \tmov    0x20(%rax),%eax\n    67c7:\t48 63 d0             \tmovslq %eax,%rdx\n    67ca:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    67ce:\t48 8b 48 18          \tmov    0x18(%rax),%rcx\n    67d2:\t48 8b 85 80 fd ff ff \tmov    -0x280(%rbp),%rax\n    67d9:\t48 89 ce             \tmov    %rcx,%rsi\n    67dc:\t48 89 c7             \tmov    %rax,%rdi\n    67df:\te8 00 00 00 00       \tcallq  67e4 <ki_handle_publish_uri+0x188f>\n    67e4:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    67e8:\t8b 40 20             \tmov    0x20(%rax),%eax\n    67eb:\t89 85 88 fd ff ff    \tmov    %eax,-0x278(%rbp)\n    67f1:\t48 8b 95 80 fd ff ff \tmov    -0x280(%rbp),%rdx\n    67f8:\t8b 85 88 fd ff ff    \tmov    -0x278(%rbp),%eax\n    67fe:\t48 98                \tcltq   \n    6800:\t48 01 d0             \tadd    %rdx,%rax\n    6803:\tc6 00 00             \tmovb   $0x0,(%rax)\n    6806:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    680b:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6812 <ki_handle_publish_uri+0x18bd>\n    6812:\te8 00 00 00 00       \tcallq  6817 <ki_handle_publish_uri+0x18c2>\n    6817:\t83 f8 02             \tcmp    $0x2,%eax\n    681a:\t0f 8e 57 03 00 00    \tjle    6b77 <ki_handle_publish_uri+0x1c22>\n    6820:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6827 <ki_handle_publish_uri+0x18d2>\n    6827:\t8b 00                \tmov    (%rax),%eax\n    6829:\t85 c0                \ttest   %eax,%eax\n    682b:\t0f 85 46 03 00 00    \tjne    6b77 <ki_handle_publish_uri+0x1c22>\n    6831:\tc7 85 7c ff ff ff 03 \tmovl   $0x3,-0x84(%rbp)\n    6838:\t00 00 00 \n    683b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6842 <ki_handle_publish_uri+0x18ed>\n    6842:\t8b 00                \tmov    (%rax),%eax\n    6844:\t8d 50 01             \tlea    0x1(%rax),%edx\n    6847:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 684e <ki_handle_publish_uri+0x18f9>\n    684e:\t89 10                \tmov    %edx,(%rax)\n    6850:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6857 <ki_handle_publish_uri+0x1902>\n    6857:\t8b 00                \tmov    (%rax),%eax\n    6859:\t85 c0                \ttest   %eax,%eax\n    685b:\t0f 95 c0             \tsetne  %al\n    685e:\t0f b6 c0             \tmovzbl %al,%eax\n    6861:\t48 85 c0             \ttest   %rax,%rax\n    6864:\t0f 84 71 01 00 00    \tje     69db <ki_handle_publish_uri+0x1a86>\n    686a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6871 <ki_handle_publish_uri+0x191c>\n    6871:\t8b 00                \tmov    (%rax),%eax\n    6873:\t85 c0                \ttest   %eax,%eax\n    6875:\t0f 95 c0             \tsetne  %al\n    6878:\t0f b6 c0             \tmovzbl %al,%eax\n    687b:\t48 85 c0             \ttest   %rax,%rax\n    687e:\t74 0d                \tje     688d <ki_handle_publish_uri+0x1938>\n    6880:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    6886:\t89 c7                \tmov    %eax,%edi\n    6888:\te8 00 00 00 00       \tcallq  688d <ki_handle_publish_uri+0x1938>\n    688d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6894 <ki_handle_publish_uri+0x193f>\n    6894:\t48 8b 00             \tmov    (%rax),%rax\n    6897:\t48 85 c0             \ttest   %rax,%rax\n    689a:\t0f 95 c0             \tsetne  %al\n    689d:\t0f b6 c0             \tmovzbl %al,%eax\n    68a0:\t48 85 c0             \ttest   %rax,%rax\n    68a3:\t0f 84 99 00 00 00    \tje     6942 <ki_handle_publish_uri+0x19ed>\n    68a9:\t4c 8b ad 80 fd ff ff \tmov    -0x280(%rbp),%r13\n    68b0:\t44 8b a5 88 fd ff ff \tmov    -0x278(%rbp),%r12d\n    68b7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 68be <ki_handle_publish_uri+0x1969>\n    68be:\t48 8b 00             \tmov    (%rax),%rax\n    68c1:\t48 8b 18             \tmov    (%rax),%rbx\n    68c4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 68cb <ki_handle_publish_uri+0x1976>\n    68cb:\t48 8b 00             \tmov    (%rax),%rax\n    68ce:\t44 8b 78 08          \tmov    0x8(%rax),%r15d\n    68d2:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    68d8:\t8d 50 05             \tlea    0x5(%rax),%edx\n    68db:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 68e2 <ki_handle_publish_uri+0x198d>\n    68e2:\t48 63 d2             \tmovslq %edx,%rdx\n    68e5:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    68e9:\t48 01 d0             \tadd    %rdx,%rax\n    68ec:\t4c 8b 30             \tmov    (%rax),%r14\n    68ef:\te8 00 00 00 00       \tcallq  68f4 <ki_handle_publish_uri+0x199f>\n    68f4:\t89 c1                \tmov    %eax,%ecx\n    68f6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 68fd <ki_handle_publish_uri+0x19a8>\n    68fd:\t8b 10                \tmov    (%rax),%edx\n    68ff:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6906 <ki_handle_publish_uri+0x19b1>\n    6906:\t48 8b 00             \tmov    (%rax),%rax\n    6909:\t48 83 ec 08          \tsub    $0x8,%rsp\n    690d:\t41 55                \tpush   %r13\n    690f:\t41 54                \tpush   %r12\n    6911:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6918 <ki_handle_publish_uri+0x19c3>\n    6918:\t56                   \tpush   %rsi\n    6919:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6920 <ki_handle_publish_uri+0x19cb>\n    6920:\t56                   \tpush   %rsi\n    6921:\t53                   \tpush   %rbx\n    6922:\t45 89 f9             \tmov    %r15d,%r9d\n    6925:\t4d 89 f0             \tmov    %r14,%r8\n    6928:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 692f <ki_handle_publish_uri+0x19da>\n    692f:\t48 89 c7             \tmov    %rax,%rdi\n    6932:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6937:\te8 00 00 00 00       \tcallq  693c <ki_handle_publish_uri+0x19e7>\n    693c:\t48 83 c4 30          \tadd    $0x30,%rsp\n    6940:\teb 75                \tjmp    69b7 <ki_handle_publish_uri+0x1a62>\n    6942:\t4c 8b a5 80 fd ff ff \tmov    -0x280(%rbp),%r12\n    6949:\t8b 9d 88 fd ff ff    \tmov    -0x278(%rbp),%ebx\n    694f:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    6955:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6958:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 695f <ki_handle_publish_uri+0x1a0a>\n    695f:\t48 63 d2             \tmovslq %edx,%rdx\n    6962:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6966:\t48 01 d0             \tadd    %rdx,%rax\n    6969:\t4c 8b 28             \tmov    (%rax),%r13\n    696c:\te8 00 00 00 00       \tcallq  6971 <ki_handle_publish_uri+0x1a1c>\n    6971:\t89 c1                \tmov    %eax,%ecx\n    6973:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 697a <ki_handle_publish_uri+0x1a25>\n    697a:\t8b 10                \tmov    (%rax),%edx\n    697c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6983 <ki_handle_publish_uri+0x1a2e>\n    6983:\t48 8b 00             \tmov    (%rax),%rax\n    6986:\t48 83 ec 08          \tsub    $0x8,%rsp\n    698a:\t41 54                \tpush   %r12\n    698c:\t53                   \tpush   %rbx\n    698d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6994 <ki_handle_publish_uri+0x1a3f>\n    6994:\t56                   \tpush   %rsi\n    6995:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 699c <ki_handle_publish_uri+0x1a47>\n    699c:\t4d 89 e8             \tmov    %r13,%r8\n    699f:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 69a6 <ki_handle_publish_uri+0x1a51>\n    69a6:\t48 89 c7             \tmov    %rax,%rdi\n    69a9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    69ae:\te8 00 00 00 00       \tcallq  69b3 <ki_handle_publish_uri+0x1a5e>\n    69b3:\t48 83 c4 20          \tadd    $0x20,%rsp\n    69b7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 69be <ki_handle_publish_uri+0x1a69>\n    69be:\t8b 00                \tmov    (%rax),%eax\n    69c0:\t85 c0                \ttest   %eax,%eax\n    69c2:\t0f 95 c0             \tsetne  %al\n    69c5:\t0f b6 c0             \tmovzbl %al,%eax\n    69c8:\t48 85 c0             \ttest   %rax,%rax\n    69cb:\t0f 84 91 01 00 00    \tje     6b62 <ki_handle_publish_uri+0x1c0d>\n    69d1:\te8 00 00 00 00       \tcallq  69d6 <ki_handle_publish_uri+0x1a81>\n    69d6:\te9 87 01 00 00       \tjmpq   6b62 <ki_handle_publish_uri+0x1c0d>\n    69db:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 69e2 <ki_handle_publish_uri+0x1a8d>\n    69e2:\t48 8b 00             \tmov    (%rax),%rax\n    69e5:\t48 85 c0             \ttest   %rax,%rax\n    69e8:\t0f 95 c0             \tsetne  %al\n    69eb:\t0f b6 c0             \tmovzbl %al,%eax\n    69ee:\t48 85 c0             \ttest   %rax,%rax\n    69f1:\t0f 84 d2 00 00 00    \tje     6ac9 <ki_handle_publish_uri+0x1b74>\n    69f7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 69fe <ki_handle_publish_uri+0x1aa9>\n    69fe:\t4c 8b 28             \tmov    (%rax),%r13\n    6a01:\t4c 8b bd 80 fd ff ff \tmov    -0x280(%rbp),%r15\n    6a08:\t44 8b b5 88 fd ff ff \tmov    -0x278(%rbp),%r14d\n    6a0f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6a16 <ki_handle_publish_uri+0x1ac1>\n    6a16:\t48 8b 00             \tmov    (%rax),%rax\n    6a19:\t48 8b 00             \tmov    (%rax),%rax\n    6a1c:\t48 89 85 28 fd ff ff \tmov    %rax,-0x2d8(%rbp)\n    6a23:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6a2a <ki_handle_publish_uri+0x1ad5>\n    6a2a:\t48 8b 00             \tmov    (%rax),%rax\n    6a2d:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    6a31:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    6a37:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6a3a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6a41 <ki_handle_publish_uri+0x1aec>\n    6a41:\t48 63 d2             \tmovslq %edx,%rdx\n    6a44:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6a48:\t48 01 d0             \tadd    %rdx,%rax\n    6a4b:\t48 8b 18             \tmov    (%rax),%rbx\n    6a4e:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    6a54:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6a57:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6a5e <ki_handle_publish_uri+0x1b09>\n    6a5e:\t48 63 d2             \tmovslq %edx,%rdx\n    6a61:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6a65:\t48 01 d0             \tadd    %rdx,%rax\n    6a68:\t48 83 c0 08          \tadd    $0x8,%rax\n    6a6c:\t8b 38                \tmov    (%rax),%edi\n    6a6e:\t89 bd 24 fd ff ff    \tmov    %edi,-0x2dc(%rbp)\n    6a74:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    6a79:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6a80 <ki_handle_publish_uri+0x1b2b>\n    6a80:\te8 00 00 00 00       \tcallq  6a85 <ki_handle_publish_uri+0x1b30>\n    6a85:\t0b 85 24 fd ff ff    \tor     -0x2dc(%rbp),%eax\n    6a8b:\t48 83 ec 08          \tsub    $0x8,%rsp\n    6a8f:\t41 57                \tpush   %r15\n    6a91:\t41 56                \tpush   %r14\n    6a93:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6a9a <ki_handle_publish_uri+0x1b45>\n    6a9a:\t52                   \tpush   %rdx\n    6a9b:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6aa2 <ki_handle_publish_uri+0x1b4d>\n    6aa2:\t4c 8b 85 28 fd ff ff \tmov    -0x2d8(%rbp),%r8\n    6aa9:\t44 89 e1             \tmov    %r12d,%ecx\n    6aac:\t48 89 da             \tmov    %rbx,%rdx\n    6aaf:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6ab6 <ki_handle_publish_uri+0x1b61>\n    6ab6:\t89 c7                \tmov    %eax,%edi\n    6ab8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6abd:\t41 ff d5             \tcallq  *%r13\n    6ac0:\t48 83 c4 20          \tadd    $0x20,%rsp\n    6ac4:\te9 99 00 00 00       \tjmpq   6b62 <ki_handle_publish_uri+0x1c0d>\n    6ac9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6ad0 <ki_handle_publish_uri+0x1b7b>\n    6ad0:\t4c 8b 20             \tmov    (%rax),%r12\n    6ad3:\t4c 8b ad 80 fd ff ff \tmov    -0x280(%rbp),%r13\n    6ada:\t44 8b bd 88 fd ff ff \tmov    -0x278(%rbp),%r15d\n    6ae1:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    6ae7:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6aea:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6af1 <ki_handle_publish_uri+0x1b9c>\n    6af1:\t48 63 d2             \tmovslq %edx,%rdx\n    6af4:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6af8:\t48 01 d0             \tadd    %rdx,%rax\n    6afb:\t48 8b 18             \tmov    (%rax),%rbx\n    6afe:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    6b04:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6b07:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6b0e <ki_handle_publish_uri+0x1bb9>\n    6b0e:\t48 63 d2             \tmovslq %edx,%rdx\n    6b11:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6b15:\t48 01 d0             \tadd    %rdx,%rax\n    6b18:\t48 83 c0 08          \tadd    $0x8,%rax\n    6b1c:\t44 8b 30             \tmov    (%rax),%r14d\n    6b1f:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    6b24:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6b2b <ki_handle_publish_uri+0x1bd6>\n    6b2b:\te8 00 00 00 00       \tcallq  6b30 <ki_handle_publish_uri+0x1bdb>\n    6b30:\t44 09 f0             \tor     %r14d,%eax\n    6b33:\t48 83 ec 08          \tsub    $0x8,%rsp\n    6b37:\t41 55                \tpush   %r13\n    6b39:\t45 89 f9             \tmov    %r15d,%r9d\n    6b3c:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 6b43 <ki_handle_publish_uri+0x1bee>\n    6b43:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6b4a <ki_handle_publish_uri+0x1bf5>\n    6b4a:\t48 89 da             \tmov    %rbx,%rdx\n    6b4d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6b54 <ki_handle_publish_uri+0x1bff>\n    6b54:\t89 c7                \tmov    %eax,%edi\n    6b56:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6b5b:\t41 ff d4             \tcallq  *%r12\n    6b5e:\t48 83 c4 10          \tadd    $0x10,%rsp\n    6b62:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6b69 <ki_handle_publish_uri+0x1c14>\n    6b69:\t8b 00                \tmov    (%rax),%eax\n    6b6b:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    6b6e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6b75 <ki_handle_publish_uri+0x1c20>\n    6b75:\t89 10                \tmov    %edx,(%rax)\n    6b77:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    6b7e:\t48 8b 80 f0 00 00 00 \tmov    0xf0(%rax),%rax\n    6b85:\t48 85 c0             \ttest   %rax,%rax\n    6b88:\t0f 84 99 06 00 00    \tje     7227 <ki_handle_publish_uri+0x22d2>\n    6b8e:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    6b95:\t48 8b 80 f0 00 00 00 \tmov    0xf0(%rax),%rax\n    6b9c:\t8b 40 20             \tmov    0x20(%rax),%eax\n    6b9f:\t85 c0                \ttest   %eax,%eax\n    6ba1:\t0f 8e 80 06 00 00    \tjle    7227 <ki_handle_publish_uri+0x22d2>\n    6ba7:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    6bae:\t48 8b 80 f0 00 00 00 \tmov    0xf0(%rax),%rax\n    6bb5:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    6bb9:\t48 85 c0             \ttest   %rax,%rax\n    6bbc:\t0f 85 2f 03 00 00    \tjne    6ef1 <ki_handle_publish_uri+0x1f9c>\n    6bc2:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    6bc9:\t48 8b 80 f0 00 00 00 \tmov    0xf0(%rax),%rax\n    6bd0:\t48 89 c7             \tmov    %rax,%rdi\n    6bd3:\te8 00 00 00 00       \tcallq  6bd8 <ki_handle_publish_uri+0x1c83>\n    6bd8:\t85 c0                \ttest   %eax,%eax\n    6bda:\t0f 89 11 03 00 00    \tjns    6ef1 <ki_handle_publish_uri+0x1f9c>\n    6be0:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    6be5:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6bec <ki_handle_publish_uri+0x1c97>\n    6bec:\te8 00 00 00 00       \tcallq  6bf1 <ki_handle_publish_uri+0x1c9c>\n    6bf1:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    6bf4:\t0f 8c 97 37 00 00    \tjl     a391 <ki_handle_publish_uri+0x543c>\n    6bfa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c01 <ki_handle_publish_uri+0x1cac>\n    6c01:\t8b 00                \tmov    (%rax),%eax\n    6c03:\t85 c0                \ttest   %eax,%eax\n    6c05:\t0f 85 86 37 00 00    \tjne    a391 <ki_handle_publish_uri+0x543c>\n    6c0b:\tc7 85 68 ff ff ff ff \tmovl   $0xffffffff,-0x98(%rbp)\n    6c12:\tff ff ff \n    6c15:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c1c <ki_handle_publish_uri+0x1cc7>\n    6c1c:\t8b 00                \tmov    (%rax),%eax\n    6c1e:\t8d 50 01             \tlea    0x1(%rax),%edx\n    6c21:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c28 <ki_handle_publish_uri+0x1cd3>\n    6c28:\t89 10                \tmov    %edx,(%rax)\n    6c2a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c31 <ki_handle_publish_uri+0x1cdc>\n    6c31:\t8b 00                \tmov    (%rax),%eax\n    6c33:\t85 c0                \ttest   %eax,%eax\n    6c35:\t0f 95 c0             \tsetne  %al\n    6c38:\t0f b6 c0             \tmovzbl %al,%eax\n    6c3b:\t48 85 c0             \ttest   %rax,%rax\n    6c3e:\t0f 84 4f 01 00 00    \tje     6d93 <ki_handle_publish_uri+0x1e3e>\n    6c44:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c4b <ki_handle_publish_uri+0x1cf6>\n    6c4b:\t8b 00                \tmov    (%rax),%eax\n    6c4d:\t85 c0                \ttest   %eax,%eax\n    6c4f:\t0f 95 c0             \tsetne  %al\n    6c52:\t0f b6 c0             \tmovzbl %al,%eax\n    6c55:\t48 85 c0             \ttest   %rax,%rax\n    6c58:\t74 0d                \tje     6c67 <ki_handle_publish_uri+0x1d12>\n    6c5a:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n    6c60:\t89 c7                \tmov    %eax,%edi\n    6c62:\te8 00 00 00 00       \tcallq  6c67 <ki_handle_publish_uri+0x1d12>\n    6c67:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c6e <ki_handle_publish_uri+0x1d19>\n    6c6e:\t48 8b 00             \tmov    (%rax),%rax\n    6c71:\t48 85 c0             \ttest   %rax,%rax\n    6c74:\t0f 95 c0             \tsetne  %al\n    6c77:\t0f b6 c0             \tmovzbl %al,%eax\n    6c7a:\t48 85 c0             \ttest   %rax,%rax\n    6c7d:\t0f 84 87 00 00 00    \tje     6d0a <ki_handle_publish_uri+0x1db5>\n    6c83:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c8a <ki_handle_publish_uri+0x1d35>\n    6c8a:\t48 8b 00             \tmov    (%rax),%rax\n    6c8d:\t48 8b 18             \tmov    (%rax),%rbx\n    6c90:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c97 <ki_handle_publish_uri+0x1d42>\n    6c97:\t48 8b 00             \tmov    (%rax),%rax\n    6c9a:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    6c9e:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n    6ca4:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6ca7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6cae <ki_handle_publish_uri+0x1d59>\n    6cae:\t48 63 d2             \tmovslq %edx,%rdx\n    6cb1:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6cb5:\t48 01 d0             \tadd    %rdx,%rax\n    6cb8:\t4c 8b 20             \tmov    (%rax),%r12\n    6cbb:\te8 00 00 00 00       \tcallq  6cc0 <ki_handle_publish_uri+0x1d6b>\n    6cc0:\t89 c1                \tmov    %eax,%ecx\n    6cc2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6cc9 <ki_handle_publish_uri+0x1d74>\n    6cc9:\t8b 10                \tmov    (%rax),%edx\n    6ccb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6cd2 <ki_handle_publish_uri+0x1d7d>\n    6cd2:\t48 8b 00             \tmov    (%rax),%rax\n    6cd5:\t48 83 ec 08          \tsub    $0x8,%rsp\n    6cd9:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6ce0 <ki_handle_publish_uri+0x1d8b>\n    6ce0:\t56                   \tpush   %rsi\n    6ce1:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6ce8 <ki_handle_publish_uri+0x1d93>\n    6ce8:\t56                   \tpush   %rsi\n    6ce9:\t53                   \tpush   %rbx\n    6cea:\t45 89 e9             \tmov    %r13d,%r9d\n    6ced:\t4d 89 e0             \tmov    %r12,%r8\n    6cf0:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6cf7 <ki_handle_publish_uri+0x1da2>\n    6cf7:\t48 89 c7             \tmov    %rax,%rdi\n    6cfa:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6cff:\te8 00 00 00 00       \tcallq  6d04 <ki_handle_publish_uri+0x1daf>\n    6d04:\t48 83 c4 20          \tadd    $0x20,%rsp\n    6d08:\teb 65                \tjmp    6d6f <ki_handle_publish_uri+0x1e1a>\n    6d0a:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n    6d10:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6d13:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6d1a <ki_handle_publish_uri+0x1dc5>\n    6d1a:\t48 63 d2             \tmovslq %edx,%rdx\n    6d1d:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6d21:\t48 01 d0             \tadd    %rdx,%rax\n    6d24:\t48 8b 18             \tmov    (%rax),%rbx\n    6d27:\te8 00 00 00 00       \tcallq  6d2c <ki_handle_publish_uri+0x1dd7>\n    6d2c:\t89 c1                \tmov    %eax,%ecx\n    6d2e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6d35 <ki_handle_publish_uri+0x1de0>\n    6d35:\t8b 10                \tmov    (%rax),%edx\n    6d37:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6d3e <ki_handle_publish_uri+0x1de9>\n    6d3e:\t48 8b 00             \tmov    (%rax),%rax\n    6d41:\t48 83 ec 08          \tsub    $0x8,%rsp\n    6d45:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6d4c <ki_handle_publish_uri+0x1df7>\n    6d4c:\t56                   \tpush   %rsi\n    6d4d:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6d54 <ki_handle_publish_uri+0x1dff>\n    6d54:\t49 89 d8             \tmov    %rbx,%r8\n    6d57:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6d5e <ki_handle_publish_uri+0x1e09>\n    6d5e:\t48 89 c7             \tmov    %rax,%rdi\n    6d61:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6d66:\te8 00 00 00 00       \tcallq  6d6b <ki_handle_publish_uri+0x1e16>\n    6d6b:\t48 83 c4 10          \tadd    $0x10,%rsp\n    6d6f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6d76 <ki_handle_publish_uri+0x1e21>\n    6d76:\t8b 00                \tmov    (%rax),%eax\n    6d78:\t85 c0                \ttest   %eax,%eax\n    6d7a:\t0f 95 c0             \tsetne  %al\n    6d7d:\t0f b6 c0             \tmovzbl %al,%eax\n    6d80:\t48 85 c0             \ttest   %rax,%rax\n    6d83:\t0f 84 4e 01 00 00    \tje     6ed7 <ki_handle_publish_uri+0x1f82>\n    6d89:\te8 00 00 00 00       \tcallq  6d8e <ki_handle_publish_uri+0x1e39>\n    6d8e:\te9 44 01 00 00       \tjmpq   6ed7 <ki_handle_publish_uri+0x1f82>\n    6d93:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6d9a <ki_handle_publish_uri+0x1e45>\n    6d9a:\t48 8b 00             \tmov    (%rax),%rax\n    6d9d:\t48 85 c0             \ttest   %rax,%rax\n    6da0:\t0f 95 c0             \tsetne  %al\n    6da3:\t0f b6 c0             \tmovzbl %al,%eax\n    6da6:\t48 85 c0             \ttest   %rax,%rax\n    6da9:\t0f 84 aa 00 00 00    \tje     6e59 <ki_handle_publish_uri+0x1f04>\n    6daf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6db6 <ki_handle_publish_uri+0x1e61>\n    6db6:\t4c 8b 28             \tmov    (%rax),%r13\n    6db9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6dc0 <ki_handle_publish_uri+0x1e6b>\n    6dc0:\t48 8b 00             \tmov    (%rax),%rax\n    6dc3:\t4c 8b 38             \tmov    (%rax),%r15\n    6dc6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6dcd <ki_handle_publish_uri+0x1e78>\n    6dcd:\t48 8b 00             \tmov    (%rax),%rax\n    6dd0:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    6dd4:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n    6dda:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6ddd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6de4 <ki_handle_publish_uri+0x1e8f>\n    6de4:\t48 63 d2             \tmovslq %edx,%rdx\n    6de7:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6deb:\t48 01 d0             \tadd    %rdx,%rax\n    6dee:\t48 8b 18             \tmov    (%rax),%rbx\n    6df1:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n    6df7:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6dfa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6e01 <ki_handle_publish_uri+0x1eac>\n    6e01:\t48 63 d2             \tmovslq %edx,%rdx\n    6e04:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6e08:\t48 01 d0             \tadd    %rdx,%rax\n    6e0b:\t48 83 c0 08          \tadd    $0x8,%rax\n    6e0f:\t44 8b 30             \tmov    (%rax),%r14d\n    6e12:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    6e17:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6e1e <ki_handle_publish_uri+0x1ec9>\n    6e1e:\te8 00 00 00 00       \tcallq  6e23 <ki_handle_publish_uri+0x1ece>\n    6e23:\t44 09 f0             \tor     %r14d,%eax\n    6e26:\t48 83 ec 08          \tsub    $0x8,%rsp\n    6e2a:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6e31 <ki_handle_publish_uri+0x1edc>\n    6e31:\t52                   \tpush   %rdx\n    6e32:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6e39 <ki_handle_publish_uri+0x1ee4>\n    6e39:\t4d 89 f8             \tmov    %r15,%r8\n    6e3c:\t44 89 e1             \tmov    %r12d,%ecx\n    6e3f:\t48 89 da             \tmov    %rbx,%rdx\n    6e42:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6e49 <ki_handle_publish_uri+0x1ef4>\n    6e49:\t89 c7                \tmov    %eax,%edi\n    6e4b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6e50:\t41 ff d5             \tcallq  *%r13\n    6e53:\t48 83 c4 10          \tadd    $0x10,%rsp\n    6e57:\teb 7e                \tjmp    6ed7 <ki_handle_publish_uri+0x1f82>\n    6e59:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6e60 <ki_handle_publish_uri+0x1f0b>\n    6e60:\t4c 8b 20             \tmov    (%rax),%r12\n    6e63:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n    6e69:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6e6c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6e73 <ki_handle_publish_uri+0x1f1e>\n    6e73:\t48 63 d2             \tmovslq %edx,%rdx\n    6e76:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6e7a:\t48 01 d0             \tadd    %rdx,%rax\n    6e7d:\t48 8b 18             \tmov    (%rax),%rbx\n    6e80:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n    6e86:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6e89:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6e90 <ki_handle_publish_uri+0x1f3b>\n    6e90:\t48 63 d2             \tmovslq %edx,%rdx\n    6e93:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6e97:\t48 01 d0             \tadd    %rdx,%rax\n    6e9a:\t48 83 c0 08          \tadd    $0x8,%rax\n    6e9e:\t44 8b 28             \tmov    (%rax),%r13d\n    6ea1:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    6ea6:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6ead <ki_handle_publish_uri+0x1f58>\n    6ead:\te8 00 00 00 00       \tcallq  6eb2 <ki_handle_publish_uri+0x1f5d>\n    6eb2:\t44 09 e8             \tor     %r13d,%eax\n    6eb5:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 6ebc <ki_handle_publish_uri+0x1f67>\n    6ebc:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6ec3 <ki_handle_publish_uri+0x1f6e>\n    6ec3:\t48 89 da             \tmov    %rbx,%rdx\n    6ec6:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6ecd <ki_handle_publish_uri+0x1f78>\n    6ecd:\t89 c7                \tmov    %eax,%edi\n    6ecf:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6ed4:\t41 ff d4             \tcallq  *%r12\n    6ed7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6ede <ki_handle_publish_uri+0x1f89>\n    6ede:\t8b 00                \tmov    (%rax),%eax\n    6ee0:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    6ee3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6eea <ki_handle_publish_uri+0x1f95>\n    6eea:\t89 10                \tmov    %edx,(%rax)\n    6eec:\te9 a0 34 00 00       \tjmpq   a391 <ki_handle_publish_uri+0x543c>\n    6ef1:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    6ef8:\t48 8b 80 f0 00 00 00 \tmov    0xf0(%rax),%rax\n    6eff:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    6f03:\t8b 40 14             \tmov    0x14(%rax),%eax\n    6f06:\t89 45 cc             \tmov    %eax,-0x34(%rbp)\n    6f09:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    6f0e:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6f15 <ki_handle_publish_uri+0x1fc0>\n    6f15:\te8 00 00 00 00       \tcallq  6f1a <ki_handle_publish_uri+0x1fc5>\n    6f1a:\t83 f8 02             \tcmp    $0x2,%eax\n    6f1d:\t0f 8e 45 06 00 00    \tjle    7568 <ki_handle_publish_uri+0x2613>\n    6f23:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6f2a <ki_handle_publish_uri+0x1fd5>\n    6f2a:\t8b 00                \tmov    (%rax),%eax\n    6f2c:\t85 c0                \ttest   %eax,%eax\n    6f2e:\t0f 85 34 06 00 00    \tjne    7568 <ki_handle_publish_uri+0x2613>\n    6f34:\tc7 85 64 ff ff ff 03 \tmovl   $0x3,-0x9c(%rbp)\n    6f3b:\t00 00 00 \n    6f3e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6f45 <ki_handle_publish_uri+0x1ff0>\n    6f45:\t8b 00                \tmov    (%rax),%eax\n    6f47:\t8d 50 01             \tlea    0x1(%rax),%edx\n    6f4a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6f51 <ki_handle_publish_uri+0x1ffc>\n    6f51:\t89 10                \tmov    %edx,(%rax)\n    6f53:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6f5a <ki_handle_publish_uri+0x2005>\n    6f5a:\t8b 00                \tmov    (%rax),%eax\n    6f5c:\t85 c0                \ttest   %eax,%eax\n    6f5e:\t0f 95 c0             \tsetne  %al\n    6f61:\t0f b6 c0             \tmovzbl %al,%eax\n    6f64:\t48 85 c0             \ttest   %rax,%rax\n    6f67:\t0f 84 53 01 00 00    \tje     70c0 <ki_handle_publish_uri+0x216b>\n    6f6d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6f74 <ki_handle_publish_uri+0x201f>\n    6f74:\t8b 00                \tmov    (%rax),%eax\n    6f76:\t85 c0                \ttest   %eax,%eax\n    6f78:\t0f 95 c0             \tsetne  %al\n    6f7b:\t0f b6 c0             \tmovzbl %al,%eax\n    6f7e:\t48 85 c0             \ttest   %rax,%rax\n    6f81:\t74 0d                \tje     6f90 <ki_handle_publish_uri+0x203b>\n    6f83:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    6f89:\t89 c7                \tmov    %eax,%edi\n    6f8b:\te8 00 00 00 00       \tcallq  6f90 <ki_handle_publish_uri+0x203b>\n    6f90:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6f97 <ki_handle_publish_uri+0x2042>\n    6f97:\t48 8b 00             \tmov    (%rax),%rax\n    6f9a:\t48 85 c0             \ttest   %rax,%rax\n    6f9d:\t0f 95 c0             \tsetne  %al\n    6fa0:\t0f b6 c0             \tmovzbl %al,%eax\n    6fa3:\t48 85 c0             \ttest   %rax,%rax\n    6fa6:\t0f 84 89 00 00 00    \tje     7035 <ki_handle_publish_uri+0x20e0>\n    6fac:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6fb3 <ki_handle_publish_uri+0x205e>\n    6fb3:\t48 8b 00             \tmov    (%rax),%rax\n    6fb6:\t48 8b 18             \tmov    (%rax),%rbx\n    6fb9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6fc0 <ki_handle_publish_uri+0x206b>\n    6fc0:\t48 8b 00             \tmov    (%rax),%rax\n    6fc3:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    6fc7:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    6fcd:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6fd0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6fd7 <ki_handle_publish_uri+0x2082>\n    6fd7:\t48 63 d2             \tmovslq %edx,%rdx\n    6fda:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6fde:\t48 01 d0             \tadd    %rdx,%rax\n    6fe1:\t4c 8b 20             \tmov    (%rax),%r12\n    6fe4:\te8 00 00 00 00       \tcallq  6fe9 <ki_handle_publish_uri+0x2094>\n    6fe9:\t89 c6                \tmov    %eax,%esi\n    6feb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6ff2 <ki_handle_publish_uri+0x209d>\n    6ff2:\t8b 10                \tmov    (%rax),%edx\n    6ff4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6ffb <ki_handle_publish_uri+0x20a6>\n    6ffb:\t48 8b 00             \tmov    (%rax),%rax\n    6ffe:\t8b 4d cc             \tmov    -0x34(%rbp),%ecx\n    7001:\t51                   \tpush   %rcx\n    7002:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 7009 <ki_handle_publish_uri+0x20b4>\n    7009:\t51                   \tpush   %rcx\n    700a:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 7011 <ki_handle_publish_uri+0x20bc>\n    7011:\t51                   \tpush   %rcx\n    7012:\t53                   \tpush   %rbx\n    7013:\t45 89 e9             \tmov    %r13d,%r9d\n    7016:\t4d 89 e0             \tmov    %r12,%r8\n    7019:\t89 f1                \tmov    %esi,%ecx\n    701b:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7022 <ki_handle_publish_uri+0x20cd>\n    7022:\t48 89 c7             \tmov    %rax,%rdi\n    7025:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    702a:\te8 00 00 00 00       \tcallq  702f <ki_handle_publish_uri+0x20da>\n    702f:\t48 83 c4 20          \tadd    $0x20,%rsp\n    7033:\teb 67                \tjmp    709c <ki_handle_publish_uri+0x2147>\n    7035:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    703b:\t8d 50 05             \tlea    0x5(%rax),%edx\n    703e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7045 <ki_handle_publish_uri+0x20f0>\n    7045:\t48 63 d2             \tmovslq %edx,%rdx\n    7048:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    704c:\t48 01 d0             \tadd    %rdx,%rax\n    704f:\t48 8b 18             \tmov    (%rax),%rbx\n    7052:\te8 00 00 00 00       \tcallq  7057 <ki_handle_publish_uri+0x2102>\n    7057:\t89 c6                \tmov    %eax,%esi\n    7059:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7060 <ki_handle_publish_uri+0x210b>\n    7060:\t8b 10                \tmov    (%rax),%edx\n    7062:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7069 <ki_handle_publish_uri+0x2114>\n    7069:\t48 8b 00             \tmov    (%rax),%rax\n    706c:\t8b 4d cc             \tmov    -0x34(%rbp),%ecx\n    706f:\t51                   \tpush   %rcx\n    7070:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 7077 <ki_handle_publish_uri+0x2122>\n    7077:\t51                   \tpush   %rcx\n    7078:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 707f <ki_handle_publish_uri+0x212a>\n    707f:\t49 89 d8             \tmov    %rbx,%r8\n    7082:\t89 f1                \tmov    %esi,%ecx\n    7084:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 708b <ki_handle_publish_uri+0x2136>\n    708b:\t48 89 c7             \tmov    %rax,%rdi\n    708e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7093:\te8 00 00 00 00       \tcallq  7098 <ki_handle_publish_uri+0x2143>\n    7098:\t48 83 c4 10          \tadd    $0x10,%rsp\n    709c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70a3 <ki_handle_publish_uri+0x214e>\n    70a3:\t8b 00                \tmov    (%rax),%eax\n    70a5:\t85 c0                \ttest   %eax,%eax\n    70a7:\t0f 95 c0             \tsetne  %al\n    70aa:\t0f b6 c0             \tmovzbl %al,%eax\n    70ad:\t48 85 c0             \ttest   %rax,%rax\n    70b0:\t0f 84 57 01 00 00    \tje     720d <ki_handle_publish_uri+0x22b8>\n    70b6:\te8 00 00 00 00       \tcallq  70bb <ki_handle_publish_uri+0x2166>\n    70bb:\te9 4d 01 00 00       \tjmpq   720d <ki_handle_publish_uri+0x22b8>\n    70c0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70c7 <ki_handle_publish_uri+0x2172>\n    70c7:\t48 8b 00             \tmov    (%rax),%rax\n    70ca:\t48 85 c0             \ttest   %rax,%rax\n    70cd:\t0f 95 c0             \tsetne  %al\n    70d0:\t0f b6 c0             \tmovzbl %al,%eax\n    70d3:\t48 85 c0             \ttest   %rax,%rax\n    70d6:\t0f 84 ad 00 00 00    \tje     7189 <ki_handle_publish_uri+0x2234>\n    70dc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70e3 <ki_handle_publish_uri+0x218e>\n    70e3:\t4c 8b 28             \tmov    (%rax),%r13\n    70e6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70ed <ki_handle_publish_uri+0x2198>\n    70ed:\t48 8b 00             \tmov    (%rax),%rax\n    70f0:\t4c 8b 38             \tmov    (%rax),%r15\n    70f3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70fa <ki_handle_publish_uri+0x21a5>\n    70fa:\t48 8b 00             \tmov    (%rax),%rax\n    70fd:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    7101:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    7107:\t8d 50 05             \tlea    0x5(%rax),%edx\n    710a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7111 <ki_handle_publish_uri+0x21bc>\n    7111:\t48 63 d2             \tmovslq %edx,%rdx\n    7114:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7118:\t48 01 d0             \tadd    %rdx,%rax\n    711b:\t48 8b 18             \tmov    (%rax),%rbx\n    711e:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    7124:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7127:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 712e <ki_handle_publish_uri+0x21d9>\n    712e:\t48 63 d2             \tmovslq %edx,%rdx\n    7131:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7135:\t48 01 d0             \tadd    %rdx,%rax\n    7138:\t48 83 c0 08          \tadd    $0x8,%rax\n    713c:\t44 8b 30             \tmov    (%rax),%r14d\n    713f:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    7144:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 714b <ki_handle_publish_uri+0x21f6>\n    714b:\te8 00 00 00 00       \tcallq  7150 <ki_handle_publish_uri+0x21fb>\n    7150:\t44 09 f0             \tor     %r14d,%eax\n    7153:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    7156:\t52                   \tpush   %rdx\n    7157:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 715e <ki_handle_publish_uri+0x2209>\n    715e:\t52                   \tpush   %rdx\n    715f:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 7166 <ki_handle_publish_uri+0x2211>\n    7166:\t4d 89 f8             \tmov    %r15,%r8\n    7169:\t44 89 e1             \tmov    %r12d,%ecx\n    716c:\t48 89 da             \tmov    %rbx,%rdx\n    716f:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7176 <ki_handle_publish_uri+0x2221>\n    7176:\t89 c7                \tmov    %eax,%edi\n    7178:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    717d:\t41 ff d5             \tcallq  *%r13\n    7180:\t48 83 c4 10          \tadd    $0x10,%rsp\n    7184:\te9 84 00 00 00       \tjmpq   720d <ki_handle_publish_uri+0x22b8>\n    7189:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7190 <ki_handle_publish_uri+0x223b>\n    7190:\t4c 8b 20             \tmov    (%rax),%r12\n    7193:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    7199:\t8d 50 05             \tlea    0x5(%rax),%edx\n    719c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 71a3 <ki_handle_publish_uri+0x224e>\n    71a3:\t48 63 d2             \tmovslq %edx,%rdx\n    71a6:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    71aa:\t48 01 d0             \tadd    %rdx,%rax\n    71ad:\t48 8b 18             \tmov    (%rax),%rbx\n    71b0:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    71b6:\t8d 50 05             \tlea    0x5(%rax),%edx\n    71b9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 71c0 <ki_handle_publish_uri+0x226b>\n    71c0:\t48 63 d2             \tmovslq %edx,%rdx\n    71c3:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    71c7:\t48 01 d0             \tadd    %rdx,%rax\n    71ca:\t48 83 c0 08          \tadd    $0x8,%rax\n    71ce:\t44 8b 28             \tmov    (%rax),%r13d\n    71d1:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    71d6:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 71dd <ki_handle_publish_uri+0x2288>\n    71dd:\te8 00 00 00 00       \tcallq  71e2 <ki_handle_publish_uri+0x228d>\n    71e2:\t44 09 e8             \tor     %r13d,%eax\n    71e5:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    71e8:\t41 89 d1             \tmov    %edx,%r9d\n    71eb:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 71f2 <ki_handle_publish_uri+0x229d>\n    71f2:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 71f9 <ki_handle_publish_uri+0x22a4>\n    71f9:\t48 89 da             \tmov    %rbx,%rdx\n    71fc:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7203 <ki_handle_publish_uri+0x22ae>\n    7203:\t89 c7                \tmov    %eax,%edi\n    7205:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    720a:\t41 ff d4             \tcallq  *%r12\n    720d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7214 <ki_handle_publish_uri+0x22bf>\n    7214:\t8b 00                \tmov    (%rax),%eax\n    7216:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    7219:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7220 <ki_handle_publish_uri+0x22cb>\n    7220:\t89 10                \tmov    %edx,(%rax)\n    7222:\te9 41 03 00 00       \tjmpq   7568 <ki_handle_publish_uri+0x2613>\n    7227:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    722c:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 7233 <ki_handle_publish_uri+0x22de>\n    7233:\te8 00 00 00 00       \tcallq  7238 <ki_handle_publish_uri+0x22e3>\n    7238:\t83 f8 02             \tcmp    $0x2,%eax\n    723b:\t0f 8e 1b 03 00 00    \tjle    755c <ki_handle_publish_uri+0x2607>\n    7241:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7248 <ki_handle_publish_uri+0x22f3>\n    7248:\t8b 00                \tmov    (%rax),%eax\n    724a:\t85 c0                \ttest   %eax,%eax\n    724c:\t0f 85 0a 03 00 00    \tjne    755c <ki_handle_publish_uri+0x2607>\n    7252:\tc7 85 60 ff ff ff 03 \tmovl   $0x3,-0xa0(%rbp)\n    7259:\t00 00 00 \n    725c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7263 <ki_handle_publish_uri+0x230e>\n    7263:\t8b 00                \tmov    (%rax),%eax\n    7265:\t8d 50 01             \tlea    0x1(%rax),%edx\n    7268:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 726f <ki_handle_publish_uri+0x231a>\n    726f:\t89 10                \tmov    %edx,(%rax)\n    7271:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7278 <ki_handle_publish_uri+0x2323>\n    7278:\t8b 00                \tmov    (%rax),%eax\n    727a:\t85 c0                \ttest   %eax,%eax\n    727c:\t0f 95 c0             \tsetne  %al\n    727f:\t0f b6 c0             \tmovzbl %al,%eax\n    7282:\t48 85 c0             \ttest   %rax,%rax\n    7285:\t0f 84 59 01 00 00    \tje     73e4 <ki_handle_publish_uri+0x248f>\n    728b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7292 <ki_handle_publish_uri+0x233d>\n    7292:\t8b 00                \tmov    (%rax),%eax\n    7294:\t85 c0                \ttest   %eax,%eax\n    7296:\t0f 95 c0             \tsetne  %al\n    7299:\t0f b6 c0             \tmovzbl %al,%eax\n    729c:\t48 85 c0             \ttest   %rax,%rax\n    729f:\t74 0d                \tje     72ae <ki_handle_publish_uri+0x2359>\n    72a1:\t8b 85 60 ff ff ff    \tmov    -0xa0(%rbp),%eax\n    72a7:\t89 c7                \tmov    %eax,%edi\n    72a9:\te8 00 00 00 00       \tcallq  72ae <ki_handle_publish_uri+0x2359>\n    72ae:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 72b5 <ki_handle_publish_uri+0x2360>\n    72b5:\t48 8b 00             \tmov    (%rax),%rax\n    72b8:\t48 85 c0             \ttest   %rax,%rax\n    72bb:\t0f 95 c0             \tsetne  %al\n    72be:\t0f b6 c0             \tmovzbl %al,%eax\n    72c1:\t48 85 c0             \ttest   %rax,%rax\n    72c4:\t0f 84 8d 00 00 00    \tje     7357 <ki_handle_publish_uri+0x2402>\n    72ca:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    72ce:\t44 8b 60 28          \tmov    0x28(%rax),%r12d\n    72d2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 72d9 <ki_handle_publish_uri+0x2384>\n    72d9:\t48 8b 00             \tmov    (%rax),%rax\n    72dc:\t48 8b 18             \tmov    (%rax),%rbx\n    72df:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 72e6 <ki_handle_publish_uri+0x2391>\n    72e6:\t48 8b 00             \tmov    (%rax),%rax\n    72e9:\t44 8b 70 08          \tmov    0x8(%rax),%r14d\n    72ed:\t8b 85 60 ff ff ff    \tmov    -0xa0(%rbp),%eax\n    72f3:\t8d 50 05             \tlea    0x5(%rax),%edx\n    72f6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 72fd <ki_handle_publish_uri+0x23a8>\n    72fd:\t48 63 d2             \tmovslq %edx,%rdx\n    7300:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7304:\t48 01 d0             \tadd    %rdx,%rax\n    7307:\t4c 8b 28             \tmov    (%rax),%r13\n    730a:\te8 00 00 00 00       \tcallq  730f <ki_handle_publish_uri+0x23ba>\n    730f:\t89 c1                \tmov    %eax,%ecx\n    7311:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7318 <ki_handle_publish_uri+0x23c3>\n    7318:\t8b 10                \tmov    (%rax),%edx\n    731a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7321 <ki_handle_publish_uri+0x23cc>\n    7321:\t48 8b 00             \tmov    (%rax),%rax\n    7324:\t41 54                \tpush   %r12\n    7326:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 732d <ki_handle_publish_uri+0x23d8>\n    732d:\t56                   \tpush   %rsi\n    732e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7335 <ki_handle_publish_uri+0x23e0>\n    7335:\t56                   \tpush   %rsi\n    7336:\t53                   \tpush   %rbx\n    7337:\t45 89 f1             \tmov    %r14d,%r9d\n    733a:\t4d 89 e8             \tmov    %r13,%r8\n    733d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7344 <ki_handle_publish_uri+0x23ef>\n    7344:\t48 89 c7             \tmov    %rax,%rdi\n    7347:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    734c:\te8 00 00 00 00       \tcallq  7351 <ki_handle_publish_uri+0x23fc>\n    7351:\t48 83 c4 20          \tadd    $0x20,%rsp\n    7355:\teb 69                \tjmp    73c0 <ki_handle_publish_uri+0x246b>\n    7357:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    735b:\t8b 58 28             \tmov    0x28(%rax),%ebx\n    735e:\t8b 85 60 ff ff ff    \tmov    -0xa0(%rbp),%eax\n    7364:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7367:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 736e <ki_handle_publish_uri+0x2419>\n    736e:\t48 63 d2             \tmovslq %edx,%rdx\n    7371:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7375:\t48 01 d0             \tadd    %rdx,%rax\n    7378:\t4c 8b 20             \tmov    (%rax),%r12\n    737b:\te8 00 00 00 00       \tcallq  7380 <ki_handle_publish_uri+0x242b>\n    7380:\t89 c1                \tmov    %eax,%ecx\n    7382:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7389 <ki_handle_publish_uri+0x2434>\n    7389:\t8b 10                \tmov    (%rax),%edx\n    738b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7392 <ki_handle_publish_uri+0x243d>\n    7392:\t48 8b 00             \tmov    (%rax),%rax\n    7395:\t53                   \tpush   %rbx\n    7396:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 739d <ki_handle_publish_uri+0x2448>\n    739d:\t56                   \tpush   %rsi\n    739e:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 73a5 <ki_handle_publish_uri+0x2450>\n    73a5:\t4d 89 e0             \tmov    %r12,%r8\n    73a8:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 73af <ki_handle_publish_uri+0x245a>\n    73af:\t48 89 c7             \tmov    %rax,%rdi\n    73b2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    73b7:\te8 00 00 00 00       \tcallq  73bc <ki_handle_publish_uri+0x2467>\n    73bc:\t48 83 c4 10          \tadd    $0x10,%rsp\n    73c0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 73c7 <ki_handle_publish_uri+0x2472>\n    73c7:\t8b 00                \tmov    (%rax),%eax\n    73c9:\t85 c0                \ttest   %eax,%eax\n    73cb:\t0f 95 c0             \tsetne  %al\n    73ce:\t0f b6 c0             \tmovzbl %al,%eax\n    73d1:\t48 85 c0             \ttest   %rax,%rax\n    73d4:\t0f 84 6d 01 00 00    \tje     7547 <ki_handle_publish_uri+0x25f2>\n    73da:\te8 00 00 00 00       \tcallq  73df <ki_handle_publish_uri+0x248a>\n    73df:\te9 63 01 00 00       \tjmpq   7547 <ki_handle_publish_uri+0x25f2>\n    73e4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 73eb <ki_handle_publish_uri+0x2496>\n    73eb:\t48 8b 00             \tmov    (%rax),%rax\n    73ee:\t48 85 c0             \ttest   %rax,%rax\n    73f1:\t0f 95 c0             \tsetne  %al\n    73f4:\t0f b6 c0             \tmovzbl %al,%eax\n    73f7:\t48 85 c0             \ttest   %rax,%rax\n    73fa:\t0f 84 be 00 00 00    \tje     74be <ki_handle_publish_uri+0x2569>\n    7400:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7407 <ki_handle_publish_uri+0x24b2>\n    7407:\t4c 8b 28             \tmov    (%rax),%r13\n    740a:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    740e:\t44 8b 70 28          \tmov    0x28(%rax),%r14d\n    7412:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7419 <ki_handle_publish_uri+0x24c4>\n    7419:\t48 8b 00             \tmov    (%rax),%rax\n    741c:\t48 8b 00             \tmov    (%rax),%rax\n    741f:\t48 89 85 28 fd ff ff \tmov    %rax,-0x2d8(%rbp)\n    7426:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 742d <ki_handle_publish_uri+0x24d8>\n    742d:\t48 8b 00             \tmov    (%rax),%rax\n    7430:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    7434:\t8b 85 60 ff ff ff    \tmov    -0xa0(%rbp),%eax\n    743a:\t8d 50 05             \tlea    0x5(%rax),%edx\n    743d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7444 <ki_handle_publish_uri+0x24ef>\n    7444:\t48 63 d2             \tmovslq %edx,%rdx\n    7447:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    744b:\t48 01 d0             \tadd    %rdx,%rax\n    744e:\t48 8b 18             \tmov    (%rax),%rbx\n    7451:\t8b 85 60 ff ff ff    \tmov    -0xa0(%rbp),%eax\n    7457:\t8d 50 05             \tlea    0x5(%rax),%edx\n    745a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7461 <ki_handle_publish_uri+0x250c>\n    7461:\t48 63 d2             \tmovslq %edx,%rdx\n    7464:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7468:\t48 01 d0             \tadd    %rdx,%rax\n    746b:\t48 83 c0 08          \tadd    $0x8,%rax\n    746f:\t44 8b 38             \tmov    (%rax),%r15d\n    7472:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    7477:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 747e <ki_handle_publish_uri+0x2529>\n    747e:\te8 00 00 00 00       \tcallq  7483 <ki_handle_publish_uri+0x252e>\n    7483:\t44 09 f8             \tor     %r15d,%eax\n    7486:\t41 56                \tpush   %r14\n    7488:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 748f <ki_handle_publish_uri+0x253a>\n    748f:\t52                   \tpush   %rdx\n    7490:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 7497 <ki_handle_publish_uri+0x2542>\n    7497:\t4c 8b 85 28 fd ff ff \tmov    -0x2d8(%rbp),%r8\n    749e:\t44 89 e1             \tmov    %r12d,%ecx\n    74a1:\t48 89 da             \tmov    %rbx,%rdx\n    74a4:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 74ab <ki_handle_publish_uri+0x2556>\n    74ab:\t89 c7                \tmov    %eax,%edi\n    74ad:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    74b2:\t41 ff d5             \tcallq  *%r13\n    74b5:\t48 83 c4 10          \tadd    $0x10,%rsp\n    74b9:\te9 89 00 00 00       \tjmpq   7547 <ki_handle_publish_uri+0x25f2>\n    74be:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 74c5 <ki_handle_publish_uri+0x2570>\n    74c5:\t4c 8b 20             \tmov    (%rax),%r12\n    74c8:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    74cc:\t44 8b 70 28          \tmov    0x28(%rax),%r14d\n    74d0:\t8b 85 60 ff ff ff    \tmov    -0xa0(%rbp),%eax\n    74d6:\t8d 50 05             \tlea    0x5(%rax),%edx\n    74d9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 74e0 <ki_handle_publish_uri+0x258b>\n    74e0:\t48 63 d2             \tmovslq %edx,%rdx\n    74e3:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    74e7:\t48 01 d0             \tadd    %rdx,%rax\n    74ea:\t48 8b 18             \tmov    (%rax),%rbx\n    74ed:\t8b 85 60 ff ff ff    \tmov    -0xa0(%rbp),%eax\n    74f3:\t8d 50 05             \tlea    0x5(%rax),%edx\n    74f6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 74fd <ki_handle_publish_uri+0x25a8>\n    74fd:\t48 63 d2             \tmovslq %edx,%rdx\n    7500:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7504:\t48 01 d0             \tadd    %rdx,%rax\n    7507:\t48 83 c0 08          \tadd    $0x8,%rax\n    750b:\t44 8b 28             \tmov    (%rax),%r13d\n    750e:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    7513:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 751a <ki_handle_publish_uri+0x25c5>\n    751a:\te8 00 00 00 00       \tcallq  751f <ki_handle_publish_uri+0x25ca>\n    751f:\t44 09 e8             \tor     %r13d,%eax\n    7522:\t45 89 f1             \tmov    %r14d,%r9d\n    7525:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 752c <ki_handle_publish_uri+0x25d7>\n    752c:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 7533 <ki_handle_publish_uri+0x25de>\n    7533:\t48 89 da             \tmov    %rbx,%rdx\n    7536:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 753d <ki_handle_publish_uri+0x25e8>\n    753d:\t89 c7                \tmov    %eax,%edi\n    753f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7544:\t41 ff d4             \tcallq  *%r12\n    7547:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 754e <ki_handle_publish_uri+0x25f9>\n    754e:\t8b 00                \tmov    (%rax),%eax\n    7550:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    7553:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 755a <ki_handle_publish_uri+0x2605>\n    755a:\t89 10                \tmov    %edx,(%rax)\n    755c:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    7560:\t8b 40 28             \tmov    0x28(%rax),%eax\n    7563:\t89 45 cc             \tmov    %eax,-0x34(%rbp)\n    7566:\teb 01                \tjmp    7569 <ki_handle_publish_uri+0x2614>\n    7568:\t90                   \tnop\n    7569:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    756c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7573 <ki_handle_publish_uri+0x261e>\n    7573:\t8b 00                \tmov    (%rax),%eax\n    7575:\t39 c2                \tcmp    %eax,%edx\n    7577:\t76 0c                \tjbe    7585 <ki_handle_publish_uri+0x2630>\n    7579:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7580 <ki_handle_publish_uri+0x262b>\n    7580:\t8b 00                \tmov    (%rax),%eax\n    7582:\t89 45 cc             \tmov    %eax,-0x34(%rbp)\n    7585:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    758c:\t48 89 c7             \tmov    %rax,%rdi\n    758f:\te8 00 00 00 00       \tcallq  7594 <ki_handle_publish_uri+0x263f>\n    7594:\t85 c0                \ttest   %eax,%eax\n    7596:\t0f 89 34 03 00 00    \tjns    78d0 <ki_handle_publish_uri+0x297b>\n    759c:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    75a1:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 75a8 <ki_handle_publish_uri+0x2653>\n    75a8:\te8 00 00 00 00       \tcallq  75ad <ki_handle_publish_uri+0x2658>\n    75ad:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    75b0:\t0f 8c f2 02 00 00    \tjl     78a8 <ki_handle_publish_uri+0x2953>\n    75b6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 75bd <ki_handle_publish_uri+0x2668>\n    75bd:\t8b 00                \tmov    (%rax),%eax\n    75bf:\t85 c0                \ttest   %eax,%eax\n    75c1:\t0f 85 e1 02 00 00    \tjne    78a8 <ki_handle_publish_uri+0x2953>\n    75c7:\tc7 85 34 ff ff ff ff \tmovl   $0xffffffff,-0xcc(%rbp)\n    75ce:\tff ff ff \n    75d1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 75d8 <ki_handle_publish_uri+0x2683>\n    75d8:\t8b 00                \tmov    (%rax),%eax\n    75da:\t8d 50 01             \tlea    0x1(%rax),%edx\n    75dd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 75e4 <ki_handle_publish_uri+0x268f>\n    75e4:\t89 10                \tmov    %edx,(%rax)\n    75e6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 75ed <ki_handle_publish_uri+0x2698>\n    75ed:\t8b 00                \tmov    (%rax),%eax\n    75ef:\t85 c0                \ttest   %eax,%eax\n    75f1:\t0f 95 c0             \tsetne  %al\n    75f4:\t0f b6 c0             \tmovzbl %al,%eax\n    75f7:\t48 85 c0             \ttest   %rax,%rax\n    75fa:\t0f 84 4f 01 00 00    \tje     774f <ki_handle_publish_uri+0x27fa>\n    7600:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7607 <ki_handle_publish_uri+0x26b2>\n    7607:\t8b 00                \tmov    (%rax),%eax\n    7609:\t85 c0                \ttest   %eax,%eax\n    760b:\t0f 95 c0             \tsetne  %al\n    760e:\t0f b6 c0             \tmovzbl %al,%eax\n    7611:\t48 85 c0             \ttest   %rax,%rax\n    7614:\t74 0d                \tje     7623 <ki_handle_publish_uri+0x26ce>\n    7616:\t8b 85 34 ff ff ff    \tmov    -0xcc(%rbp),%eax\n    761c:\t89 c7                \tmov    %eax,%edi\n    761e:\te8 00 00 00 00       \tcallq  7623 <ki_handle_publish_uri+0x26ce>\n    7623:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 762a <ki_handle_publish_uri+0x26d5>\n    762a:\t48 8b 00             \tmov    (%rax),%rax\n    762d:\t48 85 c0             \ttest   %rax,%rax\n    7630:\t0f 95 c0             \tsetne  %al\n    7633:\t0f b6 c0             \tmovzbl %al,%eax\n    7636:\t48 85 c0             \ttest   %rax,%rax\n    7639:\t0f 84 87 00 00 00    \tje     76c6 <ki_handle_publish_uri+0x2771>\n    763f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7646 <ki_handle_publish_uri+0x26f1>\n    7646:\t48 8b 00             \tmov    (%rax),%rax\n    7649:\t48 8b 18             \tmov    (%rax),%rbx\n    764c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7653 <ki_handle_publish_uri+0x26fe>\n    7653:\t48 8b 00             \tmov    (%rax),%rax\n    7656:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    765a:\t8b 85 34 ff ff ff    \tmov    -0xcc(%rbp),%eax\n    7660:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7663:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 766a <ki_handle_publish_uri+0x2715>\n    766a:\t48 63 d2             \tmovslq %edx,%rdx\n    766d:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7671:\t48 01 d0             \tadd    %rdx,%rax\n    7674:\t4c 8b 20             \tmov    (%rax),%r12\n    7677:\te8 00 00 00 00       \tcallq  767c <ki_handle_publish_uri+0x2727>\n    767c:\t89 c1                \tmov    %eax,%ecx\n    767e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7685 <ki_handle_publish_uri+0x2730>\n    7685:\t8b 10                \tmov    (%rax),%edx\n    7687:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 768e <ki_handle_publish_uri+0x2739>\n    768e:\t48 8b 00             \tmov    (%rax),%rax\n    7691:\t48 83 ec 08          \tsub    $0x8,%rsp\n    7695:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 769c <ki_handle_publish_uri+0x2747>\n    769c:\t56                   \tpush   %rsi\n    769d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 76a4 <ki_handle_publish_uri+0x274f>\n    76a4:\t56                   \tpush   %rsi\n    76a5:\t53                   \tpush   %rbx\n    76a6:\t45 89 e9             \tmov    %r13d,%r9d\n    76a9:\t4d 89 e0             \tmov    %r12,%r8\n    76ac:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 76b3 <ki_handle_publish_uri+0x275e>\n    76b3:\t48 89 c7             \tmov    %rax,%rdi\n    76b6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    76bb:\te8 00 00 00 00       \tcallq  76c0 <ki_handle_publish_uri+0x276b>\n    76c0:\t48 83 c4 20          \tadd    $0x20,%rsp\n    76c4:\teb 65                \tjmp    772b <ki_handle_publish_uri+0x27d6>\n    76c6:\t8b 85 34 ff ff ff    \tmov    -0xcc(%rbp),%eax\n    76cc:\t8d 50 05             \tlea    0x5(%rax),%edx\n    76cf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 76d6 <ki_handle_publish_uri+0x2781>\n    76d6:\t48 63 d2             \tmovslq %edx,%rdx\n    76d9:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    76dd:\t48 01 d0             \tadd    %rdx,%rax\n    76e0:\t48 8b 18             \tmov    (%rax),%rbx\n    76e3:\te8 00 00 00 00       \tcallq  76e8 <ki_handle_publish_uri+0x2793>\n    76e8:\t89 c1                \tmov    %eax,%ecx\n    76ea:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 76f1 <ki_handle_publish_uri+0x279c>\n    76f1:\t8b 10                \tmov    (%rax),%edx\n    76f3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 76fa <ki_handle_publish_uri+0x27a5>\n    76fa:\t48 8b 00             \tmov    (%rax),%rax\n    76fd:\t48 83 ec 08          \tsub    $0x8,%rsp\n    7701:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7708 <ki_handle_publish_uri+0x27b3>\n    7708:\t56                   \tpush   %rsi\n    7709:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 7710 <ki_handle_publish_uri+0x27bb>\n    7710:\t49 89 d8             \tmov    %rbx,%r8\n    7713:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 771a <ki_handle_publish_uri+0x27c5>\n    771a:\t48 89 c7             \tmov    %rax,%rdi\n    771d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7722:\te8 00 00 00 00       \tcallq  7727 <ki_handle_publish_uri+0x27d2>\n    7727:\t48 83 c4 10          \tadd    $0x10,%rsp\n    772b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7732 <ki_handle_publish_uri+0x27dd>\n    7732:\t8b 00                \tmov    (%rax),%eax\n    7734:\t85 c0                \ttest   %eax,%eax\n    7736:\t0f 95 c0             \tsetne  %al\n    7739:\t0f b6 c0             \tmovzbl %al,%eax\n    773c:\t48 85 c0             \ttest   %rax,%rax\n    773f:\t0f 84 4e 01 00 00    \tje     7893 <ki_handle_publish_uri+0x293e>\n    7745:\te8 00 00 00 00       \tcallq  774a <ki_handle_publish_uri+0x27f5>\n    774a:\te9 44 01 00 00       \tjmpq   7893 <ki_handle_publish_uri+0x293e>\n    774f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7756 <ki_handle_publish_uri+0x2801>\n    7756:\t48 8b 00             \tmov    (%rax),%rax\n    7759:\t48 85 c0             \ttest   %rax,%rax\n    775c:\t0f 95 c0             \tsetne  %al\n    775f:\t0f b6 c0             \tmovzbl %al,%eax\n    7762:\t48 85 c0             \ttest   %rax,%rax\n    7765:\t0f 84 aa 00 00 00    \tje     7815 <ki_handle_publish_uri+0x28c0>\n    776b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7772 <ki_handle_publish_uri+0x281d>\n    7772:\t4c 8b 28             \tmov    (%rax),%r13\n    7775:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 777c <ki_handle_publish_uri+0x2827>\n    777c:\t48 8b 00             \tmov    (%rax),%rax\n    777f:\t4c 8b 38             \tmov    (%rax),%r15\n    7782:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7789 <ki_handle_publish_uri+0x2834>\n    7789:\t48 8b 00             \tmov    (%rax),%rax\n    778c:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    7790:\t8b 85 34 ff ff ff    \tmov    -0xcc(%rbp),%eax\n    7796:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7799:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 77a0 <ki_handle_publish_uri+0x284b>\n    77a0:\t48 63 d2             \tmovslq %edx,%rdx\n    77a3:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    77a7:\t48 01 d0             \tadd    %rdx,%rax\n    77aa:\t48 8b 18             \tmov    (%rax),%rbx\n    77ad:\t8b 85 34 ff ff ff    \tmov    -0xcc(%rbp),%eax\n    77b3:\t8d 50 05             \tlea    0x5(%rax),%edx\n    77b6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 77bd <ki_handle_publish_uri+0x2868>\n    77bd:\t48 63 d2             \tmovslq %edx,%rdx\n    77c0:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    77c4:\t48 01 d0             \tadd    %rdx,%rax\n    77c7:\t48 83 c0 08          \tadd    $0x8,%rax\n    77cb:\t44 8b 30             \tmov    (%rax),%r14d\n    77ce:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    77d3:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 77da <ki_handle_publish_uri+0x2885>\n    77da:\te8 00 00 00 00       \tcallq  77df <ki_handle_publish_uri+0x288a>\n    77df:\t44 09 f0             \tor     %r14d,%eax\n    77e2:\t48 83 ec 08          \tsub    $0x8,%rsp\n    77e6:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 77ed <ki_handle_publish_uri+0x2898>\n    77ed:\t52                   \tpush   %rdx\n    77ee:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 77f5 <ki_handle_publish_uri+0x28a0>\n    77f5:\t4d 89 f8             \tmov    %r15,%r8\n    77f8:\t44 89 e1             \tmov    %r12d,%ecx\n    77fb:\t48 89 da             \tmov    %rbx,%rdx\n    77fe:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7805 <ki_handle_publish_uri+0x28b0>\n    7805:\t89 c7                \tmov    %eax,%edi\n    7807:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    780c:\t41 ff d5             \tcallq  *%r13\n    780f:\t48 83 c4 10          \tadd    $0x10,%rsp\n    7813:\teb 7e                \tjmp    7893 <ki_handle_publish_uri+0x293e>\n    7815:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 781c <ki_handle_publish_uri+0x28c7>\n    781c:\t4c 8b 20             \tmov    (%rax),%r12\n    781f:\t8b 85 34 ff ff ff    \tmov    -0xcc(%rbp),%eax\n    7825:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7828:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 782f <ki_handle_publish_uri+0x28da>\n    782f:\t48 63 d2             \tmovslq %edx,%rdx\n    7832:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7836:\t48 01 d0             \tadd    %rdx,%rax\n    7839:\t48 8b 18             \tmov    (%rax),%rbx\n    783c:\t8b 85 34 ff ff ff    \tmov    -0xcc(%rbp),%eax\n    7842:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7845:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 784c <ki_handle_publish_uri+0x28f7>\n    784c:\t48 63 d2             \tmovslq %edx,%rdx\n    784f:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7853:\t48 01 d0             \tadd    %rdx,%rax\n    7856:\t48 83 c0 08          \tadd    $0x8,%rax\n    785a:\t44 8b 28             \tmov    (%rax),%r13d\n    785d:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    7862:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 7869 <ki_handle_publish_uri+0x2914>\n    7869:\te8 00 00 00 00       \tcallq  786e <ki_handle_publish_uri+0x2919>\n    786e:\t44 09 e8             \tor     %r13d,%eax\n    7871:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 7878 <ki_handle_publish_uri+0x2923>\n    7878:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 787f <ki_handle_publish_uri+0x292a>\n    787f:\t48 89 da             \tmov    %rbx,%rdx\n    7882:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7889 <ki_handle_publish_uri+0x2934>\n    7889:\t89 c7                \tmov    %eax,%edi\n    788b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7890:\t41 ff d4             \tcallq  *%r12\n    7893:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 789a <ki_handle_publish_uri+0x2945>\n    789a:\t8b 00                \tmov    (%rax),%eax\n    789c:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    789f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 78a6 <ki_handle_publish_uri+0x2951>\n    78a6:\t89 10                \tmov    %edx,(%rax)\n    78a8:\tc7 45 a4 90 01 00 00 \tmovl   $0x190,-0x5c(%rbp)\n    78af:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 78b6 <ki_handle_publish_uri+0x2961>\n    78b6:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 78bd <ki_handle_publish_uri+0x2968>\n    78bd:\t48 89 85 50 fd ff ff \tmov    %rax,-0x2b0(%rbp)\n    78c4:\t48 89 95 58 fd ff ff \tmov    %rdx,-0x2a8(%rbp)\n    78cb:\te9 d1 2a 00 00       \tjmpq   a3a1 <ki_handle_publish_uri+0x544c>\n    78d0:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    78d7:\t48 8b 90 a8 02 00 00 \tmov    0x2a8(%rax),%rdx\n    78de:\t48 8b 80 a0 02 00 00 \tmov    0x2a0(%rax),%rax\n    78e5:\t48 89 85 70 fd ff ff \tmov    %rax,-0x290(%rbp)\n    78ec:\t48 89 95 78 fd ff ff \tmov    %rdx,-0x288(%rbp)\n    78f3:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    78fa:\t48 8b 90 c8 02 00 00 \tmov    0x2c8(%rax),%rdx\n    7901:\t48 8b 80 c0 02 00 00 \tmov    0x2c0(%rax),%rax\n    7908:\t48 89 85 60 fd ff ff \tmov    %rax,-0x2a0(%rbp)\n    790f:\t48 89 95 68 fd ff ff \tmov    %rdx,-0x298(%rbp)\n    7916:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    791d:\t48 8b 80 e0 00 00 00 \tmov    0xe0(%rax),%rax\n    7924:\t48 85 c0             \ttest   %rax,%rax\n    7927:\t0f 85 34 03 00 00    \tjne    7c61 <ki_handle_publish_uri+0x2d0c>\n    792d:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    7932:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 7939 <ki_handle_publish_uri+0x29e4>\n    7939:\te8 00 00 00 00       \tcallq  793e <ki_handle_publish_uri+0x29e9>\n    793e:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    7941:\t0f 8c f2 02 00 00    \tjl     7c39 <ki_handle_publish_uri+0x2ce4>\n    7947:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 794e <ki_handle_publish_uri+0x29f9>\n    794e:\t8b 00                \tmov    (%rax),%eax\n    7950:\t85 c0                \ttest   %eax,%eax\n    7952:\t0f 85 e1 02 00 00    \tjne    7c39 <ki_handle_publish_uri+0x2ce4>\n    7958:\tc7 85 38 ff ff ff ff \tmovl   $0xffffffff,-0xc8(%rbp)\n    795f:\tff ff ff \n    7962:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7969 <ki_handle_publish_uri+0x2a14>\n    7969:\t8b 00                \tmov    (%rax),%eax\n    796b:\t8d 50 01             \tlea    0x1(%rax),%edx\n    796e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7975 <ki_handle_publish_uri+0x2a20>\n    7975:\t89 10                \tmov    %edx,(%rax)\n    7977:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 797e <ki_handle_publish_uri+0x2a29>\n    797e:\t8b 00                \tmov    (%rax),%eax\n    7980:\t85 c0                \ttest   %eax,%eax\n    7982:\t0f 95 c0             \tsetne  %al\n    7985:\t0f b6 c0             \tmovzbl %al,%eax\n    7988:\t48 85 c0             \ttest   %rax,%rax\n    798b:\t0f 84 4f 01 00 00    \tje     7ae0 <ki_handle_publish_uri+0x2b8b>\n    7991:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7998 <ki_handle_publish_uri+0x2a43>\n    7998:\t8b 00                \tmov    (%rax),%eax\n    799a:\t85 c0                \ttest   %eax,%eax\n    799c:\t0f 95 c0             \tsetne  %al\n    799f:\t0f b6 c0             \tmovzbl %al,%eax\n    79a2:\t48 85 c0             \ttest   %rax,%rax\n    79a5:\t74 0d                \tje     79b4 <ki_handle_publish_uri+0x2a5f>\n    79a7:\t8b 85 38 ff ff ff    \tmov    -0xc8(%rbp),%eax\n    79ad:\t89 c7                \tmov    %eax,%edi\n    79af:\te8 00 00 00 00       \tcallq  79b4 <ki_handle_publish_uri+0x2a5f>\n    79b4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 79bb <ki_handle_publish_uri+0x2a66>\n    79bb:\t48 8b 00             \tmov    (%rax),%rax\n    79be:\t48 85 c0             \ttest   %rax,%rax\n    79c1:\t0f 95 c0             \tsetne  %al\n    79c4:\t0f b6 c0             \tmovzbl %al,%eax\n    79c7:\t48 85 c0             \ttest   %rax,%rax\n    79ca:\t0f 84 87 00 00 00    \tje     7a57 <ki_handle_publish_uri+0x2b02>\n    79d0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 79d7 <ki_handle_publish_uri+0x2a82>\n    79d7:\t48 8b 00             \tmov    (%rax),%rax\n    79da:\t48 8b 18             \tmov    (%rax),%rbx\n    79dd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 79e4 <ki_handle_publish_uri+0x2a8f>\n    79e4:\t48 8b 00             \tmov    (%rax),%rax\n    79e7:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    79eb:\t8b 85 38 ff ff ff    \tmov    -0xc8(%rbp),%eax\n    79f1:\t8d 50 05             \tlea    0x5(%rax),%edx\n    79f4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 79fb <ki_handle_publish_uri+0x2aa6>\n    79fb:\t48 63 d2             \tmovslq %edx,%rdx\n    79fe:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7a02:\t48 01 d0             \tadd    %rdx,%rax\n    7a05:\t4c 8b 20             \tmov    (%rax),%r12\n    7a08:\te8 00 00 00 00       \tcallq  7a0d <ki_handle_publish_uri+0x2ab8>\n    7a0d:\t89 c1                \tmov    %eax,%ecx\n    7a0f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7a16 <ki_handle_publish_uri+0x2ac1>\n    7a16:\t8b 10                \tmov    (%rax),%edx\n    7a18:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7a1f <ki_handle_publish_uri+0x2aca>\n    7a1f:\t48 8b 00             \tmov    (%rax),%rax\n    7a22:\t48 83 ec 08          \tsub    $0x8,%rsp\n    7a26:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7a2d <ki_handle_publish_uri+0x2ad8>\n    7a2d:\t56                   \tpush   %rsi\n    7a2e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7a35 <ki_handle_publish_uri+0x2ae0>\n    7a35:\t56                   \tpush   %rsi\n    7a36:\t53                   \tpush   %rbx\n    7a37:\t45 89 e9             \tmov    %r13d,%r9d\n    7a3a:\t4d 89 e0             \tmov    %r12,%r8\n    7a3d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7a44 <ki_handle_publish_uri+0x2aef>\n    7a44:\t48 89 c7             \tmov    %rax,%rdi\n    7a47:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7a4c:\te8 00 00 00 00       \tcallq  7a51 <ki_handle_publish_uri+0x2afc>\n    7a51:\t48 83 c4 20          \tadd    $0x20,%rsp\n    7a55:\teb 65                \tjmp    7abc <ki_handle_publish_uri+0x2b67>\n    7a57:\t8b 85 38 ff ff ff    \tmov    -0xc8(%rbp),%eax\n    7a5d:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7a60:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7a67 <ki_handle_publish_uri+0x2b12>\n    7a67:\t48 63 d2             \tmovslq %edx,%rdx\n    7a6a:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7a6e:\t48 01 d0             \tadd    %rdx,%rax\n    7a71:\t48 8b 18             \tmov    (%rax),%rbx\n    7a74:\te8 00 00 00 00       \tcallq  7a79 <ki_handle_publish_uri+0x2b24>\n    7a79:\t89 c1                \tmov    %eax,%ecx\n    7a7b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7a82 <ki_handle_publish_uri+0x2b2d>\n    7a82:\t8b 10                \tmov    (%rax),%edx\n    7a84:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7a8b <ki_handle_publish_uri+0x2b36>\n    7a8b:\t48 8b 00             \tmov    (%rax),%rax\n    7a8e:\t48 83 ec 08          \tsub    $0x8,%rsp\n    7a92:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7a99 <ki_handle_publish_uri+0x2b44>\n    7a99:\t56                   \tpush   %rsi\n    7a9a:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 7aa1 <ki_handle_publish_uri+0x2b4c>\n    7aa1:\t49 89 d8             \tmov    %rbx,%r8\n    7aa4:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7aab <ki_handle_publish_uri+0x2b56>\n    7aab:\t48 89 c7             \tmov    %rax,%rdi\n    7aae:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7ab3:\te8 00 00 00 00       \tcallq  7ab8 <ki_handle_publish_uri+0x2b63>\n    7ab8:\t48 83 c4 10          \tadd    $0x10,%rsp\n    7abc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7ac3 <ki_handle_publish_uri+0x2b6e>\n    7ac3:\t8b 00                \tmov    (%rax),%eax\n    7ac5:\t85 c0                \ttest   %eax,%eax\n    7ac7:\t0f 95 c0             \tsetne  %al\n    7aca:\t0f b6 c0             \tmovzbl %al,%eax\n    7acd:\t48 85 c0             \ttest   %rax,%rax\n    7ad0:\t0f 84 4e 01 00 00    \tje     7c24 <ki_handle_publish_uri+0x2ccf>\n    7ad6:\te8 00 00 00 00       \tcallq  7adb <ki_handle_publish_uri+0x2b86>\n    7adb:\te9 44 01 00 00       \tjmpq   7c24 <ki_handle_publish_uri+0x2ccf>\n    7ae0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7ae7 <ki_handle_publish_uri+0x2b92>\n    7ae7:\t48 8b 00             \tmov    (%rax),%rax\n    7aea:\t48 85 c0             \ttest   %rax,%rax\n    7aed:\t0f 95 c0             \tsetne  %al\n    7af0:\t0f b6 c0             \tmovzbl %al,%eax\n    7af3:\t48 85 c0             \ttest   %rax,%rax\n    7af6:\t0f 84 aa 00 00 00    \tje     7ba6 <ki_handle_publish_uri+0x2c51>\n    7afc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7b03 <ki_handle_publish_uri+0x2bae>\n    7b03:\t4c 8b 28             \tmov    (%rax),%r13\n    7b06:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7b0d <ki_handle_publish_uri+0x2bb8>\n    7b0d:\t48 8b 00             \tmov    (%rax),%rax\n    7b10:\t4c 8b 38             \tmov    (%rax),%r15\n    7b13:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7b1a <ki_handle_publish_uri+0x2bc5>\n    7b1a:\t48 8b 00             \tmov    (%rax),%rax\n    7b1d:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    7b21:\t8b 85 38 ff ff ff    \tmov    -0xc8(%rbp),%eax\n    7b27:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7b2a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7b31 <ki_handle_publish_uri+0x2bdc>\n    7b31:\t48 63 d2             \tmovslq %edx,%rdx\n    7b34:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7b38:\t48 01 d0             \tadd    %rdx,%rax\n    7b3b:\t48 8b 18             \tmov    (%rax),%rbx\n    7b3e:\t8b 85 38 ff ff ff    \tmov    -0xc8(%rbp),%eax\n    7b44:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7b47:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7b4e <ki_handle_publish_uri+0x2bf9>\n    7b4e:\t48 63 d2             \tmovslq %edx,%rdx\n    7b51:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7b55:\t48 01 d0             \tadd    %rdx,%rax\n    7b58:\t48 83 c0 08          \tadd    $0x8,%rax\n    7b5c:\t44 8b 30             \tmov    (%rax),%r14d\n    7b5f:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    7b64:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 7b6b <ki_handle_publish_uri+0x2c16>\n    7b6b:\te8 00 00 00 00       \tcallq  7b70 <ki_handle_publish_uri+0x2c1b>\n    7b70:\t44 09 f0             \tor     %r14d,%eax\n    7b73:\t48 83 ec 08          \tsub    $0x8,%rsp\n    7b77:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 7b7e <ki_handle_publish_uri+0x2c29>\n    7b7e:\t52                   \tpush   %rdx\n    7b7f:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 7b86 <ki_handle_publish_uri+0x2c31>\n    7b86:\t4d 89 f8             \tmov    %r15,%r8\n    7b89:\t44 89 e1             \tmov    %r12d,%ecx\n    7b8c:\t48 89 da             \tmov    %rbx,%rdx\n    7b8f:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7b96 <ki_handle_publish_uri+0x2c41>\n    7b96:\t89 c7                \tmov    %eax,%edi\n    7b98:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7b9d:\t41 ff d5             \tcallq  *%r13\n    7ba0:\t48 83 c4 10          \tadd    $0x10,%rsp\n    7ba4:\teb 7e                \tjmp    7c24 <ki_handle_publish_uri+0x2ccf>\n    7ba6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7bad <ki_handle_publish_uri+0x2c58>\n    7bad:\t4c 8b 20             \tmov    (%rax),%r12\n    7bb0:\t8b 85 38 ff ff ff    \tmov    -0xc8(%rbp),%eax\n    7bb6:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7bb9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7bc0 <ki_handle_publish_uri+0x2c6b>\n    7bc0:\t48 63 d2             \tmovslq %edx,%rdx\n    7bc3:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7bc7:\t48 01 d0             \tadd    %rdx,%rax\n    7bca:\t48 8b 18             \tmov    (%rax),%rbx\n    7bcd:\t8b 85 38 ff ff ff    \tmov    -0xc8(%rbp),%eax\n    7bd3:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7bd6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7bdd <ki_handle_publish_uri+0x2c88>\n    7bdd:\t48 63 d2             \tmovslq %edx,%rdx\n    7be0:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7be4:\t48 01 d0             \tadd    %rdx,%rax\n    7be7:\t48 83 c0 08          \tadd    $0x8,%rax\n    7beb:\t44 8b 28             \tmov    (%rax),%r13d\n    7bee:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    7bf3:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 7bfa <ki_handle_publish_uri+0x2ca5>\n    7bfa:\te8 00 00 00 00       \tcallq  7bff <ki_handle_publish_uri+0x2caa>\n    7bff:\t44 09 e8             \tor     %r13d,%eax\n    7c02:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 7c09 <ki_handle_publish_uri+0x2cb4>\n    7c09:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 7c10 <ki_handle_publish_uri+0x2cbb>\n    7c10:\t48 89 da             \tmov    %rbx,%rdx\n    7c13:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7c1a <ki_handle_publish_uri+0x2cc5>\n    7c1a:\t89 c7                \tmov    %eax,%edi\n    7c1c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7c21:\t41 ff d4             \tcallq  *%r12\n    7c24:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7c2b <ki_handle_publish_uri+0x2cd6>\n    7c2b:\t8b 00                \tmov    (%rax),%eax\n    7c2d:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    7c30:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7c37 <ki_handle_publish_uri+0x2ce2>\n    7c37:\t89 10                \tmov    %edx,(%rax)\n    7c39:\tc7 45 a4 90 01 00 00 \tmovl   $0x190,-0x5c(%rbp)\n    7c40:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7c47 <ki_handle_publish_uri+0x2cf2>\n    7c47:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 7c4e <ki_handle_publish_uri+0x2cf9>\n    7c4e:\t48 89 85 50 fd ff ff \tmov    %rax,-0x2b0(%rbp)\n    7c55:\t48 89 95 58 fd ff ff \tmov    %rdx,-0x2a8(%rbp)\n    7c5c:\te9 40 27 00 00       \tjmpq   a3a1 <ki_handle_publish_uri+0x544c>\n    7c61:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    7c68:\t48 8b 80 e0 00 00 00 \tmov    0xe0(%rax),%rax\n    7c6f:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    7c73:\t48 85 c0             \ttest   %rax,%rax\n    7c76:\t0f 85 49 03 00 00    \tjne    7fc5 <ki_handle_publish_uri+0x3070>\n    7c7c:\t48 c7 85 90 fd ff ff \tmovq   $0x0,-0x270(%rbp)\n    7c83:\t00 00 00 00 \n    7c87:\t83 7d b0 00          \tcmpl   $0x0,-0x50(%rbp)\n    7c8b:\t0f 84 f6 06 00 00    \tje     8387 <ki_handle_publish_uri+0x3432>\n    7c91:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    7c96:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 7c9d <ki_handle_publish_uri+0x2d48>\n    7c9d:\te8 00 00 00 00       \tcallq  7ca2 <ki_handle_publish_uri+0x2d4d>\n    7ca2:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    7ca5:\t0f 8c f2 02 00 00    \tjl     7f9d <ki_handle_publish_uri+0x3048>\n    7cab:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7cb2 <ki_handle_publish_uri+0x2d5d>\n    7cb2:\t8b 00                \tmov    (%rax),%eax\n    7cb4:\t85 c0                \ttest   %eax,%eax\n    7cb6:\t0f 85 e1 02 00 00    \tjne    7f9d <ki_handle_publish_uri+0x3048>\n    7cbc:\tc7 85 58 ff ff ff ff \tmovl   $0xffffffff,-0xa8(%rbp)\n    7cc3:\tff ff ff \n    7cc6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7ccd <ki_handle_publish_uri+0x2d78>\n    7ccd:\t8b 00                \tmov    (%rax),%eax\n    7ccf:\t8d 50 01             \tlea    0x1(%rax),%edx\n    7cd2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7cd9 <ki_handle_publish_uri+0x2d84>\n    7cd9:\t89 10                \tmov    %edx,(%rax)\n    7cdb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7ce2 <ki_handle_publish_uri+0x2d8d>\n    7ce2:\t8b 00                \tmov    (%rax),%eax\n    7ce4:\t85 c0                \ttest   %eax,%eax\n    7ce6:\t0f 95 c0             \tsetne  %al\n    7ce9:\t0f b6 c0             \tmovzbl %al,%eax\n    7cec:\t48 85 c0             \ttest   %rax,%rax\n    7cef:\t0f 84 4f 01 00 00    \tje     7e44 <ki_handle_publish_uri+0x2eef>\n    7cf5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7cfc <ki_handle_publish_uri+0x2da7>\n    7cfc:\t8b 00                \tmov    (%rax),%eax\n    7cfe:\t85 c0                \ttest   %eax,%eax\n    7d00:\t0f 95 c0             \tsetne  %al\n    7d03:\t0f b6 c0             \tmovzbl %al,%eax\n    7d06:\t48 85 c0             \ttest   %rax,%rax\n    7d09:\t74 0d                \tje     7d18 <ki_handle_publish_uri+0x2dc3>\n    7d0b:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n    7d11:\t89 c7                \tmov    %eax,%edi\n    7d13:\te8 00 00 00 00       \tcallq  7d18 <ki_handle_publish_uri+0x2dc3>\n    7d18:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7d1f <ki_handle_publish_uri+0x2dca>\n    7d1f:\t48 8b 00             \tmov    (%rax),%rax\n    7d22:\t48 85 c0             \ttest   %rax,%rax\n    7d25:\t0f 95 c0             \tsetne  %al\n    7d28:\t0f b6 c0             \tmovzbl %al,%eax\n    7d2b:\t48 85 c0             \ttest   %rax,%rax\n    7d2e:\t0f 84 87 00 00 00    \tje     7dbb <ki_handle_publish_uri+0x2e66>\n    7d34:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7d3b <ki_handle_publish_uri+0x2de6>\n    7d3b:\t48 8b 00             \tmov    (%rax),%rax\n    7d3e:\t48 8b 18             \tmov    (%rax),%rbx\n    7d41:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7d48 <ki_handle_publish_uri+0x2df3>\n    7d48:\t48 8b 00             \tmov    (%rax),%rax\n    7d4b:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    7d4f:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n    7d55:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7d58:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7d5f <ki_handle_publish_uri+0x2e0a>\n    7d5f:\t48 63 d2             \tmovslq %edx,%rdx\n    7d62:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7d66:\t48 01 d0             \tadd    %rdx,%rax\n    7d69:\t4c 8b 20             \tmov    (%rax),%r12\n    7d6c:\te8 00 00 00 00       \tcallq  7d71 <ki_handle_publish_uri+0x2e1c>\n    7d71:\t89 c1                \tmov    %eax,%ecx\n    7d73:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7d7a <ki_handle_publish_uri+0x2e25>\n    7d7a:\t8b 10                \tmov    (%rax),%edx\n    7d7c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7d83 <ki_handle_publish_uri+0x2e2e>\n    7d83:\t48 8b 00             \tmov    (%rax),%rax\n    7d86:\t48 83 ec 08          \tsub    $0x8,%rsp\n    7d8a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7d91 <ki_handle_publish_uri+0x2e3c>\n    7d91:\t56                   \tpush   %rsi\n    7d92:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7d99 <ki_handle_publish_uri+0x2e44>\n    7d99:\t56                   \tpush   %rsi\n    7d9a:\t53                   \tpush   %rbx\n    7d9b:\t45 89 e9             \tmov    %r13d,%r9d\n    7d9e:\t4d 89 e0             \tmov    %r12,%r8\n    7da1:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7da8 <ki_handle_publish_uri+0x2e53>\n    7da8:\t48 89 c7             \tmov    %rax,%rdi\n    7dab:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7db0:\te8 00 00 00 00       \tcallq  7db5 <ki_handle_publish_uri+0x2e60>\n    7db5:\t48 83 c4 20          \tadd    $0x20,%rsp\n    7db9:\teb 65                \tjmp    7e20 <ki_handle_publish_uri+0x2ecb>\n    7dbb:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n    7dc1:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7dc4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7dcb <ki_handle_publish_uri+0x2e76>\n    7dcb:\t48 63 d2             \tmovslq %edx,%rdx\n    7dce:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7dd2:\t48 01 d0             \tadd    %rdx,%rax\n    7dd5:\t48 8b 18             \tmov    (%rax),%rbx\n    7dd8:\te8 00 00 00 00       \tcallq  7ddd <ki_handle_publish_uri+0x2e88>\n    7ddd:\t89 c1                \tmov    %eax,%ecx\n    7ddf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7de6 <ki_handle_publish_uri+0x2e91>\n    7de6:\t8b 10                \tmov    (%rax),%edx\n    7de8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7def <ki_handle_publish_uri+0x2e9a>\n    7def:\t48 8b 00             \tmov    (%rax),%rax\n    7df2:\t48 83 ec 08          \tsub    $0x8,%rsp\n    7df6:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7dfd <ki_handle_publish_uri+0x2ea8>\n    7dfd:\t56                   \tpush   %rsi\n    7dfe:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 7e05 <ki_handle_publish_uri+0x2eb0>\n    7e05:\t49 89 d8             \tmov    %rbx,%r8\n    7e08:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7e0f <ki_handle_publish_uri+0x2eba>\n    7e0f:\t48 89 c7             \tmov    %rax,%rdi\n    7e12:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7e17:\te8 00 00 00 00       \tcallq  7e1c <ki_handle_publish_uri+0x2ec7>\n    7e1c:\t48 83 c4 10          \tadd    $0x10,%rsp\n    7e20:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7e27 <ki_handle_publish_uri+0x2ed2>\n    7e27:\t8b 00                \tmov    (%rax),%eax\n    7e29:\t85 c0                \ttest   %eax,%eax\n    7e2b:\t0f 95 c0             \tsetne  %al\n    7e2e:\t0f b6 c0             \tmovzbl %al,%eax\n    7e31:\t48 85 c0             \ttest   %rax,%rax\n    7e34:\t0f 84 4e 01 00 00    \tje     7f88 <ki_handle_publish_uri+0x3033>\n    7e3a:\te8 00 00 00 00       \tcallq  7e3f <ki_handle_publish_uri+0x2eea>\n    7e3f:\te9 44 01 00 00       \tjmpq   7f88 <ki_handle_publish_uri+0x3033>\n    7e44:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7e4b <ki_handle_publish_uri+0x2ef6>\n    7e4b:\t48 8b 00             \tmov    (%rax),%rax\n    7e4e:\t48 85 c0             \ttest   %rax,%rax\n    7e51:\t0f 95 c0             \tsetne  %al\n    7e54:\t0f b6 c0             \tmovzbl %al,%eax\n    7e57:\t48 85 c0             \ttest   %rax,%rax\n    7e5a:\t0f 84 aa 00 00 00    \tje     7f0a <ki_handle_publish_uri+0x2fb5>\n    7e60:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7e67 <ki_handle_publish_uri+0x2f12>\n    7e67:\t4c 8b 28             \tmov    (%rax),%r13\n    7e6a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7e71 <ki_handle_publish_uri+0x2f1c>\n    7e71:\t48 8b 00             \tmov    (%rax),%rax\n    7e74:\t4c 8b 38             \tmov    (%rax),%r15\n    7e77:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7e7e <ki_handle_publish_uri+0x2f29>\n    7e7e:\t48 8b 00             \tmov    (%rax),%rax\n    7e81:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    7e85:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n    7e8b:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7e8e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7e95 <ki_handle_publish_uri+0x2f40>\n    7e95:\t48 63 d2             \tmovslq %edx,%rdx\n    7e98:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7e9c:\t48 01 d0             \tadd    %rdx,%rax\n    7e9f:\t48 8b 18             \tmov    (%rax),%rbx\n    7ea2:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n    7ea8:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7eab:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7eb2 <ki_handle_publish_uri+0x2f5d>\n    7eb2:\t48 63 d2             \tmovslq %edx,%rdx\n    7eb5:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7eb9:\t48 01 d0             \tadd    %rdx,%rax\n    7ebc:\t48 83 c0 08          \tadd    $0x8,%rax\n    7ec0:\t44 8b 30             \tmov    (%rax),%r14d\n    7ec3:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    7ec8:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 7ecf <ki_handle_publish_uri+0x2f7a>\n    7ecf:\te8 00 00 00 00       \tcallq  7ed4 <ki_handle_publish_uri+0x2f7f>\n    7ed4:\t44 09 f0             \tor     %r14d,%eax\n    7ed7:\t48 83 ec 08          \tsub    $0x8,%rsp\n    7edb:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 7ee2 <ki_handle_publish_uri+0x2f8d>\n    7ee2:\t52                   \tpush   %rdx\n    7ee3:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 7eea <ki_handle_publish_uri+0x2f95>\n    7eea:\t4d 89 f8             \tmov    %r15,%r8\n    7eed:\t44 89 e1             \tmov    %r12d,%ecx\n    7ef0:\t48 89 da             \tmov    %rbx,%rdx\n    7ef3:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7efa <ki_handle_publish_uri+0x2fa5>\n    7efa:\t89 c7                \tmov    %eax,%edi\n    7efc:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7f01:\t41 ff d5             \tcallq  *%r13\n    7f04:\t48 83 c4 10          \tadd    $0x10,%rsp\n    7f08:\teb 7e                \tjmp    7f88 <ki_handle_publish_uri+0x3033>\n    7f0a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7f11 <ki_handle_publish_uri+0x2fbc>\n    7f11:\t4c 8b 20             \tmov    (%rax),%r12\n    7f14:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n    7f1a:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7f1d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7f24 <ki_handle_publish_uri+0x2fcf>\n    7f24:\t48 63 d2             \tmovslq %edx,%rdx\n    7f27:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7f2b:\t48 01 d0             \tadd    %rdx,%rax\n    7f2e:\t48 8b 18             \tmov    (%rax),%rbx\n    7f31:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n    7f37:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7f3a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7f41 <ki_handle_publish_uri+0x2fec>\n    7f41:\t48 63 d2             \tmovslq %edx,%rdx\n    7f44:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7f48:\t48 01 d0             \tadd    %rdx,%rax\n    7f4b:\t48 83 c0 08          \tadd    $0x8,%rax\n    7f4f:\t44 8b 28             \tmov    (%rax),%r13d\n    7f52:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    7f57:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 7f5e <ki_handle_publish_uri+0x3009>\n    7f5e:\te8 00 00 00 00       \tcallq  7f63 <ki_handle_publish_uri+0x300e>\n    7f63:\t44 09 e8             \tor     %r13d,%eax\n    7f66:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 7f6d <ki_handle_publish_uri+0x3018>\n    7f6d:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 7f74 <ki_handle_publish_uri+0x301f>\n    7f74:\t48 89 da             \tmov    %rbx,%rdx\n    7f77:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7f7e <ki_handle_publish_uri+0x3029>\n    7f7e:\t89 c7                \tmov    %eax,%edi\n    7f80:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7f85:\t41 ff d4             \tcallq  *%r12\n    7f88:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7f8f <ki_handle_publish_uri+0x303a>\n    7f8f:\t8b 00                \tmov    (%rax),%eax\n    7f91:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    7f94:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7f9b <ki_handle_publish_uri+0x3046>\n    7f9b:\t89 10                \tmov    %edx,(%rax)\n    7f9d:\tc7 45 a4 90 01 00 00 \tmovl   $0x190,-0x5c(%rbp)\n    7fa4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7fab <ki_handle_publish_uri+0x3056>\n    7fab:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 7fb2 <ki_handle_publish_uri+0x305d>\n    7fb2:\t48 89 85 50 fd ff ff \tmov    %rax,-0x2b0(%rbp)\n    7fb9:\t48 89 95 58 fd ff ff \tmov    %rdx,-0x2a8(%rbp)\n    7fc0:\te9 dc 23 00 00       \tjmpq   a3a1 <ki_handle_publish_uri+0x544c>\n    7fc5:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    7fcc:\t48 89 c7             \tmov    %rax,%rdi\n    7fcf:\te8 00 00 00 00       \tcallq  7fd4 <ki_handle_publish_uri+0x307f>\n    7fd4:\t48 89 85 90 fd ff ff \tmov    %rax,-0x270(%rbp)\n    7fdb:\t48 8b 85 90 fd ff ff \tmov    -0x270(%rbp),%rax\n    7fe2:\t48 85 c0             \ttest   %rax,%rax\n    7fe5:\t0f 85 34 03 00 00    \tjne    831f <ki_handle_publish_uri+0x33ca>\n    7feb:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    7ff0:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 7ff7 <ki_handle_publish_uri+0x30a2>\n    7ff7:\te8 00 00 00 00       \tcallq  7ffc <ki_handle_publish_uri+0x30a7>\n    7ffc:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    7fff:\t0f 8c f2 02 00 00    \tjl     82f7 <ki_handle_publish_uri+0x33a2>\n    8005:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 800c <ki_handle_publish_uri+0x30b7>\n    800c:\t8b 00                \tmov    (%rax),%eax\n    800e:\t85 c0                \ttest   %eax,%eax\n    8010:\t0f 85 e1 02 00 00    \tjne    82f7 <ki_handle_publish_uri+0x33a2>\n    8016:\tc7 85 5c ff ff ff ff \tmovl   $0xffffffff,-0xa4(%rbp)\n    801d:\tff ff ff \n    8020:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8027 <ki_handle_publish_uri+0x30d2>\n    8027:\t8b 00                \tmov    (%rax),%eax\n    8029:\t8d 50 01             \tlea    0x1(%rax),%edx\n    802c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8033 <ki_handle_publish_uri+0x30de>\n    8033:\t89 10                \tmov    %edx,(%rax)\n    8035:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 803c <ki_handle_publish_uri+0x30e7>\n    803c:\t8b 00                \tmov    (%rax),%eax\n    803e:\t85 c0                \ttest   %eax,%eax\n    8040:\t0f 95 c0             \tsetne  %al\n    8043:\t0f b6 c0             \tmovzbl %al,%eax\n    8046:\t48 85 c0             \ttest   %rax,%rax\n    8049:\t0f 84 4f 01 00 00    \tje     819e <ki_handle_publish_uri+0x3249>\n    804f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8056 <ki_handle_publish_uri+0x3101>\n    8056:\t8b 00                \tmov    (%rax),%eax\n    8058:\t85 c0                \ttest   %eax,%eax\n    805a:\t0f 95 c0             \tsetne  %al\n    805d:\t0f b6 c0             \tmovzbl %al,%eax\n    8060:\t48 85 c0             \ttest   %rax,%rax\n    8063:\t74 0d                \tje     8072 <ki_handle_publish_uri+0x311d>\n    8065:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n    806b:\t89 c7                \tmov    %eax,%edi\n    806d:\te8 00 00 00 00       \tcallq  8072 <ki_handle_publish_uri+0x311d>\n    8072:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8079 <ki_handle_publish_uri+0x3124>\n    8079:\t48 8b 00             \tmov    (%rax),%rax\n    807c:\t48 85 c0             \ttest   %rax,%rax\n    807f:\t0f 95 c0             \tsetne  %al\n    8082:\t0f b6 c0             \tmovzbl %al,%eax\n    8085:\t48 85 c0             \ttest   %rax,%rax\n    8088:\t0f 84 87 00 00 00    \tje     8115 <ki_handle_publish_uri+0x31c0>\n    808e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8095 <ki_handle_publish_uri+0x3140>\n    8095:\t48 8b 00             \tmov    (%rax),%rax\n    8098:\t48 8b 18             \tmov    (%rax),%rbx\n    809b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 80a2 <ki_handle_publish_uri+0x314d>\n    80a2:\t48 8b 00             \tmov    (%rax),%rax\n    80a5:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    80a9:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n    80af:\t8d 50 05             \tlea    0x5(%rax),%edx\n    80b2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 80b9 <ki_handle_publish_uri+0x3164>\n    80b9:\t48 63 d2             \tmovslq %edx,%rdx\n    80bc:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    80c0:\t48 01 d0             \tadd    %rdx,%rax\n    80c3:\t4c 8b 20             \tmov    (%rax),%r12\n    80c6:\te8 00 00 00 00       \tcallq  80cb <ki_handle_publish_uri+0x3176>\n    80cb:\t89 c1                \tmov    %eax,%ecx\n    80cd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 80d4 <ki_handle_publish_uri+0x317f>\n    80d4:\t8b 10                \tmov    (%rax),%edx\n    80d6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 80dd <ki_handle_publish_uri+0x3188>\n    80dd:\t48 8b 00             \tmov    (%rax),%rax\n    80e0:\t48 83 ec 08          \tsub    $0x8,%rsp\n    80e4:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 80eb <ki_handle_publish_uri+0x3196>\n    80eb:\t56                   \tpush   %rsi\n    80ec:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 80f3 <ki_handle_publish_uri+0x319e>\n    80f3:\t56                   \tpush   %rsi\n    80f4:\t53                   \tpush   %rbx\n    80f5:\t45 89 e9             \tmov    %r13d,%r9d\n    80f8:\t4d 89 e0             \tmov    %r12,%r8\n    80fb:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8102 <ki_handle_publish_uri+0x31ad>\n    8102:\t48 89 c7             \tmov    %rax,%rdi\n    8105:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    810a:\te8 00 00 00 00       \tcallq  810f <ki_handle_publish_uri+0x31ba>\n    810f:\t48 83 c4 20          \tadd    $0x20,%rsp\n    8113:\teb 65                \tjmp    817a <ki_handle_publish_uri+0x3225>\n    8115:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n    811b:\t8d 50 05             \tlea    0x5(%rax),%edx\n    811e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8125 <ki_handle_publish_uri+0x31d0>\n    8125:\t48 63 d2             \tmovslq %edx,%rdx\n    8128:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    812c:\t48 01 d0             \tadd    %rdx,%rax\n    812f:\t48 8b 18             \tmov    (%rax),%rbx\n    8132:\te8 00 00 00 00       \tcallq  8137 <ki_handle_publish_uri+0x31e2>\n    8137:\t89 c1                \tmov    %eax,%ecx\n    8139:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8140 <ki_handle_publish_uri+0x31eb>\n    8140:\t8b 10                \tmov    (%rax),%edx\n    8142:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8149 <ki_handle_publish_uri+0x31f4>\n    8149:\t48 8b 00             \tmov    (%rax),%rax\n    814c:\t48 83 ec 08          \tsub    $0x8,%rsp\n    8150:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8157 <ki_handle_publish_uri+0x3202>\n    8157:\t56                   \tpush   %rsi\n    8158:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 815f <ki_handle_publish_uri+0x320a>\n    815f:\t49 89 d8             \tmov    %rbx,%r8\n    8162:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8169 <ki_handle_publish_uri+0x3214>\n    8169:\t48 89 c7             \tmov    %rax,%rdi\n    816c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8171:\te8 00 00 00 00       \tcallq  8176 <ki_handle_publish_uri+0x3221>\n    8176:\t48 83 c4 10          \tadd    $0x10,%rsp\n    817a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8181 <ki_handle_publish_uri+0x322c>\n    8181:\t8b 00                \tmov    (%rax),%eax\n    8183:\t85 c0                \ttest   %eax,%eax\n    8185:\t0f 95 c0             \tsetne  %al\n    8188:\t0f b6 c0             \tmovzbl %al,%eax\n    818b:\t48 85 c0             \ttest   %rax,%rax\n    818e:\t0f 84 4e 01 00 00    \tje     82e2 <ki_handle_publish_uri+0x338d>\n    8194:\te8 00 00 00 00       \tcallq  8199 <ki_handle_publish_uri+0x3244>\n    8199:\te9 44 01 00 00       \tjmpq   82e2 <ki_handle_publish_uri+0x338d>\n    819e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 81a5 <ki_handle_publish_uri+0x3250>\n    81a5:\t48 8b 00             \tmov    (%rax),%rax\n    81a8:\t48 85 c0             \ttest   %rax,%rax\n    81ab:\t0f 95 c0             \tsetne  %al\n    81ae:\t0f b6 c0             \tmovzbl %al,%eax\n    81b1:\t48 85 c0             \ttest   %rax,%rax\n    81b4:\t0f 84 aa 00 00 00    \tje     8264 <ki_handle_publish_uri+0x330f>\n    81ba:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 81c1 <ki_handle_publish_uri+0x326c>\n    81c1:\t4c 8b 28             \tmov    (%rax),%r13\n    81c4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 81cb <ki_handle_publish_uri+0x3276>\n    81cb:\t48 8b 00             \tmov    (%rax),%rax\n    81ce:\t4c 8b 38             \tmov    (%rax),%r15\n    81d1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 81d8 <ki_handle_publish_uri+0x3283>\n    81d8:\t48 8b 00             \tmov    (%rax),%rax\n    81db:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    81df:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n    81e5:\t8d 50 05             \tlea    0x5(%rax),%edx\n    81e8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 81ef <ki_handle_publish_uri+0x329a>\n    81ef:\t48 63 d2             \tmovslq %edx,%rdx\n    81f2:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    81f6:\t48 01 d0             \tadd    %rdx,%rax\n    81f9:\t48 8b 18             \tmov    (%rax),%rbx\n    81fc:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n    8202:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8205:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 820c <ki_handle_publish_uri+0x32b7>\n    820c:\t48 63 d2             \tmovslq %edx,%rdx\n    820f:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    8213:\t48 01 d0             \tadd    %rdx,%rax\n    8216:\t48 83 c0 08          \tadd    $0x8,%rax\n    821a:\t44 8b 30             \tmov    (%rax),%r14d\n    821d:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    8222:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8229 <ki_handle_publish_uri+0x32d4>\n    8229:\te8 00 00 00 00       \tcallq  822e <ki_handle_publish_uri+0x32d9>\n    822e:\t44 09 f0             \tor     %r14d,%eax\n    8231:\t48 83 ec 08          \tsub    $0x8,%rsp\n    8235:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 823c <ki_handle_publish_uri+0x32e7>\n    823c:\t52                   \tpush   %rdx\n    823d:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 8244 <ki_handle_publish_uri+0x32ef>\n    8244:\t4d 89 f8             \tmov    %r15,%r8\n    8247:\t44 89 e1             \tmov    %r12d,%ecx\n    824a:\t48 89 da             \tmov    %rbx,%rdx\n    824d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8254 <ki_handle_publish_uri+0x32ff>\n    8254:\t89 c7                \tmov    %eax,%edi\n    8256:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    825b:\t41 ff d5             \tcallq  *%r13\n    825e:\t48 83 c4 10          \tadd    $0x10,%rsp\n    8262:\teb 7e                \tjmp    82e2 <ki_handle_publish_uri+0x338d>\n    8264:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 826b <ki_handle_publish_uri+0x3316>\n    826b:\t4c 8b 20             \tmov    (%rax),%r12\n    826e:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n    8274:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8277:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 827e <ki_handle_publish_uri+0x3329>\n    827e:\t48 63 d2             \tmovslq %edx,%rdx\n    8281:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    8285:\t48 01 d0             \tadd    %rdx,%rax\n    8288:\t48 8b 18             \tmov    (%rax),%rbx\n    828b:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n    8291:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8294:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 829b <ki_handle_publish_uri+0x3346>\n    829b:\t48 63 d2             \tmovslq %edx,%rdx\n    829e:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    82a2:\t48 01 d0             \tadd    %rdx,%rax\n    82a5:\t48 83 c0 08          \tadd    $0x8,%rax\n    82a9:\t44 8b 28             \tmov    (%rax),%r13d\n    82ac:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    82b1:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 82b8 <ki_handle_publish_uri+0x3363>\n    82b8:\te8 00 00 00 00       \tcallq  82bd <ki_handle_publish_uri+0x3368>\n    82bd:\t44 09 e8             \tor     %r13d,%eax\n    82c0:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 82c7 <ki_handle_publish_uri+0x3372>\n    82c7:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 82ce <ki_handle_publish_uri+0x3379>\n    82ce:\t48 89 da             \tmov    %rbx,%rdx\n    82d1:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 82d8 <ki_handle_publish_uri+0x3383>\n    82d8:\t89 c7                \tmov    %eax,%edi\n    82da:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    82df:\t41 ff d4             \tcallq  *%r12\n    82e2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 82e9 <ki_handle_publish_uri+0x3394>\n    82e9:\t8b 00                \tmov    (%rax),%eax\n    82eb:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    82ee:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 82f5 <ki_handle_publish_uri+0x33a0>\n    82f5:\t89 10                \tmov    %edx,(%rax)\n    82f7:\tc7 45 a4 90 01 00 00 \tmovl   $0x190,-0x5c(%rbp)\n    82fe:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8305 <ki_handle_publish_uri+0x33b0>\n    8305:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 830c <ki_handle_publish_uri+0x33b7>\n    830c:\t48 89 85 50 fd ff ff \tmov    %rax,-0x2b0(%rbp)\n    8313:\t48 89 95 58 fd ff ff \tmov    %rdx,-0x2a8(%rbp)\n    831a:\te9 82 20 00 00       \tjmpq   a3a1 <ki_handle_publish_uri+0x544c>\n    831f:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    8326:\t48 8b 80 e0 00 00 00 \tmov    0xe0(%rax),%rax\n    832d:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    8331:\t89 85 98 fd ff ff    \tmov    %eax,-0x268(%rbp)\n    8337:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 833e <ki_handle_publish_uri+0x33e9>\n    833e:\t8b 00                \tmov    (%rax),%eax\n    8340:\t85 c0                \ttest   %eax,%eax\n    8342:\t74 43                \tje     8387 <ki_handle_publish_uri+0x3432>\n    8344:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    8348:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    834c:\t8b 00                \tmov    (%rax),%eax\n    834e:\t83 f8 01             \tcmp    $0x1,%eax\n    8351:\t75 34                \tjne    8387 <ki_handle_publish_uri+0x3432>\n    8353:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    835a:\t48 8b 80 d8 00 00 00 \tmov    0xd8(%rax),%rax\n    8361:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    8365:\t83 f8 05             \tcmp    $0x5,%eax\n    8368:\t75 1d                \tjne    8387 <ki_handle_publish_uri+0x3432>\n    836a:\t48 8b 95 90 fd ff ff \tmov    -0x270(%rbp),%rdx\n    8371:\t48 8b 85 98 fd ff ff \tmov    -0x268(%rbp),%rax\n    8378:\t48 89 d7             \tmov    %rdx,%rdi\n    837b:\t48 89 c6             \tmov    %rax,%rsi\n    837e:\te8 00 00 00 00       \tcallq  8383 <ki_handle_publish_uri+0x342e>\n    8383:\t48 89 45 98          \tmov    %rax,-0x68(%rbp)\n    8387:\t48 8d 85 a0 fd ff ff \tlea    -0x260(%rbp),%rax\n    838e:\tba 80 01 00 00       \tmov    $0x180,%edx\n    8393:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    8398:\t48 89 c7             \tmov    %rax,%rdi\n    839b:\te8 00 00 00 00       \tcallq  83a0 <ki_handle_publish_uri+0x344b>\n    83a0:\t48 83 bd 30 fd ff ff \tcmpq   $0x0,-0x2d0(%rbp)\n    83a7:\t00 \n    83a8:\t0f 84 97 0d 00 00    \tje     9145 <ki_handle_publish_uri+0x41f0>\n    83ae:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 83b5 <ki_handle_publish_uri+0x3460>\n    83b5:\t4c 8b 50 18          \tmov    0x18(%rax),%r10\n    83b9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 83c0 <ki_handle_publish_uri+0x346b>\n    83c0:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    83c4:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 83cb <ki_handle_publish_uri+0x3476>\n    83cb:\t41 b8 c1 01 00 00    \tmov    $0x1c1,%r8d\n    83d1:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 83d8 <ki_handle_publish_uri+0x3483>\n    83d8:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 83df <ki_handle_publish_uri+0x348a>\n    83df:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    83e4:\t48 89 c7             \tmov    %rax,%rdi\n    83e7:\t41 ff d2             \tcallq  *%r10\n    83ea:\t48 89 45 a8          \tmov    %rax,-0x58(%rbp)\n    83ee:\t48 83 7d a8 00       \tcmpq   $0x0,-0x58(%rbp)\n    83f3:\t0f 85 27 03 00 00    \tjne    8720 <ki_handle_publish_uri+0x37cb>\n    83f9:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    83fe:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8405 <ki_handle_publish_uri+0x34b0>\n    8405:\te8 00 00 00 00       \tcallq  840a <ki_handle_publish_uri+0x34b5>\n    840a:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    840d:\t0f 8c 81 1f 00 00    \tjl     a394 <ki_handle_publish_uri+0x543f>\n    8413:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 841a <ki_handle_publish_uri+0x34c5>\n    841a:\t8b 00                \tmov    (%rax),%eax\n    841c:\t85 c0                \ttest   %eax,%eax\n    841e:\t0f 85 70 1f 00 00    \tjne    a394 <ki_handle_publish_uri+0x543f>\n    8424:\tc7 85 48 ff ff ff ff \tmovl   $0xffffffff,-0xb8(%rbp)\n    842b:\tff ff ff \n    842e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8435 <ki_handle_publish_uri+0x34e0>\n    8435:\t8b 00                \tmov    (%rax),%eax\n    8437:\t8d 50 01             \tlea    0x1(%rax),%edx\n    843a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8441 <ki_handle_publish_uri+0x34ec>\n    8441:\t89 10                \tmov    %edx,(%rax)\n    8443:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 844a <ki_handle_publish_uri+0x34f5>\n    844a:\t8b 00                \tmov    (%rax),%eax\n    844c:\t85 c0                \ttest   %eax,%eax\n    844e:\t0f 95 c0             \tsetne  %al\n    8451:\t0f b6 c0             \tmovzbl %al,%eax\n    8454:\t48 85 c0             \ttest   %rax,%rax\n    8457:\t0f 84 57 01 00 00    \tje     85b4 <ki_handle_publish_uri+0x365f>\n    845d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8464 <ki_handle_publish_uri+0x350f>\n    8464:\t8b 00                \tmov    (%rax),%eax\n    8466:\t85 c0                \ttest   %eax,%eax\n    8468:\t0f 95 c0             \tsetne  %al\n    846b:\t0f b6 c0             \tmovzbl %al,%eax\n    846e:\t48 85 c0             \ttest   %rax,%rax\n    8471:\t74 0d                \tje     8480 <ki_handle_publish_uri+0x352b>\n    8473:\t8b 85 48 ff ff ff    \tmov    -0xb8(%rbp),%eax\n    8479:\t89 c7                \tmov    %eax,%edi\n    847b:\te8 00 00 00 00       \tcallq  8480 <ki_handle_publish_uri+0x352b>\n    8480:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8487 <ki_handle_publish_uri+0x3532>\n    8487:\t48 8b 00             \tmov    (%rax),%rax\n    848a:\t48 85 c0             \ttest   %rax,%rax\n    848d:\t0f 95 c0             \tsetne  %al\n    8490:\t0f b6 c0             \tmovzbl %al,%eax\n    8493:\t48 85 c0             \ttest   %rax,%rax\n    8496:\t0f 84 8b 00 00 00    \tje     8527 <ki_handle_publish_uri+0x35d2>\n    849c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 84a3 <ki_handle_publish_uri+0x354e>\n    84a3:\t48 8b 00             \tmov    (%rax),%rax\n    84a6:\t48 8b 18             \tmov    (%rax),%rbx\n    84a9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 84b0 <ki_handle_publish_uri+0x355b>\n    84b0:\t48 8b 00             \tmov    (%rax),%rax\n    84b3:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    84b7:\t8b 85 48 ff ff ff    \tmov    -0xb8(%rbp),%eax\n    84bd:\t8d 50 05             \tlea    0x5(%rax),%edx\n    84c0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 84c7 <ki_handle_publish_uri+0x3572>\n    84c7:\t48 63 d2             \tmovslq %edx,%rdx\n    84ca:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    84ce:\t48 01 d0             \tadd    %rdx,%rax\n    84d1:\t4c 8b 20             \tmov    (%rax),%r12\n    84d4:\te8 00 00 00 00       \tcallq  84d9 <ki_handle_publish_uri+0x3584>\n    84d9:\t89 c1                \tmov    %eax,%ecx\n    84db:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 84e2 <ki_handle_publish_uri+0x358d>\n    84e2:\t8b 10                \tmov    (%rax),%edx\n    84e4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 84eb <ki_handle_publish_uri+0x3596>\n    84eb:\t48 8b 00             \tmov    (%rax),%rax\n    84ee:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 84f5 <ki_handle_publish_uri+0x35a0>\n    84f5:\t56                   \tpush   %rsi\n    84f6:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 84fd <ki_handle_publish_uri+0x35a8>\n    84fd:\t56                   \tpush   %rsi\n    84fe:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8505 <ki_handle_publish_uri+0x35b0>\n    8505:\t56                   \tpush   %rsi\n    8506:\t53                   \tpush   %rbx\n    8507:\t45 89 e9             \tmov    %r13d,%r9d\n    850a:\t4d 89 e0             \tmov    %r12,%r8\n    850d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8514 <ki_handle_publish_uri+0x35bf>\n    8514:\t48 89 c7             \tmov    %rax,%rdi\n    8517:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    851c:\te8 00 00 00 00       \tcallq  8521 <ki_handle_publish_uri+0x35cc>\n    8521:\t48 83 c4 20          \tadd    $0x20,%rsp\n    8525:\teb 69                \tjmp    8590 <ki_handle_publish_uri+0x363b>\n    8527:\t8b 85 48 ff ff ff    \tmov    -0xb8(%rbp),%eax\n    852d:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8530:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8537 <ki_handle_publish_uri+0x35e2>\n    8537:\t48 63 d2             \tmovslq %edx,%rdx\n    853a:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    853e:\t48 01 d0             \tadd    %rdx,%rax\n    8541:\t48 8b 18             \tmov    (%rax),%rbx\n    8544:\te8 00 00 00 00       \tcallq  8549 <ki_handle_publish_uri+0x35f4>\n    8549:\t89 c1                \tmov    %eax,%ecx\n    854b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8552 <ki_handle_publish_uri+0x35fd>\n    8552:\t8b 10                \tmov    (%rax),%edx\n    8554:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 855b <ki_handle_publish_uri+0x3606>\n    855b:\t48 8b 00             \tmov    (%rax),%rax\n    855e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8565 <ki_handle_publish_uri+0x3610>\n    8565:\t56                   \tpush   %rsi\n    8566:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 856d <ki_handle_publish_uri+0x3618>\n    856d:\t56                   \tpush   %rsi\n    856e:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 8575 <ki_handle_publish_uri+0x3620>\n    8575:\t49 89 d8             \tmov    %rbx,%r8\n    8578:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 857f <ki_handle_publish_uri+0x362a>\n    857f:\t48 89 c7             \tmov    %rax,%rdi\n    8582:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8587:\te8 00 00 00 00       \tcallq  858c <ki_handle_publish_uri+0x3637>\n    858c:\t48 83 c4 10          \tadd    $0x10,%rsp\n    8590:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8597 <ki_handle_publish_uri+0x3642>\n    8597:\t8b 00                \tmov    (%rax),%eax\n    8599:\t85 c0                \ttest   %eax,%eax\n    859b:\t0f 95 c0             \tsetne  %al\n    859e:\t0f b6 c0             \tmovzbl %al,%eax\n    85a1:\t48 85 c0             \ttest   %rax,%rax\n    85a4:\t0f 84 5c 01 00 00    \tje     8706 <ki_handle_publish_uri+0x37b1>\n    85aa:\te8 00 00 00 00       \tcallq  85af <ki_handle_publish_uri+0x365a>\n    85af:\te9 52 01 00 00       \tjmpq   8706 <ki_handle_publish_uri+0x37b1>\n    85b4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 85bb <ki_handle_publish_uri+0x3666>\n    85bb:\t48 8b 00             \tmov    (%rax),%rax\n    85be:\t48 85 c0             \ttest   %rax,%rax\n    85c1:\t0f 95 c0             \tsetne  %al\n    85c4:\t0f b6 c0             \tmovzbl %al,%eax\n    85c7:\t48 85 c0             \ttest   %rax,%rax\n    85ca:\t0f 84 b1 00 00 00    \tje     8681 <ki_handle_publish_uri+0x372c>\n    85d0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 85d7 <ki_handle_publish_uri+0x3682>\n    85d7:\t4c 8b 28             \tmov    (%rax),%r13\n    85da:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 85e1 <ki_handle_publish_uri+0x368c>\n    85e1:\t48 8b 00             \tmov    (%rax),%rax\n    85e4:\t4c 8b 38             \tmov    (%rax),%r15\n    85e7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 85ee <ki_handle_publish_uri+0x3699>\n    85ee:\t48 8b 00             \tmov    (%rax),%rax\n    85f1:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    85f5:\t8b 85 48 ff ff ff    \tmov    -0xb8(%rbp),%eax\n    85fb:\t8d 50 05             \tlea    0x5(%rax),%edx\n    85fe:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8605 <ki_handle_publish_uri+0x36b0>\n    8605:\t48 63 d2             \tmovslq %edx,%rdx\n    8608:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    860c:\t48 01 d0             \tadd    %rdx,%rax\n    860f:\t48 8b 18             \tmov    (%rax),%rbx\n    8612:\t8b 85 48 ff ff ff    \tmov    -0xb8(%rbp),%eax\n    8618:\t8d 50 05             \tlea    0x5(%rax),%edx\n    861b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8622 <ki_handle_publish_uri+0x36cd>\n    8622:\t48 63 d2             \tmovslq %edx,%rdx\n    8625:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    8629:\t48 01 d0             \tadd    %rdx,%rax\n    862c:\t48 83 c0 08          \tadd    $0x8,%rax\n    8630:\t44 8b 30             \tmov    (%rax),%r14d\n    8633:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    8638:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 863f <ki_handle_publish_uri+0x36ea>\n    863f:\te8 00 00 00 00       \tcallq  8644 <ki_handle_publish_uri+0x36ef>\n    8644:\t44 09 f0             \tor     %r14d,%eax\n    8647:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 864e <ki_handle_publish_uri+0x36f9>\n    864e:\t52                   \tpush   %rdx\n    864f:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 8656 <ki_handle_publish_uri+0x3701>\n    8656:\t52                   \tpush   %rdx\n    8657:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 865e <ki_handle_publish_uri+0x3709>\n    865e:\t4d 89 f8             \tmov    %r15,%r8\n    8661:\t44 89 e1             \tmov    %r12d,%ecx\n    8664:\t48 89 da             \tmov    %rbx,%rdx\n    8667:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 866e <ki_handle_publish_uri+0x3719>\n    866e:\t89 c7                \tmov    %eax,%edi\n    8670:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8675:\t41 ff d5             \tcallq  *%r13\n    8678:\t48 83 c4 10          \tadd    $0x10,%rsp\n    867c:\te9 85 00 00 00       \tjmpq   8706 <ki_handle_publish_uri+0x37b1>\n    8681:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8688 <ki_handle_publish_uri+0x3733>\n    8688:\t4c 8b 20             \tmov    (%rax),%r12\n    868b:\t8b 85 48 ff ff ff    \tmov    -0xb8(%rbp),%eax\n    8691:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8694:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 869b <ki_handle_publish_uri+0x3746>\n    869b:\t48 63 d2             \tmovslq %edx,%rdx\n    869e:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    86a2:\t48 01 d0             \tadd    %rdx,%rax\n    86a5:\t48 8b 18             \tmov    (%rax),%rbx\n    86a8:\t8b 85 48 ff ff ff    \tmov    -0xb8(%rbp),%eax\n    86ae:\t8d 50 05             \tlea    0x5(%rax),%edx\n    86b1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 86b8 <ki_handle_publish_uri+0x3763>\n    86b8:\t48 63 d2             \tmovslq %edx,%rdx\n    86bb:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    86bf:\t48 01 d0             \tadd    %rdx,%rax\n    86c2:\t48 83 c0 08          \tadd    $0x8,%rax\n    86c6:\t44 8b 28             \tmov    (%rax),%r13d\n    86c9:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    86ce:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 86d5 <ki_handle_publish_uri+0x3780>\n    86d5:\te8 00 00 00 00       \tcallq  86da <ki_handle_publish_uri+0x3785>\n    86da:\t44 09 e8             \tor     %r13d,%eax\n    86dd:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 86e4 <ki_handle_publish_uri+0x378f>\n    86e4:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 86eb <ki_handle_publish_uri+0x3796>\n    86eb:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 86f2 <ki_handle_publish_uri+0x379d>\n    86f2:\t48 89 da             \tmov    %rbx,%rdx\n    86f5:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 86fc <ki_handle_publish_uri+0x37a7>\n    86fc:\t89 c7                \tmov    %eax,%edi\n    86fe:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8703:\t41 ff d4             \tcallq  *%r12\n    8706:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 870d <ki_handle_publish_uri+0x37b8>\n    870d:\t8b 00                \tmov    (%rax),%eax\n    870f:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    8712:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8719 <ki_handle_publish_uri+0x37c4>\n    8719:\t89 10                \tmov    %edx,(%rax)\n    871b:\te9 74 1c 00 00       \tjmpq   a394 <ki_handle_publish_uri+0x543f>\n    8720:\t48 8b 85 30 fd ff ff \tmov    -0x2d0(%rbp),%rax\n    8727:\t8b 40 08             \tmov    0x8(%rax),%eax\n    872a:\t8b 55 94             \tmov    -0x6c(%rbp),%edx\n    872d:\t83 ea 01             \tsub    $0x1,%edx\n    8730:\t39 d0                \tcmp    %edx,%eax\n    8732:\t0f 8c 11 03 00 00    \tjl     8a49 <ki_handle_publish_uri+0x3af4>\n    8738:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    873d:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8744 <ki_handle_publish_uri+0x37ef>\n    8744:\te8 00 00 00 00       \tcallq  8749 <ki_handle_publish_uri+0x37f4>\n    8749:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    874c:\t0f 8c 45 1c 00 00    \tjl     a397 <ki_handle_publish_uri+0x5442>\n    8752:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8759 <ki_handle_publish_uri+0x3804>\n    8759:\t8b 00                \tmov    (%rax),%eax\n    875b:\t85 c0                \ttest   %eax,%eax\n    875d:\t0f 85 34 1c 00 00    \tjne    a397 <ki_handle_publish_uri+0x5442>\n    8763:\tc7 85 4c ff ff ff ff \tmovl   $0xffffffff,-0xb4(%rbp)\n    876a:\tff ff ff \n    876d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8774 <ki_handle_publish_uri+0x381f>\n    8774:\t8b 00                \tmov    (%rax),%eax\n    8776:\t8d 50 01             \tlea    0x1(%rax),%edx\n    8779:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8780 <ki_handle_publish_uri+0x382b>\n    8780:\t89 10                \tmov    %edx,(%rax)\n    8782:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8789 <ki_handle_publish_uri+0x3834>\n    8789:\t8b 00                \tmov    (%rax),%eax\n    878b:\t85 c0                \ttest   %eax,%eax\n    878d:\t0f 95 c0             \tsetne  %al\n    8790:\t0f b6 c0             \tmovzbl %al,%eax\n    8793:\t48 85 c0             \ttest   %rax,%rax\n    8796:\t0f 84 4f 01 00 00    \tje     88eb <ki_handle_publish_uri+0x3996>\n    879c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 87a3 <ki_handle_publish_uri+0x384e>\n    87a3:\t8b 00                \tmov    (%rax),%eax\n    87a5:\t85 c0                \ttest   %eax,%eax\n    87a7:\t0f 95 c0             \tsetne  %al\n    87aa:\t0f b6 c0             \tmovzbl %al,%eax\n    87ad:\t48 85 c0             \ttest   %rax,%rax\n    87b0:\t74 0d                \tje     87bf <ki_handle_publish_uri+0x386a>\n    87b2:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n    87b8:\t89 c7                \tmov    %eax,%edi\n    87ba:\te8 00 00 00 00       \tcallq  87bf <ki_handle_publish_uri+0x386a>\n    87bf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 87c6 <ki_handle_publish_uri+0x3871>\n    87c6:\t48 8b 00             \tmov    (%rax),%rax\n    87c9:\t48 85 c0             \ttest   %rax,%rax\n    87cc:\t0f 95 c0             \tsetne  %al\n    87cf:\t0f b6 c0             \tmovzbl %al,%eax\n    87d2:\t48 85 c0             \ttest   %rax,%rax\n    87d5:\t0f 84 87 00 00 00    \tje     8862 <ki_handle_publish_uri+0x390d>\n    87db:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 87e2 <ki_handle_publish_uri+0x388d>\n    87e2:\t48 8b 00             \tmov    (%rax),%rax\n    87e5:\t48 8b 18             \tmov    (%rax),%rbx\n    87e8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 87ef <ki_handle_publish_uri+0x389a>\n    87ef:\t48 8b 00             \tmov    (%rax),%rax\n    87f2:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    87f6:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n    87fc:\t8d 50 05             \tlea    0x5(%rax),%edx\n    87ff:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8806 <ki_handle_publish_uri+0x38b1>\n    8806:\t48 63 d2             \tmovslq %edx,%rdx\n    8809:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    880d:\t48 01 d0             \tadd    %rdx,%rax\n    8810:\t4c 8b 20             \tmov    (%rax),%r12\n    8813:\te8 00 00 00 00       \tcallq  8818 <ki_handle_publish_uri+0x38c3>\n    8818:\t89 c1                \tmov    %eax,%ecx\n    881a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8821 <ki_handle_publish_uri+0x38cc>\n    8821:\t8b 10                \tmov    (%rax),%edx\n    8823:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 882a <ki_handle_publish_uri+0x38d5>\n    882a:\t48 8b 00             \tmov    (%rax),%rax\n    882d:\t48 83 ec 08          \tsub    $0x8,%rsp\n    8831:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8838 <ki_handle_publish_uri+0x38e3>\n    8838:\t56                   \tpush   %rsi\n    8839:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8840 <ki_handle_publish_uri+0x38eb>\n    8840:\t56                   \tpush   %rsi\n    8841:\t53                   \tpush   %rbx\n    8842:\t45 89 e9             \tmov    %r13d,%r9d\n    8845:\t4d 89 e0             \tmov    %r12,%r8\n    8848:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 884f <ki_handle_publish_uri+0x38fa>\n    884f:\t48 89 c7             \tmov    %rax,%rdi\n    8852:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8857:\te8 00 00 00 00       \tcallq  885c <ki_handle_publish_uri+0x3907>\n    885c:\t48 83 c4 20          \tadd    $0x20,%rsp\n    8860:\teb 65                \tjmp    88c7 <ki_handle_publish_uri+0x3972>\n    8862:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n    8868:\t8d 50 05             \tlea    0x5(%rax),%edx\n    886b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8872 <ki_handle_publish_uri+0x391d>\n    8872:\t48 63 d2             \tmovslq %edx,%rdx\n    8875:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    8879:\t48 01 d0             \tadd    %rdx,%rax\n    887c:\t48 8b 18             \tmov    (%rax),%rbx\n    887f:\te8 00 00 00 00       \tcallq  8884 <ki_handle_publish_uri+0x392f>\n    8884:\t89 c1                \tmov    %eax,%ecx\n    8886:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 888d <ki_handle_publish_uri+0x3938>\n    888d:\t8b 10                \tmov    (%rax),%edx\n    888f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8896 <ki_handle_publish_uri+0x3941>\n    8896:\t48 8b 00             \tmov    (%rax),%rax\n    8899:\t48 83 ec 08          \tsub    $0x8,%rsp\n    889d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 88a4 <ki_handle_publish_uri+0x394f>\n    88a4:\t56                   \tpush   %rsi\n    88a5:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 88ac <ki_handle_publish_uri+0x3957>\n    88ac:\t49 89 d8             \tmov    %rbx,%r8\n    88af:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 88b6 <ki_handle_publish_uri+0x3961>\n    88b6:\t48 89 c7             \tmov    %rax,%rdi\n    88b9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    88be:\te8 00 00 00 00       \tcallq  88c3 <ki_handle_publish_uri+0x396e>\n    88c3:\t48 83 c4 10          \tadd    $0x10,%rsp\n    88c7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 88ce <ki_handle_publish_uri+0x3979>\n    88ce:\t8b 00                \tmov    (%rax),%eax\n    88d0:\t85 c0                \ttest   %eax,%eax\n    88d2:\t0f 95 c0             \tsetne  %al\n    88d5:\t0f b6 c0             \tmovzbl %al,%eax\n    88d8:\t48 85 c0             \ttest   %rax,%rax\n    88db:\t0f 84 4e 01 00 00    \tje     8a2f <ki_handle_publish_uri+0x3ada>\n    88e1:\te8 00 00 00 00       \tcallq  88e6 <ki_handle_publish_uri+0x3991>\n    88e6:\te9 44 01 00 00       \tjmpq   8a2f <ki_handle_publish_uri+0x3ada>\n    88eb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 88f2 <ki_handle_publish_uri+0x399d>\n    88f2:\t48 8b 00             \tmov    (%rax),%rax\n    88f5:\t48 85 c0             \ttest   %rax,%rax\n    88f8:\t0f 95 c0             \tsetne  %al\n    88fb:\t0f b6 c0             \tmovzbl %al,%eax\n    88fe:\t48 85 c0             \ttest   %rax,%rax\n    8901:\t0f 84 aa 00 00 00    \tje     89b1 <ki_handle_publish_uri+0x3a5c>\n    8907:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 890e <ki_handle_publish_uri+0x39b9>\n    890e:\t4c 8b 28             \tmov    (%rax),%r13\n    8911:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8918 <ki_handle_publish_uri+0x39c3>\n    8918:\t48 8b 00             \tmov    (%rax),%rax\n    891b:\t4c 8b 38             \tmov    (%rax),%r15\n    891e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8925 <ki_handle_publish_uri+0x39d0>\n    8925:\t48 8b 00             \tmov    (%rax),%rax\n    8928:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    892c:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n    8932:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8935:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 893c <ki_handle_publish_uri+0x39e7>\n    893c:\t48 63 d2             \tmovslq %edx,%rdx\n    893f:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    8943:\t48 01 d0             \tadd    %rdx,%rax\n    8946:\t48 8b 18             \tmov    (%rax),%rbx\n    8949:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n    894f:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8952:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8959 <ki_handle_publish_uri+0x3a04>\n    8959:\t48 63 d2             \tmovslq %edx,%rdx\n    895c:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    8960:\t48 01 d0             \tadd    %rdx,%rax\n    8963:\t48 83 c0 08          \tadd    $0x8,%rax\n    8967:\t44 8b 30             \tmov    (%rax),%r14d\n    896a:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    896f:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8976 <ki_handle_publish_uri+0x3a21>\n    8976:\te8 00 00 00 00       \tcallq  897b <ki_handle_publish_uri+0x3a26>\n    897b:\t44 09 f0             \tor     %r14d,%eax\n    897e:\t48 83 ec 08          \tsub    $0x8,%rsp\n    8982:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 8989 <ki_handle_publish_uri+0x3a34>\n    8989:\t52                   \tpush   %rdx\n    898a:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 8991 <ki_handle_publish_uri+0x3a3c>\n    8991:\t4d 89 f8             \tmov    %r15,%r8\n    8994:\t44 89 e1             \tmov    %r12d,%ecx\n    8997:\t48 89 da             \tmov    %rbx,%rdx\n    899a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 89a1 <ki_handle_publish_uri+0x3a4c>\n    89a1:\t89 c7                \tmov    %eax,%edi\n    89a3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    89a8:\t41 ff d5             \tcallq  *%r13\n    89ab:\t48 83 c4 10          \tadd    $0x10,%rsp\n    89af:\teb 7e                \tjmp    8a2f <ki_handle_publish_uri+0x3ada>\n    89b1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 89b8 <ki_handle_publish_uri+0x3a63>\n    89b8:\t4c 8b 20             \tmov    (%rax),%r12\n    89bb:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n    89c1:\t8d 50 05             \tlea    0x5(%rax),%edx\n    89c4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 89cb <ki_handle_publish_uri+0x3a76>\n    89cb:\t48 63 d2             \tmovslq %edx,%rdx\n    89ce:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    89d2:\t48 01 d0             \tadd    %rdx,%rax\n    89d5:\t48 8b 18             \tmov    (%rax),%rbx\n    89d8:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n    89de:\t8d 50 05             \tlea    0x5(%rax),%edx\n    89e1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 89e8 <ki_handle_publish_uri+0x3a93>\n    89e8:\t48 63 d2             \tmovslq %edx,%rdx\n    89eb:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    89ef:\t48 01 d0             \tadd    %rdx,%rax\n    89f2:\t48 83 c0 08          \tadd    $0x8,%rax\n    89f6:\t44 8b 28             \tmov    (%rax),%r13d\n    89f9:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    89fe:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8a05 <ki_handle_publish_uri+0x3ab0>\n    8a05:\te8 00 00 00 00       \tcallq  8a0a <ki_handle_publish_uri+0x3ab5>\n    8a0a:\t44 09 e8             \tor     %r13d,%eax\n    8a0d:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 8a14 <ki_handle_publish_uri+0x3abf>\n    8a14:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 8a1b <ki_handle_publish_uri+0x3ac6>\n    8a1b:\t48 89 da             \tmov    %rbx,%rdx\n    8a1e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8a25 <ki_handle_publish_uri+0x3ad0>\n    8a25:\t89 c7                \tmov    %eax,%edi\n    8a27:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8a2c:\t41 ff d4             \tcallq  *%r12\n    8a2f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8a36 <ki_handle_publish_uri+0x3ae1>\n    8a36:\t8b 00                \tmov    (%rax),%eax\n    8a38:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    8a3b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8a42 <ki_handle_publish_uri+0x3aed>\n    8a42:\t89 10                \tmov    %edx,(%rax)\n    8a44:\te9 4e 19 00 00       \tjmpq   a397 <ki_handle_publish_uri+0x5442>\n    8a49:\t48 8b 85 30 fd ff ff \tmov    -0x2d0(%rbp),%rax\n    8a50:\t8b 40 08             \tmov    0x8(%rax),%eax\n    8a53:\t48 63 d0             \tmovslq %eax,%rdx\n    8a56:\t48 8b 85 30 fd ff ff \tmov    -0x2d0(%rbp),%rax\n    8a5d:\t48 8b 00             \tmov    (%rax),%rax\n    8a60:\t48 89 c6             \tmov    %rax,%rsi\n    8a63:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8a6a <ki_handle_publish_uri+0x3b15>\n    8a6a:\te8 00 00 00 00       \tcallq  8a6f <ki_handle_publish_uri+0x3b1a>\n    8a6f:\t48 8b 85 30 fd ff ff \tmov    -0x2d0(%rbp),%rax\n    8a76:\t8b 40 08             \tmov    0x8(%rax),%eax\n    8a79:\t89 45 94             \tmov    %eax,-0x6c(%rbp)\n    8a7c:\t8b 45 94             \tmov    -0x6c(%rbp),%eax\n    8a7f:\t48 98                \tcltq   \n    8a81:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 8a88 <ki_handle_publish_uri+0x3b33>\n    8a88:\tc6 04 10 00          \tmovb   $0x0,(%rax,%rdx,1)\n    8a8c:\t48 8d 95 a0 fd ff ff \tlea    -0x260(%rbp),%rdx\n    8a93:\t8b 45 94             \tmov    -0x6c(%rbp),%eax\n    8a96:\t89 c6                \tmov    %eax,%esi\n    8a98:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8a9f <ki_handle_publish_uri+0x3b4a>\n    8a9f:\te8 00 00 00 00       \tcallq  8aa4 <ki_handle_publish_uri+0x3b4f>\n    8aa4:\t85 c0                \ttest   %eax,%eax\n    8aa6:\t0f 84 34 03 00 00    \tje     8de0 <ki_handle_publish_uri+0x3e8b>\n    8aac:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    8ab1:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8ab8 <ki_handle_publish_uri+0x3b63>\n    8ab8:\te8 00 00 00 00       \tcallq  8abd <ki_handle_publish_uri+0x3b68>\n    8abd:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    8ac0:\t0f 8c f2 02 00 00    \tjl     8db8 <ki_handle_publish_uri+0x3e63>\n    8ac6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8acd <ki_handle_publish_uri+0x3b78>\n    8acd:\t8b 00                \tmov    (%rax),%eax\n    8acf:\t85 c0                \ttest   %eax,%eax\n    8ad1:\t0f 85 e1 02 00 00    \tjne    8db8 <ki_handle_publish_uri+0x3e63>\n    8ad7:\tc7 85 50 ff ff ff ff \tmovl   $0xffffffff,-0xb0(%rbp)\n    8ade:\tff ff ff \n    8ae1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8ae8 <ki_handle_publish_uri+0x3b93>\n    8ae8:\t8b 00                \tmov    (%rax),%eax\n    8aea:\t8d 50 01             \tlea    0x1(%rax),%edx\n    8aed:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8af4 <ki_handle_publish_uri+0x3b9f>\n    8af4:\t89 10                \tmov    %edx,(%rax)\n    8af6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8afd <ki_handle_publish_uri+0x3ba8>\n    8afd:\t8b 00                \tmov    (%rax),%eax\n    8aff:\t85 c0                \ttest   %eax,%eax\n    8b01:\t0f 95 c0             \tsetne  %al\n    8b04:\t0f b6 c0             \tmovzbl %al,%eax\n    8b07:\t48 85 c0             \ttest   %rax,%rax\n    8b0a:\t0f 84 4f 01 00 00    \tje     8c5f <ki_handle_publish_uri+0x3d0a>\n    8b10:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8b17 <ki_handle_publish_uri+0x3bc2>\n    8b17:\t8b 00                \tmov    (%rax),%eax\n    8b19:\t85 c0                \ttest   %eax,%eax\n    8b1b:\t0f 95 c0             \tsetne  %al\n    8b1e:\t0f b6 c0             \tmovzbl %al,%eax\n    8b21:\t48 85 c0             \ttest   %rax,%rax\n    8b24:\t74 0d                \tje     8b33 <ki_handle_publish_uri+0x3bde>\n    8b26:\t8b 85 50 ff ff ff    \tmov    -0xb0(%rbp),%eax\n    8b2c:\t89 c7                \tmov    %eax,%edi\n    8b2e:\te8 00 00 00 00       \tcallq  8b33 <ki_handle_publish_uri+0x3bde>\n    8b33:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8b3a <ki_handle_publish_uri+0x3be5>\n    8b3a:\t48 8b 00             \tmov    (%rax),%rax\n    8b3d:\t48 85 c0             \ttest   %rax,%rax\n    8b40:\t0f 95 c0             \tsetne  %al\n    8b43:\t0f b6 c0             \tmovzbl %al,%eax\n    8b46:\t48 85 c0             \ttest   %rax,%rax\n    8b49:\t0f 84 87 00 00 00    \tje     8bd6 <ki_handle_publish_uri+0x3c81>\n    8b4f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8b56 <ki_handle_publish_uri+0x3c01>\n    8b56:\t48 8b 00             \tmov    (%rax),%rax\n    8b59:\t48 8b 18             \tmov    (%rax),%rbx\n    8b5c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8b63 <ki_handle_publish_uri+0x3c0e>\n    8b63:\t48 8b 00             \tmov    (%rax),%rax\n    8b66:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    8b6a:\t8b 85 50 ff ff ff    \tmov    -0xb0(%rbp),%eax\n    8b70:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8b73:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8b7a <ki_handle_publish_uri+0x3c25>\n    8b7a:\t48 63 d2             \tmovslq %edx,%rdx\n    8b7d:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    8b81:\t48 01 d0             \tadd    %rdx,%rax\n    8b84:\t4c 8b 20             \tmov    (%rax),%r12\n    8b87:\te8 00 00 00 00       \tcallq  8b8c <ki_handle_publish_uri+0x3c37>\n    8b8c:\t89 c1                \tmov    %eax,%ecx\n    8b8e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8b95 <ki_handle_publish_uri+0x3c40>\n    8b95:\t8b 10                \tmov    (%rax),%edx\n    8b97:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8b9e <ki_handle_publish_uri+0x3c49>\n    8b9e:\t48 8b 00             \tmov    (%rax),%rax\n    8ba1:\t48 83 ec 08          \tsub    $0x8,%rsp\n    8ba5:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8bac <ki_handle_publish_uri+0x3c57>\n    8bac:\t56                   \tpush   %rsi\n    8bad:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8bb4 <ki_handle_publish_uri+0x3c5f>\n    8bb4:\t56                   \tpush   %rsi\n    8bb5:\t53                   \tpush   %rbx\n    8bb6:\t45 89 e9             \tmov    %r13d,%r9d\n    8bb9:\t4d 89 e0             \tmov    %r12,%r8\n    8bbc:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8bc3 <ki_handle_publish_uri+0x3c6e>\n    8bc3:\t48 89 c7             \tmov    %rax,%rdi\n    8bc6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8bcb:\te8 00 00 00 00       \tcallq  8bd0 <ki_handle_publish_uri+0x3c7b>\n    8bd0:\t48 83 c4 20          \tadd    $0x20,%rsp\n    8bd4:\teb 65                \tjmp    8c3b <ki_handle_publish_uri+0x3ce6>\n    8bd6:\t8b 85 50 ff ff ff    \tmov    -0xb0(%rbp),%eax\n    8bdc:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8bdf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8be6 <ki_handle_publish_uri+0x3c91>\n    8be6:\t48 63 d2             \tmovslq %edx,%rdx\n    8be9:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    8bed:\t48 01 d0             \tadd    %rdx,%rax\n    8bf0:\t48 8b 18             \tmov    (%rax),%rbx\n    8bf3:\te8 00 00 00 00       \tcallq  8bf8 <ki_handle_publish_uri+0x3ca3>\n    8bf8:\t89 c1                \tmov    %eax,%ecx\n    8bfa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8c01 <ki_handle_publish_uri+0x3cac>\n    8c01:\t8b 10                \tmov    (%rax),%edx\n    8c03:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8c0a <ki_handle_publish_uri+0x3cb5>\n    8c0a:\t48 8b 00             \tmov    (%rax),%rax\n    8c0d:\t48 83 ec 08          \tsub    $0x8,%rsp\n    8c11:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8c18 <ki_handle_publish_uri+0x3cc3>\n    8c18:\t56                   \tpush   %rsi\n    8c19:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 8c20 <ki_handle_publish_uri+0x3ccb>\n    8c20:\t49 89 d8             \tmov    %rbx,%r8\n    8c23:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8c2a <ki_handle_publish_uri+0x3cd5>\n    8c2a:\t48 89 c7             \tmov    %rax,%rdi\n    8c2d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8c32:\te8 00 00 00 00       \tcallq  8c37 <ki_handle_publish_uri+0x3ce2>\n    8c37:\t48 83 c4 10          \tadd    $0x10,%rsp\n    8c3b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8c42 <ki_handle_publish_uri+0x3ced>\n    8c42:\t8b 00                \tmov    (%rax),%eax\n    8c44:\t85 c0                \ttest   %eax,%eax\n    8c46:\t0f 95 c0             \tsetne  %al\n    8c49:\t0f b6 c0             \tmovzbl %al,%eax\n    8c4c:\t48 85 c0             \ttest   %rax,%rax\n    8c4f:\t0f 84 4e 01 00 00    \tje     8da3 <ki_handle_publish_uri+0x3e4e>\n    8c55:\te8 00 00 00 00       \tcallq  8c5a <ki_handle_publish_uri+0x3d05>\n    8c5a:\te9 44 01 00 00       \tjmpq   8da3 <ki_handle_publish_uri+0x3e4e>\n    8c5f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8c66 <ki_handle_publish_uri+0x3d11>\n    8c66:\t48 8b 00             \tmov    (%rax),%rax\n    8c69:\t48 85 c0             \ttest   %rax,%rax\n    8c6c:\t0f 95 c0             \tsetne  %al\n    8c6f:\t0f b6 c0             \tmovzbl %al,%eax\n    8c72:\t48 85 c0             \ttest   %rax,%rax\n    8c75:\t0f 84 aa 00 00 00    \tje     8d25 <ki_handle_publish_uri+0x3dd0>\n    8c7b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8c82 <ki_handle_publish_uri+0x3d2d>\n    8c82:\t4c 8b 28             \tmov    (%rax),%r13\n    8c85:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8c8c <ki_handle_publish_uri+0x3d37>\n    8c8c:\t48 8b 00             \tmov    (%rax),%rax\n    8c8f:\t4c 8b 38             \tmov    (%rax),%r15\n    8c92:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8c99 <ki_handle_publish_uri+0x3d44>\n    8c99:\t48 8b 00             \tmov    (%rax),%rax\n    8c9c:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    8ca0:\t8b 85 50 ff ff ff    \tmov    -0xb0(%rbp),%eax\n    8ca6:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8ca9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8cb0 <ki_handle_publish_uri+0x3d5b>\n    8cb0:\t48 63 d2             \tmovslq %edx,%rdx\n    8cb3:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    8cb7:\t48 01 d0             \tadd    %rdx,%rax\n    8cba:\t48 8b 18             \tmov    (%rax),%rbx\n    8cbd:\t8b 85 50 ff ff ff    \tmov    -0xb0(%rbp),%eax\n    8cc3:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8cc6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8ccd <ki_handle_publish_uri+0x3d78>\n    8ccd:\t48 63 d2             \tmovslq %edx,%rdx\n    8cd0:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    8cd4:\t48 01 d0             \tadd    %rdx,%rax\n    8cd7:\t48 83 c0 08          \tadd    $0x8,%rax\n    8cdb:\t44 8b 30             \tmov    (%rax),%r14d\n    8cde:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    8ce3:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8cea <ki_handle_publish_uri+0x3d95>\n    8cea:\te8 00 00 00 00       \tcallq  8cef <ki_handle_publish_uri+0x3d9a>\n    8cef:\t44 09 f0             \tor     %r14d,%eax\n    8cf2:\t48 83 ec 08          \tsub    $0x8,%rsp\n    8cf6:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 8cfd <ki_handle_publish_uri+0x3da8>\n    8cfd:\t52                   \tpush   %rdx\n    8cfe:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 8d05 <ki_handle_publish_uri+0x3db0>\n    8d05:\t4d 89 f8             \tmov    %r15,%r8\n    8d08:\t44 89 e1             \tmov    %r12d,%ecx\n    8d0b:\t48 89 da             \tmov    %rbx,%rdx\n    8d0e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8d15 <ki_handle_publish_uri+0x3dc0>\n    8d15:\t89 c7                \tmov    %eax,%edi\n    8d17:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8d1c:\t41 ff d5             \tcallq  *%r13\n    8d1f:\t48 83 c4 10          \tadd    $0x10,%rsp\n    8d23:\teb 7e                \tjmp    8da3 <ki_handle_publish_uri+0x3e4e>\n    8d25:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8d2c <ki_handle_publish_uri+0x3dd7>\n    8d2c:\t4c 8b 20             \tmov    (%rax),%r12\n    8d2f:\t8b 85 50 ff ff ff    \tmov    -0xb0(%rbp),%eax\n    8d35:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8d38:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8d3f <ki_handle_publish_uri+0x3dea>\n    8d3f:\t48 63 d2             \tmovslq %edx,%rdx\n    8d42:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    8d46:\t48 01 d0             \tadd    %rdx,%rax\n    8d49:\t48 8b 18             \tmov    (%rax),%rbx\n    8d4c:\t8b 85 50 ff ff ff    \tmov    -0xb0(%rbp),%eax\n    8d52:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8d55:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8d5c <ki_handle_publish_uri+0x3e07>\n    8d5c:\t48 63 d2             \tmovslq %edx,%rdx\n    8d5f:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    8d63:\t48 01 d0             \tadd    %rdx,%rax\n    8d66:\t48 83 c0 08          \tadd    $0x8,%rax\n    8d6a:\t44 8b 28             \tmov    (%rax),%r13d\n    8d6d:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    8d72:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8d79 <ki_handle_publish_uri+0x3e24>\n    8d79:\te8 00 00 00 00       \tcallq  8d7e <ki_handle_publish_uri+0x3e29>\n    8d7e:\t44 09 e8             \tor     %r13d,%eax\n    8d81:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 8d88 <ki_handle_publish_uri+0x3e33>\n    8d88:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 8d8f <ki_handle_publish_uri+0x3e3a>\n    8d8f:\t48 89 da             \tmov    %rbx,%rdx\n    8d92:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8d99 <ki_handle_publish_uri+0x3e44>\n    8d99:\t89 c7                \tmov    %eax,%edi\n    8d9b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8da0:\t41 ff d4             \tcallq  *%r12\n    8da3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8daa <ki_handle_publish_uri+0x3e55>\n    8daa:\t8b 00                \tmov    (%rax),%eax\n    8dac:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    8daf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8db6 <ki_handle_publish_uri+0x3e61>\n    8db6:\t89 10                \tmov    %edx,(%rax)\n    8db8:\tc7 45 a4 90 01 00 00 \tmovl   $0x190,-0x5c(%rbp)\n    8dbf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8dc6 <ki_handle_publish_uri+0x3e71>\n    8dc6:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 8dcd <ki_handle_publish_uri+0x3e78>\n    8dcd:\t48 89 85 50 fd ff ff \tmov    %rax,-0x2b0(%rbp)\n    8dd4:\t48 89 95 58 fd ff ff \tmov    %rdx,-0x2a8(%rbp)\n    8ddb:\te9 c1 15 00 00       \tjmpq   a3a1 <ki_handle_publish_uri+0x544c>\n    8de0:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    8de5:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 8dec <ki_handle_publish_uri+0x3e97>\n    8dec:\te8 00 00 00 00       \tcallq  8df1 <ki_handle_publish_uri+0x3e9c>\n    8df1:\t83 f8 02             \tcmp    $0x2,%eax\n    8df4:\t0f 8e 33 03 00 00    \tjle    912d <ki_handle_publish_uri+0x41d8>\n    8dfa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8e01 <ki_handle_publish_uri+0x3eac>\n    8e01:\t8b 00                \tmov    (%rax),%eax\n    8e03:\t85 c0                \ttest   %eax,%eax\n    8e05:\t0f 85 22 03 00 00    \tjne    912d <ki_handle_publish_uri+0x41d8>\n    8e0b:\tc7 85 54 ff ff ff 03 \tmovl   $0x3,-0xac(%rbp)\n    8e12:\t00 00 00 \n    8e15:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8e1c <ki_handle_publish_uri+0x3ec7>\n    8e1c:\t8b 00                \tmov    (%rax),%eax\n    8e1e:\t8d 50 01             \tlea    0x1(%rax),%edx\n    8e21:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8e28 <ki_handle_publish_uri+0x3ed3>\n    8e28:\t89 10                \tmov    %edx,(%rax)\n    8e2a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8e31 <ki_handle_publish_uri+0x3edc>\n    8e31:\t8b 00                \tmov    (%rax),%eax\n    8e33:\t85 c0                \ttest   %eax,%eax\n    8e35:\t0f 95 c0             \tsetne  %al\n    8e38:\t0f b6 c0             \tmovzbl %al,%eax\n    8e3b:\t48 85 c0             \ttest   %rax,%rax\n    8e3e:\t0f 84 6b 01 00 00    \tje     8faf <ki_handle_publish_uri+0x405a>\n    8e44:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8e4b <ki_handle_publish_uri+0x3ef6>\n    8e4b:\t8b 00                \tmov    (%rax),%eax\n    8e4d:\t85 c0                \ttest   %eax,%eax\n    8e4f:\t0f 95 c0             \tsetne  %al\n    8e52:\t0f b6 c0             \tmovzbl %al,%eax\n    8e55:\t48 85 c0             \ttest   %rax,%rax\n    8e58:\t74 0d                \tje     8e67 <ki_handle_publish_uri+0x3f12>\n    8e5a:\t8b 85 54 ff ff ff    \tmov    -0xac(%rbp),%eax\n    8e60:\t89 c7                \tmov    %eax,%edi\n    8e62:\te8 00 00 00 00       \tcallq  8e67 <ki_handle_publish_uri+0x3f12>\n    8e67:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8e6e <ki_handle_publish_uri+0x3f19>\n    8e6e:\t48 8b 00             \tmov    (%rax),%rax\n    8e71:\t48 85 c0             \ttest   %rax,%rax\n    8e74:\t0f 95 c0             \tsetne  %al\n    8e77:\t0f b6 c0             \tmovzbl %al,%eax\n    8e7a:\t48 85 c0             \ttest   %rax,%rax\n    8e7d:\t0f 84 95 00 00 00    \tje     8f18 <ki_handle_publish_uri+0x3fc3>\n    8e83:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8e8a <ki_handle_publish_uri+0x3f35>\n    8e8a:\t48 8b 00             \tmov    (%rax),%rax\n    8e8d:\t48 8b 18             \tmov    (%rax),%rbx\n    8e90:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8e97 <ki_handle_publish_uri+0x3f42>\n    8e97:\t48 8b 00             \tmov    (%rax),%rax\n    8e9a:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    8e9e:\t8b 85 54 ff ff ff    \tmov    -0xac(%rbp),%eax\n    8ea4:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8ea7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8eae <ki_handle_publish_uri+0x3f59>\n    8eae:\t48 63 d2             \tmovslq %edx,%rdx\n    8eb1:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    8eb5:\t48 01 d0             \tadd    %rdx,%rax\n    8eb8:\t4c 8b 20             \tmov    (%rax),%r12\n    8ebb:\te8 00 00 00 00       \tcallq  8ec0 <ki_handle_publish_uri+0x3f6b>\n    8ec0:\t89 c6                \tmov    %eax,%esi\n    8ec2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8ec9 <ki_handle_publish_uri+0x3f74>\n    8ec9:\t8b 10                \tmov    (%rax),%edx\n    8ecb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8ed2 <ki_handle_publish_uri+0x3f7d>\n    8ed2:\t48 8b 00             \tmov    (%rax),%rax\n    8ed5:\t48 83 ec 08          \tsub    $0x8,%rsp\n    8ed9:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 8ee0 <ki_handle_publish_uri+0x3f8b>\n    8ee0:\t51                   \tpush   %rcx\n    8ee1:\t8b 4d 94             \tmov    -0x6c(%rbp),%ecx\n    8ee4:\t51                   \tpush   %rcx\n    8ee5:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 8eec <ki_handle_publish_uri+0x3f97>\n    8eec:\t51                   \tpush   %rcx\n    8eed:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 8ef4 <ki_handle_publish_uri+0x3f9f>\n    8ef4:\t51                   \tpush   %rcx\n    8ef5:\t53                   \tpush   %rbx\n    8ef6:\t45 89 e9             \tmov    %r13d,%r9d\n    8ef9:\t4d 89 e0             \tmov    %r12,%r8\n    8efc:\t89 f1                \tmov    %esi,%ecx\n    8efe:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8f05 <ki_handle_publish_uri+0x3fb0>\n    8f05:\t48 89 c7             \tmov    %rax,%rdi\n    8f08:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8f0d:\te8 00 00 00 00       \tcallq  8f12 <ki_handle_publish_uri+0x3fbd>\n    8f12:\t48 83 c4 30          \tadd    $0x30,%rsp\n    8f16:\teb 73                \tjmp    8f8b <ki_handle_publish_uri+0x4036>\n    8f18:\t8b 85 54 ff ff ff    \tmov    -0xac(%rbp),%eax\n    8f1e:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8f21:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8f28 <ki_handle_publish_uri+0x3fd3>\n    8f28:\t48 63 d2             \tmovslq %edx,%rdx\n    8f2b:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    8f2f:\t48 01 d0             \tadd    %rdx,%rax\n    8f32:\t48 8b 18             \tmov    (%rax),%rbx\n    8f35:\te8 00 00 00 00       \tcallq  8f3a <ki_handle_publish_uri+0x3fe5>\n    8f3a:\t89 c6                \tmov    %eax,%esi\n    8f3c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8f43 <ki_handle_publish_uri+0x3fee>\n    8f43:\t8b 10                \tmov    (%rax),%edx\n    8f45:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8f4c <ki_handle_publish_uri+0x3ff7>\n    8f4c:\t48 8b 00             \tmov    (%rax),%rax\n    8f4f:\t48 83 ec 08          \tsub    $0x8,%rsp\n    8f53:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 8f5a <ki_handle_publish_uri+0x4005>\n    8f5a:\t51                   \tpush   %rcx\n    8f5b:\t8b 4d 94             \tmov    -0x6c(%rbp),%ecx\n    8f5e:\t51                   \tpush   %rcx\n    8f5f:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 8f66 <ki_handle_publish_uri+0x4011>\n    8f66:\t51                   \tpush   %rcx\n    8f67:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 8f6e <ki_handle_publish_uri+0x4019>\n    8f6e:\t49 89 d8             \tmov    %rbx,%r8\n    8f71:\t89 f1                \tmov    %esi,%ecx\n    8f73:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8f7a <ki_handle_publish_uri+0x4025>\n    8f7a:\t48 89 c7             \tmov    %rax,%rdi\n    8f7d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    8f82:\te8 00 00 00 00       \tcallq  8f87 <ki_handle_publish_uri+0x4032>\n    8f87:\t48 83 c4 20          \tadd    $0x20,%rsp\n    8f8b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8f92 <ki_handle_publish_uri+0x403d>\n    8f92:\t8b 00                \tmov    (%rax),%eax\n    8f94:\t85 c0                \ttest   %eax,%eax\n    8f96:\t0f 95 c0             \tsetne  %al\n    8f99:\t0f b6 c0             \tmovzbl %al,%eax\n    8f9c:\t48 85 c0             \ttest   %rax,%rax\n    8f9f:\t0f 84 73 01 00 00    \tje     9118 <ki_handle_publish_uri+0x41c3>\n    8fa5:\te8 00 00 00 00       \tcallq  8faa <ki_handle_publish_uri+0x4055>\n    8faa:\te9 69 01 00 00       \tjmpq   9118 <ki_handle_publish_uri+0x41c3>\n    8faf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8fb6 <ki_handle_publish_uri+0x4061>\n    8fb6:\t48 8b 00             \tmov    (%rax),%rax\n    8fb9:\t48 85 c0             \ttest   %rax,%rax\n    8fbc:\t0f 95 c0             \tsetne  %al\n    8fbf:\t0f b6 c0             \tmovzbl %al,%eax\n    8fc2:\t48 85 c0             \ttest   %rax,%rax\n    8fc5:\t0f 84 b9 00 00 00    \tje     9084 <ki_handle_publish_uri+0x412f>\n    8fcb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8fd2 <ki_handle_publish_uri+0x407d>\n    8fd2:\t4c 8b 28             \tmov    (%rax),%r13\n    8fd5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8fdc <ki_handle_publish_uri+0x4087>\n    8fdc:\t48 8b 00             \tmov    (%rax),%rax\n    8fdf:\t4c 8b 38             \tmov    (%rax),%r15\n    8fe2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 8fe9 <ki_handle_publish_uri+0x4094>\n    8fe9:\t48 8b 00             \tmov    (%rax),%rax\n    8fec:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    8ff0:\t8b 85 54 ff ff ff    \tmov    -0xac(%rbp),%eax\n    8ff6:\t8d 50 05             \tlea    0x5(%rax),%edx\n    8ff9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9000 <ki_handle_publish_uri+0x40ab>\n    9000:\t48 63 d2             \tmovslq %edx,%rdx\n    9003:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9007:\t48 01 d0             \tadd    %rdx,%rax\n    900a:\t48 8b 18             \tmov    (%rax),%rbx\n    900d:\t8b 85 54 ff ff ff    \tmov    -0xac(%rbp),%eax\n    9013:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9016:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 901d <ki_handle_publish_uri+0x40c8>\n    901d:\t48 63 d2             \tmovslq %edx,%rdx\n    9020:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9024:\t48 01 d0             \tadd    %rdx,%rax\n    9027:\t48 83 c0 08          \tadd    $0x8,%rax\n    902b:\t44 8b 30             \tmov    (%rax),%r14d\n    902e:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    9033:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 903a <ki_handle_publish_uri+0x40e5>\n    903a:\te8 00 00 00 00       \tcallq  903f <ki_handle_publish_uri+0x40ea>\n    903f:\t44 09 f0             \tor     %r14d,%eax\n    9042:\t48 83 ec 08          \tsub    $0x8,%rsp\n    9046:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 904d <ki_handle_publish_uri+0x40f8>\n    904d:\t52                   \tpush   %rdx\n    904e:\t8b 55 94             \tmov    -0x6c(%rbp),%edx\n    9051:\t52                   \tpush   %rdx\n    9052:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 9059 <ki_handle_publish_uri+0x4104>\n    9059:\t52                   \tpush   %rdx\n    905a:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 9061 <ki_handle_publish_uri+0x410c>\n    9061:\t4d 89 f8             \tmov    %r15,%r8\n    9064:\t44 89 e1             \tmov    %r12d,%ecx\n    9067:\t48 89 da             \tmov    %rbx,%rdx\n    906a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9071 <ki_handle_publish_uri+0x411c>\n    9071:\t89 c7                \tmov    %eax,%edi\n    9073:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9078:\t41 ff d5             \tcallq  *%r13\n    907b:\t48 83 c4 20          \tadd    $0x20,%rsp\n    907f:\te9 94 00 00 00       \tjmpq   9118 <ki_handle_publish_uri+0x41c3>\n    9084:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 908b <ki_handle_publish_uri+0x4136>\n    908b:\t4c 8b 20             \tmov    (%rax),%r12\n    908e:\t8b 85 54 ff ff ff    \tmov    -0xac(%rbp),%eax\n    9094:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9097:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 909e <ki_handle_publish_uri+0x4149>\n    909e:\t48 63 d2             \tmovslq %edx,%rdx\n    90a1:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    90a5:\t48 01 d0             \tadd    %rdx,%rax\n    90a8:\t48 8b 18             \tmov    (%rax),%rbx\n    90ab:\t8b 85 54 ff ff ff    \tmov    -0xac(%rbp),%eax\n    90b1:\t8d 50 05             \tlea    0x5(%rax),%edx\n    90b4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 90bb <ki_handle_publish_uri+0x4166>\n    90bb:\t48 63 d2             \tmovslq %edx,%rdx\n    90be:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    90c2:\t48 01 d0             \tadd    %rdx,%rax\n    90c5:\t48 83 c0 08          \tadd    $0x8,%rax\n    90c9:\t44 8b 28             \tmov    (%rax),%r13d\n    90cc:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    90d1:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 90d8 <ki_handle_publish_uri+0x4183>\n    90d8:\te8 00 00 00 00       \tcallq  90dd <ki_handle_publish_uri+0x4188>\n    90dd:\t44 09 e8             \tor     %r13d,%eax\n    90e0:\t8b 4d 94             \tmov    -0x6c(%rbp),%ecx\n    90e3:\t48 83 ec 08          \tsub    $0x8,%rsp\n    90e7:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 90ee <ki_handle_publish_uri+0x4199>\n    90ee:\t52                   \tpush   %rdx\n    90ef:\t41 89 c9             \tmov    %ecx,%r9d\n    90f2:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 90f9 <ki_handle_publish_uri+0x41a4>\n    90f9:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 9100 <ki_handle_publish_uri+0x41ab>\n    9100:\t48 89 da             \tmov    %rbx,%rdx\n    9103:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 910a <ki_handle_publish_uri+0x41b5>\n    910a:\t89 c7                \tmov    %eax,%edi\n    910c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9111:\t41 ff d4             \tcallq  *%r12\n    9114:\t48 83 c4 10          \tadd    $0x10,%rsp\n    9118:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 911f <ki_handle_publish_uri+0x41ca>\n    911f:\t8b 00                \tmov    (%rax),%eax\n    9121:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    9124:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 912b <ki_handle_publish_uri+0x41d6>\n    912b:\t89 10                \tmov    %edx,(%rax)\n    912d:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    9131:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 9138 <ki_handle_publish_uri+0x41e3>\n    9138:\t48 89 10             \tmov    %rdx,(%rax)\n    913b:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    913f:\t8b 55 94             \tmov    -0x6c(%rbp),%edx\n    9142:\t89 50 08             \tmov    %edx,0x8(%rax)\n    9145:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    9149:\t48 8b 40 60          \tmov    0x60(%rax),%rax\n    914d:\t48 85 c0             \ttest   %rax,%rax\n    9150:\t0f 84 2d 03 00 00    \tje     9483 <ki_handle_publish_uri+0x452e>\n    9156:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    915a:\t48 8b 50 60          \tmov    0x60(%rax),%rdx\n    915e:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    9165:\t48 89 c7             \tmov    %rax,%rdi\n    9168:\tff d2                \tcallq  *%rdx\n    916a:\t85 c0                \ttest   %eax,%eax\n    916c:\t0f 89 11 03 00 00    \tjns    9483 <ki_handle_publish_uri+0x452e>\n    9172:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    9177:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 917e <ki_handle_publish_uri+0x4229>\n    917e:\te8 00 00 00 00       \tcallq  9183 <ki_handle_publish_uri+0x422e>\n    9183:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    9186:\t0f 8c 0e 12 00 00    \tjl     a39a <ki_handle_publish_uri+0x5445>\n    918c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9193 <ki_handle_publish_uri+0x423e>\n    9193:\t8b 00                \tmov    (%rax),%eax\n    9195:\t85 c0                \ttest   %eax,%eax\n    9197:\t0f 85 fd 11 00 00    \tjne    a39a <ki_handle_publish_uri+0x5445>\n    919d:\tc7 85 44 ff ff ff ff \tmovl   $0xffffffff,-0xbc(%rbp)\n    91a4:\tff ff ff \n    91a7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 91ae <ki_handle_publish_uri+0x4259>\n    91ae:\t8b 00                \tmov    (%rax),%eax\n    91b0:\t8d 50 01             \tlea    0x1(%rax),%edx\n    91b3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 91ba <ki_handle_publish_uri+0x4265>\n    91ba:\t89 10                \tmov    %edx,(%rax)\n    91bc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 91c3 <ki_handle_publish_uri+0x426e>\n    91c3:\t8b 00                \tmov    (%rax),%eax\n    91c5:\t85 c0                \ttest   %eax,%eax\n    91c7:\t0f 95 c0             \tsetne  %al\n    91ca:\t0f b6 c0             \tmovzbl %al,%eax\n    91cd:\t48 85 c0             \ttest   %rax,%rax\n    91d0:\t0f 84 4f 01 00 00    \tje     9325 <ki_handle_publish_uri+0x43d0>\n    91d6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 91dd <ki_handle_publish_uri+0x4288>\n    91dd:\t8b 00                \tmov    (%rax),%eax\n    91df:\t85 c0                \ttest   %eax,%eax\n    91e1:\t0f 95 c0             \tsetne  %al\n    91e4:\t0f b6 c0             \tmovzbl %al,%eax\n    91e7:\t48 85 c0             \ttest   %rax,%rax\n    91ea:\t74 0d                \tje     91f9 <ki_handle_publish_uri+0x42a4>\n    91ec:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n    91f2:\t89 c7                \tmov    %eax,%edi\n    91f4:\te8 00 00 00 00       \tcallq  91f9 <ki_handle_publish_uri+0x42a4>\n    91f9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9200 <ki_handle_publish_uri+0x42ab>\n    9200:\t48 8b 00             \tmov    (%rax),%rax\n    9203:\t48 85 c0             \ttest   %rax,%rax\n    9206:\t0f 95 c0             \tsetne  %al\n    9209:\t0f b6 c0             \tmovzbl %al,%eax\n    920c:\t48 85 c0             \ttest   %rax,%rax\n    920f:\t0f 84 87 00 00 00    \tje     929c <ki_handle_publish_uri+0x4347>\n    9215:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 921c <ki_handle_publish_uri+0x42c7>\n    921c:\t48 8b 00             \tmov    (%rax),%rax\n    921f:\t48 8b 18             \tmov    (%rax),%rbx\n    9222:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9229 <ki_handle_publish_uri+0x42d4>\n    9229:\t48 8b 00             \tmov    (%rax),%rax\n    922c:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    9230:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n    9236:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9239:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9240 <ki_handle_publish_uri+0x42eb>\n    9240:\t48 63 d2             \tmovslq %edx,%rdx\n    9243:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9247:\t48 01 d0             \tadd    %rdx,%rax\n    924a:\t4c 8b 20             \tmov    (%rax),%r12\n    924d:\te8 00 00 00 00       \tcallq  9252 <ki_handle_publish_uri+0x42fd>\n    9252:\t89 c1                \tmov    %eax,%ecx\n    9254:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 925b <ki_handle_publish_uri+0x4306>\n    925b:\t8b 10                \tmov    (%rax),%edx\n    925d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9264 <ki_handle_publish_uri+0x430f>\n    9264:\t48 8b 00             \tmov    (%rax),%rax\n    9267:\t48 83 ec 08          \tsub    $0x8,%rsp\n    926b:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9272 <ki_handle_publish_uri+0x431d>\n    9272:\t56                   \tpush   %rsi\n    9273:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 927a <ki_handle_publish_uri+0x4325>\n    927a:\t56                   \tpush   %rsi\n    927b:\t53                   \tpush   %rbx\n    927c:\t45 89 e9             \tmov    %r13d,%r9d\n    927f:\t4d 89 e0             \tmov    %r12,%r8\n    9282:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9289 <ki_handle_publish_uri+0x4334>\n    9289:\t48 89 c7             \tmov    %rax,%rdi\n    928c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9291:\te8 00 00 00 00       \tcallq  9296 <ki_handle_publish_uri+0x4341>\n    9296:\t48 83 c4 20          \tadd    $0x20,%rsp\n    929a:\teb 65                \tjmp    9301 <ki_handle_publish_uri+0x43ac>\n    929c:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n    92a2:\t8d 50 05             \tlea    0x5(%rax),%edx\n    92a5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 92ac <ki_handle_publish_uri+0x4357>\n    92ac:\t48 63 d2             \tmovslq %edx,%rdx\n    92af:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    92b3:\t48 01 d0             \tadd    %rdx,%rax\n    92b6:\t48 8b 18             \tmov    (%rax),%rbx\n    92b9:\te8 00 00 00 00       \tcallq  92be <ki_handle_publish_uri+0x4369>\n    92be:\t89 c1                \tmov    %eax,%ecx\n    92c0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 92c7 <ki_handle_publish_uri+0x4372>\n    92c7:\t8b 10                \tmov    (%rax),%edx\n    92c9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 92d0 <ki_handle_publish_uri+0x437b>\n    92d0:\t48 8b 00             \tmov    (%rax),%rax\n    92d3:\t48 83 ec 08          \tsub    $0x8,%rsp\n    92d7:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 92de <ki_handle_publish_uri+0x4389>\n    92de:\t56                   \tpush   %rsi\n    92df:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 92e6 <ki_handle_publish_uri+0x4391>\n    92e6:\t49 89 d8             \tmov    %rbx,%r8\n    92e9:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 92f0 <ki_handle_publish_uri+0x439b>\n    92f0:\t48 89 c7             \tmov    %rax,%rdi\n    92f3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    92f8:\te8 00 00 00 00       \tcallq  92fd <ki_handle_publish_uri+0x43a8>\n    92fd:\t48 83 c4 10          \tadd    $0x10,%rsp\n    9301:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9308 <ki_handle_publish_uri+0x43b3>\n    9308:\t8b 00                \tmov    (%rax),%eax\n    930a:\t85 c0                \ttest   %eax,%eax\n    930c:\t0f 95 c0             \tsetne  %al\n    930f:\t0f b6 c0             \tmovzbl %al,%eax\n    9312:\t48 85 c0             \ttest   %rax,%rax\n    9315:\t0f 84 4e 01 00 00    \tje     9469 <ki_handle_publish_uri+0x4514>\n    931b:\te8 00 00 00 00       \tcallq  9320 <ki_handle_publish_uri+0x43cb>\n    9320:\te9 44 01 00 00       \tjmpq   9469 <ki_handle_publish_uri+0x4514>\n    9325:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 932c <ki_handle_publish_uri+0x43d7>\n    932c:\t48 8b 00             \tmov    (%rax),%rax\n    932f:\t48 85 c0             \ttest   %rax,%rax\n    9332:\t0f 95 c0             \tsetne  %al\n    9335:\t0f b6 c0             \tmovzbl %al,%eax\n    9338:\t48 85 c0             \ttest   %rax,%rax\n    933b:\t0f 84 aa 00 00 00    \tje     93eb <ki_handle_publish_uri+0x4496>\n    9341:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9348 <ki_handle_publish_uri+0x43f3>\n    9348:\t4c 8b 28             \tmov    (%rax),%r13\n    934b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9352 <ki_handle_publish_uri+0x43fd>\n    9352:\t48 8b 00             \tmov    (%rax),%rax\n    9355:\t4c 8b 38             \tmov    (%rax),%r15\n    9358:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 935f <ki_handle_publish_uri+0x440a>\n    935f:\t48 8b 00             \tmov    (%rax),%rax\n    9362:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    9366:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n    936c:\t8d 50 05             \tlea    0x5(%rax),%edx\n    936f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9376 <ki_handle_publish_uri+0x4421>\n    9376:\t48 63 d2             \tmovslq %edx,%rdx\n    9379:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    937d:\t48 01 d0             \tadd    %rdx,%rax\n    9380:\t48 8b 18             \tmov    (%rax),%rbx\n    9383:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n    9389:\t8d 50 05             \tlea    0x5(%rax),%edx\n    938c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9393 <ki_handle_publish_uri+0x443e>\n    9393:\t48 63 d2             \tmovslq %edx,%rdx\n    9396:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    939a:\t48 01 d0             \tadd    %rdx,%rax\n    939d:\t48 83 c0 08          \tadd    $0x8,%rax\n    93a1:\t44 8b 30             \tmov    (%rax),%r14d\n    93a4:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    93a9:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 93b0 <ki_handle_publish_uri+0x445b>\n    93b0:\te8 00 00 00 00       \tcallq  93b5 <ki_handle_publish_uri+0x4460>\n    93b5:\t44 09 f0             \tor     %r14d,%eax\n    93b8:\t48 83 ec 08          \tsub    $0x8,%rsp\n    93bc:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 93c3 <ki_handle_publish_uri+0x446e>\n    93c3:\t52                   \tpush   %rdx\n    93c4:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 93cb <ki_handle_publish_uri+0x4476>\n    93cb:\t4d 89 f8             \tmov    %r15,%r8\n    93ce:\t44 89 e1             \tmov    %r12d,%ecx\n    93d1:\t48 89 da             \tmov    %rbx,%rdx\n    93d4:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 93db <ki_handle_publish_uri+0x4486>\n    93db:\t89 c7                \tmov    %eax,%edi\n    93dd:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    93e2:\t41 ff d5             \tcallq  *%r13\n    93e5:\t48 83 c4 10          \tadd    $0x10,%rsp\n    93e9:\teb 7e                \tjmp    9469 <ki_handle_publish_uri+0x4514>\n    93eb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 93f2 <ki_handle_publish_uri+0x449d>\n    93f2:\t4c 8b 20             \tmov    (%rax),%r12\n    93f5:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n    93fb:\t8d 50 05             \tlea    0x5(%rax),%edx\n    93fe:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9405 <ki_handle_publish_uri+0x44b0>\n    9405:\t48 63 d2             \tmovslq %edx,%rdx\n    9408:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    940c:\t48 01 d0             \tadd    %rdx,%rax\n    940f:\t48 8b 18             \tmov    (%rax),%rbx\n    9412:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n    9418:\t8d 50 05             \tlea    0x5(%rax),%edx\n    941b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9422 <ki_handle_publish_uri+0x44cd>\n    9422:\t48 63 d2             \tmovslq %edx,%rdx\n    9425:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9429:\t48 01 d0             \tadd    %rdx,%rax\n    942c:\t48 83 c0 08          \tadd    $0x8,%rax\n    9430:\t44 8b 28             \tmov    (%rax),%r13d\n    9433:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    9438:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 943f <ki_handle_publish_uri+0x44ea>\n    943f:\te8 00 00 00 00       \tcallq  9444 <ki_handle_publish_uri+0x44ef>\n    9444:\t44 09 e8             \tor     %r13d,%eax\n    9447:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 944e <ki_handle_publish_uri+0x44f9>\n    944e:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 9455 <ki_handle_publish_uri+0x4500>\n    9455:\t48 89 da             \tmov    %rbx,%rdx\n    9458:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 945f <ki_handle_publish_uri+0x450a>\n    945f:\t89 c7                \tmov    %eax,%edi\n    9461:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9466:\t41 ff d4             \tcallq  *%r12\n    9469:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9470 <ki_handle_publish_uri+0x451b>\n    9470:\t8b 00                \tmov    (%rax),%eax\n    9472:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    9475:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 947c <ki_handle_publish_uri+0x4527>\n    947c:\t89 10                \tmov    %edx,(%rax)\n    947e:\te9 17 0f 00 00       \tjmpq   a39a <ki_handle_publish_uri+0x5445>\n    9483:\t4c 8b 45 a8          \tmov    -0x58(%rbp),%r8\n    9487:\t48 8d bd 80 fd ff ff \tlea    -0x280(%rbp),%rdi\n    948e:\t48 8b 4d 88          \tmov    -0x78(%rbp),%rcx\n    9492:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    9495:\t48 8d b5 70 fd ff ff \tlea    -0x290(%rbp),%rsi\n    949c:\t48 8d 85 60 fd ff ff \tlea    -0x2a0(%rbp),%rax\n    94a3:\t4d 89 c1             \tmov    %r8,%r9\n    94a6:\t49 89 f8             \tmov    %rdi,%r8\n    94a9:\t48 89 c7             \tmov    %rax,%rdi\n    94ac:\te8 00 00 00 00       \tcallq  94b1 <ki_handle_publish_uri+0x455c>\n    94b1:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    94b5:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n    94ba:\t0f 85 11 03 00 00    \tjne    97d1 <ki_handle_publish_uri+0x487c>\n    94c0:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    94c5:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 94cc <ki_handle_publish_uri+0x4577>\n    94cc:\te8 00 00 00 00       \tcallq  94d1 <ki_handle_publish_uri+0x457c>\n    94d1:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    94d4:\t0f 8c c3 0e 00 00    \tjl     a39d <ki_handle_publish_uri+0x5448>\n    94da:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 94e1 <ki_handle_publish_uri+0x458c>\n    94e1:\t8b 00                \tmov    (%rax),%eax\n    94e3:\t85 c0                \ttest   %eax,%eax\n    94e5:\t0f 85 b2 0e 00 00    \tjne    a39d <ki_handle_publish_uri+0x5448>\n    94eb:\tc7 85 3c ff ff ff ff \tmovl   $0xffffffff,-0xc4(%rbp)\n    94f2:\tff ff ff \n    94f5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 94fc <ki_handle_publish_uri+0x45a7>\n    94fc:\t8b 00                \tmov    (%rax),%eax\n    94fe:\t8d 50 01             \tlea    0x1(%rax),%edx\n    9501:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9508 <ki_handle_publish_uri+0x45b3>\n    9508:\t89 10                \tmov    %edx,(%rax)\n    950a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9511 <ki_handle_publish_uri+0x45bc>\n    9511:\t8b 00                \tmov    (%rax),%eax\n    9513:\t85 c0                \ttest   %eax,%eax\n    9515:\t0f 95 c0             \tsetne  %al\n    9518:\t0f b6 c0             \tmovzbl %al,%eax\n    951b:\t48 85 c0             \ttest   %rax,%rax\n    951e:\t0f 84 4f 01 00 00    \tje     9673 <ki_handle_publish_uri+0x471e>\n    9524:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 952b <ki_handle_publish_uri+0x45d6>\n    952b:\t8b 00                \tmov    (%rax),%eax\n    952d:\t85 c0                \ttest   %eax,%eax\n    952f:\t0f 95 c0             \tsetne  %al\n    9532:\t0f b6 c0             \tmovzbl %al,%eax\n    9535:\t48 85 c0             \ttest   %rax,%rax\n    9538:\t74 0d                \tje     9547 <ki_handle_publish_uri+0x45f2>\n    953a:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n    9540:\t89 c7                \tmov    %eax,%edi\n    9542:\te8 00 00 00 00       \tcallq  9547 <ki_handle_publish_uri+0x45f2>\n    9547:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 954e <ki_handle_publish_uri+0x45f9>\n    954e:\t48 8b 00             \tmov    (%rax),%rax\n    9551:\t48 85 c0             \ttest   %rax,%rax\n    9554:\t0f 95 c0             \tsetne  %al\n    9557:\t0f b6 c0             \tmovzbl %al,%eax\n    955a:\t48 85 c0             \ttest   %rax,%rax\n    955d:\t0f 84 87 00 00 00    \tje     95ea <ki_handle_publish_uri+0x4695>\n    9563:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 956a <ki_handle_publish_uri+0x4615>\n    956a:\t48 8b 00             \tmov    (%rax),%rax\n    956d:\t48 8b 18             \tmov    (%rax),%rbx\n    9570:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9577 <ki_handle_publish_uri+0x4622>\n    9577:\t48 8b 00             \tmov    (%rax),%rax\n    957a:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    957e:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n    9584:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9587:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 958e <ki_handle_publish_uri+0x4639>\n    958e:\t48 63 d2             \tmovslq %edx,%rdx\n    9591:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9595:\t48 01 d0             \tadd    %rdx,%rax\n    9598:\t4c 8b 20             \tmov    (%rax),%r12\n    959b:\te8 00 00 00 00       \tcallq  95a0 <ki_handle_publish_uri+0x464b>\n    95a0:\t89 c1                \tmov    %eax,%ecx\n    95a2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 95a9 <ki_handle_publish_uri+0x4654>\n    95a9:\t8b 10                \tmov    (%rax),%edx\n    95ab:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 95b2 <ki_handle_publish_uri+0x465d>\n    95b2:\t48 8b 00             \tmov    (%rax),%rax\n    95b5:\t48 83 ec 08          \tsub    $0x8,%rsp\n    95b9:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 95c0 <ki_handle_publish_uri+0x466b>\n    95c0:\t56                   \tpush   %rsi\n    95c1:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 95c8 <ki_handle_publish_uri+0x4673>\n    95c8:\t56                   \tpush   %rsi\n    95c9:\t53                   \tpush   %rbx\n    95ca:\t45 89 e9             \tmov    %r13d,%r9d\n    95cd:\t4d 89 e0             \tmov    %r12,%r8\n    95d0:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 95d7 <ki_handle_publish_uri+0x4682>\n    95d7:\t48 89 c7             \tmov    %rax,%rdi\n    95da:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    95df:\te8 00 00 00 00       \tcallq  95e4 <ki_handle_publish_uri+0x468f>\n    95e4:\t48 83 c4 20          \tadd    $0x20,%rsp\n    95e8:\teb 65                \tjmp    964f <ki_handle_publish_uri+0x46fa>\n    95ea:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n    95f0:\t8d 50 05             \tlea    0x5(%rax),%edx\n    95f3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 95fa <ki_handle_publish_uri+0x46a5>\n    95fa:\t48 63 d2             \tmovslq %edx,%rdx\n    95fd:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9601:\t48 01 d0             \tadd    %rdx,%rax\n    9604:\t48 8b 18             \tmov    (%rax),%rbx\n    9607:\te8 00 00 00 00       \tcallq  960c <ki_handle_publish_uri+0x46b7>\n    960c:\t89 c1                \tmov    %eax,%ecx\n    960e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9615 <ki_handle_publish_uri+0x46c0>\n    9615:\t8b 10                \tmov    (%rax),%edx\n    9617:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 961e <ki_handle_publish_uri+0x46c9>\n    961e:\t48 8b 00             \tmov    (%rax),%rax\n    9621:\t48 83 ec 08          \tsub    $0x8,%rsp\n    9625:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 962c <ki_handle_publish_uri+0x46d7>\n    962c:\t56                   \tpush   %rsi\n    962d:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 9634 <ki_handle_publish_uri+0x46df>\n    9634:\t49 89 d8             \tmov    %rbx,%r8\n    9637:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 963e <ki_handle_publish_uri+0x46e9>\n    963e:\t48 89 c7             \tmov    %rax,%rdi\n    9641:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9646:\te8 00 00 00 00       \tcallq  964b <ki_handle_publish_uri+0x46f6>\n    964b:\t48 83 c4 10          \tadd    $0x10,%rsp\n    964f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9656 <ki_handle_publish_uri+0x4701>\n    9656:\t8b 00                \tmov    (%rax),%eax\n    9658:\t85 c0                \ttest   %eax,%eax\n    965a:\t0f 95 c0             \tsetne  %al\n    965d:\t0f b6 c0             \tmovzbl %al,%eax\n    9660:\t48 85 c0             \ttest   %rax,%rax\n    9663:\t0f 84 4e 01 00 00    \tje     97b7 <ki_handle_publish_uri+0x4862>\n    9669:\te8 00 00 00 00       \tcallq  966e <ki_handle_publish_uri+0x4719>\n    966e:\te9 44 01 00 00       \tjmpq   97b7 <ki_handle_publish_uri+0x4862>\n    9673:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 967a <ki_handle_publish_uri+0x4725>\n    967a:\t48 8b 00             \tmov    (%rax),%rax\n    967d:\t48 85 c0             \ttest   %rax,%rax\n    9680:\t0f 95 c0             \tsetne  %al\n    9683:\t0f b6 c0             \tmovzbl %al,%eax\n    9686:\t48 85 c0             \ttest   %rax,%rax\n    9689:\t0f 84 aa 00 00 00    \tje     9739 <ki_handle_publish_uri+0x47e4>\n    968f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9696 <ki_handle_publish_uri+0x4741>\n    9696:\t4c 8b 28             \tmov    (%rax),%r13\n    9699:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 96a0 <ki_handle_publish_uri+0x474b>\n    96a0:\t48 8b 00             \tmov    (%rax),%rax\n    96a3:\t4c 8b 38             \tmov    (%rax),%r15\n    96a6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 96ad <ki_handle_publish_uri+0x4758>\n    96ad:\t48 8b 00             \tmov    (%rax),%rax\n    96b0:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    96b4:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n    96ba:\t8d 50 05             \tlea    0x5(%rax),%edx\n    96bd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 96c4 <ki_handle_publish_uri+0x476f>\n    96c4:\t48 63 d2             \tmovslq %edx,%rdx\n    96c7:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    96cb:\t48 01 d0             \tadd    %rdx,%rax\n    96ce:\t48 8b 18             \tmov    (%rax),%rbx\n    96d1:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n    96d7:\t8d 50 05             \tlea    0x5(%rax),%edx\n    96da:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 96e1 <ki_handle_publish_uri+0x478c>\n    96e1:\t48 63 d2             \tmovslq %edx,%rdx\n    96e4:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    96e8:\t48 01 d0             \tadd    %rdx,%rax\n    96eb:\t48 83 c0 08          \tadd    $0x8,%rax\n    96ef:\t44 8b 30             \tmov    (%rax),%r14d\n    96f2:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    96f7:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 96fe <ki_handle_publish_uri+0x47a9>\n    96fe:\te8 00 00 00 00       \tcallq  9703 <ki_handle_publish_uri+0x47ae>\n    9703:\t44 09 f0             \tor     %r14d,%eax\n    9706:\t48 83 ec 08          \tsub    $0x8,%rsp\n    970a:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 9711 <ki_handle_publish_uri+0x47bc>\n    9711:\t52                   \tpush   %rdx\n    9712:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 9719 <ki_handle_publish_uri+0x47c4>\n    9719:\t4d 89 f8             \tmov    %r15,%r8\n    971c:\t44 89 e1             \tmov    %r12d,%ecx\n    971f:\t48 89 da             \tmov    %rbx,%rdx\n    9722:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9729 <ki_handle_publish_uri+0x47d4>\n    9729:\t89 c7                \tmov    %eax,%edi\n    972b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9730:\t41 ff d5             \tcallq  *%r13\n    9733:\t48 83 c4 10          \tadd    $0x10,%rsp\n    9737:\teb 7e                \tjmp    97b7 <ki_handle_publish_uri+0x4862>\n    9739:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9740 <ki_handle_publish_uri+0x47eb>\n    9740:\t4c 8b 20             \tmov    (%rax),%r12\n    9743:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n    9749:\t8d 50 05             \tlea    0x5(%rax),%edx\n    974c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9753 <ki_handle_publish_uri+0x47fe>\n    9753:\t48 63 d2             \tmovslq %edx,%rdx\n    9756:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    975a:\t48 01 d0             \tadd    %rdx,%rax\n    975d:\t48 8b 18             \tmov    (%rax),%rbx\n    9760:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n    9766:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9769:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9770 <ki_handle_publish_uri+0x481b>\n    9770:\t48 63 d2             \tmovslq %edx,%rdx\n    9773:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9777:\t48 01 d0             \tadd    %rdx,%rax\n    977a:\t48 83 c0 08          \tadd    $0x8,%rax\n    977e:\t44 8b 28             \tmov    (%rax),%r13d\n    9781:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    9786:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 978d <ki_handle_publish_uri+0x4838>\n    978d:\te8 00 00 00 00       \tcallq  9792 <ki_handle_publish_uri+0x483d>\n    9792:\t44 09 e8             \tor     %r13d,%eax\n    9795:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 979c <ki_handle_publish_uri+0x4847>\n    979c:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 97a3 <ki_handle_publish_uri+0x484e>\n    97a3:\t48 89 da             \tmov    %rbx,%rdx\n    97a6:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 97ad <ki_handle_publish_uri+0x4858>\n    97ad:\t89 c7                \tmov    %eax,%edi\n    97af:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    97b4:\t41 ff d4             \tcallq  *%r12\n    97b7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 97be <ki_handle_publish_uri+0x4869>\n    97be:\t8b 00                \tmov    (%rax),%eax\n    97c0:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    97c3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 97ca <ki_handle_publish_uri+0x4875>\n    97ca:\t89 10                \tmov    %edx,(%rax)\n    97cc:\te9 cc 0b 00 00       \tjmpq   a39d <ki_handle_publish_uri+0x5448>\n    97d1:\t4c 8b 45 98          \tmov    -0x68(%rbp),%r8\n    97d5:\t48 8d bd 4c fd ff ff \tlea    -0x2b4(%rbp),%rdi\n    97dc:\t8b 4d b0             \tmov    -0x50(%rbp),%ecx\n    97df:\t48 8d 95 90 fd ff ff \tlea    -0x270(%rbp),%rdx\n    97e6:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n    97ea:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    97f1:\t48 83 ec 08          \tsub    $0x8,%rsp\n    97f5:\t6a 00                \tpushq  $0x0\n    97f7:\t6a 00                \tpushq  $0x0\n    97f9:\t6a 00                \tpushq  $0x0\n    97fb:\t4d 89 c1             \tmov    %r8,%r9\n    97fe:\t49 89 f8             \tmov    %rdi,%r8\n    9801:\t48 89 c7             \tmov    %rax,%rdi\n    9804:\te8 00 00 00 00       \tcallq  9809 <ki_handle_publish_uri+0x48b4>\n    9809:\t48 83 c4 20          \tadd    $0x20,%rsp\n    980d:\t85 c0                \ttest   %eax,%eax\n    980f:\t0f 89 11 03 00 00    \tjns    9b26 <ki_handle_publish_uri+0x4bd1>\n    9815:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    981a:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 9821 <ki_handle_publish_uri+0x48cc>\n    9821:\te8 00 00 00 00       \tcallq  9826 <ki_handle_publish_uri+0x48d1>\n    9826:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    9829:\t0f 8c 71 0b 00 00    \tjl     a3a0 <ki_handle_publish_uri+0x544b>\n    982f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9836 <ki_handle_publish_uri+0x48e1>\n    9836:\t8b 00                \tmov    (%rax),%eax\n    9838:\t85 c0                \ttest   %eax,%eax\n    983a:\t0f 85 60 0b 00 00    \tjne    a3a0 <ki_handle_publish_uri+0x544b>\n    9840:\tc7 85 40 ff ff ff ff \tmovl   $0xffffffff,-0xc0(%rbp)\n    9847:\tff ff ff \n    984a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9851 <ki_handle_publish_uri+0x48fc>\n    9851:\t8b 00                \tmov    (%rax),%eax\n    9853:\t8d 50 01             \tlea    0x1(%rax),%edx\n    9856:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 985d <ki_handle_publish_uri+0x4908>\n    985d:\t89 10                \tmov    %edx,(%rax)\n    985f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9866 <ki_handle_publish_uri+0x4911>\n    9866:\t8b 00                \tmov    (%rax),%eax\n    9868:\t85 c0                \ttest   %eax,%eax\n    986a:\t0f 95 c0             \tsetne  %al\n    986d:\t0f b6 c0             \tmovzbl %al,%eax\n    9870:\t48 85 c0             \ttest   %rax,%rax\n    9873:\t0f 84 4f 01 00 00    \tje     99c8 <ki_handle_publish_uri+0x4a73>\n    9879:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9880 <ki_handle_publish_uri+0x492b>\n    9880:\t8b 00                \tmov    (%rax),%eax\n    9882:\t85 c0                \ttest   %eax,%eax\n    9884:\t0f 95 c0             \tsetne  %al\n    9887:\t0f b6 c0             \tmovzbl %al,%eax\n    988a:\t48 85 c0             \ttest   %rax,%rax\n    988d:\t74 0d                \tje     989c <ki_handle_publish_uri+0x4947>\n    988f:\t8b 85 40 ff ff ff    \tmov    -0xc0(%rbp),%eax\n    9895:\t89 c7                \tmov    %eax,%edi\n    9897:\te8 00 00 00 00       \tcallq  989c <ki_handle_publish_uri+0x4947>\n    989c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 98a3 <ki_handle_publish_uri+0x494e>\n    98a3:\t48 8b 00             \tmov    (%rax),%rax\n    98a6:\t48 85 c0             \ttest   %rax,%rax\n    98a9:\t0f 95 c0             \tsetne  %al\n    98ac:\t0f b6 c0             \tmovzbl %al,%eax\n    98af:\t48 85 c0             \ttest   %rax,%rax\n    98b2:\t0f 84 87 00 00 00    \tje     993f <ki_handle_publish_uri+0x49ea>\n    98b8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 98bf <ki_handle_publish_uri+0x496a>\n    98bf:\t48 8b 00             \tmov    (%rax),%rax\n    98c2:\t48 8b 18             \tmov    (%rax),%rbx\n    98c5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 98cc <ki_handle_publish_uri+0x4977>\n    98cc:\t48 8b 00             \tmov    (%rax),%rax\n    98cf:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    98d3:\t8b 85 40 ff ff ff    \tmov    -0xc0(%rbp),%eax\n    98d9:\t8d 50 05             \tlea    0x5(%rax),%edx\n    98dc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 98e3 <ki_handle_publish_uri+0x498e>\n    98e3:\t48 63 d2             \tmovslq %edx,%rdx\n    98e6:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    98ea:\t48 01 d0             \tadd    %rdx,%rax\n    98ed:\t4c 8b 20             \tmov    (%rax),%r12\n    98f0:\te8 00 00 00 00       \tcallq  98f5 <ki_handle_publish_uri+0x49a0>\n    98f5:\t89 c1                \tmov    %eax,%ecx\n    98f7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 98fe <ki_handle_publish_uri+0x49a9>\n    98fe:\t8b 10                \tmov    (%rax),%edx\n    9900:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9907 <ki_handle_publish_uri+0x49b2>\n    9907:\t48 8b 00             \tmov    (%rax),%rax\n    990a:\t48 83 ec 08          \tsub    $0x8,%rsp\n    990e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9915 <ki_handle_publish_uri+0x49c0>\n    9915:\t56                   \tpush   %rsi\n    9916:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 991d <ki_handle_publish_uri+0x49c8>\n    991d:\t56                   \tpush   %rsi\n    991e:\t53                   \tpush   %rbx\n    991f:\t45 89 e9             \tmov    %r13d,%r9d\n    9922:\t4d 89 e0             \tmov    %r12,%r8\n    9925:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 992c <ki_handle_publish_uri+0x49d7>\n    992c:\t48 89 c7             \tmov    %rax,%rdi\n    992f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9934:\te8 00 00 00 00       \tcallq  9939 <ki_handle_publish_uri+0x49e4>\n    9939:\t48 83 c4 20          \tadd    $0x20,%rsp\n    993d:\teb 65                \tjmp    99a4 <ki_handle_publish_uri+0x4a4f>\n    993f:\t8b 85 40 ff ff ff    \tmov    -0xc0(%rbp),%eax\n    9945:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9948:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 994f <ki_handle_publish_uri+0x49fa>\n    994f:\t48 63 d2             \tmovslq %edx,%rdx\n    9952:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9956:\t48 01 d0             \tadd    %rdx,%rax\n    9959:\t48 8b 18             \tmov    (%rax),%rbx\n    995c:\te8 00 00 00 00       \tcallq  9961 <ki_handle_publish_uri+0x4a0c>\n    9961:\t89 c1                \tmov    %eax,%ecx\n    9963:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 996a <ki_handle_publish_uri+0x4a15>\n    996a:\t8b 10                \tmov    (%rax),%edx\n    996c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9973 <ki_handle_publish_uri+0x4a1e>\n    9973:\t48 8b 00             \tmov    (%rax),%rax\n    9976:\t48 83 ec 08          \tsub    $0x8,%rsp\n    997a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9981 <ki_handle_publish_uri+0x4a2c>\n    9981:\t56                   \tpush   %rsi\n    9982:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 9989 <ki_handle_publish_uri+0x4a34>\n    9989:\t49 89 d8             \tmov    %rbx,%r8\n    998c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9993 <ki_handle_publish_uri+0x4a3e>\n    9993:\t48 89 c7             \tmov    %rax,%rdi\n    9996:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    999b:\te8 00 00 00 00       \tcallq  99a0 <ki_handle_publish_uri+0x4a4b>\n    99a0:\t48 83 c4 10          \tadd    $0x10,%rsp\n    99a4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 99ab <ki_handle_publish_uri+0x4a56>\n    99ab:\t8b 00                \tmov    (%rax),%eax\n    99ad:\t85 c0                \ttest   %eax,%eax\n    99af:\t0f 95 c0             \tsetne  %al\n    99b2:\t0f b6 c0             \tmovzbl %al,%eax\n    99b5:\t48 85 c0             \ttest   %rax,%rax\n    99b8:\t0f 84 4e 01 00 00    \tje     9b0c <ki_handle_publish_uri+0x4bb7>\n    99be:\te8 00 00 00 00       \tcallq  99c3 <ki_handle_publish_uri+0x4a6e>\n    99c3:\te9 44 01 00 00       \tjmpq   9b0c <ki_handle_publish_uri+0x4bb7>\n    99c8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 99cf <ki_handle_publish_uri+0x4a7a>\n    99cf:\t48 8b 00             \tmov    (%rax),%rax\n    99d2:\t48 85 c0             \ttest   %rax,%rax\n    99d5:\t0f 95 c0             \tsetne  %al\n    99d8:\t0f b6 c0             \tmovzbl %al,%eax\n    99db:\t48 85 c0             \ttest   %rax,%rax\n    99de:\t0f 84 aa 00 00 00    \tje     9a8e <ki_handle_publish_uri+0x4b39>\n    99e4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 99eb <ki_handle_publish_uri+0x4a96>\n    99eb:\t4c 8b 28             \tmov    (%rax),%r13\n    99ee:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 99f5 <ki_handle_publish_uri+0x4aa0>\n    99f5:\t48 8b 00             \tmov    (%rax),%rax\n    99f8:\t4c 8b 38             \tmov    (%rax),%r15\n    99fb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9a02 <ki_handle_publish_uri+0x4aad>\n    9a02:\t48 8b 00             \tmov    (%rax),%rax\n    9a05:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    9a09:\t8b 85 40 ff ff ff    \tmov    -0xc0(%rbp),%eax\n    9a0f:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9a12:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9a19 <ki_handle_publish_uri+0x4ac4>\n    9a19:\t48 63 d2             \tmovslq %edx,%rdx\n    9a1c:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9a20:\t48 01 d0             \tadd    %rdx,%rax\n    9a23:\t48 8b 18             \tmov    (%rax),%rbx\n    9a26:\t8b 85 40 ff ff ff    \tmov    -0xc0(%rbp),%eax\n    9a2c:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9a2f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9a36 <ki_handle_publish_uri+0x4ae1>\n    9a36:\t48 63 d2             \tmovslq %edx,%rdx\n    9a39:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9a3d:\t48 01 d0             \tadd    %rdx,%rax\n    9a40:\t48 83 c0 08          \tadd    $0x8,%rax\n    9a44:\t44 8b 30             \tmov    (%rax),%r14d\n    9a47:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    9a4c:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 9a53 <ki_handle_publish_uri+0x4afe>\n    9a53:\te8 00 00 00 00       \tcallq  9a58 <ki_handle_publish_uri+0x4b03>\n    9a58:\t44 09 f0             \tor     %r14d,%eax\n    9a5b:\t48 83 ec 08          \tsub    $0x8,%rsp\n    9a5f:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 9a66 <ki_handle_publish_uri+0x4b11>\n    9a66:\t52                   \tpush   %rdx\n    9a67:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 9a6e <ki_handle_publish_uri+0x4b19>\n    9a6e:\t4d 89 f8             \tmov    %r15,%r8\n    9a71:\t44 89 e1             \tmov    %r12d,%ecx\n    9a74:\t48 89 da             \tmov    %rbx,%rdx\n    9a77:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9a7e <ki_handle_publish_uri+0x4b29>\n    9a7e:\t89 c7                \tmov    %eax,%edi\n    9a80:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9a85:\t41 ff d5             \tcallq  *%r13\n    9a88:\t48 83 c4 10          \tadd    $0x10,%rsp\n    9a8c:\teb 7e                \tjmp    9b0c <ki_handle_publish_uri+0x4bb7>\n    9a8e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9a95 <ki_handle_publish_uri+0x4b40>\n    9a95:\t4c 8b 20             \tmov    (%rax),%r12\n    9a98:\t8b 85 40 ff ff ff    \tmov    -0xc0(%rbp),%eax\n    9a9e:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9aa1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9aa8 <ki_handle_publish_uri+0x4b53>\n    9aa8:\t48 63 d2             \tmovslq %edx,%rdx\n    9aab:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9aaf:\t48 01 d0             \tadd    %rdx,%rax\n    9ab2:\t48 8b 18             \tmov    (%rax),%rbx\n    9ab5:\t8b 85 40 ff ff ff    \tmov    -0xc0(%rbp),%eax\n    9abb:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9abe:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9ac5 <ki_handle_publish_uri+0x4b70>\n    9ac5:\t48 63 d2             \tmovslq %edx,%rdx\n    9ac8:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9acc:\t48 01 d0             \tadd    %rdx,%rax\n    9acf:\t48 83 c0 08          \tadd    $0x8,%rax\n    9ad3:\t44 8b 28             \tmov    (%rax),%r13d\n    9ad6:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    9adb:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 9ae2 <ki_handle_publish_uri+0x4b8d>\n    9ae2:\te8 00 00 00 00       \tcallq  9ae7 <ki_handle_publish_uri+0x4b92>\n    9ae7:\t44 09 e8             \tor     %r13d,%eax\n    9aea:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 9af1 <ki_handle_publish_uri+0x4b9c>\n    9af1:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 9af8 <ki_handle_publish_uri+0x4ba3>\n    9af8:\t48 89 da             \tmov    %rbx,%rdx\n    9afb:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9b02 <ki_handle_publish_uri+0x4bad>\n    9b02:\t89 c7                \tmov    %eax,%edi\n    9b04:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9b09:\t41 ff d4             \tcallq  *%r12\n    9b0c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9b13 <ki_handle_publish_uri+0x4bbe>\n    9b13:\t8b 00                \tmov    (%rax),%eax\n    9b15:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    9b18:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9b1f <ki_handle_publish_uri+0x4bca>\n    9b1f:\t89 10                \tmov    %edx,(%rax)\n    9b21:\te9 7a 08 00 00       \tjmpq   a3a0 <ki_handle_publish_uri+0x544b>\n    9b26:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n    9b2b:\t74 3b                \tje     9b68 <ki_handle_publish_uri+0x4c13>\n    9b2d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9b34 <ki_handle_publish_uri+0x4bdf>\n    9b34:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    9b38:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9b3f <ki_handle_publish_uri+0x4bea>\n    9b3f:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    9b43:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n    9b47:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 9b4e <ki_handle_publish_uri+0x4bf9>\n    9b4e:\t41 b8 f8 01 00 00    \tmov    $0x1f8,%r8d\n    9b54:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 9b5b <ki_handle_publish_uri+0x4c06>\n    9b5b:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 9b62 <ki_handle_publish_uri+0x4c0d>\n    9b62:\t48 89 c7             \tmov    %rax,%rdi\n    9b65:\t41 ff d2             \tcallq  *%r10\n    9b68:\t48 8b 85 80 fd ff ff \tmov    -0x280(%rbp),%rax\n    9b6f:\t48 85 c0             \ttest   %rax,%rax\n    9b72:\t74 3e                \tje     9bb2 <ki_handle_publish_uri+0x4c5d>\n    9b74:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9b7b <ki_handle_publish_uri+0x4c26>\n    9b7b:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    9b7f:\t48 8b b5 80 fd ff ff \tmov    -0x280(%rbp),%rsi\n    9b86:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9b8d <ki_handle_publish_uri+0x4c38>\n    9b8d:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    9b91:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 9b98 <ki_handle_publish_uri+0x4c43>\n    9b98:\t41 b8 fa 01 00 00    \tmov    $0x1fa,%r8d\n    9b9e:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 9ba5 <ki_handle_publish_uri+0x4c50>\n    9ba5:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 9bac <ki_handle_publish_uri+0x4c57>\n    9bac:\t48 89 c7             \tmov    %rax,%rdi\n    9baf:\t41 ff d2             \tcallq  *%r10\n    9bb2:\t48 83 7d a8 00       \tcmpq   $0x0,-0x58(%rbp)\n    9bb7:\t74 3b                \tje     9bf4 <ki_handle_publish_uri+0x4c9f>\n    9bb9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9bc0 <ki_handle_publish_uri+0x4c6b>\n    9bc0:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    9bc4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9bcb <ki_handle_publish_uri+0x4c76>\n    9bcb:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    9bcf:\t48 8b 75 a8          \tmov    -0x58(%rbp),%rsi\n    9bd3:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 9bda <ki_handle_publish_uri+0x4c85>\n    9bda:\t41 b8 fc 01 00 00    \tmov    $0x1fc,%r8d\n    9be0:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 9be7 <ki_handle_publish_uri+0x4c92>\n    9be7:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 9bee <ki_handle_publish_uri+0x4c99>\n    9bee:\t48 89 c7             \tmov    %rax,%rdi\n    9bf1:\t41 ff d2             \tcallq  *%r10\n    9bf4:\t48 83 7d 98 00       \tcmpq   $0x0,-0x68(%rbp)\n    9bf9:\t74 3b                \tje     9c36 <ki_handle_publish_uri+0x4ce1>\n    9bfb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9c02 <ki_handle_publish_uri+0x4cad>\n    9c02:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    9c06:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9c0d <ki_handle_publish_uri+0x4cb8>\n    9c0d:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    9c11:\t48 8b 75 98          \tmov    -0x68(%rbp),%rsi\n    9c15:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 9c1c <ki_handle_publish_uri+0x4cc7>\n    9c1c:\t41 b8 fe 01 00 00    \tmov    $0x1fe,%r8d\n    9c22:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 9c29 <ki_handle_publish_uri+0x4cd4>\n    9c29:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 9c30 <ki_handle_publish_uri+0x4cdb>\n    9c30:\t48 89 c7             \tmov    %rax,%rdi\n    9c33:\t41 ff d2             \tcallq  *%r10\n    9c36:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    9c3b:\te9 bb 0b 00 00       \tjmpq   a7fb <ki_handle_publish_uri+0x58a6>\n    9c40:\t90                   \tnop\n    9c41:\teb 01                \tjmp    9c44 <ki_handle_publish_uri+0x4cef>\n    9c43:\t90                   \tnop\n    9c44:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    9c49:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 9c50 <ki_handle_publish_uri+0x4cfb>\n    9c50:\te8 00 00 00 00       \tcallq  9c55 <ki_handle_publish_uri+0x4d00>\n    9c55:\t85 c0                \ttest   %eax,%eax\n    9c57:\t0f 88 f2 02 00 00    \tjs     9f4f <ki_handle_publish_uri+0x4ffa>\n    9c5d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9c64 <ki_handle_publish_uri+0x4d0f>\n    9c64:\t8b 00                \tmov    (%rax),%eax\n    9c66:\t85 c0                \ttest   %eax,%eax\n    9c68:\t0f 85 e1 02 00 00    \tjne    9f4f <ki_handle_publish_uri+0x4ffa>\n    9c6e:\tc7 85 30 ff ff ff 00 \tmovl   $0x0,-0xd0(%rbp)\n    9c75:\t00 00 00 \n    9c78:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9c7f <ki_handle_publish_uri+0x4d2a>\n    9c7f:\t8b 00                \tmov    (%rax),%eax\n    9c81:\t8d 50 01             \tlea    0x1(%rax),%edx\n    9c84:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9c8b <ki_handle_publish_uri+0x4d36>\n    9c8b:\t89 10                \tmov    %edx,(%rax)\n    9c8d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9c94 <ki_handle_publish_uri+0x4d3f>\n    9c94:\t8b 00                \tmov    (%rax),%eax\n    9c96:\t85 c0                \ttest   %eax,%eax\n    9c98:\t0f 95 c0             \tsetne  %al\n    9c9b:\t0f b6 c0             \tmovzbl %al,%eax\n    9c9e:\t48 85 c0             \ttest   %rax,%rax\n    9ca1:\t0f 84 4f 01 00 00    \tje     9df6 <ki_handle_publish_uri+0x4ea1>\n    9ca7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9cae <ki_handle_publish_uri+0x4d59>\n    9cae:\t8b 00                \tmov    (%rax),%eax\n    9cb0:\t85 c0                \ttest   %eax,%eax\n    9cb2:\t0f 95 c0             \tsetne  %al\n    9cb5:\t0f b6 c0             \tmovzbl %al,%eax\n    9cb8:\t48 85 c0             \ttest   %rax,%rax\n    9cbb:\t74 0d                \tje     9cca <ki_handle_publish_uri+0x4d75>\n    9cbd:\t8b 85 30 ff ff ff    \tmov    -0xd0(%rbp),%eax\n    9cc3:\t89 c7                \tmov    %eax,%edi\n    9cc5:\te8 00 00 00 00       \tcallq  9cca <ki_handle_publish_uri+0x4d75>\n    9cca:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9cd1 <ki_handle_publish_uri+0x4d7c>\n    9cd1:\t48 8b 00             \tmov    (%rax),%rax\n    9cd4:\t48 85 c0             \ttest   %rax,%rax\n    9cd7:\t0f 95 c0             \tsetne  %al\n    9cda:\t0f b6 c0             \tmovzbl %al,%eax\n    9cdd:\t48 85 c0             \ttest   %rax,%rax\n    9ce0:\t0f 84 87 00 00 00    \tje     9d6d <ki_handle_publish_uri+0x4e18>\n    9ce6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9ced <ki_handle_publish_uri+0x4d98>\n    9ced:\t48 8b 00             \tmov    (%rax),%rax\n    9cf0:\t48 8b 18             \tmov    (%rax),%rbx\n    9cf3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9cfa <ki_handle_publish_uri+0x4da5>\n    9cfa:\t48 8b 00             \tmov    (%rax),%rax\n    9cfd:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    9d01:\t8b 85 30 ff ff ff    \tmov    -0xd0(%rbp),%eax\n    9d07:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9d0a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9d11 <ki_handle_publish_uri+0x4dbc>\n    9d11:\t48 63 d2             \tmovslq %edx,%rdx\n    9d14:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9d18:\t48 01 d0             \tadd    %rdx,%rax\n    9d1b:\t4c 8b 20             \tmov    (%rax),%r12\n    9d1e:\te8 00 00 00 00       \tcallq  9d23 <ki_handle_publish_uri+0x4dce>\n    9d23:\t89 c1                \tmov    %eax,%ecx\n    9d25:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9d2c <ki_handle_publish_uri+0x4dd7>\n    9d2c:\t8b 10                \tmov    (%rax),%edx\n    9d2e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9d35 <ki_handle_publish_uri+0x4de0>\n    9d35:\t48 8b 00             \tmov    (%rax),%rax\n    9d38:\t48 83 ec 08          \tsub    $0x8,%rsp\n    9d3c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9d43 <ki_handle_publish_uri+0x4dee>\n    9d43:\t56                   \tpush   %rsi\n    9d44:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9d4b <ki_handle_publish_uri+0x4df6>\n    9d4b:\t56                   \tpush   %rsi\n    9d4c:\t53                   \tpush   %rbx\n    9d4d:\t45 89 e9             \tmov    %r13d,%r9d\n    9d50:\t4d 89 e0             \tmov    %r12,%r8\n    9d53:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9d5a <ki_handle_publish_uri+0x4e05>\n    9d5a:\t48 89 c7             \tmov    %rax,%rdi\n    9d5d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9d62:\te8 00 00 00 00       \tcallq  9d67 <ki_handle_publish_uri+0x4e12>\n    9d67:\t48 83 c4 20          \tadd    $0x20,%rsp\n    9d6b:\teb 65                \tjmp    9dd2 <ki_handle_publish_uri+0x4e7d>\n    9d6d:\t8b 85 30 ff ff ff    \tmov    -0xd0(%rbp),%eax\n    9d73:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9d76:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9d7d <ki_handle_publish_uri+0x4e28>\n    9d7d:\t48 63 d2             \tmovslq %edx,%rdx\n    9d80:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9d84:\t48 01 d0             \tadd    %rdx,%rax\n    9d87:\t48 8b 18             \tmov    (%rax),%rbx\n    9d8a:\te8 00 00 00 00       \tcallq  9d8f <ki_handle_publish_uri+0x4e3a>\n    9d8f:\t89 c1                \tmov    %eax,%ecx\n    9d91:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9d98 <ki_handle_publish_uri+0x4e43>\n    9d98:\t8b 10                \tmov    (%rax),%edx\n    9d9a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9da1 <ki_handle_publish_uri+0x4e4c>\n    9da1:\t48 8b 00             \tmov    (%rax),%rax\n    9da4:\t48 83 ec 08          \tsub    $0x8,%rsp\n    9da8:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9daf <ki_handle_publish_uri+0x4e5a>\n    9daf:\t56                   \tpush   %rsi\n    9db0:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 9db7 <ki_handle_publish_uri+0x4e62>\n    9db7:\t49 89 d8             \tmov    %rbx,%r8\n    9dba:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9dc1 <ki_handle_publish_uri+0x4e6c>\n    9dc1:\t48 89 c7             \tmov    %rax,%rdi\n    9dc4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9dc9:\te8 00 00 00 00       \tcallq  9dce <ki_handle_publish_uri+0x4e79>\n    9dce:\t48 83 c4 10          \tadd    $0x10,%rsp\n    9dd2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9dd9 <ki_handle_publish_uri+0x4e84>\n    9dd9:\t8b 00                \tmov    (%rax),%eax\n    9ddb:\t85 c0                \ttest   %eax,%eax\n    9ddd:\t0f 95 c0             \tsetne  %al\n    9de0:\t0f b6 c0             \tmovzbl %al,%eax\n    9de3:\t48 85 c0             \ttest   %rax,%rax\n    9de6:\t0f 84 4e 01 00 00    \tje     9f3a <ki_handle_publish_uri+0x4fe5>\n    9dec:\te8 00 00 00 00       \tcallq  9df1 <ki_handle_publish_uri+0x4e9c>\n    9df1:\te9 44 01 00 00       \tjmpq   9f3a <ki_handle_publish_uri+0x4fe5>\n    9df6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9dfd <ki_handle_publish_uri+0x4ea8>\n    9dfd:\t48 8b 00             \tmov    (%rax),%rax\n    9e00:\t48 85 c0             \ttest   %rax,%rax\n    9e03:\t0f 95 c0             \tsetne  %al\n    9e06:\t0f b6 c0             \tmovzbl %al,%eax\n    9e09:\t48 85 c0             \ttest   %rax,%rax\n    9e0c:\t0f 84 aa 00 00 00    \tje     9ebc <ki_handle_publish_uri+0x4f67>\n    9e12:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9e19 <ki_handle_publish_uri+0x4ec4>\n    9e19:\t4c 8b 28             \tmov    (%rax),%r13\n    9e1c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9e23 <ki_handle_publish_uri+0x4ece>\n    9e23:\t48 8b 00             \tmov    (%rax),%rax\n    9e26:\t4c 8b 38             \tmov    (%rax),%r15\n    9e29:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9e30 <ki_handle_publish_uri+0x4edb>\n    9e30:\t48 8b 00             \tmov    (%rax),%rax\n    9e33:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    9e37:\t8b 85 30 ff ff ff    \tmov    -0xd0(%rbp),%eax\n    9e3d:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9e40:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9e47 <ki_handle_publish_uri+0x4ef2>\n    9e47:\t48 63 d2             \tmovslq %edx,%rdx\n    9e4a:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9e4e:\t48 01 d0             \tadd    %rdx,%rax\n    9e51:\t48 8b 18             \tmov    (%rax),%rbx\n    9e54:\t8b 85 30 ff ff ff    \tmov    -0xd0(%rbp),%eax\n    9e5a:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9e5d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9e64 <ki_handle_publish_uri+0x4f0f>\n    9e64:\t48 63 d2             \tmovslq %edx,%rdx\n    9e67:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9e6b:\t48 01 d0             \tadd    %rdx,%rax\n    9e6e:\t48 83 c0 08          \tadd    $0x8,%rax\n    9e72:\t44 8b 30             \tmov    (%rax),%r14d\n    9e75:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    9e7a:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 9e81 <ki_handle_publish_uri+0x4f2c>\n    9e81:\te8 00 00 00 00       \tcallq  9e86 <ki_handle_publish_uri+0x4f31>\n    9e86:\t44 09 f0             \tor     %r14d,%eax\n    9e89:\t48 83 ec 08          \tsub    $0x8,%rsp\n    9e8d:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 9e94 <ki_handle_publish_uri+0x4f3f>\n    9e94:\t52                   \tpush   %rdx\n    9e95:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 9e9c <ki_handle_publish_uri+0x4f47>\n    9e9c:\t4d 89 f8             \tmov    %r15,%r8\n    9e9f:\t44 89 e1             \tmov    %r12d,%ecx\n    9ea2:\t48 89 da             \tmov    %rbx,%rdx\n    9ea5:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9eac <ki_handle_publish_uri+0x4f57>\n    9eac:\t89 c7                \tmov    %eax,%edi\n    9eae:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9eb3:\t41 ff d5             \tcallq  *%r13\n    9eb6:\t48 83 c4 10          \tadd    $0x10,%rsp\n    9eba:\teb 7e                \tjmp    9f3a <ki_handle_publish_uri+0x4fe5>\n    9ebc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9ec3 <ki_handle_publish_uri+0x4f6e>\n    9ec3:\t4c 8b 20             \tmov    (%rax),%r12\n    9ec6:\t8b 85 30 ff ff ff    \tmov    -0xd0(%rbp),%eax\n    9ecc:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9ecf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9ed6 <ki_handle_publish_uri+0x4f81>\n    9ed6:\t48 63 d2             \tmovslq %edx,%rdx\n    9ed9:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9edd:\t48 01 d0             \tadd    %rdx,%rax\n    9ee0:\t48 8b 18             \tmov    (%rax),%rbx\n    9ee3:\t8b 85 30 ff ff ff    \tmov    -0xd0(%rbp),%eax\n    9ee9:\t8d 50 05             \tlea    0x5(%rax),%edx\n    9eec:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9ef3 <ki_handle_publish_uri+0x4f9e>\n    9ef3:\t48 63 d2             \tmovslq %edx,%rdx\n    9ef6:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    9efa:\t48 01 d0             \tadd    %rdx,%rax\n    9efd:\t48 83 c0 08          \tadd    $0x8,%rax\n    9f01:\t44 8b 28             \tmov    (%rax),%r13d\n    9f04:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    9f09:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 9f10 <ki_handle_publish_uri+0x4fbb>\n    9f10:\te8 00 00 00 00       \tcallq  9f15 <ki_handle_publish_uri+0x4fc0>\n    9f15:\t44 09 e8             \tor     %r13d,%eax\n    9f18:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 9f1f <ki_handle_publish_uri+0x4fca>\n    9f1f:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 9f26 <ki_handle_publish_uri+0x4fd1>\n    9f26:\t48 89 da             \tmov    %rbx,%rdx\n    9f29:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 9f30 <ki_handle_publish_uri+0x4fdb>\n    9f30:\t89 c7                \tmov    %eax,%edi\n    9f32:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9f37:\t41 ff d4             \tcallq  *%r12\n    9f3a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9f41 <ki_handle_publish_uri+0x4fec>\n    9f41:\t8b 00                \tmov    (%rax),%eax\n    9f43:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    9f46:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9f4d <ki_handle_publish_uri+0x4ff8>\n    9f4d:\t89 10                \tmov    %edx,(%rax)\n    9f4f:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    9f56:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    9f5d:\t48 85 c0             \ttest   %rax,%rax\n    9f60:\t0f 84 00 04 00 00    \tje     a366 <ki_handle_publish_uri+0x5411>\n    9f66:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    9f6d:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    9f74:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    9f78:\t48 85 c0             \ttest   %rax,%rax\n    9f7b:\t0f 84 e5 03 00 00    \tje     a366 <ki_handle_publish_uri+0x5411>\n    9f81:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    9f88:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    9f8f:\t8b 40 20             \tmov    0x20(%rax),%eax\n    9f92:\t85 c0                \ttest   %eax,%eax\n    9f94:\t0f 8e cc 03 00 00    \tjle    a366 <ki_handle_publish_uri+0x5411>\n    9f9a:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    9f9f:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 9fa6 <ki_handle_publish_uri+0x5051>\n    9fa6:\te8 00 00 00 00       \tcallq  9fab <ki_handle_publish_uri+0x5056>\n    9fab:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    9fae:\t0f 8c b2 03 00 00    \tjl     a366 <ki_handle_publish_uri+0x5411>\n    9fb4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9fbb <ki_handle_publish_uri+0x5066>\n    9fbb:\t8b 00                \tmov    (%rax),%eax\n    9fbd:\t85 c0                \ttest   %eax,%eax\n    9fbf:\t0f 85 a1 03 00 00    \tjne    a366 <ki_handle_publish_uri+0x5411>\n    9fc5:\tc7 85 2c ff ff ff ff \tmovl   $0xffffffff,-0xd4(%rbp)\n    9fcc:\tff ff ff \n    9fcf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9fd6 <ki_handle_publish_uri+0x5081>\n    9fd6:\t8b 00                \tmov    (%rax),%eax\n    9fd8:\t8d 50 01             \tlea    0x1(%rax),%edx\n    9fdb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9fe2 <ki_handle_publish_uri+0x508d>\n    9fe2:\t89 10                \tmov    %edx,(%rax)\n    9fe4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9feb <ki_handle_publish_uri+0x5096>\n    9feb:\t8b 00                \tmov    (%rax),%eax\n    9fed:\t85 c0                \ttest   %eax,%eax\n    9fef:\t0f 95 c0             \tsetne  %al\n    9ff2:\t0f b6 c0             \tmovzbl %al,%eax\n    9ff5:\t48 85 c0             \ttest   %rax,%rax\n    9ff8:\t0f 84 a0 01 00 00    \tje     a19e <ki_handle_publish_uri+0x5249>\n    9ffe:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a005 <ki_handle_publish_uri+0x50b0>\n    a005:\t8b 00                \tmov    (%rax),%eax\n    a007:\t85 c0                \ttest   %eax,%eax\n    a009:\t0f 95 c0             \tsetne  %al\n    a00c:\t0f b6 c0             \tmovzbl %al,%eax\n    a00f:\t48 85 c0             \ttest   %rax,%rax\n    a012:\t74 0d                \tje     a021 <ki_handle_publish_uri+0x50cc>\n    a014:\t8b 85 2c ff ff ff    \tmov    -0xd4(%rbp),%eax\n    a01a:\t89 c7                \tmov    %eax,%edi\n    a01c:\te8 00 00 00 00       \tcallq  a021 <ki_handle_publish_uri+0x50cc>\n    a021:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a028 <ki_handle_publish_uri+0x50d3>\n    a028:\t48 8b 00             \tmov    (%rax),%rax\n    a02b:\t48 85 c0             \ttest   %rax,%rax\n    a02e:\t0f 95 c0             \tsetne  %al\n    a031:\t0f b6 c0             \tmovzbl %al,%eax\n    a034:\t48 85 c0             \ttest   %rax,%rax\n    a037:\t0f 84 b2 00 00 00    \tje     a0ef <ki_handle_publish_uri+0x519a>\n    a03d:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    a044:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    a04b:\t4c 8b 68 18          \tmov    0x18(%rax),%r13\n    a04f:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    a056:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    a05d:\t44 8b 60 20          \tmov    0x20(%rax),%r12d\n    a061:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a068 <ki_handle_publish_uri+0x5113>\n    a068:\t48 8b 00             \tmov    (%rax),%rax\n    a06b:\t48 8b 18             \tmov    (%rax),%rbx\n    a06e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a075 <ki_handle_publish_uri+0x5120>\n    a075:\t48 8b 00             \tmov    (%rax),%rax\n    a078:\t44 8b 78 08          \tmov    0x8(%rax),%r15d\n    a07c:\t8b 85 2c ff ff ff    \tmov    -0xd4(%rbp),%eax\n    a082:\t8d 50 05             \tlea    0x5(%rax),%edx\n    a085:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a08c <ki_handle_publish_uri+0x5137>\n    a08c:\t48 63 d2             \tmovslq %edx,%rdx\n    a08f:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    a093:\t48 01 d0             \tadd    %rdx,%rax\n    a096:\t4c 8b 30             \tmov    (%rax),%r14\n    a099:\te8 00 00 00 00       \tcallq  a09e <ki_handle_publish_uri+0x5149>\n    a09e:\t89 c1                \tmov    %eax,%ecx\n    a0a0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a0a7 <ki_handle_publish_uri+0x5152>\n    a0a7:\t8b 10                \tmov    (%rax),%edx\n    a0a9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a0b0 <ki_handle_publish_uri+0x515b>\n    a0b0:\t48 8b 00             \tmov    (%rax),%rax\n    a0b3:\t48 83 ec 08          \tsub    $0x8,%rsp\n    a0b7:\t41 55                \tpush   %r13\n    a0b9:\t41 54                \tpush   %r12\n    a0bb:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a0c2 <ki_handle_publish_uri+0x516d>\n    a0c2:\t56                   \tpush   %rsi\n    a0c3:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a0ca <ki_handle_publish_uri+0x5175>\n    a0ca:\t56                   \tpush   %rsi\n    a0cb:\t53                   \tpush   %rbx\n    a0cc:\t45 89 f9             \tmov    %r15d,%r9d\n    a0cf:\t4d 89 f0             \tmov    %r14,%r8\n    a0d2:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a0d9 <ki_handle_publish_uri+0x5184>\n    a0d9:\t48 89 c7             \tmov    %rax,%rdi\n    a0dc:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    a0e1:\te8 00 00 00 00       \tcallq  a0e6 <ki_handle_publish_uri+0x5191>\n    a0e6:\t48 83 c4 30          \tadd    $0x30,%rsp\n    a0ea:\te9 8b 00 00 00       \tjmpq   a17a <ki_handle_publish_uri+0x5225>\n    a0ef:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    a0f6:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    a0fd:\t4c 8b 60 18          \tmov    0x18(%rax),%r12\n    a101:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    a108:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    a10f:\t8b 58 20             \tmov    0x20(%rax),%ebx\n    a112:\t8b 85 2c ff ff ff    \tmov    -0xd4(%rbp),%eax\n    a118:\t8d 50 05             \tlea    0x5(%rax),%edx\n    a11b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a122 <ki_handle_publish_uri+0x51cd>\n    a122:\t48 63 d2             \tmovslq %edx,%rdx\n    a125:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    a129:\t48 01 d0             \tadd    %rdx,%rax\n    a12c:\t4c 8b 28             \tmov    (%rax),%r13\n    a12f:\te8 00 00 00 00       \tcallq  a134 <ki_handle_publish_uri+0x51df>\n    a134:\t89 c1                \tmov    %eax,%ecx\n    a136:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a13d <ki_handle_publish_uri+0x51e8>\n    a13d:\t8b 10                \tmov    (%rax),%edx\n    a13f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a146 <ki_handle_publish_uri+0x51f1>\n    a146:\t48 8b 00             \tmov    (%rax),%rax\n    a149:\t48 83 ec 08          \tsub    $0x8,%rsp\n    a14d:\t41 54                \tpush   %r12\n    a14f:\t53                   \tpush   %rbx\n    a150:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a157 <ki_handle_publish_uri+0x5202>\n    a157:\t56                   \tpush   %rsi\n    a158:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # a15f <ki_handle_publish_uri+0x520a>\n    a15f:\t4d 89 e8             \tmov    %r13,%r8\n    a162:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a169 <ki_handle_publish_uri+0x5214>\n    a169:\t48 89 c7             \tmov    %rax,%rdi\n    a16c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    a171:\te8 00 00 00 00       \tcallq  a176 <ki_handle_publish_uri+0x5221>\n    a176:\t48 83 c4 20          \tadd    $0x20,%rsp\n    a17a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a181 <ki_handle_publish_uri+0x522c>\n    a181:\t8b 00                \tmov    (%rax),%eax\n    a183:\t85 c0                \ttest   %eax,%eax\n    a185:\t0f 95 c0             \tsetne  %al\n    a188:\t0f b6 c0             \tmovzbl %al,%eax\n    a18b:\t48 85 c0             \ttest   %rax,%rax\n    a18e:\t0f 84 bd 01 00 00    \tje     a351 <ki_handle_publish_uri+0x53fc>\n    a194:\te8 00 00 00 00       \tcallq  a199 <ki_handle_publish_uri+0x5244>\n    a199:\te9 b3 01 00 00       \tjmpq   a351 <ki_handle_publish_uri+0x53fc>\n    a19e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a1a5 <ki_handle_publish_uri+0x5250>\n    a1a5:\t48 8b 00             \tmov    (%rax),%rax\n    a1a8:\t48 85 c0             \ttest   %rax,%rax\n    a1ab:\t0f 95 c0             \tsetne  %al\n    a1ae:\t0f b6 c0             \tmovzbl %al,%eax\n    a1b1:\t48 85 c0             \ttest   %rax,%rax\n    a1b4:\t0f 84 e8 00 00 00    \tje     a2a2 <ki_handle_publish_uri+0x534d>\n    a1ba:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a1c1 <ki_handle_publish_uri+0x526c>\n    a1c1:\t4c 8b 28             \tmov    (%rax),%r13\n    a1c4:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    a1cb:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    a1d2:\t4c 8b 78 18          \tmov    0x18(%rax),%r15\n    a1d6:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    a1dd:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    a1e4:\t44 8b 70 20          \tmov    0x20(%rax),%r14d\n    a1e8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a1ef <ki_handle_publish_uri+0x529a>\n    a1ef:\t48 8b 00             \tmov    (%rax),%rax\n    a1f2:\t48 8b 00             \tmov    (%rax),%rax\n    a1f5:\t48 89 85 28 fd ff ff \tmov    %rax,-0x2d8(%rbp)\n    a1fc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a203 <ki_handle_publish_uri+0x52ae>\n    a203:\t48 8b 00             \tmov    (%rax),%rax\n    a206:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    a20a:\t8b 85 2c ff ff ff    \tmov    -0xd4(%rbp),%eax\n    a210:\t8d 50 05             \tlea    0x5(%rax),%edx\n    a213:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a21a <ki_handle_publish_uri+0x52c5>\n    a21a:\t48 63 d2             \tmovslq %edx,%rdx\n    a21d:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    a221:\t48 01 d0             \tadd    %rdx,%rax\n    a224:\t48 8b 18             \tmov    (%rax),%rbx\n    a227:\t8b 85 2c ff ff ff    \tmov    -0xd4(%rbp),%eax\n    a22d:\t8d 50 05             \tlea    0x5(%rax),%edx\n    a230:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a237 <ki_handle_publish_uri+0x52e2>\n    a237:\t48 63 d2             \tmovslq %edx,%rdx\n    a23a:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    a23e:\t48 01 d0             \tadd    %rdx,%rax\n    a241:\t48 83 c0 08          \tadd    $0x8,%rax\n    a245:\t8b 08                \tmov    (%rax),%ecx\n    a247:\t89 8d 24 fd ff ff    \tmov    %ecx,-0x2dc(%rbp)\n    a24d:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    a252:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # a259 <ki_handle_publish_uri+0x5304>\n    a259:\te8 00 00 00 00       \tcallq  a25e <ki_handle_publish_uri+0x5309>\n    a25e:\t0b 85 24 fd ff ff    \tor     -0x2dc(%rbp),%eax\n    a264:\t48 83 ec 08          \tsub    $0x8,%rsp\n    a268:\t41 57                \tpush   %r15\n    a26a:\t41 56                \tpush   %r14\n    a26c:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # a273 <ki_handle_publish_uri+0x531e>\n    a273:\t52                   \tpush   %rdx\n    a274:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # a27b <ki_handle_publish_uri+0x5326>\n    a27b:\t4c 8b 85 28 fd ff ff \tmov    -0x2d8(%rbp),%r8\n    a282:\t44 89 e1             \tmov    %r12d,%ecx\n    a285:\t48 89 da             \tmov    %rbx,%rdx\n    a288:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a28f <ki_handle_publish_uri+0x533a>\n    a28f:\t89 c7                \tmov    %eax,%edi\n    a291:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    a296:\t41 ff d5             \tcallq  *%r13\n    a299:\t48 83 c4 20          \tadd    $0x20,%rsp\n    a29d:\te9 af 00 00 00       \tjmpq   a351 <ki_handle_publish_uri+0x53fc>\n    a2a2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a2a9 <ki_handle_publish_uri+0x5354>\n    a2a9:\t4c 8b 20             \tmov    (%rax),%r12\n    a2ac:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    a2b3:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    a2ba:\t4c 8b 68 18          \tmov    0x18(%rax),%r13\n    a2be:\t48 8b 85 38 fd ff ff \tmov    -0x2c8(%rbp),%rax\n    a2c5:\t48 8b 80 28 01 00 00 \tmov    0x128(%rax),%rax\n    a2cc:\t44 8b 78 20          \tmov    0x20(%rax),%r15d\n    a2d0:\t8b 85 2c ff ff ff    \tmov    -0xd4(%rbp),%eax\n    a2d6:\t8d 50 05             \tlea    0x5(%rax),%edx\n    a2d9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a2e0 <ki_handle_publish_uri+0x538b>\n    a2e0:\t48 63 d2             \tmovslq %edx,%rdx\n    a2e3:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    a2e7:\t48 01 d0             \tadd    %rdx,%rax\n    a2ea:\t48 8b 18             \tmov    (%rax),%rbx\n    a2ed:\t8b 85 2c ff ff ff    \tmov    -0xd4(%rbp),%eax\n    a2f3:\t8d 50 05             \tlea    0x5(%rax),%edx\n    a2f6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a2fd <ki_handle_publish_uri+0x53a8>\n    a2fd:\t48 63 d2             \tmovslq %edx,%rdx\n    a300:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    a304:\t48 01 d0             \tadd    %rdx,%rax\n    a307:\t48 83 c0 08          \tadd    $0x8,%rax\n    a30b:\t44 8b 30             \tmov    (%rax),%r14d\n    a30e:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    a313:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # a31a <ki_handle_publish_uri+0x53c5>\n    a31a:\te8 00 00 00 00       \tcallq  a31f <ki_handle_publish_uri+0x53ca>\n    a31f:\t44 09 f0             \tor     %r14d,%eax\n    a322:\t48 83 ec 08          \tsub    $0x8,%rsp\n    a326:\t41 55                \tpush   %r13\n    a328:\t45 89 f9             \tmov    %r15d,%r9d\n    a32b:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # a332 <ki_handle_publish_uri+0x53dd>\n    a332:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # a339 <ki_handle_publish_uri+0x53e4>\n    a339:\t48 89 da             \tmov    %rbx,%rdx\n    a33c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a343 <ki_handle_publish_uri+0x53ee>\n    a343:\t89 c7                \tmov    %eax,%edi\n    a345:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    a34a:\t41 ff d4             \tcallq  *%r12\n    a34d:\t48 83 c4 10          \tadd    $0x10,%rsp\n    a351:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a358 <ki_handle_publish_uri+0x5403>\n    a358:\t8b 00                \tmov    (%rax),%eax\n    a35a:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    a35d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a364 <ki_handle_publish_uri+0x540f>\n    a364:\t89 10                \tmov    %edx,(%rax)\n    a366:\tc7 45 a4 e9 01 00 00 \tmovl   $0x1e9,-0x5c(%rbp)\n    a36d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a374 <ki_handle_publish_uri+0x541f>\n    a374:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # a37b <ki_handle_publish_uri+0x5426>\n    a37b:\t48 89 85 50 fd ff ff \tmov    %rax,-0x2b0(%rbp)\n    a382:\t48 89 95 58 fd ff ff \tmov    %rdx,-0x2a8(%rbp)\n    a389:\teb 16                \tjmp    a3a1 <ki_handle_publish_uri+0x544c>\n    a38b:\t90                   \tnop\n    a38c:\teb 13                \tjmp    a3a1 <ki_handle_publish_uri+0x544c>\n    a38e:\t90                   \tnop\n    a38f:\teb 10                \tjmp    a3a1 <ki_handle_publish_uri+0x544c>\n    a391:\t90                   \tnop\n    a392:\teb 0d                \tjmp    a3a1 <ki_handle_publish_uri+0x544c>\n    a394:\t90                   \tnop\n    a395:\teb 0a                \tjmp    a3a1 <ki_handle_publish_uri+0x544c>\n    a397:\t90                   \tnop\n    a398:\teb 07                \tjmp    a3a1 <ki_handle_publish_uri+0x544c>\n    a39a:\t90                   \tnop\n    a39b:\teb 04                \tjmp    a3a1 <ki_handle_publish_uri+0x544c>\n    a39d:\t90                   \tnop\n    a39e:\teb 01                \tjmp    a3a1 <ki_handle_publish_uri+0x544c>\n    a3a0:\t90                   \tnop\n    a3a1:\t8b 85 4c fd ff ff    \tmov    -0x2b4(%rbp),%eax\n    a3a7:\t85 c0                \ttest   %eax,%eax\n    a3a9:\t0f 85 37 03 00 00    \tjne    a6e6 <ki_handle_publish_uri+0x5791>\n    a3af:\t48 8b 85 50 fd ff ff \tmov    -0x2b0(%rbp),%rax\n    a3b6:\t48 8b 95 58 fd ff ff \tmov    -0x2a8(%rbp),%rdx\n    a3bd:\t8b 75 a4             \tmov    -0x5c(%rbp),%esi\n    a3c0:\t48 8b bd 38 fd ff ff \tmov    -0x2c8(%rbp),%rdi\n    a3c7:\t48 89 d1             \tmov    %rdx,%rcx\n    a3ca:\t48 89 c2             \tmov    %rax,%rdx\n    a3cd:\te8 00 00 00 00       \tcallq  a3d2 <ki_handle_publish_uri+0x547d>\n    a3d2:\t85 c0                \ttest   %eax,%eax\n    a3d4:\t0f 89 0c 03 00 00    \tjns    a6e6 <ki_handle_publish_uri+0x5791>\n    a3da:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    a3df:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # a3e6 <ki_handle_publish_uri+0x5491>\n    a3e6:\te8 00 00 00 00       \tcallq  a3eb <ki_handle_publish_uri+0x5496>\n    a3eb:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    a3ee:\t0f 8c f2 02 00 00    \tjl     a6e6 <ki_handle_publish_uri+0x5791>\n    a3f4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a3fb <ki_handle_publish_uri+0x54a6>\n    a3fb:\t8b 00                \tmov    (%rax),%eax\n    a3fd:\t85 c0                \ttest   %eax,%eax\n    a3ff:\t0f 85 e1 02 00 00    \tjne    a6e6 <ki_handle_publish_uri+0x5791>\n    a405:\tc7 85 24 ff ff ff ff \tmovl   $0xffffffff,-0xdc(%rbp)\n    a40c:\tff ff ff \n    a40f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a416 <ki_handle_publish_uri+0x54c1>\n    a416:\t8b 00                \tmov    (%rax),%eax\n    a418:\t8d 50 01             \tlea    0x1(%rax),%edx\n    a41b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a422 <ki_handle_publish_uri+0x54cd>\n    a422:\t89 10                \tmov    %edx,(%rax)\n    a424:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a42b <ki_handle_publish_uri+0x54d6>\n    a42b:\t8b 00                \tmov    (%rax),%eax\n    a42d:\t85 c0                \ttest   %eax,%eax\n    a42f:\t0f 95 c0             \tsetne  %al\n    a432:\t0f b6 c0             \tmovzbl %al,%eax\n    a435:\t48 85 c0             \ttest   %rax,%rax\n    a438:\t0f 84 4f 01 00 00    \tje     a58d <ki_handle_publish_uri+0x5638>\n    a43e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a445 <ki_handle_publish_uri+0x54f0>\n    a445:\t8b 00                \tmov    (%rax),%eax\n    a447:\t85 c0                \ttest   %eax,%eax\n    a449:\t0f 95 c0             \tsetne  %al\n    a44c:\t0f b6 c0             \tmovzbl %al,%eax\n    a44f:\t48 85 c0             \ttest   %rax,%rax\n    a452:\t74 0d                \tje     a461 <ki_handle_publish_uri+0x550c>\n    a454:\t8b 85 24 ff ff ff    \tmov    -0xdc(%rbp),%eax\n    a45a:\t89 c7                \tmov    %eax,%edi\n    a45c:\te8 00 00 00 00       \tcallq  a461 <ki_handle_publish_uri+0x550c>\n    a461:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a468 <ki_handle_publish_uri+0x5513>\n    a468:\t48 8b 00             \tmov    (%rax),%rax\n    a46b:\t48 85 c0             \ttest   %rax,%rax\n    a46e:\t0f 95 c0             \tsetne  %al\n    a471:\t0f b6 c0             \tmovzbl %al,%eax\n    a474:\t48 85 c0             \ttest   %rax,%rax\n    a477:\t0f 84 87 00 00 00    \tje     a504 <ki_handle_publish_uri+0x55af>\n    a47d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a484 <ki_handle_publish_uri+0x552f>\n    a484:\t48 8b 00             \tmov    (%rax),%rax\n    a487:\t48 8b 18             \tmov    (%rax),%rbx\n    a48a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a491 <ki_handle_publish_uri+0x553c>\n    a491:\t48 8b 00             \tmov    (%rax),%rax\n    a494:\t44 8b 68 08          \tmov    0x8(%rax),%r13d\n    a498:\t8b 85 24 ff ff ff    \tmov    -0xdc(%rbp),%eax\n    a49e:\t8d 50 05             \tlea    0x5(%rax),%edx\n    a4a1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a4a8 <ki_handle_publish_uri+0x5553>\n    a4a8:\t48 63 d2             \tmovslq %edx,%rdx\n    a4ab:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    a4af:\t48 01 d0             \tadd    %rdx,%rax\n    a4b2:\t4c 8b 20             \tmov    (%rax),%r12\n    a4b5:\te8 00 00 00 00       \tcallq  a4ba <ki_handle_publish_uri+0x5565>\n    a4ba:\t89 c1                \tmov    %eax,%ecx\n    a4bc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a4c3 <ki_handle_publish_uri+0x556e>\n    a4c3:\t8b 10                \tmov    (%rax),%edx\n    a4c5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a4cc <ki_handle_publish_uri+0x5577>\n    a4cc:\t48 8b 00             \tmov    (%rax),%rax\n    a4cf:\t48 83 ec 08          \tsub    $0x8,%rsp\n    a4d3:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a4da <ki_handle_publish_uri+0x5585>\n    a4da:\t56                   \tpush   %rsi\n    a4db:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a4e2 <ki_handle_publish_uri+0x558d>\n    a4e2:\t56                   \tpush   %rsi\n    a4e3:\t53                   \tpush   %rbx\n    a4e4:\t45 89 e9             \tmov    %r13d,%r9d\n    a4e7:\t4d 89 e0             \tmov    %r12,%r8\n    a4ea:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a4f1 <ki_handle_publish_uri+0x559c>\n    a4f1:\t48 89 c7             \tmov    %rax,%rdi\n    a4f4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    a4f9:\te8 00 00 00 00       \tcallq  a4fe <ki_handle_publish_uri+0x55a9>\n    a4fe:\t48 83 c4 20          \tadd    $0x20,%rsp\n    a502:\teb 65                \tjmp    a569 <ki_handle_publish_uri+0x5614>\n    a504:\t8b 85 24 ff ff ff    \tmov    -0xdc(%rbp),%eax\n    a50a:\t8d 50 05             \tlea    0x5(%rax),%edx\n    a50d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a514 <ki_handle_publish_uri+0x55bf>\n    a514:\t48 63 d2             \tmovslq %edx,%rdx\n    a517:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    a51b:\t48 01 d0             \tadd    %rdx,%rax\n    a51e:\t48 8b 18             \tmov    (%rax),%rbx\n    a521:\te8 00 00 00 00       \tcallq  a526 <ki_handle_publish_uri+0x55d1>\n    a526:\t89 c1                \tmov    %eax,%ecx\n    a528:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a52f <ki_handle_publish_uri+0x55da>\n    a52f:\t8b 10                \tmov    (%rax),%edx\n    a531:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a538 <ki_handle_publish_uri+0x55e3>\n    a538:\t48 8b 00             \tmov    (%rax),%rax\n    a53b:\t48 83 ec 08          \tsub    $0x8,%rsp\n    a53f:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a546 <ki_handle_publish_uri+0x55f1>\n    a546:\t56                   \tpush   %rsi\n    a547:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # a54e <ki_handle_publish_uri+0x55f9>\n    a54e:\t49 89 d8             \tmov    %rbx,%r8\n    a551:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a558 <ki_handle_publish_uri+0x5603>\n    a558:\t48 89 c7             \tmov    %rax,%rdi\n    a55b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    a560:\te8 00 00 00 00       \tcallq  a565 <ki_handle_publish_uri+0x5610>\n    a565:\t48 83 c4 10          \tadd    $0x10,%rsp\n    a569:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a570 <ki_handle_publish_uri+0x561b>\n    a570:\t8b 00                \tmov    (%rax),%eax\n    a572:\t85 c0                \ttest   %eax,%eax\n    a574:\t0f 95 c0             \tsetne  %al\n    a577:\t0f b6 c0             \tmovzbl %al,%eax\n    a57a:\t48 85 c0             \ttest   %rax,%rax\n    a57d:\t0f 84 4e 01 00 00    \tje     a6d1 <ki_handle_publish_uri+0x577c>\n    a583:\te8 00 00 00 00       \tcallq  a588 <ki_handle_publish_uri+0x5633>\n    a588:\te9 44 01 00 00       \tjmpq   a6d1 <ki_handle_publish_uri+0x577c>\n    a58d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a594 <ki_handle_publish_uri+0x563f>\n    a594:\t48 8b 00             \tmov    (%rax),%rax\n    a597:\t48 85 c0             \ttest   %rax,%rax\n    a59a:\t0f 95 c0             \tsetne  %al\n    a59d:\t0f b6 c0             \tmovzbl %al,%eax\n    a5a0:\t48 85 c0             \ttest   %rax,%rax\n    a5a3:\t0f 84 aa 00 00 00    \tje     a653 <ki_handle_publish_uri+0x56fe>\n    a5a9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a5b0 <ki_handle_publish_uri+0x565b>\n    a5b0:\t4c 8b 28             \tmov    (%rax),%r13\n    a5b3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a5ba <ki_handle_publish_uri+0x5665>\n    a5ba:\t48 8b 00             \tmov    (%rax),%rax\n    a5bd:\t4c 8b 38             \tmov    (%rax),%r15\n    a5c0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a5c7 <ki_handle_publish_uri+0x5672>\n    a5c7:\t48 8b 00             \tmov    (%rax),%rax\n    a5ca:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    a5ce:\t8b 85 24 ff ff ff    \tmov    -0xdc(%rbp),%eax\n    a5d4:\t8d 50 05             \tlea    0x5(%rax),%edx\n    a5d7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a5de <ki_handle_publish_uri+0x5689>\n    a5de:\t48 63 d2             \tmovslq %edx,%rdx\n    a5e1:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    a5e5:\t48 01 d0             \tadd    %rdx,%rax\n    a5e8:\t48 8b 18             \tmov    (%rax),%rbx\n    a5eb:\t8b 85 24 ff ff ff    \tmov    -0xdc(%rbp),%eax\n    a5f1:\t8d 50 05             \tlea    0x5(%rax),%edx\n    a5f4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a5fb <ki_handle_publish_uri+0x56a6>\n    a5fb:\t48 63 d2             \tmovslq %edx,%rdx\n    a5fe:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    a602:\t48 01 d0             \tadd    %rdx,%rax\n    a605:\t48 83 c0 08          \tadd    $0x8,%rax\n    a609:\t44 8b 30             \tmov    (%rax),%r14d\n    a60c:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    a611:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # a618 <ki_handle_publish_uri+0x56c3>\n    a618:\te8 00 00 00 00       \tcallq  a61d <ki_handle_publish_uri+0x56c8>\n    a61d:\t44 09 f0             \tor     %r14d,%eax\n    a620:\t48 83 ec 08          \tsub    $0x8,%rsp\n    a624:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # a62b <ki_handle_publish_uri+0x56d6>\n    a62b:\t52                   \tpush   %rdx\n    a62c:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # a633 <ki_handle_publish_uri+0x56de>\n    a633:\t4d 89 f8             \tmov    %r15,%r8\n    a636:\t44 89 e1             \tmov    %r12d,%ecx\n    a639:\t48 89 da             \tmov    %rbx,%rdx\n    a63c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a643 <ki_handle_publish_uri+0x56ee>\n    a643:\t89 c7                \tmov    %eax,%edi\n    a645:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    a64a:\t41 ff d5             \tcallq  *%r13\n    a64d:\t48 83 c4 10          \tadd    $0x10,%rsp\n    a651:\teb 7e                \tjmp    a6d1 <ki_handle_publish_uri+0x577c>\n    a653:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a65a <ki_handle_publish_uri+0x5705>\n    a65a:\t4c 8b 20             \tmov    (%rax),%r12\n    a65d:\t8b 85 24 ff ff ff    \tmov    -0xdc(%rbp),%eax\n    a663:\t8d 50 05             \tlea    0x5(%rax),%edx\n    a666:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a66d <ki_handle_publish_uri+0x5718>\n    a66d:\t48 63 d2             \tmovslq %edx,%rdx\n    a670:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    a674:\t48 01 d0             \tadd    %rdx,%rax\n    a677:\t48 8b 18             \tmov    (%rax),%rbx\n    a67a:\t8b 85 24 ff ff ff    \tmov    -0xdc(%rbp),%eax\n    a680:\t8d 50 05             \tlea    0x5(%rax),%edx\n    a683:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a68a <ki_handle_publish_uri+0x5735>\n    a68a:\t48 63 d2             \tmovslq %edx,%rdx\n    a68d:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    a691:\t48 01 d0             \tadd    %rdx,%rax\n    a694:\t48 83 c0 08          \tadd    $0x8,%rax\n    a698:\t44 8b 28             \tmov    (%rax),%r13d\n    a69b:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    a6a0:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # a6a7 <ki_handle_publish_uri+0x5752>\n    a6a7:\te8 00 00 00 00       \tcallq  a6ac <ki_handle_publish_uri+0x5757>\n    a6ac:\t44 09 e8             \tor     %r13d,%eax\n    a6af:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # a6b6 <ki_handle_publish_uri+0x5761>\n    a6b6:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # a6bd <ki_handle_publish_uri+0x5768>\n    a6bd:\t48 89 da             \tmov    %rbx,%rdx\n    a6c0:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # a6c7 <ki_handle_publish_uri+0x5772>\n    a6c7:\t89 c7                \tmov    %eax,%edi\n    a6c9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    a6ce:\t41 ff d4             \tcallq  *%r12\n    a6d1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a6d8 <ki_handle_publish_uri+0x5783>\n    a6d8:\t8b 00                \tmov    (%rax),%eax\n    a6da:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    a6dd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a6e4 <ki_handle_publish_uri+0x578f>\n    a6e4:\t89 10                \tmov    %edx,(%rax)\n    a6e6:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n    a6eb:\t74 3b                \tje     a728 <ki_handle_publish_uri+0x57d3>\n    a6ed:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a6f4 <ki_handle_publish_uri+0x579f>\n    a6f4:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    a6f8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a6ff <ki_handle_publish_uri+0x57aa>\n    a6ff:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    a703:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n    a707:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # a70e <ki_handle_publish_uri+0x57b9>\n    a70e:\t41 b8 16 02 00 00    \tmov    $0x216,%r8d\n    a714:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # a71b <ki_handle_publish_uri+0x57c6>\n    a71b:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # a722 <ki_handle_publish_uri+0x57cd>\n    a722:\t48 89 c7             \tmov    %rax,%rdi\n    a725:\t41 ff d2             \tcallq  *%r10\n    a728:\t48 8b 85 80 fd ff ff \tmov    -0x280(%rbp),%rax\n    a72f:\t48 85 c0             \ttest   %rax,%rax\n    a732:\t74 3e                \tje     a772 <ki_handle_publish_uri+0x581d>\n    a734:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a73b <ki_handle_publish_uri+0x57e6>\n    a73b:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    a73f:\t48 8b b5 80 fd ff ff \tmov    -0x280(%rbp),%rsi\n    a746:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a74d <ki_handle_publish_uri+0x57f8>\n    a74d:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    a751:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # a758 <ki_handle_publish_uri+0x5803>\n    a758:\t41 b8 18 02 00 00    \tmov    $0x218,%r8d\n    a75e:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # a765 <ki_handle_publish_uri+0x5810>\n    a765:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # a76c <ki_handle_publish_uri+0x5817>\n    a76c:\t48 89 c7             \tmov    %rax,%rdi\n    a76f:\t41 ff d2             \tcallq  *%r10\n    a772:\t48 83 7d a8 00       \tcmpq   $0x0,-0x58(%rbp)\n    a777:\t74 3b                \tje     a7b4 <ki_handle_publish_uri+0x585f>\n    a779:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a780 <ki_handle_publish_uri+0x582b>\n    a780:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    a784:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a78b <ki_handle_publish_uri+0x5836>\n    a78b:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    a78f:\t48 8b 75 a8          \tmov    -0x58(%rbp),%rsi\n    a793:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # a79a <ki_handle_publish_uri+0x5845>\n    a79a:\t41 b8 1a 02 00 00    \tmov    $0x21a,%r8d\n    a7a0:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # a7a7 <ki_handle_publish_uri+0x5852>\n    a7a7:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # a7ae <ki_handle_publish_uri+0x5859>\n    a7ae:\t48 89 c7             \tmov    %rax,%rdi\n    a7b1:\t41 ff d2             \tcallq  *%r10\n    a7b4:\t48 83 7d 98 00       \tcmpq   $0x0,-0x68(%rbp)\n    a7b9:\t74 3b                \tje     a7f6 <ki_handle_publish_uri+0x58a1>\n    a7bb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a7c2 <ki_handle_publish_uri+0x586d>\n    a7c2:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    a7c6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a7cd <ki_handle_publish_uri+0x5878>\n    a7cd:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    a7d1:\t48 8b 75 98          \tmov    -0x68(%rbp),%rsi\n    a7d5:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # a7dc <ki_handle_publish_uri+0x5887>\n    a7dc:\t41 b8 1c 02 00 00    \tmov    $0x21c,%r8d\n    a7e2:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # a7e9 <ki_handle_publish_uri+0x5894>\n    a7e9:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # a7f0 <ki_handle_publish_uri+0x589b>\n    a7f0:\t48 89 c7             \tmov    %rax,%rdi\n    a7f3:\t41 ff d2             \tcallq  *%r10\n    a7f6:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    a7fb:\t48 8d 65 d8          \tlea    -0x28(%rbp),%rsp\n    a7ff:\t5b                   \tpop    %rbx\n    a800:\t41 5c                \tpop    %r12\n    a802:\t41 5d                \tpop    %r13\n    a804:\t41 5e                \tpop    %r14\n    a806:\t41 5f                \tpop    %r15\n    a808:\t5d                   \tpop    %rbp\n    a809:\tc3                   \tretq   ", "code_s": "__int64 __fastcall ki_handle_publish_uri(_QWORD *a1, __int64 a2) {\n  const char *v2;\n  int v3;\n  const char *v4;\n  unsigned int v5;\n  const char *v6;\n  unsigned int v7;\n  void (*v8)(_QWORD, const char *, ...);\n  __int64 v9;\n  unsigned int v10;\n  __int64 v11;\n  int v12;\n  unsigned int v13;\n  void (*v14)(_QWORD, const char *, ...);\n  const char *v15;\n  int v16;\n  unsigned int v17;\n  const char *v18;\n  int v19;\n  const char *v20;\n  unsigned int v21;\n  const char *v22;\n  unsigned int v23;\n  void (*v24)(_QWORD, const char *, ...);\n  __int64 v25;\n  unsigned int v26;\n  __int64 v27;\n  int v28;\n  unsigned int v29;\n  void (*v30)(_QWORD, const char *, ...);\n  const char *v31;\n  int v32;\n  unsigned int v33;\n  const char *v34;\n  int v35;\n  const char *v36;\n  unsigned int v37;\n  const char *v38;\n  unsigned int v39;\n  void (*v40)(_QWORD, const char *, ...);\n  __int64 v41;\n  unsigned int v42;\n  __int64 v43;\n  int v44;\n  unsigned int v45;\n  void (*v46)(_QWORD, const char *, ...);\n  const char *v47;\n  int v48;\n  unsigned int v49;\n  const char *v50;\n  int v51;\n  const char *v52;\n  unsigned int v53;\n  const char *v54;\n  unsigned int v55;\n  void (*v56)(_QWORD, const char *, ...);\n  __int64 v57;\n  unsigned int v58;\n  __int64 v59;\n  int v60;\n  unsigned int v61;\n  void (*v62)(_QWORD, const char *, ...);\n  const char *v63;\n  int v64;\n  unsigned int v65;\n  const char *v66;\n  int v67;\n  const char *v68;\n  unsigned int v69;\n  const char *v70;\n  unsigned int v71;\n  void (*v72)(_QWORD, const char *, ...);\n  unsigned int v73;\n  __int64 v74;\n  unsigned int v75;\n  void (*v76)(_QWORD, const char *, ...);\n  __int64 v77;\n  int v78;\n  unsigned int v79;\n  const char *v80;\n  int v81;\n  const char *v82;\n  unsigned int v83;\n  const char *v84;\n  unsigned int v85;\n  void (*v86)(_QWORD, const char *, ...);\n  __int64 v87;\n  unsigned int v88;\n  __int64 v89;\n  int v90;\n  unsigned int v91;\n  void (*v92)(_QWORD, const char *, ...);\n  const char *v93;\n  int v94;\n  unsigned int v95;\n  const char *v96;\n  int v97;\n  const char *v98;\n  unsigned int v99;\n  const char *v100;\n  unsigned int v101;\n  void (*v102)(_QWORD, const char *, ...);\n  __int64 v103;\n  unsigned int v104;\n  __int64 v105;\n  int v106;\n  unsigned int v107;\n  void (*v108)(_QWORD, const char *, ...);\n  const char *v109;\n  int v110;\n  unsigned int v111;\n  const char *v112;\n  int v113;\n  const char *v114;\n  unsigned int v115;\n  const char *v116;\n  unsigned int v117;\n  void (*v118)(_QWORD, const char *, ...);\n  unsigned int v119;\n  __int64 v120;\n  unsigned int v121;\n  void (*v122)(_QWORD, const char *, ...);\n  __int64 v123;\n  int v124;\n  unsigned int v125;\n  const char *v126;\n  int v127;\n  const char *v128;\n  unsigned int v129;\n  const char *v130;\n  unsigned int v131;\n  void (*v132)(_QWORD, const char *, ...);\n  __int64 v133;\n  unsigned int v134;\n  __int64 v135;\n  int v136;\n  unsigned int v137;\n  void (*v138)(_QWORD, const char *, ...);\n  const char *v139;\n  int v140;\n  unsigned int v141;\n  const char *v142;\n  int v143;\n  const char *v144;\n  unsigned int v145;\n  const char *v146;\n  unsigned int v147;\n  void (*v148)(_QWORD, const char *, ...);\n  __int64 v149;\n  unsigned int v150;\n  __int64 v151;\n  int v152;\n  unsigned int v153;\n  void (*v154)(_QWORD, const char *, ...);\n  const char *v155;\n  int v156;\n  unsigned int v157;\n  __int64 v158;\n  const char *v159;\n  int v160;\n  const char *v161;\n  unsigned int v162;\n  __int64 v163;\n  const char *v164;\n  unsigned int v165;\n  void (*v166)(_QWORD, const char *, ...);\n  __int64 v167;\n  unsigned int v168;\n  __int64 v169;\n  int v170;\n  unsigned int v171;\n  void (*v172)(_QWORD, const char *, ...);\n  unsigned int v173;\n  const char *v174;\n  int v175;\n  unsigned int v176;\n  const char *v177;\n  int v178;\n  const char *v179;\n  unsigned int v180;\n  const char *v181;\n  unsigned int v182;\n  void (*v183)(_QWORD, const char *, ...);\n  __int64 v184;\n  unsigned int v185;\n  __int64 v186;\n  int v187;\n  unsigned int v188;\n  void (*v189)(_QWORD, const char *, ...);\n  const char *v190;\n  int v191;\n  unsigned int v192;\n  __int64 v193;\n  __int64 v194;\n  const char *v195;\n  int v196;\n  const char *v197;\n  unsigned int v198;\n  const char *v199;\n  unsigned int v200;\n  void (*v201)(_QWORD, const char *, ...);\n  __int64 v202;\n  unsigned int v203;\n  __int64 v204;\n  int v205;\n  unsigned int v206;\n  void (*v207)(_QWORD, const char *, ...);\n  const char *v208;\n  int v209;\n  unsigned int v210;\n  const char *v211;\n  int v212;\n  const char *v213;\n  unsigned int v214;\n  const char *v215;\n  unsigned int v216;\n  void (*v217)(_QWORD, const char *, ...);\n  __int64 v218;\n  unsigned int v219;\n  __int64 v220;\n  int v221;\n  unsigned int v222;\n  void (*v223)(_QWORD, const char *, ...);\n  const char *v224;\n  int v225;\n  unsigned int v226;\n  const char *v227;\n  int v228;\n  const char *v229;\n  unsigned int v230;\n  const char *v231;\n  unsigned int v232;\n  void (*v233)(_QWORD, const char *, ...);\n  __int64 v234;\n  unsigned int v235;\n  __int64 v236;\n  int v237;\n  unsigned int v238;\n  void (*v239)(_QWORD, const char *, ...);\n  const char *v240;\n  int v241;\n  unsigned int v242;\n  const char *v243;\n  int v244;\n  const char *v245;\n  unsigned int v246;\n  const char *v247;\n  unsigned int v248;\n  void (*v249)(_QWORD, const char *, ...);\n  __int64 v250;\n  unsigned int v251;\n  __int64 v252;\n  int v253;\n  unsigned int v254;\n  void (*v255)(_QWORD, const char *, ...);\n  const char *v256;\n  int v257;\n  unsigned int v258;\n  const char *v259;\n  int v260;\n  const char *v261;\n  unsigned int v262;\n  const char *v263;\n  unsigned int v264;\n  void (*v265)(_QWORD, const char *, ...);\n  __int64 v266;\n  unsigned int v267;\n  __int64 v268;\n  int v269;\n  unsigned int v270;\n  void (*v271)(_QWORD, const char *, ...);\n  const char *v272;\n  int v273;\n  unsigned int v274;\n  const char *v275;\n  int v276;\n  const char *v277;\n  unsigned int v278;\n  const char *v279;\n  unsigned int v280;\n  void (*v281)(_QWORD, const char *, ...);\n  __int64 v282;\n  unsigned int v283;\n  __int64 v284;\n  int v285;\n  unsigned int v286;\n  void (*v287)(_QWORD, const char *, ...);\n  const char *v288;\n  int v289;\n  unsigned int v290;\n  const char *v291;\n  int v292;\n  const char *v293;\n  unsigned int v294;\n  const char *v295;\n  unsigned int v296;\n  void (*v297)(_QWORD, const char *, ...);\n  __int64 v298;\n  unsigned int v299;\n  __int64 v300;\n  int v301;\n  unsigned int v302;\n  void (*v303)(_QWORD, const char *, ...);\n  __int64 v304;\n  int v305;\n  unsigned int v306;\n  const char *v307;\n  int v308;\n  const char *v309;\n  unsigned int v310;\n  const char *v311;\n  unsigned int v312;\n  void (*v313)(_QWORD, const char *, ...);\n  __int64 v314;\n  unsigned int v315;\n  __int64 v316;\n  int v317;\n  unsigned int v318;\n  void (*v319)(_QWORD, const char *, ...);\n  const char *v320;\n  int v321;\n  unsigned int v322;\n  const char *v323;\n  int v324;\n  const char *v325;\n  unsigned int v326;\n  const char *v327;\n  unsigned int v328;\n  void (*v329)(_QWORD, const char *, ...);\n  __int64 v330;\n  unsigned int v331;\n  __int64 v332;\n  int v333;\n  unsigned int v334;\n  void (*v335)(_QWORD, const char *, ...);\n  const char *v336;\n  int v337;\n  unsigned int v338;\n  const char *v339;\n  int v340;\n  const char *v341;\n  unsigned int v342;\n  const char *v343;\n  unsigned int v344;\n  void (*v345)(_QWORD, const char *, ...);\n  __int64 v346;\n  unsigned int v347;\n  __int64 v348;\n  int v349;\n  unsigned int v350;\n  void (*v351)(_QWORD, const char *, ...);\n  const char *v352;\n  int v353;\n  unsigned int v354;\n  const char *v356;\n  int v357;\n  const char *v358;\n  unsigned int v359;\n  const char *v360;\n  unsigned int v361;\n  void (*v362)(_QWORD, const char *, ...);\n  __int64 v363;\n  unsigned int v364;\n  __int64 v365;\n  int v366;\n  unsigned int v367;\n  void (*v368)(_QWORD, const char *, ...);\n  const char *v369;\n  int v370;\n  unsigned int v371;\n  const char *v372;\n  int v373;\n  const char *v374;\n  int v375;\n  const char *v376;\n  unsigned int v377;\n  const char *v378;\n  int v379;\n  const char *v380;\n  unsigned int v381;\n  void (*v382)(_QWORD, const char *, ...);\n  __int64 v383;\n  __int64 v384;\n  unsigned int v385;\n  __int64 v386;\n  unsigned int v387;\n  void (*v388)(_QWORD, const char *, ...);\n  __int64 v389;\n  unsigned int v390;\n  __int64 v391;\n  int v392;\n  unsigned int v393;\n  const char *v394;\n  int v395;\n  const char *v396;\n  unsigned int v397;\n  const char *v398;\n  unsigned int v399;\n  void (*v400)(_QWORD, const char *, ...);\n  __int64 v401;\n  unsigned int v402;\n  __int64 v403;\n  int v404;\n  unsigned int v405;\n  void (*v406)(_QWORD, const char *, ...);\n  const char *v407;\n  int v408;\n  unsigned int v409;\n  int v410;\n  int v411;\n  int v412;\n  __int64 v413;\n  __int64 v414;\n  __int64 v415;\n  __int64 v416;\n  int v417;\n  char *v418;\n  __int64 v419;\n  __int64 v420[Number];\n  __int64 v421[Number];\n  char *v422;\n  unsigned int v423;\n  __int64 s[Number];\n  char v425[Number];\n  unsigned int v426;\n  unsigned int v427;\n  unsigned int v428;\n  unsigned int v429;\n  unsigned int v430;\n  unsigned int v431;\n  unsigned int v432;\n  unsigned int v433;\n  unsigned int v434;\n  unsigned int v435;\n  unsigned int v436;\n  unsigned int v437;\n  unsigned int v438;\n  unsigned int v439;\n  unsigned int v440;\n  unsigned int v441;\n  unsigned int v442;\n  unsigned int v443;\n  unsigned int v444;\n  unsigned int v445;\n  unsigned int v446;\n  unsigned int v447;\n  unsigned int v448;\n  unsigned int v449;\n  unsigned int v450;\n  __int64 v451;\n  unsigned int v452;\n  __int64 v453;\n  unsigned int v454;\n  __int64 v455;\n  unsigned int v456;\n  int v457;\n  __int64 i;\n  __int64 v459;\n  unsigned int v460;\n  v459 = Number L;\n  v457 = Number;\n  v456 = Number;\n  v422 = Number L;\n  v423 = Number;\n  v455 = Number L;\n  v452 = Number;\n  v451 = Number L;\n  v417 = Number;\n  v453 = Number L;\n  v454 = Number;\n  v418 = pu_500_rpl;\n  v419 = qword_FB58;\n  ++counter;\n  if ((unsigned int)parse_headers(a1, Number, Number L) == Number) {\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      v427 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v427);\n        if (log_prefix_val) {\n          v2 = (const char *)*log_prefix_val;\n          v3 = *((_DWORD *)log_prefix_val + Number);\n          v4 = (const char *)*((_QWORD *)&log_level_info +\n                               Number * (int)(v427 + Number));\n          v5 = my_pid();\n          fprintf(stderr, String, process_no, v5, v4, v3, v2, String, String);\n        } else {\n          v6 = (const char *)*((_QWORD *)&log_level_info +\n                               Number * (int)(v427 + Number));\n          v7 = my_pid();\n          fprintf(stderr, String, process_no, v7, v6, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v8 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v9 = *log_prefix_val;\n        v10 = *((_DWORD *)log_prefix_val + Number);\n        v11 = *((_QWORD *)&log_level_info + Number * (int)(v427 + Number));\n        v12 = *((_DWORD *)&log_level_info + Number * (int)(v427 + Number) +\n                Number);\n        v13 = get_debug_facility(String, Number L);\n        v8(v12 | v13, String, v11, v10, v9, String, String);\n      } else {\n        v14 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v15 = (const char *)*((_QWORD *)&log_level_info +\n                              Number * (int)(v427 + Number));\n        v16 = *((_DWORD *)&log_level_info + Number * (int)(v427 + Number) +\n                Number);\n        v17 = get_debug_facility(String, Number L);\n        v14(v16 | v17, String, v15, String, String);\n      }\n      --dprint_crit;\n    }\n    v454 = Number;\n    v418 = pu_400a_rpl;\n    v419 = qword_FB38;\n  LABEL_396:\n    if (!v417 && (int)send_error_reply(a1, v454, v418, v419) < Number &&\n        (int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      v426 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v426);\n        if (log_prefix_val) {\n          v394 = (const char *)*log_prefix_val;\n          v395 = *((_DWORD *)log_prefix_val + Number);\n          v396 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v426 + Number));\n          v397 = my_pid();\n          fprintf(stderr, String, process_no, v397, v396, v395, v394, String,\n                  String);\n        } else {\n          v398 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v426 + Number));\n          v399 = my_pid();\n          fprintf(stderr, String, process_no, v399, v398, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v400 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v401 = *log_prefix_val;\n        v402 = *((_DWORD *)log_prefix_val + Number);\n        v403 = *((_QWORD *)&log_level_info + Number * (int)(v426 + Number));\n        v404 = *((_DWORD *)&log_level_info + Number * (int)(v426 + Number) +\n                 Number);\n        v405 = get_debug_facility(String, Number L);\n        v400(v404 | v405, String, v403, v402, v401, String, String);\n      } else {\n        v406 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v407 = (const char *)*((_QWORD *)&log_level_info +\n                               Number * (int)(v426 + Number));\n        v408 = *((_DWORD *)&log_level_info + Number * (int)(v426 + Number) +\n                 Number);\n        v409 = get_debug_facility(String, Number L);\n        v406(v408 | v409, String, v407, String, String);\n      }\n      --dprint_crit;\n    }\n    if (v459)\n      ((void(__fastcall *)(_QWORD, __int64, const char *, const char *, __int64,\n                           const char *))pkg_root[Number])(\n          pkg_root[Number], v459, String, String, Number L, String);\n    if (v422)\n      ((void(__fastcall *)(_QWORD, char *, const char *, const char *, __int64,\n                           const char *))pkg_root[Number])(\n          pkg_root[Number], v422, String, String, Number L, String);\n    if (v455)\n      ((void(__fastcall *)(_QWORD, __int64, const char *, const char *, __int64,\n                           const char *))pkg_root[Number])(\n          pkg_root[Number], v455, String, String, Number L, String);\n    if (v453)\n      ((void(__fastcall *)(_QWORD, __int64, const char *, const char *, __int64,\n                           const char *))pkg_root[Number])(\n          pkg_root[Number], v453, String, String, Number L, String);\n    return Number;\n  }\n  memset(s, Number, sizeof(s));\n  if (!a1[Number] || *(int *)(a1[Number] + Number L) <= Number)\n    goto LABEL_365;\n  if (!*(_QWORD *)(a1[Number] + Number L) &&\n      (int)parse_event(a1[Number]) < Number) {\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      v450 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v450);\n        if (log_prefix_val) {\n          v18 = (const char *)*log_prefix_val;\n          v19 = *((_DWORD *)log_prefix_val + Number);\n          v20 = (const char *)*((_QWORD *)&log_level_info +\n                                Number * (int)(v450 + Number));\n          v21 = my_pid();\n          fprintf(stderr, String, process_no, v21, v20, v19, v18, String,\n                  String);\n        } else {\n          v22 = (const char *)*((_QWORD *)&log_level_info +\n                                Number * (int)(v450 + Number));\n          v23 = my_pid();\n          fprintf(stderr, String, process_no, v23, v22, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v24 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v25 = *log_prefix_val;\n        v26 = *((_DWORD *)log_prefix_val + Number);\n        v27 = *((_QWORD *)&log_level_info + Number * (int)(v450 + Number));\n        v28 = *((_DWORD *)&log_level_info + Number * (int)(v450 + Number) +\n                Number);\n        v29 = get_debug_facility(String, Number L);\n        v24(v28 | v29, String, v27, v26, v25, String, String);\n      } else {\n        v30 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v31 = (const char *)*((_QWORD *)&log_level_info +\n                              Number * (int)(v450 + Number));\n        v32 = *((_DWORD *)&log_level_info + Number * (int)(v450 + Number) +\n                Number);\n        v33 = get_debug_facility(String, Number L);\n        v30(v32 | v33, String, v31, String, String);\n      }\n      --dprint_crit;\n    }\n    v454 = Number;\n    v418 = pu_400a_rpl;\n    v419 = qword_FB38;\n    goto LABEL_396;\n  }\n  v451 = search_event(*(_QWORD *)(a1[Number] + Number L));\n  if (!v451) {\n  LABEL_365:\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      v429 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v429);\n        if (log_prefix_val) {\n          v356 = (const char *)*log_prefix_val;\n          v357 = *((_DWORD *)log_prefix_val + Number);\n          v358 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v429 + Number));\n          v359 = my_pid();\n          fprintf(stderr, String, process_no, v359, v358, v357, v356, String,\n                  String);\n        } else {\n          v360 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v429 + Number));\n          v361 = my_pid();\n          fprintf(stderr, String, process_no, v361, v360, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v362 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v363 = *log_prefix_val;\n        v364 = *((_DWORD *)log_prefix_val + Number);\n        v365 = *((_QWORD *)&log_level_info + Number * (int)(v429 + Number));\n        v366 = *((_DWORD *)&log_level_info + Number * (int)(v429 + Number) +\n                 Number);\n        v367 = get_debug_facility(String, Number L);\n        v362(v366 | v367, String, v365, v364, v363, String, String);\n      } else {\n        v368 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v369 = (const char *)*((_QWORD *)&log_level_info +\n                               Number * (int)(v429 + Number));\n        v370 = *((_DWORD *)&log_level_info + Number * (int)(v429 + Number) +\n                 Number);\n        v371 = get_debug_facility(String, Number L);\n        v368(v370 | v371, String, v369, String, String);\n      }\n      --dprint_crit;\n    }\n    if (a1[Number] && *(_QWORD *)(a1[Number] + Number L) &&\n        *(int *)(a1[Number] + Number L) > Number &&\n        (int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      v428 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v428);\n        if (log_prefix_val) {\n          v372 = *(const char **)(a1[Number] + Number L);\n          v373 = *(_DWORD *)(a1[Number] + Number L);\n          v374 = (const char *)*log_prefix_val;\n          v375 = *((_DWORD *)log_prefix_val + Number);\n          v376 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v428 + Number));\n          v377 = my_pid();\n          fprintf(stderr, String, process_no, v377, v376, v375, v374, String,\n                  String, v373, v372);\n        } else {\n          v378 = *(const char **)(a1[Number] + Number L);\n          v379 = *(_DWORD *)(a1[Number] + Number L);\n          v380 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v428 + Number));\n          v381 = my_pid();\n          fprintf(stderr, String, process_no, v381, v380, String, String, v379,\n                  v378);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v382 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v383 = *(_QWORD *)(a1[Number] + Number L);\n        v384 = *(unsigned int *)(a1[Number] + Number L);\n        v416 = *log_prefix_val;\n        v385 = *((_DWORD *)log_prefix_val + Number);\n        v386 = *((_QWORD *)&log_level_info + Number * (int)(v428 + Number));\n        v412 = *((_DWORD *)&log_level_info + Number * (int)(v428 + Number) +\n                 Number);\n        v387 = get_debug_facility(String, Number L);\n        v382(v412 | v387, String, v386, v385, v416, String, String, v384, v383);\n      } else {\n        v388 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v389 = *(_QWORD *)(a1[Number] + Number L);\n        v390 = *(_DWORD *)(a1[Number] + Number L);\n        v391 = *((_QWORD *)&log_level_info + Number * (int)(v428 + Number));\n        v392 = *((_DWORD *)&log_level_info + Number * (int)(v428 + Number) +\n                 Number);\n        v393 = get_debug_facility(String, Number L);\n        v388(v392 | v393, String, v391, String, String, v390, v389);\n      }\n      --dprint_crit;\n    }\n    v454 = Number;\n    v418 = pu_489_rpl;\n    v419 = qword_FB68;\n    goto LABEL_396;\n  }\n  for (i = a1[Number]; i; i = *(_QWORD *)(i + Number)) {\n    if (!(unsigned int)cmp_hdrname_strzn(i + Number, String, Number L)) {\n      v457 = Number;\n      break;\n    }\n  }\n  if (v457) {\n    if ((int)get_debug_level(String, Number L) > Number && !dprint_crit) {\n      v449 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v449);\n        if (log_prefix_val) {\n          v80 = (const char *)*log_prefix_val;\n          v81 = *((_DWORD *)log_prefix_val + Number);\n          v82 = (const char *)*((_QWORD *)&log_level_info +\n                                Number * (int)(v449 + Number));\n          v83 = my_pid();\n          fprintf(stderr, String, process_no, v83, v82, v81, v80, String,\n                  String);\n        } else {\n          v84 = (const char *)*((_QWORD *)&log_level_info +\n                                Number * (int)(v449 + Number));\n          v85 = my_pid();\n          fprintf(stderr, String, process_no, v85, v84, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v86 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v87 = *log_prefix_val;\n        v88 = *((_DWORD *)log_prefix_val + Number);\n        v89 = *((_QWORD *)&log_level_info + Number * (int)(v449 + Number));\n        v90 = *((_DWORD *)&log_level_info + Number * (int)(v449 + Number) +\n                Number);\n        v91 = get_debug_facility(String, Number L);\n        v86(v90 | v91, String, v89, v88, v87, String, String);\n      } else {\n        v92 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v93 = (const char *)*((_QWORD *)&log_level_info +\n                              Number * (int)(v449 + Number));\n        v94 = *((_DWORD *)&log_level_info + Number * (int)(v449 + Number) +\n                Number);\n        v95 = get_debug_facility(String, Number L);\n        v92(v94 | v95, String, v93, String, String);\n      }\n      --dprint_crit;\n    }\n    v422 = (char *)((__int64(__fastcall *)(_QWORD, _QWORD, const char *,\n                                           const char *, __int64,\n                                           const char *))pkg_root[Number])(\n        pkg_root[Number], *(_DWORD *)(i + Number) + Number, String, String,\n        Number L, String);\n    if (!v422) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        v447 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color(v447);\n          if (log_prefix_val) {\n            v96 = (const char *)*log_prefix_val;\n            v97 = *((_DWORD *)log_prefix_val + Number);\n            v98 = (const char *)*((_QWORD *)&log_level_info +\n                                  Number * (int)(v447 + Number));\n            v99 = my_pid();\n            fprintf(stderr, String, process_no, v99, v98, v97, v96, String,\n                    String, String);\n          } else {\n            v100 = (const char *)*((_QWORD *)&log_level_info +\n                                   Number * (int)(v447 + Number));\n            v101 = my_pid();\n            fprintf(stderr, String, process_no, v101, v100, String, String,\n                    String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v102 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v103 = *log_prefix_val;\n          v104 = *((_DWORD *)log_prefix_val + Number);\n          v105 = *((_QWORD *)&log_level_info + Number * (int)(v447 + Number));\n          v106 = *((_DWORD *)&log_level_info + Number * (int)(v447 + Number) +\n                   Number);\n          v107 = get_debug_facility(String, Number L);\n          v102(v106 | v107, String, v105, v104, v103, String, String, String);\n        } else {\n          v108 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v109 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v447 + Number));\n          v110 = *((_DWORD *)&log_level_info + Number * (int)(v447 + Number) +\n                   Number);\n          v111 = get_debug_facility(String, Number L);\n          v108(v110 | v111, String, v109, String, String, String);\n        }\n        --dprint_crit;\n      }\n      goto LABEL_396;\n    }\n    memcpy(v422, *(const void **)(i + Number), *(int *)(i + Number));\n    v423 = *(_DWORD *)(i + Number);\n    v422[v423] = Number;\n    if ((int)get_debug_level(String, Number L) > Number && !dprint_crit) {\n      v448 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v448);\n        if (log_prefix_val) {\n          v112 = (const char *)*log_prefix_val;\n          v113 = *((_DWORD *)log_prefix_val + Number);\n          v114 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v448 + Number));\n          v115 = my_pid();\n          fprintf(stderr, String, process_no, v115, v114, v113, v112, String,\n                  String, v423, v422);\n        } else {\n          v116 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v448 + Number));\n          v117 = my_pid();\n          fprintf(stderr, String, process_no, v117, v116, String, String, v423,\n                  v422);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v118 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v414 = *log_prefix_val;\n        v119 = *((_DWORD *)log_prefix_val + Number);\n        v120 = *((_QWORD *)&log_level_info + Number * (int)(v448 + Number));\n        v411 = *((_DWORD *)&log_level_info + Number * (int)(v448 + Number) +\n                 Number);\n        v121 = get_debug_facility(String, Number L);\n        v118(v411 | v121, String, v120, v119, v414, String, String, v423, v422);\n      } else {\n        v122 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v123 = *((_QWORD *)&log_level_info + Number * (int)(v448 + Number));\n        v124 = *((_DWORD *)&log_level_info + Number * (int)(v448 + Number) +\n                 Number);\n        v125 = get_debug_facility(String, Number L);\n        v122(v124 | v125, String, v123, String, String, v423, v422);\n      }\n      --dprint_crit;\n    }\n  } else {\n    if ((int)get_debug_level(String, Number L) > Number && !dprint_crit) {\n      v446 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v446);\n        if (log_prefix_val) {\n          v34 = (const char *)*log_prefix_val;\n          v35 = *((_DWORD *)log_prefix_val + Number);\n          v36 = (const char *)*((_QWORD *)&log_level_info +\n                                Number * (int)(v446 + Number));\n          v37 = my_pid();\n          fprintf(stderr, String, process_no, v37, v36, v35, v34, String,\n                  String);\n        } else {\n          v38 = (const char *)*((_QWORD *)&log_level_info +\n                                Number * (int)(v446 + Number));\n          v39 = my_pid();\n          fprintf(stderr, String, process_no, v39, v38, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v40 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v41 = *log_prefix_val;\n        v42 = *((_DWORD *)log_prefix_val + Number);\n        v43 = *((_QWORD *)&log_level_info + Number * (int)(v446 + Number));\n        v44 = *((_DWORD *)&log_level_info + Number * (int)(v446 + Number) +\n                Number);\n        v45 = get_debug_facility(String, Number L);\n        v40(v44 | v45, String, v43, v42, v41, String, String);\n      } else {\n        v46 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v47 = (const char *)*((_QWORD *)&log_level_info +\n                              Number * (int)(v446 + Number));\n        v48 = *((_DWORD *)&log_level_info + Number * (int)(v446 + Number) +\n                Number);\n        v49 = get_debug_facility(String, Number L);\n        v46(v48 | v49, String, v47, String, String);\n      }\n      --dprint_crit;\n    }\n    v422 = (char *)generate_ETag(Number L);\n    if (!v422) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        v444 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color(v444);\n          if (log_prefix_val) {\n            v50 = (const char *)*log_prefix_val;\n            v51 = *((_DWORD *)log_prefix_val + Number);\n            v52 = (const char *)*((_QWORD *)&log_level_info +\n                                  Number * (int)(v444 + Number));\n            v53 = my_pid();\n            fprintf(stderr, String, process_no, v53, v52, v51, v50, String,\n                    String);\n          } else {\n            v54 = (const char *)*((_QWORD *)&log_level_info +\n                                  Number * (int)(v444 + Number));\n            v55 = my_pid();\n            fprintf(stderr, String, process_no, v55, v54, String, String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v56 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v57 = *log_prefix_val;\n          v58 = *((_DWORD *)log_prefix_val + Number);\n          v59 = *((_QWORD *)&log_level_info + Number * (int)(v444 + Number));\n          v60 = *((_DWORD *)&log_level_info + Number * (int)(v444 + Number) +\n                  Number);\n          v61 = get_debug_facility(String, Number L);\n          v56(v60 | v61, String, v59, v58, v57, String, String);\n        } else {\n          v62 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v63 = (const char *)*((_QWORD *)&log_level_info +\n                                Number * (int)(v444 + Number));\n          v64 = *((_DWORD *)&log_level_info + Number * (int)(v444 + Number) +\n                  Number);\n          v65 = get_debug_facility(String, Number L);\n          v62(v64 | v65, String, v63, String, String);\n        }\n        --dprint_crit;\n      }\n      goto LABEL_396;\n    }\n    v423 = strlen(v422);\n    v456 = Number;\n    if ((int)get_debug_level(String, Number L) > Number && !dprint_crit) {\n      v445 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v445);\n        if (log_prefix_val) {\n          v66 = (const char *)*log_prefix_val;\n          v67 = *((_DWORD *)log_prefix_val + Number);\n          v68 = (const char *)*((_QWORD *)&log_level_info +\n                                Number * (int)(v445 + Number));\n          v69 = my_pid();\n          fprintf(stderr, String, process_no, v69, v68, v67, v66, String,\n                  String, v423, v422);\n        } else {\n          v70 = (const char *)*((_QWORD *)&log_level_info +\n                                Number * (int)(v445 + Number));\n          v71 = my_pid();\n          fprintf(stderr, String, process_no, v71, v70, String, String, v423,\n                  v422);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v72 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v413 = *log_prefix_val;\n        v73 = *((_DWORD *)log_prefix_val + Number);\n        v74 = *((_QWORD *)&log_level_info + Number * (int)(v445 + Number));\n        v410 = *((_DWORD *)&log_level_info + Number * (int)(v445 + Number) +\n                 Number);\n        v75 = get_debug_facility(String, Number L);\n        v72(v410 | v75, String, v74, v73, v413, String, String, v423, v422);\n      } else {\n        v76 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v77 = *((_QWORD *)&log_level_info + Number * (int)(v445 + Number));\n        v78 = *((_DWORD *)&log_level_info + Number * (int)(v445 + Number) +\n                Number);\n        v79 = get_debug_facility(String, Number L);\n        v76(v78 | v79, String, v77, String, String, v423, v422);\n      }\n      --dprint_crit;\n    }\n  }\n  if (a1[Number] && *(int *)(a1[Number] + Number L) > Number) {\n    if (!*(_QWORD *)(a1[Number] + Number L) &&\n        (int)parse_expires(a1[Number]) < Number) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        v443 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color(v443);\n          if (log_prefix_val) {\n            v126 = (const char *)*log_prefix_val;\n            v127 = *((_DWORD *)log_prefix_val + Number);\n            v128 = (const char *)*((_QWORD *)&log_level_info +\n                                   Number * (int)(v443 + Number));\n            v129 = my_pid();\n            fprintf(stderr, String, process_no, v129, v128, v127, v126, String,\n                    String);\n          } else {\n            v130 = (const char *)*((_QWORD *)&log_level_info +\n                                   Number * (int)(v443 + Number));\n            v131 = my_pid();\n            fprintf(stderr, String, process_no, v131, v130, String, String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v132 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v133 = *log_prefix_val;\n          v134 = *((_DWORD *)log_prefix_val + Number);\n          v135 = *((_QWORD *)&log_level_info + Number * (int)(v443 + Number));\n          v136 = *((_DWORD *)&log_level_info + Number * (int)(v443 + Number) +\n                   Number);\n          v137 = get_debug_facility(String, Number L);\n          v132(v136 | v137, String, v135, v134, v133, String, String);\n        } else {\n          v138 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v139 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v443 + Number));\n          v140 = *((_DWORD *)&log_level_info + Number * (int)(v443 + Number) +\n                   Number);\n          v141 = get_debug_facility(String, Number L);\n          v138(v140 | v141, String, v139, String, String);\n        }\n        --dprint_crit;\n      }\n      goto LABEL_396;\n    }\n    v460 = *(_DWORD *)(*(_QWORD *)(a1[Number] + Number L) + Number L);\n    if ((int)get_debug_level(String, Number L) > Number && !dprint_crit) {\n      v442 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v442);\n        if (log_prefix_val) {\n          v142 = (const char *)*log_prefix_val;\n          v143 = *((_DWORD *)log_prefix_val + Number);\n          v144 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v442 + Number));\n          v145 = my_pid();\n          fprintf(stderr, String, process_no, v145, v144, v143, v142, String,\n                  String, v460);\n        } else {\n          v146 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v442 + Number));\n          v147 = my_pid();\n          fprintf(stderr, String, process_no, v147, v146, String, String, v460);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v148 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v149 = *log_prefix_val;\n        v150 = *((_DWORD *)log_prefix_val + Number);\n        v151 = *((_QWORD *)&log_level_info + Number * (int)(v442 + Number));\n        v152 = *((_DWORD *)&log_level_info + Number * (int)(v442 + Number) +\n                 Number);\n        v153 = get_debug_facility(String, Number L);\n        v148(v152 | v153, String, v151, v150, v149, String, String, v460);\n      } else {\n        v154 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v155 = (const char *)*((_QWORD *)&log_level_info +\n                               Number * (int)(v442 + Number));\n        v156 = *((_DWORD *)&log_level_info + Number * (int)(v442 + Number) +\n                 Number);\n        v157 = get_debug_facility(String, Number L);\n        v154(v156 | v157, String, v155, String, String, v460);\n      }\n      --dprint_crit;\n    }\n  } else {\n    if ((int)get_debug_level(String, Number L) > Number && !dprint_crit) {\n      v441 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v441);\n        if (log_prefix_val) {\n          v158 = *(unsigned int *)(v451 + Number);\n          v159 = (const char *)*log_prefix_val;\n          v160 = *((_DWORD *)log_prefix_val + Number);\n          v161 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v441 + Number));\n          v162 = my_pid();\n          fprintf(stderr, String, process_no, v162, v161, v160, v159, String,\n                  String, v158);\n        } else {\n          v163 = *(unsigned int *)(v451 + Number);\n          v164 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v441 + Number));\n          v165 = my_pid();\n          fprintf(stderr, String, process_no, v165, v164, String, String, v163);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v166 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v167 = *(unsigned int *)(v451 + Number);\n        v415 = *log_prefix_val;\n        v168 = *((_DWORD *)log_prefix_val + Number);\n        v169 = *((_QWORD *)&log_level_info + Number * (int)(v441 + Number));\n        v170 = *((_DWORD *)&log_level_info + Number * (int)(v441 + Number) +\n                 Number);\n        v171 = get_debug_facility(String, Number L);\n        v166(v170 | v171, String, v169, v168, v415, String, String, v167);\n      } else {\n        v172 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v173 = *(_DWORD *)(v451 + Number);\n        v174 = (const char *)*((_QWORD *)&log_level_info +\n                               Number * (int)(v441 + Number));\n        v175 = *((_DWORD *)&log_level_info + Number * (int)(v441 + Number) +\n                 Number);\n        v176 = get_debug_facility(String, Number L);\n        v172(v175 | v176, String, v174, String, String, v173);\n      }\n      --dprint_crit;\n    }\n    v460 = *(_DWORD *)(v451 + Number);\n  }\n  if (v460 > max_expires)\n    v460 = max_expires;\n  if ((int)parse_sip_msg_uri(a1) < Number) {\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      v430 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v430);\n        if (log_prefix_val) {\n          v177 = (const char *)*log_prefix_val;\n          v178 = *((_DWORD *)log_prefix_val + Number);\n          v179 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v430 + Number));\n          v180 = my_pid();\n          fprintf(stderr, String, process_no, v180, v179, v178, v177, String,\n                  String);\n        } else {\n          v181 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v430 + Number));\n          v182 = my_pid();\n          fprintf(stderr, String, process_no, v182, v181, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v183 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v184 = *log_prefix_val;\n        v185 = *((_DWORD *)log_prefix_val + Number);\n        v186 = *((_QWORD *)&log_level_info + Number * (int)(v430 + Number));\n        v187 = *((_DWORD *)&log_level_info + Number * (int)(v430 + Number) +\n                 Number);\n        v188 = get_debug_facility(String, Number L);\n        v183(v187 | v188, String, v186, v185, v184, String, String);\n      } else {\n        v189 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v190 = (const char *)*((_QWORD *)&log_level_info +\n                               Number * (int)(v430 + Number));\n        v191 = *((_DWORD *)&log_level_info + Number * (int)(v430 + Number) +\n                 Number);\n        v192 = get_debug_facility(String, Number L);\n        v189(v191 | v192, String, v190, String, String);\n      }\n      --dprint_crit;\n    }\n    v454 = Number;\n    v418 = pu_400a_rpl;\n    v419 = qword_FB38;\n    goto LABEL_396;\n  }\n  v193 = a1[Number];\n  v421[Number] = a1[Number];\n  v421[Number] = v193;\n  v194 = a1[Number];\n  v420[Number] = a1[Number];\n  v420[Number] = v194;\n  if (!a1[Number]) {\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      v431 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v431);\n        if (log_prefix_val) {\n          v195 = (const char *)*log_prefix_val;\n          v196 = *((_DWORD *)log_prefix_val + Number);\n          v197 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v431 + Number));\n          v198 = my_pid();\n          fprintf(stderr, String, process_no, v198, v197, v196, v195, String,\n                  String);\n        } else {\n          v199 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v431 + Number));\n          v200 = my_pid();\n          fprintf(stderr, String, process_no, v200, v199, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v201 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v202 = *log_prefix_val;\n        v203 = *((_DWORD *)log_prefix_val + Number);\n        v204 = *((_QWORD *)&log_level_info + Number * (int)(v431 + Number));\n        v205 = *((_DWORD *)&log_level_info + Number * (int)(v431 + Number) +\n                 Number);\n        v206 = get_debug_facility(String, Number L);\n        v201(v205 | v206, String, v204, v203, v202, String, String);\n      } else {\n        v207 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v208 = (const char *)*((_QWORD *)&log_level_info +\n                               Number * (int)(v431 + Number));\n        v209 = *((_DWORD *)&log_level_info + Number * (int)(v431 + Number) +\n                 Number);\n        v210 = get_debug_facility(String, Number L);\n        v207(v209 | v210, String, v208, String, String);\n      }\n      --dprint_crit;\n    }\n    v454 = Number;\n    v418 = pu_400a_rpl;\n    v419 = qword_FB38;\n    goto LABEL_396;\n  }\n  if (*(_QWORD *)(a1[Number] + Number L)) {\n    s[Number] = get_body(a1);\n    if (!s[Number]) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        v440 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color(v440);\n          if (log_prefix_val) {\n            v227 = (const char *)*log_prefix_val;\n            v228 = *((_DWORD *)log_prefix_val + Number);\n            v229 = (const char *)*((_QWORD *)&log_level_info +\n                                   Number * (int)(v440 + Number));\n            v230 = my_pid();\n            fprintf(stderr, String, process_no, v230, v229, v228, v227, String,\n                    String);\n          } else {\n            v231 = (const char *)*((_QWORD *)&log_level_info +\n                                   Number * (int)(v440 + Number));\n            v232 = my_pid();\n            fprintf(stderr, String, process_no, v232, v231, String, String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v233 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v234 = *log_prefix_val;\n          v235 = *((_DWORD *)log_prefix_val + Number);\n          v236 = *((_QWORD *)&log_level_info + Number * (int)(v440 + Number));\n          v237 = *((_DWORD *)&log_level_info + Number * (int)(v440 + Number) +\n                   Number);\n          v238 = get_debug_facility(String, Number L);\n          v233(v237 | v238, String, v236, v235, v234, String, String);\n        } else {\n          v239 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v240 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v440 + Number));\n          v241 = *((_DWORD *)&log_level_info + Number * (int)(v440 + Number) +\n                   Number);\n          v242 = get_debug_facility(String, Number L);\n          v239(v241 | v242, String, v240, String, String);\n        }\n        --dprint_crit;\n      }\n      v454 = Number;\n      v418 = pu_400a_rpl;\n      v419 = qword_FB38;\n      goto LABEL_396;\n    }\n    LODWORD(s[Number]) = *(_QWORD *)(a1[Number] + Number L);\n    if (sphere_enable && **(_DWORD **)(v451 + Number) == Number &&\n        (unsigned int)*(_QWORD *)(a1[Number] + Number L) == Number)\n      v453 = extract_sphere(s[Number], s[Number]);\n  } else {\n    s[Number] = Number L;\n    if (v456) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        v439 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color(v439);\n          if (log_prefix_val) {\n            v211 = (const char *)*log_prefix_val;\n            v212 = *((_DWORD *)log_prefix_val + Number);\n            v213 = (const char *)*((_QWORD *)&log_level_info +\n                                   Number * (int)(v439 + Number));\n            v214 = my_pid();\n            fprintf(stderr, String, process_no, v214, v213, v212, v211, String,\n                    String);\n          } else {\n            v215 = (const char *)*((_QWORD *)&log_level_info +\n                                   Number * (int)(v439 + Number));\n            v216 = my_pid();\n            fprintf(stderr, String, process_no, v216, v215, String, String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v217 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v218 = *log_prefix_val;\n          v219 = *((_DWORD *)log_prefix_val + Number);\n          v220 = *((_QWORD *)&log_level_info + Number * (int)(v439 + Number));\n          v221 = *((_DWORD *)&log_level_info + Number * (int)(v439 + Number) +\n                   Number);\n          v222 = get_debug_facility(String, Number L);\n          v217(v221 | v222, String, v220, v219, v218, String, String);\n        } else {\n          v223 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v224 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v439 + Number));\n          v225 = *((_DWORD *)&log_level_info + Number * (int)(v439 + Number) +\n                   Number);\n          v226 = get_debug_facility(String, Number L);\n          v223(v225 | v226, String, v224, String, String);\n        }\n        --dprint_crit;\n      }\n      v454 = Number;\n      v418 = pu_400b_rpl;\n      v419 = qword_FB48;\n      goto LABEL_396;\n    }\n  }\n  memset(v425, Number, Number);\n  if (a2) {\n    v455 = ((__int64(__fastcall *)(_QWORD, __int64, const char *, const char *,\n                                   __int64, const char *))pkg_root[Number])(\n        pkg_root[Number], Number L, String, String, Number L, String);\n    if (!v455) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        v435 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color(v435);\n          if (log_prefix_val) {\n            v243 = (const char *)*log_prefix_val;\n            v244 = *((_DWORD *)log_prefix_val + Number);\n            v245 = (const char *)*((_QWORD *)&log_level_info +\n                                   Number * (int)(v435 + Number));\n            v246 = my_pid();\n            fprintf(stderr, String, process_no, v246, v245, v244, v243, String,\n                    String, String);\n          } else {\n            v247 = (const char *)*((_QWORD *)&log_level_info +\n                                   Number * (int)(v435 + Number));\n            v248 = my_pid();\n            fprintf(stderr, String, process_no, v248, v247, String, String,\n                    String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v249 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v250 = *log_prefix_val;\n          v251 = *((_DWORD *)log_prefix_val + Number);\n          v252 = *((_QWORD *)&log_level_info + Number * (int)(v435 + Number));\n          v253 = *((_DWORD *)&log_level_info + Number * (int)(v435 + Number) +\n                   Number);\n          v254 = get_debug_facility(String, Number L);\n          v249(v253 | v254, String, v252, v251, v250, String, String, String);\n        } else {\n          v255 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v256 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v435 + Number));\n          v257 = *((_DWORD *)&log_level_info + Number * (int)(v435 + Number) +\n                   Number);\n          v258 = get_debug_facility(String, Number L);\n          v255(v257 | v258, String, v256, String, String, String);\n        }\n        --dprint_crit;\n      }\n      goto LABEL_396;\n    }\n    if (*(_DWORD *)(a2 + Number) >= (signed int)(v452 - Number)) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        v436 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color(v436);\n          if (log_prefix_val) {\n            v259 = (const char *)*log_prefix_val;\n            v260 = *((_DWORD *)log_prefix_val + Number);\n            v261 = (const char *)*((_QWORD *)&log_level_info +\n                                   Number * (int)(v436 + Number));\n            v262 = my_pid();\n            fprintf(stderr, String, process_no, v262, v261, v260, v259, String,\n                    String);\n          } else {\n            v263 = (const char *)*((_QWORD *)&log_level_info +\n                                   Number * (int)(v436 + Number));\n            v264 = my_pid();\n            fprintf(stderr, String, process_no, v264, v263, String, String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v265 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v266 = *log_prefix_val;\n          v267 = *((_DWORD *)log_prefix_val + Number);\n          v268 = *((_QWORD *)&log_level_info + Number * (int)(v436 + Number));\n          v269 = *((_DWORD *)&log_level_info + Number * (int)(v436 + Number) +\n                   Number);\n          v270 = get_debug_facility(String, Number L);\n          v265(v269 | v270, String, v268, v267, v266, String, String);\n        } else {\n          v271 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v272 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v436 + Number));\n          v273 = *((_DWORD *)&log_level_info + Number * (int)(v436 + Number) +\n                   Number);\n          v274 = get_debug_facility(String, Number L);\n          v271(v273 | v274, String, v272, String, String);\n        }\n        --dprint_crit;\n      }\n      goto LABEL_396;\n    }\n    strncpy(buf_18310, *(const char **)a2, *(int *)(a2 + Number));\n    v452 = *(_DWORD *)(a2 + Number);\n    buf_18310[v452] = Number;\n    if ((unsigned int)parse_uri(buf_18310, v452, v425)) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        v437 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color(v437);\n          if (log_prefix_val) {\n            v275 = (const char *)*log_prefix_val;\n            v276 = *((_DWORD *)log_prefix_val + Number);\n            v277 = (const char *)*((_QWORD *)&log_level_info +\n                                   Number * (int)(v437 + Number));\n            v278 = my_pid();\n            fprintf(stderr, String, process_no, v278, v277, v276, v275, String,\n                    String);\n          } else {\n            v279 = (const char *)*((_QWORD *)&log_level_info +\n                                   Number * (int)(v437 + Number));\n            v280 = my_pid();\n            fprintf(stderr, String, process_no, v280, v279, String, String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v281 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v282 = *log_prefix_val;\n          v283 = *((_DWORD *)log_prefix_val + Number);\n          v284 = *((_QWORD *)&log_level_info + Number * (int)(v437 + Number));\n          v285 = *((_DWORD *)&log_level_info + Number * (int)(v437 + Number) +\n                   Number);\n          v286 = get_debug_facility(String, Number L);\n          v281(v285 | v286, String, v284, v283, v282, String, String);\n        } else {\n          v287 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v288 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v437 + Number));\n          v289 = *((_DWORD *)&log_level_info + Number * (int)(v437 + Number) +\n                   Number);\n          v290 = get_debug_facility(String, Number L);\n          v287(v289 | v290, String, v288, String, String);\n        }\n        --dprint_crit;\n      }\n      v454 = Number;\n      v418 = pu_400a_rpl;\n      v419 = qword_FB38;\n      goto LABEL_396;\n    }\n    if ((int)get_debug_level(String, Number L) > Number && !dprint_crit) {\n      v438 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v438);\n        if (log_prefix_val) {\n          v291 = (const char *)*log_prefix_val;\n          v292 = *((_DWORD *)log_prefix_val + Number);\n          v293 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v438 + Number));\n          v294 = my_pid();\n          fprintf(stderr, String, process_no, v294, v293, v292, v291, String,\n                  String, v452, buf_18310);\n        } else {\n          v295 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v438 + Number));\n          v296 = my_pid();\n          fprintf(stderr, String, process_no, v296, v295, String, String, v452,\n                  buf_18310);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v297 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v298 = *log_prefix_val;\n        v299 = *((_DWORD *)log_prefix_val + Number);\n        v300 = *((_QWORD *)&log_level_info + Number * (int)(v438 + Number));\n        v301 = *((_DWORD *)&log_level_info + Number * (int)(v438 + Number) +\n                 Number);\n        v302 = get_debug_facility(String, Number L);\n        v297(v301 | v302, String, v300, v299, v298, String, String, v452,\n             buf_18310);\n      } else {\n        v303 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v304 = *((_QWORD *)&log_level_info + Number * (int)(v438 + Number));\n        v305 = *((_DWORD *)&log_level_info + Number * (int)(v438 + Number) +\n                 Number);\n        v306 = get_debug_facility(String, Number L);\n        v303(v305 | v306, String, v304, String, String, v452, buf_18310);\n      }\n      --dprint_crit;\n    }\n    *(_QWORD *)v455 = buf_18310;\n    *(_DWORD *)(v455 + Number) = v452;\n  }\n  if (*(_QWORD *)(v451 + Number) &&\n      (*(int(__fastcall **)(_QWORD *))(v451 + Number))(a1) < Number) {\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      v434 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v434);\n        if (log_prefix_val) {\n          v307 = (const char *)*log_prefix_val;\n          v308 = *((_DWORD *)log_prefix_val + Number);\n          v309 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v434 + Number));\n          v310 = my_pid();\n          fprintf(stderr, String, process_no, v310, v309, v308, v307, String,\n                  String);\n        } else {\n          v311 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v434 + Number));\n          v312 = my_pid();\n          fprintf(stderr, String, process_no, v312, v311, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v313 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v314 = *log_prefix_val;\n        v315 = *((_DWORD *)log_prefix_val + Number);\n        v316 = *((_QWORD *)&log_level_info + Number * (int)(v434 + Number));\n        v317 = *((_DWORD *)&log_level_info + Number * (int)(v434 + Number) +\n                 Number);\n        v318 = get_debug_facility(String, Number L);\n        v313(v317 | v318, String, v316, v315, v314, String, String);\n      } else {\n        v319 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v320 = (const char *)*((_QWORD *)&log_level_info +\n                               Number * (int)(v434 + Number));\n        v321 = *((_DWORD *)&log_level_info + Number * (int)(v434 + Number) +\n                 Number);\n        v322 = get_debug_facility(String, Number L);\n        v319(v321 | v322, String, v320, String, String);\n      }\n      --dprint_crit;\n    }\n    goto LABEL_396;\n  }\n  v459 = new_presentity(v420, v421, v460, v451, &v422, v455);\n  if (!v459) {\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      v432 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v432);\n        if (log_prefix_val) {\n          v323 = (const char *)*log_prefix_val;\n          v324 = *((_DWORD *)log_prefix_val + Number);\n          v325 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v432 + Number));\n          v326 = my_pid();\n          fprintf(stderr, String, process_no, v326, v325, v324, v323, String,\n                  String);\n        } else {\n          v327 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v432 + Number));\n          v328 = my_pid();\n          fprintf(stderr, String, process_no, v328, v327, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v329 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v330 = *log_prefix_val;\n        v331 = *((_DWORD *)log_prefix_val + Number);\n        v332 = *((_QWORD *)&log_level_info + Number * (int)(v432 + Number));\n        v333 = *((_DWORD *)&log_level_info + Number * (int)(v432 + Number) +\n                 Number);\n        v334 = get_debug_facility(String, Number L);\n        v329(v333 | v334, String, v332, v331, v330, String, String);\n      } else {\n        v335 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v336 = (const char *)*((_QWORD *)&log_level_info +\n                               Number * (int)(v432 + Number));\n        v337 = *((_DWORD *)&log_level_info + Number * (int)(v432 + Number) +\n                 Number);\n        v338 = get_debug_facility(String, Number L);\n        v335(v337 | v338, String, v336, String, String);\n      }\n      --dprint_crit;\n    }\n    goto LABEL_396;\n  }\n  if ((int)update_presentity(a1, v459, s, v456, &v417, v453, Number L, Number L,\n                             Number L) < Number) {\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      v433 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color(v433);\n        if (log_prefix_val) {\n          v339 = (const char *)*log_prefix_val;\n          v340 = *((_DWORD *)log_prefix_val + Number);\n          v341 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v433 + Number));\n          v342 = my_pid();\n          fprintf(stderr, String, process_no, v342, v341, v340, v339, String,\n                  String);\n        } else {\n          v343 = (const char *)*((_QWORD *)&log_level_info +\n                                 Number * (int)(v433 + Number));\n          v344 = my_pid();\n          fprintf(stderr, String, process_no, v344, v343, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v345 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v346 = *log_prefix_val;\n        v347 = *((_DWORD *)log_prefix_val + Number);\n        v348 = *((_QWORD *)&log_level_info + Number * (int)(v433 + Number));\n        v349 = *((_DWORD *)&log_level_info + Number * (int)(v433 + Number) +\n                 Number);\n        v350 = get_debug_facility(String, Number L);\n        v345(v349 | v350, String, v348, v347, v346, String, String);\n      } else {\n        v351 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v352 = (const char *)*((_QWORD *)&log_level_info +\n                               Number * (int)(v433 + Number));\n        v353 = *((_DWORD *)&log_level_info + Number * (int)(v433 + Number) +\n                 Number);\n        v354 = get_debug_facility(String, Number L);\n        v351(v353 | v354, String, v352, String, String);\n      }\n      --dprint_crit;\n    }\n    goto LABEL_396;\n  }\n  if (v459)\n    ((void(__fastcall *)(_QWORD, __int64, const char *, const char *, __int64,\n                         const char *))pkg_root[Number])(\n        pkg_root[Number], v459, String, String, Number L, String);\n  if (v422)\n    ((void(__fastcall *)(_QWORD, char *, const char *, const char *, __int64,\n                         const char *))pkg_root[Number])(\n        pkg_root[Number], v422, String, String, Number L, String);\n  if (v455)\n    ((void(__fastcall *)(_QWORD, __int64, const char *, const char *, __int64,\n                         const char *))pkg_root[Number])(\n        pkg_root[Number], v455, String, String, Number L, String);\n  if (v453)\n    ((void(__fastcall *)(_QWORD, __int64, const char *, const char *, __int64,\n                         const char *))pkg_root[Number])(\n        pkg_root[Number], v453, String, String, Number L, String);\n  return Number L;\n}", "code_t": "int __cdecl ki_handle_publish_uri(sip_msg *msg, str *sender_uri) {\n  const char *v2;\n  int v3;\n  const char *v4;\n  unsigned int v5;\n  const char *v6;\n  unsigned int v7;\n  void (*v8)(_QWORD, const char *, ...);\n  __int64 v9;\n  unsigned int v10;\n  __int64 v11;\n  int v12;\n  unsigned int v13;\n  void (*v14)(_QWORD, const char *, ...);\n  const char *v15;\n  int v16;\n  unsigned int v17;\n  const char *v18;\n  int v19;\n  const char *v20;\n  unsigned int v21;\n  const char *v22;\n  unsigned int v23;\n  void (*v24)(_QWORD, const char *, ...);\n  __int64 v25;\n  unsigned int v26;\n  __int64 v27;\n  int v28;\n  unsigned int v29;\n  void (*v30)(_QWORD, const char *, ...);\n  const char *v31;\n  int v32;\n  unsigned int v33;\n  const char *v34;\n  int v35;\n  const char *v36;\n  unsigned int v37;\n  const char *v38;\n  unsigned int v39;\n  void (*v40)(_QWORD, const char *, ...);\n  __int64 v41;\n  unsigned int v42;\n  __int64 v43;\n  int v44;\n  unsigned int v45;\n  void (*v46)(_QWORD, const char *, ...);\n  const char *v47;\n  int v48;\n  unsigned int v49;\n  const char *v50;\n  int v51;\n  const char *v52;\n  unsigned int v53;\n  const char *v54;\n  unsigned int v55;\n  void (*v56)(_QWORD, const char *, ...);\n  __int64 v57;\n  unsigned int v58;\n  __int64 v59;\n  int v60;\n  unsigned int v61;\n  void (*v62)(_QWORD, const char *, ...);\n  const char *v63;\n  int v64;\n  unsigned int v65;\n  const char *v66;\n  int v67;\n  const char *v68;\n  unsigned int v69;\n  const char *v70;\n  unsigned int v71;\n  void (*v72)(_QWORD, const char *, ...);\n  unsigned int v73;\n  __int64 v74;\n  unsigned int v75;\n  void (*v76)(_QWORD, const char *, ...);\n  __int64 v77;\n  int v78;\n  unsigned int v79;\n  const char *v80;\n  int v81;\n  const char *v82;\n  unsigned int v83;\n  const char *v84;\n  unsigned int v85;\n  void (*v86)(_QWORD, const char *, ...);\n  __int64 v87;\n  unsigned int v88;\n  __int64 v89;\n  int v90;\n  unsigned int v91;\n  void (*v92)(_QWORD, const char *, ...);\n  const char *v93;\n  int v94;\n  unsigned int v95;\n  const char *v96;\n  int v97;\n  const char *v98;\n  unsigned int v99;\n  const char *v100;\n  unsigned int v101;\n  void (*v102)(_QWORD, const char *, ...);\n  __int64 v103;\n  unsigned int v104;\n  __int64 v105;\n  int v106;\n  unsigned int v107;\n  void (*v108)(_QWORD, const char *, ...);\n  const char *v109;\n  int v110;\n  unsigned int v111;\n  const char *v112;\n  int v113;\n  const char *v114;\n  unsigned int v115;\n  const char *v116;\n  unsigned int v117;\n  void (*v118)(_QWORD, const char *, ...);\n  unsigned int v119;\n  __int64 v120;\n  unsigned int v121;\n  void (*v122)(_QWORD, const char *, ...);\n  __int64 v123;\n  int v124;\n  unsigned int v125;\n  const char *v126;\n  int v127;\n  const char *v128;\n  unsigned int v129;\n  const char *v130;\n  unsigned int v131;\n  void (*v132)(_QWORD, const char *, ...);\n  __int64 v133;\n  unsigned int v134;\n  __int64 v135;\n  int v136;\n  unsigned int v137;\n  void (*v138)(_QWORD, const char *, ...);\n  const char *v139;\n  int v140;\n  unsigned int v141;\n  const char *v142;\n  int v143;\n  const char *v144;\n  unsigned int v145;\n  const char *v146;\n  unsigned int v147;\n  void (*v148)(_QWORD, const char *, ...);\n  __int64 v149;\n  unsigned int v150;\n  __int64 v151;\n  int v152;\n  unsigned int v153;\n  void (*v154)(_QWORD, const char *, ...);\n  const char *v155;\n  int v156;\n  unsigned int v157;\n  __int64 v158;\n  const char *v159;\n  int v160;\n  const char *v161;\n  unsigned int v162;\n  __int64 v163;\n  const char *v164;\n  unsigned int v165;\n  void (*v166)(_QWORD, const char *, ...);\n  __int64 v167;\n  unsigned int v168;\n  __int64 v169;\n  int v170;\n  unsigned int v171;\n  void (*v172)(_QWORD, const char *, ...);\n  unsigned int v173;\n  const char *v174;\n  int v175;\n  unsigned int v176;\n  const char *v177;\n  int v178;\n  const char *v179;\n  unsigned int v180;\n  const char *v181;\n  unsigned int v182;\n  void (*v183)(_QWORD, const char *, ...);\n  __int64 v184;\n  unsigned int v185;\n  __int64 v186;\n  int v187;\n  unsigned int v188;\n  void (*v189)(_QWORD, const char *, ...);\n  const char *v190;\n  int v191;\n  unsigned int v192;\n  __int64 v193;\n  __int64 v194;\n  const char *v195;\n  int v196;\n  const char *v197;\n  unsigned int v198;\n  const char *v199;\n  unsigned int v200;\n  void (*v201)(_QWORD, const char *, ...);\n  __int64 v202;\n  unsigned int v203;\n  __int64 v204;\n  int v205;\n  unsigned int v206;\n  void (*v207)(_QWORD, const char *, ...);\n  const char *v208;\n  int v209;\n  unsigned int v210;\n  const char *v211;\n  int v212;\n  const char *v213;\n  unsigned int v214;\n  const char *v215;\n  unsigned int v216;\n  void (*v217)(_QWORD, const char *, ...);\n  __int64 v218;\n  unsigned int v219;\n  __int64 v220;\n  int v221;\n  unsigned int v222;\n  void (*v223)(_QWORD, const char *, ...);\n  const char *v224;\n  int v225;\n  unsigned int v226;\n  const char *v227;\n  int v228;\n  const char *v229;\n  unsigned int v230;\n  const char *v231;\n  unsigned int v232;\n  void (*v233)(_QWORD, const char *, ...);\n  __int64 v234;\n  unsigned int v235;\n  __int64 v236;\n  int v237;\n  unsigned int v238;\n  void (*v239)(_QWORD, const char *, ...);\n  const char *v240;\n  int v241;\n  unsigned int v242;\n  const char *v243;\n  int v244;\n  const char *v245;\n  unsigned int v246;\n  const char *v247;\n  unsigned int v248;\n  void (*v249)(_QWORD, const char *, ...);\n  __int64 v250;\n  unsigned int v251;\n  __int64 v252;\n  int v253;\n  unsigned int v254;\n  void (*v255)(_QWORD, const char *, ...);\n  const char *v256;\n  int v257;\n  unsigned int v258;\n  const char *v259;\n  int v260;\n  const char *v261;\n  unsigned int v262;\n  const char *v263;\n  unsigned int v264;\n  void (*v265)(_QWORD, const char *, ...);\n  __int64 v266;\n  unsigned int v267;\n  __int64 v268;\n  int v269;\n  unsigned int v270;\n  void (*v271)(_QWORD, const char *, ...);\n  const char *v272;\n  int v273;\n  unsigned int v274;\n  const char *v275;\n  int v276;\n  const char *v277;\n  unsigned int v278;\n  const char *v279;\n  unsigned int v280;\n  void (*v281)(_QWORD, const char *, ...);\n  __int64 v282;\n  unsigned int v283;\n  __int64 v284;\n  int v285;\n  unsigned int v286;\n  void (*v287)(_QWORD, const char *, ...);\n  const char *v288;\n  int v289;\n  unsigned int v290;\n  const char *v291;\n  int v292;\n  const char *v293;\n  unsigned int v294;\n  const char *v295;\n  unsigned int v296;\n  void (*v297)(_QWORD, const char *, ...);\n  __int64 v298;\n  unsigned int v299;\n  __int64 v300;\n  int v301;\n  unsigned int v302;\n  void (*v303)(_QWORD, const char *, ...);\n  __int64 v304;\n  int v305;\n  unsigned int v306;\n  const char *v307;\n  int v308;\n  const char *v309;\n  unsigned int v310;\n  const char *v311;\n  unsigned int v312;\n  void (*v313)(_QWORD, const char *, ...);\n  __int64 v314;\n  unsigned int v315;\n  __int64 v316;\n  int v317;\n  unsigned int v318;\n  void (*v319)(_QWORD, const char *, ...);\n  const char *v320;\n  int v321;\n  unsigned int v322;\n  const char *v323;\n  int v324;\n  const char *v325;\n  unsigned int v326;\n  const char *v327;\n  unsigned int v328;\n  void (*v329)(_QWORD, const char *, ...);\n  __int64 v330;\n  unsigned int v331;\n  __int64 v332;\n  int v333;\n  unsigned int v334;\n  void (*v335)(_QWORD, const char *, ...);\n  const char *v336;\n  int v337;\n  unsigned int v338;\n  const char *v339;\n  int v340;\n  const char *v341;\n  unsigned int v342;\n  const char *v343;\n  unsigned int v344;\n  void (*v345)(_QWORD, const char *, ...);\n  __int64 v346;\n  unsigned int v347;\n  __int64 v348;\n  int v349;\n  unsigned int v350;\n  void (*v351)(_QWORD, const char *, ...);\n  const char *v352;\n  int v353;\n  unsigned int v354;\n  const char *v356;\n  int v357;\n  const char *v358;\n  unsigned int v359;\n  const char *v360;\n  unsigned int v361;\n  void (*v362)(_QWORD, const char *, ...);\n  __int64 v363;\n  unsigned int v364;\n  __int64 v365;\n  int v366;\n  unsigned int v367;\n  void (*v368)(_QWORD, const char *, ...);\n  const char *v369;\n  int v370;\n  unsigned int v371;\n  char *v372;\n  int v373;\n  const char *v374;\n  int v375;\n  const char *v376;\n  unsigned int v377;\n  char *v378;\n  int v379;\n  const char *v380;\n  unsigned int v381;\n  void (*v382)(_QWORD, const char *, ...);\n  char *v383;\n  __int64 v384;\n  unsigned int v385;\n  __int64 v386;\n  unsigned int v387;\n  void (*v388)(_QWORD, const char *, ...);\n  char *v389;\n  unsigned int v390;\n  __int64 v391;\n  int v392;\n  unsigned int v393;\n  const char *v394;\n  int v395;\n  const char *v396;\n  unsigned int v397;\n  const char *v398;\n  unsigned int v399;\n  void (*v400)(_QWORD, const char *, ...);\n  __int64 v401;\n  unsigned int v402;\n  __int64 v403;\n  int v404;\n  unsigned int v405;\n  void (*v406)(_QWORD, const char *, ...);\n  const char *v407;\n  int v408;\n  unsigned int v409;\n  int v410;\n  int v411;\n  int v412;\n  __int64 v413;\n  __int64 v414;\n  __int64 v415;\n  __int64 v416;\n  int sent_reply;\n  str <span class=\"supfact\">reply_str</span>;\n  str <span class=\"supfact\">pres_domain</span>;\n  str <span class=\"supfact\">pres_user</span>;\n  str <span class=\"supfact\">etag</span>;\n  str <span class=\"supfact\">body</span>;\n  sip_uri <span class=\"supfact\">puri</span>;\n  int __llevel_23;\n  int __llevel;\n  int __llevel_22;\n  int __llevel_21;\n  int __llevel_10;\n  int __llevel_11;\n  int __llevel_19;\n  int __llevel_20;\n  int __llevel_18;\n  int __llevel_14;\n  int __llevel_15;\n  int __llevel_16;\n  int __llevel_17;\n  int __llevel_12;\n  int __llevel_13;\n  int __llevel_9;\n  int __llevel_8;\n  int __llevel_7;\n  int __llevel_2;\n  int __llevel_3;\n  int __llevel_1;\n  int __llevel_5;\n  int __llevel_6;\n  int __llevel_4;\n  int __llevel_0;\n  pres_ev_t *event;\n  int buf_len;\n  char *sphere;\n  int reply_code;\n  str *sender;\n  int etag_gen;\n  int found;\n  hdr_field *hdr;\n  presentity_t *presentity;\n  int lexpire;\n  presentity = Number L;\n  found = Number;\n  etag_gen = Number;\n  <span class=\"supfact\">etag</span>.s = Number L;\n  <span class=\"supfact\">etag</span>.len = Number;\n  sender = Number L;\n  buf_len = Number;\n  event = Number L;\n  sent_reply = Number;\n  sphere = Number L;\n  reply_code = Number;\n  <span class=\"supfact\">reply_str</span> = pu_500_rpl;\n  ++counter;\n  if ((unsigned int)parse_headers(msg, Number, Number L) == Number) {\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      __llevel = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel);\n        if (log_prefix_val) {\n          v2 = (const char *)*log_prefix_val;\n          v3 = *((_DWORD *)log_prefix_val + Number);\n          v4 = (const char *)*((_QWORD *)&log_level_info_0 + Number * __llevel +\n                               Number);\n          v5 = my_pid();\n          fprintf(stderr, String, process_no, v5, v4, v3, v2, String, String);\n        } else {\n          v6 = (const char *)*((_QWORD *)&log_level_info_0 + Number * __llevel +\n                               Number);\n          v7 = my_pid();\n          fprintf(stderr, String, process_no, v7, v6, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v8 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v9 = *log_prefix_val;\n        v10 = *((_DWORD *)log_prefix_val + Number);\n        v11 = *((_QWORD *)&log_level_info_0 + Number * __llevel + Number);\n        v12 = *((_DWORD *)&log_level_info_0 + Number * __llevel + Number);\n        v13 = get_debug_facility(String, Number L);\n        v8(v12 | v13, String, v11, v10, v9, String, String);\n      } else {\n        v14 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v15 = (const char *)*((_QWORD *)&log_level_info_0 + Number * __llevel +\n                              Number);\n        v16 = *((_DWORD *)&log_level_info_0 + Number * __llevel + Number);\n        v17 = get_debug_facility(String, Number L);\n        v14(v16 | v17, String, v15, String, String);\n      }\n      --dprint_crit;\n    }\n    reply_code = Number;\n    <span class=\"supfact\">reply_str</span> = pu_400a_rpl;\n  error:\n    if (!sent_reply &&\n        (int)send_error_reply(\n            msg, (unsigned int)reply_code, <span class=\"supfact\">reply_str</span>.s,\n            *(_QWORD *)&<span class=\"supfact\">reply_str</span>.len) < Number &&\n        (int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      __llevel_23 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_23);\n        if (log_prefix_val) {\n          v394 = (const char *)*log_prefix_val;\n          v395 = *((_DWORD *)log_prefix_val + Number);\n          v396 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_23 + Number);\n          v397 = my_pid();\n          fprintf(stderr, String, process_no, v397, v396, v395, v394, String,\n                  String);\n        } else {\n          v398 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_23 + Number);\n          v399 = my_pid();\n          fprintf(stderr, String, process_no, v399, v398, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v400 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v401 = *log_prefix_val;\n        v402 = *((_DWORD *)log_prefix_val + Number);\n        v403 = *((_QWORD *)&log_level_info_0 + Number * __llevel_23 + Number);\n        v404 = *((_DWORD *)&log_level_info_0 + Number * __llevel_23 + Number);\n        v405 = get_debug_facility(String, Number L);\n        v400(v404 | v405, String, v403, v402, v401, String, String);\n      } else {\n        v406 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v407 = (const char *)*((_QWORD *)&log_level_info_0 +\n                               Number * __llevel_23 + Number);\n        v408 = *((_DWORD *)&log_level_info_0 + Number * __llevel_23 + Number);\n        v409 = get_debug_facility(String, Number L);\n        v406(v408 | v409, String, v407, String, String);\n      }\n      --dprint_crit;\n    }\n    if (presentity)\n      ((void(__fastcall *)(_QWORD, presentity_t *, const char *, const char *,\n                           __int64, const char *))pkg_root[Number])(\n          pkg_root[Number], presentity, String, String, Number L, String);\n    if (<span class=\"supfact\">etag</span>.s)\n      ((void(__fastcall *)(_QWORD, char *, const char *, const char *, __int64,\n                           const char *))pkg_root[Number])(\n          pkg_root[Number], <span class=\"supfact\">etag</span>.s, String, String, Number L,\n          String);\n    if (sender)\n      ((void(__fastcall *)(_QWORD, str *, const char *, const char *, __int64,\n                           const char *))pkg_root[Number])(\n          pkg_root[Number], sender, String, String, Number L, String);\n    if (sphere)\n      ((void(__fastcall *)(_QWORD, char *, const char *, const char *, __int64,\n                           const char *))pkg_root[Number])(\n          pkg_root[Number], sphere, String, String, Number L, String);\n    return Number;\n  }\n  memset(&<span class=\"supfact\">body</span>, Number, sizeof(<span class=\"supfact\">body</span>));\n  if (!msg->event || msg->event-><span class=\"supfact\">body</span>.len <= Number)\n    goto LABEL_365;\n  if (!msg->event->parsed && (int)parse_event(msg->event) < Number) {\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      __llevel_0 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_0);\n        if (log_prefix_val) {\n          v18 = (const char *)*log_prefix_val;\n          v19 = *((_DWORD *)log_prefix_val + Number);\n          v20 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                Number * __llevel_0 + Number);\n          v21 = my_pid();\n          fprintf(stderr, String, process_no, v21, v20, v19, v18, String,\n                  String);\n        } else {\n          v22 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                Number * __llevel_0 + Number);\n          v23 = my_pid();\n          fprintf(stderr, String, process_no, v23, v22, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v24 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v25 = *log_prefix_val;\n        v26 = *((_DWORD *)log_prefix_val + Number);\n        v27 = *((_QWORD *)&log_level_info_0 + Number * __llevel_0 + Number);\n        v28 = *((_DWORD *)&log_level_info_0 + Number * __llevel_0 + Number);\n        v29 = get_debug_facility(String, Number L);\n        v24(v28 | v29, String, v27, v26, v25, String, String);\n      } else {\n        v30 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v31 = (const char *)*((_QWORD *)&log_level_info_0 +\n                              Number * __llevel_0 + Number);\n        v32 = *((_DWORD *)&log_level_info_0 + Number * __llevel_0 + Number);\n        v33 = get_debug_facility(String, Number L);\n        v30(v32 | v33, String, v31, String, String);\n      }\n      --dprint_crit;\n    }\n    reply_code = Number;\n    <span class=\"supfact\">reply_str</span> = pu_400a_rpl;\n    goto error;\n  }\n  event = (pres_ev_t *)search_event(msg->event->parsed);\n  if (!event) {\n  LABEL_365:\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      __llevel_21 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_21);\n        if (log_prefix_val) {\n          v356 = (const char *)*log_prefix_val;\n          v357 = *((_DWORD *)log_prefix_val + Number);\n          v358 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_21 + Number);\n          v359 = my_pid();\n          fprintf(stderr, String, process_no, v359, v358, v357, v356, String,\n                  String);\n        } else {\n          v360 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_21 + Number);\n          v361 = my_pid();\n          fprintf(stderr, String, process_no, v361, v360, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v362 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v363 = *log_prefix_val;\n        v364 = *((_DWORD *)log_prefix_val + Number);\n        v365 = *((_QWORD *)&log_level_info_0 + Number * __llevel_21 + Number);\n        v366 = *((_DWORD *)&log_level_info_0 + Number * __llevel_21 + Number);\n        v367 = get_debug_facility(String, Number L);\n        v362(v366 | v367, String, v365, v364, v363, String, String);\n      } else {\n        v368 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v369 = (const char *)*((_QWORD *)&log_level_info_0 +\n                               Number * __llevel_21 + Number);\n        v370 = *((_DWORD *)&log_level_info_0 + Number * __llevel_21 + Number);\n        v371 = get_debug_facility(String, Number L);\n        v368(v370 | v371, String, v369, String, String);\n      }\n      --dprint_crit;\n    }\n    if (msg->event && msg->event-><span class=\"supfact\">body</span>.s &&\n        msg->event-><span class=\"supfact\">body</span>.len > Number &&\n        (int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      __llevel_22 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_22);\n        if (log_prefix_val) {\n          v372 = msg->event-><span class=\"supfact\">body</span>.s;\n          v373 = msg->event-><span class=\"supfact\">body</span>.len;\n          v374 = (const char *)*log_prefix_val;\n          v375 = *((_DWORD *)log_prefix_val + Number);\n          v376 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_22 + Number);\n          v377 = my_pid();\n          fprintf(stderr, String, process_no, v377, v376, v375, v374, String,\n                  String, v373, v372);\n        } else {\n          v378 = msg->event-><span class=\"supfact\">body</span>.s;\n          v379 = msg->event-><span class=\"supfact\">body</span>.len;\n          v380 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_22 + Number);\n          v381 = my_pid();\n          fprintf(stderr, String, process_no, v381, v380, String, String, v379,\n                  v378);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v382 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v383 = msg->event-><span class=\"supfact\">body</span>.s;\n        v384 = (unsigned int)msg->event-><span class=\"supfact\">body</span>.len;\n        v416 = *log_prefix_val;\n        v385 = *((_DWORD *)log_prefix_val + Number);\n        v386 = *((_QWORD *)&log_level_info_0 + Number * __llevel_22 + Number);\n        v412 = *((_DWORD *)&log_level_info_0 + Number * __llevel_22 + Number);\n        v387 = get_debug_facility(String, Number L);\n        v382(v412 | v387, String, v386, v385, v416, String, String, v384, v383);\n      } else {\n        v388 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v389 = msg->event-><span class=\"supfact\">body</span>.s;\n        v390 = msg->event-><span class=\"supfact\">body</span>.len;\n        v391 = *((_QWORD *)&log_level_info_0 + Number * __llevel_22 + Number);\n        v392 = *((_DWORD *)&log_level_info_0 + Number * __llevel_22 + Number);\n        v393 = get_debug_facility(String, Number L);\n        v388(v392 | v393, String, v391, String, String, v390, v389);\n      }\n      --dprint_crit;\n    }\n    reply_code = Number;\n    <span class=\"supfact\">reply_str</span> = pu_489_rpl;\n    goto error;\n  }\n  for (hdr = msg->headers; hdr; hdr = hdr->next) {\n    if (!(unsigned int)cmp_hdrname_strzn(&hdr->name, String, Number L)) {\n      found = Number;\n      break;\n    }\n  }\n  if (found) {\n    if ((int)get_debug_level(String, Number L) > Number && !dprint_crit) {\n      __llevel_4 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_4);\n        if (log_prefix_val) {\n          v80 = (const char *)*log_prefix_val;\n          v81 = *((_DWORD *)log_prefix_val + Number);\n          v82 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                Number * __llevel_4 + Number);\n          v83 = my_pid();\n          fprintf(stderr, String, process_no, v83, v82, v81, v80, String,\n                  String);\n        } else {\n          v84 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                Number * __llevel_4 + Number);\n          v85 = my_pid();\n          fprintf(stderr, String, process_no, v85, v84, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v86 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v87 = *log_prefix_val;\n        v88 = *((_DWORD *)log_prefix_val + Number);\n        v89 = *((_QWORD *)&log_level_info_0 + Number * __llevel_4 + Number);\n        v90 = *((_DWORD *)&log_level_info_0 + Number * __llevel_4 + Number);\n        v91 = get_debug_facility(String, Number L);\n        v86(v90 | v91, String, v89, v88, v87, String, String);\n      } else {\n        v92 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v93 = (const char *)*((_QWORD *)&log_level_info_0 +\n                              Number * __llevel_4 + Number);\n        v94 = *((_DWORD *)&log_level_info_0 + Number * __llevel_4 + Number);\n        v95 = get_debug_facility(String, Number L);\n        v92(v94 | v95, String, v93, String, String);\n      }\n      --dprint_crit;\n    }\n    <span class=\"supfact\">etag</span>.s = (char *)((__int64(__fastcall *)(\n        _QWORD, _QWORD, const char *, const char *, __int64,\n        const char *))pkg_root[Number])(pkg_root[Number],\n                                        hdr-><span class=\"supfact\">body</span>.len + Number,\n                                        String, String, Number L, String);\n    if (!<span class=\"supfact\">etag</span>.s) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        __llevel_5 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color((unsigned int)__llevel_5);\n          if (log_prefix_val) {\n            v96 = (const char *)*log_prefix_val;\n            v97 = *((_DWORD *)log_prefix_val + Number);\n            v98 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                  Number * __llevel_5 + Number);\n            v99 = my_pid();\n            fprintf(stderr, String, process_no, v99, v98, v97, v96, String,\n                    String, String);\n          } else {\n            v100 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                   Number * __llevel_5 + Number);\n            v101 = my_pid();\n            fprintf(stderr, String, process_no, v101, v100, String, String,\n                    String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v102 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v103 = *log_prefix_val;\n          v104 = *((_DWORD *)log_prefix_val + Number);\n          v105 = *((_QWORD *)&log_level_info_0 + Number * __llevel_5 + Number);\n          v106 = *((_DWORD *)&log_level_info_0 + Number * __llevel_5 + Number);\n          v107 = get_debug_facility(String, Number L);\n          v102(v106 | v107, String, v105, v104, v103, String, String, String);\n        } else {\n          v108 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v109 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_5 + Number);\n          v110 = *((_DWORD *)&log_level_info_0 + Number * __llevel_5 + Number);\n          v111 = get_debug_facility(String, Number L);\n          v108(v110 | v111, String, v109, String, String, String);\n        }\n        --dprint_crit;\n      }\n      goto error;\n    }\n    memcpy(<span class=\"supfact\">etag</span>.s, hdr-><span class=\"supfact\">body</span>.s,\n           hdr-><span class=\"supfact\">body</span>.len);\n    <span class=\"supfact\">etag</span>.len = hdr-><span class=\"supfact\">body</span>.len;\n    <span class=\"supfact\">etag</span>.s[<span class=\"supfact\">etag</span>.len] = Number;\n    if ((int)get_debug_level(String, Number L) > Number && !dprint_crit) {\n      __llevel_6 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_6);\n        if (log_prefix_val) {\n          v112 = (const char *)*log_prefix_val;\n          v113 = *((_DWORD *)log_prefix_val + Number);\n          v114 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_6 + Number);\n          v115 = my_pid();\n          fprintf(stderr, String, process_no, v115, v114, v113, v112, String,\n                  String, <span class=\"supfact\">etag</span>.len, <span class=\"supfact\">etag</span>.s);\n        } else {\n          v116 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_6 + Number);\n          v117 = my_pid();\n          fprintf(stderr, String, process_no, v117, v116, String, String,\n                  <span class=\"supfact\">etag</span>.len, <span class=\"supfact\">etag</span>.s);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v118 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v414 = *log_prefix_val;\n        v119 = *((_DWORD *)log_prefix_val + Number);\n        v120 = *((_QWORD *)&log_level_info_0 + Number * __llevel_6 + Number);\n        v411 = *((_DWORD *)&log_level_info_0 + Number * __llevel_6 + Number);\n        v121 = get_debug_facility(String, Number L);\n        v118(v411 | v121, String, v120, v119, v414, String, String,\n             (unsigned int)<span class=\"supfact\">etag</span>.len, <span class=\"supfact\">etag</span>.s);\n      } else {\n        v122 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v123 = *((_QWORD *)&log_level_info_0 + Number * __llevel_6 + Number);\n        v124 = *((_DWORD *)&log_level_info_0 + Number * __llevel_6 + Number);\n        v125 = get_debug_facility(String, Number L);\n        v122(v124 | v125, String, v123, String, String,\n             (unsigned int)<span class=\"supfact\">etag</span>.len, <span class=\"supfact\">etag</span>.s);\n      }\n      --dprint_crit;\n    }\n  } else {\n    if ((int)get_debug_level(String, Number L) > Number && !dprint_crit) {\n      __llevel_1 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_1);\n        if (log_prefix_val) {\n          v34 = (const char *)*log_prefix_val;\n          v35 = *((_DWORD *)log_prefix_val + Number);\n          v36 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                Number * __llevel_1 + Number);\n          v37 = my_pid();\n          fprintf(stderr, String, process_no, v37, v36, v35, v34, String,\n                  String);\n        } else {\n          v38 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                Number * __llevel_1 + Number);\n          v39 = my_pid();\n          fprintf(stderr, String, process_no, v39, v38, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v40 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v41 = *log_prefix_val;\n        v42 = *((_DWORD *)log_prefix_val + Number);\n        v43 = *((_QWORD *)&log_level_info_0 + Number * __llevel_1 + Number);\n        v44 = *((_DWORD *)&log_level_info_0 + Number * __llevel_1 + Number);\n        v45 = get_debug_facility(String, Number L);\n        v40(v44 | v45, String, v43, v42, v41, String, String);\n      } else {\n        v46 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v47 = (const char *)*((_QWORD *)&log_level_info_0 +\n                              Number * __llevel_1 + Number);\n        v48 = *((_DWORD *)&log_level_info_0 + Number * __llevel_1 + Number);\n        v49 = get_debug_facility(String, Number L);\n        v46(v48 | v49, String, v47, String, String);\n      }\n      --dprint_crit;\n    }\n    <span class=\"supfact\">etag</span>.s = (char *)generate_ETag(Number L);\n    if (!<span class=\"supfact\">etag</span>.s) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        __llevel_2 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color((unsigned int)__llevel_2);\n          if (log_prefix_val) {\n            v50 = (const char *)*log_prefix_val;\n            v51 = *((_DWORD *)log_prefix_val + Number);\n            v52 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                  Number * __llevel_2 + Number);\n            v53 = my_pid();\n            fprintf(stderr, String, process_no, v53, v52, v51, v50, String,\n                    String);\n          } else {\n            v54 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                  Number * __llevel_2 + Number);\n            v55 = my_pid();\n            fprintf(stderr, String, process_no, v55, v54, String, String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v56 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v57 = *log_prefix_val;\n          v58 = *((_DWORD *)log_prefix_val + Number);\n          v59 = *((_QWORD *)&log_level_info_0 + Number * __llevel_2 + Number);\n          v60 = *((_DWORD *)&log_level_info_0 + Number * __llevel_2 + Number);\n          v61 = get_debug_facility(String, Number L);\n          v56(v60 | v61, String, v59, v58, v57, String, String);\n        } else {\n          v62 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v63 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                Number * __llevel_2 + Number);\n          v64 = *((_DWORD *)&log_level_info_0 + Number * __llevel_2 + Number);\n          v65 = get_debug_facility(String, Number L);\n          v62(v64 | v65, String, v63, String, String);\n        }\n        --dprint_crit;\n      }\n      goto error;\n    }\n    <span class=\"supfact\">etag</span>.len = strlen(<span class=\"supfact\">etag</span>.s);\n    etag_gen = Number;\n    if ((int)get_debug_level(String, Number L) > Number && !dprint_crit) {\n      __llevel_3 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_3);\n        if (log_prefix_val) {\n          v66 = (const char *)*log_prefix_val;\n          v67 = *((_DWORD *)log_prefix_val + Number);\n          v68 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                Number * __llevel_3 + Number);\n          v69 = my_pid();\n          fprintf(stderr, String, process_no, v69, v68, v67, v66, String,\n                  String, <span class=\"supfact\">etag</span>.len, <span class=\"supfact\">etag</span>.s);\n        } else {\n          v70 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                Number * __llevel_3 + Number);\n          v71 = my_pid();\n          fprintf(stderr, String, process_no, v71, v70, String, String,\n                  <span class=\"supfact\">etag</span>.len, <span class=\"supfact\">etag</span>.s);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v72 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v413 = *log_prefix_val;\n        v73 = *((_DWORD *)log_prefix_val + Number);\n        v74 = *((_QWORD *)&log_level_info_0 + Number * __llevel_3 + Number);\n        v410 = *((_DWORD *)&log_level_info_0 + Number * __llevel_3 + Number);\n        v75 = get_debug_facility(String, Number L);\n        v72(v410 | v75, String, v74, v73, v413, String, String,\n            (unsigned int)<span class=\"supfact\">etag</span>.len, <span class=\"supfact\">etag</span>.s);\n      } else {\n        v76 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v77 = *((_QWORD *)&log_level_info_0 + Number * __llevel_3 + Number);\n        v78 = *((_DWORD *)&log_level_info_0 + Number * __llevel_3 + Number);\n        v79 = get_debug_facility(String, Number L);\n        v76(v78 | v79, String, v77, String, String,\n            (unsigned int)<span class=\"supfact\">etag</span>.len, <span class=\"supfact\">etag</span>.s);\n      }\n      --dprint_crit;\n    }\n  }\n  if (msg->expires && msg->expires-><span class=\"supfact\">body</span>.len > Number) {\n    if (!msg->expires->parsed && (int)parse_expires(msg->expires) < Number) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        __llevel_7 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color((unsigned int)__llevel_7);\n          if (log_prefix_val) {\n            v126 = (const char *)*log_prefix_val;\n            v127 = *((_DWORD *)log_prefix_val + Number);\n            v128 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                   Number * __llevel_7 + Number);\n            v129 = my_pid();\n            fprintf(stderr, String, process_no, v129, v128, v127, v126, String,\n                    String);\n          } else {\n            v130 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                   Number * __llevel_7 + Number);\n            v131 = my_pid();\n            fprintf(stderr, String, process_no, v131, v130, String, String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v132 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v133 = *log_prefix_val;\n          v134 = *((_DWORD *)log_prefix_val + Number);\n          v135 = *((_QWORD *)&log_level_info_0 + Number * __llevel_7 + Number);\n          v136 = *((_DWORD *)&log_level_info_0 + Number * __llevel_7 + Number);\n          v137 = get_debug_facility(String, Number L);\n          v132(v136 | v137, String, v135, v134, v133, String, String);\n        } else {\n          v138 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v139 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_7 + Number);\n          v140 = *((_DWORD *)&log_level_info_0 + Number * __llevel_7 + Number);\n          v141 = get_debug_facility(String, Number L);\n          v138(v140 | v141, String, v139, String, String);\n        }\n        --dprint_crit;\n      }\n      goto error;\n    }\n    lexpire = *((_DWORD *)msg->expires->parsed + Number);\n    if ((int)get_debug_level(String, Number L) > Number && !dprint_crit) {\n      __llevel_8 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_8);\n        if (log_prefix_val) {\n          v142 = (const char *)*log_prefix_val;\n          v143 = *((_DWORD *)log_prefix_val + Number);\n          v144 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_8 + Number);\n          v145 = my_pid();\n          fprintf(stderr, String, process_no, v145, v144, v143, v142, String,\n                  String, (unsigned int)lexpire);\n        } else {\n          v146 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_8 + Number);\n          v147 = my_pid();\n          fprintf(stderr, String, process_no, v147, v146, String, String,\n                  (unsigned int)lexpire);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v148 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v149 = *log_prefix_val;\n        v150 = *((_DWORD *)log_prefix_val + Number);\n        v151 = *((_QWORD *)&log_level_info_0 + Number * __llevel_8 + Number);\n        v152 = *((_DWORD *)&log_level_info_0 + Number * __llevel_8 + Number);\n        v153 = get_debug_facility(String, Number L);\n        v148(v152 | v153, String, v151, v150, v149, String, String,\n             (unsigned int)lexpire);\n      } else {\n        v154 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v155 = (const char *)*((_QWORD *)&log_level_info_0 +\n                               Number * __llevel_8 + Number);\n        v156 = *((_DWORD *)&log_level_info_0 + Number * __llevel_8 + Number);\n        v157 = get_debug_facility(String, Number L);\n        v154(v156 | v157, String, v155, String, String, (unsigned int)lexpire);\n      }\n      --dprint_crit;\n    }\n  } else {\n    if ((int)get_debug_level(String, Number L) > Number && !dprint_crit) {\n      __llevel_9 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_9);\n        if (log_prefix_val) {\n          v158 = event->default_expires;\n          v159 = (const char *)*log_prefix_val;\n          v160 = *((_DWORD *)log_prefix_val + Number);\n          v161 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_9 + Number);\n          v162 = my_pid();\n          fprintf(stderr, String, process_no, v162, v161, v160, v159, String,\n                  String, v158);\n        } else {\n          v163 = event->default_expires;\n          v164 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_9 + Number);\n          v165 = my_pid();\n          fprintf(stderr, String, process_no, v165, v164, String, String, v163);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v166 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v167 = event->default_expires;\n        v415 = *log_prefix_val;\n        v168 = *((_DWORD *)log_prefix_val + Number);\n        v169 = *((_QWORD *)&log_level_info_0 + Number * __llevel_9 + Number);\n        v170 = *((_DWORD *)&log_level_info_0 + Number * __llevel_9 + Number);\n        v171 = get_debug_facility(String, Number L);\n        v166(v170 | v171, String, v169, v168, v415, String, String, v167);\n      } else {\n        v172 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v173 = event->default_expires;\n        v174 = (const char *)*((_QWORD *)&log_level_info_0 +\n                               Number * __llevel_9 + Number);\n        v175 = *((_DWORD *)&log_level_info_0 + Number * __llevel_9 + Number);\n        v176 = get_debug_facility(String, Number L);\n        v172(v175 | v176, String, v174, String, String, v173);\n      }\n      --dprint_crit;\n    }\n    lexpire = event->default_expires;\n  }\n  if ((unsigned int)lexpire > max_expires)\n    lexpire = max_expires;\n  if ((int)parse_sip_msg_uri(msg) < Number) {\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      __llevel_10 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_10);\n        if (log_prefix_val) {\n          v177 = (const char *)*log_prefix_val;\n          v178 = *((_DWORD *)log_prefix_val + Number);\n          v179 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_10 + Number);\n          v180 = my_pid();\n          fprintf(stderr, String, process_no, v180, v179, v178, v177, String,\n                  String);\n        } else {\n          v181 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_10 + Number);\n          v182 = my_pid();\n          fprintf(stderr, String, process_no, v182, v181, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v183 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v184 = *log_prefix_val;\n        v185 = *((_DWORD *)log_prefix_val + Number);\n        v186 = *((_QWORD *)&log_level_info_0 + Number * __llevel_10 + Number);\n        v187 = *((_DWORD *)&log_level_info_0 + Number * __llevel_10 + Number);\n        v188 = get_debug_facility(String, Number L);\n        v183(v187 | v188, String, v186, v185, v184, String, String);\n      } else {\n        v189 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v190 = (const char *)*((_QWORD *)&log_level_info_0 +\n                               Number * __llevel_10 + Number);\n        v191 = *((_DWORD *)&log_level_info_0 + Number * __llevel_10 + Number);\n        v192 = get_debug_facility(String, Number L);\n        v189(v191 | v192, String, v190, String, String);\n      }\n      --dprint_crit;\n    }\n    reply_code = Number;\n    <span class=\"supfact\">reply_str</span> = pu_400a_rpl;\n    goto error;\n  }\n  v193 = *(_QWORD *)&msg->parsed_uri.user.len;\n  <span class=\"supfact\">pres_user</span>.s = msg->parsed_uri.user.s;\n  *(_QWORD *)&<span class=\"supfact\">pres_user</span>.len = v193;\n  v194 = *(_QWORD *)&msg->parsed_uri.host.len;\n  <span class=\"supfact\">pres_domain</span>.s = msg->parsed_uri.host.s;\n  *(_QWORD *)&<span class=\"supfact\">pres_domain</span>.len = v194;\n  if (!msg->content_length) {\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      __llevel_11 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_11);\n        if (log_prefix_val) {\n          v195 = (const char *)*log_prefix_val;\n          v196 = *((_DWORD *)log_prefix_val + Number);\n          v197 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_11 + Number);\n          v198 = my_pid();\n          fprintf(stderr, String, process_no, v198, v197, v196, v195, String,\n                  String);\n        } else {\n          v199 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_11 + Number);\n          v200 = my_pid();\n          fprintf(stderr, String, process_no, v200, v199, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v201 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v202 = *log_prefix_val;\n        v203 = *((_DWORD *)log_prefix_val + Number);\n        v204 = *((_QWORD *)&log_level_info_0 + Number * __llevel_11 + Number);\n        v205 = *((_DWORD *)&log_level_info_0 + Number * __llevel_11 + Number);\n        v206 = get_debug_facility(String, Number L);\n        v201(v205 | v206, String, v204, v203, v202, String, String);\n      } else {\n        v207 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v208 = (const char *)*((_QWORD *)&log_level_info_0 +\n                               Number * __llevel_11 + Number);\n        v209 = *((_DWORD *)&log_level_info_0 + Number * __llevel_11 + Number);\n        v210 = get_debug_facility(String, Number L);\n        v207(v209 | v210, String, v208, String, String);\n      }\n      --dprint_crit;\n    }\n    reply_code = Number;\n    <span class=\"supfact\">reply_str</span> = pu_400a_rpl;\n    goto error;\n  }\n  if (msg->content_length->parsed) {\n    <span class=\"supfact\">body</span>.s = (char *)get_body(msg);\n    if (!<span class=\"supfact\">body</span>.s) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        __llevel_13 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color((unsigned int)__llevel_13);\n          if (log_prefix_val) {\n            v227 = (const char *)*log_prefix_val;\n            v228 = *((_DWORD *)log_prefix_val + Number);\n            v229 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                   Number * __llevel_13 + Number);\n            v230 = my_pid();\n            fprintf(stderr, String, process_no, v230, v229, v228, v227, String,\n                    String);\n          } else {\n            v231 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                   Number * __llevel_13 + Number);\n            v232 = my_pid();\n            fprintf(stderr, String, process_no, v232, v231, String, String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v233 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v234 = *log_prefix_val;\n          v235 = *((_DWORD *)log_prefix_val + Number);\n          v236 = *((_QWORD *)&log_level_info_0 + Number * __llevel_13 + Number);\n          v237 = *((_DWORD *)&log_level_info_0 + Number * __llevel_13 + Number);\n          v238 = get_debug_facility(String, Number L);\n          v233(v237 | v238, String, v236, v235, v234, String, String);\n        } else {\n          v239 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v240 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_13 + Number);\n          v241 = *((_DWORD *)&log_level_info_0 + Number * __llevel_13 + Number);\n          v242 = get_debug_facility(String, Number L);\n          v239(v241 | v242, String, v240, String, String);\n        }\n        --dprint_crit;\n      }\n      reply_code = Number;\n      <span class=\"supfact\">reply_str</span> = pu_400a_rpl;\n      goto error;\n    }\n    <span class=\"supfact\">body</span>.len = (int)msg->content_length->parsed;\n    if (sphere_enable && event->evp->type == EVENT_PRESENCE &&\n        (unsigned int)msg->content_type->parsed == Number)\n      sphere = (char *)extract_sphere(<span class=\"supfact\">body</span>.s,\n                                      *(_QWORD *)&<span class=\"supfact\">body</span>.len);\n  } else {\n    <span class=\"supfact\">body</span>.s = Number L;\n    if (etag_gen) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        __llevel_12 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color((unsigned int)__llevel_12);\n          if (log_prefix_val) {\n            v211 = (const char *)*log_prefix_val;\n            v212 = *((_DWORD *)log_prefix_val + Number);\n            v213 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                   Number * __llevel_12 + Number);\n            v214 = my_pid();\n            fprintf(stderr, String, process_no, v214, v213, v212, v211, String,\n                    String);\n          } else {\n            v215 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                   Number * __llevel_12 + Number);\n            v216 = my_pid();\n            fprintf(stderr, String, process_no, v216, v215, String, String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v217 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v218 = *log_prefix_val;\n          v219 = *((_DWORD *)log_prefix_val + Number);\n          v220 = *((_QWORD *)&log_level_info_0 + Number * __llevel_12 + Number);\n          v221 = *((_DWORD *)&log_level_info_0 + Number * __llevel_12 + Number);\n          v222 = get_debug_facility(String, Number L);\n          v217(v221 | v222, String, v220, v219, v218, String, String);\n        } else {\n          v223 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v224 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_12 + Number);\n          v225 = *((_DWORD *)&log_level_info_0 + Number * __llevel_12 + Number);\n          v226 = get_debug_facility(String, Number L);\n          v223(v225 | v226, String, v224, String, String);\n        }\n        --dprint_crit;\n      }\n      reply_code = Number;\n      <span class=\"supfact\">reply_str</span> = pu_400b_rpl;\n      goto error;\n    }\n  }\n  memset(&<span class=\"supfact\">puri</span>, Number, sizeof(<span class=\"supfact\">puri</span>));\n  if (sender_uri) {\n    sender = (str *)((__int64(__fastcall *)(_QWORD, __int64, const char *,\n                                            const char *, __int64,\n                                            const char *))pkg_root[Number])(\n        pkg_root[Number], Number L, String, String, Number L, String);\n    if (!sender) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        __llevel_14 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color((unsigned int)__llevel_14);\n          if (log_prefix_val) {\n            v243 = (const char *)*log_prefix_val;\n            v244 = *((_DWORD *)log_prefix_val + Number);\n            v245 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                   Number * __llevel_14 + Number);\n            v246 = my_pid();\n            fprintf(stderr, String, process_no, v246, v245, v244, v243, String,\n                    String, String);\n          } else {\n            v247 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                   Number * __llevel_14 + Number);\n            v248 = my_pid();\n            fprintf(stderr, String, process_no, v248, v247, String, String,\n                    String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v249 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v250 = *log_prefix_val;\n          v251 = *((_DWORD *)log_prefix_val + Number);\n          v252 = *((_QWORD *)&log_level_info_0 + Number * __llevel_14 + Number);\n          v253 = *((_DWORD *)&log_level_info_0 + Number * __llevel_14 + Number);\n          v254 = get_debug_facility(String, Number L);\n          v249(v253 | v254, String, v252, v251, v250, String, String, String);\n        } else {\n          v255 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v256 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_14 + Number);\n          v257 = *((_DWORD *)&log_level_info_0 + Number * __llevel_14 + Number);\n          v258 = get_debug_facility(String, Number L);\n          v255(v257 | v258, String, v256, String, String, String);\n        }\n        --dprint_crit;\n      }\n      goto error;\n    }\n    if (sender_uri->len >= buf_len - Number) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        __llevel_15 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color((unsigned int)__llevel_15);\n          if (log_prefix_val) {\n            v259 = (const char *)*log_prefix_val;\n            v260 = *((_DWORD *)log_prefix_val + Number);\n            v261 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                   Number * __llevel_15 + Number);\n            v262 = my_pid();\n            fprintf(stderr, String, process_no, v262, v261, v260, v259, String,\n                    String);\n          } else {\n            v263 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                   Number * __llevel_15 + Number);\n            v264 = my_pid();\n            fprintf(stderr, String, process_no, v264, v263, String, String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v265 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v266 = *log_prefix_val;\n          v267 = *((_DWORD *)log_prefix_val + Number);\n          v268 = *((_QWORD *)&log_level_info_0 + Number * __llevel_15 + Number);\n          v269 = *((_DWORD *)&log_level_info_0 + Number * __llevel_15 + Number);\n          v270 = get_debug_facility(String, Number L);\n          v265(v269 | v270, String, v268, v267, v266, String, String);\n        } else {\n          v271 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v272 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_15 + Number);\n          v273 = *((_DWORD *)&log_level_info_0 + Number * __llevel_15 + Number);\n          v274 = get_debug_facility(String, Number L);\n          v271(v273 | v274, String, v272, String, String);\n        }\n        --dprint_crit;\n      }\n      goto error;\n    }\n    strncpy(buf_18310, sender_uri->s, sender_uri->len);\n    buf_len = sender_uri->len;\n    buf_18310[buf_len] = Number;\n    if ((unsigned int)parse_uri(buf_18310, (unsigned int)buf_len,\n                                &<span class=\"supfact\">puri</span>)) {\n      if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n        __llevel_16 = Number;\n        ++dprint_crit;\n        if (log_stderr) {\n          if (log_color)\n            dprint_color((unsigned int)__llevel_16);\n          if (log_prefix_val) {\n            v275 = (const char *)*log_prefix_val;\n            v276 = *((_DWORD *)log_prefix_val + Number);\n            v277 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                   Number * __llevel_16 + Number);\n            v278 = my_pid();\n            fprintf(stderr, String, process_no, v278, v277, v276, v275, String,\n                    String);\n          } else {\n            v279 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                   Number * __llevel_16 + Number);\n            v280 = my_pid();\n            fprintf(stderr, String, process_no, v280, v279, String, String);\n          }\n          if (log_color)\n            dprint_color_reset();\n        } else if (log_prefix_val) {\n          v281 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v282 = *log_prefix_val;\n          v283 = *((_DWORD *)log_prefix_val + Number);\n          v284 = *((_QWORD *)&log_level_info_0 + Number * __llevel_16 + Number);\n          v285 = *((_DWORD *)&log_level_info_0 + Number * __llevel_16 + Number);\n          v286 = get_debug_facility(String, Number L);\n          v281(v285 | v286, String, v284, v283, v282, String, String);\n        } else {\n          v287 = (void (*)(_QWORD, const char *, ...))km_log_func;\n          v288 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_16 + Number);\n          v289 = *((_DWORD *)&log_level_info_0 + Number * __llevel_16 + Number);\n          v290 = get_debug_facility(String, Number L);\n          v287(v289 | v290, String, v288, String, String);\n        }\n        --dprint_crit;\n      }\n      reply_code = Number;\n      <span class=\"supfact\">reply_str</span> = pu_400a_rpl;\n      goto error;\n    }\n    if ((int)get_debug_level(String, Number L) > Number && !dprint_crit) {\n      __llevel_17 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_17);\n        if (log_prefix_val) {\n          v291 = (const char *)*log_prefix_val;\n          v292 = *((_DWORD *)log_prefix_val + Number);\n          v293 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_17 + Number);\n          v294 = my_pid();\n          fprintf(stderr, String, process_no, v294, v293, v292, v291, String,\n                  String, buf_len, buf_18310);\n        } else {\n          v295 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_17 + Number);\n          v296 = my_pid();\n          fprintf(stderr, String, process_no, v296, v295, String, String,\n                  buf_len, buf_18310);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v297 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v298 = *log_prefix_val;\n        v299 = *((_DWORD *)log_prefix_val + Number);\n        v300 = *((_QWORD *)&log_level_info_0 + Number * __llevel_17 + Number);\n        v301 = *((_DWORD *)&log_level_info_0 + Number * __llevel_17 + Number);\n        v302 = get_debug_facility(String, Number L);\n        v297(v301 | v302, String, v300, v299, v298, String, String,\n             (unsigned int)buf_len, buf_18310);\n      } else {\n        v303 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v304 = *((_QWORD *)&log_level_info_0 + Number * __llevel_17 + Number);\n        v305 = *((_DWORD *)&log_level_info_0 + Number * __llevel_17 + Number);\n        v306 = get_debug_facility(String, Number L);\n        v303(v305 | v306, String, v304, String, String, (unsigned int)buf_len,\n             buf_18310);\n      }\n      --dprint_crit;\n    }\n    sender->s = buf_18310;\n    sender->len = buf_len;\n  }\n  if (event->evs_publ_handl && event->evs_publ_handl(msg) < Number) {\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      __llevel_18 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_18);\n        if (log_prefix_val) {\n          v307 = (const char *)*log_prefix_val;\n          v308 = *((_DWORD *)log_prefix_val + Number);\n          v309 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_18 + Number);\n          v310 = my_pid();\n          fprintf(stderr, String, process_no, v310, v309, v308, v307, String,\n                  String);\n        } else {\n          v311 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_18 + Number);\n          v312 = my_pid();\n          fprintf(stderr, String, process_no, v312, v311, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v313 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v314 = *log_prefix_val;\n        v315 = *((_DWORD *)log_prefix_val + Number);\n        v316 = *((_QWORD *)&log_level_info_0 + Number * __llevel_18 + Number);\n        v317 = *((_DWORD *)&log_level_info_0 + Number * __llevel_18 + Number);\n        v318 = get_debug_facility(String, Number L);\n        v313(v317 | v318, String, v316, v315, v314, String, String);\n      } else {\n        v319 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v320 = (const char *)*((_QWORD *)&log_level_info_0 +\n                               Number * __llevel_18 + Number);\n        v321 = *((_DWORD *)&log_level_info_0 + Number * __llevel_18 + Number);\n        v322 = get_debug_facility(String, Number L);\n        v319(v321 | v322, String, v320, String, String);\n      }\n      --dprint_crit;\n    }\n    goto error;\n  }\n  presentity = (presentity_t *)new_presentity(\n      &<span class=\"supfact\">pres_domain</span>, &<span class=\"supfact\">pres_user</span>,\n      (unsigned int)lexpire, event, &<span class=\"supfact\">etag</span>, sender);\n  if (!presentity) {\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      __llevel_19 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_19);\n        if (log_prefix_val) {\n          v323 = (const char *)*log_prefix_val;\n          v324 = *((_DWORD *)log_prefix_val + Number);\n          v325 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_19 + Number);\n          v326 = my_pid();\n          fprintf(stderr, String, process_no, v326, v325, v324, v323, String,\n                  String);\n        } else {\n          v327 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_19 + Number);\n          v328 = my_pid();\n          fprintf(stderr, String, process_no, v328, v327, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v329 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v330 = *log_prefix_val;\n        v331 = *((_DWORD *)log_prefix_val + Number);\n        v332 = *((_QWORD *)&log_level_info_0 + Number * __llevel_19 + Number);\n        v333 = *((_DWORD *)&log_level_info_0 + Number * __llevel_19 + Number);\n        v334 = get_debug_facility(String, Number L);\n        v329(v333 | v334, String, v332, v331, v330, String, String);\n      } else {\n        v335 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v336 = (const char *)*((_QWORD *)&log_level_info_0 +\n                               Number * __llevel_19 + Number);\n        v337 = *((_DWORD *)&log_level_info_0 + Number * __llevel_19 + Number);\n        v338 = get_debug_facility(String, Number L);\n        v335(v337 | v338, String, v336, String, String);\n      }\n      --dprint_crit;\n    }\n    goto error;\n  }\n  if ((int)update_presentity(msg, presentity, &<span class=\"supfact\">body</span>,\n                             (unsigned int)etag_gen, &sent_reply, sphere,\n                             Number L, Number L, Number L) < Number) {\n    if ((int)get_debug_level(String, Number L) >= Number && !dprint_crit) {\n      __llevel_20 = Number;\n      ++dprint_crit;\n      if (log_stderr) {\n        if (log_color)\n          dprint_color((unsigned int)__llevel_20);\n        if (log_prefix_val) {\n          v339 = (const char *)*log_prefix_val;\n          v340 = *((_DWORD *)log_prefix_val + Number);\n          v341 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_20 + Number);\n          v342 = my_pid();\n          fprintf(stderr, String, process_no, v342, v341, v340, v339, String,\n                  String);\n        } else {\n          v343 = (const char *)*((_QWORD *)&log_level_info_0 +\n                                 Number * __llevel_20 + Number);\n          v344 = my_pid();\n          fprintf(stderr, String, process_no, v344, v343, String, String);\n        }\n        if (log_color)\n          dprint_color_reset();\n      } else if (log_prefix_val) {\n        v345 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v346 = *log_prefix_val;\n        v347 = *((_DWORD *)log_prefix_val + Number);\n        v348 = *((_QWORD *)&log_level_info_0 + Number * __llevel_20 + Number);\n        v349 = *((_DWORD *)&log_level_info_0 + Number * __llevel_20 + Number);\n        v350 = get_debug_facility(String, Number L);\n        v345(v349 | v350, String, v348, v347, v346, String, String);\n      } else {\n        v351 = (void (*)(_QWORD, const char *, ...))km_log_func;\n        v352 = (const char *)*((_QWORD *)&log_level_info_0 +\n                               Number * __llevel_20 + Number);\n        v353 = *((_DWORD *)&log_level_info_0 + Number * __llevel_20 + Number);\n        v354 = get_debug_facility(String, Number L);\n        v351(v353 | v354, String, v352, String, String);\n      }\n      --dprint_crit;\n    }\n    goto error;\n  }\n  if (presentity)\n    ((void(__fastcall *)(_QWORD, presentity_t *, const char *, const char *,\n                         __int64, const char *))pkg_root[Number])(\n        pkg_root[Number], presentity, String, String, Number L, String);\n  if (<span class=\"supfact\">etag</span>.s)\n    ((void(__fastcall *)(_QWORD, char *, const char *, const char *, __int64,\n                         const char *))pkg_root[Number])(\n        pkg_root[Number], <span class=\"supfact\">etag</span>.s, String, String, Number L,\n        String);\n  if (sender)\n    ((void(__fastcall *)(_QWORD, str *, const char *, const char *, __int64,\n                         const char *))pkg_root[Number])(\n        pkg_root[Number], sender, String, String, Number L, String);\n  if (sphere)\n    ((void(__fastcall *)(_QWORD, char *, const char *, const char *, __int64,\n                         const char *))pkg_root[Number])(\n        pkg_root[Number], sphere, String, String, Number L, String);\n  return Number;\n}", "var": [{"name": "v418", "type": "__int64", "pred_name": "v89", "ref_name": "reply_str", "ref_type": "struct str { char * s; int len; PADDING (4); }"}, {"name": "v420", "type": "struct pv_value_t { str rs; int ri; int flags; }", "pred_name": "e", "ref_name": "pres_domain", "ref_type": "struct str { char * s; int len; PADDING (4); }"}, {"name": "v421", "type": "struct str { char * s; int len; PADDING (4); }", "pred_name": "s", "ref_name": "pres_user", "ref_type": "struct str { char * s; int len; PADDING (4); }"}, {"name": "v422", "type": "disappear", "pred_name": "", "ref_name": "etag", "ref_type": "struct str { char * s; int len; PADDING (4); }"}, {"name": "s", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "pred_name": "tv", "ref_name": "body", "ref_type": "struct str { char * s; int len; PADDING (4); }"}, {"name": "v425", "type": "disappear", "pred_name": "", "ref_name": "puri", "ref_type": "struct sip_uri { str user; str passwd; str host; str port; str params; str sip_params; str headers; unsigned __int16 port_no; unsigned __int16 proto; uri_type type; uri_flags flags; PADDING (4); str transport; str ttl; str user_param; str maddr; str method; str lr; str r2; str gr; str transport_val; str ttl_val; str user_param_val; str maddr_val; str method_val; str lr_val; str r2_val; str gr_val; }"}], "body_in_train": false}, {"repo_owner": "unicorn-engine", "repo_name": "unicorn", "path": "unicorn-engine/unicorn/904aaa36a58696c7ee8715da741b120c73351093c18ae2a2d2d25057ba8d2a10", "path_in_repo": "unicorn-engine/unicorn/qemu/mips64el-softmmu/memory.o", "objdump": "0000000000004405 <memory_region_present_mips64el>:\n    4405:\t55                   \tpush   %rbp\n    4406:\t48 89 e5             \tmov    %rsp,%rbp\n    4409:\t48 83 ec 60          \tsub    $0x60,%rsp\n    440d:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n    4411:\t48 89 75 a0          \tmov    %rsi,-0x60(%rbp)\n    4415:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    441c:\t00 00 \n    441e:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    4422:\t31 c0                \txor    %eax,%eax\n    4424:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    4428:\t48 8b 55 a0          \tmov    -0x60(%rbp),%rdx\n    442c:\t48 8b 75 a8          \tmov    -0x58(%rbp),%rsi\n    4430:\tb9 01 00 00 00       \tmov    $0x1,%ecx\n    4435:\t48 89 c7             \tmov    %rax,%rdi\n    4438:\te8 00 00 00 00       \tcallq  443d <memory_region_present_mips64el+0x38>\n    443d:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    4441:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n    4445:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n    444a:\t74 0a                \tje     4456 <memory_region_present_mips64el+0x51>\n    444c:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    4450:\t48 3b 45 a8          \tcmp    -0x58(%rbp),%rax\n    4454:\t75 07                \tjne    445d <memory_region_present_mips64el+0x58>\n    4456:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    445b:\teb 11                \tjmp    446e <memory_region_present_mips64el+0x69>\n    445d:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    4461:\t48 89 c7             \tmov    %rax,%rdi\n    4464:\te8 00 00 00 00       \tcallq  4469 <memory_region_present_mips64el+0x64>\n    4469:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    446e:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    4472:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n    4479:\t00 00 \n    447b:\t74 05                \tje     4482 <memory_region_present_mips64el+0x7d>\n    447d:\te8 00 00 00 00       \tcallq  4482 <memory_region_present_mips64el+0x7d>\n    4482:\tc9                   \tleaveq \n    4483:\tc3                   \tretq   ", "code_s": "__int64 __fastcall memory_region_present_mips64el(__int64 a1, __int64 a2) {\n  __int64 v3[Number];\n  v3[Number] = __readfsqword(Number);\n  memory_region_find_mips64el(v3, a1, a2, Number L);\n  if (!v3[Number] || v3[Number] == a1)\n    return Number L;\n  memory_region_unref_mips64el(v3[Number]);\n  return Number L;\n}", "code_t": "bool __cdecl memory_region_present_mips64el(MemoryRegion_0 *container,\n                                            hwaddr addr) {\n  MemoryRegionSection_0 <span class=\"supfact\">v3</span>;\n  unsigned __int64 v4;\n  v4 = __readfsqword(Number);\n  memory_region_find_mips64el(&<span class=\"supfact\">v3</span>, container, addr, Number);\n  if (!<span class=\"supfact\">v3</span>.mr || <span class=\"supfact\">v3</span>.mr == container)\n    return Number;\n  memory_region_unref_mips64el(<span class=\"supfact\">v3</span>.mr);\n  return Number;\n}", "var": [{"name": "v3", "type": "struct MemoryRegionSection_0 { MemoryRegion_0 * mr; AddressSpace_0 * address_space; hwaddr offset_within_region; Int128_0 size; hwaddr offset_within_address_space; bool readonly; PADDING (7); }", "pred_name": "v3", "ref_name": "v3", "ref_type": "struct MemoryRegionSection_0 { MemoryRegion_0 * mr; AddressSpace_0 * address_space; hwaddr offset_within_region; Int128_0 size; hwaddr offset_within_address_space; bool readonly; PADDING (7); }"}], "body_in_train": false}, {"repo_owner": "pathscale", "repo_name": "nvopencc", "path": "pathscale/nvopencc/94aa531d0efd6b1073acb4bd6e6e916746870d66421b2adf8f96c13c2dc39629", "path_in_repo": "pathscale/nvopencc/src/targia3264_nvisa_rel/gccfe/gnu/cppexp.o", "objdump": "0000000000000702 <cpp_interpret_integer>:\n     702:\t55                   \tpush   %rbp\n     703:\t48 89 e5             \tmov    %rsp,%rbp\n     706:\t48 83 ec 70          \tsub    $0x70,%rsp\n     70a:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n     70e:\t48 89 75 a0          \tmov    %rsi,-0x60(%rbp)\n     712:\t48 89 55 98          \tmov    %rdx,-0x68(%rbp)\n     716:\t89 4d 94             \tmov    %ecx,-0x6c(%rbp)\n     719:\t48 c7 45 b8 00 00 00 \tmovq   $0x0,-0x48(%rbp)\n     720:\t00 \n     721:\t48 c7 45 b0 00 00 00 \tmovq   $0x0,-0x50(%rbp)\n     728:\t00 \n     729:\t8b 45 94             \tmov    -0x6c(%rbp),%eax\n     72c:\t25 00 10 00 00       \tand    $0x1000,%eax\n     731:\t85 c0                \ttest   %eax,%eax\n     733:\t0f 95 c0             \tsetne  %al\n     736:\t88 45 c0             \tmov    %al,-0x40(%rbp)\n     739:\tc6 45 c1 00          \tmovb   $0x0,-0x3f(%rbp)\n     73d:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n     741:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     745:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     749:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n     74d:\t8b 40 08             \tmov    0x8(%rax),%eax\n     750:\t89 c2                \tmov    %eax,%edx\n     752:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     756:\t48 01 d0             \tadd    %rdx,%rax\n     759:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n     75d:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n     761:\t8b 40 08             \tmov    0x8(%rax),%eax\n     764:\t83 f8 01             \tcmp    $0x1,%eax\n     767:\t75 18                \tjne    781 <cpp_interpret_integer+0x7f>\n     769:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     76d:\t0f b6 00             \tmovzbl (%rax),%eax\n     770:\t0f b6 c0             \tmovzbl %al,%eax\n     773:\t83 e8 30             \tsub    $0x30,%eax\n     776:\t48 98                \tcltq   \n     778:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n     77c:\te9 11 02 00 00       \tjmpq   992 <cpp_interpret_integer+0x290>\n     781:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n     785:\t48 8b 80 f8 02 00 00 \tmov    0x2f8(%rax),%rax\n     78c:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n     790:\tc7 45 ec 0a 00 00 00 \tmovl   $0xa,-0x14(%rbp)\n     797:\tc7 45 d4 00 00 00 00 \tmovl   $0x0,-0x2c(%rbp)\n     79e:\tc6 45 eb 00          \tmovb   $0x0,-0x15(%rbp)\n     7a2:\t8b 45 94             \tmov    -0x6c(%rbp),%eax\n     7a5:\t25 00 0f 00 00       \tand    $0xf00,%eax\n     7aa:\t3d 00 04 00 00       \tcmp    $0x400,%eax\n     7af:\t75 0e                \tjne    7bf <cpp_interpret_integer+0xbd>\n     7b1:\tc7 45 ec 08 00 00 00 \tmovl   $0x8,-0x14(%rbp)\n     7b8:\t48 83 45 f8 01       \taddq   $0x1,-0x8(%rbp)\n     7bd:\teb 1b                \tjmp    7da <cpp_interpret_integer+0xd8>\n     7bf:\t8b 45 94             \tmov    -0x6c(%rbp),%eax\n     7c2:\t25 00 0f 00 00       \tand    $0xf00,%eax\n     7c7:\t3d 00 02 00 00       \tcmp    $0x200,%eax\n     7cc:\t75 0c                \tjne    7da <cpp_interpret_integer+0xd8>\n     7ce:\tc7 45 ec 10 00 00 00 \tmovl   $0x10,-0x14(%rbp)\n     7d5:\t48 83 45 f8 02       \taddq   $0x2,-0x8(%rbp)\n     7da:\t48 c7 45 f0 ff ff ff \tmovq   $0xffffffffffffffff,-0x10(%rbp)\n     7e1:\tff \n     7e2:\t48 83 7d d8 3f       \tcmpq   $0x3f,-0x28(%rbp)\n     7e7:\t77 13                \tja     7fc <cpp_interpret_integer+0xfa>\n     7e9:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     7ed:\tba 40 00 00 00       \tmov    $0x40,%edx\n     7f2:\t29 c2                \tsub    %eax,%edx\n     7f4:\t89 d0                \tmov    %edx,%eax\n     7f6:\t89 c1                \tmov    %eax,%ecx\n     7f8:\t48 d3 6d f0          \tshrq   %cl,-0x10(%rbp)\n     7fc:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n     7ff:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n     803:\t48 29 c2             \tsub    %rax,%rdx\n     806:\t48 89 d0             \tmov    %rdx,%rax\n     809:\t48 83 c0 01          \tadd    $0x1,%rax\n     80d:\t8b 7d ec             \tmov    -0x14(%rbp),%edi\n     810:\tba 00 00 00 00       \tmov    $0x0,%edx\n     815:\t48 f7 f7             \tdiv    %rdi\n     818:\t48 83 c0 01          \tadd    $0x1,%rax\n     81c:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     820:\te9 cd 00 00 00       \tjmpq   8f2 <cpp_interpret_integer+0x1f0>\n     825:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     829:\t0f b6 00             \tmovzbl (%rax),%eax\n     82c:\t0f b6 c0             \tmovzbl %al,%eax\n     82f:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n     832:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n     835:\t0f b6 c0             \tmovzbl %al,%eax\n     838:\t89 c0                \tmov    %eax,%eax\n     83a:\t0f b7 84 00 00 00 00 \tmovzwl 0x0(%rax,%rax,1),%eax\n     841:\t00 \n     842:\t0f b7 c0             \tmovzwl %ax,%eax\n     845:\t83 e0 04             \tand    $0x4,%eax\n     848:\t85 c0                \ttest   %eax,%eax\n     84a:\t75 2a                \tjne    876 <cpp_interpret_integer+0x174>\n     84c:\t83 7d ec 10          \tcmpl   $0x10,-0x14(%rbp)\n     850:\t0f 85 aa 00 00 00    \tjne    900 <cpp_interpret_integer+0x1fe>\n     856:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n     859:\t0f b6 c0             \tmovzbl %al,%eax\n     85c:\t89 c0                \tmov    %eax,%eax\n     85e:\t0f b7 84 00 00 00 00 \tmovzwl 0x0(%rax,%rax,1),%eax\n     865:\t00 \n     866:\t0f b7 c0             \tmovzwl %ax,%eax\n     869:\t25 00 01 00 00       \tand    $0x100,%eax\n     86e:\t85 c0                \ttest   %eax,%eax\n     870:\t0f 84 8a 00 00 00    \tje     900 <cpp_interpret_integer+0x1fe>\n     876:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n     879:\t0f b6 c0             \tmovzbl %al,%eax\n     87c:\t48 98                \tcltq   \n     87e:\t0f b6 80 00 00 00 00 \tmovzbl 0x0(%rax),%eax\n     885:\t0f b6 c0             \tmovzbl %al,%eax\n     888:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n     88b:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     88f:\t48 39 45 f0          \tcmp    %rax,-0x10(%rbp)\n     893:\t76 17                \tjbe    8ac <cpp_interpret_integer+0x1aa>\n     895:\t48 8b 55 b8          \tmov    -0x48(%rbp),%rdx\n     899:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n     89c:\t48 0f af d0          \timul   %rax,%rdx\n     8a0:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n     8a3:\t48 01 d0             \tadd    %rdx,%rax\n     8a6:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n     8aa:\teb 41                \tjmp    8ed <cpp_interpret_integer+0x1eb>\n     8ac:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n     8af:\t8b 75 d4             \tmov    -0x2c(%rbp),%esi\n     8b2:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n     8b6:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n     8ba:\t48 83 ec 08          \tsub    $0x8,%rsp\n     8be:\tff 75 c0             \tpushq  -0x40(%rbp)\n     8c1:\tff 75 b8             \tpushq  -0x48(%rbp)\n     8c4:\tff 75 b0             \tpushq  -0x50(%rbp)\n     8c7:\t48 89 c7             \tmov    %rax,%rdi\n     8ca:\te8 e4 00 00 00       \tcallq  9b3 <append_digit>\n     8cf:\t48 83 c4 20          \tadd    $0x20,%rsp\n     8d3:\t0f b6 45 c1          \tmovzbl -0x3f(%rbp),%eax\n     8d7:\t0a 45 eb             \tor     -0x15(%rbp),%al\n     8da:\t0f b6 c0             \tmovzbl %al,%eax\n     8dd:\t85 c0                \ttest   %eax,%eax\n     8df:\t0f 95 c0             \tsetne  %al\n     8e2:\t88 45 eb             \tmov    %al,-0x15(%rbp)\n     8e5:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n     8ec:\t00 \n     8ed:\t48 83 45 f8 01       \taddq   $0x1,-0x8(%rbp)\n     8f2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     8f6:\t48 3b 45 e0          \tcmp    -0x20(%rbp),%rax\n     8fa:\t0f 82 25 ff ff ff    \tjb     825 <cpp_interpret_integer+0x123>\n     900:\t80 7d eb 00          \tcmpb   $0x0,-0x15(%rbp)\n     904:\t74 1d                \tje     923 <cpp_interpret_integer+0x221>\n     906:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n     90a:\tba 00 00 00 00       \tmov    $0x0,%edx\n     90f:\tbe 02 00 00 00       \tmov    $0x2,%esi\n     914:\t48 89 c7             \tmov    %rax,%rdi\n     917:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     91c:\te8 00 00 00 00       \tcallq  921 <cpp_interpret_integer+0x21f>\n     921:\teb 6f                \tjmp    992 <cpp_interpret_integer+0x290>\n     923:\t0f b6 45 c0          \tmovzbl -0x40(%rbp),%eax\n     927:\t83 f0 01             \txor    $0x1,%eax\n     92a:\t84 c0                \ttest   %al,%al\n     92c:\t74 64                \tje     992 <cpp_interpret_integer+0x290>\n     92e:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n     932:\t0f b6 80 e9 02 00 00 \tmovzbl 0x2e9(%rax),%eax\n     939:\t84 c0                \ttest   %al,%al\n     93b:\t74 0c                \tje     949 <cpp_interpret_integer+0x247>\n     93d:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n     941:\t0f b6 40 10          \tmovzbl 0x10(%rax),%eax\n     945:\t84 c0                \ttest   %al,%al\n     947:\t75 49                \tjne    992 <cpp_interpret_integer+0x290>\n     949:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     94d:\t48 83 ec 08          \tsub    $0x8,%rsp\n     951:\tff 75 c0             \tpushq  -0x40(%rbp)\n     954:\tff 75 b8             \tpushq  -0x48(%rbp)\n     957:\tff 75 b0             \tpushq  -0x50(%rbp)\n     95a:\t48 89 c7             \tmov    %rax,%rdi\n     95d:\te8 d8 15 00 00       \tcallq  1f3a <num_positive>\n     962:\t48 83 c4 20          \tadd    $0x20,%rsp\n     966:\t83 f0 01             \txor    $0x1,%eax\n     969:\t84 c0                \ttest   %al,%al\n     96b:\t74 25                \tje     992 <cpp_interpret_integer+0x290>\n     96d:\t83 7d ec 0a          \tcmpl   $0xa,-0x14(%rbp)\n     971:\t75 1b                \tjne    98e <cpp_interpret_integer+0x28c>\n     973:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n     977:\tba 00 00 00 00       \tmov    $0x0,%edx\n     97c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     981:\t48 89 c7             \tmov    %rax,%rdi\n     984:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     989:\te8 00 00 00 00       \tcallq  98e <cpp_interpret_integer+0x28c>\n     98e:\tc6 45 c0 01          \tmovb   $0x1,-0x40(%rbp)\n     992:\t48 8b 4d a8          \tmov    -0x58(%rbp),%rcx\n     996:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n     99a:\t48 8b 55 b8          \tmov    -0x48(%rbp),%rdx\n     99e:\t48 89 01             \tmov    %rax,(%rcx)\n     9a1:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n     9a5:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     9a9:\t48 89 41 10          \tmov    %rax,0x10(%rcx)\n     9ad:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n     9b1:\tc9                   \tleaveq \n     9b2:\tc3                   \tretq   ", "code_s": "_QWORD *__fastcall cpp_interpret_integer(_QWORD *a1, __int64 a2, __int64 a3,\n                                         __int16 a4, int a5, int a6) {\n  unsigned __int64 v6;\n  unsigned __int64 v7;\n  __int64 v9;\n  __int64 v10;\n  unsigned __int64 v11;\n  __int64 v12;\n  unsigned int v13;\n  unsigned __int64 v14;\n  unsigned __int64 v15;\n  bool v16;\n  unsigned int v17;\n  unsigned __int64 v18;\n  unsigned __int8 *v19;\n  v9 = a2;\n  v11 = Number L;\n  v10 = Number L;\n  LOBYTE(v12) = (a4 & Number) != Number;\n  BYTE1(v12) = Number;\n  v19 = *(unsigned __int8 **)(a3 + Number);\n  v15 = (unsigned __int64)&v19[*(unsigned int *)(a3 + Number)];\n  if (*(_DWORD *)(a3 + Number) == Number) {\n    v11 = *v19 - Number;\n  } else {\n    v14 = *(_QWORD *)(a2 + Number);\n    v17 = Number;\n    v13 = Number;\n    v16 = Number;\n    if ((a4 & Number) == Number) {\n      v17 = Number;\n      ++v19;\n    } else if ((a4 & Number) == Number) {\n      v17 = Number;\n      v19 += Number;\n    }\n    v18 = Number;\n    if (v14 <= Number) {\n      a4 = Number - v14;\n      v18 >>= Number - (unsigned __int8)v14;\n    }\n    v6 = (v18 - v17 + Number) % v17;\n    v18 = (v18 - v17 + Number) / v17 + Number;\n    while ((unsigned __int64)v19 < v15) {\n      v13 = *v19;\n      if ((*((_WORD *)&sch_istable + (unsigned __int8)v13) & Number) ==\n              Number &&\n          (v17 != Number || (*((_WORD *)&sch_istable + (unsigned __int8)v13) &\n                             Number) == Number)) {\n        break;\n      }\n      v13 = *((unsigned __int8 *)&hex_value + (unsigned __int8)v13);\n      if (v18 <= v11) {\n        LODWORD(a2) = v13;\n        append_digit((unsigned int)&v10, v13, v17, v14, a5, a6, v10, v11, v12);\n        v16 = (unsigned __int8)(v16 | BYTE1(v12)) != Number;\n        v18 = Number L;\n      } else {\n        v6 = v17 * v11;\n        v11 = v6 + v13;\n      }\n      ++v19;\n    }\n    if (v16) {\n      cpp_error(v9, Number L, String);\n    } else if ((unsigned __int8)v12 != Number &&\n               (!*(_BYTE *)(v9 + Number) || !*(_BYTE *)(v9 + Number)) &&\n               (unsigned __int8)num_positive(v14, a2, v6, a4, a5, a6, v10,\n                                             v11) != Number) {\n      if (v17 == Number)\n        cpp_error(v9, Number L, String);\n      LOBYTE(v12) = Number;\n    }\n  }\n  v7 = v11;\n  *a1 = v10;\n  a1[Number] = v7;\n  a1[Number] = v12;\n  return a1;\n}", "code_t": "cpp_num_0 *__cdecl cpp_interpret_integer(cpp_num_0 *retstr, cpp_reader_0 *pfile,\n                                         const cpp_token_0 *token,\n                                         unsigned int type) {\n  cpp_num_part v4;\n  cpp_num_0 <span class=\"supfact\">result</span>;\n  unsigned int c;\n  size_t precision;\n  const uchar *end;\n  bool overflow;\n  unsigned int base;\n  cpp_num_part max;\n  const uchar *p;\n  <span class=\"supfact\">result</span>.low = Number L;\n  <span class=\"supfact\">result</span>.high = Number L;\n  <span class=\"supfact\">result</span>.unsignedp = (type & Number) != Number;\n  <span class=\"supfact\">result</span>.overflow = Number;\n  p = token->val.str.text;\n  end = &p[token->val.str.len];\n  if (token->val.str.len == Number) {\n    <span class=\"supfact\">result</span>.low = *p - Number;\n  } else {\n    precision = pfile->opts.precision;\n    base = Number;\n    c = Number;\n    overflow = Number;\n    if ((type & Number) == Number) {\n      base = Number;\n      ++p;\n    } else if ((type & Number) == Number) {\n      base = Number;\n      p += Number;\n    }\n    max = Number;\n    if (precision <= Number)\n      max >>= Number - (unsigned __int8)precision;\n    max = (max - base + Number) / base + Number;\n    while (p < end) {\n      c = *p;\n      if ((*((_WORD *)&sch_istable + (unsigned __int8)c) & Number) == Number &&\n          (base != Number || (*((_WORD *)&sch_istable + (unsigned __int8)c) &\n                              Number) == Number)) {\n        break;\n      }\n      c = *((unsigned __int8 *)&hex_value + (unsigned __int8)c);\n      if (max <= <span class=\"supfact\">result</span>.low) {\n        append_digit(&<span class=\"supfact\">result</span>, <span class=\"supfact\">result</span>, c, base,\n                     precision);\n        overflow = overflow || <span class=\"supfact\">result</span>.overflow;\n        max = Number L;\n      } else {\n        <span class=\"supfact\">result</span>.low = base * <span class=\"supfact\">result</span>.low + c;\n      }\n      ++p;\n    }\n    if (overflow) {\n      cpp_error(pfile, Number L, String);\n    } else if (!<span class=\"supfact\">result</span>.unsignedp &&\n               (!pfile->opts.traditional || !pfile->state.in_directive) &&\n               !num_positive(<span class=\"supfact\">result</span>, precision)) {\n      if (base == Number)\n        cpp_error(pfile, Number L, String);\n      <span class=\"supfact\">result</span>.unsignedp = Number;\n    }\n  }\n  v4 = <span class=\"supfact\">result</span>.low;\n  retstr->high = <span class=\"supfact\">result</span>.high;\n  retstr->low = v4;\n  *(_QWORD *)&retstr->unsignedp = *(_QWORD *)&<span class=\"supfact\">result</span>.unsignedp;\n  return retstr;\n}", "var": [{"name": "v10", "type": "disappear", "pred_name": "", "ref_name": "result", "ref_type": "struct cpp_num_0 { cpp_num_part high; cpp_num_part low; bool unsignedp; bool overflow; PADDING (6); }"}], "body_in_train": false}, {"repo_owner": "krysmopompas", "repo_name": "OpenFrameworks-ng", "path": "krysmopompas/OpenFrameworks-ng/d013e894aa3761392793944f11adf0fb1441a9620d94e81e690380afbadc963a", "path_in_repo": "krysmopompas/OpenFrameworks-ng/extern/trees/poco/Foundation/testsuite/obj/Linux/x86_64/debug_shared/StringTokenizerTest.o", "objdump": "000000000000c40e <_ZN19StringTokenizerTest5suiteEv>:\n    c40e:\t55                   \tpush   %rbp\n    c40f:\t48 89 e5             \tmov    %rsp,%rbp\n    c412:\t41 56                \tpush   %r14\n    c414:\t41 55                \tpush   %r13\n    c416:\t41 54                \tpush   %r12\n    c418:\t53                   \tpush   %rbx\n    c419:\t48 83 ec 70          \tsub    $0x70,%rsp\n    c41d:\t48 8d 45 af          \tlea    -0x51(%rbp),%rax\n    c421:\t48 89 c7             \tmov    %rax,%rdi\n    c424:\te8 00 00 00 00       \tcallq  c429 <_ZN19StringTokenizerTest5suiteEv+0x1b>\n    c429:\t48 8d 55 af          \tlea    -0x51(%rbp),%rdx\n    c42d:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n    c431:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # c438 <_ZN19StringTokenizerTest5suiteEv+0x2a>\n    c438:\t48 89 c7             \tmov    %rax,%rdi\n    c43b:\te8 00 00 00 00       \tcallq  c440 <_ZN19StringTokenizerTest5suiteEv+0x32>\n    c440:\t4c 8d 75 80          \tlea    -0x80(%rbp),%r14\n    c444:\tbf 40 00 00 00       \tmov    $0x40,%edi\n    c449:\te8 00 00 00 00       \tcallq  c44e <_ZN19StringTokenizerTest5suiteEv+0x40>\n    c44e:\t48 89 c3             \tmov    %rax,%rbx\n    c451:\t4c 89 f6             \tmov    %r14,%rsi\n    c454:\t48 89 df             \tmov    %rbx,%rdi\n    c457:\te8 00 00 00 00       \tcallq  c45c <_ZN19StringTokenizerTest5suiteEv+0x4e>\n    c45c:\t48 89 5d d8          \tmov    %rbx,-0x28(%rbp)\n    c460:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n    c464:\t48 89 c7             \tmov    %rax,%rdi\n    c467:\te8 00 00 00 00       \tcallq  c46c <_ZN19StringTokenizerTest5suiteEv+0x5e>\n    c46c:\t48 8d 45 af          \tlea    -0x51(%rbp),%rax\n    c470:\t48 89 c7             \tmov    %rax,%rdi\n    c473:\te8 00 00 00 00       \tcallq  c478 <_ZN19StringTokenizerTest5suiteEv+0x6a>\n    c478:\t48 8d 45 d7          \tlea    -0x29(%rbp),%rax\n    c47c:\t48 89 c7             \tmov    %rax,%rdi\n    c47f:\te8 00 00 00 00       \tcallq  c484 <_ZN19StringTokenizerTest5suiteEv+0x76>\n    c484:\t48 8d 55 d7          \tlea    -0x29(%rbp),%rdx\n    c488:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    c48c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # c493 <_ZN19StringTokenizerTest5suiteEv+0x85>\n    c493:\t48 89 c7             \tmov    %rax,%rdi\n    c496:\te8 00 00 00 00       \tcallq  c49b <_ZN19StringTokenizerTest5suiteEv+0x8d>\n    c49b:\t48 8d 5d b0          \tlea    -0x50(%rbp),%rbx\n    c49f:\tbf 40 00 00 00       \tmov    $0x40,%edi\n    c4a4:\te8 00 00 00 00       \tcallq  c4a9 <_ZN19StringTokenizerTest5suiteEv+0x9b>\n    c4a9:\t48 89 c7             \tmov    %rax,%rdi\n    c4ac:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c4b3 <_ZN19StringTokenizerTest5suiteEv+0xa5>\n    c4b3:\t49 89 c4             \tmov    %rax,%r12\n    c4b6:\t41 bd 00 00 00 00    \tmov    $0x0,%r13d\n    c4bc:\t4c 89 e2             \tmov    %r12,%rdx\n    c4bf:\t4c 89 e9             \tmov    %r13,%rcx\n    c4c2:\t48 89 de             \tmov    %rbx,%rsi\n    c4c5:\t48 89 bd 78 ff ff ff \tmov    %rdi,-0x88(%rbp)\n    c4cc:\te8 00 00 00 00       \tcallq  c4d1 <_ZN19StringTokenizerTest5suiteEv+0xc3>\n    c4d1:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c4d5:\t48 8b b5 78 ff ff ff \tmov    -0x88(%rbp),%rsi\n    c4dc:\t48 89 c7             \tmov    %rax,%rdi\n    c4df:\te8 00 00 00 00       \tcallq  c4e4 <_ZN19StringTokenizerTest5suiteEv+0xd6>\n    c4e4:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    c4e8:\t48 89 c7             \tmov    %rax,%rdi\n    c4eb:\te8 00 00 00 00       \tcallq  c4f0 <_ZN19StringTokenizerTest5suiteEv+0xe2>\n    c4f0:\t48 8d 45 d7          \tlea    -0x29(%rbp),%rax\n    c4f4:\t48 89 c7             \tmov    %rax,%rdi\n    c4f7:\te8 00 00 00 00       \tcallq  c4fc <_ZN19StringTokenizerTest5suiteEv+0xee>\n    c4fc:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c500:\te9 81 00 00 00       \tjmpq   c586 <_ZN19StringTokenizerTest5suiteEv+0x178>\n    c505:\t49 89 c4             \tmov    %rax,%r12\n    c508:\tbe 40 00 00 00       \tmov    $0x40,%esi\n    c50d:\t48 89 df             \tmov    %rbx,%rdi\n    c510:\te8 00 00 00 00       \tcallq  c515 <_ZN19StringTokenizerTest5suiteEv+0x107>\n    c515:\t4c 89 e3             \tmov    %r12,%rbx\n    c518:\teb 03                \tjmp    c51d <_ZN19StringTokenizerTest5suiteEv+0x10f>\n    c51a:\t48 89 c3             \tmov    %rax,%rbx\n    c51d:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n    c521:\t48 89 c7             \tmov    %rax,%rdi\n    c524:\te8 00 00 00 00       \tcallq  c529 <_ZN19StringTokenizerTest5suiteEv+0x11b>\n    c529:\teb 03                \tjmp    c52e <_ZN19StringTokenizerTest5suiteEv+0x120>\n    c52b:\t48 89 c3             \tmov    %rax,%rbx\n    c52e:\t48 8d 45 af          \tlea    -0x51(%rbp),%rax\n    c532:\t48 89 c7             \tmov    %rax,%rdi\n    c535:\te8 00 00 00 00       \tcallq  c53a <_ZN19StringTokenizerTest5suiteEv+0x12c>\n    c53a:\t48 89 d8             \tmov    %rbx,%rax\n    c53d:\t48 89 c7             \tmov    %rax,%rdi\n    c540:\te8 00 00 00 00       \tcallq  c545 <_ZN19StringTokenizerTest5suiteEv+0x137>\n    c545:\t48 89 c3             \tmov    %rax,%rbx\n    c548:\tbe 40 00 00 00       \tmov    $0x40,%esi\n    c54d:\t48 8b bd 78 ff ff ff \tmov    -0x88(%rbp),%rdi\n    c554:\te8 00 00 00 00       \tcallq  c559 <_ZN19StringTokenizerTest5suiteEv+0x14b>\n    c559:\teb 03                \tjmp    c55e <_ZN19StringTokenizerTest5suiteEv+0x150>\n    c55b:\t48 89 c3             \tmov    %rax,%rbx\n    c55e:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    c562:\t48 89 c7             \tmov    %rax,%rdi\n    c565:\te8 00 00 00 00       \tcallq  c56a <_ZN19StringTokenizerTest5suiteEv+0x15c>\n    c56a:\teb 03                \tjmp    c56f <_ZN19StringTokenizerTest5suiteEv+0x161>\n    c56c:\t48 89 c3             \tmov    %rax,%rbx\n    c56f:\t48 8d 45 d7          \tlea    -0x29(%rbp),%rax\n    c573:\t48 89 c7             \tmov    %rax,%rdi\n    c576:\te8 00 00 00 00       \tcallq  c57b <_ZN19StringTokenizerTest5suiteEv+0x16d>\n    c57b:\t48 89 d8             \tmov    %rbx,%rax\n    c57e:\t48 89 c7             \tmov    %rax,%rdi\n    c581:\te8 00 00 00 00       \tcallq  c586 <_ZN19StringTokenizerTest5suiteEv+0x178>\n    c586:\t48 83 c4 70          \tadd    $0x70,%rsp\n    c58a:\t5b                   \tpop    %rbx\n    c58b:\t41 5c                \tpop    %r12\n    c58d:\t41 5d                \tpop    %r13\n    c58f:\t41 5e                \tpop    %r14\n    c591:\t5d                   \tpop    %rbp\n    c592:\tc3                   \tretq   ", "code_s": "CppUnit TestSuite *__fastcall StringTokenizerTest\nsuite(StringTokenizerTest *this) {\n  CppUnit TestSuite *v1;\n  CppUnit Test *v3;\n  char v4[Number];\n  char v5;\n  char v6[Number];\n  char v7;\n  CppUnit TestSuite *v8;\n  std allocator<char> allocator(&v5);\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(v4, String, &v5);\n  v1 = (CppUnit TestSuite *)operator new(Number);\n  CppUnit TestSuite TestSuite(v1, v4);\n  v8 = v1;\n  std __cxx11 basic_string<char, std char_traits<char>,\n                           std allocator<char>> ~basic_string(v4);\n  std allocator<char> ~allocator(&v5);\n  std allocator<char> allocator(&v7);\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(v6, String, &v7);\n  v3 = (CppUnit Test *)operator new(Number);\n  CppUnit TestCaller<StringTokenizerTest> TestCaller(\n      v3, v6, StringTokenizerTest testStringTokenizer, Number L);\n  CppUnit TestSuite addTest(v8, v3);\n  std __cxx11 basic_string<char, std char_traits<char>,\n                           std allocator<char>> ~basic_string(v6);\n  std allocator<char> ~allocator(&v7);\n  return v8;\n}", "code_t": "CppUnit Test *__cdecl StringTokenizerTest suite() {\n  CppUnit TestSuite *v0;\n  CppUnit TestCaller<StringTokenizerTest> *test;\n  std string <span class=\"supfact\">name</span>;\n  char v4;\n  std string <span class=\"supfact\">v5</span>;\n  char v6;\n  CppUnit TestSuite *pSuite;\n  std allocator<char> allocator(&v4);\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(&<span class=\"supfact\">name</span>, String, &v4);\n  v0 = (CppUnit TestSuite *)operator new(Number);\n  CppUnit TestSuite TestSuite(v0, &<span class=\"supfact\">name</span>);\n  pSuite = v0;\n  std __cxx11\n      basic_string<char, std char_traits<char>,\n                   std allocator<char>> ~basic_string(&<span class=\"supfact\">name</span>);\n  std allocator<char> ~allocator(&v4);\n  std allocator<char> allocator(&v6);\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(&<span class=\"supfact\">v5</span>, String, &v6);\n  test = (CppUnit TestCaller<StringTokenizerTest> *)operator new(Number);\n  CppUnit TestCaller<StringTokenizerTest> TestCaller(\n      test, &<span class=\"supfact\">v5</span>,\n      (CppUnit TestCaller<StringTokenizerTest> TestMethod)\n          StringTokenizerTest testStringTokenizer);\n  CppUnit TestSuite addTest(pSuite, test);\n  std __cxx11\n      basic_string<char, std char_traits<char>,\n                   std allocator<char>> ~basic_string(&<span class=\"supfact\">v5</span>);\n  std allocator<char> ~allocator(&v6);\n  return pSuite;\n}", "var": [{"name": "v4", "type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }", "pred_name": "name", "ref_name": "name", "ref_type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}, {"name": "v6", "type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }", "pred_name": "v5", "ref_name": "v5", "ref_type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}], "body_in_train": false}, {"repo_owner": "db-coder", "repo_name": "DBInternals", "path": "db-coder/DBInternals/7271c255f72f736f980375f8b6841092f11226e75ed8e058133cfe1b77b66eed", "path_in_repo": "db-coder/DBInternals/amlayer/a.out", "objdump": "000000000040266d <createIntLayer>:\n  40266d:\t55                   \tpush   %rbp\n  40266e:\t48 89 e5             \tmov    %rsp,%rbp\n  402671:\t48 81 ec 70 02 00 00 \tsub    $0x270,%rsp\n  402678:\t48 89 bd b8 fd ff ff \tmov    %rdi,-0x248(%rbp)\n  40267f:\t89 f0                \tmov    %esi,%eax\n  402681:\t89 95 b0 fd ff ff    \tmov    %edx,-0x250(%rbp)\n  402687:\t89 8d ac fd ff ff    \tmov    %ecx,-0x254(%rbp)\n  40268d:\t4c 89 85 a0 fd ff ff \tmov    %r8,-0x260(%rbp)\n  402694:\t4c 89 8d 98 fd ff ff \tmov    %r9,-0x268(%rbp)\n  40269b:\t88 85 b4 fd ff ff    \tmov    %al,-0x24c(%rbp)\n  4026a1:\t83 bd ac fd ff ff 01 \tcmpl   $0x1,-0x254(%rbp)\n  4026a8:\t75 70                \tjne    40271a <createIntLayer+0xad>\n  4026aa:\t0f be b5 b4 fd ff ff \tmovsbl -0x24c(%rbp),%esi\n  4026b1:\t48 8d bd e0 fe ff ff \tlea    -0x120(%rbp),%rdi\n  4026b8:\t48 8b 8d a0 fd ff ff \tmov    -0x260(%rbp),%rcx\n  4026bf:\t8b 95 b0 fd ff ff    \tmov    -0x250(%rbp),%edx\n  4026c5:\t48 8b 85 b8 fd ff ff \tmov    -0x248(%rbp),%rax\n  4026cc:\t49 89 f9             \tmov    %rdi,%r9\n  4026cf:\t4c 8d 45 10          \tlea    0x10(%rbp),%r8\n  4026d3:\t48 89 c7             \tmov    %rax,%rdi\n  4026d6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4026db:\te8 2b 03 00 00       \tcallq  402a0b <CreateInt>\n  4026e0:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n  4026e3:\t83 7d e4 01          \tcmpl   $0x1,-0x1c(%rbp)\n  4026e7:\t75 0f                \tjne    4026f8 <createIntLayer+0x8b>\n  4026e9:\t48 8b 85 98 fd ff ff \tmov    -0x268(%rbp),%rax\n  4026f0:\tc7 00 01 00 00 00    \tmovl   $0x1,(%rax)\n  4026f6:\teb 0d                \tjmp    402705 <createIntLayer+0x98>\n  4026f8:\t48 8b 85 98 fd ff ff \tmov    -0x268(%rbp),%rax\n  4026ff:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n  402705:\t48 8d 85 e0 fe ff ff \tlea    -0x120(%rbp),%rax\n  40270c:\t48 89 45 18          \tmov    %rax,0x18(%rbp)\n  402710:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  402715:\te9 ef 02 00 00       \tjmpq   402a09 <createIntLayer+0x39c>\n  40271a:\t48 8d 85 e0 fe ff ff \tlea    -0x120(%rbp),%rax\n  402721:\t8b 00                \tmov    (%rax),%eax\n  402723:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  402726:\t8b 85 ac fd ff ff    \tmov    -0x254(%rbp),%eax\n  40272c:\t8d 48 ff             \tlea    -0x1(%rax),%ecx\n  40272f:\t0f be b5 b4 fd ff ff \tmovsbl -0x24c(%rbp),%esi\n  402736:\t4c 8b 8d 98 fd ff ff \tmov    -0x268(%rbp),%r9\n  40273d:\t4c 8b 85 a0 fd ff ff \tmov    -0x260(%rbp),%r8\n  402744:\t8b 95 b0 fd ff ff    \tmov    -0x250(%rbp),%edx\n  40274a:\t48 8b 85 b8 fd ff ff \tmov    -0x248(%rbp),%rax\n  402751:\t48 8d bd e0 fe ff ff \tlea    -0x120(%rbp),%rdi\n  402758:\t57                   \tpush   %rdi\n  402759:\t48 8d bd dc fd ff ff \tlea    -0x224(%rbp),%rdi\n  402760:\t57                   \tpush   %rdi\n  402761:\t48 89 c7             \tmov    %rax,%rdi\n  402764:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  402769:\te8 ff fe ff ff       \tcallq  40266d <createIntLayer>\n  40276e:\t48 83 c4 10          \tadd    $0x10,%rsp\n  402772:\t8b 85 ac fd ff ff    \tmov    -0x254(%rbp),%eax\n  402778:\t8d 48 ff             \tlea    -0x1(%rax),%ecx\n  40277b:\t0f be b5 b4 fd ff ff \tmovsbl -0x24c(%rbp),%esi\n  402782:\t4c 8b 8d 98 fd ff ff \tmov    -0x268(%rbp),%r9\n  402789:\t4c 8b 85 a0 fd ff ff \tmov    -0x260(%rbp),%r8\n  402790:\t8b 95 b0 fd ff ff    \tmov    -0x250(%rbp),%edx\n  402796:\t48 8b 85 b8 fd ff ff \tmov    -0x248(%rbp),%rax\n  40279d:\t48 8d bd e0 fd ff ff \tlea    -0x220(%rbp),%rdi\n  4027a4:\t57                   \tpush   %rdi\n  4027a5:\t48 8d bd d8 fd ff ff \tlea    -0x228(%rbp),%rdi\n  4027ac:\t57                   \tpush   %rdi\n  4027ad:\t48 89 c7             \tmov    %rax,%rdi\n  4027b0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4027b5:\te8 b3 fe ff ff       \tcallq  40266d <createIntLayer>\n  4027ba:\t48 83 c4 10          \tadd    $0x10,%rsp\n  4027be:\t48 8b 4d 10          \tmov    0x10(%rbp),%rcx\n  4027c2:\t48 8d 95 c0 fd ff ff \tlea    -0x240(%rbp),%rdx\n  4027c9:\t48 8b 85 b8 fd ff ff \tmov    -0x248(%rbp),%rax\n  4027d0:\t48 89 ce             \tmov    %rcx,%rsi\n  4027d3:\t48 89 c7             \tmov    %rax,%rdi\n  4027d6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4027db:\te8 06 38 00 00       \tcallq  405fe6 <PF_AllocPage>\n  4027e0:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n  4027e3:\t83 7d f0 00          \tcmpl   $0x0,-0x10(%rbp)\n  4027e7:\t74 14                \tje     4027fd <createIntLayer+0x190>\n  4027e9:\tc7 05 9d bf 00 00 fd \tmovl   $0xfffffffd,0xbf9d(%rip)        # 40e790 <AM_Errno>\n  4027f0:\tff ff ff \n  4027f3:\tb8 fd ff ff ff       \tmov    $0xfffffffd,%eax\n  4027f8:\te9 0c 02 00 00       \tjmpq   402a09 <createIntLayer+0x39c>\n  4027fd:\t48 8d 85 cc fd ff ff \tlea    -0x234(%rbp),%rax\n  402804:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  402808:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40280c:\tc6 00 69             \tmovb   $0x69,(%rax)\n  40280f:\t8b 85 b0 fd ff ff    \tmov    -0x250(%rbp),%eax\n  402815:\t89 c2                \tmov    %eax,%edx\n  402817:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40281b:\t66 89 50 06          \tmov    %dx,0x6(%rax)\n  40281f:\t8b 05 bb bd 00 00    \tmov    0xbdbb(%rip),%eax        # 40e5e0 <MAXKEYS>\n  402825:\t89 c2                \tmov    %eax,%edx\n  402827:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40282b:\t66 89 50 04          \tmov    %dx,0x4(%rax)\n  40282f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  402833:\t66 c7 40 02 01 00    \tmovw   $0x1,0x2(%rax)\n  402839:\t48 8b 85 c0 fd ff ff \tmov    -0x240(%rbp),%rax\n  402840:\t48 8d 50 08          \tlea    0x8(%rax),%rdx\n  402844:\t8b 85 dc fd ff ff    \tmov    -0x224(%rbp),%eax\n  40284a:\t89 02                \tmov    %eax,(%rdx)\n  40284c:\t8b 85 b0 fd ff ff    \tmov    -0x250(%rbp),%eax\n  402852:\t48 63 d0             \tmovslq %eax,%rdx\n  402855:\t48 8b 85 c0 fd ff ff \tmov    -0x240(%rbp),%rax\n  40285c:\t48 8d 48 0c          \tlea    0xc(%rax),%rcx\n  402860:\t48 8d 85 e0 fd ff ff \tlea    -0x220(%rbp),%rax\n  402867:\t48 89 c6             \tmov    %rax,%rsi\n  40286a:\t48 89 cf             \tmov    %rcx,%rdi\n  40286d:\te8 2e e9 ff ff       \tcallq  4011a0 <memmove@plt>\n  402872:\t48 8b 85 c0 fd ff ff \tmov    -0x240(%rbp),%rax\n  402879:\t8b 95 b0 fd ff ff    \tmov    -0x250(%rbp),%edx\n  40287f:\t48 63 d2             \tmovslq %edx,%rdx\n  402882:\t48 83 c2 0c          \tadd    $0xc,%rdx\n  402886:\t48 01 c2             \tadd    %rax,%rdx\n  402889:\t8b 85 d8 fd ff ff    \tmov    -0x228(%rbp),%eax\n  40288f:\t89 02                \tmov    %eax,(%rdx)\n  402891:\t48 8b 85 c0 fd ff ff \tmov    -0x240(%rbp),%rax\n  402898:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  40289c:\t48 8b 12             \tmov    (%rdx),%rdx\n  40289f:\t48 89 10             \tmov    %rdx,(%rax)\n  4028a2:\tc7 45 fc 01 00 00 00 \tmovl   $0x1,-0x4(%rbp)\n  4028a9:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n  4028b0:\t8b 85 ac fd ff ff    \tmov    -0x254(%rbp),%eax\n  4028b6:\t8d 48 ff             \tlea    -0x1(%rax),%ecx\n  4028b9:\t0f be b5 b4 fd ff ff \tmovsbl -0x24c(%rbp),%esi\n  4028c0:\t4c 8b 8d 98 fd ff ff \tmov    -0x268(%rbp),%r9\n  4028c7:\t4c 8b 85 a0 fd ff ff \tmov    -0x260(%rbp),%r8\n  4028ce:\t8b 95 b0 fd ff ff    \tmov    -0x250(%rbp),%edx\n  4028d4:\t48 8b 85 b8 fd ff ff \tmov    -0x248(%rbp),%rax\n  4028db:\t48 8d bd e0 fd ff ff \tlea    -0x220(%rbp),%rdi\n  4028e2:\t57                   \tpush   %rdi\n  4028e3:\t48 8d bd d4 fd ff ff \tlea    -0x22c(%rbp),%rdi\n  4028ea:\t57                   \tpush   %rdi\n  4028eb:\t48 89 c7             \tmov    %rax,%rdi\n  4028ee:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4028f3:\te8 75 fd ff ff       \tcallq  40266d <createIntLayer>\n  4028f8:\t48 83 c4 10          \tadd    $0x10,%rsp\n  4028fc:\te9 b6 00 00 00       \tjmpq   4029b7 <createIntLayer+0x34a>\n  402901:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  402905:\t0f b7 50 02          \tmovzwl 0x2(%rax),%edx\n  402909:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40290d:\t0f b7 40 04          \tmovzwl 0x4(%rax),%eax\n  402911:\t66 39 c2             \tcmp    %ax,%dx\n  402914:\t7d 3e                \tjge    402954 <createIntLayer+0x2e7>\n  402916:\t8b 95 d4 fd ff ff    \tmov    -0x22c(%rbp),%edx\n  40291c:\t48 8b 85 c0 fd ff ff \tmov    -0x240(%rbp),%rax\n  402923:\t8b 7d fc             \tmov    -0x4(%rbp),%edi\n  402926:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n  40292a:\t48 8d b5 e0 fd ff ff \tlea    -0x220(%rbp),%rsi\n  402931:\t41 89 f8             \tmov    %edi,%r8d\n  402934:\t48 89 c7             \tmov    %rax,%rdi\n  402937:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  40293c:\te8 92 f1 ff ff       \tcallq  401ad3 <AM_AddtoIntPage>\n  402941:\t48 8b 85 c0 fd ff ff \tmov    -0x240(%rbp),%rax\n  402948:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  40294c:\t48 8b 12             \tmov    (%rdx),%rdx\n  40294f:\t48 89 10             \tmov    %rdx,(%rax)\n  402952:\teb 07                \tjmp    40295b <createIntLayer+0x2ee>\n  402954:\tc7 45 f8 01 00 00 00 \tmovl   $0x1,-0x8(%rbp)\n  40295b:\t8b 85 d4 fd ff ff    \tmov    -0x22c(%rbp),%eax\n  402961:\t89 85 d8 fd ff ff    \tmov    %eax,-0x228(%rbp)\n  402967:\t8b 85 ac fd ff ff    \tmov    -0x254(%rbp),%eax\n  40296d:\t8d 48 ff             \tlea    -0x1(%rax),%ecx\n  402970:\t0f be b5 b4 fd ff ff \tmovsbl -0x24c(%rbp),%esi\n  402977:\t4c 8b 8d 98 fd ff ff \tmov    -0x268(%rbp),%r9\n  40297e:\t4c 8b 85 a0 fd ff ff \tmov    -0x260(%rbp),%r8\n  402985:\t8b 95 b0 fd ff ff    \tmov    -0x250(%rbp),%edx\n  40298b:\t48 8b 85 b8 fd ff ff \tmov    -0x248(%rbp),%rax\n  402992:\t48 8d bd e0 fd ff ff \tlea    -0x220(%rbp),%rdi\n  402999:\t57                   \tpush   %rdi\n  40299a:\t48 8d bd d4 fd ff ff \tlea    -0x22c(%rbp),%rdi\n  4029a1:\t57                   \tpush   %rdi\n  4029a2:\t48 89 c7             \tmov    %rax,%rdi\n  4029a5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4029aa:\te8 be fc ff ff       \tcallq  40266d <createIntLayer>\n  4029af:\t48 83 c4 10          \tadd    $0x10,%rsp\n  4029b3:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n  4029b7:\t48 8b 85 98 fd ff ff \tmov    -0x268(%rbp),%rax\n  4029be:\t8b 00                \tmov    (%rax),%eax\n  4029c0:\t85 c0                \ttest   %eax,%eax\n  4029c2:\t75 0a                \tjne    4029ce <createIntLayer+0x361>\n  4029c4:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n  4029c8:\t0f 84 33 ff ff ff    \tje     402901 <createIntLayer+0x294>\n  4029ce:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n  4029d2:\t8b 08                \tmov    (%rax),%ecx\n  4029d4:\t48 8b 85 b8 fd ff ff \tmov    -0x248(%rbp),%rax\n  4029db:\tba 01 00 00 00       \tmov    $0x1,%edx\n  4029e0:\t89 ce                \tmov    %ecx,%esi\n  4029e2:\t48 89 c7             \tmov    %rax,%rdi\n  4029e5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4029ea:\te8 e7 39 00 00       \tcallq  4063d6 <PF_UnfixPage>\n  4029ef:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n  4029f2:\t83 7d f0 00          \tcmpl   $0x0,-0x10(%rbp)\n  4029f6:\t74 11                \tje     402a09 <createIntLayer+0x39c>\n  4029f8:\tc7 05 8e bd 00 00 fd \tmovl   $0xfffffffd,0xbd8e(%rip)        # 40e790 <AM_Errno>\n  4029ff:\tff ff ff \n  402a02:\tb8 fd ff ff ff       \tmov    $0xfffffffd,%eax\n  402a07:\teb 00                \tjmp    402a09 <createIntLayer+0x39c>\n  402a09:\tc9                   \tleaveq \n  402a0a:\tc3                   \tretq   ", "code_s": "__int64 __fastcall createIntLayer(__int64 a1, char a2, unsigned int a3, int a4,\n                                  __int64 a5, _DWORD *a6, __int64 a7,\n                                  _DWORD *a8) {\n  __int64 result;\n  int v10;\n  __int64 v13;\n  char v14;\n  __int16 v15;\n  __int16 v16;\n  __int16 v17;\n  int v18;\n  int v19;\n  int v20;\n  char src[Number];\n  _DWORD v22[Number];\n  int v23;\n  char *v24;\n  int v25;\n  int v26;\n  int v27;\n  int v28;\n  v10 = a5;\n  if (a4 == Number) {\n    v23 = CreateInt(a1, (unsigned int)a2, a3, a5, &a7, v22);\n    *a6 = v23 == Number;\n    a8 = v22;\n    result = Number L;\n  } else {\n    v26 = v22[Number];\n    createIntLayer(a1, a2, a3, a4 - Number, a5, (_DWORD)a6, (__int64)&v20);\n    createIntLayer(a1, a2, a3, a4 - Number, v10, (_DWORD)a6, (__int64)&v19);\n    v25 = PF_AllocPage(a1, a7, &v13);\n    if (v25) {\n      AM_Errno = Number;\n      result = Number L;\n    } else {\n      v24 = &v14;\n      v14 = Number;\n      v17 = a3;\n      v16 = MAXKEYS;\n      v15 = Number;\n      *(_DWORD *)(v13 + Number) = v20;\n      memmove((void *)(v13 + Number), src, (int)a3);\n      *(_DWORD *)(v13 + (int)a3 + Number L) = v19;\n      *(_QWORD *)v13 = *(_QWORD *)v24;\n      v28 = Number;\n      v27 = Number;\n      createIntLayer(a1, a2, a3, a4 - Number, v10, (_DWORD)a6, (__int64)&v18);\n      while (!*a6 && !v27) {\n        if (*((_WORD *)v24 + Number) >= *((_WORD *)v24 + Number)) {\n          v27 = Number;\n        } else {\n          AM_AddtoIntPage(v13, src, v18, (__int64)v24, v28);\n          *(_QWORD *)v13 = *(_QWORD *)v24;\n        }\n        v19 = v18;\n        createIntLayer(a1, a2, a3, a4 - Number, v10, (_DWORD)a6, (__int64)&v18);\n        ++v28;\n      }\n      result = PF_UnfixPage(a1, *(unsigned int *)a7, Number L);\n      v25 = result;\n      if ((_DWORD)result) {\n        AM_Errno = Number;\n        result = Number L;\n      }\n    }\n  }\n  return result;\n}", "code_t": "int __cdecl createIntLayer(int *outFileDesc, char attrType, int attrLength,\n                           int height, int *globalLeafPagePtr,\n                           int *globalDonePtr, int *curr_node,\n                           char *passValue) {\n  int result;\n  char *newPageBuf;\n  AM_INTHEADER <span class=\"supfact\">newHead</span>;\n  int pageNum2;\n  int pageNum1;\n  int pageNum;\n  char dummyValue[Number];\n  char value[Number];\n  int k;\n  AM_INTHEADER *newHeader;\n  int errVal;\n  int x;\n  int new_page_eof;\n  int offset;\n  if (height == Number) {\n    k = CreateInt((int)outFileDesc, attrType, attrLength, globalLeafPagePtr,\n                  (int *)&curr_node, value);\n    *globalDonePtr = k == Number;\n    passValue = value;\n    result = Number;\n  } else {\n    x = *(_DWORD *)value;\n    createIntLayer(outFileDesc, attrType, attrLength, height - Number,\n                   globalLeafPagePtr, globalDonePtr, &pageNum, value);\n    createIntLayer(outFileDesc, attrType, attrLength, height - Number,\n                   globalLeafPagePtr, globalDonePtr, &pageNum1, dummyValue);\n    errVal = PF_AllocPage(outFileDesc, curr_node, &newPageBuf);\n    if (errVal) {\n      AM_Errno = Number;\n      result = Number;\n    } else {\n      newHeader = &<span class=\"supfact\">newHead</span>;\n      <span class=\"supfact\">newHead</span>.pageType = Number;\n      <span class=\"supfact\">newHead</span>.attrLength = attrLength;\n      <span class=\"supfact\">newHead</span>.maxKeys = MAXKEYS;\n      <span class=\"supfact\">newHead</span>.numKeys = Number;\n      *((_DWORD *)newPageBuf + Number) = pageNum;\n      memmove(newPageBuf + Number, dummyValue, attrLength);\n      *(_DWORD *)&newPageBuf[attrLength + Number] = pageNum1;\n      *(AM_INTHEADER *)newPageBuf = *newHeader;\n      offset = Number;\n      new_page_eof = Number;\n      createIntLayer(outFileDesc, attrType, attrLength, height - Number,\n                     globalLeafPagePtr, globalDonePtr, &pageNum2, dummyValue);\n      while (!*globalDonePtr && !new_page_eof) {\n        if (newHeader->numKeys >= newHeader->maxKeys) {\n          new_page_eof = Number;\n        } else {\n          AM_AddtoIntPage(newPageBuf, dummyValue, pageNum2, newHeader, offset);\n          *(AM_INTHEADER *)newPageBuf = *newHeader;\n        }\n        pageNum1 = pageNum2;\n        createIntLayer(outFileDesc, attrType, attrLength, height - Number,\n                       globalLeafPagePtr, globalDonePtr, &pageNum2, dummyValue);\n        ++offset;\n      }\n      result = PF_UnfixPage(outFileDesc, (unsigned int)*curr_node, Number L);\n      errVal = result;\n      if (result) {\n        AM_Errno = Number;\n        result = Number;\n      }\n    }\n  }\n  return result;\n}", "var": [{"name": "v14", "type": "disappear", "pred_name": "", "ref_name": "newHead", "ref_type": "struct AM_INTHEADER { char pageType; PADDING (1); __int16 numKeys; __int16 maxKeys; __int16 attrLength; }"}], "body_in_train": false}, {"repo_owner": "robamler", "repo_name": "mupdf-nacl", "path": "robamler/mupdf-nacl/adea33aaaccfd8f0b02bafc5420240b0777c470d6f9f5a813d84d28dba0e1c0c", "path_in_repo": "robamler/mupdf-nacl//build/debug/pdf/pdf-shade.o", "objdump": "0000000000001e3f <pdf_load_shading>:\n    1e3f:\t55                   \tpush   %rbp\n    1e40:\t48 89 e5             \tmov    %rsp,%rbp\n    1e43:\t48 83 ec 50          \tsub    $0x50,%rsp\n    1e47:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    1e4b:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n    1e4f:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n    1e53:\t48 8b 55 b8          \tmov    -0x48(%rbp),%rdx\n    1e57:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1e5b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1e60:\t48 89 c7             \tmov    %rax,%rdi\n    1e63:\te8 00 00 00 00       \tcallq  1e68 <pdf_load_shading+0x29>\n    1e68:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1e6c:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    1e71:\t74 09                \tje     1e7c <pdf_load_shading+0x3d>\n    1e73:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1e77:\te9 90 01 00 00       \tjmpq   200c <pdf_load_shading+0x1cd>\n    1e7c:\t48 8b 4d b8          \tmov    -0x48(%rbp),%rcx\n    1e80:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1e84:\tba 01 01 00 00       \tmov    $0x101,%edx\n    1e89:\t48 89 ce             \tmov    %rcx,%rsi\n    1e8c:\t48 89 c7             \tmov    %rax,%rdi\n    1e8f:\te8 00 00 00 00       \tcallq  1e94 <pdf_load_shading+0x55>\n    1e94:\t48 85 c0             \ttest   %rax,%rax\n    1e97:\t0f 84 2c 01 00 00    \tje     1fc9 <pdf_load_shading+0x18a>\n    1e9d:\t48 8b 4d b8          \tmov    -0x48(%rbp),%rcx\n    1ea1:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1ea5:\tba da 00 00 00       \tmov    $0xda,%edx\n    1eaa:\t48 89 ce             \tmov    %rcx,%rsi\n    1ead:\t48 89 c7             \tmov    %rax,%rdi\n    1eb0:\te8 00 00 00 00       \tcallq  1eb5 <pdf_load_shading+0x76>\n    1eb5:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1eb9:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    1ebe:\t74 19                \tje     1ed9 <pdf_load_shading+0x9a>\n    1ec0:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    1ec4:\t48 8b 4d f0          \tmov    -0x10(%rbp),%rcx\n    1ec8:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1ecc:\t48 89 ce             \tmov    %rcx,%rsi\n    1ecf:\t48 89 c7             \tmov    %rax,%rdi\n    1ed2:\te8 00 00 00 00       \tcallq  1ed7 <pdf_load_shading+0x98>\n    1ed7:\teb 21                \tjmp    1efa <pdf_load_shading+0xbb>\n    1ed9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1ee0 <pdf_load_shading+0xa1>\n    1ee0:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 1ee7 <pdf_load_shading+0xa8>\n    1ee7:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    1eeb:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    1eef:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1ef6 <pdf_load_shading+0xb7>\n    1ef6:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    1efa:\t48 8b 4d b8          \tmov    -0x48(%rbp),%rcx\n    1efe:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1f02:\tba 79 00 00 00       \tmov    $0x79,%edx\n    1f07:\t48 89 ce             \tmov    %rcx,%rsi\n    1f0a:\t48 89 c7             \tmov    %rax,%rdi\n    1f0d:\te8 00 00 00 00       \tcallq  1f12 <pdf_load_shading+0xd3>\n    1f12:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1f16:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    1f1b:\t74 50                \tje     1f6d <pdf_load_shading+0x12e>\n    1f1d:\t48 8b 4d f0          \tmov    -0x10(%rbp),%rcx\n    1f21:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1f25:\tba 31 00 00 00       \tmov    $0x31,%edx\n    1f2a:\t48 89 ce             \tmov    %rcx,%rsi\n    1f2d:\t48 89 c7             \tmov    %rax,%rdi\n    1f30:\te8 00 00 00 00       \tcallq  1f35 <pdf_load_shading+0xf6>\n    1f35:\t48 85 c0             \ttest   %rax,%rax\n    1f38:\t75 1d                \tjne    1f57 <pdf_load_shading+0x118>\n    1f3a:\t48 8b 4d f0          \tmov    -0x10(%rbp),%rcx\n    1f3e:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1f42:\tba 6a 01 00 00       \tmov    $0x16a,%edx\n    1f47:\t48 89 ce             \tmov    %rcx,%rsi\n    1f4a:\t48 89 c7             \tmov    %rax,%rdi\n    1f4d:\te8 00 00 00 00       \tcallq  1f52 <pdf_load_shading+0x113>\n    1f52:\t48 85 c0             \ttest   %rax,%rax\n    1f55:\t74 16                \tje     1f6d <pdf_load_shading+0x12e>\n    1f57:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1f5b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1f60:\t48 89 c7             \tmov    %rax,%rdi\n    1f63:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1f68:\te8 00 00 00 00       \tcallq  1f6d <pdf_load_shading+0x12e>\n    1f6d:\t48 8b 4d b8          \tmov    -0x48(%rbp),%rcx\n    1f71:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1f75:\tba 22 01 00 00       \tmov    $0x122,%edx\n    1f7a:\t48 89 ce             \tmov    %rcx,%rsi\n    1f7d:\t48 89 c7             \tmov    %rax,%rdi\n    1f80:\te8 00 00 00 00       \tcallq  1f85 <pdf_load_shading+0x146>\n    1f85:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1f89:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    1f8e:\t75 1b                \tjne    1fab <pdf_load_shading+0x16c>\n    1f90:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1f94:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1f99:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    1f9e:\t48 89 c7             \tmov    %rax,%rdi\n    1fa1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1fa6:\te8 00 00 00 00       \tcallq  1fab <pdf_load_shading+0x16c>\n    1fab:\t48 8d 4d d0          \tlea    -0x30(%rbp),%rcx\n    1faf:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    1fb3:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n    1fb7:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1fbb:\t48 89 c7             \tmov    %rax,%rdi\n    1fbe:\te8 c7 f3 ff ff       \tcallq  138a <pdf_load_shading_dict>\n    1fc3:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1fc7:\teb 1d                \tjmp    1fe6 <pdf_load_shading+0x1a7>\n    1fc9:\t48 8b 55 b8          \tmov    -0x48(%rbp),%rdx\n    1fcd:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n    1fd1:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1fd5:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    1fda:\t48 89 c7             \tmov    %rax,%rdi\n    1fdd:\te8 a8 f3 ff ff       \tcallq  138a <pdf_load_shading_dict>\n    1fe2:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1fe6:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1fea:\t48 89 c7             \tmov    %rax,%rdi\n    1fed:\te8 d1 fd ff ff       \tcallq  1dc3 <fz_shade_size>\n    1ff2:\t89 c1                \tmov    %eax,%ecx\n    1ff4:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    1ff8:\t48 8b 75 b8          \tmov    -0x48(%rbp),%rsi\n    1ffc:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2000:\t48 89 c7             \tmov    %rax,%rdi\n    2003:\te8 00 00 00 00       \tcallq  2008 <pdf_load_shading+0x1c9>\n    2008:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    200c:\tc9                   \tleaveq \n    200d:\tc3                   \tretq   \n", "code_s": "_DWORD *__fastcall pdf_load_shading(__int64 a1, __int64 a2, __int64 a3,\n                                    __m128i a4) {\n  __int64 v5;\n  unsigned int v6;\n  __int64 v8[Number];\n  __int64 v9;\n  _DWORD *v10;\n  v10 = (_DWORD *)pdf_find_item(a1, &fz_drop_shade_imp, a3);\n  if (v10)\n    return v10;\n  if (pdf_dict_get(a1, a3, Number L)) {\n    v9 = pdf_dict_get(a1, a3, Number L);\n    if (v9) {\n      pdf_to_matrix(a1, v9, v8);\n    } else {\n      v5 = fz_identity[Number];\n      v8[Number] = fz_identity[Number];\n      v8[Number] = v5;\n      v8[Number] = fz_identity[Number];\n    }\n    v9 = pdf_dict_get(a1, a3, Number L);\n    if (v9 &&\n        (pdf_dict_get(a1, v9, Number L) || pdf_dict_get(a1, v9, Number L)))\n      fz_warn(a1, String);\n    v9 = pdf_dict_get(a1, a3, Number L);\n    if (!v9)\n      *(double *)a4.m128i_i64 = fz_throw(a1, Number L, String);\n    v10 = pdf_load_shading_dict(a1, a2, v9, v8, a4);\n  } else {\n    v10 = pdf_load_shading_dict(a1, a2, a3, fz_identity, a4);\n  }\n  v6 = fz_shade_size((__int64)v10);\n  pdf_store_item(a1, a3, v10, v6);\n  return v10;\n}", "code_t": "fz_shade *__cdecl pdf_load_shading(fz_context *ctx, pdf_document *doc,\n                                   pdf_obj *dict) {\n  __int64 v4;\n  __int64 v5;\n  fz_matrix <span class=\"supfact\">mat</span>;\n  pdf_obj *obj;\n  fz_shade *shade;\n  shade = (fz_shade *)pdf_find_item(ctx, &fz_drop_shade_imp, dict);\n  if (shade)\n    return shade;\n  if (pdf_dict_get(ctx, dict, Number L)) {\n    obj = (pdf_obj *)pdf_dict_get(ctx, dict, Number L);\n    if (obj) {\n      pdf_to_matrix(ctx, obj, &<span class=\"supfact\">mat</span>);\n    } else {\n      v4 = *(_QWORD *)&fz_identity.c;\n      *(_QWORD *)&<span class=\"supfact\">mat</span>.a = *(_QWORD *)&fz_identity.a;\n      *(_QWORD *)&<span class=\"supfact\">mat</span>.c = v4;\n      *(_QWORD *)&<span class=\"supfact\">mat</span>.e = *(_QWORD *)&fz_identity.e;\n    }\n    obj = (pdf_obj *)pdf_dict_get(ctx, dict, Number L);\n    if (obj &&\n        (pdf_dict_get(ctx, obj, Number L) || pdf_dict_get(ctx, obj, Number L)))\n      fz_warn(ctx, String);\n    obj = (pdf_obj *)pdf_dict_get(ctx, dict, Number L);\n    if (!obj)\n      fz_throw(ctx, Number L, String);\n    shade = pdf_load_shading_dict(ctx, doc, obj, &<span class=\"supfact\">mat</span>);\n  } else {\n    shade = pdf_load_shading_dict(ctx, doc, dict, &fz_identity);\n  }\n  v5 = fz_shade_size(shade);\n  pdf_store_item(ctx, dict, shade, v5);\n  return shade;\n}", "var": [{"name": "v8", "type": "struct fz_matrix { float a; float b; float c; float d; float e; float f; }", "pred_name": "mat", "ref_name": "mat", "ref_type": "struct fz_matrix { float a; float b; float c; float d; float e; float f; }"}], "body_in_train": false}, {"repo_owner": "mr-sven", "repo_name": "ipc-25hdc", "path": "mr-sven/ipc-25hdc/67d40ceb3775222034d7d2d1cdaed83afdabc87a0747ea9d44a24accb102fcf2", "path_in_repo": "mr-sven/ipc-25hdc/source/user/bonnie++/bonnie++", "objdump": "00000000004024c0 <_Z10TestDirOpsiiiiR12CGlobalItems.cold>:\n  4024c0:\t48 8d bd 70 ff ff ff \tlea    -0x90(%rbp),%rdi\n  4024c7:\te8 34 23 00 00       \tcallq  404800 <_ZN9COpenTestD1Ev>\n  4024cc:\t48 89 df             \tmov    %rbx,%rdi\n  4024cf:\te8 6c ff ff ff       \tcallq  402440 <_Unwind_Resume@plt>", "code_s": "void __fastcall __noreturn TestDirOps() {\n  struct _Unwind_Exception *v0;\n  __int64 v1;\n  COpenTest ~COpenTest((COpenTest *)(v1 - Number));\n  _Unwind_Resume(v0);\n}", "code_t": "void __fastcall __noreturn TestDirOps() {\n  struct _Unwind_Exception *<span class=\"supfact\">v0</span>;\n  __int64 v1;\n  COpenTest ~COpenTest((COpenTest *)(v1 - Number));\n  _Unwind_Resume(<span class=\"supfact\">v0</span>);\n}", "var": [{"name": "v0", "type": "__int64", "pred_name": "v0", "ref_name": "v0", "ref_type": "struct _Unwind_Exception *"}], "body_in_train": false}, {"repo_owner": "ashbell", "repo_name": "codes", "path": "ashbell/codes/9970d36a5f5f5dc2212cb3e09cafd5179193e783a0d7d455dac1569130aa39a7", "path_in_repo": "ashbell/codes/net_code/wget/src/url.o", "objdump": "000000000000241a <url_file_name>:\n    241a:\t55                   \tpush   %rbp\n    241b:\t48 89 e5             \tmov    %rsp,%rbp\n    241e:\t53                   \tpush   %rbx\n    241f:\t48 83 ec 78          \tsub    $0x78,%rsp\n    2423:\t48 89 7d 88          \tmov    %rdi,-0x78(%rbp)\n    2427:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    242e:\t00 \n    242f:\t48 c7 45 b0 00 00 00 \tmovq   $0x0,-0x50(%rbp)\n    2436:\t00 \n    2437:\tc7 45 b8 00 00 00 00 \tmovl   $0x0,-0x48(%rbp)\n    243e:\tc7 45 bc 00 00 00 00 \tmovl   $0x0,-0x44(%rbp)\n    2445:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 244c <url_file_name+0x32>\n    244c:\t48 85 c0             \ttest   %rax,%rax\n    244f:\t74 0b                \tje     245c <url_file_name+0x42>\n    2451:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2458 <url_file_name+0x3e>\n    2458:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    245c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2463 <url_file_name+0x49>\n    2463:\t48 85 c0             \ttest   %rax,%rax\n    2466:\t74 16                \tje     247e <url_file_name+0x64>\n    2468:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 246f <url_file_name+0x55>\n    246f:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n    2473:\t48 89 d6             \tmov    %rdx,%rsi\n    2476:\t48 89 c7             \tmov    %rax,%rdi\n    2479:\te8 9c f8 ff ff       \tcallq  1d1a <append_string>\n    247e:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 2485 <url_file_name+0x6b>\n    2485:\t84 c0                \ttest   %al,%al\n    2487:\t0f 84 38 01 00 00    \tje     25c5 <url_file_name+0x1ab>\n    248d:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 2494 <url_file_name+0x7a>\n    2494:\t84 c0                \ttest   %al,%al\n    2496:\t74 46                \tje     24de <url_file_name+0xc4>\n    2498:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    249b:\t85 c0                \ttest   %eax,%eax\n    249d:\t74 11                \tje     24b0 <url_file_name+0x96>\n    249f:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    24a3:\t48 89 c6             \tmov    %rax,%rsi\n    24a6:\tbf 2f 00 00 00       \tmov    $0x2f,%edi\n    24ab:\te8 49 f9 ff ff       \tcallq  1df9 <append_char>\n    24b0:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    24b4:\t8b 40 08             \tmov    0x8(%rax),%eax\n    24b7:\t89 c2                \tmov    %eax,%edx\n    24b9:\t48 89 d0             \tmov    %rdx,%rax\n    24bc:\t48 01 c0             \tadd    %rax,%rax\n    24bf:\t48 01 d0             \tadd    %rdx,%rax\n    24c2:\t48 c1 e0 03          \tshl    $0x3,%rax\n    24c6:\t48 05 00 00 00 00    \tadd    $0x0,%rax\n    24cc:\t48 8b 00             \tmov    (%rax),%rax\n    24cf:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n    24d3:\t48 89 d6             \tmov    %rdx,%rsi\n    24d6:\t48 89 c7             \tmov    %rax,%rdi\n    24d9:\te8 3c f8 ff ff       \tcallq  1d1a <append_string>\n    24de:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 24e5 <url_file_name+0xcb>\n    24e5:\t84 c0                \ttest   %al,%al\n    24e7:\t0f 84 c5 00 00 00    \tje     25b2 <url_file_name+0x198>\n    24ed:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    24f0:\t85 c0                \ttest   %eax,%eax\n    24f2:\t74 11                \tje     2505 <url_file_name+0xeb>\n    24f4:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    24f8:\t48 89 c6             \tmov    %rax,%rsi\n    24fb:\tbf 2f 00 00 00       \tmov    $0x2f,%edi\n    2500:\te8 f4 f8 ff ff       \tcallq  1df9 <append_char>\n    2505:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    2509:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    250d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2512:\t48 89 c7             \tmov    %rax,%rdi\n    2515:\te8 00 00 00 00       \tcallq  251a <url_file_name+0x100>\n    251a:\t85 c0                \ttest   %eax,%eax\n    251c:\t74 19                \tje     2537 <url_file_name+0x11d>\n    251e:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    2522:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    2526:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n    252a:\t48 89 d6             \tmov    %rdx,%rsi\n    252d:\t48 89 c7             \tmov    %rax,%rdi\n    2530:\te8 e5 f7 ff ff       \tcallq  1d1a <append_string>\n    2535:\teb 11                \tjmp    2548 <url_file_name+0x12e>\n    2537:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    253b:\t48 89 c6             \tmov    %rax,%rsi\n    253e:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    2543:\te8 d2 f7 ff ff       \tcallq  1d1a <append_string>\n    2548:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    254c:\t8b 58 18             \tmov    0x18(%rax),%ebx\n    254f:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    2553:\t8b 40 08             \tmov    0x8(%rax),%eax\n    2556:\t89 c7                \tmov    %eax,%edi\n    2558:\te8 00 00 00 00       \tcallq  255d <url_file_name+0x143>\n    255d:\t39 c3                \tcmp    %eax,%ebx\n    255f:\t74 51                \tje     25b2 <url_file_name+0x198>\n    2561:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    2565:\t8b 40 18             \tmov    0x18(%rax),%eax\n    2568:\t48 63 d0             \tmovslq %eax,%rdx\n    256b:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    256f:\t48 89 d6             \tmov    %rdx,%rsi\n    2572:\t48 89 c7             \tmov    %rax,%rdi\n    2575:\te8 00 00 00 00       \tcallq  257a <url_file_name+0x160>\n    257a:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2580 <url_file_name+0x166>\n    2580:\t83 f8 01             \tcmp    $0x1,%eax\n    2583:\t74 07                \tje     258c <url_file_name+0x172>\n    2585:\tba 3a 00 00 00       \tmov    $0x3a,%edx\n    258a:\teb 05                \tjmp    2591 <url_file_name+0x177>\n    258c:\tba 2b 00 00 00       \tmov    $0x2b,%edx\n    2591:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    2595:\t48 89 c6             \tmov    %rax,%rsi\n    2598:\t89 d7                \tmov    %edx,%edi\n    259a:\te8 5a f8 ff ff       \tcallq  1df9 <append_char>\n    259f:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n    25a3:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    25a7:\t48 89 d6             \tmov    %rdx,%rsi\n    25aa:\t48 89 c7             \tmov    %rax,%rdi\n    25ad:\te8 68 f7 ff ff       \tcallq  1d1a <append_string>\n    25b2:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n    25b6:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    25ba:\t48 89 d6             \tmov    %rdx,%rsi\n    25bd:\t48 89 c7             \tmov    %rax,%rdi\n    25c0:\te8 ad fd ff ff       \tcallq  2372 <append_dir_structure>\n    25c5:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    25c8:\t85 c0                \ttest   %eax,%eax\n    25ca:\t74 11                \tje     25dd <url_file_name+0x1c3>\n    25cc:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    25d0:\t48 89 c6             \tmov    %rax,%rsi\n    25d3:\tbf 2f 00 00 00       \tmov    $0x2f,%edi\n    25d8:\te8 1c f8 ff ff       \tcallq  1df9 <append_char>\n    25dd:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    25e1:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n    25e5:\t0f b6 00             \tmovzbl (%rax),%eax\n    25e8:\t84 c0                \ttest   %al,%al\n    25ea:\t74 0a                \tje     25f6 <url_file_name+0x1dc>\n    25ec:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    25f0:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n    25f4:\teb 04                \tjmp    25fa <url_file_name+0x1e0>\n    25f6:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    25fa:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    25fe:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    2602:\t48 89 c7             \tmov    %rax,%rdi\n    2605:\te8 00 00 00 00       \tcallq  260a <url_file_name+0x1f0>\n    260a:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    260e:\t48 8d 34 10          \tlea    (%rax,%rdx,1),%rsi\n    2612:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n    2616:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    261a:\t48 89 d1             \tmov    %rdx,%rcx\n    261d:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2622:\t48 89 c7             \tmov    %rax,%rdi\n    2625:\te8 8d f8 ff ff       \tcallq  1eb7 <append_uri_pathel>\n    262a:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    262e:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    2632:\t48 85 c0             \ttest   %rax,%rax\n    2635:\t74 19                \tje     2650 <url_file_name+0x236>\n    2637:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    263b:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    263f:\t0f b6 00             \tmovzbl (%rax),%eax\n    2642:\t84 c0                \ttest   %al,%al\n    2644:\t74 0a                \tje     2650 <url_file_name+0x236>\n    2646:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    264a:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    264e:\teb 05                \tjmp    2655 <url_file_name+0x23b>\n    2650:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2655:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    2659:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n    265e:\t74 51                \tje     26b1 <url_file_name+0x297>\n    2660:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2666 <url_file_name+0x24c>\n    2666:\t83 f8 01             \tcmp    $0x1,%eax\n    2669:\t74 07                \tje     2672 <url_file_name+0x258>\n    266b:\tba 3f 00 00 00       \tmov    $0x3f,%edx\n    2670:\teb 05                \tjmp    2677 <url_file_name+0x25d>\n    2672:\tba 40 00 00 00       \tmov    $0x40,%edx\n    2677:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    267b:\t48 89 c6             \tmov    %rax,%rsi\n    267e:\t89 d7                \tmov    %edx,%edi\n    2680:\te8 74 f7 ff ff       \tcallq  1df9 <append_char>\n    2685:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    2689:\t48 89 c7             \tmov    %rax,%rdi\n    268c:\te8 00 00 00 00       \tcallq  2691 <url_file_name+0x277>\n    2691:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    2695:\t48 8d 34 10          \tlea    (%rax,%rdx,1),%rsi\n    2699:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n    269d:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    26a1:\t48 89 d1             \tmov    %rdx,%rcx\n    26a4:\tba 01 00 00 00       \tmov    $0x1,%edx\n    26a9:\t48 89 c7             \tmov    %rax,%rdi\n    26ac:\te8 06 f8 ff ff       \tcallq  1eb7 <append_uri_pathel>\n    26b1:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    26b5:\t48 89 c6             \tmov    %rax,%rsi\n    26b8:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    26bd:\te8 37 f7 ff ff       \tcallq  1df9 <append_char>\n    26c2:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    26c6:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    26ca:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 26d1 <url_file_name+0x2b7>\n    26d1:\t84 c0                \ttest   %al,%al\n    26d3:\t75 21                \tjne    26f6 <url_file_name+0x2dc>\n    26d5:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 26dc <url_file_name+0x2c2>\n    26dc:\t84 c0                \ttest   %al,%al\n    26de:\t75 16                \tjne    26f6 <url_file_name+0x2dc>\n    26e0:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 26e7 <url_file_name+0x2cd>\n    26e7:\t84 c0                \ttest   %al,%al\n    26e9:\t75 0b                \tjne    26f6 <url_file_name+0x2dc>\n    26eb:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 26f2 <url_file_name+0x2d8>\n    26f2:\t84 c0                \ttest   %al,%al\n    26f4:\t74 2d                \tje     2723 <url_file_name+0x309>\n    26f6:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    26fa:\t48 89 c7             \tmov    %rax,%rdi\n    26fd:\te8 00 00 00 00       \tcallq  2702 <url_file_name+0x2e8>\n    2702:\t83 f0 01             \txor    $0x1,%eax\n    2705:\t84 c0                \ttest   %al,%al\n    2707:\t75 10                \tjne    2719 <url_file_name+0x2ff>\n    2709:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    270d:\t48 89 c7             \tmov    %rax,%rdi\n    2710:\te8 00 00 00 00       \tcallq  2715 <url_file_name+0x2fb>\n    2715:\t84 c0                \ttest   %al,%al\n    2717:\t74 0a                \tje     2723 <url_file_name+0x309>\n    2719:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    271d:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    2721:\teb 2b                \tjmp    274e <url_file_name+0x334>\n    2723:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2727:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    272c:\t48 89 c7             \tmov    %rax,%rdi\n    272f:\te8 00 00 00 00       \tcallq  2734 <url_file_name+0x31a>\n    2734:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    2738:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    273c:\t48 3b 45 c8          \tcmp    -0x38(%rbp),%rax\n    2740:\t74 0c                \tje     274e <url_file_name+0x334>\n    2742:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2746:\t48 89 c7             \tmov    %rax,%rdi\n    2749:\te8 00 00 00 00       \tcallq  274e <url_file_name+0x334>\n    274e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2752:\t48 83 c4 78          \tadd    $0x78,%rsp\n    2756:\t5b                   \tpop    %rbx\n    2757:\t5d                   \tpop    %rbp\n    2758:\tc3                   \tretq   ", "code_s": "void *__fastcall url_file_name(__int64 a1) {\n  int v1;\n  char v2;\n  char *v3;\n  size_t v4;\n  char *v5;\n  char v6;\n  size_t v7;\n  char v9[Number];\n  void *v10;\n  int v11;\n  int v12;\n  void *ptr;\n  char *v14;\n  char *s;\n  const char *v16;\n  void *v17;\n  v16 = String;\n  v10 = Number L;\n  v11 = Number;\n  v12 = Number;\n  if (*(_QWORD *)&opt[Number])\n    v16 = *(const char **)&opt[Number];\n  if (*(_QWORD *)&opt[Number])\n    append_string(*(const char **)&opt[Number], (__int64)&v10);\n  if (LOBYTE(opt[Number])) {\n    if (BYTE1(opt[Number])) {\n      if (v12)\n        append_char(Number, (__int64)&v10);\n      append_string(supported_schemes[Number * *(unsigned int *)(a1 + Number)],\n                    (__int64)&v10);\n    }\n    if (LOBYTE(opt[Number])) {\n      if (v12)\n        append_char(Number, (__int64)&v10);\n      if (!strcmp(*(const char **)(a1 + Number), String))\n        append_string(String, (__int64)&v10);\n      else\n        append_string(*(const char **)(a1 + Number), (__int64)&v10);\n      v1 = *(_DWORD *)(a1 + Number);\n      if (v1 != (unsigned int)scheme_default_port(*(_DWORD *)(a1 + Number))) {\n        number_to_string(v9, *(int *)(a1 + Number));\n        if (opt[Number] == Number)\n          v2 = Number;\n        else\n          v2 = Number;\n        append_char(v2, (__int64)&v10);\n        append_string(v9, (__int64)&v10);\n      }\n    }\n    append_dir_structure(a1, (__int64)&v10);\n  }\n  if (v12)\n    append_char(Number, (__int64)&v10);\n  if (**(_BYTE **)(a1 + Number))\n    v3 = *(char **)(a1 + Number);\n  else\n    v3 = (char *)v16;\n  s = v3;\n  v4 = strlen(v3);\n  append_uri_pathel(s, &s[v4], Number, (__int64)&v10);\n  if (*(_QWORD *)(a1 + Number) && **(_BYTE **)(a1 + Number))\n    v5 = *(char **)(a1 + Number);\n  else\n    v5 = Number L;\n  v14 = v5;\n  if (v5) {\n    if (opt[Number] == Number)\n      v6 = Number;\n    else\n      v6 = Number;\n    append_char(v6, (__int64)&v10);\n    v7 = strlen(v14);\n    append_uri_pathel(v14, &v14[v7], Number, (__int64)&v10);\n  }\n  append_char(Number, (__int64)&v10);\n  ptr = v10;\n  if ((BYTE2(opt[Number]) || BYTE1(opt[Number]) || HIBYTE(opt[Number]) ||\n       LOBYTE(opt[Number])) &&\n      ((unsigned __int8)file_exists_p(ptr) != Number ||\n       (unsigned __int8)file_non_directory_p(ptr))) {\n    return ptr;\n  }\n  v17 = (void *)unique_name(ptr, Number L);\n  if (v17 != ptr)\n    free(ptr);\n  return v17;\n}", "code_t": "char *__cdecl url_file_name(const url *u) {\n  int v1;\n  char v2;\n  char *v3;\n  size_t v4;\n  char *v5;\n  char v6;\n  size_t v7;\n  char portstr[Number];\n  growable <span class=\"supfact\">fnres</span>;\n  char *fname;\n  const char *u_query;\n  const char *u_file;\n  char *index_filename;\n  char *unique;\n  index_filename = String;\n  <span class=\"supfact\">fnres</span>.base = Number L;\n  <span class=\"supfact\">fnres</span>.size = Number;\n  <span class=\"supfact\">fnres</span>.tail = Number;\n  if (*(_QWORD *)&opt[Number])\n    index_filename = *(char **)&opt[Number];\n  if (*(_QWORD *)&opt[Number])\n    append_string(*(const char **)&opt[Number], &<span class=\"supfact\">fnres</span>);\n  if (LOBYTE(opt[Number])) {\n    if (BYTE1(opt[Number])) {\n      if (<span class=\"supfact\">fnres</span>.tail)\n        append_char(Number, &<span class=\"supfact\">fnres</span>);\n      append_string(supported_schemes[u->scheme].name, &<span class=\"supfact\">fnres</span>);\n    }\n    if (LOBYTE(opt[Number])) {\n      if (<span class=\"supfact\">fnres</span>.tail)\n        append_char(Number, &<span class=\"supfact\">fnres</span>);\n      if (!strcmp(u->host, String))\n        append_string(String, &<span class=\"supfact\">fnres</span>);\n      else\n        append_string(u->host, &<span class=\"supfact\">fnres</span>);\n      v1 = u->port;\n      if (v1 != scheme_default_port(u->scheme)) {\n        number_to_string(portstr, u->port);\n        if (opt[Number] == Number)\n          v2 = Number;\n        else\n          v2 = Number;\n        append_char(v2, &<span class=\"supfact\">fnres</span>);\n        append_string(portstr, &<span class=\"supfact\">fnres</span>);\n      }\n    }\n    append_dir_structure(u, &<span class=\"supfact\">fnres</span>);\n  }\n  if (<span class=\"supfact\">fnres</span>.tail)\n    append_char(Number, &<span class=\"supfact\">fnres</span>);\n  if (*u->file)\n    v3 = u->file;\n  else\n    v3 = index_filename;\n  u_file = v3;\n  v4 = strlen(v3);\n  append_uri_pathel(u_file, &u_file[v4], Number, &<span class=\"supfact\">fnres</span>);\n  if (u->query && *u->query)\n    v5 = u->query;\n  else\n    v5 = Number L;\n  u_query = v5;\n  if (v5) {\n    if (opt[Number] == Number)\n      v6 = Number;\n    else\n      v6 = Number;\n    append_char(v6, &<span class=\"supfact\">fnres</span>);\n    v7 = strlen(u_query);\n    append_uri_pathel(u_query, &u_query[v7], Number, &<span class=\"supfact\">fnres</span>);\n  }\n  append_char(Number, &<span class=\"supfact\">fnres</span>);\n  fname = <span class=\"supfact\">fnres</span>.base;\n  if ((BYTE2(opt[Number]) || BYTE1(opt[Number]) || HIBYTE(opt[Number]) ||\n       LOBYTE(opt[Number])) &&\n      ((unsigned __int8)file_exists_p(fname) != Number ||\n       (unsigned __int8)file_non_directory_p(fname))) {\n    return fname;\n  }\n  unique = (char *)unique_name(fname, Number L);\n  if (unique != fname)\n    free(fname);\n  return unique;\n}", "var": [{"name": "v10", "type": "char *", "pred_name": "arg", "ref_name": "fnres", "ref_type": "struct growable { char * base; int size; int tail; }"}], "body_in_train": false}, {"repo_owner": "Hyperion4ik", "repo_name": "bsd_kernel", "path": "Hyperion4ik/bsd_kernel/45a13c27262dc81f068888215b1a289b9111eb53666e05a57cf192b65f0c94f4", "path_in_repo": "Hyperion4ik/bsd_kernel/contrib/groff/src/roff/troff/env.o", "objdump": "0000000000009590 <_ZN11environment8set_fontE6symbol>:\n    9590:\t8b 57 58             \tmov    0x58(%rdi),%edx\n    9593:\t85 d2                \ttest   %edx,%edx\n    9595:\t74 09                \tje     95a0 <_ZN11environment8set_fontE6symbol+0x10>\n    9597:\tc3                   \tretq   \n    9598:\t0f 1f 84 00 00 00 00 \tnopl   0x0(%rax,%rax,1)\n    959f:\t00 \n    95a0:\t41 54                \tpush   %r12\n    95a2:\t31 d2                \txor    %edx,%edx\n    95a4:\t49 89 f4             \tmov    %rsi,%r12\n    95a7:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    95ac:\t55                   \tpush   %rbp\n    95ad:\t48 89 fd             \tmov    %rdi,%rbp\n    95b0:\t53                   \tpush   %rbx\n    95b1:\t48 83 ec 10          \tsub    $0x10,%rsp\n    95b5:\t48 8d 7c 24 08       \tlea    0x8(%rsp),%rdi\n    95ba:\te8 00 00 00 00       \tcallq  95bf <_ZN11environment8set_fontE6symbol+0x2f>\n    95bf:\t4c 3b 64 24 08       \tcmp    0x8(%rsp),%r12\n    95c4:\t74 0c                \tje     95d2 <_ZN11environment8set_fontE6symbol+0x42>\n    95c6:\t4d 85 e4             \ttest   %r12,%r12\n    95c9:\t74 55                \tje     9620 <_ZN11environment8set_fontE6symbol+0x90>\n    95cb:\t41 80 3c 24 00       \tcmpb   $0x0,(%r12)\n    95d0:\t75 4e                \tjne    9620 <_ZN11environment8set_fontE6symbol+0x90>\n    95d2:\t8b 75 2c             \tmov    0x2c(%rbp),%esi\n    95d5:\t48 8b 7d 40          \tmov    0x40(%rbp),%rdi\n    95d9:\te8 00 00 00 00       \tcallq  95de <_ZN11environment8set_fontE6symbol+0x4e>\n    95de:\t85 c0                \ttest   %eax,%eax\n    95e0:\t78 33                \tjs     9615 <_ZN11environment8set_fontE6symbol+0x85>\n    95e2:\t8b 45 30             \tmov    0x30(%rbp),%eax\n    95e5:\t8b 55 2c             \tmov    0x2c(%rbp),%edx\n    95e8:\t89 45 2c             \tmov    %eax,0x2c(%rbp)\n    95eb:\t89 55 30             \tmov    %edx,0x30(%rbp)\n    95ee:\t8b 85 a0 00 00 00    \tmov    0xa0(%rbp),%eax\n    95f4:\t85 c0                \ttest   %eax,%eax\n    95f6:\t74 1d                \tje     9615 <_ZN11environment8set_fontE6symbol+0x85>\n    95f8:\t8b 5d 30             \tmov    0x30(%rbp),%ebx\n    95fb:\t3b 5d 2c             \tcmp    0x2c(%rbp),%ebx\n    95fe:\t74 15                \tje     9615 <_ZN11environment8set_fontE6symbol+0x85>\n    9600:\te8 00 00 00 00       \tcallq  9605 <_ZN11environment8set_fontE6symbol+0x75>\n    9605:\t39 c3                \tcmp    %eax,%ebx\n    9607:\t74 7f                \tje     9688 <_ZN11environment8set_fontE6symbol+0xf8>\n    9609:\t8b 5d 2c             \tmov    0x2c(%rbp),%ebx\n    960c:\te8 00 00 00 00       \tcallq  9611 <_ZN11environment8set_fontE6symbol+0x81>\n    9611:\t39 c3                \tcmp    %eax,%ebx\n    9613:\t74 5b                \tje     9670 <_ZN11environment8set_fontE6symbol+0xe0>\n    9615:\t48 83 c4 10          \tadd    $0x10,%rsp\n    9619:\t5b                   \tpop    %rbx\n    961a:\t5d                   \tpop    %rbp\n    961b:\t41 5c                \tpop    %r12\n    961d:\tc3                   \tretq   \n    961e:\t66 90                \txchg   %ax,%ax\n    9620:\t8b 45 30             \tmov    0x30(%rbp),%eax\n    9623:\t4c 89 e7             \tmov    %r12,%rdi\n    9626:\t89 45 2c             \tmov    %eax,0x2c(%rbp)\n    9629:\te8 00 00 00 00       \tcallq  962e <_ZN11environment8set_fontE6symbol+0x9e>\n    962e:\t89 c3                \tmov    %eax,%ebx\n    9630:\t85 c0                \ttest   %eax,%eax\n    9632:\t78 1c                \tjs     9650 <_ZN11environment8set_fontE6symbol+0xc0>\n    9634:\t48 8b 7d 40          \tmov    0x40(%rbp),%rdi\n    9638:\t89 de                \tmov    %ebx,%esi\n    963a:\te8 00 00 00 00       \tcallq  963f <_ZN11environment8set_fontE6symbol+0xaf>\n    963f:\t85 c0                \ttest   %eax,%eax\n    9641:\t78 d2                \tjs     9615 <_ZN11environment8set_fontE6symbol+0x85>\n    9643:\t89 5d 30             \tmov    %ebx,0x30(%rbp)\n    9646:\teb a6                \tjmp    95ee <_ZN11environment8set_fontE6symbol+0x5e>\n    9648:\t0f 1f 84 00 00 00 00 \tnopl   0x0(%rax,%rax,1)\n    964f:\t00 \n    9650:\te8 00 00 00 00       \tcallq  9655 <_ZN11environment8set_fontE6symbol+0xc5>\n    9655:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 965c <_ZN11environment8set_fontE6symbol+0xcc>\n    965c:\t4c 89 e6             \tmov    %r12,%rsi\n    965f:\t89 c7                \tmov    %eax,%edi\n    9661:\t89 c3                \tmov    %eax,%ebx\n    9663:\te8 00 00 00 00       \tcallq  9668 <_ZN11environment8set_fontE6symbol+0xd8>\n    9668:\t85 c0                \ttest   %eax,%eax\n    966a:\t75 c8                \tjne    9634 <_ZN11environment8set_fontE6symbol+0xa4>\n    966c:\teb a7                \tjmp    9615 <_ZN11environment8set_fontE6symbol+0x85>\n    966e:\t66 90                \txchg   %ax,%ax\n    9670:\t31 ff                \txor    %edi,%edi\n    9672:\te8 00 00 00 00       \tcallq  9677 <_ZN11environment8set_fontE6symbol+0xe7>\n    9677:\t48 89 ef             \tmov    %rbp,%rdi\n    967a:\t48 89 c6             \tmov    %rax,%rsi\n    967d:\te8 00 00 00 00       \tcallq  9682 <_ZN11environment8set_fontE6symbol+0xf2>\n    9682:\teb 91                \tjmp    9615 <_ZN11environment8set_fontE6symbol+0x85>\n    9684:\t0f 1f 40 00          \tnopl   0x0(%rax)\n    9688:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    968d:\te8 00 00 00 00       \tcallq  9692 <_ZN11environment8set_fontE6symbol+0x102>\n    9692:\t48 89 ef             \tmov    %rbp,%rdi\n    9695:\t48 89 c6             \tmov    %rax,%rsi\n    9698:\te8 00 00 00 00       \tcallq  969d <_ZN11environment8set_fontE6symbol+0x10d>\n    969d:\te9 67 ff ff ff       \tjmpq   9609 <_ZN11environment8set_fontE6symbol+0x79>\n    96a2:\t66 66 2e 0f 1f 84 00 \tdata16 nopw %cs:0x0(%rax,%rax,1)\n    96a9:\t00 00 00 00 \n    96ad:\t0f 1f 00             \tnopl   (%rax)", "code_s": "void __fastcall environment set_font(__int64 a1, _BYTE *a2) {\n  int v2;\n  int v3;\n  int v4;\n  __int64 v5;\n  node *v6;\n  node *v7;\n  __int64 v8[Number];\n  if (*(_DWORD *)(a1 + Number))\n    return;\n  symbol symbol((symbol *)v8, String, Number);\n  if (a2 == (_BYTE *)v8[Number] || a2 && !*a2) {\n    if ((int)font_family make_definite(*(font_family **)(a1 + Number),\n                                       *(_DWORD *)(a1 + Number)) < Number)\n      return;\n    v2 = *(_DWORD *)(a1 + Number);\n    *(_DWORD *)(a1 + Number) = *(_DWORD *)(a1 + Number);\n    *(_DWORD *)(a1 + Number) = v2;\n  } else {\n    *(_DWORD *)(a1 + Number) = *(_DWORD *)(a1 + Number);\n    LODWORD(v5) = symbol_fontno(a2);\n    if ((int)v5 < Number) {\n      v5 = (unsigned int)next_available_font_position();\n      if (!(unsigned int)mount_font(v5, a2, NULL_SYMBOL))\n        return;\n    }\n    if ((int)font_family make_definite(*(font_family **)(a1 + Number), v5) <\n        Number)\n      return;\n    *(_DWORD *)(a1 + Number) = v5;\n  }\n  if (*(_DWORD *)(a1 + Number)) {\n    v3 = *(_DWORD *)(a1 + Number);\n    if (v3 != *(_DWORD *)(a1 + Number)) {\n      if (v3 == (unsigned int)get_underline_fontno()) {\n        v7 = do_underline_special(Number);\n        environment add_node((environment *)a1, v7);\n      }\n      v4 = *(_DWORD *)(a1 + Number);\n      if (v4 == (unsigned int)get_underline_fontno()) {\n        v6 = do_underline_special(Number);\n        environment add_node((environment *)a1, v6);\n      }\n    }\n  }\n}", "code_t": "void __fastcall environment set_font(environment *const this,\n                                     symbol <span class=\"supfact\">nm</span>) {\n  int v2;\n  int v3;\n  int v4;\n  int v5;\n  node *v6;\n  node *v7;\n  symbol <span class=\"supfact\">v8</span>;\n  if (this->interrupted)\n    return;\n  symbol symbol(&<span class=\"supfact\">v8</span>, String, Number);\n  if (<span class=\"supfact\">nm</span>.s == <span class=\"supfact\">v8</span>.s ||\n      <span class=\"supfact\">nm</span>.s && !*<span class=\"supfact\">nm</span>.s) {\n    if ((int)font_family make_definite(this->family, this->prev_fontno) <\n        Number)\n      return;\n    v2 = this->prev_fontno;\n    this->prev_fontno = this->fontno;\n    this->fontno = v2;\n  } else {\n    this->prev_fontno = this->fontno;\n    v5 = symbol_fontno(<span class=\"supfact\">nm</span>);\n    if (v5 < Number) {\n      v5 = next_available_font_position();\n      if (!(unsigned int)mount_font(v5, <span class=\"supfact\">nm</span>, NULL_SYMBOL))\n        return;\n    }\n    if ((int)font_family make_definite(this->family, v5) < Number)\n      return;\n    this->fontno = v5;\n  }\n  if (this->underline_spaces) {\n    v3 = this->fontno;\n    if (v3 != this->prev_fontno) {\n      if (v3 == (unsigned int)get_underline_fontno()) {\n        v7 = (node *)do_underline_special(Number);\n        environment add_node(this, v7);\n      }\n      v4 = this->prev_fontno;\n      if (v4 == (unsigned int)get_underline_fontno()) {\n        v6 = (node *)do_underline_special(Number);\n        environment add_node(this, v6);\n      }\n    }\n  }\n}", "var": [{"name": "a2", "type": "int *", "pred_name": "line", "ref_name": "nm", "ref_type": "struct symbol { const char * s; }"}, {"name": "v8", "type": "__int64[4]", "pred_name": "v8", "ref_name": "v8", "ref_type": "struct symbol { const char * s; }"}], "body_in_train": false}, {"repo_owner": "avble", "repo_name": "natClientEx", "path": "avble/natClientEx/a360aed68a7016f580649d16dacbf62c5871877259fd2ac35a159812917aa7c5", "path_in_repo": "avble/natClientEx/pjproject-2.5/pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/playsine", "objdump": "0000000000469a5a <pj_pool_create_on_buf>:\n  469a5a:\t55                   \tpush   %rbp\n  469a5b:\t48 89 e5             \tmov    %rsp,%rbp\n  469a5e:\t48 83 ec 40          \tsub    $0x40,%rsp\n  469a62:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n  469a66:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n  469a6a:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n  469a6e:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n  469a73:\t74 07                \tje     469a7c <pj_pool_create_on_buf+0x22>\n  469a75:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n  469a7a:\t75 31                \tjne    469aad <pj_pool_create_on_buf+0x53>\n  469a7c:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n  469a81:\t74 07                \tje     469a8a <pj_pool_create_on_buf+0x30>\n  469a83:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n  469a88:\t75 19                \tjne    469aa3 <pj_pool_create_on_buf+0x49>\n  469a8a:\tb9 40 18 48 00       \tmov    $0x481840,%ecx\n  469a8f:\tba 58 00 00 00       \tmov    $0x58,%edx\n  469a94:\tbe f0 17 48 00       \tmov    $0x4817f0,%esi\n  469a99:\tbf 19 18 48 00       \tmov    $0x481819,%edi\n  469a9e:\te8 1d b6 f9 ff       \tcallq  4050c0 <__assert_fail@plt>\n  469aa3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  469aa8:\te9 97 00 00 00       \tjmpq   469b44 <pj_pool_create_on_buf+0xea>\n  469aad:\t8b 05 35 b2 02 00    \tmov    0x2b235(%rip),%eax        # 494ce8 <is_initialized>\n  469ab3:\t85 c0                \ttest   %eax,%eax\n  469ab5:\t75 1a                \tjne    469ad1 <pj_pool_create_on_buf+0x77>\n  469ab7:\te8 dc fe ff ff       \tcallq  469998 <pool_buf_initialize>\n  469abc:\t85 c0                \ttest   %eax,%eax\n  469abe:\t74 07                \tje     469ac7 <pj_pool_create_on_buf+0x6d>\n  469ac0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  469ac5:\teb 7d                \tjmp    469b44 <pj_pool_create_on_buf+0xea>\n  469ac7:\tc7 05 17 b2 02 00 01 \tmovl   $0x1,0x2b217(%rip)        # 494ce8 <is_initialized>\n  469ace:\t00 00 00 \n  469ad1:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  469ad5:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  469ad9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  469add:\t83 e0 07             \tand    $0x7,%eax\n  469ae0:\t48 85 c0             \ttest   %rax,%rax\n  469ae3:\t74 15                \tje     469afa <pj_pool_create_on_buf+0xa0>\n  469ae5:\t48 83 65 f8 07       \tandq   $0x7,-0x8(%rbp)\n  469aea:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  469aee:\t48 01 45 d0          \tadd    %rax,-0x30(%rbp)\n  469af2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  469af6:\t48 29 45 c8          \tsub    %rax,-0x38(%rbp)\n  469afa:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  469afe:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n  469b02:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  469b06:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  469b0a:\t48 8b 05 6f a1 02 00 \tmov    0x2a16f(%rip),%rax        # 493c80 <tls>\n  469b11:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n  469b15:\t48 89 d6             \tmov    %rdx,%rsi\n  469b18:\t48 89 c7             \tmov    %rax,%rdi\n  469b1b:\te8 49 49 ff ff       \tcallq  45e469 <pj_thread_local_set>\n  469b20:\t48 8b 0d 09 9f 02 00 \tmov    0x29f09(%rip),%rcx        # 493a30 <pj_pool_factory_default_policy+0x10>\n  469b27:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n  469b2b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  469b2f:\t49 89 c8             \tmov    %rcx,%r8\n  469b32:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  469b37:\t48 89 c6             \tmov    %rax,%rsi\n  469b3a:\tbf a0 4c 49 00       \tmov    $0x494ca0,%edi\n  469b3f:\te8 c5 af ff ff       \tcallq  464b09 <pj_pool_create_int>\n  469b44:\tc9                   \tleaveq \n  469b45:\tc3                   \tretq   ", "code_s": "_QWORD *__fastcall pj_pool_create_on_buf(const char *a1, __int64 a2,\n                                         unsigned __int64 a3) {\n  _QWORD *result;\n  unsigned __int64 v4;\n  __int64 v5;\n  __int64 v6[Number];\n  __int64 v7;\n  v5 = a2;\n  v4 = a3;\n  if (a2 && a3) {\n    if (!is_initialized_0) {\n      if ((unsigned int)pool_buf_initialize())\n        return Number L;\n      is_initialized_0 = Number;\n    }\n    v7 = a2;\n    if ((a2 & Number) != Number) {\n      v7 &= Number;\n      v5 = v7 + a2;\n      v4 -= v7;\n    }\n    v6[Number] = v5;\n    v6[Number] = v4;\n    pj_thread_local_set(tls, v6);\n    result = pj_pool_create_int((__int64)&stack_based_factory, a1, v4, Number L,\n                                (__int64)off_493A30);\n  } else {\n    if (!a2 || !a3)\n      __assert_fail(String, String, Number, String);\n    result = Number L;\n  }\n  return result;\n}", "code_t": "pj_pool_t_0 *__cdecl pj_pool_create_on_buf(const char *name, void *buf,\n                                           pj_size_t size) {\n  pj_pool_t_0 *result;\n  pj_size_t sizea;\n  char *bufa;\n  creation_param <span class=\"supfact\">param</span>;\n  pj_size_t align_diff;\n  bufa = (char *)buf;\n  sizea = size;\n  if (buf && size) {\n    if (!is_initialized_0) {\n      if (pool_buf_initialize())\n        return Number L;\n      is_initialized_0 = Number;\n    }\n    align_diff = (pj_size_t)buf;\n    if (((unsigned __int8)buf & Number) != Number) {\n      align_diff &= Number;\n      bufa = (char *)buf + align_diff;\n      sizea -= align_diff;\n    }\n    <span class=\"supfact\">param</span>.stack_buf = bufa;\n    <span class=\"supfact\">param</span>.size = sizea;\n    pj_thread_local_set(tls, &<span class=\"supfact\">param</span>);\n    result = pj_pool_create_int(&stack_based_factory, name, sizea, Number L,\n                                pj_pool_factory_default_policy.callback);\n  } else {\n    if (!buf || !size)\n      __assert_fail(String, String, Number, String);\n    result = Number L;\n  }\n  return result;\n}", "var": [{"name": "v6", "type": "struct creation_param { void * stack_buf; pj_size_t size; }", "pred_name": "param", "ref_name": "param", "ref_type": "struct creation_param { void * stack_buf; pj_size_t size; }"}], "body_in_train": false}, {"repo_owner": "jtanx", "repo_name": "libclipboard", "path": "jtanx/libclipboard/a5bb405315a8c227b400ae53e138e8a073501fc810add8d462a26e6d2a667d6c", "path_in_repo": "jtanx/libclipboard/third_party/googletest/googlemock/make/gmock-all.o", "objdump": "0000000000000000 <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t53                   \tpush   %rbx\n   5:\t48 83 ec 28          \tsub    $0x28,%rsp\n   9:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n   d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  11:\t48 85 c0             \ttest   %rax,%rax\n  14:\t74 24                \tje     3a <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0x3a>\n  16:\t48 8b 00             \tmov    (%rax),%rax\n  19:\t48 8b 40 f8          \tmov    -0x8(%rax),%rax\n  1d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  22:\t48 89 c7             \tmov    %rax,%rdi\n  25:\te8 00 00 00 00       \tcallq  2a <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0x2a>\n  2a:\t0f b6 c0             \tmovzbl %al,%eax\n  2d:\t89 c7                \tmov    %eax,%edi\n  2f:\te8 00 00 00 00       \tcallq  34 <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0x34>\n  34:\t84 c0                \ttest   %al,%al\n  36:\t75 47                \tjne    7f <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0x7f>\n  38:\teb 05                \tjmp    3f <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0x3f>\n  3a:\te8 00 00 00 00       \tcallq  3f <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0x3f>\n  3f:\t48 8d 45 ec          \tlea    -0x14(%rbp),%rax\n  43:\tb9 f7 05 00 00       \tmov    $0x5f7,%ecx\n  48:\tba 00 00 00 00       \tmov    $0x0,%edx\n  4d:\tbe 03 00 00 00       \tmov    $0x3,%esi\n  52:\t48 89 c7             \tmov    %rax,%rdi\n  55:\te8 00 00 00 00       \tcallq  5a <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0x5a>\n  5a:\t48 8d 45 ec          \tlea    -0x14(%rbp),%rax\n  5e:\t48 89 c7             \tmov    %rax,%rdi\n  61:\te8 00 00 00 00       \tcallq  66 <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0x66>\n  66:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  6b:\t48 89 c7             \tmov    %rax,%rdi\n  6e:\te8 00 00 00 00       \tcallq  73 <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0x73>\n  73:\t48 8d 45 ec          \tlea    -0x14(%rbp),%rax\n  77:\t48 89 c7             \tmov    %rax,%rdi\n  7a:\te8 00 00 00 00       \tcallq  7f <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0x7f>\n  7f:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  83:\t48 85 c0             \ttest   %rax,%rax\n  86:\t74 19                \tje     a1 <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0xa1>\n  88:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  8d:\tba 00 00 00 00       \tmov    $0x0,%edx\n  92:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  97:\t48 89 c7             \tmov    %rax,%rdi\n  9a:\te8 00 00 00 00       \tcallq  9f <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0x9f>\n  9f:\teb 21                \tjmp    c2 <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0xc2>\n  a1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  a6:\teb 1a                \tjmp    c2 <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0xc2>\n  a8:\t48 89 c3             \tmov    %rax,%rbx\n  ab:\t48 8d 45 ec          \tlea    -0x14(%rbp),%rax\n  af:\t48 89 c7             \tmov    %rax,%rdi\n  b2:\te8 00 00 00 00       \tcallq  b7 <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0xb7>\n  b7:\t48 89 d8             \tmov    %rbx,%rax\n  ba:\t48 89 c7             \tmov    %rax,%rdi\n  bd:\te8 00 00 00 00       \tcallq  c2 <_ZN7testing8internal27CheckedDowncastToActualTypeINS0_11ThreadLocalIPNS_8SequenceEE11ValueHolderENS0_26ThreadLocalValueHolderBaseEEEPT_PT0_+0xc2>\n  c2:\t48 83 c4 28          \tadd    $0x28,%rsp\n  c6:\t5b                   \tpop    %rbx\n  c7:\t5d                   \tpop    %rbp\n  c8:\tc3                   \tretq   ", "code_s": "void *__fastcall testing internal CheckedDowncastToActualType<\n    testing internal ThreadLocal<testing Sequence *> ValueHolder,\n    testing internal ThreadLocalValueHolderBase>(_QWORD *a1) {\n  bool v1;\n  void *v2;\n  char v4[Number];\n  if (!a1)\n    _cxa_bad_typeid();\n  v1 = std type_info operator==(\n      *(_QWORD *)(*a1 - Number L),\n      (__int64)& ` typeinfo for ' testing internal ThreadLocal < testing Sequence * > ValueHolder ) ; if ( ! ( unsigned __int8 ) testing internal IsTrue ( ( testing internal * ) v1 , ( bool ) & ` typeinfo for ' testing\n          internal ThreadLocal<testing Sequence *>\n              ValueHolder)) {\n    testing internal GTestLog GTestLog(v4, Number L, String, Number L);\n    v2 = testing internal GTestLog GetStream((testing internal GTestLog *)v4);\n    std operator<<<std char_traits<char>>(v2, String);\n    testing internal GTestLog ~GTestLog((testing internal GTestLog *)v4);\n  } return _dynamic_cast ( a1 , ( const struct __class_type_info * ) & ` typeinfo for ' testing internal ThreadLocalValueHolderBase , ( const struct __class_type_info * ) & ` typeinfo for ' testing internal ThreadLocal < testing Sequence * > ValueHolder , Number L ) ;\n}", "code_t": "testing internal ThreadLocal<testing Sequence *>\n    ValueHolder *__cdecl testing internal CheckedDowncastToActualType<\n        testing internal ThreadLocal<testing Sequence *> ValueHolder,\n        testing internal ThreadLocalValueHolderBase>(\n        testing internal ThreadLocalValueHolderBase *base) {\n  bool v1;\n  std ostream *v2;\n  testing internal GTestLog <span class=\"supfact\">v4</span>;\n  if (!base)\n    _cxa_bad_typeid();\n  v1 = std type_info operator==(\n      *((const std type_info *const *)base->_vptr_ThreadLocalValueHolderBase -\n        Number),\n      (const std type_info\n           *)& ` typeinfo for ' testing internal ThreadLocal < testing Sequence * > ValueHolder ) ; if ( ! ( unsigned __int8 ) testing internal IsTrue ( ( testing internal * ) v1 , ( bool ) & ` typeinfo for ' testing\n          internal ThreadLocal<testing Sequence *>\n              ValueHolder)) {\n    testing internal GTestLog GTestLog(&<span class=\"supfact\">v4</span>, GTEST_FATAL, String,\n                                       Number);\n    v2 = testing internal GTestLog GetStream(&<span class=\"supfact\">v4</span>);\n    std operator<<<std char_traits<char>>(v2, String);\n    testing internal GTestLog ~GTestLog(&<span class=\"supfact\">v4</span>);\n  } return ( testing internal ThreadLocal < testing Sequence * > ValueHolder * ) _dynamic_cast ( base , ( const struct __class_type_info * ) & ` typeinfo for ' testing internal ThreadLocalValueHolderBase , ( const struct __class_type_info * ) & ` typeinfo for ' testing internal ThreadLocal < testing Sequence * > ValueHolder , Number L ) ;\n}", "var": [{"name": "v4", "type": "char[16]", "pred_name": "v4", "ref_name": "v4", "ref_type": "struct testing::internal::GTestLog { const testing::internal::GTestLogSeverity severity_; }"}], "body_in_train": false}, {"repo_owner": "rhuitl", "repo_name": "uClinux", "path": "rhuitl/uClinux/3c29f41f4cb038859022673e6a258d18b21c08755dd3f5fb6d01a374513567b0", "path_in_repo": "rhuitl/uClinux/user/zebra/ripd/rip_interface.o", "objdump": "000000000000025d <rip_request_interface_send>:\n     25d:\t55                   \tpush   %rbp\n     25e:\t48 89 e5             \tmov    %rsp,%rbp\n     261:\t48 83 ec 40          \tsub    $0x40,%rsp\n     265:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n     269:\t89 f0                \tmov    %esi,%eax\n     26b:\t88 45 c4             \tmov    %al,-0x3c(%rbp)\n     26e:\t80 7d c4 02          \tcmpb   $0x2,-0x3c(%rbp)\n     272:\t75 4f                \tjne    2c3 <rip_request_interface_send+0x66>\n     274:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     278:\t48 89 c7             \tmov    %rax,%rdi\n     27b:\te8 00 00 00 00       \tcallq  280 <rip_request_interface_send+0x23>\n     280:\t85 c0                \ttest   %eax,%eax\n     282:\t74 3f                \tje     2c3 <rip_request_interface_send+0x66>\n     284:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 28b <rip_request_interface_send+0x2e>\n     28b:\t83 e0 01             \tand    $0x1,%eax\n     28e:\t48 85 c0             \ttest   %rax,%rax\n     291:\t74 16                \tje     2a9 <rip_request_interface_send+0x4c>\n     293:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     297:\t48 89 c6             \tmov    %rax,%rsi\n     29a:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     29f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     2a4:\te8 00 00 00 00       \tcallq  2a9 <rip_request_interface_send+0x4c>\n     2a9:\t0f b6 55 c4          \tmovzbl -0x3c(%rbp),%edx\n     2ad:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     2b1:\t48 89 c6             \tmov    %rax,%rsi\n     2b4:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     2b9:\te8 00 00 00 00       \tcallq  2be <rip_request_interface_send+0x61>\n     2be:\te9 d4 00 00 00       \tjmpq   397 <rip_request_interface_send+0x13a>\n     2c3:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     2c7:\t48 89 c7             \tmov    %rax,%rdi\n     2ca:\te8 00 00 00 00       \tcallq  2cf <rip_request_interface_send+0x72>\n     2cf:\t85 c0                \ttest   %eax,%eax\n     2d1:\t75 14                \tjne    2e7 <rip_request_interface_send+0x8a>\n     2d3:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     2d7:\t48 89 c7             \tmov    %rax,%rdi\n     2da:\te8 00 00 00 00       \tcallq  2df <rip_request_interface_send+0x82>\n     2df:\t85 c0                \ttest   %eax,%eax\n     2e1:\t0f 84 b0 00 00 00    \tje     397 <rip_request_interface_send+0x13a>\n     2e7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2ee <rip_request_interface_send+0x91>\n     2ee:\t83 e0 01             \tand    $0x1,%eax\n     2f1:\t48 85 c0             \ttest   %rax,%rax\n     2f4:\t74 16                \tje     30c <rip_request_interface_send+0xaf>\n     2f6:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     2fa:\t48 89 c6             \tmov    %rax,%rsi\n     2fd:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     302:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     307:\te8 00 00 00 00       \tcallq  30c <rip_request_interface_send+0xaf>\n     30c:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     310:\t48 8b 40 68          \tmov    0x68(%rax),%rax\n     314:\t48 8b 00             \tmov    (%rax),%rax\n     317:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     31b:\teb 73                \tjmp    390 <rip_request_interface_send+0x133>\n     31d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     321:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     325:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     329:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     32d:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n     331:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     335:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     339:\t0f b6 00             \tmovzbl (%rax),%eax\n     33c:\t3c 02                \tcmp    $0x2,%al\n     33e:\t75 45                \tjne    385 <rip_request_interface_send+0x128>\n     340:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     344:\tba 10 00 00 00       \tmov    $0x10,%edx\n     349:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     34e:\t48 89 c7             \tmov    %rax,%rdi\n     351:\te8 00 00 00 00       \tcallq  356 <rip_request_interface_send+0xf9>\n     356:\tbf 08 02 00 00       \tmov    $0x208,%edi\n     35b:\te8 00 00 00 00       \tcallq  360 <rip_request_interface_send+0x103>\n     360:\t66 89 45 d2          \tmov    %ax,-0x2e(%rbp)\n     364:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     368:\t8b 40 08             \tmov    0x8(%rax),%eax\n     36b:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n     36e:\t0f b6 55 c4          \tmovzbl -0x3c(%rbp),%edx\n     372:\t48 8b 4d c8          \tmov    -0x38(%rbp),%rcx\n     376:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     37a:\t48 89 ce             \tmov    %rcx,%rsi\n     37d:\t48 89 c7             \tmov    %rax,%rdi\n     380:\te8 00 00 00 00       \tcallq  385 <rip_request_interface_send+0x128>\n     385:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     389:\t48 8b 00             \tmov    (%rax),%rax\n     38c:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     390:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n     395:\t75 86                \tjne    31d <rip_request_interface_send+0xc0>\n     397:\tc9                   \tleaveq \n     398:\tc3                   \tretq   ", "code_s": "__int64 *__fastcall rip_request_interface_send(__int64 a1, unsigned __int8 a2) {\n  __int64 *result;\n  int s[Number];\n  __int64 v4;\n  __int64 v5;\n  __int64 *i;\n  if (a2 == Number && (unsigned int)if_is_multicast(a1)) {\n    if ((rip_debug_event & Number) != Number)\n      zlog_info(String, (const char *)a1);\n    result = (__int64 *)rip_request_send(Number L, a1, Number L);\n  } else if ((unsigned int)if_is_pointopoint(a1) ||\n             (result = (__int64 *)if_is_broadcast(a1), (_DWORD)result)) {\n    if ((rip_debug_event & Number) != Number)\n      zlog_info(String, (const char *)a1);\n    result = **(__int64 ***)(a1 + Number);\n    for (i = result; i; i = (__int64 *)*i) {\n      v5 = i[Number];\n      v4 = *(_QWORD *)(v5 + Number);\n      if (*(_BYTE *)v4 == Number) {\n        memset(s, Number, Number);\n        HIWORD(s[Number]) = htons(Number);\n        s[Number] = *(_DWORD *)(v4 + Number);\n        rip_request_send(s, a1, a2);\n      }\n      result = (__int64 *)*i;\n    }\n  }\n  return result;\n}", "code_t": "void __cdecl rip_request_interface_send(interface *ifp, u_char version) {\n  sockaddr_in <span class=\"supfact\">to</span>;\n  prefix_ipv4 *p;\n  connected *connected;\n  listnode_0 cnode;\n  if (version == Number && (unsigned int)if_is_multicast(ifp)) {\n    if ((rip_debug_event & Number) != Number)\n      zlog_info(String, ifp->name);\n    rip_request_send(Number L, ifp, Number L);\n  } else if ((unsigned int)if_is_pointopoint(ifp) ||\n             (unsigned int)if_is_broadcast(ifp)) {\n    if ((rip_debug_event & Number) != Number)\n      zlog_info(String, ifp->name);\n    for (cnode = ifp->connected->head; cnode; cnode = cnode->next) {\n      connected = (connected *)cnode->data;\n      p = (prefix_ipv4 *)connected->destination;\n      if (p->family == Number) {\n        memset(&<span class=\"supfact\">to</span>, Number, sizeof(<span class=\"supfact\">to</span>));\n        <span class=\"supfact\">to</span>.sin_port = htons(Number);\n        <span class=\"supfact\">to</span>.sin_addr.s_addr = p->prefix.s_addr;\n        rip_request_send(&<span class=\"supfact\">to</span>, ifp, version);\n      }\n    }\n  }\n}", "var": [{"name": "s", "type": "__unk__", "pred_name": "request", "ref_name": "to", "ref_type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }"}], "body_in_train": false}, {"repo_owner": "wnoguchi", "repo_name": "hikari_denwa_asterisk", "path": "wnoguchi/hikari_denwa_asterisk/513dcb0a92eafe6237d3f1016fb0a9d8e0e0abaa48a3af0a523fb3d2c8d326f6", "path_in_repo": "wnoguchi/hikari_denwa_asterisk/asterisk-11.0.1/res/pjproject/pjnath/bin/pjturn-client-x86_64-unknown-linux-gnu", "objdump": "0000000000425fee <pj_activesock_create>:\n  425fee:\t55                   \tpush   %rbp\n  425fef:\t48 89 e5             \tmov    %rsp,%rbp\n  425ff2:\t48 83 ec 60          \tsub    $0x60,%rsp\n  425ff6:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n  425ffa:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n  425ffe:\t89 55 bc             \tmov    %edx,-0x44(%rbp)\n  426001:\t48 89 4d b0          \tmov    %rcx,-0x50(%rbp)\n  426005:\t4c 89 45 a8          \tmov    %r8,-0x58(%rbp)\n  426009:\t4c 89 4d a0          \tmov    %r9,-0x60(%rbp)\n  42600d:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n  426012:\t74 15                \tje     426029 <pj_activesock_create+0x3b>\n  426014:\t48 83 7d a8 00       \tcmpq   $0x0,-0x58(%rbp)\n  426019:\t74 0e                \tje     426029 <pj_activesock_create+0x3b>\n  42601b:\t48 83 7d a0 00       \tcmpq   $0x0,-0x60(%rbp)\n  426020:\t74 07                \tje     426029 <pj_activesock_create+0x3b>\n  426022:\t48 83 7d 18 00       \tcmpq   $0x0,0x18(%rbp)\n  426027:\t75 3f                \tjne    426068 <pj_activesock_create+0x7a>\n  426029:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n  42602e:\t74 15                \tje     426045 <pj_activesock_create+0x57>\n  426030:\t48 83 7d a8 00       \tcmpq   $0x0,-0x58(%rbp)\n  426035:\t74 0e                \tje     426045 <pj_activesock_create+0x57>\n  426037:\t48 83 7d a0 00       \tcmpq   $0x0,-0x60(%rbp)\n  42603c:\t74 07                \tje     426045 <pj_activesock_create+0x57>\n  42603e:\t48 83 7d 18 00       \tcmpq   $0x0,0x18(%rbp)\n  426043:\t75 19                \tjne    42605e <pj_activesock_create+0x70>\n  426045:\tb9 c0 80 43 00       \tmov    $0x4380c0,%ecx\n  42604a:\tba bd 00 00 00       \tmov    $0xbd,%edx\n  42604f:\tbe c0 7e 43 00       \tmov    $0x437ec0,%esi\n  426054:\tbf d8 7e 43 00       \tmov    $0x437ed8,%edi\n  426059:\te8 32 d0 fd ff       \tcallq  403090 <__assert_fail@plt>\n  42605e:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n  426063:\te9 54 02 00 00       \tjmpq   4262bc <pj_activesock_create+0x2ce>\n  426068:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n  42606d:\t74 07                \tje     426076 <pj_activesock_create+0x88>\n  42606f:\t48 83 7d c0 ff       \tcmpq   $0xffffffffffffffff,-0x40(%rbp)\n  426074:\t75 31                \tjne    4260a7 <pj_activesock_create+0xb9>\n  426076:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n  42607b:\t74 07                \tje     426084 <pj_activesock_create+0x96>\n  42607d:\t48 83 7d c0 ff       \tcmpq   $0xffffffffffffffff,-0x40(%rbp)\n  426082:\t75 19                \tjne    42609d <pj_activesock_create+0xaf>\n  426084:\tb9 c0 80 43 00       \tmov    $0x4380c0,%ecx\n  426089:\tba be 00 00 00       \tmov    $0xbe,%edx\n  42608e:\tbe c0 7e 43 00       \tmov    $0x437ec0,%esi\n  426093:\tbf f9 7e 43 00       \tmov    $0x437ef9,%edi\n  426098:\te8 f3 cf fd ff       \tcallq  403090 <__assert_fail@plt>\n  42609d:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n  4260a2:\te9 15 02 00 00       \tjmpq   4262bc <pj_activesock_create+0x2ce>\n  4260a7:\t0f b7 05 fe 1b 01 00 \tmovzwl 0x11bfe(%rip),%eax        # 437cac <PJ_SOCK_STREAM>\n  4260ae:\t0f b7 c0             \tmovzwl %ax,%eax\n  4260b1:\t39 45 bc             \tcmp    %eax,-0x44(%rbp)\n  4260b4:\t74 50                \tje     426106 <pj_activesock_create+0x118>\n  4260b6:\t0f b7 05 f1 1b 01 00 \tmovzwl 0x11bf1(%rip),%eax        # 437cae <PJ_SOCK_DGRAM>\n  4260bd:\t0f b7 c0             \tmovzwl %ax,%eax\n  4260c0:\t39 45 bc             \tcmp    %eax,-0x44(%rbp)\n  4260c3:\t74 41                \tje     426106 <pj_activesock_create+0x118>\n  4260c5:\t0f b7 05 e0 1b 01 00 \tmovzwl 0x11be0(%rip),%eax        # 437cac <PJ_SOCK_STREAM>\n  4260cc:\t0f b7 c0             \tmovzwl %ax,%eax\n  4260cf:\t39 45 bc             \tcmp    %eax,-0x44(%rbp)\n  4260d2:\t74 28                \tje     4260fc <pj_activesock_create+0x10e>\n  4260d4:\t0f b7 05 d3 1b 01 00 \tmovzwl 0x11bd3(%rip),%eax        # 437cae <PJ_SOCK_DGRAM>\n  4260db:\t0f b7 c0             \tmovzwl %ax,%eax\n  4260de:\t39 45 bc             \tcmp    %eax,-0x44(%rbp)\n  4260e1:\t74 19                \tje     4260fc <pj_activesock_create+0x10e>\n  4260e3:\tb9 c0 80 43 00       \tmov    $0x4380c0,%ecx\n  4260e8:\tba bf 00 00 00       \tmov    $0xbf,%edx\n  4260ed:\tbe c0 7e 43 00       \tmov    $0x437ec0,%esi\n  4260f2:\tbf 10 7f 43 00       \tmov    $0x437f10,%edi\n  4260f7:\te8 94 cf fd ff       \tcallq  403090 <__assert_fail@plt>\n  4260fc:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n  426101:\te9 b6 01 00 00       \tjmpq   4262bc <pj_activesock_create+0x2ce>\n  426106:\t48 83 7d b0 00       \tcmpq   $0x0,-0x50(%rbp)\n  42610b:\t74 3e                \tje     42614b <pj_activesock_create+0x15d>\n  42610d:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  426111:\t8b 00                \tmov    (%rax),%eax\n  426113:\t85 c0                \ttest   %eax,%eax\n  426115:\t75 34                \tjne    42614b <pj_activesock_create+0x15d>\n  426117:\t48 83 7d b0 00       \tcmpq   $0x0,-0x50(%rbp)\n  42611c:\t74 23                \tje     426141 <pj_activesock_create+0x153>\n  42611e:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  426122:\t8b 00                \tmov    (%rax),%eax\n  426124:\t85 c0                \ttest   %eax,%eax\n  426126:\t75 19                \tjne    426141 <pj_activesock_create+0x153>\n  426128:\tb9 c0 80 43 00       \tmov    $0x4380c0,%ecx\n  42612d:\tba c1 00 00 00       \tmov    $0xc1,%edx\n  426132:\tbe c0 7e 43 00       \tmov    $0x437ec0,%esi\n  426137:\tbf 46 7f 43 00       \tmov    $0x437f46,%edi\n  42613c:\te8 4f cf fd ff       \tcallq  403090 <__assert_fail@plt>\n  426141:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n  426146:\te9 71 01 00 00       \tjmpq   4262bc <pj_activesock_create+0x2ce>\n  42614b:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  42614f:\tbe 90 00 00 00       \tmov    $0x90,%esi\n  426154:\t48 89 c7             \tmov    %rax,%rdi\n  426157:\te8 d6 fd ff ff       \tcallq  425f32 <pj_pool_zalloc>\n  42615c:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  426160:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  426164:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n  426168:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n  42616c:\t0f b7 05 39 1b 01 00 \tmovzwl 0x11b39(%rip),%eax        # 437cac <PJ_SOCK_STREAM>\n  426173:\t0f b7 c0             \tmovzwl %ax,%eax\n  426176:\t39 45 bc             \tcmp    %eax,-0x44(%rbp)\n  426179:\t0f 94 c0             \tsete   %al\n  42617c:\t0f b6 d0             \tmovzbl %al,%edx\n  42617f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  426183:\t89 50 08             \tmov    %edx,0x8(%rax)\n  426186:\t48 83 7d b0 00       \tcmpq   $0x0,-0x50(%rbp)\n  42618b:\t74 08                \tje     426195 <pj_activesock_create+0x1a7>\n  42618d:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  426191:\t8b 00                \tmov    (%rax),%eax\n  426193:\teb 05                \tjmp    42619a <pj_activesock_create+0x1ac>\n  426195:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  42619a:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  42619e:\t89 42 20             \tmov    %eax,0x20(%rdx)\n  4261a1:\t48 83 7d b0 00       \tcmpq   $0x0,-0x50(%rbp)\n  4261a6:\t74 09                \tje     4261b1 <pj_activesock_create+0x1c3>\n  4261a8:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  4261ac:\t8b 40 08             \tmov    0x8(%rax),%eax\n  4261af:\teb 05                \tjmp    4261b6 <pj_activesock_create+0x1c8>\n  4261b1:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  4261b6:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  4261ba:\t89 42 0c             \tmov    %eax,0xc(%rdx)\n  4261bd:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4261c1:\tc7 40 24 32 00 00 00 \tmovl   $0x32,0x24(%rax)\n  4261c8:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4261cc:\t48 8b 55 10          \tmov    0x10(%rbp),%rdx\n  4261d0:\t48 89 50 18          \tmov    %rdx,0x18(%rax)\n  4261d4:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4261d8:\t48 8d 48 28          \tlea    0x28(%rax),%rcx\n  4261dc:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  4261e0:\tba 28 00 00 00       \tmov    $0x28,%edx\n  4261e5:\t48 89 c6             \tmov    %rax,%rsi\n  4261e8:\t48 89 cf             \tmov    %rcx,%rdi\n  4261eb:\te8 91 fd ff ff       \tcallq  425f81 <pj_memcpy>\n  4261f0:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  4261f4:\tbe 20 00 00 00       \tmov    $0x20,%esi\n  4261f9:\t48 89 c7             \tmov    %rax,%rdi\n  4261fc:\te8 58 fd ff ff       \tcallq  425f59 <pj_bzero>\n  426201:\t48 c7 45 d0 f5 6a 42 \tmovq   $0x426af5,-0x30(%rbp)\n  426208:\t00 \n  426209:\t48 c7 45 d8 f4 71 42 \tmovq   $0x4271f4,-0x28(%rbp)\n  426210:\t00 \n  426211:\t48 c7 45 e8 59 76 42 \tmovq   $0x427659,-0x18(%rbp)\n  426218:\t00 \n  426219:\t48 c7 45 e0 8d 74 42 \tmovq   $0x42748d,-0x20(%rbp)\n  426220:\t00 \n  426221:\t4c 8b 45 f8          \tmov    -0x8(%rbp),%r8\n  426225:\t48 8d 7d d0          \tlea    -0x30(%rbp),%rdi\n  426229:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n  42622d:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n  426231:\t48 8b 75 a8          \tmov    -0x58(%rbp),%rsi\n  426235:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  426239:\t4d 89 c1             \tmov    %r8,%r9\n  42623c:\t49 89 f8             \tmov    %rdi,%r8\n  42623f:\t48 89 c7             \tmov    %rax,%rdi\n  426242:\te8 74 b5 ff ff       \tcallq  4217bb <pj_ioqueue_register_sock>\n  426247:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  42624a:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n  42624e:\t74 11                \tje     426261 <pj_activesock_create+0x273>\n  426250:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  426254:\t48 89 c7             \tmov    %rax,%rdi\n  426257:\te8 bf 01 00 00       \tcallq  42641b <pj_activesock_close>\n  42625c:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  42625f:\teb 5b                \tjmp    4262bc <pj_activesock_create+0x2ce>\n  426261:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  426265:\t8b 40 0c             \tmov    0xc(%rax),%eax\n  426268:\t85 c0                \ttest   %eax,%eax\n  42626a:\t74 16                \tje     426282 <pj_activesock_create+0x294>\n  42626c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  426270:\t48 8b 00             \tmov    (%rax),%rax\n  426273:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  426278:\t48 89 c7             \tmov    %rax,%rdi\n  42627b:\te8 d2 b0 ff ff       \tcallq  421352 <pj_ioqueue_set_concurrency>\n  426280:\teb 2a                \tjmp    4262ac <pj_activesock_create+0x2be>\n  426282:\t48 83 7d b0 00       \tcmpq   $0x0,-0x50(%rbp)\n  426287:\t74 23                \tje     4262ac <pj_activesock_create+0x2be>\n  426289:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  42628d:\t8b 40 04             \tmov    0x4(%rax),%eax\n  426290:\t85 c0                \ttest   %eax,%eax\n  426292:\t78 18                \tjs     4262ac <pj_activesock_create+0x2be>\n  426294:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  426298:\t8b 50 04             \tmov    0x4(%rax),%edx\n  42629b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  42629f:\t48 8b 00             \tmov    (%rax),%rax\n  4262a2:\t89 d6                \tmov    %edx,%esi\n  4262a4:\t48 89 c7             \tmov    %rax,%rdi\n  4262a7:\te8 a6 b0 ff ff       \tcallq  421352 <pj_ioqueue_set_concurrency>\n  4262ac:\t48 8b 45 18          \tmov    0x18(%rbp),%rax\n  4262b0:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  4262b4:\t48 89 10             \tmov    %rdx,(%rax)\n  4262b7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4262bc:\tc9                   \tleaveq \n  4262bd:\tc3                   \tretq   ", "code_s": "__int64 __fastcall pj_activesock_create(__int64 a1, __int64 a2, int a3, int *a4,\n                                        _QWORD *a5, const void *a6, __int64 a7,\n                                        _QWORD *a8) {\n  __int64 result;\n  int v9;\n  int v10;\n  __int64 v15[Number];\n  unsigned int v16;\n  _QWORD *v17;\n  if (a1 && a5 && a6 && a8) {\n    if (!a2 || a2 == Number)\n      __assert_fail(String, String, Number, String);\n    if (a3 == (unsigned __int16)PJ_SOCK_STREAM ||\n        a3 == (unsigned __int16)PJ_SOCK_DGRAM) {\n      if (a4 && !*a4)\n        __assert_fail(String, String, Number, String);\n      v17 = (_QWORD *)pj_pool_zalloc_9(a1, Number L);\n      v17[Number] = a5;\n      *((_DWORD *)v17 + Number) = a3 == (unsigned __int16)PJ_SOCK_STREAM;\n      if (a4)\n        v9 = *a4;\n      else\n        v9 = Number;\n      *((_DWORD *)v17 + Number) = v9;\n      if (a4)\n        v10 = a4[Number];\n      else\n        v10 = Number;\n      *((_DWORD *)v17 + Number) = v10;\n      *((_DWORD *)v17 + Number) = Number;\n      v17[Number] = a7;\n      pj_memcpy_18(v17 + Number, a6, Number);\n      pj_bzero_14(v15, Number);\n      v15[Number] = (__int64)ioqueue_on_read_complete;\n      v15[Number] = (__int64)ioqueue_on_write_complete;\n      v15[Number] = (__int64)ioqueue_on_connect_complete;\n      v15[Number] = (__int64)ioqueue_on_accept_complete;\n      v16 = pj_ioqueue_register_sock(a1, a5, a2, (__int64)v17, v15, v17);\n      if (v16) {\n        pj_activesock_close(v17);\n        result = v16;\n      } else {\n        if (*((_DWORD *)v17 + Number)) {\n          pj_ioqueue_set_concurrency(*v17, Number);\n        } else if (a4 && a4[Number] >= Number) {\n          pj_ioqueue_set_concurrency(*v17, a4[Number]);\n        }\n        *a8 = v17;\n        result = Number L;\n      }\n    } else {\n      if (a3 != (unsigned __int16)PJ_SOCK_STREAM &&\n          a3 != (unsigned __int16)PJ_SOCK_DGRAM)\n        __assert_fail(String, String, Number, String);\n      result = Number L;\n    }\n  } else {\n    if (!a1 || !a5 || !a6 || !a8)\n      __assert_fail(String, String, Number, String);\n    result = Number L;\n  }\n  return result;\n}", "code_t": "pj_status_t __cdecl pj_activesock_create(pj_pool_t_0 *pool, pj_sock_t sock,\n                                         int sock_type,\n                                         const pj_activesock_cfg_0 *opt,\n                                         pj_ioqueue_t_0 *ioqueue,\n                                         const pj_activesock_cb_0 *cb,\n                                         void *user_data,\n                                         pj_activesock_t_0 **p_asock) {\n  pj_status_t result;\n  unsigned int v9;\n  pj_bool_t v10;\n  pj_ioqueue_callback_0 <span class=\"supfact\">ioq_cb</span>;\n  pj_status_t status;\n  pj_activesock_t_0 *asock;\n  if (pool && ioqueue && cb && p_asock) {\n    if (!sock || sock == Number)\n      __assert_fail(String, String, Number, String);\n    if (sock_type == PJ_SOCK_STREAM || sock_type == PJ_SOCK_DGRAM) {\n      if (opt && !opt->async_cnt)\n        __assert_fail(String, String, Number, String);\n      asock = (pj_activesock_t_0 *)pj_pool_zalloc_9(pool, Number);\n      asock->ioqueue = ioqueue;\n      asock->stream_oriented = sock_type == PJ_SOCK_STREAM;\n      if (opt)\n        v9 = opt->async_cnt;\n      else\n        v9 = Number;\n      asock->async_count = v9;\n      if (opt)\n        v10 = opt->whole_data;\n      else\n        v10 = Number;\n      asock->whole_data = v10;\n      asock->max_loop = Number;\n      asock->user_data = user_data;\n      pj_memcpy_18(&asock->cb, cb, Number);\n      pj_bzero_14(&<span class=\"supfact\">ioq_cb</span>, Number);\n      <span class=\"supfact\">ioq_cb</span>.on_read_complete =\n          (void (*)(pj_ioqueue_key_t_0 *, pj_ioqueue_op_key_t_0 *,\n                    pj_ssize_t))ioqueue_on_read_complete;\n      <span class=\"supfact\">ioq_cb</span>.on_write_complete =\n          (void (*)(pj_ioqueue_key_t_0 *, pj_ioqueue_op_key_t_0 *,\n                    pj_ssize_t))ioqueue_on_write_complete;\n      <span class=\"supfact\">ioq_cb</span>.on_connect_complete = (void (*)(\n          pj_ioqueue_key_t_0 *, pj_status_t))ioqueue_on_connect_complete;\n      <span class=\"supfact\">ioq_cb</span>.on_accept_complete =\n          (void (*)(pj_ioqueue_key_t_0 *, pj_ioqueue_op_key_t_0 *, pj_sock_t,\n                    pj_status_t))ioqueue_on_accept_complete;\n      status = pj_ioqueue_register_sock(pool, ioqueue, sock, asock,\n                                        &<span class=\"supfact\">ioq_cb</span>, &asock->key);\n      if (status) {\n        pj_activesock_close(asock);\n        result = status;\n      } else {\n        if (asock->whole_data) {\n          pj_ioqueue_set_concurrency(asock->key, Number);\n        } else if (opt && opt->concurrency >= Number) {\n          pj_ioqueue_set_concurrency(asock->key, opt->concurrency);\n        }\n        *p_asock = asock;\n        result = Number;\n      }\n    } else {\n      if (sock_type != PJ_SOCK_STREAM && sock_type != PJ_SOCK_DGRAM)\n        __assert_fail(String, String, Number, String);\n      result = Number;\n    }\n  } else {\n    if (!pool || !ioqueue || !cb || !p_asock)\n      __assert_fail(String, String, Number, String);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "v15", "type": "struct pj_ioqueue_callback_0 { void (*)(pj_ioqueue_key_t_0 *, pj_ioqueue_op_key_t_0 *, pj_ssize_t) on_read_complete; void (*)(pj_ioqueue_key_t_0 *, pj_ioqueue_op_key_t_0 *, pj_ssize_t) on_write_complete; void (*)(pj_ioqueue_key_t_0 *, pj_ioqueue_op_key_t_0 *, pj_sock_t, pj_status_t) on_accept_complete; void (*)(pj_ioqueue_key_t_0 *, pj_status_t) on_connect_complete; }", "pred_name": "ioq_cb", "ref_name": "ioq_cb", "ref_type": "struct pj_ioqueue_callback_0 { void (*)(pj_ioqueue_key_t_0 *, pj_ioqueue_op_key_t_0 *, pj_ssize_t) on_read_complete; void (*)(pj_ioqueue_key_t_0 *, pj_ioqueue_op_key_t_0 *, pj_ssize_t) on_write_complete; void (*)(pj_ioqueue_key_t_0 *, pj_ioqueue_op_key_t_0 *, pj_sock_t, pj_status_t) on_accept_complete; void (*)(pj_ioqueue_key_t_0 *, pj_status_t) on_connect_complete; }"}], "body_in_train": false}, {"repo_owner": "rhuitl", "repo_name": "uClinux", "path": "rhuitl/uClinux/f6fdf731fe0d0094553dcbf8d0c13b3fa886a5e496f435afcb512928cef644af", "path_in_repo": "rhuitl/uClinux/user/ferret/ipv6.o", "objdump": "0000000000000000 <process_ipv6>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 83 ec 60          \tsub    $0x60,%rsp\n   8:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n   c:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n  10:\t48 89 55 a8          \tmov    %rdx,-0x58(%rbp)\n  14:\t89 4d a4             \tmov    %ecx,-0x5c(%rbp)\n  17:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n  1e:\t83 7d a4 00          \tcmpl   $0x0,-0x5c(%rbp)\n  22:\t75 1b                \tjne    3f <process_ipv6+0x3f>\n  24:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  28:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  2d:\t48 89 c7             \tmov    %rax,%rdi\n  30:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  35:\te8 00 00 00 00       \tcallq  3a <process_ipv6+0x3a>\n  3a:\te9 d0 02 00 00       \tjmpq   30f <process_ipv6+0x30f>\n  3f:\t83 7d a4 27          \tcmpl   $0x27,-0x5c(%rbp)\n  43:\t77 1b                \tja     60 <process_ipv6+0x60>\n  45:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  49:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  4e:\t48 89 c7             \tmov    %rax,%rdi\n  51:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  56:\te8 00 00 00 00       \tcallq  5b <process_ipv6+0x5b>\n  5b:\te9 af 02 00 00       \tjmpq   30f <process_ipv6+0x30f>\n  60:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  64:\t0f b6 00             \tmovzbl (%rax),%eax\n  67:\tc0 e8 04             \tshr    $0x4,%al\n  6a:\t0f b6 c0             \tmovzbl %al,%eax\n  6d:\t89 45 c0             \tmov    %eax,-0x40(%rbp)\n  70:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  74:\t0f b6 00             \tmovzbl (%rax),%eax\n  77:\t0f b6 c0             \tmovzbl %al,%eax\n  7a:\tc1 e0 04             \tshl    $0x4,%eax\n  7d:\t0f b6 d0             \tmovzbl %al,%edx\n  80:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  84:\t48 83 c0 01          \tadd    $0x1,%rax\n  88:\t0f b6 00             \tmovzbl (%rax),%eax\n  8b:\tc0 e8 04             \tshr    $0x4,%al\n  8e:\t0f b6 c0             \tmovzbl %al,%eax\n  91:\t09 d0                \tor     %edx,%eax\n  93:\t89 45 c4             \tmov    %eax,-0x3c(%rbp)\n  96:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  9a:\t48 83 c0 01          \tadd    $0x1,%rax\n  9e:\t0f b6 00             \tmovzbl (%rax),%eax\n  a1:\t0f b6 c0             \tmovzbl %al,%eax\n  a4:\tc1 e0 10             \tshl    $0x10,%eax\n  a7:\t25 00 00 0f 00       \tand    $0xf0000,%eax\n  ac:\t89 c2                \tmov    %eax,%edx\n  ae:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  b2:\t48 83 c0 02          \tadd    $0x2,%rax\n  b6:\t0f b6 00             \tmovzbl (%rax),%eax\n  b9:\t0f b6 c0             \tmovzbl %al,%eax\n  bc:\tc1 e0 08             \tshl    $0x8,%eax\n  bf:\t89 c1                \tmov    %eax,%ecx\n  c1:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  c5:\t48 83 c0 02          \tadd    $0x2,%rax\n  c9:\t48 83 c0 01          \tadd    $0x1,%rax\n  cd:\t0f b6 00             \tmovzbl (%rax),%eax\n  d0:\t0f b6 c0             \tmovzbl %al,%eax\n  d3:\t09 c8                \tor     %ecx,%eax\n  d5:\t09 d0                \tor     %edx,%eax\n  d7:\t89 45 c8             \tmov    %eax,-0x38(%rbp)\n  da:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  de:\t48 83 c0 04          \tadd    $0x4,%rax\n  e2:\t0f b6 00             \tmovzbl (%rax),%eax\n  e5:\t0f b6 c0             \tmovzbl %al,%eax\n  e8:\tc1 e0 08             \tshl    $0x8,%eax\n  eb:\t89 c2                \tmov    %eax,%edx\n  ed:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  f1:\t48 83 c0 04          \tadd    $0x4,%rax\n  f5:\t48 83 c0 01          \tadd    $0x1,%rax\n  f9:\t0f b6 00             \tmovzbl (%rax),%eax\n  fc:\t0f b6 c0             \tmovzbl %al,%eax\n  ff:\t09 d0                \tor     %edx,%eax\n 101:\t89 45 cc             \tmov    %eax,-0x34(%rbp)\n 104:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 108:\t48 83 c0 06          \tadd    $0x6,%rax\n 10c:\t0f b6 00             \tmovzbl (%rax),%eax\n 10f:\t0f b6 c0             \tmovzbl %al,%eax\n 112:\t89 45 d0             \tmov    %eax,-0x30(%rbp)\n 115:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 119:\t48 83 c0 07          \tadd    $0x7,%rax\n 11d:\t0f b6 00             \tmovzbl (%rax),%eax\n 120:\t0f b6 c0             \tmovzbl %al,%eax\n 123:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n 126:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 12a:\t48 83 c0 08          \tadd    $0x8,%rax\n 12e:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n 132:\t48 8d 4a 60          \tlea    0x60(%rdx),%rcx\n 136:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 13a:\t48 8b 00             \tmov    (%rax),%rax\n 13d:\t48 89 01             \tmov    %rax,(%rcx)\n 140:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n 144:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 148:\t48 83 c0 18          \tadd    $0x18,%rax\n 14c:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n 150:\t48 8d 4a 70          \tlea    0x70(%rdx),%rcx\n 154:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 158:\t48 8b 00             \tmov    (%rax),%rax\n 15b:\t48 89 01             \tmov    %rax,(%rcx)\n 15e:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n 162:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 166:\tc7 00 06 00 00 00    \tmovl   $0x6,(%rax)\n 16c:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n 16f:\t83 f8 06             \tcmp    $0x6,%eax\n 172:\t74 1e                \tje     192 <process_ipv6+0x192>\n 174:\t8b 55 c0             \tmov    -0x40(%rbp),%edx\n 177:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 17b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 180:\t48 89 c7             \tmov    %rax,%rdi\n 183:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 188:\te8 00 00 00 00       \tcallq  18d <process_ipv6+0x18d>\n 18d:\te9 7d 01 00 00       \tjmpq   30f <process_ipv6+0x30f>\n 192:\t83 45 fc 28          \taddl   $0x28,-0x4(%rbp)\n 196:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 19a:\t6a 00                \tpushq  $0x0\n 19c:\t6a 04                \tpushq  $0x4\n 19e:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n 1a2:\t48 83 c2 10          \tadd    $0x10,%rdx\n 1a6:\t52                   \tpush   %rdx\n 1a7:\t6a 04                \tpushq  $0x4\n 1a9:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n 1af:\t41 b8 ff ff ff ff    \tmov    $0xffffffff,%r8d\n 1b5:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 1ba:\tba 01 00 00 00       \tmov    $0x1,%edx\n 1bf:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 1c4:\t48 89 c7             \tmov    %rax,%rdi\n 1c7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 1cc:\te8 00 00 00 00       \tcallq  1d1 <process_ipv6+0x1d1>\n 1d1:\t48 83 c4 20          \tadd    $0x20,%rsp\n 1d5:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 1d8:\t3b 45 a4             \tcmp    -0x5c(%rbp),%eax\n 1db:\t76 1b                \tjbe    1f8 <process_ipv6+0x1f8>\n 1dd:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 1e1:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 1e6:\t48 89 c7             \tmov    %rax,%rdi\n 1e9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 1ee:\te8 00 00 00 00       \tcallq  1f3 <process_ipv6+0x1f3>\n 1f3:\te9 17 01 00 00       \tjmpq   30f <process_ipv6+0x30f>\n 1f8:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n 1fb:\t85 c0                \ttest   %eax,%eax\n 1fd:\t74 2a                \tje     229 <process_ipv6+0x229>\n 1ff:\t83 f8 3c             \tcmp    $0x3c,%eax\n 202:\t0f 87 eb 00 00 00    \tja     2f3 <process_ipv6+0x2f3>\n 208:\t83 f8 11             \tcmp    $0x11,%eax\n 20b:\t0f 82 e2 00 00 00    \tjb     2f3 <process_ipv6+0x2f3>\n 211:\t83 e8 11             \tsub    $0x11,%eax\n 214:\t83 f8 2b             \tcmp    $0x2b,%eax\n 217:\t0f 87 d6 00 00 00    \tja     2f3 <process_ipv6+0x2f3>\n 21d:\t89 c0                \tmov    %eax,%eax\n 21f:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n 226:\t00 \n 227:\tff e0                \tjmpq   *%rax\n 229:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 22c:\t83 c0 08             \tadd    $0x8,%eax\n 22f:\t39 45 a4             \tcmp    %eax,-0x5c(%rbp)\n 232:\t73 1b                \tjae    24f <process_ipv6+0x24f>\n 234:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 238:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 23d:\t48 89 c7             \tmov    %rax,%rdi\n 240:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 245:\te8 00 00 00 00       \tcallq  24a <process_ipv6+0x24a>\n 24a:\te9 c0 00 00 00       \tjmpq   30f <process_ipv6+0x30f>\n 24f:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n 252:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 256:\t48 01 d0             \tadd    %rdx,%rax\n 259:\t0f b6 00             \tmovzbl (%rax),%eax\n 25c:\t0f b6 c0             \tmovzbl %al,%eax\n 25f:\t89 45 d0             \tmov    %eax,-0x30(%rbp)\n 262:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 265:\t83 c0 01             \tadd    $0x1,%eax\n 268:\t89 c2                \tmov    %eax,%edx\n 26a:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 26e:\t48 01 d0             \tadd    %rdx,%rax\n 271:\t0f b6 00             \tmovzbl (%rax),%eax\n 274:\t0f b6 d0             \tmovzbl %al,%edx\n 277:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 27a:\t01 d0                \tadd    %edx,%eax\n 27c:\t83 c0 08             \tadd    $0x8,%eax\n 27f:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 282:\te9 4e ff ff ff       \tjmpq   1d5 <process_ipv6+0x1d5>\n 287:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 28b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 290:\t48 89 c7             \tmov    %rax,%rdi\n 293:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 298:\te8 00 00 00 00       \tcallq  29d <process_ipv6+0x29d>\n 29d:\teb 70                \tjmp    30f <process_ipv6+0x30f>\n 29f:\t8b 45 a4             \tmov    -0x5c(%rbp),%eax\n 2a2:\t2b 45 fc             \tsub    -0x4(%rbp),%eax\n 2a5:\t89 c2                \tmov    %eax,%edx\n 2a7:\t8b 4d fc             \tmov    -0x4(%rbp),%ecx\n 2aa:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 2ae:\t48 8d 3c 01          \tlea    (%rcx,%rax,1),%rdi\n 2b2:\t48 8b 75 b0          \tmov    -0x50(%rbp),%rsi\n 2b6:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 2ba:\t89 d1                \tmov    %edx,%ecx\n 2bc:\t48 89 fa             \tmov    %rdi,%rdx\n 2bf:\t48 89 c7             \tmov    %rax,%rdi\n 2c2:\te8 00 00 00 00       \tcallq  2c7 <process_ipv6+0x2c7>\n 2c7:\teb 46                \tjmp    30f <process_ipv6+0x30f>\n 2c9:\t8b 45 a4             \tmov    -0x5c(%rbp),%eax\n 2cc:\t2b 45 fc             \tsub    -0x4(%rbp),%eax\n 2cf:\t89 c2                \tmov    %eax,%edx\n 2d1:\t8b 4d fc             \tmov    -0x4(%rbp),%ecx\n 2d4:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 2d8:\t48 8d 3c 01          \tlea    (%rcx,%rax,1),%rdi\n 2dc:\t48 8b 75 b0          \tmov    -0x50(%rbp),%rsi\n 2e0:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 2e4:\t89 d1                \tmov    %edx,%ecx\n 2e6:\t48 89 fa             \tmov    %rdi,%rdx\n 2e9:\t48 89 c7             \tmov    %rax,%rdi\n 2ec:\te8 00 00 00 00       \tcallq  2f1 <process_ipv6+0x2f1>\n 2f1:\teb 1c                \tjmp    30f <process_ipv6+0x30f>\n 2f3:\t8b 55 d0             \tmov    -0x30(%rbp),%edx\n 2f6:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 2fa:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 2ff:\t48 89 c7             \tmov    %rax,%rdi\n 302:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 307:\te8 00 00 00 00       \tcallq  30c <process_ipv6+0x30c>\n 30c:\teb 01                \tjmp    30f <process_ipv6+0x30f>\n 30e:\t90                   \tnop\n 30f:\tc9                   \tleaveq \n 310:\tc3                   \tretq   \n", "code_s": "__int64 __fastcall process_ipv6(__int64 a1, __int64 a2, __int64 a3,\n                                unsigned int a4) {\n  __int64 result;\n  __int64 v5;\n  __int64 v6;\n  unsigned int v9;\n  int v10[Number];\n  unsigned int v11;\n  v11 = Number;\n  if (!a4)\n    return FRAMERR(a2, String);\n  if (a4 <= Number)\n    return FRAMERR(a2, String);\n  v9 = *(_BYTE *)a3 >> Number;\n  v10[Number] = *(unsigned __int8 *)(a3 + Number);\n  v10[Number] = *(unsigned __int8 *)(a3 + Number);\n  v5 = *(_QWORD *)(a3 + Number);\n  *(_QWORD *)(a2 + Number) = *(_QWORD *)(a3 + Number);\n  *(_QWORD *)(a2 + Number) = v5;\n  v6 = *(_QWORD *)(a3 + Number);\n  *(_QWORD *)(a2 + Number) = *(_QWORD *)(a3 + Number);\n  *(_QWORD *)(a2 + Number) = v6;\n  *(_DWORD *)a2 = Number;\n  if (v9 != Number)\n    return FRAMERR(a2, String, v9);\n  v11 += Number;\n  process_record(a1, String, Number L, String, Number, String, Number L, v10,\n                 Number L, Number L);\n  while (Number) {\n    if (v11 > a4)\n      return FRAMERR(a2, String);\n    if (v10[Number])\n      break;\n  LABEL_14:\n    if (a4 < v11 + Number)\n      return FRAMERR(a2, String);\n    v10[Number] = *(unsigned __int8 *)(v11 + a3);\n    v11 += *(unsigned __int8 *)(v11 + Number + a3) + Number;\n  }\n  if (v10[Number] > Number || v10[Number] < Number)\n    return FRAMERR(a2, String, (unsigned int)v10[Number]);\n  result = (unsigned int)(v10[Number] - Number);\n  switch (v10[Number]) {\n  case Number:\n    result = process_udp(a1, a2, v11 + a3, a4 - v11);\n    break;\n  case Number:\n  case Number:\n    goto LABEL_14;\n  case Number:\n    return FRAMERR(a2, String);\n  case Number:\n    result = process_icmpv6(a1, a2, v11 + a3, a4 - v11);\n    break;\n  case Number:\n    return result;\n  default:\n    return FRAMERR(a2, String, (unsigned int)v10[Number]);\n  }\n  return result;\n}", "code_t": "void __cdecl process_ipv6(Seaper *seap, NetFrame *frame,\n                          const unsigned __int8 *px, unsigned int length) {\n  __int64 v4;\n  __int64 v5;\n  process_ipv6 $45D978FCC6C45EE8F1C058F50E2A6F7D <span class=\"supfact\">ip_0</span>;\n  unsigned int offset;\n  offset = Number;\n  if (length) {\n    if (length > Number) {\n      <span class=\"supfact\">ip_0</span>.version = *px >> Number;\n      <span class=\"supfact\">ip_0</span>.next_header = px[Number];\n      <span class=\"supfact\">ip_0</span>.hop_limit = px[Number];\n      v4 = *((_QWORD *)px + Number);\n      *(_QWORD *)frame->src_ipv6 = *((_QWORD *)px + Number);\n      *(_QWORD *)&frame->src_ipv6[Number] = v4;\n      v5 = *((_QWORD *)px + Number);\n      *(_QWORD *)frame->dst_ipv6 = *((_QWORD *)px + Number);\n      *(_QWORD *)&frame->dst_ipv6[Number] = v5;\n      frame->ipver = Number;\n      if (<span class=\"supfact\">ip_0</span>.version == Number) {\n        offset += Number;\n        process_record(seap, String, Number L, String, Number, String, Number L,\n                       &<span class=\"supfact\">ip_0</span>.next_header, Number L, Number L);\n        while (Number) {\n          if (offset > length) {\n          LABEL_9:\n            FRAMERR(frame, String);\n            return;\n          }\n          if (<span class=\"supfact\">ip_0</span>.next_header)\n            break;\n        LABEL_14:\n          if (length < offset + Number)\n            goto LABEL_9;\n          <span class=\"supfact\">ip_0</span>.next_header = px[offset];\n          offset += px[offset + Number] + Number;\n        }\n        if (<span class=\"supfact\">ip_0</span>.next_header > Number ||\n            <span class=\"supfact\">ip_0</span>.next_header < Number) {\n        LABEL_18:\n          FRAMERR(frame, String, <span class=\"supfact\">ip_0</span>.next_header);\n        } else {\n          switch (<span class=\"supfact\">ip_0</span>.next_header) {\n          case Number:\n            process_udp(seap, frame, &px[offset], length - offset);\n            break;\n          case Number:\n          case Number:\n            goto LABEL_14;\n          case Number:\n            goto LABEL_9;\n          case Number:\n            process_icmpv6(seap, frame, &px[offset], length - offset);\n            break;\n          case Number:\n            return;\n          default:\n            goto LABEL_18;\n          }\n        }\n      } else {\n        FRAMERR(frame, String, <span class=\"supfact\">ip_0</span>.version);\n      }\n    } else {\n      FRAMERR(frame, String);\n    }\n  } else {\n    FRAMERR(frame, String);\n  }\n}", "var": [{"name": "v9", "type": "unsigned int", "pred_name": "flags", "ref_name": "ip_0", "ref_type": "struct process_ipv6::$45D978FCC6C45EE8F1C058F50E2A6F7D { unsigned int version; unsigned int traffic_class; unsigned int flow_label; unsigned int payload_length; unsigned int next_header; unsigned int hop_limit; unsigned __int8[16] src_ipv6; unsigned __int8[16] dst_ipv6; }"}], "body_in_train": false}, {"repo_owner": "dak664", "repo_name": "contiki-mirror", "path": "dak664/contiki-mirror/f2c7cdceb1160ff395b89217eb2be03f5bdaac37827c6cd1eb6caa0fad92c9e1", "path_in_repo": "dak664/contiki-mirror/examples/ipv6/simple-udp-rpl/obj_native/contiki-main.o", "objdump": "00000000000001c8 <main>:\n 1c8:\t55                   \tpush   %rbp\n 1c9:\t48 89 e5             \tmov    %rsp,%rbp\n 1cc:\t48 81 ec 50 01 00 00 \tsub    $0x150,%rsp\n 1d3:\t89 bd bc fe ff ff    \tmov    %edi,-0x144(%rbp)\n 1d9:\t48 89 b5 b0 fe ff ff \tmov    %rsi,-0x150(%rbp)\n 1e0:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 1e5:\te8 00 00 00 00       \tcallq  1ea <main+0x22>\n 1ea:\t8b 85 bc fe ff ff    \tmov    -0x144(%rbp),%eax\n 1f0:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 1f6 <main+0x2e>\n 1f6:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n 1fd:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 204 <main+0x3c>\n 204:\te8 00 00 00 00       \tcallq  209 <main+0x41>\n 209:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 20e:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 213:\te8 00 00 00 00       \tcallq  218 <main+0x50>\n 218:\te8 00 00 00 00       \tcallq  21d <main+0x55>\n 21d:\te8 0e ff ff ff       \tcallq  130 <set_rime_addr>\n 222:\te8 00 00 00 00       \tcallq  227 <main+0x5f>\n 227:\te8 00 00 00 00       \tcallq  22c <main+0x64>\n 22c:\t48 8b 0d 00 00 00 00 \tmov    0x0(%rip),%rcx        # 233 <main+0x6b>\n 233:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 23a <main+0x72>\n 23a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 241 <main+0x79>\n 241:\t48 89 c6             \tmov    %rax,%rsi\n 244:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 249:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 24e:\te8 00 00 00 00       \tcallq  253 <main+0x8b>\n 253:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 25a <main+0x92>\n 25a:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 261 <main+0x99>\n 261:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 266:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 26b:\te8 00 00 00 00       \tcallq  270 <main+0xa8>\n 270:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 275:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 27a:\te8 00 00 00 00       \tcallq  27f <main+0xb7>\n 27f:\tbf ff ff ff ff       \tmov    $0xffffffff,%edi\n 284:\te8 00 00 00 00       \tcallq  289 <main+0xc1>\n 289:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 28d:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n 294:\teb 3e                \tjmp    2d4 <main+0x10c>\n 296:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 299:\t01 c0                \tadd    %eax,%eax\n 29b:\t83 c0 01             \tadd    $0x1,%eax\n 29e:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n 2a2:\t48 98                \tcltq   \n 2a4:\t0f b6 44 02 02       \tmovzbl 0x2(%rdx,%rax,1),%eax\n 2a9:\t0f b6 d0             \tmovzbl %al,%edx\n 2ac:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 2af:\t01 c0                \tadd    %eax,%eax\n 2b1:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n 2b5:\t48 98                \tcltq   \n 2b7:\t0f b6 44 01 02       \tmovzbl 0x2(%rcx,%rax,1),%eax\n 2bc:\t0f b6 c0             \tmovzbl %al,%eax\n 2bf:\t89 c6                \tmov    %eax,%esi\n 2c1:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 2c6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 2cb:\te8 00 00 00 00       \tcallq  2d0 <main+0x108>\n 2d0:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 2d4:\t83 7d fc 06          \tcmpl   $0x6,-0x4(%rbp)\n 2d8:\t7e bc                \tjle    296 <main+0xce>\n 2da:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 2de:\tc6 40 12 01          \tmovb   $0x1,0x12(%rax)\n 2e2:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 2e6:\t0f b6 40 11          \tmovzbl 0x11(%rax),%eax\n 2ea:\t0f b6 d0             \tmovzbl %al,%edx\n 2ed:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 2f1:\t0f b6 40 10          \tmovzbl 0x10(%rax),%eax\n 2f5:\t0f b6 c0             \tmovzbl %al,%eax\n 2f8:\t89 c6                \tmov    %eax,%esi\n 2fa:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 2ff:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 304:\te8 00 00 00 00       \tcallq  309 <main+0x141>\n 309:\te8 00 00 00 00       \tcallq  30e <main+0x146>\n 30e:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 313:\te8 00 00 00 00       \tcallq  318 <main+0x150>\n 318:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 31f <main+0x157>\n 31f:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 324:\tba 02 00 00 00       \tmov    $0x2,%edx\n 329:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 32e:\t48 89 c7             \tmov    %rax,%rdi\n 331:\te8 00 00 00 00       \tcallq  336 <main+0x16e>\n 336:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 33b:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 340:\te8 00 00 00 00       \tcallq  345 <main+0x17d>\n 345:\te8 00 00 00 00       \tcallq  34a <main+0x182>\n 34a:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n 34d:\t48 c7 45 c0 00 00 00 \tmovq   $0x0,-0x40(%rbp)\n 354:\t00 \n 355:\t83 7d e4 00          \tcmpl   $0x0,-0x1c(%rbp)\n 359:\t74 07                \tje     362 <main+0x19a>\n 35b:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 360:\teb 05                \tjmp    367 <main+0x19f>\n 362:\tb8 e8 03 00 00       \tmov    $0x3e8,%eax\n 367:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n 36b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 370:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n 375:\t48 8d 95 c0 fe ff ff \tlea    -0x140(%rbp),%rdx\n 37c:\t48 89 d7             \tmov    %rdx,%rdi\n 37f:\tfc                   \tcld    \n 380:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n 383:\t89 f8                \tmov    %edi,%eax\n 385:\t89 ca                \tmov    %ecx,%edx\n 387:\t89 55 e0             \tmov    %edx,-0x20(%rbp)\n 38a:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n 38d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 392:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n 397:\t48 8d 95 40 ff ff ff \tlea    -0xc0(%rbp),%rdx\n 39e:\t48 89 d7             \tmov    %rdx,%rdi\n 3a1:\tfc                   \tcld    \n 3a2:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n 3a5:\t89 f8                \tmov    %edi,%eax\n 3a7:\t89 ca                \tmov    %ecx,%edx\n 3a9:\t89 55 d8             \tmov    %edx,-0x28(%rbp)\n 3ac:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n 3af:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n 3b6:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n 3bd:\teb 46                \tjmp    405 <main+0x23d>\n 3bf:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n 3c2:\t48 98                \tcltq   \n 3c4:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n 3cb:\t00 \n 3cc:\t48 85 c0             \ttest   %rax,%rax\n 3cf:\t74 30                \tje     401 <main+0x239>\n 3d1:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n 3d4:\t48 98                \tcltq   \n 3d6:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n 3dd:\t00 \n 3de:\t48 8b 08             \tmov    (%rax),%rcx\n 3e1:\t48 8d 95 40 ff ff ff \tlea    -0xc0(%rbp),%rdx\n 3e8:\t48 8d 85 c0 fe ff ff \tlea    -0x140(%rbp),%rax\n 3ef:\t48 89 d6             \tmov    %rdx,%rsi\n 3f2:\t48 89 c7             \tmov    %rax,%rdi\n 3f5:\tff d1                \tcallq  *%rcx\n 3f7:\t85 c0                \ttest   %eax,%eax\n 3f9:\t74 06                \tje     401 <main+0x239>\n 3fb:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n 3fe:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n 401:\t83 45 f4 01          \taddl   $0x1,-0xc(%rbp)\n 405:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 40b <main+0x243>\n 40b:\t39 45 f4             \tcmp    %eax,-0xc(%rbp)\n 40e:\t7e af                \tjle    3bf <main+0x1f7>\n 410:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 413:\t8d 78 01             \tlea    0x1(%rax),%edi\n 416:\t48 8d 4d c0          \tlea    -0x40(%rbp),%rcx\n 41a:\t48 8d 95 40 ff ff ff \tlea    -0xc0(%rbp),%rdx\n 421:\t48 8d 85 c0 fe ff ff \tlea    -0x140(%rbp),%rax\n 428:\t49 89 c8             \tmov    %rcx,%r8\n 42b:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 430:\t48 89 c6             \tmov    %rax,%rsi\n 433:\te8 00 00 00 00       \tcallq  438 <main+0x270>\n 438:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n 43b:\t83 7d e4 00          \tcmpl   $0x0,-0x1c(%rbp)\n 43f:\t79 0c                \tjns    44d <main+0x285>\n 441:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 446:\te8 00 00 00 00       \tcallq  44b <main+0x283>\n 44b:\teb 54                \tjmp    4a1 <main+0x2d9>\n 44d:\t83 7d e4 00          \tcmpl   $0x0,-0x1c(%rbp)\n 451:\t7e 4e                \tjle    4a1 <main+0x2d9>\n 453:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n 45a:\teb 3d                \tjmp    499 <main+0x2d1>\n 45c:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n 45f:\t48 98                \tcltq   \n 461:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n 468:\t00 \n 469:\t48 85 c0             \ttest   %rax,%rax\n 46c:\t74 27                \tje     495 <main+0x2cd>\n 46e:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n 471:\t48 98                \tcltq   \n 473:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n 47a:\t00 \n 47b:\t48 8b 48 08          \tmov    0x8(%rax),%rcx\n 47f:\t48 8d 95 40 ff ff ff \tlea    -0xc0(%rbp),%rdx\n 486:\t48 8d 85 c0 fe ff ff \tlea    -0x140(%rbp),%rax\n 48d:\t48 89 d6             \tmov    %rdx,%rsi\n 490:\t48 89 c7             \tmov    %rax,%rdi\n 493:\tff d1                \tcallq  *%rcx\n 495:\t83 45 f4 01          \taddl   $0x1,-0xc(%rbp)\n 499:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n 49c:\t3b 45 f8             \tcmp    -0x8(%rbp),%eax\n 49f:\t7e bb                \tjle    45c <main+0x294>\n 4a1:\te8 00 00 00 00       \tcallq  4a6 <main+0x2de>\n 4a6:\te9 9a fe ff ff       \tjmpq   345 <main+0x17d>", "code_s": "int __cdecl __noreturn main(int argc, const char **argv, const char **envp) {\n  __suseconds_t v3;\n  fd_set readfds;\n  fd_set writefds;\n  struct timeval timeout;\n  unsigned int v7;\n  int v8;\n  unsigned int v9;\n  int v10;\n  int v11;\n  unsigned __int8 *v12;\n  int j;\n  int v14;\n  int i;\n  puts(String);\n  contiki_argc = argc;\n  contiki_argv = (__int64)argv;\n  process_init();\n  process_start(&etimer_process, Number L);\n  ctimer_init();\n  set_rime_addr();\n  queuebuf_init();\n  netstack_init();\n  printf(String, nullmac_driver, nullrdc_driver, sicslowpan_driver);\n  uip_lladdr = serial_id;\n  process_start(&tcpip_process, Number L);\n  printf(String);\n  v12 = (unsigned __int8 *)uip_ds6_get_link_local(Number);\n  for (i = Number; i <= Number; ++i)\n    printf(String, v12[Number * i + Number], v12[Number * i + Number]);\n  v12[Number] = Number;\n  printf(String, v12[Number], v12[Number]);\n  serial_line_init();\n  autostart_start(&autostart_processes);\n  setvbuf(stdout, Number L, Number, Number L);\n  select_set_callback(Number, stdin_fd);\n  while (Number) {\n    v11 = process_run();\n    timeout.tv_sec = Number L;\n    if (v11)\n      v3 = Number L;\n    else\n      v3 = Number L;\n    timeout.tv_usec = v3;\n    memset(&readfds, Number, sizeof(readfds));\n    v10 = Number;\n    v9 = (unsigned int)&writefds;\n    memset(&writefds, Number, sizeof(writefds));\n    v8 = Number;\n    v7 = (unsigned int)&timeout;\n    v14 = Number;\n    for (j = Number; j <= select_max; ++j) {\n      if (select_callback[j] &&\n          (*(unsigned int(__fastcall **)(\n              fd_set *, fd_set *))select_callback[j])(&readfds, &writefds)) {\n        v14 = j;\n      }\n    }\n    v11 = select(v14 + Number, &readfds, &writefds, Number L, &timeout);\n    if (v11 >= Number) {\n      if (v11 > Number) {\n        for (j = Number; j <= v14; ++j) {\n          if (select_callback[j])\n            (*(void(__fastcall **)(fd_set *, fd_set *))(\n                select_callback[j] + Number))(&readfds, &writefds);\n        }\n      }\n    } else {\n      perror(String);\n    }\n    etimer_request_poll();\n  }\n}", "code_t": "int __cdecl __noreturn main(int argc, const char **argv, const char **envp) {\n  __suseconds_t v3;\n  fd_set <span class=\"supfact\">fdr</span>;\n  fd_set <span class=\"supfact\">fdw</span>;\n  timeval <span class=\"supfact\">tv</span>;\n  int __d1_0;\n  int __d0_0;\n  int __d1;\n  int __d0;\n  int retval;\n  uip_ds6_addr_t *lladdr;\n  int i_0;\n  int maxfd;\n  int i;\n  puts(String);\n  contiki_argc = argc;\n  contiki_argv = (char **)argv;\n  process_init();\n  process_start(&etimer_process, Number L);\n  ctimer_init();\n  set_rime_addr();\n  queuebuf_init();\n  netstack_init();\n  printf(String, nullmac_driver, nullrdc_driver, sicslowpan_driver);\n  uip_lladdr = *(_QWORD *)serial_id;\n  process_start(&tcpip_process, Number L);\n  printf(String);\n  lladdr = (uip_ds6_addr_t *)uip_ds6_get_link_local(Number);\n  for (i = Number; i <= Number; ++i)\n    printf(String, lladdr->ipaddr.u8[Number * i],\n           lladdr->ipaddr.u8[Number * i + Number]);\n  lladdr->state = Number;\n  printf(String, lladdr->ipaddr.u8[Number], lladdr->ipaddr.u8[Number]);\n  serial_line_init();\n  autostart_start(&autostart_processes);\n  setvbuf(stdout, Number L, Number, Number L);\n  select_set_callback(Number, &stdin_fd);\n  while (Number) {\n    retval = process_run();\n    <span class=\"supfact\">tv</span>.tv_sec = Number L;\n    if (retval)\n      v3 = Number L;\n    else\n      v3 = Number L;\n    <span class=\"supfact\">tv</span>.tv_usec = v3;\n    memset(&<span class=\"supfact\">fdr</span>, Number, sizeof(<span class=\"supfact\">fdr</span>));\n    __d0 = Number;\n    __d1 = (unsigned int)&<span class=\"supfact\">fdw</span>;\n    memset(&<span class=\"supfact\">fdw</span>, Number, sizeof(<span class=\"supfact\">fdw</span>));\n    __d0_0 = Number;\n    __d1_0 = (unsigned int)&<span class=\"supfact\">tv</span>;\n    maxfd = Number;\n    for (i_0 = Number; i_0 <= select_max; ++i_0) {\n      if (select_callback_0[i_0] &&\n          select_callback_0[i_0]->set_fd(&<span class=\"supfact\">fdr</span>,\n                                         &<span class=\"supfact\">fdw</span>))\n        maxfd = i_0;\n    }\n    retval = select(maxfd + Number, &<span class=\"supfact\">fdr</span>, &<span class=\"supfact\">fdw</span>,\n                    Number L, &<span class=\"supfact\">tv</span>);\n    if (retval >= Number) {\n      if (retval > Number) {\n        for (i_0 = Number; i_0 <= maxfd; ++i_0) {\n          if (select_callback_0[i_0])\n            select_callback_0[i_0]->handle_fd(&<span class=\"supfact\">fdr</span>,\n                                              &<span class=\"supfact\">fdw</span>);\n        }\n      }\n    } else {\n      perror(String);\n    }\n    etimer_request_poll();\n  }\n}", "var": [{"name": "readfds", "type": "struct fd_set { __fd_mask[16] __fds_bits; }", "pred_name": "fdr", "ref_name": "fdr", "ref_type": "struct fd_set { __fd_mask[16] __fds_bits; }"}, {"name": "writefds", "type": "struct fd_set { __fd_mask[16] __fds_bits; }", "pred_name": "fdw", "ref_name": "fdw", "ref_type": "struct fd_set { __fd_mask[16] __fds_bits; }"}, {"name": "timeout", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "pred_name": "tv", "ref_name": "tv", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "isDerek", "repo_name": "BTC-Device", "path": "isDerek/BTC-Device/9eb5bdb0143a63b31132ea31d83410eefa0b801b31f29f5ffc43fd093e6ca1ae", "path_in_repo": "isDerek/BTC-Device/BTC_APP/middleware/multicore/erpc/Debug/Linux/erpcsniffer/obj/erpcgen/src/types/Type.o", "objdump": "0000000000000000 <_ZNSt6vectorIPN7erpcgen9InterfaceESaIS2_EE3endEv>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 83 ec 20          \tsub    $0x20,%rsp\n   8:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  10:\t48 8d 50 08          \tlea    0x8(%rax),%rdx\n  14:\t48 8d 45 f8          \tlea    -0x8(%rbp),%rax\n  18:\t48 89 d6             \tmov    %rdx,%rsi\n  1b:\t48 89 c7             \tmov    %rax,%rdi\n  1e:\te8 00 00 00 00       \tcallq  23 <_ZNSt6vectorIPN7erpcgen9InterfaceESaIS2_EE3endEv+0x23>\n  23:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  27:\tc9                   \tleaveq \n  28:\tc3                   \tretq   ", "code_s": "__int64 __fastcall std vector<erpcgen Interface *> end(__int64 a1) {\n  __int64 v2;\n  __gnu_cxx\n      __normal_iterator<erpcgen Interface **, std vector<erpcgen Interface *>>\n          __normal_iterator(&v2, a1 + Number);\n  return v2;\n}", "code_t": "std vector<erpcgen Interface *> iterator __cdecl std vector<erpcgen Interface *>\nend(std vector<erpcgen Interface *> *const this) {\n  __gnu_cxx\n      __normal_iterator<erpcgen Interface **, std vector<erpcgen Interface *>>\n          <span class=\"supfact\">v2</span>;\n  __gnu_cxx\n      __normal_iterator<erpcgen Interface **, std vector<erpcgen Interface *>>\n          __normal_iterator(&<span class=\"supfact\">v2</span>, &this->_M_impl._M_finish);\n  return <span class=\"supfact\">v2</span>;\n}", "var": [{"name": "v2", "type": "__unk__", "pred_name": "v2", "ref_name": "v2", "ref_type": "struct __gnu_cxx::__normal_iterator<erpcgen::Interface**,std::vector<erpcgen::Interface*> > { erpcgen::Interface ** _M_current; }"}], "body_in_train": false}, {"repo_owner": "mikefm", "repo_name": "bacnet-stack", "path": "mikefm/bacnet-stack/dea2e839f22beba8f7d97098362b5c4d9f5c89ef54625144975175a854b03cee", "path_in_repo": "mikefm/bacnet-stack/bacnet-stack/demo/object/av.o", "objdump": "00000000000001d7 <Analog_Value_Read_Property>:\n 1d7:\t55                   \tpush   %rbp\n 1d8:\t48 89 e5             \tmov    %rsp,%rbp\n 1db:\t48 81 ec 20 06 00 00 \tsub    $0x620,%rsp\n 1e2:\t48 89 bd e8 f9 ff ff \tmov    %rdi,-0x618(%rbp)\n 1e9:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n 1f0:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n 1f7:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 1ff <Analog_Value_Read_Property+0x28>\n 1fe:\t00 \n 1ff:\tf3 0f 11 45 f4       \tmovss  %xmm0,-0xc(%rbp)\n 204:\tc7 45 f0 00 00 00 00 \tmovl   $0x0,-0x10(%rbp)\n 20b:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n 212:\tc6 45 eb 00          \tmovb   $0x0,-0x15(%rbp)\n 216:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n 21d:\t00 \n 21e:\t48 83 bd e8 f9 ff ff \tcmpq   $0x0,-0x618(%rbp)\n 225:\t00 \n 226:\t74 1e                \tje     246 <Analog_Value_Read_Property+0x6f>\n 228:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 22f:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n 233:\t48 85 c0             \ttest   %rax,%rax\n 236:\t74 0e                \tje     246 <Analog_Value_Read_Property+0x6f>\n 238:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 23f:\t8b 40 18             \tmov    0x18(%rax),%eax\n 242:\t85 c0                \ttest   %eax,%eax\n 244:\t75 0a                \tjne    250 <Analog_Value_Read_Property+0x79>\n 246:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 24b:\te9 88 02 00 00       \tjmpq   4d8 <Analog_Value_Read_Property+0x301>\n 250:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 257:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n 25b:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 25f:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 266:\t8b 40 04             \tmov    0x4(%rax),%eax\n 269:\t89 c7                \tmov    %eax,%edi\n 26b:\te8 00 00 00 00       \tcallq  270 <Analog_Value_Read_Property+0x99>\n 270:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n 273:\t83 7d f0 03          \tcmpl   $0x3,-0x10(%rbp)\n 277:\t77 26                \tja     29f <Analog_Value_Read_Property+0xc8>\n 279:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n 27c:\t48 c1 e0 03          \tshl    $0x3,%rax\n 280:\t48 05 00 00 00 00    \tadd    $0x0,%rax\n 286:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n 28a:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 291:\t8b 40 08             \tmov    0x8(%rax),%eax\n 294:\t83 f8 75             \tcmp    $0x75,%eax\n 297:\t0f 87 bc 01 00 00    \tja     459 <Analog_Value_Read_Property+0x282>\n 29d:\teb 0a                \tjmp    2a9 <Analog_Value_Read_Property+0xd2>\n 29f:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n 2a4:\te9 2f 02 00 00       \tjmpq   4d8 <Analog_Value_Read_Property+0x301>\n 2a9:\t83 f8 4b             \tcmp    $0x4b,%eax\n 2ac:\t73 13                \tjae    2c1 <Analog_Value_Read_Property+0xea>\n 2ae:\t83 f8 1c             \tcmp    $0x1c,%eax\n 2b1:\t74 49                \tje     2fc <Analog_Value_Read_Property+0x125>\n 2b3:\t83 f8 24             \tcmp    $0x24,%eax\n 2b6:\t0f 84 47 01 00 00    \tje     403 <Analog_Value_Read_Property+0x22c>\n 2bc:\te9 98 01 00 00       \tjmpq   459 <Analog_Value_Read_Property+0x282>\n 2c1:\t83 e8 4b             \tsub    $0x4b,%eax\n 2c4:\t83 f8 2a             \tcmp    $0x2a,%eax\n 2c7:\t0f 87 8c 01 00 00    \tja     459 <Analog_Value_Read_Property+0x282>\n 2cd:\t89 c0                \tmov    %eax,%eax\n 2cf:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n 2d6:\t00 \n 2d7:\tff e0                \tjmpq   *%rax\n 2d9:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 2e0:\t8b 50 04             \tmov    0x4(%rax),%edx\n 2e3:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 2e7:\tbe 02 00 00 00       \tmov    $0x2,%esi\n 2ec:\t48 89 c7             \tmov    %rax,%rdi\n 2ef:\te8 00 00 00 00       \tcallq  2f4 <Analog_Value_Read_Property+0x11d>\n 2f4:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 2f7:\te9 81 01 00 00       \tjmpq   47d <Analog_Value_Read_Property+0x2a6>\n 2fc:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 303:\t8b 40 04             \tmov    0x4(%rax),%eax\n 306:\t48 8d 95 f0 f9 ff ff \tlea    -0x610(%rbp),%rdx\n 30d:\t48 89 d6             \tmov    %rdx,%rsi\n 310:\t89 c7                \tmov    %eax,%edi\n 312:\te8 00 00 00 00       \tcallq  317 <Analog_Value_Read_Property+0x140>\n 317:\t48 8d 95 f0 f9 ff ff \tlea    -0x610(%rbp),%rdx\n 31e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 322:\t48 89 d6             \tmov    %rdx,%rsi\n 325:\t48 89 c7             \tmov    %rax,%rdi\n 328:\te8 00 00 00 00       \tcallq  32d <Analog_Value_Read_Property+0x156>\n 32d:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 330:\te9 48 01 00 00       \tjmpq   47d <Analog_Value_Read_Property+0x2a6>\n 335:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 339:\tbe 02 00 00 00       \tmov    $0x2,%esi\n 33e:\t48 89 c7             \tmov    %rax,%rdi\n 341:\te8 00 00 00 00       \tcallq  346 <Analog_Value_Read_Property+0x16f>\n 346:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 349:\te9 2f 01 00 00       \tjmpq   47d <Analog_Value_Read_Property+0x2a6>\n 34e:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 355:\t8b 40 04             \tmov    0x4(%rax),%eax\n 358:\t89 c7                \tmov    %eax,%edi\n 35a:\te8 00 00 00 00       \tcallq  35f <Analog_Value_Read_Property+0x188>\n 35f:\t66 0f 7e c0          \tmovd   %xmm0,%eax\n 363:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n 366:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n 369:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 36d:\t66 0f 6e c2          \tmovd   %edx,%xmm0\n 371:\t48 89 c7             \tmov    %rax,%rdi\n 374:\te8 00 00 00 00       \tcallq  379 <Analog_Value_Read_Property+0x1a2>\n 379:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 37c:\te9 fc 00 00 00       \tjmpq   47d <Analog_Value_Read_Property+0x2a6>\n 381:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 385:\t48 89 c7             \tmov    %rax,%rdi\n 388:\te8 00 00 00 00       \tcallq  38d <Analog_Value_Read_Property+0x1b6>\n 38d:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 391:\tba 00 00 00 00       \tmov    $0x0,%edx\n 396:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 39b:\t48 89 c7             \tmov    %rax,%rdi\n 39e:\te8 00 00 00 00       \tcallq  3a3 <Analog_Value_Read_Property+0x1cc>\n 3a3:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 3a7:\tba 00 00 00 00       \tmov    $0x0,%edx\n 3ac:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 3b1:\t48 89 c7             \tmov    %rax,%rdi\n 3b4:\te8 00 00 00 00       \tcallq  3b9 <Analog_Value_Read_Property+0x1e2>\n 3b9:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 3bd:\tba 00 00 00 00       \tmov    $0x0,%edx\n 3c2:\tbe 02 00 00 00       \tmov    $0x2,%esi\n 3c7:\t48 89 c7             \tmov    %rax,%rdi\n 3ca:\te8 00 00 00 00       \tcallq  3cf <Analog_Value_Read_Property+0x1f8>\n 3cf:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 3d3:\t0f b6 40 01          \tmovzbl 0x1(%rax),%eax\n 3d7:\t0f b6 d0             \tmovzbl %al,%edx\n 3da:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 3de:\tbe 03 00 00 00       \tmov    $0x3,%esi\n 3e3:\t48 89 c7             \tmov    %rax,%rdi\n 3e6:\te8 00 00 00 00       \tcallq  3eb <Analog_Value_Read_Property+0x214>\n 3eb:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n 3ef:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 3f3:\t48 89 d6             \tmov    %rdx,%rsi\n 3f6:\t48 89 c7             \tmov    %rax,%rdi\n 3f9:\te8 00 00 00 00       \tcallq  3fe <Analog_Value_Read_Property+0x227>\n 3fe:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 401:\teb 7a                \tjmp    47d <Analog_Value_Read_Property+0x2a6>\n 403:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 407:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 40c:\t48 89 c7             \tmov    %rax,%rdi\n 40f:\te8 00 00 00 00       \tcallq  414 <Analog_Value_Read_Property+0x23d>\n 414:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 417:\teb 64                \tjmp    47d <Analog_Value_Read_Property+0x2a6>\n 419:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 41d:\t0f b6 40 01          \tmovzbl 0x1(%rax),%eax\n 421:\t88 45 eb             \tmov    %al,-0x15(%rbp)\n 424:\t0f b6 55 eb          \tmovzbl -0x15(%rbp),%edx\n 428:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 42c:\t89 d6                \tmov    %edx,%esi\n 42e:\t48 89 c7             \tmov    %rax,%rdi\n 431:\te8 00 00 00 00       \tcallq  436 <Analog_Value_Read_Property+0x25f>\n 436:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 439:\teb 42                \tjmp    47d <Analog_Value_Read_Property+0x2a6>\n 43b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 43f:\t0f b7 40 02          \tmovzwl 0x2(%rax),%eax\n 443:\t0f b7 d0             \tmovzwl %ax,%edx\n 446:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 44a:\t89 d6                \tmov    %edx,%esi\n 44c:\t48 89 c7             \tmov    %rax,%rdi\n 44f:\te8 00 00 00 00       \tcallq  454 <Analog_Value_Read_Property+0x27d>\n 454:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 457:\teb 24                \tjmp    47d <Analog_Value_Read_Property+0x2a6>\n 459:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 460:\tc7 40 1c 02 00 00 00 \tmovl   $0x2,0x1c(%rax)\n 467:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 46e:\tc7 40 20 20 00 00 00 \tmovl   $0x20,0x20(%rax)\n 475:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n 47c:\t90                   \tnop\n 47d:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n 481:\t78 52                \tjs     4d5 <Analog_Value_Read_Property+0x2fe>\n 483:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 48a:\t8b 40 08             \tmov    0x8(%rax),%eax\n 48d:\t83 f8 57             \tcmp    $0x57,%eax\n 490:\t74 43                \tje     4d5 <Analog_Value_Read_Property+0x2fe>\n 492:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 499:\t8b 40 08             \tmov    0x8(%rax),%eax\n 49c:\t3d 82 00 00 00       \tcmp    $0x82,%eax\n 4a1:\t74 32                \tje     4d5 <Analog_Value_Read_Property+0x2fe>\n 4a3:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 4aa:\t8b 40 0c             \tmov    0xc(%rax),%eax\n 4ad:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n 4b0:\t74 23                \tje     4d5 <Analog_Value_Read_Property+0x2fe>\n 4b2:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 4b9:\tc7 40 1c 02 00 00 00 \tmovl   $0x2,0x1c(%rax)\n 4c0:\t48 8b 85 e8 f9 ff ff \tmov    -0x618(%rbp),%rax\n 4c7:\tc7 40 20 32 00 00 00 \tmovl   $0x32,0x20(%rax)\n 4ce:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n 4d5:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 4d8:\tc9                   \tleaveq \n 4d9:\tc3                   \tretq   ", "code_s": "__int64 __fastcall Analog_Value_Read_Property(__int64 a1) {\n  __m128i v1;\n  unsigned int v3;\n  char v4[Number];\n  char v5[Number];\n  int *v6;\n  __int64 v7;\n  unsigned __int8 v8;\n  int v9;\n  unsigned int v10;\n  unsigned int v11;\n  int v12;\n  unsigned int v13;\n  v12 = Number;\n  v13 = Number;\n  v1 = (__m128i)Number;\n  v11 = Number;\n  v10 = Number;\n  v9 = Number;\n  v8 = Number;\n  v7 = Number L;\n  if (!a1 || !*(_QWORD *)(a1 + Number) || !*(_DWORD *)(a1 + Number))\n    return Number L;\n  v7 = *(_QWORD *)(a1 + Number);\n  v10 = Analog_Value_Instance_To_Index(*(_DWORD *)(a1 + Number));\n  if (v10 > Number)\n    return Number;\n  v6 = &AV_Descr[Number * v10];\n  v3 = *(_DWORD *)(a1 + Number);\n  if (v3 > Number)\n    goto LABEL_22;\n  if (v3 >= Number) {\n    switch (v3) {\n    case String:\n      v13 = encode_application_object_id(v7, Number L,\n                                         *(unsigned int *)(a1 + Number));\n      break;\n    case String:\n      goto LABEL_15;\n    case String:\n      v13 = encode_application_enumerated(v7, Number L);\n      break;\n    case String:\n      v8 = *((_BYTE *)v6 + Number);\n      v13 = encode_application_boolean(v7, v8);\n      break;\n    case String:\n      *(float *)v1.m128i_i32 =\n          Analog_Value_Present_Value(*(_DWORD *)(a1 + Number));\n      v11 = _mm_cvtsi128_si32(v1);\n      v13 = encode_application_real(\n          v7, *(double *)_mm_cvtsi32_si128(v11).m128i_i64);\n      break;\n    case String:\n      bitstring_init(v5);\n      bitstring_set_bit(v5, Number L, Number L);\n      bitstring_set_bit(v5, Number L, Number L);\n      bitstring_set_bit(v5, Number L, Number L);\n      bitstring_set_bit(v5, Number L, *((unsigned __int8 *)v6 + Number));\n      v13 = encode_application_bitstring(v7, v5);\n      break;\n    case String:\n      v13 =\n          encode_application_enumerated(v7, *((unsigned __int16 *)v6 + Number));\n      break;\n    default:\n      goto LABEL_22;\n    }\n    goto LABEL_23;\n  }\n  if (v3 == Number) {\n  LABEL_15:\n    Analog_Value_Object_Name(*(_DWORD *)(a1 + Number), (__int64)v4);\n    v13 = encode_application_character_string(v7, v4);\n    goto LABEL_23;\n  }\n  if (v3 == Number) {\n    v13 = encode_application_enumerated(v7, Number L);\n  } else {\n  LABEL_22:\n    *(_DWORD *)(a1 + Number) = Number;\n    *(_DWORD *)(a1 + Number) = Number;\n    v13 = Number;\n  }\nLABEL_23:\n  if ((v13 & Number) == Number && *(_DWORD *)(a1 + Number) != Number &&\n      *(_DWORD *)(a1 + Number) != Number &&\n      *(_DWORD *)(a1 + Number) != Number) {\n    *(_DWORD *)(a1 + Number) = Number;\n    *(_DWORD *)(a1 + Number) = Number;\n    v13 = Number;\n  }\n  return v13;\n}", "code_t": "int __cdecl Analog_Value_Read_Property(BACNET_READ_PROPERTY_DATA *rpdata) {\n  __m128i v1;\n  BACNET_PROPERTY_ID v3;\n  BACNET_CHARACTER_STRING <span class=\"supfact\">char_string</span>;\n  BACNET_BIT_STRING <span class=\"supfact\">bit_string</span>;\n  ANALOG_VALUE_DESCR *CurrentAV;\n  uint8_t *apdu;\n  bool state;\n  unsigned int i;\n  unsigned int object_index;\n  float real_value;\n  int len;\n  int apdu_len;\n  len = Number;\n  apdu_len = Number;\n  v1 = (__m128i)Number;\n  real_value = Number;\n  object_index = Number;\n  i = Number;\n  state = Number;\n  apdu = Number L;\n  if (!rpdata || !rpdata->application_data || !rpdata->application_data_len)\n    return Number;\n  apdu = rpdata->application_data;\n  object_index = Analog_Value_Instance_To_Index(rpdata->object_instance);\n  if (object_index > Number)\n    return Number;\n  CurrentAV = &AV_Descr[object_index];\n  v3 = rpdata->object_property;\n  if ((unsigned int)v3 > PROP_UNITS)\n    goto LABEL_22;\n  if ((unsigned int)v3 >= PROP_OBJECT_IDENTIFIER) {\n    switch (v3) {\n    case PROP_OBJECT_IDENTIFIER:\n      apdu_len =\n          encode_application_object_id(apdu, Number L, rpdata->object_instance);\n      break;\n    case PROP_OBJECT_NAME:\n      goto LABEL_15;\n    case PROP_OBJECT_TYPE:\n      apdu_len = encode_application_enumerated(apdu, Number L);\n      break;\n    case PROP_OUT_OF_SERVICE:\n      state = CurrentAV->Out_Of_Service;\n      apdu_len = encode_application_boolean(apdu, state);\n      break;\n    case PROP_PRESENT_VALUE:\n      *(float *)v1.m128i_i32 =\n          Analog_Value_Present_Value(rpdata->object_instance);\n      LODWORD(real_value) = _mm_cvtsi128_si32(v1);\n      apdu_len = encode_application_real(\n          apdu, *(double *)_mm_cvtsi32_si128(LODWORD(real_value)).m128i_i64);\n      break;\n    case PROP_STATUS_FLAGS:\n      bitstring_init(&<span class=\"supfact\">bit_string</span>);\n      bitstring_set_bit(&<span class=\"supfact\">bit_string</span>, Number L, Number L);\n      bitstring_set_bit(&<span class=\"supfact\">bit_string</span>, Number L, Number L);\n      bitstring_set_bit(&<span class=\"supfact\">bit_string</span>, Number L, Number L);\n      bitstring_set_bit(&<span class=\"supfact\">bit_string</span>, Number L,\n                        CurrentAV->Out_Of_Service);\n      apdu_len =\n          encode_application_bitstring(apdu, &<span class=\"supfact\">bit_string</span>);\n      break;\n    case PROP_UNITS:\n      apdu_len = encode_application_enumerated(apdu, CurrentAV->Units);\n      break;\n    default:\n      goto LABEL_22;\n    }\n    goto LABEL_23;\n  }\n  if (v3 == PROP_DESCRIPTION) {\n  LABEL_15:\n    Analog_Value_Object_Name(rpdata->object_instance,\n                             &<span class=\"supfact\">char_string</span>);\n    apdu_len =\n        encode_application_character_string(apdu, &<span class=\"supfact\">char_string</span>);\n    goto LABEL_23;\n  }\n  if (v3 == PROP_EVENT_STATE) {\n    apdu_len = encode_application_enumerated(apdu, Number L);\n  } else {\n  LABEL_22:\n    rpdata->error_class = ERROR_CLASS_PROPERTY;\n    rpdata->error_code = ERROR_CODE_UNKNOWN_PROPERTY;\n    apdu_len = Number;\n  }\nLABEL_23:\n  if (apdu_len >= Number && rpdata->object_property != PROP_PRIORITY_ARRAY &&\n      rpdata->object_property != PROP_EVENT_TIME_STAMPS &&\n      rpdata->array_index != Number) {\n    rpdata->error_class = ERROR_CLASS_PROPERTY;\n    rpdata->error_code = ERROR_CODE_PROPERTY_IS_NOT_AN_ARRAY;\n    apdu_len = Number;\n  }\n  return apdu_len;\n}", "var": [{"name": "v4", "type": "struct BACNET_CHARACTER_STRING { size_t length; uint8_t encoding; char[1470] value; PADDING (1); }", "pred_name": "char_string", "ref_name": "char_string", "ref_type": "struct BACNET_CHARACTER_STRING { size_t length; uint8_t encoding; char[1470] value; PADDING (1); }"}, {"name": "v5", "type": "struct BACNET_BIT_STRING { uint8_t bits_used; uint8_t[15] value; }", "pred_name": "bit_string", "ref_name": "bit_string", "ref_type": "struct BACNET_BIT_STRING { uint8_t bits_used; uint8_t[15] value; }"}], "body_in_train": false}, {"repo_owner": "romankap", "repo_name": "Using-dlib", "path": "romankap/Using-dlib/766bcf8bcc38eb3333eafe35477505bf8886df5fe2442f70bccacd8e853a3e17", "path_in_repo": "romankap/Using-dlib/Lot_w_dlib/dlib-18.10/dlib/test/tokenizer.o", "objdump": "00000000000000f8 <_ZN12_GLOBAL__N_116tokenizer_tester12perform_testEv>:\n      f8:\t55                   \tpush   %rbp\n      f9:\t48 89 e5             \tmov    %rsp,%rbp\n      fc:\t53                   \tpush   %rbx\n      fd:\t48 83 ec 58          \tsub    $0x58,%rsp\n     101:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n     105:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n     109:\tba 00 00 00 00       \tmov    $0x0,%edx\n     10e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     113:\t48 89 c7             \tmov    %rax,%rdi\n     116:\te8 00 00 00 00       \tcallq  11b <_ZN12_GLOBAL__N_116tokenizer_tester12perform_testEv+0x23>\n     11b:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n     11f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     124:\t48 89 c7             \tmov    %rax,%rdi\n     127:\te8 00 00 00 00       \tcallq  12c <_ZN12_GLOBAL__N_116tokenizer_tester12perform_testEv+0x34>\n     12c:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n     130:\t48 89 c7             \tmov    %rax,%rdi\n     133:\te8 00 00 00 00       \tcallq  138 <_ZN12_GLOBAL__N_116tokenizer_tester12perform_testEv+0x40>\n     138:\te8 75 00 00 00       \tcallq  1b2 <_ZN12_GLOBAL__N_121tokenizer_kernel_testIN4dlib18tokenizer_kernel_1EEEvv>\n     13d:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     141:\tba 00 00 00 00       \tmov    $0x0,%edx\n     146:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     14b:\t48 89 c7             \tmov    %rax,%rdi\n     14e:\te8 00 00 00 00       \tcallq  153 <_ZN12_GLOBAL__N_116tokenizer_tester12perform_testEv+0x5b>\n     153:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     157:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     15c:\t48 89 c7             \tmov    %rax,%rdi\n     15f:\te8 00 00 00 00       \tcallq  164 <_ZN12_GLOBAL__N_116tokenizer_tester12perform_testEv+0x6c>\n     164:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     168:\t48 89 c7             \tmov    %rax,%rdi\n     16b:\te8 00 00 00 00       \tcallq  170 <_ZN12_GLOBAL__N_116tokenizer_tester12perform_testEv+0x78>\n     170:\te8 80 59 00 00       \tcallq  5af5 <_ZN12_GLOBAL__N_121tokenizer_kernel_testIN4dlib18tokenizer_kernel_cINS1_18tokenizer_kernel_1EEEEEvv>\n     175:\teb 34                \tjmp    1ab <_ZN12_GLOBAL__N_116tokenizer_tester12perform_testEv+0xb3>\n     177:\t48 89 c3             \tmov    %rax,%rbx\n     17a:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n     17e:\t48 89 c7             \tmov    %rax,%rdi\n     181:\te8 00 00 00 00       \tcallq  186 <_ZN12_GLOBAL__N_116tokenizer_tester12perform_testEv+0x8e>\n     186:\t48 89 d8             \tmov    %rbx,%rax\n     189:\t48 89 c7             \tmov    %rax,%rdi\n     18c:\te8 00 00 00 00       \tcallq  191 <_ZN12_GLOBAL__N_116tokenizer_tester12perform_testEv+0x99>\n     191:\t48 89 c3             \tmov    %rax,%rbx\n     194:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     198:\t48 89 c7             \tmov    %rax,%rdi\n     19b:\te8 00 00 00 00       \tcallq  1a0 <_ZN12_GLOBAL__N_116tokenizer_tester12perform_testEv+0xa8>\n     1a0:\t48 89 d8             \tmov    %rbx,%rax\n     1a3:\t48 89 c7             \tmov    %rax,%rdi\n     1a6:\te8 00 00 00 00       \tcallq  1ab <_ZN12_GLOBAL__N_116tokenizer_tester12perform_testEv+0xb3>\n     1ab:\t48 83 c4 58          \tadd    $0x58,%rsp\n     1af:\t5b                   \tpop    %rbx\n     1b0:\t5d                   \tpop    %rbp\n     1b1:\tc3                   \tretq   ", "code_s": "__int64 __fastcall ` anonymous namespace ' tokenizer_tester perform_test ( _anonymous_namespace_ tokenizer_tester * this ) { char v2 [ Number ] ; char v3 [ Number ] ; dlib logger operator << ( v2 , & ` anonymous namespace ' dlog , & dlib LINFO ) ;\ndlib logger logger_stream operator<<<char[Number]>(v2, String);\ndlib logger logger_stream ~logger_stream((dlib logger logger_stream *)v2); ` anonymous namespace ' tokenizer_kernel_test < dlib tokenizer_kernel_1 > ( ) ; dlib logger operator << ( v3 , & ` anonymous namespace ' dlog , & dlib LINFO ) ;\ndlib logger logger_stream operator<<<char[Number]>(v3, String);\ndlib logger logger_stream ~logger_stream((dlib logger logger_stream *)v3);\nreturn ` anonymous namespace ' tokenizer_kernel_test < dlib tokenizer_kernel_c < dlib tokenizer_kernel_1 >> ( ) ; }", "code_t": "void __cdecl ` anonymous namespace ' tokenizer_tester perform_test ( ` anonymous namespace ' tokenizer_tester * const this ) {\n  dlib logger logger_stream <span class=\"supfact\">v1</span>;\n  dlib logger logger_stream <span class=\"supfact\">v2</span>; dlib logger operator << ( & <span class=\"supfact\">v1</span> , ( const dlib logger * const ) & ` anonymous namespace ' dlog , & dlib LINFO ) ; dlib logger logger_stream operator << < char [ Number ] > ( & <span class=\"supfact\">v1</span> , ( const char ( * ) [ Number ] ) String ) ; dlib logger logger_stream ~ logger_stream ( & <span class=\"supfact\">v1</span> ) ; ` anonymous namespace ' tokenizer_kernel_test < dlib tokenizer_kernel_1 > ( ) ; dlib logger operator << ( & <span class=\"supfact\">v2</span> , ( const dlib logger * const ) & ` anonymous namespace ' dlog , & dlib LINFO ) ; dlib logger logger_stream operator << < char [ Number ] > ( & <span class=\"supfact\">v2</span> , ( const char ( * ) [ Number ] ) String ) ; dlib logger logger_stream ~ logger_stream ( & <span class=\"supfact\">v2</span> ) ; ` anonymous namespace ' tokenizer_kernel_test < dlib tokenizer_kernel_c < dlib tokenizer_kernel_1 >> ( ) ;\n}", "var": [{"name": "v2", "type": "struct dlib::logger::logger_stream { const dlib::log_level * l; dlib::logger * log; bool been_used; const bool enabled; PADDING (6); }", "pred_name": "v1", "ref_name": "v1", "ref_type": "struct dlib::logger::logger_stream { const dlib::log_level * l; dlib::logger * log; bool been_used; const bool enabled; PADDING (6); }"}, {"name": "v3", "type": "struct dlib::logger::logger_stream { const dlib::log_level * l; dlib::logger * log; bool been_used; const bool enabled; PADDING (6); }", "pred_name": "v2", "ref_name": "v2", "ref_type": "struct dlib::logger::logger_stream { const dlib::log_level * l; dlib::logger * log; bool been_used; const bool enabled; PADDING (6); }"}], "body_in_train": false}, {"repo_owner": "slapin", "repo_name": "q2-dev", "path": "slapin/q2-dev/e51f8784d4e274106215b6d2842e6cffa049247086d7565350afce0a7ab9107f", "path_in_repo": "slapin/q2-dev/game/debugx86_64/game/g_chase.o", "objdump": "0000000000000000 <UpdateChaseCam>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 81 ec 20 01 00 00 \tsub    $0x120,%rsp\n   b:\t48 89 bd 38 ff ff ff \tmov    %rdi,-0xc8(%rbp)\n  12:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  19:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n  1d:\t48 8b 80 f8 0e 00 00 \tmov    0xef8(%rax),%rax\n  24:\t8b 40 60             \tmov    0x60(%rax),%eax\n  27:\t85 c0                \ttest   %eax,%eax\n  29:\t74 20                \tje     4b <UpdateChaseCam+0x4b>\n  2b:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  32:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n  36:\t48 8b 80 f8 0e 00 00 \tmov    0xef8(%rax),%rax\n  3d:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n  41:\t8b 80 a4 0d 00 00    \tmov    0xda4(%rax),%eax\n  47:\t85 c0                \ttest   %eax,%eax\n  49:\t74 78                \tje     c3 <UpdateChaseCam+0xc3>\n  4b:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  52:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n  56:\t48 8b 80 f8 0e 00 00 \tmov    0xef8(%rax),%rax\n  5d:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  61:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  68:\t48 89 c7             \tmov    %rax,%rdi\n  6b:\te8 00 00 00 00       \tcallq  70 <UpdateChaseCam+0x70>\n  70:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  77:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n  7b:\t48 8b 80 f8 0e 00 00 \tmov    0xef8(%rax),%rax\n  82:\t48 39 45 f0          \tcmp    %rax,-0x10(%rbp)\n  86:\t75 3b                \tjne    c3 <UpdateChaseCam+0xc3>\n  88:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  8f:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n  93:\t48 c7 80 f8 0e 00 00 \tmovq   $0x0,0xef8(%rax)\n  9a:\t00 00 00 00 \n  9e:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  a5:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n  a9:\t0f b6 50 10          \tmovzbl 0x10(%rax),%edx\n  ad:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  b4:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n  b8:\t83 e2 bf             \tand    $0xffffffbf,%edx\n  bb:\t88 50 10             \tmov    %dl,0x10(%rax)\n  be:\te9 11 07 00 00       \tjmpq   7d4 <UpdateChaseCam+0x7d4>\n  c3:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  ca:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n  ce:\t48 8b 80 f8 0e 00 00 \tmov    0xef8(%rax),%rax\n  d5:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  d9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  dd:\tf3 0f 10 40 04       \tmovss  0x4(%rax),%xmm0\n  e2:\tf3 0f 11 45 d0       \tmovss  %xmm0,-0x30(%rbp)\n  e7:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  eb:\tf3 0f 10 40 08       \tmovss  0x8(%rax),%xmm0\n  f0:\tf3 0f 11 45 d4       \tmovss  %xmm0,-0x2c(%rbp)\n  f5:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  f9:\tf3 0f 10 40 0c       \tmovss  0xc(%rax),%xmm0\n  fe:\tf3 0f 11 45 d8       \tmovss  %xmm0,-0x28(%rbp)\n 103:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 10a:\tf3 0f 10 40 04       \tmovss  0x4(%rax),%xmm0\n 10f:\tf3 0f 11 85 54 ff ff \tmovss  %xmm0,-0xac(%rbp)\n 116:\tff \n 117:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 11e:\tf3 0f 10 40 08       \tmovss  0x8(%rax),%xmm0\n 123:\tf3 0f 11 85 58 ff ff \tmovss  %xmm0,-0xa8(%rbp)\n 12a:\tff \n 12b:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 132:\tf3 0f 10 40 0c       \tmovss  0xc(%rax),%xmm0\n 137:\tf3 0f 11 85 5c ff ff \tmovss  %xmm0,-0xa4(%rbp)\n 13e:\tff \n 13f:\tf3 0f 10 4d d8       \tmovss  -0x28(%rbp),%xmm1\n 144:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 148:\t8b 80 78 02 00 00    \tmov    0x278(%rax),%eax\n 14e:\tf3 0f 2a c0          \tcvtsi2ss %eax,%xmm0\n 152:\tf3 0f 58 c1          \taddss  %xmm1,%xmm0\n 156:\tf3 0f 11 45 d8       \tmovss  %xmm0,-0x28(%rbp)\n 15b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 15f:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 163:\tf3 0f 10 80 54 0e 00 \tmovss  0xe54(%rax),%xmm0\n 16a:\t00 \n 16b:\tf3 0f 11 85 48 ff ff \tmovss  %xmm0,-0xb8(%rbp)\n 172:\tff \n 173:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 177:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 17b:\tf3 0f 10 80 58 0e 00 \tmovss  0xe58(%rax),%xmm0\n 182:\t00 \n 183:\tf3 0f 11 85 4c ff ff \tmovss  %xmm0,-0xb4(%rbp)\n 18a:\tff \n 18b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 18f:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 193:\tf3 0f 10 80 5c 0e 00 \tmovss  0xe5c(%rax),%xmm0\n 19a:\t00 \n 19b:\tf3 0f 11 85 50 ff ff \tmovss  %xmm0,-0xb0(%rbp)\n 1a2:\tff \n 1a3:\tf3 0f 10 85 48 ff ff \tmovss  -0xb8(%rbp),%xmm0\n 1aa:\tff \n 1ab:\t0f 2f 05 00 00 00 00 \tcomiss 0x0(%rip),%xmm0        # 1b2 <UpdateChaseCam+0x1b2>\n 1b2:\t76 10                \tjbe    1c4 <UpdateChaseCam+0x1c4>\n 1b4:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 1bc <UpdateChaseCam+0x1bc>\n 1bb:\t00 \n 1bc:\tf3 0f 11 85 48 ff ff \tmovss  %xmm0,-0xb8(%rbp)\n 1c3:\tff \n 1c4:\t48 8d 55 ac          \tlea    -0x54(%rbp),%rdx\n 1c8:\t48 8d 75 b8          \tlea    -0x48(%rbp),%rsi\n 1cc:\t48 8d 85 48 ff ff ff \tlea    -0xb8(%rbp),%rax\n 1d3:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 1d8:\t48 89 c7             \tmov    %rax,%rdi\n 1db:\te8 00 00 00 00       \tcallq  1e0 <UpdateChaseCam+0x1e0>\n 1e0:\t48 8d 45 b8          \tlea    -0x48(%rbp),%rax\n 1e4:\t48 89 c7             \tmov    %rax,%rdi\n 1e7:\te8 00 00 00 00       \tcallq  1ec <UpdateChaseCam+0x1ec>\n 1ec:\t48 8d 55 dc          \tlea    -0x24(%rbp),%rdx\n 1f0:\t48 8d 4d b8          \tlea    -0x48(%rbp),%rcx\n 1f4:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n 1f8:\t48 89 ce             \tmov    %rcx,%rsi\n 1fb:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 203 <UpdateChaseCam+0x203>\n 202:\t00 \n 203:\t48 89 c7             \tmov    %rax,%rdi\n 206:\te8 00 00 00 00       \tcallq  20b <UpdateChaseCam+0x20b>\n 20b:\tf3 0f 10 4d e4       \tmovss  -0x1c(%rbp),%xmm1\n 210:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 214:\tf3 0f 10 50 0c       \tmovss  0xc(%rax),%xmm2\n 219:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 221 <UpdateChaseCam+0x221>\n 220:\t00 \n 221:\tf3 0f 58 c2          \taddss  %xmm2,%xmm0\n 225:\t0f 2f c1             \tcomiss %xmm1,%xmm0\n 228:\t76 1a                \tjbe    244 <UpdateChaseCam+0x244>\n 22a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 22e:\tf3 0f 10 48 0c       \tmovss  0xc(%rax),%xmm1\n 233:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 23b <UpdateChaseCam+0x23b>\n 23a:\t00 \n 23b:\tf3 0f 58 c1          \taddss  %xmm1,%xmm0\n 23f:\tf3 0f 11 45 e4       \tmovss  %xmm0,-0x1c(%rbp)\n 244:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 248:\t48 8b 80 b8 02 00 00 \tmov    0x2b8(%rax),%rax\n 24f:\t48 85 c0             \ttest   %rax,%rax\n 252:\t75 16                \tjne    26a <UpdateChaseCam+0x26a>\n 254:\tf3 0f 10 4d e4       \tmovss  -0x1c(%rbp),%xmm1\n 259:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 261 <UpdateChaseCam+0x261>\n 260:\t00 \n 261:\tf3 0f 58 c1          \taddss  %xmm1,%xmm0\n 265:\tf3 0f 11 45 e4       \tmovss  %xmm0,-0x1c(%rbp)\n 26a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 271 <UpdateChaseCam+0x271>\n 271:\t4c 8b 50 60          \tmov    0x60(%rax),%r10\n 275:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n 27c:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n 280:\t48 8d 55 dc          \tlea    -0x24(%rbp),%rdx\n 284:\t48 8d 75 d0          \tlea    -0x30(%rbp),%rsi\n 288:\t48 83 ec 08          \tsub    $0x8,%rsp\n 28c:\t6a 03                \tpushq  $0x3\n 28e:\t49 89 c9             \tmov    %rcx,%r9\n 291:\t49 89 d0             \tmov    %rdx,%r8\n 294:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 29b <UpdateChaseCam+0x29b>\n 29b:\t48 89 d1             \tmov    %rdx,%rcx\n 29e:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 2a5 <UpdateChaseCam+0x2a5>\n 2a5:\t48 89 c7             \tmov    %rax,%rdi\n 2a8:\t41 ff d2             \tcallq  *%r10\n 2ab:\t48 83 c4 10          \tadd    $0x10,%rsp\n 2af:\tf3 0f 10 85 6c ff ff \tmovss  -0x94(%rbp),%xmm0\n 2b6:\tff \n 2b7:\tf3 0f 11 45 c4       \tmovss  %xmm0,-0x3c(%rbp)\n 2bc:\tf3 0f 10 85 70 ff ff \tmovss  -0x90(%rbp),%xmm0\n 2c3:\tff \n 2c4:\tf3 0f 11 45 c8       \tmovss  %xmm0,-0x38(%rbp)\n 2c9:\tf3 0f 10 85 74 ff ff \tmovss  -0x8c(%rbp),%xmm0\n 2d0:\tff \n 2d1:\tf3 0f 11 45 cc       \tmovss  %xmm0,-0x34(%rbp)\n 2d6:\t48 8d 55 c4          \tlea    -0x3c(%rbp),%rdx\n 2da:\t48 8d 4d b8          \tlea    -0x48(%rbp),%rcx\n 2de:\t48 8d 45 c4          \tlea    -0x3c(%rbp),%rax\n 2e2:\t48 89 ce             \tmov    %rcx,%rsi\n 2e5:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 2ed <UpdateChaseCam+0x2ed>\n 2ec:\t00 \n 2ed:\t48 89 c7             \tmov    %rax,%rdi\n 2f0:\te8 00 00 00 00       \tcallq  2f5 <UpdateChaseCam+0x2f5>\n 2f5:\tf3 0f 10 45 c4       \tmovss  -0x3c(%rbp),%xmm0\n 2fa:\tf3 0f 11 45 dc       \tmovss  %xmm0,-0x24(%rbp)\n 2ff:\tf3 0f 10 45 c8       \tmovss  -0x38(%rbp),%xmm0\n 304:\tf3 0f 11 45 e0       \tmovss  %xmm0,-0x20(%rbp)\n 309:\tf3 0f 10 45 cc       \tmovss  -0x34(%rbp),%xmm0\n 30e:\tf3 0f 11 45 e4       \tmovss  %xmm0,-0x1c(%rbp)\n 313:\tf3 0f 10 4d e4       \tmovss  -0x1c(%rbp),%xmm1\n 318:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 320 <UpdateChaseCam+0x320>\n 31f:\t00 \n 320:\tf3 0f 58 c1          \taddss  %xmm1,%xmm0\n 324:\tf3 0f 11 45 e4       \tmovss  %xmm0,-0x1c(%rbp)\n 329:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 330 <UpdateChaseCam+0x330>\n 330:\t4c 8b 50 60          \tmov    0x60(%rax),%r10\n 334:\t48 8d 85 e0 fe ff ff \tlea    -0x120(%rbp),%rax\n 33b:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n 33f:\t48 8d 55 dc          \tlea    -0x24(%rbp),%rdx\n 343:\t48 8d 75 c4          \tlea    -0x3c(%rbp),%rsi\n 347:\t48 83 ec 08          \tsub    $0x8,%rsp\n 34b:\t6a 03                \tpushq  $0x3\n 34d:\t49 89 c9             \tmov    %rcx,%r9\n 350:\t49 89 d0             \tmov    %rdx,%r8\n 353:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 35a <UpdateChaseCam+0x35a>\n 35a:\t48 89 d1             \tmov    %rdx,%rcx\n 35d:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 364 <UpdateChaseCam+0x364>\n 364:\t48 89 c7             \tmov    %rax,%rdi\n 367:\t41 ff d2             \tcallq  *%r10\n 36a:\t48 83 c4 10          \tadd    $0x10,%rsp\n 36e:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n 375:\t48 8b 95 e8 fe ff ff \tmov    -0x118(%rbp),%rdx\n 37c:\t48 89 85 60 ff ff ff \tmov    %rax,-0xa0(%rbp)\n 383:\t48 89 95 68 ff ff ff \tmov    %rdx,-0x98(%rbp)\n 38a:\t48 8b 85 f0 fe ff ff \tmov    -0x110(%rbp),%rax\n 391:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n 398:\t48 89 85 70 ff ff ff \tmov    %rax,-0x90(%rbp)\n 39f:\t48 89 95 78 ff ff ff \tmov    %rdx,-0x88(%rbp)\n 3a6:\t48 8b 85 00 ff ff ff \tmov    -0x100(%rbp),%rax\n 3ad:\t48 8b 95 08 ff ff ff \tmov    -0xf8(%rbp),%rdx\n 3b4:\t48 89 45 80          \tmov    %rax,-0x80(%rbp)\n 3b8:\t48 89 55 88          \tmov    %rdx,-0x78(%rbp)\n 3bc:\t48 8b 85 10 ff ff ff \tmov    -0xf0(%rbp),%rax\n 3c3:\t48 8b 95 18 ff ff ff \tmov    -0xe8(%rbp),%rdx\n 3ca:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n 3ce:\t48 89 55 98          \tmov    %rdx,-0x68(%rbp)\n 3d2:\t48 8b 85 20 ff ff ff \tmov    -0xe0(%rbp),%rax\n 3d9:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n 3dd:\tf3 0f 10 8d 68 ff ff \tmovss  -0x98(%rbp),%xmm1\n 3e4:\tff \n 3e5:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 3ed <UpdateChaseCam+0x3ed>\n 3ec:\t00 \n 3ed:\t0f 2f c1             \tcomiss %xmm1,%xmm0\n 3f0:\t76 3d                \tjbe    42f <UpdateChaseCam+0x42f>\n 3f2:\tf3 0f 10 85 6c ff ff \tmovss  -0x94(%rbp),%xmm0\n 3f9:\tff \n 3fa:\tf3 0f 11 45 c4       \tmovss  %xmm0,-0x3c(%rbp)\n 3ff:\tf3 0f 10 85 70 ff ff \tmovss  -0x90(%rbp),%xmm0\n 406:\tff \n 407:\tf3 0f 11 45 c8       \tmovss  %xmm0,-0x38(%rbp)\n 40c:\tf3 0f 10 85 74 ff ff \tmovss  -0x8c(%rbp),%xmm0\n 413:\tff \n 414:\tf3 0f 11 45 cc       \tmovss  %xmm0,-0x34(%rbp)\n 419:\tf3 0f 10 45 cc       \tmovss  -0x34(%rbp),%xmm0\n 41e:\tf3 0f 10 0d 00 00 00 \tmovss  0x0(%rip),%xmm1        # 426 <UpdateChaseCam+0x426>\n 425:\t00 \n 426:\tf3 0f 5c c1          \tsubss  %xmm1,%xmm0\n 42a:\tf3 0f 11 45 cc       \tmovss  %xmm0,-0x34(%rbp)\n 42f:\tf3 0f 10 45 c4       \tmovss  -0x3c(%rbp),%xmm0\n 434:\tf3 0f 11 45 dc       \tmovss  %xmm0,-0x24(%rbp)\n 439:\tf3 0f 10 45 c8       \tmovss  -0x38(%rbp),%xmm0\n 43e:\tf3 0f 11 45 e0       \tmovss  %xmm0,-0x20(%rbp)\n 443:\tf3 0f 10 45 cc       \tmovss  -0x34(%rbp),%xmm0\n 448:\tf3 0f 11 45 e4       \tmovss  %xmm0,-0x1c(%rbp)\n 44d:\tf3 0f 10 45 e4       \tmovss  -0x1c(%rbp),%xmm0\n 452:\tf3 0f 10 0d 00 00 00 \tmovss  0x0(%rip),%xmm1        # 45a <UpdateChaseCam+0x45a>\n 459:\t00 \n 45a:\tf3 0f 5c c1          \tsubss  %xmm1,%xmm0\n 45e:\tf3 0f 11 45 e4       \tmovss  %xmm0,-0x1c(%rbp)\n 463:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 46a <UpdateChaseCam+0x46a>\n 46a:\t4c 8b 50 60          \tmov    0x60(%rax),%r10\n 46e:\t48 8d 85 e0 fe ff ff \tlea    -0x120(%rbp),%rax\n 475:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n 479:\t48 8d 55 dc          \tlea    -0x24(%rbp),%rdx\n 47d:\t48 8d 75 c4          \tlea    -0x3c(%rbp),%rsi\n 481:\t48 83 ec 08          \tsub    $0x8,%rsp\n 485:\t6a 03                \tpushq  $0x3\n 487:\t49 89 c9             \tmov    %rcx,%r9\n 48a:\t49 89 d0             \tmov    %rdx,%r8\n 48d:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 494 <UpdateChaseCam+0x494>\n 494:\t48 89 d1             \tmov    %rdx,%rcx\n 497:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 49e <UpdateChaseCam+0x49e>\n 49e:\t48 89 c7             \tmov    %rax,%rdi\n 4a1:\t41 ff d2             \tcallq  *%r10\n 4a4:\t48 83 c4 10          \tadd    $0x10,%rsp\n 4a8:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n 4af:\t48 8b 95 e8 fe ff ff \tmov    -0x118(%rbp),%rdx\n 4b6:\t48 89 85 60 ff ff ff \tmov    %rax,-0xa0(%rbp)\n 4bd:\t48 89 95 68 ff ff ff \tmov    %rdx,-0x98(%rbp)\n 4c4:\t48 8b 85 f0 fe ff ff \tmov    -0x110(%rbp),%rax\n 4cb:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n 4d2:\t48 89 85 70 ff ff ff \tmov    %rax,-0x90(%rbp)\n 4d9:\t48 89 95 78 ff ff ff \tmov    %rdx,-0x88(%rbp)\n 4e0:\t48 8b 85 00 ff ff ff \tmov    -0x100(%rbp),%rax\n 4e7:\t48 8b 95 08 ff ff ff \tmov    -0xf8(%rbp),%rdx\n 4ee:\t48 89 45 80          \tmov    %rax,-0x80(%rbp)\n 4f2:\t48 89 55 88          \tmov    %rdx,-0x78(%rbp)\n 4f6:\t48 8b 85 10 ff ff ff \tmov    -0xf0(%rbp),%rax\n 4fd:\t48 8b 95 18 ff ff ff \tmov    -0xe8(%rbp),%rdx\n 504:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n 508:\t48 89 55 98          \tmov    %rdx,-0x68(%rbp)\n 50c:\t48 8b 85 20 ff ff ff \tmov    -0xe0(%rbp),%rax\n 513:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n 517:\tf3 0f 10 8d 68 ff ff \tmovss  -0x98(%rbp),%xmm1\n 51e:\tff \n 51f:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 527 <UpdateChaseCam+0x527>\n 526:\t00 \n 527:\t0f 2f c1             \tcomiss %xmm1,%xmm0\n 52a:\t76 3d                \tjbe    569 <UpdateChaseCam+0x569>\n 52c:\tf3 0f 10 85 6c ff ff \tmovss  -0x94(%rbp),%xmm0\n 533:\tff \n 534:\tf3 0f 11 45 c4       \tmovss  %xmm0,-0x3c(%rbp)\n 539:\tf3 0f 10 85 70 ff ff \tmovss  -0x90(%rbp),%xmm0\n 540:\tff \n 541:\tf3 0f 11 45 c8       \tmovss  %xmm0,-0x38(%rbp)\n 546:\tf3 0f 10 85 74 ff ff \tmovss  -0x8c(%rbp),%xmm0\n 54d:\tff \n 54e:\tf3 0f 11 45 cc       \tmovss  %xmm0,-0x34(%rbp)\n 553:\tf3 0f 10 4d cc       \tmovss  -0x34(%rbp),%xmm1\n 558:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 560 <UpdateChaseCam+0x560>\n 55f:\t00 \n 560:\tf3 0f 58 c1          \taddss  %xmm1,%xmm0\n 564:\tf3 0f 11 45 cc       \tmovss  %xmm0,-0x34(%rbp)\n 569:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 56d:\t8b 80 60 02 00 00    \tmov    0x260(%rax),%eax\n 573:\t85 c0                \ttest   %eax,%eax\n 575:\t74 13                \tje     58a <UpdateChaseCam+0x58a>\n 577:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 57e:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 582:\tc7 00 02 00 00 00    \tmovl   $0x2,(%rax)\n 588:\teb 11                \tjmp    59b <UpdateChaseCam+0x59b>\n 58a:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 591:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 595:\tc7 00 04 00 00 00    \tmovl   $0x4,(%rax)\n 59b:\tf3 0f 10 45 c4       \tmovss  -0x3c(%rbp),%xmm0\n 5a0:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 5a7:\tf3 0f 11 40 04       \tmovss  %xmm0,0x4(%rax)\n 5ac:\tf3 0f 10 45 c8       \tmovss  -0x38(%rbp),%xmm0\n 5b1:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 5b8:\tf3 0f 11 40 08       \tmovss  %xmm0,0x8(%rax)\n 5bd:\tf3 0f 10 45 cc       \tmovss  -0x34(%rbp),%xmm0\n 5c2:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 5c9:\tf3 0f 11 40 0c       \tmovss  %xmm0,0xc(%rax)\n 5ce:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n 5d5:\teb 7c                \tjmp    653 <UpdateChaseCam+0x653>\n 5d7:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 5db:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 5df:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n 5e2:\t48 63 d2             \tmovslq %edx,%rdx\n 5e5:\t48 81 c2 94 03 00 00 \tadd    $0x394,%rdx\n 5ec:\tf3 0f 10 44 90 04    \tmovss  0x4(%rax,%rdx,4),%xmm0\n 5f2:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 5f9:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 5fd:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n 600:\t48 63 d2             \tmovslq %edx,%rdx\n 603:\t48 81 c2 64 03 00 00 \tadd    $0x364,%rdx\n 60a:\tf3 0f 10 4c 90 08    \tmovss  0x8(%rax,%rdx,4),%xmm1\n 610:\tf3 0f 5c c1          \tsubss  %xmm1,%xmm0\n 614:\t0f 28 c8             \tmovaps %xmm0,%xmm1\n 617:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 61f <UpdateChaseCam+0x61f>\n 61e:\t00 \n 61f:\tf3 0f 59 c1          \tmulss  %xmm1,%xmm0\n 623:\tf3 0f 10 0d 00 00 00 \tmovss  0x0(%rip),%xmm1        # 62b <UpdateChaseCam+0x62b>\n 62a:\t00 \n 62b:\tf3 0f 5e c1          \tdivss  %xmm1,%xmm0\n 62f:\tf3 0f 2c d0          \tcvttss2si %xmm0,%edx\n 633:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 63a:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 63e:\t89 d1                \tmov    %edx,%ecx\n 640:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n 643:\t48 63 d2             \tmovslq %edx,%rdx\n 646:\t48 83 c2 08          \tadd    $0x8,%rdx\n 64a:\t66 89 4c 50 04       \tmov    %cx,0x4(%rax,%rdx,2)\n 64f:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 653:\t83 7d fc 02          \tcmpl   $0x2,-0x4(%rbp)\n 657:\t0f 8e 7a ff ff ff    \tjle    5d7 <UpdateChaseCam+0x5d7>\n 65d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 661:\t8b 80 60 02 00 00    \tmov    0x260(%rax),%eax\n 667:\t85 c0                \ttest   %eax,%eax\n 669:\t74 55                \tje     6c0 <UpdateChaseCam+0x6c0>\n 66b:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 672:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 676:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 67e <UpdateChaseCam+0x67e>\n 67d:\t00 \n 67e:\tf3 0f 11 40 24       \tmovss  %xmm0,0x24(%rax)\n 683:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 68a:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 68e:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 696 <UpdateChaseCam+0x696>\n 695:\t00 \n 696:\tf3 0f 11 40 1c       \tmovss  %xmm0,0x1c(%rax)\n 69b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 69f:\t48 8b 50 58          \tmov    0x58(%rax),%rdx\n 6a3:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 6aa:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 6ae:\tf3 0f 10 82 0c 0e 00 \tmovss  0xe0c(%rdx),%xmm0\n 6b5:\t00 \n 6b6:\tf3 0f 11 40 20       \tmovss  %xmm0,0x20(%rax)\n 6bb:\te9 c9 00 00 00       \tjmpq   789 <UpdateChaseCam+0x789>\n 6c0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 6c4:\t48 8b 50 58          \tmov    0x58(%rax),%rdx\n 6c8:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 6cf:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 6d3:\tf3 0f 10 82 54 0e 00 \tmovss  0xe54(%rdx),%xmm0\n 6da:\t00 \n 6db:\tf3 0f 11 40 1c       \tmovss  %xmm0,0x1c(%rax)\n 6e0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 6e4:\t48 8b 50 58          \tmov    0x58(%rax),%rdx\n 6e8:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 6ef:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 6f3:\tf3 0f 10 82 58 0e 00 \tmovss  0xe58(%rdx),%xmm0\n 6fa:\t00 \n 6fb:\tf3 0f 11 40 20       \tmovss  %xmm0,0x20(%rax)\n 700:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 704:\t48 8b 50 58          \tmov    0x58(%rax),%rdx\n 708:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 70f:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 713:\tf3 0f 10 82 5c 0e 00 \tmovss  0xe5c(%rdx),%xmm0\n 71a:\t00 \n 71b:\tf3 0f 11 40 24       \tmovss  %xmm0,0x24(%rax)\n 720:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 724:\t48 8b 50 58          \tmov    0x58(%rax),%rdx\n 728:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 72f:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 733:\tf3 0f 10 82 54 0e 00 \tmovss  0xe54(%rdx),%xmm0\n 73a:\t00 \n 73b:\tf3 0f 11 80 54 0e 00 \tmovss  %xmm0,0xe54(%rax)\n 742:\t00 \n 743:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 747:\t48 8b 50 58          \tmov    0x58(%rax),%rdx\n 74b:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 752:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 756:\tf3 0f 10 82 58 0e 00 \tmovss  0xe58(%rdx),%xmm0\n 75d:\t00 \n 75e:\tf3 0f 11 80 58 0e 00 \tmovss  %xmm0,0xe58(%rax)\n 765:\t00 \n 766:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 76a:\t48 8b 50 58          \tmov    0x58(%rax),%rdx\n 76e:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 775:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 779:\tf3 0f 10 82 5c 0e 00 \tmovss  0xe5c(%rdx),%xmm0\n 780:\t00 \n 781:\tf3 0f 11 80 5c 0e 00 \tmovss  %xmm0,0xe5c(%rax)\n 788:\t00 \n 789:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 790:\tc7 80 78 02 00 00 00 \tmovl   $0x0,0x278(%rax)\n 797:\t00 00 00 \n 79a:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 7a1:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 7a5:\t0f b6 50 10          \tmovzbl 0x10(%rax),%edx\n 7a9:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 7b0:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n 7b4:\t83 ca 40             \tor     $0x40,%edx\n 7b7:\t88 50 10             \tmov    %dl,0x10(%rax)\n 7ba:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7c1 <UpdateChaseCam+0x7c1>\n 7c1:\t48 8b 90 90 00 00 00 \tmov    0x90(%rax),%rdx\n 7c8:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 7cf:\t48 89 c7             \tmov    %rax,%rdi\n 7d2:\tff d2                \tcallq  *%rdx\n 7d4:\tc9                   \tleaveq \n 7d5:\tc3                   \tretq   ", "code_s": "__int64 __fastcall UpdateChaseCam(__int64 a1) {\n  __int64 result;\n  __int64 v2;\n  __int64 v3;\n  __int64 v4;\n  __int64 v5;\n  __int64 v6;\n  __int64 v7;\n  __int64 v8;\n  __int64 v9;\n  __int64 v10;\n  __int64 v11;\n  int v12[Number];\n  __int64 v13;\n  __int64 v14;\n  __int64 v15;\n  __int64 v16;\n  __int64 v17;\n  __int64 v18;\n  __int64 v19;\n  __int64 v20;\n  __int64 v21;\n  char v22[Number];\n  char v23[Number];\n  int v24;\n  __int64 v25;\n  int v26[Number];\n  float v27;\n  int v28;\n  int v29;\n  float v30;\n  __int64 v31;\n  __int64 v32;\n  int i;\n  v11 = a1;\n  if ((!*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + Number) + Number L) +\n                    Number L) ||\n       *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + Number) +\n                                           Number L) +\n                               Number L) +\n                   Number L)) &&\n      (v32 = *(_QWORD *)(*(_QWORD *)(v11 + Number) + Number L), ChaseNext(v11),\n       v32 == *(_QWORD *)(*(_QWORD *)(v11 + Number) + Number L))) {\n    *(_QWORD *)(*(_QWORD *)(v11 + Number) + Number L) = Number L;\n    result = *(_QWORD *)(v11 + Number);\n    *(_BYTE *)(result + Number) &= Number;\n  } else {\n    v31 = *(_QWORD *)(*(_QWORD *)(v11 + Number) + Number L);\n    v26[Number] = *(_DWORD *)(v31 + Number);\n    v26[Number] = *(_DWORD *)(v31 + Number);\n    v27 = *(float *)(v31 + Number);\n    v12[Number] = *(_DWORD *)(v11 + Number);\n    v12[Number] = *(_DWORD *)(v11 + Number);\n    v12[Number] = *(_DWORD *)(v11 + Number);\n    v27 = (float)*(int *)(v31 + Number) + v27;\n    v12[Number] = *(_DWORD *)(*(_QWORD *)(v31 + Number) + Number L);\n    v12[Number] = *(_DWORD *)(*(_QWORD *)(v31 + Number) + Number L);\n    v12[Number] = *(_DWORD *)(*(_QWORD *)(v31 + Number) + Number L);\n    if (*(float *)v12 > Number)\n      v12[Number] = Number;\n    AngleVectors(v12, v23, v22, Number L);\n    VectorNormalize(v23);\n    VectorMA(v26, v23, &v28, Number);\n    if ((float)(*(float *)(v31 + Number) + Number) > v30)\n      v30 = *(float *)(v31 + Number) + Number;\n    if (!*(_QWORD *)(v31 + Number))\n      v30 = v30 + Number;\n    gi[Number](&v13, v26, &vec3_origin, &vec3_origin, &v28, v31, Number L);\n    v24 = HIDWORD(v14);\n    v25 = v15;\n    VectorMA(&v24, v23, &v24, Number);\n    v28 = v24;\n    v29 = v25;\n    v30 = *((float *)&v25 + Number) + Number;\n    gi[Number](&v2, &v24, &vec3_origin, &vec3_origin, &v28, v31, Number L);\n    v13 = v2;\n    v14 = v3;\n    v15 = v4;\n    v16 = v5;\n    v17 = v6;\n    v18 = v7;\n    v19 = v8;\n    v20 = v9;\n    v21 = v10;\n    if (*(float *)&v3 < Number) {\n      v24 = HIDWORD(v14);\n      LODWORD(v25) = v15;\n      *((float *)&v25 + Number) = *((float *)&v15 + Number) - Number;\n    }\n    v28 = v24;\n    v29 = v25;\n    v30 = *((float *)&v25 + Number) - Number;\n    gi[Number](&v2, &v24, &vec3_origin, &vec3_origin, &v28, v31, Number L);\n    v13 = v2;\n    v14 = v3;\n    v15 = v4;\n    v16 = v5;\n    v17 = v6;\n    v18 = v7;\n    v19 = v8;\n    v20 = v9;\n    v21 = v10;\n    if (*(float *)&v3 < Number) {\n      v24 = HIDWORD(v14);\n      LODWORD(v25) = v15;\n      *((float *)&v25 + Number) = *((float *)&v15 + Number) + Number;\n    }\n    if (*(_DWORD *)(v31 + Number))\n      **(_DWORD **)(v11 + Number) = Number;\n    else\n      **(_DWORD **)(v11 + Number) = Number;\n    *(_DWORD *)(v11 + Number) = v24;\n    *(_QWORD *)(v11 + Number) = v25;\n    for (i = Number; i <= Number; ++i)\n      *(_WORD *)(*(_QWORD *)(v11 + Number) + Number * (i + Number L) + Number) =\n          (int)(float)((float)(Number *\n                               (float)(*(float *)(*(_QWORD *)(v31 + Number) +\n                                                  Number * (i + Number L) +\n                                                  Number) -\n                                       *(float *)(*(_QWORD *)(v11 + Number) +\n                                                  Number * (i + Number L) +\n                                                  Number))) /\n                       Number);\n    if (*(_DWORD *)(v31 + Number)) {\n      *(_DWORD *)(*(_QWORD *)(v11 + Number) + Number L) = Number;\n      *(_DWORD *)(*(_QWORD *)(v11 + Number) + Number L) = Number;\n      *(_DWORD *)(*(_QWORD *)(v11 + Number) + Number L) =\n          *(_DWORD *)(*(_QWORD *)(v31 + Number) + Number L);\n    } else {\n      *(_DWORD *)(*(_QWORD *)(v11 + Number) + Number L) =\n          *(_DWORD *)(*(_QWORD *)(v31 + Number) + Number L);\n      *(_DWORD *)(*(_QWORD *)(v11 + Number) + Number L) =\n          *(_DWORD *)(*(_QWORD *)(v31 + Number) + Number L);\n      *(_DWORD *)(*(_QWORD *)(v11 + Number) + Number L) =\n          *(_DWORD *)(*(_QWORD *)(v31 + Number) + Number L);\n      *(_DWORD *)(*(_QWORD *)(v11 + Number) + Number L) =\n          *(_DWORD *)(*(_QWORD *)(v31 + Number) + Number L);\n      *(_DWORD *)(*(_QWORD *)(v11 + Number) + Number L) =\n          *(_DWORD *)(*(_QWORD *)(v31 + Number) + Number L);\n      *(_DWORD *)(*(_QWORD *)(v11 + Number) + Number L) =\n          *(_DWORD *)(*(_QWORD *)(v31 + Number) + Number L);\n    }\n    *(_DWORD *)(v11 + Number) = Number;\n    *(_BYTE *)(*(_QWORD *)(v11 + Number) + Number L) |= Number;\n    result = ((__int64(__fastcall *)(__int64))gi[Number])(v11);\n  }\n  return result;\n}", "code_t": "void __cdecl UpdateChaseCam(edict_t *ent) {\n  trace_t <span class=\"supfact\">v1</span>;\n  edict_t *enta;\n  vec3_t angles;\n  vec3_t oldgoal;\n  trace_t <span class=\"supfact\">trace</span>;\n  vec3_t right;\n  vec3_t forward;\n  vec3_t goal;\n  vec3_t ownerv;\n  vec3_t o;\n  edict_t *targ;\n  edict_t *old;\n  int i;\n  enta = ent;\n  if ((ent->client->chase_target->inuse == false ||\n       enta->client->chase_target->client->resp.spectator) &&\n      (old = enta->client->chase_target, ChaseNext(enta),\n       old == enta->client->chase_target)) {\n    enta->client->chase_target = Number L;\n    enta->client->ps.pmove.pm_flags &= Number;\n  } else {\n    targ = enta->client->chase_target;\n    ownerv[Number] = targ->s.origin[Number];\n    ownerv[Number] = targ->s.origin[Number];\n    ownerv[Number] = targ->s.origin[Number];\n    oldgoal[Number] = enta->s.origin[Number];\n    oldgoal[Number] = enta->s.origin[Number];\n    oldgoal[Number] = enta->s.origin[Number];\n    ownerv[Number] = (float)targ->viewheight + ownerv[Number];\n    angles[Number] = targ->client->v_angle[Number];\n    angles[Number] = targ->client->v_angle[Number];\n    angles[Number] = targ->client->v_angle[Number];\n    if (angles[Number] > Number)\n      angles[Number] = Number;\n    AngleVectors(angles, forward, right, Number L);\n    VectorNormalize(forward);\n    VectorMA(ownerv, forward, o, Number);\n    if ((float)(targ->s.origin[Number] + Number) > o[Number])\n      o[Number] = targ->s.origin[Number] + Number;\n    if (!targ->groundentity)\n      o[Number] = o[Number] + Number;\n    gi[Number](&<span class=\"supfact\">trace</span>, ownerv, &vec3_origin, &vec3_origin, o,\n               targ, Number L);\n    goal[Number] = <span class=\"supfact\">trace</span>.endpos[Number];\n    goal[Number] = <span class=\"supfact\">trace</span>.endpos[Number];\n    goal[Number] = <span class=\"supfact\">trace</span>.endpos[Number];\n    VectorMA(goal, forward, goal, Number);\n    o[Number] = goal[Number];\n    o[Number] = goal[Number];\n    o[Number] = goal[Number] + Number;\n    gi[Number](&<span class=\"supfact\">v1</span>, goal, &vec3_origin, &vec3_origin, o, targ,\n               Number L);\n    <span class=\"supfact\">trace</span> = <span class=\"supfact\">v1</span>;\n    if (<span class=\"supfact\">v1</span>.fraction < Number) {\n      goal[Number] = <span class=\"supfact\">trace</span>.endpos[Number];\n      goal[Number] = <span class=\"supfact\">trace</span>.endpos[Number];\n      goal[Number] = <span class=\"supfact\">trace</span>.endpos[Number] - Number;\n    }\n    o[Number] = goal[Number];\n    o[Number] = goal[Number];\n    o[Number] = goal[Number] - Number;\n    gi[Number](&<span class=\"supfact\">v1</span>, goal, &vec3_origin, &vec3_origin, o, targ,\n               Number L);\n    <span class=\"supfact\">trace</span> = <span class=\"supfact\">v1</span>;\n    if (<span class=\"supfact\">v1</span>.fraction < Number) {\n      goal[Number] = <span class=\"supfact\">trace</span>.endpos[Number];\n      goal[Number] = <span class=\"supfact\">trace</span>.endpos[Number];\n      goal[Number] = <span class=\"supfact\">trace</span>.endpos[Number] + Number;\n    }\n    if (targ->deadflag)\n      enta->client->ps.pmove.pm_type = PM_DEAD;\n    else\n      enta->client->ps.pmove.pm_type = PM_FREEZE;\n    enta->s.origin[Number] = goal[Number];\n    enta->s.origin[Number] = goal[Number];\n    enta->s.origin[Number] = goal[Number];\n    for (i = Number; i <= Number; ++i)\n      enta->client->ps.pmove.delta_angles[i] =\n          (int)(float)((float)(Number *\n                               (float)(targ->client->v_angle[i] -\n                                       enta->client->resp.cmd_angles[i])) /\n                       Number);\n    if (targ->deadflag) {\n      enta->client->ps.viewangles[Number] = Number;\n      enta->client->ps.viewangles[Number] = Number;\n      enta->client->ps.viewangles[Number] = targ->client->killer_yaw;\n    } else {\n      enta->client->ps.viewangles[Number] = targ->client->v_angle[Number];\n      enta->client->ps.viewangles[Number] = targ->client->v_angle[Number];\n      enta->client->ps.viewangles[Number] = targ->client->v_angle[Number];\n      enta->client->v_angle[Number] = targ->client->v_angle[Number];\n      enta->client->v_angle[Number] = targ->client->v_angle[Number];\n      enta->client->v_angle[Number] = targ->client->v_angle[Number];\n    }\n    enta->viewheight = Number;\n    enta->client->ps.pmove.pm_flags |= Number;\n    ((void(__fastcall *)(edict_t *))gi[Number])(enta);\n  }\n}", "var": [{"name": "v2", "type": "struct trace_t { qboolean allsolid; qboolean startsolid; float fraction; vec3_t endpos; cplane_t plane; PADDING (4); csurface_t * surface; int contents; PADDING (4); edict_s * ent; }", "pred_name": "v1", "ref_name": "v1", "ref_type": "struct trace_t { qboolean allsolid; qboolean startsolid; float fraction; vec3_t endpos; cplane_t plane; PADDING (4); csurface_t * surface; int contents; PADDING (4); edict_s * ent; }"}, {"name": "v13", "type": "struct trace_t { qboolean allsolid; qboolean startsolid; float fraction; vec3_t endpos; cplane_t plane; PADDING (4); csurface_t * surface; int contents; PADDING (4); edict_s * ent; }", "pred_name": "trace", "ref_name": "trace", "ref_type": "struct trace_t { qboolean allsolid; qboolean startsolid; float fraction; vec3_t endpos; cplane_t plane; PADDING (4); csurface_t * surface; int contents; PADDING (4); edict_s * ent; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/86fa5aa0fbd3eddabbaf3f280b5c87028c14c996328b040303fbd04dfcae7f6c", "path_in_repo": "XanClic/qemu//hw/block/nvme.o", "objdump": "00000000000049e5 <_nocheck__trace_nvme_ub_db_wr_invalid_cq>:\n    49e5:\t55                   \tpush   %rbp\n    49e6:\t48 89 e5             \tmov    %rsp,%rbp\n    49e9:\t41 54                \tpush   %r12\n    49eb:\t53                   \tpush   %rbx\n    49ec:\t48 83 ec 30          \tsub    $0x30,%rsp\n    49f0:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n    49f3:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    49fa:\t00 00 \n    49fc:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    4a00:\t31 c0                \txor    %eax,%eax\n    4a02:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 4a08 <_nocheck__trace_nvme_ub_db_wr_invalid_cq+0x23>\n    4a08:\t85 c0                \ttest   %eax,%eax\n    4a0a:\t0f 95 c0             \tsetne  %al\n    4a0d:\t0f b6 c0             \tmovzbl %al,%eax\n    4a10:\t48 85 c0             \ttest   %rax,%rax\n    4a13:\t74 5d                \tje     4a72 <_nocheck__trace_nvme_ub_db_wr_invalid_cq+0x8d>\n    4a15:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 4a1c <_nocheck__trace_nvme_ub_db_wr_invalid_cq+0x37>\n    4a1c:\t66 85 c0             \ttest   %ax,%ax\n    4a1f:\t74 51                \tje     4a72 <_nocheck__trace_nvme_ub_db_wr_invalid_cq+0x8d>\n    4a21:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n    4a26:\te8 9b be ff ff       \tcallq  8c6 <qemu_loglevel_mask>\n    4a2b:\t84 c0                \ttest   %al,%al\n    4a2d:\t74 43                \tje     4a72 <_nocheck__trace_nvme_ub_db_wr_invalid_cq+0x8d>\n    4a2f:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    4a33:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    4a38:\t48 89 c7             \tmov    %rax,%rdi\n    4a3b:\te8 00 00 00 00       \tcallq  4a40 <_nocheck__trace_nvme_ub_db_wr_invalid_cq+0x5b>\n    4a40:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    4a44:\t49 89 c4             \tmov    %rax,%r12\n    4a47:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    4a4b:\t48 89 c3             \tmov    %rax,%rbx\n    4a4e:\te8 00 00 00 00       \tcallq  4a53 <_nocheck__trace_nvme_ub_db_wr_invalid_cq+0x6e>\n    4a53:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    4a56:\t41 89 d0             \tmov    %edx,%r8d\n    4a59:\t4c 89 e1             \tmov    %r12,%rcx\n    4a5c:\t48 89 da             \tmov    %rbx,%rdx\n    4a5f:\t89 c6                \tmov    %eax,%esi\n    4a61:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4a68 <_nocheck__trace_nvme_ub_db_wr_invalid_cq+0x83>\n    4a68:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4a6d:\te8 00 00 00 00       \tcallq  4a72 <_nocheck__trace_nvme_ub_db_wr_invalid_cq+0x8d>\n    4a72:\t90                   \tnop\n    4a73:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    4a77:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    4a7e:\t00 00 \n    4a80:\t74 05                \tje     4a87 <_nocheck__trace_nvme_ub_db_wr_invalid_cq+0xa2>\n    4a82:\te8 00 00 00 00       \tcallq  4a87 <_nocheck__trace_nvme_ub_db_wr_invalid_cq+0xa2>\n    4a87:\t48 83 c4 30          \tadd    $0x30,%rsp\n    4a8b:\t5b                   \tpop    %rbx\n    4a8c:\t41 5c                \tpop    %r12\n    4a8e:\t5d                   \tpop    %rbp\n    4a8f:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_nvme_ub_db_wr_invalid_cq(\n    unsigned int a1) {\n  __suseconds_t v1;\n  __time_t v2;\n  unsigned int v3;\n  struct timeval tv;\n  unsigned __int64 v6;\n  v6 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_NVME_UB_DB_WR_INVALID_CQ_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&tv, Number L);\n    v1 = tv.tv_usec;\n    v2 = tv.tv_sec;\n    v3 = qemu_get_thread_id();\n    qemu_log(String, v3, v2, v1, a1);\n  }\n  return __readfsqword(Number) ^ v6;\n}", "code_t": "void __cdecl nocheck__trace_nvme_ub_db_wr_invalid_cq(uint32_t qid) {\n  __suseconds_t v1;\n  __time_t v2;\n  unsigned int v3;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v5;\n  v5 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_NVME_UB_DB_WR_INVALID_CQ_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v1 = <span class=\"supfact\">_now</span>.tv_usec;\n    v2 = <span class=\"supfact\">_now</span>.tv_sec;\n    v3 = qemu_get_thread_id();\n    qemu_log(String, v3, v2, v1, qid);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "pred_name": "_now", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "makinacorpus", "repo_name": "libecw", "path": "makinacorpus/libecw/8498a785df648ecb6796d9c9e1f954351195c2857f4dfd52ea26c43e306cb824", "path_in_repo": "makinacorpus/libecw/Source/C/NCSEcw/lcms/src/liblcms_la-cmsio1.o", "objdump": "0000000000002de5 <ReadEmbeddedTextTag>:\n    2de5:\t55                   \tpush   %rbp\n    2de6:\t48 89 e5             \tmov    %rsp,%rbp\n    2de9:\t48 83 c4 80          \tadd    $0xffffffffffffff80,%rsp\n    2ded:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n    2df1:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n    2df5:\t48 89 55 88          \tmov    %rdx,-0x78(%rbp)\n    2df9:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2dfd:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    2e04:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2e08:\t48 8b 10             \tmov    (%rax),%rdx\n    2e0b:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    2e0f:\t48 89 d1             \tmov    %rdx,%rcx\n    2e12:\tba 01 00 00 00       \tmov    $0x1,%edx\n    2e17:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    2e1c:\t48 89 c7             \tmov    %rax,%rdi\n    2e1f:\t41 ff d0             \tcallq  *%r8\n    2e22:\t48 83 6d 90 08       \tsubq   $0x8,-0x70(%rbp)\n    2e27:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    2e2b:\t48 89 c7             \tmov    %rax,%rdi\n    2e2e:\te8 fe d1 ff ff       \tcallq  31 <AdjustEndianess32>\n    2e33:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n    2e36:\t3d 74 78 65 74       \tcmp    $0x74657874,%eax\n    2e3b:\t0f 84 1e 02 00 00    \tje     305f <ReadEmbeddedTextTag+0x27a>\n    2e41:\t3d 74 78 65 74       \tcmp    $0x74657874,%eax\n    2e46:\t0f 87 42 05 00 00    \tja     338e <ReadEmbeddedTextTag+0x5a9>\n    2e4c:\t3d 63 75 6c 6d       \tcmp    $0x6d6c7563,%eax\n    2e51:\t0f 84 32 02 00 00    \tje     3089 <ReadEmbeddedTextTag+0x2a4>\n    2e57:\t3d 63 75 6c 6d       \tcmp    $0x6d6c7563,%eax\n    2e5c:\t0f 87 2c 05 00 00    \tja     338e <ReadEmbeddedTextTag+0x5a9>\n    2e62:\t3d 74 72 70 63       \tcmp    $0x63707274,%eax\n    2e67:\t0f 84 f2 01 00 00    \tje     305f <ReadEmbeddedTextTag+0x27a>\n    2e6d:\t3d 63 73 65 64       \tcmp    $0x64657363,%eax\n    2e72:\t0f 85 16 05 00 00    \tjne    338e <ReadEmbeddedTextTag+0x5a9>\n    2e78:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2e7c:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    2e83:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2e87:\t48 8b 10             \tmov    (%rax),%rdx\n    2e8a:\t48 8d 45 cc          \tlea    -0x34(%rbp),%rax\n    2e8e:\t48 89 d1             \tmov    %rdx,%rcx\n    2e91:\tba 01 00 00 00       \tmov    $0x1,%edx\n    2e96:\tbe 04 00 00 00       \tmov    $0x4,%esi\n    2e9b:\t48 89 c7             \tmov    %rax,%rdi\n    2e9e:\t41 ff d0             \tcallq  *%r8\n    2ea1:\t48 83 6d 90 04       \tsubq   $0x4,-0x70(%rbp)\n    2ea6:\t48 8d 45 cc          \tlea    -0x34(%rbp),%rax\n    2eaa:\t48 89 c7             \tmov    %rax,%rdi\n    2ead:\te8 7f d1 ff ff       \tcallq  31 <AdjustEndianess32>\n    2eb2:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2eb6:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    2ebd:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2ec1:\t48 8b 10             \tmov    (%rax),%rdx\n    2ec4:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n    2ec7:\t89 c6                \tmov    %eax,%esi\n    2ec9:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    2ecd:\t48 89 d1             \tmov    %rdx,%rcx\n    2ed0:\t48 89 f2             \tmov    %rsi,%rdx\n    2ed3:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    2ed8:\t48 89 c7             \tmov    %rax,%rdi\n    2edb:\t41 ff d0             \tcallq  *%r8\n    2ede:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n    2ee1:\t89 c0                \tmov    %eax,%eax\n    2ee3:\t48 29 45 90          \tsub    %rax,-0x70(%rbp)\n    2ee7:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2eeb:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    2ef2:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2ef6:\t48 8b 10             \tmov    (%rax),%rdx\n    2ef9:\t48 8d 45 c8          \tlea    -0x38(%rbp),%rax\n    2efd:\t48 89 d1             \tmov    %rdx,%rcx\n    2f00:\tba 01 00 00 00       \tmov    $0x1,%edx\n    2f05:\tbe 04 00 00 00       \tmov    $0x4,%esi\n    2f0a:\t48 89 c7             \tmov    %rax,%rdi\n    2f0d:\t41 ff d0             \tcallq  *%r8\n    2f10:\t48 83 6d 90 04       \tsubq   $0x4,-0x70(%rbp)\n    2f15:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2f19:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    2f20:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2f24:\t48 8b 10             \tmov    (%rax),%rdx\n    2f27:\t48 8d 45 c4          \tlea    -0x3c(%rbp),%rax\n    2f2b:\t48 89 d1             \tmov    %rdx,%rcx\n    2f2e:\tba 01 00 00 00       \tmov    $0x1,%edx\n    2f33:\tbe 04 00 00 00       \tmov    $0x4,%esi\n    2f38:\t48 89 c7             \tmov    %rax,%rdi\n    2f3b:\t41 ff d0             \tcallq  *%r8\n    2f3e:\t48 83 6d 90 04       \tsubq   $0x4,-0x70(%rbp)\n    2f43:\t48 8d 45 c4          \tlea    -0x3c(%rbp),%rax\n    2f47:\t48 89 c7             \tmov    %rax,%rdi\n    2f4a:\te8 e2 d0 ff ff       \tcallq  31 <AdjustEndianess32>\n    2f4f:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    2f52:\t89 c0                \tmov    %eax,%eax\n    2f54:\t48 39 45 90          \tcmp    %rax,-0x70(%rbp)\n    2f58:\t73 09                \tjae    2f63 <ReadEmbeddedTextTag+0x17e>\n    2f5a:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    2f5e:\te9 4f 04 00 00       \tjmpq   33b2 <ReadEmbeddedTextTag+0x5cd>\n    2f63:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    2f6a:\teb 2d                \tjmp    2f99 <ReadEmbeddedTextTag+0x1b4>\n    2f6c:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2f70:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    2f77:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2f7b:\t48 8b 10             \tmov    (%rax),%rdx\n    2f7e:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    2f82:\t48 89 d1             \tmov    %rdx,%rcx\n    2f85:\tba 01 00 00 00       \tmov    $0x1,%edx\n    2f8a:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    2f8f:\t48 89 c7             \tmov    %rax,%rdi\n    2f92:\t41 ff d0             \tcallq  *%r8\n    2f95:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    2f99:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    2f9c:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n    2f9f:\t72 cb                \tjb     2f6c <ReadEmbeddedTextTag+0x187>\n    2fa1:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    2fa4:\t89 c0                \tmov    %eax,%eax\n    2fa6:\t48 01 c0             \tadd    %rax,%rax\n    2fa9:\t48 29 45 90          \tsub    %rax,-0x70(%rbp)\n    2fad:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2fb1:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    2fb8:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2fbc:\t48 8b 10             \tmov    (%rax),%rdx\n    2fbf:\t48 8d 45 c2          \tlea    -0x3e(%rbp),%rax\n    2fc3:\t48 89 d1             \tmov    %rdx,%rcx\n    2fc6:\tba 01 00 00 00       \tmov    $0x1,%edx\n    2fcb:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    2fd0:\t48 89 c7             \tmov    %rax,%rdi\n    2fd3:\t41 ff d0             \tcallq  *%r8\n    2fd6:\t48 83 6d 90 02       \tsubq   $0x2,-0x70(%rbp)\n    2fdb:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2fdf:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    2fe6:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2fea:\t48 8b 10             \tmov    (%rax),%rdx\n    2fed:\t48 8d 45 bf          \tlea    -0x41(%rbp),%rax\n    2ff1:\t48 89 d1             \tmov    %rdx,%rcx\n    2ff4:\tba 01 00 00 00       \tmov    $0x1,%edx\n    2ff9:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    2ffe:\t48 89 c7             \tmov    %rax,%rdi\n    3001:\t41 ff d0             \tcallq  *%r8\n    3004:\t48 83 6d 90 01       \tsubq   $0x1,-0x70(%rbp)\n    3009:\t48 83 7d 90 42       \tcmpq   $0x42,-0x70(%rbp)\n    300e:\t77 09                \tja     3019 <ReadEmbeddedTextTag+0x234>\n    3010:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    3014:\te9 99 03 00 00       \tjmpq   33b2 <ReadEmbeddedTextTag+0x5cd>\n    3019:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    3020:\teb 2d                \tjmp    304f <ReadEmbeddedTextTag+0x26a>\n    3022:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    3026:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    302d:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    3031:\t48 8b 10             \tmov    (%rax),%rdx\n    3034:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    3038:\t48 89 d1             \tmov    %rdx,%rcx\n    303b:\tba 01 00 00 00       \tmov    $0x1,%edx\n    3040:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    3045:\t48 89 c7             \tmov    %rax,%rdi\n    3048:\t41 ff d0             \tcallq  *%r8\n    304b:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    304f:\t83 7d fc 42          \tcmpl   $0x42,-0x4(%rbp)\n    3053:\t76 cd                \tjbe    3022 <ReadEmbeddedTextTag+0x23d>\n    3055:\t48 83 6d 90 43       \tsubq   $0x43,-0x70(%rbp)\n    305a:\te9 4f 03 00 00       \tjmpq   33ae <ReadEmbeddedTextTag+0x5c9>\n    305f:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    3063:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    306a:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    306e:\t48 8b 08             \tmov    (%rax),%rcx\n    3071:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n    3075:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    3079:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    307e:\t48 89 c7             \tmov    %rax,%rdi\n    3081:\t41 ff d0             \tcallq  *%r8\n    3084:\te9 25 03 00 00       \tjmpq   33ae <ReadEmbeddedTextTag+0x5c9>\n    3089:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    3090:\t00 \n    3091:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    3098:\t00 \n    3099:\t48 c7 45 d8 00 00 00 \tmovq   $0x0,-0x28(%rbp)\n    30a0:\t00 \n    30a1:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    30a5:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    30ac:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    30b0:\t48 8b 10             \tmov    (%rax),%rdx\n    30b3:\t48 8d 45 b8          \tlea    -0x48(%rbp),%rax\n    30b7:\t48 89 d1             \tmov    %rdx,%rcx\n    30ba:\tba 01 00 00 00       \tmov    $0x1,%edx\n    30bf:\tbe 04 00 00 00       \tmov    $0x4,%esi\n    30c4:\t48 89 c7             \tmov    %rax,%rdi\n    30c7:\t41 ff d0             \tcallq  *%r8\n    30ca:\t48 8d 45 b8          \tlea    -0x48(%rbp),%rax\n    30ce:\t48 89 c7             \tmov    %rax,%rdi\n    30d1:\te8 5b cf ff ff       \tcallq  31 <AdjustEndianess32>\n    30d6:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    30da:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    30e1:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    30e5:\t48 8b 10             \tmov    (%rax),%rdx\n    30e8:\t48 8d 45 b4          \tlea    -0x4c(%rbp),%rax\n    30ec:\t48 89 d1             \tmov    %rdx,%rcx\n    30ef:\tba 01 00 00 00       \tmov    $0x1,%edx\n    30f4:\tbe 04 00 00 00       \tmov    $0x4,%esi\n    30f9:\t48 89 c7             \tmov    %rax,%rdi\n    30fc:\t41 ff d0             \tcallq  *%r8\n    30ff:\t48 8d 45 b4          \tlea    -0x4c(%rbp),%rax\n    3103:\t48 89 c7             \tmov    %rax,%rdi\n    3106:\te8 26 cf ff ff       \tcallq  31 <AdjustEndianess32>\n    310b:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n    310e:\t83 f8 0c             \tcmp    $0xc,%eax\n    3111:\t74 1e                \tje     3131 <ReadEmbeddedTextTag+0x34c>\n    3113:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    3118:\tbf 00 30 00 00       \tmov    $0x3000,%edi\n    311d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3122:\te8 00 00 00 00       \tcallq  3127 <ReadEmbeddedTextTag+0x342>\n    3127:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    312c:\te9 81 02 00 00       \tjmpq   33b2 <ReadEmbeddedTextTag+0x5cd>\n    3131:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    3138:\t00 \n    3139:\te9 14 01 00 00       \tjmpq   3252 <ReadEmbeddedTextTag+0x46d>\n    313e:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    3142:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    3149:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    314d:\t48 8b 10             \tmov    (%rax),%rdx\n    3150:\t48 8d 45 b2          \tlea    -0x4e(%rbp),%rax\n    3154:\t48 89 d1             \tmov    %rdx,%rcx\n    3157:\tba 01 00 00 00       \tmov    $0x1,%edx\n    315c:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    3161:\t48 89 c7             \tmov    %rax,%rdi\n    3164:\t41 ff d0             \tcallq  *%r8\n    3167:\t48 8d 45 b2          \tlea    -0x4e(%rbp),%rax\n    316b:\t48 89 c7             \tmov    %rax,%rdi\n    316e:\te8 8d ce ff ff       \tcallq  0 <AdjustEndianess16>\n    3173:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    3177:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    317e:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    3182:\t48 8b 10             \tmov    (%rax),%rdx\n    3185:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    3189:\t48 89 d1             \tmov    %rdx,%rcx\n    318c:\tba 01 00 00 00       \tmov    $0x1,%edx\n    3191:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    3196:\t48 89 c7             \tmov    %rax,%rdi\n    3199:\t41 ff d0             \tcallq  *%r8\n    319c:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    31a0:\t48 89 c7             \tmov    %rax,%rdi\n    31a3:\te8 58 ce ff ff       \tcallq  0 <AdjustEndianess16>\n    31a8:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    31ac:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    31b3:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    31b7:\t48 8b 10             \tmov    (%rax),%rdx\n    31ba:\t48 8d 45 ac          \tlea    -0x54(%rbp),%rax\n    31be:\t48 89 d1             \tmov    %rdx,%rcx\n    31c1:\tba 01 00 00 00       \tmov    $0x1,%edx\n    31c6:\tbe 04 00 00 00       \tmov    $0x4,%esi\n    31cb:\t48 89 c7             \tmov    %rax,%rdi\n    31ce:\t41 ff d0             \tcallq  *%r8\n    31d1:\t48 8d 45 ac          \tlea    -0x54(%rbp),%rax\n    31d5:\t48 89 c7             \tmov    %rax,%rdi\n    31d8:\te8 54 ce ff ff       \tcallq  31 <AdjustEndianess32>\n    31dd:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    31e1:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    31e8:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    31ec:\t48 8b 10             \tmov    (%rax),%rdx\n    31ef:\t48 8d 45 a8          \tlea    -0x58(%rbp),%rax\n    31f3:\t48 89 d1             \tmov    %rdx,%rcx\n    31f6:\tba 01 00 00 00       \tmov    $0x1,%edx\n    31fb:\tbe 04 00 00 00       \tmov    $0x4,%esi\n    3200:\t48 89 c7             \tmov    %rax,%rdi\n    3203:\t41 ff d0             \tcallq  *%r8\n    3206:\t48 8d 45 a8          \tlea    -0x58(%rbp),%rax\n    320a:\t48 89 c7             \tmov    %rax,%rdi\n    320d:\te8 1f ce ff ff       \tcallq  31 <AdjustEndianess32>\n    3212:\t0f b7 45 b2          \tmovzwl -0x4e(%rbp),%eax\n    3216:\t0f b7 d0             \tmovzwl %ax,%edx\n    3219:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 321f <ReadEmbeddedTextTag+0x43a>\n    321f:\t39 c2                \tcmp    %eax,%edx\n    3221:\t74 07                \tje     322a <ReadEmbeddedTextTag+0x445>\n    3223:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    3228:\t75 23                \tjne    324d <ReadEmbeddedTextTag+0x468>\n    322a:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n    322d:\t89 c0                \tmov    %eax,%eax\n    322f:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    3233:\t8b 45 a8             \tmov    -0x58(%rbp),%eax\n    3236:\t89 c0                \tmov    %eax,%eax\n    3238:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    323c:\t0f b7 45 b0          \tmovzwl -0x50(%rbp),%eax\n    3240:\t0f b7 d0             \tmovzwl %ax,%edx\n    3243:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 3249 <ReadEmbeddedTextTag+0x464>\n    3249:\t39 c2                \tcmp    %eax,%edx\n    324b:\t74 16                \tje     3263 <ReadEmbeddedTextTag+0x47e>\n    324d:\t48 83 45 e0 01       \taddq   $0x1,-0x20(%rbp)\n    3252:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n    3255:\t89 c0                \tmov    %eax,%eax\n    3257:\t48 39 45 e0          \tcmp    %rax,-0x20(%rbp)\n    325b:\t0f 82 dd fe ff ff    \tjb     313e <ReadEmbeddedTextTag+0x359>\n    3261:\teb 01                \tjmp    3264 <ReadEmbeddedTextTag+0x47f>\n    3263:\t90                   \tnop\n    3264:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    3269:\t75 1c                \tjne    3287 <ReadEmbeddedTextTag+0x4a2>\n    326b:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    326f:\t48 b9 28 6e 6f 20 69 \tmovabs $0x6f666e69206f6e28,%rcx\n    3276:\t6e 66 6f \n    3279:\t48 89 08             \tmov    %rcx,(%rax)\n    327c:\t66 c7 40 08 29 00    \tmovw   $0x29,0x8(%rax)\n    3282:\te9 27 01 00 00       \tjmpq   33ae <ReadEmbeddedTextTag+0x5c9>\n    3287:\t8b 55 b8             \tmov    -0x48(%rbp),%edx\n    328a:\t89 d0                \tmov    %edx,%eax\n    328c:\t01 c0                \tadd    %eax,%eax\n    328e:\t01 d0                \tadd    %edx,%eax\n    3290:\tc1 e0 02             \tshl    $0x2,%eax\n    3293:\t83 c0 08             \tadd    $0x8,%eax\n    3296:\t89 c2                \tmov    %eax,%edx\n    3298:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    329c:\t48 29 d0             \tsub    %rdx,%rax\n    329f:\t48 83 e8 08          \tsub    $0x8,%rax\n    32a3:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    32a7:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    32ae:\t00 \n    32af:\teb 2e                \tjmp    32df <ReadEmbeddedTextTag+0x4fa>\n    32b1:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    32b5:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    32bc:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    32c0:\t48 8b 10             \tmov    (%rax),%rdx\n    32c3:\t48 8d 45 a7          \tlea    -0x59(%rbp),%rax\n    32c7:\t48 89 d1             \tmov    %rdx,%rcx\n    32ca:\tba 01 00 00 00       \tmov    $0x1,%edx\n    32cf:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    32d4:\t48 89 c7             \tmov    %rax,%rdi\n    32d7:\t41 ff d0             \tcallq  *%r8\n    32da:\t48 83 45 e0 01       \taddq   $0x1,-0x20(%rbp)\n    32df:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    32e3:\t48 3b 45 f0          \tcmp    -0x10(%rbp),%rax\n    32e7:\t72 c8                \tjb     32b1 <ReadEmbeddedTextTag+0x4cc>\n    32e9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    32ed:\t48 83 c0 02          \tadd    $0x2,%rax\n    32f1:\t48 89 c7             \tmov    %rax,%rdi\n    32f4:\te8 00 00 00 00       \tcallq  32f9 <ReadEmbeddedTextTag+0x514>\n    32f9:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    32fd:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n    3302:\t75 0a                \tjne    330e <ReadEmbeddedTextTag+0x529>\n    3304:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    3309:\te9 a4 00 00 00       \tjmpq   33b2 <ReadEmbeddedTextTag+0x5cd>\n    330e:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    3312:\t4c 8b 80 00 0d 00 00 \tmov    0xd00(%rax),%r8\n    3319:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    331d:\t48 8b 08             \tmov    (%rax),%rcx\n    3320:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    3324:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    3328:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    332d:\t48 89 c7             \tmov    %rax,%rdi\n    3330:\t41 ff d0             \tcallq  *%r8\n    3333:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3337:\t48 d1 e8             \tshr    %rax\n    333a:\t48 89 c2             \tmov    %rax,%rdx\n    333d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    3341:\t48 89 d6             \tmov    %rdx,%rsi\n    3344:\t48 89 c7             \tmov    %rax,%rdi\n    3347:\te8 52 cd ff ff       \tcallq  9e <AdjustEndianessArray16>\n    334c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3350:\t48 d1 e8             \tshr    %rax\n    3353:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    335a:\t00 \n    335b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    335f:\t48 01 d0             \tadd    %rdx,%rax\n    3362:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n    3368:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n    336c:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    3370:\tba ff 07 00 00       \tmov    $0x7ff,%edx\n    3375:\t48 89 ce             \tmov    %rcx,%rsi\n    3378:\t48 89 c7             \tmov    %rax,%rdi\n    337b:\te8 00 00 00 00       \tcallq  3380 <ReadEmbeddedTextTag+0x59b>\n    3380:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    3384:\t48 89 c7             \tmov    %rax,%rdi\n    3387:\te8 00 00 00 00       \tcallq  338c <ReadEmbeddedTextTag+0x5a7>\n    338c:\teb 20                \tjmp    33ae <ReadEmbeddedTextTag+0x5c9>\n    338e:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n    3391:\t89 c2                \tmov    %eax,%edx\n    3393:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    3398:\tbf 00 30 00 00       \tmov    $0x3000,%edi\n    339d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    33a2:\te8 00 00 00 00       \tcallq  33a7 <ReadEmbeddedTextTag+0x5c2>\n    33a7:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    33ac:\teb 04                \tjmp    33b2 <ReadEmbeddedTextTag+0x5cd>\n    33ae:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    33b2:\tc9                   \tleaveq \n    33b3:\tc3                   \tretq   ", "code_s": "__int64 __fastcall ReadEmbeddedTextTag(_QWORD *a1, __int64 a2, char *a3) {\n  __int64 v5;\n  __int64 v6;\n  unsigned __int64 v7;\n  unsigned __int64 v8;\n  unsigned __int64 v9;\n  char v10;\n  unsigned int v11;\n  unsigned int v12;\n  unsigned __int16 v13;\n  unsigned __int16 v14;\n  int v15;\n  unsigned int v16;\n  char v17;\n  char v18[Number];\n  char v19[Number];\n  unsigned int v20;\n  char v21[Number];\n  unsigned int v22;\n  unsigned int v23;\n  wchar_t *pwcs;\n  unsigned __int64 i;\n  unsigned __int64 v26;\n  unsigned __int64 v27;\n  unsigned int j;\n  ((void(__fastcall *)(unsigned int *, __int64, __int64, _QWORD))a1[Number])(\n      &v23, Number L, Number L, *a1);\n  v5 = a2 - Number;\n  AdjustEndianess32((char *)&v23);\n  if (v23 != Number) {\n    if (v23 > Number)\n      goto LABEL_35;\n    if (v23 == Number) {\n      v27 = Number L;\n      v26 = Number L;\n      pwcs = (wchar_t *)&unk_A0E4;\n      ((void(__fastcall *)(unsigned int *, __int64, __int64,\n                           _QWORD))a1[Number])(&v16, Number L, Number L, *a1);\n      AdjustEndianess32((char *)&v16);\n      ((void(__fastcall *)(int *, __int64, __int64, _QWORD))a1[Number])(\n          &v15, Number L, Number L, *a1);\n      AdjustEndianess32((char *)&v15);\n      if (v15 != Number) {\n        cmsSignalError(Number L, String);\n        return Number;\n      }\n      for (i = Number L; i < v16; ++i) {\n        ((void(__fastcall *)(unsigned __int16 *, __int64, __int64,\n                             _QWORD))a1[Number])(&v14, Number L, Number L, *a1);\n        AdjustEndianess16((unsigned __int8 *)&v14);\n        ((void(__fastcall *)(unsigned __int16 *, __int64, __int64,\n                             _QWORD))a1[Number])(&v13, Number L, Number L, *a1);\n        AdjustEndianess16((unsigned __int8 *)&v13);\n        ((void(__fastcall *)(unsigned int *, __int64, __int64,\n                             _QWORD))a1[Number])(&v12, Number L, Number L, *a1);\n        AdjustEndianess32((char *)&v12);\n        ((void(__fastcall *)(unsigned int *, __int64, __int64,\n                             _QWORD))a1[Number])(&v11, Number L, Number L, *a1);\n        AdjustEndianess32((char *)&v11);\n        if (v14 == GlobalLanguageCode || !v27) {\n          v26 = v12;\n          v27 = v11;\n          if (v13 == GlobalCountryCode)\n            break;\n        }\n      }\n      if (v27) {\n        v27 = v27 - (Number * v16 + Number) - Number;\n        for (i = Number L; i < v27; ++i)\n          ((void(__fastcall *)(char *, __int64, __int64, _QWORD))a1[Number])(\n              &v10, Number L, Number L, *a1);\n        pwcs = (wchar_t *)malloc(v26 + Number);\n        if (!pwcs)\n          return Number;\n        ((void(__fastcall *)(wchar_t *, __int64, unsigned __int64,\n                             _QWORD))a1[Number])(pwcs, Number L, v26, *a1);\n        AdjustEndianessArray16(pwcs, v26 >> Number);\n        pwcs[v26 >> Number] = Number;\n        wcstombs(a3, pwcs, Number);\n        free(pwcs);\n      } else {\n        strcpy(a3, String);\n      }\n      return v5;\n    }\n    if (v23 > Number)\n      goto LABEL_35;\n    if (v23 != Number) {\n      if (v23 == Number) {\n        ((void(__fastcall *)(unsigned int *, __int64, __int64,\n                             _QWORD))a1[Number])(&v22, Number L, Number L, *a1);\n        AdjustEndianess32((char *)&v22);\n        ((void(__fastcall *)(char *, __int64, _QWORD, _QWORD))a1[Number])(\n            a3, Number L, v22, *a1);\n        v6 = a2 - Number - v22;\n        ((void(__fastcall *)(char *, __int64, __int64, _QWORD))a1[Number])(\n            v21, Number L, Number L, *a1);\n        ((void(__fastcall *)(unsigned int *, __int64, __int64,\n                             _QWORD))a1[Number])(&v20, Number L, Number L, *a1);\n        v7 = v6 - Number;\n        AdjustEndianess32((char *)&v20);\n        if (v7 < v20)\n          return v7;\n        for (j = Number; j < v20; ++j)\n          ((void(__fastcall *)(char *, __int64, __int64, _QWORD))a1[Number])(\n              v18, Number L, Number L, *a1);\n        v8 = v7 - Number L * v20;\n        ((void(__fastcall *)(char *, __int64, __int64, _QWORD))a1[Number])(\n            v19, Number L, Number L, *a1);\n        ((void(__fastcall *)(char *, __int64, __int64, _QWORD))a1[Number])(\n            &v17, Number L, Number L, *a1);\n        v9 = v8 - Number;\n        if (v9 <= Number)\n          return v9;\n        for (j = Number; j <= Number; ++j)\n          ((void(__fastcall *)(char *, __int64, __int64, _QWORD))a1[Number])(\n              v18, Number L, Number L, *a1);\n        return v9 - Number;\n      }\n    LABEL_35:\n      cmsSignalError(Number L, String, v23);\n      return Number;\n    }\n  }\n  ((void(__fastcall *)(char *, __int64, __int64, _QWORD))a1[Number])(\n      a3, Number L, v5, *a1);\n  return v5;\n}", "code_t": "int __cdecl ReadEmbeddedTextTag(LPLCMSICCPROFILE Icc, size_t size, char *Name) {\n  size_t sizea;\n  size_t sizec;\n  size_t sizeb;\n  size_t sized;\n  char Discard;\n  icUInt32Number ThisOffset;\n  icUInt32Number ThisLen;\n  icUInt16Number Country;\n  icUInt16Number Language;\n  icUInt32Number RecLen;\n  icUInt32Number Count;\n  icUInt8Number ScriptCodeCount;\n  icUInt16Number Dummy;\n  icUInt16Number ScriptCodeCode;\n  icUInt32Number UnicodeCount;\n  icUInt32Number UnicodeCode;\n  icUInt32Number AsciiCount;\n  icTagBase <span class=\"supfact\">Base</span>;\n  wchar_t *wchar;\n  size_t i_0;\n  size_t Len;\n  size_t Offset;\n  icUInt32Number i;\n  Icc->Read(&<span class=\"supfact\">Base</span>, Number L, Number L, Icc->stream);\n  sizea = size - Number;\n  AdjustEndianess32((LPBYTE)&<span class=\"supfact\">Base</span>);\n  if (<span class=\"supfact\">Base</span>.sig != icSigTextType) {\n    if (<span class=\"supfact\">Base</span>.sig > (unsigned int)icSigTextType)\n      goto LABEL_35;\n    if (<span class=\"supfact\">Base</span>.sig == Number) {\n      Offset = Number L;\n      Len = Number L;\n      wchar = (wchar_t *)&unk_A0E4;\n      Icc->Read(&Count, Number L, Number L, Icc->stream);\n      AdjustEndianess32((LPBYTE)&Count);\n      Icc->Read(&RecLen, Number L, Number L, Icc->stream);\n      AdjustEndianess32((LPBYTE)&RecLen);\n      if (RecLen != Number) {\n        cmsSignalError(Number L, String);\n        return Number;\n      }\n      for (i_0 = Number L; i_0 < Count; ++i_0) {\n        Icc->Read(&Language, Number L, Number L, Icc->stream);\n        AdjustEndianess16((LPBYTE)&Language);\n        Icc->Read(&Country, Number L, Number L, Icc->stream);\n        AdjustEndianess16((LPBYTE)&Country);\n        Icc->Read(&ThisLen, Number L, Number L, Icc->stream);\n        AdjustEndianess32((LPBYTE)&ThisLen);\n        Icc->Read(&ThisOffset, Number L, Number L, Icc->stream);\n        AdjustEndianess32((LPBYTE)&ThisOffset);\n        if (Language == GlobalLanguageCode || !Offset) {\n          Len = ThisLen;\n          Offset = ThisOffset;\n          if (Country == GlobalCountryCode)\n            break;\n        }\n      }\n      if (Offset) {\n        Offset = Offset - (Number * Count + Number) - Number;\n        for (i_0 = Number L; i_0 < Offset; ++i_0)\n          Icc->Read(&Discard, Number L, Number L, Icc->stream);\n        wchar = (wchar_t *)malloc(Len + Number);\n        if (!wchar)\n          return Number;\n        Icc->Read(wchar, Number L, Len, Icc->stream);\n        AdjustEndianessArray16((LPWORD)wchar, Len >> Number);\n        wchar[Len >> Number] = Number;\n        wcstombs(Name, wchar, Number);\n        free(wchar);\n      } else {\n        strcpy(Name, String);\n      }\n      return sizea;\n    }\n    if (<span class=\"supfact\">Base</span>.sig > Number)\n      goto LABEL_35;\n    if (<span class=\"supfact\">Base</span>.sig != Number) {\n      if (<span class=\"supfact\">Base</span>.sig == icSigTextDescriptionType) {\n        Icc->Read(&AsciiCount, Number L, Number L, Icc->stream);\n        AdjustEndianess32((LPBYTE)&AsciiCount);\n        Icc->Read(Name, Number L, AsciiCount, Icc->stream);\n        sizec = size - Number - AsciiCount;\n        Icc->Read(&UnicodeCode, Number L, Number L, Icc->stream);\n        Icc->Read(&UnicodeCount, Number L, Number L, Icc->stream);\n        sizeb = sizec - Number;\n        AdjustEndianess32((LPBYTE)&UnicodeCount);\n        if (sizeb < UnicodeCount)\n          return sizeb;\n        for (i = Number; i < UnicodeCount; ++i)\n          Icc->Read(&Dummy, Number L, Number L, Icc->stream);\n        sized = sizeb - Number L * UnicodeCount;\n        Icc->Read(&ScriptCodeCode, Number L, Number L, Icc->stream);\n        Icc->Read(&ScriptCodeCount, Number L, Number L, Icc->stream);\n        sizea = sized - Number;\n        if (sizea <= Number)\n          return sizea;\n        for (i = Number; i <= Number; ++i)\n          Icc->Read(&Dummy, Number L, Number L, Icc->stream);\n        LODWORD(sizea) = sizea - Number;\n        return sizea;\n      }\n    LABEL_35:\n      cmsSignalError(Number L, String, (unsigned int)<span class=\"supfact\">Base</span>.sig);\n      return Number;\n    }\n  }\n  Icc->Read(Name, Number L, sizea, Icc->stream);\n  return sizea;\n}", "var": [{"name": "v23", "type": "int", "pred_name": "__unk__", "ref_name": "Base", "ref_type": "struct icTagBase { icTagTypeSignature sig; icInt8Number[4] reserved; }"}], "body_in_train": false}, {"repo_owner": "kjkasi", "repo_name": "030005", "path": "kjkasi/030005/42e3536ccbc1b695fb11b7d977771ee12fe1f447e7c6cf84d9004fd03c1822ae", "path_in_repo": "kjkasi/030005/ngos/JWNR2000_4EMRUS/SW/opensource/openssl/demos/eay/loadrsa", "objdump": "000000000044010c <RSA_sign>:\n  44010c:\t53                   \tpush   %rbx\n  44010d:\t48 81 ec b0 00 00 00 \tsub    $0xb0,%rsp\n  440114:\t89 7c 24 2c          \tmov    %edi,0x2c(%rsp)\n  440118:\t48 89 74 24 20       \tmov    %rsi,0x20(%rsp)\n  44011d:\t89 54 24 28          \tmov    %edx,0x28(%rsp)\n  440121:\t48 89 4c 24 18       \tmov    %rcx,0x18(%rsp)\n  440126:\t4c 89 44 24 10       \tmov    %r8,0x10(%rsp)\n  44012b:\t4c 89 4c 24 08       \tmov    %r9,0x8(%rsp)\n  440130:\tc7 84 24 a8 00 00 00 \tmovl   $0x1,0xa8(%rsp)\n  440137:\t01 00 00 00 \n  44013b:\t48 c7 84 24 a0 00 00 \tmovq   $0x0,0xa0(%rsp)\n  440142:\t00 00 00 00 00 \n  440147:\t48 c7 84 24 98 00 00 \tmovq   $0x0,0x98(%rsp)\n  44014e:\t00 00 00 00 00 \n  440153:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n  440158:\t8b 40 74             \tmov    0x74(%rax),%eax\n  44015b:\t83 e0 40             \tand    $0x40,%eax\n  44015e:\t85 c0                \ttest   %eax,%eax\n  440160:\t74 4b                \tje     4401ad <RSA_sign+0xa1>\n  440162:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n  440167:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  44016b:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n  44016f:\t48 85 c0             \ttest   %rax,%rax\n  440172:\t74 39                \tje     4401ad <RSA_sign+0xa1>\n  440174:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n  440179:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  44017d:\t4c 8b 50 58          \tmov    0x58(%rax),%r10\n  440181:\t4c 8b 44 24 08       \tmov    0x8(%rsp),%r8\n  440186:\t48 8b 7c 24 10       \tmov    0x10(%rsp),%rdi\n  44018b:\t48 8b 4c 24 18       \tmov    0x18(%rsp),%rcx\n  440190:\t8b 54 24 28          \tmov    0x28(%rsp),%edx\n  440194:\t48 8b 74 24 20       \tmov    0x20(%rsp),%rsi\n  440199:\t8b 44 24 2c          \tmov    0x2c(%rsp),%eax\n  44019d:\t4d 89 c1             \tmov    %r8,%r9\n  4401a0:\t49 89 f8             \tmov    %rdi,%r8\n  4401a3:\t89 c7                \tmov    %eax,%edi\n  4401a5:\t41 ff d2             \tcallq  *%r10\n  4401a8:\te9 cd 02 00 00       \tjmpq   44047a <RSA_sign+0x36e>\n  4401ad:\t83 7c 24 2c 72       \tcmpl   $0x72,0x2c(%rsp)\n  4401b2:\t75 4d                \tjne    440201 <RSA_sign+0xf5>\n  4401b4:\t83 7c 24 28 24       \tcmpl   $0x24,0x28(%rsp)\n  4401b9:\t74 29                \tje     4401e4 <RSA_sign+0xd8>\n  4401bb:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n  4401c1:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  4401c6:\tba 83 00 00 00       \tmov    $0x83,%edx\n  4401cb:\tbe 75 00 00 00       \tmov    $0x75,%esi\n  4401d0:\tbf 04 00 00 00       \tmov    $0x4,%edi\n  4401d5:\te8 74 33 fc ff       \tcallq  40354e <ERR_put_error>\n  4401da:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4401df:\te9 96 02 00 00       \tjmpq   44047a <RSA_sign+0x36e>\n  4401e4:\tc7 84 24 ac 00 00 00 \tmovl   $0x24,0xac(%rsp)\n  4401eb:\t24 00 00 00 \n  4401ef:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n  4401f4:\t48 89 84 24 98 00 00 \tmov    %rax,0x98(%rsp)\n  4401fb:\t00 \n  4401fc:\te9 01 01 00 00       \tjmpq   440302 <RSA_sign+0x1f6>\n  440201:\t48 8d 44 24 50       \tlea    0x50(%rsp),%rax\n  440206:\t48 89 84 24 80 00 00 \tmov    %rax,0x80(%rsp)\n  44020d:\t00 \n  44020e:\t48 8b 9c 24 80 00 00 \tmov    0x80(%rsp),%rbx\n  440215:\t00 \n  440216:\t8b 44 24 2c          \tmov    0x2c(%rsp),%eax\n  44021a:\t89 c7                \tmov    %eax,%edi\n  44021c:\te8 30 23 fd ff       \tcallq  412551 <OBJ_nid2obj>\n  440221:\t48 89 03             \tmov    %rax,(%rbx)\n  440224:\t48 8b 84 24 80 00 00 \tmov    0x80(%rsp),%rax\n  44022b:\t00 \n  44022c:\t48 8b 00             \tmov    (%rax),%rax\n  44022f:\t48 85 c0             \ttest   %rax,%rax\n  440232:\t75 29                \tjne    44025d <RSA_sign+0x151>\n  440234:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n  44023a:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  44023f:\tba 75 00 00 00       \tmov    $0x75,%edx\n  440244:\tbe 75 00 00 00       \tmov    $0x75,%esi\n  440249:\tbf 04 00 00 00       \tmov    $0x4,%edi\n  44024e:\te8 fb 32 fc ff       \tcallq  40354e <ERR_put_error>\n  440253:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  440258:\te9 1d 02 00 00       \tjmpq   44047a <RSA_sign+0x36e>\n  44025d:\t48 8b 84 24 80 00 00 \tmov    0x80(%rsp),%rax\n  440264:\t00 \n  440265:\t48 8b 00             \tmov    (%rax),%rax\n  440268:\t8b 40 14             \tmov    0x14(%rax),%eax\n  44026b:\t85 c0                \ttest   %eax,%eax\n  44026d:\t75 29                \tjne    440298 <RSA_sign+0x18c>\n  44026f:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n  440275:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  44027a:\tba 74 00 00 00       \tmov    $0x74,%edx\n  44027f:\tbe 75 00 00 00       \tmov    $0x75,%esi\n  440284:\tbf 04 00 00 00       \tmov    $0x4,%edi\n  440289:\te8 c0 32 fc ff       \tcallq  40354e <ERR_put_error>\n  44028e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  440293:\te9 e2 01 00 00       \tjmpq   44047a <RSA_sign+0x36e>\n  440298:\tc7 44 24 70 05 00 00 \tmovl   $0x5,0x70(%rsp)\n  44029f:\t00 \n  4402a0:\t48 c7 44 24 78 00 00 \tmovq   $0x0,0x78(%rsp)\n  4402a7:\t00 00 \n  4402a9:\t48 8b 84 24 80 00 00 \tmov    0x80(%rsp),%rax\n  4402b0:\t00 \n  4402b1:\t48 8d 54 24 70       \tlea    0x70(%rsp),%rdx\n  4402b6:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n  4402ba:\t48 8d 44 24 30       \tlea    0x30(%rsp),%rax\n  4402bf:\t48 89 84 24 88 00 00 \tmov    %rax,0x88(%rsp)\n  4402c6:\t00 \n  4402c7:\t48 8b 84 24 88 00 00 \tmov    0x88(%rsp),%rax\n  4402ce:\t00 \n  4402cf:\t48 8b 54 24 20       \tmov    0x20(%rsp),%rdx\n  4402d4:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n  4402d8:\t48 8b 84 24 88 00 00 \tmov    0x88(%rsp),%rax\n  4402df:\t00 \n  4402e0:\t8b 54 24 28          \tmov    0x28(%rsp),%edx\n  4402e4:\t89 10                \tmov    %edx,(%rax)\n  4402e6:\t48 8d 84 24 80 00 00 \tlea    0x80(%rsp),%rax\n  4402ed:\t00 \n  4402ee:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  4402f3:\t48 89 c7             \tmov    %rax,%rdi\n  4402f6:\te8 72 09 00 00       \tcallq  440c6d <i2d_X509_SIG>\n  4402fb:\t89 84 24 ac 00 00 00 \tmov    %eax,0xac(%rsp)\n  440302:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n  440307:\t48 89 c7             \tmov    %rax,%rdi\n  44030a:\te8 81 1e fc ff       \tcallq  402190 <RSA_size>\n  44030f:\t89 84 24 94 00 00 00 \tmov    %eax,0x94(%rsp)\n  440316:\t8b 84 24 94 00 00 00 \tmov    0x94(%rsp),%eax\n  44031d:\t83 e8 0a             \tsub    $0xa,%eax\n  440320:\t39 84 24 ac 00 00 00 \tcmp    %eax,0xac(%rsp)\n  440327:\t7c 29                \tjl     440352 <RSA_sign+0x246>\n  440329:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n  44032f:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  440334:\tba 70 00 00 00       \tmov    $0x70,%edx\n  440339:\tbe 75 00 00 00       \tmov    $0x75,%esi\n  44033e:\tbf 04 00 00 00       \tmov    $0x4,%edi\n  440343:\te8 06 32 fc ff       \tcallq  40354e <ERR_put_error>\n  440348:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  44034d:\te9 28 01 00 00       \tjmpq   44047a <RSA_sign+0x36e>\n  440352:\t83 7c 24 2c 72       \tcmpl   $0x72,0x2c(%rsp)\n  440357:\t0f 84 8e 00 00 00    \tje     4403eb <RSA_sign+0x2df>\n  44035d:\t8b 84 24 94 00 00 00 \tmov    0x94(%rsp),%eax\n  440364:\t83 c0 01             \tadd    $0x1,%eax\n  440367:\tba 7a 00 00 00       \tmov    $0x7a,%edx\n  44036c:\t48 8d 35 6d 70 00 00 \tlea    0x706d(%rip),%rsi        # 4473e0 <end.4030+0x10>\n  440373:\t89 c7                \tmov    %eax,%edi\n  440375:\te8 3e f2 fc ff       \tcallq  40f5b8 <CRYPTO_malloc>\n  44037a:\t48 89 84 24 a0 00 00 \tmov    %rax,0xa0(%rsp)\n  440381:\t00 \n  440382:\t48 83 bc 24 a0 00 00 \tcmpq   $0x0,0xa0(%rsp)\n  440389:\t00 00 \n  44038b:\t75 29                \tjne    4403b6 <RSA_sign+0x2aa>\n  44038d:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n  440393:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  440398:\tba 41 00 00 00       \tmov    $0x41,%edx\n  44039d:\tbe 75 00 00 00       \tmov    $0x75,%esi\n  4403a2:\tbf 04 00 00 00       \tmov    $0x4,%edi\n  4403a7:\te8 a2 31 fc ff       \tcallq  40354e <ERR_put_error>\n  4403ac:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4403b1:\te9 c4 00 00 00       \tjmpq   44047a <RSA_sign+0x36e>\n  4403b6:\t48 8b 84 24 a0 00 00 \tmov    0xa0(%rsp),%rax\n  4403bd:\t00 \n  4403be:\t48 89 44 24 68       \tmov    %rax,0x68(%rsp)\n  4403c3:\t48 8d 54 24 68       \tlea    0x68(%rsp),%rdx\n  4403c8:\t48 8d 84 24 80 00 00 \tlea    0x80(%rsp),%rax\n  4403cf:\t00 \n  4403d0:\t48 89 d6             \tmov    %rdx,%rsi\n  4403d3:\t48 89 c7             \tmov    %rax,%rdi\n  4403d6:\te8 92 08 00 00       \tcallq  440c6d <i2d_X509_SIG>\n  4403db:\t48 8b 84 24 a0 00 00 \tmov    0xa0(%rsp),%rax\n  4403e2:\t00 \n  4403e3:\t48 89 84 24 98 00 00 \tmov    %rax,0x98(%rsp)\n  4403ea:\t00 \n  4403eb:\t48 8b 4c 24 08       \tmov    0x8(%rsp),%rcx\n  4403f0:\t48 8b 54 24 18       \tmov    0x18(%rsp),%rdx\n  4403f5:\t48 8b b4 24 98 00 00 \tmov    0x98(%rsp),%rsi\n  4403fc:\t00 \n  4403fd:\t8b 84 24 ac 00 00 00 \tmov    0xac(%rsp),%eax\n  440404:\t41 b8 01 00 00 00    \tmov    $0x1,%r8d\n  44040a:\t89 c7                \tmov    %eax,%edi\n  44040c:\te8 f6 1d fc ff       \tcallq  402207 <RSA_private_encrypt>\n  440411:\t89 84 24 ac 00 00 00 \tmov    %eax,0xac(%rsp)\n  440418:\t83 bc 24 ac 00 00 00 \tcmpl   $0x0,0xac(%rsp)\n  44041f:\t00 \n  440420:\t7f 0d                \tjg     44042f <RSA_sign+0x323>\n  440422:\tc7 84 24 a8 00 00 00 \tmovl   $0x0,0xa8(%rsp)\n  440429:\t00 00 00 00 \n  44042d:\teb 0e                \tjmp    44043d <RSA_sign+0x331>\n  44042f:\t8b 94 24 ac 00 00 00 \tmov    0xac(%rsp),%edx\n  440436:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n  44043b:\t89 10                \tmov    %edx,(%rax)\n  44043d:\t83 7c 24 2c 72       \tcmpl   $0x72,0x2c(%rsp)\n  440442:\t74 2f                \tje     440473 <RSA_sign+0x367>\n  440444:\t8b 84 24 94 00 00 00 \tmov    0x94(%rsp),%eax\n  44044b:\t83 c0 01             \tadd    $0x1,%eax\n  44044e:\t89 c2                \tmov    %eax,%edx\n  440450:\t48 8b 84 24 a0 00 00 \tmov    0xa0(%rsp),%rax\n  440457:\t00 \n  440458:\t48 89 d6             \tmov    %rdx,%rsi\n  44045b:\t48 89 c7             \tmov    %rax,%rdi\n  44045e:\te8 81 f5 fc ff       \tcallq  40f9e4 <OPENSSL_cleanse>\n  440463:\t48 8b 84 24 a0 00 00 \tmov    0xa0(%rsp),%rax\n  44046a:\t00 \n  44046b:\t48 89 c7             \tmov    %rax,%rdi\n  44046e:\te8 6e f4 fc ff       \tcallq  40f8e1 <CRYPTO_free>\n  440473:\t8b 84 24 a8 00 00 00 \tmov    0xa8(%rsp),%eax\n  44047a:\t48 81 c4 b0 00 00 00 \tadd    $0xb0,%rsp\n  440481:\t5b                   \tpop    %rbx\n  440482:\tc3                   \tretq   ", "code_s": "__int64 __fastcall RSA_sign(unsigned int a1, _BYTE *a2, unsigned int a3,\n                            __int64 a4, signed int *a5, __int64 a6) {\n  unsigned int v11;\n  _BYTE *v12;\n  char **v13;\n  _BYTE *v14;\n  int v15;\n  __int64 v16;\n  __int64 v17[Number];\n  int v18;\n  _BYTE *v19;\n  _BYTE *v20;\n  unsigned int v21;\n  signed int v22;\n  v21 = Number;\n  v20 = Number L;\n  v19 = Number L;\n  if ((*(_DWORD *)(a6 + Number) & Number) != Number &&\n      *(_QWORD *)(*(_QWORD *)(a6 + Number) + Number L))\n    return (*(__int64(__fastcall **)(_QWORD, _BYTE *, _QWORD, __int64,\n                                     signed int *, __int64))(\n        *(_QWORD *)(a6 + Number) + Number L))(a1, a2, a3, a4, a5, a6);\n  if (a1 == Number) {\n    if (a3 != Number) {\n      ERR_put_error(Number, Number, Number, Number L, Number);\n      return Number L;\n    }\n    v22 = Number;\n    v19 = a2;\n  } else {\n    v17[Number] = (__int64)&v13;\n    v13 = OBJ_nid2obj(a1);\n    if (!*(_QWORD *)v17[Number]) {\n      ERR_put_error(Number, Number, Number, Number L, Number);\n      return Number L;\n    }\n    if (!*(_DWORD *)(*(_QWORD *)v17[Number] + Number L)) {\n      ERR_put_error(Number, Number, Number, Number L, Number);\n      return Number L;\n    }\n    v15 = Number;\n    v16 = Number L;\n    *(_QWORD *)(v17[Number] + Number) = &v15;\n    v17[Number] = (__int64)&v11;\n    v12 = a2;\n    v11 = a3;\n    v22 = i2d_X509_SIG(v17, Number L);\n  }\n  v18 = RSA_size(a6);\n  if (v22 >= v18 - Number) {\n    ERR_put_error(Number, Number, Number, Number L, Number);\n    return Number L;\n  }\n  if (a1 != Number) {\n    v20 = CRYPTO_malloc(v18 + Number, (__int64)String, Number);\n    if (!v20) {\n      ERR_put_error(Number, Number, Number, Number L, Number);\n      return Number L;\n    }\n    v14 = v20;\n    i2d_X509_SIG(v17, &v14);\n    v19 = v20;\n  }\n  v22 = RSA_private_encrypt(v22, (__int64)v19, a4, a6, Number);\n  if (v22 > Number)\n    *a5 = v22;\n  else\n    v21 = Number;\n  if (a1 != Number) {\n    OPENSSL_cleanse(v20, (unsigned int)(v18 + Number));\n    CRYPTO_free((__int64)v20);\n  }\n  return v21;\n}", "code_t": "int __cdecl RSA_sign(int type, const unsigned __int8 *m, unsigned int m_len,\n                     unsigned __int8 *sigret, unsigned int *siglen, RSA *rsa) {\n  ASN1_OCTET_STRING <span class=\"supfact\">digest</span>;\n  X509_ALGOR <span class=\"supfact\">algor</span>;\n  unsigned __int8 *p;\n  ASN1_TYPE <span class=\"supfact\">parameter</span>;\n  X509_SIG <span class=\"supfact\">sig</span>;\n  int j;\n  const unsigned __int8 *s;\n  unsigned __int8 *tmps;\n  int ret;\n  int i;\n  ret = Number;\n  tmps = Number L;\n  s = Number L;\n  if ((rsa->flags & Number) != Number && rsa->meth->rsa_sign)\n    return rsa->meth->rsa_sign(type, m, m_len, sigret, siglen, rsa);\n  if (type == Number) {\n    if (m_len != Number) {\n      ERR_put_error(Number, Number, Number, Number L, Number);\n      return Number;\n    }\n    i = Number;\n    s = m;\n  } else {\n    <span class=\"supfact\">sig</span>.<span class=\"supfact\">algor</span> = &<span class=\"supfact\">algor</span>;\n    <span class=\"supfact\">algor</span>.algorithm = OBJ_nid2obj(type);\n    if (!<span class=\"supfact\">sig</span>.<span class=\"supfact\">algor</span>->algorithm) {\n      ERR_put_error(Number, Number, Number, Number L, Number);\n      return Number;\n    }\n    if (!<span class=\"supfact\">sig</span>.<span class=\"supfact\">algor</span>->algorithm->length) {\n      ERR_put_error(Number, Number, Number, Number L, Number);\n      return Number;\n    }\n    <span class=\"supfact\">parameter</span>.type = Number;\n    <span class=\"supfact\">parameter</span>.value.ptr = Number L;\n    <span class=\"supfact\">sig</span>.<span class=\"supfact\">algor</span>-><span class=\"supfact\">parameter</span> =\n        &<span class=\"supfact\">parameter</span>;\n    <span class=\"supfact\">sig</span>.<span class=\"supfact\">digest</span> = &<span class=\"supfact\">digest</span>;\n    <span class=\"supfact\">digest</span>.data = (unsigned __int8 *)m;\n    <span class=\"supfact\">digest</span>.length = m_len;\n    i = i2d_X509_SIG(&<span class=\"supfact\">sig</span>, Number L);\n  }\n  j = RSA_size(rsa);\n  if (i >= j - Number) {\n    ERR_put_error(Number, Number, Number, Number L, Number);\n    return Number;\n  }\n  if (type != Number) {\n    tmps = (unsigned __int8 *)CRYPTO_malloc(j + Number, String, Number);\n    if (!tmps) {\n      ERR_put_error(Number, Number, Number, Number L, Number);\n      return Number;\n    }\n    p = tmps;\n    i2d_X509_SIG(&<span class=\"supfact\">sig</span>, &p);\n    s = tmps;\n  }\n  i = RSA_private_encrypt(i, s, sigret, rsa, Number);\n  if (i > Number)\n    *siglen = i;\n  else\n    ret = Number;\n  if (type != Number) {\n    OPENSSL_cleanse(tmps, (unsigned int)(j + Number));\n    CRYPTO_free(tmps);\n  }\n  return ret;\n}", "var": [{"name": "v11", "type": "struct ASN1_OCTET_STRING { int length; int type; unsigned __int8 * data; __int64 flags; }", "pred_name": "digest", "ref_name": "digest", "ref_type": "struct ASN1_OCTET_STRING { int length; int type; unsigned __int8 * data; __int64 flags; }"}, {"name": "v13", "type": "struct X509_ALGOR { ASN1_OBJECT * algorithm; ASN1_TYPE * parameter; }", "pred_name": "algorithm", "ref_name": "algor", "ref_type": "struct X509_ALGOR { ASN1_OBJECT * algorithm; ASN1_TYPE * parameter; }"}, {"name": "v15", "type": "disappear", "pred_name": "", "ref_name": "parameter", "ref_type": "struct ASN1_TYPE { int type; PADDING (4); $9D278F9C15ED1C7E94E01C560E3800AA value; }"}, {"name": "v17", "type": "struct ASN1_OCTET_STRING { int length; int type; unsigned __int8 * data; __int64 flags; }", "pred_name": "sig", "ref_name": "sig", "ref_type": "struct X509_SIG { X509_ALGOR * algor; ASN1_OCTET_STRING * digest; }"}], "body_in_train": false}, {"repo_owner": "v4o6", "repo_name": "cpsc314", "path": "v4o6/cpsc314/a25c6f651200c99b5d3b2a5b5317b70c75a4cab6d83283e756e97ad31a5762e2", "path_in_repo": "v4o6/cpsc314/template_clean/a3", "objdump": "000000000040de8f <_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN6Object6VertexESaIS4_EES2_IS6_SaIS6_EEEEPS6_ET0_T_SE_SD_>:\n  40de8f:\t55                   \tpush   %rbp\n  40de90:\t48 89 e5             \tmov    %rsp,%rbp\n  40de93:\t48 83 ec 30          \tsub    $0x30,%rsp\n  40de97:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  40de9b:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n  40de9f:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n  40dea3:\tc6 45 ff 01          \tmovb   $0x1,-0x1(%rbp)\n  40dea7:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n  40deab:\t48 8b 4d e0          \tmov    -0x20(%rbp),%rcx\n  40deaf:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40deb3:\t48 89 ce             \tmov    %rcx,%rsi\n  40deb6:\t48 89 c7             \tmov    %rax,%rdi\n  40deb9:\te8 35 05 00 00       \tcallq  40e3f3 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN6Object6VertexESaIS6_EES4_IS8_SaIS8_EEEEPS8_EET0_T_SG_SF_>\n  40debe:\tc9                   \tleaveq \n  40debf:\tc3                   \tretq   ", "code_s": "__int64 __fastcall std uninitialized_copy<\n    __gnu_cxx __normal_iterator<std vector<Object Vertex> const *,\n                                std vector<std vector<Object Vertex>>>,\n    std vector<Object Vertex> *>(__int64 a1, __int64 a2, __int64 a3) {\n  return std __uninitialized_copy<false> __uninit_copy<\n      __gnu_cxx __normal_iterator<std vector<Object Vertex> const *,\n                                  std vector<std vector<Object Vertex>>>,\n      std vector<Object Vertex> *>(a1, a2, a3);\n}", "code_t": "std vector<Object Vertex> *__cdecl std uninitialized_copy<\n    __gnu_cxx __normal_iterator<std vector<Object Vertex> const *,\n                                std vector<std vector<Object Vertex>>>,\n    std vector<Object Vertex> *>(\n    __gnu_cxx __normal_iterator<const std vector<Object Vertex> *,\n                                std vector<std vector<Object Vertex>>>\n        <span class=\"supfact\">__first</span>,\n    __gnu_cxx __normal_iterator<const std vector<Object Vertex> *,\n                                std vector<std vector<Object Vertex>>>\n        <span class=\"supfact\">__last</span>,\n    std vector<Object Vertex> *__result) {\n  return std __uninitialized_copy<false> __uninit_copy<\n      __gnu_cxx __normal_iterator<std vector<Object Vertex> const *,\n                                  std vector<std vector<Object Vertex>>>,\n      std vector<Object Vertex> *>(<span class=\"supfact\">__first</span>,\n                                   <span class=\"supfact\">__last</span>, __result);\n}", "var": [{"name": "a1", "type": "__int64", "pred_name": "a1", "ref_name": "__first", "ref_type": "struct __gnu_cxx::__normal_iterator<const std::vector<Object::Vertex>*,std::vector<std::vector<Object::Vertex>> > { const std::vector<Object::Vertex> * _M_current; }"}, {"name": "a2", "type": "__int64", "pred_name": "a2", "ref_name": "__last", "ref_type": "struct __gnu_cxx::__normal_iterator<const std::vector<Object::Vertex>*,std::vector<std::vector<Object::Vertex>> > { const std::vector<Object::Vertex> * _M_current; }"}], "body_in_train": false}, {"repo_owner": "javaperson", "repo_name": "swapdb", "path": "javaperson/swapdb/60bc66aaa5a77756c5e777fedb57b5f7b63c6d07aa005cd6567862015e81b8d5", "path_in_repo": "javaperson/swapdb/swap-ssdb-1.9.2/deps/rocksdb/utilities/env_mirror.o", "objdump": "0000000000000000 <_ZN7rocksdb18WritableFileMirror15InvalidateCacheEmm>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t41 56                \tpush   %r14\n   6:\t49 89 ce             \tmov    %rcx,%r14\n   9:\t41 55                \tpush   %r13\n   b:\t49 89 d5             \tmov    %rdx,%r13\n   e:\t41 54                \tpush   %r12\n  10:\t49 89 fc             \tmov    %rdi,%r12\n  13:\t53                   \tpush   %rbx\n  14:\t48 89 f3             \tmov    %rsi,%rbx\n  17:\t48 83 ec 10          \tsub    $0x10,%rsp\n  1b:\t48 8b 76 20          \tmov    0x20(%rsi),%rsi\n  1f:\t48 8b 06             \tmov    (%rsi),%rax\n  22:\tff 90 90 00 00 00    \tcallq  *0x90(%rax)\n  28:\t48 8b 73 28          \tmov    0x28(%rbx),%rsi\n  2c:\t4c 89 f1             \tmov    %r14,%rcx\n  2f:\t4c 89 ea             \tmov    %r13,%rdx\n  32:\t48 8d 7d d0          \tlea    -0x30(%rbp),%rdi\n  36:\t48 8b 06             \tmov    (%rsi),%rax\n  39:\tff 90 90 00 00 00    \tcallq  *0x90(%rax)\n  3f:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n  42:\t41 39 04 24          \tcmp    %eax,(%r12)\n  46:\t75 1e                \tjne    66 <_ZN7rocksdb18WritableFileMirror15InvalidateCacheEmm+0x66>\n  48:\t48 8b 7d d8          \tmov    -0x28(%rbp),%rdi\n  4c:\t48 85 ff             \ttest   %rdi,%rdi\n  4f:\t74 05                \tje     56 <_ZN7rocksdb18WritableFileMirror15InvalidateCacheEmm+0x56>\n  51:\te8 00 00 00 00       \tcallq  56 <_ZN7rocksdb18WritableFileMirror15InvalidateCacheEmm+0x56>\n  56:\t48 83 c4 10          \tadd    $0x10,%rsp\n  5a:\t4c 89 e0             \tmov    %r12,%rax\n  5d:\t5b                   \tpop    %rbx\n  5e:\t41 5c                \tpop    %r12\n  60:\t41 5d                \tpop    %r13\n  62:\t41 5e                \tpop    %r14\n  64:\t5d                   \tpop    %rbp\n  65:\tc3                   \tretq   \n  66:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  6b:\tba b2 00 00 00       \tmov    $0xb2,%edx\n  70:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  75:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  7a:\te8 00 00 00 00       \tcallq  7f <_ZN7rocksdb18WritableFileMirror15InvalidateCacheEmm+0x7f>\n  7f:\t49 89 c5             \tmov    %rax,%r13\n  82:\t49 8b 7c 24 08       \tmov    0x8(%r12),%rdi\n  87:\t48 85 ff             \ttest   %rdi,%rdi\n  8a:\t74 10                \tje     9c <_ZN7rocksdb18WritableFileMirror15InvalidateCacheEmm+0x9c>\n  8c:\tc5 f8 77             \tvzeroupper \n  8f:\te8 00 00 00 00       \tcallq  94 <_ZN7rocksdb18WritableFileMirror15InvalidateCacheEmm+0x94>\n  94:\t4c 89 ef             \tmov    %r13,%rdi\n  97:\te8 00 00 00 00       \tcallq  9c <_ZN7rocksdb18WritableFileMirror15InvalidateCacheEmm+0x9c>\n  9c:\tc5 f8 77             \tvzeroupper \n  9f:\teb f3                \tjmp    94 <_ZN7rocksdb18WritableFileMirror15InvalidateCacheEmm+0x94>", "code_s": "rocksdb WritableFileMirror *__fastcall rocksdb WritableFileMirror\nInvalidateCache(rocksdb WritableFileMirror *this, __int64 a2, __int64 a3,\n                __int64 a4) {\n  int v7;\n  void *v8;\n  (*(void (**)(void))(**(_QWORD **)(a2 + Number) + Number L))();\n  (*(void(__fastcall **)(int *, _QWORD, __int64, __int64))(\n      **(_QWORD **)(a2 + Number) + Number L))(&v7, *(_QWORD *)(a2 + Number), a3,\n                                              a4);\n  if (*(_DWORD *)this != v7)\n    _assert_fail(String, String, Number, String);\n  if (v8)\n    operator delete[](v8);\n  return this;\n}", "code_t": "_DWORD *__fastcall rocksdb WritableFileMirror\nInvalidateCache(_DWORD *a1, rocksdb WritableFileMirror *const this,\n                size_t offset, size_t length) {\n  rocksdb Status <span class=\"supfact\">bs</span>;\n  (*(void (**)(void))(*(_QWORD *)this->a_._M_t._M_t._M_head_impl + Number L))();\n  (*(void(__fastcall **)(rocksdb Status *, rocksdb WritableFile *, size_t,\n                         size_t))(*(_QWORD *)this->b_._M_t._M_t._M_head_impl +\n                                  Number L))(\n      &<span class=\"supfact\">bs</span>, this->b_._M_t._M_t._M_head_impl, offset, length);\n  if (*a1 != <span class=\"supfact\">bs</span>.code_)\n    _assert_fail(String, String, Number, String);\n  if (<span class=\"supfact\">bs</span>.state_)\n    operator delete[]((void *)<span class=\"supfact\">bs</span>.state_);\n  return a1;\n}", "var": [{"name": "v7", "type": "int", "pred_name": "v7", "ref_name": "bs", "ref_type": "struct rocksdb::Status { rocksdb::Status::Code code_; rocksdb::Status::SubCode subcode_; const char * state_; }"}], "body_in_train": false}, {"repo_owner": "sasshka", "repo_name": "libav", "path": "sasshka/libav/e349cabb08424e34e1e7c42a3eec3e7cf4575087f1bf923da7c1f3ebaa2c8578", "path_in_repo": "sasshka/libav//libavcodec/utvideodec.o", "objdump": "0000000000001049 <decode_plane>:\n    1049:\t48 81 ec d8 00 00 00 \tsub    $0xd8,%rsp\n    1050:\t48 89 7c 24 28       \tmov    %rdi,0x28(%rsp)\n    1055:\t89 74 24 24          \tmov    %esi,0x24(%rsp)\n    1059:\t48 89 54 24 18       \tmov    %rdx,0x18(%rsp)\n    105e:\t89 4c 24 20          \tmov    %ecx,0x20(%rsp)\n    1062:\t4c 89 44 24 10       \tmov    %r8,0x10(%rsp)\n    1067:\t44 89 4c 24 0c       \tmov    %r9d,0xc(%rsp)\n    106c:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    1071:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1075:\t8b 90 80 00 00 00    \tmov    0x80(%rax),%edx\n    107b:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    1080:\t8b 48 68             \tmov    0x68(%rax),%ecx\n    1083:\t8b 44 24 24          \tmov    0x24(%rsp),%eax\n    1087:\t89 ce                \tmov    %ecx,%esi\n    1089:\t89 c7                \tmov    %eax,%edi\n    108b:\te8 75 ff ff ff       \tcallq  1005 <compute_cmask>\n    1090:\t89 84 24 a4 00 00 00 \tmov    %eax,0xa4(%rsp)\n    1097:\t48 8d 54 24 3c       \tlea    0x3c(%rsp),%rdx\n    109c:\t48 8d 4c 24 70       \tlea    0x70(%rsp),%rcx\n    10a1:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    10a8:\t00 \n    10a9:\t48 89 ce             \tmov    %rcx,%rsi\n    10ac:\t48 89 c7             \tmov    %rax,%rdi\n    10af:\te8 46 f7 ff ff       \tcallq  7fa <build_huff>\n    10b4:\t85 c0                \ttest   %eax,%eax\n    10b6:\t74 2a                \tje     10e2 <decode_plane+0x99>\n    10b8:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    10bd:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    10c1:\tba 00 00 00 00       \tmov    $0x0,%edx\n    10c6:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    10cb:\t48 89 c7             \tmov    %rax,%rdi\n    10ce:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    10d3:\te8 00 00 00 00       \tcallq  10d8 <decode_plane+0x8f>\n    10d8:\tb8 49 4e 44 c1       \tmov    $0xc1444e49,%eax\n    10dd:\te9 21 05 00 00       \tjmpq   1603 <decode_plane+0x5ba>\n    10e2:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    10e6:\t85 c0                \ttest   %eax,%eax\n    10e8:\t0f 88 5d 01 00 00    \tjs     124b <decode_plane+0x202>\n    10ee:\tc7 84 24 bc 00 00 00 \tmovl   $0x0,0xbc(%rsp)\n    10f5:\t00 00 00 00 \n    10f9:\tc7 84 24 c4 00 00 00 \tmovl   $0x0,0xc4(%rsp)\n    1100:\t00 00 00 00 \n    1104:\te9 23 01 00 00       \tjmpq   122c <decode_plane+0x1e3>\n    1109:\t8b 84 24 bc 00 00 00 \tmov    0xbc(%rsp),%eax\n    1110:\t89 84 24 a0 00 00 00 \tmov    %eax,0xa0(%rsp)\n    1117:\t8b 84 24 c4 00 00 00 \tmov    0xc4(%rsp),%eax\n    111e:\t83 c0 01             \tadd    $0x1,%eax\n    1121:\t0f af 84 24 e0 00 00 \timul   0xe0(%rsp),%eax\n    1128:\t00 \n    1129:\t48 8b 54 24 28       \tmov    0x28(%rsp),%rdx\n    112e:\t8b 72 60             \tmov    0x60(%rdx),%esi\n    1131:\t99                   \tcltd   \n    1132:\tf7 fe                \tidiv   %esi\n    1134:\t23 84 24 a4 00 00 00 \tand    0xa4(%rsp),%eax\n    113b:\t89 84 24 bc 00 00 00 \tmov    %eax,0xbc(%rsp)\n    1142:\t8b 84 24 a0 00 00 00 \tmov    0xa0(%rsp),%eax\n    1149:\t48 98                \tcltq   \n    114b:\t48 0f af 44 24 10    \timul   0x10(%rsp),%rax\n    1151:\t48 89 c2             \tmov    %rax,%rdx\n    1154:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    1159:\t48 01 d0             \tadd    %rdx,%rax\n    115c:\t48 89 84 24 b0 00 00 \tmov    %rax,0xb0(%rsp)\n    1163:\t00 \n    1164:\tc7 84 24 b8 00 00 00 \tmovl   $0x80,0xb8(%rsp)\n    116b:\t80 00 00 00 \n    116f:\t8b 84 24 a0 00 00 00 \tmov    0xa0(%rsp),%eax\n    1176:\t89 84 24 c8 00 00 00 \tmov    %eax,0xc8(%rsp)\n    117d:\te9 8e 00 00 00       \tjmpq   1210 <decode_plane+0x1c7>\n    1182:\tc7 84 24 cc 00 00 00 \tmovl   $0x0,0xcc(%rsp)\n    1189:\t00 00 00 00 \n    118d:\teb 5a                \tjmp    11e9 <decode_plane+0x1a0>\n    118f:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    1193:\t89 84 24 c0 00 00 00 \tmov    %eax,0xc0(%rsp)\n    119a:\t83 bc 24 f0 00 00 00 \tcmpl   $0x0,0xf0(%rsp)\n    11a1:\t00 \n    11a2:\t74 1c                \tje     11c0 <decode_plane+0x177>\n    11a4:\t8b 84 24 c0 00 00 00 \tmov    0xc0(%rsp),%eax\n    11ab:\t01 84 24 b8 00 00 00 \tadd    %eax,0xb8(%rsp)\n    11b2:\t8b 84 24 b8 00 00 00 \tmov    0xb8(%rsp),%eax\n    11b9:\t89 84 24 c0 00 00 00 \tmov    %eax,0xc0(%rsp)\n    11c0:\t8b 84 24 cc 00 00 00 \tmov    0xcc(%rsp),%eax\n    11c7:\t48 63 d0             \tmovslq %eax,%rdx\n    11ca:\t48 8b 84 24 b0 00 00 \tmov    0xb0(%rsp),%rax\n    11d1:\t00 \n    11d2:\t48 01 d0             \tadd    %rdx,%rax\n    11d5:\t8b 94 24 c0 00 00 00 \tmov    0xc0(%rsp),%edx\n    11dc:\t88 10                \tmov    %dl,(%rax)\n    11de:\t8b 44 24 20          \tmov    0x20(%rsp),%eax\n    11e2:\t01 84 24 cc 00 00 00 \tadd    %eax,0xcc(%rsp)\n    11e9:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    11ed:\t0f af 44 24 20       \timul   0x20(%rsp),%eax\n    11f2:\t39 84 24 cc 00 00 00 \tcmp    %eax,0xcc(%rsp)\n    11f9:\t7c 94                \tjl     118f <decode_plane+0x146>\n    11fb:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    1200:\t48 01 84 24 b0 00 00 \tadd    %rax,0xb0(%rsp)\n    1207:\t00 \n    1208:\t83 84 24 c8 00 00 00 \taddl   $0x1,0xc8(%rsp)\n    120f:\t01 \n    1210:\t8b 84 24 c8 00 00 00 \tmov    0xc8(%rsp),%eax\n    1217:\t3b 84 24 bc 00 00 00 \tcmp    0xbc(%rsp),%eax\n    121e:\t0f 8c 5e ff ff ff    \tjl     1182 <decode_plane+0x139>\n    1224:\t83 84 24 c4 00 00 00 \taddl   $0x1,0xc4(%rsp)\n    122b:\t01 \n    122c:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    1231:\t8b 40 60             \tmov    0x60(%rax),%eax\n    1234:\t39 84 24 c4 00 00 00 \tcmp    %eax,0xc4(%rsp)\n    123b:\t0f 8c c8 fe ff ff    \tjl     1109 <decode_plane+0xc0>\n    1241:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1246:\te9 b8 03 00 00       \tjmpq   1603 <decode_plane+0x5ba>\n    124b:\t48 81 84 24 e8 00 00 \taddq   $0x100,0xe8(%rsp)\n    1252:\t00 00 01 00 00 \n    1257:\tc7 84 24 bc 00 00 00 \tmovl   $0x0,0xbc(%rsp)\n    125e:\t00 00 00 00 \n    1262:\tc7 84 24 c4 00 00 00 \tmovl   $0x0,0xc4(%rsp)\n    1269:\t00 00 00 00 \n    126d:\te9 56 03 00 00       \tjmpq   15c8 <decode_plane+0x57f>\n    1272:\t8b 84 24 bc 00 00 00 \tmov    0xbc(%rsp),%eax\n    1279:\t89 84 24 a0 00 00 00 \tmov    %eax,0xa0(%rsp)\n    1280:\t8b 84 24 c4 00 00 00 \tmov    0xc4(%rsp),%eax\n    1287:\t83 c0 01             \tadd    $0x1,%eax\n    128a:\t0f af 84 24 e0 00 00 \timul   0xe0(%rsp),%eax\n    1291:\t00 \n    1292:\t48 8b 54 24 28       \tmov    0x28(%rsp),%rdx\n    1297:\t8b 4a 60             \tmov    0x60(%rdx),%ecx\n    129a:\t99                   \tcltd   \n    129b:\tf7 f9                \tidiv   %ecx\n    129d:\t23 84 24 a4 00 00 00 \tand    0xa4(%rsp),%eax\n    12a4:\t89 84 24 bc 00 00 00 \tmov    %eax,0xbc(%rsp)\n    12ab:\t8b 84 24 a0 00 00 00 \tmov    0xa0(%rsp),%eax\n    12b2:\t48 98                \tcltq   \n    12b4:\t48 0f af 44 24 10    \timul   0x10(%rsp),%rax\n    12ba:\t48 89 c2             \tmov    %rax,%rdx\n    12bd:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    12c2:\t48 01 d0             \tadd    %rdx,%rax\n    12c5:\t48 89 84 24 a8 00 00 \tmov    %rax,0xa8(%rsp)\n    12cc:\t00 \n    12cd:\t83 bc 24 c4 00 00 00 \tcmpl   $0x0,0xc4(%rsp)\n    12d4:\t00 \n    12d5:\t74 1f                \tje     12f6 <decode_plane+0x2ad>\n    12d7:\t8b 84 24 c4 00 00 00 \tmov    0xc4(%rsp),%eax\n    12de:\tc1 e0 02             \tshl    $0x2,%eax\n    12e1:\t48 98                \tcltq   \n    12e3:\t48 8d 50 fc          \tlea    -0x4(%rax),%rdx\n    12e7:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    12ee:\t00 \n    12ef:\t48 01 d0             \tadd    %rdx,%rax\n    12f2:\t8b 00                \tmov    (%rax),%eax\n    12f4:\teb 05                \tjmp    12fb <decode_plane+0x2b2>\n    12f6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    12fb:\t89 84 24 9c 00 00 00 \tmov    %eax,0x9c(%rsp)\n    1302:\t8b 84 24 c4 00 00 00 \tmov    0xc4(%rsp),%eax\n    1309:\tc1 e0 02             \tshl    $0x2,%eax\n    130c:\t48 63 d0             \tmovslq %eax,%rdx\n    130f:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    1316:\t00 \n    1317:\t48 01 d0             \tadd    %rdx,%rax\n    131a:\t8b 00                \tmov    (%rax),%eax\n    131c:\t89 84 24 98 00 00 00 \tmov    %eax,0x98(%rsp)\n    1323:\t8b 84 24 98 00 00 00 \tmov    0x98(%rsp),%eax\n    132a:\t2b 84 24 9c 00 00 00 \tsub    0x9c(%rsp),%eax\n    1331:\t89 84 24 94 00 00 00 \tmov    %eax,0x94(%rsp)\n    1338:\t83 bc 24 94 00 00 00 \tcmpl   $0x0,0x94(%rsp)\n    133f:\t00 \n    1340:\t75 25                \tjne    1367 <decode_plane+0x31e>\n    1342:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    1347:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    134b:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1350:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    1355:\t48 89 c7             \tmov    %rax,%rdi\n    1358:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    135d:\te8 00 00 00 00       \tcallq  1362 <decode_plane+0x319>\n    1362:\te9 8a 02 00 00       \tjmpq   15f1 <decode_plane+0x5a8>\n    1367:\t8b 84 24 94 00 00 00 \tmov    0x94(%rsp),%eax\n    136e:\t48 63 d0             \tmovslq %eax,%rdx\n    1371:\t8b 84 24 9c 00 00 00 \tmov    0x9c(%rsp),%eax\n    1378:\t48 63 c8             \tmovslq %eax,%rcx\n    137b:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    1380:\t8b 40 60             \tmov    0x60(%rax),%eax\n    1383:\tc1 e0 02             \tshl    $0x2,%eax\n    1386:\t48 98                \tcltq   \n    1388:\t48 01 c1             \tadd    %rax,%rcx\n    138b:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    1392:\t00 \n    1393:\t48 01 c1             \tadd    %rax,%rcx\n    1396:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    139b:\t48 8b 80 80 00 00 00 \tmov    0x80(%rax),%rax\n    13a2:\t48 89 ce             \tmov    %rcx,%rsi\n    13a5:\t48 89 c7             \tmov    %rax,%rdi\n    13a8:\te8 00 00 00 00       \tcallq  13ad <decode_plane+0x364>\n    13ad:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    13b2:\t48 8b 90 80 00 00 00 \tmov    0x80(%rax),%rdx\n    13b9:\t8b 84 24 94 00 00 00 \tmov    0x94(%rsp),%eax\n    13c0:\t48 98                \tcltq   \n    13c2:\t48 01 d0             \tadd    %rdx,%rax\n    13c5:\tba 08 00 00 00       \tmov    $0x8,%edx\n    13ca:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    13cf:\t48 89 c7             \tmov    %rax,%rdi\n    13d2:\te8 00 00 00 00       \tcallq  13d7 <decode_plane+0x38e>\n    13d7:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    13dc:\t4c 8b 40 10          \tmov    0x10(%rax),%r8\n    13e0:\t8b 84 24 98 00 00 00 \tmov    0x98(%rsp),%eax\n    13e7:\t2b 84 24 9c 00 00 00 \tsub    0x9c(%rsp),%eax\n    13ee:\t83 c0 03             \tadd    $0x3,%eax\n    13f1:\tc1 f8 02             \tsar    $0x2,%eax\n    13f4:\t89 c2                \tmov    %eax,%edx\n    13f6:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    13fb:\t48 8b 88 80 00 00 00 \tmov    0x80(%rax),%rcx\n    1402:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    1407:\t48 8b 80 80 00 00 00 \tmov    0x80(%rax),%rax\n    140e:\t48 89 ce             \tmov    %rcx,%rsi\n    1411:\t48 89 c7             \tmov    %rax,%rdi\n    1414:\t41 ff d0             \tcallq  *%r8\n    1417:\t8b 94 24 94 00 00 00 \tmov    0x94(%rsp),%edx\n    141e:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    1423:\t48 8b 88 80 00 00 00 \tmov    0x80(%rax),%rcx\n    142a:\t48 8d 44 24 40       \tlea    0x40(%rsp),%rax\n    142f:\t48 89 ce             \tmov    %rcx,%rsi\n    1432:\t48 89 c7             \tmov    %rax,%rdi\n    1435:\te8 95 ee ff ff       \tcallq  2cf <bitstream_init8>\n    143a:\tc7 84 24 b8 00 00 00 \tmovl   $0x80,0xb8(%rsp)\n    1441:\t80 00 00 00 \n    1445:\t8b 84 24 a0 00 00 00 \tmov    0xa0(%rsp),%eax\n    144c:\t89 84 24 c8 00 00 00 \tmov    %eax,0xc8(%rsp)\n    1453:\te9 11 01 00 00       \tjmpq   1569 <decode_plane+0x520>\n    1458:\tc7 84 24 cc 00 00 00 \tmovl   $0x0,0xcc(%rsp)\n    145f:\t00 00 00 00 \n    1463:\te9 d6 00 00 00       \tjmpq   153e <decode_plane+0x4f5>\n    1468:\t48 8d 44 24 40       \tlea    0x40(%rsp),%rax\n    146d:\t48 89 c7             \tmov    %rax,%rdi\n    1470:\te8 a2 ee ff ff       \tcallq  317 <bitstream_bits_left>\n    1475:\t85 c0                \ttest   %eax,%eax\n    1477:\t7f 25                \tjg     149e <decode_plane+0x455>\n    1479:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    147e:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1482:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1487:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    148c:\t48 89 c7             \tmov    %rax,%rdi\n    148f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1494:\te8 00 00 00 00       \tcallq  1499 <decode_plane+0x450>\n    1499:\te9 53 01 00 00       \tjmpq   15f1 <decode_plane+0x5a8>\n    149e:\t8b 54 24 70          \tmov    0x70(%rsp),%edx\n    14a2:\t48 8b 74 24 78       \tmov    0x78(%rsp),%rsi\n    14a7:\t48 8d 44 24 40       \tlea    0x40(%rsp),%rax\n    14ac:\tb9 04 00 00 00       \tmov    $0x4,%ecx\n    14b1:\t48 89 c7             \tmov    %rax,%rdi\n    14b4:\te8 c0 ef ff ff       \tcallq  479 <bitstream_read_vlc>\n    14b9:\t89 84 24 c0 00 00 00 \tmov    %eax,0xc0(%rsp)\n    14c0:\t83 bc 24 c0 00 00 00 \tcmpl   $0x0,0xc0(%rsp)\n    14c7:\t00 \n    14c8:\t79 25                \tjns    14ef <decode_plane+0x4a6>\n    14ca:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    14cf:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    14d3:\tba 00 00 00 00       \tmov    $0x0,%edx\n    14d8:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    14dd:\t48 89 c7             \tmov    %rax,%rdi\n    14e0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    14e5:\te8 00 00 00 00       \tcallq  14ea <decode_plane+0x4a1>\n    14ea:\te9 02 01 00 00       \tjmpq   15f1 <decode_plane+0x5a8>\n    14ef:\t83 bc 24 f0 00 00 00 \tcmpl   $0x0,0xf0(%rsp)\n    14f6:\t00 \n    14f7:\t74 1c                \tje     1515 <decode_plane+0x4cc>\n    14f9:\t8b 84 24 c0 00 00 00 \tmov    0xc0(%rsp),%eax\n    1500:\t01 84 24 b8 00 00 00 \tadd    %eax,0xb8(%rsp)\n    1507:\t8b 84 24 b8 00 00 00 \tmov    0xb8(%rsp),%eax\n    150e:\t89 84 24 c0 00 00 00 \tmov    %eax,0xc0(%rsp)\n    1515:\t8b 84 24 cc 00 00 00 \tmov    0xcc(%rsp),%eax\n    151c:\t48 63 d0             \tmovslq %eax,%rdx\n    151f:\t48 8b 84 24 a8 00 00 \tmov    0xa8(%rsp),%rax\n    1526:\t00 \n    1527:\t48 01 d0             \tadd    %rdx,%rax\n    152a:\t8b 94 24 c0 00 00 00 \tmov    0xc0(%rsp),%edx\n    1531:\t88 10                \tmov    %dl,(%rax)\n    1533:\t8b 44 24 20          \tmov    0x20(%rsp),%eax\n    1537:\t01 84 24 cc 00 00 00 \tadd    %eax,0xcc(%rsp)\n    153e:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    1542:\t0f af 44 24 20       \timul   0x20(%rsp),%eax\n    1547:\t39 84 24 cc 00 00 00 \tcmp    %eax,0xcc(%rsp)\n    154e:\t0f 8c 14 ff ff ff    \tjl     1468 <decode_plane+0x41f>\n    1554:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    1559:\t48 01 84 24 a8 00 00 \tadd    %rax,0xa8(%rsp)\n    1560:\t00 \n    1561:\t83 84 24 c8 00 00 00 \taddl   $0x1,0xc8(%rsp)\n    1568:\t01 \n    1569:\t8b 84 24 c8 00 00 00 \tmov    0xc8(%rsp),%eax\n    1570:\t3b 84 24 bc 00 00 00 \tcmp    0xbc(%rsp),%eax\n    1577:\t0f 8c db fe ff ff    \tjl     1458 <decode_plane+0x40f>\n    157d:\t48 8d 44 24 40       \tlea    0x40(%rsp),%rax\n    1582:\t48 89 c7             \tmov    %rax,%rdi\n    1585:\te8 8d ed ff ff       \tcallq  317 <bitstream_bits_left>\n    158a:\t83 f8 20             \tcmp    $0x20,%eax\n    158d:\t7e 31                \tjle    15c0 <decode_plane+0x577>\n    158f:\t48 8d 44 24 40       \tlea    0x40(%rsp),%rax\n    1594:\t48 89 c7             \tmov    %rax,%rdi\n    1597:\te8 7b ed ff ff       \tcallq  317 <bitstream_bits_left>\n    159c:\t89 c2                \tmov    %eax,%edx\n    159e:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    15a3:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    15a7:\t89 d1                \tmov    %edx,%ecx\n    15a9:\tba 00 00 00 00       \tmov    $0x0,%edx\n    15ae:\tbe 18 00 00 00       \tmov    $0x18,%esi\n    15b3:\t48 89 c7             \tmov    %rax,%rdi\n    15b6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    15bb:\te8 00 00 00 00       \tcallq  15c0 <decode_plane+0x577>\n    15c0:\t83 84 24 c4 00 00 00 \taddl   $0x1,0xc4(%rsp)\n    15c7:\t01 \n    15c8:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    15cd:\t8b 40 60             \tmov    0x60(%rax),%eax\n    15d0:\t39 84 24 c4 00 00 00 \tcmp    %eax,0xc4(%rsp)\n    15d7:\t0f 8c 95 fc ff ff    \tjl     1272 <decode_plane+0x229>\n    15dd:\t48 8d 44 24 70       \tlea    0x70(%rsp),%rax\n    15e2:\t48 89 c7             \tmov    %rax,%rdi\n    15e5:\te8 00 00 00 00       \tcallq  15ea <decode_plane+0x5a1>\n    15ea:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    15ef:\teb 12                \tjmp    1603 <decode_plane+0x5ba>\n    15f1:\t48 8d 44 24 70       \tlea    0x70(%rsp),%rax\n    15f6:\t48 89 c7             \tmov    %rax,%rdi\n    15f9:\te8 00 00 00 00       \tcallq  15fe <decode_plane+0x5b5>\n    15fe:\tb8 49 4e 44 c1       \tmov    $0xc1444e49,%eax\n    1603:\t48 81 c4 d8 00 00 00 \tadd    $0xd8,%rsp\n    160a:\tc3                   \tretq   ", "code_s": "__int64 __fastcall decode_plane(__int64 a1, int a2, __int64 a3, int a4,\n                                __int64 a5, int a6, int a7, _BYTE *a8, int a9) {\n  __int64 result;\n  int v10;\n  unsigned int v11;\n  int v16;\n  char v17[Number];\n  unsigned int v18;\n  __int64 v19;\n  signed int v20;\n  int v21;\n  int v22;\n  int v23;\n  int v24;\n  __int64 v25;\n  __int64 v26;\n  int v27;\n  int v28;\n  int v29;\n  int i;\n  int j;\n  int k;\n  _BYTE *v33;\n  v24 = compute_cmask(a2, *(_DWORD *)(a1 + Number),\n                      *(_DWORD *)(*(_QWORD *)(a1 + Number) + Number L));\n  if ((unsigned int)build_huff(a8, (__int64)&v18, &v16)) {\n    av_log(*(_QWORD *)(a1 + Number), Number L, String);\n    result = Number L;\n  } else if (v16 < Number) {\n    v33 = a8 + Number;\n    v28 = Number;\n    for (i = Number;; ++i) {\n      if (i >= *(_DWORD *)(a1 + Number)) {\n        ff_free_vlc(&v18);\n        return Number L;\n      }\n      v23 = v28;\n      v28 = v24 & (a7 * (i + Number) / *(_DWORD *)(a1 + Number));\n      v25 = a5 * v23 + a3;\n      v10 = i ? *(_DWORD *)&v33[Number * i - Number] : Number;\n      v22 = v10;\n      v21 = *(_DWORD *)&v33[Number * i];\n      v20 = v21 - v10;\n      if (v21 == v10)\n        break;\n      memcpy(*(void **)(a1 + Number),\n             &v33[Number * *(_DWORD *)(a1 + Number) + (__int64)v22], v20);\n      memset((void *)(*(_QWORD *)(a1 + Number) + v20), Number, Number);\n      (*(void(__fastcall **)(_QWORD, _QWORD, _QWORD))(a1 + Number))(\n          *(_QWORD *)(a1 + Number), *(_QWORD *)(a1 + Number),\n          (unsigned int)((v21 - v22 + Number) >> Number));\n      bitstream_init8((unsigned __int64)v17, *(_QWORD *)(a1 + Number), v20);\n      v27 = Number;\n      for (j = v23; j < v28; ++j) {\n        for (k = Number; k < a4 * a6; k += a4) {\n          if ((int)bitstream_bits_left((__int64)v17) <= Number) {\n            av_log(*(_QWORD *)(a1 + Number), Number L, String);\n            goto LABEL_39;\n          }\n          v29 = bitstream_read_vlc((unsigned __int64)v17, v19, v18, Number);\n          if (v29 < Number) {\n            av_log(*(_QWORD *)(a1 + Number), Number L, String);\n            goto LABEL_39;\n          }\n          if (a9) {\n            v27 += v29;\n            v29 = v27;\n          }\n          *(_BYTE *)(k + v25) = v29;\n        }\n        v25 += a5;\n      }\n      if ((int)bitstream_bits_left((__int64)v17) > Number) {\n        v11 = bitstream_bits_left((__int64)v17);\n        av_log(*(_QWORD *)(a1 + Number), Number L, String, v11);\n      }\n    }\n    av_log(*(_QWORD *)(a1 + Number), Number L, String);\n  LABEL_39:\n    ff_free_vlc(&v18);\n    result = Number L;\n  } else {\n    v28 = Number;\n    for (i = Number; i < *(_DWORD *)(a1 + Number); ++i) {\n      v23 = v28;\n      v28 = v24 & (a7 * (i + Number) / *(_DWORD *)(a1 + Number));\n      v26 = a5 * v23 + a3;\n      v27 = Number;\n      for (j = v23; j < v28; ++j) {\n        for (k = Number; k < a4 * a6; k += a4) {\n          v29 = v16;\n          if (a9) {\n            v27 += v29;\n            v29 = v27;\n          }\n          *(_BYTE *)(k + v26) = v29;\n        }\n        v26 += a5;\n      }\n    }\n    result = Number L;\n  }\n  return result;\n}", "code_t": "int __cdecl decode_plane(UtvideoContext_0 *c, int plane_no, uint8_t *dst,\n                         int step, ptrdiff_t stride, int width, int height,\n                         const uint8_t *src, int use_pred) {\n  int result;\n  int v10;\n  unsigned int v11;\n  int fsym;\n  BitstreamContext_0 <span class=\"supfact\">bc</span>;\n  VLC_0 <span class=\"supfact\">vlc</span>;\n  int slice_size;\n  int slice_data_end;\n  int slice_data_start;\n  int sstart;\n  int cmask;\n  uint8_t *dest_0;\n  uint8_t *dest;\n  int prev;\n  int send;\n  int pix;\n  int slice;\n  int j;\n  int i;\n  const uint8_t *srca;\n  cmask = compute_cmask(plane_no, c->interlaced, c->avctx->pix_fmt);\n  if (build_huff(src, &<span class=\"supfact\">vlc</span>, &fsym)) {\n    av_log(c->avctx, Number L, String);\n    result = Number;\n  } else if (fsym < Number) {\n    srca = src + Number;\n    send = Number;\n    for (slice = Number;; ++slice) {\n      if (slice >= c->slices) {\n        ff_free_vlc(&<span class=\"supfact\">vlc</span>);\n        return Number;\n      }\n      sstart = send;\n      send = cmask & (height * (slice + Number) / c->slices);\n      dest_0 = &dst[stride * sstart];\n      v10 = slice ? *(_DWORD *)&srca[Number * slice - Number] : Number;\n      slice_data_start = v10;\n      slice_data_end = *(_DWORD *)&srca[Number * slice];\n      slice_size = slice_data_end - v10;\n      if (slice_data_end == v10)\n        break;\n      memcpy(c->slice_bits,\n             &srca[Number * c->slices + (__int64)slice_data_start], slice_size);\n      memset(&c->slice_bits[slice_size], Number, Number);\n      c->bdsp.bswap_buf((uint32_t *)c->slice_bits,\n                        (const uint32_t *)c->slice_bits,\n                        (slice_data_end - slice_data_start + Number) >> Number);\n      bitstream_init8(&<span class=\"supfact\">bc</span>, c->slice_bits, slice_size);\n      prev = Number;\n      for (j = sstart; j < send; ++j) {\n        for (i = Number; i < step * width; i += step) {\n          if (bitstream_bits_left(&<span class=\"supfact\">bc</span>) <= Number) {\n            av_log(c->avctx, Number L, String);\n            goto fail;\n          }\n          pix =\n              bitstream_read_vlc(&<span class=\"supfact\">bc</span>, <span class=\"supfact\">vlc</span>.table,\n                                 <span class=\"supfact\">vlc</span>.bits, Number);\n          if (pix < Number) {\n            av_log(c->avctx, Number L, String);\n            goto fail;\n          }\n          if (use_pred) {\n            prev += pix;\n            pix = prev;\n          }\n          dest_0[i] = pix;\n        }\n        dest_0 += stride;\n      }\n      if (bitstream_bits_left(&<span class=\"supfact\">bc</span>) > Number) {\n        v11 = bitstream_bits_left(&<span class=\"supfact\">bc</span>);\n        av_log(c->avctx, Number L, String, v11);\n      }\n    }\n    av_log(c->avctx, Number L, String);\n  fail:\n    ff_free_vlc(&<span class=\"supfact\">vlc</span>);\n    result = Number;\n  } else {\n    send = Number;\n    for (slice = Number; slice < c->slices; ++slice) {\n      sstart = send;\n      send = cmask & (height * (slice + Number) / c->slices);\n      dest = &dst[stride * sstart];\n      prev = Number;\n      for (j = sstart; j < send; ++j) {\n        for (i = Number; i < step * width; i += step) {\n          pix = fsym;\n          if (use_pred) {\n            prev += pix;\n            pix = prev;\n          }\n          dest[i] = pix;\n        }\n        dest += stride;\n      }\n    }\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "v17", "type": "struct GetBitContext_0 { const uint8_t * buffer; const uint8_t * buffer_end; int index; int size_in_bits; int size_in_bits_plus8; PADDING (4); }", "pred_name": "gb", "ref_name": "bc", "ref_type": "struct BitstreamContext_0 { uint64_t bits; const uint8_t * buffer; const uint8_t * buffer_end; const uint8_t * ptr; unsigned int bits_left; unsigned int size_in_bits; }"}, {"name": "v18", "type": "disappear", "pred_name": "", "ref_name": "vlc", "ref_type": "struct VLC_0 { int bits; PADDING (4); int16_t (*)[2] table; int table_size; int table_allocated; }"}], "body_in_train": false}, {"repo_owner": "1163781843", "repo_name": "freeswitch-1.8.5", "path": "1163781843/freeswitch-1.8.5/39710cefa661f1f77ad909b850f0219221da5dd7d62f90dea3fcd69c1ba76b66", "path_in_repo": "1163781843/freeswitch-1.8.5/libs/xmlrpc-c/src/cpp/test/xml.o", "objdump": "0000000000000736 <_ZN12xmlTestSuite8runtestsEj>:\n 736:\t55                   \tpush   %rbp\n 737:\t48 89 e5             \tmov    %rsp,%rbp\n 73a:\t53                   \tpush   %rbx\n 73b:\t48 83 ec 28          \tsub    $0x28,%rsp\n 73f:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n 743:\t89 75 d4             \tmov    %esi,-0x2c(%rbp)\n 746:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n 74d:\t00 \n 74e:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n 752:\t48 89 c7             \tmov    %rax,%rdi\n 755:\te8 8c ff ff ff       \tcallq  6e6 <_ZN12_GLOBAL__N_113callTestSuiteC1Ev>\n 75a:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n 75d:\t8d 50 01             \tlea    0x1(%rax),%edx\n 760:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n 764:\t89 d6                \tmov    %edx,%esi\n 766:\t48 89 c7             \tmov    %rax,%rdi\n 769:\te8 00 00 00 00       \tcallq  76e <_ZN12xmlTestSuite8runtestsEj+0x38>\n 76e:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n 772:\t48 89 c7             \tmov    %rax,%rdi\n 775:\te8 c6 00 00 00       \tcallq  840 <_ZN12_GLOBAL__N_113callTestSuiteD1Ev>\n 77a:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n 781:\t00 \n 782:\t48 8d 45 e8          \tlea    -0x18(%rbp),%rax\n 786:\t48 89 c7             \tmov    %rax,%rdi\n 789:\te8 80 ff ff ff       \tcallq  70e <_ZN12_GLOBAL__N_117responseTestSuiteC1Ev>\n 78e:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n 791:\t8d 50 01             \tlea    0x1(%rax),%edx\n 794:\t48 8d 45 e8          \tlea    -0x18(%rbp),%rax\n 798:\t89 d6                \tmov    %edx,%esi\n 79a:\t48 89 c7             \tmov    %rax,%rdi\n 79d:\te8 00 00 00 00       \tcallq  7a2 <_ZN12xmlTestSuite8runtestsEj+0x6c>\n 7a2:\t48 8d 45 e8          \tlea    -0x18(%rbp),%rax\n 7a6:\t48 89 c7             \tmov    %rax,%rdi\n 7a9:\te8 3e 00 00 00       \tcallq  7ec <_ZN12_GLOBAL__N_117responseTestSuiteD1Ev>\n 7ae:\teb 34                \tjmp    7e4 <_ZN12xmlTestSuite8runtestsEj+0xae>\n 7b0:\t48 89 c3             \tmov    %rax,%rbx\n 7b3:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n 7b7:\t48 89 c7             \tmov    %rax,%rdi\n 7ba:\te8 81 00 00 00       \tcallq  840 <_ZN12_GLOBAL__N_113callTestSuiteD1Ev>\n 7bf:\t48 89 d8             \tmov    %rbx,%rax\n 7c2:\t48 89 c7             \tmov    %rax,%rdi\n 7c5:\te8 00 00 00 00       \tcallq  7ca <_ZN12xmlTestSuite8runtestsEj+0x94>\n 7ca:\t48 89 c3             \tmov    %rax,%rbx\n 7cd:\t48 8d 45 e8          \tlea    -0x18(%rbp),%rax\n 7d1:\t48 89 c7             \tmov    %rax,%rdi\n 7d4:\te8 13 00 00 00       \tcallq  7ec <_ZN12_GLOBAL__N_117responseTestSuiteD1Ev>\n 7d9:\t48 89 d8             \tmov    %rbx,%rax\n 7dc:\t48 89 c7             \tmov    %rax,%rdi\n 7df:\te8 00 00 00 00       \tcallq  7e4 <_ZN12xmlTestSuite8runtestsEj+0xae>\n 7e4:\t48 83 c4 28          \tadd    $0x28,%rsp\n 7e8:\t5b                   \tpop    %rbx\n 7e9:\t5d                   \tpop    %rbp\n 7ea:\tc3                   \tretq   \n 7eb:\t90                   \tnop", "code_s": "void __fastcall xmlTestSuite runtests(xmlTestSuite *this, int a2) {\n  __int64 v2;\n  __int64 v3[Number];\n  v2 = Number L;\n  ` anonymous namespace ' callTestSuite callTestSuite ( ( _anonymous_namespace_ callTestSuite * ) & v2 ) ; testSuite run ( ( testSuite * ) & v2 , a2 + Number ) ; ` anonymous namespace ' callTestSuite ~callTestSuite(\n      (_anonymous_namespace_ callTestSuite *)&v2);\n  v3[Number] = Number L;\n  ` anonymous namespace ' responseTestSuite responseTestSuite ( ( _anonymous_namespace_ responseTestSuite * ) v3 ) ; testSuite run ( ( testSuite * ) v3 , a2 + Number ) ; ` anonymous namespace ' responseTestSuite ~responseTestSuite(\n      (_anonymous_namespace_ responseTestSuite *)v3);\n}", "code_t": "void __cdecl xmlTestSuite runtests(xmlTestSuite *const this,\n                                   const unsigned int indentation) {\n  ` anonymous namespace ' callTestSuite <span class=\"supfact\">v2</span> ; ` anonymous namespace ' responseTestSuite\n      <span class=\"supfact\">v3</span>;\n  <span class=\"supfact\">v2</span> = Number L;\n  ` anonymous namespace ' callTestSuite callTestSuite ( & <span class=\"supfact\">v2</span> ) ; testSuite run ( ( testSuite * ) & <span class=\"supfact\">v2</span> , indentation + Number ) ; ` anonymous namespace ' callTestSuite ~callTestSuite(\n      &<span class=\"supfact\">v2</span>);\n  <span class=\"supfact\">v3</span> = Number L;\n  ` anonymous namespace ' responseTestSuite responseTestSuite ( & <span class=\"supfact\">v3</span> ) ; testSuite run ( ( testSuite * ) & <span class=\"supfact\">v3</span> , indentation + Number ) ; ` anonymous namespace ' responseTestSuite ~responseTestSuite(\n      &<span class=\"supfact\">v3</span>);\n}", "var": [{"name": "v2", "type": "__unk__", "pred_name": "v2", "ref_name": "v2", "ref_type": "struct `anonymous namespace'::callTestSuite { __int8[8] baseclass_0; }"}, {"name": "v3", "type": "__unk__", "pred_name": "v3", "ref_name": "v3", "ref_type": "struct `anonymous namespace'::responseTestSuite { __int8[8] baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "unicell", "repo_name": "redpatch", "path": "unicell/redpatch/58682eb55b7924611f72cf2406ede4c294eaac75cf6400afa7ef0fbcbc2911b6", "path_in_repo": "unicell/redpatch/tools/perf/util/session.o", "objdump": "000000000000121d <machine__resolve_callchain>:\n    121d:\t55                   \tpush   %rbp\n    121e:\t48 89 e5             \tmov    %rsp,%rbp\n    1221:\t48 83 ec 70          \tsub    $0x70,%rsp\n    1225:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n    1229:\t48 89 75 a0          \tmov    %rsi,-0x60(%rbp)\n    122d:\t48 89 55 98          \tmov    %rdx,-0x68(%rbp)\n    1231:\t48 89 4d 90          \tmov    %rcx,-0x70(%rbp)\n    1235:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    123c:\t00 00 \n    123e:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1242:\t31 c0                \txor    %eax,%eax\n    1244:\tc6 45 bf 02          \tmovb   $0x2,-0x41(%rbp)\n    1248:\t64 48 8b 14 25 00 00 \tmov    %fs:0x0,%rdx\n    124f:\t00 00 \n    1251:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1258 <machine__resolve_callchain+0x3b>\n    1258:\t48 01 d0             \tadd    %rdx,%rax\n    125b:\t48 89 c7             \tmov    %rax,%rdi\n    125e:\te8 04 f1 ff ff       \tcallq  367 <callchain_cursor_reset>\n    1263:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    1267:\t48 8b 00             \tmov    (%rax),%rax\n    126a:\t48 3d ff 00 00 00    \tcmp    $0xff,%rax\n    1270:\t76 1e                \tjbe    1290 <machine__resolve_callchain+0x73>\n    1272:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1277:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    127c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1281:\te8 00 00 00 00       \tcallq  1286 <machine__resolve_callchain+0x69>\n    1286:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    128b:\te9 a1 01 00 00       \tjmpq   1431 <machine__resolve_callchain+0x214>\n    1290:\tc7 45 c0 00 00 00 00 \tmovl   $0x0,-0x40(%rbp)\n    1297:\te9 7a 01 00 00       \tjmpq   1416 <machine__resolve_callchain+0x1f9>\n    129c:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 12a2 <machine__resolve_callchain+0x85>\n    12a2:\t83 f8 01             \tcmp    $0x1,%eax\n    12a5:\t75 12                \tjne    12b9 <machine__resolve_callchain+0x9c>\n    12a7:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    12ab:\t8b 55 c0             \tmov    -0x40(%rbp),%edx\n    12ae:\t48 8b 44 d0 08       \tmov    0x8(%rax,%rdx,8),%rax\n    12b3:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    12b7:\teb 21                \tjmp    12da <machine__resolve_callchain+0xbd>\n    12b9:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    12bd:\t48 8b 10             \tmov    (%rax),%rdx\n    12c0:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    12c3:\t48 29 c2             \tsub    %rax,%rdx\n    12c6:\t48 89 d0             \tmov    %rdx,%rax\n    12c9:\t48 8d 50 ff          \tlea    -0x1(%rax),%rdx\n    12cd:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    12d1:\t48 8b 44 d0 08       \tmov    0x8(%rax,%rdx,8),%rax\n    12d6:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    12da:\t48 81 7d c8 00 f0 ff \tcmpq   $0xfffffffffffff000,-0x38(%rbp)\n    12e1:\tff \n    12e2:\t76 7c                \tjbe    1360 <machine__resolve_callchain+0x143>\n    12e4:\t48 83 7d c8 e0       \tcmpq   $0xffffffffffffffe0,-0x38(%rbp)\n    12e9:\t74 1a                \tje     1305 <machine__resolve_callchain+0xe8>\n    12eb:\t48 83 7d c8 e0       \tcmpq   $0xffffffffffffffe0,-0x38(%rbp)\n    12f0:\t77 2e                \tja     1320 <machine__resolve_callchain+0x103>\n    12f2:\t48 81 7d c8 00 fe ff \tcmpq   $0xfffffffffffffe00,-0x38(%rbp)\n    12f9:\tff \n    12fa:\t74 1b                \tje     1317 <machine__resolve_callchain+0xfa>\n    12fc:\t48 83 7d c8 80       \tcmpq   $0xffffffffffffff80,-0x38(%rbp)\n    1301:\t74 0b                \tje     130e <machine__resolve_callchain+0xf1>\n    1303:\teb 1b                \tjmp    1320 <machine__resolve_callchain+0x103>\n    1305:\tc6 45 bf 03          \tmovb   $0x3,-0x41(%rbp)\n    1309:\te9 04 01 00 00       \tjmpq   1412 <machine__resolve_callchain+0x1f5>\n    130e:\tc6 45 bf 01          \tmovb   $0x1,-0x41(%rbp)\n    1312:\te9 fb 00 00 00       \tjmpq   1412 <machine__resolve_callchain+0x1f5>\n    1317:\tc6 45 bf 02          \tmovb   $0x2,-0x41(%rbp)\n    131b:\te9 f2 00 00 00       \tjmpq   1412 <machine__resolve_callchain+0x1f5>\n    1320:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1324:\t48 89 c2             \tmov    %rax,%rdx\n    1327:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    132c:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    1331:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1336:\te8 00 00 00 00       \tcallq  133b <machine__resolve_callchain+0x11e>\n    133b:\t64 48 8b 14 25 00 00 \tmov    %fs:0x0,%rdx\n    1342:\t00 00 \n    1344:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 134b <machine__resolve_callchain+0x12e>\n    134b:\t48 01 d0             \tadd    %rdx,%rax\n    134e:\t48 89 c7             \tmov    %rax,%rdi\n    1351:\te8 11 f0 ff ff       \tcallq  367 <callchain_cursor_reset>\n    1356:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    135b:\te9 d1 00 00 00       \tjmpq   1431 <machine__resolve_callchain+0x214>\n    1360:\tc6 45 f1 00          \tmovb   $0x0,-0xf(%rbp)\n    1364:\t0f b6 55 bf          \tmovzbl -0x41(%rbp),%edx\n    1368:\t48 8d 7d d0          \tlea    -0x30(%rbp),%rdi\n    136c:\t48 8b 4d c8          \tmov    -0x38(%rbp),%rcx\n    1370:\t48 8b 75 a8          \tmov    -0x58(%rbp),%rsi\n    1374:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    1378:\t48 83 ec 08          \tsub    $0x8,%rsp\n    137c:\t6a 00                \tpushq  $0x0\n    137e:\t49 89 f9             \tmov    %rdi,%r9\n    1381:\t49 89 c8             \tmov    %rcx,%r8\n    1384:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    1389:\t48 89 c7             \tmov    %rax,%rdi\n    138c:\te8 00 00 00 00       \tcallq  1391 <machine__resolve_callchain+0x174>\n    1391:\t48 83 c4 10          \tadd    $0x10,%rsp\n    1395:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1399:\t48 85 c0             \ttest   %rax,%rax\n    139c:\t74 3f                \tje     13dd <machine__resolve_callchain+0x1c0>\n    139e:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 13a4 <machine__resolve_callchain+0x187>\n    13a4:\t85 c0                \ttest   %eax,%eax\n    13a6:\t74 27                \tje     13cf <machine__resolve_callchain+0x1b2>\n    13a8:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    13ac:\t48 8b 00             \tmov    (%rax),%rax\n    13af:\t48 85 c0             \ttest   %rax,%rax\n    13b2:\t75 1b                \tjne    13cf <machine__resolve_callchain+0x1b2>\n    13b4:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    13b8:\t48 89 c7             \tmov    %rax,%rdi\n    13bb:\te8 a4 fb ff ff       \tcallq  f64 <symbol__match_parent_regex>\n    13c0:\t84 c0                \ttest   %al,%al\n    13c2:\t74 0b                \tje     13cf <machine__resolve_callchain+0x1b2>\n    13c4:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    13c8:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    13cc:\t48 89 10             \tmov    %rdx,(%rax)\n    13cf:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 13d6 <machine__resolve_callchain+0x1b9>\n    13d6:\t83 f0 01             \txor    $0x1,%eax\n    13d9:\t84 c0                \ttest   %al,%al\n    13db:\t75 4e                \tjne    142b <machine__resolve_callchain+0x20e>\n    13dd:\t48 8b 4d e0          \tmov    -0x20(%rbp),%rcx\n    13e1:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    13e5:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    13e9:\t64 48 8b 3c 25 00 00 \tmov    %fs:0x0,%rdi\n    13f0:\t00 00 \n    13f2:\t48 8b 35 00 00 00 00 \tmov    0x0(%rip),%rsi        # 13f9 <machine__resolve_callchain+0x1dc>\n    13f9:\t48 01 f7             \tadd    %rsi,%rdi\n    13fc:\t48 89 c6             \tmov    %rax,%rsi\n    13ff:\te8 00 00 00 00       \tcallq  1404 <machine__resolve_callchain+0x1e7>\n    1404:\t89 45 c4             \tmov    %eax,-0x3c(%rbp)\n    1407:\t83 7d c4 00          \tcmpl   $0x0,-0x3c(%rbp)\n    140b:\t74 05                \tje     1412 <machine__resolve_callchain+0x1f5>\n    140d:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    1410:\teb 1f                \tjmp    1431 <machine__resolve_callchain+0x214>\n    1412:\t83 45 c0 01          \taddl   $0x1,-0x40(%rbp)\n    1416:\t8b 55 c0             \tmov    -0x40(%rbp),%edx\n    1419:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    141d:\t48 8b 00             \tmov    (%rax),%rax\n    1420:\t48 39 c2             \tcmp    %rax,%rdx\n    1423:\t0f 82 73 fe ff ff    \tjb     129c <machine__resolve_callchain+0x7f>\n    1429:\teb 01                \tjmp    142c <machine__resolve_callchain+0x20f>\n    142b:\t90                   \tnop\n    142c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1431:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    1435:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n    143c:\t00 00 \n    143e:\t74 05                \tje     1445 <machine__resolve_callchain+0x228>\n    1440:\te8 00 00 00 00       \tcallq  1445 <machine__resolve_callchain+0x228>\n    1445:\tc9                   \tleaveq \n    1446:\tc3                   \tretq   ", "code_s": "__int64 __fastcall machine__resolve_callchain(__int64 a1, __int64 a2,\n                                              _QWORD *a3, _QWORD *a4) {\n  __int64 result;\n  unsigned __int8 v7;\n  unsigned int i;\n  unsigned int v9;\n  unsigned __int64 v10;\n  char v11[Number];\n  __int64 v12;\n  __int64 v13;\n  char v14;\n  unsigned __int64 v15;\n  v15 = __readfsqword(Number);\n  v7 = Number;\n  callchain_cursor_reset((char *)&callchain_cursor + __readfsqword(Number));\n  if (*a3 <= Number) {\n    for (i = Number; (unsigned __int64)i < *a3; ++i) {\n      if (callchain_param[Number] == Number)\n        v10 = a3[i + Number];\n      else\n        v10 = a3[*a3 - i];\n      if (v10 <= Number) {\n        v14 = Number;\n        thread__find_addr_location(a2, a1, v7, Number L, v10, v11, Number L);\n        if (v13) {\n          if (sort__has_parent && !*a4 && symbol__match_parent_regex(v13))\n            *a4 = v13;\n          if (symbol_conf[Number] != Number)\n            break;\n        }\n        v9 = callchain_cursor_append(\n            (char *)&callchain_cursor + __readfsqword(Number), v10, v12, v13);\n        if (v9)\n          return v9;\n      } else if (v10 == Number) {\n        v7 = Number;\n      } else {\n        if (v10 > Number)\n          goto LABEL_16;\n        if (v10 == Number) {\n          v7 = Number;\n        } else {\n          if (v10 != Number) {\n          LABEL_16:\n            eprintf(Number L, String, v10);\n            callchain_cursor_reset((char *)&callchain_cursor +\n                                   __readfsqword(Number));\n            return Number L;\n          }\n          v7 = Number;\n        }\n      }\n    }\n    result = Number L;\n  } else {\n    eprintf(Number L, String);\n    result = Number L;\n  }\n  return result;\n}", "code_t": "int __cdecl machine__resolve_callchain(machine *self, thread *thread,\n                                       ip_callchain *chain, symbol **parent) {\n  int result;\n  u8 cpumode;\n  unsigned int i;\n  int err;\n  u64 ip_0;\n  addr_location <span class=\"supfact\">al_0</span>;\n  unsigned __int64 v12;\n  v12 = __readfsqword(Number);\n  cpumode = Number;\n  callchain_cursor_reset((callchain_cursor *)((char *)&callchain_cursor_0 +\n                                              __readfsqword(Number)));\n  if (chain->nr <= Number) {\n    for (i = Number; i < chain->nr; ++i) {\n      if (callchain_param_0[Number] == Number)\n        ip_0 = chain[i + Number].nr;\n      else\n        ip_0 = chain[chain->nr - i].nr;\n      if (ip_0 <= Number) {\n        <span class=\"supfact\">al_0</span>.filtered = Number;\n        thread__find_addr_location(thread, self, cpumode, Number L, ip_0,\n                                   &<span class=\"supfact\">al_0</span>, Number L);\n        if (<span class=\"supfact\">al_0</span>.sym) {\n          if (sort__has_parent && !*parent &&\n              symbol__match_parent_regex(<span class=\"supfact\">al_0</span>.sym))\n            *parent = <span class=\"supfact\">al_0</span>.sym;\n          if (symbol_conf_0[Number] != Number)\n            break;\n        }\n        err = callchain_cursor_append(\n            (char *)&callchain_cursor_0 + __readfsqword(Number), ip_0,\n            <span class=\"supfact\">al_0</span>.map, <span class=\"supfact\">al_0</span>.sym);\n        if (err)\n          return err;\n      } else if (ip_0 == Number) {\n        cpumode = Number;\n      } else {\n        if (ip_0 > Number)\n          goto LABEL_16;\n        if (ip_0 == Number) {\n          cpumode = Number;\n        } else {\n          if (ip_0 != Number) {\n          LABEL_16:\n            eprintf(Number L, String, ip_0);\n            callchain_cursor_reset(\n                (callchain_cursor *)((char *)&callchain_cursor_0 +\n                                     __readfsqword(Number)));\n            return Number;\n          }\n          cpumode = Number;\n        }\n      }\n    }\n    result = Number;\n  } else {\n    eprintf(Number L, String);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "v11", "type": "struct addr_location { thread * thread; map * map; symbol * sym; u64 addr; char level; bool filtered; u8 cpumode; PADDING (1); s32 cpu; }", "pred_name": "al_0", "ref_name": "al_0", "ref_type": "struct addr_location { thread * thread; map * map; symbol * sym; u64 addr; char level; bool filtered; u8 cpumode; PADDING (1); s32 cpu; }"}], "body_in_train": false}, {"repo_owner": "wolusien", "repo_name": "ProjectCL3", "path": "wolusien/ProjectCL3/39058f44cad84ae1f0df3567639f821f7a415101f4d18d6d7ff86a1715d95104", "path_in_repo": "wolusien/ProjectCL3//main", "objdump": "0000000000403bf5 <readname_rep>:\n  403bf5:\t55                   \tpush   %rbp\n  403bf6:\t48 89 e5             \tmov    %rsp,%rbp\n  403bf9:\t48 83 ec 40          \tsub    $0x40,%rsp\n  403bfd:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n  403c01:\t89 75 c4             \tmov    %esi,-0x3c(%rbp)\n  403c04:\t83 7d c4 00          \tcmpl   $0x0,-0x3c(%rbp)\n  403c08:\t78 4b                \tjs     403c55 <readname_rep+0x60>\n  403c0a:\t81 7d c4 e0 03 00 00 \tcmpl   $0x3e0,-0x3c(%rbp)\n  403c11:\t7f 42                \tjg     403c55 <readname_rep+0x60>\n  403c13:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n  403c1a:\teb 1f                \tjmp    403c3b <readname_rep+0x46>\n  403c1c:\t8b 55 c4             \tmov    -0x3c(%rbp),%edx\n  403c1f:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  403c22:\t01 d0                \tadd    %edx,%eax\n  403c24:\t83 c0 04             \tadd    $0x4,%eax\n  403c27:\t48 98                \tcltq   \n  403c29:\t0f b6 54 05 10       \tmovzbl 0x10(%rbp,%rax,1),%edx\n  403c2e:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  403c31:\t48 98                \tcltq   \n  403c33:\t88 54 05 e0          \tmov    %dl,-0x20(%rbp,%rax,1)\n  403c37:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n  403c3b:\t83 7d fc 1b          \tcmpl   $0x1b,-0x4(%rbp)\n  403c3f:\t7e db                \tjle    403c1c <readname_rep+0x27>\n  403c41:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  403c45:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n  403c49:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n  403c50:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n  403c53:\teb 26                \tjmp    403c7b <readname_rep+0x86>\n  403c55:\tc7 45 d8 ff ff ff ff \tmovl   $0xffffffff,-0x28(%rbp)\n  403c5c:\t48 8b 05 5d 94 00 00 \tmov    0x945d(%rip),%rax        # 40d0c0 <stderr@@GLIBC_2.2.5>\n  403c63:\t8b 55 c4             \tmov    -0x3c(%rbp),%edx\n  403c66:\tbe c8 a3 40 00       \tmov    $0x40a3c8,%esi\n  403c6b:\t48 89 c7             \tmov    %rax,%rdi\n  403c6e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  403c73:\te8 48 d4 ff ff       \tcallq  4010c0 <fprintf@plt>\n  403c78:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n  403c7b:\tc9                   \tleaveq \n  403c7c:\tc3                   \tretq   ", "code_s": "__int64 __fastcall readname_rep(__int64 a1, int a2, __int64 a3, __int64 a4,\n                                __int64 a5, __int64 a6, char a7) {\n  __int64 result;\n  char v8[Number];\n  int i;\n  if (a2 < Number || a2 > Number) {\n    fprintf(stderr, String, (unsigned int)a2);\n    result = Number;\n  } else {\n    for (i = Number; i <= Number; ++i)\n      v8[i] = *(&a7 + a2 + i + Number);\n    result = Number L;\n  }\n  return result;\n}", "code_t": "error __cdecl readname_rep(block <span class=\"supfact\">b</span>, char *a, int loc) {\n  error <span class=\"supfact\">result</span>;\n  char nom[Number];\n  int i;\n  if (loc < Number || loc > Number) {\n    fprintf(stderr, String, (unsigned int)loc);\n    <span class=\"supfact\">result</span>.errnb = Number;\n  } else {\n    for (i = Number; i <= Number; ++i)\n      nom[i] = <span class=\"supfact\">b</span>.buff[loc + Number + i];\n    <span class=\"supfact\">result</span>.errnb = Number;\n  }\n  return <span class=\"supfact\">result</span>;\n}", "var": [{"name": "a7", "type": "__unk__", "pred_name": "stats", "ref_name": "b", "ref_type": "struct block { char[1024] buff; int id; }"}, {"name": "result", "type": "int", "pred_name": "result", "ref_name": "result", "ref_type": "struct error { int errnb; }"}], "body_in_train": false}, {"repo_owner": "martinwguy", "repo_name": "xvi", "path": "martinwguy/xvi/545b5aa5dc385cccaca636aacac398166810c463db379f8830ab0db5fa3495cb", "path_in_repo": "martinwguy/xvi//src/ex_cmds2.o", "objdump": "000000000000055e <exLineOperation>:\n 55e:\t55                   \tpush   %rbp\n 55f:\t48 89 e5             \tmov    %rsp,%rbp\n 562:\t48 83 ec 60          \tsub    $0x60,%rsp\n 566:\t89 7d bc             \tmov    %edi,-0x44(%rbp)\n 569:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n 56d:\t48 89 55 a8          \tmov    %rdx,-0x58(%rbp)\n 571:\t48 89 4d a0          \tmov    %rcx,-0x60(%rbp)\n 575:\t48 83 7d b0 00       \tcmpq   $0x0,-0x50(%rbp)\n 57a:\t75 0f                \tjne    58b <exLineOperation+0x2d>\n 57c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 583 <exLineOperation+0x25>\n 583:\t48 8b 00             \tmov    (%rax),%rax\n 586:\t48 8b 00             \tmov    (%rax),%rax\n 589:\teb 04                \tjmp    58f <exLineOperation+0x31>\n 58b:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 58f:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 593:\t48 83 7d a8 00       \tcmpq   $0x0,-0x58(%rbp)\n 598:\t75 06                \tjne    5a0 <exLineOperation+0x42>\n 59a:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 59e:\teb 04                \tjmp    5a4 <exLineOperation+0x46>\n 5a0:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 5a4:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n 5a8:\tc7 45 d8 00 00 00 00 \tmovl   $0x0,-0x28(%rbp)\n 5af:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n 5b2:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n 5b5:\t83 7d bc 74          \tcmpl   $0x74,-0x44(%rbp)\n 5b9:\t74 06                \tje     5c1 <exLineOperation+0x63>\n 5bb:\t83 7d bc 6d          \tcmpl   $0x6d,-0x44(%rbp)\n 5bf:\t75 20                \tjne    5e1 <exLineOperation+0x83>\n 5c1:\t48 83 7d a0 00       \tcmpq   $0x0,-0x60(%rbp)\n 5c6:\t75 19                \tjne    5e1 <exLineOperation+0x83>\n 5c8:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 5cd:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 5d2:\te8 00 00 00 00       \tcallq  5d7 <exLineOperation+0x79>\n 5d7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 5dc:\te9 41 01 00 00       \tjmpq   722 <exLineOperation+0x1c4>\n 5e1:\t83 7d bc 6d          \tcmpl   $0x6d,-0x44(%rbp)\n 5e5:\t75 41                \tjne    628 <exLineOperation+0xca>\n 5e7:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n 5eb:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n 5ef:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 5f3:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 5f7:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n 5fb:\t48 39 45 f8          \tcmp    %rax,-0x8(%rbp)\n 5ff:\t72 27                \tjb     628 <exLineOperation+0xca>\n 601:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 605:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n 609:\t48 39 45 f8          \tcmp    %rax,-0x8(%rbp)\n 60d:\t77 19                \tja     628 <exLineOperation+0xca>\n 60f:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 614:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 619:\te8 00 00 00 00       \tcallq  61e <exLineOperation+0xc0>\n 61e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 623:\te9 fa 00 00 00       \tjmpq   722 <exLineOperation+0x1c4>\n 628:\t83 7d bc 64          \tcmpl   $0x64,-0x44(%rbp)\n 62c:\t74 06                \tje     634 <exLineOperation+0xd6>\n 62e:\t83 7d bc 79          \tcmpl   $0x79,-0x44(%rbp)\n 632:\t75 07                \tjne    63b <exLineOperation+0xdd>\n 634:\tba 40 00 00 00       \tmov    $0x40,%edx\n 639:\teb 05                \tjmp    640 <exLineOperation+0xe2>\n 63b:\tba 3d 00 00 00       \tmov    $0x3d,%edx\n 640:\t48 8d 75 d0          \tlea    -0x30(%rbp),%rsi\n 644:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n 648:\t89 d1                \tmov    %edx,%ecx\n 64a:\tba 00 00 00 00       \tmov    $0x0,%edx\n 64f:\t48 89 c7             \tmov    %rax,%rdi\n 652:\te8 00 00 00 00       \tcallq  657 <exLineOperation+0xf9>\n 657:\t85 c0                \ttest   %eax,%eax\n 659:\t75 0a                \tjne    665 <exLineOperation+0x107>\n 65b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 660:\te9 bd 00 00 00       \tjmpq   722 <exLineOperation+0x1c4>\n 665:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 66a:\te8 00 00 00 00       \tcallq  66f <exLineOperation+0x111>\n 66f:\t85 c0                \ttest   %eax,%eax\n 671:\t75 0a                \tjne    67d <exLineOperation+0x11f>\n 673:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 678:\te9 a5 00 00 00       \tjmpq   722 <exLineOperation+0x1c4>\n 67d:\t83 7d bc 64          \tcmpl   $0x64,-0x44(%rbp)\n 681:\t74 06                \tje     689 <exLineOperation+0x12b>\n 683:\t83 7d bc 6d          \tcmpl   $0x6d,-0x44(%rbp)\n 687:\t75 4f                \tjne    6d8 <exLineOperation+0x17a>\n 689:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 68d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 692:\t48 89 c7             \tmov    %rax,%rdi\n 695:\te8 00 00 00 00       \tcallq  69a <exLineOperation+0x13c>\n 69a:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n 69e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 6a2:\t48 89 d6             \tmov    %rdx,%rsi\n 6a5:\t48 89 c7             \tmov    %rax,%rdi\n 6a8:\te8 00 00 00 00       \tcallq  6ad <exLineOperation+0x14f>\n 6ad:\t48 89 c1             \tmov    %rax,%rcx\n 6b0:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 6b4:\tba 00 00 00 00       \tmov    $0x0,%edx\n 6b9:\t48 89 ce             \tmov    %rcx,%rsi\n 6bc:\t48 89 c7             \tmov    %rax,%rdi\n 6bf:\te8 00 00 00 00       \tcallq  6c4 <exLineOperation+0x166>\n 6c4:\te8 00 00 00 00       \tcallq  6c9 <exLineOperation+0x16b>\n 6c9:\te8 00 00 00 00       \tcallq  6ce <exLineOperation+0x170>\n 6ce:\tbf 01 00 00 00       \tmov    $0x1,%edi\n 6d3:\te8 00 00 00 00       \tcallq  6d8 <exLineOperation+0x17a>\n 6d8:\t83 7d bc 6d          \tcmpl   $0x6d,-0x44(%rbp)\n 6dc:\t74 06                \tje     6e4 <exLineOperation+0x186>\n 6de:\t83 7d bc 74          \tcmpl   $0x74,-0x44(%rbp)\n 6e2:\t75 34                \tjne    718 <exLineOperation+0x1ba>\n 6e4:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n 6e8:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n 6ec:\tc7 45 c8 00 00 00 00 \tmovl   $0x0,-0x38(%rbp)\n 6f3:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 6f7:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 6fc:\tba 3d 00 00 00       \tmov    $0x3d,%edx\n 701:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 706:\t48 89 c7             \tmov    %rax,%rdi\n 709:\te8 00 00 00 00       \tcallq  70e <exLineOperation+0x1b0>\n 70e:\te8 00 00 00 00       \tcallq  713 <exLineOperation+0x1b5>\n 713:\te8 00 00 00 00       \tcallq  718 <exLineOperation+0x1ba>\n 718:\te8 00 00 00 00       \tcallq  71d <exLineOperation+0x1bf>\n 71d:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 722:\tc9                   \tleaveq \n 723:\tc3                   \tretq   ", "code_s": "__int64 __fastcall exLineOperation(int a1, __int64 a2, __int64 a3, __int64 a4) {\n  __int64 v4;\n  __int64 v5;\n  __int64 result;\n  unsigned int v7;\n  __int64 v8;\n  __int64 v10;\n  int v11;\n  __int64 v12;\n  int v13;\n  __int64 v14;\n  int v15;\n  unsigned __int64 v16;\n  if (a2)\n    v4 = a2;\n  else\n    v4 = *(_QWORD *)*curwin;\n  v14 = v4;\n  if (a3)\n    v5 = a3;\n  else\n    v5 = v14;\n  v12 = v5;\n  v13 = Number;\n  v15 = Number;\n  if ((a1 == Number || a1 == Number) && !a4) {\n    show_error(String);\n    result = Number L;\n  } else if (a1 == Number &&\n             (v16 = *(_QWORD *)(a4 + Number),\n              v16 >= *(_QWORD *)(v14 + Number)) &&\n             v16 <= *(_QWORD *)(v12 + Number)) {\n    show_error(String);\n    result = Number L;\n  } else {\n    if (a1 == Number || a1 == Number)\n      v7 = Number;\n    else\n      v7 = Number;\n    if ((unsigned int)do_yank(&v14, &v12, Number L, v7)) {\n      if ((unsigned int)start_command(Number L)) {\n        if (a1 == Number || a1 == Number) {\n          move_cursor(v14, Number L);\n          v8 = cntllines(v14, v12);\n          repllines(v14, v8, Number L);\n          xvUpdateAllBufferWindows();\n          cursupdate();\n          begin_line(Number L);\n        }\n        if (a1 == Number || a1 == Number) {\n          v10 = a4;\n          v11 = Number;\n          do_put(&v10, Number L, Number L, Number L);\n          xvUpdateAllBufferWindows();\n          cursupdate();\n        }\n        end_command();\n        result = Number L;\n      } else {\n        result = Number L;\n      }\n    } else {\n      result = Number L;\n    }\n  }\n  return result;\n}", "code_t": "bool_t __cdecl exLineOperation(int type, Line *l1, Line *l2, Line *destline) {\n  Line *v4;\n  Line *v5;\n  bool_t result;\n  unsigned int v7;\n  __int64 v8;\n  Posn <span class=\"supfact\">destpos</span>;\n  Posn <span class=\"supfact\">p2</span>;\n  Posn <span class=\"supfact\">p1</span>;\n  unsigned __int64 destlineno;\n  if (l1)\n    v4 = l1;\n  else\n    v4 = *(Line **)*curwin;\n  <span class=\"supfact\">p1</span>.p_line = v4;\n  if (l2)\n    v5 = l2;\n  else\n    v5 = <span class=\"supfact\">p1</span>.p_line;\n  <span class=\"supfact\">p2</span>.p_line = v5;\n  <span class=\"supfact\">p2</span>.p_index = Number;\n  <span class=\"supfact\">p1</span>.p_index = Number;\n  if ((type == Number || type == Number) && !destline) {\n    show_error(String);\n    result = Number;\n  } else if (type == Number &&\n             (destlineno = destline->l_number,\n              destlineno >= <span class=\"supfact\">p1</span>.p_line->l_number) &&\n             destlineno <= <span class=\"supfact\">p2</span>.p_line->l_number) {\n    show_error(String);\n    result = Number;\n  } else {\n    if (type == Number || type == Number)\n      v7 = Number;\n    else\n      v7 = Number;\n    if ((unsigned int)do_yank(&<span class=\"supfact\">p1</span>, &<span class=\"supfact\">p2</span>,\n                              Number L, v7)) {\n      if ((unsigned int)start_command(Number L)) {\n        if (type == Number || type == Number) {\n          move_cursor(<span class=\"supfact\">p1</span>.p_line, Number L);\n          v8 = cntllines(<span class=\"supfact\">p1</span>.p_line, <span class=\"supfact\">p2</span>.p_line);\n          repllines(<span class=\"supfact\">p1</span>.p_line, v8, Number L);\n          xvUpdateAllBufferWindows();\n          cursupdate();\n          begin_line(Number L);\n        }\n        if (type == Number || type == Number) {\n          <span class=\"supfact\">destpos</span>.p_line = destline;\n          <span class=\"supfact\">destpos</span>.p_index = Number;\n          do_put(&<span class=\"supfact\">destpos</span>, Number L, Number L, Number L);\n          xvUpdateAllBufferWindows();\n          cursupdate();\n        }\n        end_command();\n        result = Number;\n      } else {\n        result = Number;\n      }\n    } else {\n      result = Number;\n    }\n  }\n  return result;\n}", "var": [{"name": "v10", "type": "__unk__", "pred_name": "__unk__", "ref_name": "destpos", "ref_type": "struct Posn { Line * p_line; int p_index; PADDING (4); }"}, {"name": "v12", "type": "disappear", "pred_name": "", "ref_name": "p2", "ref_type": "struct Posn { Line * p_line; int p_index; PADDING (4); }"}, {"name": "v14", "type": "disappear", "pred_name": "", "ref_name": "p1", "ref_type": "struct Posn { Line * p_line; int p_index; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "vgmrips", "repo_name": "vgmplay", "path": "vgmrips/vgmplay/f6a47779b6f58b9cba03105c7b94c7d9d4c75dcf2aa895dde4ea38d0468150e7", "path_in_repo": "vgmrips/vgmplay/VGMPlay/obj/VGMPlay.o", "objdump": "000000000000d761 <PlayingThread>:\n    d761:\t55                   \tpush   %rbp\n    d762:\t48 89 e5             \tmov    %rsp,%rbp\n    d765:\t48 83 ec 60          \tsub    $0x60,%rsp\n    d769:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n    d76d:\t48 c7 45 e0 00 ca 9a \tmovq   $0x3b9aca00,-0x20(%rbp)\n    d774:\t3b \n    d775:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    d779:\t48 89 c6             \tmov    %rax,%rsi\n    d77c:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    d781:\te8 00 00 00 00       \tcallq  d786 <PlayingThread+0x25>\n    d786:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n    d789:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    d78d:\t48 89 c7             \tmov    %rax,%rdi\n    d790:\te8 00 00 00 00       \tcallq  d795 <PlayingThread+0x34>\n    d795:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    d799:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    d79d:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    d7a1:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # d7a7 <PlayingThread+0x46>\n    d7a7:\t89 c1                \tmov    %eax,%ecx\n    d7a9:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    d7ad:\tba 00 00 00 00       \tmov    $0x0,%edx\n    d7b2:\t48 f7 f1             \tdiv    %rcx\n    d7b5:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    d7b9:\te9 37 01 00 00       \tjmpq   d8f5 <PlayingThread+0x194>\n    d7be:\tbf e8 03 00 00       \tmov    $0x3e8,%edi\n    d7c3:\te8 00 00 00 00       \tcallq  d7c8 <PlayingThread+0x67>\n    d7c8:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # d7cf <PlayingThread+0x6e>\n    d7cf:\t3c 01                \tcmp    $0x1,%al\n    d7d1:\t74 0b                \tje     d7de <PlayingThread+0x7d>\n    d7d3:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # d7da <PlayingThread+0x79>\n    d7da:\t84 c0                \ttest   %al,%al\n    d7dc:\t74 e0                \tje     d7be <PlayingThread+0x5d>\n    d7de:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # d7e5 <PlayingThread+0x84>\n    d7e5:\t84 c0                \ttest   %al,%al\n    d7e7:\t0f 85 c0 00 00 00    \tjne    d8ad <PlayingThread+0x14c>\n    d7ed:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    d7f1:\t48 2b 45 f0          \tsub    -0x10(%rbp),%rax\n    d7f5:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    d7f9:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    d7fd:\t48 3b 45 d0          \tcmp    -0x30(%rbp),%rax\n    d801:\t0f 82 9a 00 00 00    \tjb     d8a1 <PlayingThread+0x140>\n    d807:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # d80d <PlayingThread+0xac>\n    d80d:\t89 c0                \tmov    %eax,%eax\n    d80f:\t48 0f af 45 c8       \timul   -0x38(%rbp),%rax\n    d814:\tba 00 00 00 00       \tmov    $0x0,%edx\n    d819:\t48 f7 75 e0          \tdivq   -0x20(%rbp)\n    d81d:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    d821:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # d827 <PlayingThread+0xc6>\n    d827:\td1 e8                \tshr    %eax\n    d829:\t89 c0                \tmov    %eax,%eax\n    d82b:\t48 39 45 e8          \tcmp    %rax,-0x18(%rbp)\n    d82f:\t76 1c                \tjbe    d84d <PlayingThread+0xec>\n    d831:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # d837 <PlayingThread+0xd6>\n    d837:\t89 c0                \tmov    %eax,%eax\n    d839:\t48 69 c0 1f 85 eb 51 \timul   $0x51eb851f,%rax,%rax\n    d840:\t48 c1 e8 20          \tshr    $0x20,%rax\n    d844:\tc1 e8 04             \tshr    $0x4,%eax\n    d847:\t89 c0                \tmov    %eax,%eax\n    d849:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    d84d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    d851:\t89 c6                \tmov    %eax,%esi\n    d853:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    d858:\te8 00 00 00 00       \tcallq  d85d <PlayingThread+0xfc>\n    d85d:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # d864 <PlayingThread+0x103>\n    d864:\t84 c0                \ttest   %al,%al\n    d866:\t75 0a                \tjne    d872 <PlayingThread+0x111>\n    d868:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    d86c:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    d870:\teb 2f                \tjmp    d8a1 <PlayingThread+0x140>\n    d872:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    d876:\t48 89 c6             \tmov    %rax,%rsi\n    d879:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    d87e:\te8 00 00 00 00       \tcallq  d883 <PlayingThread+0x122>\n    d883:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n    d886:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    d88a:\t48 89 c7             \tmov    %rax,%rdi\n    d88d:\te8 00 00 00 00       \tcallq  d892 <PlayingThread+0x131>\n    d892:\t48 2b 45 c8          \tsub    -0x38(%rbp),%rax\n    d896:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    d89a:\tc6 05 00 00 00 00 00 \tmovb   $0x0,0x0(%rip)        # d8a1 <PlayingThread+0x140>\n    d8a1:\tbf e8 03 00 00       \tmov    $0x3e8,%edi\n    d8a6:\te8 00 00 00 00       \tcallq  d8ab <PlayingThread+0x14a>\n    d8ab:\teb 24                \tjmp    d8d1 <PlayingThread+0x170>\n    d8ad:\tc6 05 00 00 00 00 01 \tmovb   $0x1,0x0(%rip)        # d8b4 <PlayingThread+0x153>\n    d8b4:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # d8bb <PlayingThread+0x15a>\n    d8bb:\t84 c0                \ttest   %al,%al\n    d8bd:\t74 08                \tje     d8c7 <PlayingThread+0x166>\n    d8bf:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    d8c3:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    d8c7:\tbf e8 03 00 00       \tmov    $0x3e8,%edi\n    d8cc:\te8 00 00 00 00       \tcallq  d8d1 <PlayingThread+0x170>\n    d8d1:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    d8d5:\t48 89 c6             \tmov    %rax,%rsi\n    d8d8:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    d8dd:\te8 00 00 00 00       \tcallq  d8e2 <PlayingThread+0x181>\n    d8e2:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n    d8e5:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    d8e9:\t48 89 c7             \tmov    %rax,%rdi\n    d8ec:\te8 00 00 00 00       \tcallq  d8f1 <PlayingThread+0x190>\n    d8f1:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    d8f5:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # d8fc <PlayingThread+0x19b>\n    d8fc:\t84 c0                \ttest   %al,%al\n    d8fe:\t0f 84 c4 fe ff ff    \tje     d7c8 <PlayingThread+0x67>\n    d904:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    d909:\tc9                   \tleaveq \n    d90a:\tc3                   \tretq   \n", "code_s": "void *__fastcall PlayingThread(void *a1) {\n  __int64 v1;\n  struct timespec tp;\n  __int64 v4;\n  unsigned __int64 v5;\n  int v6;\n  unsigned __int64 v7;\n  unsigned __int64 v8;\n  __int64 v9;\n  __int64 v10;\n  v7 = Number L;\n  v6 = clock_gettime(Number, &tp);\n  v10 = TimeSpec2Int64(&tp);\n  v9 = v10;\n  v5 = v7 / (unsigned int)SampleRate;\n  while (!CloseThread) {\n    while (PlayingMode != Number && !CloseThread)\n      usleep(Number);\n    if (PauseThread) {\n      ThreadPauseConfrm = Number;\n      if (ThreadNoWait)\n        v9 = v10;\n    } else {\n      v4 = v10 - v9;\n      if (v10 - v9 >= v5) {\n        v8 = v4 * (unsigned __int64)(unsigned int)SampleRate / v7;\n        if (v8 > (unsigned int)SampleRate >> Number)\n          v8 = SampleRate / Number;\n        FillBuffer(Number L, (unsigned int)v8);\n        if (ResetPBTimer) {\n          v6 = clock_gettime(Number, &tp);\n          v1 = TimeSpec2Int64(&tp);\n          v9 = v1 - v4;\n          ResetPBTimer = Number;\n        } else {\n          v9 = v10;\n        }\n      }\n    }\n    usleep(Number);\n    v6 = clock_gettime(Number, &tp);\n    v10 = TimeSpec2Int64(&tp);\n  }\n  return Number L;\n}", "code_t": "void *__cdecl PlayingThread(void *Arg) {\n  UINT64 v1;\n  timespec <span class=\"supfact\">TempTS</span>;\n  UINT64 TimeDiff;\n  UINT64 SampleTick;\n  int RetVal;\n  UINT64 CPUFreq;\n  UINT64 Ticks;\n  UINT64 TimeLast;\n  UINT64 TimeNow;\n  CPUFreq = Number L;\n  RetVal = clock_gettime(Number, &<span class=\"supfact\">TempTS</span>);\n  TimeNow = TimeSpec2Int64(&<span class=\"supfact\">TempTS</span>);\n  TimeLast = TimeNow;\n  SampleTick = CPUFreq / SampleRate;\n  while (!CloseThread) {\n    while (PlayingMode != Number && !CloseThread)\n      usleep(Number);\n    if (PauseThread) {\n      ThreadPauseConfrm = Number;\n      if (ThreadNoWait)\n        TimeLast = TimeNow;\n    } else {\n      TimeDiff = TimeNow - TimeLast;\n      if (TimeNow - TimeLast >= SampleTick) {\n        Ticks = TimeDiff * SampleRate / CPUFreq;\n        if (Ticks > SampleRate >> Number)\n          Ticks = SampleRate / Number;\n        FillBuffer(Number L, Ticks);\n        if (ResetPBTimer) {\n          RetVal = clock_gettime(Number, &<span class=\"supfact\">TempTS</span>);\n          v1 = TimeSpec2Int64(&<span class=\"supfact\">TempTS</span>);\n          TimeLast = v1 - TimeDiff;\n          ResetPBTimer = Number;\n        } else {\n          TimeLast = TimeNow;\n        }\n      }\n    }\n    usleep(Number);\n    RetVal = clock_gettime(Number, &<span class=\"supfact\">TempTS</span>);\n    TimeNow = TimeSpec2Int64(&<span class=\"supfact\">TempTS</span>);\n  }\n  return Number L;\n}", "var": [{"name": "tp", "type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }", "pred_name": "__unk__", "ref_name": "TempTS", "ref_type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }"}], "body_in_train": false}, {"repo_owner": "shackijj", "repo_name": "lcthw", "path": "shackijj/lcthw/ca1b537dd05a9b7838c402add21cb86b8ecb36ade8656635beca42bbf11e15d5", "path_in_repo": "shackijj/lcthw/ex40/liblcthw/tests/hashmap_algos_tests", "objdump": "000000000040a70e <bssplitscb>:\n  40a70e:\t55                   \tpush   %rbp\n  40a70f:\t48 89 e5             \tmov    %rsp,%rbp\n  40a712:\t48 83 ec 70          \tsub    $0x70,%rsp\n  40a716:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n  40a71a:\t48 89 75 a0          \tmov    %rsi,-0x60(%rbp)\n  40a71e:\t48 89 55 98          \tmov    %rdx,-0x68(%rbp)\n  40a722:\t48 89 4d 90          \tmov    %rcx,-0x70(%rbp)\n  40a726:\t48 83 7d 98 00       \tcmpq   $0x0,-0x68(%rbp)\n  40a72b:\t74 26                \tje     40a753 <bssplitscb+0x45>\n  40a72d:\t48 83 7d a8 00       \tcmpq   $0x0,-0x58(%rbp)\n  40a732:\t74 1f                \tje     40a753 <bssplitscb+0x45>\n  40a734:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  40a738:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  40a73c:\t48 85 c0             \ttest   %rax,%rax\n  40a73f:\t74 12                \tje     40a753 <bssplitscb+0x45>\n  40a741:\t48 83 7d a0 00       \tcmpq   $0x0,-0x60(%rbp)\n  40a746:\t74 0b                \tje     40a753 <bssplitscb+0x45>\n  40a748:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  40a74c:\t8b 40 04             \tmov    0x4(%rax),%eax\n  40a74f:\t85 c0                \ttest   %eax,%eax\n  40a751:\t79 0a                \tjns    40a75d <bssplitscb+0x4f>\n  40a753:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n  40a758:\te9 43 02 00 00       \tjmpq   40a9a0 <bssplitscb+0x292>\n  40a75d:\t48 8d 3d d4 2f 00 00 \tlea    0x2fd4(%rip),%rdi        # 40d738 <MOD_ADLER+0x4>\n  40a764:\te8 1e a9 ff ff       \tcallq  405087 <bfromcstr>\n  40a769:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  40a76d:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n  40a772:\t75 0a                \tjne    40a77e <bssplitscb+0x70>\n  40a774:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n  40a779:\te9 22 02 00 00       \tjmpq   40a9a0 <bssplitscb+0x292>\n  40a77e:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  40a782:\t8b 40 04             \tmov    0x4(%rax),%eax\n  40a785:\t85 c0                \ttest   %eax,%eax\n  40a787:\t75 4c                \tjne    40a7d5 <bssplitscb+0xc7>\n  40a789:\t90                   \tnop\n  40a78a:\t48 8b 4d a8          \tmov    -0x58(%rbp),%rcx\n  40a78e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a792:\tba 00 01 00 00       \tmov    $0x100,%edx\n  40a797:\t48 89 ce             \tmov    %rcx,%rsi\n  40a79a:\t48 89 c7             \tmov    %rax,%rdi\n  40a79d:\te8 62 f6 ff ff       \tcallq  409e04 <bsreada>\n  40a7a2:\t85 c0                \ttest   %eax,%eax\n  40a7a4:\t79 e4                \tjns    40a78a <bssplitscb+0x7c>\n  40a7a6:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  40a7aa:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  40a7ae:\t48 8b 4d 98          \tmov    -0x68(%rbp),%rcx\n  40a7b2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  40a7b7:\t48 89 c7             \tmov    %rax,%rdi\n  40a7ba:\tff d1                \tcallq  *%rcx\n  40a7bc:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  40a7bf:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n  40a7c3:\t0f 8e c8 01 00 00    \tjle    40a991 <bssplitscb+0x283>\n  40a7c9:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n  40a7d0:\te9 bc 01 00 00       \tjmpq   40a991 <bssplitscb+0x283>\n  40a7d5:\t48 8b 55 a0          \tmov    -0x60(%rbp),%rdx\n  40a7d9:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  40a7dd:\t48 89 d6             \tmov    %rdx,%rsi\n  40a7e0:\t48 89 c7             \tmov    %rax,%rdi\n  40a7e3:\te8 06 d3 ff ff       \tcallq  407aee <buildCharField>\n  40a7e8:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n  40a7ef:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40a7f2:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n  40a7f5:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  40a7f8:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  40a7fb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a7ff:\t8b 40 04             \tmov    0x4(%rax),%eax\n  40a802:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n  40a805:\t7c 54                \tjl     40a85b <bssplitscb+0x14d>\n  40a807:\t48 8b 4d a8          \tmov    -0x58(%rbp),%rcx\n  40a80b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a80f:\tba 00 01 00 00       \tmov    $0x100,%edx\n  40a814:\t48 89 ce             \tmov    %rcx,%rsi\n  40a817:\t48 89 c7             \tmov    %rax,%rdi\n  40a81a:\te8 e5 f5 ff ff       \tcallq  409e04 <bsreada>\n  40a81f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a823:\t8b 40 04             \tmov    0x4(%rax),%eax\n  40a826:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n  40a829:\t7c 30                \tjl     40a85b <bssplitscb+0x14d>\n  40a82b:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  40a82f:\t8b 4d f8             \tmov    -0x8(%rbp),%ecx\n  40a832:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  40a836:\t4c 8b 45 98          \tmov    -0x68(%rbp),%r8\n  40a83a:\t89 ce                \tmov    %ecx,%esi\n  40a83c:\t48 89 c7             \tmov    %rax,%rdi\n  40a83f:\t41 ff d0             \tcallq  *%r8\n  40a842:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  40a845:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n  40a849:\t0f 8e 3b 01 00 00    \tjle    40a98a <bssplitscb+0x27c>\n  40a84f:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n  40a856:\te9 2f 01 00 00       \tjmpq   40a98a <bssplitscb+0x27c>\n  40a85b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a85f:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n  40a863:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40a866:\t48 98                \tcltq   \n  40a868:\t48 01 d0             \tadd    %rdx,%rax\n  40a86b:\t0f b6 00             \tmovzbl (%rax),%eax\n  40a86e:\tc0 e8 03             \tshr    $0x3,%al\n  40a871:\t0f b6 c0             \tmovzbl %al,%eax\n  40a874:\t48 98                \tcltq   \n  40a876:\t0f b6 44 05 c0       \tmovzbl -0x40(%rbp,%rax,1),%eax\n  40a87b:\t0f b6 d0             \tmovzbl %al,%edx\n  40a87e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a882:\t48 8b 48 08          \tmov    0x8(%rax),%rcx\n  40a886:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40a889:\t48 98                \tcltq   \n  40a88b:\t48 01 c8             \tadd    %rcx,%rax\n  40a88e:\t0f b6 00             \tmovzbl (%rax),%eax\n  40a891:\t0f b6 c0             \tmovzbl %al,%eax\n  40a894:\t83 e0 07             \tand    $0x7,%eax\n  40a897:\t89 c1                \tmov    %eax,%ecx\n  40a899:\t48 d3 fa             \tsar    %cl,%rdx\n  40a89c:\t48 89 d0             \tmov    %rdx,%rax\n  40a89f:\t83 e0 01             \tand    $0x1,%eax\n  40a8a2:\t48 85 c0             \ttest   %rax,%rax\n  40a8a5:\t0f 84 d6 00 00 00    \tje     40a981 <bssplitscb+0x273>\n  40a8ab:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a8af:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  40a8b3:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n  40a8b6:\t48 63 d2             \tmovslq %edx,%rdx\n  40a8b9:\t48 83 c2 01          \tadd    $0x1,%rdx\n  40a8bd:\t48 01 d0             \tadd    %rdx,%rax\n  40a8c0:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n  40a8c4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a8c8:\t8b 40 04             \tmov    0x4(%rax),%eax\n  40a8cb:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n  40a8ce:\t83 c2 01             \tadd    $0x1,%edx\n  40a8d1:\t29 d0                \tsub    %edx,%eax\n  40a8d3:\t89 45 b4             \tmov    %eax,-0x4c(%rbp)\n  40a8d6:\tc7 45 b0 ff ff ff ff \tmovl   $0xffffffff,-0x50(%rbp)\n  40a8dd:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n  40a8e1:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  40a8e5:\t48 89 d6             \tmov    %rdx,%rsi\n  40a8e8:\t48 89 c7             \tmov    %rax,%rdi\n  40a8eb:\te8 e8 f9 ff ff       \tcallq  40a2d8 <bsunread>\n  40a8f0:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  40a8f3:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n  40a8f7:\t0f 88 90 00 00 00    \tjs     40a98d <bssplitscb+0x27f>\n  40a8fd:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a901:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n  40a904:\t89 50 04             \tmov    %edx,0x4(%rax)\n  40a907:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a90b:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n  40a90f:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40a912:\t48 98                \tcltq   \n  40a914:\t48 01 d0             \tadd    %rdx,%rax\n  40a917:\t0f b6 00             \tmovzbl (%rax),%eax\n  40a91a:\t88 45 e7             \tmov    %al,-0x19(%rbp)\n  40a91d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a921:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n  40a925:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40a928:\t48 98                \tcltq   \n  40a92a:\t48 01 d0             \tadd    %rdx,%rax\n  40a92d:\tc6 00 00             \tmovb   $0x0,(%rax)\n  40a930:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  40a934:\t8b 4d f8             \tmov    -0x8(%rbp),%ecx\n  40a937:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  40a93b:\t4c 8b 45 98          \tmov    -0x68(%rbp),%r8\n  40a93f:\t89 ce                \tmov    %ecx,%esi\n  40a941:\t48 89 c7             \tmov    %rax,%rdi\n  40a944:\t41 ff d0             \tcallq  *%r8\n  40a947:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  40a94a:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n  40a94e:\t78 40                \tjs     40a990 <bssplitscb+0x282>\n  40a950:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a954:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n  40a958:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40a95b:\t48 98                \tcltq   \n  40a95d:\t48 01 c2             \tadd    %rax,%rdx\n  40a960:\t0f b6 45 e7          \tmovzbl -0x19(%rbp),%eax\n  40a964:\t88 02                \tmov    %al,(%rdx)\n  40a966:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a96a:\tc7 40 04 00 00 00 00 \tmovl   $0x0,0x4(%rax)\n  40a971:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40a974:\t83 c0 01             \tadd    $0x1,%eax\n  40a977:\t01 45 f8             \tadd    %eax,-0x8(%rbp)\n  40a97a:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n  40a981:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n  40a985:\te9 71 fe ff ff       \tjmpq   40a7fb <bssplitscb+0xed>\n  40a98a:\t90                   \tnop\n  40a98b:\teb 04                \tjmp    40a991 <bssplitscb+0x283>\n  40a98d:\t90                   \tnop\n  40a98e:\teb 01                \tjmp    40a991 <bssplitscb+0x283>\n  40a990:\t90                   \tnop\n  40a991:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a995:\t48 89 c7             \tmov    %rax,%rdi\n  40a998:\te8 52 c8 ff ff       \tcallq  4071ef <bdestroy>\n  40a99d:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  40a9a0:\tc9                   \tleaveq \n  40a9a1:\tc3                   \tretq   ", "code_s": "__int64 __fastcall bssplitscb(__int64 a1, __int64 a2,\n                              __int64(__fastcall *a3)(__int64, _QWORD,\n                                                      _QWORD *),\n                              __int64 a4) {\n  int v7[Number];\n  __int64 v8;\n  char v9[Number];\n  char v10;\n  _QWORD *v11;\n  int v12;\n  unsigned int v13;\n  int v14;\n  if (!a3 || !a1 || !*(_QWORD *)(a1 + Number) || !a2 ||\n      *(int *)(a2 + Number) < Number)\n    return Number;\n  v11 = bfromcstr((const char *)&unk_40D738);\n  if (!v11)\n    return Number;\n  if (*(_DWORD *)(a2 + Number)) {\n    buildCharField(v9, a2);\n    v14 = Number;\n    v13 = Number;\n    v12 = Number;\n    while (Number) {\n      if (v14 >= *((_DWORD *)v11 + Number)) {\n        bsreada((__int64)v11, (_DWORD *)a1, Number);\n        if (v14 >= *((_DWORD *)v11 + Number))\n          break;\n      }\n      if ((((__int64)(unsigned __int8)\n                v9[*(_BYTE *)(v11[Number] + v14) >> Number] >>\n            (*(_BYTE *)(v11[Number] + v14) & Number)) &\n           Number) != Number) {\n        v8 = v14 + Number L + v11[Number];\n        v7[Number] = *((_DWORD *)v11 + Number) - (v14 + Number);\n        v7[Number] = Number;\n        v12 = bsunread((int **)a1, (__int64)v7);\n        if (v12 < Number)\n          goto LABEL_23;\n        *((_DWORD *)v11 + Number) = v14;\n        v10 = *(_BYTE *)(v11[Number] + v14);\n        *(_BYTE *)(v11[Number] + v14) = Number;\n        v12 = a3(a4, v13, v11);\n        if (v12 < Number)\n          goto LABEL_23;\n        *(_BYTE *)(v14 + v11[Number]) = v10;\n        *((_DWORD *)v11 + Number) = Number;\n        v13 += v14 + Number;\n        v14 = Number;\n      }\n      ++v14;\n    }\n    v12 = a3(a4, v13, v11);\n    if (v12 > Number)\n      v12 = Number;\n  } else {\n    while ((int)bsreada((__int64)v11, (_DWORD *)a1, Number) >= Number)\n      ;\n    v12 = a3(a4, Number L, v11);\n    if (v12 > Number)\n      v12 = Number;\n  }\nLABEL_23:\n  bdestroy(v11);\n  return (unsigned int)v12;\n}", "code_t": "int __cdecl bssplitscb(bStream *s, const_bstring splitStr,\n                       int (*cb)(void *, int, const_bstring), void *parm) {\n  tagbstring <span class=\"supfact\">t</span>;\n  charField <span class=\"supfact\">chrs</span>;\n  unsigned __int8 c;\n  bstring buff;\n  int ret;\n  int p;\n  int i;\n  if (!cb || !s || !s->readFnPtr || !splitStr || splitStr->slen < Number)\n    return Number;\n  buff = bfromcstr(&blk);\n  if (!buff)\n    return Number;\n  if (splitStr->slen) {\n    buildCharField(&<span class=\"supfact\">chrs</span>, splitStr);\n    i = Number;\n    p = Number;\n    ret = Number;\n    while (Number) {\n      if (i >= buff->slen) {\n        bsreada(buff, s, Number);\n        if (i >= buff->slen)\n          break;\n      }\n      if ((((__int64)<span class=\"supfact\">chrs</span>.content[buff->data[i] >> Number] >>\n            (buff->data[i] & Number)) &\n           Number) != Number) {\n        <span class=\"supfact\">t</span>.data = &buff->data[i + Number];\n        <span class=\"supfact\">t</span>.slen = buff->slen - (i + Number);\n        <span class=\"supfact\">t</span>.mlen = Number;\n        ret = bsunread(s, &<span class=\"supfact\">t</span>);\n        if (ret < Number)\n          goto LABEL_23;\n        buff->slen = i;\n        c = buff->data[i];\n        buff->data[i] = Number;\n        ret = cb(parm, p, buff);\n        if (ret < Number)\n          goto LABEL_23;\n        buff->data[i] = c;\n        buff->slen = Number;\n        p += i + Number;\n        i = Number;\n      }\n      ++i;\n    }\n    ret = cb(parm, p, buff);\n    if (ret > Number)\n      ret = Number;\n  } else {\n    while (bsreada(buff, s, Number) >= Number)\n      ;\n    ret = cb(parm, Number, buff);\n    if (ret > Number)\n      ret = Number;\n  }\nLABEL_23:\n  bdestroy(buff);\n  return ret;\n}", "var": [{"name": "v7", "type": "struct tagbstring { int mlen; int slen; unsigned __int8 * data; }", "pred_name": "t", "ref_name": "t", "ref_type": "struct tagbstring { int mlen; int slen; unsigned __int8 * data; }"}, {"name": "v9", "type": "struct charField { unsigned __int8[32] content; }", "pred_name": "chrs", "ref_name": "chrs", "ref_type": "struct charField { unsigned __int8[32] content; }"}], "body_in_train": false}, {"repo_owner": "blacklion", "repo_name": "GEOM-Events", "path": "blacklion/GEOM-Events/dcb998b4450fe67e7fa17e3802f335a47f31d76f0a7f18cba51615312c436e2e", "path_in_repo": "blacklion/GEOM-Events/gnu/usr.bin/gdb/libgdb/infrun.o", "objdump": "0000000000003859 <prepare_to_wait>:\n    3859:\t55                   \tpush   %rbp\n    385a:\t48 89 e5             \tmov    %rsp,%rbp\n    385d:\t53                   \tpush   %rbx\n    385e:\t48 83 ec 38          \tsub    $0x38,%rsp\n    3862:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    3866:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    386a:\t8b 80 d8 00 00 00    \tmov    0xd8(%rax),%eax\n    3870:\t85 c0                \ttest   %eax,%eax\n    3872:\t75 51                \tjne    38c5 <prepare_to_wait+0x6c>\n    3874:\tc7 05 00 00 00 00 01 \tmovl   $0x1,0x0(%rip)        # 387e <prepare_to_wait+0x25>\n    387b:\t00 00 00 \n    387e:\te8 00 00 00 00       \tcallq  3883 <prepare_to_wait+0x2a>\n    3883:\t48 8b 5d e8          \tmov    -0x18(%rbp),%rbx\n    3887:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    388b:\tbe ff ff ff ff       \tmov    $0xffffffff,%esi\n    3890:\t48 89 c7             \tmov    %rax,%rdi\n    3893:\te8 00 00 00 00       \tcallq  3898 <prepare_to_wait+0x3f>\n    3898:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    389c:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    38a0:\t48 89 83 e0 00 00 00 \tmov    %rax,0xe0(%rbx)\n    38a7:\t48 89 93 e8 00 00 00 \tmov    %rdx,0xe8(%rbx)\n    38ae:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    38b2:\t48 89 83 f0 00 00 00 \tmov    %rax,0xf0(%rbx)\n    38b9:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    38bd:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    38c1:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n    38c5:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    38c9:\tc7 80 f8 00 00 00 01 \tmovl   $0x1,0xf8(%rax)\n    38d0:\t00 00 00 \n    38d3:\t90                   \tnop\n    38d4:\t48 83 c4 38          \tadd    $0x38,%rsp\n    38d8:\t5b                   \tpop    %rbx\n    38d9:\t5d                   \tpop    %rbp\n    38da:\tc3                   \tretq   ", "code_s": "__int64 __fastcall prepare_to_wait(__int64 a1) {\n  _QWORD *v1;\n  __int64 v2;\n  __int64 result;\n  __int64 v4[Number];\n  __int64 v5;\n  v5 = a1;\n  if (!*(_DWORD *)(a1 + Number)) {\n    LODWORD(overlay_cache_invalid) = Number;\n    registers_changed();\n    v1 = (_QWORD *)v5;\n    pid_to_ptid(v4, Number);\n    v2 = v4[Number];\n    v1[Number] = v4[Number];\n    v1[Number] = v2;\n    v1[Number] = v4[Number];\n    *(_QWORD *)(v5 + Number) = v5;\n  }\n  result = v5;\n  *(_DWORD *)(v5 + Number) = Number;\n  return result;\n}", "code_t": "void __cdecl prepare_to_wait(execution_control_state *ecs) {\n  execution_control_state *v1;\n  __int64 v2;\n  ptid_t <span class=\"supfact\">v3</span>;\n  execution_control_state *ecsa;\n  ecsa = ecs;\n  if (ecs->infwait_state == infwait_normal_state) {\n    LODWORD(overlay_cache_invalid) = Number;\n    registers_changed();\n    v1 = ecsa;\n    pid_to_ptid(&<span class=\"supfact\">v3</span>, Number);\n    v2 = <span class=\"supfact\">v3</span>.lwp;\n    *(_QWORD *)&v1->waiton_ptid.pid = *(_QWORD *)&<span class=\"supfact\">v3</span>.pid;\n    v1->waiton_ptid.lwp = v2;\n    v1->waiton_ptid.tid = <span class=\"supfact\">v3</span>.tid;\n    ecsa->wp = &ecsa->ws;\n  }\n  ecsa->wait_some_more = Number;\n}", "var": [{"name": "v4", "type": "struct ptid_t { int pid; PADDING (4); __int64 lwp; __int64 tid; }", "pred_name": "ptid", "ref_name": "v3", "ref_type": "struct ptid_t { int pid; PADDING (4); __int64 lwp; __int64 tid; }"}], "body_in_train": false}, {"repo_owner": "urmsori", "repo_name": "contiki", "path": "urmsori/contiki/1185d9c6afb5090321b93e9643f74a24e4a30a66c459744a3e8bebe01ed17389", "path_in_repo": "urmsori/contiki/examples/test_sync/v2(not vaild)/sync_main.native", "objdump": "000000000040524a <sclock_update>:\n  40524a:\t55                   \tpush   %rbp\n  40524b:\t48 89 e5             \tmov    %rsp,%rbp\n  40524e:\t48 83 ec 40          \tsub    $0x40,%rsp\n  405252:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n  405256:\te8 56 0d 00 00       \tcallq  405fb1 <clock_time>\n  40525b:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  40525f:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  405263:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n  405267:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  40526b:\t48 89 d1             \tmov    %rdx,%rcx\n  40526e:\t48 29 c1             \tsub    %rax,%rcx\n  405271:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  405275:\t48 8b 70 10          \tmov    0x10(%rax),%rsi\n  405279:\t48 89 c8             \tmov    %rcx,%rax\n  40527c:\tba 00 00 00 00       \tmov    $0x0,%edx\n  405281:\t48 f7 f6             \tdiv    %rsi\n  405284:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  405287:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  40528b:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n  40528f:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  405293:\t48 29 c2             \tsub    %rax,%rdx\n  405296:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  40529a:\t48 8b 48 10          \tmov    0x10(%rax),%rcx\n  40529e:\t48 89 d0             \tmov    %rdx,%rax\n  4052a1:\tba 00 00 00 00       \tmov    $0x0,%edx\n  4052a6:\t48 f7 f1             \tdiv    %rcx\n  4052a9:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n  4052ad:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4052b1:\t48 2b 45 e8          \tsub    -0x18(%rbp),%rax\n  4052b5:\t48 89 c2             \tmov    %rax,%rdx\n  4052b8:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  4052bc:\t48 89 50 18          \tmov    %rdx,0x18(%rax)\n  4052c0:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n  4052c3:\t48 8d 45 dc          \tlea    -0x24(%rbp),%rax\n  4052c7:\t89 d6                \tmov    %edx,%esi\n  4052c9:\t48 89 c7             \tmov    %rax,%rdi\n  4052cc:\te8 42 00 00 00       \tcallq  405313 <stimeval_copy_stime>\n  4052d1:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  4052d5:\t48 8d 55 dc          \tlea    -0x24(%rbp),%rdx\n  4052d9:\t48 89 d6             \tmov    %rdx,%rsi\n  4052dc:\t48 89 c7             \tmov    %rax,%rdi\n  4052df:\te8 cf 00 00 00       \tcallq  4053b3 <stimeval_cat>\n  4052e4:\t90                   \tnop\n  4052e5:\tc9                   \tleaveq \n  4052e6:\tc3                   \tretq   ", "code_s": "__int64 __fastcall sclock_update(__int64 a1) {\n  char v3[Number];\n  unsigned __int64 v4;\n  unsigned int v5;\n  __int64 v6;\n  v6 = clock_time();\n  v5 = (unsigned __int64)(v6 - *(_QWORD *)(a1 + Number)) /\n       *(_QWORD *)(a1 + Number);\n  v4 = (unsigned __int64)(v6 - *(_QWORD *)(a1 + Number)) %\n       *(_QWORD *)(a1 + Number);\n  *(_QWORD *)(a1 + Number) = v6 - v4;\n  stimeval_copy_stime(v3, v5);\n  return stimeval_cat(a1, v3);\n}", "code_t": "void __cdecl sclock_update(sclock *sc) {\n  stimeval <span class=\"supfact\">st_calc</span>;\n  clock_time_t remain;\n  stime_t calc;\n  clock_time_t now_tick;\n  now_tick = clock_time();\n  calc = (now_tick - sc->last_tick) / sc->slope;\n  remain = (now_tick - sc->last_tick) % sc->slope;\n  sc->last_tick = now_tick - remain;\n  stimeval_copy_stime(&<span class=\"supfact\">st_calc</span>, calc);\n  stimeval_cat(&sc->now, &<span class=\"supfact\">st_calc</span>);\n}", "var": [{"name": "v3", "type": "_BYTE[12]", "pred_name": "ta", "ref_name": "st_calc", "ref_type": "struct stimeval { stime_t min; stime_t sec; stime_t msec; }"}], "body_in_train": false}, {"repo_owner": "dyladan", "repo_name": "dwm", "path": "dyladan/dwm/a396688e04253fe0c27221b96bf2ebff479cfd36fb5fad735290b598ace44795", "path_in_repo": "dyladan/dwm//dwm", "objdump": "", "code_s": "int sub_409056() {\n  int result;\n  XWindowAttributes v1;\n  Window *v2;\n  Window v3;\n  Window v4;\n  unsigned int v5;\n  unsigned int i;\n  v2 = Number L;\n  result = XQueryTree(display, qword_4101D0, &v4, &v3, &v2, &v5);\n  if (result) {\n    for (i = Number; i < v5; ++i) {\n      if (XGetWindowAttributes(display, v2[i], &v1) && !v1.override_redirect &&\n          !XGetTransientForHint(display, v2[i], &v4) &&\n          (v1.map_state == Number || sub_4070A9(v2[i]) == Number)) {\n        sub_40777D(v2[i], &v1);\n      }\n    }\n    for (i = Number; i < v5; ++i) {\n      if (XGetWindowAttributes(display, v2[i], &v1) &&\n          XGetTransientForHint(display, v2[i], &v4) &&\n          (v1.map_state == Number || sub_4070A9(v2[i]) == Number)) {\n        sub_40777D(v2[i], &v1);\n      }\n    }\n    result = (int)v2;\n    if (v2)\n      result = XFree(v2);\n  }\n  return result;\n}", "code_t": "int sub_409056() {\n  int result;\n  XWindowAttributes <span class=\"supfact\">v1</span>;\n  Window *v2;\n  Window v3;\n  Window v4;\n  unsigned int v5;\n  unsigned int i;\n  v2 = Number L;\n  result = XQueryTree(display, qword_4101D0, &v4, &v3, &v2, &v5);\n  if (result) {\n    for (i = Number; i < v5; ++i) {\n      if (XGetWindowAttributes(display, v2[i], &<span class=\"supfact\">v1</span>) &&\n          !<span class=\"supfact\">v1</span>.override_redirect &&\n          !XGetTransientForHint(display, v2[i], &v4) &&\n          (<span class=\"supfact\">v1</span>.map_state == Number ||\n           sub_4070A9(v2[i]) == Number)) {\n        sub_40777D(v2[i], &<span class=\"supfact\">v1</span>);\n      }\n    }\n    for (i = Number; i < v5; ++i) {\n      if (XGetWindowAttributes(display, v2[i], &<span class=\"supfact\">v1</span>) &&\n          XGetTransientForHint(display, v2[i], &v4) &&\n          (<span class=\"supfact\">v1</span>.map_state == Number ||\n           sub_4070A9(v2[i]) == Number)) {\n        sub_40777D(v2[i], &<span class=\"supfact\">v1</span>);\n      }\n    }\n    result = (int)v2;\n    if (v2)\n      result = XFree(v2);\n  }\n  return result;\n}", "var": [{"name": "v1", "type": "struct XWindowAttributes { int x; int y; int width; int height; int border_width; int depth; Visual * visual; Window root; int c_class; int bit_gravity; int win_gravity; int backing_store; unsigned __int64 backing_planes; unsigned __int64 backing_pixel; int save_under; PADDING (4); Colormap colormap; int map_installed; int map_state; __int64 all_event_masks; __int64 your_event_mask; __int64 do_not_propagate_mask; int override_redirect; PADDING (4); Screen * screen; }", "pred_name": "v1", "ref_name": "v1", "ref_type": "struct XWindowAttributes { int x; int y; int width; int height; int border_width; int depth; Visual * visual; Window root; int c_class; int bit_gravity; int win_gravity; int backing_store; unsigned __int64 backing_planes; unsigned __int64 backing_pixel; int save_under; PADDING (4); Colormap colormap; int map_installed; int map_state; __int64 all_event_masks; __int64 your_event_mask; __int64 do_not_propagate_mask; int override_redirect; PADDING (4); Screen * screen; }"}], "body_in_train": false}, {"repo_owner": "ADoby", "repo_name": "Project_Space_Pirate", "path": "ADoby/Project_Space_Pirate/f6db2d22876e7920bf4d603ff24e3aff4895d1414ed2c0203fa76d810fd17ae3", "path_in_repo": "ADoby/Project_Space_Pirate/ProjectFiles/extensions/proj.linux/obj/release/CCBReader/CCLabelTTFLoader.o", "objdump": "0000000000000000 <_GLOBAL__sub_I_CCLabelTTFLoader.cpp.cold>:\n   0:\t48 8b 35 00 00 00 00 \tmov    0x0(%rip),%rsi        # 7 <_GLOBAL__sub_I_CCLabelTTFLoader.cpp.cold+0x7>\n   7:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # e <_GLOBAL__sub_I_CCLabelTTFLoader.cpp.cold+0xe>\n   e:\te8 00 00 00 00       \tcallq  13 <_GLOBAL__sub_I_CCLabelTTFLoader.cpp.cold+0x13>\n  13:\t48 89 ef             \tmov    %rbp,%rdi\n  16:\te8 00 00 00 00       \tcallq  1b <.LC4+0x3>", "code_s": "void __fastcall __noreturn GLOBAL__sub_I_CCLabelTTFLoader_cpp_cold() {\n  struct _Unwind_Exception *v0;\n  std _Rb_tree<cocos2d Texture2D PixelFormat,\n               std pair<cocos2d Texture2D PixelFormat const,\n                        cocos2d TexturePixelFormatInfo const>,\n               std _Select1st<std pair<cocos2d Texture2D PixelFormat const,\n                                       cocos2d TexturePixelFormatInfo const>>,\n               std less<cocos2d Texture2D PixelFormat>,\n               std allocator<std pair<cocos2d Texture2D PixelFormat const,\n                                      cocos2d TexturePixelFormatInfo const>>>\n  _M_erase((__int64)&cocos2d g_texturePixelFormatInfoTables,\n           (_QWORD *)qword_350);\n  Unwind_Resume(v0);\n}", "code_t": "void __fastcall __noreturn GLOBAL__sub_I_CCLabelTTFLoader_cpp_cold() {\n  struct _Unwind_Exception *<span class=\"supfact\">v0</span>;\n  std _Rb_tree<cocos2d Texture2D PixelFormat,\n               std pair<cocos2d Texture2D PixelFormat const,\n                        cocos2d TexturePixelFormatInfo const>,\n               std _Select1st<std pair<cocos2d Texture2D PixelFormat const,\n                                       cocos2d TexturePixelFormatInfo const>>,\n               std less<cocos2d Texture2D PixelFormat>,\n               std allocator<std pair<cocos2d Texture2D PixelFormat const,\n                                      cocos2d TexturePixelFormatInfo const>>>\n  _M_erase((__int64)&cocos2d g_texturePixelFormatInfoTables,\n           (_QWORD *)qword_350);\n  Unwind_Resume(<span class=\"supfact\">v0</span>);\n}", "var": [{"name": "v0", "type": "struct _Unwind_Exception *", "pred_name": "v0", "ref_name": "v0", "ref_type": "struct _Unwind_Exception *"}], "body_in_train": false}, {"repo_owner": "michg", "repo_name": "riscv32_lcc", "path": "michg/riscv32_lcc/646b13186c8300e709b4f565d1dba665681fff4e86c21776a92d87e85bd0e1f9", "path_in_repo": "michg/riscv32_lcc/binutils/as/as.o", "objdump": "0000000000002bfe <dotLoc>:\n    2bfe:\t55                   \tpush   %rbp\n    2bff:\t48 89 e5             \tmov    %rsp,%rbp\n    2c02:\t48 83 ec 70          \tsub    $0x70,%rsp\n    2c06:\t89 7d bc             \tmov    %edi,-0x44(%rbp)\n    2c09:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n    2c0d:\t48 89 c7             \tmov    %rax,%rdi\n    2c10:\te8 00 00 00 00       \tcallq  2c15 <dotLoc+0x17>\n    2c15:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    2c19:\t48 85 c0             \ttest   %rax,%rax\n    2c1c:\t74 17                \tje     2c35 <dotLoc+0x37>\n    2c1e:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2c24 <dotLoc+0x26>\n    2c24:\t89 c6                \tmov    %eax,%esi\n    2c26:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    2c2b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2c30:\te8 00 00 00 00       \tcallq  2c35 <dotLoc+0x37>\n    2c35:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    2c39:\t48 89 c7             \tmov    %rax,%rdi\n    2c3c:\te8 00 00 00 00       \tcallq  2c41 <dotLoc+0x43>\n    2c41:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    2c45:\t48 8b 55 98          \tmov    -0x68(%rbp),%rdx\n    2c49:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    2c4d:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n    2c51:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    2c55:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    2c59:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    2c5d:\t48 85 c0             \ttest   %rax,%rax\n    2c60:\t74 17                \tje     2c79 <dotLoc+0x7b>\n    2c62:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2c68 <dotLoc+0x6a>\n    2c68:\t89 c6                \tmov    %eax,%esi\n    2c6a:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    2c6f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2c74:\te8 00 00 00 00       \tcallq  2c79 <dotLoc+0x7b>\n    2c79:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2c7f <dotLoc+0x81>\n    2c7f:\t85 c0                \ttest   %eax,%eax\n    2c81:\t74 2c                \tje     2caf <dotLoc+0xb1>\n    2c83:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    2c87:\t48 89 c7             \tmov    %rax,%rdi\n    2c8a:\te8 00 00 00 00       \tcallq  2c8f <dotLoc+0x91>\n    2c8f:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    2c93:\t48 85 c0             \ttest   %rax,%rax\n    2c96:\t74 17                \tje     2caf <dotLoc+0xb1>\n    2c98:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2c9e <dotLoc+0xa0>\n    2c9e:\t89 c6                \tmov    %eax,%esi\n    2ca0:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    2ca5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2caa:\te8 00 00 00 00       \tcallq  2caf <dotLoc+0xb1>\n    2caf:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2cb5 <dotLoc+0xb7>\n    2cb5:\t85 c0                \ttest   %eax,%eax\n    2cb7:\t74 79                \tje     2d32 <dotLoc+0x134>\n    2cb9:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n    2cbc:\t89 c1                \tmov    %eax,%ecx\n    2cbe:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2cc3:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2cc8:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    2ccd:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2cd2:\te8 00 00 00 00       \tcallq  2cd7 <dotLoc+0xd9>\n    2cd7:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2cdc:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2ce1:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    2ce6:\te8 00 00 00 00       \tcallq  2ceb <dotLoc+0xed>\n    2ceb:\t48 89 c7             \tmov    %rax,%rdi\n    2cee:\te8 00 00 00 00       \tcallq  2cf3 <dotLoc+0xf5>\n    2cf3:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    2cf7:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2cfb:\tc7 40 08 01 00 00 00 \tmovl   $0x1,0x8(%rax)\n    2d02:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # 2d08 <dotLoc+0x10a>\n    2d08:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2d0c:\t89 50 0c             \tmov    %edx,0xc(%rax)\n    2d0f:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2d15 <dotLoc+0x117>\n    2d15:\t48 98                \tcltq   \n    2d17:\t8b 04 85 00 00 00 00 \tmov    0x0(,%rax,4),%eax\n    2d1e:\t89 c2                \tmov    %eax,%edx\n    2d20:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2d24:\t89 50 10             \tmov    %edx,0x10(%rax)\n    2d27:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2d2b:\tc7 40 3c 01 00 00 00 \tmovl   $0x1,0x3c(%rax)\n    2d32:\t90                   \tnop\n    2d33:\tc9                   \tleaveq \n    2d34:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall dotLoc(int a1, __int64 a2, __int64 a3, __int64 a4,\n                                   __int64 a5, __int64 a6) {\n  __int64 v6;\n  __int64 v7;\n  __int64 v8;\n  __int64 v9;\n  __int64 v10;\n  __int64 v11;\n  __int64 v12;\n  __int64 v13;\n  __int64 v14;\n  __int64 v15;\n  __int64 v16;\n  unsigned __int64 result;\n  char **v18;\n  __int64 v19;\n  __int64 v20;\n  __int64 v21;\n  int v22;\n  _QWORD v23[Number];\n  __int64 v24[Number];\n  __int64 v25;\n  _DWORD *v26;\n  v22 = a1;\n  parseExpression(v24, a2, a3, a4, a5, a6);\n  if (v25)\n    error(String, (unsigned int)lineno, v6, v7, v8, v9);\n  parseExpression(&v19, a2, v6, v7, v8, v9);\n  v24[Number] = v19;\n  v24[Number] = v20;\n  v25 = v21;\n  if (v21)\n    error(String, (unsigned int)lineno, v20, v10, v11, v12);\n  if (token) {\n    parseExpression(v23, a2, v20, v10, v11, v12);\n    if (v23[Number])\n      error(String, (unsigned int)lineno, v13, v14, v15, v16);\n  }\n  result = (unsigned int)debug;\n  if (debug) {\n    sprintf(debuglabel, String, &srcfileName, LODWORD(v24[Number]));\n    v18 = lookupEnter(debuglabel, Number, Number);\n    v26 = (_DWORD *)deref((__int64)v18);\n    v26[Number] = Number;\n    v26[Number] = currSeg;\n    v26[Number] = segPtr[currSeg];\n    result = (unsigned __int64)v26;\n    v26[Number] = Number;\n  }\n  return result;\n}", "code_t": "void __cdecl dotLoc(unsigned int code) {\n  Symbol *v1;\n  Value <span class=\"supfact\">v2</span>;\n  unsigned int codea;\n  Value <span class=\"supfact\">w</span>;\n  Value <span class=\"supfact\">v</span>;\n  Symbol *label;\n  codea = code;\n  parseExpression(&<span class=\"supfact\">v</span>);\n  if (<span class=\"supfact\">v</span>.sym)\n    error(String, (unsigned int)lineno);\n  parseExpression(&<span class=\"supfact\">v2</span>);\n  <span class=\"supfact\">v</span> = <span class=\"supfact\">v2</span>;\n  if (<span class=\"supfact\">v2</span>.sym)\n    error(String, (unsigned int)lineno);\n  if (token) {\n    parseExpression(&<span class=\"supfact\">w</span>);\n    if (<span class=\"supfact\">w</span>.sym)\n      error(String, (unsigned int)lineno);\n  }\n  if (debug) {\n    sprintf(debuglabel, String, srcfileName,\n            (unsigned int)<span class=\"supfact\">v</span>.con);\n    v1 = lookupEnter(debuglabel, Number, Number);\n    label = deref(v1);\n    label->status = Number;\n    label->segment = currSeg;\n    label->value = segPtr[currSeg];\n    label->debug = Number;\n  }\n}", "var": [{"name": "v19", "type": "disappear", "pred_name": "", "ref_name": "v2", "ref_type": "struct Value { int con; PADDING (4); __int64 lcon; Symbol * sym; }"}, {"name": "v23", "type": "__unk__", "pred_name": "type", "ref_name": "w", "ref_type": "struct Value { int con; PADDING (4); __int64 lcon; Symbol * sym; }"}, {"name": "v24", "type": "__unk__", "pred_name": "bin", "ref_name": "v", "ref_type": "struct Value { int con; PADDING (4); __int64 lcon; Symbol * sym; }"}], "body_in_train": false}, {"repo_owner": "isDerek", "repo_name": "BTC-Device", "path": "isDerek/BTC-Device/9eb5bdb0143a63b31132ea31d83410eefa0b801b31f29f5ffc43fd093e6ca1ae", "path_in_repo": "isDerek/BTC-Device/BTC_APP/middleware/multicore/erpc/Debug/Linux/erpcsniffer/obj/erpcgen/src/types/Type.o", "objdump": "0000000000000000 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPPN7erpcgen6SymbolEES6_EET0_T_S9_S8_>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 83 ec 20          \tsub    $0x20,%rsp\n   8:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n   c:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n  10:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n  14:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  18:\t48 8b 4d f0          \tmov    -0x10(%rbp),%rcx\n  1c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  20:\t48 89 ce             \tmov    %rcx,%rsi\n  23:\t48 89 c7             \tmov    %rax,%rdi\n  26:\te8 00 00 00 00       \tcallq  2b <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPPN7erpcgen6SymbolEES6_EET0_T_S9_S8_+0x2b>\n  2b:\tc9                   \tleaveq \n  2c:\tc3                   \tretq   ", "code_s": "__int64 __fastcall std __uninitialized_copy<true>\n__uninit_copy<std move_iterator<erpcgen Symbol **>, erpcgen Symbol **>(\n    __int64 a1, __int64 a2, __int64 a3) {\n  return std copy<std move_iterator<erpcgen Symbol **>, erpcgen Symbol **>(\n      a1, a2, a3);\n}", "code_t": "erpcgen Symbol **__cdecl std __uninitialized_copy<true>\n__uninit_copy<std move_iterator<erpcgen Symbol **>, erpcgen Symbol **>(\n    std move_iterator<erpcgen Symbol **> <span class=\"supfact\">__first</span>,\n    std move_iterator<erpcgen Symbol **> <span class=\"supfact\">__last</span>,\n    erpcgen Symbol **__result) {\n  return std copy<std move_iterator<erpcgen Symbol **>, erpcgen Symbol **>(\n      <span class=\"supfact\">__first</span>, <span class=\"supfact\">__last</span>, __result);\n}", "var": [{"name": "a1", "type": "std::_Vector_base<erpcgen::Symbol*> *", "pred_name": "__first", "ref_name": "__first", "ref_type": "struct std::move_iterator<erpcgen::Symbol**> { erpcgen::Symbol ** _M_current; }"}, {"name": "a2", "type": "struct std::move_iterator<nlohmann::basic_json<std::map,std::vector,std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,long int,long unsigned int,double,std::allocator,nlohmann::adl_serializer>*> { nlohmann::basic_json<std::map,std::vector,std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >,bool,long int,long unsigned int,double,std::allocator,nlohmann::adl_serializer> * _M_current; }", "pred_name": "__last", "ref_name": "__last", "ref_type": "struct std::move_iterator<erpcgen::Symbol**> { erpcgen::Symbol ** _M_current; }"}], "body_in_train": false}, {"repo_owner": "v4o6", "repo_name": "cpsc314", "path": "v4o6/cpsc314/a25c6f651200c99b5d3b2a5b5317b70c75a4cab6d83283e756e97ad31a5762e2", "path_in_repo": "v4o6/cpsc314/template_clean/a3", "objdump": "000000000040495c <_Z8myVertexddd>:\n  40495c:\t55                   \tpush   %rbp\n  40495d:\t48 89 e5             \tmov    %rsp,%rbp\n  404960:\t48 81 ec 60 01 00 00 \tsub    $0x160,%rsp\n  404967:\tf2 0f 11 85 b8 fe ff \tmovsd  %xmm0,-0x148(%rbp)\n  40496e:\tff \n  40496f:\tf2 0f 11 8d b0 fe ff \tmovsd  %xmm1,-0x150(%rbp)\n  404976:\tff \n  404977:\tf2 0f 11 95 a8 fe ff \tmovsd  %xmm2,-0x158(%rbp)\n  40497e:\tff \n  40497f:\tf2 0f 10 15 f9 59 01 \tmovsd  0x159f9(%rip),%xmm2        # 41a380 <_ZStL6ignore+0x1de>\n  404986:\t00 \n  404987:\tf2 0f 10 8d a8 fe ff \tmovsd  -0x158(%rbp),%xmm1\n  40498e:\tff \n  40498f:\tf2 0f 10 85 b0 fe ff \tmovsd  -0x150(%rbp),%xmm0\n  404996:\tff \n  404997:\t48 8b 95 b8 fe ff ff \tmov    -0x148(%rbp),%rdx\n  40499e:\t48 8d 85 e0 fe ff ff \tlea    -0x120(%rbp),%rax\n  4049a5:\t66 0f 28 da          \tmovapd %xmm2,%xmm3\n  4049a9:\t66 0f 28 d1          \tmovapd %xmm1,%xmm2\n  4049ad:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  4049b1:\t66 48 0f 6e c2       \tmovq   %rdx,%xmm0\n  4049b6:\t48 89 c7             \tmov    %rax,%rdi\n  4049b9:\te8 36 ad 00 00       \tcallq  40f6f4 <_ZN6VectorC1Edddd>\n  4049be:\tf2 0f 10 05 72 fd 01 \tmovsd  0x1fd72(%rip),%xmm0        # 424738 <currentTextureCoord+0x8>\n  4049c5:\t00 \n  4049c6:\t48 8b 15 63 fd 01 00 \tmov    0x1fd63(%rip),%rdx        # 424730 <currentTextureCoord>\n  4049cd:\t48 8d 85 c0 fe ff ff \tlea    -0x140(%rbp),%rax\n  4049d4:\t66 0f ef db          \tpxor   %xmm3,%xmm3\n  4049d8:\t66 0f ef d2          \tpxor   %xmm2,%xmm2\n  4049dc:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n  4049e0:\t66 48 0f 6e c2       \tmovq   %rdx,%xmm0\n  4049e5:\t48 89 c7             \tmov    %rax,%rdi\n  4049e8:\te8 07 ad 00 00       \tcallq  40f6f4 <_ZN6VectorC1Edddd>\n  4049ed:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n  4049f1:\tbe 00 47 42 00       \tmov    $0x424700,%esi\n  4049f6:\t48 89 c7             \tmov    %rax,%rdi\n  4049f9:\te8 4c ad 00 00       \tcallq  40f74a <_ZN6VectorC1ERKS_>\n  4049fe:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  404a02:\tbe 40 47 42 00       \tmov    $0x424740,%esi\n  404a07:\t48 89 c7             \tmov    %rax,%rdi\n  404a0a:\te8 3b ad 00 00       \tcallq  40f74a <_ZN6VectorC1ERKS_>\n  404a0f:\t48 8d 95 c0 fe ff ff \tlea    -0x140(%rbp),%rdx\n  404a16:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  404a1a:\t48 89 d6             \tmov    %rdx,%rsi\n  404a1d:\t48 89 c7             \tmov    %rax,%rdi\n  404a20:\te8 25 ad 00 00       \tcallq  40f74a <_ZN6VectorC1ERKS_>\n  404a25:\t48 8d 95 e0 fe ff ff \tlea    -0x120(%rbp),%rdx\n  404a2c:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  404a30:\t48 89 d6             \tmov    %rdx,%rsi\n  404a33:\t48 89 c7             \tmov    %rax,%rdi\n  404a36:\te8 0f ad 00 00       \tcallq  40f74a <_ZN6VectorC1ERKS_>\n  404a3b:\t48 8d 7d 80          \tlea    -0x80(%rbp),%rdi\n  404a3f:\t48 8d 4d a0          \tlea    -0x60(%rbp),%rcx\n  404a43:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n  404a47:\t48 8d 75 e0          \tlea    -0x20(%rbp),%rsi\n  404a4b:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n  404a52:\t49 89 f8             \tmov    %rdi,%r8\n  404a55:\t48 89 c7             \tmov    %rax,%rdi\n  404a58:\te8 1f 54 00 00       \tcallq  409e7c <_ZN6VertexC1E6VectorS0_S0_S0_>\n  404a5d:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n  404a64:\t48 89 c6             \tmov    %rax,%rsi\n  404a67:\tbf a0 47 42 00       \tmov    $0x4247a0,%edi\n  404a6c:\te8 fd 58 00 00       \tcallq  40a36e <_ZNSt6vectorI6VertexSaIS0_EE9push_backEOS0_>\n  404a71:\t90                   \tnop\n  404a72:\tc9                   \tleaveq \n  404a73:\tc3                   \tretq   ", "code_s": "__int64 __fastcall myVertex(double a1, double a2, double a3) {\n  char v4[Number];\n  char v5[Number];\n  char v6[Number];\n  char v7[Number];\n  char v8[Number];\n  char v9[Number];\n  char v10[Number];\n  Vector Vector((Vector *)v5, a1, a2, a3, Number);\n  Vector Vector((Vector *)v4, currentTextureCoord, qword_424738, Number,\n                Number);\n  Vector Vector((Vector *)v7, (const Vector *)&currentColor);\n  Vector Vector((Vector *)v8, (const Vector *)&currentNormal);\n  Vector Vector((Vector *)v9, (const Vector *)v4);\n  Vector Vector((Vector *)v10, (const Vector *)v5);\n  Vertex Vertex(v6, v10, v9, v8, v7);\n  return std vector<Vertex> push_back(&currentVertices, v6);\n}", "code_t": "void __cdecl myVertex(double x, double y, double z) {\n  Vector <span class=\"supfact\">texture_coord</span>;\n  Vector <span class=\"supfact\">position</span>;\n  Vertex <span class=\"supfact\">__x</span>;\n  Vector <span class=\"supfact\">p_color</span>;\n  Vector <span class=\"supfact\">p_normal</span>;\n  Vector <span class=\"supfact\">p_texture_coord</span>;\n  Vector <span class=\"supfact\">p_position</span>;\n  Vector Vector(&<span class=\"supfact\">position</span>, x, y, z, Number);\n  Vector Vector(&<span class=\"supfact\">texture_coord</span>, currentTextureCoord[Number],\n                currentTextureCoord[Number], Number, Number);\n  Vector Vector(&<span class=\"supfact\">p_color</span>, &currentColor);\n  Vector Vector(&<span class=\"supfact\">p_normal</span>, &currentNormal);\n  Vector Vector(&<span class=\"supfact\">p_texture_coord</span>,\n                &<span class=\"supfact\">texture_coord</span>);\n  Vector Vector(&<span class=\"supfact\">p_position</span>, &<span class=\"supfact\">position</span>);\n  Vertex Vertex(&<span class=\"supfact\">__x</span>, &<span class=\"supfact\">p_position</span>,\n                &<span class=\"supfact\">p_texture_coord</span>, &<span class=\"supfact\">p_normal</span>,\n                &<span class=\"supfact\">p_color</span>);\n  std vector<Vertex> push_back(&currentVertices, &<span class=\"supfact\">__x</span>);\n}", "var": [{"name": "v4", "type": "char[32]", "pred_name": "v4", "ref_name": "texture_coord", "ref_type": "struct Vector { double[4] data_; }"}, {"name": "v5", "type": "char[32]", "pred_name": "v5", "ref_name": "position", "ref_type": "struct Vector { double[4] data_; }"}, {"name": "v6", "type": "char[128]", "pred_name": "v6", "ref_name": "__x", "ref_type": "struct Vertex { Vector position; Vector texture_coord; Vector normal; Vector color; }"}, {"name": "v7", "type": "char[32]", "pred_name": "v7", "ref_name": "p_color", "ref_type": "struct Vector { double[4] data_; }"}, {"name": "v8", "type": "char[32]", "pred_name": "v8", "ref_name": "p_normal", "ref_type": "struct Vector { double[4] data_; }"}, {"name": "v9", "type": "char[32]", "pred_name": "v9", "ref_name": "p_texture_coord", "ref_type": "struct Vector { double[4] data_; }"}, {"name": "v10", "type": "char[32]", "pred_name": "v10", "ref_name": "p_position", "ref_type": "struct Vector { double[4] data_; }"}], "body_in_train": false}, {"repo_owner": "lspss9950101", "repo_name": "Database_Course", "path": "lspss9950101/Database_Course/1f0f8d1a998134055c126d9a7f529efb3400589b0957b303bbfab3d24cb9e0bb", "path_in_repo": "lspss9950101/Database_Course/HW3_sad/0716020/shell", "objdump": "000000000040279b <where_state_handler>:\n  40279b:\t55                   \tpush   %rbp\n  40279c:\t48 89 e5             \tmov    %rsp,%rbp\n  40279f:\t48 83 ec 50          \tsub    $0x50,%rsp\n  4027a3:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n  4027a7:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n  4027ab:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  4027af:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  4027b3:\t48 39 45 b0          \tcmp    %rax,-0x50(%rbp)\n  4027b7:\t0f 83 6c 04 00 00    \tjae    402c29 <where_state_handler+0x48e>\n  4027bd:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n  4027c4:\t00 \n  4027c5:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  4027c9:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  4027cd:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  4027d1:\t48 c1 e2 03          \tshl    $0x3,%rdx\n  4027d5:\t48 01 d0             \tadd    %rdx,%rax\n  4027d8:\t48 8b 00             \tmov    (%rax),%rax\n  4027db:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  4027df:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4027e3:\tba 02 00 00 00       \tmov    $0x2,%edx\n  4027e8:\tbe 4e 60 40 00       \tmov    $0x40604e,%esi\n  4027ed:\t48 89 c7             \tmov    %rax,%rdi\n  4027f0:\te8 6b e8 ff ff       \tcallq  401060 <strncmp@plt>\n  4027f5:\t85 c0                \ttest   %eax,%eax\n  4027f7:\t75 1f                \tjne    402818 <where_state_handler+0x7d>\n  4027f9:\t48 83 45 f8 02       \taddq   $0x2,-0x8(%rbp)\n  4027fe:\tc7 45 f4 01 00 00 00 \tmovl   $0x1,-0xc(%rbp)\n  402805:\tbf 4e 60 40 00       \tmov    $0x40604e,%edi\n  40280a:\te8 d1 e9 ff ff       \tcallq  4011e0 <strdup@plt>\n  40280f:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n  402813:\te9 a0 00 00 00       \tjmpq   4028b8 <where_state_handler+0x11d>\n  402818:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40281c:\tba 04 00 00 00       \tmov    $0x4,%edx\n  402821:\tbe 51 60 40 00       \tmov    $0x406051,%esi\n  402826:\t48 89 c7             \tmov    %rax,%rdi\n  402829:\te8 32 e8 ff ff       \tcallq  401060 <strncmp@plt>\n  40282e:\t85 c0                \ttest   %eax,%eax\n  402830:\t75 1c                \tjne    40284e <where_state_handler+0xb3>\n  402832:\t48 83 45 f8 04       \taddq   $0x4,-0x8(%rbp)\n  402837:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n  40283e:\tbf 51 60 40 00       \tmov    $0x406051,%edi\n  402843:\te8 98 e9 ff ff       \tcallq  4011e0 <strdup@plt>\n  402848:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n  40284c:\teb 6a                \tjmp    4028b8 <where_state_handler+0x11d>\n  40284e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  402852:\tba 05 00 00 00       \tmov    $0x5,%edx\n  402857:\tbe 56 60 40 00       \tmov    $0x406056,%esi\n  40285c:\t48 89 c7             \tmov    %rax,%rdi\n  40285f:\te8 fc e7 ff ff       \tcallq  401060 <strncmp@plt>\n  402864:\t85 c0                \ttest   %eax,%eax\n  402866:\t75 1c                \tjne    402884 <where_state_handler+0xe9>\n  402868:\t48 83 45 f8 05       \taddq   $0x5,-0x8(%rbp)\n  40286d:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n  402874:\tbf 56 60 40 00       \tmov    $0x406056,%edi\n  402879:\te8 62 e9 ff ff       \tcallq  4011e0 <strdup@plt>\n  40287e:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n  402882:\teb 34                \tjmp    4028b8 <where_state_handler+0x11d>\n  402884:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  402888:\tba 03 00 00 00       \tmov    $0x3,%edx\n  40288d:\tbe 5c 60 40 00       \tmov    $0x40605c,%esi\n  402892:\t48 89 c7             \tmov    %rax,%rdi\n  402895:\te8 c6 e7 ff ff       \tcallq  401060 <strncmp@plt>\n  40289a:\t85 c0                \ttest   %eax,%eax\n  40289c:\t75 1a                \tjne    4028b8 <where_state_handler+0x11d>\n  40289e:\t48 83 45 f8 03       \taddq   $0x3,-0x8(%rbp)\n  4028a3:\tc7 45 f4 01 00 00 00 \tmovl   $0x1,-0xc(%rbp)\n  4028aa:\tbf 5c 60 40 00       \tmov    $0x40605c,%edi\n  4028af:\te8 2c e9 ff ff       \tcallq  4011e0 <strdup@plt>\n  4028b4:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n  4028b8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4028bc:\t48 89 c7             \tmov    %rax,%rdi\n  4028bf:\te8 ec e7 ff ff       \tcallq  4010b0 <strlen@plt>\n  4028c4:\t48 39 45 f8          \tcmp    %rax,-0x8(%rbp)\n  4028c8:\t72 27                \tjb     4028f1 <where_state_handler+0x156>\n  4028ca:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  4028ce:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  4028d2:\t48 83 45 b0 01       \taddq   $0x1,-0x50(%rbp)\n  4028d7:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  4028db:\t48 c1 e2 03          \tshl    $0x3,%rdx\n  4028df:\t48 01 d0             \tadd    %rdx,%rax\n  4028e2:\t48 8b 00             \tmov    (%rax),%rax\n  4028e5:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  4028e9:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n  4028f0:\t00 \n  4028f1:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  4028f5:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4028f9:\t48 01 d0             \tadd    %rdx,%rax\n  4028fc:\t0f b6 10             \tmovzbl (%rax),%edx\n  4028ff:\t0f b6 05 86 37 00 00 \tmovzbl 0x3786(%rip),%eax        # 40608c <_IO_stdin_used+0x8c>\n  402906:\t0f b6 d2             \tmovzbl %dl,%edx\n  402909:\t0f b6 c0             \tmovzbl %al,%eax\n  40290c:\t29 c2                \tsub    %eax,%edx\n  40290e:\t89 d0                \tmov    %edx,%eax\n  402910:\t85 c0                \ttest   %eax,%eax\n  402912:\t75 11                \tjne    402925 <where_state_handler+0x18a>\n  402914:\t48 83 45 f8 01       \taddq   $0x1,-0x8(%rbp)\n  402919:\tc7 45 c8 01 00 00 00 \tmovl   $0x1,-0x38(%rbp)\n  402920:\te9 f3 00 00 00       \tjmpq   402a18 <where_state_handler+0x27d>\n  402925:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  402929:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40292d:\t48 01 d0             \tadd    %rdx,%rax\n  402930:\tba 02 00 00 00       \tmov    $0x2,%edx\n  402935:\tbe 8e 60 40 00       \tmov    $0x40608e,%esi\n  40293a:\t48 89 c7             \tmov    %rax,%rdi\n  40293d:\te8 1e e7 ff ff       \tcallq  401060 <strncmp@plt>\n  402942:\t85 c0                \ttest   %eax,%eax\n  402944:\t75 11                \tjne    402957 <where_state_handler+0x1bc>\n  402946:\t48 83 45 f8 02       \taddq   $0x2,-0x8(%rbp)\n  40294b:\tc7 45 c8 02 00 00 00 \tmovl   $0x2,-0x38(%rbp)\n  402952:\te9 c1 00 00 00       \tjmpq   402a18 <where_state_handler+0x27d>\n  402957:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  40295b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40295f:\t48 01 d0             \tadd    %rdx,%rax\n  402962:\tba 02 00 00 00       \tmov    $0x2,%edx\n  402967:\tbe 91 60 40 00       \tmov    $0x406091,%esi\n  40296c:\t48 89 c7             \tmov    %rax,%rdi\n  40296f:\te8 ec e6 ff ff       \tcallq  401060 <strncmp@plt>\n  402974:\t85 c0                \ttest   %eax,%eax\n  402976:\t75 11                \tjne    402989 <where_state_handler+0x1ee>\n  402978:\t48 83 45 f8 02       \taddq   $0x2,-0x8(%rbp)\n  40297d:\tc7 45 c8 05 00 00 00 \tmovl   $0x5,-0x38(%rbp)\n  402984:\te9 8f 00 00 00       \tjmpq   402a18 <where_state_handler+0x27d>\n  402989:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  40298d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  402991:\t48 01 d0             \tadd    %rdx,%rax\n  402994:\tba 02 00 00 00       \tmov    $0x2,%edx\n  402999:\tbe 94 60 40 00       \tmov    $0x406094,%esi\n  40299e:\t48 89 c7             \tmov    %rax,%rdi\n  4029a1:\te8 ba e6 ff ff       \tcallq  401060 <strncmp@plt>\n  4029a6:\t85 c0                \ttest   %eax,%eax\n  4029a8:\t75 0e                \tjne    4029b8 <where_state_handler+0x21d>\n  4029aa:\t48 83 45 f8 02       \taddq   $0x2,-0x8(%rbp)\n  4029af:\tc7 45 c8 06 00 00 00 \tmovl   $0x6,-0x38(%rbp)\n  4029b6:\teb 60                \tjmp    402a18 <where_state_handler+0x27d>\n  4029b8:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  4029bc:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4029c0:\t48 01 d0             \tadd    %rdx,%rax\n  4029c3:\t0f b6 10             \tmovzbl (%rax),%edx\n  4029c6:\t0f b6 05 ca 36 00 00 \tmovzbl 0x36ca(%rip),%eax        # 406097 <_IO_stdin_used+0x97>\n  4029cd:\t0f b6 d2             \tmovzbl %dl,%edx\n  4029d0:\t0f b6 c0             \tmovzbl %al,%eax\n  4029d3:\t29 c2                \tsub    %eax,%edx\n  4029d5:\t89 d0                \tmov    %edx,%eax\n  4029d7:\t85 c0                \ttest   %eax,%eax\n  4029d9:\t75 0e                \tjne    4029e9 <where_state_handler+0x24e>\n  4029db:\t48 83 45 f8 01       \taddq   $0x1,-0x8(%rbp)\n  4029e0:\tc7 45 c8 03 00 00 00 \tmovl   $0x3,-0x38(%rbp)\n  4029e7:\teb 2f                \tjmp    402a18 <where_state_handler+0x27d>\n  4029e9:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  4029ed:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4029f1:\t48 01 d0             \tadd    %rdx,%rax\n  4029f4:\t0f b6 10             \tmovzbl (%rax),%edx\n  4029f7:\t0f b6 05 9b 36 00 00 \tmovzbl 0x369b(%rip),%eax        # 406099 <_IO_stdin_used+0x99>\n  4029fe:\t0f b6 d2             \tmovzbl %dl,%edx\n  402a01:\t0f b6 c0             \tmovzbl %al,%eax\n  402a04:\t29 c2                \tsub    %eax,%edx\n  402a06:\t89 d0                \tmov    %edx,%eax\n  402a08:\t85 c0                \ttest   %eax,%eax\n  402a0a:\t75 0c                \tjne    402a18 <where_state_handler+0x27d>\n  402a0c:\t48 83 45 f8 01       \taddq   $0x1,-0x8(%rbp)\n  402a11:\tc7 45 c8 04 00 00 00 \tmovl   $0x4,-0x38(%rbp)\n  402a18:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  402a1c:\t48 89 c7             \tmov    %rax,%rdi\n  402a1f:\te8 8c e6 ff ff       \tcallq  4010b0 <strlen@plt>\n  402a24:\t48 39 45 f8          \tcmp    %rax,-0x8(%rbp)\n  402a28:\t72 27                \tjb     402a51 <where_state_handler+0x2b6>\n  402a2a:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402a2e:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  402a32:\t48 83 45 b0 01       \taddq   $0x1,-0x50(%rbp)\n  402a37:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  402a3b:\t48 c1 e2 03          \tshl    $0x3,%rdx\n  402a3f:\t48 01 d0             \tadd    %rdx,%rax\n  402a42:\t48 8b 00             \tmov    (%rax),%rax\n  402a45:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  402a49:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n  402a50:\t00 \n  402a51:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n  402a55:\t74 27                \tje     402a7e <where_state_handler+0x2e3>\n  402a57:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  402a5b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  402a5f:\t48 01 d0             \tadd    %rdx,%rax\n  402a62:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n  402a66:\t48 83 c2 10          \tadd    $0x10,%rdx\n  402a6a:\tbe 9b 60 40 00       \tmov    $0x40609b,%esi\n  402a6f:\t48 89 c7             \tmov    %rax,%rdi\n  402a72:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  402a77:\te8 d4 e6 ff ff       \tcallq  401150 <__isoc99_sscanf@plt>\n  402a7c:\teb 17                \tjmp    402a95 <where_state_handler+0x2fa>\n  402a7e:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  402a82:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  402a86:\t48 01 d0             \tadd    %rdx,%rax\n  402a89:\t48 89 c7             \tmov    %rax,%rdi\n  402a8c:\te8 4f e7 ff ff       \tcallq  4011e0 <strdup@plt>\n  402a91:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n  402a95:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  402a99:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  402a9d:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402aa1:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  402aa5:\t48 39 c2             \tcmp    %rax,%rdx\n  402aa8:\t73 1e                \tjae    402ac8 <where_state_handler+0x32d>\n  402aaa:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402aae:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  402ab2:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  402ab6:\t48 83 c2 01          \tadd    $0x1,%rdx\n  402aba:\t48 c1 e2 03          \tshl    $0x3,%rdx\n  402abe:\t48 01 d0             \tadd    %rdx,%rax\n  402ac1:\t48 8b 00             \tmov    (%rax),%rax\n  402ac4:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  402ac8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  402acc:\tba 03 00 00 00       \tmov    $0x3,%edx\n  402ad1:\tbe 9f 60 40 00       \tmov    $0x40609f,%esi\n  402ad6:\t48 89 c7             \tmov    %rax,%rdi\n  402ad9:\te8 82 e5 ff ff       \tcallq  401060 <strncmp@plt>\n  402ade:\t85 c0                \ttest   %eax,%eax\n  402ae0:\t75 39                \tjne    402b1b <where_state_handler+0x380>\n  402ae2:\t48 83 45 b0 01       \taddq   $0x1,-0x50(%rbp)\n  402ae7:\tc7 45 d8 01 00 00 00 \tmovl   $0x1,-0x28(%rbp)\n  402aee:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n  402af2:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402af6:\t48 89 d6             \tmov    %rdx,%rsi\n  402af9:\t48 89 c7             \tmov    %rax,%rdi\n  402afc:\te8 bc 23 00 00       \tcallq  404ebd <add_where_condition>\n  402b01:\t48 83 45 b0 01       \taddq   $0x1,-0x50(%rbp)\n  402b06:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  402b0a:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402b0e:\t48 89 d6             \tmov    %rdx,%rsi\n  402b11:\t48 89 c7             \tmov    %rax,%rdi\n  402b14:\te8 82 fc ff ff       \tcallq  40279b <where_state_handler>\n  402b19:\teb 6d                \tjmp    402b88 <where_state_handler+0x3ed>\n  402b1b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  402b1f:\tba 02 00 00 00       \tmov    $0x2,%edx\n  402b24:\tbe a3 60 40 00       \tmov    $0x4060a3,%esi\n  402b29:\t48 89 c7             \tmov    %rax,%rdi\n  402b2c:\te8 2f e5 ff ff       \tcallq  401060 <strncmp@plt>\n  402b31:\t85 c0                \ttest   %eax,%eax\n  402b33:\t75 39                \tjne    402b6e <where_state_handler+0x3d3>\n  402b35:\t48 83 45 b0 01       \taddq   $0x1,-0x50(%rbp)\n  402b3a:\tc7 45 d8 02 00 00 00 \tmovl   $0x2,-0x28(%rbp)\n  402b41:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n  402b45:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402b49:\t48 89 d6             \tmov    %rdx,%rsi\n  402b4c:\t48 89 c7             \tmov    %rax,%rdi\n  402b4f:\te8 69 23 00 00       \tcallq  404ebd <add_where_condition>\n  402b54:\t48 83 45 b0 01       \taddq   $0x1,-0x50(%rbp)\n  402b59:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  402b5d:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402b61:\t48 89 d6             \tmov    %rdx,%rsi\n  402b64:\t48 89 c7             \tmov    %rax,%rdi\n  402b67:\te8 2f fc ff ff       \tcallq  40279b <where_state_handler>\n  402b6c:\teb 1a                \tjmp    402b88 <where_state_handler+0x3ed>\n  402b6e:\tc7 45 d8 00 00 00 00 \tmovl   $0x0,-0x28(%rbp)\n  402b75:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n  402b79:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402b7d:\t48 89 d6             \tmov    %rdx,%rsi\n  402b80:\t48 89 c7             \tmov    %rax,%rdi\n  402b83:\te8 35 23 00 00       \tcallq  404ebd <add_where_condition>\n  402b88:\t48 83 45 b0 01       \taddq   $0x1,-0x50(%rbp)\n  402b8d:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402b91:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  402b95:\t48 39 45 b0          \tcmp    %rax,-0x50(%rbp)\n  402b99:\t0f 84 8a 00 00 00    \tje     402c29 <where_state_handler+0x48e>\n  402b9f:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402ba3:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  402ba7:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  402bab:\t48 c1 e2 03          \tshl    $0x3,%rdx\n  402baf:\t48 01 d0             \tadd    %rdx,%rax\n  402bb2:\t48 8b 00             \tmov    (%rax),%rax\n  402bb5:\tba 06 00 00 00       \tmov    $0x6,%edx\n  402bba:\tbe 7f 60 40 00       \tmov    $0x40607f,%esi\n  402bbf:\t48 89 c7             \tmov    %rax,%rdi\n  402bc2:\te8 99 e4 ff ff       \tcallq  401060 <strncmp@plt>\n  402bc7:\t85 c0                \ttest   %eax,%eax\n  402bc9:\t75 19                \tjne    402be4 <where_state_handler+0x449>\n  402bcb:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  402bcf:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  402bd3:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402bd7:\t48 89 d6             \tmov    %rdx,%rsi\n  402bda:\t48 89 c7             \tmov    %rax,%rdi\n  402bdd:\te8 51 00 00 00       \tcallq  402c33 <offset_state_handler>\n  402be2:\teb 4d                \tjmp    402c31 <where_state_handler+0x496>\n  402be4:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402be8:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  402bec:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  402bf0:\t48 c1 e2 03          \tshl    $0x3,%rdx\n  402bf4:\t48 01 d0             \tadd    %rdx,%rax\n  402bf7:\t48 8b 00             \tmov    (%rax),%rax\n  402bfa:\tba 05 00 00 00       \tmov    $0x5,%edx\n  402bff:\tbe 86 60 40 00       \tmov    $0x406086,%esi\n  402c04:\t48 89 c7             \tmov    %rax,%rdi\n  402c07:\te8 54 e4 ff ff       \tcallq  401060 <strncmp@plt>\n  402c0c:\t85 c0                \ttest   %eax,%eax\n  402c0e:\t75 19                \tjne    402c29 <where_state_handler+0x48e>\n  402c10:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  402c14:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  402c18:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402c1c:\t48 89 d6             \tmov    %rdx,%rsi\n  402c1f:\t48 89 c7             \tmov    %rax,%rdi\n  402c22:\te8 c5 00 00 00       \tcallq  402cec <limit_state_handler>\n  402c27:\teb 08                \tjmp    402c31 <where_state_handler+0x496>\n  402c29:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402c2d:\tc6 00 00             \tmovb   $0x0,(%rax)\n  402c30:\t90                   \tnop\n  402c31:\tc9                   \tleaveq \n  402c32:\tc3                   \tretq   ", "code_s": "__int64 __fastcall where_state_handler(__int64 a1, unsigned __int64 a2) {\n  __int64 result;\n  unsigned __int64 v3;\n  unsigned __int64 v4;\n  char *v5;\n  int v6;\n  char *v7;\n  int v8;\n  char *s1;\n  int v10;\n  size_t v11;\n  v3 = a2;\n  if (a2 >= *(_QWORD *)(a1 + Number))\n    goto LABEL_41;\n  v11 = Number L;\n  s1 = *(char **)(Number * a2 + *(_QWORD *)(a1 + Number));\n  if (!strncmp(s1, String, Number)) {\n    v11 += Number L;\n    v10 = Number;\n    v5 = strdup(String);\n  } else if (!strncmp(s1, String, Number)) {\n    v11 += Number L;\n    v10 = Number;\n    v5 = strdup(String);\n  } else if (!strncmp(s1, String, Number)) {\n    v11 += Number L;\n    v10 = Number;\n    v5 = strdup(String);\n  } else if (!strncmp(s1, String, Number)) {\n    v11 += Number L;\n    v10 = Number;\n    v5 = strdup(String);\n  }\n  if (v11 >= strlen(s1)) {\n    v3 = a2 + Number;\n    s1 = *(char **)(Number * (a2 + Number) + *(_QWORD *)(a1 + Number));\n    v11 = Number L;\n  }\n  if (s1[v11] == Number) {\n    ++v11;\n    v6 = Number;\n  } else if (!strncmp(&s1[v11], String, Number)) {\n    v11 += Number L;\n    v6 = Number;\n  } else if (!strncmp(&s1[v11], String, Number)) {\n    v11 += Number L;\n    v6 = Number;\n  } else if (!strncmp(&s1[v11], String, Number)) {\n    v11 += Number L;\n    v6 = Number;\n  } else if (s1[v11] == Number) {\n    ++v11;\n    v6 = Number;\n  } else if (s1[v11] == Number) {\n    ++v11;\n    v6 = Number;\n  }\n  if (v11 >= strlen(s1)) {\n    ++v3;\n    s1 = *(char **)(Number * v3 + *(_QWORD *)(a1 + Number));\n    v11 = Number L;\n  }\n  if (v10)\n    __isoc99_sscanf();\n  else\n    v7 = strdup(&s1[v11]);\n  if (v3 + Number < *(_QWORD *)(a1 + Number))\n    s1 = *(char **)(Number * (v3 + Number) + *(_QWORD *)(a1 + Number));\n  if (!strncmp(s1, String, Number)) {\n    v8 = Number;\n    add_where_condition(a1, &v5);\n    v3 += Number L;\n    where_state_handler(a1, v3);\n  } else if (!strncmp(s1, String, Number)) {\n    v8 = Number;\n    add_where_condition(a1, &v5);\n    v3 += Number L;\n    where_state_handler(a1, v3);\n  } else {\n    v8 = Number;\n    add_where_condition(a1, &v5);\n  }\n  v4 = v3 + Number;\n  if (v4 == *(_QWORD *)(a1 + Number))\n    goto LABEL_41;\n  if (!strncmp(*(const char **)(Number * v4 + *(_QWORD *)(a1 + Number)), String,\n               Number))\n    return offset_state_handler(a1, v4 + Number);\n  if (!strncmp(*(const char **)(Number * v4 + *(_QWORD *)(a1 + Number)), String,\n               Number))\n    return limit_state_handler(a1, v4 + Number);\nLABEL_41:\n  result = a1;\n  *(_BYTE *)a1 = Number;\n  return result;\n}", "code_t": "void __cdecl where_state_handler(Command_t *cmd, size_t arg_idx) {\n  size_t v2;\n  size_t v3;\n  WhereArgs_t <span class=\"supfact\">argument</span>;\n  char *str;\n  int numeric;\n  size_t idx;\n  v2 = arg_idx;\n  if (arg_idx >= cmd->args_len)\n    goto LABEL_41;\n  idx = Number L;\n  str = cmd->args[arg_idx];\n  if (!strncmp(str, String, Number)) {\n    idx += Number L;\n    numeric = Number;\n    <span class=\"supfact\">argument</span>.field = strdup(String);\n  } else if (!strncmp(str, String, Number)) {\n    idx += Number L;\n    numeric = Number;\n    <span class=\"supfact\">argument</span>.field = strdup(String);\n  } else if (!strncmp(str, String, Number)) {\n    idx += Number L;\n    numeric = Number;\n    <span class=\"supfact\">argument</span>.field = strdup(String);\n  } else if (!strncmp(str, String, Number)) {\n    idx += Number L;\n    numeric = Number;\n    <span class=\"supfact\">argument</span>.field = strdup(String);\n  }\n  if (idx >= strlen(str)) {\n    v2 = arg_idx + Number;\n    str = cmd->args[arg_idx + Number];\n    idx = Number L;\n  }\n  if (str[idx] == Number) {\n    ++idx;\n    <span class=\"supfact\">argument</span>.op = Number;\n  } else if (!strncmp(&str[idx], String, Number)) {\n    idx += Number L;\n    <span class=\"supfact\">argument</span>.op = Number;\n  } else if (!strncmp(&str[idx], String, Number)) {\n    idx += Number L;\n    <span class=\"supfact\">argument</span>.op = Number;\n  } else if (!strncmp(&str[idx], String, Number)) {\n    idx += Number L;\n    <span class=\"supfact\">argument</span>.op = Number;\n  } else if (str[idx] == Number) {\n    ++idx;\n    <span class=\"supfact\">argument</span>.op = Number;\n  } else if (str[idx] == Number) {\n    ++idx;\n    <span class=\"supfact\">argument</span>.op = Number;\n  }\n  if (idx >= strlen(str)) {\n    str = cmd->args[++v2];\n    idx = Number L;\n  }\n  if (numeric)\n    __isoc99_sscanf();\n  else\n    <span class=\"supfact\">argument</span>.literal.arg_char = strdup(&str[idx]);\n  if (v2 + Number < cmd->args_len)\n    str = cmd->args[v2 + Number];\n  if (!strncmp(str, String, Number)) {\n    <span class=\"supfact\">argument</span>.junction = Number;\n    add_where_condition(cmd, &<span class=\"supfact\">argument</span>);\n    v2 += Number L;\n    where_state_handler(cmd, v2);\n  } else if (!strncmp(str, String, Number)) {\n    <span class=\"supfact\">argument</span>.junction = Number;\n    add_where_condition(cmd, &<span class=\"supfact\">argument</span>);\n    v2 += Number L;\n    where_state_handler(cmd, v2);\n  } else {\n    <span class=\"supfact\">argument</span>.junction = Number;\n    add_where_condition(cmd, &<span class=\"supfact\">argument</span>);\n  }\n  v3 = v2 + Number;\n  if (v3 == cmd->args_len)\n    goto LABEL_41;\n  if (!strncmp(cmd->args[v3], String, Number)) {\n    offset_state_handler(cmd, v3 + Number);\n    return;\n  }\n  if (strncmp(cmd->args[v3], String, Number))\n  LABEL_41:\n    cmd->type = Number;\n  else\n    limit_state_handler(cmd, v3 + Number);\n}", "var": [{"name": "v5", "type": "size_t", "pred_name": "lena", "ref_name": "argument", "ref_type": "struct WhereArgs_t { char * field; int op; PADDING (4); $F480C1618026236E71A39D94168B2FFC literal; int junction; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "uyjulian", "repo_name": "krkr2_extra_plugin", "path": "uyjulian/krkr2_extra_plugin/6e2e35c7886134f0f8f48d5bb3632d1f70f9f276785e39eed83fa5e5a19d2ab1", "path_in_repo": "uyjulian/krkr2_extra_plugin/drawdeviceIrrlicht/irrlicht/source/Irrlicht/CParticleMeshEmitter.o", "objdump": "000000000000058c <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE>:\n     58c:\t55                   \tpush   %rbp\n     58d:\t48 89 e5             \tmov    %rsp,%rbp\n     590:\t53                   \tpush   %rbx\n     591:\t48 81 ec 18 01 00 00 \tsub    $0x118,%rsp\n     598:\t48 89 bd f8 fe ff ff \tmov    %rdi,-0x108(%rbp)\n     59f:\t89 b5 f4 fe ff ff    \tmov    %esi,-0x10c(%rbp)\n     5a5:\t89 95 f0 fe ff ff    \tmov    %edx,-0x110(%rbp)\n     5ab:\t48 89 8d e8 fe ff ff \tmov    %rcx,-0x118(%rbp)\n     5b2:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     5b9:\t8b 90 8c 00 00 00    \tmov    0x8c(%rax),%edx\n     5bf:\t8b 85 f0 fe ff ff    \tmov    -0x110(%rbp),%eax\n     5c5:\t01 c2                \tadd    %eax,%edx\n     5c7:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     5ce:\t89 90 8c 00 00 00    \tmov    %edx,0x8c(%rax)\n     5d4:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     5db:\t8b 50 78             \tmov    0x78(%rax),%edx\n     5de:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     5e5:\t8b 40 74             \tmov    0x74(%rax),%eax\n     5e8:\t29 c2                \tsub    %eax,%edx\n     5ea:\t89 d0                \tmov    %edx,%eax\n     5ec:\t89 45 d8             \tmov    %eax,-0x28(%rbp)\n     5ef:\t83 7d d8 00          \tcmpl   $0x0,-0x28(%rbp)\n     5f3:\t74 79                \tje     66e <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xe2>\n     5f5:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     5fc:\t8b 40 74             \tmov    0x74(%rax),%eax\n     5ff:\t89 c0                \tmov    %eax,%eax\n     601:\t48 85 c0             \ttest   %rax,%rax\n     604:\t78 0f                \tjs     615 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x89>\n     606:\tf3 48 0f 2a d8       \tcvtsi2ss %rax,%xmm3\n     60b:\tf3 0f 11 9d e4 fe ff \tmovss  %xmm3,-0x11c(%rbp)\n     612:\tff \n     613:\teb 1d                \tjmp    632 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xa6>\n     615:\t48 89 c2             \tmov    %rax,%rdx\n     618:\t48 d1 ea             \tshr    %rdx\n     61b:\t83 e0 01             \tand    $0x1,%eax\n     61e:\t48 09 c2             \tor     %rax,%rdx\n     621:\tf3 48 0f 2a c2       \tcvtsi2ss %rdx,%xmm0\n     626:\tf3 0f 58 c0          \taddss  %xmm0,%xmm0\n     62a:\tf3 0f 11 85 e4 fe ff \tmovss  %xmm0,-0x11c(%rbp)\n     631:\tff \n     632:\te8 00 00 00 00       \tcallq  637 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xab>\n     637:\tba 00 00 00 00       \tmov    $0x0,%edx\n     63c:\tf7 75 d8             \tdivl   -0x28(%rbp)\n     63f:\t89 d0                \tmov    %edx,%eax\n     641:\t89 c0                \tmov    %eax,%eax\n     643:\t48 85 c0             \ttest   %rax,%rax\n     646:\t78 07                \tjs     64f <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xc3>\n     648:\tf3 48 0f 2a c0       \tcvtsi2ss %rax,%xmm0\n     64d:\teb 15                \tjmp    664 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xd8>\n     64f:\t48 89 c2             \tmov    %rax,%rdx\n     652:\t48 d1 ea             \tshr    %rdx\n     655:\t83 e0 01             \tand    $0x1,%eax\n     658:\t48 09 c2             \tor     %rax,%rdx\n     65b:\tf3 48 0f 2a c2       \tcvtsi2ss %rdx,%xmm0\n     660:\tf3 0f 58 c0          \taddss  %xmm0,%xmm0\n     664:\tf3 0f 58 85 e4 fe ff \taddss  -0x11c(%rbp),%xmm0\n     66b:\tff \n     66c:\teb 2d                \tjmp    69b <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x10f>\n     66e:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     675:\t8b 40 74             \tmov    0x74(%rax),%eax\n     678:\t89 c0                \tmov    %eax,%eax\n     67a:\t48 85 c0             \ttest   %rax,%rax\n     67d:\t78 07                \tjs     686 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xfa>\n     67f:\tf3 48 0f 2a c0       \tcvtsi2ss %rax,%xmm0\n     684:\teb 15                \tjmp    69b <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x10f>\n     686:\t48 89 c2             \tmov    %rax,%rdx\n     689:\t48 d1 ea             \tshr    %rdx\n     68c:\t83 e0 01             \tand    $0x1,%eax\n     68f:\t48 09 c2             \tor     %rax,%rdx\n     692:\tf3 48 0f 2a c2       \tcvtsi2ss %rdx,%xmm0\n     697:\tf3 0f 58 c0          \taddss  %xmm0,%xmm0\n     69b:\tf3 0f 11 45 d4       \tmovss  %xmm0,-0x2c(%rbp)\n     6a0:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 6a8 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x11c>\n     6a7:\t00 \n     6a8:\tf3 0f 5e 45 d4       \tdivss  -0x2c(%rbp),%xmm0\n     6ad:\tf3 0f 11 45 d0       \tmovss  %xmm0,-0x30(%rbp)\n     6b2:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     6b9:\t8b 80 8c 00 00 00    \tmov    0x8c(%rax),%eax\n     6bf:\t89 c0                \tmov    %eax,%eax\n     6c1:\t48 85 c0             \ttest   %rax,%rax\n     6c4:\t78 07                \tjs     6cd <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x141>\n     6c6:\tf3 48 0f 2a c0       \tcvtsi2ss %rax,%xmm0\n     6cb:\teb 15                \tjmp    6e2 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x156>\n     6cd:\t48 89 c2             \tmov    %rax,%rdx\n     6d0:\t48 d1 ea             \tshr    %rdx\n     6d3:\t83 e0 01             \tand    $0x1,%eax\n     6d6:\t48 09 c2             \tor     %rax,%rdx\n     6d9:\tf3 48 0f 2a c2       \tcvtsi2ss %rdx,%xmm0\n     6de:\tf3 0f 58 c0          \taddss  %xmm0,%xmm0\n     6e2:\t0f 2f 45 d0          \tcomiss -0x30(%rbp),%xmm0\n     6e6:\t0f 86 c7 0c 00 00    \tjbe    13b3 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xe27>\n     6ec:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     6f3:\t48 83 c0 48          \tadd    $0x48,%rax\n     6f7:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     6fc:\t48 89 c7             \tmov    %rax,%rdi\n     6ff:\te8 00 00 00 00       \tcallq  704 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x178>\n     704:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     70b:\t8b 80 8c 00 00 00    \tmov    0x8c(%rax),%eax\n     711:\t89 c0                \tmov    %eax,%eax\n     713:\t48 85 c0             \ttest   %rax,%rax\n     716:\t78 07                \tjs     71f <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x193>\n     718:\tf3 48 0f 2a c0       \tcvtsi2ss %rax,%xmm0\n     71d:\teb 15                \tjmp    734 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x1a8>\n     71f:\t48 89 c2             \tmov    %rax,%rdx\n     722:\t48 d1 ea             \tshr    %rdx\n     725:\t83 e0 01             \tand    $0x1,%eax\n     728:\t48 09 c2             \tor     %rax,%rdx\n     72b:\tf3 48 0f 2a c2       \tcvtsi2ss %rdx,%xmm0\n     730:\tf3 0f 58 c0          \taddss  %xmm0,%xmm0\n     734:\t0f 28 c8             \tmovaps %xmm0,%xmm1\n     737:\tf3 0f 5e 4d d0       \tdivss  -0x30(%rbp),%xmm1\n     73c:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 744 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x1b8>\n     743:\t00 \n     744:\tf3 0f 58 c1          \taddss  %xmm1,%xmm0\n     748:\tf3 48 0f 2c c0       \tcvttss2si %xmm0,%rax\n     74d:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n     750:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     757:\tc7 80 8c 00 00 00 00 \tmovl   $0x0,0x8c(%rax)\n     75e:\t00 00 00 \n     761:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n     768:\t48 89 c7             \tmov    %rax,%rdi\n     76b:\te8 00 00 00 00       \tcallq  770 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x1e4>\n     770:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     777:\t8b 40 78             \tmov    0x78(%rax),%eax\n     77a:\t01 c0                \tadd    %eax,%eax\n     77c:\t39 45 ec             \tcmp    %eax,-0x14(%rbp)\n     77f:\t76 0f                \tjbe    790 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x204>\n     781:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     788:\t8b 40 78             \tmov    0x78(%rax),%eax\n     78b:\t01 c0                \tadd    %eax,%eax\n     78d:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n     790:\tc7 45 e8 00 00 00 00 \tmovl   $0x0,-0x18(%rbp)\n     797:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n     79a:\t3b 45 ec             \tcmp    -0x14(%rbp),%eax\n     79d:\t0f 83 de 0b 00 00    \tjae    1381 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xdf5>\n     7a3:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     7aa:\t0f b6 40 40          \tmovzbl 0x40(%rax),%eax\n     7ae:\t84 c0                \ttest   %al,%al\n     7b0:\t0f 84 ec 05 00 00    \tje     da2 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x816>\n     7b6:\tc7 45 e4 00 00 00 00 \tmovl   $0x0,-0x1c(%rbp)\n     7bd:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     7c4:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     7c8:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     7cf:\t48 8b 52 08          \tmov    0x8(%rdx),%rdx\n     7d3:\t48 8b 12             \tmov    (%rdx),%rdx\n     7d6:\t48 83 c2 10          \tadd    $0x10,%rdx\n     7da:\t48 8b 12             \tmov    (%rdx),%rdx\n     7dd:\t48 89 c7             \tmov    %rax,%rdi\n     7e0:\tff d2                \tcallq  *%rdx\n     7e2:\t39 45 e4             \tcmp    %eax,-0x1c(%rbp)\n     7e5:\t0f 92 c0             \tsetb   %al\n     7e8:\t84 c0                \ttest   %al,%al\n     7ea:\t0f 84 88 0b 00 00    \tje     1378 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xdec>\n     7f0:\tc7 45 e0 00 00 00 00 \tmovl   $0x0,-0x20(%rbp)\n     7f7:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     7fe:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     802:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     809:\t48 8b 52 08          \tmov    0x8(%rdx),%rdx\n     80d:\t48 8b 12             \tmov    (%rdx),%rdx\n     810:\t48 83 c2 18          \tadd    $0x18,%rdx\n     814:\t48 8b 0a             \tmov    (%rdx),%rcx\n     817:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n     81a:\t89 d6                \tmov    %edx,%esi\n     81c:\t48 89 c7             \tmov    %rax,%rdi\n     81f:\tff d1                \tcallq  *%rcx\n     821:\t48 8b 10             \tmov    (%rax),%rdx\n     824:\t48 83 c2 38          \tadd    $0x38,%rdx\n     828:\t48 8b 12             \tmov    (%rdx),%rdx\n     82b:\t48 89 c7             \tmov    %rax,%rdi\n     82e:\tff d2                \tcallq  *%rdx\n     830:\t39 45 e0             \tcmp    %eax,-0x20(%rbp)\n     833:\t0f 92 c0             \tsetb   %al\n     836:\t84 c0                \ttest   %al,%al\n     838:\t0f 84 5b 05 00 00    \tje     d99 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x80d>\n     83e:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     845:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     849:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     850:\t48 8b 52 08          \tmov    0x8(%rdx),%rdx\n     854:\t48 8b 12             \tmov    (%rdx),%rdx\n     857:\t48 83 c2 18          \tadd    $0x18,%rdx\n     85b:\t48 8b 0a             \tmov    (%rdx),%rcx\n     85e:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n     861:\t89 d6                \tmov    %edx,%esi\n     863:\t48 89 c7             \tmov    %rax,%rdi\n     866:\tff d1                \tcallq  *%rcx\n     868:\t48 8b 10             \tmov    (%rax),%rdx\n     86b:\t48 83 c2 20          \tadd    $0x20,%rdx\n     86f:\t48 8b 12             \tmov    (%rdx),%rdx\n     872:\t48 89 c7             \tmov    %rax,%rdi\n     875:\tff d2                \tcallq  *%rdx\n     877:\t85 c0                \ttest   %eax,%eax\n     879:\t74 0e                \tje     889 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x2fd>\n     87b:\t83 f8 02             \tcmp    $0x2,%eax\n     87e:\t0f 84 39 01 00 00    \tje     9bd <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x431>\n     884:\te9 61 02 00 00       \tjmpq   aea <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x55e>\n     889:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     890:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     894:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     89b:\t48 8b 52 08          \tmov    0x8(%rdx),%rdx\n     89f:\t48 8b 12             \tmov    (%rdx),%rdx\n     8a2:\t48 83 c2 18          \tadd    $0x18,%rdx\n     8a6:\t48 8b 0a             \tmov    (%rdx),%rcx\n     8a9:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n     8ac:\t89 d6                \tmov    %edx,%esi\n     8ae:\t48 89 c7             \tmov    %rax,%rdi\n     8b1:\tff d1                \tcallq  *%rcx\n     8b3:\t48 8b 10             \tmov    (%rax),%rdx\n     8b6:\t48 83 c2 30          \tadd    $0x30,%rdx\n     8ba:\t48 8b 12             \tmov    (%rdx),%rdx\n     8bd:\t48 89 c7             \tmov    %rax,%rdi\n     8c0:\tff d2                \tcallq  *%rdx\n     8c2:\t48 89 c1             \tmov    %rax,%rcx\n     8c5:\t8b 55 e0             \tmov    -0x20(%rbp),%edx\n     8c8:\t48 89 d0             \tmov    %rdx,%rax\n     8cb:\t48 c1 e0 03          \tshl    $0x3,%rax\n     8cf:\t48 01 d0             \tadd    %rdx,%rax\n     8d2:\t48 c1 e0 02          \tshl    $0x2,%rax\n     8d6:\t48 01 c8             \tadd    %rcx,%rax\n     8d9:\t48 89 c2             \tmov    %rax,%rdx\n     8dc:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n     8e3:\t48 89 d6             \tmov    %rdx,%rsi\n     8e6:\t48 89 c7             \tmov    %rax,%rdi\n     8e9:\te8 00 00 00 00       \tcallq  8ee <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x362>\n     8ee:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     8f5:\t0f b6 40 41          \tmovzbl 0x41(%rax),%eax\n     8f9:\t84 c0                \ttest   %al,%al\n     8fb:\t0f 84 96 00 00 00    \tje     997 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x40b>\n     901:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     908:\t8b 58 44             \tmov    0x44(%rax),%ebx\n     90b:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     912:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     916:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     91d:\t48 8b 52 08          \tmov    0x8(%rdx),%rdx\n     921:\t48 8b 12             \tmov    (%rdx),%rdx\n     924:\t48 83 c2 18          \tadd    $0x18,%rdx\n     928:\t48 8b 0a             \tmov    (%rdx),%rcx\n     92b:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n     92e:\t89 d6                \tmov    %edx,%esi\n     930:\t48 89 c7             \tmov    %rax,%rdi\n     933:\tff d1                \tcallq  *%rcx\n     935:\t48 8b 10             \tmov    (%rax),%rdx\n     938:\t48 83 c2 30          \tadd    $0x30,%rdx\n     93c:\t48 8b 12             \tmov    (%rdx),%rdx\n     93f:\t48 89 c7             \tmov    %rax,%rdi\n     942:\tff d2                \tcallq  *%rdx\n     944:\t48 89 c1             \tmov    %rax,%rcx\n     947:\t8b 55 e0             \tmov    -0x20(%rbp),%edx\n     94a:\t48 89 d0             \tmov    %rdx,%rax\n     94d:\t48 c1 e0 03          \tshl    $0x3,%rax\n     951:\t48 01 d0             \tadd    %rdx,%rax\n     954:\t48 c1 e0 02          \tshl    $0x2,%rax\n     958:\t48 01 c8             \tadd    %rcx,%rax\n     95b:\t48 8d 50 0c          \tlea    0xc(%rax),%rdx\n     95f:\t48 8d 85 54 ff ff ff \tlea    -0xac(%rbp),%rax\n     966:\t66 0f 6e c3          \tmovd   %ebx,%xmm0\n     96a:\t48 89 d6             \tmov    %rdx,%rsi\n     96d:\t48 89 c7             \tmov    %rax,%rdi\n     970:\te8 00 00 00 00       \tcallq  975 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x3e9>\n     975:\t48 8d 85 54 ff ff ff \tlea    -0xac(%rbp),%rax\n     97c:\t48 8d 95 00 ff ff ff \tlea    -0x100(%rbp),%rdx\n     983:\t48 83 c2 0c          \tadd    $0xc,%rdx\n     987:\t48 89 c6             \tmov    %rax,%rsi\n     98a:\t48 89 d7             \tmov    %rdx,%rdi\n     98d:\te8 00 00 00 00       \tcallq  992 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x406>\n     992:\te9 53 01 00 00       \tjmpq   aea <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x55e>\n     997:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     99e:\t48 8d 50 68          \tlea    0x68(%rax),%rdx\n     9a2:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n     9a9:\t48 83 c0 0c          \tadd    $0xc,%rax\n     9ad:\t48 89 d6             \tmov    %rdx,%rsi\n     9b0:\t48 89 c7             \tmov    %rax,%rdi\n     9b3:\te8 00 00 00 00       \tcallq  9b8 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x42c>\n     9b8:\te9 2d 01 00 00       \tjmpq   aea <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x55e>\n     9bd:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     9c4:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     9c8:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     9cf:\t48 8b 52 08          \tmov    0x8(%rdx),%rdx\n     9d3:\t48 8b 12             \tmov    (%rdx),%rdx\n     9d6:\t48 83 c2 18          \tadd    $0x18,%rdx\n     9da:\t48 8b 0a             \tmov    (%rdx),%rcx\n     9dd:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n     9e0:\t89 d6                \tmov    %edx,%esi\n     9e2:\t48 89 c7             \tmov    %rax,%rdi\n     9e5:\tff d1                \tcallq  *%rcx\n     9e7:\t48 8b 10             \tmov    (%rax),%rdx\n     9ea:\t48 83 c2 30          \tadd    $0x30,%rdx\n     9ee:\t48 8b 12             \tmov    (%rdx),%rdx\n     9f1:\t48 89 c7             \tmov    %rax,%rdi\n     9f4:\tff d2                \tcallq  *%rdx\n     9f6:\t48 89 c1             \tmov    %rax,%rcx\n     9f9:\t8b 55 e0             \tmov    -0x20(%rbp),%edx\n     9fc:\t48 89 d0             \tmov    %rdx,%rax\n     9ff:\t48 c1 e0 04          \tshl    $0x4,%rax\n     a03:\t48 29 d0             \tsub    %rdx,%rax\n     a06:\t48 c1 e0 02          \tshl    $0x2,%rax\n     a0a:\t48 01 c8             \tadd    %rcx,%rax\n     a0d:\t48 89 c2             \tmov    %rax,%rdx\n     a10:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n     a17:\t48 89 d6             \tmov    %rdx,%rsi\n     a1a:\t48 89 c7             \tmov    %rax,%rdi\n     a1d:\te8 00 00 00 00       \tcallq  a22 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x496>\n     a22:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     a29:\t0f b6 40 41          \tmovzbl 0x41(%rax),%eax\n     a2d:\t84 c0                \ttest   %al,%al\n     a2f:\t0f 84 93 00 00 00    \tje     ac8 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x53c>\n     a35:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     a3c:\t8b 58 44             \tmov    0x44(%rax),%ebx\n     a3f:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     a46:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     a4a:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     a51:\t48 8b 52 08          \tmov    0x8(%rdx),%rdx\n     a55:\t48 8b 12             \tmov    (%rdx),%rdx\n     a58:\t48 83 c2 18          \tadd    $0x18,%rdx\n     a5c:\t48 8b 0a             \tmov    (%rdx),%rcx\n     a5f:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n     a62:\t89 d6                \tmov    %edx,%esi\n     a64:\t48 89 c7             \tmov    %rax,%rdi\n     a67:\tff d1                \tcallq  *%rcx\n     a69:\t48 8b 10             \tmov    (%rax),%rdx\n     a6c:\t48 83 c2 30          \tadd    $0x30,%rdx\n     a70:\t48 8b 12             \tmov    (%rdx),%rdx\n     a73:\t48 89 c7             \tmov    %rax,%rdi\n     a76:\tff d2                \tcallq  *%rdx\n     a78:\t48 89 c1             \tmov    %rax,%rcx\n     a7b:\t8b 55 e0             \tmov    -0x20(%rbp),%edx\n     a7e:\t48 89 d0             \tmov    %rdx,%rax\n     a81:\t48 c1 e0 04          \tshl    $0x4,%rax\n     a85:\t48 29 d0             \tsub    %rdx,%rax\n     a88:\t48 c1 e0 02          \tshl    $0x2,%rax\n     a8c:\t48 01 c8             \tadd    %rcx,%rax\n     a8f:\t48 8d 50 0c          \tlea    0xc(%rax),%rdx\n     a93:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n     a9a:\t66 0f 6e c3          \tmovd   %ebx,%xmm0\n     a9e:\t48 89 d6             \tmov    %rdx,%rsi\n     aa1:\t48 89 c7             \tmov    %rax,%rdi\n     aa4:\te8 00 00 00 00       \tcallq  aa9 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x51d>\n     aa9:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n     ab0:\t48 8d 95 00 ff ff ff \tlea    -0x100(%rbp),%rdx\n     ab7:\t48 83 c2 0c          \tadd    $0xc,%rdx\n     abb:\t48 89 c6             \tmov    %rax,%rsi\n     abe:\t48 89 d7             \tmov    %rdx,%rdi\n     ac1:\te8 00 00 00 00       \tcallq  ac6 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x53a>\n     ac6:\teb 21                \tjmp    ae9 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x55d>\n     ac8:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     acf:\t48 8d 50 68          \tlea    0x68(%rax),%rdx\n     ad3:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n     ada:\t48 83 c0 0c          \tadd    $0xc,%rax\n     ade:\t48 89 d6             \tmov    %rdx,%rsi\n     ae1:\t48 89 c7             \tmov    %rax,%rdi\n     ae4:\te8 00 00 00 00       \tcallq  ae9 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x55d>\n     ae9:\t90                   \tnop\n     aea:\t8b 85 f4 fe ff ff    \tmov    -0x10c(%rbp),%eax\n     af0:\t89 85 18 ff ff ff    \tmov    %eax,-0xe8(%rbp)\n     af6:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     afd:\t8b 80 94 00 00 00    \tmov    0x94(%rax),%eax\n     b03:\t85 c0                \ttest   %eax,%eax\n     b05:\t0f 84 57 01 00 00    \tje     c62 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x6d6>\n     b0b:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n     b12:\t48 8d 50 0c          \tlea    0xc(%rax),%rdx\n     b16:\t48 8d 85 48 ff ff ff \tlea    -0xb8(%rbp),%rax\n     b1d:\t48 89 d6             \tmov    %rdx,%rsi\n     b20:\t48 89 c7             \tmov    %rax,%rdi\n     b23:\te8 00 00 00 00       \tcallq  b28 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x59c>\n     b28:\t48 8d 85 6c ff ff ff \tlea    -0x94(%rbp),%rax\n     b2f:\t66 0f ef d2          \tpxor   %xmm2,%xmm2\n     b33:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n     b37:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n     b3b:\t48 89 c7             \tmov    %rax,%rdi\n     b3e:\te8 00 00 00 00       \tcallq  b43 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x5b7>\n     b43:\te8 00 00 00 00       \tcallq  b48 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x5bc>\n     b48:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     b4f:\t8b 92 94 00 00 00    \tmov    0x94(%rdx),%edx\n     b55:\t8d 0c 12             \tlea    (%rdx,%rdx,1),%ecx\n     b58:\t99                   \tcltd   \n     b59:\tf7 f9                \tidiv   %ecx\n     b5b:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     b62:\t8b 80 94 00 00 00    \tmov    0x94(%rax),%eax\n     b68:\t29 c2                \tsub    %eax,%edx\n     b6a:\t89 d0                \tmov    %edx,%eax\n     b6c:\tf2 0f 2a c0          \tcvtsi2sd %eax,%xmm0\n     b70:\t48 8d 95 6c ff ff ff \tlea    -0x94(%rbp),%rdx\n     b77:\t48 8d 85 48 ff ff ff \tlea    -0xb8(%rbp),%rax\n     b7e:\t48 89 d6             \tmov    %rdx,%rsi\n     b81:\t48 89 c7             \tmov    %rax,%rdi\n     b84:\te8 00 00 00 00       \tcallq  b89 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x5fd>\n     b89:\t48 8d 85 78 ff ff ff \tlea    -0x88(%rbp),%rax\n     b90:\t66 0f ef d2          \tpxor   %xmm2,%xmm2\n     b94:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n     b98:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n     b9c:\t48 89 c7             \tmov    %rax,%rdi\n     b9f:\te8 00 00 00 00       \tcallq  ba4 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x618>\n     ba4:\te8 00 00 00 00       \tcallq  ba9 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x61d>\n     ba9:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     bb0:\t8b 92 94 00 00 00    \tmov    0x94(%rdx),%edx\n     bb6:\t8d 0c 12             \tlea    (%rdx,%rdx,1),%ecx\n     bb9:\t99                   \tcltd   \n     bba:\tf7 f9                \tidiv   %ecx\n     bbc:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     bc3:\t8b 80 94 00 00 00    \tmov    0x94(%rax),%eax\n     bc9:\t29 c2                \tsub    %eax,%edx\n     bcb:\t89 d0                \tmov    %edx,%eax\n     bcd:\tf2 0f 2a c0          \tcvtsi2sd %eax,%xmm0\n     bd1:\t48 8d 95 78 ff ff ff \tlea    -0x88(%rbp),%rdx\n     bd8:\t48 8d 85 48 ff ff ff \tlea    -0xb8(%rbp),%rax\n     bdf:\t48 89 d6             \tmov    %rdx,%rsi\n     be2:\t48 89 c7             \tmov    %rax,%rdi\n     be5:\te8 00 00 00 00       \tcallq  bea <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x65e>\n     bea:\t48 8d 45 84          \tlea    -0x7c(%rbp),%rax\n     bee:\t66 0f ef d2          \tpxor   %xmm2,%xmm2\n     bf2:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n     bf6:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n     bfa:\t48 89 c7             \tmov    %rax,%rdi\n     bfd:\te8 00 00 00 00       \tcallq  c02 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x676>\n     c02:\te8 00 00 00 00       \tcallq  c07 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x67b>\n     c07:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     c0e:\t8b 92 94 00 00 00    \tmov    0x94(%rdx),%edx\n     c14:\t8d 0c 12             \tlea    (%rdx,%rdx,1),%ecx\n     c17:\t99                   \tcltd   \n     c18:\tf7 f9                \tidiv   %ecx\n     c1a:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     c21:\t8b 80 94 00 00 00    \tmov    0x94(%rax),%eax\n     c27:\t29 c2                \tsub    %eax,%edx\n     c29:\t89 d0                \tmov    %edx,%eax\n     c2b:\tf2 0f 2a c0          \tcvtsi2sd %eax,%xmm0\n     c2f:\t48 8d 55 84          \tlea    -0x7c(%rbp),%rdx\n     c33:\t48 8d 85 48 ff ff ff \tlea    -0xb8(%rbp),%rax\n     c3a:\t48 89 d6             \tmov    %rdx,%rsi\n     c3d:\t48 89 c7             \tmov    %rax,%rdi\n     c40:\te8 00 00 00 00       \tcallq  c45 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x6b9>\n     c45:\t48 8d 85 48 ff ff ff \tlea    -0xb8(%rbp),%rax\n     c4c:\t48 8d 95 00 ff ff ff \tlea    -0x100(%rbp),%rdx\n     c53:\t48 83 c2 0c          \tadd    $0xc,%rdx\n     c57:\t48 89 c6             \tmov    %rax,%rsi\n     c5a:\t48 89 d7             \tmov    %rdx,%rdi\n     c5d:\te8 00 00 00 00       \tcallq  c62 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x6d6>\n     c62:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     c69:\t8b 90 88 00 00 00    \tmov    0x88(%rax),%edx\n     c6f:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     c76:\t8b 80 84 00 00 00    \tmov    0x84(%rax),%eax\n     c7c:\t39 c2                \tcmp    %eax,%edx\n     c7e:\t75 1d                \tjne    c9d <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x711>\n     c80:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     c87:\t8b 90 84 00 00 00    \tmov    0x84(%rax),%edx\n     c8d:\t8b 85 f4 fe ff ff    \tmov    -0x10c(%rbp),%eax\n     c93:\t01 d0                \tadd    %edx,%eax\n     c95:\t89 85 1c ff ff ff    \tmov    %eax,-0xe4(%rbp)\n     c9b:\teb 4e                \tjmp    ceb <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x75f>\n     c9d:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     ca4:\t8b 90 84 00 00 00    \tmov    0x84(%rax),%edx\n     caa:\t8b 85 f4 fe ff ff    \tmov    -0x10c(%rbp),%eax\n     cb0:\t8d 1c 02             \tlea    (%rdx,%rax,1),%ebx\n     cb3:\te8 00 00 00 00       \tcallq  cb8 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x72c>\n     cb8:\t89 c6                \tmov    %eax,%esi\n     cba:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     cc1:\t8b 90 88 00 00 00    \tmov    0x88(%rax),%edx\n     cc7:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     cce:\t8b 80 84 00 00 00    \tmov    0x84(%rax),%eax\n     cd4:\t89 d1                \tmov    %edx,%ecx\n     cd6:\t29 c1                \tsub    %eax,%ecx\n     cd8:\t89 f0                \tmov    %esi,%eax\n     cda:\tba 00 00 00 00       \tmov    $0x0,%edx\n     cdf:\tf7 f1                \tdiv    %ecx\n     ce1:\t89 d0                \tmov    %edx,%eax\n     ce3:\t01 d8                \tadd    %ebx,%eax\n     ce5:\t89 85 1c ff ff ff    \tmov    %eax,-0xe4(%rbp)\n     ceb:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     cf2:\t48 8d 58 7c          \tlea    0x7c(%rax),%rbx\n     cf6:\te8 00 00 00 00       \tcallq  cfb <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x76f>\n     cfb:\t48 63 d0             \tmovslq %eax,%rdx\n     cfe:\t48 69 d2 1f 85 eb 51 \timul   $0x51eb851f,%rdx,%rdx\n     d05:\t48 c1 ea 20          \tshr    $0x20,%rdx\n     d09:\t89 d1                \tmov    %edx,%ecx\n     d0b:\tc1 f9 05             \tsar    $0x5,%ecx\n     d0e:\t99                   \tcltd   \n     d0f:\t29 d1                \tsub    %edx,%ecx\n     d11:\t89 ca                \tmov    %ecx,%edx\n     d13:\t6b d2 64             \timul   $0x64,%edx,%edx\n     d16:\t29 d0                \tsub    %edx,%eax\n     d18:\t89 c2                \tmov    %eax,%edx\n     d1a:\tf3 0f 2a c2          \tcvtsi2ss %edx,%xmm0\n     d1e:\tf3 0f 10 0d 00 00 00 \tmovss  0x0(%rip),%xmm1        # d26 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x79a>\n     d25:\t00 \n     d26:\tf3 0f 5e c1          \tdivss  %xmm1,%xmm0\n     d2a:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     d31:\t48 83 e8 80          \tsub    $0xffffffffffffff80,%rax\n     d35:\t48 89 c6             \tmov    %rax,%rsi\n     d38:\t48 89 df             \tmov    %rbx,%rdi\n     d3b:\te8 00 00 00 00       \tcallq  d40 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x7b4>\n     d40:\t89 85 20 ff ff ff    \tmov    %eax,-0xe0(%rbp)\n     d46:\t8b 85 20 ff ff ff    \tmov    -0xe0(%rbp),%eax\n     d4c:\t89 85 24 ff ff ff    \tmov    %eax,-0xdc(%rbp)\n     d52:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n     d59:\t48 8d 50 0c          \tlea    0xc(%rax),%rdx\n     d5d:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n     d64:\t48 83 c0 28          \tadd    $0x28,%rax\n     d68:\t48 89 d6             \tmov    %rdx,%rsi\n     d6b:\t48 89 c7             \tmov    %rax,%rdi\n     d6e:\te8 00 00 00 00       \tcallq  d73 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x7e7>\n     d73:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     d7a:\t48 8d 50 48          \tlea    0x48(%rax),%rdx\n     d7e:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n     d85:\t48 89 c6             \tmov    %rax,%rsi\n     d88:\t48 89 d7             \tmov    %rdx,%rdi\n     d8b:\te8 00 00 00 00       \tcallq  d90 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x804>\n     d90:\t83 45 e0 01          \taddl   $0x1,-0x20(%rbp)\n     d94:\te9 5e fa ff ff       \tjmpq   7f7 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x26b>\n     d99:\t83 45 e4 01          \taddl   $0x1,-0x1c(%rbp)\n     d9d:\te9 1b fa ff ff       \tjmpq   7bd <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x231>\n     da2:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n     da9:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     db0:\t8b 40 18             \tmov    0x18(%rax),%eax\n     db3:\t85 c0                \ttest   %eax,%eax\n     db5:\t79 21                \tjns    dd8 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x84c>\n     db7:\te8 00 00 00 00       \tcallq  dbc <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x830>\n     dbc:\t89 c2                \tmov    %eax,%edx\n     dbe:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     dc5:\t8b 48 14             \tmov    0x14(%rax),%ecx\n     dc8:\t89 d0                \tmov    %edx,%eax\n     dca:\tba 00 00 00 00       \tmov    $0x0,%edx\n     dcf:\tf7 f1                \tdiv    %ecx\n     dd1:\t89 d0                \tmov    %edx,%eax\n     dd3:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n     dd6:\teb 0d                \tjmp    de5 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x859>\n     dd8:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     ddf:\t8b 40 18             \tmov    0x18(%rax),%eax\n     de2:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n     de5:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     dec:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     df0:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     df7:\t48 8b 52 08          \tmov    0x8(%rdx),%rdx\n     dfb:\t48 8b 12             \tmov    (%rdx),%rdx\n     dfe:\t48 83 c2 18          \tadd    $0x18,%rdx\n     e02:\t48 8b 0a             \tmov    (%rdx),%rcx\n     e05:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n     e08:\t89 d6                \tmov    %edx,%esi\n     e0a:\t48 89 c7             \tmov    %rax,%rdi\n     e0d:\tff d1                \tcallq  *%rcx\n     e0f:\t48 8b 10             \tmov    (%rax),%rdx\n     e12:\t48 83 c2 38          \tadd    $0x38,%rdx\n     e16:\t48 8b 12             \tmov    (%rdx),%rdx\n     e19:\t48 89 c7             \tmov    %rax,%rdi\n     e1c:\tff d2                \tcallq  *%rdx\n     e1e:\t89 45 cc             \tmov    %eax,-0x34(%rbp)\n     e21:\t83 7d cc 00          \tcmpl   $0x0,-0x34(%rbp)\n     e25:\t0f 84 4c 05 00 00    \tje     1377 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xdeb>\n     e2b:\te8 00 00 00 00       \tcallq  e30 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x8a4>\n     e30:\tba 00 00 00 00       \tmov    $0x0,%edx\n     e35:\tf7 75 cc             \tdivl   -0x34(%rbp)\n     e38:\t89 55 cc             \tmov    %edx,-0x34(%rbp)\n     e3b:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     e42:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     e46:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     e4d:\t48 8b 52 08          \tmov    0x8(%rdx),%rdx\n     e51:\t48 8b 12             \tmov    (%rdx),%rdx\n     e54:\t48 83 c2 18          \tadd    $0x18,%rdx\n     e58:\t48 8b 0a             \tmov    (%rdx),%rcx\n     e5b:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n     e5e:\t89 d6                \tmov    %edx,%esi\n     e60:\t48 89 c7             \tmov    %rax,%rdi\n     e63:\tff d1                \tcallq  *%rcx\n     e65:\t48 8b 10             \tmov    (%rax),%rdx\n     e68:\t48 83 c2 20          \tadd    $0x20,%rdx\n     e6c:\t48 8b 12             \tmov    (%rdx),%rdx\n     e6f:\t48 89 c7             \tmov    %rax,%rdi\n     e72:\tff d2                \tcallq  *%rdx\n     e74:\t85 c0                \ttest   %eax,%eax\n     e76:\t74 0e                \tje     e86 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x8fa>\n     e78:\t83 f8 02             \tcmp    $0x2,%eax\n     e7b:\t0f 84 33 01 00 00    \tje     fb4 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xa28>\n     e81:\te9 55 02 00 00       \tjmpq   10db <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xb4f>\n     e86:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     e8d:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     e91:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     e98:\t48 8b 52 08          \tmov    0x8(%rdx),%rdx\n     e9c:\t48 8b 12             \tmov    (%rdx),%rdx\n     e9f:\t48 83 c2 18          \tadd    $0x18,%rdx\n     ea3:\t48 8b 0a             \tmov    (%rdx),%rcx\n     ea6:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n     ea9:\t89 d6                \tmov    %edx,%esi\n     eab:\t48 89 c7             \tmov    %rax,%rdi\n     eae:\tff d1                \tcallq  *%rcx\n     eb0:\t48 8b 10             \tmov    (%rax),%rdx\n     eb3:\t48 83 c2 30          \tadd    $0x30,%rdx\n     eb7:\t48 8b 12             \tmov    (%rdx),%rdx\n     eba:\t48 89 c7             \tmov    %rax,%rdi\n     ebd:\tff d2                \tcallq  *%rdx\n     ebf:\t48 89 c1             \tmov    %rax,%rcx\n     ec2:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n     ec5:\t48 89 d0             \tmov    %rdx,%rax\n     ec8:\t48 c1 e0 03          \tshl    $0x3,%rax\n     ecc:\t48 01 d0             \tadd    %rdx,%rax\n     ecf:\t48 c1 e0 02          \tshl    $0x2,%rax\n     ed3:\t48 01 c8             \tadd    %rcx,%rax\n     ed6:\t48 89 c2             \tmov    %rax,%rdx\n     ed9:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n     ee0:\t48 89 d6             \tmov    %rdx,%rsi\n     ee3:\t48 89 c7             \tmov    %rax,%rdi\n     ee6:\te8 00 00 00 00       \tcallq  eeb <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x95f>\n     eeb:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     ef2:\t0f b6 40 41          \tmovzbl 0x41(%rax),%eax\n     ef6:\t84 c0                \ttest   %al,%al\n     ef8:\t0f 84 90 00 00 00    \tje     f8e <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xa02>\n     efe:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     f05:\t8b 58 44             \tmov    0x44(%rax),%ebx\n     f08:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     f0f:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     f13:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     f1a:\t48 8b 52 08          \tmov    0x8(%rdx),%rdx\n     f1e:\t48 8b 12             \tmov    (%rdx),%rdx\n     f21:\t48 83 c2 18          \tadd    $0x18,%rdx\n     f25:\t48 8b 0a             \tmov    (%rdx),%rcx\n     f28:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n     f2b:\t89 d6                \tmov    %edx,%esi\n     f2d:\t48 89 c7             \tmov    %rax,%rdi\n     f30:\tff d1                \tcallq  *%rcx\n     f32:\t48 8b 10             \tmov    (%rax),%rdx\n     f35:\t48 83 c2 30          \tadd    $0x30,%rdx\n     f39:\t48 8b 12             \tmov    (%rdx),%rdx\n     f3c:\t48 89 c7             \tmov    %rax,%rdi\n     f3f:\tff d2                \tcallq  *%rdx\n     f41:\t48 89 c1             \tmov    %rax,%rcx\n     f44:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n     f47:\t48 89 d0             \tmov    %rdx,%rax\n     f4a:\t48 c1 e0 03          \tshl    $0x3,%rax\n     f4e:\t48 01 d0             \tadd    %rdx,%rax\n     f51:\t48 c1 e0 02          \tshl    $0x2,%rax\n     f55:\t48 01 c8             \tadd    %rcx,%rax\n     f58:\t48 8d 50 0c          \tlea    0xc(%rax),%rdx\n     f5c:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n     f60:\t66 0f 6e c3          \tmovd   %ebx,%xmm0\n     f64:\t48 89 d6             \tmov    %rdx,%rsi\n     f67:\t48 89 c7             \tmov    %rax,%rdi\n     f6a:\te8 00 00 00 00       \tcallq  f6f <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x9e3>\n     f6f:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n     f73:\t48 8d 95 00 ff ff ff \tlea    -0x100(%rbp),%rdx\n     f7a:\t48 83 c2 0c          \tadd    $0xc,%rdx\n     f7e:\t48 89 c6             \tmov    %rax,%rsi\n     f81:\t48 89 d7             \tmov    %rdx,%rdi\n     f84:\te8 00 00 00 00       \tcallq  f89 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x9fd>\n     f89:\te9 4d 01 00 00       \tjmpq   10db <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xb4f>\n     f8e:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     f95:\t48 8d 50 68          \tlea    0x68(%rax),%rdx\n     f99:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n     fa0:\t48 83 c0 0c          \tadd    $0xc,%rax\n     fa4:\t48 89 d6             \tmov    %rdx,%rsi\n     fa7:\t48 89 c7             \tmov    %rax,%rdi\n     faa:\te8 00 00 00 00       \tcallq  faf <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xa23>\n     faf:\te9 27 01 00 00       \tjmpq   10db <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xb4f>\n     fb4:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     fbb:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     fbf:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n     fc6:\t48 8b 52 08          \tmov    0x8(%rdx),%rdx\n     fca:\t48 8b 12             \tmov    (%rdx),%rdx\n     fcd:\t48 83 c2 18          \tadd    $0x18,%rdx\n     fd1:\t48 8b 0a             \tmov    (%rdx),%rcx\n     fd4:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n     fd7:\t89 d6                \tmov    %edx,%esi\n     fd9:\t48 89 c7             \tmov    %rax,%rdi\n     fdc:\tff d1                \tcallq  *%rcx\n     fde:\t48 8b 10             \tmov    (%rax),%rdx\n     fe1:\t48 83 c2 30          \tadd    $0x30,%rdx\n     fe5:\t48 8b 12             \tmov    (%rdx),%rdx\n     fe8:\t48 89 c7             \tmov    %rax,%rdi\n     feb:\tff d2                \tcallq  *%rdx\n     fed:\t48 89 c1             \tmov    %rax,%rcx\n     ff0:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n     ff3:\t48 89 d0             \tmov    %rdx,%rax\n     ff6:\t48 c1 e0 04          \tshl    $0x4,%rax\n     ffa:\t48 29 d0             \tsub    %rdx,%rax\n     ffd:\t48 c1 e0 02          \tshl    $0x2,%rax\n    1001:\t48 01 c8             \tadd    %rcx,%rax\n    1004:\t48 89 c2             \tmov    %rax,%rdx\n    1007:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n    100e:\t48 89 d6             \tmov    %rdx,%rsi\n    1011:\t48 89 c7             \tmov    %rax,%rdi\n    1014:\te8 00 00 00 00       \tcallq  1019 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xa8d>\n    1019:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    1020:\t0f b6 40 41          \tmovzbl 0x41(%rax),%eax\n    1024:\t84 c0                \ttest   %al,%al\n    1026:\t0f 84 8d 00 00 00    \tje     10b9 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xb2d>\n    102c:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    1033:\t8b 58 44             \tmov    0x44(%rax),%ebx\n    1036:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    103d:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1041:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n    1048:\t48 8b 52 08          \tmov    0x8(%rdx),%rdx\n    104c:\t48 8b 12             \tmov    (%rdx),%rdx\n    104f:\t48 83 c2 18          \tadd    $0x18,%rdx\n    1053:\t48 8b 0a             \tmov    (%rdx),%rcx\n    1056:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n    1059:\t89 d6                \tmov    %edx,%esi\n    105b:\t48 89 c7             \tmov    %rax,%rdi\n    105e:\tff d1                \tcallq  *%rcx\n    1060:\t48 8b 10             \tmov    (%rax),%rdx\n    1063:\t48 83 c2 30          \tadd    $0x30,%rdx\n    1067:\t48 8b 12             \tmov    (%rdx),%rdx\n    106a:\t48 89 c7             \tmov    %rax,%rdi\n    106d:\tff d2                \tcallq  *%rdx\n    106f:\t48 89 c1             \tmov    %rax,%rcx\n    1072:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    1075:\t48 89 d0             \tmov    %rdx,%rax\n    1078:\t48 c1 e0 04          \tshl    $0x4,%rax\n    107c:\t48 29 d0             \tsub    %rdx,%rax\n    107f:\t48 c1 e0 02          \tshl    $0x2,%rax\n    1083:\t48 01 c8             \tadd    %rcx,%rax\n    1086:\t48 8d 50 0c          \tlea    0xc(%rax),%rdx\n    108a:\t48 8d 45 9c          \tlea    -0x64(%rbp),%rax\n    108e:\t66 0f 6e c3          \tmovd   %ebx,%xmm0\n    1092:\t48 89 d6             \tmov    %rdx,%rsi\n    1095:\t48 89 c7             \tmov    %rax,%rdi\n    1098:\te8 00 00 00 00       \tcallq  109d <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xb11>\n    109d:\t48 8d 45 9c          \tlea    -0x64(%rbp),%rax\n    10a1:\t48 8d 95 00 ff ff ff \tlea    -0x100(%rbp),%rdx\n    10a8:\t48 83 c2 0c          \tadd    $0xc,%rdx\n    10ac:\t48 89 c6             \tmov    %rax,%rsi\n    10af:\t48 89 d7             \tmov    %rdx,%rdi\n    10b2:\te8 00 00 00 00       \tcallq  10b7 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xb2b>\n    10b7:\teb 21                \tjmp    10da <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xb4e>\n    10b9:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    10c0:\t48 8d 50 68          \tlea    0x68(%rax),%rdx\n    10c4:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n    10cb:\t48 83 c0 0c          \tadd    $0xc,%rax\n    10cf:\t48 89 d6             \tmov    %rdx,%rsi\n    10d2:\t48 89 c7             \tmov    %rax,%rdi\n    10d5:\te8 00 00 00 00       \tcallq  10da <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xb4e>\n    10da:\t90                   \tnop\n    10db:\t8b 85 f4 fe ff ff    \tmov    -0x10c(%rbp),%eax\n    10e1:\t89 85 18 ff ff ff    \tmov    %eax,-0xe8(%rbp)\n    10e7:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    10ee:\t8b 80 94 00 00 00    \tmov    0x94(%rax),%eax\n    10f4:\t85 c0                \ttest   %eax,%eax\n    10f6:\t0f 84 4b 01 00 00    \tje     1247 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xcbb>\n    10fc:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    1103:\t48 8d 50 68          \tlea    0x68(%rax),%rdx\n    1107:\t48 8d 85 3c ff ff ff \tlea    -0xc4(%rbp),%rax\n    110e:\t48 89 d6             \tmov    %rdx,%rsi\n    1111:\t48 89 c7             \tmov    %rax,%rdi\n    1114:\te8 00 00 00 00       \tcallq  1119 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xb8d>\n    1119:\t48 8d 45 a8          \tlea    -0x58(%rbp),%rax\n    111d:\t66 0f ef d2          \tpxor   %xmm2,%xmm2\n    1121:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n    1125:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n    1129:\t48 89 c7             \tmov    %rax,%rdi\n    112c:\te8 00 00 00 00       \tcallq  1131 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xba5>\n    1131:\te8 00 00 00 00       \tcallq  1136 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xbaa>\n    1136:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n    113d:\t8b 92 94 00 00 00    \tmov    0x94(%rdx),%edx\n    1143:\t8d 0c 12             \tlea    (%rdx,%rdx,1),%ecx\n    1146:\t99                   \tcltd   \n    1147:\tf7 f9                \tidiv   %ecx\n    1149:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    1150:\t8b 80 94 00 00 00    \tmov    0x94(%rax),%eax\n    1156:\t29 c2                \tsub    %eax,%edx\n    1158:\t89 d0                \tmov    %edx,%eax\n    115a:\tf2 0f 2a c0          \tcvtsi2sd %eax,%xmm0\n    115e:\t48 8d 55 a8          \tlea    -0x58(%rbp),%rdx\n    1162:\t48 8d 85 3c ff ff ff \tlea    -0xc4(%rbp),%rax\n    1169:\t48 89 d6             \tmov    %rdx,%rsi\n    116c:\t48 89 c7             \tmov    %rax,%rdi\n    116f:\te8 00 00 00 00       \tcallq  1174 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xbe8>\n    1174:\t48 8d 45 b4          \tlea    -0x4c(%rbp),%rax\n    1178:\t66 0f ef d2          \tpxor   %xmm2,%xmm2\n    117c:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n    1180:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n    1184:\t48 89 c7             \tmov    %rax,%rdi\n    1187:\te8 00 00 00 00       \tcallq  118c <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xc00>\n    118c:\te8 00 00 00 00       \tcallq  1191 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xc05>\n    1191:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n    1198:\t8b 92 94 00 00 00    \tmov    0x94(%rdx),%edx\n    119e:\t8d 0c 12             \tlea    (%rdx,%rdx,1),%ecx\n    11a1:\t99                   \tcltd   \n    11a2:\tf7 f9                \tidiv   %ecx\n    11a4:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    11ab:\t8b 80 94 00 00 00    \tmov    0x94(%rax),%eax\n    11b1:\t29 c2                \tsub    %eax,%edx\n    11b3:\t89 d0                \tmov    %edx,%eax\n    11b5:\tf2 0f 2a c0          \tcvtsi2sd %eax,%xmm0\n    11b9:\t48 8d 55 b4          \tlea    -0x4c(%rbp),%rdx\n    11bd:\t48 8d 85 3c ff ff ff \tlea    -0xc4(%rbp),%rax\n    11c4:\t48 89 d6             \tmov    %rdx,%rsi\n    11c7:\t48 89 c7             \tmov    %rax,%rdi\n    11ca:\te8 00 00 00 00       \tcallq  11cf <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xc43>\n    11cf:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    11d3:\t66 0f ef d2          \tpxor   %xmm2,%xmm2\n    11d7:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n    11db:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n    11df:\t48 89 c7             \tmov    %rax,%rdi\n    11e2:\te8 00 00 00 00       \tcallq  11e7 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xc5b>\n    11e7:\te8 00 00 00 00       \tcallq  11ec <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xc60>\n    11ec:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n    11f3:\t8b 92 94 00 00 00    \tmov    0x94(%rdx),%edx\n    11f9:\t8d 0c 12             \tlea    (%rdx,%rdx,1),%ecx\n    11fc:\t99                   \tcltd   \n    11fd:\tf7 f9                \tidiv   %ecx\n    11ff:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    1206:\t8b 80 94 00 00 00    \tmov    0x94(%rax),%eax\n    120c:\t29 c2                \tsub    %eax,%edx\n    120e:\t89 d0                \tmov    %edx,%eax\n    1210:\tf2 0f 2a c0          \tcvtsi2sd %eax,%xmm0\n    1214:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n    1218:\t48 8d 85 3c ff ff ff \tlea    -0xc4(%rbp),%rax\n    121f:\t48 89 d6             \tmov    %rdx,%rsi\n    1222:\t48 89 c7             \tmov    %rax,%rdi\n    1225:\te8 00 00 00 00       \tcallq  122a <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xc9e>\n    122a:\t48 8d 85 3c ff ff ff \tlea    -0xc4(%rbp),%rax\n    1231:\t48 8d 95 00 ff ff ff \tlea    -0x100(%rbp),%rdx\n    1238:\t48 83 c2 0c          \tadd    $0xc,%rdx\n    123c:\t48 89 c6             \tmov    %rax,%rsi\n    123f:\t48 89 d7             \tmov    %rdx,%rdi\n    1242:\te8 00 00 00 00       \tcallq  1247 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xcbb>\n    1247:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    124e:\t8b 90 88 00 00 00    \tmov    0x88(%rax),%edx\n    1254:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    125b:\t8b 80 84 00 00 00    \tmov    0x84(%rax),%eax\n    1261:\t39 c2                \tcmp    %eax,%edx\n    1263:\t75 1d                \tjne    1282 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xcf6>\n    1265:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    126c:\t8b 90 84 00 00 00    \tmov    0x84(%rax),%edx\n    1272:\t8b 85 f4 fe ff ff    \tmov    -0x10c(%rbp),%eax\n    1278:\t01 d0                \tadd    %edx,%eax\n    127a:\t89 85 1c ff ff ff    \tmov    %eax,-0xe4(%rbp)\n    1280:\teb 4e                \tjmp    12d0 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xd44>\n    1282:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    1289:\t8b 90 84 00 00 00    \tmov    0x84(%rax),%edx\n    128f:\t8b 85 f4 fe ff ff    \tmov    -0x10c(%rbp),%eax\n    1295:\t8d 1c 02             \tlea    (%rdx,%rax,1),%ebx\n    1298:\te8 00 00 00 00       \tcallq  129d <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xd11>\n    129d:\t89 c6                \tmov    %eax,%esi\n    129f:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    12a6:\t8b 90 88 00 00 00    \tmov    0x88(%rax),%edx\n    12ac:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    12b3:\t8b 80 84 00 00 00    \tmov    0x84(%rax),%eax\n    12b9:\t89 d1                \tmov    %edx,%ecx\n    12bb:\t29 c1                \tsub    %eax,%ecx\n    12bd:\t89 f0                \tmov    %esi,%eax\n    12bf:\tba 00 00 00 00       \tmov    $0x0,%edx\n    12c4:\tf7 f1                \tdiv    %ecx\n    12c6:\t89 d0                \tmov    %edx,%eax\n    12c8:\t01 d8                \tadd    %ebx,%eax\n    12ca:\t89 85 1c ff ff ff    \tmov    %eax,-0xe4(%rbp)\n    12d0:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    12d7:\t48 8d 58 7c          \tlea    0x7c(%rax),%rbx\n    12db:\te8 00 00 00 00       \tcallq  12e0 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xd54>\n    12e0:\t48 63 d0             \tmovslq %eax,%rdx\n    12e3:\t48 69 d2 1f 85 eb 51 \timul   $0x51eb851f,%rdx,%rdx\n    12ea:\t48 c1 ea 20          \tshr    $0x20,%rdx\n    12ee:\t89 d1                \tmov    %edx,%ecx\n    12f0:\tc1 f9 05             \tsar    $0x5,%ecx\n    12f3:\t99                   \tcltd   \n    12f4:\t29 d1                \tsub    %edx,%ecx\n    12f6:\t89 ca                \tmov    %ecx,%edx\n    12f8:\t6b d2 64             \timul   $0x64,%edx,%edx\n    12fb:\t29 d0                \tsub    %edx,%eax\n    12fd:\t89 c2                \tmov    %eax,%edx\n    12ff:\tf3 0f 2a c2          \tcvtsi2ss %edx,%xmm0\n    1303:\tf3 0f 10 0d 00 00 00 \tmovss  0x0(%rip),%xmm1        # 130b <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xd7f>\n    130a:\t00 \n    130b:\tf3 0f 5e c1          \tdivss  %xmm1,%xmm0\n    130f:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    1316:\t48 83 e8 80          \tsub    $0xffffffffffffff80,%rax\n    131a:\t48 89 c6             \tmov    %rax,%rsi\n    131d:\t48 89 df             \tmov    %rbx,%rdi\n    1320:\te8 00 00 00 00       \tcallq  1325 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xd99>\n    1325:\t89 85 20 ff ff ff    \tmov    %eax,-0xe0(%rbp)\n    132b:\t8b 85 20 ff ff ff    \tmov    -0xe0(%rbp),%eax\n    1331:\t89 85 24 ff ff ff    \tmov    %eax,-0xdc(%rbp)\n    1337:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n    133e:\t48 8d 50 0c          \tlea    0xc(%rax),%rdx\n    1342:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n    1349:\t48 83 c0 28          \tadd    $0x28,%rax\n    134d:\t48 89 d6             \tmov    %rdx,%rsi\n    1350:\t48 89 c7             \tmov    %rax,%rdi\n    1353:\te8 00 00 00 00       \tcallq  1358 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xdcc>\n    1358:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    135f:\t48 8d 50 48          \tlea    0x48(%rax),%rdx\n    1363:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n    136a:\t48 89 c6             \tmov    %rax,%rsi\n    136d:\t48 89 d7             \tmov    %rdx,%rdi\n    1370:\te8 00 00 00 00       \tcallq  1375 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xde9>\n    1375:\teb 01                \tjmp    1378 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xdec>\n    1377:\t90                   \tnop\n    1378:\t83 45 e8 01          \taddl   $0x1,-0x18(%rbp)\n    137c:\te9 16 f4 ff ff       \tjmpq   797 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0x20b>\n    1381:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    1388:\t48 83 c0 48          \tadd    $0x48,%rax\n    138c:\t48 89 c7             \tmov    %rax,%rdi\n    138f:\te8 00 00 00 00       \tcallq  1394 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xe08>\n    1394:\t48 8b 95 e8 fe ff ff \tmov    -0x118(%rbp),%rdx\n    139b:\t48 89 02             \tmov    %rax,(%rdx)\n    139e:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n    13a5:\t48 83 c0 48          \tadd    $0x48,%rax\n    13a9:\t48 89 c7             \tmov    %rax,%rdi\n    13ac:\te8 00 00 00 00       \tcallq  13b1 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xe25>\n    13b1:\teb 05                \tjmp    13b8 <_ZN3irr5scene20CParticleMeshEmitter5emittEjjRPNS0_9SParticleE+0xe2c>\n    13b3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    13b8:\t48 81 c4 18 01 00 00 \tadd    $0x118,%rsp\n    13bf:\t5b                   \tpop    %rbx\n    13c0:\t5d                   \tpop    %rbp\n    13c1:\tc3                   \tretq   ", "code_s": "__int64 __fastcall irr scene CParticleMeshEmitter\nemitt(irr scene CParticleMeshEmitter *this, int a2, int a3,\n      irr scene SParticle **a4) {\n  float v4;\n  irr os Randomizer *v5;\n  unsigned int v6;\n  __int64 v7;\n  unsigned int v8;\n  irr os Randomizer *v9;\n  int v10;\n  __int64 v11;\n  __int64 v12;\n  unsigned int v13;\n  __int64 v14;\n  __int64 v15;\n  __int64 v16;\n  __int64 v17;\n  unsigned int v18;\n  __int64 v19;\n  __int64 v20;\n  int v21;\n  int v22;\n  int v23;\n  int v24;\n  int v25;\n  unsigned int v26;\n  irr os Randomizer *v27;\n  int v28;\n  __int64 v29;\n  __int64 v30;\n  unsigned int v31;\n  __int64 v32;\n  __int64 v33;\n  __int64 v34;\n  __int64 v35;\n  unsigned int v36;\n  __int64 v37;\n  __int64 v38;\n  int v39;\n  int v40;\n  int v41;\n  int v42;\n  int v43;\n  float v45;\n  char v48[Number];\n  _BYTE v49[Number];\n  int v50;\n  int v51;\n  int v52;\n  int v53;\n  _BYTE v54[Number];\n  char v55[Number];\n  char v56[Number];\n  char v57[Number];\n  char v58[Number];\n  char v59[Number];\n  char v60[Number];\n  char v61[Number];\n  char v62[Number];\n  char v63[Number];\n  char v64[Number];\n  char v65[Number];\n  char v66[Number];\n  unsigned int v67;\n  float v68;\n  float v69;\n  unsigned int v70;\n  unsigned int v71;\n  unsigned int k;\n  unsigned int j;\n  unsigned int i;\n  unsigned int v75;\n  *((_DWORD *)this + Number) += a3;\n  v70 = *((_DWORD *)this + Number) - *((_DWORD *)this + Number);\n  if (v70) {\n    v45 = (float)*((int *)this + Number);\n    v4 = (float)(int)((unsigned int)irr os Randomizer rand(this) % v70) + v45;\n  } else {\n    v4 = (float)*((int *)this + Number);\n  }\n  v69 = v4;\n  v68 = Number / v4;\n  if ((float)*((int *)this + Number) > (float)(Number / v4)) {\n    irr core\n        array<irr scene SParticle, irr core irrAllocator<irr scene SParticle>>\n        set_used((char *)this + Number, Number L);\n    v75 = (int)(float)((float)((float)*((int *)this + Number) / v68) + Number);\n    *((_DWORD *)this + Number) = Number;\n    v5 = (irr os Randomizer *)v48;\n    irr scene SParticle SParticle((irr scene SParticle *)v48);\n    if (v75 > Number * *((_DWORD *)this + Number))\n      v75 = Number * *((_DWORD *)this + Number);\n    for (i = Number;; ++i) {\n      if (i >= v75) {\n        *a4 = (irr scene SParticle *)irr core array<\n            irr scene SParticle, irr core irrAllocator<irr scene SParticle>>\n            pointer((char *)this + Number);\n        return irr core array<irr scene SParticle,\n                              irr core irrAllocator<irr scene SParticle>>\n            size((char *)this + Number);\n      }\n      if (*((_BYTE *)this + Number)) {\n        for (j = Number;; ++j) {\n          v5 = (irr os Randomizer *)*((_QWORD *)this + Number);\n          v6 = (*(__int64(__fastcall **)(irr os Randomizer *))(*(_QWORD *)v5 +\n                                                               Number L))(v5);\n          if (j >= v6)\n            goto LABEL_49;\n          for (k = Number;; ++k) {\n            v7 = (*(__int64(__fastcall **)(_QWORD, _QWORD))(\n                **((_QWORD **)this + Number) + Number L))(\n                *((_QWORD *)this + Number), j);\n            v8 = (*(__int64(__fastcall **)(__int64))(*(_QWORD *)v7 + Number L))(\n                v7);\n            if (k >= v8)\n              break;\n            v9 = (irr os Randomizer *)(*(__int64(__fastcall **)(\n                _QWORD, _QWORD))(**((_QWORD **)this + Number) + Number L))(\n                *((_QWORD *)this + Number), j);\n            v10 = (*(__int64(__fastcall **)(irr os Randomizer *))(\n                *(_QWORD *)v9 + Number L))(v9);\n            if (!v10) {\n              v11 = (*(__int64(__fastcall **)(_QWORD, _QWORD))(\n                  **((_QWORD **)this + Number) + Number L))(\n                  *((_QWORD *)this + Number), j);\n              v12 = (*(__int64(__fastcall **)(__int64))(*(_QWORD *)v11 +\n                                                        Number L))(v11);\n              irr core vector3d<float> operator=(v48, v12 + Number L * k);\n              if (*((_BYTE *)this + Number)) {\n                v13 = *((_DWORD *)this + Number);\n                v14 = (*(__int64(__fastcall **)(_QWORD, _QWORD))(\n                    **((_QWORD **)this + Number) + Number L))(\n                    *((_QWORD *)this + Number), j);\n                v15 = (*(__int64(__fastcall **)(__int64))(*(_QWORD *)v14 +\n                                                          Number L))(v14);\n                irr core vector3d<float> operator/(\n                    v57, v15 + Number L * k + Number,\n                    *(double *)_mm_cvtsi32_si128(v13).m128i_i64);\n                v9 = (irr os Randomizer *)v49;\n                irr core vector3d<float> operator=(v49, v57);\n                goto LABEL_23;\n              }\n            LABEL_22:\n              v9 = (irr os Randomizer *)v49;\n              irr core vector3d<float> operator=(v49, (char *)this + Number);\n              goto LABEL_23;\n            }\n            if (v10 == Number) {\n              v16 = (*(__int64(__fastcall **)(_QWORD, _QWORD))(\n                  **((_QWORD **)this + Number) + Number L))(\n                  *((_QWORD *)this + Number), j);\n              v17 = (*(__int64(__fastcall **)(__int64))(*(_QWORD *)v16 +\n                                                        Number L))(v16);\n              irr core vector3d<float> operator=(v48, v17 + Number L * k);\n              if (*((_BYTE *)this + Number)) {\n                v18 = *((_DWORD *)this + Number);\n                v19 = (*(__int64(__fastcall **)(_QWORD, _QWORD))(\n                    **((_QWORD **)this + Number) + Number L))(\n                    *((_QWORD *)this + Number), j);\n                v20 = (*(__int64(__fastcall **)(__int64))(*(_QWORD *)v19 +\n                                                          Number L))(v19);\n                irr core vector3d<float> operator/(\n                    v58, v20 + Number L * k + Number,\n                    *(double *)_mm_cvtsi32_si128(v18).m128i_i64);\n                v9 = (irr os Randomizer *)v49;\n                irr core vector3d<float> operator=(v49, v58);\n                goto LABEL_23;\n              }\n              goto LABEL_22;\n            }\n          LABEL_23:\n            v50 = a2;\n            if (*((_DWORD *)this + Number)) {\n              irr core vector3d<float> vector3d(v56, v49);\n              irr core vector3d<float> vector3d(v59, Number, Number, Number);\n              v21 = irr os Randomizer rand((irr os Randomizer *)v59);\n              irr core vector3d<float> rotateXYBy(\n                  v56, v59,\n                  (double)(v21 % (Number * *((_DWORD *)this + Number)) -\n                           *((_DWORD *)this + Number)));\n              irr core vector3d<float> vector3d(v60, Number, Number, Number);\n              v22 = irr os Randomizer rand((irr os Randomizer *)v60);\n              irr core vector3d<float> rotateYZBy(\n                  v56, v60,\n                  (double)(v22 % (Number * *((_DWORD *)this + Number)) -\n                           *((_DWORD *)this + Number)));\n              irr core vector3d<float> vector3d(v61, Number, Number, Number);\n              v23 = irr os Randomizer rand((irr os Randomizer *)v61);\n              irr core vector3d<float> rotateXZBy(\n                  v56, v61,\n                  (double)(v23 % (Number * *((_DWORD *)this + Number)) -\n                           *((_DWORD *)this + Number)));\n              v9 = (irr os Randomizer *)v49;\n              irr core vector3d<float> operator=(v49, v56);\n            }\n            if (*((_DWORD *)this + Number) == *((_DWORD *)this + Number)) {\n              v51 = *((_DWORD *)this + Number) + a2;\n            } else {\n              v24 = *((_DWORD *)this + Number) + a2;\n              v51 = v24 + (unsigned int)irr os Randomizer rand(v9) %\n                              (*((_DWORD *)this + Number) -\n                               *((_DWORD *)this + Number));\n            }\n            v25 = irr os Randomizer rand(v9);\n            v52 = irr video SColor getInterpolated(\n                (irr scene CParticleMeshEmitter *)((char *)this + Number),\n                (irr scene CParticleMeshEmitter *)((char *)this + Number),\n                (float)(v25 % Number) / Number);\n            v53 = v52;\n            irr core vector3d<float> operator=(v54, v49);\n            irr core array<irr scene SParticle,\n                           irr core irrAllocator<irr scene SParticle>>\n                push_back((char *)this + Number, v48);\n          }\n        }\n      }\n      v71 = Number;\n      v71 = *((int *)this + Number) >= Number\n                ? *((_DWORD *)this + Number)\n                : (unsigned int)irr os Randomizer rand(v5) %\n                      *((_DWORD *)this + Number);\n      v5 = (irr os Randomizer *)(*(__int64(__fastcall **)(_QWORD, _QWORD))(\n          **((_QWORD **)this + Number) + Number L))(*((_QWORD *)this + Number),\n                                                    v71);\n      v67 = (*(__int64(__fastcall **)(irr os Randomizer *))(*(_QWORD *)v5 +\n                                                            Number L))(v5);\n      if (v67)\n        break;\n    LABEL_49:;\n    }\n    v26 = irr os Randomizer rand(v5);\n    v67 = v26 % v67;\n    v27 = (irr os Randomizer *)(*(__int64(__fastcall **)(_QWORD, _QWORD))(\n        **((_QWORD **)this + Number) + Number L))(*((_QWORD *)this + Number),\n                                                  v71);\n    v28 = (*(__int64(__fastcall **)(irr os Randomizer *))(*(_QWORD *)v27 +\n                                                          Number L))(v27);\n    if (v28) {\n      if (v28 != Number)\n        goto LABEL_43;\n      v34 = (*(__int64(__fastcall **)(_QWORD, _QWORD))(\n          **((_QWORD **)this + Number) + Number L))(*((_QWORD *)this + Number),\n                                                    v71);\n      v35 =\n          (*(__int64(__fastcall **)(__int64))(*(_QWORD *)v34 + Number L))(v34);\n      irr core vector3d<float> operator=(v48, v35 + Number L * v67);\n      if (*((_BYTE *)this + Number)) {\n        v36 = *((_DWORD *)this + Number);\n        v37 = (*(__int64(__fastcall **)(_QWORD, _QWORD))(\n            **((_QWORD **)this + Number) + Number L))(\n            *((_QWORD *)this + Number), v71);\n        v38 = (*(__int64(__fastcall **)(__int64))(*(_QWORD *)v37 + Number L))(\n            v37);\n        irr core vector3d<float> operator/(\n            v63, v38 + Number L * v67 + Number,\n            *(double *)_mm_cvtsi32_si128(v36).m128i_i64);\n        v27 = (irr os Randomizer *)v49;\n        irr core vector3d<float> operator=(v49, v63);\n        goto LABEL_43;\n      }\n    } else {\n      v29 = (*(__int64(__fastcall **)(_QWORD, _QWORD))(\n          **((_QWORD **)this + Number) + Number L))(*((_QWORD *)this + Number),\n                                                    v71);\n      v30 =\n          (*(__int64(__fastcall **)(__int64))(*(_QWORD *)v29 + Number L))(v29);\n      irr core vector3d<float> operator=(v48, v30 + Number L * v67);\n      if (*((_BYTE *)this + Number)) {\n        v31 = *((_DWORD *)this + Number);\n        v32 = (*(__int64(__fastcall **)(_QWORD, _QWORD))(\n            **((_QWORD **)this + Number) + Number L))(\n            *((_QWORD *)this + Number), v71);\n        v33 = (*(__int64(__fastcall **)(__int64))(*(_QWORD *)v32 + Number L))(\n            v32);\n        irr core vector3d<float> operator/(\n            v62, v33 + Number L * v67 + Number,\n            *(double *)_mm_cvtsi32_si128(v31).m128i_i64);\n        v27 = (irr os Randomizer *)v49;\n        irr core vector3d<float> operator=(v49, v62);\n      LABEL_43:\n        v50 = a2;\n        if (*((_DWORD *)this + Number)) {\n          irr core vector3d<float> vector3d(v55, (char *)this + Number);\n          irr core vector3d<float> vector3d(v64, Number, Number, Number);\n          v39 = irr os Randomizer rand((irr os Randomizer *)v64);\n          irr core vector3d<float> rotateXYBy(\n              v55, v64,\n              (double)(v39 % (Number * *((_DWORD *)this + Number)) -\n                       *((_DWORD *)this + Number)));\n          irr core vector3d<float> vector3d(v65, Number, Number, Number);\n          v40 = irr os Randomizer rand((irr os Randomizer *)v65);\n          irr core vector3d<float> rotateYZBy(\n              v55, v65,\n              (double)(v40 % (Number * *((_DWORD *)this + Number)) -\n                       *((_DWORD *)this + Number)));\n          irr core vector3d<float> vector3d(v66, Number, Number, Number);\n          v41 = irr os Randomizer rand((irr os Randomizer *)v66);\n          irr core vector3d<float> rotateXZBy(\n              v55, v66,\n              (double)(v41 % (Number * *((_DWORD *)this + Number)) -\n                       *((_DWORD *)this + Number)));\n          v27 = (irr os Randomizer *)v49;\n          irr core vector3d<float> operator=(v49, v55);\n        }\n        if (*((_DWORD *)this + Number) == *((_DWORD *)this + Number)) {\n          v51 = *((_DWORD *)this + Number) + a2;\n        } else {\n          v42 = *((_DWORD *)this + Number) + a2;\n          v51 = v42 +\n                (unsigned int)irr os Randomizer rand(v27) %\n                    (*((_DWORD *)this + Number) - *((_DWORD *)this + Number));\n        }\n        v43 = irr os Randomizer rand(v27);\n        v52 = irr video SColor getInterpolated(\n            (irr scene CParticleMeshEmitter *)((char *)this + Number),\n            (irr scene CParticleMeshEmitter *)((char *)this + Number),\n            (float)(v43 % Number) / Number);\n        v53 = v52;\n        irr core vector3d<float> operator=(v54, v49);\n        v5 = (irr scene CParticleMeshEmitter *)((char *)this + Number);\n        irr core array<irr scene SParticle,\n                       irr core irrAllocator<irr scene SParticle>>\n            push_back((char *)this + Number, v48);\n        goto LABEL_49;\n      }\n    }\n    v27 = (irr os Randomizer *)v49;\n    irr core vector3d<float> operator=(v49, (char *)this + Number);\n    goto LABEL_43;\n  }\n  return Number L;\n}", "code_t": "irr s32 __cdecl irr scene CParticleMeshEmitter\nemitt(irr scene CParticleMeshEmitter *const this, irr u32 now,\n      irr u32 timeSinceLastCall, irr scene SParticle **outArray) {\n  float v4;\n  irr os Randomizer *v5;\n  irr u32 v6;\n  __int64 v7;\n  irr u32 v8;\n  irr core vector3df *v9;\n  int v10;\n  __int64 v11;\n  __int64 v12;\n  irr f32 v13;\n  __int64 v14;\n  __int64 v15;\n  __int64 v16;\n  irr f32 v17;\n  __int64 v18;\n  int v19;\n  int v20;\n  int v21;\n  irr u32 v22;\n  int v23;\n  unsigned int v24;\n  irr core vector3df *v25;\n  int v26;\n  __int64 v27;\n  __int64 v28;\n  irr f32 v29;\n  __int64 v30;\n  __int64 v31;\n  __int64 v32;\n  irr f32 v33;\n  __int64 v34;\n  int v35;\n  int v36;\n  int v37;\n  irr u32 v38;\n  int v39;\n  float v41;\n  irr scene SParticle <span class=\"supfact\">p</span>;\n  irr core vector3df <span class=\"supfact\">tgt_0</span>;\n  irr core vector3df <span class=\"supfact\">tgt</span>;\n  irr core vector3d<float> <span class=\"supfact\">other</span>;\n  irr core vector3d<float> <span class=\"supfact\">v48</span>;\n  irr core vector3d<float> <span class=\"supfact\">center</span>;\n  irr core vector3d<float> <span class=\"supfact\">v50</span>;\n  irr core vector3d<float> <span class=\"supfact\">v51</span>;\n  irr core vector3d<float> <span class=\"supfact\">v52</span>;\n  irr core vector3d<float> <span class=\"supfact\">v53</span>;\n  irr core vector3d<float> <span class=\"supfact\">v54</span>;\n  irr core vector3d<float> <span class=\"supfact\">v55</span>;\n  irr core vector3d<float> <span class=\"supfact\">v56</span>;\n  irr u32 vertexNumber;\n  irr f32 everyWhatMillisecond;\n  irr f32 perSecond;\n  irr u32 pps;\n  irr s32 randomMB;\n  irr u32 k;\n  irr u32 j;\n  irr u32 i;\n  irr u32 amount;\n  this->Time += timeSinceLastCall;\n  pps = this->MaxParticlesPerSecond - this->MinParticlesPerSecond;\n  if (pps) {\n    v41 = (float)(int)this->MinParticlesPerSecond;\n    v4 = (float)(int)((unsigned int)irr os Randomizer rand(\n                          (irr os Randomizer *)this) %\n                      pps) +\n         v41;\n  } else {\n    v4 = (float)(int)this->MinParticlesPerSecond;\n  }\n  perSecond = v4;\n  everyWhatMillisecond = Number / v4;\n  if ((float)(int)this->Time > (float)(Number / v4)) {\n    irr core\n        array<irr scene SParticle, irr core irrAllocator<irr scene SParticle>>\n            set_used(&this->Particles, Number);\n    amount =\n        (int)(float)((float)((float)(int)this->Time / everyWhatMillisecond) +\n                     Number);\n    this->Time = Number;\n    v5 = (irr os Randomizer *)&<span class=\"supfact\">p</span>;\n    irr scene SParticle SParticle(&<span class=\"supfact\">p</span>);\n    if (amount > Number * this->MaxParticlesPerSecond)\n      amount = Number * this->MaxParticlesPerSecond;\n    for (i = Number;; ++i) {\n      if (i >= amount) {\n        *outArray = irr core array<irr scene SParticle,\n                                   irr core irrAllocator<irr scene SParticle>>\n            pointer(&this->Particles);\n        return irr core array<irr scene SParticle,\n                              irr core irrAllocator<irr scene SParticle>>\n            size(&this->Particles);\n      }\n      if (this->EveryMeshVertex) {\n        for (j = Number;; ++j) {\n          v5 = (irr os Randomizer *)this->Mesh;\n          v6 = (*(__int64(__fastcall **)(irr os Randomizer *))(*(_QWORD *)v5 +\n                                                               Number L))(v5);\n          if (j >= v6)\n            goto LABEL_49;\n          for (k = Number;; ++k) {\n            v7 = (*((__int64(__fastcall **)(const irr scene IMesh *,\n                                            _QWORD))this->Mesh->_vptr_IMesh +\n                    Number))(this->Mesh, j);\n            v8 = (*(__int64(__fastcall **)(__int64))(*(_QWORD *)v7 + Number L))(\n                v7);\n            if (k >= v8)\n              break;\n            v9 = (irr core vector3df *)(*(\n                (__int64(__fastcall **)(const irr scene IMesh *,\n                                        _QWORD))this->Mesh->_vptr_IMesh +\n                Number))(this->Mesh, j);\n            v10 = (*(__int64(__fastcall **)(irr core vector3df *))(\n                *(_QWORD *)&v9->X + Number L))(v9);\n            if (!v10) {\n              v11 = (*((__int64(__fastcall **)(const irr scene IMesh *,\n                                               _QWORD))this->Mesh->_vptr_IMesh +\n                       Number))(this->Mesh, j);\n              v12 = (*(__int64(__fastcall **)(__int64))(*(_QWORD *)v11 +\n                                                        Number L))(v11);\n              irr core vector3d<float> operator=(\n                  &<span class=\"supfact\">p</span>.pos,\n                  (const irr core vector3d<float> *)(v12 + Number L * k));\n              if (this->UseNormalDirection) {\n                v13 = this->NormalDirectionModifier;\n                v14 =\n                    (*((__int64(__fastcall **)(const irr scene IMesh *,\n                                               _QWORD))this->Mesh->_vptr_IMesh +\n                       Number))(this->Mesh, j);\n                (*(void(__fastcall **)(__int64))(*(_QWORD *)v14 + Number L))(\n                    v14);\n                irr core vector3d<float> operator/(&<span class=\"supfact\">other</span>, v13);\n                v9 = &<span class=\"supfact\">p</span>.vector;\n                irr core vector3d<float> operator=(&<span class=\"supfact\">p</span>.vector,\n                                                   &<span class=\"supfact\">other</span>);\n                goto LABEL_23;\n              }\n            LABEL_22:\n              v9 = &<span class=\"supfact\">p</span>.vector;\n              irr core vector3d<float> operator=(&<span class=\"supfact\">p</span>.vector,\n                                                 &this->Direction);\n              goto LABEL_23;\n            }\n            if (v10 == Number) {\n              v15 = (*((__int64(__fastcall **)(const irr scene IMesh *,\n                                               _QWORD))this->Mesh->_vptr_IMesh +\n                       Number))(this->Mesh, j);\n              v16 = (*(__int64(__fastcall **)(__int64))(*(_QWORD *)v15 +\n                                                        Number L))(v15);\n              irr core vector3d<float> operator=(\n                  &<span class=\"supfact\">p</span>.pos,\n                  (const irr core vector3d<float> *)(v16 + Number L * k));\n              if (this->UseNormalDirection) {\n                v17 = this->NormalDirectionModifier;\n                v18 =\n                    (*((__int64(__fastcall **)(const irr scene IMesh *,\n                                               _QWORD))this->Mesh->_vptr_IMesh +\n                       Number))(this->Mesh, j);\n                (*(void(__fastcall **)(__int64))(*(_QWORD *)v18 + Number L))(\n                    v18);\n                irr core vector3d<float> operator/(&<span class=\"supfact\">v48</span>, v17);\n                v9 = &<span class=\"supfact\">p</span>.vector;\n                irr core vector3d<float> operator=(&<span class=\"supfact\">p</span>.vector,\n                                                   &<span class=\"supfact\">v48</span>);\n                goto LABEL_23;\n              }\n              goto LABEL_22;\n            }\n          LABEL_23:\n            <span class=\"supfact\">p</span>.startTime = now;\n            if (this->MaxAngleDegrees) {\n              irr core vector3d<float> vector3d(&<span class=\"supfact\">tgt</span>,\n                                                &<span class=\"supfact\">p</span>.vector);\n              irr core vector3d<float> vector3d(&<span class=\"supfact\">center</span>, Number,\n                                                Number, Number);\n              v19 = irr os Randomizer rand(\n                  (irr os Randomizer *)&<span class=\"supfact\">center</span>);\n              irr core vector3d<float> rotateXYBy(\n                  &<span class=\"supfact\">tgt</span>,\n                  (double)(v19 % (Number * this->MaxAngleDegrees) -\n                           this->MaxAngleDegrees),\n                  &<span class=\"supfact\">center</span>);\n              irr core vector3d<float> vector3d(&<span class=\"supfact\">v50</span>, Number,\n                                                Number, Number);\n              v20 = irr os Randomizer rand(\n                  (irr os Randomizer *)&<span class=\"supfact\">v50</span>);\n              irr core vector3d<float> rotateYZBy(\n                  &<span class=\"supfact\">tgt</span>,\n                  (double)(v20 % (Number * this->MaxAngleDegrees) -\n                           this->MaxAngleDegrees),\n                  &<span class=\"supfact\">v50</span>);\n              irr core vector3d<float> vector3d(&<span class=\"supfact\">v51</span>, Number,\n                                                Number, Number);\n              v21 = irr os Randomizer rand(\n                  (irr os Randomizer *)&<span class=\"supfact\">v51</span>);\n              irr core vector3d<float> rotateXZBy(\n                  &<span class=\"supfact\">tgt</span>,\n                  (double)(v21 % (Number * this->MaxAngleDegrees) -\n                           this->MaxAngleDegrees),\n                  &<span class=\"supfact\">v51</span>);\n              v9 = &<span class=\"supfact\">p</span>.vector;\n              irr core vector3d<float> operator=(&<span class=\"supfact\">p</span>.vector,\n                                                 &<span class=\"supfact\">tgt</span>);\n            }\n            if (this->MaxLifeTime == this->MinLifeTime) {\n              <span class=\"supfact\">p</span>.endTime = this->MinLifeTime + now;\n            } else {\n              v22 = this->MinLifeTime + now;\n              <span class=\"supfact\">p</span>.endTime =\n                  v22 + (unsigned int)irr os Randomizer rand(\n                            (irr os Randomizer *)v9) %\n                            (this->MaxLifeTime - this->MinLifeTime);\n            }\n            v23 = irr os Randomizer rand((irr os Randomizer *)v9);\n            <span class=\"supfact\">p</span>.color = irr video SColor getInterpolated(\n                &this->MinStartColor, &this->MaxStartColor,\n                (float)(v23 % Number) / Number);\n            <span class=\"supfact\">p</span>.startColor.color = <span class=\"supfact\">p</span>.color.color;\n            irr core vector3d<float> operator=(&<span class=\"supfact\">p</span>.startVector,\n                                               &<span class=\"supfact\">p</span>.vector);\n            irr core array<irr scene SParticle,\n                           irr core irrAllocator<irr scene SParticle>>\n                push_back(&this->Particles, &<span class=\"supfact\">p</span>);\n          }\n        }\n      }\n      randomMB = Number;\n      randomMB = this->MBNumber >= Number\n                     ? this->MBNumber\n                     : (unsigned int)irr os Randomizer rand(v5) % this->MBCount;\n      v5 = (irr os Randomizer *)(*(\n          (__int64(__fastcall **)(const irr scene IMesh *,\n                                  _QWORD))this->Mesh->_vptr_IMesh +\n          Number))(this->Mesh, (unsigned int)randomMB);\n      vertexNumber = (*(__int64(__fastcall **)(irr os Randomizer *))(\n          *(_QWORD *)v5 + Number L))(v5);\n      if (vertexNumber)\n        break;\n    LABEL_49:;\n    }\n    v24 = irr os Randomizer rand(v5);\n    vertexNumber = v24 % vertexNumber;\n    v25 = (irr core vector3df *)(*(\n        (__int64(__fastcall **)(const irr scene IMesh *,\n                                _QWORD))this->Mesh->_vptr_IMesh +\n        Number))(this->Mesh, (unsigned int)randomMB);\n    v26 = (*(__int64(__fastcall **)(irr core vector3df *))(*(_QWORD *)&v25->X +\n                                                           Number L))(v25);\n    if (v26) {\n      if (v26 != Number)\n        goto LABEL_43;\n      v31 = (*((__int64(__fastcall **)(const irr scene IMesh *,\n                                       _QWORD))this->Mesh->_vptr_IMesh +\n               Number))(this->Mesh, (unsigned int)randomMB);\n      v32 =\n          (*(__int64(__fastcall **)(__int64))(*(_QWORD *)v31 + Number L))(v31);\n      irr core vector3d<float> operator=(\n          &<span class=\"supfact\">p</span>.pos,\n          (const irr core vector3d<float> *)(v32 + Number L * vertexNumber));\n      if (this->UseNormalDirection) {\n        v33 = this->NormalDirectionModifier;\n        v34 = (*((__int64(__fastcall **)(const irr scene IMesh *,\n                                         _QWORD))this->Mesh->_vptr_IMesh +\n                 Number))(this->Mesh, (unsigned int)randomMB);\n        (*(void(__fastcall **)(__int64))(*(_QWORD *)v34 + Number L))(v34);\n        irr core vector3d<float> operator/(&<span class=\"supfact\">v53</span>, v33);\n        v25 = &<span class=\"supfact\">p</span>.vector;\n        irr core vector3d<float> operator=(&<span class=\"supfact\">p</span>.vector,\n                                           &<span class=\"supfact\">v53</span>);\n        goto LABEL_43;\n      }\n    } else {\n      v27 = (*((__int64(__fastcall **)(const irr scene IMesh *,\n                                       _QWORD))this->Mesh->_vptr_IMesh +\n               Number))(this->Mesh, (unsigned int)randomMB);\n      v28 =\n          (*(__int64(__fastcall **)(__int64))(*(_QWORD *)v27 + Number L))(v27);\n      irr core vector3d<float> operator=(\n          &<span class=\"supfact\">p</span>.pos,\n          (const irr core vector3d<float> *)(v28 + Number L * vertexNumber));\n      if (this->UseNormalDirection) {\n        v29 = this->NormalDirectionModifier;\n        v30 = (*((__int64(__fastcall **)(const irr scene IMesh *,\n                                         _QWORD))this->Mesh->_vptr_IMesh +\n                 Number))(this->Mesh, (unsigned int)randomMB);\n        (*(void(__fastcall **)(__int64))(*(_QWORD *)v30 + Number L))(v30);\n        irr core vector3d<float> operator/(&<span class=\"supfact\">v52</span>, v29);\n        v25 = &<span class=\"supfact\">p</span>.vector;\n        irr core vector3d<float> operator=(&<span class=\"supfact\">p</span>.vector,\n                                           &<span class=\"supfact\">v52</span>);\n      LABEL_43:\n        <span class=\"supfact\">p</span>.startTime = now;\n        if (this->MaxAngleDegrees) {\n          irr core vector3d<float> vector3d(&<span class=\"supfact\">tgt_0</span>,\n                                            &this->Direction);\n          irr core vector3d<float> vector3d(&<span class=\"supfact\">v54</span>, Number,\n                                            Number, Number);\n          v35 =\n              irr os Randomizer rand((irr os Randomizer *)&<span class=\"supfact\">v54</span>);\n          irr core vector3d<float> rotateXYBy(\n              &<span class=\"supfact\">tgt_0</span>,\n              (double)(v35 % (Number * this->MaxAngleDegrees) -\n                       this->MaxAngleDegrees),\n              &<span class=\"supfact\">v54</span>);\n          irr core vector3d<float> vector3d(&<span class=\"supfact\">v55</span>, Number,\n                                            Number, Number);\n          v36 =\n              irr os Randomizer rand((irr os Randomizer *)&<span class=\"supfact\">v55</span>);\n          irr core vector3d<float> rotateYZBy(\n              &<span class=\"supfact\">tgt_0</span>,\n              (double)(v36 % (Number * this->MaxAngleDegrees) -\n                       this->MaxAngleDegrees),\n              &<span class=\"supfact\">v55</span>);\n          irr core vector3d<float> vector3d(&<span class=\"supfact\">v56</span>, Number,\n                                            Number, Number);\n          v37 =\n              irr os Randomizer rand((irr os Randomizer *)&<span class=\"supfact\">v56</span>);\n          irr core vector3d<float> rotateXZBy(\n              &<span class=\"supfact\">tgt_0</span>,\n              (double)(v37 % (Number * this->MaxAngleDegrees) -\n                       this->MaxAngleDegrees),\n              &<span class=\"supfact\">v56</span>);\n          v25 = &<span class=\"supfact\">p</span>.vector;\n          irr core vector3d<float> operator=(&<span class=\"supfact\">p</span>.vector,\n                                             &<span class=\"supfact\">tgt_0</span>);\n        }\n        if (this->MaxLifeTime == this->MinLifeTime) {\n          <span class=\"supfact\">p</span>.endTime = this->MinLifeTime + now;\n        } else {\n          v38 = this->MinLifeTime + now;\n          <span class=\"supfact\">p</span>.endTime =\n              v38 +\n              (unsigned int)irr os Randomizer rand((irr os Randomizer *)v25) %\n                  (this->MaxLifeTime - this->MinLifeTime);\n        }\n        v39 = irr os Randomizer rand((irr os Randomizer *)v25);\n        <span class=\"supfact\">p</span>.color = irr video SColor getInterpolated(\n            &this->MinStartColor, &this->MaxStartColor,\n            (float)(v39 % Number) / Number);\n        <span class=\"supfact\">p</span>.startColor.color = <span class=\"supfact\">p</span>.color.color;\n        irr core vector3d<float> operator=(&<span class=\"supfact\">p</span>.startVector,\n                                           &<span class=\"supfact\">p</span>.vector);\n        v5 = (irr os Randomizer *)&this->Particles;\n        irr core array<irr scene SParticle,\n                       irr core irrAllocator<irr scene SParticle>>\n            push_back(&this->Particles, &<span class=\"supfact\">p</span>);\n        goto LABEL_49;\n      }\n    }\n    v25 = &<span class=\"supfact\">p</span>.vector;\n    irr core vector3d<float> operator=(&<span class=\"supfact\">p</span>.vector,\n                                       &this->Direction);\n    goto LABEL_43;\n  }\n  return Number;\n}", "var": [{"name": "v48", "type": "struct irr::core::vector3df { float X; float Y; float Z; }", "pred_name": "__unk__", "ref_name": "p", "ref_type": "struct irr::scene::SParticle { irr::core::vector3df pos; irr::core::vector3df vector; irr::u32 startTime; irr::u32 endTime; irr::video::SColor color; irr::video::SColor startColor; irr::core::vector3df startVector; }"}, {"name": "v55", "type": "struct irr::core::vector3df { float X; float Y; float Z; }", "pred_name": "__unk__", "ref_name": "tgt_0", "ref_type": "struct irr::core::vector3df { float X; float Y; float Z; }"}, {"name": "v56", "type": "struct irr::core::vector3df { float X; float Y; float Z; }", "pred_name": "__unk__", "ref_name": "tgt", "ref_type": "struct irr::core::vector3df { float X; float Y; float Z; }"}, {"name": "v57", "type": "struct irr::core::vector3df { float X; float Y; float Z; }", "pred_name": "__unk__", "ref_name": "other", "ref_type": "struct irr::core::vector3d<float> { float X; float Y; float Z; }"}, {"name": "v58", "type": "struct irr::core::vector3df { float X; float Y; float Z; }", "pred_name": "__unk__", "ref_name": "v48", "ref_type": "struct irr::core::vector3d<float> { float X; float Y; float Z; }"}, {"name": "v59", "type": "struct irr::core::vector3df { float X; float Y; float Z; }", "pred_name": "__unk__", "ref_name": "center", "ref_type": "struct irr::core::vector3d<float> { float X; float Y; float Z; }"}, {"name": "v60", "type": "struct irr::core::vector3df { float X; float Y; float Z; }", "pred_name": "__unk__", "ref_name": "v50", "ref_type": "struct irr::core::vector3d<float> { float X; float Y; float Z; }"}, {"name": "v61", "type": "struct irr::core::vector3df { float X; float Y; float Z; }", "pred_name": "__unk__", "ref_name": "v51", "ref_type": "struct irr::core::vector3d<float> { float X; float Y; float Z; }"}, {"name": "v62", "type": "struct irr::core::vector3df { float X; float Y; float Z; }", "pred_name": "__unk__", "ref_name": "v52", "ref_type": "struct irr::core::vector3d<float> { float X; float Y; float Z; }"}, {"name": "v63", "type": "struct irr::core::vector3df { float X; float Y; float Z; }", "pred_name": "__unk__", "ref_name": "v53", "ref_type": "struct irr::core::vector3d<float> { float X; float Y; float Z; }"}, {"name": "v64", "type": "struct irr::core::vector3df { float X; float Y; float Z; }", "pred_name": "__unk__", "ref_name": "v54", "ref_type": "struct irr::core::vector3d<float> { float X; float Y; float Z; }"}, {"name": "v65", "type": "struct irr::core::vector3df { float X; float Y; float Z; }", "pred_name": "__unk__", "ref_name": "v55", "ref_type": "struct irr::core::vector3d<float> { float X; float Y; float Z; }"}, {"name": "v66", "type": "struct irr::core::vector3df { float X; float Y; float Z; }", "pred_name": "__unk__", "ref_name": "v56", "ref_type": "struct irr::core::vector3d<float> { float X; float Y; float Z; }"}], "body_in_train": false}, {"repo_owner": "bugant", "repo_name": "bee", "path": "bugant/bee/57e97a2bffab1b3f025ff34bddbbd857f287cd19ed3ce8b472f07af3891c46b4", "path_in_repo": "bugant/bee/bee/bee-crypto.o", "objdump": "00000000000001ff <a_decrypt>:\n 1ff:\t55                   \tpush   %rbp\n 200:\t48 89 e5             \tmov    %rsp,%rbp\n 203:\t48 83 ec 30          \tsub    $0x30,%rsp\n 207:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n 20b:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n 20f:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n 213:\t48 89 4d e0          \tmov    %rcx,-0x20(%rbp)\n 217:\t4c 89 45 d8          \tmov    %r8,-0x28(%rbp)\n 21b:\t48 8b 4d 38          \tmov    0x38(%rbp),%rcx\n 21f:\t4c 8b 45 d8          \tmov    -0x28(%rbp),%r8\n 223:\t48 8b 7d e0          \tmov    -0x20(%rbp),%rdi\n 227:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n 22b:\t48 8b 75 f0          \tmov    -0x10(%rbp),%rsi\n 22f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 233:\t48 83 ec 08          \tsub    $0x8,%rsp\n 237:\tff 75 50             \tpushq  0x50(%rbp)\n 23a:\tff 75 48             \tpushq  0x48(%rbp)\n 23d:\tff 75 40             \tpushq  0x40(%rbp)\n 240:\tff 75 38             \tpushq  0x38(%rbp)\n 243:\tff 75 30             \tpushq  0x30(%rbp)\n 246:\tff 75 28             \tpushq  0x28(%rbp)\n 249:\tff 75 20             \tpushq  0x20(%rbp)\n 24c:\tff 75 18             \tpushq  0x18(%rbp)\n 24f:\tff 75 10             \tpushq  0x10(%rbp)\n 252:\t4d 89 c1             \tmov    %r8,%r9\n 255:\t49 89 f8             \tmov    %rdi,%r8\n 258:\t48 89 c7             \tmov    %rax,%rdi\n 25b:\te8 00 00 00 00       \tcallq  260 <a_decrypt+0x61>\n 260:\t48 83 c4 50          \tadd    $0x50,%rsp\n 264:\tc9                   \tleaveq \n 265:\tc3                   \tretq   ", "code_s": "__int64 __fastcall a_decrypt(int a1, int a2, int a3, int a4, int a5, __int64 a6,\n                             __int64 a7, __int64 a8, __int64 a9, __int64 a10,\n                             __int64 a11, __int64 a12) {\n  return decrypt_with_mechanism(a1, a2, a3, a12, a4, a5, a7, a8, a9, a10);\n}", "code_t": "CK_RV __cdecl a_decrypt(bee <span class=\"supfact\">b</span>, CK_BYTE_PTR cipher, CK_ULONG len,\n                        CK_OBJECT_HANDLE key, CK_BYTE_PTR *clear,\n                        CK_ULONG_PTR out_len) {\n  return decrypt_with_mechanism(<span class=\"supfact\">b</span>, cipher, len, key,\n                                <span class=\"supfact\">b</span>.default_asym_m, clear,\n                                out_len);\n}", "var": [{"name": "a7", "type": "size_t", "pred_name": "add_len", "ref_name": "b", "ref_type": "struct bee { atoken t; CK_MECHANISM_PTR default_sym_m; CK_MECHANISM_PTR default_asym_m; attrs * default_sym_attrs; attrs * default_pub_attrs; attrs * default_priv_attrs; }"}], "body_in_train": false}, {"repo_owner": "Vereis", "repo_name": "urxvt-patched", "path": "Vereis/urxvt-patched/61aed3892b773725799a1ca8d65d913b5467394881ee247c409b56da26908d1d", "path_in_repo": "Vereis/urxvt-patched//src/ptytty_wrapper.o", "objdump": "0000000000000680 <_ZN11ptytty_unix11log_sessionEbPKc>:\n 680:\t41 57                \tpush   %r15\n 682:\t41 bf 00 00 00 00    \tmov    $0x0,%r15d\n 688:\t41 56                \tpush   %r14\n 68a:\t41 89 f6             \tmov    %esi,%r14d\n 68d:\t41 55                \tpush   %r13\n 68f:\t41 54                \tpush   %r12\n 691:\t55                   \tpush   %rbp\n 692:\t53                   \tpush   %rbx\n 693:\t48 89 fb             \tmov    %rdi,%rbx\n 696:\t48 81 ec c8 02 00 00 \tsub    $0x2c8,%rsp\n 69d:\t48 89 54 24 08       \tmov    %rdx,0x8(%rsp)\n 6a2:\te8 00 00 00 00       \tcallq  6a7 <_ZN11ptytty_unix11log_sessionEbPKc+0x27>\n 6a7:\t89 c7                \tmov    %eax,%edi\n 6a9:\te8 00 00 00 00       \tcallq  6ae <_ZN11ptytty_unix11log_sessionEbPKc+0x2e>\n 6ae:\t49 89 c4             \tmov    %rax,%r12\n 6b1:\t48 85 c0             \ttest   %rax,%rax\n 6b4:\t74 0f                \tje     6c5 <_ZN11ptytty_unix11log_sessionEbPKc+0x45>\n 6b6:\t4c 8b 38             \tmov    (%rax),%r15\n 6b9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 6be:\t4d 85 ff             \ttest   %r15,%r15\n 6c1:\t4c 0f 44 f8          \tcmove  %rax,%r15\n 6c5:\t48 8b 6b 10          \tmov    0x10(%rbx),%rbp\n 6c9:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 6ce:\t44 8b 4b 1c          \tmov    0x1c(%rbx),%r9d\n 6d2:\tb9 05 00 00 00       \tmov    $0x5,%ecx\n 6d7:\t4c 8d ac 24 40 01 00 \tlea    0x140(%rsp),%r13\n 6de:\t00 \n 6df:\t48 89 ee             \tmov    %rbp,%rsi\n 6e2:\t48 8d 55 05          \tlea    0x5(%rbp),%rdx\n 6e6:\t44 89 4c 24 04       \tmov    %r9d,0x4(%rsp)\n 6eb:\tf3 a6                \trepz cmpsb %es:(%rdi),%ds:(%rsi)\n 6ed:\tb9 30 00 00 00       \tmov    $0x30,%ecx\n 6f2:\t4c 89 ef             \tmov    %r13,%rdi\n 6f5:\t0f 97 c0             \tseta   %al\n 6f8:\t1c 00                \tsbb    $0x0,%al\n 6fa:\t84 c0                \ttest   %al,%al\n 6fc:\t48 0f 44 ea          \tcmove  %rdx,%rbp\n 700:\t31 c0                \txor    %eax,%eax\n 702:\tba 20 00 00 00       \tmov    $0x20,%edx\n 707:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n 70a:\t48 8d bc 24 48 01 00 \tlea    0x148(%rsp),%rdi\n 711:\t00 \n 712:\t48 89 ee             \tmov    %rbp,%rsi\n 715:\te8 00 00 00 00       \tcallq  71a <_ZN11ptytty_unix11log_sessionEbPKc+0x9a>\n 71a:\t48 89 ef             \tmov    %rbp,%rdi\n 71d:\te8 00 00 00 00       \tcallq  722 <_ZN11ptytty_unix11log_sessionEbPKc+0xa2>\n 722:\tba 04 00 00 00       \tmov    $0x4,%edx\n 727:\t48 8d bc 24 68 01 00 \tlea    0x168(%rsp),%rdi\n 72e:\t00 \n 72f:\t48 8d 74 05 fc       \tlea    -0x4(%rbp,%rax,1),%rsi\n 734:\t48 83 f8 04          \tcmp    $0x4,%rax\n 738:\t48 0f 46 f5          \tcmovbe %rbp,%rsi\n 73c:\te8 00 00 00 00       \tcallq  741 <_ZN11ptytty_unix11log_sessionEbPKc+0xc1>\n 741:\t44 8b 4c 24 04       \tmov    0x4(%rsp),%r9d\n 746:\t44 89 8c 24 44 01 00 \tmov    %r9d,0x144(%rsp)\n 74d:\t00 \n 74e:\t45 84 f6             \ttest   %r14b,%r14b\n 751:\t74 75                \tje     7c8 <_ZN11ptytty_unix11log_sessionEbPKc+0x148>\n 753:\tb8 07 00 00 00       \tmov    $0x7,%eax\n 758:\t31 ff                \txor    %edi,%edi\n 75a:\t66 89 84 24 40 01 00 \tmov    %ax,0x140(%rsp)\n 761:\t00 \n 762:\te8 00 00 00 00       \tcallq  767 <_ZN11ptytty_unix11log_sessionEbPKc+0xe7>\n 767:\tba 20 00 00 00       \tmov    $0x20,%edx\n 76c:\t4c 89 fe             \tmov    %r15,%rsi\n 76f:\t48 8d bc 24 6c 01 00 \tlea    0x16c(%rsp),%rdi\n 776:\t00 \n 777:\t89 84 24 94 02 00 00 \tmov    %eax,0x294(%rsp)\n 77e:\te8 00 00 00 00       \tcallq  783 <_ZN11ptytty_unix11log_sessionEbPKc+0x103>\n 783:\t48 8b 74 24 08       \tmov    0x8(%rsp),%rsi\n 788:\tba 00 01 00 00       \tmov    $0x100,%edx\n 78d:\t48 8d bc 24 8c 01 00 \tlea    0x18c(%rsp),%rdi\n 794:\t00 \n 795:\te8 00 00 00 00       \tcallq  79a <_ZN11ptytty_unix11log_sessionEbPKc+0x11a>\n 79a:\te8 00 00 00 00       \tcallq  79f <_ZN11ptytty_unix11log_sessionEbPKc+0x11f>\n 79f:\t4c 89 ef             \tmov    %r13,%rdi\n 7a2:\te8 00 00 00 00       \tcallq  7a7 <_ZN11ptytty_unix11log_sessionEbPKc+0x127>\n 7a7:\te8 00 00 00 00       \tcallq  7ac <_ZN11ptytty_unix11log_sessionEbPKc+0x12c>\n 7ac:\t80 7b 20 00          \tcmpb   $0x0,0x20(%rbx)\n 7b0:\t75 56                \tjne    808 <_ZN11ptytty_unix11log_sessionEbPKc+0x188>\n 7b2:\t48 81 c4 c8 02 00 00 \tadd    $0x2c8,%rsp\n 7b9:\t5b                   \tpop    %rbx\n 7ba:\t5d                   \tpop    %rbp\n 7bb:\t41 5c                \tpop    %r12\n 7bd:\t41 5d                \tpop    %r13\n 7bf:\t41 5e                \tpop    %r14\n 7c1:\t41 5f                \tpop    %r15\n 7c3:\tc3                   \tretq   \n 7c4:\t0f 1f 40 00          \tnopl   0x0(%rax)\n 7c8:\t31 ff                \txor    %edi,%edi\n 7ca:\tba 08 00 00 00       \tmov    $0x8,%edx\n 7cf:\t66 89 94 24 40 01 00 \tmov    %dx,0x140(%rsp)\n 7d6:\t00 \n 7d7:\te8 00 00 00 00       \tcallq  7dc <_ZN11ptytty_unix11log_sessionEbPKc+0x15c>\n 7dc:\t89 84 24 94 02 00 00 \tmov    %eax,0x294(%rsp)\n 7e3:\te8 00 00 00 00       \tcallq  7e8 <_ZN11ptytty_unix11log_sessionEbPKc+0x168>\n 7e8:\t4c 89 ef             \tmov    %r13,%rdi\n 7eb:\te8 00 00 00 00       \tcallq  7f0 <_ZN11ptytty_unix11log_sessionEbPKc+0x170>\n 7f0:\t48 85 c0             \ttest   %rax,%rax\n 7f3:\t74 b2                \tje     7a7 <_ZN11ptytty_unix11log_sessionEbPKc+0x127>\n 7f5:\t8b 4b 1c             \tmov    0x1c(%rbx),%ecx\n 7f8:\t39 48 04             \tcmp    %ecx,0x4(%rax)\n 7fb:\t74 a2                \tje     79f <_ZN11ptytty_unix11log_sessionEbPKc+0x11f>\n 7fd:\te8 00 00 00 00       \tcallq  802 <_ZN11ptytty_unix11log_sessionEbPKc+0x182>\n 802:\t80 7b 20 00          \tcmpb   $0x0,0x20(%rbx)\n 806:\t74 aa                \tje     7b2 <_ZN11ptytty_unix11log_sessionEbPKc+0x132>\n 808:\t4c 89 ee             \tmov    %r13,%rsi\n 80b:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 810:\te8 00 00 00 00       \tcallq  815 <_ZN11ptytty_unix11log_sessionEbPKc+0x195>\n 815:\t80 7b 20 00          \tcmpb   $0x0,0x20(%rbx)\n 819:\t74 97                \tje     7b2 <_ZN11ptytty_unix11log_sessionEbPKc+0x132>\n 81b:\t45 84 f6             \ttest   %r14b,%r14b\n 81e:\t74 92                \tje     7b2 <_ZN11ptytty_unix11log_sessionEbPKc+0x132>\n 820:\t4d 85 e4             \ttest   %r12,%r12\n 823:\t0f 84 97 00 00 00    \tje     8c0 <_ZN11ptytty_unix11log_sessionEbPKc+0x240>\n 829:\t4c 8d 64 24 10       \tlea    0x10(%rsp),%r12\n 82e:\t31 c0                \txor    %eax,%eax\n 830:\tb9 24 00 00 00       \tmov    $0x24,%ecx\n 835:\t4c 89 e7             \tmov    %r12,%rdi\n 838:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n 83b:\tc7 07 00 00 00 00    \tmovl   $0x0,(%rdi)\n 841:\t31 ff                \txor    %edi,%edi\n 843:\te8 00 00 00 00       \tcallq  848 <_ZN11ptytty_unix11log_sessionEbPKc+0x1c8>\n 848:\t48 89 ee             \tmov    %rbp,%rsi\n 84b:\tba 20 00 00 00       \tmov    $0x20,%edx\n 850:\t48 8d 7c 24 14       \tlea    0x14(%rsp),%rdi\n 855:\t89 44 24 10          \tmov    %eax,0x10(%rsp)\n 859:\te8 00 00 00 00       \tcallq  85e <_ZN11ptytty_unix11log_sessionEbPKc+0x1de>\n 85e:\t48 8b 74 24 08       \tmov    0x8(%rsp),%rsi\n 863:\tba 00 01 00 00       \tmov    $0x100,%edx\n 868:\t48 8d 7c 24 34       \tlea    0x34(%rsp),%rdi\n 86d:\te8 00 00 00 00       \tcallq  872 <_ZN11ptytty_unix11log_sessionEbPKc+0x1f2>\n 872:\tbe 02 00 00 00       \tmov    $0x2,%esi\n 877:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 87c:\t31 c0                \txor    %eax,%eax\n 87e:\te8 00 00 00 00       \tcallq  883 <_ZN11ptytty_unix11log_sessionEbPKc+0x203>\n 883:\t89 c5                \tmov    %eax,%ebp\n 885:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n 888:\t0f 84 24 ff ff ff    \tje     7b2 <_ZN11ptytty_unix11log_sessionEbPKc+0x132>\n 88e:\te8 00 00 00 00       \tcallq  893 <_ZN11ptytty_unix11log_sessionEbPKc+0x213>\n 893:\t89 ef                \tmov    %ebp,%edi\n 895:\t89 c0                \tmov    %eax,%eax\n 897:\t48 8d 14 c0          \tlea    (%rax,%rax,8),%rdx\n 89b:\t48 8d 34 d0          \tlea    (%rax,%rdx,8),%rsi\n 89f:\t31 d2                \txor    %edx,%edx\n 8a1:\t48 c1 e6 02          \tshl    $0x2,%rsi\n 8a5:\te8 00 00 00 00       \tcallq  8aa <_ZN11ptytty_unix11log_sessionEbPKc+0x22a>\n 8aa:\t48 83 f8 ff          \tcmp    $0xffffffffffffffff,%rax\n 8ae:\t75 28                \tjne    8d8 <_ZN11ptytty_unix11log_sessionEbPKc+0x258>\n 8b0:\t89 ef                \tmov    %ebp,%edi\n 8b2:\te8 00 00 00 00       \tcallq  8b7 <_ZN11ptytty_unix11log_sessionEbPKc+0x237>\n 8b7:\te9 f6 fe ff ff       \tjmpq   7b2 <_ZN11ptytty_unix11log_sessionEbPKc+0x132>\n 8bc:\t0f 1f 40 00          \tnopl   0x0(%rax)\n 8c0:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 8c5:\t31 c0                \txor    %eax,%eax\n 8c7:\te8 00 00 00 00       \tcallq  8cc <_ZN11ptytty_unix11log_sessionEbPKc+0x24c>\n 8cc:\te9 e1 fe ff ff       \tjmpq   7b2 <_ZN11ptytty_unix11log_sessionEbPKc+0x132>\n 8d1:\t0f 1f 80 00 00 00 00 \tnopl   0x0(%rax)\n 8d8:\tba 24 01 00 00       \tmov    $0x124,%edx\n 8dd:\t4c 89 e6             \tmov    %r12,%rsi\n 8e0:\t89 ef                \tmov    %ebp,%edi\n 8e2:\te8 00 00 00 00       \tcallq  8e7 <_ZN11ptytty_unix11log_sessionEbPKc+0x267>\n 8e7:\teb c7                \tjmp    8b0 <_ZN11ptytty_unix11log_sessionEbPKc+0x230>\n 8e9:\t90                   \tnop\n 8ea:\t66 0f 1f 44 00 00    \tnopw   0x0(%rax,%rax,1)", "code_s": "void __fastcall ptytty_unix log_session(ptytty_unix *this, char a2,\n                                        const char *a3) {\n  const char *v3;\n  __uid_t v6;\n  struct passwd *v7;\n  struct passwd *v8;\n  char *v9;\n  size_t v10;\n  const char *v11;\n  struct utmp *v12;\n  int v13;\n  __uid_t v14;\n  pid_t v15;\n  int buf[Number];\n  struct utmp utmp_ptr;\n  v3 = String;\n  v6 = getuid();\n  v7 = getpwuid(v6);\n  v8 = v7;\n  if (v7) {\n    v3 = v7->pw_name;\n    if (!v7->pw_name)\n      v3 = String;\n  }\n  v9 = (char *)*((_QWORD *)this + Number);\n  v15 = *((_DWORD *)this + Number);\n  if (!memcmp(v9, String, Number))\n    v9 += Number;\n  memset(&utmp_ptr, Number, sizeof(utmp_ptr));\n  strncpy(utmp_ptr.ut_line, v9, Number);\n  v10 = strlen(v9);\n  v11 = &v9[v10 - Number];\n  if (v10 <= Number)\n    v11 = v9;\n  strncpy(utmp_ptr.ut_id, v11, Number);\n  utmp_ptr.ut_pid = v15;\n  if (a2) {\n    utmp_ptr.ut_type = Number;\n    utmp_ptr.ut_tv.tv_sec = time(Number L);\n    strncpy(utmp_ptr.ut_user, v3, Number);\n    strncpy(utmp_ptr.ut_host, a3, Number);\n    setutent();\n  LABEL_10:\n    pututline(&utmp_ptr);\n    goto LABEL_11;\n  }\n  utmp_ptr.ut_type = Number;\n  utmp_ptr.ut_tv.tv_sec = time(Number L);\n  setutent();\n  v12 = getutid(&utmp_ptr);\n  if (v12) {\n    if (v12->ut_pid != *((_DWORD *)this + Number)) {\n      endutent();\n      if (!*((_BYTE *)this + Number))\n        return;\n      goto LABEL_16;\n    }\n    goto LABEL_10;\n  }\nLABEL_11:\n  endutent();\n  if (!*((_BYTE *)this + Number))\n    return;\nLABEL_16:\n  updwtmp(String, &utmp_ptr);\n  if (*((_BYTE *)this + Number) && a2) {\n    if (v8) {\n      memset(buf, Number, Number);\n      buf[Number] = Number;\n      buf[Number] = time(Number L);\n      strncpy((char *)&buf[Number], v9, Number);\n      strncpy((char *)&buf[Number], a3, Number);\n      v13 = open(String, Number);\n      if (v13 != Number) {\n        v14 = getuid();\n        if (lseek(v13, Number L * v14, Number) != Number)\n          write(v13, buf, Number);\n        close(v13);\n      }\n    } else {\n      rxvt_warn(String);\n    }\n  }\n}", "code_t": "void __fastcall ptytty_unix log_session(ptytty_unix *const this, bool login,\n                                        const char *hostname) {\n  const char *v3;\n  __uid_t v6;\n  struct passwd *v7;\n  struct passwd *<span class=\"supfact\">v8</span>;\n  char *v9;\n  size_t v10;\n  const char *v11;\n  struct utmp *v12;\n  int v13;\n  __uid_t v14;\n  int v15;\n  int buf[Number];\n  utmp <span class=\"supfact\">ut</span>;\n  v3 = String;\n  v6 = getuid();\n  v7 = getpwuid(v6);\n  <span class=\"supfact\">v8</span> = v7;\n  if (v7) {\n    v3 = v7->pw_name;\n    if (!v7->pw_name)\n      v3 = String;\n  }\n  v9 = this->name;\n  v15 = this->cmd_pid;\n  if (!memcmp(v9, String, Number))\n    v9 += Number;\n  memset(&<span class=\"supfact\">ut</span>, Number, sizeof(<span class=\"supfact\">ut</span>));\n  strncpy(<span class=\"supfact\">ut</span>.ut_line, v9, Number);\n  v10 = strlen(v9);\n  v11 = &v9[v10 - Number];\n  if (v10 <= Number)\n    v11 = v9;\n  strncpy(<span class=\"supfact\">ut</span>.ut_id, v11, Number);\n  <span class=\"supfact\">ut</span>.ut_pid = v15;\n  if (login) {\n    <span class=\"supfact\">ut</span>.ut_type = Number;\n    <span class=\"supfact\">ut</span>.ut_tv.tv_sec = time(Number L);\n    strncpy(<span class=\"supfact\">ut</span>.ut_user, v3, Number);\n    strncpy(<span class=\"supfact\">ut</span>.ut_host, hostname, Number);\n    setutent();\n  LABEL_10:\n    pututline(&<span class=\"supfact\">ut</span>);\n    goto LABEL_11;\n  }\n  <span class=\"supfact\">ut</span>.ut_type = Number;\n  <span class=\"supfact\">ut</span>.ut_tv.tv_sec = time(Number L);\n  setutent();\n  v12 = getutid(&<span class=\"supfact\">ut</span>);\n  if (v12) {\n    if (v12->ut_pid != this->cmd_pid) {\n      endutent();\n      if (!this->login_shell)\n        return;\n      goto LABEL_16;\n    }\n    goto LABEL_10;\n  }\nLABEL_11:\n  endutent();\n  if (!this->login_shell)\n    return;\nLABEL_16:\n  updwtmp(String, &<span class=\"supfact\">ut</span>);\n  if (this->login_shell && login) {\n    if (<span class=\"supfact\">v8</span>) {\n      memset(buf, Number, Number);\n      buf[Number] = Number;\n      buf[Number] = time(Number L);\n      strncpy((char *)&buf[Number], v9, Number);\n      strncpy((char *)&buf[Number], hostname, Number);\n      v13 = open(String, Number);\n      if (v13 != Number) {\n        v14 = getuid();\n        if (lseek(v13, Number L * v14, Number) != Number)\n          write(v13, buf, Number);\n        close(v13);\n      }\n    } else {\n      rxvt_warn(String);\n    }\n  }\n}", "var": [{"name": "v8", "type": "const char *", "pred_name": "v8", "ref_name": "v8", "ref_type": "struct passwd *"}, {"name": "utmp_ptr", "type": "struct utmp { __int16 ut_type; PADDING (2); pid_t ut_pid; char[32] ut_line; char[4] ut_id; char[32] ut_user; char[256] ut_host; exit_status ut_exit; int32_t ut_session; $6B4DD0831EBD6CCE4212CC40E1BA2BA9 ut_tv; int32_t[4] ut_addr_v6; char[20] __glibc_reserved; }", "pred_name": "ut", "ref_name": "ut", "ref_type": "struct utmp { __int16 ut_type; PADDING (2); pid_t ut_pid; char[32] ut_line; char[4] ut_id; char[32] ut_user; char[256] ut_host; exit_status ut_exit; int32_t ut_session; utmp::$6B4DD0831EBD6CCE4212CC40E1BA2BA9 ut_tv; int32_t[4] ut_addr_v6; char[20] __glibc_reserved; }"}], "body_in_train": false}, {"repo_owner": "codablock", "repo_name": "btrfs-progs", "path": "codablock/btrfs-progs/da9fd9950b92dccff58ad78de0446e8f65690ea135e5d4b5bb2407ab12b3e319", "path_in_repo": "codablock/btrfs-progs//cmds-receive.o", "objdump": "0000000000000515 <process_snapshot>:\n     515:\t55                   \tpush   %rbp\n     516:\t48 89 e5             \tmov    %rsp,%rbp\n     519:\t53                   \tpush   %rbx\n     51a:\t48 81 ec c8 10 00 00 \tsub    $0x10c8,%rsp\n     521:\t48 89 bd 58 ef ff ff \tmov    %rdi,-0x10a8(%rbp)\n     528:\t48 89 b5 50 ef ff ff \tmov    %rsi,-0x10b0(%rbp)\n     52f:\t48 89 95 48 ef ff ff \tmov    %rdx,-0x10b8(%rbp)\n     536:\t48 89 8d 40 ef ff ff \tmov    %rcx,-0x10c0(%rbp)\n     53d:\t4c 89 85 38 ef ff ff \tmov    %r8,-0x10c8(%rbp)\n     544:\t4c 89 8d 30 ef ff ff \tmov    %r9,-0x10d0(%rbp)\n     54b:\t48 8b 85 30 ef ff ff \tmov    -0x10d0(%rbp),%rax\n     552:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n     556:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     55a:\t48 89 c7             \tmov    %rax,%rdi\n     55d:\te8 9e fa ff ff       \tcallq  0 <finish_subvol>\n     562:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n     565:\t83 7d ec 00          \tcmpl   $0x0,-0x14(%rbp)\n     569:\t0f 88 19 03 00 00    \tjs     888 <process_snapshot+0x373>\n     56f:\tbe c0 00 00 00       \tmov    $0xc0,%esi\n     574:\tbf 01 00 00 00       \tmov    $0x1,%edi\n     579:\te8 00 00 00 00       \tcallq  57e <process_snapshot+0x69>\n     57e:\t48 89 c2             \tmov    %rax,%rdx\n     581:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     585:\t48 89 50 20          \tmov    %rdx,0x20(%rax)\n     589:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     58d:\t48 c7 40 28 00 00 00 \tmovq   $0x0,0x28(%rax)\n     594:\t00 \n     595:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     599:\t48 8b 58 20          \tmov    0x20(%rax),%rbx\n     59d:\t48 8b 85 58 ef ff ff \tmov    -0x10a8(%rbp),%rax\n     5a4:\t48 89 c7             \tmov    %rax,%rdi\n     5a7:\te8 00 00 00 00       \tcallq  5ac <process_snapshot+0x97>\n     5ac:\t48 89 83 b8 00 00 00 \tmov    %rax,0xb8(%rbx)\n     5b3:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     5b7:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     5bb:\t48 8b 95 58 ef ff ff \tmov    -0x10a8(%rbp),%rdx\n     5c2:\t48 89 d6             \tmov    %rdx,%rsi\n     5c5:\t48 89 c7             \tmov    %rax,%rdi\n     5c8:\te8 00 00 00 00       \tcallq  5cd <process_snapshot+0xb8>\n     5cd:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n     5d1:\t48 89 42 18          \tmov    %rax,0x18(%rdx)\n     5d5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5dc <process_snapshot+0xc7>\n     5dc:\t48 8b 95 58 ef ff ff \tmov    -0x10a8(%rbp),%rdx\n     5e3:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     5e8:\t48 89 c7             \tmov    %rax,%rdi\n     5eb:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     5f0:\te8 00 00 00 00       \tcallq  5f5 <process_snapshot+0xe0>\n     5f5:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     5f9:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n     5fd:\t48 8d 88 88 00 00 00 \tlea    0x88(%rax),%rcx\n     604:\t48 8b 85 50 ef ff ff \tmov    -0x10b0(%rbp),%rax\n     60b:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n     60f:\t48 8b 00             \tmov    (%rax),%rax\n     612:\t48 89 01             \tmov    %rax,(%rcx)\n     615:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n     619:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     61d:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n     621:\t48 8b 95 48 ef ff ff \tmov    -0x10b8(%rbp),%rdx\n     628:\t48 89 90 a8 00 00 00 \tmov    %rdx,0xa8(%rax)\n     62f:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 635 <process_snapshot+0x120>\n     635:\t85 c0                \ttest   %eax,%eax\n     637:\t0f 84 9a 00 00 00    \tje     6d7 <process_snapshot+0x1c2>\n     63d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     641:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n     645:\t48 8d 90 88 00 00 00 \tlea    0x88(%rax),%rdx\n     64c:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n     653:\t48 89 c6             \tmov    %rax,%rsi\n     656:\t48 89 d7             \tmov    %rdx,%rdi\n     659:\te8 00 00 00 00       \tcallq  65e <process_snapshot+0x149>\n     65e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     662:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n     666:\t48 8b b0 a8 00 00 00 \tmov    0xa8(%rax),%rsi\n     66d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 674 <process_snapshot+0x15f>\n     674:\t48 8d 8d 60 ff ff ff \tlea    -0xa0(%rbp),%rcx\n     67b:\t48 8b 95 58 ef ff ff \tmov    -0x10a8(%rbp),%rdx\n     682:\t49 89 f0             \tmov    %rsi,%r8\n     685:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     68a:\t48 89 c7             \tmov    %rax,%rdi\n     68d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     692:\te8 00 00 00 00       \tcallq  697 <process_snapshot+0x182>\n     697:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n     69e:\t48 8b 85 40 ef ff ff \tmov    -0x10c0(%rbp),%rax\n     6a5:\t48 89 d6             \tmov    %rdx,%rsi\n     6a8:\t48 89 c7             \tmov    %rax,%rdi\n     6ab:\te8 00 00 00 00       \tcallq  6b0 <process_snapshot+0x19b>\n     6b0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6b7 <process_snapshot+0x1a2>\n     6b7:\t48 8b 8d 38 ef ff ff \tmov    -0x10c8(%rbp),%rcx\n     6be:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n     6c5:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     6ca:\t48 89 c7             \tmov    %rax,%rdi\n     6cd:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     6d2:\te8 00 00 00 00       \tcallq  6d7 <process_snapshot+0x1c2>\n     6d7:\t48 8d 85 60 ef ff ff \tlea    -0x10a0(%rbp),%rax\n     6de:\tba 00 10 00 00       \tmov    $0x1000,%edx\n     6e3:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     6e8:\t48 89 c7             \tmov    %rax,%rdi\n     6eb:\te8 00 00 00 00       \tcallq  6f0 <process_snapshot+0x1db>\n     6f0:\t48 8b 85 58 ef ff ff \tmov    -0x10a8(%rbp),%rax\n     6f7:\t48 8d 95 60 ef ff ff \tlea    -0x10a0(%rbp),%rdx\n     6fe:\t48 83 c2 38          \tadd    $0x38,%rdx\n     702:\t48 89 c6             \tmov    %rax,%rsi\n     705:\t48 89 d7             \tmov    %rdx,%rdi\n     708:\te8 00 00 00 00       \tcallq  70d <process_snapshot+0x1f8>\n     70d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     711:\t48 8d 78 30          \tlea    0x30(%rax),%rdi\n     715:\t48 8b 95 38 ef ff ff \tmov    -0x10c8(%rbp),%rdx\n     71c:\t48 8b 85 40 ef ff ff \tmov    -0x10c0(%rbp),%rax\n     723:\t41 b9 02 00 00 00    \tmov    $0x2,%r9d\n     729:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n     72f:\t48 89 d1             \tmov    %rdx,%rcx\n     732:\t48 89 c2             \tmov    %rax,%rdx\n     735:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     73a:\te8 00 00 00 00       \tcallq  73f <process_snapshot+0x22a>\n     73f:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n     743:\t48 89 42 28          \tmov    %rax,0x28(%rdx)\n     747:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     74b:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     74f:\t48 85 c0             \ttest   %rax,%rax\n     752:\t75 2a                \tjne    77e <process_snapshot+0x269>\n     754:\tc7 45 ec fe ff ff ff \tmovl   $0xfffffffe,-0x14(%rbp)\n     75b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 762 <process_snapshot+0x24d>\n     762:\t48 89 c1             \tmov    %rax,%rcx\n     765:\tba 27 00 00 00       \tmov    $0x27,%edx\n     76a:\tbe 01 00 00 00       \tmov    $0x1,%esi\n     76f:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     774:\te8 00 00 00 00       \tcallq  779 <process_snapshot+0x264>\n     779:\te9 0e 01 00 00       \tjmpq   88c <process_snapshot+0x377>\n     77e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     782:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     786:\t48 8b 88 b8 00 00 00 \tmov    0xb8(%rax),%rcx\n     78d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     791:\t8b 00                \tmov    (%rax),%eax\n     793:\tba 00 00 04 00       \tmov    $0x40000,%edx\n     798:\t48 89 ce             \tmov    %rcx,%rsi\n     79b:\t89 c7                \tmov    %eax,%edi\n     79d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     7a2:\te8 00 00 00 00       \tcallq  7a7 <process_snapshot+0x292>\n     7a7:\t48 98                \tcltq   \n     7a9:\t48 89 85 60 ef ff ff \tmov    %rax,-0x10a0(%rbp)\n     7b0:\t48 8b 85 60 ef ff ff \tmov    -0x10a0(%rbp),%rax\n     7b7:\t48 85 c0             \ttest   %rax,%rax\n     7ba:\t79 48                \tjns    804 <process_snapshot+0x2ef>\n     7bc:\te8 00 00 00 00       \tcallq  7c1 <process_snapshot+0x2ac>\n     7c1:\t8b 00                \tmov    (%rax),%eax\n     7c3:\tf7 d8                \tneg    %eax\n     7c5:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n     7c8:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n     7cb:\tf7 d8                \tneg    %eax\n     7cd:\t89 c7                \tmov    %eax,%edi\n     7cf:\te8 00 00 00 00       \tcallq  7d4 <process_snapshot+0x2bf>\n     7d4:\t48 89 c1             \tmov    %rax,%rcx\n     7d7:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     7db:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     7df:\t48 8b 90 b8 00 00 00 \tmov    0xb8(%rax),%rdx\n     7e6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7ed <process_snapshot+0x2d8>\n     7ed:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     7f2:\t48 89 c7             \tmov    %rax,%rdi\n     7f5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     7fa:\te8 00 00 00 00       \tcallq  7ff <process_snapshot+0x2ea>\n     7ff:\te9 88 00 00 00       \tjmpq   88c <process_snapshot+0x377>\n     804:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     808:\t8b 00                \tmov    (%rax),%eax\n     80a:\t48 8d 95 60 ef ff ff \tlea    -0x10a0(%rbp),%rdx\n     811:\tbe 17 94 00 50       \tmov    $0x50009417,%esi\n     816:\t89 c7                \tmov    %eax,%edi\n     818:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     81d:\te8 00 00 00 00       \tcallq  822 <process_snapshot+0x30d>\n     822:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n     825:\t48 8b 85 60 ef ff ff \tmov    -0x10a0(%rbp),%rax\n     82c:\t89 c7                \tmov    %eax,%edi\n     82e:\te8 00 00 00 00       \tcallq  833 <process_snapshot+0x31e>\n     833:\t83 7d ec 00          \tcmpl   $0x0,-0x14(%rbp)\n     837:\t79 52                \tjns    88b <process_snapshot+0x376>\n     839:\te8 00 00 00 00       \tcallq  83e <process_snapshot+0x329>\n     83e:\t8b 00                \tmov    (%rax),%eax\n     840:\tf7 d8                \tneg    %eax\n     842:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n     845:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n     848:\tf7 d8                \tneg    %eax\n     84a:\t89 c7                \tmov    %eax,%edi\n     84c:\te8 00 00 00 00       \tcallq  851 <process_snapshot+0x33c>\n     851:\t48 89 c6             \tmov    %rax,%rsi\n     854:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     858:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     85c:\t48 8b 90 b8 00 00 00 \tmov    0xb8(%rax),%rdx\n     863:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 86a <process_snapshot+0x355>\n     86a:\t48 8b 8d 58 ef ff ff \tmov    -0x10a8(%rbp),%rcx\n     871:\t49 89 f0             \tmov    %rsi,%r8\n     874:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     879:\t48 89 c7             \tmov    %rax,%rdi\n     87c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     881:\te8 00 00 00 00       \tcallq  886 <process_snapshot+0x371>\n     886:\teb 04                \tjmp    88c <process_snapshot+0x377>\n     888:\t90                   \tnop\n     889:\teb 01                \tjmp    88c <process_snapshot+0x377>\n     88b:\t90                   \tnop\n     88c:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n     88f:\t48 81 c4 c8 10 00 00 \tadd    $0x10c8,%rsp\n     896:\t5b                   \tpop    %rbx\n     897:\t5d                   \tpop    %rbp\n     898:\tc3                   \tretq   ", "code_s": "__int64 __fastcall process_snapshot(const char *a1, _QWORD *a2, __int64 a3,\n                                    __int64 a4, __int64 a5, __int64 a6) {\n  __int64 v6;\n  _QWORD *v7;\n  __int64 v8;\n  __int64 v9;\n  char *v10;\n  char *v11;\n  int fd[Number];\n  char v18[Number];\n  __int64 v19;\n  int v20;\n  v19 = a6;\n  v20 = finish_subvol(a6);\n  if (v20 >= Number) {\n    *(_QWORD *)(v19 + Number) = calloc(Number, Number);\n    *(_QWORD *)(v19 + Number) = Number L;\n    v6 = *(_QWORD *)(v19 + Number);\n    *(_QWORD *)(v6 + Number) = strdup(a1);\n    *(_QWORD *)(v19 + Number) = path_cat(*(_QWORD *)(v19 + Number), a1);\n    fprintf(stderr, String, a1);\n    v7 = (_QWORD *)(*(_QWORD *)(v19 + Number) + Number L);\n    v8 = a2[Number];\n    *v7 = *a2;\n    v7[Number] = v8;\n    *(_QWORD *)(*(_QWORD *)(v19 + Number) + Number L) = a3;\n    if (g_verbose) {\n      uuid_unparse(*(_QWORD *)(v19 + Number) + Number L, v18);\n      fprintf(stderr, String, a1, v18,\n              *(_QWORD *)(*(_QWORD *)(v19 + Number) + Number L));\n      uuid_unparse(a4, v18);\n      fprintf(stderr, String, v18, a5);\n    }\n    memset(fd, Number, sizeof(fd));\n    strcpy((char *)&fd[Number], a1);\n    v9 = subvol_uuid_search(v19 + Number, Number L, a4, a5, Number L, Number L,\n                            a6);\n    *(_QWORD *)(v19 + Number) = v9;\n    if (*(_QWORD *)(v19 + Number)) {\n      *(_QWORD *)fd = openat64(\n          *(_DWORD *)v19,\n          *(const char **)(*(_QWORD *)(v19 + Number) + Number L), Number);\n      if (*(__int64 *)fd >= Number) {\n        v20 = ioctl(*(_DWORD *)v19, Number, fd);\n        close(fd[Number]);\n        if (v20 < Number) {\n          v20 = -*_errno_location();\n          v11 = strerror(-v20);\n          fprintf(stderr, String,\n                  *(const char **)(*(_QWORD *)(v19 + Number) + Number L), a1,\n                  v11);\n        }\n      } else {\n        v20 = -*_errno_location();\n        v10 = strerror(-v20);\n        fprintf(stderr, String,\n                *(const char **)(*(_QWORD *)(v19 + Number) + Number L), v10);\n      }\n    } else {\n      v20 = Number;\n      fwrite(String, Number, Number, stderr);\n    }\n  }\n  return (unsigned int)v20;\n}", "code_t": "int __cdecl process_snapshot(const char *path, const u8 *uuid, u64 ctransid,\n                             const u8 *parent_uuid, u64 parent_ctransid,\n                             void *user) {\n  subvol_info *v6;\n  u8 *v7;\n  __int64 v8;\n  subvol_info *v9;\n  char *v10;\n  char *v11;\n  btrfs_ioctl_vol_args_v2 <span class=\"supfact\">args_v2</span>;\n  char uuid_str[Number];\n  btrfs_receive *r;\n  int ret;\n  r = (btrfs_receive *)user;\n  ret = finish_subvol((btrfs_receive *)user);\n  if (ret >= Number) {\n    r->cur_subvol = (subvol_info *)calloc(Number, Number);\n    r->parent_subvol = Number L;\n    v6 = r->cur_subvol;\n    v6->path = strdup(path);\n    r->full_subvol_path = (char *)path_cat(r->root_path, path);\n    fprintf(stderr, String, path);\n    v7 = r->cur_subvol->received_uuid;\n    v8 = *((_QWORD *)uuid + Number);\n    *(_QWORD *)v7 = *(_QWORD *)uuid;\n    *((_QWORD *)v7 + Number) = v8;\n    r->cur_subvol->stransid = ctransid;\n    if (g_verbose) {\n      uuid_unparse(r->cur_subvol->received_uuid, uuid_str);\n      fprintf(stderr, String, path, uuid_str, r->cur_subvol->stransid);\n      uuid_unparse(parent_uuid, uuid_str);\n      fprintf(stderr, String, uuid_str, parent_ctransid);\n    }\n    memset(&<span class=\"supfact\">args_v2</span>, Number, sizeof(<span class=\"supfact\">args_v2</span>));\n    strcpy(<span class=\"supfact\">args_v2</span>.name, path);\n    v9 = (subvol_info *)subvol_uuid_search_0(&r->sus, Number L, parent_uuid,\n                                             parent_ctransid, Number L,\n                                             Number L, user);\n    r->parent_subvol = v9;\n    if (r->parent_subvol) {\n      <span class=\"supfact\">args_v2</span>.fd =\n          openat64(r->mnt_fd, r->parent_subvol->path, Number);\n      if (<span class=\"supfact\">args_v2</span>.fd >= Number) {\n        ret = ioctl(r->mnt_fd, Number, &<span class=\"supfact\">args_v2</span>);\n        close(<span class=\"supfact\">args_v2</span>.fd);\n        if (ret < Number) {\n          ret = -*_errno_location();\n          v11 = strerror(-ret);\n          fprintf(stderr, String, r->parent_subvol->path, path, v11);\n        }\n      } else {\n        ret = -*_errno_location();\n        v10 = strerror(-ret);\n        fprintf(stderr, String, r->parent_subvol->path, v10);\n      }\n    } else {\n      ret = Number;\n      fwrite(String, Number, Number, stderr);\n    }\n  }\n  return ret;\n}", "var": [{"name": "fd", "type": "__unk__", "pred_name": "__unk__", "ref_name": "args_v2", "ref_type": "struct btrfs_ioctl_vol_args_v2 { __s64 fd; __u64 transid; __u64 flags; __u64[4] unused; char[4040] name; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/86fa5aa0fbd3eddabbaf3f280b5c87028c14c996328b040303fbd04dfcae7f6c", "path_in_repo": "XanClic/qemu//hw/block/nvme.o", "objdump": "0000000000002a0d <_nocheck__trace_nvme_err_invalid_create_sq_size>:\n    2a0d:\t55                   \tpush   %rbp\n    2a0e:\t48 89 e5             \tmov    %rsp,%rbp\n    2a11:\t41 55                \tpush   %r13\n    2a13:\t41 54                \tpush   %r12\n    2a15:\t53                   \tpush   %rbx\n    2a16:\t48 83 ec 38          \tsub    $0x38,%rsp\n    2a1a:\t89 f8                \tmov    %edi,%eax\n    2a1c:\t66 89 45 bc          \tmov    %ax,-0x44(%rbp)\n    2a20:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    2a27:\t00 00 \n    2a29:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    2a2d:\t31 c0                \txor    %eax,%eax\n    2a2f:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2a35 <_nocheck__trace_nvme_err_invalid_create_sq_size+0x28>\n    2a35:\t85 c0                \ttest   %eax,%eax\n    2a37:\t0f 95 c0             \tsetne  %al\n    2a3a:\t0f b6 c0             \tmovzbl %al,%eax\n    2a3d:\t48 85 c0             \ttest   %rax,%rax\n    2a40:\t74 5e                \tje     2aa0 <_nocheck__trace_nvme_err_invalid_create_sq_size+0x93>\n    2a42:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 2a49 <_nocheck__trace_nvme_err_invalid_create_sq_size+0x3c>\n    2a49:\t66 85 c0             \ttest   %ax,%ax\n    2a4c:\t74 52                \tje     2aa0 <_nocheck__trace_nvme_err_invalid_create_sq_size+0x93>\n    2a4e:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n    2a53:\te8 6e de ff ff       \tcallq  8c6 <qemu_loglevel_mask>\n    2a58:\t84 c0                \ttest   %al,%al\n    2a5a:\t74 44                \tje     2aa0 <_nocheck__trace_nvme_err_invalid_create_sq_size+0x93>\n    2a5c:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    2a60:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2a65:\t48 89 c7             \tmov    %rax,%rdi\n    2a68:\te8 00 00 00 00       \tcallq  2a6d <_nocheck__trace_nvme_err_invalid_create_sq_size+0x60>\n    2a6d:\t0f b7 5d bc          \tmovzwl -0x44(%rbp),%ebx\n    2a71:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2a75:\t49 89 c5             \tmov    %rax,%r13\n    2a78:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2a7c:\t49 89 c4             \tmov    %rax,%r12\n    2a7f:\te8 00 00 00 00       \tcallq  2a84 <_nocheck__trace_nvme_err_invalid_create_sq_size+0x77>\n    2a84:\t41 89 d8             \tmov    %ebx,%r8d\n    2a87:\t4c 89 e9             \tmov    %r13,%rcx\n    2a8a:\t4c 89 e2             \tmov    %r12,%rdx\n    2a8d:\t89 c6                \tmov    %eax,%esi\n    2a8f:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 2a96 <_nocheck__trace_nvme_err_invalid_create_sq_size+0x89>\n    2a96:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2a9b:\te8 00 00 00 00       \tcallq  2aa0 <_nocheck__trace_nvme_err_invalid_create_sq_size+0x93>\n    2aa0:\t90                   \tnop\n    2aa1:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    2aa5:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    2aac:\t00 00 \n    2aae:\t74 05                \tje     2ab5 <_nocheck__trace_nvme_err_invalid_create_sq_size+0xa8>\n    2ab0:\te8 00 00 00 00       \tcallq  2ab5 <_nocheck__trace_nvme_err_invalid_create_sq_size+0xa8>\n    2ab5:\t48 83 c4 38          \tadd    $0x38,%rsp\n    2ab9:\t5b                   \tpop    %rbx\n    2aba:\t41 5c                \tpop    %r12\n    2abc:\t41 5d                \tpop    %r13\n    2abe:\t5d                   \tpop    %rbp\n    2abf:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_nvme_err_invalid_create_sq_size(\n    unsigned __int16 a1) {\n  __suseconds_t v1;\n  __time_t v2;\n  unsigned int v3;\n  struct timeval tv;\n  unsigned __int64 v6;\n  v6 = __readfsqword(Number);\n  if (trace_events_enabled_count &&\n      TRACE_NVME_ERR_INVALID_CREATE_SQ_SIZE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&tv, Number L);\n    v1 = tv.tv_usec;\n    v2 = tv.tv_sec;\n    v3 = qemu_get_thread_id();\n    qemu_log(String, v3, v2, v1, a1);\n  }\n  return __readfsqword(Number) ^ v6;\n}", "code_t": "void __cdecl nocheck__trace_nvme_err_invalid_create_sq_size(uint16_t qsize) {\n  __suseconds_t v1;\n  __time_t v2;\n  unsigned int v3;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v5;\n  v5 = __readfsqword(Number);\n  if (trace_events_enabled_count &&\n      TRACE_NVME_ERR_INVALID_CREATE_SQ_SIZE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v1 = <span class=\"supfact\">_now</span>.tv_usec;\n    v2 = <span class=\"supfact\">_now</span>.tv_sec;\n    v3 = qemu_get_thread_id();\n    qemu_log(String, v3, v2, v1, qsize);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "pred_name": "_now", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "krysmopompas", "repo_name": "OpenFrameworks-ng", "path": "krysmopompas/OpenFrameworks-ng/337779a50c1eacc5ea486f61ea1f2977aa50c37b1dc867036e3dc5e0eaf03bfa", "path_in_repo": "krysmopompas/OpenFrameworks-ng/extern/trees/poco/Foundation/testsuite/obj/Linux/x86_64/debug_shared/HashSetTest.o", "objdump": "0000000000000000 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t53                   \tpush   %rbx\n   5:\t48 83 ec 68          \tsub    $0x68,%rsp\n   9:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n   d:\t48 89 75 a0          \tmov    %rsi,-0x60(%rbp)\n  11:\t48 89 55 98          \tmov    %rdx,-0x68(%rbp)\n  15:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  19:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 20 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x20>\n  20:\tbe 01 00 00 00       \tmov    $0x1,%esi\n  25:\t48 89 c7             \tmov    %rax,%rdi\n  28:\te8 00 00 00 00       \tcallq  2d <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x2d>\n  2d:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n  31:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  35:\t48 8b 00             \tmov    (%rax),%rax\n  38:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n  3c:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  40:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  44:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n  48:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  4c:\t48 89 c7             \tmov    %rax,%rdi\n  4f:\te8 00 00 00 00       \tcallq  54 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x54>\n  54:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n  58:\t48 8d 55 b8          \tlea    -0x48(%rbp),%rdx\n  5c:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  60:\t48 89 d6             \tmov    %rdx,%rsi\n  63:\t48 89 c7             \tmov    %rax,%rdi\n  66:\te8 00 00 00 00       \tcallq  6b <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x6b>\n  6b:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n  6f:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  73:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n  77:\t48 89 d6             \tmov    %rdx,%rsi\n  7a:\t48 89 c7             \tmov    %rax,%rdi\n  7d:\te8 00 00 00 00       \tcallq  82 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x82>\n  82:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n  86:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  8a:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  8e:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n  92:\t48 89 c7             \tmov    %rax,%rdi\n  95:\te8 00 00 00 00       \tcallq  9a <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x9a>\n  9a:\t48 89 c2             \tmov    %rax,%rdx\n  9d:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  a1:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n  a8:\t00 \n  a9:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  ad:\t48 01 c1             \tadd    %rax,%rcx\n  b0:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  b4:\t48 89 ce             \tmov    %rcx,%rsi\n  b7:\t48 89 c7             \tmov    %rax,%rdi\n  ba:\te8 00 00 00 00       \tcallq  bf <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0xbf>\n  bf:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n  c6:\t00 \n  c7:\te8 00 00 00 00       \tcallq  cc <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0xcc>\n  cc:\t84 c0                \ttest   %al,%al\n  ce:\t74 71                \tje     141 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x141>\n  d0:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  d4:\t48 89 c7             \tmov    %rax,%rdi\n  d7:\te8 00 00 00 00       \tcallq  dc <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0xdc>\n  dc:\t48 89 c3             \tmov    %rax,%rbx\n  df:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  e3:\t48 89 c7             \tmov    %rax,%rdi\n  e6:\te8 00 00 00 00       \tcallq  eb <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0xeb>\n  eb:\t48 8b 30             \tmov    (%rax),%rsi\n  ee:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n  f2:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  f6:\t48 89 d9             \tmov    %rbx,%rcx\n  f9:\t48 89 c7             \tmov    %rax,%rdi\n  fc:\te8 00 00 00 00       \tcallq  101 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x101>\n 101:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 105:\t48 83 45 e8 04       \taddq   $0x4,-0x18(%rbp)\n 10a:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 10e:\t48 89 c7             \tmov    %rax,%rdi\n 111:\te8 00 00 00 00       \tcallq  116 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x116>\n 116:\t48 89 c3             \tmov    %rax,%rbx\n 119:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n 11d:\t48 89 c7             \tmov    %rax,%rdi\n 120:\te8 00 00 00 00       \tcallq  125 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x125>\n 125:\t48 8b 00             \tmov    (%rax),%rax\n 128:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n 12c:\t48 8b 75 d0          \tmov    -0x30(%rbp),%rsi\n 130:\t48 89 d9             \tmov    %rbx,%rcx\n 133:\t48 89 c7             \tmov    %rax,%rdi\n 136:\te8 00 00 00 00       \tcallq  13b <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x13b>\n 13b:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 13f:\teb 6f                \tjmp    1b0 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x1b0>\n 141:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 145:\t48 89 c7             \tmov    %rax,%rdi\n 148:\te8 00 00 00 00       \tcallq  14d <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x14d>\n 14d:\t48 89 c3             \tmov    %rax,%rbx\n 150:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n 154:\t48 89 c7             \tmov    %rax,%rdi\n 157:\te8 00 00 00 00       \tcallq  15c <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x15c>\n 15c:\t48 8b 30             \tmov    (%rax),%rsi\n 15f:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n 163:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 167:\t48 89 d9             \tmov    %rbx,%rcx\n 16a:\t48 89 c7             \tmov    %rax,%rdi\n 16d:\te8 00 00 00 00       \tcallq  172 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x172>\n 172:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 176:\t48 83 45 e8 04       \taddq   $0x4,-0x18(%rbp)\n 17b:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 17f:\t48 89 c7             \tmov    %rax,%rdi\n 182:\te8 00 00 00 00       \tcallq  187 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x187>\n 187:\t48 89 c3             \tmov    %rax,%rbx\n 18a:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n 18e:\t48 89 c7             \tmov    %rax,%rdi\n 191:\te8 00 00 00 00       \tcallq  196 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x196>\n 196:\t48 8b 00             \tmov    (%rax),%rax\n 199:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n 19d:\t48 8b 75 d0          \tmov    -0x30(%rbp),%rsi\n 1a1:\t48 89 d9             \tmov    %rbx,%rcx\n 1a4:\t48 89 c7             \tmov    %rax,%rdi\n 1a7:\te8 00 00 00 00       \tcallq  1ac <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x1ac>\n 1ac:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 1b0:\te8 00 00 00 00       \tcallq  1b5 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x1b5>\n 1b5:\t83 f0 01             \txor    $0x1,%eax\n 1b8:\t84 c0                \ttest   %al,%al\n 1ba:\t74 22                \tje     1de <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x1de>\n 1bc:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 1c0:\t48 89 c7             \tmov    %rax,%rdi\n 1c3:\te8 00 00 00 00       \tcallq  1c8 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x1c8>\n 1c8:\t48 89 c2             \tmov    %rax,%rdx\n 1cb:\t48 8b 4d d0          \tmov    -0x30(%rbp),%rcx\n 1cf:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 1d3:\t48 89 ce             \tmov    %rcx,%rsi\n 1d6:\t48 89 c7             \tmov    %rax,%rdi\n 1d9:\te8 00 00 00 00       \tcallq  1de <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x1de>\n 1de:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 1e2:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n 1e6:\t48 8b 52 10          \tmov    0x10(%rdx),%rdx\n 1ea:\t48 2b 55 d8          \tsub    -0x28(%rbp),%rdx\n 1ee:\t48 c1 fa 02          \tsar    $0x2,%rdx\n 1f2:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n 1f6:\t48 89 ce             \tmov    %rcx,%rsi\n 1f9:\t48 89 c7             \tmov    %rax,%rdi\n 1fc:\te8 00 00 00 00       \tcallq  201 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x201>\n 201:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 205:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n 209:\t48 89 10             \tmov    %rdx,(%rax)\n 20c:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 210:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n 214:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n 218:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 21c:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 223:\t00 \n 224:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 228:\t48 01 c2             \tadd    %rax,%rdx\n 22b:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 22f:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n 233:\te9 84 00 00 00       \tjmpq   2bc <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x2bc>\n 238:\t48 89 c7             \tmov    %rax,%rdi\n 23b:\te8 00 00 00 00       \tcallq  240 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x240>\n 240:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n 245:\t75 24                \tjne    26b <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x26b>\n 247:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 24b:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 252:\t00 \n 253:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 257:\t48 01 c2             \tadd    %rax,%rdx\n 25a:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 25e:\t48 89 d6             \tmov    %rdx,%rsi\n 261:\t48 89 c7             \tmov    %rax,%rdi\n 264:\te8 00 00 00 00       \tcallq  269 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x269>\n 269:\teb 22                \tjmp    28d <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x28d>\n 26b:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 26f:\t48 89 c7             \tmov    %rax,%rdi\n 272:\te8 00 00 00 00       \tcallq  277 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x277>\n 277:\t48 89 c2             \tmov    %rax,%rdx\n 27a:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n 27e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 282:\t48 89 ce             \tmov    %rcx,%rsi\n 285:\t48 89 c7             \tmov    %rax,%rdi\n 288:\te8 00 00 00 00       \tcallq  28d <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x28d>\n 28d:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 291:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n 295:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n 299:\t48 89 ce             \tmov    %rcx,%rsi\n 29c:\t48 89 c7             \tmov    %rax,%rdi\n 29f:\te8 00 00 00 00       \tcallq  2a4 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x2a4>\n 2a4:\te8 00 00 00 00       \tcallq  2a9 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x2a9>\n 2a9:\t48 89 c3             \tmov    %rax,%rbx\n 2ac:\te8 00 00 00 00       \tcallq  2b1 <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x2b1>\n 2b1:\t48 89 d8             \tmov    %rbx,%rax\n 2b4:\t48 89 c7             \tmov    %rax,%rdi\n 2b7:\te8 00 00 00 00       \tcallq  2bc <_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJRKiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_+0x2bc>\n 2bc:\t48 83 c4 68          \tadd    $0x68,%rsp\n 2c0:\t5b                   \tpop    %rbx\n 2c1:\t5d                   \tpop    %rbp\n 2c2:\tc3                   \tretq   ", "code_s": "__int64 *__fastcall std vector<int>\n_M_realloc_insert<int const &>(__int64 *a1, __int64 a2, __int64 a3) {\n  __int64 v3;\n  __int64 v4;\n  _QWORD *v5;\n  __int64 v6;\n  _QWORD *v7;\n  __int64 v8;\n  __int64 v9;\n  __int64 v10;\n  _QWORD *v11;\n  __int64 *result;\n  __int64 v14;\n  __int64 *v15;\n  __int64 v16;\n  __int64 v17;\n  __int64 v18;\n  __int64 v19;\n  __int64 v20;\n  __int64 v21;\n  __int64 v22;\n  v15 = a1;\n  v14 = a2;\n  v21 = std vector<int> _M_check_len(a1, Number L, String);\n  v20 = *a1;\n  v19 = a1[Number];\n  v16 = std vector<int> begin((__int64)a1);\n  v18 = __gnu_cxx operator-<int *, std vector<int>>(&v14, &v16);\n  v17 = std _Vector_base<int> _M_allocate(v15, v21);\n  v22 = v17;\n  v3 = std forward<int const &>(a3);\n  std allocator_traits<std allocator<int>> construct<int, int const &>(\n      (__int64)v15, v17 + Number * v18, v3);\n  v22 = Number L;\n  if ((unsigned __int8)std vector<int> _S_use_relocate()) {\n    v4 = std _Vector_base<int> _M_get_Tp_allocator((__int64)v15);\n    v5 = (_QWORD *)__gnu_cxx __normal_iterator<int *, std vector<int>> base(\n        (__int64)&v14);\n    v22 = std vector<int> _S_relocate(v20, *v5, v17, v4) + Number;\n    v6 = std _Vector_base<int> _M_get_Tp_allocator((__int64)v15);\n    v7 = (_QWORD *)__gnu_cxx __normal_iterator<int *, std vector<int>> base(\n        (__int64)&v14);\n    v22 = std vector<int> _S_relocate(*v7, v19, v22, v6);\n  } else {\n    v8 = std _Vector_base<int> _M_get_Tp_allocator((__int64)v15);\n    v9 = *(_QWORD *)__gnu_cxx __normal_iterator<int *, std vector<int>> base(\n        (__int64)&v14);\n    v22 = std __uninitialized_move_if_noexcept_a<int *, int *,\n                                                 std allocator<int>>(v20, v9,\n                                                                     v17, v8) +\n          Number;\n    v10 = std _Vector_base<int> _M_get_Tp_allocator((__int64)v15);\n    v11 = (_QWORD *)__gnu_cxx __normal_iterator<int *, std vector<int>> base(\n        (__int64)&v14);\n    v22 = std\n        __uninitialized_move_if_noexcept_a<int *, int *, std allocator<int>>(\n            *v11, v19, v22, v10);\n  }\n  if ((unsigned __int8)std vector<int> _S_use_relocate() != Number) {\n    std _Vector_base<int> _M_get_Tp_allocator((__int64)v15);\n    std _Destroy<int *, int>(v20, v19);\n  }\n  std _Vector_base<int> _M_deallocate((__int64)v15, v20,\n                                      (v15[Number] - v20) >> Number);\n  *v15 = v17;\n  v15[Number] = v22;\n  result = v15;\n  v15[Number] = v17 + Number * v21;\n  return result;\n}", "code_t": "void __fastcall std vector<int> _M_realloc_insert<int const &>(\n    std vector<int> *const this,\n    std vector<int> iterator <span class=\"supfact\">__position</span>, const int *a3,\n    const int *__args_0) {\n  const int *v4;\n  std _Vector_base<int> _Tp_alloc_type *v5;\n  std vector<int> pointer *v6;\n  std _Vector_base<int> _Tp_alloc_type *v7;\n  std vector<int> pointer *v8;\n  std allocator<int> *v9;\n  int *v10;\n  std allocator<int> *v11;\n  int **v12;\n  std allocator<int> *v13;\n  std vector<int> iterator <span class=\"supfact\">__positiona</span>;\n  std vector<int> *thisa;\n  __gnu_cxx __normal_iterator<int *, std vector<int>> <span class=\"supfact\">__rhs</span>;\n  std vector<int> pointer __new_start;\n  std vector<int> size_type __elems_before;\n  std vector<int> pointer __old_finish;\n  std vector<int> pointer __old_start;\n  std vector<int> size_type __len;\n  std vector<int> pointer __new_finish;\n  thisa = this;\n  <span class=\"supfact\">__positiona</span>._M_current =\n      <span class=\"supfact\">__position</span>._M_current;\n  __len = std vector<int> _M_check_len(this, Number, String);\n  __old_start = this->_M_impl._M_start;\n  __old_finish = this->_M_impl._M_finish;\n  <span class=\"supfact\">__rhs</span>._M_current = std vector<int> begin(this)._M_current;\n  __elems_before = __gnu_cxx operator-<int *, std vector<int>>(\n      &<span class=\"supfact\">__positiona</span>, &<span class=\"supfact\">__rhs</span>);\n  __new_start = std _Vector_base<int> _M_allocate(thisa, __len);\n  __new_finish = __new_start;\n  v4 = std forward<int const &>((std remove_reference<int const &> type *)a3);\n  std allocator_traits<std allocator<int>> construct<int, int const &>(\n      (std allocator_traits<std allocator<int>> allocator_type *)thisa,\n      &__new_start[__elems_before], v4, &__new_start[__elems_before]);\n  __new_finish = Number L;\n  if (std vector<int> _S_use_relocate()) {\n    v5 = std _Vector_base<int> _M_get_Tp_allocator(thisa);\n    v6 = (std vector<int> pointer *)\n        __gnu_cxx __normal_iterator<int *, std vector<int>>\n            base(&<span class=\"supfact\">__positiona</span>);\n    __new_finish =\n        std vector<int> _S_relocate(__old_start, *v6, __new_start, v5) + Number;\n    v7 = std _Vector_base<int> _M_get_Tp_allocator(thisa);\n    v8 = (std vector<int> pointer *)\n        __gnu_cxx __normal_iterator<int *, std vector<int>>\n            base(&<span class=\"supfact\">__positiona</span>);\n    __new_finish =\n        std vector<int> _S_relocate(*v8, __old_finish, __new_finish, v7);\n  } else {\n    v9 = std _Vector_base<int> _M_get_Tp_allocator(thisa);\n    v10 = *__gnu_cxx __normal_iterator<int *, std vector<int>> base(\n        &<span class=\"supfact\">__positiona</span>);\n    __new_finish = std __uninitialized_move_if_noexcept_a<int *, int *,\n                                                          std allocator<int>>(\n                       __old_start, v10, __new_start, v9) +\n                   Number;\n    v11 = std _Vector_base<int> _M_get_Tp_allocator(thisa);\n    v12 = (int **)__gnu_cxx __normal_iterator<int *, std vector<int>> base(\n        &<span class=\"supfact\">__positiona</span>);\n    __new_finish = std\n        __uninitialized_move_if_noexcept_a<int *, int *, std allocator<int>>(\n            *v12, __old_finish, __new_finish, v11);\n  }\n  if (!std vector<int> _S_use_relocate()) {\n    v13 = std _Vector_base<int> _M_get_Tp_allocator(thisa);\n    std _Destroy<int *, int>(__old_start, __old_finish, v13);\n  }\n  std _Vector_base<int> _M_deallocate(\n      thisa, __old_start, thisa->_M_impl._M_end_of_storage - __old_start);\n  thisa->_M_impl._M_start = __new_start;\n  thisa->_M_impl._M_finish = __new_finish;\n  thisa->_M_impl._M_end_of_storage = &__new_start[__len];\n}", "var": [{"name": "a2", "type": "__int64", "pred_name": "a2", "ref_name": "__position", "ref_type": "struct std::vector<int>::iterator { int * _M_current; }"}, {"name": "v14", "type": "__int64", "pred_name": "v14", "ref_name": "__positiona", "ref_type": "struct std::vector<int>::iterator { int * _M_current; }"}, {"name": "v16", "type": "__int64", "pred_name": "v16", "ref_name": "__rhs", "ref_type": "struct __gnu_cxx::__normal_iterator<int*,std::vector<int> > { int * _M_current; }"}], "body_in_train": false}, {"repo_owner": "aschils", "repo_name": "packetdrill_mptcp", "path": "aschils/packetdrill_mptcp/f12586e93c870ce6d623d457774db79bece9afbd194c2c1db368116c352992a8", "path_in_repo": "aschils/packetdrill_mptcp/gtests/net/packetdrill/packet_to_string_test", "objdump": "000000000042497c <wire_client_send_packets_start>:\n  42497c:\t55                   \tpush   %rbp\n  42497d:\t48 89 e5             \tmov    %rsp,%rbp\n  424980:\t48 83 ec 20          \tsub    $0x20,%rsp\n  424984:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  424988:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  42498c:\t8b 40 14             \tmov    0x14(%rax),%eax\n  42498f:\t89 c7                \tmov    %eax,%edi\n  424991:\te8 aa ec fd ff       \tcallq  403640 <htonl@plt>\n  424996:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  424999:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  42499d:\t48 8b 00             \tmov    (%rax),%rax\n  4249a0:\t48 8d 55 fc          \tlea    -0x4(%rbp),%rdx\n  4249a4:\tb9 04 00 00 00       \tmov    $0x4,%ecx\n  4249a9:\tbe 07 00 00 00       \tmov    $0x7,%esi\n  4249ae:\t48 89 c7             \tmov    %rax,%rdi\n  4249b1:\te8 32 f8 ff ff       \tcallq  4241e8 <wire_conn_write>\n  4249b6:\t85 c0                \ttest   %eax,%eax\n  4249b8:\t74 11                \tje     4249cb <wire_client_send_packets_start+0x4f>\n  4249ba:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4249be:\tbe f0 e2 43 00       \tmov    $0x43e2f0,%esi\n  4249c3:\t48 89 c7             \tmov    %rax,%rdi\n  4249c6:\te8 8e fb ff ff       \tcallq  424559 <wire_client_die>\n  4249cb:\t90                   \tnop\n  4249cc:\tc9                   \tleaveq \n  4249cd:\tc3                   \tretq   ", "code_s": "__int64 __fastcall wire_client_send_packets_start(__int64 a1) {\n  __int64 result;\n  __int64 v2;\n  __int64 v3;\n  __int64 v4;\n  __int64 v5;\n  uint32_t v6;\n  v6 = htonl(*(_DWORD *)(a1 + Number));\n  result = wire_conn_write(*(int **)a1, Number, (char *)&v6, Number);\n  if ((_DWORD)result)\n    wire_client_die(a1, (__int64)String, v2, v3, v4, v5);\n  return result;\n}", "code_t": "void __cdecl wire_client_send_packets_start(wire_client *wire_client) {\n  wire_packets_start <span class=\"supfact\">start</span>;\n  <span class=\"supfact\">start</span>.num_events = htonl(wire_client->num_events);\n  if (wire_conn_write(wire_client->wire_conn, WIRE_PACKETS_START,\n                      &<span class=\"supfact\">start</span>, Number))\n    wire_client_die(wire_client, String);\n}", "var": [{"name": "v6", "type": "int", "pred_name": "len", "ref_name": "start", "ref_type": "struct wire_packets_start { __be32 num_events; }"}], "body_in_train": false}, {"repo_owner": "macmade", "repo_name": "XEOS-core-acpi", "path": "macmade/XEOS-core-acpi/bd0bf0a979a66c4ac5344deef6bd8e32d0323e7ee0132c29fd38bb3eaad05bd6", "path_in_repo": "macmade/XEOS-core-acpi/acpica/tests/aapits/atresource.o", "objdump": "0000000000001c22 <AtRsrcTest0017>:\n    1c22:\t55                   \tpush   %rbp\n    1c23:\t48 89 e5             \tmov    %rsp,%rbp\n    1c26:\t48 83 ec 30          \tsub    $0x30,%rsp\n    1c2a:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n    1c31:\t00 \n    1c32:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1c37:\te8 00 00 00 00       \tcallq  1c3c <AtRsrcTest0017+0x1a>\n    1c3c:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    1c3f:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    1c43:\t74 08                \tje     1c4d <AtRsrcTest0017+0x2b>\n    1c45:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    1c48:\te9 f9 00 00 00       \tjmpq   1d46 <AtRsrcTest0017+0x124>\n    1c4d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1c54 <AtRsrcTest0017+0x32>\n    1c54:\t48 89 c1             \tmov    %rax,%rcx\n    1c57:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1c5c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1c61:\tbf fd 00 00 00       \tmov    $0xfd,%edi\n    1c66:\te8 00 00 00 00       \tcallq  1c6b <AtRsrcTest0017+0x49>\n    1c6b:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    1c6e:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    1c72:\t74 08                \tje     1c7c <AtRsrcTest0017+0x5a>\n    1c74:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    1c77:\te9 ca 00 00 00       \tjmpq   1d46 <AtRsrcTest0017+0x124>\n    1c7c:\t48 8d 55 d8          \tlea    -0x28(%rbp),%rdx\n    1c80:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1c84:\t48 89 c6             \tmov    %rax,%rsi\n    1c87:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1c8c:\te8 00 00 00 00       \tcallq  1c91 <AtRsrcTest0017+0x6f>\n    1c91:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    1c94:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    1c98:\t74 37                \tje     1cd1 <AtRsrcTest0017+0xaf>\n    1c9a:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1ca0 <AtRsrcTest0017+0x7e>\n    1ca0:\t83 c0 01             \tadd    $0x1,%eax\n    1ca3:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 1ca9 <AtRsrcTest0017+0x87>\n    1ca9:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    1cac:\t89 c7                \tmov    %eax,%edi\n    1cae:\te8 00 00 00 00       \tcallq  1cb3 <AtRsrcTest0017+0x91>\n    1cb3:\t48 89 c2             \tmov    %rax,%rdx\n    1cb6:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1cba:\t48 89 c6             \tmov    %rax,%rsi\n    1cbd:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1cc2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1cc7:\te8 00 00 00 00       \tcallq  1ccc <AtRsrcTest0017+0xaa>\n    1ccc:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    1ccf:\teb 75                \tjmp    1d46 <AtRsrcTest0017+0x124>\n    1cd1:\t48 c7 45 e0 01 00 00 \tmovq   $0x1,-0x20(%rbp)\n    1cd8:\t00 \n    1cd9:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    1ce0:\t00 \n    1ce1:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1ce5:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n    1ce9:\t48 89 d6             \tmov    %rdx,%rsi\n    1cec:\t48 89 c7             \tmov    %rax,%rdi\n    1cef:\te8 00 00 00 00       \tcallq  1cf4 <AtRsrcTest0017+0xd2>\n    1cf4:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    1cf7:\t81 7d f4 01 10 00 00 \tcmpl   $0x1001,-0xc(%rbp)\n    1cfe:\t74 37                \tje     1d37 <AtRsrcTest0017+0x115>\n    1d00:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1d06 <AtRsrcTest0017+0xe4>\n    1d06:\t83 c0 01             \tadd    $0x1,%eax\n    1d09:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 1d0f <AtRsrcTest0017+0xed>\n    1d0f:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    1d12:\t89 c7                \tmov    %eax,%edi\n    1d14:\te8 00 00 00 00       \tcallq  1d19 <AtRsrcTest0017+0xf7>\n    1d19:\t48 89 c2             \tmov    %rax,%rdx\n    1d1c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1d20:\t48 89 c6             \tmov    %rax,%rsi\n    1d23:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1d28:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1d2d:\te8 00 00 00 00       \tcallq  1d32 <AtRsrcTest0017+0x110>\n    1d32:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    1d35:\teb 0f                \tjmp    1d46 <AtRsrcTest0017+0x124>\n    1d37:\tbe 5f 00 00 00       \tmov    $0x5f,%esi\n    1d3c:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1d41:\te8 00 00 00 00       \tcallq  1d46 <AtRsrcTest0017+0x124>\n    1d46:\tc9                   \tleaveq \n    1d47:\tc3                   \tretq   ", "code_s": "__int64 AtRsrcTest0017() {\n  __int64 result;\n  const char *v1;\n  const char *v2;\n  __int64 v3;\n  __int64 v4[Number];\n  unsigned int v5;\n  const char *v6;\n  v6 = String;\n  v5 = AtAMLcodeFileNameSet(String);\n  if (v5)\n    return v5;\n  v5 = AtSubsystemInit(Number L, Number L, Number L, AtAMLcodeFileName);\n  if (v5)\n    return v5;\n  v5 = AcpiGetHandle(Number L, v6, &v3);\n  if (v5) {\n    ++AapiErrors;\n    v1 = (const char *)AcpiFormatException(v5);\n    printf(String, v6, v1);\n    result = v5;\n  } else {\n    v4[Number] = Number L;\n    v4[Number] = Number L;\n    v5 = AcpiSetCurrentResources(v3, v4);\n    if (v5 == Number) {\n      result = AtTerminateCtrlCheck(Number L, Number L);\n    } else {\n      ++AapiErrors;\n      v2 = (const char *)AcpiFormatException(v5);\n      printf(String, v6, v2);\n      result = v5;\n    }\n  }\n  return result;\n}", "code_t": "ACPI_STATUS __cdecl AtRsrcTest0017() {\n  ACPI_STATUS result;\n  const char *v1;\n  const char *v2;\n  ACPI_HANDLE Device;\n  ACPI_BUFFER <span class=\"supfact\">InBuffer</span>;\n  ACPI_STATUS Status;\n  ACPI_STRING Pathname;\n  Pathname = String;\n  Status = AtAMLcodeFileNameSet(String);\n  if (Status)\n    return Status;\n  Status = AtSubsystemInit(Number L, Number L, Number L, AtAMLcodeFileName);\n  if (Status)\n    return Status;\n  Status = AcpiGetHandle(Number L, Pathname, &Device);\n  if (Status) {\n    ++AapiErrors;\n    v1 = (const char *)AcpiFormatException(Status);\n    printf(String, Pathname, v1);\n    result = Status;\n  } else {\n    <span class=\"supfact\">InBuffer</span>.Length = Number L;\n    <span class=\"supfact\">InBuffer</span>.Pointer = Number L;\n    Status = AcpiSetCurrentResources(Device, &<span class=\"supfact\">InBuffer</span>);\n    if (Status == Number) {\n      result = AtTerminateCtrlCheck(Number L, Number L);\n    } else {\n      ++AapiErrors;\n      v2 = (const char *)AcpiFormatException(Status);\n      printf(String, Pathname, v2);\n      result = Status;\n    }\n  }\n  return result;\n}", "var": [{"name": "v4", "type": "__unk__", "pred_name": "__unk__", "ref_name": "InBuffer", "ref_type": "struct ACPI_BUFFER { ACPI_SIZE Length; void * Pointer; }"}], "body_in_train": false}, {"repo_owner": "isDerek", "repo_name": "BTC-Device", "path": "isDerek/BTC-Device/9eb5bdb0143a63b31132ea31d83410eefa0b801b31f29f5ffc43fd093e6ca1ae", "path_in_repo": "isDerek/BTC-Device/BTC_APP/middleware/multicore/erpc/Debug/Linux/erpcsniffer/obj/erpcgen/src/types/Type.o", "objdump": "0000000000000000 <_ZSt4copyISt13move_iteratorIPPN7erpcgen12StructMemberEES4_ET0_T_S7_S6_>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t53                   \tpush   %rbx\n   5:\t48 83 ec 28          \tsub    $0x28,%rsp\n   9:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   d:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n  11:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n  15:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  19:\t48 89 c7             \tmov    %rax,%rdi\n  1c:\te8 00 00 00 00       \tcallq  21 <_ZSt4copyISt13move_iteratorIPPN7erpcgen12StructMemberEES4_ET0_T_S7_S6_+0x21>\n  21:\t48 89 c3             \tmov    %rax,%rbx\n  24:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  28:\t48 89 c7             \tmov    %rax,%rdi\n  2b:\te8 00 00 00 00       \tcallq  30 <_ZSt4copyISt13move_iteratorIPPN7erpcgen12StructMemberEES4_ET0_T_S7_S6_+0x30>\n  30:\t48 89 c1             \tmov    %rax,%rcx\n  33:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  37:\t48 89 c2             \tmov    %rax,%rdx\n  3a:\t48 89 de             \tmov    %rbx,%rsi\n  3d:\t48 89 cf             \tmov    %rcx,%rdi\n  40:\te8 00 00 00 00       \tcallq  45 <_ZSt4copyISt13move_iteratorIPPN7erpcgen12StructMemberEES4_ET0_T_S7_S6_+0x45>\n  45:\t48 83 c4 28          \tadd    $0x28,%rsp\n  49:\t5b                   \tpop    %rbx\n  4a:\t5d                   \tpop    %rbp\n  4b:\tc3                   \tretq   ", "code_s": "__int64 __fastcall std\ncopy<std move_iterator<erpcgen StructMember **>, erpcgen StructMember **>(\n    __int64 a1, __int64 a2, __int64 a3) {\n  __int64 v3;\n  __int64 v4;\n  v3 = std __miter_base<erpcgen StructMember **>(a2);\n  v4 = std __miter_base<erpcgen StructMember **>(a1);\n  return std __copy_move_a2<true, erpcgen StructMember **,\n                            erpcgen StructMember **>(v4, v3, a3);\n}", "code_t": "erpcgen StructMember **__cdecl std\ncopy<std move_iterator<erpcgen StructMember **>, erpcgen StructMember **>(\n    std move_iterator<erpcgen StructMember **> <span class=\"supfact\">__first</span>,\n    std move_iterator<erpcgen StructMember **> <span class=\"supfact\">__last</span>,\n    erpcgen StructMember **__result) {\n  erpcgen StructMember **v3;\n  erpcgen StructMember **v4;\n  v3 = std __miter_base<erpcgen StructMember **>(<span class=\"supfact\">__last</span>);\n  v4 = std __miter_base<erpcgen StructMember **>(<span class=\"supfact\">__first</span>);\n  return std __copy_move_a2<true, erpcgen StructMember **,\n                            erpcgen StructMember **>(v4, v3, __result);\n}", "var": [{"name": "a1", "type": "struct std::move_iterator<erpcgen::ListType**> { erpcgen::ListType ** _M_current; }", "pred_name": "__first", "ref_name": "__first", "ref_type": "struct std::move_iterator<erpcgen::StructMember**> { erpcgen::StructMember ** _M_current; }"}, {"name": "a2", "type": "struct std::move_iterator<erpcgen::ListType**> { erpcgen::ListType ** _M_current; }", "pred_name": "__last", "ref_name": "__last", "ref_type": "struct std::move_iterator<erpcgen::StructMember**> { erpcgen::StructMember ** _M_current; }"}], "body_in_train": false}, {"repo_owner": "hacxman", "repo_name": "qemu", "path": "hacxman/qemu/702106c36b33cb0fbc5a334800786eab940272a71eab4e5045f8cd61aafa0110", "path_in_repo": "hacxman/qemu//hw/usb/hcd-ehci.o", "objdump": "0000000000003be6 <ehci_state_waitlisthead>:\n    3be6:\t55                   \tpush   %rbp\n    3be7:\t48 89 e5             \tmov    %rsp,%rbp\n    3bea:\t48 83 ec 60          \tsub    $0x60,%rsp\n    3bee:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n    3bf2:\t89 75 a4             \tmov    %esi,-0x5c(%rbp)\n    3bf5:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    3bfc:\t00 00 \n    3bfe:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    3c02:\t31 c0                \txor    %eax,%eax\n    3c04:\tc7 45 b4 00 00 00 00 \tmovl   $0x0,-0x4c(%rbp)\n    3c0b:\tc7 45 b8 00 00 00 00 \tmovl   $0x0,-0x48(%rbp)\n    3c12:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    3c16:\t8b 80 ec 04 00 00    \tmov    0x4ec(%rax),%eax\n    3c1c:\t89 45 bc             \tmov    %eax,-0x44(%rbp)\n    3c1f:\t83 7d a4 00          \tcmpl   $0x0,-0x5c(%rbp)\n    3c23:\t74 11                \tje     3c36 <ehci_state_waitlisthead+0x50>\n    3c25:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    3c29:\tbe 00 20 00 00       \tmov    $0x2000,%esi\n    3c2e:\t48 89 c7             \tmov    %rax,%rdi\n    3c31:\te8 7a c9 ff ff       \tcallq  5b0 <ehci_set_usbsts>\n    3c36:\t8b 55 a4             \tmov    -0x5c(%rbp),%edx\n    3c39:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    3c3d:\t89 d6                \tmov    %edx,%esi\n    3c3f:\t48 89 c7             \tmov    %rax,%rdi\n    3c42:\te8 6d db ff ff       \tcallq  17b4 <ehci_queues_rip_unused>\n    3c47:\tc7 45 b4 00 00 00 00 \tmovl   $0x0,-0x4c(%rbp)\n    3c4e:\te9 a4 00 00 00       \tjmpq   3cf7 <ehci_state_waitlisthead+0x111>\n    3c53:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    3c56:\t83 e0 e0             \tand    $0xffffffe0,%eax\n    3c59:\t89 c6                \tmov    %eax,%esi\n    3c5b:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n    3c5f:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    3c63:\tb9 0c 00 00 00       \tmov    $0xc,%ecx\n    3c68:\t48 89 c7             \tmov    %rax,%rdi\n    3c6b:\te8 c3 d0 ff ff       \tcallq  d33 <get_dwords>\n    3c70:\t85 c0                \ttest   %eax,%eax\n    3c72:\t79 0a                \tjns    3c7e <ehci_state_waitlisthead+0x98>\n    3c74:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3c79:\te9 9f 00 00 00       \tjmpq   3d1d <ehci_state_waitlisthead+0x137>\n    3c7e:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    3c81:\t83 e0 e0             \tand    $0xffffffe0,%eax\n    3c84:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n    3c88:\t48 89 c6             \tmov    %rax,%rsi\n    3c8b:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3c90:\te8 10 cd ff ff       \tcallq  9a5 <ehci_trace_qh>\n    3c95:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    3c98:\t25 00 80 00 00       \tand    $0x8000,%eax\n    3c9d:\t85 c0                \ttest   %eax,%eax\n    3c9f:\t74 3d                \tje     3cde <ehci_state_waitlisthead+0xf8>\n    3ca1:\t83 7d a4 00          \tcmpl   $0x0,-0x5c(%rbp)\n    3ca5:\t74 04                \tje     3cab <ehci_state_waitlisthead+0xc5>\n    3ca7:\t83 4d bc 02          \torl    $0x2,-0x44(%rbp)\n    3cab:\t8b 55 bc             \tmov    -0x44(%rbp),%edx\n    3cae:\t8b 4d a4             \tmov    -0x5c(%rbp),%ecx\n    3cb1:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    3cb5:\t89 ce                \tmov    %ecx,%esi\n    3cb7:\t48 89 c7             \tmov    %rax,%rdi\n    3cba:\te8 8a cc ff ff       \tcallq  949 <ehci_set_fetch_addr>\n    3cbf:\t8b 4d a4             \tmov    -0x5c(%rbp),%ecx\n    3cc2:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    3cc6:\tba ed 03 00 00       \tmov    $0x3ed,%edx\n    3ccb:\t89 ce                \tmov    %ecx,%esi\n    3ccd:\t48 89 c7             \tmov    %rax,%rdi\n    3cd0:\te8 60 cb ff ff       \tcallq  835 <ehci_set_state>\n    3cd5:\tc7 45 b8 01 00 00 00 \tmovl   $0x1,-0x48(%rbp)\n    3cdc:\teb 3c                \tjmp    3d1a <ehci_state_waitlisthead+0x134>\n    3cde:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    3ce1:\t89 45 bc             \tmov    %eax,-0x44(%rbp)\n    3ce4:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    3ce8:\t8b 80 ec 04 00 00    \tmov    0x4ec(%rax),%eax\n    3cee:\t39 45 bc             \tcmp    %eax,-0x44(%rbp)\n    3cf1:\t74 10                \tje     3d03 <ehci_state_waitlisthead+0x11d>\n    3cf3:\t83 45 b4 01          \taddl   $0x1,-0x4c(%rbp)\n    3cf7:\t83 7d b4 63          \tcmpl   $0x63,-0x4c(%rbp)\n    3cfb:\t0f 8e 52 ff ff ff    \tjle    3c53 <ehci_state_waitlisthead+0x6d>\n    3d01:\teb 01                \tjmp    3d04 <ehci_state_waitlisthead+0x11e>\n    3d03:\t90                   \tnop\n    3d04:\t8b 4d a4             \tmov    -0x5c(%rbp),%ecx\n    3d07:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    3d0b:\tba e9 03 00 00       \tmov    $0x3e9,%edx\n    3d10:\t89 ce                \tmov    %ecx,%esi\n    3d12:\t48 89 c7             \tmov    %rax,%rdi\n    3d15:\te8 1b cb ff ff       \tcallq  835 <ehci_set_state>\n    3d1a:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n    3d1d:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    3d21:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n    3d28:\t00 00 \n    3d2a:\t74 05                \tje     3d31 <ehci_state_waitlisthead+0x14b>\n    3d2c:\te8 00 00 00 00       \tcallq  3d31 <ehci_state_waitlisthead+0x14b>\n    3d31:\tc9                   \tleaveq \n    3d32:\tc3                   \tretq   ", "code_s": "__int64 __fastcall ehci_state_waitlisthead(_DWORD *a1, int a2) {\n  int i;\n  unsigned int v4;\n  int v5;\n  int v6;\n  int v7;\n  unsigned __int64 v8;\n  v8 = __readfsqword(Number);\n  v4 = Number;\n  v5 = a1[Number];\n  if (a2)\n    ehci_set_usbsts((__int64)a1, Number);\n  ehci_queues_rip_unused((__int64)a1, a2);\n  for (i = Number;; ++i) {\n    if (i > Number) {\n    LABEL_13:\n      ehci_set_state(a1, a2, Number);\n      return v4;\n    }\n    if ((int)get_dwords((__int64)a1, v5 & Number, (unsigned int *)&v6, Number) <\n        Number)\n      return Number L;\n    ehci_trace_qh();\n    if ((v7 & Number) != Number)\n      break;\n    v5 = v6;\n    if (v6 == a1[Number])\n      goto LABEL_13;\n  }\n  if (a2)\n    v5 |= Number;\n  ehci_set_fetch_addr((__int64)a1, a2, v5);\n  ehci_set_state(a1, a2, Number);\n  return Number;\n}", "code_t": "int __cdecl ehci_state_waitlisthead(EHCIState_0 *ehci, int async) {\n  int i;\n  int again;\n  uint32_t entry;\n  EHCIqh_0 <span class=\"supfact\">qh</span>;\n  unsigned __int64 v7;\n  v7 = __readfsqword(Number);\n  again = Number;\n  entry = ehci->_anon_0.opreg[Number];\n  if (async)\n    ehci_set_usbsts(ehci, Number);\n  ehci_queues_rip_unused(ehci, async);\n  for (i = Number;; ++i) {\n    if (i > Number) {\n    LABEL_13:\n      ehci_set_state(ehci, async, Number);\n      return again;\n    }\n    if (get_dwords(ehci, entry & Number, &<span class=\"supfact\">qh</span>.next, Number) <\n        Number)\n      return Number;\n    ehci_trace_qh(Number L, entry & Number, &<span class=\"supfact\">qh</span>);\n    if ((<span class=\"supfact\">qh</span>.epchar & Number) != Number)\n      break;\n    entry = <span class=\"supfact\">qh</span>.next;\n    if (<span class=\"supfact\">qh</span>.next == ehci->_anon_0.opreg[Number])\n      goto LABEL_13;\n  }\n  if (async)\n    entry |= Number;\n  ehci_set_fetch_addr(ehci, async, entry);\n  ehci_set_state(ehci, async, Number);\n  return Number;\n}", "var": [{"name": "v6", "type": "struct EHCIqh_0 { uint32_t next; uint32_t epchar; uint32_t epcap; uint32_t current_qtd; uint32_t next_qtd; uint32_t altnext_qtd; uint32_t token; uint32_t[5] bufptr; }", "pred_name": "qh", "ref_name": "qh", "ref_type": "struct EHCIqh_0 { uint32_t next; uint32_t epchar; uint32_t epcap; uint32_t current_qtd; uint32_t next_qtd; uint32_t altnext_qtd; uint32_t token; uint32_t[5] bufptr; }"}], "body_in_train": false}, {"repo_owner": "tlewowski", "repo_name": "CppProjectTemplate", "path": "tlewowski/CppProjectTemplate/acc787bbbda65e30d99b4050e22e00e21eb825d0c43681a53a0a66d9d464216e", "path_in_repo": "tlewowski/CppProjectTemplate/production/libs/pugixml/pugixml/build/make-g++-debug-standard/tests/test_xpath_xalan_1.cpp.o", "objdump": "0000000000000000 <_ZN30test_runner_xpath_xalan_math_13runEv>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t53                   \tpush   %rbx\n   5:\t48 81 ec e8 00 00 00 \tsub    $0xe8,%rsp\n   c:\t48 89 bd 18 ff ff ff \tmov    %rdi,-0xe8(%rbp)\n  13:\t48 8d 85 20 ff ff ff \tlea    -0xe0(%rbp),%rax\n  1a:\t48 89 c7             \tmov    %rax,%rdi\n  1d:\te8 00 00 00 00       \tcallq  22 <_ZN30test_runner_xpath_xalan_math_13runEv+0x22>\n  22:\t48 8d 85 20 ff ff ff \tlea    -0xe0(%rbp),%rax\n  29:\t48 89 c7             \tmov    %rax,%rdi\n  2c:\te8 00 00 00 00       \tcallq  31 <_ZN30test_runner_xpath_xalan_math_13runEv+0x31>\n  31:\t48 8d 85 20 ff ff ff \tlea    -0xe0(%rbp),%rax\n  38:\t48 89 c7             \tmov    %rax,%rdi\n  3b:\te8 00 00 00 00       \tcallq  40 <_ZN30test_runner_xpath_xalan_math_13runEv+0x40>\n  40:\teb 1d                \tjmp    5f <_ZN30test_runner_xpath_xalan_math_13runEv+0x5f>\n  42:\t48 89 c3             \tmov    %rax,%rbx\n  45:\t48 8d 85 20 ff ff ff \tlea    -0xe0(%rbp),%rax\n  4c:\t48 89 c7             \tmov    %rax,%rdi\n  4f:\te8 00 00 00 00       \tcallq  54 <_ZN30test_runner_xpath_xalan_math_13runEv+0x54>\n  54:\t48 89 d8             \tmov    %rbx,%rax\n  57:\t48 89 c7             \tmov    %rax,%rdi\n  5a:\te8 00 00 00 00       \tcallq  5f <_ZN30test_runner_xpath_xalan_math_13runEv+0x5f>\n  5f:\t48 81 c4 e8 00 00 00 \tadd    $0xe8,%rsp\n  66:\t5b                   \tpop    %rbx\n  67:\t5d                   \tpop    %rbp\n  68:\tc3                   \tretq   ", "code_s": "void __fastcall test_runner_xpath_xalan_math_1\nrun(test_runner_xpath_xalan_math_1 *this) {\n  char v1[Number];\n  test_runner_helper_xpath_xalan_math_1 test_runner_helper_xpath_xalan_math_1(\n      (test_runner_helper_xpath_xalan_math_1 *)v1);\n  test_runner_helper_xpath_xalan_math_1 run(\n      (test_runner_helper_xpath_xalan_math_1 *)v1);\n  test_runner_helper_xpath_xalan_math_1 ~test_runner_helper_xpath_xalan_math_1(\n      (test_runner_helper_xpath_xalan_math_1 *)v1);\n}", "code_t": "void __cdecl test_runner_xpath_xalan_math_1\nrun(test_runner_xpath_xalan_math_1 *const this) {\n  test_runner_helper_xpath_xalan_math_1 <span class=\"supfact\">helper</span>;\n  test_runner_helper_xpath_xalan_math_1 test_runner_helper_xpath_xalan_math_1(\n      &<span class=\"supfact\">helper</span>);\n  test_runner_helper_xpath_xalan_math_1 run(&<span class=\"supfact\">helper</span>);\n  test_runner_helper_xpath_xalan_math_1 ~test_runner_helper_xpath_xalan_math_1(\n      &<span class=\"supfact\">helper</span>);\n}", "var": [{"name": "v1", "type": "__unk__", "pred_name": "helper", "ref_name": "helper", "ref_type": "struct test_runner_helper_xpath_xalan_math_1 { test_fixture_xpath_xalan_math_1 baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "dtsund", "repo_name": "crawl-light", "path": "dtsund/crawl-light/8b21717fbac89bc49a6f48d2367b481a1b23a9f076c1b6e10ce82f7df68f1895", "path_in_repo": "dtsund/crawl-light/crawl-ref/source/spl-transloc.o", "objdump": "000000000000018f <_ZL15_quadrant_blink9coord_defiiP5actor.cold>:\n 18f:\t48 8b 7d 90          \tmov    -0x70(%rbp),%rdi\n 193:\t48 39 df             \tcmp    %rbx,%rdi\n 196:\t74 05                \tje     19d <_ZL15_quadrant_blink9coord_defiiP5actor.cold+0xe>\n 198:\te8 00 00 00 00       \tcallq  19d <_ZL15_quadrant_blink9coord_defiiP5actor.cold+0xe>\n 19d:\t48 8b 7d b0          \tmov    -0x50(%rbp),%rdi\n 1a1:\t4c 39 ff             \tcmp    %r15,%rdi\n 1a4:\t74 05                \tje     1ab <_ZL15_quadrant_blink9coord_defiiP5actor.cold+0x1c>\n 1a6:\te8 00 00 00 00       \tcallq  1ab <_ZL15_quadrant_blink9coord_defiiP5actor.cold+0x1c>\n 1ab:\t4c 89 e7             \tmov    %r12,%rdi\n 1ae:\te8 00 00 00 00       \tcallq  1b3 <_Z22cast_golubrias_passageRK9coord_def.cold>", "code_s": "void __fastcall __noreturn _quadrant_blink() {\n  void *v0;\n  __int64 v1;\n  struct _Unwind_Exception *v2;\n  void *v3;\n  void *v4;\n  void *v5;\n  v4 = *(void **)(v1 - Number);\n  if (v4 != v0)\n    operator delete(v4);\n  v5 = *(void **)(v1 - Number);\n  if (v5 != v3)\n    operator delete(v5);\n  Unwind_Resume(v2);\n}", "code_t": "void __fastcall __noreturn _quadrant_blink() {\n  void *v0;\n  __int64 v1;\n  struct _Unwind_Exception *<span class=\"supfact\">v2</span>;\n  void *v3;\n  void *v4;\n  void *v5;\n  v4 = *(void **)(v1 - Number);\n  if (v4 != v0)\n    operator delete(v4);\n  v5 = *(void **)(v1 - Number);\n  if (v5 != v3)\n    operator delete(v5);\n  Unwind_Resume(<span class=\"supfact\">v2</span>);\n}", "var": [{"name": "v2", "type": "struct _Unwind_Exception *", "pred_name": "v2", "ref_name": "v2", "ref_type": "struct _Unwind_Exception *"}], "body_in_train": false}, {"repo_owner": "vtomasr5", "repo_name": "aso", "path": "vtomasr5/aso/8daa3378aa39d35263e2ab545ba5e2e78374565d090443e23daafd31b8511ded", "path_in_repo": "vtomasr5/aso//libs/ficheros.o", "objdump": "0000000000000b87 <mi_truncar_f>:\n b87:\t55                   \tpush   %rbp\n b88:\t48 89 e5             \tmov    %rsp,%rbp\n b8b:\t48 81 ec b0 00 00 00 \tsub    $0xb0,%rsp\n b92:\t89 bd 5c ff ff ff    \tmov    %edi,-0xa4(%rbp)\n b98:\t89 b5 58 ff ff ff    \tmov    %esi,-0xa8(%rbp)\n b9e:\t8b 95 5c ff ff ff    \tmov    -0xa4(%rbp),%edx\n ba4:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n bab:\t89 d6                \tmov    %edx,%esi\n bad:\t48 89 c7             \tmov    %rax,%rdi\n bb0:\te8 00 00 00 00       \tcallq  bb5 <mi_truncar_f+0x2e>\n bb5:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n bbb:\t39 85 58 ff ff ff    \tcmp    %eax,-0xa8(%rbp)\n bc1:\t76 14                \tjbe    bd7 <mi_truncar_f+0x50>\n bc3:\tbf 00 00 00 00       \tmov    $0x0,%edi\n bc8:\te8 00 00 00 00       \tcallq  bcd <mi_truncar_f+0x46>\n bcd:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n bd2:\te9 00 02 00 00       \tjmpq   dd7 <mi_truncar_f+0x250>\n bd7:\t83 bd 58 ff ff ff 00 \tcmpl   $0x0,-0xa8(%rbp)\n bde:\t75 79                \tjne    c59 <mi_truncar_f+0xd2>\n be0:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n be6:\t89 c7                \tmov    %eax,%edi\n be8:\te8 00 00 00 00       \tcallq  bed <mi_truncar_f+0x66>\n bed:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n bf3:\t89 85 68 ff ff ff    \tmov    %eax,-0x98(%rbp)\n bf9:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n bff:\tff 75 d8             \tpushq  -0x28(%rbp)\n c02:\tff 75 d0             \tpushq  -0x30(%rbp)\n c05:\tff 75 c8             \tpushq  -0x38(%rbp)\n c08:\tff 75 c0             \tpushq  -0x40(%rbp)\n c0b:\tff 75 b8             \tpushq  -0x48(%rbp)\n c0e:\tff 75 b0             \tpushq  -0x50(%rbp)\n c11:\tff 75 a8             \tpushq  -0x58(%rbp)\n c14:\tff 75 a0             \tpushq  -0x60(%rbp)\n c17:\tff 75 98             \tpushq  -0x68(%rbp)\n c1a:\tff 75 90             \tpushq  -0x70(%rbp)\n c1d:\tff 75 88             \tpushq  -0x78(%rbp)\n c20:\tff 75 80             \tpushq  -0x80(%rbp)\n c23:\tff b5 78 ff ff ff    \tpushq  -0x88(%rbp)\n c29:\tff b5 70 ff ff ff    \tpushq  -0x90(%rbp)\n c2f:\tff b5 68 ff ff ff    \tpushq  -0x98(%rbp)\n c35:\tff b5 60 ff ff ff    \tpushq  -0xa0(%rbp)\n c3b:\t89 c7                \tmov    %eax,%edi\n c3d:\te8 00 00 00 00       \tcallq  c42 <mi_truncar_f+0xbb>\n c42:\t48 83 ec 80          \tsub    $0xffffffffffffff80,%rsp\n c46:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n c49:\t0f 85 83 01 00 00    \tjne    dd2 <mi_truncar_f+0x24b>\n c4f:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n c54:\te9 7e 01 00 00       \tjmpq   dd7 <mi_truncar_f+0x250>\n c59:\t83 bd 58 ff ff ff 00 \tcmpl   $0x0,-0xa8(%rbp)\n c60:\t0f 84 6c 01 00 00    \tje     dd2 <mi_truncar_f+0x24b>\n c66:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n c6c:\tc1 e8 0a             \tshr    $0xa,%eax\n c6f:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n c72:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n c78:\t25 ff 03 00 00       \tand    $0x3ff,%eax\n c7d:\t85 c0                \ttest   %eax,%eax\n c7f:\t75 04                \tjne    c85 <mi_truncar_f+0xfe>\n c81:\t83 6d fc 01          \tsubl   $0x1,-0x4(%rbp)\n c85:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n c8b:\tc1 e8 0a             \tshr    $0xa,%eax\n c8e:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n c91:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n c97:\t25 ff 03 00 00       \tand    $0x3ff,%eax\n c9c:\t85 c0                \ttest   %eax,%eax\n c9e:\t75 04                \tjne    ca4 <mi_truncar_f+0x11d>\n ca0:\t83 6d f8 01          \tsubl   $0x1,-0x8(%rbp)\n ca4:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n cab:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n cae:\t83 c0 01             \tadd    $0x1,%eax\n cb1:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n cb4:\te9 a8 00 00 00       \tjmpq   d61 <mi_truncar_f+0x1da>\n cb9:\t8b 75 f4             \tmov    -0xc(%rbp),%esi\n cbc:\t48 8d 55 ec          \tlea    -0x14(%rbp),%rdx\n cc0:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n cc6:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n ccb:\t89 c7                \tmov    %eax,%edi\n ccd:\te8 00 00 00 00       \tcallq  cd2 <mi_truncar_f+0x14b>\n cd2:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n cd5:\t83 7d f0 ff          \tcmpl   $0xffffffff,-0x10(%rbp)\n cd9:\t75 14                \tjne    cef <mi_truncar_f+0x168>\n cdb:\tbf 00 00 00 00       \tmov    $0x0,%edi\n ce0:\te8 00 00 00 00       \tcallq  ce5 <mi_truncar_f+0x15e>\n ce5:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n cea:\te9 e8 00 00 00       \tjmpq   dd7 <mi_truncar_f+0x250>\n cef:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n cf2:\t85 c0                \ttest   %eax,%eax\n cf4:\t74 2c                \tje     d22 <mi_truncar_f+0x19b>\n cf6:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n cf9:\t89 c7                \tmov    %eax,%edi\n cfb:\te8 00 00 00 00       \tcallq  d00 <mi_truncar_f+0x179>\n d00:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n d03:\t75 14                \tjne    d19 <mi_truncar_f+0x192>\n d05:\tbf 00 00 00 00       \tmov    $0x0,%edi\n d0a:\te8 00 00 00 00       \tcallq  d0f <mi_truncar_f+0x188>\n d0f:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n d14:\te9 be 00 00 00       \tjmpq   dd7 <mi_truncar_f+0x250>\n d19:\t8b 45 88             \tmov    -0x78(%rbp),%eax\n d1c:\t83 e8 01             \tsub    $0x1,%eax\n d1f:\t89 45 88             \tmov    %eax,-0x78(%rbp)\n d22:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n d25:\t3b 45 fc             \tcmp    -0x4(%rbp),%eax\n d28:\t75 22                \tjne    d4c <mi_truncar_f+0x1c5>\n d2a:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n d30:\t25 ff 03 00 00       \tand    $0x3ff,%eax\n d35:\t85 c0                \ttest   %eax,%eax\n d37:\t74 13                \tje     d4c <mi_truncar_f+0x1c5>\n d39:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n d3f:\t25 00 fc ff ff       \tand    $0xfffffc00,%eax\n d44:\t89 85 68 ff ff ff    \tmov    %eax,-0x98(%rbp)\n d4a:\teb 11                \tjmp    d5d <mi_truncar_f+0x1d6>\n d4c:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n d52:\t2d 00 04 00 00       \tsub    $0x400,%eax\n d57:\t89 85 68 ff ff ff    \tmov    %eax,-0x98(%rbp)\n d5d:\t83 45 f4 01          \taddl   $0x1,-0xc(%rbp)\n d61:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n d64:\t3b 45 fc             \tcmp    -0x4(%rbp),%eax\n d67:\t0f 8e 4c ff ff ff    \tjle    cb9 <mi_truncar_f+0x132>\n d6d:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n d73:\t89 85 68 ff ff ff    \tmov    %eax,-0x98(%rbp)\n d79:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n d7f:\tff 75 d8             \tpushq  -0x28(%rbp)\n d82:\tff 75 d0             \tpushq  -0x30(%rbp)\n d85:\tff 75 c8             \tpushq  -0x38(%rbp)\n d88:\tff 75 c0             \tpushq  -0x40(%rbp)\n d8b:\tff 75 b8             \tpushq  -0x48(%rbp)\n d8e:\tff 75 b0             \tpushq  -0x50(%rbp)\n d91:\tff 75 a8             \tpushq  -0x58(%rbp)\n d94:\tff 75 a0             \tpushq  -0x60(%rbp)\n d97:\tff 75 98             \tpushq  -0x68(%rbp)\n d9a:\tff 75 90             \tpushq  -0x70(%rbp)\n d9d:\tff 75 88             \tpushq  -0x78(%rbp)\n da0:\tff 75 80             \tpushq  -0x80(%rbp)\n da3:\tff b5 78 ff ff ff    \tpushq  -0x88(%rbp)\n da9:\tff b5 70 ff ff ff    \tpushq  -0x90(%rbp)\n daf:\tff b5 68 ff ff ff    \tpushq  -0x98(%rbp)\n db5:\tff b5 60 ff ff ff    \tpushq  -0xa0(%rbp)\n dbb:\t89 c7                \tmov    %eax,%edi\n dbd:\te8 00 00 00 00       \tcallq  dc2 <mi_truncar_f+0x23b>\n dc2:\t48 83 ec 80          \tsub    $0xffffffffffffff80,%rsp\n dc6:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n dc9:\t75 07                \tjne    dd2 <mi_truncar_f+0x24b>\n dcb:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n dd0:\teb 05                \tjmp    dd7 <mi_truncar_f+0x250>\n dd2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n dd7:\tc9                   \tleaveq \n dd8:\tc3                   \tretq   ", "code_s": "__int64 __fastcall mi_truncar_f(unsigned int a1, unsigned int a2) {\n  __int64 v3;\n  __int64 v4;\n  __int64 v5;\n  unsigned int v6;\n  int v7;\n  unsigned int i;\n  unsigned int v9;\n  int v10;\n  llegirInode(&v3, a1);\n  if (a2 > (unsigned int)v4) {\n    puts(aFicherosCError);\n    return Number;\n  }\n  if (a2) {\n    v10 = (unsigned int)v4 >> Number;\n    if ((v4 & Number) == Number)\n      --v10;\n    v9 = a2 >> Number;\n    if ((a2 & Number) == Number)\n      --v9;\n    for (i = v9 + Number; (int)i <= v10; ++i) {\n      v7 = traduirBlocInode(a1, i, &v6, Number L);\n      if (v7 == Number) {\n        puts(String);\n        return Number;\n      }\n      if (v6) {\n        if ((unsigned int)alliberarBloc(v6) == Number) {\n          puts(String);\n          return Number;\n        }\n        LODWORD(v5) = v5 - Number;\n      }\n      if (i == v10 && (v4 & Number) != Number)\n        LODWORD(v4) = v4 & Number;\n      else\n        LODWORD(v4) = v4 - Number;\n    }\n    LODWORD(v4) = a2;\n    if ((unsigned int)escriureInode(a1) == Number)\n      return Number;\n  } else {\n    alliberarInode(a1);\n    LODWORD(v4) = Number;\n    if ((unsigned int)escriureInode(a1) == Number)\n      return Number;\n  }\n  return Number L;\n}", "code_t": "int __cdecl mi_truncar_f(unsigned int inod, unsigned int nbytes) {\n  inode <span class=\"supfact\">in</span>;\n  uint bfisic;\n  int ret;\n  int i;\n  int bloc_conservar;\n  int darrer_bloc;\n  llegirInode(&<span class=\"supfact\">in</span>, inod);\n  if (nbytes > <span class=\"supfact\">in</span>.tamany) {\n    puts(aFicherosCError_5);\n    return Number;\n  }\n  if (nbytes) {\n    darrer_bloc = <span class=\"supfact\">in</span>.tamany >> Number;\n    if ((<span class=\"supfact\">in</span>.tamany & Number) == Number)\n      --darrer_bloc;\n    bloc_conservar = nbytes >> Number;\n    if ((nbytes & Number) == Number)\n      --bloc_conservar;\n    for (i = bloc_conservar + Number; i <= darrer_bloc; ++i) {\n      ret = traduirBlocInode(inod, (unsigned int)i, &bfisic, Number L);\n      if (ret == Number) {\n        puts(String);\n        return Number;\n      }\n      if (bfisic) {\n        if ((unsigned int)alliberarBloc(bfisic) == Number) {\n          puts(String);\n          return Number;\n        }\n        --<span class=\"supfact\">in</span>.blocs_assignats_dades;\n      }\n      if (i == darrer_bloc && (<span class=\"supfact\">in</span>.tamany & Number) != Number)\n        <span class=\"supfact\">in</span>.tamany &= Number;\n      else\n        <span class=\"supfact\">in</span>.tamany -= Number;\n    }\n    <span class=\"supfact\">in</span>.tamany = nbytes;\n    if ((unsigned int)escriureInode(inod) == Number)\n      return Number;\n  } else {\n    alliberarInode(inod);\n    <span class=\"supfact\">in</span>.tamany = Number;\n    if ((unsigned int)escriureInode(inod) == Number)\n      return Number;\n  }\n  return Number;\n}", "var": [{"name": "v3", "type": "__int64", "pred_name": "v3", "ref_name": "in", "ref_type": "struct inode { unsigned int tipus; unsigned int permisos; unsigned int tamany; PADDING (4); time_t data_creacio; time_t data_modificacio; time_t data_acces; unsigned int blocs_assignats_dades; unsigned int links_directoris; unsigned int[12] pdirectes; unsigned int[3] pindirectes; char[16] resta_inode; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "anthony-kolesov", "repo_name": "arc_ltp", "path": "anthony-kolesov/arc_ltp/2f42f2f4fe273d6e2014665ab0c76cb268e265b0e38e88dd796609cba252a94e", "path_in_repo": "anthony-kolesov/arc_ltp/testcases/open_posix_testsuite/conformance/interfaces/sigaction/23-2.run-test", "objdump": "00000000004014d8 <main>:\n  4014d8:\t55                   \tpush   %rbp\n  4014d9:\t48 89 e5             \tmov    %rsp,%rbp\n  4014dc:\t48 81 ec a0 00 00 00 \tsub    $0xa0,%rsp\n  4014e3:\te8 1a fd ff ff       \tcallq  401202 <output_init>\n  4014e8:\tc7 45 e8 00 00 00 00 \tmovl   $0x0,-0x18(%rbp)\n  4014ef:\t48 c7 85 60 ff ff ff \tmovq   $0x40136c,-0xa0(%rbp)\n  4014f6:\t6c 13 40 00 \n  4014fa:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n  401501:\t48 83 c0 08          \tadd    $0x8,%rax\n  401505:\t48 89 c7             \tmov    %rax,%rdi\n  401508:\te8 83 fb ff ff       \tcallq  401090 <sigemptyset@plt>\n  40150d:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  401510:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n  401514:\t74 44                \tje     40155a <main+0x82>\n  401516:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  401519:\t89 c7                \tmov    %eax,%edi\n  40151b:\te8 e0 fb ff ff       \tcallq  401100 <strerror@plt>\n  401520:\t48 89 c2             \tmov    %rax,%rdx\n  401523:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  401526:\t41 b9 27 21 40 00    \tmov    $0x402127,%r9d\n  40152c:\t41 b8 91 00 00 00    \tmov    $0x91,%r8d\n  401532:\t48 89 d1             \tmov    %rdx,%rcx\n  401535:\t89 c2                \tmov    %eax,%edx\n  401537:\tbe 50 20 40 00       \tmov    $0x402050,%esi\n  40153c:\tbf b8 20 40 00       \tmov    $0x4020b8,%edi\n  401541:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  401546:\te8 be fc ff ff       \tcallq  401209 <output>\n  40154b:\te8 15 fe ff ff       \tcallq  401365 <output_fini>\n  401550:\tbf 02 00 00 00       \tmov    $0x2,%edi\n  401555:\te8 96 fb ff ff       \tcallq  4010f0 <exit@plt>\n  40155a:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n  401561:\tba 00 00 00 00       \tmov    $0x0,%edx\n  401566:\t48 89 c6             \tmov    %rax,%rsi\n  401569:\tbf 0e 00 00 00       \tmov    $0xe,%edi\n  40156e:\te8 dd fa ff ff       \tcallq  401050 <sigaction@plt>\n  401573:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  401576:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n  40157a:\t74 44                \tje     4015c0 <main+0xe8>\n  40157c:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40157f:\t89 c7                \tmov    %eax,%edi\n  401581:\te8 7a fb ff ff       \tcallq  401100 <strerror@plt>\n  401586:\t48 89 c2             \tmov    %rax,%rdx\n  401589:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40158c:\t41 b9 42 21 40 00    \tmov    $0x402142,%r9d\n  401592:\t41 b8 99 00 00 00    \tmov    $0x99,%r8d\n  401598:\t48 89 d1             \tmov    %rdx,%rcx\n  40159b:\t89 c2                \tmov    %eax,%edx\n  40159d:\tbe 50 20 40 00       \tmov    $0x402050,%esi\n  4015a2:\tbf b8 20 40 00       \tmov    $0x4020b8,%edi\n  4015a7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4015ac:\te8 58 fc ff ff       \tcallq  401209 <output>\n  4015b1:\te8 af fd ff ff       \tcallq  401365 <output_fini>\n  4015b6:\tbf 02 00 00 00       \tmov    $0x2,%edi\n  4015bb:\te8 30 fb ff ff       \tcallq  4010f0 <exit@plt>\n  4015c0:\tbf 0e 00 00 00       \tmov    $0xe,%edi\n  4015c5:\te8 66 fa ff ff       \tcallq  401030 <raise@plt>\n  4015ca:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  4015cd:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n  4015d1:\t74 49                \tje     40161c <main+0x144>\n  4015d3:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  4015d6:\t89 c7                \tmov    %eax,%edi\n  4015d8:\te8 23 fb ff ff       \tcallq  401100 <strerror@plt>\n  4015dd:\t48 89 c2             \tmov    %rax,%rdx\n  4015e0:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  4015e3:\t41 b9 5f 21 40 00    \tmov    $0x40215f,%r9d\n  4015e9:\t41 b8 a0 00 00 00    \tmov    $0xa0,%r8d\n  4015ef:\t48 89 d1             \tmov    %rdx,%rcx\n  4015f2:\t89 c2                \tmov    %eax,%edx\n  4015f4:\tbe 50 20 40 00       \tmov    $0x402050,%esi\n  4015f9:\tbf b8 20 40 00       \tmov    $0x4020b8,%edi\n  4015fe:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  401603:\te8 01 fc ff ff       \tcallq  401209 <output>\n  401608:\te8 58 fd ff ff       \tcallq  401365 <output_fini>\n  40160d:\tbf 02 00 00 00       \tmov    $0x2,%edi\n  401612:\te8 d9 fa ff ff       \tcallq  4010f0 <exit@plt>\n  401617:\te8 64 fa ff ff       \tcallq  401080 <sched_yield@plt>\n  40161c:\t8b 05 9e 2a 00 00    \tmov    0x2a9e(%rip),%eax        # 4040c0 <called>\n  401622:\t83 f8 04             \tcmp    $0x4,%eax\n  401625:\t75 f0                \tjne    401617 <main+0x13f>\n  401627:\tbf 77 21 40 00       \tmov    $0x402177,%edi\n  40162c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  401631:\te8 d3 fb ff ff       \tcallq  401209 <output>\n  401636:\te8 2a fd ff ff       \tcallq  401365 <output_fini>\n  40163b:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  401640:\te8 ab fa ff ff       \tcallq  4010f0 <exit@plt>\n  401645:\t66 2e 0f 1f 84 00 00 \tnopw   %cs:0x0(%rax,%rax,1)\n  40164c:\t00 00 00 \n  40164f:\t90                   \tnop", "code_s": "int __cdecl __noreturn main(int argc, const char **argv, const char **envp) {\n  char *v3;\n  char *v4;\n  __int64 v5;\n  __int64 v6;\n  __int64 v7;\n  __int64 v8;\n  char *v9;\n  struct sigaction v10;\n  int errnum;\n  output_init();\n  v10.sa_flags = Number;\n  v10.sa_handler = (__sighandler_t)handler;\n  errnum = sigemptyset(&v10.sa_mask);\n  if (errnum) {\n    v3 = strerror(errnum);\n    output(String, (__int64)String, (unsigned int)errnum, (__int64)v3, Number L,\n           (__int64)String, v10.sa_handler);\n    output_fini();\n    exit(Number);\n  }\n  errnum = sigaction(Number, &v10, Number L);\n  if (errnum) {\n    v4 = strerror(errnum);\n    output(String, (__int64)String, (unsigned int)errnum, (__int64)v4, Number L,\n           (__int64)String, v10.sa_handler);\n    output_fini();\n    exit(Number);\n  }\n  errnum = raise(Number);\n  if (errnum) {\n    v9 = strerror(errnum);\n    output(String, (__int64)String, (unsigned int)errnum, (__int64)v9, Number L,\n           (__int64)String, v10.sa_handler);\n    output_fini();\n    exit(Number);\n  }\n  while (called != Number)\n    sched_yield();\n  output(String, (__int64)&v10, v5, v6, v7, v8, v10.sa_handler);\n  output_fini();\n  exit(Number);\n}", "code_t": "int __cdecl __noreturn main(int argc, const char **argv, const char **envp) {\n  char *v3;\n  char *v4;\n  char *v5;\n  sigaction <span class=\"supfact\">sa</span>;\n  int ret;\n  output_init();\n  <span class=\"supfact\">sa</span>.sa_flags = Number;\n  <span class=\"supfact\">sa</span>.sa_handler = (__sighandler_t)handler;\n  ret = sigemptyset(&<span class=\"supfact\">sa</span>.sa_mask);\n  if (ret) {\n    v3 = strerror(ret);\n    output(String, String, (unsigned int)ret, v3, Number L, String);\n    output_fini();\n    exit(Number);\n  }\n  ret = sigaction(Number, &<span class=\"supfact\">sa</span>, Number L);\n  if (ret) {\n    v4 = strerror(ret);\n    output(String, String, (unsigned int)ret, v4, Number L, String);\n    output_fini();\n    exit(Number);\n  }\n  ret = raise(Number);\n  if (ret) {\n    v5 = strerror(ret);\n    output(String, String, (unsigned int)ret, v5, Number L, String);\n    output_fini();\n    exit(Number);\n  }\n  while (called != Number)\n    sched_yield();\n  output(String);\n  output_fini();\n  exit(Number);\n}", "var": [{"name": "v10", "type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }", "pred_name": "sa", "ref_name": "sa", "ref_type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }"}], "body_in_train": false}, {"repo_owner": "NavInfoNC", "repo_name": "visual-wrk", "path": "NavInfoNC/visual-wrk/e251c73ccefbc8d2525cbfb2fb99d80d443a6ef4535c34ff4e29cf7df8066f71", "path_in_repo": "NavInfoNC/visual-wrk//obj/openssl-1.1.0g/crypto/ec/curve25519.o", "objdump": "00000000000040c1 <ge_scalarmult_base>:\n    40c1:\t55                   \tpush   %rbp\n    40c2:\t48 89 e5             \tmov    %rsp,%rbp\n    40c5:\t48 81 ec 00 02 00 00 \tsub    $0x200,%rsp\n    40cc:\t48 89 bd 08 fe ff ff \tmov    %rdi,-0x1f8(%rbp)\n    40d3:\t48 89 b5 00 fe ff ff \tmov    %rsi,-0x200(%rbp)\n    40da:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n    40e1:\teb 4d                \tjmp    4130 <ge_scalarmult_base+0x6f>\n    40e3:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    40e6:\t48 63 d0             \tmovslq %eax,%rdx\n    40e9:\t48 8b 85 00 fe ff ff \tmov    -0x200(%rbp),%rax\n    40f0:\t48 01 d0             \tadd    %rdx,%rax\n    40f3:\t0f b6 00             \tmovzbl (%rax),%eax\n    40f6:\t89 c2                \tmov    %eax,%edx\n    40f8:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    40fb:\t01 c0                \tadd    %eax,%eax\n    40fd:\t83 e2 0f             \tand    $0xf,%edx\n    4100:\t48 98                \tcltq   \n    4102:\t88 54 05 b0          \tmov    %dl,-0x50(%rbp,%rax,1)\n    4106:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    4109:\t48 63 d0             \tmovslq %eax,%rdx\n    410c:\t48 8b 85 00 fe ff ff \tmov    -0x200(%rbp),%rax\n    4113:\t48 01 d0             \tadd    %rdx,%rax\n    4116:\t0f b6 00             \tmovzbl (%rax),%eax\n    4119:\tc0 e8 04             \tshr    $0x4,%al\n    411c:\t89 c2                \tmov    %eax,%edx\n    411e:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    4121:\t01 c0                \tadd    %eax,%eax\n    4123:\t83 c0 01             \tadd    $0x1,%eax\n    4126:\t48 98                \tcltq   \n    4128:\t88 54 05 b0          \tmov    %dl,-0x50(%rbp,%rax,1)\n    412c:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n    4130:\t83 7d f8 1f          \tcmpl   $0x1f,-0x8(%rbp)\n    4134:\t7e ad                \tjle    40e3 <ge_scalarmult_base+0x22>\n    4136:\tc6 45 ff 00          \tmovb   $0x0,-0x1(%rbp)\n    413a:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n    4141:\teb 57                \tjmp    419a <ge_scalarmult_base+0xd9>\n    4143:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    4146:\t48 98                \tcltq   \n    4148:\t0f b6 44 05 b0       \tmovzbl -0x50(%rbp,%rax,1),%eax\n    414d:\t89 c2                \tmov    %eax,%edx\n    414f:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n    4153:\t01 d0                \tadd    %edx,%eax\n    4155:\t89 c2                \tmov    %eax,%edx\n    4157:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    415a:\t48 98                \tcltq   \n    415c:\t88 54 05 b0          \tmov    %dl,-0x50(%rbp,%rax,1)\n    4160:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    4163:\t48 98                \tcltq   \n    4165:\t0f b6 44 05 b0       \tmovzbl -0x50(%rbp,%rax,1),%eax\n    416a:\t83 c0 08             \tadd    $0x8,%eax\n    416d:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n    4170:\tc0 7d ff 04          \tsarb   $0x4,-0x1(%rbp)\n    4174:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    4177:\t48 98                \tcltq   \n    4179:\t0f b6 44 05 b0       \tmovzbl -0x50(%rbp,%rax,1),%eax\n    417e:\t89 c2                \tmov    %eax,%edx\n    4180:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n    4184:\tc1 e0 04             \tshl    $0x4,%eax\n    4187:\t29 c2                \tsub    %eax,%edx\n    4189:\t89 d0                \tmov    %edx,%eax\n    418b:\t89 c2                \tmov    %eax,%edx\n    418d:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    4190:\t48 98                \tcltq   \n    4192:\t88 54 05 b0          \tmov    %dl,-0x50(%rbp,%rax,1)\n    4196:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n    419a:\t83 7d f8 3e          \tcmpl   $0x3e,-0x8(%rbp)\n    419e:\t7e a3                \tjle    4143 <ge_scalarmult_base+0x82>\n    41a0:\t0f b6 45 ef          \tmovzbl -0x11(%rbp),%eax\n    41a4:\t89 c2                \tmov    %eax,%edx\n    41a6:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n    41aa:\t01 d0                \tadd    %edx,%eax\n    41ac:\t88 45 ef             \tmov    %al,-0x11(%rbp)\n    41af:\t48 8b 85 08 fe ff ff \tmov    -0x1f8(%rbp),%rax\n    41b6:\t48 89 c7             \tmov    %rax,%rdi\n    41b9:\te8 76 f6 ff ff       \tcallq  3834 <ge_p3_0>\n    41be:\tc7 45 f8 01 00 00 00 \tmovl   $0x1,-0x8(%rbp)\n    41c5:\teb 69                \tjmp    4230 <ge_scalarmult_base+0x16f>\n    41c7:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    41ca:\t48 98                \tcltq   \n    41cc:\t0f b6 44 05 b0       \tmovzbl -0x50(%rbp,%rax,1),%eax\n    41d1:\t0f be d0             \tmovsbl %al,%edx\n    41d4:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    41d7:\t89 c1                \tmov    %eax,%ecx\n    41d9:\tc1 e9 1f             \tshr    $0x1f,%ecx\n    41dc:\t01 c8                \tadd    %ecx,%eax\n    41de:\td1 f8                \tsar    %eax\n    41e0:\t89 c1                \tmov    %eax,%ecx\n    41e2:\t48 8d 85 10 fe ff ff \tlea    -0x1f0(%rbp),%rax\n    41e9:\t89 ce                \tmov    %ecx,%esi\n    41eb:\t48 89 c7             \tmov    %rax,%rdi\n    41ee:\te8 8f fb ff ff       \tcallq  3d82 <table_select>\n    41f3:\t48 8d 95 10 fe ff ff \tlea    -0x1f0(%rbp),%rdx\n    41fa:\t48 8b 8d 08 fe ff ff \tmov    -0x1f8(%rbp),%rcx\n    4201:\t48 8d 85 10 ff ff ff \tlea    -0xf0(%rbp),%rax\n    4208:\t48 89 ce             \tmov    %rcx,%rsi\n    420b:\t48 89 c7             \tmov    %rax,%rdi\n    420e:\te8 60 f9 ff ff       \tcallq  3b73 <ge_madd>\n    4213:\t48 8d 95 10 ff ff ff \tlea    -0xf0(%rbp),%rdx\n    421a:\t48 8b 85 08 fe ff ff \tmov    -0x1f8(%rbp),%rax\n    4221:\t48 89 d6             \tmov    %rdx,%rsi\n    4224:\t48 89 c7             \tmov    %rax,%rdi\n    4227:\te8 5e f7 ff ff       \tcallq  398a <ge_p1p1_to_p3>\n    422c:\t83 45 f8 02          \taddl   $0x2,-0x8(%rbp)\n    4230:\t83 7d f8 3f          \tcmpl   $0x3f,-0x8(%rbp)\n    4234:\t7e 91                \tjle    41c7 <ge_scalarmult_base+0x106>\n    4236:\t48 8b 95 08 fe ff ff \tmov    -0x1f8(%rbp),%rdx\n    423d:\t48 8d 85 10 ff ff ff \tlea    -0xf0(%rbp),%rax\n    4244:\t48 89 d6             \tmov    %rdx,%rsi\n    4247:\t48 89 c7             \tmov    %rax,%rdi\n    424a:\te8 dc f8 ff ff       \tcallq  3b2b <ge_p3_dbl>\n    424f:\t48 8d 95 10 ff ff ff \tlea    -0xf0(%rbp),%rdx\n    4256:\t48 8d 85 90 fe ff ff \tlea    -0x170(%rbp),%rax\n    425d:\t48 89 d6             \tmov    %rdx,%rsi\n    4260:\t48 89 c7             \tmov    %rax,%rdi\n    4263:\te8 ae f6 ff ff       \tcallq  3916 <ge_p1p1_to_p2>\n    4268:\t48 8d 95 90 fe ff ff \tlea    -0x170(%rbp),%rdx\n    426f:\t48 8d 85 10 ff ff ff \tlea    -0xf0(%rbp),%rax\n    4276:\t48 89 d6             \tmov    %rdx,%rsi\n    4279:\t48 89 c7             \tmov    %rax,%rdi\n    427c:\te8 9c f7 ff ff       \tcallq  3a1d <ge_p2_dbl>\n    4281:\t48 8d 95 10 ff ff ff \tlea    -0xf0(%rbp),%rdx\n    4288:\t48 8d 85 90 fe ff ff \tlea    -0x170(%rbp),%rax\n    428f:\t48 89 d6             \tmov    %rdx,%rsi\n    4292:\t48 89 c7             \tmov    %rax,%rdi\n    4295:\te8 7c f6 ff ff       \tcallq  3916 <ge_p1p1_to_p2>\n    429a:\t48 8d 95 90 fe ff ff \tlea    -0x170(%rbp),%rdx\n    42a1:\t48 8d 85 10 ff ff ff \tlea    -0xf0(%rbp),%rax\n    42a8:\t48 89 d6             \tmov    %rdx,%rsi\n    42ab:\t48 89 c7             \tmov    %rax,%rdi\n    42ae:\te8 6a f7 ff ff       \tcallq  3a1d <ge_p2_dbl>\n    42b3:\t48 8d 95 10 ff ff ff \tlea    -0xf0(%rbp),%rdx\n    42ba:\t48 8d 85 90 fe ff ff \tlea    -0x170(%rbp),%rax\n    42c1:\t48 89 d6             \tmov    %rdx,%rsi\n    42c4:\t48 89 c7             \tmov    %rax,%rdi\n    42c7:\te8 4a f6 ff ff       \tcallq  3916 <ge_p1p1_to_p2>\n    42cc:\t48 8d 95 90 fe ff ff \tlea    -0x170(%rbp),%rdx\n    42d3:\t48 8d 85 10 ff ff ff \tlea    -0xf0(%rbp),%rax\n    42da:\t48 89 d6             \tmov    %rdx,%rsi\n    42dd:\t48 89 c7             \tmov    %rax,%rdi\n    42e0:\te8 38 f7 ff ff       \tcallq  3a1d <ge_p2_dbl>\n    42e5:\t48 8d 95 10 ff ff ff \tlea    -0xf0(%rbp),%rdx\n    42ec:\t48 8b 85 08 fe ff ff \tmov    -0x1f8(%rbp),%rax\n    42f3:\t48 89 d6             \tmov    %rdx,%rsi\n    42f6:\t48 89 c7             \tmov    %rax,%rdi\n    42f9:\te8 8c f6 ff ff       \tcallq  398a <ge_p1p1_to_p3>\n    42fe:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n    4305:\teb 69                \tjmp    4370 <ge_scalarmult_base+0x2af>\n    4307:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    430a:\t48 98                \tcltq   \n    430c:\t0f b6 44 05 b0       \tmovzbl -0x50(%rbp,%rax,1),%eax\n    4311:\t0f be d0             \tmovsbl %al,%edx\n    4314:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    4317:\t89 c1                \tmov    %eax,%ecx\n    4319:\tc1 e9 1f             \tshr    $0x1f,%ecx\n    431c:\t01 c8                \tadd    %ecx,%eax\n    431e:\td1 f8                \tsar    %eax\n    4320:\t89 c1                \tmov    %eax,%ecx\n    4322:\t48 8d 85 10 fe ff ff \tlea    -0x1f0(%rbp),%rax\n    4329:\t89 ce                \tmov    %ecx,%esi\n    432b:\t48 89 c7             \tmov    %rax,%rdi\n    432e:\te8 4f fa ff ff       \tcallq  3d82 <table_select>\n    4333:\t48 8d 95 10 fe ff ff \tlea    -0x1f0(%rbp),%rdx\n    433a:\t48 8b 8d 08 fe ff ff \tmov    -0x1f8(%rbp),%rcx\n    4341:\t48 8d 85 10 ff ff ff \tlea    -0xf0(%rbp),%rax\n    4348:\t48 89 ce             \tmov    %rcx,%rsi\n    434b:\t48 89 c7             \tmov    %rax,%rdi\n    434e:\te8 20 f8 ff ff       \tcallq  3b73 <ge_madd>\n    4353:\t48 8d 95 10 ff ff ff \tlea    -0xf0(%rbp),%rdx\n    435a:\t48 8b 85 08 fe ff ff \tmov    -0x1f8(%rbp),%rax\n    4361:\t48 89 d6             \tmov    %rdx,%rsi\n    4364:\t48 89 c7             \tmov    %rax,%rdi\n    4367:\te8 1e f6 ff ff       \tcallq  398a <ge_p1p1_to_p3>\n    436c:\t83 45 f8 02          \taddl   $0x2,-0x8(%rbp)\n    4370:\t83 7d f8 3f          \tcmpl   $0x3f,-0x8(%rbp)\n    4374:\t7e 91                \tjle    4307 <ge_scalarmult_base+0x246>\n    4376:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    437a:\tbe 40 00 00 00       \tmov    $0x40,%esi\n    437f:\t48 89 c7             \tmov    %rax,%rdi\n    4382:\te8 00 00 00 00       \tcallq  4387 <ge_scalarmult_base+0x2c6>\n    4387:\t90                   \tnop\n    4388:\tc9                   \tleaveq \n    4389:\tc3                   \tretq   ", "code_s": "__int64 __fastcall ge_scalarmult_base(_DWORD *a1, __int64 a2) {\n  int v3[Number];\n  int v4[Number];\n  int v5[Number];\n  char v6[Number];\n  char v7;\n  int i;\n  char v9;\n  for (i = Number; i <= Number; ++i) {\n    v6[Number * i] = *(_BYTE *)(i + a2) & Number;\n    v6[Number * i + Number] = *(_BYTE *)(i + a2) >> Number;\n  }\n  v9 = Number;\n  for (i = Number; i <= Number; ++i) {\n    v6[i] += v9;\n    v9 = v6[i] + Number;\n    v9 >>= Number;\n    v6[i] -= Number * v9;\n  }\n  v7 += v9;\n  ge_p3_0(a1);\n  for (i = Number; i <= Number; i += Number) {\n    table_select(v3, i / Number, v6[i]);\n    ge_madd(v5, (__int64)a1, v3);\n    ge_p1p1_to_p3(a1, v5);\n  }\n  ge_p3_dbl(v5, (__int64)a1);\n  ge_p1p1_to_p2(v4, v5);\n  ge_p2_dbl(v5, v4);\n  ge_p1p1_to_p2(v4, v5);\n  ge_p2_dbl(v5, v4);\n  ge_p1p1_to_p2(v4, v5);\n  ge_p2_dbl(v5, v4);\n  ge_p1p1_to_p3(a1, v5);\n  for (i = Number; i <= Number; i += Number) {\n    table_select(v3, i / Number, v6[i]);\n    ge_madd(v5, (__int64)a1, v3);\n    ge_p1p1_to_p3(a1, v5);\n  }\n  return OPENSSL_cleanse(v6, Number L);\n}", "code_t": "void __cdecl ge_scalarmult_base(ge_p3 *h, const uint8_t *a) {\n  ge_precomp <span class=\"supfact\">t</span>;\n  ge_p2 <span class=\"supfact\">s</span>;\n  ge_p1p1 <span class=\"supfact\">r</span>;\n  char e[Number];\n  int i;\n  char carry;\n  for (i = Number; i <= Number; ++i) {\n    e[Number * i] = a[i] & Number;\n    e[Number * i + Number] = a[i] >> Number;\n  }\n  carry = Number;\n  for (i = Number; i <= Number; ++i) {\n    e[i] += carry;\n    carry = e[i] + Number;\n    carry >>= Number;\n    e[i] -= Number * carry;\n  }\n  e[Number] += carry;\n  ge_p3_0(h);\n  for (i = Number; i <= Number; i += Number) {\n    table_select(&<span class=\"supfact\">t</span>, i / Number, e[i]);\n    ge_madd(&<span class=\"supfact\">r</span>, h, &<span class=\"supfact\">t</span>);\n    ge_p1p1_to_p3(h, &<span class=\"supfact\">r</span>);\n  }\n  ge_p3_dbl(&<span class=\"supfact\">r</span>, h);\n  ge_p1p1_to_p2(&<span class=\"supfact\">s</span>, &<span class=\"supfact\">r</span>);\n  ge_p2_dbl(&<span class=\"supfact\">r</span>, &<span class=\"supfact\">s</span>);\n  ge_p1p1_to_p2(&<span class=\"supfact\">s</span>, &<span class=\"supfact\">r</span>);\n  ge_p2_dbl(&<span class=\"supfact\">r</span>, &<span class=\"supfact\">s</span>);\n  ge_p1p1_to_p2(&<span class=\"supfact\">s</span>, &<span class=\"supfact\">r</span>);\n  ge_p2_dbl(&<span class=\"supfact\">r</span>, &<span class=\"supfact\">s</span>);\n  ge_p1p1_to_p3(h, &<span class=\"supfact\">r</span>);\n  for (i = Number; i <= Number; i += Number) {\n    table_select(&<span class=\"supfact\">t</span>, i / Number, e[i]);\n    ge_madd(&<span class=\"supfact\">r</span>, h, &<span class=\"supfact\">t</span>);\n    ge_p1p1_to_p3(h, &<span class=\"supfact\">r</span>);\n  }\n  OPENSSL_cleanse(e, Number L);\n}", "var": [{"name": "v3", "type": "uint32_t[8]", "pred_name": "x", "ref_name": "t", "ref_type": "struct ge_precomp { fe yplusx; fe yminusx; fe xy2d; }"}, {"name": "v4", "type": "disappear", "pred_name": "", "ref_name": "s", "ref_type": "struct ge_p2 { fe X; fe Y; fe Z; }"}, {"name": "v5", "type": "disappear", "pred_name": "", "ref_name": "r", "ref_type": "struct ge_p1p1 { fe X; fe Y; fe Z; fe T; }"}], "body_in_train": false}, {"repo_owner": "rogerq", "repo_name": "ltp-ddt", "path": "rogerq/ltp-ddt/e26e6bbcf215e07a5506a457eeb2172ed21bf1588099d9cf07b54b6f3a3184ab", "path_in_repo": "rogerq/ltp-ddt/testcases/open_posix_testsuite/conformance/interfaces/sigaction/4-46.run-test", "objdump": "00000000004011e5 <main>:\n  4011e5:\t55                   \tpush   %rbp\n  4011e6:\t48 89 e5             \tmov    %rsp,%rbp\n  4011e9:\t48 81 ec a0 00 00 00 \tsub    $0xa0,%rsp\n  4011f0:\te8 cb fe ff ff       \tcallq  4010c0 <fork@plt>\n  4011f5:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  4011f8:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n  4011fc:\t0f 85 8f 00 00 00    \tjne    401291 <main+0xac>\n  401202:\t48 c7 85 60 ff ff ff \tmovq   $0x4011b2,-0xa0(%rbp)\n  401209:\tb2 11 40 00 \n  40120d:\tc7 45 e8 00 00 00 00 \tmovl   $0x0,-0x18(%rbp)\n  401214:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n  40121b:\t48 83 c0 08          \tadd    $0x8,%rax\n  40121f:\t48 89 c7             \tmov    %rax,%rdi\n  401222:\te8 39 fe ff ff       \tcallq  401060 <sigemptyset@plt>\n  401227:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n  40122e:\t48 83 c0 08          \tadd    $0x8,%rax\n  401232:\tbe 13 00 00 00       \tmov    $0x13,%esi\n  401237:\t48 89 c7             \tmov    %rax,%rdi\n  40123a:\te8 71 fe ff ff       \tcallq  4010b0 <sigaddset@plt>\n  40123f:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n  401246:\tba 00 00 00 00       \tmov    $0x0,%edx\n  40124b:\t48 89 c6             \tmov    %rax,%rsi\n  40124e:\tbf 1b 00 00 00       \tmov    $0x1b,%edi\n  401253:\te8 f8 fd ff ff       \tcallq  401050 <sigaction@plt>\n  401258:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n  40125b:\t75 14                \tjne    401271 <main+0x8c>\n  40125d:\tbf 30 20 40 00       \tmov    $0x402030,%edi\n  401262:\te8 29 fe ff ff       \tcallq  401090 <perror@plt>\n  401267:\tb8 02 00 00 00       \tmov    $0x2,%eax\n  40126c:\te9 86 00 00 00       \tjmpq   4012f7 <main+0x112>\n  401271:\tbf 1b 00 00 00       \tmov    $0x1b,%edi\n  401276:\te8 b5 fd ff ff       \tcallq  401030 <raise@plt>\n  40127b:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n  40127e:\t75 0a                \tjne    40128a <main+0xa5>\n  401280:\tbf 30 20 40 00       \tmov    $0x402030,%edi\n  401285:\te8 06 fe ff ff       \tcallq  401090 <perror@plt>\n  40128a:\tb8 02 00 00 00       \tmov    $0x2,%eax\n  40128f:\teb 66                \tjmp    4012f7 <main+0x112>\n  401291:\t48 8d 4d f8          \tlea    -0x8(%rbp),%rcx\n  401295:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  401298:\tba 02 00 00 00       \tmov    $0x2,%edx\n  40129d:\t48 89 ce             \tmov    %rcx,%rsi\n  4012a0:\t89 c7                \tmov    %eax,%edi\n  4012a2:\te8 d9 fd ff ff       \tcallq  401080 <waitpid@plt>\n  4012a7:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n  4012aa:\t75 11                \tjne    4012bd <main+0xd8>\n  4012ac:\tbf 70 20 40 00       \tmov    $0x402070,%edi\n  4012b1:\te8 da fd ff ff       \tcallq  401090 <perror@plt>\n  4012b6:\tb8 02 00 00 00       \tmov    $0x2,%eax\n  4012bb:\teb 3a                \tjmp    4012f7 <main+0x112>\n  4012bd:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  4012c0:\t0f b6 c0             \tmovzbl %al,%eax\n  4012c3:\t83 f8 7f             \tcmp    $0x7f,%eax\n  4012c6:\t75 20                \tjne    4012e8 <main+0x103>\n  4012c8:\tbf a6 20 40 00       \tmov    $0x4020a6,%edi\n  4012cd:\te8 6e fd ff ff       \tcallq  401040 <puts@plt>\n  4012d2:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  4012d5:\tbe 09 00 00 00       \tmov    $0x9,%esi\n  4012da:\t89 c7                \tmov    %eax,%edi\n  4012dc:\te8 8f fd ff ff       \tcallq  401070 <kill@plt>\n  4012e1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4012e6:\teb 0f                \tjmp    4012f7 <main+0x112>\n  4012e8:\tbf b2 20 40 00       \tmov    $0x4020b2,%edi\n  4012ed:\te8 4e fd ff ff       \tcallq  401040 <puts@plt>\n  4012f2:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  4012f7:\tc9                   \tleaveq \n  4012f8:\tc3                   \tretq   \n  4012f9:\t0f 1f 80 00 00 00 00 \tnopl   0x0(%rax)", "code_s": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  int result;\n  struct sigaction v4;\n  int stat_loc;\n  __pid_t pid;\n  pid = fork();\n  if (pid) {\n    if (waitpid(pid, &stat_loc, Number) == Number) {\n      perror(String);\n      result = Number;\n    } else if ((unsigned __int8)stat_loc == Number) {\n      puts(String);\n      kill(pid, Number);\n      result = Number;\n    } else {\n      puts(String);\n      result = Number;\n    }\n  } else {\n    v4.sa_handler = (__sighandler_t)handler;\n    v4.sa_flags = Number;\n    sigemptyset(&v4.sa_mask);\n    sigaddset(&v4.sa_mask, Number);\n    if (sigaction(Number, &v4, Number L) == Number) {\n      perror(String);\n      result = Number;\n    } else {\n      if (raise(Number) == Number)\n        perror(String);\n      result = Number;\n    }\n  }\n  return result;\n}", "code_t": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  int result;\n  sigaction <span class=\"supfact\">act</span>;\n  int s;\n  pid_t pid;\n  pid = fork();\n  if (pid) {\n    if (waitpid(pid, &s, Number) == Number) {\n      perror(String);\n      result = Number;\n    } else if ((unsigned __int8)s == Number) {\n      puts(String);\n      kill(pid, Number);\n      result = Number;\n    } else {\n      puts(String);\n      result = Number;\n    }\n  } else {\n    <span class=\"supfact\">act</span>.sa_handler = (__sighandler_t)handler;\n    <span class=\"supfact\">act</span>.sa_flags = Number;\n    sigemptyset(&<span class=\"supfact\">act</span>.sa_mask);\n    sigaddset(&<span class=\"supfact\">act</span>.sa_mask, Number);\n    if (sigaction(Number, &<span class=\"supfact\">act</span>, Number L) == Number) {\n      perror(String);\n      result = Number;\n    } else {\n      if (raise(Number) == Number)\n        perror(String);\n      result = Number;\n    }\n  }\n  return result;\n}", "var": [{"name": "v4", "type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }", "pred_name": "act", "ref_name": "act", "ref_type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }"}], "body_in_train": false}]