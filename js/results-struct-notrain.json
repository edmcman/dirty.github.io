[{"repo_owner": "ardax", "repo_name": "Pellet", "path": "ardax/Pellet/09647a44e76be3cea0c2f9a7241b9e63370114795cc5f1de0c47077caeb8eb9e", "path_in_repo": "ardax/Pellet//CompletionStrategy.o", "objdump": "0000000000000000 <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t53                   \tpush   %rbx\n   5:\t48 83 ec 48          \tsub    $0x48,%rsp\n   9:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n   d:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n  11:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  15:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  19:\t48 89 d6             \tmov    %rdx,%rsi\n  1c:\t48 89 c7             \tmov    %rax,%rdi\n  1f:\te8 00 00 00 00       \tcallq  24 <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0x24>\n  24:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n  28:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  2c:\t48 89 c7             \tmov    %rax,%rdi\n  2f:\te8 00 00 00 00       \tcallq  34 <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0x34>\n  34:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n  38:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n  3c:\t48 8d 45 c8          \tlea    -0x38(%rbp),%rax\n  40:\t48 89 d6             \tmov    %rdx,%rsi\n  43:\t48 89 c7             \tmov    %rax,%rdi\n  46:\te8 00 00 00 00       \tcallq  4b <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0x4b>\n  4b:\t84 c0                \ttest   %al,%al\n  4d:\t75 35                \tjne    84 <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0x84>\n  4f:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  53:\t48 89 c7             \tmov    %rax,%rdi\n  56:\te8 00 00 00 00       \tcallq  5b <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0x5b>\n  5b:\t48 8d 45 c8          \tlea    -0x38(%rbp),%rax\n  5f:\t48 89 c7             \tmov    %rax,%rdi\n  62:\te8 00 00 00 00       \tcallq  67 <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0x67>\n  67:\t48 8b 10             \tmov    (%rax),%rdx\n  6a:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  6e:\t48 8b 08             \tmov    (%rax),%rcx\n  71:\t48 8d 45 de          \tlea    -0x22(%rbp),%rax\n  75:\t48 89 ce             \tmov    %rcx,%rsi\n  78:\t48 89 c7             \tmov    %rax,%rdi\n  7b:\te8 00 00 00 00       \tcallq  80 <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0x80>\n  80:\t84 c0                \ttest   %al,%al\n  82:\t74 07                \tje     8b <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0x8b>\n  84:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  89:\teb 05                \tjmp    90 <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0x90>\n  8b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  90:\t84 c0                \ttest   %al,%al\n  92:\t74 50                \tje     e4 <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0xe4>\n  94:\t48 8b 5d b8          \tmov    -0x48(%rbp),%rbx\n  98:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  9c:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  a0:\t48 89 d6             \tmov    %rdx,%rsi\n  a3:\t48 89 c7             \tmov    %rax,%rdi\n  a6:\te8 00 00 00 00       \tcallq  ab <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0xab>\n  ab:\t48 8d 55 c8          \tlea    -0x38(%rbp),%rdx\n  af:\t48 8d 45 e8          \tlea    -0x18(%rbp),%rax\n  b3:\t48 89 d6             \tmov    %rdx,%rsi\n  b6:\t48 89 c7             \tmov    %rax,%rdi\n  b9:\te8 00 00 00 00       \tcallq  be <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0xbe>\n  be:\t48 8d 4d df          \tlea    -0x21(%rbp),%rcx\n  c2:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n  c6:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  ca:\t49 89 c8             \tmov    %rcx,%r8\n  cd:\t48 89 d1             \tmov    %rdx,%rcx\n  d0:\tba 00 00 00 00       \tmov    $0x0,%edx\n  d5:\t48 89 c6             \tmov    %rax,%rsi\n  d8:\t48 89 df             \tmov    %rbx,%rdi\n  db:\te8 00 00 00 00       \tcallq  e0 <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0xe0>\n  e0:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n  e4:\t48 8d 45 c8          \tlea    -0x38(%rbp),%rax\n  e8:\t48 89 c7             \tmov    %rax,%rdi\n  eb:\te8 00 00 00 00       \tcallq  f0 <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0xf0>\n  f0:\t48 83 c0 08          \tadd    $0x8,%rax\n  f4:\teb 08                \tjmp    fe <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0xfe>\n  f6:\t48 89 c7             \tmov    %rax,%rdi\n  f9:\te8 00 00 00 00       \tcallq  fe <_ZNSt3mapIP16_ExpressionNode_P13DependencySet14strCmpExprNodeSaISt4pairIKS1_S3_EEEixERS6_+0xfe>\n  fe:\t48 83 c4 48          \tadd    $0x48,%rsp\n 102:\t5b                   \tpop    %rbx\n 103:\t5d                   \tpop    %rbp\n 104:\tc3                   \tretq   ", "code_s": "__int64 __fastcall std\n    map<_ExpressionNode_ *, DependencySet *, strCmpExprNode,\n        std allocator<std pair<_ExpressionNode_ *const, DependencySet *>>>\n    operator[](__int64 a1, __int64 *a2) {\n  __int64 *v2;\n  __int64 v5;\n  __int64 v6;\n  char <span class=\"supfact\">v7</span>;\n  char <span class=\"supfact\">v8</span>;\n  char <span class=\"supfact\">v9</span>[Number];\n  __int64 v10[Number];\n  v5 =\n      std map<_ExpressionNode_ *, DependencySet *, strCmpExprNode,\n              std allocator<std pair<_ExpressionNode_ *const, DependencySet *>>>\n          lower_bound(a1, a2);\n  v6 =\n      std map<_ExpressionNode_ *, DependencySet *, strCmpExprNode,\n              std allocator<std pair<_ExpressionNode_ *const, DependencySet *>>>\n          end(a1);\n  if ((unsigned __int8)std operator==(&v5, &v6) ||\n      (std map<\n           _ExpressionNode_ *, DependencySet *, strCmpExprNode,\n           std allocator<std pair<_ExpressionNode_ *const, DependencySet *>>>\n           key_comp(a1),\n       v2 = (__int64 *)std\n           _Rb_tree_iterator<std pair<_ExpressionNode_ *const, DependencySet *>>\n           operator*(&v5),\n       (unsigned __int8)strCmpExprNode operator()((__int64)&<span class=\"supfact\">v7</span>,\n                                                  *a2, *v2))) {\n    std tuple<_ExpressionNode_ *const &> tuple<void, true>(<span class=\"supfact\">v9</span>,\n                                                           a2);\n    std _Rb_tree_const_iterator<\n        std pair<_ExpressionNode_ *const, DependencySet *>>\n        _Rb_tree_const_iterator(v10, &v5);\n    v5 = std _Rb_tree<\n        _ExpressionNode_ *, std pair<_ExpressionNode_ *const, DependencySet *>,\n        std _Select1st<std pair<_ExpressionNode_ *const, DependencySet *>>,\n        strCmpExprNode,\n        std allocator<std pair<_ExpressionNode_ *const, DependencySet *>>>\n    _M_emplace_hint_unique<std piecewise_construct_t const &,\n                           std tuple<_ExpressionNode_ *const &>, std tuple<>>(\n        a1, v10[Number], &std piecewise_construct, <span class=\"supfact\">v9</span>,\n        &<span class=\"supfact\">v8</span>);\n  }\n  return std _Rb_tree_iterator<\n             std pair<_ExpressionNode_ *const, DependencySet *>>\n         operator*(&v5) + Number;\n}", "code_t": "std map<_ExpressionNode_ *, DependencySet *, strCmpExprNode,\n        std allocator<std pair<_ExpressionNode_ *const, DependencySet *>>>\n    mapped_type *__cdecl std map<\n        _ExpressionNode_ *, DependencySet *, strCmpExprNode,\n        std allocator<std pair<_ExpressionNode_ *const, DependencySet *>>>\n    operator[](\n        std map<\n            _ExpressionNode_ *, DependencySet *, strCmpExprNode,\n            std allocator<std pair<_ExpressionNode_ *const, DependencySet *>>>\n            *const this,\n        const std map<\n            _ExpressionNode_ *, DependencySet *, strCmpExprNode,\n            std allocator<std pair<_ExpressionNode_ *const, DependencySet *>>>\n            key_type *__k) {\n  std _Rb_tree_iterator<std pair<_ExpressionNode_ *const, DependencySet *>>\n      reference v2;\n  const std piecewise_construct_t *v4;\n  std map<_ExpressionNode_ *, DependencySet *, strCmpExprNode,\n          std allocator<std pair<_ExpressionNode_ *const, DependencySet *>>>\n      iterator __i;\n  std _Rb_tree_iterator<std pair<_ExpressionNode_ *const, DependencySet *>>\n      _Self __y;\n  strCmpExprNode <span class=\"supfact\">v8</span>;\n  std tuple<> <span class=\"supfact\">v9</span>;\n  std tuple<_ExpressionNode_ *const &> <span class=\"supfact\">v10</span>;\n  std _Rb_tree_const_iterator<\n      std pair<_ExpressionNode_ *const, DependencySet *>>\n      __pos;\n  __i._M_node =\n      std map<_ExpressionNode_ *, DependencySet *, strCmpExprNode,\n              std allocator<std pair<_ExpressionNode_ *const, DependencySet *>>>\n          lower_bound(this, __k)._M_node;\n  __y._M_node =\n      std map<_ExpressionNode_ *, DependencySet *, strCmpExprNode,\n              std allocator<std pair<_ExpressionNode_ *const, DependencySet *>>>\n          end(this)._M_node;\n  if (std operator==(&__i, &__y) ||\n      (std map<\n           _ExpressionNode_ *, DependencySet *, strCmpExprNode,\n           std allocator<std pair<_ExpressionNode_ *const, DependencySet *>>>\n           key_comp(this),\n       v2 = std\n           _Rb_tree_iterator<std pair<_ExpressionNode_ *const, DependencySet *>>\n           operator*(&__i),\n       strCmpExprNode operator()(&<span class=\"supfact\">v8</span>, *(const ExprNode **)__k,\n                                 v2->first))) {\n    std tuple<_ExpressionNode_ *const &> tuple<void, true>(&<span class=\"supfact\">v10</span>,\n                                                           __k);\n    std _Rb_tree_const_iterator<\n        std pair<_ExpressionNode_ *const, DependencySet *>>\n        _Rb_tree_const_iterator(&__pos, &__i);\n    __i._M_node =\n        std _Rb_tree<\n            _ExpressionNode_ *,\n            std pair<_ExpressionNode_ *const, DependencySet *>,\n            std _Select1st<std pair<_ExpressionNode_ *const, DependencySet *>>,\n            strCmpExprNode,\n            std allocator<std pair<_ExpressionNode_ *const, DependencySet *>>>\n        _M_emplace_hint_unique<std piecewise_construct_t const &,\n                               std tuple<_ExpressionNode_ *const &>,\n                               std tuple<>>(\n            &this->_M_t, __pos, &std piecewise_construct, &<span class=\"supfact\">v10</span>,\n            &<span class=\"supfact\">v9</span>, v4,\n            (std tuple<_ExpressionNode_ *const &> *)__k, (std tuple<> *)this)\n            ._M_node;\n  }\n  return &std _Rb_tree_iterator<\n              std pair<_ExpressionNode_ *const, DependencySet *>>\n          operator*(&__i)->second;\n}", "var": [{"name": "v9", "type": "struct std::tuple<_ExpressionNode_* const&> { std::_Tuple_impl<0,_ExpressionNode_* const&> baseclass_0; }", "ref_name": "v10", "ref_type": "struct std::tuple<_ExpressionNode_* const&> { std::_Tuple_impl<0,_ExpressionNode_* const&> baseclass_0; }"}, {"name": "v8", "type": "struct std::tuple<> { __int8[1] gap0; }", "ref_name": "v9", "ref_type": "struct std::tuple<> { __int8[1] gap0; }"}, {"name": "v7", "type": "__unk__", "ref_name": "v8", "ref_type": "struct strCmpExprNode { __int8[1] gap0; }"}], "body_in_train": false}, {"repo_owner": "Soldie", "repo_name": "HP-Socket--C", "path": "Soldie/HP-Socket--C/24f30144daad662e12f90128bf9f17617f5c5f1a4be5e4153956ed276be2bdab", "path_in_repo": "Soldie/HP-Socket--C/Linux/demo/Android-Build-Demo/FileHelper.o", "objdump": "00000000000001c0 <_ZN5CFile6IsFileEPKc>:\n 1c0:\t48 81 ec 98 00 00 00 \tsub    $0x98,%rsp\n 1c7:\t48 89 fe             \tmov    %rdi,%rsi\n 1ca:\tbf 01 00 00 00       \tmov    $0x1,%edi\n 1cf:\t48 89 e2             \tmov    %rsp,%rdx\n 1d2:\te8 00 00 00 00       \tcallq  1d7 <_ZN5CFile6IsFileEPKc+0x17>\n 1d7:\t41 89 c0             \tmov    %eax,%r8d\n 1da:\t31 c0                \txor    %eax,%eax\n 1dc:\t45 85 c0             \ttest   %r8d,%r8d\n 1df:\t75 11                \tjne    1f2 <_ZN5CFile6IsFileEPKc+0x32>\n 1e1:\t8b 44 24 18          \tmov    0x18(%rsp),%eax\n 1e5:\t25 00 f0 00 00       \tand    $0xf000,%eax\n 1ea:\t3d 00 80 00 00       \tcmp    $0x8000,%eax\n 1ef:\t0f 94 c0             \tsete   %al\n 1f2:\t48 81 c4 98 00 00 00 \tadd    $0x98,%rsp\n 1f9:\tc3                   \tretq   \n 1fa:\t66 0f 1f 44 00 00    \tnopw   0x0(%rax,%rax,1)", "code_s": "bool __fastcall CFile IsFile(CFile *this, const char *a2) {\n  int v2;\n  bool result;\n  struct stat <span class=\"supfact\">v4</span>;\n  v2 = _xstat(Number, (const char *)this, &<span class=\"supfact\">v4</span>);\n  result = Number;\n  if (!v2)\n    result = (<span class=\"supfact\">v4</span>.st_mode & Number) == Number;\n  return result;\n}", "code_t": "bool __fastcall CFile IsFile(CFile *this, const char *a2) {\n  int v2;\n  bool result;\n  struct stat <span class=\"supfact\">v4</span>;\n  v2 = _xstat(Number, (const char *)this, &<span class=\"supfact\">v4</span>);\n  result = Number;\n  if (!v2)\n    result = (<span class=\"supfact\">v4</span>.st_mode & Number) == Number;\n  return result;\n}", "var": [{"name": "v4", "type": "struct struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; struct timespec st_atim; struct timespec st_mtim; struct timespec st_ctim; __syscall_slong_t[3] __unused; }", "ref_name": "v4", "ref_type": "struct struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __unused; }"}], "body_in_train": false}, {"repo_owner": "on4today", "repo_name": "pdfViewer", "path": "on4today/pdfViewer/3efc1e774b62ba3c33cbca461bb79bcad9b25f6276f2938a4010eca9450a2a55", "path_in_repo": "on4today/pdfViewer//build/debug/fitz/bbox-device.o", "objdump": "0000000000000532 <fz_bbox_clip_image_mask>:\n 532:\t55                   \tpush   %rbp\n 533:\t48 89 e5             \tmov    %rsp,%rbp\n 536:\t48 83 ec 30          \tsub    $0x30,%rsp\n 53a:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n 53e:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n 542:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n 546:\t48 89 4d d0          \tmov    %rcx,-0x30(%rbp)\n 54a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 551 <fz_bbox_clip_image_mask+0x1f>\n 551:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 558 <fz_bbox_clip_image_mask+0x26>\n 558:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n 55c:\t48 89 55 f8          \tmov    %rdx,-0x8(%rbp)\n 560:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n 564:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n 568:\t48 89 d6             \tmov    %rdx,%rsi\n 56b:\t48 89 c7             \tmov    %rax,%rdi\n 56e:\te8 00 00 00 00       \tcallq  573 <fz_bbox_clip_image_mask+0x41>\n 573:\t48 89 c1             \tmov    %rax,%rcx\n 576:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 57a:\tba 01 00 00 00       \tmov    $0x1,%edx\n 57f:\t48 89 ce             \tmov    %rcx,%rsi\n 582:\t48 89 c7             \tmov    %rax,%rdi\n 585:\te8 76 fa ff ff       \tcallq  0 <fz_bbox_add_rect>\n 58a:\t90                   \tnop\n 58b:\tc9                   \tleaveq \n 58c:\tc3                   \tretq   ", "code_s": "__int64 __fastcall fz_bbox_clip_image_mask(__int64 a1, __int64 a2, __int64 a3,\n                                           __int64 a4) {\n  __int64 v4;\n  __int64 *v5;\n  __int64 <span class=\"supfact\">v7</span>[Number];\n  v4 = fz_unit_rect[Number];\n  <span class=\"supfact\">v7</span>[Number] = fz_unit_rect[Number];\n  <span class=\"supfact\">v7</span>[Number] = v4;\n  v5 = (__int64 *)fz_transform_rect(<span class=\"supfact\">v7</span>, a4);\n  return fz_bbox_add_rect(a1, v5, Number);\n}", "code_t": "void __cdecl fz_bbox_clip_image_mask(fz_device *dev, fz_image *image,\n                                     const fz_rect *rect,\n                                     const fz_matrix *ctm) {\n  __int64 v4;\n  const fz_rect *v5;\n  fz_rect <span class=\"supfact\">r</span>;\n  v4 = fz_unit_rect[Number];\n  *(_QWORD *)&<span class=\"supfact\">r</span>.x0 = fz_unit_rect[Number];\n  *(_QWORD *)&<span class=\"supfact\">r</span>.x1 = v4;\n  v5 = (const fz_rect *)fz_transform_rect(&<span class=\"supfact\">r</span>, ctm);\n  fz_bbox_add_rect(dev, v5, Number);\n}", "var": [{"name": "v7", "type": "__unk__", "ref_name": "r", "ref_type": "struct fz_rect { float x0; float y0; float x1; float y1; }"}], "body_in_train": false}, {"repo_owner": "lxl1140989", "repo_name": "6291-xl", "path": "lxl1140989/6291-xl/8a565e1eeb6e0851c3ea2eec820372e9b38289077077758397b2ccca92cf3acf", "path_in_repo": "lxl1140989/6291-xl/package/libnassdk/src/Demo/util/du_common.o", "objdump": "0000000000001538 <_ZN9DU_Common11nowtime2strB5cxx11Ev>:\n    1538:\t55                   \tpush   %rbp\n    1539:\t48 89 e5             \tmov    %rsp,%rbp\n    153c:\t53                   \tpush   %rbx\n    153d:\t48 83 ec 48          \tsub    $0x48,%rsp\n    1541:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n    1545:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n    1549:\t48 89 c7             \tmov    %rax,%rdi\n    154c:\te8 00 00 00 00       \tcallq  1551 <_ZN9DU_Common11nowtime2strB5cxx11Ev+0x19>\n    1551:\t48 8d 55 ef          \tlea    -0x11(%rbp),%rdx\n    1555:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    1559:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    155e:\t48 89 c7             \tmov    %rax,%rdi\n    1561:\te8 00 00 00 00       \tcallq  1566 <_ZN9DU_Common11nowtime2strB5cxx11Ev+0x2e>\n    1566:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    156a:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n    156e:\t48 89 d6             \tmov    %rdx,%rsi\n    1571:\t48 89 c7             \tmov    %rax,%rdi\n    1574:\te8 00 00 00 00       \tcallq  1579 <_ZN9DU_Common11nowtime2strB5cxx11Ev+0x41>\n    1579:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    157d:\t48 89 c7             \tmov    %rax,%rdi\n    1580:\te8 00 00 00 00       \tcallq  1585 <_ZN9DU_Common11nowtime2strB5cxx11Ev+0x4d>\n    1585:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n    1589:\t48 89 c7             \tmov    %rax,%rdi\n    158c:\te8 00 00 00 00       \tcallq  1591 <_ZN9DU_Common11nowtime2strB5cxx11Ev+0x59>\n    1591:\teb 2b                \tjmp    15be <_ZN9DU_Common11nowtime2strB5cxx11Ev+0x86>\n    1593:\t48 89 c3             \tmov    %rax,%rbx\n    1596:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    159a:\t48 89 c7             \tmov    %rax,%rdi\n    159d:\te8 00 00 00 00       \tcallq  15a2 <_ZN9DU_Common11nowtime2strB5cxx11Ev+0x6a>\n    15a2:\teb 03                \tjmp    15a7 <_ZN9DU_Common11nowtime2strB5cxx11Ev+0x6f>\n    15a4:\t48 89 c3             \tmov    %rax,%rbx\n    15a7:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n    15ab:\t48 89 c7             \tmov    %rax,%rdi\n    15ae:\te8 00 00 00 00       \tcallq  15b3 <_ZN9DU_Common11nowtime2strB5cxx11Ev+0x7b>\n    15b3:\t48 89 d8             \tmov    %rbx,%rax\n    15b6:\t48 89 c7             \tmov    %rax,%rdi\n    15b9:\te8 00 00 00 00       \tcallq  15be <_ZN9DU_Common11nowtime2strB5cxx11Ev+0x86>\n    15be:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    15c2:\t48 83 c4 48          \tadd    $0x48,%rsp\n    15c6:\t5b                   \tpop    %rbx\n    15c7:\t5d                   \tpop    %rbp\n    15c8:\tc3                   \tretq   \n    15c9:\t90                   \tnop", "code_s": "__int64 __fastcall DU_Common nowtime2str[abi:cxx11](__int64 a1) {\n  char <span class=\"supfact\">v2</span>[Number];\n  char v3[Number];\n  std allocator<char> allocator(v3);\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(<span class=\"supfact\">v2</span>, String, v3);\n  DU_Common now2str(a1, (__int64)<span class=\"supfact\">v2</span>);\n  std __cxx11\n      basic_string<char, std char_traits<char>,\n                   std allocator<char>> ~basic_string(<span class=\"supfact\">v2</span>);\n  std allocator<char> ~allocator(v3);\n  return a1;\n}", "code_t": "std string *__cdecl DU_Common nowtime2str[abi:cxx11](std string *retstr) {\n  std string <span class=\"supfact\">sFormat</span>;\n  char v3[Number];\n  std allocator<char> allocator(v3);\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(&<span class=\"supfact\">sFormat</span>, String, v3);\n  DU_Common now2str(retstr, &<span class=\"supfact\">sFormat</span>);\n  std __cxx11\n      basic_string<char, std char_traits<char>,\n                   std allocator<char>> ~basic_string(&<span class=\"supfact\">sFormat</span>);\n  std allocator<char> ~allocator(v3);\n  return retstr;\n}", "var": [{"name": "v2", "type": "char[47]", "ref_name": "sFormat", "ref_type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/20b0e5fcc6ff69954726b84cf103d678b8870ad8cce6c33a57691a73f9201c1c", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/emu/emuopts.o", "objdump": "0000000000000c16 <_ZN11emu_options13parse_one_iniEPKciP7astring>:\n c16:\t55                   \tpush   %rbp\n c17:\t48 89 e5             \tmov    %rsp,%rbp\n c1a:\t53                   \tpush   %rbx\n c1b:\t48 81 ec a8 01 00 00 \tsub    $0x1a8,%rsp\n c22:\t48 89 bd 68 fe ff ff \tmov    %rdi,-0x198(%rbp)\n c29:\t48 89 b5 60 fe ff ff \tmov    %rsi,-0x1a0(%rbp)\n c30:\t89 95 5c fe ff ff    \tmov    %edx,-0x1a4(%rbp)\n c36:\t48 89 8d 50 fe ff ff \tmov    %rcx,-0x1b0(%rbp)\n c3d:\t48 8b 85 68 fe ff ff \tmov    -0x198(%rbp),%rax\n c44:\t48 89 c7             \tmov    %rax,%rdi\n c47:\te8 00 00 00 00       \tcallq  c4c <_ZN11emu_options13parse_one_iniEPKciP7astring+0x36>\n c4c:\t83 f0 01             \txor    $0x1,%eax\n c4f:\t84 c0                \ttest   %al,%al\n c51:\t74 0a                \tje     c5d <_ZN11emu_options13parse_one_iniEPKciP7astring+0x47>\n c53:\tbb 00 00 00 00       \tmov    $0x0,%ebx\n c58:\te9 4c 01 00 00       \tjmpq   da9 <_ZN11emu_options13parse_one_iniEPKciP7astring+0x193>\n c5d:\t48 8b 85 68 fe ff ff \tmov    -0x198(%rbp),%rax\n c64:\t48 89 c7             \tmov    %rax,%rdi\n c67:\te8 00 00 00 00       \tcallq  c6c <_ZN11emu_options13parse_one_iniEPKciP7astring+0x56>\n c6c:\t48 89 c1             \tmov    %rax,%rcx\n c6f:\t48 8d 85 b0 fe ff ff \tlea    -0x150(%rbp),%rax\n c76:\tba 01 00 00 00       \tmov    $0x1,%edx\n c7b:\t48 89 ce             \tmov    %rcx,%rsi\n c7e:\t48 89 c7             \tmov    %rax,%rdi\n c81:\te8 00 00 00 00       \tcallq  c86 <_ZN11emu_options13parse_one_iniEPKciP7astring+0x70>\n c86:\t48 8b 8d 60 fe ff ff \tmov    -0x1a0(%rbp),%rcx\n c8d:\t48 8d 85 b0 fe ff ff \tlea    -0x150(%rbp),%rax\n c94:\tba 00 00 00 00       \tmov    $0x0,%edx\n c99:\t48 89 ce             \tmov    %rcx,%rsi\n c9c:\t48 89 c7             \tmov    %rax,%rdi\n c9f:\te8 00 00 00 00       \tcallq  ca4 <_ZN11emu_options13parse_one_iniEPKciP7astring+0x8e>\n ca4:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n ca7:\t83 7d ec 00          \tcmpl   $0x0,-0x14(%rbp)\n cab:\t74 0a                \tje     cb7 <_ZN11emu_options13parse_one_iniEPKciP7astring+0xa1>\n cad:\tbb 00 00 00 00       \tmov    $0x0,%ebx\n cb2:\te9 e3 00 00 00       \tjmpq   d9a <_ZN11emu_options13parse_one_iniEPKciP7astring+0x184>\n cb7:\t48 8b 85 60 fe ff ff \tmov    -0x1a0(%rbp),%rax\n cbe:\t48 89 c6             \tmov    %rax,%rsi\n cc1:\tbf 00 00 00 00       \tmov    $0x0,%edi\n cc6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n ccb:\te8 00 00 00 00       \tcallq  cd0 <_ZN11emu_options13parse_one_iniEPKciP7astring+0xba>\n cd0:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n cd7:\t48 89 c7             \tmov    %rax,%rdi\n cda:\te8 00 00 00 00       \tcallq  cdf <_ZN11emu_options13parse_one_iniEPKciP7astring+0xc9>\n cdf:\t48 8b 9d 68 fe ff ff \tmov    -0x198(%rbp),%rbx\n ce6:\t48 8d 85 b0 fe ff ff \tlea    -0x150(%rbp),%rax\n ced:\t48 89 c7             \tmov    %rax,%rdi\n cf0:\te8 00 00 00 00       \tcallq  cf5 <_ZN11emu_options13parse_one_iniEPKciP7astring+0xdf>\n cf5:\t48 89 c6             \tmov    %rax,%rsi\n cf8:\t48 8d 95 70 fe ff ff \tlea    -0x190(%rbp),%rdx\n cff:\t8b 85 5c fe ff ff    \tmov    -0x1a4(%rbp),%eax\n d05:\t49 89 d0             \tmov    %rdx,%r8\n d08:\tb9 6c 00 00 00       \tmov    $0x6c,%ecx\n d0d:\t89 c2                \tmov    %eax,%edx\n d0f:\t48 89 df             \tmov    %rbx,%rdi\n d12:\te8 00 00 00 00       \tcallq  d17 <_ZN11emu_options13parse_one_iniEPKciP7astring+0x101>\n d17:\t88 45 eb             \tmov    %al,-0x15(%rbp)\n d1a:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n d21:\t48 89 c7             \tmov    %rax,%rdi\n d24:\te8 00 00 00 00       \tcallq  d29 <_ZN11emu_options13parse_one_iniEPKciP7astring+0x113>\n d29:\t84 c0                \ttest   %al,%al\n d2b:\t74 11                \tje     d3e <_ZN11emu_options13parse_one_iniEPKciP7astring+0x128>\n d2d:\t48 83 bd 50 fe ff ff \tcmpq   $0x0,-0x1b0(%rbp)\n d34:\t00 \n d35:\t74 07                \tje     d3e <_ZN11emu_options13parse_one_iniEPKciP7astring+0x128>\n d37:\tb8 01 00 00 00       \tmov    $0x1,%eax\n d3c:\teb 05                \tjmp    d43 <_ZN11emu_options13parse_one_iniEPKciP7astring+0x12d>\n d3e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n d43:\t84 c0                \ttest   %al,%al\n d45:\t74 40                \tje     d87 <_ZN11emu_options13parse_one_iniEPKciP7astring+0x171>\n d47:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n d4e:\t48 89 c7             \tmov    %rax,%rdi\n d51:\te8 00 00 00 00       \tcallq  d56 <_ZN11emu_options13parse_one_iniEPKciP7astring+0x140>\n d56:\t48 89 c3             \tmov    %rax,%rbx\n d59:\t48 8d 85 b0 fe ff ff \tlea    -0x150(%rbp),%rax\n d60:\t48 89 c7             \tmov    %rax,%rdi\n d63:\te8 00 00 00 00       \tcallq  d68 <_ZN11emu_options13parse_one_iniEPKciP7astring+0x152>\n d68:\t48 89 c2             \tmov    %rax,%rdx\n d6b:\t48 8b 85 50 fe ff ff \tmov    -0x1b0(%rbp),%rax\n d72:\t48 89 d9             \tmov    %rbx,%rcx\n d75:\tbe 00 00 00 00       \tmov    $0x0,%esi\n d7a:\t48 89 c7             \tmov    %rax,%rdi\n d7d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n d82:\te8 00 00 00 00       \tcallq  d87 <_ZN11emu_options13parse_one_iniEPKciP7astring+0x171>\n d87:\t0f b6 5d eb          \tmovzbl -0x15(%rbp),%ebx\n d8b:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n d92:\t48 89 c7             \tmov    %rax,%rdi\n d95:\te8 00 00 00 00       \tcallq  d9a <_ZN11emu_options13parse_one_iniEPKciP7astring+0x184>\n d9a:\t48 8d 85 b0 fe ff ff \tlea    -0x150(%rbp),%rax\n da1:\t48 89 c7             \tmov    %rax,%rdi\n da4:\te8 00 00 00 00       \tcallq  da9 <_ZN11emu_options13parse_one_iniEPKciP7astring+0x193>\n da9:\t89 d8                \tmov    %ebx,%eax\n dab:\teb 31                \tjmp    dde <_ZN11emu_options13parse_one_iniEPKciP7astring+0x1c8>\n dad:\t48 89 c3             \tmov    %rax,%rbx\n db0:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n db7:\t48 89 c7             \tmov    %rax,%rdi\n dba:\te8 00 00 00 00       \tcallq  dbf <_ZN11emu_options13parse_one_iniEPKciP7astring+0x1a9>\n dbf:\teb 03                \tjmp    dc4 <_ZN11emu_options13parse_one_iniEPKciP7astring+0x1ae>\n dc1:\t48 89 c3             \tmov    %rax,%rbx\n dc4:\t48 8d 85 b0 fe ff ff \tlea    -0x150(%rbp),%rax\n dcb:\t48 89 c7             \tmov    %rax,%rdi\n dce:\te8 00 00 00 00       \tcallq  dd3 <_ZN11emu_options13parse_one_iniEPKciP7astring+0x1bd>\n dd3:\t48 89 d8             \tmov    %rbx,%rax\n dd6:\t48 89 c7             \tmov    %rax,%rdi\n dd9:\te8 00 00 00 00       \tcallq  dde <_ZN11emu_options13parse_one_iniEPKciP7astring+0x1c8>\n dde:\t48 81 c4 a8 01 00 00 \tadd    $0x1a8,%rsp\n de5:\t5b                   \tpop    %rbx\n de6:\t5d                   \tpop    %rbp\n de7:\tc3                   \tretq   ", "code_s": "__int64 __fastcall emu_options parse_one_ini(emu_options *this, const char *a2,\n                                             unsigned int a3, astring *a4) {\n  unsigned int v4;\n  const char *v5;\n  __int64 v6;\n  const char *v8;\n  const char *v9;\n  char <span class=\"supfact\">v13</span>[Number];\n  char v14[Number];\n  unsigned __int8 v15;\n  if ((unsigned __int8)emu_options read_config(this) != Number)\n    return Number;\n  v5 = (const char *)emu_options ini_path(this);\n  emu_file emu_file((emu_file *)v14, v5, Number);\n  if ((unsigned int)emu_file open((emu_file *)v14, a2, String)) {\n    v4 = Number;\n  } else {\n    mame_printf_verbose(String, a2);\n    astring astring((astring *)<span class=\"supfact\">v13</span>);\n    v6 = emu_file operator _core_file &(v14);\n    v15 = core_options parse_ini_file(this, v6, a3, Number L,\n                                      <span class=\"supfact\">v13</span>);\n    if ((unsigned __int8)astring operator bool(<span class=\"supfact\">v13</span>) && a4) {\n      v8 = (const char *)astring cstr((astring *)<span class=\"supfact\">v13</span>);\n      v9 = (const char *)emu_file fullpath((emu_file *)v14);\n      astring catprintf(a4, String, v9, v8);\n    }\n    v4 = v15;\n    astring ~astring((astring *)<span class=\"supfact\">v13</span>);\n  }\n  emu_file ~emu_file((emu_file *)v14);\n  return v4;\n}", "code_t": "bool __cdecl emu_options parse_one_ini(emu_options *const this,\n                                       const char *basename, int priority,\n                                       astring *error_string) {\n  bool v4;\n  const char *v5;\n  __int64 v6;\n  const char *v8;\n  const char *v9;\n  astring <span class=\"supfact\">error</span>;\n  char v14[Number];\n  bool result;\n  if (!emu_options read_config(this))\n    return Number;\n  v5 = emu_options ini_path(this);\n  emu_file emu_file((emu_file *)v14, v5, Number);\n  if ((unsigned int)emu_file open((emu_file *)v14, basename, String)) {\n    v4 = Number;\n  } else {\n    mame_printf_verbose(String, basename);\n    astring astring(&<span class=\"supfact\">error</span>);\n    v6 = emu_file operator _core_file &(v14);\n    result = core_options parse_ini_file(this, v6, (unsigned int)priority,\n                                         Number L, &<span class=\"supfact\">error</span>);\n    if (astring operator bool(&<span class=\"supfact\">error</span>) && error_string) {\n      v8 = astring cstr(&<span class=\"supfact\">error</span>);\n      v9 = emu_file fullpath((const emu_file *const)v14);\n      astring catprintf(error_string, String, v9, v8);\n    }\n    v4 = result;\n    astring ~astring(&<span class=\"supfact\">error</span>);\n  }\n  emu_file ~emu_file((emu_file *)v14);\n  return v4;\n}", "var": [{"name": "v13", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "error", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "github", "repo_name": "git-msysgit", "path": "github/git-msysgit/6ae84bed2bea0bdc791463b7d3222148587b6c92f5751dc6aba3318c26f5edc8", "path_in_repo": "github/git-msysgit//url.o", "objdump": "0000000000000493 <url_decode_parameter_value>:\n 493:\t55                   \tpush   %rbp\n 494:\t48 89 e5             \tmov    %rsp,%rbp\n 497:\t48 83 ec 30          \tsub    $0x30,%rsp\n 49b:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n 49f:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n 4a6:\t00 \n 4a7:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n 4ae:\t00 \n 4af:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n 4b6:\t00 \n 4b7:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n 4bb:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 4bf:\t41 b8 01 00 00 00    \tmov    $0x1,%r8d\n 4c5:\t48 89 d1             \tmov    %rdx,%rcx\n 4c8:\tba 00 00 00 00       \tmov    $0x0,%edx\n 4cd:\tbe ff ff ff ff       \tmov    $0xffffffff,%esi\n 4d2:\t48 89 c7             \tmov    %rax,%rdi\n 4d5:\te8 83 fd ff ff       \tcallq  25d <url_decode_internal>\n 4da:\tc9                   \tleaveq \n 4db:\tc3                   \tretq   ", "code_s": "__int64 __fastcall url_decode_parameter_value(unsigned __int8 **a1) {\n  __int64 <span class=\"supfact\">v2</span>[Number];\n  <span class=\"supfact\">v2</span>[Number] = Number L;\n  <span class=\"supfact\">v2</span>[Number] = Number L;\n  <span class=\"supfact\">v2</span>[Number] = (__int64)&strbuf_slopbuf;\n  return url_decode_internal(a1, Number, String, (__int64)<span class=\"supfact\">v2</span>,\n                             Number);\n}", "code_t": "char *__cdecl url_decode_parameter_value(const char **query) {\n  strbuf <span class=\"supfact\">out</span>;\n  <span class=\"supfact\">out</span>.alloc = Number L;\n  <span class=\"supfact\">out</span>.len = Number L;\n  <span class=\"supfact\">out</span>.buf = (char *)&strbuf_slopbuf;\n  return url_decode_internal(query, Number, String, &<span class=\"supfact\">out</span>,\n                             Number);\n}", "var": [{"name": "v2", "type": "struct strbuf { size_t alloc; size_t len; char * buf; }", "ref_name": "out", "ref_type": "struct strbuf { size_t alloc; size_t len; char * buf; }"}], "body_in_train": false}, {"repo_owner": "ilyaevseev", "repo_name": "edimax-br6528n-gpl", "path": "ilyaevseev/edimax-br6528n-gpl/b0fadd86f12445eddf297807071cb0ca5a3abded44a93ea6bf36b52574dd79d1", "path_in_repo": "ilyaevseev/edimax-br6528n-gpl/RTL8196C/AP/ppp-2.4.4/pppd/main.o", "objdump": "0000000000001a48 <update_link_stats>:\n    1a48:\t55                   \tpush   %rbp\n    1a49:\t48 89 e5             \tmov    %rsp,%rbp\n    1a4c:\t48 83 ec 40          \tsub    $0x40,%rsp\n    1a50:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n    1a53:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n    1a56:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1a5b:\t89 c7                \tmov    %eax,%edi\n    1a5d:\te8 00 00 00 00       \tcallq  1a62 <update_link_stats+0x1a>\n    1a62:\t85 c0                \ttest   %eax,%eax\n    1a64:\t0f 84 3f 01 00 00    \tje     1ba9 <update_link_stats+0x161>\n    1a6a:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n    1a6e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1a73:\t48 89 c7             \tmov    %rax,%rdi\n    1a76:\te8 00 00 00 00       \tcallq  1a7b <update_link_stats+0x33>\n    1a7b:\t85 c0                \ttest   %eax,%eax\n    1a7d:\t0f 88 26 01 00 00    \tjs     1ba9 <update_link_stats+0x161>\n    1a83:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1a87:\t89 c2                \tmov    %eax,%edx\n    1a89:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1a90 <update_link_stats+0x48>\n    1a90:\t29 c2                \tsub    %eax,%edx\n    1a92:\t89 d0                \tmov    %edx,%eax\n    1a94:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 1a9a <update_link_stats+0x52>\n    1a9a:\tc7 05 00 00 00 00 01 \tmovl   $0x1,0x0(%rip)        # 1aa4 <update_link_stats+0x5c>\n    1aa1:\t00 00 00 \n    1aa4:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # 1aaa <update_link_stats+0x62>\n    1aaa:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1ab0 <update_link_stats+0x68>\n    1ab0:\t29 c2                \tsub    %eax,%edx\n    1ab2:\t89 d0                \tmov    %edx,%eax\n    1ab4:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 1aba <update_link_stats+0x72>\n    1aba:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # 1ac0 <update_link_stats+0x78>\n    1ac0:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1ac6 <update_link_stats+0x7e>\n    1ac6:\t29 c2                \tsub    %eax,%edx\n    1ac8:\t89 d0                \tmov    %edx,%eax\n    1aca:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 1ad0 <update_link_stats+0x88>\n    1ad0:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # 1ad6 <update_link_stats+0x8e>\n    1ad6:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1adc <update_link_stats+0x94>\n    1adc:\t29 c2                \tsub    %eax,%edx\n    1ade:\t89 d0                \tmov    %edx,%eax\n    1ae0:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 1ae6 <update_link_stats+0x9e>\n    1ae6:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # 1aec <update_link_stats+0xa4>\n    1aec:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1af2 <update_link_stats+0xaa>\n    1af2:\t29 c2                \tsub    %eax,%edx\n    1af4:\t89 d0                \tmov    %edx,%eax\n    1af6:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 1afc <update_link_stats+0xb4>\n    1afc:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # 1b02 <update_link_stats+0xba>\n    1b02:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1b06:\t89 d1                \tmov    %edx,%ecx\n    1b08:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1b0d:\tbe 20 00 00 00       \tmov    $0x20,%esi\n    1b12:\t48 89 c7             \tmov    %rax,%rdi\n    1b15:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1b1a:\te8 00 00 00 00       \tcallq  1b1f <update_link_stats+0xd7>\n    1b1f:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1b23:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1b28:\t48 89 c6             \tmov    %rax,%rsi\n    1b2b:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1b30:\te8 00 00 00 00       \tcallq  1b35 <update_link_stats+0xed>\n    1b35:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # 1b3b <update_link_stats+0xf3>\n    1b3b:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1b3f:\t89 d1                \tmov    %edx,%ecx\n    1b41:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1b46:\tbe 20 00 00 00       \tmov    $0x20,%esi\n    1b4b:\t48 89 c7             \tmov    %rax,%rdi\n    1b4e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1b53:\te8 00 00 00 00       \tcallq  1b58 <update_link_stats+0x110>\n    1b58:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1b5c:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1b61:\t48 89 c6             \tmov    %rax,%rsi\n    1b64:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1b69:\te8 00 00 00 00       \tcallq  1b6e <update_link_stats+0x126>\n    1b6e:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # 1b74 <update_link_stats+0x12c>\n    1b74:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1b78:\t89 d1                \tmov    %edx,%ecx\n    1b7a:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1b7f:\tbe 20 00 00 00       \tmov    $0x20,%esi\n    1b84:\t48 89 c7             \tmov    %rax,%rdi\n    1b87:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1b8c:\te8 00 00 00 00       \tcallq  1b91 <update_link_stats+0x149>\n    1b91:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1b95:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1b9a:\t48 89 c6             \tmov    %rax,%rsi\n    1b9d:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1ba2:\te8 00 00 00 00       \tcallq  1ba7 <update_link_stats+0x15f>\n    1ba7:\teb 01                \tjmp    1baa <update_link_stats+0x162>\n    1ba9:\t90                   \tnop\n    1baa:\tc9                   \tleaveq \n    1bab:\tc3                   \tretq   ", "code_s": "int __fastcall update_link_stats(unsigned int a1) {\n  int result;\n  char v2[Number];\n  struct timeval <span class=\"supfact\">tv</span>;\n  result = get_ppp_stats(a1, link_stats);\n  if (result) {\n    result = gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    if (result >= Number) {\n      link_connect_time =\n          LODWORD(<span class=\"supfact\">tv</span>.tv_sec) - LODWORD(start_time.tv_sec);\n      link_stats_valid = Number;\n      link_stats[Number] -= old_link_stats;\n      link_stats[Number] -= dword_5D44;\n      link_stats[Number] -= dword_5D48;\n      link_stats[Number] -= dword_5D4C;\n      slprintf(v2, Number L, String, (unsigned int)link_connect_time);\n      script_setenv(String, v2, Number L);\n      slprintf(v2, Number L, String, link_stats[Number]);\n      script_setenv(String, v2, Number L);\n      slprintf(v2, Number L, String, link_stats[Number]);\n      result = script_setenv(String, v2, Number L);\n    }\n  }\n  return result;\n}", "code_t": "void __cdecl update_link_stats(int u) {\n  char numbuf[Number];\n  timeval <span class=\"supfact\">now</span>;\n  if ((unsigned int)get_ppp_stats((unsigned int)u, link_stats)) {\n    if (gettimeofday(&<span class=\"supfact\">now</span>, Number L) >= Number) {\n      link_connect_time =\n          LODWORD(<span class=\"supfact\">now</span>.tv_sec) - LODWORD(start_time.tv_sec);\n      link_stats_valid = Number;\n      link_stats[Number] -= old_link_stats.bytes_in;\n      link_stats[Number] -= old_link_stats.bytes_out;\n      link_stats[Number] -= old_link_stats.pkts_in;\n      link_stats[Number] -= old_link_stats.pkts_out;\n      slprintf(numbuf, Number L, String, (unsigned int)link_connect_time);\n      script_setenv(String, numbuf, Number);\n      slprintf(numbuf, Number L, String, link_stats[Number]);\n      script_setenv(String, numbuf, Number);\n      slprintf(numbuf, Number L, String, link_stats[Number]);\n      script_setenv(String, numbuf, Number);\n    }\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "romankap", "repo_name": "Using-dlib", "path": "romankap/Using-dlib/3a2246d1f9dcfe4bd2b2510d725749a069338bfe3e7e84cdb6bbee13e1278bba", "path_in_repo": "romankap/Using-dlib/Lot_w_dlib/dlib-18.10/dlib/test/queue.o", "objdump": "000000000000b314 <_ZN4dlib12queue_sort_1INS_14queue_kernel_cINS_14queue_kernel_1IiNS_30memory_manager_global_kernel_1IcN12_GLOBAL__N_17factoryEEEEEEEE4sortEv>:\n    b314:\t55                   \tpush   %rbp\n    b315:\t48 89 e5             \tmov    %rsp,%rbp\n    b318:\t48 83 ec 20          \tsub    $0x20,%rsp\n    b31c:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    b320:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    b324:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    b328:\t48 8b 12             \tmov    (%rdx),%rdx\n    b32b:\t48 83 c2 40          \tadd    $0x40,%rdx\n    b32f:\t48 8b 12             \tmov    (%rdx),%rdx\n    b332:\t48 89 c7             \tmov    %rax,%rdi\n    b335:\tff d2                \tcallq  *%rdx\n    b337:\t48 83 f8 01          \tcmp    $0x1,%rax\n    b33b:\t0f 97 c0             \tseta   %al\n    b33e:\t84 c0                \ttest   %al,%al\n    b340:\t74 1c                \tje     b35e <_ZN4dlib12queue_sort_1INS_14queue_kernel_cINS_14queue_kernel_1IiNS_30memory_manager_global_kernel_1IcN12_GLOBAL__N_17factoryEEEEEEEE4sortEv+0x4a>\n    b342:\t48 8b 75 e8          \tmov    -0x18(%rbp),%rsi\n    b346:\t48 8d 55 ff          \tlea    -0x1(%rbp),%rdx\n    b34a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    b34e:\t48 89 d1             \tmov    %rdx,%rcx\n    b351:\tba 00 00 00 00       \tmov    $0x0,%edx\n    b356:\t48 89 c7             \tmov    %rax,%rdi\n    b359:\te8 54 2e 00 00       \tcallq  e1b2 <_ZN4dlib12queue_sort_1INS_14queue_kernel_cINS_14queue_kernel_1IiNS_30memory_manager_global_kernel_1IcN12_GLOBAL__N_17factoryEEEEEEEE15sort_this_queueISt4lessIiEEEvRS8_lRKT_>\n    b35e:\t90                   \tnop\n    b35f:\tc9                   \tleaveq \n    b360:\tc3                   \tretq   \n    b361:\t90                   \tnop", "code_s": "char __fastcall dlib queue_sort_1<dlib queue_kernel_c<dlib queue_kernel_1<\n    int,\n    dlib memory_manager_global_kernel_1<\n        char, ` anonymous namespace ' factory >> >> sort ( __int64 a1 ) { char result ; char <span class=\"supfact\">v2</span> ; result = ( unsigned __int64 ) ( * ( __int64 ( __fastcall * * ) ( __int64 ) ) ( * ( _QWORD * ) a1 + Number L ) ) ( a1 ) > Number ; if ( result ) result = dlib queue_sort_1 < dlib queue_kernel_c < dlib queue_kernel_1 < int , dlib memory_manager_global_kernel_1 < char , ` anonymous namespace ' factory>>>>\nsort_this_queue<std less<int>>(a1, a1, Number L, &<span class=\"supfact\">v2</span>);\nreturn result;\n}", "code_t": "void __cdecl dlib queue_sort_1<dlib queue_kernel_c<dlib queue_kernel_1<int,\n                                                                       dlib\n                                                                           memory_manager_global_kernel_1<\n                                                                               char, ` anonymous namespace ' factory >> >> sort ( dlib queue_sort_1 < dlib queue_kernel_c < dlib queue_kernel_1 < int , dlib memory_manager_global_kernel_1 < char , ( anonymous namespace ) factory > > > > * const this ) { std less < int > <span class=\"supfact\">compare</span> ; if ( ( unsigned __int64 ) ( * ( ( __int64 ( __fastcall * * ) ( dlib queue_sort_1 < dlib queue_kernel_c < dlib queue_kernel_1 < int , dlib memory_manager_global_kernel_1 < char , ( anonymous namespace ) factory > > > > * const ) ) this -> _vptr_enumerable + Number ) ) ( this ) > Number ) dlib queue_sort_1 < dlib queue_kernel_c < dlib queue_kernel_1 < int , dlib memory_manager_global_kernel_1 < char , ` anonymous namespace ' factory>>>>\nsort_this_queue<std less<int>>(this, this, Number L, &<span class=\"supfact\">compare</span>);\n}", "var": [{"name": "v2", "type": "char", "ref_name": "compare", "ref_type": "struct std::less<int> { std::binary_function<int,int,bool> baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "juj", "repo_name": "posixtestsuite", "path": "juj/posixtestsuite/583a61c5ce43283701e4acdf90b3ea47e96dc61294b478e132653419e7bfe8f4", "path_in_repo": "juj/posixtestsuite//conformance/interfaces/sigprocmask/7-1.o", "objdump": "0000000000000000 <main>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 81 ec 80 01 00 00 \tsub    $0x180,%rsp\n   b:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n  12:\tc7 85 80 fe ff ff 06 \tmovl   $0x6,-0x180(%rbp)\n  19:\t00 00 00 \n  1c:\tc7 85 84 fe ff ff 0e \tmovl   $0xe,-0x17c(%rbp)\n  23:\t00 00 00 \n  26:\tc7 85 88 fe ff ff 07 \tmovl   $0x7,-0x178(%rbp)\n  2d:\t00 00 00 \n  30:\tc7 85 8c fe ff ff 11 \tmovl   $0x11,-0x174(%rbp)\n  37:\t00 00 00 \n  3a:\tc7 85 90 fe ff ff 12 \tmovl   $0x12,-0x170(%rbp)\n  41:\t00 00 00 \n  44:\tc7 85 94 fe ff ff 08 \tmovl   $0x8,-0x16c(%rbp)\n  4b:\t00 00 00 \n  4e:\tc7 85 98 fe ff ff 01 \tmovl   $0x1,-0x168(%rbp)\n  55:\t00 00 00 \n  58:\tc7 85 9c fe ff ff 04 \tmovl   $0x4,-0x164(%rbp)\n  5f:\t00 00 00 \n  62:\tc7 85 a0 fe ff ff 02 \tmovl   $0x2,-0x160(%rbp)\n  69:\t00 00 00 \n  6c:\tc7 85 a4 fe ff ff 0d \tmovl   $0xd,-0x15c(%rbp)\n  73:\t00 00 00 \n  76:\tc7 85 a8 fe ff ff 03 \tmovl   $0x3,-0x158(%rbp)\n  7d:\t00 00 00 \n  80:\tc7 85 ac fe ff ff 0b \tmovl   $0xb,-0x154(%rbp)\n  87:\t00 00 00 \n  8a:\tc7 85 b0 fe ff ff 0f \tmovl   $0xf,-0x150(%rbp)\n  91:\t00 00 00 \n  94:\tc7 85 b4 fe ff ff 14 \tmovl   $0x14,-0x14c(%rbp)\n  9b:\t00 00 00 \n  9e:\tc7 85 b8 fe ff ff 15 \tmovl   $0x15,-0x148(%rbp)\n  a5:\t00 00 00 \n  a8:\tc7 85 bc fe ff ff 16 \tmovl   $0x16,-0x144(%rbp)\n  af:\t00 00 00 \n  b2:\tc7 85 c0 fe ff ff 0a \tmovl   $0xa,-0x140(%rbp)\n  b9:\t00 00 00 \n  bc:\tc7 85 c4 fe ff ff 0c \tmovl   $0xc,-0x13c(%rbp)\n  c3:\t00 00 00 \n  c6:\tc7 85 c8 fe ff ff 1d \tmovl   $0x1d,-0x138(%rbp)\n  cd:\t00 00 00 \n  d0:\tc7 85 cc fe ff ff 1b \tmovl   $0x1b,-0x134(%rbp)\n  d7:\t00 00 00 \n  da:\tc7 85 d0 fe ff ff 1f \tmovl   $0x1f,-0x130(%rbp)\n  e1:\t00 00 00 \n  e4:\tc7 85 d4 fe ff ff 05 \tmovl   $0x5,-0x12c(%rbp)\n  eb:\t00 00 00 \n  ee:\tc7 85 d8 fe ff ff 17 \tmovl   $0x17,-0x128(%rbp)\n  f5:\t00 00 00 \n  f8:\tc7 85 dc fe ff ff 1a \tmovl   $0x1a,-0x124(%rbp)\n  ff:\t00 00 00 \n 102:\tc7 85 e0 fe ff ff 18 \tmovl   $0x18,-0x120(%rbp)\n 109:\t00 00 00 \n 10c:\tc7 85 e4 fe ff ff 19 \tmovl   $0x19,-0x11c(%rbp)\n 113:\t00 00 00 \n 116:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n 11d:\te9 9e 00 00 00       \tjmpq   1c0 <main+0x1c0>\n 122:\t48 8d 85 70 ff ff ff \tlea    -0x90(%rbp),%rax\n 129:\t48 89 c7             \tmov    %rax,%rdi\n 12c:\te8 00 00 00 00       \tcallq  131 <main+0x131>\n 131:\t48 8d 85 f0 fe ff ff \tlea    -0x110(%rbp),%rax\n 138:\t48 89 c7             \tmov    %rax,%rdi\n 13b:\te8 00 00 00 00       \tcallq  140 <main+0x140>\n 140:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 143:\t48 98                \tcltq   \n 145:\t8b 94 85 80 fe ff ff \tmov    -0x180(%rbp,%rax,4),%edx\n 14c:\t48 8d 85 f0 fe ff ff \tlea    -0x110(%rbp),%rax\n 153:\t89 d6                \tmov    %edx,%esi\n 155:\t48 89 c7             \tmov    %rax,%rdi\n 158:\te8 00 00 00 00       \tcallq  15d <main+0x15d>\n 15d:\t48 8d 95 70 ff ff ff \tlea    -0x90(%rbp),%rdx\n 164:\t48 8d 85 f0 fe ff ff \tlea    -0x110(%rbp),%rax\n 16b:\t48 89 c6             \tmov    %rax,%rsi\n 16e:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 173:\te8 00 00 00 00       \tcallq  178 <main+0x178>\n 178:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n 17c:\t7e 3e                \tjle    1bc <main+0x1bc>\n 17e:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n 185:\teb 2d                \tjmp    1b4 <main+0x1b4>\n 187:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 18a:\t48 98                \tcltq   \n 18c:\t8b 94 85 80 fe ff ff \tmov    -0x180(%rbp,%rax,4),%edx\n 193:\t48 8d 85 70 ff ff ff \tlea    -0x90(%rbp),%rax\n 19a:\t89 d6                \tmov    %edx,%esi\n 19c:\t48 89 c7             \tmov    %rax,%rdi\n 19f:\te8 00 00 00 00       \tcallq  1a4 <main+0x1a4>\n 1a4:\t83 f8 01             \tcmp    $0x1,%eax\n 1a7:\t74 07                \tje     1b0 <main+0x1b0>\n 1a9:\tc7 45 f4 01 00 00 00 \tmovl   $0x1,-0xc(%rbp)\n 1b0:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n 1b4:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 1b7:\t3b 45 fc             \tcmp    -0x4(%rbp),%eax\n 1ba:\t7c cb                \tjl     187 <main+0x187>\n 1bc:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 1c0:\t83 7d fc 19          \tcmpl   $0x19,-0x4(%rbp)\n 1c4:\t0f 8e 58 ff ff ff    \tjle    122 <main+0x122>\n 1ca:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n 1ce:\t74 11                \tje     1e1 <main+0x1e1>\n 1d0:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 1d5:\te8 00 00 00 00       \tcallq  1da <main+0x1da>\n 1da:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 1df:\teb 0f                \tjmp    1f0 <main+0x1f0>\n 1e1:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 1e6:\te8 00 00 00 00       \tcallq  1eb <main+0x1eb>\n 1eb:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 1f0:\tc9                   \tleaveq \n 1f1:\tc3                   \tretq   \n", "code_s": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  int result;\n  int signo[Number];\n  sigset_t <span class=\"supfact\">v5</span>;\n  sigset_t <span class=\"supfact\">set</span>;\n  int v7;\n  int j;\n  int i;\n  v7 = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  signo[Number] = Number;\n  for (i = Number; i <= Number; ++i) {\n    sigemptyset(&<span class=\"supfact\">set</span>);\n    sigemptyset(&<span class=\"supfact\">v5</span>);\n    sigaddset(&<span class=\"supfact\">v5</span>, signo[i]);\n    sigprocmask(Number, &<span class=\"supfact\">v5</span>, &<span class=\"supfact\">set</span>);\n    if (i > Number) {\n      for (j = Number; j < i; ++j) {\n        if (sigismember(&<span class=\"supfact\">set</span>, signo[j]) != Number)\n          v7 = Number;\n      }\n    }\n  }\n  if (v7) {\n    puts(String);\n    result = Number;\n  } else {\n    puts(String);\n    result = Number;\n  }\n  return result;\n}", "code_t": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  int result;\n  int siglist[Number];\n  sigset_t <span class=\"supfact\">tempset</span>;\n  sigset_t <span class=\"supfact\">oactl</span>;\n  int test_failed;\n  int j;\n  int i;\n  test_failed = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  siglist[Number] = Number;\n  for (i = Number; i <= Number; ++i) {\n    sigemptyset(&<span class=\"supfact\">oactl</span>);\n    sigemptyset(&<span class=\"supfact\">tempset</span>);\n    sigaddset(&<span class=\"supfact\">tempset</span>, siglist[i]);\n    sigprocmask(Number, &<span class=\"supfact\">tempset</span>, &<span class=\"supfact\">oactl</span>);\n    if (i > Number) {\n      for (j = Number; j < i; ++j) {\n        if (sigismember(&<span class=\"supfact\">oactl</span>, siglist[j]) != Number)\n          test_failed = Number;\n      }\n    }\n  }\n  if (test_failed) {\n    puts(String);\n    result = Number;\n  } else {\n    puts(String);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "set", "type": "struct sigset_t { unsigned __int64[16] __val; }", "ref_name": "oactl", "ref_type": "struct sigset_t { unsigned __int64[16] __val; }"}, {"name": "v5", "type": "struct sigset_t { unsigned __int64[16] __val; }", "ref_name": "tempset", "ref_type": "struct sigset_t { unsigned __int64[16] __val; }"}], "body_in_train": false}, {"repo_owner": "AlexanderVangelov", "repo_name": "pjsip", "path": "AlexanderVangelov/pjsip/1e1e7cb97ebb80eac8dbb33680b64d176ff61b4eaa68df0fca22659194da5490", "path_in_repo": "AlexanderVangelov/pjsip//pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/stateful_proxy", "objdump": "000000000040da7e <int_parse_uri_or_name_addr>:\n  40da7e:\t55                   \tpush   %rbp\n  40da7f:\t48 89 e5             \tmov    %rsp,%rbp\n  40da82:\t48 83 ec 50          \tsub    $0x50,%rsp\n  40da86:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n  40da8a:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n  40da8e:\t89 55 bc             \tmov    %edx,-0x44(%rbp)\n  40da91:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n  40da98:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  40da9c:\t48 89 c7             \tmov    %rax,%rdi\n  40da9f:\te8 61 4b 02 00       \tcallq  432605 <pj_scan_skip_whitespace>\n  40daa4:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  40daa8:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  40daac:\t0f b6 00             \tmovzbl (%rax),%eax\n  40daaf:\t3c 22                \tcmp    $0x22,%al\n  40dab1:\t74 0f                \tje     40dac2 <int_parse_uri_or_name_addr+0x44>\n  40dab3:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  40dab7:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  40dabb:\t0f b6 00             \tmovzbl (%rax),%eax\n  40dabe:\t3c 3c                \tcmp    $0x3c,%al\n  40dac0:\t75 23                \tjne    40dae5 <int_parse_uri_or_name_addr+0x67>\n  40dac2:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n  40dac6:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  40daca:\t48 89 d6             \tmov    %rdx,%rsi\n  40dacd:\t48 89 c7             \tmov    %rax,%rdi\n  40dad0:\te8 77 05 00 00       \tcallq  40e04c <int_parse_name_addr>\n  40dad5:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  40dad9:\tc7 45 f4 01 00 00 00 \tmovl   $0x1,-0xc(%rbp)\n  40dae0:\te9 89 00 00 00       \tjmpq   40db6e <int_parse_uri_or_name_addr+0xf0>\n  40dae5:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n  40dae9:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  40daed:\tbe 90 99 48 00       \tmov    $0x489990,%esi\n  40daf2:\t48 89 c7             \tmov    %rax,%rdi\n  40daf5:\te8 ef 4c 02 00       \tcallq  4327e9 <pj_scan_peek>\n  40dafa:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n  40dafd:\t83 7d f0 3a          \tcmpl   $0x3a,-0x10(%rbp)\n  40db01:\t75 4d                \tjne    40db50 <int_parse_uri_or_name_addr+0xd2>\n  40db03:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  40db07:\t48 89 c7             \tmov    %rax,%rdi\n  40db0a:\te8 68 ed ff ff       \tcallq  40c877 <find_uri_handler>\n  40db0f:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  40db13:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n  40db18:\t75 0d                \tjne    40db27 <int_parse_uri_or_name_addr+0xa9>\n  40db1a:\t8b 05 00 bc 07 00    \tmov    0x7bc00(%rip),%eax        # 489720 <PJSIP_SYN_ERR_EXCEPTION>\n  40db20:\t89 c7                \tmov    %eax,%edi\n  40db22:\te8 87 04 05 00       \tcallq  45dfae <pj_throw_exception_>\n  40db27:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n  40db2a:\t83 e0 02             \tand    $0x2,%eax\n  40db2d:\t85 c0                \ttest   %eax,%eax\n  40db2f:\t0f 94 c0             \tsete   %al\n  40db32:\t0f b6 d0             \tmovzbl %al,%edx\n  40db35:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n  40db39:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  40db3d:\t4c 8b 45 e8          \tmov    -0x18(%rbp),%r8\n  40db41:\t48 89 ce             \tmov    %rcx,%rsi\n  40db44:\t48 89 c7             \tmov    %rax,%rdi\n  40db47:\t41 ff d0             \tcallq  *%r8\n  40db4a:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  40db4e:\teb 1e                \tjmp    40db6e <int_parse_uri_or_name_addr+0xf0>\n  40db50:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n  40db54:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  40db58:\t48 89 d6             \tmov    %rdx,%rsi\n  40db5b:\t48 89 c7             \tmov    %rax,%rdi\n  40db5e:\te8 e9 04 00 00       \tcallq  40e04c <int_parse_name_addr>\n  40db63:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  40db67:\tc7 45 f4 01 00 00 00 \tmovl   $0x1,-0xc(%rbp)\n  40db6e:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n  40db71:\t83 e0 01             \tand    $0x1,%eax\n  40db74:\t85 c0                \ttest   %eax,%eax\n  40db76:\t74 2a                \tje     40dba2 <int_parse_uri_or_name_addr+0x124>\n  40db78:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n  40db7c:\t75 24                \tjne    40dba2 <int_parse_uri_or_name_addr+0x124>\n  40db7e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  40db82:\t48 89 c7             \tmov    %rax,%rdi\n  40db85:\te8 1e 3a 00 00       \tcallq  4115a8 <pjsip_name_addr_create>\n  40db8a:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n  40db8e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  40db92:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  40db96:\t48 89 50 18          \tmov    %rdx,0x18(%rax)\n  40db9a:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  40db9e:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  40dba2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40dba6:\tc9                   \tleaveq \n  40dba7:\tc3                   \tretq   ", "code_s": "__int64 __fastcall int_parse_uri_or_name_addr(__int64 a1, __int64 a2, char a3) {\n  char <span class=\"supfact\">v5</span>[Number];\n  __int64 v6;\n  __int64(__fastcall * v7)();\n  int v8;\n  int v9;\n  __int64 v10;\n  v9 = Number;\n  pj_scan_skip_whitespace(a1);\n  if (**(_BYTE **)(a1 + Number) == Number ||\n      **(_BYTE **)(a1 + Number) == Number) {\n    v10 = int_parse_name_addr(a1, a2);\n    v9 = Number;\n  } else {\n    v8 = pj_scan_peek(a1, &unk_489990, <span class=\"supfact\">v5</span>);\n    if (v8 == Number) {\n      v7 = find_uri_handler((__int64)<span class=\"supfact\">v5</span>);\n      if (!v7)\n        pj_throw_exception_((unsigned int)PJSIP_SYN_ERR_EXCEPTION);\n      v10 = ((__int64(__fastcall *)(__int64, __int64, bool))v7)(\n          a1, a2, (a3 & Number) == Number);\n    } else {\n      v10 = int_parse_name_addr(a1, a2);\n      v9 = Number;\n    }\n  }\n  if ((a3 & Number) != Number && !v9) {\n    v6 = pjsip_name_addr_create(a2);\n    *(_QWORD *)(v6 + Number) = v10;\n    v10 = v6;\n  }\n  return v10;\n}", "code_t": "pjsip_uri_0 *__cdecl int_parse_uri_or_name_addr(pj_scanner_0 *scanner,\n                                                pj_pool_t_0 *pool,\n                                                unsigned int opt) {\n  char opta;\n  pj_str_t_0 <span class=\"supfact\">scheme</span>;\n  pjsip_name_addr_0 *name_addr;\n  pjsip_parse_uri_func *func;\n  int next_ch;\n  int is_name_addr;\n  pjsip_uri_0 *uri;\n  opta = opt;\n  is_name_addr = Number;\n  pj_scan_skip_whitespace(scanner);\n  if (*scanner->curptr == Number || *scanner->curptr == Number) {\n    uri = (pjsip_uri_0 *)int_parse_name_addr(scanner, pool);\n    is_name_addr = Number;\n  } else {\n    next_ch = pj_scan_peek(scanner, &pconst.pjsip_DISPLAY_SPEC,\n                           &<span class=\"supfact\">scheme</span>);\n    if (next_ch == Number) {\n      func = find_uri_handler(&<span class=\"supfact\">scheme</span>);\n      if (!func)\n        pj_throw_exception_(PJSIP_SYN_ERR_EXCEPTION);\n      uri = (pjsip_uri_0 *)func(scanner, pool, (opta & Number) == Number);\n    } else {\n      uri = (pjsip_uri_0 *)int_parse_name_addr(scanner, pool);\n      is_name_addr = Number;\n    }\n  }\n  if ((opta & Number) != Number && !is_name_addr) {\n    name_addr = pjsip_name_addr_create(pool);\n    name_addr->uri = uri;\n    uri = (pjsip_uri_0 *)name_addr;\n  }\n  return uri;\n}", "var": [{"name": "v5", "type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }", "ref_name": "scheme", "ref_type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/5631eb03036580eed21c2bb869de67c5abe12626d32354cf1559c3a570587379", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/drivers/mw8080bw.o", "objdump": "0000000000006093 <_ZL33construct_machine_config_boothillR14machine_configP8device_t>:\n    6093:\t55                   \tpush   %rbp\n    6094:\t48 89 e5             \tmov    %rsp,%rbp\n    6097:\t53                   \tpush   %rbx\n    6098:\t48 83 ec 68          \tsub    $0x68,%rsp\n    609c:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n    60a0:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n    60a4:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    60ab:\t00 \n    60ac:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n    60b0:\t48 89 c7             \tmov    %rax,%rdi\n    60b3:\te8 00 00 00 00       \tcallq  60b8 <_ZL33construct_machine_config_boothillR14machine_configP8device_t+0x25>\n    60b8:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n    60bc:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    60c0:\t48 89 d6             \tmov    %rdx,%rsi\n    60c3:\t48 89 c7             \tmov    %rax,%rdi\n    60c6:\te8 00 00 00 00       \tcallq  60cb <_ZL33construct_machine_config_boothillR14machine_configP8device_t+0x38>\n    60cb:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n    60cf:\t48 8b 4d 90          \tmov    -0x70(%rbp),%rcx\n    60d3:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    60d7:\tba 00 00 00 00       \tmov    $0x0,%edx\n    60dc:\t48 89 ce             \tmov    %rcx,%rsi\n    60df:\t48 89 c7             \tmov    %rax,%rdi\n    60e2:\te8 00 00 00 00       \tcallq  60e7 <_ZL33construct_machine_config_boothillR14machine_configP8device_t+0x54>\n    60e7:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    60eb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    60ef:\tba 00 00 00 00       \tmov    $0x0,%edx\n    60f4:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    60f9:\t48 89 c7             \tmov    %rax,%rdi\n    60fc:\te8 00 00 00 00       \tcallq  6101 <_ZL33construct_machine_config_boothillR14machine_configP8device_t+0x6e>\n    6101:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    6105:\tba 00 00 00 00       \tmov    $0x0,%edx\n    610a:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    610f:\t48 89 c7             \tmov    %rax,%rdi\n    6112:\te8 00 00 00 00       \tcallq  6117 <_ZL33construct_machine_config_boothillR14machine_configP8device_t+0x84>\n    6117:\t48 8b 5d 98          \tmov    -0x68(%rbp),%rbx\n    611b:\tbf 7f 9a 06 b1       \tmov    $0xb1069a7f,%edi\n    6120:\te8 00 00 00 00       \tcallq  6125 <_ZL33construct_machine_config_boothillR14machine_configP8device_t+0x92>\n    6125:\t89 c1                \tmov    %eax,%ecx\n    6127:\t48 89 d0             \tmov    %rdx,%rax\n    612a:\t89 4b 20             \tmov    %ecx,0x20(%rbx)\n    612d:\t48 89 43 28          \tmov    %rax,0x28(%rbx)\n    6131:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 6138 <_ZL33construct_machine_config_boothillR14machine_configP8device_t+0xa5>\n    6138:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n    613c:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    6140:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    6146:\t48 89 d1             \tmov    %rdx,%rcx\n    6149:\tba 00 00 00 00       \tmov    $0x0,%edx\n    614e:\t48 89 c7             \tmov    %rax,%rdi\n    6151:\te8 00 00 00 00       \tcallq  6156 <_ZL33construct_machine_config_boothillR14machine_configP8device_t+0xc3>\n    6156:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    615a:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n    615e:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    6162:\t48 89 d6             \tmov    %rdx,%rsi\n    6165:\t48 89 c7             \tmov    %rax,%rdi\n    6168:\te8 00 00 00 00       \tcallq  616d <_ZL33construct_machine_config_boothillR14machine_configP8device_t+0xda>\n    616d:\t48 8b 5d 90          \tmov    -0x70(%rbp),%rbx\n    6171:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n    6175:\t48 89 c7             \tmov    %rax,%rdi\n    6178:\te8 00 00 00 00       \tcallq  617d <_ZL33construct_machine_config_boothillR14machine_configP8device_t+0xea>\n    617d:\t48 89 d8             \tmov    %rbx,%rax\n    6180:\teb 1a                \tjmp    619c <_ZL33construct_machine_config_boothillR14machine_configP8device_t+0x109>\n    6182:\t48 89 c3             \tmov    %rax,%rbx\n    6185:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n    6189:\t48 89 c7             \tmov    %rax,%rdi\n    618c:\te8 00 00 00 00       \tcallq  6191 <_ZL33construct_machine_config_boothillR14machine_configP8device_t+0xfe>\n    6191:\t48 89 d8             \tmov    %rbx,%rax\n    6194:\t48 89 c7             \tmov    %rax,%rdi\n    6197:\te8 00 00 00 00       \tcallq  619c <_ZL33construct_machine_config_boothillR14machine_configP8device_t+0x109>\n    619c:\t48 83 c4 68          \tadd    $0x68,%rsp\n    61a0:\t5b                   \tpop    %rbx\n    61a1:\t5d                   \tpop    %rbp\n    61a2:\tc3                   \tretq   ", "code_s": "device_t *__fastcall construct_machine_config_boothill(machine_config *a1,\n                                                       device_t *a2) {\n  __int64 v2;\n  device_t *v4;\n  char <span class=\"supfact\">v5</span>[Number];\n  __int64 v6;\n  v6 = Number L;\n  astring astring((astring *)<span class=\"supfact\">v5</span>);\n  v4 = construct_machine_config_mw8080bw_root(a1, a2);\n  v6 = machine_config device_find(a1, v4, String);\n  device_memory_interface static_set_addrmap(\n      v6, Number L, construct_address_map_boothill_io_map);\n  driver_device static_set_callback(v4, Number L, machine_start_boothill);\n  *((_DWORD *)a1 + Number) = attotime from_nsec((attotime *)Number, Number L);\n  *((_QWORD *)a1 + Number) = v2;\n  v6 = machine_config device_add(a1, v4, String, MB14241, Number);\n  construct_machine_config_boothill_audio(a1, v4);\n  astring ~astring((astring *)<span class=\"supfact\">v5</span>);\n  return v4;\n}", "code_t": "device_t *__cdecl construct_machine_config_boothill(machine_config *config,\n                                                    device_t *owner) {\n  void(__fastcall * v2)(address_map *, const device_t *);\n  void(__fastcall * v3)(running_machine *);\n  attotime v4;\n  device_t *ownera;\n  astring <span class=\"supfact\">tempstring</span>;\n  device_t *device;\n  device = Number L;\n  astring astring(&<span class=\"supfact\">tempstring</span>);\n  ownera = construct_machine_config_mw8080bw_root(config, owner);\n  device = (device_t *)machine_config device_find(config, ownera, String);\n  device_memory_interface static_set_addrmap(\n      device, (device_t *)((char *)&loc_1 + Number),\n      (address_spacenum)construct_address_map_boothill_io_map, v2);\n  driver_device static_set_callback(\n      ownera, Number L, (driver_device callback_type)machine_start_boothill,\n      v3);\n  v4 = attotime from_nsec(Number L);\n  config->m_watchdog_time.seconds = v4.seconds;\n  config->m_watchdog_time.attoseconds = v4.attoseconds;\n  device = (device_t *)machine_config device_add(config, ownera, String,\n                                                 MB14241, Number);\n  construct_machine_config_boothill_audio(config, ownera);\n  astring ~astring(&<span class=\"supfact\">tempstring</span>);\n  return ownera;\n}", "var": [{"name": "v5", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "tempstring", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "CPFL", "repo_name": "xen", "path": "CPFL/xen/b2249775998a10176c2bce29b26882d15c14acec92becc85f149a9d5ab555802", "path_in_repo": "CPFL/xen/xen/arch/x86/mm/shadow/guest_4.o", "objdump": "0000000000005f8c <shadow_get_and_create_l2e>:\n    5f8c:\t55                   \tpush   %rbp\n    5f8d:\t48 89 e5             \tmov    %rsp,%rbp\n    5f90:\t48 83 ec 60          \tsub    $0x60,%rsp\n    5f94:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    5f98:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n    5f9c:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n    5fa0:\t89 4d b4             \tmov    %ecx,-0x4c(%rbp)\n    5fa3:\t4c 89 45 a8          \tmov    %r8,-0x58(%rbp)\n    5fa7:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    5fab:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    5faf:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    5fb3:\t48 c7 c7 ff ff ff ff \tmov    $0xffffffffffffffff,%rdi\n    5fba:\te8 d5 a1 ff ff       \tcallq  194 <_mfn>\n    5fbf:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    5fc3:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    5fc7:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n    5fcb:\t48 89 c7             \tmov    %rax,%rdi\n    5fce:\te8 d3 a1 ff ff       \tcallq  1a6 <mfn_x>\n    5fd3:\t48 89 c7             \tmov    %rax,%rdi\n    5fd6:\te8 00 00 00 00       \tcallq  5fdb <shadow_get_and_create_l2e+0x4f>\n    5fdb:\t85 c0                \ttest   %eax,%eax\n    5fdd:\t75 0a                \tjne    5fe9 <shadow_get_and_create_l2e+0x5d>\n    5fdf:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5fe4:\te9 07 02 00 00       \tjmpq   61f0 <shadow_get_and_create_l2e+0x264>\n    5fe9:\t48 8b 7d a8          \tmov    -0x58(%rbp),%rdi\n    5fed:\t8b 4d b4             \tmov    -0x4c(%rbp),%ecx\n    5ff0:\t48 8d 55 d8          \tlea    -0x28(%rbp),%rdx\n    5ff4:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n    5ff8:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    5ffc:\t49 89 f8             \tmov    %rdi,%r8\n    5fff:\t48 89 c7             \tmov    %rax,%rdi\n    6002:\te8 7d fd ff ff       \tcallq  5d84 <shadow_get_and_create_l3e>\n    6007:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    600b:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    6010:\t75 0a                \tjne    601c <shadow_get_and_create_l2e+0x90>\n    6012:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6017:\te9 d4 01 00 00       \tjmpq   61f0 <shadow_get_and_create_l2e+0x264>\n    601c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    6020:\t48 8b 38             \tmov    (%rax),%rdi\n    6023:\te8 d7 b9 ff ff       \tcallq  19ff <shadow_l3e_get_flags>\n    6028:\t83 e0 01             \tand    $0x1,%eax\n    602b:\t85 c0                \ttest   %eax,%eax\n    602d:\t74 3d                \tje     606c <shadow_get_and_create_l2e+0xe0>\n    602f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    6033:\t48 8b 38             \tmov    (%rax),%rdi\n    6036:\te8 18 b9 ff ff       \tcallq  1953 <shadow_l3e_get_mfn>\n    603b:\t48 89 c2             \tmov    %rax,%rdx\n    603e:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    6042:\t48 89 10             \tmov    %rdx,(%rax)\n    6045:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    6049:\t48 8b 38             \tmov    (%rax),%rdi\n    604c:\te8 55 a1 ff ff       \tcallq  1a6 <mfn_x>\n    6051:\t48 89 c7             \tmov    %rax,%rdi\n    6054:\te8 00 00 00 00       \tcallq  6059 <shadow_get_and_create_l2e+0xcd>\n    6059:\t85 c0                \ttest   %eax,%eax\n    605b:\t0f 94 c0             \tsete   %al\n    605e:\t0f b6 c0             \tmovzbl %al,%eax\n    6061:\t48 85 c0             \ttest   %rax,%rax\n    6064:\t0f 84 28 01 00 00    \tje     6192 <shadow_get_and_create_l2e+0x206>\n    606a:\t0f 0b                \tud2    \n    606c:\tc7 45 fc 0a 00 00 00 \tmovl   $0xa,-0x4(%rbp)\n    6073:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    6077:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    607b:\t0f b6 80 a0 0b 00 00 \tmovzbl 0xba0(%rax),%eax\n    6082:\t84 c0                \ttest   %al,%al\n    6084:\t74 32                \tje     60b8 <shadow_get_and_create_l2e+0x12c>\n    6086:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    608a:\t48 8b 00             \tmov    (%rax),%rax\n    608d:\t48 c1 e8 27          \tshr    $0x27,%rax\n    6091:\t25 ff 01 00 00       \tand    $0x1ff,%eax\n    6096:\t48 85 c0             \ttest   %rax,%rax\n    6099:\t75 1d                \tjne    60b8 <shadow_get_and_create_l2e+0x12c>\n    609b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    609f:\t48 8b 00             \tmov    (%rax),%rax\n    60a2:\t48 c1 e8 1e          \tshr    $0x1e,%rax\n    60a6:\t25 ff 01 00 00       \tand    $0x1ff,%eax\n    60ab:\t48 83 f8 03          \tcmp    $0x3,%rax\n    60af:\t75 07                \tjne    60b8 <shadow_get_and_create_l2e+0x12c>\n    60b1:\tc7 45 fc 0b 00 00 00 \tmovl   $0xb,-0x4(%rbp)\n    60b8:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    60bb:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    60bf:\t48 8b 48 38          \tmov    0x38(%rax),%rcx\n    60c3:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    60c7:\t48 89 ce             \tmov    %rcx,%rsi\n    60ca:\t48 89 c7             \tmov    %rax,%rdi\n    60cd:\te8 11 bc ff ff       \tcallq  1ce3 <get_shadow_status>\n    60d2:\t48 89 c2             \tmov    %rax,%rdx\n    60d5:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    60d9:\t48 89 10             \tmov    %rdx,(%rax)\n    60dc:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    60e0:\t48 8b 38             \tmov    (%rax),%rdi\n    60e3:\te8 be a0 ff ff       \tcallq  1a6 <mfn_x>\n    60e8:\t48 89 c7             \tmov    %rax,%rdi\n    60eb:\te8 00 00 00 00       \tcallq  60f0 <shadow_get_and_create_l2e+0x164>\n    60f0:\t85 c0                \ttest   %eax,%eax\n    60f2:\t75 24                \tjne    6118 <shadow_get_and_create_l2e+0x18c>\n    60f4:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    60f7:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    60fb:\t48 8b 48 38          \tmov    0x38(%rax),%rcx\n    60ff:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    6103:\t48 89 ce             \tmov    %rcx,%rsi\n    6106:\t48 89 c7             \tmov    %rax,%rdi\n    6109:\te8 39 f8 ff ff       \tcallq  5947 <sh_make_shadow>\n    610e:\t48 89 c2             \tmov    %rax,%rdx\n    6111:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    6115:\t48 89 10             \tmov    %rdx,(%rax)\n    6118:\t8b 4d b4             \tmov    -0x4c(%rbp),%ecx\n    611b:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    611f:\t48 8b 7d b8          \tmov    -0x48(%rbp),%rdi\n    6123:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    6127:\t48 8b 70 10          \tmov    0x10(%rax),%rsi\n    612b:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    612f:\t41 89 c8             \tmov    %ecx,%r8d\n    6132:\t48 89 d1             \tmov    %rdx,%rcx\n    6135:\t48 8b 17             \tmov    (%rdi),%rdx\n    6138:\t48 89 c7             \tmov    %rax,%rdi\n    613b:\te8 c6 ce ff ff       \tcallq  3006 <l3e_propagate_from_guest>\n    6140:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n    6144:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    6148:\t48 8b 75 e8          \tmov    -0x18(%rbp),%rsi\n    614c:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    6150:\t48 89 c7             \tmov    %rax,%rdi\n    6153:\te8 5f eb ff ff       \tcallq  4cb7 <shadow_set_l3e>\n    6158:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n    615b:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n    615e:\t83 e0 02             \tand    $0x2,%eax\n    6161:\t85 c0                \ttest   %eax,%eax\n    6163:\t0f 95 c0             \tsetne  %al\n    6166:\t0f b6 c0             \tmovzbl %al,%eax\n    6169:\t48 85 c0             \ttest   %rax,%rax\n    616c:\t74 02                \tje     6170 <shadow_get_and_create_l2e+0x1e4>\n    616e:\t0f 0b                \tud2    \n    6170:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n    6173:\t83 e0 04             \tand    $0x4,%eax\n    6176:\t85 c0                \ttest   %eax,%eax\n    6178:\t74 07                \tje     6181 <shadow_get_and_create_l2e+0x1f5>\n    617a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    617f:\teb 6f                \tjmp    61f0 <shadow_get_and_create_l2e+0x264>\n    6181:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    6185:\t8b 00                \tmov    (%rax),%eax\n    6187:\t83 c8 01             \tor     $0x1,%eax\n    618a:\t89 c2                \tmov    %eax,%edx\n    618c:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    6190:\t89 10                \tmov    %edx,(%rax)\n    6192:\te8 72 9f ff ff       \tcallq  109 <get_cpu_info>\n    6197:\t48 8b 80 d0 00 00 00 \tmov    0xd0(%rax),%rax\n    619e:\t48 39 45 c8          \tcmp    %rax,-0x38(%rbp)\n    61a2:\t0f 95 c0             \tsetne  %al\n    61a5:\t0f b6 c0             \tmovzbl %al,%eax\n    61a8:\t48 85 c0             \ttest   %rax,%rax\n    61ab:\t74 02                \tje     61af <shadow_get_and_create_l2e+0x223>\n    61ad:\t0f 0b                \tud2    \n    61af:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    61b3:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    61b7:\t8b 80 04 01 00 00    \tmov    0x104(%rax),%eax\n    61bd:\t83 f8 02             \tcmp    $0x2,%eax\n    61c0:\t75 0c                \tjne    61ce <shadow_get_and_create_l2e+0x242>\n    61c2:\t48 b8 00 00 00 c0 40 \tmovabs $0xffff8140c0000000,%rax\n    61c9:\t81 ff ff \n    61cc:\teb 0a                \tjmp    61d8 <shadow_get_and_create_l2e+0x24c>\n    61ce:\t48 b8 00 00 00 c0 c0 \tmovabs $0xffff81c0c0000000,%rax\n    61d5:\t81 ff ff \n    61d8:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    61dc:\t48 8b 12             \tmov    (%rdx),%rdx\n    61df:\t48 c1 ea 15          \tshr    $0x15,%rdx\n    61e3:\t81 e2 ff ff ff 07    \tand    $0x7ffffff,%edx\n    61e9:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    61ed:\t48 01 d0             \tadd    %rdx,%rax\n    61f0:\tc9                   \tleaveq \n    61f1:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall shadow_get_and_create_l2e(__int64 a1, _QWORD *a2,\n                                                      __int64 *a3, int a4,\n                                                      _DWORD *a5) {\n  __int64 v5;\n  __int64 v7;\n  __int64 v8;\n  unsigned __int64 v9;\n  unsigned __int64 v13;\n  __int64 <span class=\"supfact\">v14</span>;\n  int v15;\n  unsigned __int64 *v16;\n  __int64 v17;\n  unsigned int v18;\n  v17 = *(_QWORD *)(a1 + Number);\n  <span class=\"supfact\">v14</span> = mfn(Number);\n  v5 = mfn_x(a2[Number]);\n  if (!(unsigned int)_mfn_valid(v5))\n    return Number L;\n  v16 = (unsigned __int64 *)shadow_get_and_create_l3e(\n      a1, a2, &<span class=\"supfact\">v14</span>, a4, a5);\n  if (!v16)\n    return Number L;\n  if ((shadow_l3e_get_flags(*v16) & Number) != Number) {\n    *a3 = shadow_l3e_get_mfn(*v16);\n    v7 = mfn_x(*a3);\n    if (!(unsigned int)_mfn_valid(v7))\n      BUG();\n  } else {\n    v18 = Number;\n    if (*(_BYTE *)(*(_QWORD *)(a1 + Number) + Number L) &&\n        ((*a2 >> Number) & Number) == Number &&\n        ((*a2 >> Number) & Number) == Number)\n      v18 = Number;\n    *a3 = get_shadow_status(v17, a2[Number], v18);\n    v8 = mfn_x(*a3);\n    if (!(unsigned int)_mfn_valid(v8))\n      *a3 = sh_make_shadow(a1, a2[Number], v18);\n    l3e_propagate_from_guest(a1, a2[Number], *a3, &v13, a4);\n    v15 = shadow_set_l3e(v17, v16, v13, <span class=\"supfact\">v14</span>);\n    if ((v15 & Number) != Number)\n      BUG();\n    if ((v15 & Number) != Number)\n      return Number L;\n    *a5 |= Number;\n  }\n  if (a1 != *(_QWORD *)(get_cpu_info() + Number))\n    BUG();\n  if (*(_DWORD *)(*(_QWORD *)(a1 + Number) + Number L) == Number)\n    v9 = Number;\n  else\n    v9 = Number;\n  return Number * ((*a2 >> Number) & Number) + v9;\n}", "code_t": "shadow_l2e_t *__cdecl shadow_get_and_create_l2e(vcpu *v, walk_t *gw,\n                                                mfn_t *sl2mfn, fetch_type_t ft,\n                                                int *resync) {\n  unsigned __int64 v5;\n  unsigned __int64 v7;\n  unsigned __int64 v8;\n  unsigned __int64 v9;\n  shadow_l3e_t new_sl3e;\n  mfn_t <span class=\"supfact\">sl3mfn</span>;\n  int r;\n  shadow_l3e_t *sl3e;\n  domain *d;\n  unsigned int t;\n  d = v->domain;\n  <span class=\"supfact\">sl3mfn</span>.mfn = mfn(Number).mfn;\n  v5 = mfn_x(gw->l2mfn);\n  if (!(unsigned int)_mfn_valid(v5))\n    return Number L;\n  sl3e = shadow_get_and_create_l3e(v, gw, &<span class=\"supfact\">sl3mfn</span>, ft, resync);\n  if (!sl3e)\n    return Number L;\n  if ((shadow_l3e_get_flags((shadow_l3e_t)sl3e->l3) & Number) != Number) {\n    sl2mfn->mfn = shadow_l3e_get_mfn((shadow_l3e_t)sl3e->l3).mfn;\n    v7 = mfn_x((mfn_t)sl2mfn->mfn);\n    if (!(unsigned int)_mfn_valid(v7))\n      BUG();\n  } else {\n    t = Number;\n    if (v->domain->arch.is_32bit_pv &&\n        ((gw->va >> Number) & Number) == Number &&\n        ((gw->va >> Number) & Number) == Number)\n      t = Number;\n    sl2mfn->mfn = get_shadow_status(d, gw->l2mfn, t).mfn;\n    v8 = mfn_x((mfn_t)sl2mfn->mfn);\n    if (!(unsigned int)_mfn_valid(v8))\n      sl2mfn->mfn = sh_make_shadow(v, gw->l2mfn, t).mfn;\n    l3e_propagate_from_guest(v, gw->l3e, (mfn_t)sl2mfn->mfn, &new_sl3e, ft);\n    r = shadow_set_l3e(d, sl3e, new_sl3e, <span class=\"supfact\">sl3mfn</span>);\n    if ((r & Number) != Number)\n      BUG();\n    if ((r & Number) != Number)\n      return Number L;\n    *resync |= Number;\n  }\n  if (v != get_cpu_info()->current_vcpu)\n    BUG();\n  if (v->domain->guest_type == guest_type_hvm)\n    v9 = Number;\n  else\n    v9 = Number;\n  return (shadow_l2e_t *)(Number * ((gw->va >> Number) & Number) + v9);\n}", "var": [{"name": "v14", "type": "unsigned __int64", "ref_name": "sl3mfn", "ref_type": "struct mfn_t { unsigned __int64 mfn; }"}], "body_in_train": false}, {"repo_owner": "Chadster766", "repo_name": "McWRT", "path": "Chadster766/McWRT/4ec821662482b6a73a421e9e80720675433c8ca70cfb78efc11681756e069a60", "path_in_repo": "Chadster766/McWRT/attitude_adjustment/build_dir/host/pkg-config-0.28/glib/glib/gbookmarkfile.o", "objdump": "00000000000028ca <timestamp_to_iso8601>:\n    28ca:\t55                   \tpush   %rbp\n    28cb:\t48 89 e5             \tmov    %rsp,%rbp\n    28ce:\t48 83 ec 20          \tsub    $0x20,%rsp\n    28d2:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    28d6:\t48 83 7d e8 ff       \tcmpq   $0xffffffffffffffff,-0x18(%rbp)\n    28db:\t75 0e                \tjne    28eb <timestamp_to_iso8601+0x21>\n    28dd:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n    28e1:\t48 89 c7             \tmov    %rax,%rdi\n    28e4:\te8 00 00 00 00       \tcallq  28e9 <timestamp_to_iso8601+0x1f>\n    28e9:\teb 10                \tjmp    28fb <timestamp_to_iso8601+0x31>\n    28eb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    28ef:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    28f3:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n    28fa:\t00 \n    28fb:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n    28ff:\t48 89 c7             \tmov    %rax,%rdi\n    2902:\te8 00 00 00 00       \tcallq  2907 <timestamp_to_iso8601+0x3d>\n    2907:\tc9                   \tleaveq \n    2908:\tc3                   \tretq   ", "code_s": "__int64 __fastcall timestamp_to_iso8601(__int64 a1) {\n  __int64 <span class=\"supfact\">v2</span>[Number];\n  if (a1 == Number) {\n    g_get_current_time(<span class=\"supfact\">v2</span>);\n  } else {\n    <span class=\"supfact\">v2</span>[Number] = a1;\n    <span class=\"supfact\">v2</span>[Number] = Number L;\n  }\n  return g_time_val_to_iso8601(<span class=\"supfact\">v2</span>);\n}", "code_t": "gchar *__cdecl timestamp_to_iso8601(time_t timestamp) {\n  GTimeVal <span class=\"supfact\">stamp</span>;\n  if (timestamp == Number) {\n    g_get_current_time(&<span class=\"supfact\">stamp</span>);\n  } else {\n    <span class=\"supfact\">stamp</span>.tv_sec = timestamp;\n    <span class=\"supfact\">stamp</span>.tv_usec = Number L;\n  }\n  return (gchar *)g_time_val_to_iso8601(&<span class=\"supfact\">stamp</span>);\n}", "var": [{"name": "v2", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "stamp", "ref_type": "struct GTimeVal { glong tv_sec; glong tv_usec; }"}], "body_in_train": false}, {"repo_owner": "on4today", "repo_name": "pdfViewer", "path": "on4today/pdfViewer/3efc1e774b62ba3c33cbca461bb79bcad9b25f6276f2938a4010eca9450a2a55", "path_in_repo": "on4today/pdfViewer//build/debug/fitz/bbox-device.o", "objdump": "00000000000003f1 <fz_bbox_clip_stroke_path>:\n 3f1:\t55                   \tpush   %rbp\n 3f2:\t48 89 e5             \tmov    %rsp,%rbp\n 3f5:\t48 83 ec 40          \tsub    $0x40,%rsp\n 3f9:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n 3fd:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n 401:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n 405:\t48 89 4d d0          \tmov    %rcx,-0x30(%rbp)\n 409:\t4c 89 45 c8          \tmov    %r8,-0x38(%rbp)\n 40d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 411:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n 415:\t48 8d 7d f0          \tlea    -0x10(%rbp),%rdi\n 419:\t48 8b 4d c8          \tmov    -0x38(%rbp),%rcx\n 41d:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n 421:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n 425:\t49 89 f8             \tmov    %rdi,%r8\n 428:\t48 89 c7             \tmov    %rax,%rdi\n 42b:\te8 00 00 00 00       \tcallq  430 <fz_bbox_clip_stroke_path+0x3f>\n 430:\t48 89 c1             \tmov    %rax,%rcx\n 433:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 437:\tba 01 00 00 00       \tmov    $0x1,%edx\n 43c:\t48 89 ce             \tmov    %rcx,%rsi\n 43f:\t48 89 c7             \tmov    %rax,%rdi\n 442:\te8 b9 fb ff ff       \tcallq  0 <fz_bbox_add_rect>\n 447:\t90                   \tnop\n 448:\tc9                   \tleaveq \n 449:\tc3                   \tretq   ", "code_s": "__int64 __fastcall fz_bbox_clip_stroke_path(__int64 a1, __int64 a2, __int64 a3,\n                                            __int64 a4, __int64 a5) {\n  __int64 *v5;\n  char <span class=\"supfact\">v7</span>[Number];\n  v5 = (__int64 *)fz_bound_path(*(_QWORD *)(a1 + Number), a2, a4, a5,\n                                <span class=\"supfact\">v7</span>);\n  return fz_bbox_add_rect(a1, v5, Number);\n}", "code_t": "void __cdecl fz_bbox_clip_stroke_path(fz_device *dev, fz_path *path,\n                                      const fz_rect *rect,\n                                      fz_stroke_state *stroke,\n                                      const fz_matrix *ctm) {\n  const fz_rect *v5;\n  fz_rect <span class=\"supfact\">r</span>;\n  v5 = (const fz_rect *)fz_bound_path(dev->ctx, path, stroke, ctm,\n                                      &<span class=\"supfact\">r</span>);\n  fz_bbox_add_rect(dev, v5, Number);\n}", "var": [{"name": "v7", "type": "char[16]", "ref_name": "r", "ref_type": "struct fz_rect { float x0; float y0; float x1; float y1; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/c8943ed7431093b8fc94d4fdedb6462ac0e9b93a37c38637aed39ec6eb36e455", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/audio/taito_zm.o", "objdump": "000000000000023a <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t>:\n 23a:\t55                   \tpush   %rbp\n 23b:\t48 89 e5             \tmov    %rsp,%rbp\n 23e:\t53                   \tpush   %rbx\n 23f:\t48 83 ec 68          \tsub    $0x68,%rsp\n 243:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n 247:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n 24b:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n 252:\t00 \n 253:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n 257:\t48 89 c7             \tmov    %rax,%rdi\n 25a:\te8 00 00 00 00       \tcallq  25f <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0x25>\n 25f:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 266 <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0x2c>\n 266:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n 26a:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n 26e:\t41 b8 20 bc be 00    \tmov    $0xbebc20,%r8d\n 274:\t48 89 d1             \tmov    %rdx,%rcx\n 277:\tba 00 00 00 00       \tmov    $0x0,%edx\n 27c:\t48 89 c7             \tmov    %rax,%rdi\n 27f:\te8 00 00 00 00       \tcallq  284 <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0x4a>\n 284:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 288:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 28c:\tba 00 00 00 00       \tmov    $0x0,%edx\n 291:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 296:\t48 89 c7             \tmov    %rax,%rdi\n 299:\te8 00 00 00 00       \tcallq  29e <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0x64>\n 29e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 2a2:\tba 00 00 00 00       \tmov    $0x0,%edx\n 2a7:\tbe 02 00 00 00       \tmov    $0x2,%esi\n 2ac:\t48 89 c7             \tmov    %rax,%rdi\n 2af:\te8 00 00 00 00       \tcallq  2b4 <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0x7a>\n 2b4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 2b8:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 2bd:\tba 00 00 00 00       \tmov    $0x0,%edx\n 2c2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 2c7:\t48 89 c7             \tmov    %rax,%rdi\n 2ca:\te8 00 00 00 00       \tcallq  2cf <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0x95>\n 2cf:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 2d6 <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0x9c>\n 2d6:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n 2da:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n 2de:\t41 b8 20 bc be 00    \tmov    $0xbebc20,%r8d\n 2e4:\t48 89 d1             \tmov    %rdx,%rcx\n 2e7:\tba 00 00 00 00       \tmov    $0x0,%edx\n 2ec:\t48 89 c7             \tmov    %rax,%rdi\n 2ef:\te8 00 00 00 00       \tcallq  2f4 <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0xba>\n 2f4:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 2f8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 2fc:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 301:\t48 89 c7             \tmov    %rax,%rdi\n 304:\te8 00 00 00 00       \tcallq  309 <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0xcf>\n 309:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 310 <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0xd6>\n 310:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 314:\tb9 ff ff 00 00       \tmov    $0xffff,%ecx\n 319:\t66 48 0f 6e c2       \tmovq   %rdx,%xmm0\n 31e:\tba 00 00 00 00       \tmov    $0x0,%edx\n 323:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 328:\t48 89 c7             \tmov    %rax,%rdi\n 32b:\te8 00 00 00 00       \tcallq  330 <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0xf6>\n 330:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 337 <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0xfd>\n 337:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 33b:\tb9 ff ff 00 00       \tmov    $0xffff,%ecx\n 340:\t66 48 0f 6e c2       \tmovq   %rdx,%xmm0\n 345:\tba 00 00 00 00       \tmov    $0x0,%edx\n 34a:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 34f:\t48 89 c7             \tmov    %rax,%rdi\n 352:\te8 00 00 00 00       \tcallq  357 <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0x11d>\n 357:\t48 8b 5d 90          \tmov    -0x70(%rbp),%rbx\n 35b:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n 35f:\t48 89 c7             \tmov    %rax,%rdi\n 362:\te8 00 00 00 00       \tcallq  367 <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0x12d>\n 367:\t48 89 d8             \tmov    %rbx,%rax\n 36a:\teb 1a                \tjmp    386 <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0x14c>\n 36c:\t48 89 c3             \tmov    %rax,%rbx\n 36f:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n 373:\t48 89 c7             \tmov    %rax,%rdi\n 376:\te8 00 00 00 00       \tcallq  37b <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0x141>\n 37b:\t48 89 d8             \tmov    %rbx,%rax\n 37e:\t48 89 c7             \tmov    %rax,%rdi\n 381:\te8 00 00 00 00       \tcallq  386 <_Z41construct_machine_config_taito_zoom_soundR14machine_configP8device_t+0x14c>\n 386:\t48 83 c4 68          \tadd    $0x68,%rsp\n 38a:\t5b                   \tpop    %rbx\n 38b:\t5d                   \tpop    %rbp\n 38c:\tc3                   \tretq   ", "code_s": "__int64 __fastcall construct_machine_config_taito_zoom_sound(__int64 a1,\n                                                             __int64 a2) {\n  char <span class=\"supfact\">v3</span>[Number];\n  __int64 v4;\n  v4 = Number L;\n  astring astring((astring *)<span class=\"supfact\">v3</span>);\n  v4 = machine_config device_add(a1, a2, String, MN10200, Number L);\n  device_memory_interface static_set_addrmap(\n      v4, Number L, construct_address_map_taitozoom_map);\n  device_memory_interface static_set_addrmap(\n      v4, Number L, construct_address_map_taitozoom_io_map);\n  device_execute_interface static_set_vblank_int(v4, &irq0_line_pulse, String,\n                                                 Number L);\n  v4 = machine_config device_add(a1, a2, String, ZSG2, Number L);\n  device_t static_set_static_config(v4, &zsg2_taito_config);\n  device_sound_interface static_add_route(v4, Number L, String, Number, Number);\n  device_sound_interface static_add_route(v4, Number L, String, Number, Number);\n  astring ~astring((astring *)<span class=\"supfact\">v3</span>);\n  return a2;\n}", "code_t": "device_t *__cdecl construct_machine_config_taito_zoom_sound(\n    machine_config *config, device_t *owner) {\n  void(__fastcall * v2)(address_map *, const device_t *);\n  void(__fastcall * v3)(address_map *, const device_t *);\n  int v4;\n  unsigned int v5;\n  unsigned int v6;\n  astring <span class=\"supfact\">tempstring</span>;\n  device_t *device;\n  device = Number L;\n  astring astring(&<span class=\"supfact\">tempstring</span>);\n  device = (device_t *)machine_config device_add(config, owner, String, MN10200,\n                                                 Number);\n  device_memory_interface static_set_addrmap(\n      device, Number L, (address_spacenum)construct_address_map_taitozoom_map,\n      v2);\n  device_memory_interface static_set_addrmap(\n      device, (device_t *)((char *)&loc_1 + Number),\n      (address_spacenum)construct_address_map_taitozoom_io_map, v3);\n  device_execute_interface static_set_vblank_int(\n      device, (device_t *)&irq0_line_pulse,\n      (void(__fastcall *)(device_t *))String, Number L, v4);\n  device = (device_t *)machine_config device_add(config, owner, String, ZSG2,\n                                                 Number);\n  device_t static_set_static_config(device, &zsg2_taito_config);\n  device_sound_interface static_add_route(\n      device, Number L, (unsigned int)String, (const char *)Number, Number, v5);\n  device_sound_interface static_add_route(device, (device_t *)&loc_1,\n                                          (unsigned int)String,\n                                          (const char *)Number, Number, v6);\n  astring ~astring(&<span class=\"supfact\">tempstring</span>);\n  return owner;\n}", "var": [{"name": "v3", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "tempstring", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "SystemGarden", "repo_name": "habitat", "path": "SystemGarden/habitat/d9b7e8705780e99802a5c485ae05678cbfc3a77cfdaf837d44e45e37dc3349ed", "path_in_repo": "SystemGarden/habitat/src/iiab/rs_gdbm.o", "objdump": "000000000000205f <rs_gdbm_footprint>:\n    205f:\t55                   \tpush   %rbp\n    2060:\t48 89 e5             \tmov    %rsp,%rbp\n    2063:\t48 81 ec b0 00 00 00 \tsub    $0xb0,%rsp\n    206a:\t48 89 bd 58 ff ff ff \tmov    %rdi,-0xa8(%rbp)\n    2071:\t48 83 bd 58 ff ff ff \tcmpq   $0x0,-0xa8(%rbp)\n    2078:\t00 \n    2079:\t75 33                \tjne    20ae <rs_gdbm_footprint+0x4f>\n    207b:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 2082 <rs_gdbm_footprint+0x23>\n    2082:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 2089 <rs_gdbm_footprint+0x2a>\n    2089:\tba 25 04 00 00       \tmov    $0x425,%edx\n    208e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 2095 <rs_gdbm_footprint+0x36>\n    2095:\tbf 05 00 00 00       \tmov    $0x5,%edi\n    209a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    209f:\te8 00 00 00 00       \tcallq  20a4 <rs_gdbm_footprint+0x45>\n    20a4:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    20a9:\te9 86 00 00 00       \tjmpq   2134 <rs_gdbm_footprint+0xd5>\n    20ae:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    20b5:\t48 89 c7             \tmov    %rax,%rdi\n    20b8:\te8 00 00 00 00       \tcallq  20bd <rs_gdbm_footprint+0x5e>\n    20bd:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    20c1:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    20c5:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    20c9:\t48 85 c0             \ttest   %rax,%rax\n    20cc:\t74 0c                \tje     20da <rs_gdbm_footprint+0x7b>\n    20ce:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    20d2:\t8b 40 28             \tmov    0x28(%rax),%eax\n    20d5:\t83 f8 05             \tcmp    $0x5,%eax\n    20d8:\t75 30                \tjne    210a <rs_gdbm_footprint+0xab>\n    20da:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 20e1 <rs_gdbm_footprint+0x82>\n    20e1:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 20e8 <rs_gdbm_footprint+0x89>\n    20e8:\tba 2a 04 00 00       \tmov    $0x42a,%edx\n    20ed:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 20f4 <rs_gdbm_footprint+0x95>\n    20f4:\tbf 06 00 00 00       \tmov    $0x6,%edi\n    20f9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    20fe:\te8 00 00 00 00       \tcallq  2103 <rs_gdbm_footprint+0xa4>\n    2103:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    2108:\teb 2a                \tjmp    2134 <rs_gdbm_footprint+0xd5>\n    210a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    210e:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2112:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n    2119:\t48 89 d6             \tmov    %rdx,%rsi\n    211c:\t48 89 c7             \tmov    %rax,%rdi\n    211f:\te8 00 00 00 00       \tcallq  2124 <rs_gdbm_footprint+0xc5>\n    2124:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    2127:\t75 07                \tjne    2130 <rs_gdbm_footprint+0xd1>\n    2129:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    212e:\teb 04                \tjmp    2134 <rs_gdbm_footprint+0xd5>\n    2130:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    2134:\tc9                   \tleaveq \n    2135:\tc3                   \tretq   ", "code_s": "__off_t __fastcall rs_gdbm_footprint(__int64 a1) {\n  __off_t result;\n  struct stat <span class=\"supfact\">v2</span>;\n  __int64 v3;\n  if (a1) {\n    v3 = rs_gdbmd_from_lld(a1);\n    if (*(_QWORD *)(v3 + Number) && *(_DWORD *)(v3 + Number) != Number) {\n      if (stat(*(const char **)(v3 + Number), &<span class=\"supfact\">v2</span>) == Number)\n        result = Number;\n      else\n        result = <span class=\"supfact\">v2</span>.st_size;\n    } else {\n      elog_fdie(Number L, String, Number L, String, String);\n      result = Number;\n    }\n  } else {\n    elog_fprintf(Number L, String, Number L, String, String);\n    result = Number;\n  }\n  return result;\n}", "code_t": "int __cdecl rs_gdbm_footprint(RS_LLD lld) {\n  int result;\n  stat <span class=\"supfact\">buf</span>;\n  RS_GDBMD rs;\n  if (lld) {\n    rs = rs_gdbmd_from_lld(lld);\n    if (rs->ref && rs->lock != Number) {\n      if (stat_0(rs->name, &<span class=\"supfact\">buf</span>) == Number)\n        result = Number;\n      else\n        result = <span class=\"supfact\">buf</span>.st_size;\n    } else {\n      elog_fdie(Number L, String, Number L, String, String);\n      result = Number;\n    }\n  } else {\n    elog_fprintf(Number L, String, Number L, String, String);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "v2", "type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }", "ref_name": "buf", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }"}], "body_in_train": false}, {"repo_owner": "apenwarr", "repo_name": "dropdyn", "path": "apenwarr/dropdyn/cad4d894d31910031eaf8740339a01da3fea7f56a6482f68040ba118749cdd2f", "path_in_repo": "apenwarr/dropdyn/djbdns/dnsqr", "objdump": "", "code_s": "__int64 __fastcall sub_403628(__int64 a1, __int64 a2) {\n  struct pollfd <span class=\"supfact\">v3</span>;\n  char v4[Number];\n  char v5[Number];\n  __int64 v6[Number];\n  int v7;\n  if ((unsigned int)sub_404B48(v4) == Number)\n    return Number;\n  if ((unsigned int)sub_403F94(&unk_40A380, v4, Number L, a1, a2,\n                               &unk_4071EA) == Number)\n    return Number;\n  do {\n    sub_404F1F(v6);\n    sub_405132(v5, Number L);\n    sub_404CEE(v5, v5, v6);\n    sub_40415D(&unk_40A380, &<span class=\"supfact\">v3</span>, v5);\n    sub_4014FB(&<span class=\"supfact\">v3</span>, Number, (__int64)v5, v6);\n    v7 = sub_4041F8(&unk_40A380, &<span class=\"supfact\">v3</span>, v6);\n    if (v7 == Number)\n      return Number;\n  } while (v7 != Number);\n  return Number L;\n}", "code_t": "__int64 __fastcall sub_403628(__int64 a1, __int64 a2) {\n  struct pollfd <span class=\"supfact\">v3</span>;\n  char v4[Number];\n  char v5[Number];\n  __int64 v6[Number];\n  int v7;\n  if ((unsigned int)sub_404B48(v4) == Number)\n    return Number;\n  if ((unsigned int)sub_403F94(&unk_40A380, v4, Number L, a1, a2,\n                               &unk_4071EA) == Number)\n    return Number;\n  do {\n    sub_404F1F(v6);\n    sub_405132(v5, Number L);\n    sub_404CEE(v5, v5, v6);\n    sub_40415D(&unk_40A380, &<span class=\"supfact\">v3</span>, v5);\n    sub_4014FB(&<span class=\"supfact\">v3</span>, Number, (__int64)v5, v6);\n    v7 = sub_4041F8(&unk_40A380, &<span class=\"supfact\">v3</span>, v6);\n    if (v7 == Number)\n      return Number;\n  } while (v7 != Number);\n  return Number L;\n}", "var": [{"name": "v3", "type": "struct struct pollfd { int fd; __int16 events; __int16 revents; }", "ref_name": "v3", "ref_type": "struct struct pollfd { int fd; __int16 events; __int16 revents; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/3da554e7be727d06ab7f4e2330fe40c06e49dc1c481fc3ec5a772104aacc182a", "path_in_repo": "XanClic/qemu//hw/scsi/megasas.o", "objdump": "0000000000004178 <_nocheck__trace_megasas_msi_raise>:\n    4178:\t55                   \tpush   %rbp\n    4179:\t48 89 e5             \tmov    %rsp,%rbp\n    417c:\t41 54                \tpush   %r12\n    417e:\t53                   \tpush   %rbx\n    417f:\t48 83 ec 30          \tsub    $0x30,%rsp\n    4183:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n    4186:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    418d:\t00 00 \n    418f:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    4193:\t31 c0                \txor    %eax,%eax\n    4195:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 419b <_nocheck__trace_megasas_msi_raise+0x23>\n    419b:\t85 c0                \ttest   %eax,%eax\n    419d:\t0f 95 c0             \tsetne  %al\n    41a0:\t0f b6 c0             \tmovzbl %al,%eax\n    41a3:\t48 85 c0             \ttest   %rax,%rax\n    41a6:\t74 5d                \tje     4205 <_nocheck__trace_megasas_msi_raise+0x8d>\n    41a8:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 41af <_nocheck__trace_megasas_msi_raise+0x37>\n    41af:\t66 85 c0             \ttest   %ax,%ax\n    41b2:\t74 51                \tje     4205 <_nocheck__trace_megasas_msi_raise+0x8d>\n    41b4:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n    41b9:\te8 6f c6 ff ff       \tcallq  82d <qemu_loglevel_mask>\n    41be:\t84 c0                \ttest   %al,%al\n    41c0:\t74 43                \tje     4205 <_nocheck__trace_megasas_msi_raise+0x8d>\n    41c2:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    41c6:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    41cb:\t48 89 c7             \tmov    %rax,%rdi\n    41ce:\te8 00 00 00 00       \tcallq  41d3 <_nocheck__trace_megasas_msi_raise+0x5b>\n    41d3:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    41d7:\t49 89 c4             \tmov    %rax,%r12\n    41da:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    41de:\t48 89 c3             \tmov    %rax,%rbx\n    41e1:\te8 00 00 00 00       \tcallq  41e6 <_nocheck__trace_megasas_msi_raise+0x6e>\n    41e6:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    41e9:\t41 89 d0             \tmov    %edx,%r8d\n    41ec:\t4c 89 e1             \tmov    %r12,%rcx\n    41ef:\t48 89 da             \tmov    %rbx,%rdx\n    41f2:\t89 c6                \tmov    %eax,%esi\n    41f4:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 41fb <_nocheck__trace_megasas_msi_raise+0x83>\n    41fb:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4200:\te8 00 00 00 00       \tcallq  4205 <_nocheck__trace_megasas_msi_raise+0x8d>\n    4205:\t90                   \tnop\n    4206:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    420a:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    4211:\t00 00 \n    4213:\t74 05                \tje     421a <_nocheck__trace_megasas_msi_raise+0xa2>\n    4215:\te8 00 00 00 00       \tcallq  421a <_nocheck__trace_megasas_msi_raise+0xa2>\n    421a:\t48 83 c4 30          \tadd    $0x30,%rsp\n    421e:\t5b                   \tpop    %rbx\n    421f:\t41 5c                \tpop    %r12\n    4221:\t5d                   \tpop    %rbp\n    4222:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_megasas_msi_raise(unsigned int a1) {\n  __suseconds_t v1;\n  __time_t v2;\n  unsigned int v3;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v6;\n  v6 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_MSI_RAISE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v1 = <span class=\"supfact\">tv</span>.tv_usec;\n    v2 = <span class=\"supfact\">tv</span>.tv_sec;\n    v3 = qemu_get_thread_id();\n    qemu_log(String, v3, v2, v1, a1);\n  }\n  return __readfsqword(Number) ^ v6;\n}", "code_t": "void __cdecl nocheck__trace_megasas_msi_raise(int vector) {\n  __suseconds_t v1;\n  __time_t v2;\n  unsigned int v3;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v5;\n  v5 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_MSI_RAISE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v1 = <span class=\"supfact\">_now</span>.tv_usec;\n    v2 = <span class=\"supfact\">_now</span>.tv_sec;\n    v3 = qemu_get_thread_id();\n    qemu_log(String, v3, v2, v1, (unsigned int)vector);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "robchett", "repo_name": "igc_parser", "path": "robchett/igc_parser/5a5e463d7f17808d31bafec9660ffb0815d8c4067734e6fe3eb9361769d337f0", "path_in_repo": "robchett/igc_parser//include/clearsilver/util/neo_hdf.o", "objdump": "0000000000004e65 <hdf_search_path>:\n    4e65:\t55                   \tpush   %rbp\n    4e66:\t48 89 e5             \tmov    %rsp,%rbp\n    4e69:\t48 81 ec c0 00 00 00 \tsub    $0xc0,%rsp\n    4e70:\t48 89 bd 58 ff ff ff \tmov    %rdi,-0xa8(%rbp)\n    4e77:\t48 89 b5 50 ff ff ff \tmov    %rsi,-0xb0(%rbp)\n    4e7e:\t48 89 95 48 ff ff ff \tmov    %rdx,-0xb8(%rbp)\n    4e85:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    4e8c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    4e91:\t48 89 c7             \tmov    %rax,%rdi\n    4e94:\te8 00 00 00 00       \tcallq  4e99 <hdf_search_path+0x34>\n    4e99:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    4e9d:\te9 bf 00 00 00       \tjmpq   4f61 <hdf_search_path+0xfc>\n    4ea2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    4ea6:\t48 89 c7             \tmov    %rax,%rdi\n    4ea9:\te8 00 00 00 00       \tcallq  4eae <hdf_search_path+0x49>\n    4eae:\t48 89 c2             \tmov    %rax,%rdx\n    4eb1:\t48 8b 8d 50 ff ff ff \tmov    -0xb0(%rbp),%rcx\n    4eb8:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    4ebf:\t49 89 c8             \tmov    %rcx,%r8\n    4ec2:\t48 89 d1             \tmov    %rdx,%rcx\n    4ec5:\tba 00 00 00 00       \tmov    $0x0,%edx\n    4eca:\tbe 00 01 00 00       \tmov    $0x100,%esi\n    4ecf:\t48 89 c7             \tmov    %rax,%rdi\n    4ed2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4ed7:\te8 00 00 00 00       \tcallq  4edc <hdf_search_path+0x77>\n    4edc:\te8 00 00 00 00       \tcallq  4ee1 <hdf_search_path+0x7c>\n    4ee1:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n    4ee7:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n    4eee:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    4ef5:\t48 89 d6             \tmov    %rdx,%rsi\n    4ef8:\t48 89 c7             \tmov    %rax,%rdi\n    4efb:\te8 00 00 00 00       \tcallq  4f00 <hdf_search_path+0x9b>\n    4f00:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    4f03:\t75 42                \tjne    4f47 <hdf_search_path+0xe2>\n    4f05:\te8 00 00 00 00       \tcallq  4f0a <hdf_search_path+0xa5>\n    4f0a:\t8b 00                \tmov    (%rax),%eax\n    4f0c:\t83 f8 02             \tcmp    $0x2,%eax\n    4f0f:\t74 40                \tje     4f51 <hdf_search_path+0xec>\n    4f11:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 4f17 <hdf_search_path+0xb2>\n    4f17:\t48 8b 95 48 ff ff ff \tmov    -0xb8(%rbp),%rdx\n    4f1e:\t49 89 d1             \tmov    %rdx,%r9\n    4f21:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    4f27:\t89 c1                \tmov    %eax,%ecx\n    4f29:\tba 0a 07 00 00       \tmov    $0x70a,%edx\n    4f2e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    4f33:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    4f38:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4f3d:\te8 00 00 00 00       \tcallq  4f42 <hdf_search_path+0xdd>\n    4f42:\te9 d8 00 00 00       \tjmpq   501f <hdf_search_path+0x1ba>\n    4f47:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4f4c:\te9 ce 00 00 00       \tjmpq   501f <hdf_search_path+0x1ba>\n    4f51:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    4f55:\t48 89 c7             \tmov    %rax,%rdi\n    4f58:\te8 00 00 00 00       \tcallq  4f5d <hdf_search_path+0xf8>\n    4f5d:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    4f61:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    4f66:\t0f 85 36 ff ff ff    \tjne    4ea2 <hdf_search_path+0x3d>\n    4f6c:\t48 8b 8d 50 ff ff ff \tmov    -0xb0(%rbp),%rcx\n    4f73:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    4f7a:\tba 00 01 00 00       \tmov    $0x100,%edx\n    4f7f:\t48 89 ce             \tmov    %rcx,%rsi\n    4f82:\t48 89 c7             \tmov    %rax,%rdi\n    4f85:\te8 00 00 00 00       \tcallq  4f8a <hdf_search_path+0x125>\n    4f8a:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n    4f91:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    4f98:\t48 89 d6             \tmov    %rdx,%rsi\n    4f9b:\t48 89 c7             \tmov    %rax,%rdi\n    4f9e:\te8 00 00 00 00       \tcallq  4fa3 <hdf_search_path+0x13e>\n    4fa3:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    4fa6:\t75 3f                \tjne    4fe7 <hdf_search_path+0x182>\n    4fa8:\te8 00 00 00 00       \tcallq  4fad <hdf_search_path+0x148>\n    4fad:\t8b 00                \tmov    (%rax),%eax\n    4faf:\t83 f8 02             \tcmp    $0x2,%eax\n    4fb2:\t74 3a                \tje     4fee <hdf_search_path+0x189>\n    4fb4:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 4fba <hdf_search_path+0x155>\n    4fba:\t48 8b 95 48 ff ff ff \tmov    -0xb8(%rbp),%rdx\n    4fc1:\t49 89 d1             \tmov    %rdx,%r9\n    4fc4:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    4fca:\t89 c1                \tmov    %eax,%ecx\n    4fcc:\tba 16 07 00 00       \tmov    $0x716,%edx\n    4fd1:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    4fd6:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    4fdb:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4fe0:\te8 00 00 00 00       \tcallq  4fe5 <hdf_search_path+0x180>\n    4fe5:\teb 38                \tjmp    501f <hdf_search_path+0x1ba>\n    4fe7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4fec:\teb 31                \tjmp    501f <hdf_search_path+0x1ba>\n    4fee:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 4ff4 <hdf_search_path+0x18f>\n    4ff4:\t48 8b 95 50 ff ff ff \tmov    -0xb0(%rbp),%rdx\n    4ffb:\t49 89 d1             \tmov    %rdx,%r9\n    4ffe:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    5004:\t89 c1                \tmov    %eax,%ecx\n    5006:\tba 1a 07 00 00       \tmov    $0x71a,%edx\n    500b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    5010:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    5015:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    501a:\te8 00 00 00 00       \tcallq  501f <hdf_search_path+0x1ba>\n    501f:\tc9                   \tleaveq \n    5020:\tc3                   \tretq   ", "code_s": "__int64 __fastcall hdf_search_path(__int64 a1, const char *a2, char *a3) {\n  const char *v3;\n  struct stat <span class=\"supfact\">v6</span>;\n  __int64 i;\n  for (i = hdf_get_child(a1, String); i; i = hdf_obj_next(i)) {\n    v3 = (const char *)hdf_obj_value(i);\n    snprintf(a3, Number, String, v3, a2);\n    *_errno_location() = Number;\n    if (stat(a3, &<span class=\"supfact\">v6</span>) != Number)\n      return Number L;\n    if (*_errno_location() != Number)\n      return nerr_raise_errnof(String, String, Number L, NERR_SYSTEM, String,\n                               a3);\n  }\n  strncpy(a3, a2, Number);\n  if (stat(a3, &<span class=\"supfact\">v6</span>) != Number)\n    return Number L;\n  if (*_errno_location() == Number)\n    return nerr_raisef(String, String, Number L, NERR_NOT_FOUND, String, a2);\n  return nerr_raise_errnof(String, String, Number L, NERR_SYSTEM, String, a3);\n}", "code_t": "NEOERR *__cdecl hdf_search_path(HDF *hdf, const char *path, char *full) {\n  char *v3;\n  stat <span class=\"supfact\">s</span>;\n  HDF *paths;\n  for (paths = hdf_get_child(hdf, String); paths; paths = hdf_obj_next(paths)) {\n    v3 = hdf_obj_value(paths);\n    snprintf(full, Number, String, v3, path);\n    *_errno_location() = Number;\n    if (stat_0(full, &<span class=\"supfact\">s</span>) != Number)\n      return Number L;\n    if (*_errno_location() != Number)\n      return (NEOERR *)nerr_raise_errnof(String, String, Number L, NERR_SYSTEM,\n                                         String, full);\n  }\n  strncpy(full, path, Number);\n  if (stat_0(full, &<span class=\"supfact\">s</span>) != Number)\n    return Number L;\n  if (*_errno_location() == Number)\n    return (NEOERR *)nerr_raisef(String, String, Number L, NERR_NOT_FOUND,\n                                 String, path);\n  return (NEOERR *)nerr_raise_errnof(String, String, Number L, NERR_SYSTEM,\n                                     String, full);\n}", "var": [{"name": "v6", "type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }", "ref_name": "s", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }"}], "body_in_train": false}, {"repo_owner": "mthuurne", "repo_name": "qemu-dingoo", "path": "mthuurne/qemu-dingoo/54b1befca550d081af56e78ada11be73983f0f776e0f17dc67503e1d7a69a772", "path_in_repo": "mthuurne/qemu-dingoo//net/socket.o", "objdump": "0000000000000567 <net_socket_mcast_create>:\n     567:\t55                   \tpush   %rbp\n     568:\t48 89 e5             \tmov    %rsp,%rbp\n     56b:\t53                   \tpush   %rbx\n     56c:\t48 83 ec 38          \tsub    $0x38,%rsp\n     570:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n     574:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     57b:\t00 00 \n     57d:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     581:\t31 c0                \txor    %eax,%eax\n     583:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     587:\t8b 40 04             \tmov    0x4(%rax),%eax\n     58a:\t89 c7                \tmov    %eax,%edi\n     58c:\te8 00 00 00 00       \tcallq  591 <net_socket_mcast_create+0x2a>\n     591:\t25 00 00 00 f0       \tand    $0xf0000000,%eax\n     596:\t3d 00 00 00 e0       \tcmp    $0xe0000000,%eax\n     59b:\t74 46                \tje     5e3 <net_socket_mcast_create+0x7c>\n     59d:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     5a1:\t8b 40 04             \tmov    0x4(%rax),%eax\n     5a4:\t89 c7                \tmov    %eax,%edi\n     5a6:\te8 00 00 00 00       \tcallq  5ab <net_socket_mcast_create+0x44>\n     5ab:\t89 c3                \tmov    %eax,%ebx\n     5ad:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     5b1:\t8b 40 04             \tmov    0x4(%rax),%eax\n     5b4:\t89 c7                \tmov    %eax,%edi\n     5b6:\te8 00 00 00 00       \tcallq  5bb <net_socket_mcast_create+0x54>\n     5bb:\t48 89 c2             \tmov    %rax,%rdx\n     5be:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5c5 <net_socket_mcast_create+0x5e>\n     5c5:\t89 d9                \tmov    %ebx,%ecx\n     5c7:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     5cc:\t48 89 c7             \tmov    %rax,%rdi\n     5cf:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     5d4:\te8 00 00 00 00       \tcallq  5d9 <net_socket_mcast_create+0x72>\n     5d9:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n     5de:\te9 4d 01 00 00       \tjmpq   730 <net_socket_mcast_create+0x1c9>\n     5e3:\tba 00 00 00 00       \tmov    $0x0,%edx\n     5e8:\tbe 02 00 00 00       \tmov    $0x2,%esi\n     5ed:\tbf 02 00 00 00       \tmov    $0x2,%edi\n     5f2:\te8 00 00 00 00       \tcallq  5f7 <net_socket_mcast_create+0x90>\n     5f7:\t89 45 d8             \tmov    %eax,-0x28(%rbp)\n     5fa:\t83 7d d8 00          \tcmpl   $0x0,-0x28(%rbp)\n     5fe:\t79 14                \tjns    614 <net_socket_mcast_create+0xad>\n     600:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     605:\te8 00 00 00 00       \tcallq  60a <net_socket_mcast_create+0xa3>\n     60a:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n     60f:\te9 1c 01 00 00       \tjmpq   730 <net_socket_mcast_create+0x1c9>\n     614:\tc7 45 d4 01 00 00 00 \tmovl   $0x1,-0x2c(%rbp)\n     61b:\t48 8d 55 d4          \tlea    -0x2c(%rbp),%rdx\n     61f:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n     622:\t41 b8 04 00 00 00    \tmov    $0x4,%r8d\n     628:\t48 89 d1             \tmov    %rdx,%rcx\n     62b:\tba 02 00 00 00       \tmov    $0x2,%edx\n     630:\tbe 01 00 00 00       \tmov    $0x1,%esi\n     635:\t89 c7                \tmov    %eax,%edi\n     637:\te8 00 00 00 00       \tcallq  63c <net_socket_mcast_create+0xd5>\n     63c:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n     63f:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n     643:\t79 0f                \tjns    654 <net_socket_mcast_create+0xed>\n     645:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     64a:\te8 00 00 00 00       \tcallq  64f <net_socket_mcast_create+0xe8>\n     64f:\te9 c7 00 00 00       \tjmpq   71b <net_socket_mcast_create+0x1b4>\n     654:\t48 8b 4d c8          \tmov    -0x38(%rbp),%rcx\n     658:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n     65b:\tba 10 00 00 00       \tmov    $0x10,%edx\n     660:\t48 89 ce             \tmov    %rcx,%rsi\n     663:\t89 c7                \tmov    %eax,%edi\n     665:\te8 00 00 00 00       \tcallq  66a <net_socket_mcast_create+0x103>\n     66a:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n     66d:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n     671:\t79 0f                \tjns    682 <net_socket_mcast_create+0x11b>\n     673:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     678:\te8 00 00 00 00       \tcallq  67d <net_socket_mcast_create+0x116>\n     67d:\te9 99 00 00 00       \tjmpq   71b <net_socket_mcast_create+0x1b4>\n     682:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     686:\t8b 40 04             \tmov    0x4(%rax),%eax\n     689:\t89 45 e0             \tmov    %eax,-0x20(%rbp)\n     68c:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     691:\te8 00 00 00 00       \tcallq  696 <net_socket_mcast_create+0x12f>\n     696:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n     699:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n     69d:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n     6a0:\t41 b8 08 00 00 00    \tmov    $0x8,%r8d\n     6a6:\t48 89 d1             \tmov    %rdx,%rcx\n     6a9:\tba 23 00 00 00       \tmov    $0x23,%edx\n     6ae:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     6b3:\t89 c7                \tmov    %eax,%edi\n     6b5:\te8 00 00 00 00       \tcallq  6ba <net_socket_mcast_create+0x153>\n     6ba:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n     6bd:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n     6c1:\t79 0c                \tjns    6cf <net_socket_mcast_create+0x168>\n     6c3:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     6c8:\te8 00 00 00 00       \tcallq  6cd <net_socket_mcast_create+0x166>\n     6cd:\teb 4c                \tjmp    71b <net_socket_mcast_create+0x1b4>\n     6cf:\tc7 45 d4 01 00 00 00 \tmovl   $0x1,-0x2c(%rbp)\n     6d6:\t48 8d 55 d4          \tlea    -0x2c(%rbp),%rdx\n     6da:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n     6dd:\t41 b8 04 00 00 00    \tmov    $0x4,%r8d\n     6e3:\t48 89 d1             \tmov    %rdx,%rcx\n     6e6:\tba 22 00 00 00       \tmov    $0x22,%edx\n     6eb:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     6f0:\t89 c7                \tmov    %eax,%edi\n     6f2:\te8 00 00 00 00       \tcallq  6f7 <net_socket_mcast_create+0x190>\n     6f7:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n     6fa:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n     6fe:\t79 0c                \tjns    70c <net_socket_mcast_create+0x1a5>\n     700:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     705:\te8 00 00 00 00       \tcallq  70a <net_socket_mcast_create+0x1a3>\n     70a:\teb 0f                \tjmp    71b <net_socket_mcast_create+0x1b4>\n     70c:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n     70f:\t89 c7                \tmov    %eax,%edi\n     711:\te8 00 00 00 00       \tcallq  716 <net_socket_mcast_create+0x1af>\n     716:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n     719:\teb 15                \tjmp    730 <net_socket_mcast_create+0x1c9>\n     71b:\t83 7d d8 00          \tcmpl   $0x0,-0x28(%rbp)\n     71f:\t78 0a                \tjs     72b <net_socket_mcast_create+0x1c4>\n     721:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n     724:\t89 c7                \tmov    %eax,%edi\n     726:\te8 00 00 00 00       \tcallq  72b <net_socket_mcast_create+0x1c4>\n     72b:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n     730:\t48 8b 5d e8          \tmov    -0x18(%rbp),%rbx\n     734:\t64 48 33 1c 25 28 00 \txor    %fs:0x28,%rbx\n     73b:\t00 00 \n     73d:\t74 05                \tje     744 <net_socket_mcast_create+0x1dd>\n     73f:\te8 00 00 00 00       \tcallq  744 <net_socket_mcast_create+0x1dd>\n     744:\t48 83 c4 38          \tadd    $0x38,%rsp\n     748:\t5b                   \tpop    %rbx\n     749:\t5d                   \tpop    %rbp\n     74a:\tc3                   \tretq   ", "code_s": "__int64 __fastcall net_socket_mcast_create(__int64 a1) {\n  uint32_t v1;\n  char *v2;\n  int optval;\n  int fd;\n  int v6;\n  int <span class=\"supfact\">v7</span>[Number];\n  unsigned __int64 v8;\n  v8 = __readfsqword(Number);\n  if ((ntohl(*(_DWORD *)(a1 + Number)) & Number) != Number) {\n    v1 = ntohl(*(_DWORD *)(a1 + Number));\n    v2 = inet_ntoa(*(struct in_addr *)(a1 + Number));\n    fprintf(stderr, String, v2, v1);\n    return Number;\n  }\n  fd = qemu_socket(Number L, Number L, Number L);\n  if (fd < Number) {\n    perror(String);\n    return Number;\n  }\n  optval = Number;\n  v6 = setsockopt(fd, Number, Number, &optval, Number);\n  if (v6 >= Number) {\n    v6 = bind(fd, (const struct sockaddr *)a1, Number);\n    if (v6 >= Number) {\n      <span class=\"supfact\">v7</span>[Number] = *(_DWORD *)(a1 + Number);\n      <span class=\"supfact\">v7</span>[Number] = htonl(Number);\n      v6 = setsockopt(fd, Number, Number, <span class=\"supfact\">v7</span>, Number);\n      if (v6 >= Number) {\n        optval = Number;\n        v6 = setsockopt(fd, Number, Number, &optval, Number);\n        if (v6 >= Number) {\n          socket_set_nonblock((unsigned int)fd);\n          return (unsigned int)fd;\n        }\n        perror(String);\n      } else {\n        perror(String);\n      }\n    } else {\n      perror(String);\n    }\n  } else {\n    perror(String);\n  }\n  if (fd >= Number)\n    close(fd);\n  return Number;\n}", "code_t": "int __cdecl net_socket_mcast_create(sockaddr_in *mcastaddr) {\n  uint32_t v1;\n  char *v2;\n  int val;\n  int fd;\n  int ret;\n  ip_mreq <span class=\"supfact\">imr</span>;\n  unsigned __int64 v8;\n  v8 = __readfsqword(Number);\n  if ((ntohl(mcastaddr->sin_addr.s_addr) & Number) != Number) {\n    v1 = ntohl(mcastaddr->sin_addr.s_addr);\n    v2 = inet_ntoa(mcastaddr->sin_addr);\n    fprintf(stderr, String, v2, v1);\n    return Number;\n  }\n  fd = qemu_socket(Number L, Number L, Number L);\n  if (fd < Number) {\n    perror(String);\n    return Number;\n  }\n  val = Number;\n  ret = setsockopt(fd, Number, Number, &val, Number);\n  if (ret >= Number) {\n    ret = bind(fd, (const struct sockaddr *)mcastaddr, Number);\n    if (ret >= Number) {\n      <span class=\"supfact\">imr</span>.imr_multiaddr.s_addr = mcastaddr->sin_addr.s_addr;\n      <span class=\"supfact\">imr</span>.imr_interface.s_addr = htonl(Number);\n      ret = setsockopt(fd, Number, Number, &<span class=\"supfact\">imr</span>, Number);\n      if (ret >= Number) {\n        val = Number;\n        ret = setsockopt(fd, Number, Number, &val, Number);\n        if (ret >= Number) {\n          socket_set_nonblock((unsigned int)fd);\n          return fd;\n        }\n        perror(String);\n      } else {\n        perror(String);\n      }\n    } else {\n      perror(String);\n    }\n  } else {\n    perror(String);\n  }\n  if (fd >= Number)\n    close(fd);\n  return Number;\n}", "var": [{"name": "v7", "type": "uint32_t[2]", "ref_name": "imr", "ref_type": "struct ip_mreq { in_addr imr_multiaddr; in_addr imr_interface; }"}], "body_in_train": false}, {"repo_owner": "sasairc", "repo_name": "clbiff", "path": "sasairc/clbiff/100b5cf933493b9c85e8e35bb06466d13106ce715309476ac69fe3b402b5b9dd", "path_in_repo": "sasairc/clbiff//src/subset.o", "objdump": "0000000000000000 <get_mailbox_env>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t41 54                \tpush   %r12\n   6:\t53                   \tpush   %rbx\n   7:\t48 81 ec d0 00 00 00 \tsub    $0xd0,%rsp\n   e:\t48 89 bd 28 ff ff ff \tmov    %rdi,-0xd8(%rbp)\n  15:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n  1c:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n  23:\t00 \n  24:\t48 c7 45 c0 00 00 00 \tmovq   $0x0,-0x40(%rbp)\n  2b:\t00 \n  2c:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n  33:\t00 \n  34:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n  3b:\t00 \n  3c:\t48 83 bd 28 ff ff ff \tcmpq   $0x0,-0xd8(%rbp)\n  43:\t00 \n  44:\t0f 85 30 01 00 00    \tjne    17a <get_mailbox_env+0x17a>\n  4a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4f:\te9 4d 01 00 00       \tjmpq   1a1 <get_mailbox_env+0x1a1>\n  54:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n  5b:\t48 89 c7             \tmov    %rax,%rdi\n  5e:\te8 00 00 00 00       \tcallq  63 <get_mailbox_env+0x63>\n  63:\t48 89 c3             \tmov    %rax,%rbx\n  66:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  69:\t48 98                \tcltq   \n  6b:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n  72:\t00 \n  73:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  77:\t48 01 d0             \tadd    %rdx,%rax\n  7a:\t48 8b 00             \tmov    (%rax),%rax\n  7d:\t48 89 c7             \tmov    %rax,%rdi\n  80:\te8 00 00 00 00       \tcallq  85 <get_mailbox_env+0x85>\n  85:\t48 01 d8             \tadd    %rbx,%rax\n  88:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  8d:\t48 89 c7             \tmov    %rax,%rdi\n  90:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  95:\te8 00 00 00 00       \tcallq  9a <get_mailbox_env+0x9a>\n  9a:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n  9e:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n  a3:\t75 0a                \tjne    af <get_mailbox_env+0xaf>\n  a5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  aa:\te9 f2 00 00 00       \tjmpq   1a1 <get_mailbox_env+0x1a1>\n  af:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n  b6:\t48 89 c7             \tmov    %rax,%rdi\n  b9:\te8 00 00 00 00       \tcallq  be <get_mailbox_env+0xbe>\n  be:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  c2:\t48 8b 8d 28 ff ff ff \tmov    -0xd8(%rbp),%rcx\n  c9:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  cd:\t48 89 ce             \tmov    %rcx,%rsi\n  d0:\t48 89 c7             \tmov    %rax,%rdi\n  d3:\te8 00 00 00 00       \tcallq  d8 <get_mailbox_env+0xd8>\n  d8:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  db:\t48 98                \tcltq   \n  dd:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n  e4:\t00 \n  e5:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  e9:\t48 01 d0             \tadd    %rdx,%rax\n  ec:\t48 8b 00             \tmov    (%rax),%rax\n  ef:\t48 89 c7             \tmov    %rax,%rdi\n  f2:\te8 00 00 00 00       \tcallq  f7 <get_mailbox_env+0xf7>\n  f7:\t49 89 c4             \tmov    %rax,%r12\n  fa:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  fd:\t48 98                \tcltq   \n  ff:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 106:\t00 \n 107:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 10b:\t48 01 d0             \tadd    %rdx,%rax\n 10e:\t48 8b 18             \tmov    (%rax),%rbx\n 111:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 115:\t48 89 c7             \tmov    %rax,%rdi\n 118:\te8 00 00 00 00       \tcallq  11d <get_mailbox_env+0x11d>\n 11d:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n 121:\t48 01 d0             \tadd    %rdx,%rax\n 124:\t4c 89 e2             \tmov    %r12,%rdx\n 127:\t48 89 de             \tmov    %rbx,%rsi\n 12a:\t48 89 c7             \tmov    %rax,%rdi\n 12d:\te8 00 00 00 00       \tcallq  132 <get_mailbox_env+0x132>\n 132:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 136:\t48 89 c7             \tmov    %rax,%rdi\n 139:\te8 00 00 00 00       \tcallq  13e <get_mailbox_env+0x13e>\n 13e:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n 142:\t48 01 d0             \tadd    %rdx,%rax\n 145:\tc6 00 00             \tmovb   $0x0,(%rax)\n 148:\t48 8d 95 30 ff ff ff \tlea    -0xd0(%rbp),%rdx\n 14f:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 153:\t48 89 d6             \tmov    %rdx,%rsi\n 156:\t48 89 c7             \tmov    %rax,%rdi\n 159:\te8 00 00 00 00       \tcallq  15e <get_mailbox_env+0x15e>\n 15e:\t85 c0                \ttest   %eax,%eax\n 160:\t74 3a                \tje     19c <get_mailbox_env+0x19c>\n 162:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 166:\t48 89 c7             \tmov    %rax,%rdi\n 169:\te8 00 00 00 00       \tcallq  16e <get_mailbox_env+0x16e>\n 16e:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n 175:\t00 \n 176:\t83 45 ec 01          \taddl   $0x1,-0x14(%rbp)\n 17a:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 17d:\t48 98                \tcltq   \n 17f:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 186:\t00 \n 187:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 18b:\t48 01 d0             \tadd    %rdx,%rax\n 18e:\t48 8b 00             \tmov    (%rax),%rax\n 191:\t48 85 c0             \ttest   %rax,%rax\n 194:\t0f 85 ba fe ff ff    \tjne    54 <get_mailbox_env+0x54>\n 19a:\teb 01                \tjmp    19d <get_mailbox_env+0x19d>\n 19c:\t90                   \tnop\n 19d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 1a1:\t48 81 c4 d0 00 00 00 \tadd    $0xd0,%rsp\n 1a8:\t5b                   \tpop    %rbx\n 1a9:\t41 5c                \tpop    %r12\n 1ab:\t5d                   \tpop    %rbp\n 1ac:\tc3                   \tretq   ", "code_s": "void *__fastcall get_mailbox_env(const char *a1) {\n  size_t v2;\n  size_t v3;\n  size_t v4;\n  size_t v5;\n  const void *v6;\n  size_t v7;\n  size_t v8;\n  struct stat <span class=\"supfact\">v9</span>;\n  __int64 v10[Number];\n  void *dest;\n  int v12;\n  v12 = Number;\n  dest = Number L;\n  v10[Number] = (__int64)String;\n  v10[Number] = (__int64)String;\n  v10[Number] = Number L;\n  if (!a1)\n    return Number L;\n  while (v10[v12]) {\n    v2 = strlen(a1);\n    v3 = strlen((const char *)v10[v12]);\n    dest = (void *)smalloc(v2 + v3, Number L);\n    if (!dest)\n      return Number L;\n    v4 = strlen(a1);\n    memcpy(dest, a1, v4 + Number);\n    v5 = strlen((const char *)v10[v12]);\n    v6 = (const void *)v10[v12];\n    v7 = strlen((const char *)dest);\n    memcpy((char *)dest + v7, v6, v5);\n    v8 = strlen((const char *)dest);\n    *((_BYTE *)dest + v8) = Number;\n    if (!stat((const char *)dest, &<span class=\"supfact\">v9</span>))\n      break;\n    free(dest);\n    dest = Number L;\n    ++v12;\n  }\n  return dest;\n}", "code_t": "char *__cdecl get_mailbox_env(char *path) {\n  size_t v2;\n  size_t v3;\n  size_t v4;\n  size_t v5;\n  char *v6;\n  size_t v7;\n  size_t v8;\n  stat <span class=\"supfact\">st</span>;\n  char *fmt[Number];\n  char *inbox;\n  int i;\n  i = Number;\n  inbox = Number L;\n  fmt[Number] = String;\n  fmt[Number] = String;\n  fmt[Number] = Number L;\n  if (!path)\n    return Number L;\n  while (fmt[i]) {\n    v2 = strlen(path);\n    v3 = strlen(fmt[i]);\n    inbox = (char *)smalloc(v2 + v3, Number L);\n    if (!inbox)\n      return Number L;\n    v4 = strlen(path);\n    memcpy(inbox, path, v4 + Number);\n    v5 = strlen(fmt[i]);\n    v6 = fmt[i];\n    v7 = strlen(inbox);\n    memcpy(&inbox[v7], v6, v5);\n    v8 = strlen(inbox);\n    inbox[v8] = Number;\n    if (!stat_0(inbox, &<span class=\"supfact\">st</span>))\n      break;\n    free(inbox);\n    inbox = Number L;\n    ++i;\n  }\n  return inbox;\n}", "var": [{"name": "v9", "type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }", "ref_name": "st", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/560880a0d78a16c1d09b1d26c617d93994fcc3deea10e346cbe2cb3ba3e3c537", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/drivers/royalmah.o", "objdump": "0000000000016dac <_ZL31construct_machine_config_suzumeR14machine_configP8device_t>:\n   16dac:\t55                   \tpush   %rbp\n   16dad:\t48 89 e5             \tmov    %rsp,%rbp\n   16db0:\t53                   \tpush   %rbx\n   16db1:\t48 83 ec 68          \tsub    $0x68,%rsp\n   16db5:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n   16db9:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n   16dbd:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n   16dc4:\t00 \n   16dc5:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   16dc9:\t48 89 c7             \tmov    %rax,%rdi\n   16dcc:\te8 00 00 00 00       \tcallq  16dd1 <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0x25>\n   16dd1:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n   16dd5:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   16dd9:\t48 89 d6             \tmov    %rdx,%rsi\n   16ddc:\t48 89 c7             \tmov    %rax,%rdi\n   16ddf:\te8 fe fb ff ff       \tcallq  169e2 <_ZL33construct_machine_config_dondenmjR14machine_configP8device_t>\n   16de4:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n   16de8:\t48 8b 4d 90          \tmov    -0x70(%rbp),%rcx\n   16dec:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   16df0:\tba 00 00 00 00       \tmov    $0x0,%edx\n   16df5:\t48 89 ce             \tmov    %rcx,%rsi\n   16df8:\t48 89 c7             \tmov    %rax,%rdi\n   16dfb:\te8 00 00 00 00       \tcallq  16e00 <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0x54>\n   16e00:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   16e04:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   16e08:\tba 00 00 00 00       \tmov    $0x0,%edx\n   16e0d:\tbe 02 00 00 00       \tmov    $0x2,%esi\n   16e12:\t48 89 c7             \tmov    %rax,%rdi\n   16e15:\te8 00 00 00 00       \tcallq  16e1a <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0x6e>\n   16e1a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   16e1e:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n   16e23:\tba 00 00 00 00       \tmov    $0x0,%edx\n   16e28:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   16e2d:\t48 89 c7             \tmov    %rax,%rdi\n   16e30:\te8 00 00 00 00       \tcallq  16e35 <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0x89>\n   16e35:\t48 8b 5d 90          \tmov    -0x70(%rbp),%rbx\n   16e39:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   16e3d:\t48 89 c7             \tmov    %rax,%rdi\n   16e40:\te8 00 00 00 00       \tcallq  16e45 <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0x99>\n   16e45:\t48 89 d8             \tmov    %rbx,%rax\n   16e48:\teb 1a                \tjmp    16e64 <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0xb8>\n   16e4a:\t48 89 c3             \tmov    %rax,%rbx\n   16e4d:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   16e51:\t48 89 c7             \tmov    %rax,%rdi\n   16e54:\te8 00 00 00 00       \tcallq  16e59 <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0xad>\n   16e59:\t48 89 d8             \tmov    %rbx,%rax\n   16e5c:\t48 89 c7             \tmov    %rax,%rdi\n   16e5f:\te8 00 00 00 00       \tcallq  16e64 <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0xb8>\n   16e64:\t48 83 c4 68          \tadd    $0x68,%rsp\n   16e68:\t5b                   \tpop    %rbx\n   16e69:\t5d                   \tpop    %rbp\n   16e6a:\tc3                   \tretq   ", "code_s": "device_t *__fastcall construct_machine_config_suzume(machine_config *a1,\n                                                     device_t *a2) {\n  int v2;\n  device_t *v4;\n  char <span class=\"supfact\">v5</span>[Number];\n  device_execute_interface *v6;\n  v6 = Number L;\n  astring astring((astring *)<span class=\"supfact\">v5</span>);\n  v4 = construct_machine_config_dondenmj(a1, a2);\n  v6 = (device_execute_interface *)machine_config device_find(a1, v4, String);\n  device_memory_interface static_set_addrmap(\n      v6, Number L, construct_address_map_suzume_iomap);\n  device_execute_interface static_set_vblank_int(\n      v6, (device_t *)suzume_irq, (void(__fastcall *)(device_t *))String,\n      Number L, v2);\n  astring ~astring((astring *)<span class=\"supfact\">v5</span>);\n  return v4;\n}", "code_t": "device_t *__cdecl construct_machine_config_suzume(machine_config *config,\n                                                  device_t *owner) {\n  void(__fastcall * v2)(address_map *, const device_t *);\n  int v3;\n  device_t *ownera;\n  astring <span class=\"supfact\">tempstring</span>;\n  device_t *device;\n  device = Number L;\n  astring astring(&<span class=\"supfact\">tempstring</span>);\n  ownera = construct_machine_config_dondenmj(config, owner);\n  device = (device_t *)machine_config device_find(config, ownera, String);\n  device_memory_interface static_set_addrmap(\n      device, (device_t *)((char *)&loc_1 + Number),\n      (address_spacenum)construct_address_map_suzume_iomap, v2);\n  device_execute_interface static_set_vblank_int(\n      device, (device_t *)suzume_irq, (void(__fastcall *)(device_t *))String,\n      Number L, v3);\n  astring ~astring(&<span class=\"supfact\">tempstring</span>);\n  return ownera;\n}", "var": [{"name": "v5", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "tempstring", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/5631eb03036580eed21c2bb869de67c5abe12626d32354cf1559c3a570587379", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/drivers/mw8080bw.o", "objdump": "00000000000053a0 <_ZL29construct_machine_config_mazeR14machine_configP8device_t>:\n    53a0:\t55                   \tpush   %rbp\n    53a1:\t48 89 e5             \tmov    %rsp,%rbp\n    53a4:\t53                   \tpush   %rbx\n    53a5:\t48 83 ec 68          \tsub    $0x68,%rsp\n    53a9:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n    53ad:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n    53b1:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    53b8:\t00 \n    53b9:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n    53bd:\t48 89 c7             \tmov    %rax,%rdi\n    53c0:\te8 00 00 00 00       \tcallq  53c5 <_ZL29construct_machine_config_mazeR14machine_configP8device_t+0x25>\n    53c5:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n    53c9:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    53cd:\t48 89 d6             \tmov    %rdx,%rsi\n    53d0:\t48 89 c7             \tmov    %rax,%rdi\n    53d3:\te8 00 00 00 00       \tcallq  53d8 <_ZL29construct_machine_config_mazeR14machine_configP8device_t+0x38>\n    53d8:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n    53dc:\t48 8b 4d 90          \tmov    -0x70(%rbp),%rcx\n    53e0:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    53e4:\tba 00 00 00 00       \tmov    $0x0,%edx\n    53e9:\t48 89 ce             \tmov    %rcx,%rsi\n    53ec:\t48 89 c7             \tmov    %rax,%rdi\n    53ef:\te8 00 00 00 00       \tcallq  53f4 <_ZL29construct_machine_config_mazeR14machine_configP8device_t+0x54>\n    53f4:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    53f8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    53fc:\tba 00 00 00 00       \tmov    $0x0,%edx\n    5401:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    5406:\t48 89 c7             \tmov    %rax,%rdi\n    5409:\te8 00 00 00 00       \tcallq  540e <_ZL29construct_machine_config_mazeR14machine_configP8device_t+0x6e>\n    540e:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    5412:\tba 00 00 00 00       \tmov    $0x0,%edx\n    5417:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    541c:\t48 89 c7             \tmov    %rax,%rdi\n    541f:\te8 00 00 00 00       \tcallq  5424 <_ZL29construct_machine_config_mazeR14machine_configP8device_t+0x84>\n    5424:\t48 8b 5d 98          \tmov    -0x68(%rbp),%rbx\n    5428:\tbf 7f 9a 06 b1       \tmov    $0xb1069a7f,%edi\n    542d:\te8 00 00 00 00       \tcallq  5432 <_ZL29construct_machine_config_mazeR14machine_configP8device_t+0x92>\n    5432:\t89 c1                \tmov    %eax,%ecx\n    5434:\t48 89 d0             \tmov    %rdx,%rax\n    5437:\t89 4b 20             \tmov    %ecx,0x20(%rbx)\n    543a:\t48 89 43 28          \tmov    %rax,0x28(%rbx)\n    543e:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n    5442:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    5446:\t48 89 d6             \tmov    %rdx,%rsi\n    5449:\t48 89 c7             \tmov    %rax,%rdi\n    544c:\te8 00 00 00 00       \tcallq  5451 <_ZL29construct_machine_config_mazeR14machine_configP8device_t+0xb1>\n    5451:\t48 8b 5d 90          \tmov    -0x70(%rbp),%rbx\n    5455:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n    5459:\t48 89 c7             \tmov    %rax,%rdi\n    545c:\te8 00 00 00 00       \tcallq  5461 <_ZL29construct_machine_config_mazeR14machine_configP8device_t+0xc1>\n    5461:\t48 89 d8             \tmov    %rbx,%rax\n    5464:\teb 1a                \tjmp    5480 <_ZL29construct_machine_config_mazeR14machine_configP8device_t+0xe0>\n    5466:\t48 89 c3             \tmov    %rax,%rbx\n    5469:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n    546d:\t48 89 c7             \tmov    %rax,%rdi\n    5470:\te8 00 00 00 00       \tcallq  5475 <_ZL29construct_machine_config_mazeR14machine_configP8device_t+0xd5>\n    5475:\t48 89 d8             \tmov    %rbx,%rax\n    5478:\t48 89 c7             \tmov    %rax,%rdi\n    547b:\te8 00 00 00 00       \tcallq  5480 <_ZL29construct_machine_config_mazeR14machine_configP8device_t+0xe0>\n    5480:\t48 83 c4 68          \tadd    $0x68,%rsp\n    5484:\t5b                   \tpop    %rbx\n    5485:\t5d                   \tpop    %rbp\n    5486:\tc3                   \tretq   ", "code_s": "device_t *__fastcall construct_machine_config_maze(machine_config *a1,\n                                                   device_t *a2) {\n  __int64 v2;\n  device_t *v4;\n  char <span class=\"supfact\">v5</span>[Number];\n  __int64 v6;\n  v6 = Number L;\n  astring astring((astring *)<span class=\"supfact\">v5</span>);\n  v4 = construct_machine_config_mw8080bw_root(a1, a2);\n  v6 = machine_config device_find(a1, v4, String);\n  device_memory_interface static_set_addrmap(v6, Number L,\n                                             construct_address_map_maze_io_map);\n  driver_device static_set_callback(v4, Number L, machine_start_maze);\n  *((_DWORD *)a1 + Number) = attotime from_nsec((attotime *)Number, Number L);\n  *((_QWORD *)a1 + Number) = v2;\n  construct_machine_config_maze_audio(a1, v4);\n  astring ~astring((astring *)<span class=\"supfact\">v5</span>);\n  return v4;\n}", "code_t": "device_t *__cdecl construct_machine_config_maze(machine_config *config,\n                                                device_t *owner) {\n  void(__fastcall * v2)(address_map *, const device_t *);\n  void(__fastcall * v3)(running_machine *);\n  attotime v4;\n  device_t *ownera;\n  astring <span class=\"supfact\">tempstring</span>;\n  device_t *device;\n  device = Number L;\n  astring astring(&<span class=\"supfact\">tempstring</span>);\n  ownera = construct_machine_config_mw8080bw_root(config, owner);\n  device = (device_t *)machine_config device_find(config, ownera, String);\n  device_memory_interface static_set_addrmap(\n      device, (device_t *)((char *)&loc_1 + Number),\n      (address_spacenum)construct_address_map_maze_io_map, v2);\n  driver_device static_set_callback(\n      ownera, Number L, (driver_device callback_type)machine_start_maze, v3);\n  v4 = attotime from_nsec(Number L);\n  config->m_watchdog_time.seconds = v4.seconds;\n  config->m_watchdog_time.attoseconds = v4.attoseconds;\n  construct_machine_config_maze_audio(config, ownera);\n  astring ~astring(&<span class=\"supfact\">tempstring</span>);\n  return ownera;\n}", "var": [{"name": "v5", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "tempstring", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "kingyueyang", "repo_name": "network_flow_monitor", "path": "kingyueyang/network_flow_monitor/779de0e1671be31098e0cdbf97cf0c71776983e184b03364cbc453178a2dbe37", "path_in_repo": "kingyueyang/network_flow_monitor/userland/perl/Net-Pfring/blib/arch/auto/Net/Pfring/Pfring.so", "objdump": "0000000000005070 <pfring_bind>:\n    5070:\t55                   \tpush   %rbp\n    5071:\t48 89 e5             \tmov    %rsp,%rbp\n    5074:\t48 83 ec 60          \tsub    $0x60,%rsp\n    5078:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n    507c:\t48 89 75 a0          \tmov    %rsi,-0x60(%rbp)\n    5080:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n    5087:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n    508e:\t48 83 7d a0 00       \tcmpq   $0x0,-0x60(%rbp)\n    5093:\t74 17                \tje     50ac <pfring_bind+0x3c>\n    5095:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    5099:\t48 8d 35 00 33 00 00 \tlea    0x3300(%rip),%rsi        # 83a0 <hex+0x50>\n    50a0:\t48 89 c7             \tmov    %rax,%rdi\n    50a3:\te8 e8 d1 ff ff       \tcallq  2290 <strcmp@plt>\n    50a8:\t85 c0                \ttest   %eax,%eax\n    50aa:\t75 0a                \tjne    50b6 <pfring_bind+0x46>\n    50ac:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    50b1:\te9 c7 01 00 00       \tjmpq   527d <pfring_bind+0x20d>\n    50b6:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    50ba:\tbe 40 00 00 00       \tmov    $0x40,%esi\n    50bf:\t48 89 c7             \tmov    %rax,%rdi\n    50c2:\te8 b9 d0 ff ff       \tcallq  2180 <strchr@plt>\n    50c7:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    50cb:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n    50d0:\t0f 84 e5 00 00 00    \tje     51bb <pfring_bind+0x14b>\n    50d6:\t48 c7 45 b8 00 00 00 \tmovq   $0x0,-0x48(%rbp)\n    50dd:\t00 \n    50de:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    50e2:\tc6 00 00             \tmovb   $0x0,(%rax)\n    50e5:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    50e9:\t48 8d 48 01          \tlea    0x1(%rax),%rcx\n    50ed:\t48 8d 45 b8          \tlea    -0x48(%rbp),%rax\n    50f1:\t48 89 c2             \tmov    %rax,%rdx\n    50f4:\t48 8d 35 aa 32 00 00 \tlea    0x32aa(%rip),%rsi        # 83a5 <hex+0x55>\n    50fb:\t48 89 cf             \tmov    %rcx,%rdi\n    50fe:\te8 4d d1 ff ff       \tcallq  2250 <strtok_r@plt>\n    5103:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    5107:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    510e:\te9 9d 00 00 00       \tjmpq   51b0 <pfring_bind+0x140>\n    5113:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    5117:\tbe 2d 00 00 00       \tmov    $0x2d,%esi\n    511c:\t48 89 c7             \tmov    %rax,%rdi\n    511f:\te8 5c d0 ff ff       \tcallq  2180 <strchr@plt>\n    5124:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    5128:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n    512d:\t74 2b                \tje     515a <pfring_bind+0xea>\n    512f:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    5133:\tc6 00 00             \tmovb   $0x0,(%rax)\n    5136:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    513a:\t48 89 c7             \tmov    %rax,%rdi\n    513d:\te8 de d2 ff ff       \tcallq  2420 <atoi@plt>\n    5142:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n    5145:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    5149:\t48 83 c0 01          \tadd    $0x1,%rax\n    514d:\t48 89 c7             \tmov    %rax,%rdi\n    5150:\te8 cb d2 ff ff       \tcallq  2420 <atoi@plt>\n    5155:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n    5158:\teb 15                \tjmp    516f <pfring_bind+0xff>\n    515a:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    515e:\t48 89 c7             \tmov    %rax,%rdi\n    5161:\te8 ba d2 ff ff       \tcallq  2420 <atoi@plt>\n    5166:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n    5169:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n    516c:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n    516f:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    5172:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n    5175:\teb 15                \tjmp    518c <pfring_bind+0x11c>\n    5177:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n    517a:\tba 01 00 00 00       \tmov    $0x1,%edx\n    517f:\t89 c1                \tmov    %eax,%ecx\n    5181:\td3 e2                \tshl    %cl,%edx\n    5183:\t89 d0                \tmov    %edx,%eax\n    5185:\t09 45 fc             \tor     %eax,-0x4(%rbp)\n    5188:\t83 45 e4 01          \taddl   $0x1,-0x1c(%rbp)\n    518c:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n    518f:\t3b 45 e8             \tcmp    -0x18(%rbp),%eax\n    5192:\t7e e3                \tjle    5177 <pfring_bind+0x107>\n    5194:\t48 8d 45 b8          \tlea    -0x48(%rbp),%rax\n    5198:\t48 89 c2             \tmov    %rax,%rdx\n    519b:\t48 8d 35 03 32 00 00 \tlea    0x3203(%rip),%rsi        # 83a5 <hex+0x55>\n    51a2:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    51a7:\te8 a4 d0 ff ff       \tcallq  2250 <strtok_r@plt>\n    51ac:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    51b0:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    51b5:\t0f 85 58 ff ff ff    \tjne    5113 <pfring_bind+0xa3>\n    51bb:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    51bf:\t66 c7 80 dc 08 00 00 \tmovw   $0x11,0x8dc(%rax)\n    51c6:\t11 00 \n    51c8:\tbf 03 00 00 00       \tmov    $0x3,%edi\n    51cd:\te8 8e cf ff ff       \tcallq  2160 <htons@plt>\n    51d2:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    51d6:\t66 89 82 de 08 00 00 \tmov    %ax,0x8de(%rdx)\n    51dd:\t66 c7 45 c0 1b 00    \tmovw   $0x1b,-0x40(%rbp)\n    51e3:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    51e7:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n    51eb:\t48 8d 7a 02          \tlea    0x2(%rdx),%rdi\n    51ef:\t48 89 c1             \tmov    %rax,%rcx\n    51f2:\t48 8d 15 ae 31 00 00 \tlea    0x31ae(%rip),%rdx        # 83a7 <hex+0x57>\n    51f9:\tbe 0e 00 00 00       \tmov    $0xe,%esi\n    51fe:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5203:\te8 98 cf ff ff       \tcallq  21a0 <snprintf@plt>\n    5208:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    520c:\t8b 80 bc 08 00 00    \tmov    0x8bc(%rax),%eax\n    5212:\t48 8d 4d c0          \tlea    -0x40(%rbp),%rcx\n    5216:\tba 10 00 00 00       \tmov    $0x10,%edx\n    521b:\t48 89 ce             \tmov    %rcx,%rsi\n    521e:\t89 c7                \tmov    %eax,%edi\n    5220:\te8 9b d1 ff ff       \tcallq  23c0 <bind@plt>\n    5225:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n    5228:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n    522c:\t75 4c                \tjne    527a <pfring_bind+0x20a>\n    522e:\t83 7d fc ff          \tcmpl   $0xffffffff,-0x4(%rbp)\n    5232:\t74 16                \tje     524a <pfring_bind+0x1da>\n    5234:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    5237:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    523b:\t89 d6                \tmov    %edx,%esi\n    523d:\t48 89 c7             \tmov    %rax,%rdi\n    5240:\te8 0b d1 ff ff       \tcallq  2350 <pfring_set_channel_id@plt>\n    5245:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n    5248:\teb 14                \tjmp    525e <pfring_bind+0x1ee>\n    524a:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    524e:\tbe ff 00 00 00       \tmov    $0xff,%esi\n    5253:\t48 89 c7             \tmov    %rax,%rdi\n    5256:\te8 f5 d0 ff ff       \tcallq  2350 <pfring_set_channel_id@plt>\n    525b:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n    525e:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n    5262:\t74 16                \tje     527a <pfring_bind+0x20a>\n    5264:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    5267:\t89 c6                \tmov    %eax,%esi\n    5269:\t48 8d 3d 40 31 00 00 \tlea    0x3140(%rip),%rdi        # 83b0 <hex+0x60>\n    5270:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5275:\te8 16 cf ff ff       \tcallq  2190 <printf@plt>\n    527a:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    527d:\tc9                   \tleaveq \n    527e:\tc3                   \tretq   ", "code_s": "__int64 __fastcall pfring_bind(__int64 a1, const char *a2) {\n  char *save_ptr;\n  struct sockaddr <span class=\"supfact\">addr</span>;\n  char *v5;\n  char *v6;\n  int i;\n  int v8;\n  int v9;\n  char *s;\n  unsigned int v11;\n  unsigned int v12;\n  v12 = Number;\n  v11 = Number;\n  if (!a2 || !strcmp(a2, String))\n    return Number;\n  v6 = strchr(a2, Number);\n  if (v6) {\n    save_ptr = Number L;\n    *v6 = Number;\n    s = strtok_r(v6 + Number, String, &save_ptr);\n    v12 = Number;\n    while (s) {\n      v5 = strchr(s, Number);\n      if (v5) {\n        *v5 = Number;\n        v9 = atoi(s);\n        v8 = atoi(v5 + Number);\n      } else {\n        v8 = atoi(s);\n        v9 = v8;\n      }\n      for (i = v9; i <= v8; ++i)\n        v12 |= Number << i;\n      s = strtok_r(Number L, String, &save_ptr);\n    }\n  }\n  *(_WORD *)(a1 + Number) = Number;\n  *(_WORD *)(a1 + Number) = htons(Number);\n  <span class=\"supfact\">addr</span>.sa_family = Number;\n  snprintf(<span class=\"supfact\">addr</span>.sa_data, Number, String, a2);\n  v11 = bind(*(_DWORD *)(a1 + Number), &<span class=\"supfact\">addr</span>, Number);\n  if (!v11) {\n    if (v12 == Number)\n      v11 = pfring_set_channel_id(a1, Number L);\n    else\n      v11 = pfring_set_channel_id(a1, v12);\n    if (v11)\n      printf(String, v11);\n  }\n  return v11;\n}", "code_t": "int __cdecl pfring_bind(pfring *ring, char *device_name) {\n  char *pos;\n  sockaddr <span class=\"supfact\">sa</span>;\n  char *dash;\n  char *at;\n  int32_t i;\n  int32_t max_val;\n  int32_t min_val;\n  char *tok;\n  int rc;\n  int32_t channel_id;\n  channel_id = Number;\n  rc = Number;\n  if (!device_name || !strcmp(device_name, String))\n    return Number;\n  at = strchr(device_name, Number);\n  if (at) {\n    pos = Number L;\n    *at = Number;\n    tok = strtok_r(at + Number, String, &pos);\n    channel_id = Number;\n    while (tok) {\n      dash = strchr(tok, Number);\n      if (dash) {\n        *dash = Number;\n        min_val = atoi(tok);\n        max_val = atoi(dash + Number);\n      } else {\n        max_val = atoi(tok);\n        min_val = max_val;\n      }\n      for (i = min_val; i <= max_val; ++i)\n        channel_id |= Number << i;\n      tok = strtok_r(Number L, String, &pos);\n    }\n  }\n  ring->sock_tx.sll_family = Number;\n  ring->sock_tx.sll_protocol = htons(Number);\n  <span class=\"supfact\">sa</span>.sa_family = Number;\n  snprintf(<span class=\"supfact\">sa</span>.sa_data, Number, String, device_name);\n  rc = bind(ring->fd, &<span class=\"supfact\">sa</span>, Number);\n  if (!rc) {\n    if (channel_id == Number)\n      rc = pfring_set_channel_id(ring, Number);\n    else\n      rc = pfring_set_channel_id(ring, channel_id);\n    if (rc)\n      printf(String, (unsigned int)rc);\n  }\n  return rc;\n}", "var": [{"name": "addr", "type": "struct sockaddr { sa_family_t sa_family; char[14] sa_data; }", "ref_name": "sa", "ref_type": "struct sockaddr { sa_family_t sa_family; char[14] sa_data; }"}], "body_in_train": false}, {"repo_owner": "jmartif", "repo_name": "qemu", "path": "jmartif/qemu/7f177d07a1475ed6b137ade81192d93b27c72ac0525147afa5594d184350a419", "path_in_repo": "jmartif/qemu//hw/pci/pcie_aer.o", "objdump": "00000000000010b4 <pcie_aer_clear_error>:\n    10b4:\t55                   \tpush   %rbp\n    10b5:\t48 89 e5             \tmov    %rsp,%rbp\n    10b8:\t48 83 ec 60          \tsub    $0x60,%rsp\n    10bc:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n    10c0:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    10c7:\t00 00 \n    10c9:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    10cd:\t31 c0                \txor    %eax,%eax\n    10cf:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    10d3:\t48 8b 50 78          \tmov    0x78(%rax),%rdx\n    10d7:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    10db:\t0f b7 80 02 07 00 00 \tmovzwl 0x702(%rax),%eax\n    10e2:\t0f b7 c0             \tmovzwl %ax,%eax\n    10e5:\t48 01 d0             \tadd    %rdx,%rax\n    10e8:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    10ec:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    10f0:\t48 83 c0 18          \tadd    $0x18,%rax\n    10f4:\t48 89 c7             \tmov    %rax,%rdi\n    10f7:\te8 5e f1 ff ff       \tcallq  25a <pci_get_long>\n    10fc:\t89 45 bc             \tmov    %eax,-0x44(%rbp)\n    10ff:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1103:\t48 05 08 07 00 00    \tadd    $0x708,%rax\n    1109:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    110d:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    1110:\t25 00 04 00 00       \tand    $0x400,%eax\n    1115:\t85 c0                \ttest   %eax,%eax\n    1117:\t74 0c                \tje     1125 <pcie_aer_clear_error+0x71>\n    1119:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    111d:\t0f b7 00             \tmovzwl (%rax),%eax\n    1120:\t66 85 c0             \ttest   %ax,%ax\n    1123:\t75 0e                \tjne    1133 <pcie_aer_clear_error+0x7f>\n    1125:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1129:\t48 89 c7             \tmov    %rax,%rdi\n    112c:\te8 0e ff ff ff       \tcallq  103f <pcie_aer_clear_log>\n    1131:\teb 32                \tjmp    1165 <pcie_aer_clear_error+0xb1>\n    1133:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1137:\t48 89 c7             \tmov    %rax,%rdi\n    113a:\te8 7a f7 ff ff       \tcallq  8b9 <pcie_aer_update_uncor_status>\n    113f:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    1143:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1147:\t48 89 d6             \tmov    %rdx,%rsi\n    114a:\t48 89 c7             \tmov    %rax,%rdi\n    114d:\te8 fa f3 ff ff       \tcallq  54c <aer_log_del_err>\n    1152:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    1156:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    115a:\t48 89 d6             \tmov    %rdx,%rsi\n    115d:\t48 89 c7             \tmov    %rax,%rdi\n    1160:\te8 9d fc ff ff       \tcallq  e02 <pcie_aer_update_log>\n    1165:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1169:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    1170:\t00 00 \n    1172:\t74 05                \tje     1179 <pcie_aer_clear_error+0xc5>\n    1174:\te8 00 00 00 00       \tcallq  1179 <pcie_aer_clear_error+0xc5>\n    1179:\tc9                   \tleaveq \n    117a:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall pcie_aer_clear_error(__int64 a1) {\n  _WORD *v2;\n  _QWORD <span class=\"supfact\">v3</span>[Number];\n  unsigned __int64 v4;\n  v4 = __readfsqword(Number);\n  v2 = (_WORD *)(a1 + Number);\n  if ((pci_get_long((unsigned int *)(*(_QWORD *)(a1 + Number) +\n                                     *(unsigned __int16 *)(a1 + Number) +\n                                     Number L)) &\n       Number) != Number &&\n      *v2) {\n    pcie_aer_update_uncor_status(a1);\n    aer_log_del_err((__int64)v2, <span class=\"supfact\">v3</span>);\n    pcie_aer_update_log(a1, (__int64)<span class=\"supfact\">v3</span>);\n  } else {\n    pcie_aer_clear_log(a1);\n  }\n  return __readfsqword(Number) ^ v4;\n}", "code_t": "void __cdecl pcie_aer_clear_error(PCIDevice_0 *dev) {\n  PCIEAERLog_0 *aer_log;\n  PCIEAERErr_0 <span class=\"supfact\">err</span>;\n  unsigned __int64 v3;\n  v3 = __readfsqword(Number);\n  aer_log = &dev->exp.aer_log;\n  if ((pci_get_long(&dev->config[dev->exp.aer_cap + Number]) & Number) !=\n          Number &&\n      aer_log->log_num) {\n    pcie_aer_update_uncor_status(dev);\n    aer_log_del_err(aer_log, &<span class=\"supfact\">err</span>);\n    pcie_aer_update_log(dev, &<span class=\"supfact\">err</span>);\n  } else {\n    pcie_aer_clear_log(dev);\n  }\n}", "var": [{"name": "v3", "type": "struct PCIEAERErr_0 { uint32_t status; uint16_t source_id; uint16_t flags; uint32_t[4] header; uint32_t[4] prefix; }", "ref_name": "err", "ref_type": "struct PCIEAERErr_0 { uint32_t status; uint16_t source_id; uint16_t flags; uint32_t[4] header; uint32_t[4] prefix; }"}], "body_in_train": false}, {"repo_owner": "sekcheong", "repo_name": "tgrep2", "path": "sekcheong/tgrep2/c3c0148e6eda0ba194943c5c6d7d67ff9e34261f2c4b28a3de0963ab70b38733", "path_in_repo": "sekcheong/tgrep2//tgrep2", "objdump": "000000000040d459 <getUTime>:\n  40d459:\t55                   \tpush   %rbp\n  40d45a:\t48 89 e5             \tmov    %rsp,%rbp\n  40d45d:\t48 83 ec 10          \tsub    $0x10,%rsp\n  40d461:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n  40d465:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  40d46a:\t48 89 c7             \tmov    %rax,%rdi\n  40d46d:\te8 ee 4c ff ff       \tcallq  402160 <gettimeofday@plt>\n  40d472:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  40d476:\t48 89 c1             \tmov    %rax,%rcx\n  40d479:\t48 89 c8             \tmov    %rcx,%rax\n  40d47c:\t48 c1 e8 05          \tshr    $0x5,%rax\n  40d480:\t48 ba 7d 3f 35 5e ba \tmovabs $0x20c49ba5e353f7d,%rdx\n  40d487:\t49 0c 02 \n  40d48a:\t48 f7 e2             \tmul    %rdx\n  40d48d:\t48 69 c2 a0 0f 00 00 \timul   $0xfa0,%rdx,%rax\n  40d494:\t48 29 c1             \tsub    %rax,%rcx\n  40d497:\t48 89 c8             \tmov    %rcx,%rax\n  40d49a:\t48 69 c0 40 42 0f 00 \timul   $0xf4240,%rax,%rax\n  40d4a1:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  40d4a5:\t48 01 d0             \tadd    %rdx,%rax\n  40d4a8:\tc9                   \tleaveq \n  40d4a9:\tc3                   \tretq   ", "code_s": "unsigned __int64 getUTime() {\n  struct timeval <span class=\"supfact\">tv</span>;\n  gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n  return <span class=\"supfact\">tv</span>.tv_usec +\n         Number * (<span class=\"supfact\">tv</span>.tv_sec % Number);\n}", "code_t": "unsigned __int64 __cdecl getUTime() {\n  timeval <span class=\"supfact\">tv</span>;\n  gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n  return <span class=\"supfact\">tv</span>.tv_usec +\n         Number * (<span class=\"supfact\">tv</span>.tv_sec % Number);\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "tv", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "ChengyuSong", "repo_name": "lll-50", "path": "ChengyuSong/lll-50/9fd8a6f3cb4538608d641d1c0628fe42726329161b5d43c38db4c2d6036c74d4", "path_in_repo": "ChengyuSong/lll-50/tools/perf/bench/epoll-ctl.o", "objdump": "00000000000005d3 <init_fdmaps>:\n     5d3:\t55                   \tpush   %rbp\n     5d4:\t48 89 e5             \tmov    %rsp,%rbp\n     5d7:\t48 83 ec 30          \tsub    $0x30,%rsp\n     5db:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n     5df:\t89 75 d4             \tmov    %esi,-0x2c(%rbp)\n     5e2:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     5e9:\t00 00 \n     5eb:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     5ef:\t31 c0                \txor    %eax,%eax\n     5f1:\t83 7d d4 00          \tcmpl   $0x0,-0x2c(%rbp)\n     5f5:\t0f 84 88 00 00 00    \tje     683 <init_fdmaps+0xb0>\n     5fb:\tb8 64 00 00 00       \tmov    $0x64,%eax\n     600:\t99                   \tcltd   \n     601:\tf7 7d d4             \tidivl  -0x2c(%rbp)\n     604:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n     607:\tc7 45 e4 00 00 00 00 \tmovl   $0x0,-0x1c(%rbp)\n     60e:\teb 66                \tjmp    676 <init_fdmaps+0xa3>\n     610:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     614:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     618:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n     61b:\t48 c1 e2 02          \tshl    $0x2,%rdx\n     61f:\t48 01 d0             \tadd    %rdx,%rax\n     622:\t8b 00                \tmov    (%rax),%eax\n     624:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n     627:\tc7 45 ec 01 00 00 00 \tmovl   $0x1,-0x14(%rbp)\n     62e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     632:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     636:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n     639:\t48 c1 e2 02          \tshl    $0x2,%rdx\n     63d:\t48 01 d0             \tadd    %rdx,%rax\n     640:\t8b 10                \tmov    (%rax),%edx\n     642:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 648 <init_fdmaps+0x75>\n     648:\t48 8d 4d ec          \tlea    -0x14(%rbp),%rcx\n     64c:\tbe 01 00 00 00       \tmov    $0x1,%esi\n     651:\t89 c7                \tmov    %eax,%edi\n     653:\te8 00 00 00 00       \tcallq  658 <init_fdmaps+0x85>\n     658:\t85 c0                \ttest   %eax,%eax\n     65a:\t79 14                \tjns    670 <init_fdmaps+0x9d>\n     65c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     661:\tbf 01 00 00 00       \tmov    $0x1,%edi\n     666:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     66b:\te8 00 00 00 00       \tcallq  670 <init_fdmaps+0x9d>\n     670:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n     673:\t01 45 e4             \tadd    %eax,-0x1c(%rbp)\n     676:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 67c <init_fdmaps+0xa9>\n     67c:\t39 45 e4             \tcmp    %eax,-0x1c(%rbp)\n     67f:\t72 8f                \tjb     610 <init_fdmaps+0x3d>\n     681:\teb 01                \tjmp    684 <init_fdmaps+0xb1>\n     683:\t90                   \tnop\n     684:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     688:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n     68f:\t00 00 \n     691:\t74 05                \tje     698 <init_fdmaps+0xc5>\n     693:\te8 00 00 00 00       \tcallq  698 <init_fdmaps+0xc5>\n     698:\tc9                   \tleaveq \n     699:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall init_fdmaps(__int64 a1, int a2) {\n  unsigned int i;\n  struct epoll_event <span class=\"supfact\">event</span>;\n  unsigned __int64 v5;\n  v5 = __readfsqword(Number);\n  if (a2) {\n    for (i = Number; i < (unsigned int)nfds; i += Number / a2) {\n      <span class=\"supfact\">event</span>.data.fd =\n          *(_DWORD *)(Number L * i + *(_QWORD *)(a1 + Number));\n      <span class=\"supfact\">event</span>.events = Number;\n      if (epoll_ctl(epollfd, Number,\n                    *(_DWORD *)(Number L * i + *(_QWORD *)(a1 + Number)),\n                    &<span class=\"supfact\">event</span>) < Number)\n        err(Number, String);\n    }\n  }\n  return __readfsqword(Number) ^ v5;\n}", "code_t": "void __cdecl init_fdmaps(worker *w, int pct) {\n  unsigned int i;\n  epoll_event <span class=\"supfact\">ev</span>;\n  unsigned __int64 v4;\n  v4 = __readfsqword(Number);\n  if (pct) {\n    for (i = Number; i < (unsigned int)nfds; i += Number / pct) {\n      <span class=\"supfact\">ev</span>.data.fd = w->fdmap[i];\n      <span class=\"supfact\">ev</span>.events = Number;\n      if (epoll_ctl(epollfd, Number, w->fdmap[i], &<span class=\"supfact\">ev</span>) < Number)\n        err(Number, String);\n    }\n  }\n}", "var": [{"name": "event", "type": "struct epoll_event { uint32_t events; epoll_data_t data; }", "ref_name": "ev", "ref_type": "struct epoll_event { uint32_t events; epoll_data_t data; }"}], "body_in_train": false}, {"repo_owner": "christoph-husse", "repo_name": "isynth", "path": "christoph-husse/isynth/a6c0476d37fab0a2016b706bb595a9db57bad22bae2083133c2d1eeb6cb12f1c", "path_in_repo": "christoph-husse/isynth/dependencies/juce/extras/Introjucer/Builds/Linux/build/intermediate/Debug/juce_events_584896b4.o", "objdump": "", "code_s": "void __fastcall juce MultiTimer ~MultiTimer(juce MultiTimer *this) {\n  char <span class=\"supfact\">v1</span>[Number]; * ( _QWORD * ) this = ( unsigned int ) ( ( _DWORD ) & ` vtable for ' juce MultiTimer + Number ) ; juce GenericScopedLock < juce SpinLock > GenericScopedLock ( <span class=\"supfact\">v1</span> , ( char * ) this + Number ) ; juce OwnedArray < juce Timer , juce DummyCriticalSection > clear ( ( char * ) this + Number , Number L ) ; juce GenericScopedLock < juce SpinLock > ~ GenericScopedLock ( <span class=\"supfact\">v1</span> ) ; juce OwnedArray < juce Timer , juce DummyCriticalSection > ~ OwnedArray ( ( char * ) this + Number ) ; juce SpinLock ~ SpinLock ( ( char * ) this + Number ) ; }", "code_t": "void __cdecl juce MultiTimer ~MultiTimer(juce MultiTimer *const this) {\n  juce SpinLock ScopedLockType <span class=\"supfact\">sl</span>; this -> _vptr_MultiTimer = ( int ( * * ) ( ... ) ) ( unsigned int ) ( ( _DWORD ) & ` vtable for ' juce MultiTimer + Number ) ; juce GenericScopedLock < juce SpinLock > GenericScopedLock ( & <span class=\"supfact\">sl</span> , & this -> timerListLock ) ; juce OwnedArray < juce Timer , juce DummyCriticalSection > clear ( & this -> timers , Number ) ; juce GenericScopedLock < juce SpinLock > ~ GenericScopedLock ( & <span class=\"supfact\">sl</span> ) ; juce OwnedArray < juce Timer , juce DummyCriticalSection > ~ OwnedArray ( & this -> timers ) ; juce SpinLock ~ SpinLock ( & this -> timerListLock ) ; }", "var": [{"name": "v1", "type": "struct juce::SpinLock::ScopedLockType { const juce::SpinLock * lock_; }", "ref_name": "sl", "ref_type": "struct juce::SpinLock::ScopedLockType { const juce::SpinLock * lock_; }"}], "body_in_train": false}, {"repo_owner": "Wesley-Jzy", "repo_name": "icslabs", "path": "Wesley-Jzy/icslabs/4f3ff74323298514f8e720996f389736a7bb5e4c4cbf10892a815a8ff06fad0e", "path_in_repo": "Wesley-Jzy/icslabs/lab10/proxy.o", "objdump": "0000000000000395 <thread>:\n 395:\t55                   \tpush   %rbp\n 396:\t48 89 e5             \tmov    %rsp,%rbp\n 399:\t48 83 ec 30          \tsub    $0x30,%rsp\n 39d:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n 3a1:\te8 00 00 00 00       \tcallq  3a6 <thread+0x11>\n 3a6:\t89 c6                \tmov    %eax,%esi\n 3a8:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 3ad:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 3b2:\te8 00 00 00 00       \tcallq  3b7 <thread+0x22>\n 3b7:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 3bb:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 3bf:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 3c3:\t8b 00                \tmov    (%rax),%eax\n 3c5:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n 3c8:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 3cc:\t48 8b 50 0c          \tmov    0xc(%rax),%rdx\n 3d0:\t48 8b 40 04          \tmov    0x4(%rax),%rax\n 3d4:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 3d8:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n 3dc:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 3e0:\t48 89 c7             \tmov    %rax,%rdi\n 3e3:\te8 00 00 00 00       \tcallq  3e8 <thread+0x53>\n 3e8:\te8 00 00 00 00       \tcallq  3ed <thread+0x58>\n 3ed:\t48 89 c7             \tmov    %rax,%rdi\n 3f0:\te8 00 00 00 00       \tcallq  3f5 <thread+0x60>\n 3f5:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n 3f9:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n 3fc:\t48 89 d6             \tmov    %rdx,%rsi\n 3ff:\t89 c7                \tmov    %eax,%edi\n 401:\te8 00 00 00 00       \tcallq  406 <thread+0x71>\n 406:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n 409:\t89 c7                \tmov    %eax,%edi\n 40b:\te8 00 00 00 00       \tcallq  410 <thread+0x7b>\n 410:\t90                   \tnop\n 411:\tc9                   \tleaveq \n 412:\tc3                   \tretq   ", "code_s": "__int64 __fastcall thread(char *a1) {\n  unsigned int v1;\n  __int64 v2;\n  __int64 v3;\n  __int64 <span class=\"supfact\">v5</span>[Number];\n  unsigned int v6;\n  char *v7;\n  v1 = Pthread_self();\n  printf(String, v1);\n  v7 = a1;\n  v6 = *(_DWORD *)a1;\n  v2 = *(_QWORD *)(a1 + Number);\n  <span class=\"supfact\">v5</span>[Number] = *(_QWORD *)(a1 + Number);\n  <span class=\"supfact\">v5</span>[Number] = v2;\n  free(a1);\n  v3 = Pthread_self();\n  Pthread_detach(v3);\n  serve(v6, (__int64)<span class=\"supfact\">v5</span>);\n  return Close(v6);\n}", "code_t": "void *__cdecl thread(void *vargp) {\n  unsigned int v1;\n  __int64 v2;\n  __int64 v3;\n  sockaddr_in <span class=\"supfact\">client_addr</span>;\n  int connfd;\n  serve_arg *arg;\n  v1 = Pthread_self();\n  printf(String, v1);\n  arg = (serve_arg *)vargp;\n  connfd = *(_DWORD *)vargp;\n  v2 = *(_QWORD *)((char *)vargp + Number);\n  *(_QWORD *)&<span class=\"supfact\">client_addr</span>.sin_family =\n      *(_QWORD *)((char *)vargp + Number);\n  *(_QWORD *)<span class=\"supfact\">client_addr</span>.sin_zero = v2;\n  free(vargp);\n  v3 = Pthread_self();\n  Pthread_detach(v3);\n  serve(connfd, &<span class=\"supfact\">client_addr</span>);\n  return (void *)Close((unsigned int)connfd);\n}", "var": [{"name": "v5", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "client_addr", "ref_type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }"}], "body_in_train": false}, {"repo_owner": "bigbluesky123", "repo_name": "decaf-platform", "path": "bigbluesky123/decaf-platform/d7bce523daa6d847a48e99e4aefacbcf892d5f860ef0450f760cbe00a26adff8", "path_in_repo": "bigbluesky123/decaf-platform//libhw32/9pfs/virtio-9p.o", "objdump": "000000000000975e <v9fs_lock>:\n    975e:\t55                   \tpush   %rbp\n    975f:\t48 89 e5             \tmov    %rsp,%rbp\n    9762:\t48 81 ec f0 00 00 00 \tsub    $0xf0,%rsp\n    9769:\t48 89 bd 18 ff ff ff \tmov    %rdi,-0xe8(%rbp)\n    9770:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    9777:\t00 00 \n    9779:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    977d:\t31 c0                \txor    %eax,%eax\n    977f:\t48 c7 85 38 ff ff ff \tmovq   $0x7,-0xc8(%rbp)\n    9786:\t07 00 00 00 \n    978a:\tc7 85 34 ff ff ff 00 \tmovl   $0x0,-0xcc(%rbp)\n    9791:\t00 00 00 \n    9794:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n    979b:\t48 89 85 40 ff ff ff \tmov    %rax,-0xc0(%rbp)\n    97a2:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    97a9:\t48 8b 80 28 a0 00 00 \tmov    0xa028(%rax),%rax\n    97b0:\t48 89 85 48 ff ff ff \tmov    %rax,-0xb8(%rbp)\n    97b7:\tbf 30 00 00 00       \tmov    $0x30,%edi\n    97bc:\te8 00 00 00 00       \tcallq  97c1 <v9fs_lock+0x63>\n    97c1:\t48 89 85 50 ff ff ff \tmov    %rax,-0xb0(%rbp)\n    97c8:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    97cf:\t4c 8d 48 20          \tlea    0x20(%rax),%r9\n    97d3:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    97da:\t4c 8d 40 18          \tlea    0x18(%rax),%r8\n    97de:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    97e5:\t48 8d 78 10          \tlea    0x10(%rax),%rdi\n    97e9:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    97f0:\t48 8d 48 08          \tlea    0x8(%rax),%rcx\n    97f4:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    97fb:\t4c 8d 58 04          \tlea    0x4(%rax),%r11\n    97ff:\t4c 8b 95 50 ff ff ff \tmov    -0xb0(%rbp),%r10\n    9806:\t48 8d 95 30 ff ff ff \tlea    -0xd0(%rbp),%rdx\n    980d:\t48 8b b5 38 ff ff ff \tmov    -0xc8(%rbp),%rsi\n    9814:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    981b:\t41 51                \tpush   %r9\n    981d:\t41 50                \tpush   %r8\n    981f:\t57                   \tpush   %rdi\n    9820:\t51                   \tpush   %rcx\n    9821:\t4d 89 d9             \tmov    %r11,%r9\n    9824:\t4d 89 d0             \tmov    %r10,%r8\n    9827:\t48 89 d1             \tmov    %rdx,%rcx\n    982a:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 9831 <v9fs_lock+0xd3>\n    9831:\t48 89 c7             \tmov    %rax,%rdi\n    9834:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9839:\te8 a4 8f ff ff       \tcallq  27e2 <pdu_unmarshal>\n    983e:\t48 83 c4 20          \tadd    $0x20,%rsp\n    9842:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    9849:\t4c 8b 40 10          \tmov    0x10(%rax),%r8\n    984d:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    9854:\t48 8b 78 08          \tmov    0x8(%rax),%rdi\n    9858:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    985f:\t0f b6 00             \tmovzbl (%rax),%eax\n    9862:\t0f b6 c8             \tmovzbl %al,%ecx\n    9865:\t8b 95 30 ff ff ff    \tmov    -0xd0(%rbp),%edx\n    986b:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    9872:\t0f b6 40 06          \tmovzbl 0x6(%rax),%eax\n    9876:\t0f b6 f0             \tmovzbl %al,%esi\n    9879:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    9880:\t0f b7 40 04          \tmovzwl 0x4(%rax),%eax\n    9884:\t0f b7 c0             \tmovzwl %ax,%eax\n    9887:\t4d 89 c1             \tmov    %r8,%r9\n    988a:\t49 89 f8             \tmov    %rdi,%r8\n    988d:\t89 c7                \tmov    %eax,%edi\n    988f:\te8 ea 72 ff ff       \tcallq  b7e <trace_v9fs_lock>\n    9894:\tc6 85 2f ff ff ff 02 \tmovb   $0x2,-0xd1(%rbp)\n    989b:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    98a2:\t8b 40 04             \tmov    0x4(%rax),%eax\n    98a5:\t83 e0 fe             \tand    $0xfffffffe,%eax\n    98a8:\t85 c0                \ttest   %eax,%eax\n    98aa:\t74 0f                \tje     98bb <v9fs_lock+0x15d>\n    98ac:\tc7 85 34 ff ff ff ea \tmovl   $0xffffffea,-0xcc(%rbp)\n    98b3:\tff ff ff \n    98b6:\te9 86 00 00 00       \tjmpq   9941 <v9fs_lock+0x1e3>\n    98bb:\t8b 95 30 ff ff ff    \tmov    -0xd0(%rbp),%edx\n    98c1:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    98c8:\t89 d6                \tmov    %edx,%esi\n    98ca:\t48 89 c7             \tmov    %rax,%rdi\n    98cd:\te8 f7 7d ff ff       \tcallq  16c9 <get_fid>\n    98d2:\t48 89 85 58 ff ff ff \tmov    %rax,-0xa8(%rbp)\n    98d9:\t48 83 bd 58 ff ff ff \tcmpq   $0x0,-0xa8(%rbp)\n    98e0:\t00 \n    98e1:\t75 0c                \tjne    98ef <v9fs_lock+0x191>\n    98e3:\tc7 85 34 ff ff ff fe \tmovl   $0xfffffffe,-0xcc(%rbp)\n    98ea:\tff ff ff \n    98ed:\teb 52                \tjmp    9941 <v9fs_lock+0x1e3>\n    98ef:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n    98f6:\t48 8b 8d 58 ff ff ff \tmov    -0xa8(%rbp),%rcx\n    98fd:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    9904:\t48 89 ce             \tmov    %rcx,%rsi\n    9907:\t48 89 c7             \tmov    %rax,%rdi\n    990a:\te8 00 00 00 00       \tcallq  990f <v9fs_lock+0x1b1>\n    990f:\t89 85 34 ff ff ff    \tmov    %eax,-0xcc(%rbp)\n    9915:\t83 bd 34 ff ff ff 00 \tcmpl   $0x0,-0xcc(%rbp)\n    991c:\t78 09                \tjs     9927 <v9fs_lock+0x1c9>\n    991e:\tc6 85 2f ff ff ff 00 \tmovb   $0x0,-0xd1(%rbp)\n    9925:\teb 01                \tjmp    9928 <v9fs_lock+0x1ca>\n    9927:\t90                   \tnop\n    9928:\t48 8b 95 58 ff ff ff \tmov    -0xa8(%rbp),%rdx\n    992f:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    9936:\t48 89 d6             \tmov    %rdx,%rsi\n    9939:\t48 89 c7             \tmov    %rax,%rdi\n    993c:\te8 a0 81 ff ff       \tcallq  1ae1 <put_fid>\n    9941:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    9948:\t89 85 34 ff ff ff    \tmov    %eax,-0xcc(%rbp)\n    994e:\t0f be 95 2f ff ff ff \tmovsbl -0xd1(%rbp),%edx\n    9955:\t48 8b b5 38 ff ff ff \tmov    -0xc8(%rbp),%rsi\n    995c:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    9963:\t89 d1                \tmov    %edx,%ecx\n    9965:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 996c <v9fs_lock+0x20e>\n    996c:\t48 89 c7             \tmov    %rax,%rdi\n    996f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9974:\te8 c9 96 ff ff       \tcallq  3042 <pdu_marshal>\n    9979:\t89 c2                \tmov    %eax,%edx\n    997b:\t8b 85 34 ff ff ff    \tmov    -0xcc(%rbp),%eax\n    9981:\t01 d0                \tadd    %edx,%eax\n    9983:\t89 85 34 ff ff ff    \tmov    %eax,-0xcc(%rbp)\n    9989:\t0f be 95 2f ff ff ff \tmovsbl -0xd1(%rbp),%edx\n    9990:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    9997:\t0f b6 40 06          \tmovzbl 0x6(%rax),%eax\n    999b:\t0f b6 c8             \tmovzbl %al,%ecx\n    999e:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    99a5:\t0f b7 40 04          \tmovzwl 0x4(%rax),%eax\n    99a9:\t0f b7 c0             \tmovzwl %ax,%eax\n    99ac:\t89 ce                \tmov    %ecx,%esi\n    99ae:\t89 c7                \tmov    %eax,%edi\n    99b0:\te8 14 72 ff ff       \tcallq  bc9 <trace_v9fs_lock_return>\n    99b5:\t8b 85 34 ff ff ff    \tmov    -0xcc(%rbp),%eax\n    99bb:\t48 63 d0             \tmovslq %eax,%rdx\n    99be:\t48 8b 8d 40 ff ff ff \tmov    -0xc0(%rbp),%rcx\n    99c5:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    99cc:\t48 89 ce             \tmov    %rcx,%rsi\n    99cf:\t48 89 c7             \tmov    %rax,%rdi\n    99d2:\te8 63 9f ff ff       \tcallq  393a <complete_pdu>\n    99d7:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    99de:\t48 83 c0 20          \tadd    $0x20,%rax\n    99e2:\t48 89 c7             \tmov    %rax,%rdi\n    99e5:\te8 00 00 00 00       \tcallq  99ea <v9fs_lock+0x28c>\n    99ea:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    99f1:\t48 89 c7             \tmov    %rax,%rdi\n    99f4:\te8 00 00 00 00       \tcallq  99f9 <v9fs_lock+0x29b>\n    99f9:\t90                   \tnop\n    99fa:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    99fe:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    9a05:\t00 00 \n    9a07:\t74 05                \tje     9a0e <v9fs_lock+0x2b0>\n    9a09:\te8 00 00 00 00       \tcallq  9a0e <v9fs_lock+0x2b0>\n    9a0e:\tc9                   \tleaveq \n    9a0f:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall v9fs_lock(__int64 a1) {\n  __int64 v1;\n  __int64 v2;\n  int v3;\n  __int64 v4;\n  __int64 v5;\n  char v7;\n  unsigned int v8;\n  int v9;\n  __int64 v10;\n  __int64 v11;\n  __int64 v12;\n  unsigned __int8 *v13;\n  _DWORD *v14;\n  char <span class=\"supfact\">v15</span>[Number];\n  unsigned __int64 v16;\n  v16 = __readfsqword(Number);\n  v10 = Number L;\n  v9 = Number;\n  v11 = a1;\n  v12 = *(_QWORD *)(a1 + Number);\n  v13 = (unsigned __int8 *)g_malloc(Number L);\n  pdu_unmarshal(a1, Number L, (__int64)String, (__int64)&v8, (__int64)v13,\n                (__int64)(v13 + Number), v13 + Number, v13 + Number,\n                v13 + Number, v13 + Number);\n  trace_v9fs_lock(*(unsigned __int16 *)(v11 + Number),\n                  *(unsigned __int8 *)(v11 + Number), v8, *v13,\n                  *((_QWORD *)v13 + Number), *((_QWORD *)v13 + Number));\n  v7 = Number;\n  if ((*((_DWORD *)v13 + Number) & Number) != Number) {\n    v9 = Number;\n  } else {\n    v14 = (_DWORD *)get_fid(v11, v8);\n    if (v14) {\n      v9 = v9fs_co_fstat(v11, v14, <span class=\"supfact\">v15</span>);\n      if (v9 >= Number)\n        v7 = Number;\n      put_fid(v11, v14);\n    } else {\n      v9 = Number;\n    }\n  }\n  v9 = v10;\n  v3 = pdu_marshal(v11, v10, (__int64)String, (unsigned int)v7, v1, v2);\n  v9 += v3;\n  trace_v9fs_lock_return(*(unsigned __int16 *)(v11 + Number),\n                         *(unsigned __int8 *)(v11 + Number), (unsigned int)v7);\n  complete_pdu(v12, v11, v9, v11, v4, v5);\n  v9fs_string_free((__int64)(v13 + Number));\n  g_free(v13);\n  return __readfsqword(Number) ^ v16;\n}", "code_t": "void __cdecl v9fs_lock(void *opaque) {\n  int v1;\n  int8_t status;\n  int32_t fid;\n  int32_t err;\n  size_t offset;\n  V9fsPDU_0 *pdu;\n  V9fsState_0 *s;\n  V9fsFlock_0 *flock;\n  V9fsFidState_0 *fidp;\n  stat <span class=\"supfact\">stbuf</span>;\n  unsigned __int64 v11;\n  v11 = __readfsqword(Number);\n  offset = Number L;\n  err = Number;\n  pdu = (V9fsPDU_0 *)opaque;\n  s = (V9fsState_0 *)*((_QWORD *)opaque + Number);\n  flock = (V9fsFlock_0 *)g_malloc(Number L);\n  pdu_unmarshal((V9fsPDU_0 *)opaque, Number, String, &fid, flock, &flock->flags,\n                &flock->start, &flock->length, &flock->proc_id,\n                &flock->client_id);\n  trace_v9fs_lock(pdu->tag, pdu->id, fid, flock->type, flock->start,\n                  flock->length);\n  status = Number;\n  if ((flock->flags & Number) != Number) {\n    err = Number;\n  } else {\n    fidp = get_fid(pdu, fid);\n    if (fidp) {\n      err = v9fs_co_fstat(pdu, fidp, &<span class=\"supfact\">stbuf</span>);\n      if (err >= Number)\n        status = Number;\n      put_fid(pdu, fidp);\n    } else {\n      err = Number;\n    }\n  }\n  err = offset;\n  v1 = pdu_marshal(pdu, offset, String, (unsigned int)status);\n  err += v1;\n  trace_v9fs_lock_return(pdu->tag, pdu->id, status);\n  complete_pdu(s, pdu, err);\n  v9fs_string_free(&flock->client_id);\n  g_free(flock);\n}", "var": [{"name": "v15", "type": "char[128]", "ref_name": "stbuf", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/06598c09babb55e178e8c8c3155b037a828ea5bef219725349a6c3eae0c73702", "path_in_repo": "XanClic/qemu//hw/scsi/scsi-generic.o", "objdump": "0000000000000898 <_nocheck__trace_scsi_generic_realize_type>:\n     898:\t55                   \tpush   %rbp\n     899:\t48 89 e5             \tmov    %rsp,%rbp\n     89c:\t41 54                \tpush   %r12\n     89e:\t53                   \tpush   %rbx\n     89f:\t48 83 ec 30          \tsub    $0x30,%rsp\n     8a3:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n     8a6:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     8ad:\t00 00 \n     8af:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     8b3:\t31 c0                \txor    %eax,%eax\n     8b5:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 8bb <_nocheck__trace_scsi_generic_realize_type+0x23>\n     8bb:\t85 c0                \ttest   %eax,%eax\n     8bd:\t0f 95 c0             \tsetne  %al\n     8c0:\t0f b6 c0             \tmovzbl %al,%eax\n     8c3:\t48 85 c0             \ttest   %rax,%rax\n     8c6:\t74 5d                \tje     925 <_nocheck__trace_scsi_generic_realize_type+0x8d>\n     8c8:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 8cf <_nocheck__trace_scsi_generic_realize_type+0x37>\n     8cf:\t66 85 c0             \ttest   %ax,%ax\n     8d2:\t74 51                \tje     925 <_nocheck__trace_scsi_generic_realize_type+0x8d>\n     8d4:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n     8d9:\te8 0d fa ff ff       \tcallq  2eb <qemu_loglevel_mask>\n     8de:\t84 c0                \ttest   %al,%al\n     8e0:\t74 43                \tje     925 <_nocheck__trace_scsi_generic_realize_type+0x8d>\n     8e2:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     8e6:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     8eb:\t48 89 c7             \tmov    %rax,%rdi\n     8ee:\te8 00 00 00 00       \tcallq  8f3 <_nocheck__trace_scsi_generic_realize_type+0x5b>\n     8f3:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     8f7:\t49 89 c4             \tmov    %rax,%r12\n     8fa:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     8fe:\t48 89 c3             \tmov    %rax,%rbx\n     901:\te8 00 00 00 00       \tcallq  906 <_nocheck__trace_scsi_generic_realize_type+0x6e>\n     906:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n     909:\t41 89 d0             \tmov    %edx,%r8d\n     90c:\t4c 89 e1             \tmov    %r12,%rcx\n     90f:\t48 89 da             \tmov    %rbx,%rdx\n     912:\t89 c6                \tmov    %eax,%esi\n     914:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 91b <_nocheck__trace_scsi_generic_realize_type+0x83>\n     91b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     920:\te8 00 00 00 00       \tcallq  925 <_nocheck__trace_scsi_generic_realize_type+0x8d>\n     925:\t90                   \tnop\n     926:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     92a:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n     931:\t00 00 \n     933:\t74 05                \tje     93a <_nocheck__trace_scsi_generic_realize_type+0xa2>\n     935:\te8 00 00 00 00       \tcallq  93a <_nocheck__trace_scsi_generic_realize_type+0xa2>\n     93a:\t48 83 c4 30          \tadd    $0x30,%rsp\n     93e:\t5b                   \tpop    %rbx\n     93f:\t41 5c                \tpop    %r12\n     941:\t5d                   \tpop    %rbp\n     942:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_scsi_generic_realize_type(\n    unsigned int a1) {\n  __suseconds_t v1;\n  __time_t v2;\n  unsigned int v3;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v6;\n  v6 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_SCSI_GENERIC_REALIZE_TYPE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v1 = <span class=\"supfact\">tv</span>.tv_usec;\n    v2 = <span class=\"supfact\">tv</span>.tv_sec;\n    v3 = qemu_get_thread_id();\n    qemu_log(String, v3, v2, v1, a1);\n  }\n  return __readfsqword(Number) ^ v6;\n}", "code_t": "void __cdecl nocheck__trace_scsi_generic_realize_type(int type) {\n  __suseconds_t v1;\n  __time_t v2;\n  unsigned int v3;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v5;\n  v5 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_SCSI_GENERIC_REALIZE_TYPE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v1 = <span class=\"supfact\">_now</span>.tv_usec;\n    v2 = <span class=\"supfact\">_now</span>.tv_sec;\n    v3 = qemu_get_thread_id();\n    qemu_log(String, v3, v2, v1, (unsigned int)type);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "ireader", "repo_name": "sdk", "path": "ireader/sdk/8cfb4007e0f9c4befce6030950fa80504c913159a90ef69ae7f988acf2219141", "path_in_repo": "ireader/sdk//source/port/aio-socket-epoll.o", "objdump": "000000000000108f <epoll_recv_v>:\n    108f:\t55                   \tpush   %rbp\n    1090:\t48 89 e5             \tmov    %rsp,%rbp\n    1093:\t53                   \tpush   %rbx\n    1094:\t48 83 ec 58          \tsub    $0x58,%rsp\n    1098:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n    109c:\t89 75 a4             \tmov    %esi,-0x5c(%rbp)\n    109f:\t89 55 a0             \tmov    %edx,-0x60(%rbp)\n    10a2:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    10a6:\tba 38 00 00 00       \tmov    $0x38,%edx\n    10ab:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    10b0:\t48 89 c7             \tmov    %rax,%rdi\n    10b3:\te8 00 00 00 00       \tcallq  10b8 <epoll_recv_v+0x29>\n    10b8:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    10bc:\t48 8b 40 50          \tmov    0x50(%rax),%rax\n    10c0:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    10c4:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    10c8:\t8b 40 58             \tmov    0x58(%rax),%eax\n    10cb:\t48 98                \tcltq   \n    10cd:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    10d1:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    10d5:\t8b 40 10             \tmov    0x10(%rax),%eax\n    10d8:\t48 8d 4d b0          \tlea    -0x50(%rbp),%rcx\n    10dc:\tba 00 00 00 00       \tmov    $0x0,%edx\n    10e1:\t48 89 ce             \tmov    %rcx,%rsi\n    10e4:\t89 c7                \tmov    %eax,%edi\n    10e6:\te8 00 00 00 00       \tcallq  10eb <epoll_recv_v+0x5c>\n    10eb:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    10ef:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    10f4:\t78 25                \tjs     111b <epoll_recv_v+0x8c>\n    10f6:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    10fa:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    10fe:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    1102:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1106:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n    110a:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    110f:\t48 89 c7             \tmov    %rax,%rdi\n    1112:\tff d1                \tcallq  *%rcx\n    1114:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1119:\teb 37                \tjmp    1152 <epoll_recv_v+0xc3>\n    111b:\t83 7d a4 00          \tcmpl   $0x0,-0x5c(%rbp)\n    111f:\t75 09                \tjne    112a <epoll_recv_v+0x9b>\n    1121:\te8 00 00 00 00       \tcallq  1126 <epoll_recv_v+0x97>\n    1126:\t8b 00                \tmov    (%rax),%eax\n    1128:\teb 28                \tjmp    1152 <epoll_recv_v+0xc3>\n    112a:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    112e:\t48 8b 58 40          \tmov    0x40(%rax),%rbx\n    1132:\te8 00 00 00 00       \tcallq  1137 <epoll_recv_v+0xa8>\n    1137:\t8b 08                \tmov    (%rax),%ecx\n    1139:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    113d:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n    1141:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1146:\t89 ce                \tmov    %ecx,%esi\n    1148:\t48 89 c7             \tmov    %rax,%rdi\n    114b:\tff d3                \tcallq  *%rbx\n    114d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1152:\t48 83 c4 58          \tadd    $0x58,%rsp\n    1156:\t5b                   \tpop    %rbx\n    1157:\t5d                   \tpop    %rbp\n    1158:\tc3                   \tretq   ", "code_s": "__int64 __fastcall epoll_recv_v(__int64 a1, int a2) {\n  __int64 result;\n  void(__fastcall * v3)(_QWORD, _QWORD, _QWORD);\n  int *v4;\n  struct msghdr <span class=\"supfact\">s</span>;\n  ssize_t v6;\n  memset(&<span class=\"supfact\">s</span>, Number, sizeof(<span class=\"supfact\">s</span>));\n  <span class=\"supfact\">s</span>.msg_iov = *(iovec **)(a1 + Number);\n  <span class=\"supfact\">s</span>.msg_iovlen = *(int *)(a1 + Number);\n  v6 = recvmsg(*(_DWORD *)(a1 + Number), &<span class=\"supfact\">s</span>, Number);\n  if (v6 < Number) {\n    if (a2) {\n      v3 = *(void(__fastcall **)(_QWORD, _QWORD, _QWORD))(a1 + Number);\n      v4 = _errno_location();\n      v3(*(_QWORD *)(a1 + Number), (unsigned int)*v4, Number L);\n      result = Number L;\n    } else {\n      result = (unsigned int)*_errno_location();\n    }\n  } else {\n    (*(void(__fastcall **)(_QWORD, _QWORD, ssize_t))(a1 + Number))(\n        *(_QWORD *)(a1 + Number), Number L, v6);\n    result = Number L;\n  }\n  return result;\n}", "code_t": "int __cdecl epoll_recv_v(epoll_context *ctx, int flags, int error) {\n  int result;\n  aio_onaccept v4;\n  int *v5;\n  msghdr <span class=\"supfact\">msg</span>;\n  ssize_t r;\n  memset(&<span class=\"supfact\">msg</span>, Number, sizeof(<span class=\"supfact\">msg</span>));\n  <span class=\"supfact\">msg</span>.msg_iov = ctx->in.recv_v.vec;\n  <span class=\"supfact\">msg</span>.msg_iovlen = ctx->in.recv_v.n;\n  r = recvmsg(ctx->socket, &<span class=\"supfact\">msg</span>, Number);\n  if (r < Number) {\n    if (flags) {\n      v4 = ctx->in.accept.proc;\n      v5 = _errno_location();\n      ((void(__fastcall *)(void *, _QWORD, _QWORD))v4)(\n          ctx->in.accept.param, (unsigned int)*v5, Number L);\n      result = Number;\n    } else {\n      result = *_errno_location();\n    }\n  } else {\n    ((void(__fastcall *)(void *, _QWORD, ssize_t))ctx->in.accept.proc)(\n        ctx->in.accept.param, Number L, r);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "s", "type": "struct msghdr { void * msg_name; socklen_t msg_namelen; PADDING (4); iovec * msg_iov; size_t msg_iovlen; void * msg_control; size_t msg_controllen; int msg_flags; PADDING (4); }", "ref_name": "msg", "ref_type": "struct msghdr { void * msg_name; socklen_t msg_namelen; PADDING (4); iovec * msg_iov; size_t msg_iovlen; void * msg_control; size_t msg_controllen; int msg_flags; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "ncopa", "repo_name": "pingu", "path": "ncopa/pingu/9e2349a9a23d88503260125a447c22f8adce371b859f6822daced8c7e770d23d", "path_in_repo": "ncopa/pingu/src/pingu_netlink.o", "objdump": "0000000000000687 <netlink_send>:\n     687:\t55                   \tpush   %rbp\n     688:\t48 89 e5             \tmov    %rsp,%rbp\n     68b:\t48 83 ec 70          \tsub    $0x70,%rsp\n     68f:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n     693:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n     697:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     69b:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n     69f:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     6a3:\t8b 00                \tmov    (%rax),%eax\n     6a5:\t89 c0                \tmov    %eax,%eax\n     6a7:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     6ab:\t48 c7 45 a0 00 00 00 \tmovq   $0x0,-0x60(%rbp)\n     6b2:\t00 \n     6b3:\t48 c7 45 a8 00 00 00 \tmovq   $0x0,-0x58(%rbp)\n     6ba:\t00 \n     6bb:\t48 c7 45 b0 00 00 00 \tmovq   $0x0,-0x50(%rbp)\n     6c2:\t00 \n     6c3:\t48 c7 45 b8 00 00 00 \tmovq   $0x0,-0x48(%rbp)\n     6ca:\t00 \n     6cb:\t48 c7 45 c0 00 00 00 \tmovq   $0x0,-0x40(%rbp)\n     6d2:\t00 \n     6d3:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n     6da:\t00 \n     6db:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n     6e2:\t00 \n     6e3:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n     6e7:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n     6eb:\tc7 45 a8 0c 00 00 00 \tmovl   $0xc,-0x58(%rbp)\n     6f2:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     6f6:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n     6fa:\t48 c7 45 b8 01 00 00 \tmovq   $0x1,-0x48(%rbp)\n     701:\t00 \n     702:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n     706:\tba 0c 00 00 00       \tmov    $0xc,%edx\n     70b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     710:\t48 89 c7             \tmov    %rax,%rdi\n     713:\te8 00 00 00 00       \tcallq  718 <netlink_send+0x91>\n     718:\t66 c7 45 f0 10 00    \tmovw   $0x10,-0x10(%rbp)\n     71e:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n     722:\t8b 40 04             \tmov    0x4(%rax),%eax\n     725:\t8d 50 01             \tlea    0x1(%rax),%edx\n     728:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n     72c:\t89 50 04             \tmov    %edx,0x4(%rax)\n     72f:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n     733:\t8b 50 04             \tmov    0x4(%rax),%edx\n     736:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     73a:\t89 50 08             \tmov    %edx,0x8(%rax)\n     73d:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n     741:\t8b 00                \tmov    (%rax),%eax\n     743:\t48 8d 4d a0          \tlea    -0x60(%rbp),%rcx\n     747:\tba 00 00 00 00       \tmov    $0x0,%edx\n     74c:\t48 89 ce             \tmov    %rcx,%rsi\n     74f:\t89 c7                \tmov    %eax,%edi\n     751:\te8 00 00 00 00       \tcallq  756 <netlink_send+0xcf>\n     756:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n     759:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n     75d:\t79 11                \tjns    770 <netlink_send+0xe9>\n     75f:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     764:\te8 00 00 00 00       \tcallq  769 <netlink_send+0xe2>\n     769:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     76e:\teb 05                \tjmp    775 <netlink_send+0xee>\n     770:\tb8 01 00 00 00       \tmov    $0x1,%eax\n     775:\tc9                   \tleaveq \n     776:\tc3                   \tretq   ", "code_s": "__int64 __fastcall netlink_send(int *a1, unsigned int *a2) {\n  struct msghdr <span class=\"supfact\">message</span>;\n  __int64 <span class=\"supfact\">v4</span>[Number];\n  __int16 <span class=\"supfact\">s</span>[Number];\n  int v6;\n  <span class=\"supfact\">v4</span>[Number] = (__int64)a2;\n  <span class=\"supfact\">v4</span>[Number] = *a2;\n  *(_QWORD *)&<span class=\"supfact\">message</span>.msg_namelen = Number L;\n  <span class=\"supfact\">message</span>.msg_control = Number L;\n  <span class=\"supfact\">message</span>.msg_controllen = Number L;\n  *(_QWORD *)&<span class=\"supfact\">message</span>.msg_flags = Number L;\n  <span class=\"supfact\">message</span>.msg_name = <span class=\"supfact\">s</span>;\n  <span class=\"supfact\">message</span>.msg_iov = (iovec *)<span class=\"supfact\">v4</span>;\n  <span class=\"supfact\">message</span>.msg_iovlen = Number L;\n  memset(<span class=\"supfact\">s</span>, Number, sizeof(<span class=\"supfact\">s</span>));\n  <span class=\"supfact\">s</span>[Number] = Number;\n  a2[Number] = ++a1[Number];\n  v6 = sendmsg(*a1, &<span class=\"supfact\">message</span>, Number);\n  if (v6 >= Number)\n    return Number L;\n  log_perror(String);\n  return Number L;\n}", "code_t": "int __cdecl netlink_send(netlink_fd *fd, nlmsghdr *req) {\n  msghdr <span class=\"supfact\">msg</span>;\n  iovec <span class=\"supfact\">iov</span>;\n  sockaddr_nl <span class=\"supfact\">nladdr</span>;\n  int status;\n  <span class=\"supfact\">iov</span>.iov_base = req;\n  <span class=\"supfact\">iov</span>.iov_len = req->nlmsg_len;\n  *(_QWORD *)&<span class=\"supfact\">msg</span>.msg_namelen = Number L;\n  <span class=\"supfact\">msg</span>.msg_control = Number L;\n  <span class=\"supfact\">msg</span>.msg_controllen = Number L;\n  *(_QWORD *)&<span class=\"supfact\">msg</span>.msg_flags = Number L;\n  <span class=\"supfact\">msg</span>.msg_name = &<span class=\"supfact\">nladdr</span>;\n  <span class=\"supfact\">msg</span>.msg_iov = &<span class=\"supfact\">iov</span>;\n  <span class=\"supfact\">msg</span>.msg_iovlen = Number L;\n  memset(&<span class=\"supfact\">nladdr</span>, Number, sizeof(<span class=\"supfact\">nladdr</span>));\n  <span class=\"supfact\">nladdr</span>.nl_family = Number;\n  req->nlmsg_seq = ++fd->seq;\n  status = sendmsg(fd->fd, &<span class=\"supfact\">msg</span>, Number);\n  if (status >= Number)\n    return Number;\n  log_perror(String);\n  return Number;\n}", "var": [{"name": "s", "type": "struct sockaddr_nl { __kernel_sa_family_t nl_family; unsigned __int16 nl_pad; __u32 nl_pid; __u32 nl_groups; }", "ref_name": "nladdr", "ref_type": "struct sockaddr_nl { __kernel_sa_family_t nl_family; unsigned __int16 nl_pad; __u32 nl_pid; __u32 nl_groups; }"}, {"name": "v4", "type": "struct iovec { void * iov_base; size_t iov_len; }", "ref_name": "iov", "ref_type": "struct iovec { void * iov_base; size_t iov_len; }"}, {"name": "message", "type": "struct msghdr { void * msg_name; socklen_t msg_namelen; PADDING (4); iovec * msg_iov; size_t msg_iovlen; void * msg_control; size_t msg_controllen; int msg_flags; PADDING (4); }", "ref_name": "msg", "ref_type": "struct msghdr { void * msg_name; socklen_t msg_namelen; PADDING (4); iovec * msg_iov; size_t msg_iovlen; void * msg_control; size_t msg_controllen; int msg_flags; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "mortang2410", "repo_name": "tabbed", "path": "mortang2410/tabbed/e279090c2caeb8b1774673ac9f4e718cfaae2b813169344649b6592c5ce6d8a0", "path_in_repo": "mortang2410/tabbed//tabbed", "objdump": "", "code_s": "int __fastcall sub_405915(Window a1, char *a2) {\n  int result;\n  char *list;\n  Window v4;\n  XTextProperty <span class=\"supfact\">text_prop_return</span>;\n  v4 = a1;\n  list = a2;\n  result = XmbTextListToTextProperty(display, &list, Number, XCompoundTextStyle,\n                                     &<span class=\"supfact\">text_prop_return</span>);\n  if (!result) {\n    XSetTextProperty(display, v4, &<span class=\"supfact\">text_prop_return</span>,\n                     qword_40A870);\n    XSetTextProperty(display, v4, &<span class=\"supfact\">text_prop_return</span>, Number);\n    result = XFree(<span class=\"supfact\">text_prop_return</span>.value);\n  }\n  return result;\n}", "code_t": "int __fastcall sub_405915(Window a1, char *a2) {\n  int result;\n  char *list;\n  Window v4;\n  XTextProperty <span class=\"supfact\">text_prop_return</span>;\n  v4 = a1;\n  list = a2;\n  result = XmbTextListToTextProperty(display, &list, Number, XCompoundTextStyle,\n                                     &<span class=\"supfact\">text_prop_return</span>);\n  if (!result) {\n    XSetTextProperty(display, v4, &<span class=\"supfact\">text_prop_return</span>,\n                     qword_40A870);\n    XSetTextProperty(display, v4, &<span class=\"supfact\">text_prop_return</span>, Number);\n    result = XFree(<span class=\"supfact\">text_prop_return</span>.value);\n  }\n  return result;\n}", "var": [{"name": "text_prop_return", "type": "struct XTextProperty { unsigned __int8 * value; Atom encoding; int format; PADDING (4); unsigned __int64 nitems; }", "ref_name": "text_prop_return", "ref_type": "struct XTextProperty { unsigned __int8 * value; Atom encoding; int format; PADDING (4); unsigned __int64 nitems; }"}], "body_in_train": false}, {"repo_owner": "slp", "repo_name": "qemu-riscos", "path": "slp/qemu-riscos/7153fa9597bf34ef242669a8bbec187cbc291b07d4470e2e406f81bf73fb2996", "path_in_repo": "slp/qemu-riscos//hw/usb/hcd-uhci.o", "objdump": "0000000000003c0e <uhci_register_types>:\n    3c0e:\t55                   \tpush   %rbp\n    3c0f:\t48 89 e5             \tmov    %rsp,%rbp\n    3c12:\t48 83 c4 80          \tadd    $0xffffffffffffff80,%rsp\n    3c16:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    3c1d:\t00 00 \n    3c1f:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    3c23:\t31 c0                \txor    %eax,%eax\n    3c25:\t48 8d 55 90          \tlea    -0x70(%rbp),%rdx\n    3c29:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3c2e:\tb9 0d 00 00 00       \tmov    $0xd,%ecx\n    3c33:\t48 89 d7             \tmov    %rdx,%rdi\n    3c36:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n    3c39:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 3c40 <uhci_register_types+0x32>\n    3c40:\t48 89 45 98          \tmov    %rax,-0x68(%rbp)\n    3c44:\t48 c7 45 a0 18 0a 00 \tmovq   $0xa18,-0x60(%rbp)\n    3c4b:\t00 \n    3c4c:\t48 c7 45 c8 00 01 00 \tmovq   $0x100,-0x38(%rbp)\n    3c53:\t00 \n    3c54:\t48 8d 05 0a fe ff ff \tlea    -0x1f6(%rip),%rax        # 3a65 <uhci_class_init>\n    3c5b:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    3c5f:\tc7 45 8c 00 00 00 00 \tmovl   $0x0,-0x74(%rbp)\n    3c66:\teb 45                \tjmp    3cad <uhci_register_types+0x9f>\n    3c68:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    3c6b:\t48 98                \tcltq   \n    3c6d:\t48 c1 e0 05          \tshl    $0x5,%rax\n    3c71:\t48 89 c2             \tmov    %rax,%rdx\n    3c74:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 3c7b <uhci_register_types+0x6d>\n    3c7b:\t48 8b 04 02          \tmov    (%rdx,%rax,1),%rax\n    3c7f:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n    3c83:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    3c86:\t48 98                \tcltq   \n    3c88:\t48 c1 e0 05          \tshl    $0x5,%rax\n    3c8c:\t48 89 c2             \tmov    %rax,%rdx\n    3c8f:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 3c96 <uhci_register_types+0x88>\n    3c96:\t48 01 d0             \tadd    %rdx,%rax\n    3c99:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    3c9d:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    3ca1:\t48 89 c7             \tmov    %rax,%rdi\n    3ca4:\te8 00 00 00 00       \tcallq  3ca9 <uhci_register_types+0x9b>\n    3ca9:\t83 45 8c 01          \taddl   $0x1,-0x74(%rbp)\n    3cad:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    3cb0:\t83 f8 08             \tcmp    $0x8,%eax\n    3cb3:\t76 b3                \tjbe    3c68 <uhci_register_types+0x5a>\n    3cb5:\t90                   \tnop\n    3cb6:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    3cba:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    3cc1:\t00 00 \n    3cc3:\t74 05                \tje     3cca <uhci_register_types+0xbc>\n    3cc5:\te8 00 00 00 00       \tcallq  3cca <uhci_register_types+0xbc>\n    3cca:\tc9                   \tleaveq \n    3ccb:\tc3                   \tretq   ", "code_s": "unsigned __int64 uhci_register_types() {\n  unsigned int i;\n  __int64 <span class=\"supfact\">v2</span>[Number];\n  unsigned __int64 v3;\n  v3 = __readfsqword(Number);\n  memset(<span class=\"supfact\">v2</span>, Number, sizeof(<span class=\"supfact\">v2</span>));\n  <span class=\"supfact\">v2</span>[Number] = (__int64)String;\n  <span class=\"supfact\">v2</span>[Number] = Number L;\n  <span class=\"supfact\">v2</span>[Number] = Number L;\n  <span class=\"supfact\">v2</span>[Number] = (__int64)uhci_class_init;\n  for (i = Number; i <= Number; ++i) {\n    <span class=\"supfact\">v2</span>[Number] = (__int64)(&uhci_info)[Number * (int)i];\n    <span class=\"supfact\">v2</span>[Number] = (__int64)&(&uhci_info)[Number * (int)i];\n    type_register(<span class=\"supfact\">v2</span>);\n  }\n  return __readfsqword(Number) ^ v3;\n}", "code_t": "void __cdecl uhci_register_types() {\n  unsigned int i;\n  TypeInfo_0 <span class=\"supfact\">uhci_type_info</span>;\n  unsigned __int64 v2;\n  v2 = __readfsqword(Number);\n  memset(&<span class=\"supfact\">uhci_type_info</span>, Number,\n         sizeof(<span class=\"supfact\">uhci_type_info</span>));\n  <span class=\"supfact\">uhci_type_info</span>.parent = String;\n  <span class=\"supfact\">uhci_type_info</span>.instance_size = Number L;\n  <span class=\"supfact\">uhci_type_info</span>.class_size = Number L;\n  <span class=\"supfact\">uhci_type_info</span>.class_init =\n      (void (*)(ObjectClass_0 *, void *))uhci_class_init;\n  for (i = Number; i <= Number; ++i) {\n    <span class=\"supfact\">uhci_type_info</span>.name = uhci_info[i].name;\n    <span class=\"supfact\">uhci_type_info</span>.class_data = &uhci_info[i];\n    type_register(&<span class=\"supfact\">uhci_type_info</span>);\n  }\n}", "var": [{"name": "v2", "type": "struct TypeInfo_0 { const char * name; const char * parent; size_t instance_size; void (*)(Object_0 *) instance_init; void (*)(Object_0 *) instance_finalize; bool abstract; PADDING (7); size_t class_size; void (*)(ObjectClass_0 *, void *) class_init; void (*)(ObjectClass_0 *, void *) class_base_init; void (*)(ObjectClass_0 *, void *) class_finalize; void * class_data; InterfaceInfo_0 * interfaces; }", "ref_name": "uhci_type_info", "ref_type": "struct TypeInfo_0 { const char * name; const char * parent; size_t instance_size; void (*)(Object_0 *) instance_init; void (*)(Object_0 *) instance_post_init; void (*)(Object_0 *) instance_finalize; bool abstract; PADDING (7); size_t class_size; void (*)(ObjectClass_0 *, void *) class_init; void (*)(ObjectClass_0 *, void *) class_base_init; void (*)(ObjectClass_0 *, void *) class_finalize; void * class_data; InterfaceInfo_0 * interfaces; }"}], "body_in_train": false}, {"repo_owner": "AndersTrier", "repo_name": "QEMU-bitflip", "path": "AndersTrier/QEMU-bitflip/344c8de551127883f2c31d5d67462ea9cb0b7fc5fe990c608bc8b68569e390ba", "path_in_repo": "AndersTrier/QEMU-bitflip//qapi/qapi-visit-core.o", "objdump": "000000000000106a <trace_visit_type_bool>:\n    106a:\t55                   \tpush   %rbp\n    106b:\t48 89 e5             \tmov    %rsp,%rbp\n    106e:\t41 54                \tpush   %r12\n    1070:\t53                   \tpush   %rbx\n    1071:\t48 83 ec 40          \tsub    $0x40,%rsp\n    1075:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    1079:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n    107d:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n    1081:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    1088:\t00 00 \n    108a:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    108e:\t31 c0                \txor    %eax,%eax\n    1090:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1096 <trace_visit_type_bool+0x2c>\n    1096:\t85 c0                \ttest   %eax,%eax\n    1098:\t0f 95 c0             \tsetne  %al\n    109b:\t0f b6 c0             \tmovzbl %al,%eax\n    109e:\t48 85 c0             \ttest   %rax,%rax\n    10a1:\t74 74                \tje     1117 <trace_visit_type_bool+0xad>\n    10a3:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 10aa <trace_visit_type_bool+0x40>\n    10aa:\t66 85 c0             \ttest   %ax,%ax\n    10ad:\t74 68                \tje     1117 <trace_visit_type_bool+0xad>\n    10af:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    10b3:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    10b8:\t48 89 c7             \tmov    %rax,%rdi\n    10bb:\te8 00 00 00 00       \tcallq  10c0 <trace_visit_type_bool+0x56>\n    10c0:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n    10c5:\te8 36 ef ff ff       \tcallq  0 <qemu_loglevel_mask>\n    10ca:\t0f b6 c0             \tmovzbl %al,%eax\n    10cd:\t48 85 c0             \ttest   %rax,%rax\n    10d0:\t74 45                \tje     1117 <trace_visit_type_bool+0xad>\n    10d2:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    10d6:\t49 89 c4             \tmov    %rax,%r12\n    10d9:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    10dd:\t48 89 c3             \tmov    %rax,%rbx\n    10e0:\te8 00 00 00 00       \tcallq  10e5 <trace_visit_type_bool+0x7b>\n    10e5:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n    10e9:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    10ed:\t48 83 ec 08          \tsub    $0x8,%rsp\n    10f1:\tff 75 b8             \tpushq  -0x48(%rbp)\n    10f4:\t49 89 c9             \tmov    %rcx,%r9\n    10f7:\t49 89 d0             \tmov    %rdx,%r8\n    10fa:\t4c 89 e1             \tmov    %r12,%rcx\n    10fd:\t48 89 da             \tmov    %rbx,%rdx\n    1100:\t89 c6                \tmov    %eax,%esi\n    1102:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 1109 <trace_visit_type_bool+0x9f>\n    1109:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    110e:\te8 00 00 00 00       \tcallq  1113 <trace_visit_type_bool+0xa9>\n    1113:\t48 83 c4 10          \tadd    $0x10,%rsp\n    1117:\t90                   \tnop\n    1118:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    111c:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    1123:\t00 00 \n    1125:\t74 05                \tje     112c <trace_visit_type_bool+0xc2>\n    1127:\te8 00 00 00 00       \tcallq  112c <trace_visit_type_bool+0xc2>\n    112c:\t48 8d 65 f0          \tlea    -0x10(%rbp),%rsp\n    1130:\t5b                   \tpop    %rbx\n    1131:\t41 5c                \tpop    %r12\n    1133:\t5d                   \tpop    %rbp\n    1134:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall trace_visit_type_bool(const void *a1,\n                                                  const char *a2,\n                                                  const void *a3) {\n  __suseconds_t v3;\n  __time_t v4;\n  unsigned int v5;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v9;\n  v9 = __readfsqword(Number);\n  if (trace_events_enabled_count) {\n    if (TRACE_VISIT_TYPE_BOOL_DSTATE) {\n      gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n      if (qemu_loglevel_mask(Number)) {\n        v3 = <span class=\"supfact\">tv</span>.tv_usec;\n        v4 = <span class=\"supfact\">tv</span>.tv_sec;\n        v5 = getpid();\n        qemu_log(String, v5, v4, v3, a1, a2, a3);\n      }\n    }\n  }\n  return __readfsqword(Number) ^ v9;\n}", "code_t": "void __cdecl trace_visit_type_bool(void *v, const char *name, bool *obj) {\n  __suseconds_t v3;\n  __time_t v4;\n  unsigned int v5;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v8;\n  v8 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_VISIT_TYPE_BOOL_DSTATE) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    if (qemu_loglevel_mask(Number)) {\n      v3 = <span class=\"supfact\">_now</span>.tv_usec;\n      v4 = <span class=\"supfact\">_now</span>.tv_sec;\n      v5 = getpid();\n      qemu_log(String, v5, v4, v3, v, name, obj);\n    }\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "vaishalok", "repo_name": "VideoTest", "path": "vaishalok/VideoTest/71f505d2d15166de09196d6d47c6198d39783c790da53fc96bddd652223d8301", "path_in_repo": "vaishalok/VideoTest/jni/ffmpeg-0.8/libavcodec/aacdec.o", "objdump": "00000000000015fa <decode_audio_specific_config>:\n    15fa:\t48 83 ec 58          \tsub    $0x58,%rsp\n    15fe:\t48 89 7c 24 28       \tmov    %rdi,0x28(%rsp)\n    1603:\t48 89 74 24 20       \tmov    %rsi,0x20(%rsp)\n    1608:\t48 89 54 24 18       \tmov    %rdx,0x18(%rsp)\n    160d:\t48 89 4c 24 10       \tmov    %rcx,0x10(%rsp)\n    1612:\t44 89 44 24 0c       \tmov    %r8d,0xc(%rsp)\n    1617:\tc7 44 24 4c 00 00 00 \tmovl   $0x0,0x4c(%rsp)\n    161e:\t00 \n    161f:\teb 05                \tjmp    1626 <decode_audio_specific_config+0x2c>\n    1621:\t83 44 24 4c 01       \taddl   $0x1,0x4c(%rsp)\n    1626:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    162b:\t8b 40 28             \tmov    0x28(%rax),%eax\n    162e:\t39 44 24 4c          \tcmp    %eax,0x4c(%rsp)\n    1632:\t7c ed                \tjl     1621 <decode_audio_specific_config+0x27>\n    1634:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    1638:\t8d 14 c5 00 00 00 00 \tlea    0x0(,%rax,8),%edx\n    163f:\t48 8b 4c 24 10       \tmov    0x10(%rsp),%rcx\n    1644:\t48 8d 44 24 30       \tlea    0x30(%rsp),%rax\n    1649:\t48 89 ce             \tmov    %rcx,%rsi\n    164c:\t48 89 c7             \tmov    %rax,%rdi\n    164f:\te8 41 ec ff ff       \tcallq  295 <init_get_bits>\n    1654:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    1658:\t48 8b 4c 24 10       \tmov    0x10(%rsp),%rcx\n    165d:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    1662:\t48 89 ce             \tmov    %rcx,%rsi\n    1665:\t48 89 c7             \tmov    %rax,%rdi\n    1668:\te8 00 00 00 00       \tcallq  166d <decode_audio_specific_config+0x73>\n    166d:\t89 44 24 4c          \tmov    %eax,0x4c(%rsp)\n    1671:\t83 7c 24 4c 00       \tcmpl   $0x0,0x4c(%rsp)\n    1676:\t79 0a                \tjns    1682 <decode_audio_specific_config+0x88>\n    1678:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    167d:\te9 13 01 00 00       \tjmpq   1795 <decode_audio_specific_config+0x19b>\n    1682:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    1687:\t8b 40 04             \tmov    0x4(%rax),%eax\n    168a:\t83 f8 0c             \tcmp    $0xc,%eax\n    168d:\t7e 30                \tjle    16bf <decode_audio_specific_config+0xc5>\n    168f:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    1694:\t8b 50 04             \tmov    0x4(%rax),%edx\n    1697:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    169c:\t89 d1                \tmov    %edx,%ecx\n    169e:\tba 00 00 00 00       \tmov    $0x0,%edx\n    16a3:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    16a8:\t48 89 c7             \tmov    %rax,%rdi\n    16ab:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    16b0:\te8 00 00 00 00       \tcallq  16b5 <decode_audio_specific_config+0xbb>\n    16b5:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    16ba:\te9 d6 00 00 00       \tjmpq   1795 <decode_audio_specific_config+0x19b>\n    16bf:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    16c4:\t8b 40 10             \tmov    0x10(%rax),%eax\n    16c7:\t83 f8 01             \tcmp    $0x1,%eax\n    16ca:\t75 19                \tjne    16e5 <decode_audio_specific_config+0xeb>\n    16cc:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    16d1:\t8b 40 28             \tmov    0x28(%rax),%eax\n    16d4:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    16d7:\t75 0c                \tjne    16e5 <decode_audio_specific_config+0xeb>\n    16d9:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    16de:\tc7 40 28 01 00 00 00 \tmovl   $0x1,0x28(%rax)\n    16e5:\t8b 54 24 4c          \tmov    0x4c(%rsp),%edx\n    16e9:\t48 8d 44 24 30       \tlea    0x30(%rsp),%rax\n    16ee:\t89 d6                \tmov    %edx,%esi\n    16f0:\t48 89 c7             \tmov    %rax,%rdi\n    16f3:\te8 3a e9 ff ff       \tcallq  32 <skip_bits_long>\n    16f8:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    16fd:\t8b 00                \tmov    (%rax),%eax\n    16ff:\t83 f8 02             \tcmp    $0x2,%eax\n    1702:\t7f 06                \tjg     170a <decode_audio_specific_config+0x110>\n    1704:\t85 c0                \ttest   %eax,%eax\n    1706:\t7f 07                \tjg     170f <decode_audio_specific_config+0x115>\n    1708:\teb 37                \tjmp    1741 <decode_audio_specific_config+0x147>\n    170a:\t83 f8 04             \tcmp    $0x4,%eax\n    170d:\t75 32                \tjne    1741 <decode_audio_specific_config+0x147>\n    170f:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    1714:\t8b 78 0c             \tmov    0xc(%rax),%edi\n    1717:\t48 8b 4c 24 18       \tmov    0x18(%rsp),%rcx\n    171c:\t48 8d 54 24 30       \tlea    0x30(%rsp),%rdx\n    1721:\t48 8b 74 24 20       \tmov    0x20(%rsp),%rsi\n    1726:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    172b:\t41 89 f8             \tmov    %edi,%r8d\n    172e:\t48 89 c7             \tmov    %rax,%rdi\n    1731:\te8 99 fc ff ff       \tcallq  13cf <decode_ga_specific_config>\n    1736:\t85 c0                \ttest   %eax,%eax\n    1738:\t74 4d                \tje     1787 <decode_audio_specific_config+0x18d>\n    173a:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    173f:\teb 54                \tjmp    1795 <decode_audio_specific_config+0x19b>\n    1741:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    1746:\t8b 10                \tmov    (%rax),%edx\n    1748:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    174d:\t8b 40 10             \tmov    0x10(%rax),%eax\n    1750:\t83 f8 01             \tcmp    $0x1,%eax\n    1753:\t75 07                \tjne    175c <decode_audio_specific_config+0x162>\n    1755:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    175a:\teb 05                \tjmp    1761 <decode_audio_specific_config+0x167>\n    175c:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    1761:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    1766:\t41 89 d0             \tmov    %edx,%r8d\n    1769:\tba 00 00 00 00       \tmov    $0x0,%edx\n    176e:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    1773:\t48 89 c7             \tmov    %rax,%rdi\n    1776:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    177b:\te8 00 00 00 00       \tcallq  1780 <decode_audio_specific_config+0x186>\n    1780:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    1785:\teb 0e                \tjmp    1795 <decode_audio_specific_config+0x19b>\n    1787:\t90                   \tnop\n    1788:\t48 8d 44 24 30       \tlea    0x30(%rsp),%rax\n    178d:\t48 89 c7             \tmov    %rax,%rdi\n    1790:\te8 8f e8 ff ff       \tcallq  24 <get_bits_count>\n    1795:\t48 83 c4 58          \tadd    $0x58,%rsp\n    1799:\tc3                   \tretq   ", "code_s": "__int64 __fastcall decode_audio_specific_config(__int64 a1, __int64 a2,\n                                                unsigned int *a3, __int64 a4,\n                                                unsigned int a5) {\n  __int64 result;\n  int v6;\n  const char *v7;\n  char <span class=\"supfact\">v11</span>[Number];\n  int i;\n  for (i = Number; i < *(_DWORD *)(a2 + Number); ++i)\n    ;\n  init_get_bits((__int64)<span class=\"supfact\">v11</span>, a4, Number * a5);\n  i = ff_mpeg4audio_get_config(a3, a4, a5);\n  if (i < Number)\n    return Number;\n  if ((int)a3[Number] > Number) {\n    av_log(a2, Number L, String, a3[Number]);\n    return Number;\n  }\n  if (a3[Number] == Number && a3[Number] == Number)\n    a3[Number] = Number;\n  skip_bits_long((__int64)<span class=\"supfact\">v11</span>, i);\n  v6 = *a3;\n  if ((int)*a3 <= Number) {\n    if (v6 <= Number)\n      goto LABEL_17;\n  LABEL_15:\n    if ((unsigned int)decode_ga_specific_config(\n            a1, a2, (__int64)<span class=\"supfact\">v11</span>, (int *)a3, a3[Number]))\n      result = Number;\n    else\n      result = get_bits_count((__int64)<span class=\"supfact\">v11</span>);\n    return result;\n  }\n  if (v6 == Number)\n    goto LABEL_15;\nLABEL_17:\n  if (a3[Number] == Number)\n    v7 = String;\n  else\n    v7 = (const char *)&unk_16E35;\n  av_log(a2, Number L, String, v7, *a3);\n  return Number;\n}", "code_t": "int __cdecl decode_audio_specific_config(AACContext *ac,\n                                         AVCodecContext_0 *avctx,\n                                         MPEG4AudioConfig *m4ac,\n                                         const uint8_t *data, int data_size) {\n  int result;\n  int v6;\n  const char *v7;\n  GetBitContext_0 <span class=\"supfact\">gb</span>;\n  int i;\n  for (i = Number; i < avctx->extradata_size; ++i)\n    ;\n  init_get_bits(&<span class=\"supfact\">gb</span>, data, Number * data_size);\n  i = ff_mpeg4audio_get_config(m4ac, data, (unsigned int)data_size);\n  if (i < Number)\n    return Number;\n  if (m4ac->sampling_index > Number) {\n    av_log(avctx, Number L, String, (unsigned int)m4ac->sampling_index);\n    return Number;\n  }\n  if (m4ac->sbr == Number && m4ac->ps == Number)\n    m4ac->ps = Number;\n  skip_bits_long(&<span class=\"supfact\">gb</span>, i);\n  v6 = m4ac->object_type;\n  if (m4ac->object_type <= Number) {\n    if (v6 <= Number)\n      goto LABEL_17;\n  LABEL_15:\n    if (decode_ga_specific_config(ac, avctx, &<span class=\"supfact\">gb</span>, m4ac,\n                                  m4ac->chan_config))\n      result = Number;\n    else\n      result = get_bits_count(&<span class=\"supfact\">gb</span>);\n    return result;\n  }\n  if (v6 == Number)\n    goto LABEL_15;\nLABEL_17:\n  if (m4ac->sbr == Number)\n    v7 = String;\n  else\n    v7 = (const char *)&unk_16E35;\n  av_log(avctx, Number L, String, v7, (unsigned int)m4ac->object_type);\n  return Number;\n}", "var": [{"name": "v11", "type": "struct GetBitContext_0 { const uint8_t * buffer; const uint8_t * buffer_end; int index; int size_in_bits; }", "ref_name": "gb", "ref_type": "struct GetBitContext_0 { const uint8_t * buffer; const uint8_t * buffer_end; int index; int size_in_bits; }"}], "body_in_train": false}, {"repo_owner": "yosh1k104", "repo_name": "D-Switch", "path": "yosh1k104/D-Switch/ea0a7a7c796a860b1903c3ab2722da253d71d6e0df8f7b1d2aeb7e06999a468a", "path_in_repo": "yosh1k104/D-Switch/nano-RK/projects/SAMPL/slip-clients/sox-gateway/src/ffdb.o", "objdump": "0000000000000000 <init_db>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 81 ec b0 01 00 00 \tsub    $0x1b0,%rsp\n   b:\t48 89 bd 58 fe ff ff \tmov    %rdi,-0x1a8(%rbp)\n  12:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n  19:\t00 \n  1a:\t48 8d 95 60 fe ff ff \tlea    -0x1a0(%rbp),%rdx\n  21:\t48 8b 85 58 fe ff ff \tmov    -0x1a8(%rbp),%rax\n  28:\t48 89 d6             \tmov    %rdx,%rsi\n  2b:\t48 89 c7             \tmov    %rax,%rdi\n  2e:\te8 00 00 00 00       \tcallq  33 <init_db+0x33>\n  33:\t85 c0                \ttest   %eax,%eax\n  35:\t74 2e                \tje     65 <init_db+0x65>\n  37:\t48 8b 85 58 fe ff ff \tmov    -0x1a8(%rbp),%rax\n  3e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  43:\t48 89 c7             \tmov    %rax,%rdi\n  46:\te8 00 00 00 00       \tcallq  4b <init_db+0x4b>\n  4b:\t85 c0                \ttest   %eax,%eax\n  4d:\t74 0a                \tje     59 <init_db+0x59>\n  4f:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  54:\te8 00 00 00 00       \tcallq  59 <init_db+0x59>\n  59:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  5e:\te8 00 00 00 00       \tcallq  63 <init_db+0x63>\n  63:\teb 2f                \tjmp    94 <init_db+0x94>\n  65:\t48 8b 85 58 fe ff ff \tmov    -0x1a8(%rbp),%rax\n  6c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  71:\t48 89 c7             \tmov    %rax,%rdi\n  74:\te8 00 00 00 00       \tcallq  79 <init_db+0x79>\n  79:\t85 c0                \ttest   %eax,%eax\n  7b:\t74 0c                \tje     89 <init_db+0x89>\n  7d:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  82:\te8 00 00 00 00       \tcallq  87 <init_db+0x87>\n  87:\teb 0b                \tjmp    94 <init_db+0x94>\n  89:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  8e:\te8 00 00 00 00       \tcallq  93 <init_db+0x93>\n  93:\t90                   \tnop\n  94:\tc9                   \tleaveq \n  95:\tc3                   \tretq   ", "code_s": "int __fastcall init_db(const char *a1) {\n  int result;\n  struct stat <span class=\"supfact\">v2</span>[Number];\n  __int64 v3;\n  v3 = Number L;\n  if (stat(a1, <span class=\"supfact\">v2</span>)) {\n    if ((unsigned int)sqlite3_open(a1, &db))\n      err(String);\n    result = setup_new_db();\n  } else {\n    if ((unsigned int)sqlite3_open(a1, &db))\n      err(String);\n    result = puts(String);\n  }\n  return result;\n}", "code_t": "void __cdecl init_db(char *dbpath) {\n  stat <span class=\"supfact\">info</span>;\n  char *dberror;\n  dberror = Number L;\n  if (stat_0(dbpath, &<span class=\"supfact\">info</span>)) {\n    if ((unsigned int)sqlite3_open(dbpath, &db))\n      err(String);\n    setup_new_db();\n  } else {\n    if ((unsigned int)sqlite3_open(dbpath, &db))\n      err(String);\n    puts(String);\n  }\n}", "var": [{"name": "v2", "type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }", "ref_name": "info", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }"}], "body_in_train": false}, {"repo_owner": "KorolevaYana", "repo_name": "OS", "path": "KorolevaYana/OS/8bbedd3253fbf649fcd4e5064ab8fff58a83f533e114f4317cd045c6d45d5c9e", "path_in_repo": "KorolevaYana/OS/netsh/netsh", "objdump": "0000000000407458 <_ZN8my_epoll10add_serverE6server>:\n  407458:\t55                   \tpush   %rbp\n  407459:\t48 89 e5             \tmov    %rsp,%rbp\n  40745c:\t48 83 ec 20          \tsub    $0x20,%rsp\n  407460:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  407464:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n  407468:\tc7 45 f4 01 00 00 00 \tmovl   $0x1,-0xc(%rbp)\n  40746f:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  407473:\t48 89 c7             \tmov    %rax,%rdi\n  407476:\te8 93 f5 ff ff       \tcallq  406a0e <_ZN6server9get_heartEv>\n  40747b:\t48 89 c7             \tmov    %rax,%rdi\n  40747e:\te8 67 fd ff ff       \tcallq  4071ea <_ZNK9my_socket6get_fdEv>\n  407483:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n  407486:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n  40748d:\t00 \n  40748e:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n  407491:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n  407494:\t8b 55 f0             \tmov    -0x10(%rbp),%edx\n  407497:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40749b:\t8b 80 94 00 00 00    \tmov    0x94(%rax),%eax\n  4074a1:\t48 8d 4d f4          \tlea    -0xc(%rbp),%rcx\n  4074a5:\tbe 01 00 00 00       \tmov    $0x1,%esi\n  4074aa:\t89 c7                \tmov    %eax,%edi\n  4074ac:\te8 6f ae ff ff       \tcallq  402320 <epoll_ctl@plt>\n  4074b1:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n  4074b4:\t0f 94 c0             \tsete   %al\n  4074b7:\t84 c0                \ttest   %al,%al\n  4074b9:\t74 16                \tje     4074d1 <_ZN8my_epoll10add_serverE6server+0x79>\n  4074bb:\tbf 83 d2 40 00       \tmov    $0x40d283,%edi\n  4074c0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4074c5:\te8 86 ab ff ff       \tcallq  402050 <printf@plt>\n  4074ca:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  4074cf:\teb 45                \tjmp    407516 <_ZN8my_epoll10add_serverE6server+0xbe>\n  4074d1:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4074d5:\t48 8d 50 30          \tlea    0x30(%rax),%rdx\n  4074d9:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n  4074dd:\t48 89 c6             \tmov    %rax,%rsi\n  4074e0:\t48 89 d7             \tmov    %rdx,%rdi\n  4074e3:\te8 54 0e 00 00       \tcallq  40833c <_ZNSt3mapIi6serverSt4lessIiESaISt4pairIKiS0_EEEixERS4_>\n  4074e8:\t48 89 c2             \tmov    %rax,%rdx\n  4074eb:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  4074ef:\t48 89 c6             \tmov    %rax,%rsi\n  4074f2:\t48 89 d7             \tmov    %rdx,%rdi\n  4074f5:\te8 44 0b 00 00       \tcallq  40803e <_ZN6serveraSERKS_>\n  4074fa:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4074fe:\t8b 80 90 00 00 00    \tmov    0x90(%rax),%eax\n  407504:\t8d 50 01             \tlea    0x1(%rax),%edx\n  407507:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40750b:\t89 90 90 00 00 00    \tmov    %edx,0x90(%rax)\n  407511:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  407516:\tc9                   \tleaveq \n  407517:\tc3                   \tretq   ", "code_s": "__int64 __fastcall my_epoll add_server(__int64 a1, server *a2) {\n  server *v2;\n  __int64 result;\n  __int64 v4;\n  int fd;\n  struct epoll_event <span class=\"supfact\">event</span>;\n  <span class=\"supfact\">event</span>.events = Number;\n  v2 = server get_heart(a2);\n  fd = my_socket get_fd(v2);\n  <span class=\"supfact\">event</span>.data.u64 = (unsigned int)fd;\n  if (epoll_ctl(*(_DWORD *)(a1 + Number), Number, fd, &<span class=\"supfact\">event</span>) ==\n      Number) {\n    printf(String);\n    result = Number L;\n  } else {\n    v4 = std map<int, server> operator[](a1 + Number, &fd);\n    server operator=(v4, a2);\n    ++*(_DWORD *)(a1 + Number);\n    result = Number L;\n  }\n  return result;\n}", "code_t": "int __cdecl my_epoll add_server(my_epoll *const this, server *p_item) {\n  my_socket *v2;\n  int result;\n  std map<int, server> mapped_type *v4;\n  int item_fd;\n  epoll_event <span class=\"supfact\">ev</span>;\n  <span class=\"supfact\">ev</span>.events = Number;\n  v2 = server get_heart(p_item);\n  item_fd = my_socket get_fd(v2);\n  <span class=\"supfact\">ev</span>.data.u64 = (unsigned int)item_fd;\n  if (epoll_ctl(this->fd, Number, item_fd, &<span class=\"supfact\">ev</span>) == Number) {\n    printf(String);\n    result = Number;\n  } else {\n    v4 = std map<int, server> operator[](&this->server_sockets, &item_fd);\n    server operator=(v4, p_item);\n    ++this->cur_events;\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "event", "type": "struct struct epoll_event { uint32_t events; epoll_data_t data; }", "ref_name": "ev", "ref_type": "struct epoll_event { uint32_t events; epoll_data_t data; }"}], "body_in_train": false}, {"repo_owner": "HalogenOS", "repo_name": "android_external_elfutils", "path": "HalogenOS/android_external_elfutils/e98373ccb7786527c111e991d3a386c3ce62fe6d5429fa8c042ce46475041277", "path_in_repo": "HalogenOS/android_external_elfutils/src/libdw/dwarf_getlocation_implicit_pointer.o", "objdump": "0000000000000038 <dwarf_getlocation_implicit_pointer>:\n  38:\t55                   \tpush   %rbp\n  39:\t48 89 e5             \tmov    %rsp,%rbp\n  3c:\t48 83 ec 40          \tsub    $0x40,%rsp\n  40:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n  44:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n  48:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n  4c:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n  51:\t75 0a                \tjne    5d <dwarf_getlocation_implicit_pointer+0x25>\n  53:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n  58:\te9 b4 00 00 00       \tjmpq   111 <dwarf_getlocation_implicit_pointer+0xd9>\n  5d:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  61:\t0f b6 00             \tmovzbl (%rax),%eax\n  64:\t3c f2                \tcmp    $0xf2,%al\n  66:\t0f 95 c0             \tsetne  %al\n  69:\t0f b6 c0             \tmovzbl %al,%eax\n  6c:\t48 85 c0             \ttest   %rax,%rax\n  6f:\t74 14                \tje     85 <dwarf_getlocation_implicit_pointer+0x4d>\n  71:\tbf 02 00 00 00       \tmov    $0x2,%edi\n  76:\te8 00 00 00 00       \tcallq  7b <dwarf_getlocation_implicit_pointer+0x43>\n  7b:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n  80:\te9 8c 00 00 00       \tjmpq   111 <dwarf_getlocation_implicit_pointer+0xd9>\n  85:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  89:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  8d:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n  91:\t48 85 c0             \ttest   %rax,%rax\n  94:\t0f 95 c0             \tsetne  %al\n  97:\t0f b6 c8             \tmovzbl %al,%ecx\n  9a:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  9e:\t48 8b 70 08          \tmov    0x8(%rax),%rsi\n  a2:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  a6:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  aa:\t48 8b 00             \tmov    (%rax),%rax\n  ad:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n  b1:\t48 89 c7             \tmov    %rax,%rdi\n  b4:\te8 00 00 00 00       \tcallq  b9 <dwarf_getlocation_implicit_pointer+0x81>\n  b9:\t48 85 c0             \ttest   %rax,%rax\n  bc:\t75 07                \tjne    c5 <dwarf_getlocation_implicit_pointer+0x8d>\n  be:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n  c3:\teb 4c                \tjmp    111 <dwarf_getlocation_implicit_pointer+0xd9>\n  c5:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n  c9:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  cd:\tbe 02 00 00 00       \tmov    $0x2,%esi\n  d2:\t48 89 c7             \tmov    %rax,%rdi\n  d5:\te8 00 00 00 00       \tcallq  da <dwarf_getlocation_implicit_pointer+0xa2>\n  da:\t48 85 c0             \ttest   %rax,%rax\n  dd:\t75 2d                \tjne    10c <dwarf_getlocation_implicit_pointer+0xd4>\n  df:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n  e3:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  e7:\tbe 1c 00 00 00       \tmov    $0x1c,%esi\n  ec:\t48 89 c7             \tmov    %rax,%rdi\n  ef:\te8 00 00 00 00       \tcallq  f4 <dwarf_getlocation_implicit_pointer+0xbc>\n  f4:\t48 85 c0             \ttest   %rax,%rax\n  f7:\t75 13                \tjne    10c <dwarf_getlocation_implicit_pointer+0xd4>\n  f9:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  fd:\t48 89 c7             \tmov    %rax,%rdi\n 100:\te8 00 00 00 00       \tcallq  105 <dwarf_getlocation_implicit_pointer+0xcd>\n 105:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 10a:\teb 05                \tjmp    111 <dwarf_getlocation_implicit_pointer+0xd9>\n 10c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 111:\tc9                   \tleaveq \n 112:\tc3                   \tretq   \n", "code_s": "__int64 __fastcall dwarf_getlocation_implicit_pointer(__int64 a1, __int64 a2,\n                                                      Dwarf_Attribute *a3) {\n  __int64 result;\n  Dwarf_Error *v4;\n  __int64 v5;\n  Dwarf_Error *v6;\n  __int64 v7;\n  char <span class=\"supfact\">v9</span>[Number];\n  if (!a1)\n    return Number;\n  if (*(_BYTE *)a2 == Number) {\n    if (_libdw_offdie(**(_QWORD **)(a1 + Number), *(_QWORD *)(a2 + Number),\n                      <span class=\"supfact\">v9</span>,\n                      *(_QWORD *)(*(_QWORD *)(a1 + Number) + Number L) !=\n                          Number L)) {\n      LODWORD(v5) = dwarf_attr((Dwarf_Die)<span class=\"supfact\">v9</span>, Number, a3, v4);\n      if (v5 || (LODWORD(v7) =\n                     dwarf_attr((Dwarf_Die)<span class=\"supfact\">v9</span>, Number, a3, v6),\n                 v7)) {\n        result = Number L;\n      } else {\n        _libdw_empty_loc_attr((__int64)a3);\n        result = Number L;\n      }\n    } else {\n      result = Number;\n    }\n  } else {\n    _libdw_seterrno(Number L);\n    result = Number;\n  }\n  return result;\n}", "code_t": "int __cdecl dwarf_getlocation_implicit_pointer(Dwarf_Attribute *attr,\n                                               const Dwarf_Op *op,\n                                               Dwarf_Attribute *result) {\n  int v3;\n  __int64 v4;\n  __int64 v5;\n  Dwarf_Die v6;\n  Dwarf_Die v7;\n  Dwarf_Attribute *resulta;\n  Dwarf_Die <span class=\"supfact\">die</span>;\n  v6.padding__ = (__int64)attr;\n  v6.abbrev = (Dwarf_Abbrev_0 *)op;\n  v6.cu = (Dwarf_CU *)result;\n  if (!attr)\n    return Number;\n  if (op->atom == Number) {\n    if (_libdw_offdie(attr->cu->dbg, op->number, &<span class=\"supfact\">die</span>,\n                      attr->cu->type_offset != Number)) {\n      LODWORD(v4) = dwarf_attr(v6, (Dwarf_Half)&<span class=\"supfact\">die</span>,\n                               (Dwarf_Attribute *)((char *)&loc_1 + Number),\n                               (Dwarf_Error *)v6.cu);\n      if (v4 || (LODWORD(v5) =\n                     dwarf_attr(v7, (Dwarf_Half)&<span class=\"supfact\">die</span>,\n                                (Dwarf_Attribute *)((char *)&loc_16 + Number),\n                                (Dwarf_Error *)v7.cu),\n                 v5)) {\n        v3 = Number;\n      } else {\n        _libdw_empty_loc_attr(resulta);\n        v3 = Number;\n      }\n    } else {\n      v3 = Number;\n    }\n  } else {\n    _libdw_seterrno(Number L);\n    v3 = Number;\n  }\n  return v3;\n}", "var": [{"name": "v9", "type": "struct Dwarf_Attribute { unsigned int code; unsigned int form; unsigned __int8 * valp; Dwarf_CU * cu; }", "ref_name": "die", "ref_type": "struct Dwarf_Die { void * addr; Dwarf_CU * cu; Dwarf_Abbrev_0 * abbrev; __int64 padding__; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/167d712463e0992729e10389549ca204bb5a890bb1dd0460101cee04a39115ca", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/drivers/taito_f2.o", "objdump": "00000000000245b1 <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t>:\n   245b1:\t55                   \tpush   %rbp\n   245b2:\t48 89 e5             \tmov    %rsp,%rbp\n   245b5:\t53                   \tpush   %rbx\n   245b6:\t48 83 ec 68          \tsub    $0x68,%rsp\n   245ba:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n   245be:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n   245c2:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n   245c9:\t00 \n   245ca:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   245ce:\t48 89 c7             \tmov    %rax,%rdi\n   245d1:\te8 00 00 00 00       \tcallq  245d6 <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0x25>\n   245d6:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n   245da:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   245de:\t48 89 d6             \tmov    %rdx,%rsi\n   245e1:\t48 89 c7             \tmov    %rax,%rdi\n   245e4:\te8 1e fa ff ff       \tcallq  24007 <_ZL43construct_machine_config_taito_f2_tc0220iocR14machine_configP8device_t>\n   245e9:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n   245ed:\t48 8b 4d 90          \tmov    -0x70(%rbp),%rcx\n   245f1:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   245f5:\tba 00 00 00 00       \tmov    $0x0,%edx\n   245fa:\t48 89 ce             \tmov    %rcx,%rsi\n   245fd:\t48 89 c7             \tmov    %rax,%rdi\n   24600:\te8 00 00 00 00       \tcallq  24605 <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0x54>\n   24605:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   24609:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   2460d:\tba 00 00 00 00       \tmov    $0x0,%edx\n   24612:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   24617:\t48 89 c7             \tmov    %rax,%rdi\n   2461a:\te8 00 00 00 00       \tcallq  2461f <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0x6e>\n   2461f:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   24623:\t48 c7 40 48 00 00 00 \tmovq   $0x0,0x48(%rax)\n   2462a:\t00 \n   2462b:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n   2462f:\tba 00 00 00 00       \tmov    $0x0,%edx\n   24634:\tbe 04 00 00 00       \tmov    $0x4,%esi\n   24639:\t48 89 c7             \tmov    %rax,%rdi\n   2463c:\te8 00 00 00 00       \tcallq  24641 <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0x90>\n   24641:\t48 8b 4d 90          \tmov    -0x70(%rbp),%rcx\n   24645:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   24649:\tba 00 00 00 00       \tmov    $0x0,%edx\n   2464e:\t48 89 ce             \tmov    %rcx,%rsi\n   24651:\t48 89 c7             \tmov    %rax,%rdi\n   24654:\te8 00 00 00 00       \tcallq  24659 <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0xa8>\n   24659:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   2465d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   24661:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   24666:\t48 89 c7             \tmov    %rax,%rdi\n   24669:\te8 00 00 00 00       \tcallq  2466e <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0xbd>\n   2466e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   24672:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   24677:\t48 89 c7             \tmov    %rax,%rdi\n   2467a:\te8 00 00 00 00       \tcallq  2467f <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0xce>\n   2467f:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 24686 <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0xd5>\n   24686:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n   2468a:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   2468e:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n   24694:\t48 89 d1             \tmov    %rdx,%rcx\n   24697:\tba 00 00 00 00       \tmov    $0x0,%edx\n   2469c:\t48 89 c7             \tmov    %rax,%rdi\n   2469f:\te8 00 00 00 00       \tcallq  246a4 <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0xf3>\n   246a4:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   246a8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   246ac:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   246b1:\t48 89 c7             \tmov    %rax,%rdi\n   246b4:\te8 00 00 00 00       \tcallq  246b9 <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0x108>\n   246b9:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 246c0 <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0x10f>\n   246c0:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n   246c4:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   246c8:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n   246ce:\t48 89 d1             \tmov    %rdx,%rcx\n   246d1:\tba 00 00 00 00       \tmov    $0x0,%edx\n   246d6:\t48 89 c7             \tmov    %rax,%rdi\n   246d9:\te8 00 00 00 00       \tcallq  246de <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0x12d>\n   246de:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   246e2:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   246e6:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   246eb:\t48 89 c7             \tmov    %rax,%rdi\n   246ee:\te8 00 00 00 00       \tcallq  246f3 <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0x142>\n   246f3:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 246fa <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0x149>\n   246fa:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n   246fe:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   24702:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n   24708:\t48 89 d1             \tmov    %rdx,%rcx\n   2470b:\tba 00 00 00 00       \tmov    $0x0,%edx\n   24710:\t48 89 c7             \tmov    %rax,%rdi\n   24713:\te8 00 00 00 00       \tcallq  24718 <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0x167>\n   24718:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   2471c:\t48 8b 5d 90          \tmov    -0x70(%rbp),%rbx\n   24720:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   24724:\t48 89 c7             \tmov    %rax,%rdi\n   24727:\te8 00 00 00 00       \tcallq  2472c <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0x17b>\n   2472c:\t48 89 d8             \tmov    %rbx,%rax\n   2472f:\teb 1a                \tjmp    2474b <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0x19a>\n   24731:\t48 89 c3             \tmov    %rax,%rbx\n   24734:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   24738:\t48 89 c7             \tmov    %rax,%rdi\n   2473b:\te8 00 00 00 00       \tcallq  24740 <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0x18f>\n   24740:\t48 89 d8             \tmov    %rbx,%rax\n   24743:\t48 89 c7             \tmov    %rax,%rdi\n   24746:\te8 00 00 00 00       \tcallq  2474b <_ZL33construct_machine_config_thundfoxR14machine_configP8device_t+0x19a>\n   2474b:\t48 83 c4 68          \tadd    $0x68,%rsp\n   2474f:\t5b                   \tpop    %rbx\n   24750:\t5d                   \tpop    %rbp\n   24751:\tc3                   \tretq   ", "code_s": "device_t *__fastcall construct_machine_config_thundfox(machine_config *a1,\n                                                       device_t *a2) {\n  void(__fastcall * v2)(screen_device *, running_machine *);\n  const void *v3;\n  const void *v4;\n  device_t *v6;\n  char <span class=\"supfact\">v7</span>[Number];\n  device_t *v8;\n  v8 = Number L;\n  astring astring((astring *)<span class=\"supfact\">v7</span>);\n  v6 = construct_machine_config_taito_f2_tc0220ioc(a1, a2);\n  v8 = (device_t *)machine_config device_find(a1, v6, String);\n  device_memory_interface static_set_addrmap(\n      v8, Number L, construct_address_map_thundfox_map);\n  *((_QWORD *)a1 + Number) = &gfxdecodeinfo_thundfox;\n  driver_device static_set_callback(v6, Number L,\n                                    &video_start_taitof2_thundfox);\n  v8 = (device_t *)machine_config device_find(a1, v6, String);\n  screen_device static_set_screen_update(v8, &screen_update_taitof2_thundfox);\n  screen_device static_set_screen_eof(\n      v8, (device_t *)&screen_eof_taitof2_partial_buffer_delayed_thundfox, v2);\n  v8 = (device_t *)machine_config device_add(a1, v6, String, TC0100SCN, Number);\n  device_t static_set_static_config(v8, (device_t *)&thundfox_tc0100scn_intf_1,\n                                    v3);\n  v8 = (device_t *)machine_config device_add(a1, v6, String, TC0100SCN, Number);\n  device_t static_set_static_config(v8, (device_t *)&thundfox_tc0100scn_intf_2,\n                                    v4);\n  v8 = (device_t *)machine_config device_add(a1, v6, String, TC0360PRI, Number);\n  astring ~astring((astring *)<span class=\"supfact\">v7</span>);\n  return v6;\n}", "code_t": "device_t *__cdecl construct_machine_config_thundfox(machine_config *config,\n                                                    device_t *owner) {\n  void(__fastcall * v2)(address_map *, const device_t *);\n  void(__fastcall * v3)(running_machine *);\n  unsigned int(__fastcall * v4)(screen_device *, bitmap_t *,\n                                const _rectangle *);\n  void(__fastcall * v5)(screen_device *, running_machine *);\n  device_t *ownera;\n  astring <span class=\"supfact\">tempstring</span>;\n  device_t *device;\n  device = Number L;\n  astring astring(&<span class=\"supfact\">tempstring</span>);\n  ownera = construct_machine_config_taito_f2_tc0220ioc(config, owner);\n  device = (device_t *)machine_config device_find(config, ownera, String);\n  device_memory_interface static_set_addrmap(\n      device, Number L, (address_spacenum)construct_address_map_thundfox_map,\n      v2);\n  config->m_gfxdecodeinfo = gfxdecodeinfo_thundfox;\n  driver_device static_set_callback(\n      ownera, (device_t *)&loc_4,\n      (driver_device callback_type)&video_start_taitof2_thundfox, v3);\n  device = (device_t *)machine_config device_find(config, ownera, String);\n  screen_device static_set_screen_update(\n      device, (device_t *)&screen_update_taitof2_thundfox, v4);\n  screen_device static_set_screen_eof(\n      device, (device_t *)&screen_eof_taitof2_partial_buffer_delayed_thundfox,\n      v5);\n  device = (device_t *)machine_config device_add(config, ownera, String,\n                                                 TC0100SCN, Number);\n  device_t static_set_static_config(device, &thundfox_tc0100scn_intf_1);\n  device = (device_t *)machine_config device_add(config, ownera, String,\n                                                 TC0100SCN, Number);\n  device_t static_set_static_config(device, &thundfox_tc0100scn_intf_2);\n  device = (device_t *)machine_config device_add(config, ownera, String,\n                                                 TC0360PRI, Number);\n  astring ~astring(&<span class=\"supfact\">tempstring</span>);\n  return ownera;\n}", "var": [{"name": "v7", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "tempstring", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "hach-que", "repo_name": "roket3d", "path": "hach-que/roket3d/271872563d248bdc2377a73e9f404a3b53fd3c273b882d41b18b1e1fd085c780", "path_in_repo": "hach-que/roket3d/IDE.NET/Dependencies/Irrlicht.NET CP/Irrlicht SDK/source/Irrlicht/CPakReader.o", "objdump": "0000000000000462 <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb>:\n 462:\t55                   \tpush   %rbp\n 463:\t48 89 e5             \tmov    %rsp,%rbp\n 466:\t41 55                \tpush   %r13\n 468:\t41 54                \tpush   %r12\n 46a:\t53                   \tpush   %rbx\n 46b:\t48 83 ec 48          \tsub    $0x48,%rsp\n 46f:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n 473:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n 477:\t89 c8                \tmov    %ecx,%eax\n 479:\t88 55 ac             \tmov    %dl,-0x54(%rbp)\n 47c:\t88 45 a8             \tmov    %al,-0x58(%rbp)\n 47f:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 483:\t48 83 c0 40          \tadd    $0x40,%rax\n 487:\t48 89 c7             \tmov    %rax,%rdi\n 48a:\te8 00 00 00 00       \tcallq  48f <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb+0x2d>\n 48f:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 493:\tba 00 00 00 00       \tmov    $0x0,%edx\n 498:\t48 89 d6             \tmov    %rdx,%rsi\n 49b:\t48 89 c7             \tmov    %rax,%rdi\n 49e:\te8 00 00 00 00       \tcallq  4a3 <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb+0x41>\n 4a3:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 4a7:\t4c 8d 60 68          \tlea    0x68(%rax),%r12\n 4ab:\t44 0f b6 6d a8       \tmovzbl -0x58(%rbp),%r13d\n 4b0:\t0f b6 5d ac          \tmovzbl -0x54(%rbp),%ebx\n 4b4:\t48 83 7d b0 00       \tcmpq   $0x0,-0x50(%rbp)\n 4b9:\t74 2b                \tje     4e6 <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb+0x84>\n 4bb:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 4bf:\t48 8b 00             \tmov    (%rax),%rax\n 4c2:\t48 83 c0 20          \tadd    $0x20,%rax\n 4c6:\t48 8b 10             \tmov    (%rax),%rdx\n 4c9:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 4cd:\t48 89 c7             \tmov    %rax,%rdi\n 4d0:\tff d2                \tcallq  *%rdx\n 4d2:\t48 89 c2             \tmov    %rax,%rdx\n 4d5:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 4d9:\t48 89 d6             \tmov    %rdx,%rsi\n 4dc:\t48 89 c7             \tmov    %rax,%rdi\n 4df:\te8 00 00 00 00       \tcallq  4e4 <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb+0x82>\n 4e4:\teb 11                \tjmp    4f7 <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb+0x95>\n 4e6:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 4ea:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 4ef:\t48 89 c7             \tmov    %rax,%rdi\n 4f2:\te8 00 00 00 00       \tcallq  4f7 <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb+0x95>\n 4f7:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 4fc:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 500:\t45 89 e8             \tmov    %r13d,%r8d\n 503:\t89 d9                \tmov    %ebx,%ecx\n 505:\t48 89 c2             \tmov    %rax,%rdx\n 508:\t4c 89 e7             \tmov    %r12,%rdi\n 50b:\te8 00 00 00 00       \tcallq  510 <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb+0xae>\n 510:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 514:\t48 89 c7             \tmov    %rax,%rdi\n 517:\te8 00 00 00 00       \tcallq  51c <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb+0xba>\n 51c:\tba 00 00 00 00       \tmov    $0x0,%edx\n 521:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 525:\t48 89 10             \tmov    %rdx,(%rax)\n 528:\tba 00 00 00 00       \tmov    $0x0,%edx\n 52d:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 531:\t48 89 10             \tmov    %rdx,(%rax)\n 534:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 538:\t48 83 c0 40          \tadd    $0x40,%rax\n 53c:\tba 00 00 00 00       \tmov    $0x0,%edx\n 541:\t48 89 10             \tmov    %rdx,(%rax)\n 544:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 548:\t48 83 c0 68          \tadd    $0x68,%rax\n 54c:\tba 00 00 00 00       \tmov    $0x0,%edx\n 551:\t48 89 10             \tmov    %rdx,(%rax)\n 554:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 558:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n 55c:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n 560:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 564:\t48 83 c0 20          \tadd    $0x20,%rax\n 568:\t48 89 c7             \tmov    %rax,%rdi\n 56b:\te8 00 00 00 00       \tcallq  570 <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb+0x10e>\n 570:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 574:\t48 83 c0 40          \tadd    $0x40,%rax\n 578:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 57d:\t48 89 c7             \tmov    %rax,%rdi\n 580:\te8 00 00 00 00       \tcallq  585 <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb+0x123>\n 585:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 589:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n 58d:\t48 85 c0             \ttest   %rax,%rax\n 590:\t74 41                \tje     5d3 <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb+0x171>\n 592:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 596:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 59a:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 59e:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n 5a2:\t48 8b 00             \tmov    (%rax),%rax\n 5a5:\t48 83 e8 18          \tsub    $0x18,%rax\n 5a9:\t48 8b 00             \tmov    (%rax),%rax\n 5ac:\t48 01 d0             \tadd    %rdx,%rax\n 5af:\t48 89 c7             \tmov    %rax,%rdi\n 5b2:\te8 00 00 00 00       \tcallq  5b7 <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb+0x155>\n 5b7:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 5bb:\t48 89 c7             \tmov    %rax,%rdi\n 5be:\te8 00 00 00 00       \tcallq  5c3 <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb+0x161>\n 5c3:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 5c7:\t48 83 c0 68          \tadd    $0x68,%rax\n 5cb:\t48 89 c7             \tmov    %rax,%rdi\n 5ce:\te8 00 00 00 00       \tcallq  5d3 <_ZN3irr2io10CPakReaderC1EPNS0_9IReadFileEbb+0x171>\n 5d3:\t90                   \tnop\n 5d4:\t48 83 c4 48          \tadd    $0x48,%rsp\n 5d8:\t5b                   \tpop    %rbx\n 5d9:\t41 5c                \tpop    %r12\n 5db:\t41 5d                \tpop    %r13\n 5dd:\t5d                   \tpop    %rbp\n 5de:\tc3                   \tretq   \n 5df:\t90                   \tnop", "code_s": "__int64 __fastcall irr io CPakReader CPakReader(_QWORD *a1, __int64 a2,\n                                                unsigned __int8 a3,\n                                                unsigned __int8 a4) {\n  __int64 v4;\n  __int64 result;\n  char <span class=\"supfact\">v8</span>[Number];\n  irr IReferenceCounted IReferenceCounted(\n      (irr IReferenceCounted *)(a1 + Number));\n  irr io IFileArchive IFileArchive((irr io IFileArchive *)a1);\n  if (a2) { v4 = ( * ( __int64 ( __fastcall * * ) ( __int64 , _QWORD ) ) ( * ( _QWORD * ) a2 + Number L ) ) ( a2 , ( unsigned int ) ( ( _DWORD ) ` VTT for ' irr io CPakReader + Number ) ) ; irr core string < char , irr core irrAllocator < char >> string ( <span class=\"supfact\">v8</span> , v4 ) ; } else { irr core string < char , irr core irrAllocator < char >> string < char > ( <span class=\"supfact\">v8</span> , & unk_DC2 ) ; } irr io CFileList CFileList ( a1 + Number , ( unsigned int ) ( ( _DWORD ) ` VTT for ' irr io CPakReader + Number ) , <span class=\"supfact\">v8</span> , a3 , a4 ) ;\n    irr core string<char, irr core irrAllocator<char>> ~string(\n        <span class=\"supfact\">v8</span>); * a1 = ( unsigned int ) ( ( _DWORD ) & ` vtable for ' irr io CPakReader + Number ) ; * a1 = ( unsigned int ) ( ( _DWORD ) & ` vtable for ' irr io CPakReader + Number ) ; a1 [ Number ] = ( unsigned int ) ( ( _DWORD ) & ` vtable for ' irr io CPakReader + Number ) ; a1 [ Number ] = ( unsigned int ) ( ( _DWORD ) & ` vtable for ' irr io CPakReader + Number ) ;\n    a1[Number] = a2;\n    irr core array<unsigned int, irr core irrAllocator<unsigned int>> array(\n        a1 + Number);\n    irr IReferenceCounted setDebugName((irr IReferenceCounted *)(a1 + Number),\n                                       String);\n    result = a1[Number];\n    if (result) {\n      irr IReferenceCounted grab(\n          (irr IReferenceCounted *)(a1[Number] +\n                                    *(_QWORD *)(*(_QWORD *)a1[Number] -\n                                                Number L)));\n      irr io CPakReader scanLocalHeader((irr io CPakReader *)a1);\n      result = irr io CFileList sort((irr io CFileList *)(a1 + Number));\n    }\n    return result;\n  }", "code_t": "void __cdecl irr io CPakReader CPakReader(irr io CPakReader *const this,\n                                          irr io IReadFile *file,\n                                          bool ignoreCase, bool ignorePaths) {\n  const irr core string<char, irr core irrAllocator<char>> *v4;\n  irr core string<char, irr core irrAllocator<char>> <span class=\"supfact\">v7</span>;\n  irr IReferenceCounted IReferenceCounted(\n      (irr IReferenceCounted *const)this->gap40); irr io IFileArchive IFileArchive ( ( irr io IFileArchive * const ) this , ( const void * * const ) ( unsigned int ) ( ( _DWORD ) & ` VTT for ' irr io CPakReader + Number ) ) ; if ( file ) { v4 = ( const irr core string < char , irr core irrAllocator < char > > * ) ( * ( __int64 ( __fastcall * * ) ( irr io IReadFile * ) ) ( * ( _QWORD * ) file + Number L ) ) ( file ) ; irr core string < char , irr core irrAllocator < char >> string ( & <span class=\"supfact\">v7</span> , v4 ) ; } else { irr core string < char , irr core irrAllocator < char >> string < char > ( & <span class=\"supfact\">v7</span> , & c ) ; } irr io CFileList CFileList ( & this -> gap40 [ Number ] , ( unsigned int ) ( ( _DWORD ) & ` VTT for ' irr io CPakReader + Number ) , & <span class=\"supfact\">v7</span> , ignoreCase , ignorePaths ) ;\n  irr core string<char, irr core irrAllocator<char>> ~string(\n      &<span class=\"supfact\">v7</span>); * ( _QWORD * ) this -> gap0 = ( unsigned int ) ( ( _DWORD ) & ` vtable for ' irr io CPakReader + Number ) ; * ( _QWORD * ) this -> gap0 = ( unsigned int ) ( ( _DWORD ) & ` vtable for ' irr io CPakReader + Number ) ; * ( _QWORD * ) this -> gap40 = ( unsigned int ) ( ( _DWORD ) & ` vtable for ' irr io CPakReader + Number ) ; * ( _QWORD * ) & this -> gap40 [ Number ] = ( unsigned int ) ( ( _DWORD ) & ` vtable for ' irr io CPakReader + Number ) ;\n  this->File = file;\n  irr core array<unsigned int, irr core irrAllocator<unsigned int>> array(\n      &this->Offsets);\n  irr IReferenceCounted setDebugName((irr IReferenceCounted *const)this->gap40,\n                                     String);\n  if (this->File) {\n    irr IReferenceCounted grab((const irr IReferenceCounted *const)(\n        (char *)this->File + *(_QWORD *)(*(_QWORD *)this->File - Number L)));\n    irr io CPakReader scanLocalHeader(this);\n    irr io CFileList sort((irr io CFileList *)&this->gap40[Number]);\n  }\n}", "var": [{"name": "v8", "type": "__unk__", "ref_name": "v7", "ref_type": "struct irr::core::string<char,irr::core::irrAllocator<char> > { int (**)(...) _vptr_string; char * array; irr::core::irrAllocator<char> allocator; irr::u32 allocated; irr::u32 used; }"}], "body_in_train": false}, {"repo_owner": "izenecloud", "repo_name": "icma", "path": "izenecloud/icma/9c3daeb1ac43e9046d3e67e242a71f03cf9edc07510c655dd36d8eb36a03c61d", "path_in_repo": "izenecloud/icma//source/tixml/tinyxml.o", "objdump": "00000000000017c8 <_ZN3cma5ticpp12TiXmlElement12SetAttributeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi>:\n    17c8:\t55                   \tpush   %rbp\n    17c9:\t48 89 e5             \tmov    %rsp,%rbp\n    17cc:\t53                   \tpush   %rbx\n    17cd:\t48 81 ec c8 01 00 00 \tsub    $0x1c8,%rsp\n    17d4:\t48 89 bd 48 fe ff ff \tmov    %rdi,-0x1b8(%rbp)\n    17db:\t48 89 b5 40 fe ff ff \tmov    %rsi,-0x1c0(%rbp)\n    17e2:\t89 95 3c fe ff ff    \tmov    %edx,-0x1c4(%rbp)\n    17e8:\t48 8d 85 50 fe ff ff \tlea    -0x1b0(%rbp),%rax\n    17ef:\t48 89 c7             \tmov    %rax,%rdi\n    17f2:\te8 00 00 00 00       \tcallq  17f7 <_ZN3cma5ticpp12TiXmlElement12SetAttributeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi+0x2f>\n    17f7:\t8b 95 3c fe ff ff    \tmov    -0x1c4(%rbp),%edx\n    17fd:\t48 8d 85 50 fe ff ff \tlea    -0x1b0(%rbp),%rax\n    1804:\t89 d6                \tmov    %edx,%esi\n    1806:\t48 89 c7             \tmov    %rax,%rdi\n    1809:\te8 00 00 00 00       \tcallq  180e <_ZN3cma5ticpp12TiXmlElement12SetAttributeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi+0x46>\n    180e:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1812:\t48 8d 95 50 fe ff ff \tlea    -0x1b0(%rbp),%rdx\n    1819:\t48 89 d6             \tmov    %rdx,%rsi\n    181c:\t48 89 c7             \tmov    %rax,%rdi\n    181f:\te8 00 00 00 00       \tcallq  1824 <_ZN3cma5ticpp12TiXmlElement12SetAttributeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi+0x5c>\n    1824:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    1828:\t48 8b 8d 40 fe ff ff \tmov    -0x1c0(%rbp),%rcx\n    182f:\t48 8b 85 48 fe ff ff \tmov    -0x1b8(%rbp),%rax\n    1836:\t48 89 ce             \tmov    %rcx,%rsi\n    1839:\t48 89 c7             \tmov    %rax,%rdi\n    183c:\te8 00 00 00 00       \tcallq  1841 <_ZN3cma5ticpp12TiXmlElement12SetAttributeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi+0x79>\n    1841:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1845:\t48 89 c7             \tmov    %rax,%rdi\n    1848:\te8 00 00 00 00       \tcallq  184d <_ZN3cma5ticpp12TiXmlElement12SetAttributeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi+0x85>\n    184d:\t48 8d 85 50 fe ff ff \tlea    -0x1b0(%rbp),%rax\n    1854:\t48 89 c7             \tmov    %rax,%rdi\n    1857:\te8 00 00 00 00       \tcallq  185c <_ZN3cma5ticpp12TiXmlElement12SetAttributeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi+0x94>\n    185c:\teb 2e                \tjmp    188c <_ZN3cma5ticpp12TiXmlElement12SetAttributeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi+0xc4>\n    185e:\t48 89 c3             \tmov    %rax,%rbx\n    1861:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1865:\t48 89 c7             \tmov    %rax,%rdi\n    1868:\te8 00 00 00 00       \tcallq  186d <_ZN3cma5ticpp12TiXmlElement12SetAttributeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi+0xa5>\n    186d:\teb 03                \tjmp    1872 <_ZN3cma5ticpp12TiXmlElement12SetAttributeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi+0xaa>\n    186f:\t48 89 c3             \tmov    %rax,%rbx\n    1872:\t48 8d 85 50 fe ff ff \tlea    -0x1b0(%rbp),%rax\n    1879:\t48 89 c7             \tmov    %rax,%rdi\n    187c:\te8 00 00 00 00       \tcallq  1881 <_ZN3cma5ticpp12TiXmlElement12SetAttributeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi+0xb9>\n    1881:\t48 89 d8             \tmov    %rbx,%rax\n    1884:\t48 89 c7             \tmov    %rax,%rdi\n    1887:\te8 00 00 00 00       \tcallq  188c <_ZN3cma5ticpp12TiXmlElement12SetAttributeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEi+0xc4>\n    188c:\t48 81 c4 c8 01 00 00 \tadd    $0x1c8,%rsp\n    1893:\t5b                   \tpop    %rbx\n    1894:\t5d                   \tpop    %rbp\n    1895:\tc3                   \tretq   ", "code_s": "__int64 __fastcall cma ticpp TiXmlElement SetAttribute(__int64 a1, __int64 a2,\n                                                       unsigned int a3) {\n  char v5[Number];\n  char <span class=\"supfact\">v6</span>[Number];\n  std __cxx11\n      basic_ostringstream<char, std char_traits<char>, std allocator<char>>\n          basic_ostringstream(v5);\n  std ostream operator<<(v5, a3);\n  std __cxx11\n      basic_ostringstream<char, std char_traits<char>, std allocator<char>>\n          str(<span class=\"supfact\">v6</span>, v5);\n  cma ticpp TiXmlElement SetAttribute(a1, a2, <span class=\"supfact\">v6</span>);\n  std __cxx11\n      basic_string<char, std char_traits<char>,\n                   std allocator<char>> ~basic_string(<span class=\"supfact\">v6</span>);\n  return std __cxx11\n      basic_ostringstream<char, std char_traits<char>,\n                          std allocator<char>> ~basic_ostringstream(v5);\n}", "code_t": "void __cdecl cma ticpp TiXmlElement SetAttribute(\n    cma ticpp TiXmlElement *const this, const std string *name, int val) {\n  char v4[Number];\n  std string <span class=\"supfact\">_value</span>;\n  std __cxx11\n      basic_ostringstream<char, std char_traits<char>, std allocator<char>>\n          basic_ostringstream(v4);\n  std ostream operator<<(v4, (unsigned int)val);\n  std __cxx11\n      basic_ostringstream<char, std char_traits<char>, std allocator<char>>\n          str(&<span class=\"supfact\">_value</span>, v4);\n  cma ticpp TiXmlElement SetAttribute(this, name, &<span class=\"supfact\">_value</span>);\n  std __cxx11\n      basic_string<char, std char_traits<char>,\n                   std allocator<char>> ~basic_string(&<span class=\"supfact\">_value</span>);\n  std __cxx11 basic_ostringstream<char, std char_traits<char>,\n                                  std allocator<char>> ~basic_ostringstream(v4);\n}", "var": [{"name": "v6", "type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }", "ref_name": "_value", "ref_type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}], "body_in_train": false}, {"code_s": "__int64 __fastcall rocksdb WriteBatch Handler DeleteRangeCF(__int64 a1) {\n  __int64 <span class=\"supfact\">v2</span>[Number];\n  __int64 <span class=\"supfact\">v3</span>[Number];\n  <span class=\"supfact\">v3</span>[Number] = (__int64)&unk_D125;\n  <span class=\"supfact\">v3</span>[Number] = Number L;\n  <span class=\"supfact\">v2</span>[Number] = (__int64)String;\n  <span class=\"supfact\">v2</span>[Number] = Number L;\n  rocksdb Status Status(a1, Number L, Number L, <span class=\"supfact\">v2</span>,\n                        <span class=\"supfact\">v3</span>);\n  return a1;\n}", "code_t": "rocksdb Status *__fastcall rocksdb WriteBatch Handler\nDeleteRangeCF(rocksdb Status *a1, rocksdb WriteBatch Handler *const this,\n              uint32_t a3, const rocksdb Slice *a4, const rocksdb Slice *a5) {\n  rocksdb Slice <span class=\"supfact\">v6</span>;\n  rocksdb Slice <span class=\"supfact\">v7</span>;\n  <span class=\"supfact\">v7</span>.data_ = (const char *)&unk_D125;\n  <span class=\"supfact\">v7</span>.size_ = Number L;\n  <span class=\"supfact\">v6</span>.data_ = String;\n  <span class=\"supfact\">v6</span>.size_ = Number L;\n  rocksdb Status Status(a1, kInvalidArgument, kNone, &<span class=\"supfact\">v6</span>,\n                        &<span class=\"supfact\">v7</span>);\n  return a1;\n}", "var": [{"name": "v3", "type": "struct rocksdb::Slice { const char * data_; size_t size_; }", "ref_name": "v7", "ref_type": "struct rocksdb::Slice { const char * data_; size_t size_; }"}, {"name": "v2", "type": "struct rocksdb::Slice { const char * data_; size_t size_; }", "ref_name": "v6", "ref_type": "struct rocksdb::Slice { const char * data_; size_t size_; }"}], "body_in_train": false}, {"repo_owner": "RSB4760", "repo_name": "apq8016_external_wpa_supplicant_8", "path": "RSB4760/apq8016_external_wpa_supplicant_8/fe19cd0672fde190b26afd057d40deaf7ba651a2255c1e07abd8299693873de9", "path_in_repo": "RSB4760/apq8016_external_wpa_supplicant_8/src/ap/ieee802_11_auth.o", "objdump": "00000000000002aa <hostapd_acl_cache_get>:\n     2aa:\t55                   \tpush   %rbp\n     2ab:\t48 89 e5             \tmov    %rsp,%rbp\n     2ae:\t48 83 ec 50          \tsub    $0x50,%rsp\n     2b2:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n     2b6:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n     2ba:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n     2be:\t48 89 4d c0          \tmov    %rcx,-0x40(%rbp)\n     2c2:\t4c 89 45 b8          \tmov    %r8,-0x48(%rbp)\n     2c6:\t4c 89 4d b0          \tmov    %r9,-0x50(%rbp)\n     2ca:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     2ce:\t48 89 c7             \tmov    %rax,%rdi\n     2d1:\te8 00 00 00 00       \tcallq  2d6 <hostapd_acl_cache_get+0x2c>\n     2d6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     2da:\t48 8b 80 78 09 00 00 \tmov    0x978(%rax),%rax\n     2e1:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     2e5:\te9 35 01 00 00       \tjmpq   41f <hostapd_acl_cache_get+0x175>\n     2ea:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     2ee:\t48 8d 48 10          \tlea    0x10(%rax),%rcx\n     2f2:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     2f6:\tba 06 00 00 00       \tmov    $0x6,%edx\n     2fb:\t48 89 c6             \tmov    %rax,%rsi\n     2fe:\t48 89 cf             \tmov    %rcx,%rdi\n     301:\te8 00 00 00 00       \tcallq  306 <hostapd_acl_cache_get+0x5c>\n     306:\t85 c0                \ttest   %eax,%eax\n     308:\t74 11                \tje     31b <hostapd_acl_cache_get+0x71>\n     30a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     30e:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n     312:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     316:\te9 04 01 00 00       \tjmpq   41f <hostapd_acl_cache_get+0x175>\n     31b:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n     31f:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     323:\tba 1e 00 00 00       \tmov    $0x1e,%edx\n     328:\t48 89 ce             \tmov    %rcx,%rsi\n     32b:\t48 89 c7             \tmov    %rax,%rdi\n     32e:\te8 49 fd ff ff       \tcallq  7c <os_reltime_expired>\n     333:\t85 c0                \ttest   %eax,%eax\n     335:\t74 0a                \tje     341 <hostapd_acl_cache_get+0x97>\n     337:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n     33c:\te9 ee 00 00 00       \tjmpq   42f <hostapd_acl_cache_get+0x185>\n     341:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     345:\t8b 40 18             \tmov    0x18(%rax),%eax\n     348:\t83 f8 03             \tcmp    $0x3,%eax\n     34b:\t75 14                \tjne    361 <hostapd_acl_cache_get+0xb7>\n     34d:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n     352:\t74 0d                \tje     361 <hostapd_acl_cache_get+0xb7>\n     354:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     358:\t8b 50 28             \tmov    0x28(%rax),%edx\n     35b:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     35f:\t89 10                \tmov    %edx,(%rax)\n     361:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n     366:\t74 0d                \tje     375 <hostapd_acl_cache_get+0xcb>\n     368:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     36c:\t8b 50 2c             \tmov    0x2c(%rax),%edx\n     36f:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     373:\t89 10                \tmov    %edx,(%rax)\n     375:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n     37a:\t74 0d                \tje     389 <hostapd_acl_cache_get+0xdf>\n     37c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     380:\t8b 50 30             \tmov    0x30(%rax),%edx\n     383:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     387:\t89 10                \tmov    %edx,(%rax)\n     389:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     38d:\t48 8b 50 38          \tmov    0x38(%rax),%rdx\n     391:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n     395:\t48 89 d6             \tmov    %rdx,%rsi\n     398:\t48 89 c7             \tmov    %rax,%rdi\n     39b:\te8 74 fe ff ff       \tcallq  214 <copy_psk_list>\n     3a0:\t48 83 7d 10 00       \tcmpq   $0x0,0x10(%rbp)\n     3a5:\t74 34                \tje     3db <hostapd_acl_cache_get+0x131>\n     3a7:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     3ab:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n     3af:\t48 85 c0             \ttest   %rax,%rax\n     3b2:\t74 1c                \tje     3d0 <hostapd_acl_cache_get+0x126>\n     3b4:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     3b8:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n     3bc:\t48 89 c7             \tmov    %rax,%rdi\n     3bf:\te8 00 00 00 00       \tcallq  3c4 <hostapd_acl_cache_get+0x11a>\n     3c4:\t48 89 c2             \tmov    %rax,%rdx\n     3c7:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n     3cb:\t48 89 10             \tmov    %rdx,(%rax)\n     3ce:\teb 0b                \tjmp    3db <hostapd_acl_cache_get+0x131>\n     3d0:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n     3d4:\t48 c7 00 00 00 00 00 \tmovq   $0x0,(%rax)\n     3db:\t48 83 7d 18 00       \tcmpq   $0x0,0x18(%rbp)\n     3e0:\t74 34                \tje     416 <hostapd_acl_cache_get+0x16c>\n     3e2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     3e6:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n     3ea:\t48 85 c0             \ttest   %rax,%rax\n     3ed:\t74 1c                \tje     40b <hostapd_acl_cache_get+0x161>\n     3ef:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     3f3:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n     3f7:\t48 89 c7             \tmov    %rax,%rdi\n     3fa:\te8 00 00 00 00       \tcallq  3ff <hostapd_acl_cache_get+0x155>\n     3ff:\t48 89 c2             \tmov    %rax,%rdx\n     402:\t48 8b 45 18          \tmov    0x18(%rbp),%rax\n     406:\t48 89 10             \tmov    %rdx,(%rax)\n     409:\teb 0b                \tjmp    416 <hostapd_acl_cache_get+0x16c>\n     40b:\t48 8b 45 18          \tmov    0x18(%rbp),%rax\n     40f:\t48 c7 00 00 00 00 00 \tmovq   $0x0,(%rax)\n     416:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     41a:\t8b 40 18             \tmov    0x18(%rax),%eax\n     41d:\teb 10                \tjmp    42f <hostapd_acl_cache_get+0x185>\n     41f:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n     424:\t0f 85 c0 fe ff ff    \tjne    2ea <hostapd_acl_cache_get+0x40>\n     42a:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n     42f:\tc9                   \tleaveq \n     430:\tc3                   \tretq   ", "code_s": "__int64 __fastcall hostapd_acl_cache_get(__int64 a1, const void *a2, _DWORD *a3,\n                                         _DWORD *a4, _DWORD *a5, void **a6,\n                                         char **a7, char **a8) {\n  _QWORD <span class=\"supfact\">v13</span>[Number];\n  _QWORD *i;\n  os_get_reltime(<span class=\"supfact\">v13</span>);\n  for (i = *(_QWORD **)(a1 + Number);; i = (_QWORD *)i[Number]) {\n    if (!i)\n      return Number;\n    if (!memcmp(i + Number, a2, Number))\n      break;\n  }\n  if (os_reltime_expired(<span class=\"supfact\">v13</span>, i, Number L))\n    return Number;\n  if (*((_DWORD *)i + Number) == Number && a3)\n    *a3 = *((_DWORD *)i + Number);\n  if (a4)\n    *a4 = *((_DWORD *)i + Number);\n  if (a5)\n    *a5 = *((_DWORD *)i + Number);\n  copy_psk_list(a6, (void *)i[Number]);\n  if (a7) {\n    if (i[Number])\n      *a7 = strdup((const char *)i[Number]);\n    else\n      *a7 = Number L;\n  }\n  if (a8) {\n    if (i[Number])\n      *a8 = strdup((const char *)i[Number]);\n    else\n      *a8 = Number L;\n  }\n  return *((unsigned int *)i + Number);\n}", "code_t": "int __cdecl hostapd_acl_cache_get(hostapd_data *hapd, const u8 *addr,\n                                  u32 *session_timeout,\n                                  u32 *acct_interim_interval, int *vlan_id,\n                                  hostapd_sta_wpa_psk_short **psk,\n                                  char **identity, char **radius_cui) {\n  os_reltime <span class=\"supfact\">now</span>;\n  hostapd_cached_radius_acl *entry;\n  os_get_reltime(&<span class=\"supfact\">now</span>);\n  for (entry = hapd->acl_cache;; entry = entry->next) {\n    if (!entry)\n      return Number;\n    if (!memcmp(entry->addr, addr, Number))\n      break;\n  }\n  if (os_reltime_expired(&<span class=\"supfact\">now</span>, &entry->timestamp, Number L))\n    return Number;\n  if (entry->accepted == Number && session_timeout)\n    *session_timeout = entry->session_timeout;\n  if (acct_interim_interval)\n    *acct_interim_interval = entry->acct_interim_interval;\n  if (vlan_id)\n    *vlan_id = entry->vlan_id;\n  copy_psk_list(psk, entry->psk);\n  if (identity) {\n    if (entry->identity)\n      *identity = strdup(entry->identity);\n    else\n      *identity = Number L;\n  }\n  if (radius_cui) {\n    if (entry->radius_cui)\n      *radius_cui = strdup(entry->radius_cui);\n    else\n      *radius_cui = Number L;\n  }\n  return entry->accepted;\n}", "var": [{"name": "v13", "type": "__va_list_tag[1]", "ref_name": "now", "ref_type": "struct os_reltime { os_time_t sec; os_time_t usec; }"}], "body_in_train": false}, {"repo_owner": "juj", "repo_name": "posixtestsuite", "path": "juj/posixtestsuite/5ab28b00f4732b4b6464d126b1aee327320df1c2dfd28b79302ed48a6f328eba", "path_in_repo": "juj/posixtestsuite//conformance/interfaces/pthread_cond_timedwait/4-1.o", "objdump": "0000000000000000 <t1_func>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 83 ec 40          \tsub    $0x40,%rsp\n   8:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n   c:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  11:\te8 00 00 00 00       \tcallq  16 <t1_func+0x16>\n  16:\t85 c0                \ttest   %eax,%eax\n  18:\t74 28                \tje     42 <t1_func+0x42>\n  1a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 21 <t1_func+0x21>\n  21:\t48 89 c1             \tmov    %rax,%rcx\n  24:\tba 24 00 00 00       \tmov    $0x24,%edx\n  29:\tbe 01 00 00 00       \tmov    $0x1,%esi\n  2e:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  33:\te8 00 00 00 00       \tcallq  38 <t1_func+0x38>\n  38:\tbf 02 00 00 00       \tmov    $0x2,%edi\n  3d:\te8 00 00 00 00       \tcallq  42 <t1_func+0x42>\n  42:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 49 <t1_func+0x49>\n  49:\t48 89 c1             \tmov    %rax,%rcx\n  4c:\tba 10 00 00 00       \tmov    $0x10,%edx\n  51:\tbe 01 00 00 00       \tmov    $0x1,%esi\n  56:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  5b:\te8 00 00 00 00       \tcallq  60 <t1_func+0x60>\n  60:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  64:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  69:\t48 89 c7             \tmov    %rax,%rdi\n  6c:\te8 00 00 00 00       \tcallq  71 <t1_func+0x71>\n  71:\t85 c0                \ttest   %eax,%eax\n  73:\t74 28                \tje     9d <t1_func+0x9d>\n  75:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7c <t1_func+0x7c>\n  7c:\t48 89 c1             \tmov    %rax,%rcx\n  7f:\tba 19 00 00 00       \tmov    $0x19,%edx\n  84:\tbe 01 00 00 00       \tmov    $0x1,%esi\n  89:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  8e:\te8 00 00 00 00       \tcallq  93 <t1_func+0x93>\n  93:\tbf 02 00 00 00       \tmov    $0x2,%edi\n  98:\te8 00 00 00 00       \tcallq  9d <t1_func+0x9d>\n  9d:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  a1:\t48 83 c0 03          \tadd    $0x3,%rax\n  a5:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n  a9:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  ad:\t48 69 c0 e8 03 00 00 \timul   $0x3e8,%rax,%rax\n  b4:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  b8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # bf <t1_func+0xbf>\n  bf:\tba 03 00 00 00       \tmov    $0x3,%edx\n  c4:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  c9:\t48 89 c7             \tmov    %rax,%rdi\n  cc:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  d1:\te8 00 00 00 00       \tcallq  d6 <t1_func+0xd6>\n  d6:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  da:\t48 89 c2             \tmov    %rax,%rdx\n  dd:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  e2:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  e7:\te8 00 00 00 00       \tcallq  ec <t1_func+0xec>\n  ec:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  ef:\t83 7d fc 6e          \tcmpl   $0x6e,-0x4(%rbp)\n  f3:\t75 32                \tjne    127 <t1_func+0x127>\n  f5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # fc <t1_func+0xfc>\n  fc:\t48 89 c1             \tmov    %rax,%rcx\n  ff:\tba 27 00 00 00       \tmov    $0x27,%edx\n 104:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 109:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 10e:\te8 00 00 00 00       \tcallq  113 <t1_func+0x113>\n 113:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 118:\te8 00 00 00 00       \tcallq  11d <t1_func+0x11d>\n 11d:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 122:\te8 00 00 00 00       \tcallq  127 <t1_func+0x127>\n 127:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 12e <t1_func+0x12e>\n 12e:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n 131:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 136:\t48 89 c7             \tmov    %rax,%rdi\n 139:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 13e:\te8 00 00 00 00       \tcallq  143 <t1_func+0x143>\n 143:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 148:\te8 00 00 00 00       \tcallq  14d <t1_func+0x14d>\n 14d:\tbf 01 00 00 00       \tmov    $0x1,%edi\n 152:\te8 00 00 00 00       \tcallq  157 <main>", "code_s": "void __fastcall __noreturn t1_func(void *a1) {\n  struct timeval <span class=\"supfact\">tv</span>;\n  struct timespec <span class=\"supfact\">abstime</span>;\n  unsigned int v3;\n  if (pthread_mutex_lock(&td)) {\n    fwrite(String, Number, Number, stderr);\n    exit(Number);\n  }\n  fwrite(String, Number, Number, stderr);\n  if (gettimeofday(&<span class=\"supfact\">tv</span>, Number L)) {\n    fwrite(String, Number, Number, stderr);\n    exit(Number);\n  }\n  <span class=\"supfact\">abstime</span>.tv_sec = <span class=\"supfact\">tv</span>.tv_sec + Number;\n  <span class=\"supfact\">abstime</span>.tv_nsec = Number * <span class=\"supfact\">tv</span>.tv_usec;\n  fprintf(stderr, String, Number L);\n  v3 = pthread_cond_timedwait(\n      (pthread_cond_t *)(unsigned int)((_DWORD)&td + Number), &td,\n      &<span class=\"supfact\">abstime</span>);\n  if (v3 == Number) {\n    fwrite(String, Number, Number, stderr);\n    puts(String);\n    pthread_exit(Number L);\n  }\n  fprintf(stderr, String, v3);\n  puts(String);\n  pthread_exit(&loc_1);\n}", "code_t": "void *__cdecl __noreturn t1_func(void *arg) {\n  timeval <span class=\"supfact\">curtime</span>;\n  timespec <span class=\"supfact\">timeout</span>;\n  int rc;\n  if (pthread_mutex_lock(&td.mutex)) {\n    fwrite(String, Number, Number, stderr);\n    exit(Number);\n  }\n  fwrite(String, Number, Number, stderr);\n  if (gettimeofday(&<span class=\"supfact\">curtime</span>, Number L)) {\n    fwrite(String, Number, Number, stderr);\n    exit(Number);\n  }\n  <span class=\"supfact\">timeout</span>.tv_sec = <span class=\"supfact\">curtime</span>.tv_sec + Number;\n  <span class=\"supfact\">timeout</span>.tv_nsec = Number * <span class=\"supfact\">curtime</span>.tv_usec;\n  fprintf(stderr, String, Number L);\n  rc = pthread_cond_timedwait(\n      (pthread_cond_t *)(unsigned int)((_DWORD)&td + Number), &td.mutex,\n      &<span class=\"supfact\">timeout</span>);\n  if (rc == Number) {\n    fwrite(String, Number, Number, stderr);\n    puts(String);\n    pthread_exit(Number L);\n  }\n  fprintf(stderr, String, (unsigned int)rc);\n  puts(String);\n  pthread_exit(&loc_1);\n}", "var": [{"name": "abstime", "type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }", "ref_name": "timeout", "ref_type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }"}, {"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "curtime", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "on4today", "repo_name": "pdfViewer", "path": "on4today/pdfViewer/3efc1e774b62ba3c33cbca461bb79bcad9b25f6276f2938a4010eca9450a2a55", "path_in_repo": "on4today/pdfViewer//build/debug/fitz/bbox-device.o", "objdump": "0000000000000224 <fz_bbox_stroke_text>:\n 224:\t55                   \tpush   %rbp\n 225:\t48 89 e5             \tmov    %rsp,%rbp\n 228:\t48 83 ec 50          \tsub    $0x50,%rsp\n 22c:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n 230:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n 234:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n 238:\t48 89 4d d0          \tmov    %rcx,-0x30(%rbp)\n 23c:\t4c 89 45 c8          \tmov    %r8,-0x38(%rbp)\n 240:\t4c 89 4d c0          \tmov    %r9,-0x40(%rbp)\n 244:\tf3 0f 11 45 bc       \tmovss  %xmm0,-0x44(%rbp)\n 249:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 24d:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n 251:\t48 8d 7d f0          \tlea    -0x10(%rbp),%rdi\n 255:\t48 8b 4d d0          \tmov    -0x30(%rbp),%rcx\n 259:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n 25d:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n 261:\t49 89 f8             \tmov    %rdi,%r8\n 264:\t48 89 c7             \tmov    %rax,%rdi\n 267:\te8 00 00 00 00       \tcallq  26c <fz_bbox_stroke_text+0x48>\n 26c:\t48 89 c1             \tmov    %rax,%rcx\n 26f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 273:\tba 00 00 00 00       \tmov    $0x0,%edx\n 278:\t48 89 ce             \tmov    %rcx,%rsi\n 27b:\t48 89 c7             \tmov    %rax,%rdi\n 27e:\te8 7d fd ff ff       \tcallq  0 <fz_bbox_add_rect>\n 283:\t90                   \tnop\n 284:\tc9                   \tleaveq \n 285:\tc3                   \tretq   ", "code_s": "__int64 __fastcall fz_bbox_stroke_text(__int64 a1, __int64 a2, __int64 a3,\n                                       __int64 a4) {\n  __int64 *v4;\n  char <span class=\"supfact\">v6</span>[Number];\n  v4 = (__int64 *)fz_bound_text(*(_QWORD *)(a1 + Number), a2, a3, a4,\n                                <span class=\"supfact\">v6</span>);\n  return fz_bbox_add_rect(a1, v4, Number);\n}", "code_t": "void __cdecl fz_bbox_stroke_text(fz_device *dev, fz_text *text,\n                                 fz_stroke_state *stroke, const fz_matrix *ctm,\n                                 fz_colorspace *colorspace, float *color,\n                                 float alpha) {\n  const fz_rect *v7;\n  fz_rect <span class=\"supfact\">r</span>;\n  v7 = (const fz_rect *)fz_bound_text(dev->ctx, text, stroke, ctm,\n                                      &<span class=\"supfact\">r</span>);\n  fz_bbox_add_rect(dev, v7, Number);\n}", "var": [{"name": "v6", "type": "char[16]", "ref_name": "r", "ref_type": "struct fz_rect { float x0; float y0; float x1; float y1; }"}], "body_in_train": false}, {"repo_owner": "bigbluesky123", "repo_name": "decaf-platform", "path": "bigbluesky123/decaf-platform/d7bce523daa6d847a48e99e4aefacbcf892d5f860ef0450f760cbe00a26adff8", "path_in_repo": "bigbluesky123/decaf-platform//libhw32/9pfs/virtio-9p.o", "objdump": "000000000000975e <v9fs_lock>:\n    975e:\t55                   \tpush   %rbp\n    975f:\t48 89 e5             \tmov    %rsp,%rbp\n    9762:\t48 81 ec f0 00 00 00 \tsub    $0xf0,%rsp\n    9769:\t48 89 bd 18 ff ff ff \tmov    %rdi,-0xe8(%rbp)\n    9770:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    9777:\t00 00 \n    9779:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    977d:\t31 c0                \txor    %eax,%eax\n    977f:\t48 c7 85 38 ff ff ff \tmovq   $0x7,-0xc8(%rbp)\n    9786:\t07 00 00 00 \n    978a:\tc7 85 34 ff ff ff 00 \tmovl   $0x0,-0xcc(%rbp)\n    9791:\t00 00 00 \n    9794:\t48 8b 85 18 ff ff ff \tmov    -0xe8(%rbp),%rax\n    979b:\t48 89 85 40 ff ff ff \tmov    %rax,-0xc0(%rbp)\n    97a2:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    97a9:\t48 8b 80 28 a0 00 00 \tmov    0xa028(%rax),%rax\n    97b0:\t48 89 85 48 ff ff ff \tmov    %rax,-0xb8(%rbp)\n    97b7:\tbf 30 00 00 00       \tmov    $0x30,%edi\n    97bc:\te8 00 00 00 00       \tcallq  97c1 <v9fs_lock+0x63>\n    97c1:\t48 89 85 50 ff ff ff \tmov    %rax,-0xb0(%rbp)\n    97c8:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    97cf:\t4c 8d 48 20          \tlea    0x20(%rax),%r9\n    97d3:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    97da:\t4c 8d 40 18          \tlea    0x18(%rax),%r8\n    97de:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    97e5:\t48 8d 78 10          \tlea    0x10(%rax),%rdi\n    97e9:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    97f0:\t48 8d 48 08          \tlea    0x8(%rax),%rcx\n    97f4:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    97fb:\t4c 8d 58 04          \tlea    0x4(%rax),%r11\n    97ff:\t4c 8b 95 50 ff ff ff \tmov    -0xb0(%rbp),%r10\n    9806:\t48 8d 95 30 ff ff ff \tlea    -0xd0(%rbp),%rdx\n    980d:\t48 8b b5 38 ff ff ff \tmov    -0xc8(%rbp),%rsi\n    9814:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    981b:\t41 51                \tpush   %r9\n    981d:\t41 50                \tpush   %r8\n    981f:\t57                   \tpush   %rdi\n    9820:\t51                   \tpush   %rcx\n    9821:\t4d 89 d9             \tmov    %r11,%r9\n    9824:\t4d 89 d0             \tmov    %r10,%r8\n    9827:\t48 89 d1             \tmov    %rdx,%rcx\n    982a:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 9831 <v9fs_lock+0xd3>\n    9831:\t48 89 c7             \tmov    %rax,%rdi\n    9834:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9839:\te8 a4 8f ff ff       \tcallq  27e2 <pdu_unmarshal>\n    983e:\t48 83 c4 20          \tadd    $0x20,%rsp\n    9842:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    9849:\t4c 8b 40 10          \tmov    0x10(%rax),%r8\n    984d:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    9854:\t48 8b 78 08          \tmov    0x8(%rax),%rdi\n    9858:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    985f:\t0f b6 00             \tmovzbl (%rax),%eax\n    9862:\t0f b6 c8             \tmovzbl %al,%ecx\n    9865:\t8b 95 30 ff ff ff    \tmov    -0xd0(%rbp),%edx\n    986b:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    9872:\t0f b6 40 06          \tmovzbl 0x6(%rax),%eax\n    9876:\t0f b6 f0             \tmovzbl %al,%esi\n    9879:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    9880:\t0f b7 40 04          \tmovzwl 0x4(%rax),%eax\n    9884:\t0f b7 c0             \tmovzwl %ax,%eax\n    9887:\t4d 89 c1             \tmov    %r8,%r9\n    988a:\t49 89 f8             \tmov    %rdi,%r8\n    988d:\t89 c7                \tmov    %eax,%edi\n    988f:\te8 ea 72 ff ff       \tcallq  b7e <trace_v9fs_lock>\n    9894:\tc6 85 2f ff ff ff 02 \tmovb   $0x2,-0xd1(%rbp)\n    989b:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    98a2:\t8b 40 04             \tmov    0x4(%rax),%eax\n    98a5:\t83 e0 fe             \tand    $0xfffffffe,%eax\n    98a8:\t85 c0                \ttest   %eax,%eax\n    98aa:\t74 0f                \tje     98bb <v9fs_lock+0x15d>\n    98ac:\tc7 85 34 ff ff ff ea \tmovl   $0xffffffea,-0xcc(%rbp)\n    98b3:\tff ff ff \n    98b6:\te9 86 00 00 00       \tjmpq   9941 <v9fs_lock+0x1e3>\n    98bb:\t8b 95 30 ff ff ff    \tmov    -0xd0(%rbp),%edx\n    98c1:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    98c8:\t89 d6                \tmov    %edx,%esi\n    98ca:\t48 89 c7             \tmov    %rax,%rdi\n    98cd:\te8 f7 7d ff ff       \tcallq  16c9 <get_fid>\n    98d2:\t48 89 85 58 ff ff ff \tmov    %rax,-0xa8(%rbp)\n    98d9:\t48 83 bd 58 ff ff ff \tcmpq   $0x0,-0xa8(%rbp)\n    98e0:\t00 \n    98e1:\t75 0c                \tjne    98ef <v9fs_lock+0x191>\n    98e3:\tc7 85 34 ff ff ff fe \tmovl   $0xfffffffe,-0xcc(%rbp)\n    98ea:\tff ff ff \n    98ed:\teb 52                \tjmp    9941 <v9fs_lock+0x1e3>\n    98ef:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n    98f6:\t48 8b 8d 58 ff ff ff \tmov    -0xa8(%rbp),%rcx\n    98fd:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    9904:\t48 89 ce             \tmov    %rcx,%rsi\n    9907:\t48 89 c7             \tmov    %rax,%rdi\n    990a:\te8 00 00 00 00       \tcallq  990f <v9fs_lock+0x1b1>\n    990f:\t89 85 34 ff ff ff    \tmov    %eax,-0xcc(%rbp)\n    9915:\t83 bd 34 ff ff ff 00 \tcmpl   $0x0,-0xcc(%rbp)\n    991c:\t78 09                \tjs     9927 <v9fs_lock+0x1c9>\n    991e:\tc6 85 2f ff ff ff 00 \tmovb   $0x0,-0xd1(%rbp)\n    9925:\teb 01                \tjmp    9928 <v9fs_lock+0x1ca>\n    9927:\t90                   \tnop\n    9928:\t48 8b 95 58 ff ff ff \tmov    -0xa8(%rbp),%rdx\n    992f:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    9936:\t48 89 d6             \tmov    %rdx,%rsi\n    9939:\t48 89 c7             \tmov    %rax,%rdi\n    993c:\te8 a0 81 ff ff       \tcallq  1ae1 <put_fid>\n    9941:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    9948:\t89 85 34 ff ff ff    \tmov    %eax,-0xcc(%rbp)\n    994e:\t0f be 95 2f ff ff ff \tmovsbl -0xd1(%rbp),%edx\n    9955:\t48 8b b5 38 ff ff ff \tmov    -0xc8(%rbp),%rsi\n    995c:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    9963:\t89 d1                \tmov    %edx,%ecx\n    9965:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 996c <v9fs_lock+0x20e>\n    996c:\t48 89 c7             \tmov    %rax,%rdi\n    996f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9974:\te8 c9 96 ff ff       \tcallq  3042 <pdu_marshal>\n    9979:\t89 c2                \tmov    %eax,%edx\n    997b:\t8b 85 34 ff ff ff    \tmov    -0xcc(%rbp),%eax\n    9981:\t01 d0                \tadd    %edx,%eax\n    9983:\t89 85 34 ff ff ff    \tmov    %eax,-0xcc(%rbp)\n    9989:\t0f be 95 2f ff ff ff \tmovsbl -0xd1(%rbp),%edx\n    9990:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    9997:\t0f b6 40 06          \tmovzbl 0x6(%rax),%eax\n    999b:\t0f b6 c8             \tmovzbl %al,%ecx\n    999e:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n    99a5:\t0f b7 40 04          \tmovzwl 0x4(%rax),%eax\n    99a9:\t0f b7 c0             \tmovzwl %ax,%eax\n    99ac:\t89 ce                \tmov    %ecx,%esi\n    99ae:\t89 c7                \tmov    %eax,%edi\n    99b0:\te8 14 72 ff ff       \tcallq  bc9 <trace_v9fs_lock_return>\n    99b5:\t8b 85 34 ff ff ff    \tmov    -0xcc(%rbp),%eax\n    99bb:\t48 63 d0             \tmovslq %eax,%rdx\n    99be:\t48 8b 8d 40 ff ff ff \tmov    -0xc0(%rbp),%rcx\n    99c5:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    99cc:\t48 89 ce             \tmov    %rcx,%rsi\n    99cf:\t48 89 c7             \tmov    %rax,%rdi\n    99d2:\te8 63 9f ff ff       \tcallq  393a <complete_pdu>\n    99d7:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    99de:\t48 83 c0 20          \tadd    $0x20,%rax\n    99e2:\t48 89 c7             \tmov    %rax,%rdi\n    99e5:\te8 00 00 00 00       \tcallq  99ea <v9fs_lock+0x28c>\n    99ea:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    99f1:\t48 89 c7             \tmov    %rax,%rdi\n    99f4:\te8 00 00 00 00       \tcallq  99f9 <v9fs_lock+0x29b>\n    99f9:\t90                   \tnop\n    99fa:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    99fe:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    9a05:\t00 00 \n    9a07:\t74 05                \tje     9a0e <v9fs_lock+0x2b0>\n    9a09:\te8 00 00 00 00       \tcallq  9a0e <v9fs_lock+0x2b0>\n    9a0e:\tc9                   \tleaveq \n    9a0f:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall v9fs_lock(__int64 a1) {\n  __int64 v1;\n  __int64 v2;\n  int v3;\n  __int64 v4;\n  __int64 v5;\n  char v7;\n  unsigned int v8;\n  int v9;\n  __int64 v10;\n  __int64 v11;\n  __int64 v12;\n  unsigned __int8 *v13;\n  _DWORD *v14;\n  char <span class=\"supfact\">v15</span>[Number];\n  unsigned __int64 v16;\n  v16 = __readfsqword(Number);\n  v10 = Number L;\n  v9 = Number;\n  v11 = a1;\n  v12 = *(_QWORD *)(a1 + Number);\n  v13 = (unsigned __int8 *)g_malloc(Number L);\n  pdu_unmarshal(a1, Number L, (__int64)String, (__int64)&v8, (__int64)v13,\n                (__int64)(v13 + Number), v13 + Number, v13 + Number,\n                v13 + Number, v13 + Number);\n  trace_v9fs_lock(*(unsigned __int16 *)(v11 + Number),\n                  *(unsigned __int8 *)(v11 + Number), v8, *v13,\n                  *((_QWORD *)v13 + Number), *((_QWORD *)v13 + Number));\n  v7 = Number;\n  if ((*((_DWORD *)v13 + Number) & Number) != Number) {\n    v9 = Number;\n  } else {\n    v14 = (_DWORD *)get_fid(v11, v8);\n    if (v14) {\n      v9 = v9fs_co_fstat(v11, v14, <span class=\"supfact\">v15</span>);\n      if (v9 >= Number)\n        v7 = Number;\n      put_fid(v11, v14);\n    } else {\n      v9 = Number;\n    }\n  }\n  v9 = v10;\n  v3 = pdu_marshal(v11, v10, (__int64)String, (unsigned int)v7, v1, v2);\n  v9 += v3;\n  trace_v9fs_lock_return(*(unsigned __int16 *)(v11 + Number),\n                         *(unsigned __int8 *)(v11 + Number), (unsigned int)v7);\n  complete_pdu(v12, v11, v9, v11, v4, v5);\n  v9fs_string_free((__int64)(v13 + Number));\n  g_free(v13);\n  return __readfsqword(Number) ^ v16;\n}", "code_t": "void __cdecl v9fs_lock(void *opaque) {\n  int v1;\n  int8_t status;\n  int32_t fid;\n  int32_t err;\n  size_t offset;\n  V9fsPDU_0 *pdu;\n  V9fsState_0 *s;\n  V9fsFlock_0 *flock;\n  V9fsFidState_0 *fidp;\n  stat <span class=\"supfact\">stbuf</span>;\n  unsigned __int64 v11;\n  v11 = __readfsqword(Number);\n  offset = Number L;\n  err = Number;\n  pdu = (V9fsPDU_0 *)opaque;\n  s = (V9fsState_0 *)*((_QWORD *)opaque + Number);\n  flock = (V9fsFlock_0 *)g_malloc(Number L);\n  pdu_unmarshal((V9fsPDU_0 *)opaque, Number, String, &fid, flock, &flock->flags,\n                &flock->start, &flock->length, &flock->proc_id,\n                &flock->client_id);\n  trace_v9fs_lock(pdu->tag, pdu->id, fid, flock->type, flock->start,\n                  flock->length);\n  status = Number;\n  if ((flock->flags & Number) != Number) {\n    err = Number;\n  } else {\n    fidp = get_fid(pdu, fid);\n    if (fidp) {\n      err = v9fs_co_fstat(pdu, fidp, &<span class=\"supfact\">stbuf</span>);\n      if (err >= Number)\n        status = Number;\n      put_fid(pdu, fidp);\n    } else {\n      err = Number;\n    }\n  }\n  err = offset;\n  v1 = pdu_marshal(pdu, offset, String, (unsigned int)status);\n  err += v1;\n  trace_v9fs_lock_return(pdu->tag, pdu->id, status);\n  complete_pdu(s, pdu, err);\n  v9fs_string_free(&flock->client_id);\n  g_free(flock);\n}", "var": [{"name": "v15", "type": "char[128]", "ref_name": "stbuf", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }"}], "body_in_train": false}, {"repo_owner": "NavInfoNC", "repo_name": "visual-wrk", "path": "NavInfoNC/visual-wrk/563adcb200b6cb7c622f6c90a511227232b92dc1dab4b2ffd766023fbf07b77f", "path_in_repo": "NavInfoNC/visual-wrk//obj/openssl-1.1.0g/apps/apps.o", "objdump": "0000000000001c31 <load_pubkey>:\n    1c31:\t55                   \tpush   %rbp\n    1c32:\t48 89 e5             \tmov    %rsp,%rbp\n    1c35:\t48 83 ec 60          \tsub    $0x60,%rsp\n    1c39:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    1c3d:\t89 75 c4             \tmov    %esi,-0x3c(%rbp)\n    1c40:\t89 55 c0             \tmov    %edx,-0x40(%rbp)\n    1c43:\t48 89 4d b8          \tmov    %rcx,-0x48(%rbp)\n    1c47:\t4c 89 45 b0          \tmov    %r8,-0x50(%rbp)\n    1c4b:\t4c 89 4d a8          \tmov    %r9,-0x58(%rbp)\n    1c4f:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n    1c56:\t00 \n    1c57:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    1c5e:\t00 \n    1c5f:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    1c63:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    1c67:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1c6b:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    1c6f:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n    1c74:\t75 2a                \tjne    1ca0 <load_pubkey+0x6f>\n    1c76:\t83 7d c0 00          \tcmpl   $0x0,-0x40(%rbp)\n    1c7a:\t74 06                \tje     1c82 <load_pubkey+0x51>\n    1c7c:\t83 7d c4 08          \tcmpl   $0x8,-0x3c(%rbp)\n    1c80:\t75 1e                \tjne    1ca0 <load_pubkey+0x6f>\n    1c82:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1c89 <load_pubkey+0x58>\n    1c89:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1c8e:\t48 89 c7             \tmov    %rax,%rdi\n    1c91:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1c96:\te8 00 00 00 00       \tcallq  1c9b <load_pubkey+0x6a>\n    1c9b:\te9 13 02 00 00       \tjmpq   1eb3 <load_pubkey+0x282>\n    1ca0:\t83 7d c4 08          \tcmpl   $0x8,-0x3c(%rbp)\n    1ca4:\t0f 85 80 00 00 00    \tjne    1d2a <load_pubkey+0xf9>\n    1caa:\t48 83 7d b0 00       \tcmpq   $0x0,-0x50(%rbp)\n    1caf:\t75 1e                \tjne    1ccf <load_pubkey+0x9e>\n    1cb1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1cb8 <load_pubkey+0x87>\n    1cb8:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1cbd:\t48 89 c7             \tmov    %rax,%rdi\n    1cc0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1cc5:\te8 00 00 00 00       \tcallq  1cca <load_pubkey+0x99>\n    1cca:\te9 dd 01 00 00       \tjmpq   1eac <load_pubkey+0x27b>\n    1ccf:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 1cd6 <load_pubkey+0xa5>\n    1cd6:\t48 8d 4d d0          \tlea    -0x30(%rbp),%rcx\n    1cda:\t48 8b 75 c8          \tmov    -0x38(%rbp),%rsi\n    1cde:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    1ce2:\t48 89 c7             \tmov    %rax,%rdi\n    1ce5:\te8 00 00 00 00       \tcallq  1cea <load_pubkey+0xb9>\n    1cea:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1cee:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    1cf3:\t0f 85 b3 01 00 00    \tjne    1eac <load_pubkey+0x27b>\n    1cf9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1d00 <load_pubkey+0xcf>\n    1d00:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    1d04:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1d09:\t48 89 c7             \tmov    %rax,%rdi\n    1d0c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1d11:\te8 00 00 00 00       \tcallq  1d16 <load_pubkey+0xe5>\n    1d16:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1d1d <load_pubkey+0xec>\n    1d1d:\t48 89 c7             \tmov    %rax,%rdi\n    1d20:\te8 00 00 00 00       \tcallq  1d25 <load_pubkey+0xf4>\n    1d25:\te9 82 01 00 00       \tjmpq   1eac <load_pubkey+0x27b>\n    1d2a:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n    1d2f:\t75 25                \tjne    1d56 <load_pubkey+0x125>\n    1d31:\t83 7d c0 00          \tcmpl   $0x0,-0x40(%rbp)\n    1d35:\t74 1f                \tje     1d56 <load_pubkey+0x125>\n    1d37:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1d3e <load_pubkey+0x10d>\n    1d3e:\t48 89 c7             \tmov    %rax,%rdi\n    1d41:\te8 00 00 00 00       \tcallq  1d46 <load_pubkey+0x115>\n    1d46:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    1d49:\t89 c7                \tmov    %eax,%edi\n    1d4b:\te8 00 00 00 00       \tcallq  1d50 <load_pubkey+0x11f>\n    1d50:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1d54:\teb 18                \tjmp    1d6e <load_pubkey+0x13d>\n    1d56:\t8b 55 c4             \tmov    -0x3c(%rbp),%edx\n    1d59:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1d5d:\tbe 72 00 00 00       \tmov    $0x72,%esi\n    1d62:\t48 89 c7             \tmov    %rax,%rdi\n    1d65:\te8 00 00 00 00       \tcallq  1d6a <load_pubkey+0x139>\n    1d6a:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1d6e:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    1d73:\t0f 84 36 01 00 00    \tje     1eaf <load_pubkey+0x27e>\n    1d79:\t83 7d c4 04          \tcmpl   $0x4,-0x3c(%rbp)\n    1d7d:\t75 1a                \tjne    1d99 <load_pubkey+0x168>\n    1d7f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1d83:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1d88:\t48 89 c7             \tmov    %rax,%rdi\n    1d8b:\te8 00 00 00 00       \tcallq  1d90 <load_pubkey+0x15f>\n    1d90:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1d94:\te9 1a 01 00 00       \tjmpq   1eb3 <load_pubkey+0x282>\n    1d99:\t83 7d c4 0a          \tcmpl   $0xa,-0x3c(%rbp)\n    1d9d:\t75 5d                \tjne    1dfc <load_pubkey+0x1cb>\n    1d9f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1da3:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1da8:\t48 89 c7             \tmov    %rax,%rdi\n    1dab:\te8 00 00 00 00       \tcallq  1db0 <load_pubkey+0x17f>\n    1db0:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    1db4:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n    1db9:\t74 34                \tje     1def <load_pubkey+0x1be>\n    1dbb:\te8 00 00 00 00       \tcallq  1dc0 <load_pubkey+0x18f>\n    1dc0:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1dc4:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    1dc9:\t74 13                \tje     1dde <load_pubkey+0x1ad>\n    1dcb:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    1dcf:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1dd3:\t48 89 d6             \tmov    %rdx,%rsi\n    1dd6:\t48 89 c7             \tmov    %rax,%rdi\n    1dd9:\te8 00 00 00 00       \tcallq  1dde <load_pubkey+0x1ad>\n    1dde:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1de2:\t48 89 c7             \tmov    %rax,%rdi\n    1de5:\te8 00 00 00 00       \tcallq  1dea <load_pubkey+0x1b9>\n    1dea:\te9 c4 00 00 00       \tjmpq   1eb3 <load_pubkey+0x282>\n    1def:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    1df6:\t00 \n    1df7:\te9 b7 00 00 00       \tjmpq   1eb3 <load_pubkey+0x282>\n    1dfc:\t81 7d c4 09 80 00 00 \tcmpl   $0x8009,-0x3c(%rbp)\n    1e03:\t75 63                \tjne    1e68 <load_pubkey+0x237>\n    1e05:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    1e09:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1e0d:\t48 89 d1             \tmov    %rdx,%rcx\n    1e10:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1e15:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1e1a:\t48 89 c7             \tmov    %rax,%rdi\n    1e1d:\te8 00 00 00 00       \tcallq  1e22 <load_pubkey+0x1f1>\n    1e22:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    1e26:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    1e2b:\t74 31                \tje     1e5e <load_pubkey+0x22d>\n    1e2d:\te8 00 00 00 00       \tcallq  1e32 <load_pubkey+0x201>\n    1e32:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1e36:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    1e3b:\t74 13                \tje     1e50 <load_pubkey+0x21f>\n    1e3d:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    1e41:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1e45:\t48 89 d6             \tmov    %rdx,%rsi\n    1e48:\t48 89 c7             \tmov    %rax,%rdi\n    1e4b:\te8 00 00 00 00       \tcallq  1e50 <load_pubkey+0x21f>\n    1e50:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1e54:\t48 89 c7             \tmov    %rax,%rdi\n    1e57:\te8 00 00 00 00       \tcallq  1e5c <load_pubkey+0x22b>\n    1e5c:\teb 55                \tjmp    1eb3 <load_pubkey+0x282>\n    1e5e:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    1e65:\t00 \n    1e66:\teb 4b                \tjmp    1eb3 <load_pubkey+0x282>\n    1e68:\t81 7d c4 05 80 00 00 \tcmpl   $0x8005,-0x3c(%rbp)\n    1e6f:\t75 23                \tjne    1e94 <load_pubkey+0x263>\n    1e71:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    1e75:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1e79:\t48 89 d1             \tmov    %rdx,%rcx\n    1e7c:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1e81:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1e86:\t48 89 c7             \tmov    %rax,%rdi\n    1e89:\te8 00 00 00 00       \tcallq  1e8e <load_pubkey+0x25d>\n    1e8e:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1e92:\teb 1f                \tjmp    1eb3 <load_pubkey+0x282>\n    1e94:\t83 7d c4 0b          \tcmpl   $0xb,-0x3c(%rbp)\n    1e98:\t75 18                \tjne    1eb2 <load_pubkey+0x281>\n    1e9a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1e9e:\t48 89 c7             \tmov    %rax,%rdi\n    1ea1:\te8 00 00 00 00       \tcallq  1ea6 <load_pubkey+0x275>\n    1ea6:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1eaa:\teb 07                \tjmp    1eb3 <load_pubkey+0x282>\n    1eac:\t90                   \tnop\n    1ead:\teb 04                \tjmp    1eb3 <load_pubkey+0x282>\n    1eaf:\t90                   \tnop\n    1eb0:\teb 01                \tjmp    1eb3 <load_pubkey+0x282>\n    1eb2:\t90                   \tnop\n    1eb3:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1eb7:\t48 89 c7             \tmov    %rax,%rdi\n    1eba:\te8 00 00 00 00       \tcallq  1ebf <load_pubkey+0x28e>\n    1ebf:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    1ec4:\t75 1d                \tjne    1ee3 <load_pubkey+0x2b2>\n    1ec6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1ecd <load_pubkey+0x29c>\n    1ecd:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    1ed1:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1ed6:\t48 89 c7             \tmov    %rax,%rdi\n    1ed9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1ede:\te8 00 00 00 00       \tcallq  1ee3 <load_pubkey+0x2b2>\n    1ee3:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1ee7:\tc9                   \tleaveq \n    1ee8:\tc3                   \tretq   ", "code_s": "__int64 __fastcall load_pubkey(__int64 a1, unsigned int a2, int a3, __int64 a4,\n                               __int64 a5, const char *a6) {\n  __int64 <span class=\"supfact\">v8</span>[Number];\n  __int64 v9;\n  __int64 v10;\n  __int64 v11;\n  __int64 v12;\n  v12 = Number L;\n  v11 = Number L;\n  <span class=\"supfact\">v8</span>[Number] = a4;\n  <span class=\"supfact\">v8</span>[Number] = a1;\n  if (a1 || a3 && a2 != Number) {\n    if (a2 == Number) {\n      if (a5) {\n        v11 = ENGINE_load_public_key(a5, a1, ui_method, <span class=\"supfact\">v8</span>);\n        if (!v11) {\n          BIO_printf(bio_err, String, a6);\n          ERR_print_errors(bio_err);\n        }\n      } else {\n        BIO_printf(bio_err, String);\n      }\n    } else {\n      if (a1 || !a3) {\n        v12 = bio_open_default(a1, Number L, a2);\n      } else {\n        unbuffer(stdin);\n        v12 = dup_bio_in(a2);\n      }\n      if (v12) {\n        switch (a2) {\n        case Number:\n          v11 = d2i_PUBKEY_bio(v12, Number L);\n          break;\n        case Number:\n          v9 = d2i_RSAPublicKey_bio(v12, Number L);\n          if (v9) {\n            v11 = EVP_PKEY_new();\n            if (v11)\n              EVP_PKEY_set1_RSA(v11, v9);\n            RSA_free(v9);\n          } else {\n            v11 = Number L;\n          }\n          break;\n        case Number:\n          v10 = PEM_read_bio_RSAPublicKey(v12, Number L, password_callback,\n                                          <span class=\"supfact\">v8</span>);\n          if (v10) {\n            v11 = EVP_PKEY_new();\n            if (v11)\n              EVP_PKEY_set1_RSA(v11, v10);\n            RSA_free(v10);\n          } else {\n            v11 = Number L;\n          }\n          break;\n        case Number:\n          v11 = PEM_read_bio_PUBKEY(v12, Number L, password_callback,\n                                    <span class=\"supfact\">v8</span>);\n          break;\n        case Number:\n          v11 = b2i_PublicKey_bio(v12);\n          break;\n        }\n      }\n    }\n  } else {\n    BIO_printf(bio_err, String);\n  }\n  BIO_free(v12);\n  if (!v11)\n    BIO_printf(bio_err, String, a6);\n  return v11;\n}", "code_t": "EVP_PKEY *__cdecl load_pubkey(const char *file, int format, int maybe_stdin,\n                              const char *pass, ENGINE *e,\n                              const char *key_descrip) {\n  PW_CB_DATA <span class=\"supfact\">cb_data</span>;\n  RSA *rsa;\n  RSA *rsa_0;\n  EVP_PKEY *pkey;\n  BIO *key;\n  key = Number L;\n  pkey = Number L;\n  <span class=\"supfact\">cb_data</span>.password = pass;\n  <span class=\"supfact\">cb_data</span>.prompt_info = file;\n  if (file || maybe_stdin && format != Number) {\n    if (format == Number) {\n      if (e) {\n        pkey = (EVP_PKEY *)ENGINE_load_public_key(e, file, ui_method,\n                                                  &<span class=\"supfact\">cb_data</span>);\n        if (!pkey) {\n          BIO_printf(bio_err, String, key_descrip);\n          ERR_print_errors(bio_err);\n        }\n      } else {\n        BIO_printf(bio_err, String);\n      }\n    } else {\n      if (file || !maybe_stdin) {\n        key = bio_open_default(file, Number, format);\n      } else {\n        unbuffer(stdin);\n        key = dup_bio_in(format);\n      }\n      if (key) {\n        switch (format) {\n        case Number:\n          pkey = (EVP_PKEY *)d2i_PUBKEY_bio(key, Number L);\n          break;\n        case Number:\n          rsa = (RSA *)d2i_RSAPublicKey_bio(key, Number L);\n          if (rsa) {\n            pkey = (EVP_PKEY *)EVP_PKEY_new();\n            if (pkey)\n              EVP_PKEY_set1_RSA(pkey, rsa);\n            RSA_free(rsa);\n          } else {\n            pkey = Number L;\n          }\n          break;\n        case Number:\n          rsa_0 = (RSA *)PEM_read_bio_RSAPublicKey(\n              key, Number L, password_callback, &<span class=\"supfact\">cb_data</span>);\n          if (rsa_0) {\n            pkey = (EVP_PKEY *)EVP_PKEY_new();\n            if (pkey)\n              EVP_PKEY_set1_RSA(pkey, rsa_0);\n            RSA_free(rsa_0);\n          } else {\n            pkey = Number L;\n          }\n          break;\n        case Number:\n          pkey = (EVP_PKEY *)PEM_read_bio_PUBKEY(\n              key, Number L, password_callback, &<span class=\"supfact\">cb_data</span>);\n          break;\n        case Number:\n          pkey = (EVP_PKEY *)b2i_PublicKey_bio(key);\n          break;\n        }\n      }\n    }\n  } else {\n    BIO_printf(bio_err, String);\n  }\n  BIO_free(key);\n  if (!pkey)\n    BIO_printf(bio_err, String, key_descrip);\n  return pkey;\n}", "var": [{"name": "v8", "type": "struct PW_CB_DATA { const void * password; const char * prompt_info; }", "ref_name": "cb_data", "ref_type": "struct PW_CB_DATA { const void * password; const char * prompt_info; }"}], "body_in_train": false}, {"repo_owner": "threeearcat", "repo_name": "repro-guest", "path": "threeearcat/repro-guest/aea8740642b09c40d0a4e6f62417e2d65ee554e88b3fcba3e265142c2d651e8a", "path_in_repo": "threeearcat/repro-guest/tools/testing/selftests/x86/test_vsyscall_64", "objdump": "00000000004017e0 <test_gtod>:\n  4017e0:\t55                   \tpush   %rbp\n  4017e1:\t48 89 e5             \tmov    %rsp,%rbp\n  4017e4:\t48 83 c4 80          \tadd    $0xffffffffffffff80,%rsp\n  4017e8:\t48 c7 45 f8 ff ff ff \tmovq   $0xffffffffffffffff,-0x8(%rbp)\n  4017ef:\tff \n  4017f0:\t48 c7 45 f0 ff ff ff \tmovq   $0xffffffffffffffff,-0x10(%rbp)\n  4017f7:\tff \n  4017f8:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n  4017ff:\tbf fb 32 40 00       \tmov    $0x4032fb,%edi\n  401804:\te8 37 f8 ff ff       \tcallq  401040 <puts@plt>\n  401809:\t48 8d 55 98          \tlea    -0x68(%rbp),%rdx\n  40180d:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  401811:\t48 89 d6             \tmov    %rdx,%rsi\n  401814:\t48 89 c7             \tmov    %rax,%rdi\n  401817:\te8 9c fd ff ff       \tcallq  4015b8 <sys_gtod>\n  40181c:\t48 85 c0             \ttest   %rax,%rax\n  40181f:\t74 14                \tje     401835 <test_gtod+0x55>\n  401821:\tbe 15 33 40 00       \tmov    $0x403315,%esi\n  401826:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  40182b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  401830:\te8 fb f8 ff ff       \tcallq  401130 <err@plt>\n  401835:\t48 8b 05 c4 49 00 00 \tmov    0x49c4(%rip),%rax        # 406200 <vdso_gtod>\n  40183c:\t48 85 c0             \ttest   %rax,%rax\n  40183f:\t74 1b                \tje     40185c <test_gtod+0x7c>\n  401841:\t48 8b 0d b8 49 00 00 \tmov    0x49b8(%rip),%rcx        # 406200 <vdso_gtod>\n  401848:\t48 8d 55 90          \tlea    -0x70(%rbp),%rdx\n  40184c:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n  401850:\t48 89 d6             \tmov    %rdx,%rsi\n  401853:\t48 89 c7             \tmov    %rax,%rdi\n  401856:\tff d1                \tcallq  *%rcx\n  401858:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  40185c:\t0f b6 05 9e 48 00 00 \tmovzbl 0x489e(%rip),%eax        # 406101 <vsyscall_map_x>\n  401863:\t84 c0                \ttest   %al,%al\n  401865:\t74 1b                \tje     401882 <test_gtod+0xa2>\n  401867:\t48 c7 c1 00 00 60 ff \tmov    $0xffffffffff600000,%rcx\n  40186e:\t48 8d 55 88          \tlea    -0x78(%rbp),%rdx\n  401872:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  401876:\t48 89 d6             \tmov    %rdx,%rsi\n  401879:\t48 89 c7             \tmov    %rax,%rdi\n  40187c:\tff d1                \tcallq  *%rcx\n  40187e:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  401882:\t48 8d 55 98          \tlea    -0x68(%rbp),%rdx\n  401886:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  40188a:\t48 89 d6             \tmov    %rdx,%rsi\n  40188d:\t48 89 c7             \tmov    %rax,%rdi\n  401890:\te8 23 fd ff ff       \tcallq  4015b8 <sys_gtod>\n  401895:\t48 85 c0             \ttest   %rax,%rax\n  401898:\t74 14                \tje     4018ae <test_gtod+0xce>\n  40189a:\tbe 15 33 40 00       \tmov    $0x403315,%esi\n  40189f:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  4018a4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4018a9:\te8 82 f8 ff ff       \tcallq  401130 <err@plt>\n  4018ae:\t48 8b 05 4b 49 00 00 \tmov    0x494b(%rip),%rax        # 406200 <vdso_gtod>\n  4018b5:\t48 85 c0             \ttest   %rax,%rax\n  4018b8:\t74 4d                \tje     401907 <test_gtod+0x127>\n  4018ba:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n  4018bf:\t75 2c                \tjne    4018ed <test_gtod+0x10d>\n  4018c1:\t48 8d 7d 90          \tlea    -0x70(%rbp),%rdi\n  4018c5:\t48 8d 4d b0          \tlea    -0x50(%rbp),%rcx\n  4018c9:\t48 8d 55 98          \tlea    -0x68(%rbp),%rdx\n  4018cd:\t48 8d 75 c0          \tlea    -0x40(%rbp),%rsi\n  4018d1:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  4018d5:\t49 89 f9             \tmov    %rdi,%r9\n  4018d8:\t49 89 c8             \tmov    %rcx,%r8\n  4018db:\tb9 2a 33 40 00       \tmov    $0x40332a,%ecx\n  4018e0:\t48 89 c7             \tmov    %rax,%rdi\n  4018e3:\te8 e1 fd ff ff       \tcallq  4016c9 <check_gtod>\n  4018e8:\t01 45 ec             \tadd    %eax,-0x14(%rbp)\n  4018eb:\teb 1a                \tjmp    401907 <test_gtod+0x127>\n  4018ed:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4018f1:\t48 89 c6             \tmov    %rax,%rsi\n  4018f4:\tbf 30 33 40 00       \tmov    $0x403330,%edi\n  4018f9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4018fe:\te8 7d f7 ff ff       \tcallq  401080 <printf@plt>\n  401903:\t83 45 ec 01          \taddl   $0x1,-0x14(%rbp)\n  401907:\t0f b6 05 f3 47 00 00 \tmovzbl 0x47f3(%rip),%eax        # 406101 <vsyscall_map_x>\n  40190e:\t84 c0                \ttest   %al,%al\n  401910:\t74 4d                \tje     40195f <test_gtod+0x17f>\n  401912:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n  401917:\t75 2c                \tjne    401945 <test_gtod+0x165>\n  401919:\t48 8d 7d 88          \tlea    -0x78(%rbp),%rdi\n  40191d:\t48 8d 4d a0          \tlea    -0x60(%rbp),%rcx\n  401921:\t48 8d 55 98          \tlea    -0x68(%rbp),%rdx\n  401925:\t48 8d 75 c0          \tlea    -0x40(%rbp),%rsi\n  401929:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  40192d:\t49 89 f9             \tmov    %rdi,%r9\n  401930:\t49 89 c8             \tmov    %rcx,%r8\n  401933:\tb9 58 33 40 00       \tmov    $0x403358,%ecx\n  401938:\t48 89 c7             \tmov    %rax,%rdi\n  40193b:\te8 89 fd ff ff       \tcallq  4016c9 <check_gtod>\n  401940:\t01 45 ec             \tadd    %eax,-0x14(%rbp)\n  401943:\teb 1a                \tjmp    40195f <test_gtod+0x17f>\n  401945:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  401949:\t48 89 c6             \tmov    %rax,%rsi\n  40194c:\tbf 68 33 40 00       \tmov    $0x403368,%edi\n  401951:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  401956:\te8 25 f7 ff ff       \tcallq  401080 <printf@plt>\n  40195b:\t83 45 ec 01          \taddl   $0x1,-0x14(%rbp)\n  40195f:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  401962:\tc9                   \tleaveq \n  401963:\tc3                   \tretq   ", "code_s": "__int64 test_gtod() {\n  int v0;\n  int v1;\n  int <span class=\"supfact\">v3</span>;\n  int <span class=\"supfact\">v4</span>;\n  int <span class=\"supfact\">v5</span>;\n  _QWORD <span class=\"supfact\">v6</span>[Number];\n  _QWORD <span class=\"supfact\">v7</span>[Number];\n  _QWORD <span class=\"supfact\">v8</span>[Number];\n  _QWORD <span class=\"supfact\">v9</span>[Number];\n  unsigned int v10;\n  __int64 v11;\n  __int64 v12;\n  v12 = Number;\n  v11 = Number;\n  v10 = Number;\n  puts(String);\n  if (sys_gtod((__int64)<span class=\"supfact\">v9</span>, (__int64)&<span class=\"supfact\">v5</span>))\n    err(Number, String);\n  if (vdso_gtod)\n    v12 = vdso_gtod(<span class=\"supfact\">v7</span>, &<span class=\"supfact\">v4</span>);\n  if (vsyscall_map_x)\n    v11 = MEMORY[Number](<span class=\"supfact\">v6</span>, &<span class=\"supfact\">v3</span>);\n  if (sys_gtod((__int64)<span class=\"supfact\">v8</span>, (__int64)&<span class=\"supfact\">v5</span>))\n    err(Number, String);\n  if (vdso_gtod) {\n    if (v12) {\n      printf(String, v12);\n      ++v10;\n    } else {\n      v0 = check_gtod(<span class=\"supfact\">v9</span>, <span class=\"supfact\">v8</span>,\n                      &<span class=\"supfact\">v5</span>, String, <span class=\"supfact\">v7</span>,\n                      &<span class=\"supfact\">v4</span>);\n      v10 += v0;\n    }\n  }\n  if (vsyscall_map_x) {\n    if (v11) {\n      printf(String, v11);\n      ++v10;\n    } else {\n      v1 = check_gtod(<span class=\"supfact\">v9</span>, <span class=\"supfact\">v8</span>,\n                      &<span class=\"supfact\">v5</span>, String, <span class=\"supfact\">v6</span>,\n                      &<span class=\"supfact\">v3</span>);\n      v10 += v1;\n    }\n  }\n  return v10;\n}", "code_t": "int __cdecl test_gtod() {\n  int v0;\n  int v1;\n  timezone <span class=\"supfact\">tz_vsys</span>;\n  timezone <span class=\"supfact\">tz_vdso</span>;\n  timezone <span class=\"supfact\">tz_sys</span>;\n  timeval <span class=\"supfact\">tv_vsys</span>;\n  timeval <span class=\"supfact\">tv_vdso</span>;\n  timeval <span class=\"supfact\">tv_sys2</span>;\n  timeval <span class=\"supfact\">tv_sys1</span>;\n  int nerrs;\n  __int64 ret_vsys;\n  __int64 ret_vdso;\n  ret_vdso = Number;\n  ret_vsys = Number;\n  nerrs = Number;\n  puts(String);\n  if (sys_gtod(&<span class=\"supfact\">tv_sys1</span>, &<span class=\"supfact\">tz_sys</span>))\n    err(Number, String);\n  if (vdso_gtod)\n    ret_vdso = vdso_gtod(&<span class=\"supfact\">tv_vdso</span>, &<span class=\"supfact\">tz_vdso</span>);\n  if (vsyscall_map_x)\n    ret_vsys =\n        MEMORY[Number](&<span class=\"supfact\">tv_vsys</span>, &<span class=\"supfact\">tz_vsys</span>);\n  if (sys_gtod(&<span class=\"supfact\">tv_sys2</span>, &<span class=\"supfact\">tz_sys</span>))\n    err(Number, String);\n  if (vdso_gtod) {\n    if (ret_vdso) {\n      printf(String, ret_vdso);\n      ++nerrs;\n    } else {\n      v0 = check_gtod(&<span class=\"supfact\">tv_sys1</span>, &<span class=\"supfact\">tv_sys2</span>,\n                      &<span class=\"supfact\">tz_sys</span>, String, &<span class=\"supfact\">tv_vdso</span>,\n                      &<span class=\"supfact\">tz_vdso</span>);\n      nerrs += v0;\n    }\n  }\n  if (vsyscall_map_x) {\n    if (ret_vsys) {\n      printf(String, ret_vsys);\n      ++nerrs;\n    } else {\n      v1 = check_gtod(&<span class=\"supfact\">tv_sys1</span>, &<span class=\"supfact\">tv_sys2</span>,\n                      &<span class=\"supfact\">tz_sys</span>, String, &<span class=\"supfact\">tv_vsys</span>,\n                      &<span class=\"supfact\">tz_vsys</span>);\n      nerrs += v1;\n    }\n  }\n  return nerrs;\n}", "var": [{"name": "v9", "type": "__va_list_tag[1]", "ref_name": "tv_sys1", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}, {"name": "v8", "type": "char[16]", "ref_name": "tv_sys2", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}, {"name": "v7", "type": "char[16]", "ref_name": "tv_vdso", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}, {"name": "v6", "type": "char[16]", "ref_name": "tv_vsys", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}, {"name": "v5", "type": "int", "ref_name": "tz_sys", "ref_type": "struct timezone { int tz_minuteswest; int tz_dsttime; }"}, {"name": "v4", "type": "int", "ref_name": "tz_vdso", "ref_type": "struct timezone { int tz_minuteswest; int tz_dsttime; }"}, {"name": "v3", "type": "int", "ref_name": "tz_vsys", "ref_type": "struct timezone { int tz_minuteswest; int tz_dsttime; }"}], "body_in_train": false}, {"repo_owner": "mstoilov", "repo_name": "rpatk", "path": "mstoilov/rpatk/854f3e568a9afd98774cedd7c686e4f523f055fb0146229d91c795c01c512cf8", "path_in_repo": "mstoilov/rpatk/rvm/build/unix/x86_64/out/librvm.so.2.0", "objdump": "000000000000d202 <rvm_reg_create_ophandler>:\n    d202:\t55                   \tpush   %rbp\n    d203:\t48 89 e5             \tmov    %rsp,%rbp\n    d206:\t48 83 ec 20          \tsub    $0x20,%rsp\n    d20a:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    d20e:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    d212:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n    d216:\t48 89 d6             \tmov    %rdx,%rsi\n    d219:\t48 89 c7             \tmov    %rax,%rdi\n    d21c:\te8 ff 73 ff ff       \tcallq  4620 <rvm_reg_setophandler@plt>\n    d221:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    d225:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    d229:\tc9                   \tleaveq \n    d22a:\tc3                   \tretq   ", "code_s": "__int64 __fastcall rvm_reg_create_ophandler(__int64 a1) {\n  __int64 <span class=\"supfact\">v2</span>;\n  rvm_reg_setophandler(&<span class=\"supfact\">v2</span>, a1);\n  return <span class=\"supfact\">v2</span>;\n}", "code_t": "rvmreg_t __cdecl rvm_reg_create_ophandler(rpointer p) {\n  rvmreg_t <span class=\"supfact\">r</span>;\n  rvm_reg_setophandler(&<span class=\"supfact\">r</span>, p);\n  return <span class=\"supfact\">r</span>;\n}", "var": [{"name": "v2", "type": "rmap_t *", "ref_name": "r", "ref_type": "struct rvmreg_t { $8B83D36BBA2B5A9DA35EC761161D149E v; ruint32 size; rvmreg_type_t type; rvmreg_flags_t flags; }"}], "body_in_train": false}, {"repo_owner": "EunjuYang", "repo_name": "DCS2019", "path": "EunjuYang/DCS2019/49722bfb227d2f2c7f49dd4df9c70ecddaf704137f93b738c989ef72f2e6e431", "path_in_repo": "EunjuYang/DCS2019/unpv13e/sock/multicast.o", "objdump": "0000000000000000 <join_mcast>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 83 ec 20          \tsub    $0x20,%rsp\n   8:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n   b:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n   f:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  13:\t8b 40 04             \tmov    0x4(%rax),%eax\n  16:\t89 c0                \tmov    %eax,%eax\n  18:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  1c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  20:\t25 00 00 00 f0       \tand    $0xf0000000,%eax\n  25:\t3d 00 00 00 e0       \tcmp    $0xe0000000,%eax\n  2a:\t75 73                \tjne    9f <join_mcast+0x9f>\n  2c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  30:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n  33:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  38:\te8 00 00 00 00       \tcallq  3d <join_mcast+0x3d>\n  3d:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  40:\t48 8d 55 f0          \tlea    -0x10(%rbp),%rdx\n  44:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  47:\t41 b8 08 00 00 00    \tmov    $0x8,%r8d\n  4d:\t48 89 d1             \tmov    %rdx,%rcx\n  50:\tba 23 00 00 00       \tmov    $0x23,%edx\n  55:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  5a:\t89 c7                \tmov    %eax,%edi\n  5c:\te8 00 00 00 00       \tcallq  61 <join_mcast+0x61>\n  61:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n  64:\t75 0f                \tjne    75 <join_mcast+0x75>\n  66:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  6b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  70:\te8 00 00 00 00       \tcallq  75 <join_mcast+0x75>\n  75:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 7b <join_mcast+0x7b>\n  7b:\t85 c0                \ttest   %eax,%eax\n  7d:\t74 21                \tje     a0 <join_mcast+0xa0>\n  7f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 86 <join_mcast+0x86>\n  86:\t48 89 c1             \tmov    %rax,%rcx\n  89:\tba 17 00 00 00       \tmov    $0x17,%edx\n  8e:\tbe 01 00 00 00       \tmov    $0x1,%esi\n  93:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  98:\te8 00 00 00 00       \tcallq  9d <join_mcast+0x9d>\n  9d:\teb 01                \tjmp    a0 <join_mcast+0xa0>\n  9f:\t90                   \tnop\n  a0:\tc9                   \tleaveq \n  a1:\tc3                   \tretq   \n", "code_s": "size_t __fastcall join_mcast(int a1, __int64 a2) {\n  size_t result;\n  int <span class=\"supfact\">optval</span>[Number];\n  __int64 v4;\n  v4 = *(unsigned int *)(a2 + Number);\n  result = (unsigned int)v4 & Number;\n  if ((_DWORD)result == Number) {\n    <span class=\"supfact\">optval</span>[Number] = v4;\n    <span class=\"supfact\">optval</span>[Number] = htonl(Number);\n    if (setsockopt(a1, Number, Number, <span class=\"supfact\">optval</span>, Number) ==\n        Number)\n      err_sys(String);\n    result = verbose;\n    if (verbose)\n      result = fwrite(String, Number, Number, stderr);\n  }\n  return result;\n}", "code_t": "void __cdecl join_mcast(int fd, sockaddr_in *sin) {\n  ip_mreq <span class=\"supfact\">mreq</span>;\n  u_long inaddr;\n  inaddr = sin->sin_addr.s_addr;\n  if ((inaddr & Number) == Number) {\n    <span class=\"supfact\">mreq</span>.imr_multiaddr.s_addr = inaddr;\n    <span class=\"supfact\">mreq</span>.imr_interface.s_addr = htonl(Number);\n    if (setsockopt(fd, Number, Number, &<span class=\"supfact\">mreq</span>, Number) == Number)\n      err_sys(String);\n    if (verbose)\n      fwrite(String, Number, Number, stderr);\n  }\n}", "var": [{"name": "optval", "type": "int", "ref_name": "mreq", "ref_type": "struct ip_mreq { in_addr imr_multiaddr; in_addr imr_interface; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/06598c09babb55e178e8c8c3155b037a828ea5bef219725349a6c3eae0c73702", "path_in_repo": "XanClic/qemu//hw/scsi/scsi-generic.o", "objdump": "0000000000001eb8 <scsi_SG_IO_FROM_DEV>:\n    1eb8:\t55                   \tpush   %rbp\n    1eb9:\t48 89 e5             \tmov    %rsp,%rbp\n    1ebc:\t48 81 ec a0 00 00 00 \tsub    $0xa0,%rsp\n    1ec3:\t48 89 bd 78 ff ff ff \tmov    %rdi,-0x88(%rbp)\n    1eca:\t48 89 b5 70 ff ff ff \tmov    %rsi,-0x90(%rbp)\n    1ed1:\t89 d0                \tmov    %edx,%eax\n    1ed3:\t48 89 8d 60 ff ff ff \tmov    %rcx,-0xa0(%rbp)\n    1eda:\t44 89 c2             \tmov    %r8d,%edx\n    1edd:\t88 85 6c ff ff ff    \tmov    %al,-0x94(%rbp)\n    1ee3:\t89 d0                \tmov    %edx,%eax\n    1ee5:\t88 85 68 ff ff ff    \tmov    %al,-0x98(%rbp)\n    1eeb:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    1ef2:\t00 00 \n    1ef4:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1ef8:\t31 c0                \txor    %eax,%eax\n    1efa:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    1efe:\tba 58 00 00 00       \tmov    $0x58,%edx\n    1f03:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1f08:\t48 89 c7             \tmov    %rax,%rdi\n    1f0b:\te8 00 00 00 00       \tcallq  1f10 <scsi_SG_IO_FROM_DEV+0x58>\n    1f10:\tc7 45 90 53 00 00 00 \tmovl   $0x53,-0x70(%rbp)\n    1f17:\tc7 45 94 fd ff ff ff \tmovl   $0xfffffffd,-0x6c(%rbp)\n    1f1e:\t0f b6 85 68 ff ff ff \tmovzbl -0x98(%rbp),%eax\n    1f25:\t89 45 9c             \tmov    %eax,-0x64(%rbp)\n    1f28:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    1f2f:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n    1f33:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n    1f3a:\t48 89 45 a8          \tmov    %rax,-0x58(%rbp)\n    1f3e:\t0f b6 85 6c ff ff ff \tmovzbl -0x94(%rbp),%eax\n    1f45:\t88 45 98             \tmov    %al,-0x68(%rbp)\n    1f48:\tc6 45 99 08          \tmovb   $0x8,-0x67(%rbp)\n    1f4c:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n    1f50:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n    1f54:\tc7 45 b8 70 17 00 00 \tmovl   $0x1770,-0x48(%rbp)\n    1f5b:\t48 8d 55 90          \tlea    -0x70(%rbp),%rdx\n    1f5f:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    1f66:\tbe 85 22 00 00       \tmov    $0x2285,%esi\n    1f6b:\t48 89 c7             \tmov    %rax,%rdi\n    1f6e:\te8 00 00 00 00       \tcallq  1f73 <scsi_SG_IO_FROM_DEV+0xbb>\n    1f73:\t89 45 8c             \tmov    %eax,-0x74(%rbp)\n    1f76:\t83 7d 8c 00          \tcmpl   $0x0,-0x74(%rbp)\n    1f7a:\t78 12                \tjs     1f8e <scsi_SG_IO_FROM_DEV+0xd6>\n    1f7c:\t0f b7 45 d6          \tmovzwl -0x2a(%rbp),%eax\n    1f80:\t66 85 c0             \ttest   %ax,%ax\n    1f83:\t75 09                \tjne    1f8e <scsi_SG_IO_FROM_DEV+0xd6>\n    1f85:\t0f b7 45 d4          \tmovzwl -0x2c(%rbp),%eax\n    1f89:\t66 85 c0             \ttest   %ax,%ax\n    1f8c:\t74 07                \tje     1f95 <scsi_SG_IO_FROM_DEV+0xdd>\n    1f8e:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    1f93:\teb 05                \tjmp    1f9a <scsi_SG_IO_FROM_DEV+0xe2>\n    1f95:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1f9a:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    1f9e:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n    1fa5:\t00 00 \n    1fa7:\t74 05                \tje     1fae <scsi_SG_IO_FROM_DEV+0xf6>\n    1fa9:\te8 00 00 00 00       \tcallq  1fae <scsi_SG_IO_FROM_DEV+0xf6>\n    1fae:\tc9                   \tleaveq \n    1faf:\tc3                   \tretq   ", "code_s": "__int64 __fastcall scsi_SG_IO_FROM_DEV(__int64 a1, __int64 a2, char a3,\n                                       __int64 a4, unsigned __int8 a5) {\n  __int64 result;\n  _QWORD <span class=\"supfact\">s</span>[Number];\n  char v10;\n  unsigned __int64 v11;\n  v11 = __readfsqword(Number);\n  memset(<span class=\"supfact\">s</span>, Number, Number);\n  <span class=\"supfact\">s</span>[Number] = Number;\n  HIDWORD(<span class=\"supfact\">s</span>[Number]) = a5;\n  <span class=\"supfact\">s</span>[Number] = a4;\n  <span class=\"supfact\">s</span>[Number] = a2;\n  LOBYTE(<span class=\"supfact\">s</span>[Number]) = a3;\n  BYTE1(<span class=\"supfact\">s</span>[Number]) = Number;\n  <span class=\"supfact\">s</span>[Number] = &v10;\n  LODWORD(<span class=\"supfact\">s</span>[Number]) = Number;\n  if ((int)blk_ioctl(a1, Number L, <span class=\"supfact\">s</span>) < Number ||\n      HIDWORD(<span class=\"supfact\">s</span>[Number]))\n    result = Number;\n  else\n    result = Number L;\n  return result;\n}", "code_t": "int __cdecl scsi_SG_IO_FROM_DEV(BlockBackend_0 *blk, uint8_t *cmd,\n                                uint8_t cmd_size, uint8_t *buf,\n                                uint8_t buf_size) {\n  int result;\n  sg_io_hdr_t <span class=\"supfact\">io_header</span>;\n  uint8_t sensebuf[Number];\n  unsigned __int64 v11;\n  v11 = __readfsqword(Number);\n  memset(&<span class=\"supfact\">io_header</span>, Number, sizeof(<span class=\"supfact\">io_header</span>));\n  <span class=\"supfact\">io_header</span>.interface_id = Number;\n  <span class=\"supfact\">io_header</span>.dxfer_direction = Number;\n  <span class=\"supfact\">io_header</span>.dxfer_len = buf_size;\n  <span class=\"supfact\">io_header</span>.dxferp = buf;\n  <span class=\"supfact\">io_header</span>.cmdp = cmd;\n  <span class=\"supfact\">io_header</span>.cmd_len = cmd_size;\n  <span class=\"supfact\">io_header</span>.mx_sb_len = Number;\n  <span class=\"supfact\">io_header</span>.sbp = sensebuf;\n  <span class=\"supfact\">io_header</span>.timeout = Number;\n  if ((int)blk_ioctl(blk, Number L, &<span class=\"supfact\">io_header</span>) < Number ||\n      <span class=\"supfact\">io_header</span>.driver_status ||\n      <span class=\"supfact\">io_header</span>.host_status)\n    result = Number;\n  else\n    result = Number;\n  return result;\n}", "var": [{"name": "s", "type": "__unk__", "ref_name": "io_header", "ref_type": "struct sg_io_hdr_t { int interface_id; int dxfer_direction; unsigned __int8 cmd_len; unsigned __int8 mx_sb_len; unsigned __int16 iovec_count; unsigned int dxfer_len; void * dxferp; unsigned __int8 * cmdp; unsigned __int8 * sbp; unsigned int timeout; unsigned int flags; int pack_id; PADDING (4); void * usr_ptr; unsigned __int8 status; unsigned __int8 masked_status; unsigned __int8 msg_status; unsigned __int8 sb_len_wr; unsigned __int16 host_status; unsigned __int16 driver_status; int resid; unsigned int duration; unsigned int info; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "danielgelbart", "repo_name": "bets", "path": "danielgelbart/bets/6dbd861a8160298bb6c8aa514bec7655efa034bc200b7abcab0fb753c1b20cea", "path_in_repo": "danielgelbart/bets/cpp/src/RunInfo.o", "objdump": "0000000000000000 <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t53                   \tpush   %rbx\n   5:\t48 81 ec 98 00 00 00 \tsub    $0x98,%rsp\n   c:\t48 89 bd 68 ff ff ff \tmov    %rdi,-0x98(%rbp)\n  13:\t48 89 b5 60 ff ff ff \tmov    %rsi,-0xa0(%rbp)\n  1a:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n  21:\t48 89 c7             \tmov    %rax,%rdi\n  24:\te8 00 00 00 00       \tcallq  29 <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x29>\n  29:\te8 00 00 00 00       \tcallq  2e <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2e>\n  2e:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  32:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  36:\t48 89 c7             \tmov    %rax,%rdi\n  39:\te8 00 00 00 00       \tcallq  3e <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3e>\n  3e:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n  42:\t48 8b 95 60 ff ff ff \tmov    -0xa0(%rbp),%rdx\n  49:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  4d:\t48 89 d6             \tmov    %rdx,%rsi\n  50:\t48 89 c7             \tmov    %rax,%rdi\n  53:\te8 00 00 00 00       \tcallq  58 <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x58>\n  58:\t48 89 85 70 ff ff ff \tmov    %rax,-0x90(%rbp)\n  5f:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  63:\t48 89 c7             \tmov    %rax,%rdi\n  66:\te8 00 00 00 00       \tcallq  6b <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b>\n  6b:\t48 89 85 78 ff ff ff \tmov    %rax,-0x88(%rbp)\n  72:\t48 8d 95 78 ff ff ff \tlea    -0x88(%rbp),%rdx\n  79:\t48 8d 85 70 ff ff ff \tlea    -0x90(%rbp),%rax\n  80:\t48 89 d6             \tmov    %rdx,%rsi\n  83:\t48 89 c7             \tmov    %rax,%rdi\n  86:\te8 00 00 00 00       \tcallq  8b <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8b>\n  8b:\t84 c0                \ttest   %al,%al\n  8d:\t74 69                \tje     f8 <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xf8>\n  8f:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n  93:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  98:\tba 00 00 00 00       \tmov    $0x0,%edx\n  9d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  a2:\t48 89 c7             \tmov    %rax,%rdi\n  a5:\te8 00 00 00 00       \tcallq  aa <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xaa>\n  aa:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  ae:\t48 8b 95 60 ff ff ff \tmov    -0xa0(%rbp),%rdx\n  b5:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  ba:\t48 89 c7             \tmov    %rax,%rdi\n  bd:\te8 00 00 00 00       \tcallq  c2 <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc2>\n  c2:\t48 8d 55 a0          \tlea    -0x60(%rbp),%rdx\n  c6:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n  ca:\t48 89 d6             \tmov    %rdx,%rsi\n  cd:\t48 89 c7             \tmov    %rax,%rdi\n  d0:\te8 00 00 00 00       \tcallq  d5 <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5>\n  d5:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  da:\t48 89 c7             \tmov    %rax,%rdi\n  dd:\te8 00 00 00 00       \tcallq  e2 <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe2>\n  e2:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  e6:\t48 89 c7             \tmov    %rax,%rdi\n  e9:\te8 00 00 00 00       \tcallq  ee <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xee>\n  ee:\tbf ff ff ff ff       \tmov    $0xffffffff,%edi\n  f3:\te8 00 00 00 00       \tcallq  f8 <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xf8>\n  f8:\t48 8d 85 70 ff ff ff \tlea    -0x90(%rbp),%rax\n  ff:\t48 89 c7             \tmov    %rax,%rdi\n 102:\te8 00 00 00 00       \tcallq  107 <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x107>\n 107:\t48 8d 50 20          \tlea    0x20(%rax),%rdx\n 10b:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 10f:\t48 89 d6             \tmov    %rdx,%rsi\n 112:\t48 89 c7             \tmov    %rax,%rdi\n 115:\te8 00 00 00 00       \tcallq  11a <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x11a>\n 11a:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n 11e:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n 125:\t48 89 d6             \tmov    %rdx,%rsi\n 128:\t48 89 c7             \tmov    %rax,%rdi\n 12b:\te8 00 00 00 00       \tcallq  130 <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x130>\n 130:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 134:\t48 89 c7             \tmov    %rax,%rdi\n 137:\te8 00 00 00 00       \tcallq  13c <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x13c>\n 13c:\teb 2e                \tjmp    16c <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x16c>\n 13e:\t48 89 c3             \tmov    %rax,%rbx\n 141:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n 145:\t48 89 c7             \tmov    %rax,%rdi\n 148:\te8 00 00 00 00       \tcallq  14d <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x14d>\n 14d:\teb 03                \tjmp    152 <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x152>\n 14f:\t48 89 c3             \tmov    %rax,%rbx\n 152:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n 159:\t48 89 c7             \tmov    %rax,%rdi\n 15c:\te8 00 00 00 00       \tcallq  161 <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x161>\n 161:\t48 89 d8             \tmov    %rbx,%rax\n 164:\t48 89 c7             \tmov    %rax,%rdi\n 167:\te8 00 00 00 00       \tcallq  16c <_Z9confParamIN5boost10filesystem4pathEET_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x16c>\n 16c:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n 173:\t48 81 c4 98 00 00 00 \tadd    $0x98,%rsp\n 17a:\t5b                   \tpop    %rbx\n 17b:\t5d                   \tpop    %rbp\n 17c:\tc3                   \tretq   ", "code_s": "boost filesystem path *__fastcall confParam<boost filesystem path>(\n    boost filesystem path *a1, __int64 a2) {\n  __int64 v2;\n  __int64 v3;\n  __int64 v5;\n  __int64 <span class=\"supfact\">v6</span>;\n  char v7[Number];\n  char <span class=\"supfact\">v8</span>[Number];\n  char <span class=\"supfact\">v9</span>[Number];\n  __int64 v10;\n  __int64 v11;\n  boost filesystem path path(a1);\n  v11 = Config instance(a1);\n  v10 = Config getParams[abi:cxx11](v11);\n  v5 = std\n      map<std __cxx11\n              basic_string<char, std char_traits<char>, std allocator<char>>,\n          std __cxx11\n              basic_string<char, std char_traits<char>, std allocator<char>>>\n          find(v10, a2);\n  <span class=\"supfact\">v6</span> = std\n      map<std __cxx11\n              basic_string<char, std char_traits<char>, std allocator<char>>,\n          std __cxx11\n              basic_string<char, std char_traits<char>, std allocator<char>>>\n          end(v10);\n  if ((unsigned __int8)std operator==(&v5, &<span class=\"supfact\">v6</span>)) {\n    LogMessage LogMessage((__int64)v7, Number, (__int64)String,\n                          (__int64)String);\n    std operator+<char>(<span class=\"supfact\">v8</span>, String, a2);\n    v2 = LogMessage operator<<<std __cxx11 basic_string<\n        char, std char_traits<char>, std allocator<char>>>(v7,\n                                                           <span class=\"supfact\">v8</span>);\n    LogMessage operator<<<char[Number]>(v2, String);\n    std __cxx11\n        basic_string<char, std char_traits<char>,\n                     std allocator<char>> ~basic_string(<span class=\"supfact\">v8</span>);\n    exit(Number);\n  }\n  v3 = std _Rb_tree_const_iterator<std pair<\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>> const,\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>>>\n       operator->(&v5);\n  fromString<boost filesystem path>(<span class=\"supfact\">v9</span>, v3 + Number);\n  boost filesystem path operator=((__int64)a1, (__int64)<span class=\"supfact\">v9</span>);\n  boost filesystem path ~path((boost filesystem path *)<span class=\"supfact\">v9</span>);\n  return a1;\n}", "code_t": "boost filesystem path *__cdecl confParam<boost filesystem path>(\n    boost filesystem path *retstr, const std string *param) {\n  LogMessage *v2;\n  std _Rb_tree_const_iterator<std pair<\n      const std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>,\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>>>\n      pointer v3;\n  std map<std __cxx11\n              basic_string<char, std char_traits<char>, std allocator<char>>,\n          std __cxx11\n              basic_string<char, std char_traits<char>, std allocator<char>>>\n      const_iterator iFind;\n  std _Rb_tree_const_iterator<std pair<\n      const std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>,\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>>>\n      _Self <span class=\"supfact\">__y</span>;\n  LogMessage v7;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      <span class=\"supfact\">t</span>;\n  boost filesystem path <span class=\"supfact\">p</span>;\n  const Config Params2ValuesMap *paramsMap;\n  Config *conf;\n  boost filesystem path path(retstr);\n  conf = (Config *)Config instance((Config *)retstr);\n  paramsMap = Config getParams[abi:cxx11](conf);\n  iFind._M_node = std map<std __cxx11 basic_string<char, std char_traits<char>,\n                                                   std allocator<char>>,\n                          std __cxx11 basic_string<char, std char_traits<char>,\n                                                   std allocator<char>>>\n                      find(paramsMap, param)._M_node;\n  <span class=\"supfact\">__y</span>._M_node =\n      std map<std __cxx11 basic_string<char, std char_traits<char>,\n                                       std allocator<char>>,\n              std __cxx11 basic_string<char, std char_traits<char>,\n                                       std allocator<char>>>\n          end(paramsMap)._M_node;\n  if (std operator==(&iFind, &<span class=\"supfact\">__y</span>)) {\n    LogMessage LogMessage(&v7, LL_ERROR, String, String);\n    std operator+<char>(&<span class=\"supfact\">t</span>, String, param);\n    v2 = LogMessage operator<<<std __cxx11 basic_string<\n        char, std char_traits<char>, std allocator<char>>>(&v7,\n                                                           &<span class=\"supfact\">t</span>);\n    LogMessage operator<<<char[Number]>(v2, (const char(*)[Number])String);\n    std __cxx11\n        basic_string<char, std char_traits<char>,\n                     std allocator<char>> ~basic_string(&<span class=\"supfact\">t</span>);\n    exit(Number);\n  }\n  v3 = std _Rb_tree_const_iterator<std pair<\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>> const,\n      std __cxx11\n          basic_string<char, std char_traits<char>, std allocator<char>>>>\n       operator->(&iFind);\n  fromString<boost filesystem path>(&<span class=\"supfact\">p</span>, &v3->second);\n  boost filesystem path operator=(retstr, &<span class=\"supfact\">p</span>);\n  boost filesystem path ~path(&<span class=\"supfact\">p</span>);\n  return retstr;\n}", "var": [{"name": "v9", "type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }", "ref_name": "p", "ref_type": "struct boost::filesystem::path { boost::filesystem::path::string_type m_pathname; }"}, {"name": "v8", "type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }", "ref_name": "t", "ref_type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}, {"name": "v6", "type": "__unk__", "ref_name": "__y", "ref_type": "struct std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Self { std::_Rb_tree_const_iterator<std::pair<const std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Base_ptr _M_node; }"}], "body_in_train": false}, {"repo_owner": "marcelloceschia", "repo_name": "asterisk-11-extended_codec", "path": "marcelloceschia/asterisk-11-extended_codec/bb23baad9410db03653a7335a8de8f21ec60932d0757e6cbf9079172eae88e04", "path_in_repo": "marcelloceschia/asterisk-11-extended_codec/res/pjproject/pjsip/build/output/pjsip-x86_64-unknown-linux-gnu/sip_auth_server.o", "objdump": "0000000000000273 <pjsip_auth_srv_verify>:\n 273:\t55                   \tpush   %rbp\n 274:\t48 89 e5             \tmov    %rsp,%rbp\n 277:\t48 81 ec d0 00 00 00 \tsub    $0xd0,%rsp\n 27e:\t48 89 bd 48 ff ff ff \tmov    %rdi,-0xb8(%rbp)\n 285:\t48 89 b5 40 ff ff ff \tmov    %rsi,-0xc0(%rbp)\n 28c:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n 293:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 29a:\t48 8b 80 58 11 00 00 \tmov    0x1158(%rax),%rax\n 2a1:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n 2a5:\t48 83 bd 48 ff ff ff \tcmpq   $0x0,-0xb8(%rbp)\n 2ac:\t00 \n 2ad:\t74 0a                \tje     2b9 <pjsip_auth_srv_verify+0x46>\n 2af:\t48 83 bd 40 ff ff ff \tcmpq   $0x0,-0xc0(%rbp)\n 2b6:\t00 \n 2b7:\t75 37                \tjne    2f0 <pjsip_auth_srv_verify+0x7d>\n 2b9:\t48 83 bd 48 ff ff ff \tcmpq   $0x0,-0xb8(%rbp)\n 2c0:\t00 \n 2c1:\t74 0a                \tje     2cd <pjsip_auth_srv_verify+0x5a>\n 2c3:\t48 83 bd 40 ff ff ff \tcmpq   $0x0,-0xc0(%rbp)\n 2ca:\t00 \n 2cb:\t75 19                \tjne    2e6 <pjsip_auth_srv_verify+0x73>\n 2cd:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 2d2:\tba 71 00 00 00       \tmov    $0x71,%edx\n 2d7:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 2dc:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 2e1:\te8 00 00 00 00       \tcallq  2e6 <pjsip_auth_srv_verify+0x73>\n 2e6:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n 2eb:\te9 f4 01 00 00       \tjmpq   4e4 <pjsip_auth_srv_verify+0x271>\n 2f0:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 2f4:\t8b 00                \tmov    (%rax),%eax\n 2f6:\t85 c0                \ttest   %eax,%eax\n 2f8:\t74 2d                \tje     327 <pjsip_auth_srv_verify+0xb4>\n 2fa:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 2fe:\t8b 00                \tmov    (%rax),%eax\n 300:\t85 c0                \ttest   %eax,%eax\n 302:\t74 19                \tje     31d <pjsip_auth_srv_verify+0xaa>\n 304:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 309:\tba 72 00 00 00       \tmov    $0x72,%edx\n 30e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 313:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 318:\te8 00 00 00 00       \tcallq  31d <pjsip_auth_srv_verify+0xaa>\n 31d:\tb8 0d 9c 02 00       \tmov    $0x29c0d,%eax\n 322:\te9 bd 01 00 00       \tjmpq   4e4 <pjsip_auth_srv_verify+0x271>\n 327:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n 32e:\t8b 40 10             \tmov    0x10(%rax),%eax\n 331:\t85 c0                \ttest   %eax,%eax\n 333:\t74 07                \tje     33c <pjsip_auth_srv_verify+0xc9>\n 335:\tb8 1b 00 00 00       \tmov    $0x1b,%eax\n 33a:\teb 05                \tjmp    341 <pjsip_auth_srv_verify+0xce>\n 33c:\tb8 06 00 00 00       \tmov    $0x6,%eax\n 341:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n 344:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 34b:\tc7 00 c8 00 00 00    \tmovl   $0xc8,(%rax)\n 351:\t8b 4d ec             \tmov    -0x14(%rbp),%ecx\n 354:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 358:\tba 00 00 00 00       \tmov    $0x0,%edx\n 35d:\t89 ce                \tmov    %ecx,%esi\n 35f:\t48 89 c7             \tmov    %rax,%rdi\n 362:\te8 00 00 00 00       \tcallq  367 <pjsip_auth_srv_verify+0xf4>\n 367:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 36b:\teb 5b                \tjmp    3c8 <pjsip_auth_srv_verify+0x155>\n 36d:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n 374:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n 378:\t48 83 c2 50          \tadd    $0x50,%rdx\n 37c:\t48 89 c6             \tmov    %rax,%rsi\n 37f:\t48 89 d7             \tmov    %rdx,%rdi\n 382:\te8 00 00 00 00       \tcallq  387 <pjsip_auth_srv_verify+0x114>\n 387:\t85 c0                \ttest   %eax,%eax\n 389:\t74 46                \tje     3d1 <pjsip_auth_srv_verify+0x15e>\n 38b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 38f:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n 393:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 397:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 39b:\t48 83 c0 28          \tadd    $0x28,%rax\n 39f:\t48 39 45 f8          \tcmp    %rax,-0x8(%rbp)\n 3a3:\t75 0a                \tjne    3af <pjsip_auth_srv_verify+0x13c>\n 3a5:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n 3ac:\t00 \n 3ad:\teb 23                \tjmp    3d2 <pjsip_auth_srv_verify+0x15f>\n 3af:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n 3b3:\t8b 4d ec             \tmov    -0x14(%rbp),%ecx\n 3b6:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 3ba:\t89 ce                \tmov    %ecx,%esi\n 3bc:\t48 89 c7             \tmov    %rax,%rdi\n 3bf:\te8 00 00 00 00       \tcallq  3c4 <pjsip_auth_srv_verify+0x151>\n 3c4:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 3c8:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n 3cd:\t75 9e                \tjne    36d <pjsip_auth_srv_verify+0xfa>\n 3cf:\teb 01                \tjmp    3d2 <pjsip_auth_srv_verify+0x15f>\n 3d1:\t90                   \tnop\n 3d2:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n 3d7:\t75 2d                \tjne    406 <pjsip_auth_srv_verify+0x193>\n 3d9:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n 3e0:\t8b 40 10             \tmov    0x10(%rax),%eax\n 3e3:\t85 c0                \ttest   %eax,%eax\n 3e5:\t74 07                \tje     3ee <pjsip_auth_srv_verify+0x17b>\n 3e7:\tba 97 01 00 00       \tmov    $0x197,%edx\n 3ec:\teb 05                \tjmp    3f3 <pjsip_auth_srv_verify+0x180>\n 3ee:\tba 91 01 00 00       \tmov    $0x191,%edx\n 3f3:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 3fa:\t89 10                \tmov    %edx,(%rax)\n 3fc:\tb8 62 9c 02 00       \tmov    $0x29c62,%eax\n 401:\te9 de 00 00 00       \tjmpq   4e4 <pjsip_auth_srv_verify+0x271>\n 406:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 40a:\t48 83 c0 40          \tadd    $0x40,%rax\n 40e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 413:\t48 89 c7             \tmov    %rax,%rdi\n 416:\te8 00 00 00 00       \tcallq  41b <pjsip_auth_srv_verify+0x1a8>\n 41b:\t85 c0                \ttest   %eax,%eax\n 41d:\t75 52                \tjne    471 <pjsip_auth_srv_verify+0x1fe>\n 41f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 423:\t48 8b 90 98 00 00 00 \tmov    0x98(%rax),%rdx\n 42a:\t48 8b 80 90 00 00 00 \tmov    0x90(%rax),%rax\n 431:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n 435:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n 439:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n 440:\t4c 8b 40 18          \tmov    0x18(%rax),%r8\n 444:\t48 8b b5 48 ff ff ff \tmov    -0xb8(%rbp),%rsi\n 44b:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 452:\t48 8b 00             \tmov    (%rax),%rax\n 455:\t48 8d 8d 50 ff ff ff \tlea    -0xb0(%rbp),%rcx\n 45c:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n 460:\t48 89 c7             \tmov    %rax,%rdi\n 463:\t41 ff d0             \tcallq  *%r8\n 466:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n 469:\t83 7d e8 00          \tcmpl   $0x0,-0x18(%rbp)\n 46d:\t74 3e                \tje     4ad <pjsip_auth_srv_verify+0x23a>\n 46f:\teb 2a                \tjmp    49b <pjsip_auth_srv_verify+0x228>\n 471:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n 478:\t8b 40 10             \tmov    0x10(%rax),%eax\n 47b:\t85 c0                \ttest   %eax,%eax\n 47d:\t74 07                \tje     486 <pjsip_auth_srv_verify+0x213>\n 47f:\tba 97 01 00 00       \tmov    $0x197,%edx\n 484:\teb 05                \tjmp    48b <pjsip_auth_srv_verify+0x218>\n 486:\tba 91 01 00 00       \tmov    $0x191,%edx\n 48b:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 492:\t89 10                \tmov    %edx,(%rax)\n 494:\tb8 60 9c 02 00       \tmov    $0x29c60,%eax\n 499:\teb 49                \tjmp    4e4 <pjsip_auth_srv_verify+0x271>\n 49b:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 4a2:\tc7 00 93 01 00 00    \tmovl   $0x193,(%rax)\n 4a8:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n 4ab:\teb 37                \tjmp    4e4 <pjsip_auth_srv_verify+0x271>\n 4ad:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 4b1:\t48 8d 48 10          \tlea    0x10(%rax),%rcx\n 4b5:\t48 8d 95 50 ff ff ff \tlea    -0xb0(%rbp),%rdx\n 4bc:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 4c0:\t48 89 ce             \tmov    %rcx,%rsi\n 4c3:\t48 89 c7             \tmov    %rax,%rdi\n 4c6:\te8 0c fc ff ff       \tcallq  d7 <pjsip_auth_verify>\n 4cb:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n 4ce:\t83 7d e8 00          \tcmpl   $0x0,-0x18(%rbp)\n 4d2:\t74 0d                \tje     4e1 <pjsip_auth_srv_verify+0x26e>\n 4d4:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 4db:\tc7 00 93 01 00 00    \tmovl   $0x193,(%rax)\n 4e1:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n 4e4:\tc9                   \tleaveq \n 4e5:\tc3                   \tretq   ", "code_s": "__int64 __fastcall pjsip_auth_srv_verify(__int64 a1, _QWORD *a2, int *a3) {\n  __int64 result;\n  int v4;\n  int v5;\n  __int64 v6;\n  int v7;\n  char v9[Number];\n  __int64 <span class=\"supfact\">v10</span>[Number];\n  unsigned int v11;\n  unsigned int v12;\n  _DWORD *v13;\n  _QWORD *i;\n  v13 = (_DWORD *)a2[Number];\n  if (a1 && a2) {\n    if (*v13)\n      _assert_fail(String, String, Number, String);\n    if (*(_DWORD *)(a1 + Number))\n      v4 = Number;\n    else\n      v4 = Number;\n    v12 = v4;\n    *a3 = Number;\n    for (i = (_QWORD *)pjsip_msg_find_hdr(v13, v12, Number L);\n         i && (unsigned int)pj_stricmp(i + Number, a1);\n         i = (_QWORD *)pjsip_msg_find_hdr(v13, v12, i)) {\n      i = (_QWORD *)i[Number];\n      if (i == (_QWORD *)(v13 + Number)) {\n        i = Number L;\n        break;\n      }\n    }\n    if (i) {\n      if ((unsigned int)pj_stricmp(i + Number, &pjsip_DIGEST_STR)) {\n        if (*(_DWORD *)(a1 + Number))\n          v7 = Number;\n        else\n          v7 = Number;\n        *a3 = v7;\n        result = Number L;\n      } else {\n        v6 = i[Number];\n        <span class=\"supfact\">v10</span>[Number] = i[Number];\n        <span class=\"supfact\">v10</span>[Number] = v6;\n        v11 = (*(__int64(__fastcall **)(_QWORD, __int64, __int64 *, char *))(\n            a1 + Number))(*a2, a1, <span class=\"supfact\">v10</span>, v9);\n        if (v11) {\n          *a3 = Number;\n          result = v11;\n        } else {\n          v11 = pjsip_auth_verify((__int64)i, (__int64)(v13 + Number),\n                                  (__int64)v9);\n          if (v11)\n            *a3 = Number;\n          result = v11;\n        }\n      }\n    } else {\n      if (*(_DWORD *)(a1 + Number))\n        v5 = Number;\n      else\n        v5 = Number;\n      *a3 = v5;\n      result = Number L;\n    }\n  } else {\n    if (!a1 || !a2)\n      _assert_fail(String, String, Number, String);\n    result = Number L;\n  }\n  return result;\n}", "code_t": "pj_status_t __cdecl pjsip_auth_srv_verify(pjsip_auth_srv_0 *auth_srv,\n                                          pjsip_rx_data_0 *rdata,\n                                          int *status_code) {\n  pj_status_t result;\n  pjsip_hdr_e_0 v4;\n  int v5;\n  pj_ssize_t v6;\n  int v7;\n  pjsip_cred_info_0 cred_info;\n  pj_str_t_0 <span class=\"supfact\">acc_name</span>;\n  pj_status_t status;\n  pjsip_hdr_e_0 htype;\n  pjsip_msg_0 *msg;\n  pjsip_authorization_hdr_0 *h_auth;\n  msg = rdata->msg_info.msg;\n  if (auth_srv && rdata) {\n    if (msg->type)\n      _assert_fail(String, String, Number, String);\n    if (auth_srv->is_proxy)\n      v4 = PJSIP_H_PROXY_AUTHORIZATION;\n    else\n      v4 = PJSIP_H_AUTHORIZATION;\n    htype = v4;\n    *status_code = Number;\n    for (h_auth = (pjsip_authorization_hdr_0 *)pjsip_msg_find_hdr(\n             msg, (unsigned int)htype, Number L);\n         h_auth && (unsigned int)pj_stricmp(&h_auth->credential, auth_srv);\n         h_auth = (pjsip_authorization_hdr_0 *)pjsip_msg_find_hdr(\n             msg, (unsigned int)htype, h_auth)) {\n      h_auth = h_auth->next;\n      if (h_auth == (pjsip_authorization_hdr_0 *)&msg->hdr) {\n        h_auth = Number L;\n        break;\n      }\n    }\n    if (h_auth) {\n      if ((unsigned int)pj_stricmp(&h_auth->scheme, &pjsip_DIGEST_STR)) {\n        if (auth_srv->is_proxy)\n          v7 = Number;\n        else\n          v7 = Number;\n        *status_code = v7;\n        result = Number;\n      } else {\n        v6 = h_auth->credential.digest.username.slen;\n        <span class=\"supfact\">acc_name</span>.ptr = h_auth->credential.digest.username.ptr;\n        <span class=\"supfact\">acc_name</span>.slen = v6;\n        status =\n            auth_srv->lookup(rdata->tp_info.pool, (const pj_str_t_0 *)auth_srv,\n                             &<span class=\"supfact\">acc_name</span>, &cred_info);\n        if (status) {\n          *status_code = Number;\n          result = status;\n        } else {\n          status =\n              pjsip_auth_verify(h_auth, &msg->line.req.method.name, &cred_info);\n          if (status)\n            *status_code = Number;\n          result = status;\n        }\n      }\n    } else {\n      if (auth_srv->is_proxy)\n        v5 = Number;\n      else\n        v5 = Number;\n      *status_code = v5;\n      result = Number;\n    }\n  } else {\n    if (!auth_srv || !rdata)\n      _assert_fail(String, String, Number, String);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "v10", "type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }", "ref_name": "acc_name", "ref_type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }"}], "body_in_train": false}, {"repo_owner": "piecioshka", "repo_name": "pap-lab-5", "path": "piecioshka/pap-lab-5/757c9219190a8502adb50eabb6a5cea8a1106749589285c713ddc5abd496a0b2", "path_in_repo": "piecioshka/pap-lab-5//bin/zad1/klient.o", "objdump": "00000000004012ee <child_func>:\n  4012ee:\t55                   \tpush   %rbp\n  4012ef:\t48 89 e5             \tmov    %rsp,%rbp\n  4012f2:\t48 83 c4 80          \tadd    $0xffffffffffffff80,%rsp\n  4012f6:\t89 7d 8c             \tmov    %edi,-0x74(%rbp)\n  4012f9:\t48 89 75 80          \tmov    %rsi,-0x80(%rbp)\n  4012fd:\t89 55 88             \tmov    %edx,-0x78(%rbp)\n  401300:\tba 00 00 00 00       \tmov    $0x0,%edx\n  401305:\tbe 01 00 00 00       \tmov    $0x1,%esi\n  40130a:\tbf 02 00 00 00       \tmov    $0x2,%edi\n  40130f:\te8 1c fe ff ff       \tcallq  401130 <socket@plt>\n  401314:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  401317:\t66 c7 45 e0 02 00    \tmovw   $0x2,-0x20(%rbp)\n  40131d:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n  401321:\t48 89 c7             \tmov    %rax,%rdi\n  401324:\te8 77 fd ff ff       \tcallq  4010a0 <inet_addr@plt>\n  401329:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n  40132c:\t8b 45 88             \tmov    -0x78(%rbp),%eax\n  40132f:\t0f b7 c0             \tmovzwl %ax,%eax\n  401332:\t89 c7                \tmov    %eax,%edi\n  401334:\te8 17 fd ff ff       \tcallq  401050 <htons@plt>\n  401339:\t66 89 45 e2          \tmov    %ax,-0x1e(%rbp)\n  40133d:\t48 8d 4d e0          \tlea    -0x20(%rbp),%rcx\n  401341:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  401344:\tba 10 00 00 00       \tmov    $0x10,%edx\n  401349:\t48 89 ce             \tmov    %rcx,%rsi\n  40134c:\t89 c7                \tmov    %eax,%edi\n  40134e:\te8 9d fd ff ff       \tcallq  4010f0 <connect@plt>\n  401353:\t85 c0                \ttest   %eax,%eax\n  401355:\t74 0f                \tje     401366 <child_func+0x78>\n  401357:\tbf 36 20 40 00       \tmov    $0x402036,%edi\n  40135c:\te8 5f fd ff ff       \tcallq  4010c0 <perror@plt>\n  401361:\te9 aa 00 00 00       \tjmpq   401410 <child_func+0x122>\n  401366:\t8b 55 8c             \tmov    -0x74(%rbp),%edx\n  401369:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n  40136d:\t89 d1                \tmov    %edx,%ecx\n  40136f:\tba 3d 20 40 00       \tmov    $0x40203d,%edx\n  401374:\tbe 50 00 00 00       \tmov    $0x50,%esi\n  401379:\t48 89 c7             \tmov    %rax,%rdi\n  40137c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  401381:\te8 ea fc ff ff       \tcallq  401070 <snprintf@plt>\n  401386:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  40138b:\te8 70 fd ff ff       \tcallq  401100 <sleep@plt>\n  401390:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n  401394:\t48 89 c7             \tmov    %rax,%rdi\n  401397:\te8 a4 fc ff ff       \tcallq  401040 <strlen@plt>\n  40139c:\t48 89 c2             \tmov    %rax,%rdx\n  40139f:\t48 8d 4d 90          \tlea    -0x70(%rbp),%rcx\n  4013a3:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  4013a6:\t48 89 ce             \tmov    %rcx,%rsi\n  4013a9:\t89 c7                \tmov    %eax,%edi\n  4013ab:\te8 80 fc ff ff       \tcallq  401030 <write@plt>\n  4013b0:\t89 c2                \tmov    %eax,%edx\n  4013b2:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n  4013b5:\t89 c6                \tmov    %eax,%esi\n  4013b7:\tbf 51 20 40 00       \tmov    $0x402051,%edi\n  4013bc:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4013c1:\te8 9a fc ff ff       \tcallq  401060 <printf@plt>\n  4013c6:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  4013cb:\te8 30 fd ff ff       \tcallq  401100 <sleep@plt>\n  4013d0:\t48 8d 4d 90          \tlea    -0x70(%rbp),%rcx\n  4013d4:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  4013d7:\tba 50 00 00 00       \tmov    $0x50,%edx\n  4013dc:\t48 89 ce             \tmov    %rcx,%rsi\n  4013df:\t89 c7                \tmov    %eax,%edi\n  4013e1:\te8 aa fc ff ff       \tcallq  401090 <read@plt>\n  4013e6:\t89 c2                \tmov    %eax,%edx\n  4013e8:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n  4013eb:\t89 c6                \tmov    %eax,%esi\n  4013ed:\tbf 70 20 40 00       \tmov    $0x402070,%edi\n  4013f2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4013f7:\te8 64 fc ff ff       \tcallq  401060 <printf@plt>\n  4013fc:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  401401:\te8 fa fc ff ff       \tcallq  401100 <sleep@plt>\n  401406:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  401409:\t89 c7                \tmov    %eax,%edi\n  40140b:\te8 70 fc ff ff       \tcallq  401080 <close@plt>\n  401410:\tc9                   \tleaveq \n  401411:\tc3                   \tretq   \n  401412:\t66 2e 0f 1f 84 00 00 \tnopw   %cs:0x0(%rax,%rax,1)\n  401419:\t00 00 00 \n  40141c:\t0f 1f 40 00          \tnopl   0x0(%rax)", "code_s": "void __fastcall child_func(unsigned int a1, const char *a2, uint16_t a3) {\n  size_t v3;\n  unsigned int v4;\n  unsigned int v5;\n  char s[Number];\n  struct sockaddr <span class=\"supfact\">addr</span>;\n  int fd;\n  fd = socket(Number, Number, Number);\n  <span class=\"supfact\">addr</span>.sa_family = Number;\n  *(_DWORD *)&<span class=\"supfact\">addr</span>.sa_data[Number] = inet_addr(a2);\n  *(_WORD *)<span class=\"supfact\">addr</span>.sa_data = htons(a3);\n  if (connect(fd, &<span class=\"supfact\">addr</span>, Number)) {\n    perror(String);\n  } else {\n    snprintf(s, Number, String, a1);\n    sleep(Number);\n    v3 = strlen(s);\n    v4 = write(fd, s, v3);\n    printf(String, a1, v4);\n    sleep(Number);\n    v5 = read(fd, s, Number);\n    printf(String, a1, v5);\n    sleep(Number);\n    close(fd);\n  }\n}", "code_t": "void __cdecl child_func(int childnum, char *servIP, int port) {\n  size_t v3;\n  unsigned int v4;\n  unsigned int v5;\n  uint16_t porta;\n  char buffer[Number];\n  sockaddr_in <span class=\"supfact\">sAddr</span>;\n  int sock;\n  porta = port;\n  sock = socket(Number, Number, Number);\n  <span class=\"supfact\">sAddr</span>.sin_family = Number;\n  <span class=\"supfact\">sAddr</span>.sin_addr.s_addr = inet_addr(servIP);\n  <span class=\"supfact\">sAddr</span>.sin_port = htons(porta);\n  if (connect(sock, (const struct sockaddr *)&<span class=\"supfact\">sAddr</span>, Number)) {\n    perror(String);\n  } else {\n    snprintf(buffer, Number, String, (unsigned int)childnum);\n    sleep(Number);\n    v3 = strlen(buffer);\n    v4 = write(sock, buffer, v3);\n    printf(String, (unsigned int)childnum, v4);\n    sleep(Number);\n    v5 = read(sock, buffer, Number);\n    printf(String, (unsigned int)childnum, v5);\n    sleep(Number);\n    close(sock);\n  }\n}", "var": [{"name": "addr", "type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }", "ref_name": "sAddr", "ref_type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }"}], "body_in_train": false}, {"repo_owner": "psi46", "repo_name": "HDItest", "path": "psi46/HDItest/82abee2fb4722aa2aa99d55e484044fca2bb76d788616b3b28ef7e58c893c484", "path_in_repo": "psi46/HDItest/FTDI-1.0.4/libftd2xx1.0.4/libusb-1.0.8/libusb/libusb_1_0_la-io.o", "objdump": "000000000000106d <handle_timeouts_locked>:\n    106d:\t55                   \tpush   %rbp\n    106e:\t48 89 e5             \tmov    %rsp,%rbp\n    1071:\t48 83 ec 50          \tsub    $0x50,%rsp\n    1075:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n    1079:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    107d:\t48 8b 80 88 00 00 00 \tmov    0x88(%rax),%rax\n    1084:\t48 8b 55 b8          \tmov    -0x48(%rbp),%rdx\n    1088:\t48 83 ea 80          \tsub    $0xffffffffffffff80,%rdx\n    108c:\t48 39 d0             \tcmp    %rdx,%rax\n    108f:\t75 0a                \tjne    109b <handle_timeouts_locked+0x2e>\n    1091:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1096:\te9 2c 01 00 00       \tjmpq   11c7 <handle_timeouts_locked+0x15a>\n    109b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 10a2 <handle_timeouts_locked+0x35>\n    10a2:\t48 8b 90 c0 00 00 00 \tmov    0xc0(%rax),%rdx\n    10a9:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    10ad:\t48 89 c6             \tmov    %rax,%rsi\n    10b0:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    10b5:\tff d2                \tcallq  *%rdx\n    10b7:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    10ba:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    10be:\t79 08                \tjns    10c8 <handle_timeouts_locked+0x5b>\n    10c0:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    10c3:\te9 ff 00 00 00       \tjmpq   11c7 <handle_timeouts_locked+0x15a>\n    10c8:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    10cc:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    10d0:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n    10d4:\t48 ba cf f7 53 e3 a5 \tmovabs $0x20c49ba5e353f7cf,%rdx\n    10db:\t9b c4 20 \n    10de:\t48 89 c8             \tmov    %rcx,%rax\n    10e1:\t48 f7 ea             \timul   %rdx\n    10e4:\t48 c1 fa 07          \tsar    $0x7,%rdx\n    10e8:\t48 89 c8             \tmov    %rcx,%rax\n    10eb:\t48 c1 f8 3f          \tsar    $0x3f,%rax\n    10ef:\t48 29 c2             \tsub    %rax,%rdx\n    10f2:\t48 89 d0             \tmov    %rdx,%rax\n    10f5:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    10f9:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    10fd:\t48 8b 80 88 00 00 00 \tmov    0x88(%rax),%rax\n    1104:\t48 83 e8 08          \tsub    $0x8,%rax\n    1108:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    110c:\te9 98 00 00 00       \tjmpq   11a9 <handle_timeouts_locked+0x13c>\n    1111:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1115:\t48 83 c0 18          \tadd    $0x18,%rax\n    1119:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    111d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1121:\t48 8b 00             \tmov    (%rax),%rax\n    1124:\t48 85 c0             \ttest   %rax,%rax\n    1127:\t75 17                \tjne    1140 <handle_timeouts_locked+0xd3>\n    1129:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    112d:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1131:\t48 85 c0             \ttest   %rax,%rax\n    1134:\t75 0a                \tjne    1140 <handle_timeouts_locked+0xd3>\n    1136:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    113b:\te9 87 00 00 00       \tjmpq   11c7 <handle_timeouts_locked+0x15a>\n    1140:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1144:\t0f b6 40 2c          \tmovzbl 0x2c(%rax),%eax\n    1148:\t0f b6 c0             \tmovzbl %al,%eax\n    114b:\t83 e0 01             \tand    $0x1,%eax\n    114e:\t85 c0                \ttest   %eax,%eax\n    1150:\t75 46                \tjne    1198 <handle_timeouts_locked+0x12b>\n    1152:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1156:\t48 8b 10             \tmov    (%rax),%rdx\n    1159:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    115d:\t48 39 c2             \tcmp    %rax,%rdx\n    1160:\t7f 21                \tjg     1183 <handle_timeouts_locked+0x116>\n    1162:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1166:\t48 8b 10             \tmov    (%rax),%rdx\n    1169:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    116d:\t48 39 c2             \tcmp    %rax,%rdx\n    1170:\t75 18                \tjne    118a <handle_timeouts_locked+0x11d>\n    1172:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1176:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    117a:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    117e:\t48 39 c2             \tcmp    %rax,%rdx\n    1181:\t7e 07                \tjle    118a <handle_timeouts_locked+0x11d>\n    1183:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1188:\teb 3d                \tjmp    11c7 <handle_timeouts_locked+0x15a>\n    118a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    118e:\t48 89 c7             \tmov    %rax,%rdi\n    1191:\te8 58 fe ff ff       \tcallq  fee <handle_timeout>\n    1196:\teb 01                \tjmp    1199 <handle_timeouts_locked+0x12c>\n    1198:\t90                   \tnop\n    1199:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    119d:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    11a1:\t48 83 e8 08          \tsub    $0x8,%rax\n    11a5:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    11a9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    11ad:\t48 8d 50 08          \tlea    0x8(%rax),%rdx\n    11b1:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    11b5:\t48 83 e8 80          \tsub    $0xffffffffffffff80,%rax\n    11b9:\t48 39 c2             \tcmp    %rax,%rdx\n    11bc:\t0f 85 4f ff ff ff    \tjne    1111 <handle_timeouts_locked+0xa4>\n    11c2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    11c7:\tc9                   \tleaveq \n    11c8:\tc3                   \tretq   ", "code_s": "__int64 __fastcall handle_timeouts_locked(__int64 a1) {\n  __int64 v2;\n  __int64 v3;\n  __int64 <span class=\"supfact\">v4</span>[Number];\n  __int64 *v5;\n  unsigned int v6;\n  __int64 i;\n  if (*(_QWORD *)(a1 + Number) == a1 + Number)\n    return Number L;\n  v6 = (*(__int64(__fastcall **)(_QWORD, __int64 *))(usbi_backend + Number L))(\n      Number L, <span class=\"supfact\">v4</span>);\n  if ((v6 & Number) != Number)\n    return v6;\n  v2 = <span class=\"supfact\">v4</span>[Number];\n  v3 = <span class=\"supfact\">v4</span>[Number] / Number;\n  for (i = *(_QWORD *)(a1 + Number) - Number L; i + Number != a1 + Number;\n       i = *(_QWORD *)(i + Number) - Number L) {\n    v5 = (__int64 *)(i + Number);\n    if (!*(_QWORD *)(i + Number) && !v5[Number])\n      return Number L;\n    if ((*(_BYTE *)(i + Number) & Number) == Number) {\n      if (*v5 > v2 || *v5 == v2 && v5[Number] > v3)\n        return Number L;\n      handle_timeout(i);\n    }\n  }\n  return Number L;\n}", "code_t": "int __cdecl handle_timeouts_locked(libusb_context *ctx) {\n  __time_t systime;\n  __suseconds_t systime_8;\n  timespec <span class=\"supfact\">systime_ts</span>;\n  timeval *cur_tv;\n  int r;\n  usbi_transfer *transfer;\n  if (ctx->flying_transfers.next == &ctx->flying_transfers)\n    return Number;\n  r = (*(__int64(__fastcall **)(_QWORD, timespec *))(usbi_backend + Number L))(\n      Number L, &<span class=\"supfact\">systime_ts</span>);\n  if (r < Number)\n    return r;\n  systime = <span class=\"supfact\">systime_ts</span>.tv_sec;\n  systime_8 = <span class=\"supfact\">systime_ts</span>.tv_nsec / Number;\n  for (transfer =\n           CONTAINING_RECORD(ctx->flying_transfers.next, usbi_transfer, list);\n       &transfer->list != &ctx->flying_transfers;\n       transfer = CONTAINING_RECORD(transfer->list.next, usbi_transfer, list)) {\n    cur_tv = &transfer->timeout;\n    if (!transfer->timeout.tv_sec && !cur_tv->tv_usec)\n      return Number;\n    if ((transfer->flags & Number) == Number) {\n      if (cur_tv->tv_sec > systime ||\n          cur_tv->tv_sec == systime && cur_tv->tv_usec > systime_8)\n        return Number;\n      handle_timeout(transfer);\n    }\n  }\n  return Number;\n}", "var": [{"name": "v4", "type": "__int64[3]", "ref_name": "systime_ts", "ref_type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }"}], "body_in_train": false}, {"repo_owner": "solardiz", "repo_name": "c-progpow", "path": "solardiz/c-progpow/890f869403600db7db01ad5973f4d387e4fe7a2e4b8a5165f93f83eab88d895c", "path_in_repo": "solardiz/c-progpow//progpow-test", "objdump": "", "code_s": "__int64 __fastcall sub_407EB9(FILE *a1, __off_t *a2) {\n  struct stat <span class=\"supfact\">stat_buf</span>;\n  int fildes;\n  fildes = fileno(a1);\n  if (fildes == Number ||\n      (unsigned int)sub_408080(fildes, &<span class=\"supfact\">stat_buf</span>))\n    return Number L;\n  *a2 = <span class=\"supfact\">stat_buf</span>.st_size;\n  return Number L;\n}", "code_t": "__int64 __fastcall sub_407EB9(FILE *a1, __off_t *a2) {\n  struct stat <span class=\"supfact\">stat_buf</span>;\n  int fildes;\n  fildes = fileno(a1);\n  if (fildes == Number ||\n      (unsigned int)sub_408080(fildes, &<span class=\"supfact\">stat_buf</span>))\n    return Number L;\n  *a2 = <span class=\"supfact\">stat_buf</span>.st_size;\n  return Number L;\n}", "var": [{"name": "stat_buf", "type": "struct struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __unused; }", "ref_name": "stat_buf", "ref_type": "struct struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __unused; }"}], "body_in_train": false}, {"repo_owner": "kaija", "repo_name": "bee", "path": "kaija/bee/cdddfc9ffe0feab1f6002d54c1260d840906a5465541b671a6aa841ac6ac07bc", "path_in_repo": "kaija/bee//third_party/lssdp.o", "objdump": "000000000000021c <lssdp_request_service>:\n     21c:\t55                   \tpush   %rbp\n     21d:\t48 89 e5             \tmov    %rsp,%rbp\n     220:\t53                   \tpush   %rbx\n     221:\t48 81 ec 38 02 00 00 \tsub    $0x238,%rsp\n     228:\t48 89 bd c8 fd ff ff \tmov    %rdi,-0x238(%rbp)\n     22f:\tc7 45 ec 10 00 00 00 \tmovl   $0x10,-0x14(%rbp)\n     236:\tba 11 00 00 00       \tmov    $0x11,%edx\n     23b:\tbe 02 00 00 00       \tmov    $0x2,%esi\n     240:\tbf 02 00 00 00       \tmov    $0x2,%edi\n     245:\te8 00 00 00 00       \tcallq  24a <lssdp_request_service+0x2e>\n     24a:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n     24d:\t83 7d e8 ff          \tcmpl   $0xffffffff,-0x18(%rbp)\n     251:\t75 33                \tjne    286 <lssdp_request_service+0x6a>\n     253:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 25a <lssdp_request_service+0x3e>\n     25a:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 261 <lssdp_request_service+0x45>\n     261:\tba 52 00 00 00       \tmov    $0x52,%edx\n     266:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 26d <lssdp_request_service+0x51>\n     26d:\tbf 03 00 00 00       \tmov    $0x3,%edi\n     272:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     277:\te8 00 00 00 00       \tcallq  27c <lssdp_request_service+0x60>\n     27c:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n     281:\te9 0b 01 00 00       \tjmpq   391 <lssdp_request_service+0x175>\n     286:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     28a:\tba 10 00 00 00       \tmov    $0x10,%edx\n     28f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     294:\t48 89 c7             \tmov    %rax,%rdi\n     297:\te8 00 00 00 00       \tcallq  29c <lssdp_request_service+0x80>\n     29c:\t66 c7 45 d0 02 00    \tmovw   $0x2,-0x30(%rbp)\n     2a2:\tbf 6c 07 00 00       \tmov    $0x76c,%edi\n     2a7:\te8 00 00 00 00       \tcallq  2ac <lssdp_request_service+0x90>\n     2ac:\t66 89 45 d2          \tmov    %ax,-0x2e(%rbp)\n     2b0:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     2b4:\t48 83 c0 04          \tadd    $0x4,%rax\n     2b8:\t48 89 c6             \tmov    %rax,%rsi\n     2bb:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 2c2 <lssdp_request_service+0xa6>\n     2c2:\te8 00 00 00 00       \tcallq  2c7 <lssdp_request_service+0xab>\n     2c7:\t85 c0                \ttest   %eax,%eax\n     2c9:\t75 29                \tjne    2f4 <lssdp_request_service+0xd8>\n     2cb:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 2d2 <lssdp_request_service+0xb6>\n     2d2:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 2d9 <lssdp_request_service+0xbd>\n     2d9:\tba 59 00 00 00       \tmov    $0x59,%edx\n     2de:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 2e5 <lssdp_request_service+0xc9>\n     2e5:\tbf 03 00 00 00       \tmov    $0x3,%edi\n     2ea:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     2ef:\te8 00 00 00 00       \tcallq  2f4 <lssdp_request_service+0xd8>\n     2f4:\t48 8b 95 c8 fd ff ff \tmov    -0x238(%rbp),%rdx\n     2fb:\t48 8d 85 d0 fd ff ff \tlea    -0x230(%rbp),%rax\n     302:\t48 89 d1             \tmov    %rdx,%rcx\n     305:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 30c <lssdp_request_service+0xf0>\n     30c:\tbe 00 02 00 00       \tmov    $0x200,%esi\n     311:\t48 89 c7             \tmov    %rax,%rdi\n     314:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     319:\te8 00 00 00 00       \tcallq  31e <lssdp_request_service+0x102>\n     31e:\t8b 5d ec             \tmov    -0x14(%rbp),%ebx\n     321:\t48 8d 85 d0 fd ff ff \tlea    -0x230(%rbp),%rax\n     328:\t48 89 c7             \tmov    %rax,%rdi\n     32b:\te8 00 00 00 00       \tcallq  330 <lssdp_request_service+0x114>\n     330:\t48 89 c2             \tmov    %rax,%rdx\n     333:\t48 8d 4d d0          \tlea    -0x30(%rbp),%rcx\n     337:\t48 8d b5 d0 fd ff ff \tlea    -0x230(%rbp),%rsi\n     33e:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n     341:\t41 89 d9             \tmov    %ebx,%r9d\n     344:\t49 89 c8             \tmov    %rcx,%r8\n     347:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n     34c:\t89 c7                \tmov    %eax,%edi\n     34e:\te8 00 00 00 00       \tcallq  353 <lssdp_request_service+0x137>\n     353:\t48 83 f8 ff          \tcmp    $0xffffffffffffffff,%rax\n     357:\t75 29                \tjne    382 <lssdp_request_service+0x166>\n     359:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 360 <lssdp_request_service+0x144>\n     360:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 367 <lssdp_request_service+0x14b>\n     367:\tba 65 00 00 00       \tmov    $0x65,%edx\n     36c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 373 <lssdp_request_service+0x157>\n     373:\tbf 03 00 00 00       \tmov    $0x3,%edi\n     378:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     37d:\te8 00 00 00 00       \tcallq  382 <lssdp_request_service+0x166>\n     382:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n     385:\t89 c7                \tmov    %eax,%edi\n     387:\te8 00 00 00 00       \tcallq  38c <lssdp_request_service+0x170>\n     38c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     391:\t48 81 c4 38 02 00 00 \tadd    $0x238,%rsp\n     398:\t5b                   \tpop    %rbx\n     399:\t5d                   \tpop    %rbp\n     39a:\tc3                   \tretq   ", "code_s": "__int64 __fastcall lssdp_request_service(const char *a1) {\n  __int64 result;\n  socklen_t v2;\n  size_t v3;\n  char buf[Number];\n  struct sockaddr <span class=\"supfact\">s</span>;\n  int fd;\n  socklen_t addr_len;\n  addr_len = Number;\n  fd = socket(Number, Number, Number);\n  if (fd == Number) {\n    plogger_print(Number L, String, Number L, String, String);\n    result = Number;\n  } else {\n    memset(&<span class=\"supfact\">s</span>, Number, sizeof(<span class=\"supfact\">s</span>));\n    <span class=\"supfact\">s</span>.sa_family = Number;\n    *(_WORD *)<span class=\"supfact\">s</span>.sa_data = htons(Number);\n    if (!inet_aton(String,\n                   (struct in_addr *)&<span class=\"supfact\">s</span>.sa_data[Number]))\n      plogger_print(Number L, String, Number L, String, String);\n    snprintf(buf, Number, String, a1);\n    v2 = addr_len;\n    v3 = strlen(buf);\n    if (sendto(fd, buf, v3, Number, &<span class=\"supfact\">s</span>, v2) == Number)\n      plogger_print(Number L, String, Number L, String, String);\n    close(fd);\n    result = Number L;\n  }\n  return result;\n}", "code_t": "int __cdecl lssdp_request_service(char *service) {\n  int result;\n  int v2;\n  size_t v3;\n  char req[Number];\n  sockaddr_in <span class=\"supfact\">addr</span>;\n  int sock;\n  int slen;\n  slen = Number;\n  sock = socket(Number, Number, Number);\n  if (sock == Number) {\n    plogger_print(Number L, String, Number L, String, String);\n    result = Number;\n  } else {\n    memset(&<span class=\"supfact\">addr</span>, Number, sizeof(<span class=\"supfact\">addr</span>));\n    <span class=\"supfact\">addr</span>.sin_family = Number;\n    <span class=\"supfact\">addr</span>.sin_port = htons(Number);\n    if (!inet_aton(String, &<span class=\"supfact\">addr</span>.sin_addr))\n      plogger_print(Number L, String, Number L, String, String);\n    snprintf(req, Number, String, service);\n    v2 = slen;\n    v3 = strlen(req);\n    if (sendto(sock, req, v3, Number,\n               (const struct sockaddr *)&<span class=\"supfact\">addr</span>, v2) == Number)\n      plogger_print(Number L, String, Number L, String, String);\n    close(sock);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "s", "type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }", "ref_name": "addr", "ref_type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/e252f31da0093ad696e5e9e840d5de24bfb8b014bb5a554e0b793414cf930ff5", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/drivers/wpc_dcs.o", "objdump": "00000000000000d8 <_ZL32construct_machine_config_wpc_dcsR14machine_configP8device_t>:\n  d8:\t55                   \tpush   %rbp\n  d9:\t48 89 e5             \tmov    %rsp,%rbp\n  dc:\t53                   \tpush   %rbx\n  dd:\t48 83 ec 68          \tsub    $0x68,%rsp\n  e1:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n  e5:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n  e9:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n  f0:\t00 \n  f1:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  f5:\t48 89 c7             \tmov    %rax,%rdi\n  f8:\te8 00 00 00 00       \tcallq  fd <_ZL32construct_machine_config_wpc_dcsR14machine_configP8device_t+0x25>\n  fd:\t48 83 7d 90 00       \tcmpq   $0x0,-0x70(%rbp)\n 102:\t75 25                \tjne    129 <_ZL32construct_machine_config_wpc_dcsR14machine_configP8device_t+0x51>\n 104:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n 108:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n 10e:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 113:\tba 00 00 00 00       \tmov    $0x0,%edx\n 118:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 11d:\t48 89 c7             \tmov    %rax,%rdi\n 120:\te8 00 00 00 00       \tcallq  125 <_ZL32construct_machine_config_wpc_dcsR14machine_configP8device_t+0x4d>\n 125:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n 129:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 130 <_ZL32construct_machine_config_wpc_dcsR14machine_configP8device_t+0x58>\n 130:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n 134:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n 138:\t41 b8 80 84 1e 00    \tmov    $0x1e8480,%r8d\n 13e:\t48 89 d1             \tmov    %rdx,%rcx\n 141:\tba 00 00 00 00       \tmov    $0x0,%edx\n 146:\t48 89 c7             \tmov    %rax,%rdi\n 149:\te8 00 00 00 00       \tcallq  14e <_ZL32construct_machine_config_wpc_dcsR14machine_configP8device_t+0x76>\n 14e:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 152:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 156:\tba 00 00 00 00       \tmov    $0x0,%edx\n 15b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 160:\t48 89 c7             \tmov    %rax,%rdi\n 163:\te8 00 00 00 00       \tcallq  168 <_ZL32construct_machine_config_wpc_dcsR14machine_configP8device_t+0x90>\n 168:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n 16c:\tba 00 00 00 00       \tmov    $0x0,%edx\n 171:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 176:\t48 89 c7             \tmov    %rax,%rdi\n 179:\te8 00 00 00 00       \tcallq  17e <_ZL32construct_machine_config_wpc_dcsR14machine_configP8device_t+0xa6>\n 17e:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n 182:\t48 c7 40 58 00 00 00 \tmovq   $0x0,0x58(%rax)\n 189:\t00 \n 18a:\t48 8b 5d 90          \tmov    -0x70(%rbp),%rbx\n 18e:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n 192:\t48 89 c7             \tmov    %rax,%rdi\n 195:\te8 00 00 00 00       \tcallq  19a <_ZL32construct_machine_config_wpc_dcsR14machine_configP8device_t+0xc2>\n 19a:\t48 89 d8             \tmov    %rbx,%rax\n 19d:\teb 1a                \tjmp    1b9 <_ZL32construct_machine_config_wpc_dcsR14machine_configP8device_t+0xe1>\n 19f:\t48 89 c3             \tmov    %rax,%rbx\n 1a2:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n 1a6:\t48 89 c7             \tmov    %rax,%rdi\n 1a9:\te8 00 00 00 00       \tcallq  1ae <_ZL32construct_machine_config_wpc_dcsR14machine_configP8device_t+0xd6>\n 1ae:\t48 89 d8             \tmov    %rbx,%rax\n 1b1:\t48 89 c7             \tmov    %rax,%rdi\n 1b4:\te8 00 00 00 00       \tcallq  1b9 <_ZL32construct_machine_config_wpc_dcsR14machine_configP8device_t+0xe1>\n 1b9:\t48 83 c4 68          \tadd    $0x68,%rsp\n 1bd:\t5b                   \tpop    %rbx\n 1be:\t5d                   \tpop    %rbp\n 1bf:\tc3                   \tretq   ", "code_s": "__int64 __fastcall construct_machine_config_wpc_dcs(__int64 a1, __int64 a2) {\n  __int64 v3;\n  char <span class=\"supfact\">v4</span>[Number];\n  __int64 v5;\n  v3 = a2;\n  v5 = Number L;\n  astring astring((astring *)<span class=\"supfact\">v4</span>);\n  if (!a2)\n    v3 = machine_config device_add(\n        a1, Number L, String, driver_device_creator<wpc_dcs_state>, Number L);\n  v5 = machine_config device_add(a1, v3, String, M6809, Number L);\n  device_memory_interface static_set_addrmap(v5, Number L,\n                                             construct_address_map_wpc_dcs_map);\n  driver_device static_set_callback(v3, Number L, machine_reset_wpc_dcs);\n  *(_QWORD *)(a1 + Number) = &layout_pinball;\n  astring ~astring((astring *)<span class=\"supfact\">v4</span>);\n  return v3;\n}", "code_t": "device_t *__cdecl construct_machine_config_wpc_dcs(machine_config *config,\n                                                   device_t *owner) {\n  void(__fastcall * v2)(address_map *, const device_t *);\n  void(__fastcall * v3)(running_machine *);\n  device_t *ownera;\n  astring <span class=\"supfact\">tempstring</span>;\n  device_t *device;\n  ownera = owner;\n  device = Number L;\n  astring astring(&<span class=\"supfact\">tempstring</span>);\n  if (!owner)\n    ownera = (device_t *)machine_config device_add(\n        config, Number L, String,\n        (device_t * (__fastcall *)(const machine_config *, const char *,\n                                   device_t *, unsigned int))\n            driver_device_creator<wpc_dcs_state>,\n        Number);\n  device = (device_t *)machine_config device_add(config, ownera, String, M6809,\n                                                 Number);\n  device_memory_interface static_set_addrmap(\n      device, Number L, (address_spacenum)construct_address_map_wpc_dcs_map,\n      v2);\n  driver_device static_set_callback(\n      ownera, (device_t *)&loc_1,\n      (driver_device callback_type)machine_reset_wpc_dcs, v3);\n  config->m_default_layout = (const char *)&layout_pinball;\n  astring ~astring(&<span class=\"supfact\">tempstring</span>);\n  return ownera;\n}", "var": [{"name": "v4", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "tempstring", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"code_s": "__int64 __fastcall Poco RotateAtTimeStrategy<Poco DateTime>\nmustRotate(__int64 a1) {\n  bool v1;\n  _QWORD <span class=\"supfact\">v3</span>[Number];\n  Poco DateTime DateTime((Poco DateTime *)<span class=\"supfact\">v3</span>);\n  v1 = Poco DateTime operator>=(<span class=\"supfact\">v3</span>, (_QWORD *)(a1 + Number));\n  Poco DateTime ~DateTime((Poco DateTime *)<span class=\"supfact\">v3</span>);\n  if (!v1)\n    return Number L;\n  Poco RotateAtTimeStrategy<Poco DateTime> getNextRollover((_DWORD *)a1);\n  return Number L;\n}", "code_t": "bool __cdecl Poco RotateAtTimeStrategy<Poco DateTime>\nmustRotate(Poco RotateAtTimeStrategy<Poco DateTime> *const this,\n           Poco LogFile *a2) {\n  bool v2;\n  Poco DateTime <span class=\"supfact\">v4</span>;\n  Poco DateTime DateTime(&<span class=\"supfact\">v4</span>);\n  v2 = Poco DateTime operator>=(&<span class=\"supfact\">v4</span>, &this->_threshold);\n  Poco DateTime ~DateTime(&<span class=\"supfact\">v4</span>);\n  if (!v2)\n    return Number;\n  Poco RotateAtTimeStrategy<Poco DateTime> getNextRollover(this);\n  return Number;\n}", "var": [{"name": "v3", "type": "struct NTL::Vec<NTL::zz_p> { NTL::WrappedPtr<NTL::zz_p,NTL::Vec<NTL::zz_p>::_vec_deleter> _vec__rep; }", "ref_name": "v4", "ref_type": "struct Poco::DateTime { Poco::Timestamp::UtcTimeVal _utcTime; __int16 _year; __int16 _month; __int16 _day; __int16 _hour; __int16 _minute; __int16 _second; __int16 _millisecond; __int16 _microsecond; }"}], "body_in_train": false}, {"repo_owner": "RSB4760", "repo_name": "apq8016_external_wpa_supplicant_8", "path": "RSB4760/apq8016_external_wpa_supplicant_8/2a7fab9c73429f714ec7f312a1572e3de6f9ff677b8014dd8f44b6f287bc11ba", "path_in_repo": "RSB4760/apq8016_external_wpa_supplicant_8/wpa_supplicant/dbus/dbus_new.o", "objdump": "0000000000000b30 <wpas_dbus_signal_eap_status>:\n     b30:\t55                   \tpush   %rbp\n     b31:\t48 89 e5             \tmov    %rsp,%rbp\n     b34:\t48 83 c4 80          \tadd    $0xffffffffffffff80,%rsp\n     b38:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n     b3c:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n     b40:\t48 89 55 88          \tmov    %rdx,-0x78(%rbp)\n     b44:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n     b48:\t48 8b 00             \tmov    (%rax),%rax\n     b4b:\t48 8b 40 70          \tmov    0x70(%rax),%rax\n     b4f:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     b53:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n     b58:\t0f 84 c4 00 00 00    \tje     c22 <wpas_dbus_signal_eap_status+0xf2>\n     b5e:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n     b62:\t48 8b 80 b8 00 00 00 \tmov    0xb8(%rax),%rax\n     b69:\t48 85 c0             \ttest   %rax,%rax\n     b6c:\t0f 84 b0 00 00 00    \tje     c22 <wpas_dbus_signal_eap_status+0xf2>\n     b72:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n     b76:\t48 8b 80 b8 00 00 00 \tmov    0xb8(%rax),%rax\n     b7d:\tba 00 00 00 00       \tmov    $0x0,%edx\n     b82:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     b87:\t48 89 c7             \tmov    %rax,%rdi\n     b8a:\te8 00 00 00 00       \tcallq  b8f <wpas_dbus_signal_eap_status+0x5f>\n     b8f:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     b93:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n     b98:\t0f 84 87 00 00 00    \tje     c25 <wpas_dbus_signal_eap_status+0xf5>\n     b9e:\t48 8d 55 a0          \tlea    -0x60(%rbp),%rdx\n     ba2:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     ba6:\t48 89 d6             \tmov    %rdx,%rsi\n     ba9:\t48 89 c7             \tmov    %rax,%rdi\n     bac:\te8 00 00 00 00       \tcallq  bb1 <wpas_dbus_signal_eap_status+0x81>\n     bb1:\t48 8d 55 90          \tlea    -0x70(%rbp),%rdx\n     bb5:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n     bb9:\tbe 73 00 00 00       \tmov    $0x73,%esi\n     bbe:\t48 89 c7             \tmov    %rax,%rdi\n     bc1:\te8 00 00 00 00       \tcallq  bc6 <wpas_dbus_signal_eap_status+0x96>\n     bc6:\t85 c0                \ttest   %eax,%eax\n     bc8:\t74 19                \tje     be3 <wpas_dbus_signal_eap_status+0xb3>\n     bca:\t48 8d 55 88          \tlea    -0x78(%rbp),%rdx\n     bce:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n     bd2:\tbe 73 00 00 00       \tmov    $0x73,%esi\n     bd7:\t48 89 c7             \tmov    %rax,%rdi\n     bda:\te8 00 00 00 00       \tcallq  bdf <wpas_dbus_signal_eap_status+0xaf>\n     bdf:\t85 c0                \ttest   %eax,%eax\n     be1:\t75 16                \tjne    bf9 <wpas_dbus_signal_eap_status+0xc9>\n     be3:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     be8:\tbf 05 00 00 00       \tmov    $0x5,%edi\n     bed:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     bf2:\te8 00 00 00 00       \tcallq  bf7 <wpas_dbus_signal_eap_status+0xc7>\n     bf7:\teb 1b                \tjmp    c14 <wpas_dbus_signal_eap_status+0xe4>\n     bf9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     bfd:\t48 8b 00             \tmov    (%rax),%rax\n     c00:\t48 8b 4d f0          \tmov    -0x10(%rbp),%rcx\n     c04:\tba 00 00 00 00       \tmov    $0x0,%edx\n     c09:\t48 89 ce             \tmov    %rcx,%rsi\n     c0c:\t48 89 c7             \tmov    %rax,%rdi\n     c0f:\te8 00 00 00 00       \tcallq  c14 <wpas_dbus_signal_eap_status+0xe4>\n     c14:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     c18:\t48 89 c7             \tmov    %rax,%rdi\n     c1b:\te8 00 00 00 00       \tcallq  c20 <wpas_dbus_signal_eap_status+0xf0>\n     c20:\teb 04                \tjmp    c26 <wpas_dbus_signal_eap_status+0xf6>\n     c22:\t90                   \tnop\n     c23:\teb 01                \tjmp    c26 <wpas_dbus_signal_eap_status+0xf6>\n     c25:\t90                   \tnop\n     c26:\tc9                   \tleaveq \n     c27:\tc3                   \tretq   ", "code_s": "_QWORD *__fastcall wpas_dbus_signal_eap_status(__int64 a1, __int64 a2,\n                                               __int64 a3) {\n  _QWORD *result;\n  __int64 v4;\n  __int64 v5;\n  __int64 v6;\n  char <span class=\"supfact\">v7</span>[Number];\n  _QWORD *v8;\n  _QWORD *v9;\n  v6 = a1;\n  v5 = a2;\n  v4 = a3;\n  result = *(_QWORD **)(*(_QWORD *)a1 + Number L);\n  v9 = result;\n  if (result) {\n    result = *(_QWORD **)(v6 + Number);\n    if (result) {\n      result = (_QWORD *)dbus_message_new_signal(*(_QWORD *)(v6 + Number),\n                                                 String, String);\n      v8 = result;\n      if (result) {\n        dbus_message_iter_init_append(v8, <span class=\"supfact\">v7</span>);\n        if ((unsigned int)dbus_message_iter_append_basic(<span class=\"supfact\">v7</span>,\n                                                         Number L, &v5) &&\n            (unsigned int)dbus_message_iter_append_basic(<span class=\"supfact\">v7</span>,\n                                                         Number L, &v4)) {\n          dbus_connection_send(*v9, v8, Number L);\n        } else {\n          wpa_printf(Number L, String);\n        }\n        result = (_QWORD *)dbus_message_unref(v8);\n      }\n    }\n  }\n  return result;\n}", "code_t": "void __cdecl wpas_dbus_signal_eap_status(wpa_supplicant *wpa_s,\n                                         const char *status,\n                                         const char *parameter) {\n  const char *parametera;\n  const char *statusa;\n  wpa_supplicant *wpa_sa;\n  DBusMessageIter_0 <span class=\"supfact\">iter</span>;\n  DBusMessage_0 *msg;\n  wpas_dbus_priv *iface;\n  wpa_sa = wpa_s;\n  statusa = status;\n  parametera = parameter;\n  iface = wpa_s->global->dbus;\n  if (iface) {\n    if (wpa_sa->dbus_new_path) {\n      msg = (DBusMessage_0 *)dbus_message_new_signal(wpa_sa->dbus_new_path,\n                                                     String, String);\n      if (msg) {\n        dbus_message_iter_init_append(msg, &<span class=\"supfact\">iter</span>);\n        if ((unsigned int)dbus_message_iter_append_basic(&<span class=\"supfact\">iter</span>,\n                                                         Number L, &statusa) &&\n            (unsigned int)dbus_message_iter_append_basic(\n                &<span class=\"supfact\">iter</span>, Number L, &parametera)) {\n          dbus_connection_send(iface->con, msg, Number L);\n        } else {\n          wpa_printf(Number L, String);\n        }\n        dbus_message_unref(msg);\n      }\n    }\n  }\n}", "var": [{"name": "v7", "type": "struct DBusMessageIter_0 { void * dummy1; void * dummy2; dbus_uint32_t dummy3; int dummy4; int dummy5; int dummy6; int dummy7; int dummy8; int dummy9; int dummy10; int dummy11; int pad1; void * pad2; void * pad3; }", "ref_name": "iter", "ref_type": "struct DBusMessageIter_0 { void * dummy1; void * dummy2; dbus_uint32_t dummy3; int dummy4; int dummy5; int dummy6; int dummy7; int dummy8; int dummy9; int dummy10; int dummy11; int pad1; void * pad2; void * pad3; }"}], "body_in_train": false}, {"repo_owner": "sconklin", "repo_name": "ltp-tools", "path": "sconklin/ltp-tools/97cfb5898bdfb6232828b987ff1df7fc68844998d655409076f3403179deb7e3", "path_in_repo": "sconklin/ltp-tools/ltp-full-20110915/testcases/open_posix_testsuite/conformance/interfaces/pthread_exit/2-1.run-test", "objdump": "000000000040120d <a_thread_func>:\n  40120d:\t55                   \tpush   %rbp\n  40120e:\t48 89 e5             \tmov    %rsp,%rbp\n  401211:\t48 81 ec 90 01 00 00 \tsub    $0x190,%rsp\n  401218:\t48 c7 45 d8 92 11 40 \tmovq   $0x401192,-0x28(%rbp)\n  40121f:\t00 \n  401220:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n  401227:\t00 \n  401228:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n  40122f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  401234:\t48 89 c7             \tmov    %rax,%rdi\n  401237:\te8 64 fe ff ff       \tcallq  4010a0 <__sigsetjmp@plt>\n  40123c:\t89 45 cc             \tmov    %eax,-0x34(%rbp)\n  40123f:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  401242:\t48 98                \tcltq   \n  401244:\t48 85 c0             \ttest   %rax,%rax\n  401247:\t74 1c                \tje     401265 <a_thread_func+0x58>\n  401249:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  40124d:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n  401251:\t48 89 c7             \tmov    %rax,%rdi\n  401254:\tff d2                \tcallq  *%rdx\n  401256:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n  40125d:\t48 89 c7             \tmov    %rax,%rdi\n  401260:\te8 2b fe ff ff       \tcallq  401090 <__pthread_unwind_next@plt>\n  401265:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n  40126c:\t48 89 c7             \tmov    %rax,%rdi\n  40126f:\te8 dc fd ff ff       \tcallq  401050 <__pthread_register_cancel@plt>\n  401274:\t48 c7 45 f8 bb 11 40 \tmovq   $0x4011bb,-0x8(%rbp)\n  40127b:\t00 \n  40127c:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n  401283:\t00 \n  401284:\t48 8d 85 e0 fe ff ff \tlea    -0x120(%rbp),%rax\n  40128b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  401290:\t48 89 c7             \tmov    %rax,%rdi\n  401293:\te8 08 fe ff ff       \tcallq  4010a0 <__sigsetjmp@plt>\n  401298:\t89 45 c8             \tmov    %eax,-0x38(%rbp)\n  40129b:\t8b 45 c8             \tmov    -0x38(%rbp),%eax\n  40129e:\t48 98                \tcltq   \n  4012a0:\t48 85 c0             \ttest   %rax,%rax\n  4012a3:\t74 1c                \tje     4012c1 <a_thread_func+0xb4>\n  4012a5:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  4012a9:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  4012ad:\t48 89 c7             \tmov    %rax,%rdi\n  4012b0:\tff d2                \tcallq  *%rdx\n  4012b2:\t48 8d 85 e0 fe ff ff \tlea    -0x120(%rbp),%rax\n  4012b9:\t48 89 c7             \tmov    %rax,%rdi\n  4012bc:\te8 cf fd ff ff       \tcallq  401090 <__pthread_unwind_next@plt>\n  4012c1:\t48 8d 85 e0 fe ff ff \tlea    -0x120(%rbp),%rax\n  4012c8:\t48 89 c7             \tmov    %rax,%rdi\n  4012cb:\te8 80 fd ff ff       \tcallq  401050 <__pthread_register_cancel@plt>\n  4012d0:\t48 c7 45 e8 e4 11 40 \tmovq   $0x4011e4,-0x18(%rbp)\n  4012d7:\t00 \n  4012d8:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n  4012df:\t00 \n  4012e0:\t48 8d 85 50 ff ff ff \tlea    -0xb0(%rbp),%rax\n  4012e7:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  4012ec:\t48 89 c7             \tmov    %rax,%rdi\n  4012ef:\te8 ac fd ff ff       \tcallq  4010a0 <__sigsetjmp@plt>\n  4012f4:\t89 45 c4             \tmov    %eax,-0x3c(%rbp)\n  4012f7:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n  4012fa:\t48 98                \tcltq   \n  4012fc:\t48 85 c0             \ttest   %rax,%rax\n  4012ff:\t74 1c                \tje     40131d <a_thread_func+0x110>\n  401301:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  401305:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  401309:\t48 89 c7             \tmov    %rax,%rdi\n  40130c:\tff d2                \tcallq  *%rdx\n  40130e:\t48 8d 85 50 ff ff ff \tlea    -0xb0(%rbp),%rax\n  401315:\t48 89 c7             \tmov    %rax,%rdi\n  401318:\te8 73 fd ff ff       \tcallq  401090 <__pthread_unwind_next@plt>\n  40131d:\t48 8d 85 50 ff ff ff \tlea    -0xb0(%rbp),%rax\n  401324:\t48 89 c7             \tmov    %rax,%rdi\n  401327:\te8 24 fd ff ff       \tcallq  401050 <__pthread_register_cancel@plt>\n  40132c:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  401331:\te8 2a fd ff ff       \tcallq  401060 <pthread_exit@plt>", "code_s": "void __fastcall __noreturn a_thread_func(void *a1) {\n  struct __jmp_buf_tag <span class=\"supfact\">env</span>;\n  __pthread_unwind_buf_t <span class=\"supfact\">buf</span>;\n  __int64 v6;\n  __int64(__fastcall * v7)();\n  __int64 v8;\n  __int64(__fastcall * v9)();\n  __int64 v10;\n  __int64(__fastcall * v11)();\n  v7 = a_cleanup_func1;\n  v6 = Number L;\n  if (__sigsetjmp(&<span class=\"supfact\">env</span>, Number)) {\n    ((void(__fastcall *)(__int64))v7)(v6);\n    __pthread_unwind_next((__pthread_unwind_buf_t *)&<span class=\"supfact\">env</span>);\n  }\n  __pthread_register_cancel((__pthread_unwind_buf_t *)&<span class=\"supfact\">env</span>);\n  v11 = a_cleanup_func2;\n  v10 = Number L;\n  if (__sigsetjmp((struct __jmp_buf_tag *)&<span class=\"supfact\">env</span>.__saved_mask\n                      .__val[Number],\n                  Number)) {\n    ((void(__fastcall *)(__int64))v11)(v10);\n    __pthread_unwind_next((__pthread_unwind_buf_t *)&<span class=\"supfact\">env</span>\n                              .__saved_mask.__val[Number]);\n  }\n  __pthread_register_cancel((__pthread_unwind_buf_t *)&<span class=\"supfact\">env</span>\n                                .__saved_mask.__val[Number]);\n  v9 = a_cleanup_func3;\n  v8 = Number L;\n  if (__sigsetjmp((struct __jmp_buf_tag *)&<span class=\"supfact\">buf</span>, Number)) {\n    ((void(__fastcall *)(__int64))v9)(v8);\n    __pthread_unwind_next(&<span class=\"supfact\">buf</span>);\n  }\n  __pthread_register_cancel(&<span class=\"supfact\">buf</span>);\n  pthread_exit(Number L);\n}", "code_t": "void *__cdecl __noreturn a_thread_func() {\n  __pthread_unwind_buf_t <span class=\"supfact\">__cancel_buf</span>;\n  __pthread_unwind_buf_t __cancel_buf_0;\n  __pthread_unwind_buf_t <span class=\"supfact\">__cancel_buf_1</span>;\n  void *__cancel_arg;\n  void (*__cancel_routine)(void *);\n  void *__cancel_arg_1;\n  void (*__cancel_routine_1)(void *);\n  void *__cancel_arg_0;\n  void (*__cancel_routine_0)(void *);\n  __cancel_routine = (void (*)(void *))a_cleanup_func1;\n  __cancel_arg = Number L;\n  if (__sigsetjmp((struct __jmp_buf_tag *)&<span class=\"supfact\">__cancel_buf</span>,\n                  Number)) {\n    __cancel_routine(__cancel_arg);\n    __pthread_unwind_next(&<span class=\"supfact\">__cancel_buf</span>);\n  }\n  __pthread_register_cancel(&<span class=\"supfact\">__cancel_buf</span>);\n  __cancel_routine_0 = (void (*)(void *))a_cleanup_func2;\n  __cancel_arg_0 = Number L;\n  if (__sigsetjmp((struct __jmp_buf_tag *)&__cancel_buf_0, Number)) {\n    __cancel_routine_0(__cancel_arg_0);\n    __pthread_unwind_next(&__cancel_buf_0);\n  }\n  __pthread_register_cancel(&__cancel_buf_0);\n  __cancel_routine_1 = (void (*)(void *))a_cleanup_func3;\n  __cancel_arg_1 = Number L;\n  if (__sigsetjmp((struct __jmp_buf_tag *)&<span class=\"supfact\">__cancel_buf_1</span>,\n                  Number)) {\n    __cancel_routine_1(__cancel_arg_1);\n    __pthread_unwind_next(&<span class=\"supfact\">__cancel_buf_1</span>);\n  }\n  __pthread_register_cancel(&<span class=\"supfact\">__cancel_buf_1</span>);\n  pthread_exit(Number L);\n}", "var": [{"name": "buf", "type": "struct __pthread_unwind_buf_t { $F375244F0743F14650A061143CBB9C02[1] __cancel_jmp_buf; void *[4] __pad; }", "ref_name": "__cancel_buf_1", "ref_type": "struct __pthread_unwind_buf_t { $F375244F0743F14650A061143CBB9C02[1] __cancel_jmp_buf; void *[4] __pad; }"}, {"name": "env", "type": "struct __pthread_unwind_buf_t { $F375244F0743F14650A061143CBB9C02[1] __cancel_jmp_buf; void *[4] __pad; }", "ref_name": "__cancel_buf", "ref_type": "struct __pthread_unwind_buf_t { $F375244F0743F14650A061143CBB9C02[1] __cancel_jmp_buf; void *[4] __pad; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/baf54fa94846d0b997c980a3a36d011deefd15856e966d19355f75f502e081d6", "path_in_repo": "XanClic/qemu//util/vfio-helpers.o", "objdump": "00000000000004b8 <_nocheck__trace_qemu_vfio_do_mapping>:\n     4b8:\t55                   \tpush   %rbp\n     4b9:\t48 89 e5             \tmov    %rsp,%rbp\n     4bc:\t41 54                \tpush   %r12\n     4be:\t53                   \tpush   %rbx\n     4bf:\t48 83 ec 40          \tsub    $0x40,%rsp\n     4c3:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n     4c7:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n     4cb:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n     4cf:\t48 89 4d b0          \tmov    %rcx,-0x50(%rbp)\n     4d3:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     4da:\t00 00 \n     4dc:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     4e0:\t31 c0                \txor    %eax,%eax\n     4e2:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 4e8 <_nocheck__trace_qemu_vfio_do_mapping+0x30>\n     4e8:\t85 c0                \ttest   %eax,%eax\n     4ea:\t0f 95 c0             \tsetne  %al\n     4ed:\t0f b6 c0             \tmovzbl %al,%eax\n     4f0:\t48 85 c0             \ttest   %rax,%rax\n     4f3:\t74 6f                \tje     564 <_nocheck__trace_qemu_vfio_do_mapping+0xac>\n     4f5:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 4fc <_nocheck__trace_qemu_vfio_do_mapping+0x44>\n     4fc:\t66 85 c0             \ttest   %ax,%ax\n     4ff:\t74 63                \tje     564 <_nocheck__trace_qemu_vfio_do_mapping+0xac>\n     501:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n     506:\te8 f5 fa ff ff       \tcallq  0 <qemu_loglevel_mask>\n     50b:\t84 c0                \ttest   %al,%al\n     50d:\t74 55                \tje     564 <_nocheck__trace_qemu_vfio_do_mapping+0xac>\n     50f:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     513:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     518:\t48 89 c7             \tmov    %rax,%rdi\n     51b:\te8 00 00 00 00       \tcallq  520 <_nocheck__trace_qemu_vfio_do_mapping+0x68>\n     520:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     524:\t49 89 c4             \tmov    %rax,%r12\n     527:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     52b:\t48 89 c3             \tmov    %rax,%rbx\n     52e:\te8 00 00 00 00       \tcallq  533 <_nocheck__trace_qemu_vfio_do_mapping+0x7b>\n     533:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n     537:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n     53b:\tff 75 b0             \tpushq  -0x50(%rbp)\n     53e:\tff 75 b8             \tpushq  -0x48(%rbp)\n     541:\t49 89 c9             \tmov    %rcx,%r9\n     544:\t49 89 d0             \tmov    %rdx,%r8\n     547:\t4c 89 e1             \tmov    %r12,%rcx\n     54a:\t48 89 da             \tmov    %rbx,%rdx\n     54d:\t89 c6                \tmov    %eax,%esi\n     54f:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 556 <_nocheck__trace_qemu_vfio_do_mapping+0x9e>\n     556:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     55b:\te8 00 00 00 00       \tcallq  560 <_nocheck__trace_qemu_vfio_do_mapping+0xa8>\n     560:\t48 83 c4 10          \tadd    $0x10,%rsp\n     564:\t90                   \tnop\n     565:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     569:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n     570:\t00 00 \n     572:\t74 05                \tje     579 <_nocheck__trace_qemu_vfio_do_mapping+0xc1>\n     574:\te8 00 00 00 00       \tcallq  579 <_nocheck__trace_qemu_vfio_do_mapping+0xc1>\n     579:\t48 8d 65 f0          \tlea    -0x10(%rbp),%rsp\n     57d:\t5b                   \tpop    %rbx\n     57e:\t41 5c                \tpop    %r12\n     580:\t5d                   \tpop    %rbp\n     581:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_qemu_vfio_do_mapping(const void *a1,\n                                                                const void *a2,\n                                                                __int64 a3,\n                                                                __int64 a4) {\n  __suseconds_t v4;\n  __time_t v5;\n  unsigned int v6;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v11;\n  v11 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_QEMU_VFIO_DO_MAPPING_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v4 = <span class=\"supfact\">tv</span>.tv_usec;\n    v5 = <span class=\"supfact\">tv</span>.tv_sec;\n    v6 = qemu_get_thread_id();\n    qemu_log(String, v6, v5, v4, a1, a2, a3, a4);\n  }\n  return __readfsqword(Number) ^ v11;\n}", "code_t": "void __cdecl nocheck__trace_qemu_vfio_do_mapping(void *s, void *host,\n                                                 size_t size, uint64_t iova) {\n  __suseconds_t v4;\n  __time_t v5;\n  unsigned int v6;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v10;\n  v10 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_QEMU_VFIO_DO_MAPPING_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v4 = <span class=\"supfact\">_now</span>.tv_usec;\n    v5 = <span class=\"supfact\">_now</span>.tv_sec;\n    v6 = qemu_get_thread_id();\n    qemu_log(String, v6, v5, v4, s, host, size, iova);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "yuroc5390", "repo_name": "fuzz_target", "path": "yuroc5390/fuzz_target/3e846ccbc10312b1212c312a4a05acc5aa937c70c0aa4f2c8bbf85e582575475", "path_in_repo": "yuroc5390/fuzz_target/qemu_mode/qemu-2.10.0/block/vdi.o", "objdump": "0000000000000ea4 <vdi_co_preadv>:\n     ea4:\t55                   \tpush   %rbp\n     ea5:\t48 89 e5             \tmov    %rsp,%rbp\n     ea8:\t48 83 c4 80          \tadd    $0xffffffffffffff80,%rsp\n     eac:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n     eb0:\t48 89 75 a0          \tmov    %rsi,-0x60(%rbp)\n     eb4:\t48 89 55 98          \tmov    %rdx,-0x68(%rbp)\n     eb8:\t48 89 4d 90          \tmov    %rcx,-0x70(%rbp)\n     ebc:\t44 89 45 8c          \tmov    %r8d,-0x74(%rbp)\n     ec0:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     ec7:\t00 00 \n     ec9:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     ecd:\t31 c0                \txor    %eax,%eax\n     ecf:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n     ed3:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n     ed7:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n     edb:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n     ee2:\t00 \n     ee3:\tc7 45 b4 00 00 00 00 \tmovl   $0x0,-0x4c(%rbp)\n     eea:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     eee:\t8b 50 08             \tmov    0x8(%rax),%edx\n     ef1:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     ef5:\t89 d6                \tmov    %edx,%esi\n     ef7:\t48 89 c7             \tmov    %rax,%rdi\n     efa:\te8 00 00 00 00       \tcallq  eff <vdi_co_preadv+0x5b>\n     eff:\te9 3f 01 00 00       \tjmpq   1043 <vdi_co_preadv+0x19f>\n     f04:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     f08:\t8b 40 08             \tmov    0x8(%rax),%eax\n     f0b:\t89 c6                \tmov    %eax,%esi\n     f0d:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n     f11:\tba 00 00 00 00       \tmov    $0x0,%edx\n     f16:\t48 f7 f6             \tdiv    %rsi\n     f19:\t89 45 b8             \tmov    %eax,-0x48(%rbp)\n     f1c:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     f20:\t8b 40 08             \tmov    0x8(%rax),%eax\n     f23:\t89 c1                \tmov    %eax,%ecx\n     f25:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n     f29:\tba 00 00 00 00       \tmov    $0x0,%edx\n     f2e:\t48 f7 f1             \tdiv    %rcx\n     f31:\t48 89 d0             \tmov    %rdx,%rax\n     f34:\t89 45 bc             \tmov    %eax,-0x44(%rbp)\n     f37:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     f3b:\t8b 40 08             \tmov    0x8(%rax),%eax\n     f3e:\t2b 45 bc             \tsub    -0x44(%rbp),%eax\n     f41:\t89 c0                \tmov    %eax,%eax\n     f43:\t48 39 45 98          \tcmp    %rax,-0x68(%rbp)\n     f47:\t48 0f 46 45 98       \tcmovbe -0x68(%rbp),%rax\n     f4c:\t89 45 c0             \tmov    %eax,-0x40(%rbp)\n     f4f:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     f53:\t48 05 18 02 00 00    \tadd    $0x218,%rax\n     f59:\t48 89 c7             \tmov    %rax,%rdi\n     f5c:\te8 00 00 00 00       \tcallq  f61 <vdi_co_preadv+0xbd>\n     f61:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     f65:\t48 8b 00             \tmov    (%rax),%rax\n     f68:\t8b 55 b8             \tmov    -0x48(%rbp),%edx\n     f6b:\t48 c1 e2 02          \tshl    $0x2,%rdx\n     f6f:\t48 01 d0             \tadd    %rdx,%rax\n     f72:\t8b 00                \tmov    (%rax),%eax\n     f74:\t89 c7                \tmov    %eax,%edi\n     f76:\te8 85 f0 ff ff       \tcallq  0 <le32_to_cpu>\n     f7b:\t89 45 c4             \tmov    %eax,-0x3c(%rbp)\n     f7e:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     f82:\t48 05 18 02 00 00    \tadd    $0x218,%rax\n     f88:\t48 89 c7             \tmov    %rax,%rdi\n     f8b:\te8 00 00 00 00       \tcallq  f90 <vdi_co_preadv+0xec>\n     f90:\t83 7d c4 fd          \tcmpl   $0xfffffffd,-0x3c(%rbp)\n     f94:\t76 24                \tjbe    fba <vdi_co_preadv+0x116>\n     f96:\t8b 55 c0             \tmov    -0x40(%rbp),%edx\n     f99:\t48 8b 75 c8          \tmov    -0x38(%rbp),%rsi\n     f9d:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n     fa1:\t48 89 d1             \tmov    %rdx,%rcx\n     fa4:\tba 00 00 00 00       \tmov    $0x0,%edx\n     fa9:\t48 89 c7             \tmov    %rax,%rdi\n     fac:\te8 00 00 00 00       \tcallq  fb1 <vdi_co_preadv+0x10d>\n     fb1:\tc7 45 b4 00 00 00 00 \tmovl   $0x0,-0x4c(%rbp)\n     fb8:\teb 74                \tjmp    102e <vdi_co_preadv+0x18a>\n     fba:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     fbe:\t8b 80 6c 01 00 00    \tmov    0x16c(%rax),%eax\n     fc4:\t89 c1                \tmov    %eax,%ecx\n     fc6:\t8b 55 c4             \tmov    -0x3c(%rbp),%edx\n     fc9:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     fcd:\t8b 40 08             \tmov    0x8(%rax),%eax\n     fd0:\t89 c0                \tmov    %eax,%eax\n     fd2:\t48 0f af c2          \timul   %rdx,%rax\n     fd6:\t48 8d 14 01          \tlea    (%rcx,%rax,1),%rdx\n     fda:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n     fdd:\t48 01 d0             \tadd    %rdx,%rax\n     fe0:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n     fe4:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     fe8:\t48 89 c7             \tmov    %rax,%rdi\n     feb:\te8 00 00 00 00       \tcallq  ff0 <vdi_co_preadv+0x14c>\n     ff0:\t8b 4d c0             \tmov    -0x40(%rbp),%ecx\n     ff3:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n     ff7:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n     ffb:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     fff:\t48 89 c7             \tmov    %rax,%rdi\n    1002:\te8 00 00 00 00       \tcallq  1007 <vdi_co_preadv+0x163>\n    1007:\t48 8b 75 d8          \tmov    -0x28(%rbp),%rsi\n    100b:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    100f:\t48 8b 80 58 30 00 00 \tmov    0x3058(%rax),%rax\n    1016:\t48 8d 4d e0          \tlea    -0x20(%rbp),%rcx\n    101a:\t8b 55 c0             \tmov    -0x40(%rbp),%edx\n    101d:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    1023:\t48 89 c7             \tmov    %rax,%rdi\n    1026:\te8 00 00 00 00       \tcallq  102b <vdi_co_preadv+0x187>\n    102b:\t89 45 b4             \tmov    %eax,-0x4c(%rbp)\n    102e:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    1031:\t48 29 45 98          \tsub    %rax,-0x68(%rbp)\n    1035:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    1038:\t48 01 45 a0          \tadd    %rax,-0x60(%rbp)\n    103c:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    103f:\t48 01 45 c8          \tadd    %rax,-0x38(%rbp)\n    1043:\t83 7d b4 00          \tcmpl   $0x0,-0x4c(%rbp)\n    1047:\t78 0b                \tjs     1054 <vdi_co_preadv+0x1b0>\n    1049:\t48 83 7d 98 00       \tcmpq   $0x0,-0x68(%rbp)\n    104e:\t0f 85 b0 fe ff ff    \tjne    f04 <vdi_co_preadv+0x60>\n    1054:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n    1058:\t48 89 c7             \tmov    %rax,%rdi\n    105b:\te8 00 00 00 00       \tcallq  1060 <vdi_co_preadv+0x1bc>\n    1060:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n    1063:\t48 8b 7d f8          \tmov    -0x8(%rbp),%rdi\n    1067:\t64 48 33 3c 25 28 00 \txor    %fs:0x28,%rdi\n    106e:\t00 00 \n    1070:\t74 05                \tje     1077 <vdi_co_preadv+0x1d3>\n    1072:\te8 00 00 00 00       \tcallq  1077 <vdi_co_preadv+0x1d3>\n    1077:\tc9                   \tleaveq \n    1078:\tc3                   \tretq   ", "code_s": "__int64 __fastcall vdi_co_preadv(__int64 a1, unsigned __int64 a2,\n                                 unsigned __int64 a3, __int64 a4) {\n  unsigned __int64 v4;\n  int v9;\n  unsigned int v10;\n  unsigned int v11;\n  unsigned int v12;\n  unsigned int v13;\n  __int64 v14;\n  __int64 v15;\n  unsigned __int64 v16;\n  char <span class=\"supfact\">v17</span>[Number];\n  unsigned __int64 v18;\n  v18 = __readfsqword(Number);\n  v15 = *(_QWORD *)(a1 + Number);\n  v14 = Number L;\n  v9 = Number;\n  qemu_iovec_init(<span class=\"supfact\">v17</span>, *(unsigned int *)(a4 + Number));\n  while (v9 >= Number && a3) {\n    v10 = a2 / *(unsigned int *)(v15 + Number);\n    v11 = a2 % *(unsigned int *)(v15 + Number);\n    v4 = *(_DWORD *)(v15 + Number) - v11;\n    if (a3 <= v4)\n      LODWORD(v4) = a3;\n    v12 = v4;\n    qemu_co_rwlock_rdlock(v15 + Number);\n    v13 = le32_to_cpu(*(_DWORD *)(Number L * v10 + *(_QWORD *)v15));\n    qemu_co_rwlock_unlock(v15 + Number);\n    if (v13 <= Number) {\n      v16 = *(unsigned int *)(v15 + Number) +\n            v13 * (unsigned __int64)*(unsigned int *)(v15 + Number) + v11;\n      qemu_iovec_reset(<span class=\"supfact\">v17</span>);\n      qemu_iovec_concat(<span class=\"supfact\">v17</span>, a4, v14, v12);\n      v9 = bdrv_co_preadv(*(_QWORD *)(a1 + Number), v16, v12,\n                          <span class=\"supfact\">v17</span>, Number L);\n    } else {\n      qemu_iovec_memset(a4, v14, Number L, v12);\n      v9 = Number;\n    }\n    a3 -= v12;\n    a2 += v12;\n    v14 += v12;\n  }\n  qemu_iovec_destroy(<span class=\"supfact\">v17</span>);\n  return (unsigned int)v9;\n}", "code_t": "int __cdecl vdi_co_preadv(BlockDriverState_0 *bs, uint64_t offset,\n                          uint64_t bytes, QEMUIOVector_0 *qiov, int flags) {\n  uint64_t v5;\n  int ret;\n  uint32_t block_index;\n  uint32_t offset_in_block;\n  uint32_t n_bytes;\n  uint32_t bmap_entry;\n  uint64_t bytes_done;\n  BDRVVdiState *s;\n  uint64_t data_offset;\n  QEMUIOVector_0 <span class=\"supfact\">local_qiov</span>;\n  unsigned __int64 v19;\n  v19 = __readfsqword(Number);\n  s = (BDRVVdiState *)bs->opaque;\n  bytes_done = Number L;\n  ret = Number;\n  qemu_iovec_init(&<span class=\"supfact\">local_qiov</span>, (unsigned int)qiov->niov);\n  while (ret >= Number && bytes) {\n    block_index = offset / s->block_size;\n    offset_in_block = offset % s->block_size;\n    v5 = s->block_size - offset_in_block;\n    if (bytes <= v5)\n      LODWORD(v5) = bytes;\n    n_bytes = v5;\n    qemu_co_rwlock_rdlock(&s->bmap_lock);\n    bmap_entry = le32_to_cpu(s->bmap[block_index]);\n    qemu_co_rwlock_unlock(&s->bmap_lock);\n    if (bmap_entry <= Number) {\n      data_offset = s->header.offset_data +\n                    bmap_entry * (unsigned __int64)s->block_size +\n                    offset_in_block;\n      qemu_iovec_reset(&<span class=\"supfact\">local_qiov</span>);\n      qemu_iovec_concat(&<span class=\"supfact\">local_qiov</span>, qiov, bytes_done, n_bytes);\n      ret = bdrv_co_preadv(bs->file, data_offset, n_bytes,\n                           &<span class=\"supfact\">local_qiov</span>, Number L);\n    } else {\n      qemu_iovec_memset(qiov, bytes_done, Number L, n_bytes);\n      ret = Number;\n    }\n    bytes -= n_bytes;\n    offset += n_bytes;\n    bytes_done += n_bytes;\n  }\n  qemu_iovec_destroy(&<span class=\"supfact\">local_qiov</span>);\n  return ret;\n}", "var": [{"name": "v17", "type": "struct QEMUIOVector_0 { iovec * iov; int niov; int nalloc; size_t size; }", "ref_name": "local_qiov", "ref_type": "struct QEMUIOVector_0 { iovec * iov; int niov; int nalloc; size_t size; }"}], "body_in_train": false}, {"repo_owner": "unicorn-engine", "repo_name": "unicorn", "path": "unicorn-engine/unicorn/96bfedbed9bb3e3ab82839a2df46233f9bd906388f073a42ece6aad6fea9e45c", "path_in_repo": "unicorn-engine/unicorn//qemu/aarch64eb-softmmu/target-arm/cpu.o", "objdump": "0000000000002c7f <cpu_register_aarch64eb>:\n    2c7f:\t55                   \tpush   %rbp\n    2c80:\t48 89 e5             \tmov    %rsp,%rbp\n    2c83:\t48 81 ec a0 00 00 00 \tsub    $0xa0,%rsp\n    2c8a:\t48 89 bd 68 ff ff ff \tmov    %rdi,-0x98(%rbp)\n    2c91:\t48 89 b5 60 ff ff ff \tmov    %rsi,-0xa0(%rbp)\n    2c98:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    2c9f:\t00 00 \n    2ca1:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    2ca5:\t31 c0                \txor    %eax,%eax\n    2ca7:\t48 8d 95 70 ff ff ff \tlea    -0x90(%rbp),%rdx\n    2cae:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2cb3:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n    2cb8:\t48 89 d7             \tmov    %rdx,%rdi\n    2cbb:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n    2cbe:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 2cc5 <cpu_register_aarch64eb+0x46>\n    2cc5:\t48 89 85 78 ff ff ff \tmov    %rax,-0x88(%rbp)\n    2ccc:\t48 c7 45 88 b0 33 01 \tmovq   $0x133b0,-0x78(%rbp)\n    2cd3:\t00 \n    2cd4:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    2cdb:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2cdf:\t48 89 45 98          \tmov    %rax,-0x68(%rbp)\n    2ce3:\t48 c7 45 80 80 01 00 \tmovq   $0x180,-0x80(%rbp)\n    2cea:\t00 \n    2ceb:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    2cf2:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    2cf6:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n    2cfa:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    2d01:\t48 8b 00             \tmov    (%rax),%rax\n    2d04:\t48 89 c6             \tmov    %rax,%rsi\n    2d07:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 2d0e <cpu_register_aarch64eb+0x8f>\n    2d0e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2d13:\te8 00 00 00 00       \tcallq  2d18 <cpu_register_aarch64eb+0x99>\n    2d18:\t48 89 85 70 ff ff ff \tmov    %rax,-0x90(%rbp)\n    2d1f:\t48 8d 95 70 ff ff ff \tlea    -0x90(%rbp),%rdx\n    2d26:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    2d2d:\t48 89 d6             \tmov    %rdx,%rsi\n    2d30:\t48 89 c7             \tmov    %rax,%rdi\n    2d33:\te8 00 00 00 00       \tcallq  2d38 <cpu_register_aarch64eb+0xb9>\n    2d38:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n    2d3f:\t48 89 c7             \tmov    %rax,%rdi\n    2d42:\te8 00 00 00 00       \tcallq  2d47 <cpu_register_aarch64eb+0xc8>\n    2d47:\t90                   \tnop\n    2d48:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2d4c:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    2d53:\t00 00 \n    2d55:\t74 05                \tje     2d5c <cpu_register_aarch64eb+0xdd>\n    2d57:\te8 00 00 00 00       \tcallq  2d5c <cpu_register_aarch64eb+0xdd>\n    2d5c:\tc9                   \tleaveq \n    2d5d:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall cpu_register_aarch64eb(__int64 a1, __int64 a2) {\n  __int64 <span class=\"supfact\">v3</span>[Number];\n  unsigned __int64 v4;\n  v4 = __readfsqword(Number);\n  memset(<span class=\"supfact\">v3</span>, Number, Number);\n  <span class=\"supfact\">v3</span>[Number] = (__int64)String;\n  <span class=\"supfact\">v3</span>[Number] = Number L;\n  <span class=\"supfact\">v3</span>[Number] = *(_QWORD *)(a2 + Number);\n  <span class=\"supfact\">v3</span>[Number] = Number L;\n  <span class=\"supfact\">v3</span>[Number] = *(_QWORD *)(a2 + Number);\n  <span class=\"supfact\">v3</span>[Number] = g_strdup_printf(String, *(const char **)a2);\n  type_register(a1, <span class=\"supfact\">v3</span>);\n  g_free(<span class=\"supfact\">v3</span>[Number]);\n  return __readfsqword(Number) ^ v4;\n}", "code_t": "void __cdecl cpu_register_aarch64eb(uc_struct *uc, const ARMCPUInfo_0 *info) {\n  TypeInfo_0 <span class=\"supfact\">type_info</span>;\n  unsigned __int64 v3;\n  v3 = __readfsqword(Number);\n  memset(&<span class=\"supfact\">type_info</span>, Number, sizeof(<span class=\"supfact\">type_info</span>));\n  <span class=\"supfact\">type_info</span>.parent = String;\n  <span class=\"supfact\">type_info</span>.instance_size = Number L;\n  <span class=\"supfact\">type_info</span>.instance_init = info->initfn;\n  <span class=\"supfact\">type_info</span>.class_size = Number L;\n  <span class=\"supfact\">type_info</span>.class_init = info->class_init;\n  <span class=\"supfact\">type_info</span>.name =\n      (const char *)g_strdup_printf(String, info->name);\n  type_register(uc, &<span class=\"supfact\">type_info</span>);\n  g_free(<span class=\"supfact\">type_info</span>.name);\n}", "var": [{"name": "v3", "type": "struct TypeInfo_0 { const char * name; const char * parent; size_t class_size; size_t instance_size; void * instance_userdata; void (*)(uc_struct *, Object_0 *, void *) instance_init; void (*)(uc_struct *, Object_0 *) instance_post_init; void (*)(uc_struct *, Object_0 *, void *) instance_finalize; void * class_data; void (*)(uc_struct *, ObjectClass_0 *, void *) class_init; void (*)(ObjectClass_0 *, void *) class_base_init; void (*)(ObjectClass_0 *, void *) class_finalize; bool abstract; PADDING (7); void * parent_type; ObjectClass_0 * class; InterfaceInfo_0 * interfaces; }", "ref_name": "type_info", "ref_type": "struct TypeInfo_0 { const char * name; const char * parent; size_t class_size; size_t instance_size; void * instance_userdata; void (*)(uc_struct *, Object_0 *, void *) instance_init; void (*)(uc_struct *, Object_0 *) instance_post_init; void (*)(uc_struct *, Object_0 *, void *) instance_finalize; void * class_data; void (*)(uc_struct *, ObjectClass_0 *, void *) class_init; void (*)(ObjectClass_0 *, void *) class_base_init; void (*)(ObjectClass_0 *, void *) class_finalize; bool abstract; PADDING (7); void * parent_type; ObjectClass_0 * class_; InterfaceInfo_0 * interfaces; }"}], "body_in_train": false}, {"repo_owner": "AlexanderVangelov", "repo_name": "pjsip", "path": "AlexanderVangelov/pjsip/0c220081571b31109458ad0af80da996db681a85a2e92ce9cf7314108079ece6", "path_in_repo": "AlexanderVangelov/pjsip//pjlib-util/bin/pjlib-util-test-x86_64-unknown-linux-gnu", "objdump": "000000000041652c <pj_dns_resolver_set_ns>:\n  41652c:\t55                   \tpush   %rbp\n  41652d:\t48 89 e5             \tmov    %rsp,%rbp\n  416530:\t48 83 ec 40          \tsub    $0x40,%rsp\n  416534:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n  416538:\t89 75 d4             \tmov    %esi,-0x2c(%rbp)\n  41653b:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n  41653f:\t48 89 4d c0          \tmov    %rcx,-0x40(%rbp)\n  416543:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n  416548:\t74 0d                \tje     416557 <pj_dns_resolver_set_ns+0x2b>\n  41654a:\t83 7d d4 00          \tcmpl   $0x0,-0x2c(%rbp)\n  41654e:\t74 07                \tje     416557 <pj_dns_resolver_set_ns+0x2b>\n  416550:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n  416555:\t75 37                \tjne    41658e <pj_dns_resolver_set_ns+0x62>\n  416557:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n  41655c:\t74 0d                \tje     41656b <pj_dns_resolver_set_ns+0x3f>\n  41655e:\t83 7d d4 00          \tcmpl   $0x0,-0x2c(%rbp)\n  416562:\t74 07                \tje     41656b <pj_dns_resolver_set_ns+0x3f>\n  416564:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n  416569:\t75 19                \tjne    416584 <pj_dns_resolver_set_ns+0x58>\n  41656b:\tb9 e0 97 43 00       \tmov    $0x4397e0,%ecx\n  416570:\tba 17 02 00 00       \tmov    $0x217,%edx\n  416575:\tbe 73 92 43 00       \tmov    $0x439273,%esi\n  41657a:\tbf b5 92 43 00       \tmov    $0x4392b5,%edi\n  41657f:\te8 1c cb fe ff       \tcallq  4030a0 <__assert_fail@plt>\n  416584:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n  416589:\te9 c8 01 00 00       \tjmpq   416756 <pj_dns_resolver_set_ns+0x22a>\n  41658e:\t83 7d d4 0f          \tcmpl   $0xf,-0x2c(%rbp)\n  416592:\t76 29                \tjbe    4165bd <pj_dns_resolver_set_ns+0x91>\n  416594:\t83 7d d4 0f          \tcmpl   $0xf,-0x2c(%rbp)\n  416598:\t76 19                \tjbe    4165b3 <pj_dns_resolver_set_ns+0x87>\n  41659a:\tb9 e0 97 43 00       \tmov    $0x4397e0,%ecx\n  41659f:\tba 18 02 00 00       \tmov    $0x218,%edx\n  4165a4:\tbe 73 92 43 00       \tmov    $0x439273,%esi\n  4165a9:\tbf d2 92 43 00       \tmov    $0x4392d2,%edi\n  4165ae:\te8 ed ca fe ff       \tcallq  4030a0 <__assert_fail@plt>\n  4165b3:\tb8 74 11 01 00       \tmov    $0x11174,%eax\n  4165b8:\te9 99 01 00 00       \tjmpq   416756 <pj_dns_resolver_set_ns+0x22a>\n  4165bd:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  4165c1:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n  4165c5:\t48 89 c7             \tmov    %rax,%rdi\n  4165c8:\te8 9e e5 00 00       \tcallq  424b6b <pj_mutex_lock>\n  4165cd:\t83 7d d4 10          \tcmpl   $0x10,-0x2c(%rbp)\n  4165d1:\t76 07                \tjbe    4165da <pj_dns_resolver_set_ns+0xae>\n  4165d3:\tc7 45 d4 10 00 00 00 \tmovl   $0x10,-0x2c(%rbp)\n  4165da:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  4165de:\tc7 80 48 16 00 00 00 \tmovl   $0x0,0x1648(%rax)\n  4165e5:\t00 00 00 \n  4165e8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  4165ec:\t48 05 50 16 00 00    \tadd    $0x1650,%rax\n  4165f2:\tbe 80 05 00 00       \tmov    $0x580,%esi\n  4165f7:\t48 89 c7             \tmov    %rax,%rdi\n  4165fa:\te8 57 f7 ff ff       \tcallq  415d56 <pj_bzero>\n  4165ff:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  416603:\t48 89 c7             \tmov    %rax,%rdi\n  416606:\te8 54 f5 00 00       \tcallq  425b5f <pj_gettimeofday>\n  41660b:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n  416612:\te9 11 01 00 00       \tjmpq   416728 <pj_dns_resolver_set_ns+0x1fc>\n  416617:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n  41661a:\t48 89 d0             \tmov    %rdx,%rax\n  41661d:\t48 c1 e0 02          \tshl    $0x2,%rax\n  416621:\t48 01 d0             \tadd    %rdx,%rax\n  416624:\t48 01 c0             \tadd    %rax,%rax\n  416627:\t48 01 d0             \tadd    %rdx,%rax\n  41662a:\t48 c1 e0 03          \tshl    $0x3,%rax\n  41662e:\t48 8d 90 50 16 00 00 \tlea    0x1650(%rax),%rdx\n  416635:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  416639:\t48 01 d0             \tadd    %rdx,%rax\n  41663c:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  416640:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n  416645:\t74 16                \tje     41665d <pj_dns_resolver_set_ns+0x131>\n  416647:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  41664a:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n  41664e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  416652:\t48 01 d0             \tadd    %rdx,%rax\n  416655:\t0f b7 00             \tmovzwl (%rax),%eax\n  416658:\t0f b7 c0             \tmovzwl %ax,%eax\n  41665b:\teb 05                \tjmp    416662 <pj_dns_resolver_set_ns+0x136>\n  41665d:\tb8 35 00 00 00       \tmov    $0x35,%eax\n  416662:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n  416665:\t48 89 d1             \tmov    %rdx,%rcx\n  416668:\t48 c1 e1 04          \tshl    $0x4,%rcx\n  41666c:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n  416670:\t48 01 ca             \tadd    %rcx,%rdx\n  416673:\t48 8b 75 f0          \tmov    -0x10(%rbp),%rsi\n  416677:\t0f b7 0d b6 44 02 00 \tmovzwl 0x244b6(%rip),%ecx        # 43ab34 <PJ_AF_INET>\n  41667e:\t0f b7 f9             \tmovzwl %cx,%edi\n  416681:\t89 c1                \tmov    %eax,%ecx\n  416683:\te8 f1 7d 01 00       \tcallq  42e479 <pj_sockaddr_init>\n  416688:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n  41668b:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n  41668f:\t74 4b                \tje     4166dc <pj_dns_resolver_set_ns+0x1b0>\n  416691:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n  416696:\t74 16                \tje     4166ae <pj_dns_resolver_set_ns+0x182>\n  416698:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  41669b:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n  41669f:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  4166a3:\t48 01 d0             \tadd    %rdx,%rax\n  4166a6:\t0f b7 00             \tmovzwl (%rax),%eax\n  4166a9:\t0f b7 c0             \tmovzwl %ax,%eax\n  4166ac:\teb 05                \tjmp    4166b3 <pj_dns_resolver_set_ns+0x187>\n  4166ae:\tb8 35 00 00 00       \tmov    $0x35,%eax\n  4166b3:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n  4166b6:\t48 89 d1             \tmov    %rdx,%rcx\n  4166b9:\t48 c1 e1 04          \tshl    $0x4,%rcx\n  4166bd:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n  4166c1:\t48 01 ca             \tadd    %rcx,%rdx\n  4166c4:\t48 8b 75 f0          \tmov    -0x10(%rbp),%rsi\n  4166c8:\t0f b7 0d 67 44 02 00 \tmovzwl 0x24467(%rip),%ecx        # 43ab36 <PJ_AF_INET6>\n  4166cf:\t0f b7 f9             \tmovzwl %cx,%edi\n  4166d2:\t89 c1                \tmov    %eax,%ecx\n  4166d4:\te8 a0 7d 01 00       \tcallq  42e479 <pj_sockaddr_init>\n  4166d9:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n  4166dc:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n  4166e0:\t74 17                \tje     4166f9 <pj_dns_resolver_set_ns+0x1cd>\n  4166e2:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  4166e6:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n  4166ea:\t48 89 c7             \tmov    %rax,%rdi\n  4166ed:\te8 32 e5 00 00       \tcallq  424c24 <pj_mutex_unlock>\n  4166f2:\tb8 2c e2 04 00       \tmov    $0x4e22c,%eax\n  4166f7:\teb 5d                \tjmp    416756 <pj_dns_resolver_set_ns+0x22a>\n  4166f9:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  4166fd:\tc7 40 1c 01 00 00 00 \tmovl   $0x1,0x1c(%rax)\n  416704:\t48 8b 4d f0          \tmov    -0x10(%rbp),%rcx\n  416708:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  41670c:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  416710:\t48 89 41 20          \tmov    %rax,0x20(%rcx)\n  416714:\t48 89 51 28          \tmov    %rdx,0x28(%rcx)\n  416718:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41671c:\t48 c7 40 30 0a 00 00 \tmovq   $0xa,0x30(%rax)\n  416723:\t00 \n  416724:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n  416728:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  41672b:\t3b 45 d4             \tcmp    -0x2c(%rbp),%eax\n  41672e:\t0f 82 e3 fe ff ff    \tjb     416617 <pj_dns_resolver_set_ns+0xeb>\n  416734:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  416738:\t8b 55 d4             \tmov    -0x2c(%rbp),%edx\n  41673b:\t89 90 48 16 00 00    \tmov    %edx,0x1648(%rax)\n  416741:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  416745:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n  416749:\t48 89 c7             \tmov    %rax,%rdi\n  41674c:\te8 d3 e4 00 00       \tcallq  424c24 <pj_mutex_unlock>\n  416751:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  416756:\tc9                   \tleaveq \n  416757:\tc3                   \tretq   ", "code_s": "__int64 __fastcall pj_dns_resolver_set_ns(__int64 a1, unsigned int a2,\n                                          __int64 a3, __int64 a4) {\n  __int64 result;\n  unsigned int v5;\n  unsigned int v6;\n  __int64 v7;\n  __int64 v8;\n  __int64 <span class=\"supfact\">v11</span>[Number];\n  __int64 v12;\n  int v13;\n  unsigned int i;\n  if (a1 && a2 && a3) {\n    if (a2 > Number)\n      __assert_fail(String, String, Number, String);\n    pj_mutex_lock(*(_QWORD *)(a1 + Number));\n    *(_DWORD *)(a1 + Number) = Number;\n    pj_bzero_6((void *)(a1 + Number), Number);\n    pj_gettimeofday(<span class=\"supfact\">v11</span>);\n    for (i = Number; i < a2; ++i) {\n      v12 = Number L * i + Number + a1;\n      if (a4)\n        v5 = *(unsigned __int16 *)(Number L * i + a4);\n      else\n        v5 = Number;\n      v13 = pj_sockaddr_init((unsigned __int16)PJ_AF_INET, v12,\n                             Number L * i + a3, v5);\n      if (v13) {\n        if (a4)\n          v6 = *(unsigned __int16 *)(Number L * i + a4);\n        else\n          v6 = Number;\n        v13 = pj_sockaddr_init((unsigned __int16)PJ_AF_INET6, v12,\n                               Number L * i + a3, v6);\n      }\n      if (v13) {\n        pj_mutex_unlock(*(_QWORD *)(a1 + Number));\n        return Number L;\n      }\n      *(_DWORD *)(v12 + Number) = Number;\n      v7 = v12;\n      v8 = <span class=\"supfact\">v11</span>[Number];\n      *(_QWORD *)(v12 + Number) = <span class=\"supfact\">v11</span>[Number];\n      *(_QWORD *)(v7 + Number) = v8;\n      *(_QWORD *)(v12 + Number) = Number L;\n    }\n    *(_DWORD *)(a1 + Number) = a2;\n    pj_mutex_unlock(*(_QWORD *)(a1 + Number));\n    result = Number L;\n  } else {\n    if (!a1 || !a2 || !a3)\n      __assert_fail(String, String, Number, String);\n    result = Number L;\n  }\n  return result;\n}", "code_t": "pj_status_t __cdecl pj_dns_resolver_set_ns(pj_dns_resolver_0 *resolver,\n                                           unsigned int count,\n                                           const pj_str_t_0 *servers,\n                                           const pj_uint16_t *ports) {\n  pj_status_t result;\n  pj_uint16_t v5;\n  pj_uint16_t v6;\n  nameserver *v7;\n  __int64 v8;\n  pj_time_val_0 <span class=\"supfact\">now</span>;\n  nameserver *ns;\n  pj_status_t status;\n  unsigned int i;\n  if (resolver && count && servers) {\n    if (count > Number)\n      __assert_fail(String, String, Number, String);\n    pj_mutex_lock(resolver->mutex);\n    resolver->ns_count = Number;\n    pj_bzero_6(resolver->ns, Number);\n    pj_gettimeofday(&<span class=\"supfact\">now</span>);\n    for (i = Number; i < count; ++i) {\n      ns = &resolver->ns[i];\n      if (ports)\n        v5 = ports[i];\n      else\n        v5 = Number;\n      status = pj_sockaddr_init(PJ_AF_INET, &ns->addr, &servers[i], v5);\n      if (status) {\n        if (ports)\n          v6 = ports[i];\n        else\n          v6 = Number;\n        status = pj_sockaddr_init(PJ_AF_INET6, &ns->addr, &servers[i], v6);\n      }\n      if (status) {\n        pj_mutex_unlock(resolver->mutex);\n        return Number;\n      }\n      ns->state = STATE_ACTIVE;\n      v7 = ns;\n      v8 = <span class=\"supfact\">now</span>.msec;\n      ns->state_expiry.sec = <span class=\"supfact\">now</span>.sec;\n      v7->state_expiry.msec = v8;\n      ns->rt_delay.sec = Number L;\n    }\n    resolver->ns_count = count;\n    pj_mutex_unlock(resolver->mutex);\n    result = Number;\n  } else {\n    if (!resolver || !count || !servers)\n      __assert_fail(String, String, Number, String);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "v11", "type": "struct pj_time_val_0 { __int64 sec; __int64 msec; }", "ref_name": "now", "ref_type": "struct pj_time_val_0 { __int64 sec; __int64 msec; }"}], "body_in_train": false}, {"repo_owner": "eunsungc", "repo_name": "gt6-RAMSES_8_5", "path": "eunsungc/gt6-RAMSES_8_5/323b2f89de68f0e2ad774e7218e4d2cef0e5b92121fd6161b8e538313ff42050", "path_in_repo": "eunsungc/gt6-RAMSES_8_5/gsi_openssh/source/scp.o", "objdump": "00000000000039be <allocbuf>:\n    39be:\t55                   \tpush   %rbp\n    39bf:\t48 89 e5             \tmov    %rsp,%rbp\n    39c2:\t48 81 ec c0 00 00 00 \tsub    $0xc0,%rsp\n    39c9:\t48 89 bd 48 ff ff ff \tmov    %rdi,-0xb8(%rbp)\n    39d0:\t89 b5 44 ff ff ff    \tmov    %esi,-0xbc(%rbp)\n    39d6:\t89 95 40 ff ff ff    \tmov    %edx,-0xc0(%rbp)\n    39dc:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    39e3:\t00 00 \n    39e5:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    39e9:\t31 c0                \txor    %eax,%eax\n    39eb:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n    39f2:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n    39f8:\t48 89 d6             \tmov    %rdx,%rsi\n    39fb:\t89 c7                \tmov    %eax,%edi\n    39fd:\te8 00 00 00 00       \tcallq  3a02 <allocbuf+0x44>\n    3a02:\t85 c0                \ttest   %eax,%eax\n    3a04:\t79 2a                \tjns    3a30 <allocbuf+0x72>\n    3a06:\te8 00 00 00 00       \tcallq  3a0b <allocbuf+0x4d>\n    3a0b:\t8b 00                \tmov    (%rax),%eax\n    3a0d:\t89 c7                \tmov    %eax,%edi\n    3a0f:\te8 00 00 00 00       \tcallq  3a14 <allocbuf+0x56>\n    3a14:\t48 89 c6             \tmov    %rax,%rsi\n    3a17:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3a1c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3a21:\te8 00 00 00 00       \tcallq  3a26 <allocbuf+0x68>\n    3a26:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3a2b:\te9 fb 00 00 00       \tjmpq   3b2b <allocbuf+0x16d>\n    3a30:\t48 8b 55 98          \tmov    -0x68(%rbp),%rdx\n    3a34:\t8b 85 40 ff ff ff    \tmov    -0xc0(%rbp),%eax\n    3a3a:\t83 e8 01             \tsub    $0x1,%eax\n    3a3d:\t48 98                \tcltq   \n    3a3f:\t48 01 d0             \tadd    %rdx,%rax\n    3a42:\t8b 95 40 ff ff ff    \tmov    -0xc0(%rbp),%edx\n    3a48:\t48 63 ca             \tmovslq %edx,%rcx\n    3a4b:\t48 99                \tcqto   \n    3a4d:\t48 f7 f9             \tidiv   %rcx\n    3a50:\t48 89 c2             \tmov    %rax,%rdx\n    3a53:\t8b 85 40 ff ff ff    \tmov    -0xc0(%rbp),%eax\n    3a59:\t48 98                \tcltq   \n    3a5b:\t48 0f af c2          \timul   %rdx,%rax\n    3a5f:\t48 89 85 58 ff ff ff \tmov    %rax,-0xa8(%rbp)\n    3a66:\t48 83 bd 58 ff ff ff \tcmpq   $0x0,-0xa8(%rbp)\n    3a6d:\t00 \n    3a6e:\t75 0f                \tjne    3a7f <allocbuf+0xc1>\n    3a70:\t8b 85 40 ff ff ff    \tmov    -0xc0(%rbp),%eax\n    3a76:\t48 98                \tcltq   \n    3a78:\t48 89 85 58 ff ff ff \tmov    %rax,-0xa8(%rbp)\n    3a7f:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    3a86:\t48 8b 00             \tmov    (%rax),%rax\n    3a89:\t48 39 85 58 ff ff ff \tcmp    %rax,-0xa8(%rbp)\n    3a90:\t77 0c                \tja     3a9e <allocbuf+0xe0>\n    3a92:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    3a99:\te9 8d 00 00 00       \tjmpq   3b2b <allocbuf+0x16d>\n    3a9e:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    3aa5:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    3aa9:\t48 85 c0             \ttest   %rax,%rax\n    3aac:\t75 1c                \tjne    3aca <allocbuf+0x10c>\n    3aae:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    3ab5:\t48 89 c7             \tmov    %rax,%rdi\n    3ab8:\te8 00 00 00 00       \tcallq  3abd <allocbuf+0xff>\n    3abd:\t48 8b 95 48 ff ff ff \tmov    -0xb8(%rbp),%rdx\n    3ac4:\t48 89 42 08          \tmov    %rax,0x8(%rdx)\n    3ac8:\teb 2a                \tjmp    3af4 <allocbuf+0x136>\n    3aca:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    3ad1:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    3ad5:\t48 8b 95 58 ff ff ff \tmov    -0xa8(%rbp),%rdx\n    3adc:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    3ae1:\t48 89 c7             \tmov    %rax,%rdi\n    3ae4:\te8 00 00 00 00       \tcallq  3ae9 <allocbuf+0x12b>\n    3ae9:\t48 8b 95 48 ff ff ff \tmov    -0xb8(%rbp),%rdx\n    3af0:\t48 89 42 08          \tmov    %rax,0x8(%rdx)\n    3af4:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    3afb:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    3aff:\t48 8b 95 58 ff ff ff \tmov    -0xa8(%rbp),%rdx\n    3b06:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    3b0b:\t48 89 c7             \tmov    %rax,%rdi\n    3b0e:\te8 00 00 00 00       \tcallq  3b13 <allocbuf+0x155>\n    3b13:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    3b1a:\t48 8b 95 58 ff ff ff \tmov    -0xa8(%rbp),%rdx\n    3b21:\t48 89 10             \tmov    %rdx,(%rax)\n    3b24:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    3b2b:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    3b2f:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n    3b36:\t00 00 \n    3b38:\t74 05                \tje     3b3f <allocbuf+0x181>\n    3b3a:\te8 00 00 00 00       \tcallq  3b3f <allocbuf+0x181>\n    3b3f:\tc9                   \tleaveq \n    3b40:\tc3                   \tretq   ", "code_s": "__int64 __fastcall allocbuf(__int64 a1, int a2, int a3) {\n  int *v3;\n  char *v4;\n  __int64 v5;\n  __int64 v6;\n  __int64 v7;\n  __int64 v8;\n  __int64 result;\n  __int64 v10;\n  unsigned __int64 n;\n  struct stat <span class=\"supfact\">v13</span>;\n  unsigned __int64 v14;\n  v14 = __readfsqword(Number);\n  if (fstat(a2, &<span class=\"supfact\">v13</span>) >= Number) {\n    n = (<span class=\"supfact\">v13</span>.st_blksize + a3 - Number) / a3 * a3;\n    if (!n)\n      n = a3;\n    if (n > *(_QWORD *)a1) {\n      if (*(_QWORD *)(a1 + Number))\n        v10 = xrealloc(*(_QWORD *)(a1 + Number), Number L, n);\n      else\n        v10 = xmalloc(n);\n      *(_QWORD *)(a1 + Number) = v10;\n      memset(*(void **)(a1 + Number), Number, n);\n      *(_QWORD *)a1 = n;\n      result = a1;\n    } else {\n      result = a1;\n    }\n  } else {\n    v3 = _errno_location();\n    v4 = strerror(*v3);\n    run_err(String, (__int64)v4, v5, v6, v7, v8);\n    result = Number L;\n  }\n  return result;\n}", "code_t": "BUF *__cdecl allocbuf(BUF *bp_0, int fd, int blksize) {\n  int *v3;\n  char *v4;\n  BUF *result;\n  char *v6;\n  size_t size;\n  stat <span class=\"supfact\">stb</span>;\n  unsigned __int64 v10;\n  v10 = __readfsqword(Number);\n  if (fstat(fd, &<span class=\"supfact\">stb</span>) >= Number) {\n    size =\n        (<span class=\"supfact\">stb</span>.st_blksize + blksize - Number) / blksize * blksize;\n    if (!size)\n      size = blksize;\n    if (size > bp_0->cnt) {\n      if (bp_0->buf)\n        v6 = (char *)xrealloc(bp_0->buf, Number L, size);\n      else\n        v6 = (char *)xmalloc(size);\n      bp_0->buf = v6;\n      memset(bp_0->buf, Number, size);\n      bp_0->cnt = size;\n      result = bp_0;\n    } else {\n      result = bp_0;\n    }\n  } else {\n    v3 = _errno_location();\n    v4 = strerror(*v3);\n    run_err(String, v4);\n    result = Number L;\n  }\n  return result;\n}", "var": [{"name": "v13", "type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }", "ref_name": "stb", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }"}], "body_in_train": false}, {"repo_owner": "medicalwei", "repo_name": "hime-debian", "path": "medicalwei/hime-debian/fcb87443a94ead13ef362ff2800c1fa1bbb9c308d574acecebea9e7b66a1a4d1", "path_in_repo": "medicalwei/hime-debian/src/hime-tslearn.o", "objdump": "000000000000059c <all_wrap>:\n     59c:\t55                   \tpush   %rbp\n     59d:\t48 89 e5             \tmov    %rsp,%rbp\n     5a0:\t48 81 ec a0 00 00 00 \tsub    $0xa0,%rsp\n     5a7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5ae <all_wrap+0x12>\n     5ae:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n     5b5:\t48 8d 4d b0          \tlea    -0x50(%rbp),%rcx\n     5b9:\t48 89 ce             \tmov    %rcx,%rsi\n     5bc:\t48 89 c7             \tmov    %rax,%rdi\n     5bf:\te8 00 00 00 00       \tcallq  5c4 <all_wrap+0x28>\n     5c4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5cb <all_wrap+0x2f>\n     5cb:\t48 8d 8d 60 ff ff ff \tlea    -0xa0(%rbp),%rcx\n     5d2:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n     5d6:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     5db:\t48 89 c7             \tmov    %rax,%rdi\n     5de:\te8 00 00 00 00       \tcallq  5e3 <all_wrap+0x47>\n     5e3:\t90                   \tnop\n     5e4:\tc9                   \tleaveq \n     5e5:\tc3                   \tretq   ", "code_s": "__int64 all_wrap() {\n  char <span class=\"supfact\">v1</span>[Number];\n  char <span class=\"supfact\">v2</span>[Number];\n  gtk_text_buffer_get_bounds(buffer, <span class=\"supfact\">v2</span>, <span class=\"supfact\">v1</span>);\n  return gtk_text_buffer_apply_tag_by_name(buffer, String, <span class=\"supfact\">v2</span>,\n                                           <span class=\"supfact\">v1</span>);\n}", "code_t": "void __cdecl all_wrap() {\n  GtkTextIter <span class=\"supfact\">mend</span>;\n  GtkTextIter <span class=\"supfact\">mstart</span>;\n  gtk_text_buffer_get_bounds(buffer, &<span class=\"supfact\">mstart</span>,\n                             &<span class=\"supfact\">mend</span>);\n  gtk_text_buffer_apply_tag_by_name(buffer, String, &<span class=\"supfact\">mstart</span>,\n                                    &<span class=\"supfact\">mend</span>);\n}", "var": [{"name": "v2", "type": "char[80]", "ref_name": "mstart", "ref_type": "struct GtkTextIter { gpointer dummy1; gpointer dummy2; gint dummy3; gint dummy4; gint dummy5; gint dummy6; gint dummy7; gint dummy8; gpointer dummy9; gpointer dummy10; gint dummy11; gint dummy12; gint dummy13; PADDING (4); gpointer dummy14; }"}, {"name": "v1", "type": "char[80]", "ref_name": "mend", "ref_type": "struct GtkTextIter { gpointer dummy1; gpointer dummy2; gint dummy3; gint dummy4; gint dummy5; gint dummy6; gint dummy7; gint dummy8; gpointer dummy9; gpointer dummy10; gint dummy11; gint dummy12; gint dummy13; PADDING (4); gpointer dummy14; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/3da554e7be727d06ab7f4e2330fe40c06e49dc1c481fc3ec5a772104aacc182a", "path_in_repo": "XanClic/qemu//hw/scsi/megasas.o", "objdump": "000000000000127f <_nocheck__trace_megasas_qf_complete>:\n    127f:\t55                   \tpush   %rbp\n    1280:\t48 89 e5             \tmov    %rsp,%rbp\n    1283:\t41 54                \tpush   %r12\n    1285:\t53                   \tpush   %rbx\n    1286:\t48 83 ec 40          \tsub    $0x40,%rsp\n    128a:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    128e:\t89 75 c4             \tmov    %esi,-0x3c(%rbp)\n    1291:\t89 55 c0             \tmov    %edx,-0x40(%rbp)\n    1294:\t89 4d bc             \tmov    %ecx,-0x44(%rbp)\n    1297:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    129e:\t00 00 \n    12a0:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    12a4:\t31 c0                \txor    %eax,%eax\n    12a6:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 12ac <_nocheck__trace_megasas_qf_complete+0x2d>\n    12ac:\t85 c0                \ttest   %eax,%eax\n    12ae:\t0f 95 c0             \tsetne  %al\n    12b1:\t0f b6 c0             \tmovzbl %al,%eax\n    12b4:\t48 85 c0             \ttest   %rax,%rax\n    12b7:\t74 70                \tje     1329 <_nocheck__trace_megasas_qf_complete+0xaa>\n    12b9:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 12c0 <_nocheck__trace_megasas_qf_complete+0x41>\n    12c0:\t66 85 c0             \ttest   %ax,%ax\n    12c3:\t74 64                \tje     1329 <_nocheck__trace_megasas_qf_complete+0xaa>\n    12c5:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n    12ca:\te8 5e f5 ff ff       \tcallq  82d <qemu_loglevel_mask>\n    12cf:\t84 c0                \ttest   %al,%al\n    12d1:\t74 56                \tje     1329 <_nocheck__trace_megasas_qf_complete+0xaa>\n    12d3:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    12d7:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    12dc:\t48 89 c7             \tmov    %rax,%rdi\n    12df:\te8 00 00 00 00       \tcallq  12e4 <_nocheck__trace_megasas_qf_complete+0x65>\n    12e4:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    12e8:\t49 89 c4             \tmov    %rax,%r12\n    12eb:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    12ef:\t48 89 c3             \tmov    %rax,%rbx\n    12f2:\te8 00 00 00 00       \tcallq  12f7 <_nocheck__trace_megasas_qf_complete+0x78>\n    12f7:\t89 c6                \tmov    %eax,%esi\n    12f9:\t8b 4d c4             \tmov    -0x3c(%rbp),%ecx\n    12fc:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    1300:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    1303:\t50                   \tpush   %rax\n    1304:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    1307:\t50                   \tpush   %rax\n    1308:\t41 89 c9             \tmov    %ecx,%r9d\n    130b:\t49 89 d0             \tmov    %rdx,%r8\n    130e:\t4c 89 e1             \tmov    %r12,%rcx\n    1311:\t48 89 da             \tmov    %rbx,%rdx\n    1314:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 131b <_nocheck__trace_megasas_qf_complete+0x9c>\n    131b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1320:\te8 00 00 00 00       \tcallq  1325 <_nocheck__trace_megasas_qf_complete+0xa6>\n    1325:\t48 83 c4 10          \tadd    $0x10,%rsp\n    1329:\t90                   \tnop\n    132a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    132e:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    1335:\t00 00 \n    1337:\t74 05                \tje     133e <_nocheck__trace_megasas_qf_complete+0xbf>\n    1339:\te8 00 00 00 00       \tcallq  133e <_nocheck__trace_megasas_qf_complete+0xbf>\n    133e:\t48 8d 65 f0          \tlea    -0x10(%rbp),%rsp\n    1342:\t5b                   \tpop    %rbx\n    1343:\t41 5c                \tpop    %r12\n    1345:\t5d                   \tpop    %rbp\n    1346:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_megasas_qf_complete(\n    __int64 a1, unsigned int a2, unsigned int a3, unsigned int a4) {\n  __suseconds_t v4;\n  __time_t v5;\n  unsigned int v6;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v11;\n  v11 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_QF_COMPLETE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v4 = <span class=\"supfact\">tv</span>.tv_usec;\n    v5 = <span class=\"supfact\">tv</span>.tv_sec;\n    v6 = qemu_get_thread_id();\n    qemu_log(String, v6, v5, v4, a1, a2, a3, a4);\n  }\n  return __readfsqword(Number) ^ v11;\n}", "code_t": "void __cdecl nocheck__trace_megasas_qf_complete(uint64_t context,\n                                                unsigned int head,\n                                                unsigned int tail, int busy) {\n  __suseconds_t v4;\n  __time_t v5;\n  unsigned int v6;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v10;\n  v10 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_QF_COMPLETE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v4 = <span class=\"supfact\">_now</span>.tv_usec;\n    v5 = <span class=\"supfact\">_now</span>.tv_sec;\n    v6 = qemu_get_thread_id();\n    qemu_log(String, v6, v5, v4, context, head, tail, (unsigned int)busy);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "bloodstalker", "repo_name": "luactest", "path": "bloodstalker/luactest/fe17f1ae11dcb6319b1aa7019ce6f1596c22ee8290a07c17b5d8d95f7fbfebdd", "path_in_repo": "bloodstalker/luactest//lua/src/lua", "objdump": "0000000000414962 <repeatstat>:\n  414962:\t55                   \tpush   %rbp\n  414963:\t48 89 e5             \tmov    %rsp,%rbp\n  414966:\t48 83 ec 60          \tsub    $0x60,%rsp\n  41496a:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n  41496e:\t89 75 a4             \tmov    %esi,-0x5c(%rbp)\n  414971:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  414975:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n  414979:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  41497d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  414981:\t48 89 c7             \tmov    %rax,%rdi\n  414984:\te8 13 d5 00 00       \tcallq  421e9c <luaK_getlabel>\n  414989:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  41498c:\t48 8d 4d d0          \tlea    -0x30(%rbp),%rcx\n  414990:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  414994:\tba 01 00 00 00       \tmov    $0x1,%edx\n  414999:\t48 89 ce             \tmov    %rcx,%rsi\n  41499c:\t48 89 c7             \tmov    %rax,%rdi\n  41499f:\te8 6e df ff ff       \tcallq  412912 <enterblock>\n  4149a4:\t48 8d 4d b0          \tlea    -0x50(%rbp),%rcx\n  4149a8:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4149ac:\tba 00 00 00 00       \tmov    $0x0,%edx\n  4149b1:\t48 89 ce             \tmov    %rcx,%rsi\n  4149b4:\t48 89 c7             \tmov    %rax,%rdi\n  4149b7:\te8 56 df ff ff       \tcallq  412912 <enterblock>\n  4149bc:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  4149c0:\t48 89 c7             \tmov    %rax,%rdi\n  4149c3:\te8 a2 16 01 00       \tcallq  42606a <luaX_next>\n  4149c8:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  4149cc:\t48 89 c7             \tmov    %rax,%rdi\n  4149cf:\te8 4f e7 ff ff       \tcallq  413123 <statlist>\n  4149d4:\t8b 55 a4             \tmov    -0x5c(%rbp),%edx\n  4149d7:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  4149db:\t89 d1                \tmov    %edx,%ecx\n  4149dd:\tba 11 01 00 00       \tmov    $0x111,%edx\n  4149e2:\tbe 15 01 00 00       \tmov    $0x115,%esi\n  4149e7:\t48 89 c7             \tmov    %rax,%rdi\n  4149ea:\te8 6d cf ff ff       \tcallq  41195c <check_match>\n  4149ef:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  4149f3:\t48 89 c7             \tmov    %rax,%rdi\n  4149f6:\te8 a5 fb ff ff       \tcallq  4145a0 <cond>\n  4149fb:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n  4149fe:\t0f b6 45 c1          \tmovzbl -0x3f(%rbp),%eax\n  414a02:\t84 c0                \ttest   %al,%al\n  414a04:\t74 18                \tje     414a1e <repeatstat+0xbc>\n  414a06:\t0f b6 45 c0          \tmovzbl -0x40(%rbp),%eax\n  414a0a:\t0f b6 d0             \tmovzbl %al,%edx\n  414a0d:\t8b 4d f0             \tmov    -0x10(%rbp),%ecx\n  414a10:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  414a14:\t89 ce                \tmov    %ecx,%esi\n  414a16:\t48 89 c7             \tmov    %rax,%rdi\n  414a19:\te8 2e d7 00 00       \tcallq  42214c <luaK_patchclose>\n  414a1e:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  414a22:\t48 89 c7             \tmov    %rax,%rdi\n  414a25:\te8 76 e0 ff ff       \tcallq  412aa0 <leaveblock>\n  414a2a:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n  414a2d:\t8b 4d f0             \tmov    -0x10(%rbp),%ecx\n  414a30:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  414a34:\t89 ce                \tmov    %ecx,%esi\n  414a36:\t48 89 c7             \tmov    %rax,%rdi\n  414a39:\te8 bd d6 00 00       \tcallq  4220fb <luaK_patchlist>\n  414a3e:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  414a42:\t48 89 c7             \tmov    %rax,%rdi\n  414a45:\te8 56 e0 ff ff       \tcallq  412aa0 <leaveblock>\n  414a4a:\t90                   \tnop\n  414a4b:\tc9                   \tleaveq \n  414a4c:\tc3                   \tretq   ", "code_s": "__int64 __fastcall repeatstat(__int64 a1, unsigned int a2) {\n  __int64 v2;\n  __int64 v3;\n  __int64 v4;\n  __int64 v5;\n  char <span class=\"supfact\">v7</span>[Number];\n  char <span class=\"supfact\">v8</span>[Number];\n  unsigned int v9;\n  unsigned int v10;\n  __int64 v11;\n  v11 = *(_QWORD *)(a1 + Number);\n  v10 = luaK_getlabel(v11);\n  enterblock(v11, (__int64)<span class=\"supfact\">v8</span>, Number);\n  enterblock(v11, (__int64)<span class=\"supfact\">v7</span>, Number);\n  luaX_next(a1);\n  statlist(a1);\n  check_match(a1, Number, Number, a2);\n  v9 = cond(a1, Number L, v2, v3, v4, v5);\n  if (<span class=\"supfact\">v7</span>[Number])\n    luaK_patchclose(v11, v9, (unsigned __int8)<span class=\"supfact\">v7</span>[Number]);\n  leaveblock(v11);\n  luaK_patchlist(v11, v9, v10);\n  return leaveblock(v11);\n}", "code_t": "void __cdecl repeatstat(LexState_0 *ls, int line) {\n  BlockCnt_0 <span class=\"supfact\">bl2</span>;\n  BlockCnt_0 <span class=\"supfact\">bl1</span>;\n  int condexit;\n  int repeat_init;\n  FuncState_0 *fs_0;\n  fs_0 = ls->fs;\n  repeat_init = luaK_getlabel(fs_0);\n  enterblock(fs_0, &<span class=\"supfact\">bl1</span>, Number);\n  enterblock(fs_0, &<span class=\"supfact\">bl2</span>, Number);\n  luaX_next(ls);\n  statlist(ls);\n  check_match(ls, Number, Number, line);\n  condexit = cond(ls);\n  if (<span class=\"supfact\">bl2</span>.upval)\n    luaK_patchclose(fs_0, condexit, <span class=\"supfact\">bl2</span>.nactvar);\n  leaveblock(fs_0);\n  luaK_patchlist(fs_0, condexit, repeat_init);\n  leaveblock(fs_0);\n}", "var": [{"name": "v8", "type": "struct BlockCnt_0 { BlockCnt * previous; int firstlabel; int firstgoto; lu_byte nactvar; lu_byte upval; lu_byte isloop; PADDING (5); }", "ref_name": "bl1", "ref_type": "struct BlockCnt_0 { BlockCnt * previous; int firstlabel; int firstgoto; lu_byte nactvar; lu_byte upval; lu_byte isloop; PADDING (5); }"}, {"name": "v7", "type": "struct BlockCnt_0 { BlockCnt * previous; int firstlabel; int firstgoto; lu_byte nactvar; lu_byte upval; lu_byte isloop; PADDING (5); }", "ref_name": "bl2", "ref_type": "struct BlockCnt_0 { BlockCnt * previous; int firstlabel; int firstgoto; lu_byte nactvar; lu_byte upval; lu_byte isloop; PADDING (5); }"}], "body_in_train": false}, {"repo_owner": "zhenghuijie", "repo_name": "learngit", "path": "zhenghuijie/learngit/46e734c54f2f3ac0ceba830b24b025e5d7389d9b84d38421d8228390166ecdf3", "path_in_repo": "zhenghuijie/learngit/third_party/open_xl2tpd/xl2tpd.o", "objdump": "00000000000013ac <l2tp_call>:\n    13ac:\t55                   \tpush   %rbp\n    13ad:\t48 89 e5             \tmov    %rsp,%rbp\n    13b0:\t48 83 ec 40          \tsub    $0x40,%rsp\n    13b4:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    13b8:\t89 75 d4             \tmov    %esi,-0x2c(%rbp)\n    13bb:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n    13bf:\t48 89 4d c0          \tmov    %rcx,-0x40(%rbp)\n    13c3:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n    13ca:\t00 \n    13cb:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    13ce:\t0f b7 c0             \tmovzwl %ax,%eax\n    13d1:\t89 c7                \tmov    %eax,%edi\n    13d3:\te8 00 00 00 00       \tcallq  13d8 <l2tp_call+0x2c>\n    13d8:\t0f b7 c0             \tmovzwl %ax,%eax\n    13db:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n    13de:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    13e2:\t48 89 c7             \tmov    %rax,%rdi\n    13e5:\te8 00 00 00 00       \tcallq  13ea <l2tp_call+0x3e>\n    13ea:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    13ee:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    13f3:\t75 1d                \tjne    1412 <l2tp_call+0x66>\n    13f5:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    13f9:\t48 89 c2             \tmov    %rax,%rdx\n    13fc:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1401:\tbf 04 00 00 00       \tmov    $0x4,%edi\n    1406:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    140b:\te8 00 00 00 00       \tcallq  1410 <l2tp_call+0x64>\n    1410:\teb cc                \tjmp    13de <l2tp_call+0x32>\n    1412:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1416:\t8b 40 14             \tmov    0x14(%rax),%eax\n    1419:\t48 63 d0             \tmovslq %eax,%rdx\n    141c:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1420:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    1424:\t48 8b 00             \tmov    (%rax),%rax\n    1427:\t48 8d 4d ec          \tlea    -0x14(%rbp),%rcx\n    142b:\t48 89 ce             \tmov    %rcx,%rsi\n    142e:\t48 89 c7             \tmov    %rax,%rdi\n    1431:\te8 00 00 00 00       \tcallq  1436 <l2tp_call+0x8a>\n    1436:\t8b 55 d4             \tmov    -0x2c(%rbp),%edx\n    1439:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    143c:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    1442:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    1448:\t89 d1                \tmov    %edx,%ecx\n    144a:\t89 c2                \tmov    %eax,%edx\n    144c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1451:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1456:\te8 00 00 00 00       \tcallq  145b <l2tp_call+0xaf>\n    145b:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    145f:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    1464:\t75 2a                \tjne    1490 <l2tp_call+0xe4>\n    1466:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    146a:\t48 89 c1             \tmov    %rax,%rcx\n    146d:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1472:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1477:\tbf 04 00 00 00       \tmov    $0x4,%edi\n    147c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1481:\te8 00 00 00 00       \tcallq  1486 <l2tp_call+0xda>\n    1486:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    148b:\te9 e8 00 00 00       \tjmpq   1578 <l2tp_call+0x1cc>\n    1490:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1494:\t48 8b 80 d8 01 00 00 \tmov    0x1d8(%rax),%rax\n    149b:\tc7 40 40 00 00 00 00 \tmovl   $0x0,0x40(%rax)\n    14a2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    14a6:\t48 8b 80 d8 01 00 00 \tmov    0x1d8(%rax),%rax\n    14ad:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    14b1:\t48 89 90 78 04 00 00 \tmov    %rdx,0x478(%rax)\n    14b8:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    14bc:\t48 8b 80 d8 01 00 00 \tmov    0x1d8(%rax),%rax\n    14c3:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    14c7:\t48 89 90 70 04 00 00 \tmov    %rdx,0x470(%rax)\n    14ce:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    14d2:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    14d6:\t48 89 90 b8 02 00 00 \tmov    %rdx,0x2b8(%rax)\n    14dd:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    14e1:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    14e5:\t48 89 90 b0 02 00 00 \tmov    %rdx,0x2b0(%rax)\n    14ec:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n    14f1:\t74 16                \tje     1509 <l2tp_call+0x15d>\n    14f3:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    14f7:\t48 8b 90 d8 01 00 00 \tmov    0x1d8(%rax),%rdx\n    14fe:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1502:\t48 89 90 60 02 00 00 \tmov    %rdx,0x260(%rax)\n    1509:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n    150e:\t74 16                \tje     1526 <l2tp_call+0x17a>\n    1510:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1514:\t48 8b 90 d8 01 00 00 \tmov    0x1d8(%rax),%rdx\n    151b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    151f:\t48 89 90 18 02 00 00 \tmov    %rdx,0x218(%rax)\n    1526:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    1529:\t0f b7 c0             \tmovzwl %ax,%eax\n    152c:\t89 c7                \tmov    %eax,%edi\n    152e:\te8 00 00 00 00       \tcallq  1533 <l2tp_call+0x187>\n    1533:\t0f b7 d0             \tmovzwl %ax,%edx\n    1536:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    153a:\t89 d1                \tmov    %edx,%ecx\n    153c:\t48 89 c2             \tmov    %rax,%rdx\n    153f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1544:\tbf 05 00 00 00       \tmov    $0x5,%edi\n    1549:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    154e:\te8 00 00 00 00       \tcallq  1553 <l2tp_call+0x1a7>\n    1553:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1557:\t48 8b 80 d8 01 00 00 \tmov    0x1d8(%rax),%rax\n    155e:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    1562:\t48 89 d6             \tmov    %rdx,%rsi\n    1565:\t48 89 c7             \tmov    %rax,%rdi\n    1568:\te8 00 00 00 00       \tcallq  156d <l2tp_call+0x1c1>\n    156d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1571:\t48 8b 80 d8 01 00 00 \tmov    0x1d8(%rax),%rax\n    1578:\tc9                   \tleaveq \n    1579:\tc3                   \tretq   ", "code_s": "__int64 __fastcall l2tp_call(const char *a1, uint16_t a2, __int64 a3,\n                             __int64 a4) {\n  __int64 result;\n  uint16_t v5;\n  unsigned int v8;\n  unsigned int <span class=\"supfact\">dest</span>;\n  struct hostent *v10;\n  _QWORD *v11;\n  v11 = Number L;\n  v8 = htons(a2);\n  while (Number) {\n    v10 = gethostbyname(a1);\n    if (v10)\n      break;\n    l2tp_log(Number L, String, a1);\n  }\n  bcopy(*(const void **)v10->h_addr_list, &<span class=\"supfact\">dest</span>, v10->h_length);\n  v11 = (_QWORD *)get_call(Number L, Number L, <span class=\"supfact\">dest</span>, v8,\n                           Number L, Number L);\n  if (v11) {\n    *(_DWORD *)(v11[Number] + Number L) = Number;\n    *(_QWORD *)(v11[Number] + Number L) = a3;\n    *(_QWORD *)(v11[Number] + Number L) = a4;\n    v11[Number] = a3;\n    v11[Number] = a4;\n    if (a3)\n      *(_QWORD *)(a3 + Number) = v11[Number];\n    if (a4)\n      *(_QWORD *)(a4 + Number) = v11[Number];\n    v5 = ntohs(v8);\n    l2tp_log(Number L, String, a1, v5);\n    control_finish(v11[Number], v11);\n    result = v11[Number];\n  } else {\n    l2tp_log(Number L, String, String, a1);\n    result = Number L;\n  }\n  return result;\n}", "code_t": "tunnel *__cdecl l2tp_call(char *host, int port, lac *lac, lns *lns) {\n  tunnel *result;\n  uint16_t v5;\n  unsigned int porta;\n  in_addr <span class=\"supfact\">addr</span>;\n  hostent *hp;\n  call *tmp;\n  tmp = Number L;\n  porta = htons(port);\n  while (Number) {\n    hp = gethostbyname(host);\n    if (hp)\n      break;\n    l2tp_log(Number L, String, host);\n  }\n  bcopy(*(const void **)hp->h_addr_list, &<span class=\"supfact\">addr</span>, hp->h_length);\n  tmp = (call *)get_call(Number L, Number L, <span class=\"supfact\">addr</span>.s_addr, porta,\n                         Number L, Number L);\n  if (tmp) {\n    tmp->container->tid = Number;\n    tmp->container->lac = lac;\n    tmp->container->lns = lns;\n    tmp->lac = lac;\n    tmp->lns = lns;\n    if (lac)\n      lac->t = tmp->container;\n    if (lns)\n      lns->t = tmp->container;\n    v5 = ntohs(porta);\n    l2tp_log(Number L, String, host, v5);\n    control_finish(tmp->container, tmp);\n    result = tmp->container;\n  } else {\n    l2tp_log(Number L, String, String, host);\n    result = Number L;\n  }\n  return result;\n}", "var": [{"name": "dest", "type": "int", "ref_name": "addr", "ref_type": "struct in_addr { in_addr_t s_addr; }"}], "body_in_train": false}, {"repo_owner": "Rjlmota", "repo_name": "contiki-iotlab", "path": "Rjlmota/contiki-iotlab/2b40fa081b421823632f69ad892dd03cd8e10c72e37235d34744e12cb711c362", "path_in_repo": "Rjlmota/contiki-iotlab/tools/release-tools/compile-platforms/minimal-net/obj_minimal-net/shell-collect-view.o", "objdump": "0000000000000000 <process_thread_collect_view_data_process>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 83 ec 60          \tsub    $0x60,%rsp\n   8:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n   c:\t89 f0                \tmov    %esi,%eax\n   e:\t48 89 55 a8          \tmov    %rdx,-0x58(%rbp)\n  12:\t88 45 b4             \tmov    %al,-0x4c(%rbp)\n  15:\tc6 45 fd 01          \tmovb   $0x1,-0x3(%rbp)\n  19:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  1d:\t0f b7 00             \tmovzwl (%rax),%eax\n  20:\t0f b7 c0             \tmovzwl %ax,%eax\n  23:\t85 c0                \ttest   %eax,%eax\n  25:\t0f 85 af 00 00 00    \tjne    da <process_thread_collect_view_data_process+0xda>\n  2b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  30:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  35:\te8 00 00 00 00       \tcallq  3a <process_thread_collect_view_data_process+0x3a>\n  3a:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  3e:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n  43:\t74 12                \tje     57 <process_thread_collect_view_data_process+0x57>\n  45:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  49:\t48 89 c7             \tmov    %rax,%rdi\n  4c:\te8 00 00 00 00       \tcallq  51 <process_thread_collect_view_data_process+0x51>\n  51:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  55:\teb 06                \tjmp    5d <process_thread_collect_view_data_process+0x5d>\n  57:\t66 c7 45 fe 00 00    \tmovw   $0x0,-0x2(%rbp)\n  5d:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  62:\te8 00 00 00 00       \tcallq  67 <process_thread_collect_view_data_process+0x67>\n  67:\t66 89 45 ee          \tmov    %ax,-0x12(%rbp)\n  6b:\te8 00 00 00 00       \tcallq  70 <process_thread_collect_view_data_process+0x70>\n  70:\t48 c1 e8 03          \tshr    $0x3,%rax\n  74:\t48 ba cf f7 53 e3 a5 \tmovabs $0x20c49ba5e353f7cf,%rdx\n  7b:\t9b c4 20 \n  7e:\t48 f7 e2             \tmul    %rdx\n  81:\t48 89 d0             \tmov    %rdx,%rax\n  84:\t48 c1 e8 04          \tshr    $0x4,%rax\n  88:\t66 89 45 ec          \tmov    %ax,-0x14(%rbp)\n  8c:\t0f b7 7d ec          \tmovzwl -0x14(%rbp),%edi\n  90:\t0f b7 75 ee          \tmovzwl -0x12(%rbp),%esi\n  94:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 9b <process_thread_collect_view_data_process+0x9b>\n  9b:\t0f b7 c8             \tmovzwl %ax,%ecx\n  9e:\t0f b7 55 fe          \tmovzwl -0x2(%rbp),%edx\n  a2:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  a6:\t41 89 f9             \tmov    %edi,%r9d\n  a9:\t41 89 f0             \tmov    %esi,%r8d\n  ac:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  b1:\t48 89 c7             \tmov    %rax,%rdi\n  b4:\te8 00 00 00 00       \tcallq  b9 <process_thread_collect_view_data_process+0xb9>\n  b9:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  bd:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n  c3:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  c8:\tba 2c 00 00 00       \tmov    $0x2c,%edx\n  cd:\t48 89 c6             \tmov    %rax,%rsi\n  d0:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  d5:\te8 00 00 00 00       \tcallq  da <process_thread_collect_view_data_process+0xda>\n  da:\tc6 45 fd 00          \tmovb   $0x0,-0x3(%rbp)\n  de:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  e2:\t66 c7 00 00 00       \tmovw   $0x0,(%rax)\n  e7:\tb8 03 00 00 00       \tmov    $0x3,%eax\n  ec:\tc9                   \tleaveq \n  ed:\tc3                   \tretq   ", "code_s": "__int64 __fastcall process_thread_collect_view_data_process(_WORD *a1) {\n  char <span class=\"supfact\">v2</span>[Number];\n  unsigned __int16 v3;\n  unsigned __int16 v4;\n  __int64 v5;\n  char v6;\n  unsigned __int16 v7;\n  v6 = Number;\n  if (!*a1) {\n    v5 = collect_neighbor_list_find(\n        (unsigned int)((_DWORD)shell_collect_conn + Number),\n        (unsigned int)((_DWORD)shell_collect_conn + Number));\n    if (v5)\n      v7 = collect_neighbor_link_estimate(v5);\n    else\n      v7 = Number;\n    v4 = collect_neighbor_list_num(\n        (unsigned int)((_DWORD)shell_collect_conn + Number));\n    v3 = broadcast_announcement_beacon_interval() / Number;\n    collect_view_construct_message(\n        <span class=\"supfact\">v2</span>, (unsigned int)((_DWORD)shell_collect_conn + Number),\n        v7, shell_collect_conn[Number], v4, v3);\n    shell_output(&collect_view_data_command, <span class=\"supfact\">v2</span>, Number L,\n                 &unk_1A9, Number L);\n  }\n  *a1 = Number;\n  return Number L;\n}", "code_t": "char __cdecl process_thread_collect_view_data_process(pt *process_pt,\n                                                      process_event_t ev,\n                                                      process_data_t data) {\n  collect_view_data_msg <span class=\"supfact\">msg</span>;\n  uint16_t beacon_interval;\n  uint16_t num_neighbors;\n  collect_neighbor *n;\n  char PT_YIELD_FLAG;\n  uint16_t parent_etx;\n  PT_YIELD_FLAG = Number;\n  if (!process_pt->lc) {\n    n = (collect_neighbor *)collect_neighbor_list_find(\n        (unsigned int)((_DWORD)shell_collect_conn + Number),\n        (unsigned int)((_DWORD)shell_collect_conn + Number));\n    if (n)\n      parent_etx = collect_neighbor_link_estimate(n);\n    else\n      parent_etx = Number;\n    num_neighbors = collect_neighbor_list_num(\n        (unsigned int)((_DWORD)shell_collect_conn + Number));\n    beacon_interval = broadcast_announcement_beacon_interval() / Number;\n    collect_view_construct_message(\n        &<span class=\"supfact\">msg</span>,\n        (unsigned int)((_DWORD)shell_collect_conn + Number), parent_etx,\n        shell_collect_conn[Number], num_neighbors, beacon_interval);\n    shell_output(&collect_view_data_command, &<span class=\"supfact\">msg</span>, Number L,\n                 &unk_1A9, Number L);\n  }\n  process_pt->lc = Number;\n  return Number;\n}", "var": [{"name": "v2", "type": "struct collect_view_data_msg { uint16_t len; uint16_t clock; uint16_t timesynch_time; uint16_t cpu; uint16_t lpm; uint16_t transmit; uint16_t listen; uint16_t parent; uint16_t parent_etx; uint16_t current_rtmetric; uint16_t num_neighbors; uint16_t beacon_interval; uint16_t[10] sensors; }", "ref_name": "msg", "ref_type": "struct collect_view_data_msg { uint16_t len; uint16_t clock; uint16_t timesynch_time; uint16_t cpu; uint16_t lpm; uint16_t transmit; uint16_t listen; uint16_t parent; uint16_t parent_etx; uint16_t current_rtmetric; uint16_t num_neighbors; uint16_t beacon_interval; uint16_t[10] sensors; }"}], "body_in_train": false}, {"repo_owner": "btrask", "repo_name": "stronglink", "path": "btrask/stronglink/50c5348d42251c5813a77b72fc5cfdb7f957a06409229ec084e6fd08494ea507", "path_in_repo": "btrask/stronglink/deps/libasync/deps/libressl-portable/crypto/err/err.o", "objdump": "000000000000172b <ERR_lib_error_string>:\n    172b:\t55                   \tpush   %rbp\n    172c:\t48 89 e5             \tmov    %rsp,%rbp\n    172f:\t48 83 ec 40          \tsub    $0x40,%rsp\n    1733:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    1737:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    173e:\t00 00 \n    1740:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1744:\t31 c0                \txor    %eax,%eax\n    1746:\te8 b5 e8 ff ff       \tcallq  0 <err_fns_check>\n    174b:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    174f:\t48 c1 e8 18          \tshr    $0x18,%rax\n    1753:\t48 98                \tcltq   \n    1755:\t25 ff 00 00 00       \tand    $0xff,%eax\n    175a:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    175e:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    1762:\t48 c1 e0 18          \tshl    $0x18,%rax\n    1766:\t89 c0                \tmov    %eax,%eax\n    1768:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    176c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1773 <ERR_lib_error_string+0x48>\n    1773:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n    1777:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n    177b:\t48 89 c7             \tmov    %rax,%rdi\n    177e:\tff d2                \tcallq  *%rdx\n    1780:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    1784:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n    1789:\t74 0a                \tje     1795 <ERR_lib_error_string+0x6a>\n    178b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    178f:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1793:\teb 05                \tjmp    179a <ERR_lib_error_string+0x6f>\n    1795:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    179a:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    179e:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n    17a5:\t00 00 \n    17a7:\t74 05                \tje     17ae <ERR_lib_error_string+0x83>\n    17a9:\te8 00 00 00 00       \tcallq  17ae <ERR_lib_error_string+0x83>\n    17ae:\tc9                   \tleaveq \n    17af:\tc3                   \tretq   ", "code_s": "__int64 __fastcall ERR_lib_error_string(int a1) {\n  __int64 result;\n  __int64 v2;\n  __int64 <span class=\"supfact\">v3</span>[Number];\n  <span class=\"supfact\">v3</span>[Number] = __readfsqword(Number);\n  err_fns_check();\n  <span class=\"supfact\">v3</span>[Number] = HIBYTE(a1) << Number;\n  v2 = (*(__int64(__fastcall **)(__int64 *))(err_fns + Number))(\n      <span class=\"supfact\">v3</span>);\n  if (v2)\n    result = *(_QWORD *)(v2 + Number);\n  else\n    result = Number L;\n  return result;\n}", "code_t": "const char *__cdecl ERR_lib_error_string(unsigned __int64 e) {\n  const char *result;\n  ERR_STRING_DATA *p;\n  ERR_STRING_DATA <span class=\"supfact\">d</span>;\n  unsigned __int64 v4;\n  v4 = __readfsqword(Number);\n  err_fns_check();\n  <span class=\"supfact\">d</span>.error = BYTE3(e) << Number;\n  p = err_fns->cb_err_get_item(&<span class=\"supfact\">d</span>);\n  if (p)\n    result = p->string;\n  else\n    result = Number L;\n  return result;\n}", "var": [{"name": "v3", "type": "unsigned __int64[4]", "ref_name": "d", "ref_type": "struct ERR_STRING_DATA { unsigned __int64 error; const char * string; }"}], "body_in_train": false}, {"repo_owner": "Panopto", "repo_name": "panopto-ffmpeg", "path": "Panopto/panopto-ffmpeg/dcf8b1973d37dbfd4671cc0b53102057594ff659cf804fab99182a0b541eed84", "path_in_repo": "Panopto/panopto-ffmpeg//libavformat/hlsenc.o", "objdump": "00000000000045b5 <get_default_pattern_localtime_fmt>:\n    45b5:\t48 81 ec 88 00 00 00 \tsub    $0x88,%rsp\n    45bc:\t48 89 7c 24 08       \tmov    %rdi,0x8(%rsp)\n    45c1:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    45c6:\te8 00 00 00 00       \tcallq  45cb <get_default_pattern_localtime_fmt+0x16>\n    45cb:\t48 89 44 24 48       \tmov    %rax,0x48(%rsp)\n    45d0:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    45d5:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    45d9:\t48 89 44 24 78       \tmov    %rax,0x78(%rsp)\n    45de:\t48 8d 54 24 10       \tlea    0x10(%rsp),%rdx\n    45e3:\t48 8d 44 24 48       \tlea    0x48(%rsp),%rax\n    45e8:\t48 89 d6             \tmov    %rdx,%rsi\n    45eb:\t48 89 c7             \tmov    %rax,%rdi\n    45ee:\te8 00 00 00 00       \tcallq  45f3 <get_default_pattern_localtime_fmt+0x3e>\n    45f3:\t48 89 44 24 70       \tmov    %rax,0x70(%rsp)\n    45f8:\t48 8b 44 24 78       \tmov    0x78(%rsp),%rax\n    45fd:\t8b 40 70             \tmov    0x70(%rax),%eax\n    4600:\t83 f8 01             \tcmp    $0x1,%eax\n    4603:\t75 48                \tjne    464d <get_default_pattern_localtime_fmt+0x98>\n    4605:\t48 8b 54 24 70       \tmov    0x70(%rsp),%rdx\n    460a:\t48 8d 44 24 50       \tlea    0x50(%rsp),%rax\n    460f:\t48 89 d1             \tmov    %rdx,%rcx\n    4612:\tba 00 00 00 00       \tmov    $0x0,%edx\n    4617:\tbe 15 00 00 00       \tmov    $0x15,%esi\n    461c:\t48 89 c7             \tmov    %rax,%rdi\n    461f:\te8 00 00 00 00       \tcallq  4624 <get_default_pattern_localtime_fmt+0x6f>\n    4624:\t48 85 c0             \ttest   %rax,%rax\n    4627:\t74 16                \tje     463f <get_default_pattern_localtime_fmt+0x8a>\n    4629:\t48 8d 44 24 50       \tlea    0x50(%rsp),%rax\n    462e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    4633:\t48 89 c7             \tmov    %rax,%rdi\n    4636:\te8 00 00 00 00       \tcallq  463b <get_default_pattern_localtime_fmt+0x86>\n    463b:\t85 c0                \ttest   %eax,%eax\n    463d:\t75 07                \tjne    4646 <get_default_pattern_localtime_fmt+0x91>\n    463f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4644:\teb 4d                \tjmp    4693 <get_default_pattern_localtime_fmt+0xde>\n    4646:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    464b:\teb 46                \tjmp    4693 <get_default_pattern_localtime_fmt+0xde>\n    464d:\t48 8b 54 24 70       \tmov    0x70(%rsp),%rdx\n    4652:\t48 8d 44 24 50       \tlea    0x50(%rsp),%rax\n    4657:\t48 89 d1             \tmov    %rdx,%rcx\n    465a:\tba 00 00 00 00       \tmov    $0x0,%edx\n    465f:\tbe 15 00 00 00       \tmov    $0x15,%esi\n    4664:\t48 89 c7             \tmov    %rax,%rdi\n    4667:\te8 00 00 00 00       \tcallq  466c <get_default_pattern_localtime_fmt+0xb7>\n    466c:\t48 85 c0             \ttest   %rax,%rax\n    466f:\t74 16                \tje     4687 <get_default_pattern_localtime_fmt+0xd2>\n    4671:\t48 8d 44 24 50       \tlea    0x50(%rsp),%rax\n    4676:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    467b:\t48 89 c7             \tmov    %rax,%rdi\n    467e:\te8 00 00 00 00       \tcallq  4683 <get_default_pattern_localtime_fmt+0xce>\n    4683:\t85 c0                \ttest   %eax,%eax\n    4685:\t75 07                \tjne    468e <get_default_pattern_localtime_fmt+0xd9>\n    4687:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    468c:\teb 05                \tjmp    4693 <get_default_pattern_localtime_fmt+0xde>\n    468e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4693:\t48 81 c4 88 00 00 00 \tadd    $0x88,%rsp\n    469a:\tc3                   \tretq   ", "code_s": "const char *__fastcall get_default_pattern_localtime_fmt(__int64 a1) {\n  const char *result;\n  struct tm <span class=\"supfact\">tp</span>;\n  time_t timer;\n  char s[Number];\n  struct tm *v5;\n  __int64 v6;\n  timer = time(Number L);\n  v6 = *(_QWORD *)(a1 + Number);\n  v5 = localtime_r(&timer, &<span class=\"supfact\">tp</span>);\n  if (*(_DWORD *)(v6 + Number) == Number) {\n    if (strftime(s, Number, String, v5) && strcmp(s, String))\n      result = String;\n    else\n      result = String;\n  } else if (strftime(s, Number, String, v5) && strcmp(s, String)) {\n    result = String;\n  } else {\n    result = String;\n  }\n  return result;\n}", "code_t": "const char *__cdecl get_default_pattern_localtime_fmt(AVFormatContext_0 *s) {\n  const char *result;\n  tm <span class=\"supfact\">tmbuf</span>;\n  time_t t;\n  char b[Number];\n  tm *p;\n  HLSContext_0 *hls;\n  t = time(Number L);\n  hls = (HLSContext_0 *)s->priv_data;\n  p = localtime_r(&t, &<span class=\"supfact\">tmbuf</span>);\n  if (hls->segment_type == Number) {\n    if (strftime(b, Number, String, p) && strcmp(b, String))\n      result = String;\n    else\n      result = String;\n  } else if (strftime(b, Number, String, p) && strcmp(b, String)) {\n    result = String;\n  } else {\n    result = String;\n  }\n  return result;\n}", "var": [{"name": "tp", "type": "struct tm { int tm_sec; int tm_min; int tm_hour; int tm_mday; int tm_mon; int tm_year; int tm_wday; int tm_yday; int tm_isdst; PADDING (4); __int64 tm_gmtoff; const char * tm_zone; }", "ref_name": "tmbuf", "ref_type": "struct tm { int tm_sec; int tm_min; int tm_hour; int tm_mday; int tm_mon; int tm_year; int tm_wday; int tm_yday; int tm_isdst; PADDING (4); __int64 __tm_gmtoff; const char * __tm_zone; }"}], "body_in_train": false}, {"repo_owner": "claymodel", "repo_name": "voip-foip", "path": "claymodel/voip-foip/82239dca0ebd919754cb8b2952264b52d0190abd87b3ef8f8b6734c500035edd", "path_in_repo": "claymodel/voip-foip/kamailio-3.1.4/modules_s/nathelper/nathelper.o", "objdump": "00000000000028d2 <sdp_1918>:\n    28d2:\t55                   \tpush   %rbp\n    28d3:\t48 89 e5             \tmov    %rsp,%rbp\n    28d6:\t53                   \tpush   %rbx\n    28d7:\t48 83 ec 48          \tsub    $0x48,%rsp\n    28db:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n    28df:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n    28e3:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    28e7:\t48 89 d6             \tmov    %rdx,%rsi\n    28ea:\t48 89 c7             \tmov    %rax,%rdi\n    28ed:\te8 00 00 00 00       \tcallq  28f2 <sdp_1918+0x20>\n    28f2:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    28f5:\t0f 85 12 01 00 00    \tjne    2a0d <sdp_1918+0x13b>\n    28fb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2902 <sdp_1918+0x30>\n    2902:\t48 8b 00             \tmov    (%rax),%rax\n    2905:\t8b 00                \tmov    (%rax),%eax\n    2907:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    290a:\t0f 8c f3 00 00 00    \tjl     2a03 <sdp_1918+0x131>\n    2910:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2917 <sdp_1918+0x45>\n    2917:\t8b 00                \tmov    (%rax),%eax\n    2919:\t85 c0                \ttest   %eax,%eax\n    291b:\t0f 85 e2 00 00 00    \tjne    2a03 <sdp_1918+0x131>\n    2921:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2928 <sdp_1918+0x56>\n    2928:\t8b 00                \tmov    (%rax),%eax\n    292a:\t8d 50 01             \tlea    0x1(%rax),%edx\n    292d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2934 <sdp_1918+0x62>\n    2934:\t89 10                \tmov    %edx,(%rax)\n    2936:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 293d <sdp_1918+0x6b>\n    293d:\t8b 00                \tmov    (%rax),%eax\n    293f:\t85 c0                \ttest   %eax,%eax\n    2941:\t0f 95 c0             \tsetne  %al\n    2944:\t0f b6 c0             \tmovzbl %al,%eax\n    2947:\t48 85 c0             \ttest   %rax,%rax\n    294a:\t74 5a                \tje     29a6 <sdp_1918+0xd4>\n    294c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2953 <sdp_1918+0x81>\n    2953:\t48 8b 58 40          \tmov    0x40(%rax),%rbx\n    2957:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    295c:\te8 00 00 00 00       \tcallq  2961 <sdp_1918+0x8f>\n    2961:\t89 c1                \tmov    %eax,%ecx\n    2963:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 296a <sdp_1918+0x98>\n    296a:\t8b 10                \tmov    (%rax),%edx\n    296c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2973 <sdp_1918+0xa1>\n    2973:\t48 8b 00             \tmov    (%rax),%rax\n    2976:\t48 83 ec 08          \tsub    $0x8,%rsp\n    297a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 2981 <sdp_1918+0xaf>\n    2981:\t56                   \tpush   %rsi\n    2982:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 2989 <sdp_1918+0xb7>\n    2989:\t49 89 d8             \tmov    %rbx,%r8\n    298c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 2993 <sdp_1918+0xc1>\n    2993:\t48 89 c7             \tmov    %rax,%rdi\n    2996:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    299b:\te8 00 00 00 00       \tcallq  29a0 <sdp_1918+0xce>\n    29a0:\t48 83 c4 10          \tadd    $0x10,%rsp\n    29a4:\teb 48                \tjmp    29ee <sdp_1918+0x11c>\n    29a6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 29ad <sdp_1918+0xdb>\n    29ad:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n    29b1:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 29b8 <sdp_1918+0xe6>\n    29b8:\t8b 4a 48             \tmov    0x48(%rdx),%ecx\n    29bb:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 29c2 <sdp_1918+0xf0>\n    29c2:\t48 8b 12             \tmov    (%rdx),%rdx\n    29c5:\t8b 52 04             \tmov    0x4(%rdx),%edx\n    29c8:\t89 cf                \tmov    %ecx,%edi\n    29ca:\t09 d7                \tor     %edx,%edi\n    29cc:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 29d3 <sdp_1918+0x101>\n    29d3:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 29da <sdp_1918+0x108>\n    29da:\t48 89 c2             \tmov    %rax,%rdx\n    29dd:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 29e4 <sdp_1918+0x112>\n    29e4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    29e9:\te8 00 00 00 00       \tcallq  29ee <sdp_1918+0x11c>\n    29ee:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 29f5 <sdp_1918+0x123>\n    29f5:\t8b 00                \tmov    (%rax),%eax\n    29f7:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    29fa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2a01 <sdp_1918+0x12f>\n    2a01:\t89 10                \tmov    %edx,(%rax)\n    2a03:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2a08:\te9 68 01 00 00       \tjmpq   2b75 <sdp_1918+0x2a3>\n    2a0d:\t48 8d 55 cc          \tlea    -0x34(%rbp),%rdx\n    2a11:\t48 8d 4d d0          \tlea    -0x30(%rbp),%rcx\n    2a15:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n    2a19:\t48 89 ce             \tmov    %rcx,%rsi\n    2a1c:\t48 89 c7             \tmov    %rax,%rdi\n    2a1f:\te8 10 14 00 00       \tcallq  3e34 <extract_mediaip>\n    2a24:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    2a27:\t0f 85 0f 01 00 00    \tjne    2b3c <sdp_1918+0x26a>\n    2a2d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2a34 <sdp_1918+0x162>\n    2a34:\t48 8b 00             \tmov    (%rax),%rax\n    2a37:\t8b 00                \tmov    (%rax),%eax\n    2a39:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    2a3c:\t0f 8c f3 00 00 00    \tjl     2b35 <sdp_1918+0x263>\n    2a42:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2a49 <sdp_1918+0x177>\n    2a49:\t8b 00                \tmov    (%rax),%eax\n    2a4b:\t85 c0                \ttest   %eax,%eax\n    2a4d:\t0f 85 e2 00 00 00    \tjne    2b35 <sdp_1918+0x263>\n    2a53:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2a5a <sdp_1918+0x188>\n    2a5a:\t8b 00                \tmov    (%rax),%eax\n    2a5c:\t8d 50 01             \tlea    0x1(%rax),%edx\n    2a5f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2a66 <sdp_1918+0x194>\n    2a66:\t89 10                \tmov    %edx,(%rax)\n    2a68:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2a6f <sdp_1918+0x19d>\n    2a6f:\t8b 00                \tmov    (%rax),%eax\n    2a71:\t85 c0                \ttest   %eax,%eax\n    2a73:\t0f 95 c0             \tsetne  %al\n    2a76:\t0f b6 c0             \tmovzbl %al,%eax\n    2a79:\t48 85 c0             \ttest   %rax,%rax\n    2a7c:\t74 5a                \tje     2ad8 <sdp_1918+0x206>\n    2a7e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2a85 <sdp_1918+0x1b3>\n    2a85:\t48 8b 58 40          \tmov    0x40(%rax),%rbx\n    2a89:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2a8e:\te8 00 00 00 00       \tcallq  2a93 <sdp_1918+0x1c1>\n    2a93:\t89 c1                \tmov    %eax,%ecx\n    2a95:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2a9c <sdp_1918+0x1ca>\n    2a9c:\t8b 10                \tmov    (%rax),%edx\n    2a9e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2aa5 <sdp_1918+0x1d3>\n    2aa5:\t48 8b 00             \tmov    (%rax),%rax\n    2aa8:\t48 83 ec 08          \tsub    $0x8,%rsp\n    2aac:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 2ab3 <sdp_1918+0x1e1>\n    2ab3:\t56                   \tpush   %rsi\n    2ab4:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 2abb <sdp_1918+0x1e9>\n    2abb:\t49 89 d8             \tmov    %rbx,%r8\n    2abe:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 2ac5 <sdp_1918+0x1f3>\n    2ac5:\t48 89 c7             \tmov    %rax,%rdi\n    2ac8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2acd:\te8 00 00 00 00       \tcallq  2ad2 <sdp_1918+0x200>\n    2ad2:\t48 83 c4 10          \tadd    $0x10,%rsp\n    2ad6:\teb 48                \tjmp    2b20 <sdp_1918+0x24e>\n    2ad8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2adf <sdp_1918+0x20d>\n    2adf:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n    2ae3:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 2aea <sdp_1918+0x218>\n    2aea:\t8b 4a 48             \tmov    0x48(%rdx),%ecx\n    2aed:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 2af4 <sdp_1918+0x222>\n    2af4:\t48 8b 12             \tmov    (%rdx),%rdx\n    2af7:\t8b 52 04             \tmov    0x4(%rdx),%edx\n    2afa:\t09 d1                \tor     %edx,%ecx\n    2afc:\t89 cf                \tmov    %ecx,%edi\n    2afe:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 2b05 <sdp_1918+0x233>\n    2b05:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 2b0c <sdp_1918+0x23a>\n    2b0c:\t48 89 c2             \tmov    %rax,%rdx\n    2b0f:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 2b16 <sdp_1918+0x244>\n    2b16:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2b1b:\te8 00 00 00 00       \tcallq  2b20 <sdp_1918+0x24e>\n    2b20:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2b27 <sdp_1918+0x255>\n    2b27:\t8b 00                \tmov    (%rax),%eax\n    2b29:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    2b2c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2b33 <sdp_1918+0x261>\n    2b33:\t89 10                \tmov    %edx,(%rax)\n    2b35:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2b3a:\teb 39                \tjmp    2b75 <sdp_1918+0x2a3>\n    2b3c:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n    2b3f:\t83 f8 02             \tcmp    $0x2,%eax\n    2b42:\t75 15                \tjne    2b59 <sdp_1918+0x287>\n    2b44:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    2b47:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    2b4b:\t89 d6                \tmov    %edx,%esi\n    2b4d:\t48 89 c7             \tmov    %rax,%rdi\n    2b50:\te8 fc ee ff ff       \tcallq  1a51 <isnulladdr>\n    2b55:\t85 c0                \ttest   %eax,%eax\n    2b57:\t74 07                \tje     2b60 <sdp_1918+0x28e>\n    2b59:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2b5e:\teb 15                \tjmp    2b75 <sdp_1918+0x2a3>\n    2b60:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    2b64:\t48 89 c7             \tmov    %rax,%rdi\n    2b67:\te8 93 fb ff ff       \tcallq  26ff <is1918addr>\n    2b6c:\t83 f8 01             \tcmp    $0x1,%eax\n    2b6f:\t0f 94 c0             \tsete   %al\n    2b72:\t0f b6 c0             \tmovzbl %al,%eax\n    2b75:\t48 8b 5d f8          \tmov    -0x8(%rbp),%rbx\n    2b79:\tc9                   \tleaveq \n    2b7a:\tc3                   \tretq   ", "code_s": "_BOOL8 __fastcall sdp_1918(__int64 a1) {\n  const char *v1;\n  unsigned int v2;\n  _BOOL8 result;\n  const char *v4;\n  unsigned int v5;\n  int v6;\n  char <span class=\"supfact\">v7</span>[Number];\n  char <span class=\"supfact\">v8</span>[Number];\n  if ((unsigned int)extract_body(a1, <span class=\"supfact\">v8</span>) == Number) {\n    if ((int)*core_cfg >= Number && !dprint_crit) {\n      ++dprint_crit;\n      if (log_stderr) {\n        v1 = (const char *)*((_QWORD *)&log_level_info + Number);\n        v2 = my_pid(a1);\n        fprintf(stderr, String, process_no, v2, v1, String, String);\n      } else {\n        syslog(core_cfg[Number] | *((_DWORD *)&log_level_info + Number), String,\n               *((const char **)&log_level_info + Number), String, String);\n      }\n      --dprint_crit;\n    }\n    result = Number L;\n  } else if ((unsigned int)extract_mediaip(<span class=\"supfact\">v8</span>,\n                                           <span class=\"supfact\">v7</span>, &v6) == Number) {\n    if ((int)*core_cfg >= Number && !dprint_crit) {\n      ++dprint_crit;\n      if (log_stderr) {\n        v4 = (const char *)*((_QWORD *)&log_level_info + Number);\n        v5 = my_pid(<span class=\"supfact\">v8</span>);\n        fprintf(stderr, String, process_no, v5, v4, String, String);\n      } else {\n        syslog(core_cfg[Number] | *((_DWORD *)&log_level_info + Number), String,\n               *((const char **)&log_level_info + Number), String, String);\n      }\n      --dprint_crit;\n    }\n    result = Number L;\n  } else if (v6 == Number && !isnulladdr((__int64)<span class=\"supfact\">v7</span>, Number)) {\n    result = (unsigned int)is1918addr((__int64)<span class=\"supfact\">v7</span>) == Number;\n  } else {\n    result = Number L;\n  }\n  return result;\n}", "code_t": "int __cdecl sdp_1918(sip_msg *msg) {\n  const char *v1;\n  unsigned int v2;\n  int result;\n  const char *v4;\n  unsigned int v5;\n  int pf_0;\n  str <span class=\"supfact\">ip_0</span>;\n  str <span class=\"supfact\">body</span>;\n  if ((unsigned int)extract_body(msg, &<span class=\"supfact\">body</span>) == Number) {\n    if ((int)*core_cfg >= Number && !dprint_crit) {\n      ++dprint_crit;\n      if (log_stderr) {\n        v1 = (const char *)*((_QWORD *)&log_level_info_0 + Number);\n        v2 = my_pid(msg);\n        fprintf(stderr, String, process_no, v2, v1, String, String);\n      } else {\n        syslog(core_cfg[Number] | *((_DWORD *)&log_level_info_0 + Number),\n               String, *((const char **)&log_level_info_0 + Number), String,\n               String);\n      }\n      --dprint_crit;\n    }\n    result = Number;\n  } else if (extract_mediaip(&<span class=\"supfact\">body</span>, &<span class=\"supfact\">ip_0</span>,\n                             &pf_0) == Number) {\n    if ((int)*core_cfg >= Number && !dprint_crit) {\n      ++dprint_crit;\n      if (log_stderr) {\n        v4 = (const char *)*((_QWORD *)&log_level_info_0 + Number);\n        v5 = my_pid(&<span class=\"supfact\">body</span>);\n        fprintf(stderr, String, process_no, v5, v4, String, String);\n      } else {\n        syslog(core_cfg[Number] | *((_DWORD *)&log_level_info_0 + Number),\n               String, *((const char **)&log_level_info_0 + Number), String,\n               String);\n      }\n      --dprint_crit;\n    }\n    result = Number;\n  } else if (pf_0 == Number && !isnulladdr(&<span class=\"supfact\">ip_0</span>, Number)) {\n    result = is1918addr(&<span class=\"supfact\">ip_0</span>) == Number;\n  } else {\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "v8", "type": "struct str { char * s; int len; PADDING (4); }", "ref_name": "body", "ref_type": "struct str { char * s; int len; PADDING (4); }"}, {"name": "v7", "type": "struct str { char * s; int len; PADDING (4); }", "ref_name": "ip_0", "ref_type": "struct str { char * s; int len; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "ZunDubCore", "repo_name": "picoc", "path": "ZunDubCore/picoc/d4a85db7eeddd07cc57d035aa86e40e316ffdb9595a89cc5c70968c6631dead4", "path_in_repo": "ZunDubCore/picoc//clibrary.o", "objdump": "00000000000000ef <LibraryAdd>:\n  ef:\t55                   \tpush   %rbp\n  f0:\t48 89 e5             \tmov    %rsp,%rbp\n  f3:\t48 81 ec a0 00 00 00 \tsub    $0xa0,%rsp\n  fa:\t48 89 bd 78 ff ff ff \tmov    %rdi,-0x88(%rbp)\n 101:\t48 89 b5 70 ff ff ff \tmov    %rsi,-0x90(%rbp)\n 108:\t48 89 95 68 ff ff ff \tmov    %rdx,-0x98(%rbp)\n 10f:\t48 89 8d 60 ff ff ff \tmov    %rcx,-0xa0(%rbp)\n 116:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n 11d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 122:\t48 89 c7             \tmov    %rax,%rdi\n 125:\te8 00 00 00 00       \tcallq  12a <LibraryAdd+0x3b>\n 12a:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n 12e:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n 135:\te9 16 01 00 00       \tjmpq   250 <LibraryAdd+0x161>\n 13a:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 13d:\t48 98                \tcltq   \n 13f:\t48 c1 e0 04          \tshl    $0x4,%rax\n 143:\t48 89 c2             \tmov    %rax,%rdx\n 146:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n 14d:\t48 01 d0             \tadd    %rdx,%rax\n 150:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n 154:\t48 89 c7             \tmov    %rax,%rdi\n 157:\te8 00 00 00 00       \tcallq  15c <LibraryAdd+0x6d>\n 15c:\t89 c1                \tmov    %eax,%ecx\n 15e:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 161:\t48 98                \tcltq   \n 163:\t48 c1 e0 04          \tshl    $0x4,%rax\n 167:\t48 89 c2             \tmov    %rax,%rdx\n 16a:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n 171:\t48 01 d0             \tadd    %rdx,%rax\n 174:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 178:\t48 8b 75 f0          \tmov    -0x10(%rbp),%rsi\n 17c:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n 183:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n 189:\t48 89 c7             \tmov    %rax,%rdi\n 18c:\te8 00 00 00 00       \tcallq  191 <LibraryAdd+0xa2>\n 191:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 195:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 198:\t48 98                \tcltq   \n 19a:\t48 c1 e0 04          \tshl    $0x4,%rax\n 19e:\t48 89 c2             \tmov    %rax,%rdx\n 1a1:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n 1a8:\t48 01 d0             \tadd    %rdx,%rax\n 1ab:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 1af:\t48 8b 7d f0          \tmov    -0x10(%rbp),%rdi\n 1b3:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n 1b7:\t48 8b b5 78 ff ff ff \tmov    -0x88(%rbp),%rsi\n 1be:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n 1c2:\t48 83 ec 08          \tsub    $0x8,%rsp\n 1c6:\t6a 00                \tpushq  $0x0\n 1c8:\t41 b9 01 00 00 00    \tmov    $0x1,%r9d\n 1ce:\t49 89 f8             \tmov    %rdi,%r8\n 1d1:\t48 89 c7             \tmov    %rax,%rdi\n 1d4:\te8 00 00 00 00       \tcallq  1d9 <LibraryAdd+0xea>\n 1d9:\t48 83 c4 10          \tadd    $0x10,%rsp\n 1dd:\t48 8d 55 88          \tlea    -0x78(%rbp),%rdx\n 1e1:\t48 8d 75 80          \tlea    -0x80(%rbp),%rsi\n 1e5:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n 1e9:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 1ee:\t48 89 c7             \tmov    %rax,%rdi\n 1f1:\te8 00 00 00 00       \tcallq  1f6 <LibraryAdd+0x107>\n 1f6:\t48 8b 55 88          \tmov    -0x78(%rbp),%rdx\n 1fa:\t48 8b 4d 80          \tmov    -0x80(%rbp),%rcx\n 1fe:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n 202:\t48 89 ce             \tmov    %rcx,%rsi\n 205:\t48 89 c7             \tmov    %rax,%rdi\n 208:\te8 00 00 00 00       \tcallq  20d <LibraryAdd+0x11e>\n 20d:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 211:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 214:\t48 98                \tcltq   \n 216:\t48 c1 e0 04          \tshl    $0x4,%rax\n 21a:\t48 89 c2             \tmov    %rax,%rdx\n 21d:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n 224:\t48 01 c2             \tadd    %rax,%rdx\n 227:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 22b:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n 22f:\t48 8b 12             \tmov    (%rdx),%rdx\n 232:\t48 89 50 20          \tmov    %rdx,0x20(%rax)\n 236:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n 23a:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n 241:\t48 89 d6             \tmov    %rdx,%rsi\n 244:\t48 89 c7             \tmov    %rax,%rdi\n 247:\te8 00 00 00 00       \tcallq  24c <LibraryAdd+0x15d>\n 24c:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 250:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 253:\t48 98                \tcltq   \n 255:\t48 c1 e0 04          \tshl    $0x4,%rax\n 259:\t48 89 c2             \tmov    %rax,%rdx\n 25c:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n 263:\t48 01 d0             \tadd    %rdx,%rax\n 266:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n 26a:\t48 85 c0             \ttest   %rax,%rax\n 26d:\t0f 85 c7 fe ff ff    \tjne    13a <LibraryAdd+0x4b>\n 273:\t90                   \tnop\n 274:\t90                   \tnop\n 275:\tc9                   \tleaveq \n 276:\tc3                   \tretq   ", "code_s": "__int64 __fastcall LibraryAdd(__int64 a1, __int64 a2, __int64 a3, __int64 a4) {\n  unsigned int v4;\n  __int64 result;\n  __int64 v7;\n  __int64 v8;\n  char <span class=\"supfact\">v9</span>[Number];\n  __int64 v10;\n  __int64 v11;\n  __int64 v12;\n  int i;\n  v12 = TableStrRegister(a1, String);\n  for (i = Number;; ++i) {\n    result = *(_QWORD *)(Number L * i + a4 + Number);\n    if (!result)\n      break;\n    v4 = strlen(*(const char **)(Number L * i + a4 + Number));\n    v11 = LexAnalyse(a1, v12, *(_QWORD *)(Number L * i + a4 + Number), v4,\n                     Number L);\n    LexInitParser(<span class=\"supfact\">v9</span>, a1,\n                  *(_QWORD *)(Number L * i + a4 + Number), v11, v12, Number L,\n                  Number L);\n    TypeParse(<span class=\"supfact\">v9</span>, &v7, &v8, Number L);\n    v10 = ParseFunctionDefinition(<span class=\"supfact\">v9</span>, v7, v8);\n    *(_QWORD *)(*(_QWORD *)(v10 + Number) + Number L) =\n        *(_QWORD *)(a4 + Number L * i);\n    HeapFreeMem(a1, v11);\n  }\n  return result;\n}", "code_t": "void __cdecl LibraryAdd(Picoc *pc, Table *GlobalTable, const char *LibraryName,\n                        LibraryFunction *FuncList) {\n  __int64 v4;\n  ValueType *ReturnType;\n  char *Identifier;\n  ParseState <span class=\"supfact\">Parser</span>;\n  Value *NewValue;\n  void *Tokens;\n  char *IntrinsicName;\n  int Count;\n  IntrinsicName = (char *)TableStrRegister(pc, String);\n  for (Count = Number; FuncList[Count].Prototype; ++Count) {\n    v4 = (unsigned int)strlen(FuncList[Count].Prototype);\n    Tokens = (void *)LexAnalyse(pc, IntrinsicName, FuncList[Count].Prototype,\n                                v4, Number L);\n    LexInitParser(&<span class=\"supfact\">Parser</span>, pc, FuncList[Count].Prototype,\n                  Tokens, IntrinsicName, Number L, Number L);\n    TypeParse(&<span class=\"supfact\">Parser</span>, &ReturnType, &Identifier, Number L);\n    NewValue = (Value *)ParseFunctionDefinition(&<span class=\"supfact\">Parser</span>,\n                                                ReturnType, Identifier);\n    NewValue->Val->FuncDef.Intrinsic = (void (*)(...))FuncList[Count].Func;\n    HeapFreeMem(pc, Tokens);\n  }\n}", "var": [{"name": "v9", "type": "struct MD5_CTX { u32[4] Buf; u32[2] LenInBitCount; u8[64] Input; }", "ref_name": "Parser", "ref_type": "struct ParseState { Picoc * pc; const unsigned __int8 * Pos; char * FileName; __int16 Line; __int16 CharacterPos; RunMode Mode; int SearchLabel; PADDING (4); const char * SearchGotoLabel; const char * SourceText; __int16 HashIfLevel; __int16 HashIfEvaluateToLevel; char DebugMode; PADDING (3); int ScopeID; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/baf54fa94846d0b997c980a3a36d011deefd15856e966d19355f75f502e081d6", "path_in_repo": "XanClic/qemu//util/vfio-helpers.o", "objdump": "0000000000000017 <_nocheck__trace_qemu_vfio_dma_reset_temporary>:\n      17:\t55                   \tpush   %rbp\n      18:\t48 89 e5             \tmov    %rsp,%rbp\n      1b:\t41 54                \tpush   %r12\n      1d:\t53                   \tpush   %rbx\n      1e:\t48 83 ec 30          \tsub    $0x30,%rsp\n      22:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n      26:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n      2d:\t00 00 \n      2f:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n      33:\t31 c0                \txor    %eax,%eax\n      35:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 3b <_nocheck__trace_qemu_vfio_dma_reset_temporary+0x24>\n      3b:\t85 c0                \ttest   %eax,%eax\n      3d:\t0f 95 c0             \tsetne  %al\n      40:\t0f b6 c0             \tmovzbl %al,%eax\n      43:\t48 85 c0             \ttest   %rax,%rax\n      46:\t74 5e                \tje     a6 <_nocheck__trace_qemu_vfio_dma_reset_temporary+0x8f>\n      48:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 4f <_nocheck__trace_qemu_vfio_dma_reset_temporary+0x38>\n      4f:\t66 85 c0             \ttest   %ax,%ax\n      52:\t74 52                \tje     a6 <_nocheck__trace_qemu_vfio_dma_reset_temporary+0x8f>\n      54:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n      59:\te8 a2 ff ff ff       \tcallq  0 <qemu_loglevel_mask>\n      5e:\t84 c0                \ttest   %al,%al\n      60:\t74 44                \tje     a6 <_nocheck__trace_qemu_vfio_dma_reset_temporary+0x8f>\n      62:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n      66:\tbe 00 00 00 00       \tmov    $0x0,%esi\n      6b:\t48 89 c7             \tmov    %rax,%rdi\n      6e:\te8 00 00 00 00       \tcallq  73 <_nocheck__trace_qemu_vfio_dma_reset_temporary+0x5c>\n      73:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n      77:\t49 89 c4             \tmov    %rax,%r12\n      7a:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n      7e:\t48 89 c3             \tmov    %rax,%rbx\n      81:\te8 00 00 00 00       \tcallq  86 <_nocheck__trace_qemu_vfio_dma_reset_temporary+0x6f>\n      86:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n      8a:\t49 89 d0             \tmov    %rdx,%r8\n      8d:\t4c 89 e1             \tmov    %r12,%rcx\n      90:\t48 89 da             \tmov    %rbx,%rdx\n      93:\t89 c6                \tmov    %eax,%esi\n      95:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 9c <_nocheck__trace_qemu_vfio_dma_reset_temporary+0x85>\n      9c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n      a1:\te8 00 00 00 00       \tcallq  a6 <_nocheck__trace_qemu_vfio_dma_reset_temporary+0x8f>\n      a6:\t90                   \tnop\n      a7:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      ab:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n      b2:\t00 00 \n      b4:\t74 05                \tje     bb <_nocheck__trace_qemu_vfio_dma_reset_temporary+0xa4>\n      b6:\te8 00 00 00 00       \tcallq  bb <_nocheck__trace_qemu_vfio_dma_reset_temporary+0xa4>\n      bb:\t48 83 c4 30          \tadd    $0x30,%rsp\n      bf:\t5b                   \tpop    %rbx\n      c0:\t41 5c                \tpop    %r12\n      c2:\t5d                   \tpop    %rbp\n      c3:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_qemu_vfio_dma_reset_temporary(\n    const void *a1) {\n  __suseconds_t v1;\n  __time_t v2;\n  unsigned int v3;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v6;\n  v6 = __readfsqword(Number);\n  if (trace_events_enabled_count &&\n      TRACE_QEMU_VFIO_DMA_RESET_TEMPORARY_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v1 = <span class=\"supfact\">tv</span>.tv_usec;\n    v2 = <span class=\"supfact\">tv</span>.tv_sec;\n    v3 = qemu_get_thread_id();\n    qemu_log(String, v3, v2, v1, a1);\n  }\n  return __readfsqword(Number) ^ v6;\n}", "code_t": "void __cdecl nocheck__trace_qemu_vfio_dma_reset_temporary(void *s) {\n  __suseconds_t v1;\n  __time_t v2;\n  unsigned int v3;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v5;\n  v5 = __readfsqword(Number);\n  if (trace_events_enabled_count &&\n      TRACE_QEMU_VFIO_DMA_RESET_TEMPORARY_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v1 = <span class=\"supfact\">_now</span>.tv_usec;\n    v2 = <span class=\"supfact\">_now</span>.tv_sec;\n    v3 = qemu_get_thread_id();\n    qemu_log(String, v3, v2, v1, s);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "Wyvern", "repo_name": "git", "path": "Wyvern/git/da986fb28db1a1fd40d3700b35774c902fdbe237ef46a54e5178860b585da60d", "path_in_repo": "Wyvern/git//bulk-checkin.o", "objdump": "000000000000011f <finish_bulk_checkin>:\n 11f:\t55                   \tpush   %rbp\n 120:\t48 89 e5             \tmov    %rsp,%rbp\n 123:\t48 83 ec 60          \tsub    $0x60,%rsp\n 127:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n 12b:\t48 c7 45 b0 00 00 00 \tmovq   $0x0,-0x50(%rbp)\n 132:\t00 \n 133:\t48 c7 45 b8 00 00 00 \tmovq   $0x0,-0x48(%rbp)\n 13a:\t00 \n 13b:\t48 c7 45 c0 00 00 00 \tmovq   $0x0,-0x40(%rbp)\n 142:\t00 \n 143:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 147:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n 14b:\t48 85 c0             \ttest   %rax,%rax\n 14e:\t0f 84 82 01 00 00    \tje     2d6 <finish_bulk_checkin+0x1b7>\n 154:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 158:\t8b 40 4c             \tmov    0x4c(%rax),%eax\n 15b:\t85 c0                \ttest   %eax,%eax\n 15d:\t75 26                \tjne    185 <finish_bulk_checkin+0x66>\n 15f:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 163:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n 167:\t8b 00                \tmov    (%rax),%eax\n 169:\t89 c7                \tmov    %eax,%edi\n 16b:\te8 00 00 00 00       \tcallq  170 <finish_bulk_checkin+0x51>\n 170:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 174:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n 178:\t48 89 c7             \tmov    %rax,%rdi\n 17b:\te8 00 00 00 00       \tcallq  180 <finish_bulk_checkin+0x61>\n 180:\te9 0e 01 00 00       \tjmpq   293 <finish_bulk_checkin+0x174>\n 185:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 189:\t8b 40 4c             \tmov    0x4c(%rax),%eax\n 18c:\t83 f8 01             \tcmp    $0x1,%eax\n 18f:\t75 1e                \tjne    1af <finish_bulk_checkin+0x90>\n 191:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 195:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n 199:\t48 8d 4d d0          \tlea    -0x30(%rbp),%rcx\n 19d:\tba 07 00 00 00       \tmov    $0x7,%edx\n 1a2:\t48 89 ce             \tmov    %rcx,%rsi\n 1a5:\t48 89 c7             \tmov    %rax,%rdi\n 1a8:\te8 00 00 00 00       \tcallq  1ad <finish_bulk_checkin+0x8e>\n 1ad:\teb 58                \tjmp    207 <finish_bulk_checkin+0xe8>\n 1af:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 1b3:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n 1b7:\t48 8d 4d d0          \tlea    -0x30(%rbp),%rcx\n 1bb:\tba 00 00 00 00       \tmov    $0x0,%edx\n 1c0:\t48 89 ce             \tmov    %rcx,%rsi\n 1c3:\t48 89 c7             \tmov    %rax,%rdi\n 1c6:\te8 00 00 00 00       \tcallq  1cb <finish_bulk_checkin+0xac>\n 1cb:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n 1ce:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 1d2:\t4c 8b 40 18          \tmov    0x18(%rax),%r8\n 1d6:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 1da:\t8b 48 4c             \tmov    0x4c(%rax),%ecx\n 1dd:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 1e1:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 1e5:\t48 8d 7d d0          \tlea    -0x30(%rbp),%rdi\n 1e9:\t48 8d 75 d0          \tlea    -0x30(%rbp),%rsi\n 1ed:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 1f0:\t4d 89 c1             \tmov    %r8,%r9\n 1f3:\t49 89 f8             \tmov    %rdi,%r8\n 1f6:\t89 c7                \tmov    %eax,%edi\n 1f8:\te8 00 00 00 00       \tcallq  1fd <finish_bulk_checkin+0xde>\n 1fd:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 200:\t89 c7                \tmov    %eax,%edi\n 202:\te8 00 00 00 00       \tcallq  207 <finish_bulk_checkin+0xe8>\n 207:\te8 00 00 00 00       \tcallq  20c <finish_bulk_checkin+0xed>\n 20c:\t48 89 c2             \tmov    %rax,%rdx\n 20f:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n 213:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 218:\t48 89 c7             \tmov    %rax,%rdi\n 21b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 220:\te8 00 00 00 00       \tcallq  225 <finish_bulk_checkin+0x106>\n 225:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 229:\t4c 8d 40 20          \tlea    0x20(%rax),%r8\n 22d:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 231:\t8b 48 4c             \tmov    0x4c(%rax),%ecx\n 234:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 238:\t48 8b 50 40          \tmov    0x40(%rax),%rdx\n 23c:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 240:\t48 8b 70 08          \tmov    0x8(%rax),%rsi\n 244:\t48 8d 7d d0          \tlea    -0x30(%rbp),%rdi\n 248:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n 24c:\t49 89 f9             \tmov    %rdi,%r9\n 24f:\t48 89 c7             \tmov    %rax,%rdi\n 252:\te8 00 00 00 00       \tcallq  257 <finish_bulk_checkin+0x138>\n 257:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n 25e:\teb 24                \tjmp    284 <finish_bulk_checkin+0x165>\n 260:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 264:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n 268:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n 26b:\t48 63 d2             \tmovslq %edx,%rdx\n 26e:\t48 c1 e2 03          \tshl    $0x3,%rdx\n 272:\t48 01 d0             \tadd    %rdx,%rax\n 275:\t48 8b 00             \tmov    (%rax),%rax\n 278:\t48 89 c7             \tmov    %rax,%rdi\n 27b:\te8 00 00 00 00       \tcallq  280 <finish_bulk_checkin+0x161>\n 280:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 284:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 288:\t8b 50 4c             \tmov    0x4c(%rax),%edx\n 28b:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 28e:\t39 c2                \tcmp    %eax,%edx\n 290:\t77 ce                \tja     260 <finish_bulk_checkin+0x141>\n 292:\t90                   \tnop\n 293:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 297:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n 29b:\t48 89 c7             \tmov    %rax,%rdi\n 29e:\te8 00 00 00 00       \tcallq  2a3 <finish_bulk_checkin+0x184>\n 2a3:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 2a7:\tba 50 00 00 00       \tmov    $0x50,%edx\n 2ac:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 2b1:\t48 89 c7             \tmov    %rax,%rdi\n 2b4:\te8 00 00 00 00       \tcallq  2b9 <finish_bulk_checkin+0x19a>\n 2b9:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n 2bd:\t48 89 c7             \tmov    %rax,%rdi\n 2c0:\te8 00 00 00 00       \tcallq  2c5 <finish_bulk_checkin+0x1a6>\n 2c5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2cc <finish_bulk_checkin+0x1ad>\n 2cc:\t48 89 c7             \tmov    %rax,%rdi\n 2cf:\te8 00 00 00 00       \tcallq  2d4 <finish_bulk_checkin+0x1b5>\n 2d4:\teb 01                \tjmp    2d7 <finish_bulk_checkin+0x1b8>\n 2d6:\t90                   \tnop\n 2d7:\tc9                   \tleaveq \n 2d8:\tc3                   \tretq   ", "code_s": "__int64 __fastcall finish_bulk_checkin(__int64 a1) {\n  __int64 result;\n  const char *v2;\n  __int64 <span class=\"supfact\">v3</span>[Number];\n  char <span class=\"supfact\">v4</span>[Number];\n  int fd;\n  unsigned int i;\n  <span class=\"supfact\">v3</span>[Number] = Number L;\n  <span class=\"supfact\">v3</span>[Number] = Number L;\n  <span class=\"supfact\">v3</span>[Number] = (__int64)&strbuf_slopbuf;\n  result = *(_QWORD *)(a1 + Number);\n  if (result) {\n    if (*(_DWORD *)(a1 + Number)) {\n      if (*(_DWORD *)(a1 + Number) == Number) {\n        finalize_hashfile(*(_QWORD *)(a1 + Number), <span class=\"supfact\">v4</span>,\n                          Number L);\n      } else {\n        fd = finalize_hashfile(*(_QWORD *)(a1 + Number), <span class=\"supfact\">v4</span>,\n                               Number L);\n        fixup_pack_header_footer((unsigned int)fd, <span class=\"supfact\">v4</span>,\n                                 *(_QWORD *)(a1 + Number),\n                                 *(unsigned int *)(a1 + Number),\n                                 <span class=\"supfact\">v4</span>, *(_QWORD *)(a1 + Number));\n        close(fd);\n      }\n      v2 = (const char *)get_object_directory();\n      strbuf_addf(<span class=\"supfact\">v3</span>, String, v2);\n      finish_tmp_packfile(<span class=\"supfact\">v3</span>, *(_QWORD *)(a1 + Number),\n                          *(_QWORD *)(a1 + Number),\n                          *(unsigned int *)(a1 + Number), a1 + Number,\n                          <span class=\"supfact\">v4</span>);\n      for (i = Number; *(_DWORD *)(a1 + Number) > i; ++i)\n        free(*(void **)(Number L * (int)i + *(_QWORD *)(a1 + Number)));\n    } else {\n      close(**(_DWORD **)(a1 + Number));\n      unlink(*(const char **)(a1 + Number));\n    }\n    free(*(void **)(a1 + Number));\n    memset((void *)a1, Number, Number);\n    strbuf_release(<span class=\"supfact\">v3</span>);\n    result = reprepare_packed_git(the_repository);\n  }\n  return result;\n}", "code_t": "void __cdecl finish_bulk_checkin(bulk_checkin_state *state) {\n  const char *v1;\n  strbuf <span class=\"supfact\">packname</span>;\n  object_id <span class=\"supfact\">oid</span>;\n  int fd;\n  int i;\n  <span class=\"supfact\">packname</span>.alloc = Number L;\n  <span class=\"supfact\">packname</span>.len = Number L;\n  <span class=\"supfact\">packname</span>.buf = (char *)&strbuf_slopbuf;\n  if (state->f) {\n    if (state->nr_written) {\n      if (state->nr_written == Number) {\n        finalize_hashfile(state->f, &<span class=\"supfact\">oid</span>, Number L);\n      } else {\n        fd = finalize_hashfile(state->f, &<span class=\"supfact\">oid</span>, Number L);\n        fixup_pack_header_footer((unsigned int)fd, &<span class=\"supfact\">oid</span>,\n                                 state->pack_tmp_name, state->nr_written,\n                                 &<span class=\"supfact\">oid</span>, state->offset);\n        close(fd);\n      }\n      v1 = (const char *)get_object_directory();\n      strbuf_addf(&<span class=\"supfact\">packname</span>, String, v1);\n      finish_tmp_packfile(&<span class=\"supfact\">packname</span>, state->pack_tmp_name,\n                          state->written, state->nr_written,\n                          &state->pack_idx_opts, &<span class=\"supfact\">oid</span>);\n      for (i = Number; state->nr_written > i; ++i)\n        free(state->written[i]);\n    } else {\n      close(state->f->fd);\n      unlink(state->pack_tmp_name);\n    }\n    free(state->written);\n    memset(state, Number, sizeof(bulk_checkin_state));\n    strbuf_release(&<span class=\"supfact\">packname</span>);\n    reprepare_packed_git(the_repository);\n  }\n}", "var": [{"name": "v4", "type": "char[41]", "ref_name": "oid", "ref_type": "struct object_id { unsigned __int8[32] hash; }"}, {"name": "v3", "type": "struct strbuf { size_t alloc; size_t len; char * buf; }", "ref_name": "packname", "ref_type": "struct strbuf { size_t alloc; size_t len; char * buf; }"}], "body_in_train": false}, {"repo_owner": "bloodstalker", "repo_name": "luactest", "path": "bloodstalker/luactest/fe17f1ae11dcb6319b1aa7019ce6f1596c22ee8290a07c17b5d8d95f7fbfebdd", "path_in_repo": "bloodstalker/luactest//lua/src/lua", "objdump": "000000000042889e <db_setlocal>:\n  42889e:\t55                   \tpush   %rbp\n  42889f:\t48 89 e5             \tmov    %rsp,%rbp\n  4288a2:\t48 81 ec b0 00 00 00 \tsub    $0xb0,%rsp\n  4288a9:\t48 89 bd 58 ff ff ff \tmov    %rdi,-0xa8(%rbp)\n  4288b0:\t48 8d 55 e4          \tlea    -0x1c(%rbp),%rdx\n  4288b4:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n  4288bb:\t48 89 d6             \tmov    %rdx,%rsi\n  4288be:\t48 89 c7             \tmov    %rax,%rdi\n  4288c1:\te8 1e f9 ff ff       \tcallq  4281e4 <getthread>\n  4288c6:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  4288ca:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n  4288cd:\t8d 50 01             \tlea    0x1(%rax),%edx\n  4288d0:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n  4288d7:\t89 d6                \tmov    %edx,%esi\n  4288d9:\t48 89 c7             \tmov    %rax,%rdi\n  4288dc:\te8 98 7b ff ff       \tcallq  420479 <luaL_checkinteger>\n  4288e1:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  4288e4:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n  4288e7:\t8d 50 02             \tlea    0x2(%rax),%edx\n  4288ea:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n  4288f1:\t89 d6                \tmov    %edx,%esi\n  4288f3:\t48 89 c7             \tmov    %rax,%rdi\n  4288f6:\te8 7e 7b ff ff       \tcallq  420479 <luaL_checkinteger>\n  4288fb:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n  4288fe:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n  428905:\t8b 4d f4             \tmov    -0xc(%rbp),%ecx\n  428908:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  42890c:\t89 ce                \tmov    %ecx,%esi\n  42890e:\t48 89 c7             \tmov    %rax,%rdi\n  428911:\te8 65 07 fe ff       \tcallq  40907b <lua_getstack>\n  428916:\t85 c0                \ttest   %eax,%eax\n  428918:\t75 21                \tjne    42893b <db_setlocal+0x9d>\n  42891a:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n  42891d:\t8d 48 01             \tlea    0x1(%rax),%ecx\n  428920:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n  428927:\tba 01 83 43 00       \tmov    $0x438301,%edx\n  42892c:\t89 ce                \tmov    %ecx,%esi\n  42892e:\t48 89 c7             \tmov    %rax,%rdi\n  428931:\te8 d2 70 ff ff       \tcallq  41fa08 <luaL_argerror>\n  428936:\te9 b4 00 00 00       \tjmpq   4289ef <db_setlocal+0x151>\n  42893b:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n  42893e:\t8d 50 03             \tlea    0x3(%rax),%edx\n  428941:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n  428948:\t89 d6                \tmov    %edx,%esi\n  42894a:\t48 89 c7             \tmov    %rax,%rdi\n  42894d:\te8 37 79 ff ff       \tcallq  420289 <luaL_checkany>\n  428952:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n  428955:\t8d 50 03             \tlea    0x3(%rax),%edx\n  428958:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n  42895f:\t89 d6                \tmov    %edx,%esi\n  428961:\t48 89 c7             \tmov    %rax,%rdi\n  428964:\te8 d4 d4 fd ff       \tcallq  405e3d <lua_settop>\n  428969:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n  42896d:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n  428974:\tba 01 00 00 00       \tmov    $0x1,%edx\n  428979:\t48 89 ce             \tmov    %rcx,%rsi\n  42897c:\t48 89 c7             \tmov    %rax,%rdi\n  42897f:\te8 9a f6 ff ff       \tcallq  42801e <checkstack>\n  428984:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n  428988:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n  42898f:\tba 01 00 00 00       \tmov    $0x1,%edx\n  428994:\t48 89 ce             \tmov    %rcx,%rsi\n  428997:\t48 89 c7             \tmov    %rax,%rdi\n  42899a:\te8 35 d3 fd ff       \tcallq  405cd4 <lua_xmove>\n  42899f:\t8b 55 f0             \tmov    -0x10(%rbp),%edx\n  4289a2:\t48 8d 8d 60 ff ff ff \tlea    -0xa0(%rbp),%rcx\n  4289a9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4289ad:\t48 89 ce             \tmov    %rcx,%rsi\n  4289b0:\t48 89 c7             \tmov    %rax,%rdi\n  4289b3:\te8 05 0a fe ff       \tcallq  4093bd <lua_setlocal>\n  4289b8:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  4289bc:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n  4289c1:\t75 11                \tjne    4289d4 <db_setlocal+0x136>\n  4289c3:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4289c7:\tbe fe ff ff ff       \tmov    $0xfffffffe,%esi\n  4289cc:\t48 89 c7             \tmov    %rax,%rdi\n  4289cf:\te8 69 d4 fd ff       \tcallq  405e3d <lua_settop>\n  4289d4:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  4289d8:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n  4289df:\t48 89 d6             \tmov    %rdx,%rsi\n  4289e2:\t48 89 c7             \tmov    %rax,%rdi\n  4289e5:\te8 19 e1 fd ff       \tcallq  406b03 <lua_pushstring>\n  4289ea:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  4289ef:\tc9                   \tleaveq \n  4289f0:\tc3                   \tretq   ", "code_s": "__int64 __fastcall db_setlocal(_QWORD *a1) {\n  char <span class=\"supfact\">v2</span>[Number];\n  int v3;\n  const char *v4;\n  int v5;\n  int v6;\n  _QWORD *v7;\n  v7 = (_QWORD *)getthread(a1, &v3);\n  v6 = luaL_checkinteger(a1, v3 + Number);\n  v5 = luaL_checkinteger(a1, v3 + Number);\n  if (!(unsigned int)lua_getstack((__int64)v7, v6, (__int64)<span class=\"supfact\">v2</span>))\n    luaL_argerror(a1, v3 + Number, (int)String);\n  luaL_checkany(a1, v3 + Number);\n  lua_settop((__int64)a1, v3 + Number);\n  checkstack((__int64)a1, v7, Number);\n  lua_xmove((__int64)a1, (__int64)v7, Number);\n  v4 = lua_setlocal((__int64)v7, (__int64)<span class=\"supfact\">v2</span>, v5);\n  if (!v4)\n    lua_settop((__int64)v7, Number);\n  lua_pushstring((__int64)a1, (__int64)v4);\n  return Number L;\n}", "code_t": "int __cdecl db_setlocal(lua_State_0 *L) {\n  lua_Debug_0 <span class=\"supfact\">ar</span>;\n  int arg;\n  const char *name;\n  int nvar;\n  int level;\n  lua_State_0 *L1;\n  L1 = getthread(L, &arg);\n  level = luaL_checkinteger(L, arg + Number);\n  nvar = luaL_checkinteger(L, arg + Number);\n  if (!lua_getstack(L1, level, &<span class=\"supfact\">ar</span>))\n    luaL_argerror(L, arg + Number, String);\n  luaL_checkany(L, arg + Number);\n  lua_settop(L, arg + Number);\n  checkstack(L, L1, Number);\n  lua_xmove(L, L1, Number);\n  name = lua_setlocal(L1, &<span class=\"supfact\">ar</span>, nvar);\n  if (!name)\n    lua_settop(L1, Number);\n  lua_pushstring(L, name);\n  return Number;\n}", "var": [{"name": "v2", "type": "struct lua_Debug_0 { int event; PADDING (4); const char * name; const char * namewhat; const char * what; const char * source; int currentline; int nups; int linedefined; int lastlinedefined; char[60] short_src; int i_ci; }", "ref_name": "ar", "ref_type": "struct lua_Debug_0 { int event; PADDING (4); const char * name; const char * namewhat; const char * what; const char * source; int currentline; int linedefined; int lastlinedefined; unsigned __int8 nups; unsigned __int8 nparams; char isvararg; char istailcall; char[60] short_src; PADDING (4); CallInfo * i_ci; }"}], "body_in_train": false}, {"repo_owner": "RSB4760", "repo_name": "apq8016_external_wpa_supplicant_8", "path": "RSB4760/apq8016_external_wpa_supplicant_8/2a7fab9c73429f714ec7f312a1572e3de6f9ff677b8014dd8f44b6f287bc11ba", "path_in_repo": "RSB4760/apq8016_external_wpa_supplicant_8/wpa_supplicant/dbus/dbus_new.o", "objdump": "00000000000006cc <wpas_dbus_signal_network_request>:\n     6cc:\t55                   \tpush   %rbp\n     6cd:\t48 89 e5             \tmov    %rsp,%rbp\n     6d0:\t48 81 ec 40 01 00 00 \tsub    $0x140,%rsp\n     6d7:\t48 89 bd d8 fe ff ff \tmov    %rdi,-0x128(%rbp)\n     6de:\t48 89 b5 d0 fe ff ff \tmov    %rsi,-0x130(%rbp)\n     6e5:\t89 95 cc fe ff ff    \tmov    %edx,-0x134(%rbp)\n     6eb:\t48 89 8d c0 fe ff ff \tmov    %rcx,-0x140(%rbp)\n     6f2:\t48 c7 85 f0 fe ff ff \tmovq   $0x0,-0x110(%rbp)\n     6f9:\t00 00 00 00 \n     6fd:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n     704:\t48 8b 00             \tmov    (%rax),%rax\n     707:\t48 8b 40 70          \tmov    0x70(%rax),%rax\n     70b:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     70f:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n     714:\t0f 84 6b 01 00 00    \tje     885 <wpas_dbus_signal_network_request+0x1b9>\n     71a:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n     721:\t48 8b 80 b8 00 00 00 \tmov    0xb8(%rax),%rax\n     728:\t48 85 c0             \ttest   %rax,%rax\n     72b:\t0f 84 54 01 00 00    \tje     885 <wpas_dbus_signal_network_request+0x1b9>\n     731:\t48 8d 95 f0 fe ff ff \tlea    -0x110(%rbp),%rdx\n     738:\t48 8b 8d c0 fe ff ff \tmov    -0x140(%rbp),%rcx\n     73f:\t8b 85 cc fe ff ff    \tmov    -0x134(%rbp),%eax\n     745:\t48 89 ce             \tmov    %rcx,%rsi\n     748:\t89 c7                \tmov    %eax,%edi\n     74a:\te8 00 00 00 00       \tcallq  74f <wpas_dbus_signal_network_request+0x83>\n     74f:\t48 89 85 f8 fe ff ff \tmov    %rax,-0x108(%rbp)\n     756:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n     75d:\t48 85 c0             \ttest   %rax,%rax\n     760:\t0f 84 22 01 00 00    \tje     888 <wpas_dbus_signal_network_request+0x1bc>\n     766:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n     76d:\t48 8b 80 b8 00 00 00 \tmov    0xb8(%rax),%rax\n     774:\tba 00 00 00 00       \tmov    $0x0,%edx\n     779:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     77e:\t48 89 c7             \tmov    %rax,%rdi\n     781:\te8 00 00 00 00       \tcallq  786 <wpas_dbus_signal_network_request+0xba>\n     786:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     78a:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n     78f:\t0f 84 f6 00 00 00    \tje     88b <wpas_dbus_signal_network_request+0x1bf>\n     795:\t48 8b 85 d0 fe ff ff \tmov    -0x130(%rbp),%rax\n     79c:\t8b 48 10             \tmov    0x10(%rax),%ecx\n     79f:\t48 8b 85 d8 fe ff ff \tmov    -0x128(%rbp),%rax\n     7a6:\t48 8b 90 b8 00 00 00 \tmov    0xb8(%rax),%rdx\n     7ad:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n     7b4:\t41 89 c8             \tmov    %ecx,%r8d\n     7b7:\t48 89 d1             \tmov    %rdx,%rcx\n     7ba:\tba 00 00 00 00       \tmov    $0x0,%edx\n     7bf:\tbe 96 00 00 00       \tmov    $0x96,%esi\n     7c4:\t48 89 c7             \tmov    %rax,%rdi\n     7c7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     7cc:\te8 00 00 00 00       \tcallq  7d1 <wpas_dbus_signal_network_request+0x105>\n     7d1:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n     7d8:\t48 89 85 e8 fe ff ff \tmov    %rax,-0x118(%rbp)\n     7df:\t48 8d 55 a0          \tlea    -0x60(%rbp),%rdx\n     7e3:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     7e7:\t48 89 d6             \tmov    %rdx,%rsi\n     7ea:\t48 89 c7             \tmov    %rax,%rdi\n     7ed:\te8 00 00 00 00       \tcallq  7f2 <wpas_dbus_signal_network_request+0x126>\n     7f2:\t48 8d 95 e8 fe ff ff \tlea    -0x118(%rbp),%rdx\n     7f9:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n     7fd:\tbe 6f 00 00 00       \tmov    $0x6f,%esi\n     802:\t48 89 c7             \tmov    %rax,%rdi\n     805:\te8 00 00 00 00       \tcallq  80a <wpas_dbus_signal_network_request+0x13e>\n     80a:\t85 c0                \ttest   %eax,%eax\n     80c:\t74 38                \tje     846 <wpas_dbus_signal_network_request+0x17a>\n     80e:\t48 8d 95 f8 fe ff ff \tlea    -0x108(%rbp),%rdx\n     815:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n     819:\tbe 73 00 00 00       \tmov    $0x73,%esi\n     81e:\t48 89 c7             \tmov    %rax,%rdi\n     821:\te8 00 00 00 00       \tcallq  826 <wpas_dbus_signal_network_request+0x15a>\n     826:\t85 c0                \ttest   %eax,%eax\n     828:\t74 1c                \tje     846 <wpas_dbus_signal_network_request+0x17a>\n     82a:\t48 8d 95 f0 fe ff ff \tlea    -0x110(%rbp),%rdx\n     831:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n     835:\tbe 73 00 00 00       \tmov    $0x73,%esi\n     83a:\t48 89 c7             \tmov    %rax,%rdi\n     83d:\te8 00 00 00 00       \tcallq  842 <wpas_dbus_signal_network_request+0x176>\n     842:\t85 c0                \ttest   %eax,%eax\n     844:\t75 16                \tjne    85c <wpas_dbus_signal_network_request+0x190>\n     846:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     84b:\tbf 05 00 00 00       \tmov    $0x5,%edi\n     850:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     855:\te8 00 00 00 00       \tcallq  85a <wpas_dbus_signal_network_request+0x18e>\n     85a:\teb 1b                \tjmp    877 <wpas_dbus_signal_network_request+0x1ab>\n     85c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     860:\t48 8b 00             \tmov    (%rax),%rax\n     863:\t48 8b 4d f0          \tmov    -0x10(%rbp),%rcx\n     867:\tba 00 00 00 00       \tmov    $0x0,%edx\n     86c:\t48 89 ce             \tmov    %rcx,%rsi\n     86f:\t48 89 c7             \tmov    %rax,%rdi\n     872:\te8 00 00 00 00       \tcallq  877 <wpas_dbus_signal_network_request+0x1ab>\n     877:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     87b:\t48 89 c7             \tmov    %rax,%rdi\n     87e:\te8 00 00 00 00       \tcallq  883 <wpas_dbus_signal_network_request+0x1b7>\n     883:\teb 07                \tjmp    88c <wpas_dbus_signal_network_request+0x1c0>\n     885:\t90                   \tnop\n     886:\teb 04                \tjmp    88c <wpas_dbus_signal_network_request+0x1c0>\n     888:\t90                   \tnop\n     889:\teb 01                \tjmp    88c <wpas_dbus_signal_network_request+0x1c0>\n     88b:\t90                   \tnop\n     88c:\tc9                   \tleaveq \n     88d:\tc3                   \tretq   ", "code_s": "_QWORD *__fastcall wpas_dbus_signal_network_request(_QWORD *a1, __int64 a2,\n                                                    unsigned int a3,\n                                                    __int64 a4) {\n  _QWORD *result;\n  char *v5;\n  __int64 v6;\n  _QWORD *v7;\n  char s[Number];\n  char <span class=\"supfact\">v9</span>[Number];\n  _QWORD *v10;\n  _QWORD *v11;\n  v6 = Number L;\n  result = *(_QWORD **)(*a1 + Number L);\n  v11 = result;\n  if (result) {\n    result = (_QWORD *)a1[Number];\n    if (result) {\n      result = (_QWORD *)wpa_supplicant_ctrl_req_to_string(a3, a4, &v6);\n      v7 = result;\n      if (result) {\n        result = (_QWORD *)dbus_message_new_signal(a1[Number], String, String);\n        v10 = result;\n        if (result) {\n          snprintf(s, Number, String, (const char *)a1[Number],\n                   *(unsigned int *)(a2 + Number));\n          v5 = s;\n          dbus_message_iter_init_append(v10, <span class=\"supfact\">v9</span>);\n          if ((unsigned int)dbus_message_iter_append_basic(<span class=\"supfact\">v9</span>,\n                                                           Number L, &v5) &&\n              (unsigned int)dbus_message_iter_append_basic(<span class=\"supfact\">v9</span>,\n                                                           Number L, &v7) &&\n              (unsigned int)dbus_message_iter_append_basic(<span class=\"supfact\">v9</span>,\n                                                           Number L, &v6)) {\n            dbus_connection_send(*v11, v10, Number L);\n          } else {\n            wpa_printf(Number L, String);\n          }\n          result = (_QWORD *)dbus_message_unref(v10);\n        }\n      }\n    }\n  }\n  return result;\n}", "code_t": "void __cdecl wpas_dbus_signal_network_request(wpa_supplicant *wpa_s,\n                                              wpa_ssid *ssid,\n                                              wpa_ctrl_req_type rtype,\n                                              const char *default_txt) {\n  const char *net_ptr;\n  const char *txt;\n  const char *field;\n  char net_obj_path[Number];\n  DBusMessageIter_0 <span class=\"supfact\">iter</span>;\n  DBusMessage_0 *msg;\n  wpas_dbus_priv *iface;\n  txt = Number L;\n  iface = wpa_s->global->dbus;\n  if (iface) {\n    if (wpa_s->dbus_new_path) {\n      field = (const char *)wpa_supplicant_ctrl_req_to_string(\n          (unsigned int)rtype, default_txt, &txt);\n      if (field) {\n        msg = (DBusMessage_0 *)dbus_message_new_signal(wpa_s->dbus_new_path,\n                                                       String, String);\n        if (msg) {\n          snprintf(net_obj_path, Number, String, wpa_s->dbus_new_path,\n                   (unsigned int)ssid->id);\n          net_ptr = net_obj_path;\n          dbus_message_iter_init_append(msg, &<span class=\"supfact\">iter</span>);\n          if ((unsigned int)dbus_message_iter_append_basic(\n                  &<span class=\"supfact\">iter</span>, Number L, &net_ptr) &&\n              (unsigned int)dbus_message_iter_append_basic(\n                  &<span class=\"supfact\">iter</span>, Number L, &field) &&\n              (unsigned int)dbus_message_iter_append_basic(\n                  &<span class=\"supfact\">iter</span>, Number L, &txt)) {\n            dbus_connection_send(iface->con, msg, Number L);\n          } else {\n            wpa_printf(Number L, String);\n          }\n          dbus_message_unref(msg);\n        }\n      }\n    }\n  }\n}", "var": [{"name": "v9", "type": "struct DBusMessageIter_0 { void * dummy1; void * dummy2; dbus_uint32_t dummy3; int dummy4; int dummy5; int dummy6; int dummy7; int dummy8; int dummy9; int dummy10; int dummy11; int pad1; void * pad2; void * pad3; }", "ref_name": "iter", "ref_type": "struct DBusMessageIter_0 { void * dummy1; void * dummy2; dbus_uint32_t dummy3; int dummy4; int dummy5; int dummy6; int dummy7; int dummy8; int dummy9; int dummy10; int dummy11; int pad1; void * pad2; void * pad3; }"}], "body_in_train": false}, {"repo_owner": "mineralos", "repo_name": "soc_kernel", "path": "mineralos/soc_kernel/b28c13b003babe09d29a07d9abceee0c89a4c6a985dc47f0cac897f0c670b3e6", "path_in_repo": "mineralos/soc_kernel/tools/testing/selftests/bpf/test_align", "objdump": "000000000040178a <main>:\n  40178a:\t55                   \tpush   %rbp\n  40178b:\t48 89 e5             \tmov    %rsp,%rbp\n  40178e:\t48 83 ec 40          \tsub    $0x40,%rsp\n  401792:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n  401795:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n  401799:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n  4017a0:\tc7 45 f8 0c 00 00 00 \tmovl   $0xc,-0x8(%rbp)\n  4017a7:\t48 c7 45 d0 ff ff ff \tmovq   $0xffffffffffffffff,-0x30(%rbp)\n  4017ae:\tff \n  4017af:\t48 c7 45 d8 ff ff ff \tmovq   $0xffffffffffffffff,-0x28(%rbp)\n  4017b6:\tff \n  4017b7:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  4017bb:\t48 89 c6             \tmov    %rax,%rsi\n  4017be:\tbf 08 00 00 00       \tmov    $0x8,%edi\n  4017c3:\te8 38 fa ff ff       \tcallq  401200 <setrlimit@plt>\n  4017c8:\t83 7d cc 03          \tcmpl   $0x3,-0x34(%rbp)\n  4017cc:\t75 65                \tjne    401833 <main+0xa9>\n  4017ce:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  4017d1:\t48 98                \tcltq   \n  4017d3:\t48 c1 e0 03          \tshl    $0x3,%rax\n  4017d7:\t48 8d 50 f0          \tlea    -0x10(%rax),%rdx\n  4017db:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  4017df:\t48 01 d0             \tadd    %rdx,%rax\n  4017e2:\t48 8b 00             \tmov    (%rax),%rax\n  4017e5:\t48 89 c7             \tmov    %rax,%rdi\n  4017e8:\te8 a3 fa ff ff       \tcallq  401290 <atoi@plt>\n  4017ed:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n  4017f0:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  4017f3:\t48 98                \tcltq   \n  4017f5:\t48 c1 e0 03          \tshl    $0x3,%rax\n  4017f9:\t48 8d 50 f8          \tlea    -0x8(%rax),%rdx\n  4017fd:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  401801:\t48 01 d0             \tadd    %rdx,%rax\n  401804:\t48 8b 00             \tmov    (%rax),%rax\n  401807:\t48 89 c7             \tmov    %rax,%rdi\n  40180a:\te8 81 fa ff ff       \tcallq  401290 <atoi@plt>\n  40180f:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n  401812:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n  401815:\t3b 45 f8             \tcmp    -0x8(%rbp),%eax\n  401818:\t73 58                \tjae    401872 <main+0xe8>\n  40181a:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  40181d:\t3b 45 f8             \tcmp    -0x8(%rbp),%eax\n  401820:\t73 50                \tjae    401872 <main+0xe8>\n  401822:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n  401825:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  401828:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  40182b:\t83 c0 01             \tadd    $0x1,%eax\n  40182e:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n  401831:\teb 3f                \tjmp    401872 <main+0xe8>\n  401833:\t83 7d cc 02          \tcmpl   $0x2,-0x34(%rbp)\n  401837:\t75 39                \tjne    401872 <main+0xe8>\n  401839:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  40183c:\t48 98                \tcltq   \n  40183e:\t48 c1 e0 03          \tshl    $0x3,%rax\n  401842:\t48 8d 50 f8          \tlea    -0x8(%rax),%rdx\n  401846:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  40184a:\t48 01 d0             \tadd    %rdx,%rax\n  40184d:\t48 8b 00             \tmov    (%rax),%rax\n  401850:\t48 89 c7             \tmov    %rax,%rdi\n  401853:\te8 38 fa ff ff       \tcallq  401290 <atoi@plt>\n  401858:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  40185b:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  40185e:\t3b 45 f8             \tcmp    -0x8(%rbp),%eax\n  401861:\t73 0f                \tjae    401872 <main+0xe8>\n  401863:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  401866:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  401869:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  40186c:\t83 c0 01             \tadd    $0x1,%eax\n  40186f:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n  401872:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n  401875:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  401878:\t89 d6                \tmov    %edx,%esi\n  40187a:\t89 c7                \tmov    %eax,%edi\n  40187c:\te8 54 fe ff ff       \tcallq  4016d5 <do_test>\n  401881:\tc9                   \tleaveq \n  401882:\tc3                   \tretq   ", "code_s": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  struct rlimit <span class=\"supfact\">rlimits</span>;\n  unsigned int v5;\n  unsigned int v6;\n  unsigned int v7;\n  unsigned int v8;\n  unsigned int v9;\n  v9 = Number;\n  v8 = Number;\n  <span class=\"supfact\">rlimits</span>.rlim_cur = Number;\n  <span class=\"supfact\">rlimits</span>.rlim_max = Number;\n  setrlimit(__RLIMIT_MEMLOCK, &<span class=\"supfact\">rlimits</span>);\n  if (argc == Number) {\n    v6 = atoi(argv[Number]);\n    v5 = atoi(argv[Number]);\n    if (v6 < v8 && v5 < v8) {\n      v9 = v6;\n      v8 = v5 + Number;\n    }\n  } else if (argc == Number) {\n    v7 = atoi(argv[Number]);\n    if (v7 < v8) {\n      v9 = v7;\n      v8 = v7 + Number;\n    }\n  }\n  return do_test(v9, v8);\n}", "code_t": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  rlimit <span class=\"supfact\">rinf</span>;\n  unsigned int u;\n  unsigned int l;\n  unsigned int t;\n  unsigned int to;\n  unsigned int from;\n  from = Number;\n  to = Number;\n  <span class=\"supfact\">rinf</span>.rlim_cur = Number;\n  <span class=\"supfact\">rinf</span>.rlim_max = Number;\n  setrlimit(__RLIMIT_MEMLOCK, &<span class=\"supfact\">rinf</span>);\n  if (argc == Number) {\n    l = atoi(argv[Number]);\n    u = atoi(argv[Number]);\n    if (l < to && u < to) {\n      from = l;\n      to = u + Number;\n    }\n  } else if (argc == Number) {\n    t = atoi(argv[Number]);\n    if (t < to) {\n      from = t;\n      to = t + Number;\n    }\n  }\n  return do_test(from, to);\n}", "var": [{"name": "rlimits", "type": "struct rlimit { rlim_t rlim_cur; rlim_t rlim_max; }", "ref_name": "rinf", "ref_type": "struct rlimit { rlim_t rlim_cur; rlim_t rlim_max; }"}], "body_in_train": false}, {"repo_owner": "lagopus", "repo_name": "virtio-net-ipc-qemu-1.0", "path": "lagopus/virtio-net-ipc-qemu-1.0/d585754f6d9dafc1d420d71708dd9147db8d414a1c0e5db1812ef0bbdf0170ac", "path_in_repo": "lagopus/virtio-net-ipc-qemu-1.0//m68k-linux-user/syscall.o", "objdump": "0000000000009223 <do_shmat>:\n    9223:\t55                   \tpush   %rbp\n    9224:\t48 89 e5             \tmov    %rsp,%rbp\n    9227:\t48 81 ec c0 00 00 00 \tsub    $0xc0,%rsp\n    922e:\t89 bd 4c ff ff ff    \tmov    %edi,-0xb4(%rbp)\n    9234:\t89 b5 48 ff ff ff    \tmov    %esi,-0xb8(%rbp)\n    923a:\t89 95 44 ff ff ff    \tmov    %edx,-0xbc(%rbp)\n    9240:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    9247:\t00 00 \n    9249:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    924d:\t31 c0                \txor    %eax,%eax\n    924f:\t48 8d 55 80          \tlea    -0x80(%rbp),%rdx\n    9253:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n    9259:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    925e:\t89 c7                \tmov    %eax,%edi\n    9260:\te8 00 00 00 00       \tcallq  9265 <do_shmat+0x42>\n    9265:\t89 c7                \tmov    %eax,%edi\n    9267:\te8 0a 82 ff ff       \tcallq  1476 <get_errno>\n    926c:\t89 85 5c ff ff ff    \tmov    %eax,-0xa4(%rbp)\n    9272:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n    9278:\t89 c7                \tmov    %eax,%edi\n    927a:\te8 42 82 ff ff       \tcallq  14c1 <is_error>\n    927f:\t85 c0                \ttest   %eax,%eax\n    9281:\t74 0b                \tje     928e <do_shmat+0x6b>\n    9283:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n    9289:\te9 06 02 00 00       \tjmpq   9494 <do_shmat+0x271>\n    928e:\te8 00 00 00 00       \tcallq  9293 <do_shmat+0x70>\n    9293:\t83 bd 48 ff ff ff 00 \tcmpl   $0x0,-0xb8(%rbp)\n    929a:\t74 32                \tje     92ce <do_shmat+0xab>\n    929c:\t8b 95 48 ff ff ff    \tmov    -0xb8(%rbp),%edx\n    92a2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 92a9 <do_shmat+0x86>\n    92a9:\t48 01 d0             \tadd    %rdx,%rax\n    92ac:\t48 89 c1             \tmov    %rax,%rcx\n    92af:\t8b 95 44 ff ff ff    \tmov    -0xbc(%rbp),%edx\n    92b5:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n    92bb:\t48 89 ce             \tmov    %rcx,%rsi\n    92be:\t89 c7                \tmov    %eax,%edi\n    92c0:\te8 00 00 00 00       \tcallq  92c5 <do_shmat+0xa2>\n    92c5:\t48 89 85 68 ff ff ff \tmov    %rax,-0x98(%rbp)\n    92cc:\teb 6c                \tjmp    933a <do_shmat+0x117>\n    92ce:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    92d2:\t89 c6                \tmov    %eax,%esi\n    92d4:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    92d9:\te8 00 00 00 00       \tcallq  92de <do_shmat+0xbb>\n    92de:\t89 85 60 ff ff ff    \tmov    %eax,-0xa0(%rbp)\n    92e4:\t83 bd 60 ff ff ff ff \tcmpl   $0xffffffff,-0xa0(%rbp)\n    92eb:\t75 18                \tjne    9305 <do_shmat+0xe2>\n    92ed:\te8 00 00 00 00       \tcallq  92f2 <do_shmat+0xcf>\n    92f2:\tc7 00 0c 00 00 00    \tmovl   $0xc,(%rax)\n    92f8:\t48 c7 85 68 ff ff ff \tmovq   $0xffffffffffffffff,-0x98(%rbp)\n    92ff:\tff ff ff ff \n    9303:\teb 35                \tjmp    933a <do_shmat+0x117>\n    9305:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n    930b:\t80 cc 40             \tor     $0x40,%ah\n    930e:\t89 c2                \tmov    %eax,%edx\n    9310:\t8b 8d 60 ff ff ff    \tmov    -0xa0(%rbp),%ecx\n    9316:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 931d <do_shmat+0xfa>\n    931d:\t48 01 c8             \tadd    %rcx,%rax\n    9320:\t48 89 c1             \tmov    %rax,%rcx\n    9323:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n    9329:\t48 89 ce             \tmov    %rcx,%rsi\n    932c:\t89 c7                \tmov    %eax,%edi\n    932e:\te8 00 00 00 00       \tcallq  9333 <do_shmat+0x110>\n    9333:\t48 89 85 68 ff ff ff \tmov    %rax,-0x98(%rbp)\n    933a:\t48 83 bd 68 ff ff ff \tcmpq   $0xffffffffffffffff,-0x98(%rbp)\n    9341:\tff \n    9342:\t75 18                \tjne    935c <do_shmat+0x139>\n    9344:\te8 00 00 00 00       \tcallq  9349 <do_shmat+0x126>\n    9349:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n    9350:\t89 c7                \tmov    %eax,%edi\n    9352:\te8 1f 81 ff ff       \tcallq  1476 <get_errno>\n    9357:\te9 38 01 00 00       \tjmpq   9494 <do_shmat+0x271>\n    935c:\t48 8b 95 68 ff ff ff \tmov    -0x98(%rbp),%rdx\n    9363:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 936a <do_shmat+0x147>\n    936a:\t48 29 c2             \tsub    %rax,%rdx\n    936d:\t48 89 d0             \tmov    %rdx,%rax\n    9370:\t48 89 85 70 ff ff ff \tmov    %rax,-0x90(%rbp)\n    9377:\t48 8b 95 68 ff ff ff \tmov    -0x98(%rbp),%rdx\n    937e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 9385 <do_shmat+0x162>\n    9385:\t48 29 c2             \tsub    %rax,%rdx\n    9388:\t48 89 d0             \tmov    %rdx,%rax\n    938b:\t48 89 85 78 ff ff ff \tmov    %rax,-0x88(%rbp)\n    9392:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    9397:\t48 39 85 78 ff ff ff \tcmp    %rax,-0x88(%rbp)\n    939e:\t0f 96 c0             \tsetbe  %al\n    93a1:\t0f b6 c0             \tmovzbl %al,%eax\n    93a4:\t85 c0                \ttest   %eax,%eax\n    93a6:\t75 1f                \tjne    93c7 <do_shmat+0x1a4>\n    93a8:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 93af <do_shmat+0x18c>\n    93af:\tba 96 0b 00 00       \tmov    $0xb96,%edx\n    93b4:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 93bb <do_shmat+0x198>\n    93bb:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 93c2 <do_shmat+0x19f>\n    93c2:\te8 00 00 00 00       \tcallq  93c7 <do_shmat+0x1a4>\n    93c7:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n    93ce:\t89 85 64 ff ff ff    \tmov    %eax,-0x9c(%rbp)\n    93d4:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n    93da:\t25 00 10 00 00       \tand    $0x1000,%eax\n    93df:\t85 c0                \ttest   %eax,%eax\n    93e1:\t74 07                \tje     93ea <do_shmat+0x1c7>\n    93e3:\tba 09 00 00 00       \tmov    $0x9,%edx\n    93e8:\teb 05                \tjmp    93ef <do_shmat+0x1cc>\n    93ea:\tba 0b 00 00 00       \tmov    $0xb,%edx\n    93ef:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    93f3:\t89 c1                \tmov    %eax,%ecx\n    93f5:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    93fb:\t01 c1                \tadd    %eax,%ecx\n    93fd:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    9403:\t89 ce                \tmov    %ecx,%esi\n    9405:\t89 c7                \tmov    %eax,%edi\n    9407:\te8 00 00 00 00       \tcallq  940c <do_shmat+0x1e9>\n    940c:\tc7 85 58 ff ff ff 00 \tmovl   $0x0,-0xa8(%rbp)\n    9413:\t00 00 00 \n    9416:\teb 68                \tjmp    9480 <do_shmat+0x25d>\n    9418:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n    941e:\t48 98                \tcltq   \n    9420:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    9427:\t00 \n    9428:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 942f <do_shmat+0x20c>\n    942f:\t8b 04 02             \tmov    (%rdx,%rax,1),%eax\n    9432:\t85 c0                \ttest   %eax,%eax\n    9434:\t75 43                \tjne    9479 <do_shmat+0x256>\n    9436:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    943c:\t8b 95 58 ff ff ff    \tmov    -0xa8(%rbp),%edx\n    9442:\t48 63 d2             \tmovslq %edx,%rdx\n    9445:\t48 8d 0c d5 00 00 00 \tlea    0x0(,%rdx,8),%rcx\n    944c:\t00 \n    944d:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 9454 <do_shmat+0x231>\n    9454:\t89 04 11             \tmov    %eax,(%rcx,%rdx,1)\n    9457:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    945b:\t89 c1                \tmov    %eax,%ecx\n    945d:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n    9463:\t48 98                \tcltq   \n    9465:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    946c:\t00 \n    946d:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 9474 <do_shmat+0x251>\n    9474:\t89 0c 02             \tmov    %ecx,(%rdx,%rax,1)\n    9477:\teb 10                \tjmp    9489 <do_shmat+0x266>\n    9479:\t83 85 58 ff ff ff 01 \taddl   $0x1,-0xa8(%rbp)\n    9480:\t83 bd 58 ff ff ff 1f \tcmpl   $0x1f,-0xa8(%rbp)\n    9487:\t7e 8f                \tjle    9418 <do_shmat+0x1f5>\n    9489:\te8 00 00 00 00       \tcallq  948e <do_shmat+0x26b>\n    948e:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    9494:\t48 8b 75 f8          \tmov    -0x8(%rbp),%rsi\n    9498:\t64 48 33 34 25 28 00 \txor    %fs:0x28,%rsi\n    949f:\t00 00 \n    94a1:\t74 05                \tje     94a8 <do_shmat+0x285>\n    94a3:\te8 00 00 00 00       \tcallq  94a8 <do_shmat+0x285>\n    94a8:\tc9                   \tleaveq \n    94a9:\tc3                   \tretq   ", "code_s": "__int64 __fastcall do_shmat(int a1, unsigned int a2, int a3) {\n  int v3;\n  __int64 result;\n  int v5;\n  __int64 v6;\n  int i;\n  unsigned int v9;\n  unsigned int v10;\n  __int64 v11;\n  unsigned int v12;\n  struct shmid_ds <span class=\"supfact\">buf</span>;\n  unsigned __int64 v14;\n  v14 = __readfsqword(Number);\n  v3 = shmctl(a1, Number, &<span class=\"supfact\">buf</span>);\n  v9 = get_errno(v3);\n  if (is_error(v9))\n    return v9;\n  mmap_lock();\n  if (a2) {\n    v11 = (__int64)shmat(a1, (const void *)(a2 + guest_base), a3);\n  } else {\n    v10 = mmap_find_vma(Number L, LODWORD(<span class=\"supfact\">buf</span>.shm_segsz));\n    if (v10 == Number) {\n      *_errno_location() = Number;\n      v11 = Number;\n    } else {\n      v5 = a3;\n      BYTE1(v5) = BYTE1(a3) | Number;\n      v11 = (__int64)shmat(a1, (const void *)(v10 + guest_base), v5);\n    }\n  }\n  if (v11 == Number) {\n    mmap_unlock();\n    result = get_errno(Number);\n  } else {\n    v12 = v11 - guest_base;\n    if ((unsigned __int64)(v11 - guest_base) > Number)\n      _assert_fail(String, String, Number, String);\n    if ((a3 & Number) != Number)\n      v6 = Number L;\n    else\n      v6 = Number L;\n    page_set_flags(v12, v12 + LODWORD(<span class=\"supfact\">buf</span>.shm_segsz), v6);\n    for (i = Number; i <= Number; ++i) {\n      if (!*((_DWORD *)&shm_regions + Number * i)) {\n        *((_DWORD *)&shm_regions + Number * i) = v12;\n        dword_16344[Number * i] = <span class=\"supfact\">buf</span>.shm_segsz;\n        break;\n      }\n    }\n    mmap_unlock();\n    result = v12;\n  }\n  return result;\n}", "code_t": "abi_ulong __cdecl do_shmat(int shmid, abi_ulong shmaddr, int shmflg) {\n  int v3;\n  abi_ulong result;\n  int v5;\n  __int64 v6;\n  int i;\n  int ret;\n  abi_ulong mmap_start;\n  __int64 host_raddr;\n  abi_ulong __ret;\n  shmid_ds <span class=\"supfact\">shm_info</span>;\n  unsigned __int64 v14;\n  v14 = __readfsqword(Number);\n  v3 = shmctl(shmid, Number, &<span class=\"supfact\">shm_info</span>);\n  ret = get_errno(v3);\n  if (is_error(ret))\n    return ret;\n  mmap_lock();\n  if (shmaddr) {\n    host_raddr =\n        (__int64)shmat(shmid, (const void *)(shmaddr + guest_base), shmflg);\n  } else {\n    mmap_start =\n        mmap_find_vma(Number L, LODWORD(<span class=\"supfact\">shm_info</span>.shm_segsz));\n    if (mmap_start == Number) {\n      *_errno_location() = Number;\n      host_raddr = Number;\n    } else {\n      v5 = shmflg;\n      BYTE1(v5) = BYTE1(shmflg) | Number;\n      host_raddr =\n          (__int64)shmat(shmid, (const void *)(mmap_start + guest_base), v5);\n    }\n  }\n  if (host_raddr == Number) {\n    mmap_unlock();\n    result = get_errno(Number);\n  } else {\n    __ret = host_raddr - guest_base;\n    if ((unsigned __int64)(host_raddr - guest_base) > Number)\n      _assert_fail(String, String, Number, String);\n    if ((shmflg & Number) != Number)\n      v6 = Number L;\n    else\n      v6 = Number L;\n    page_set_flags(__ret, __ret + LODWORD(<span class=\"supfact\">shm_info</span>.shm_segsz),\n                   v6);\n    for (i = Number; i <= Number; ++i) {\n      if (!shm_regions[i].start) {\n        shm_regions[i].start = __ret;\n        shm_regions[i].size = <span class=\"supfact\">shm_info</span>.shm_segsz;\n        break;\n      }\n    }\n    mmap_unlock();\n    result = __ret;\n  }\n  return result;\n}", "var": [{"name": "buf", "type": "struct shmid_ds { ipc_perm shm_perm; size_t shm_segsz; __time_t shm_atime; __time_t shm_dtime; __time_t shm_ctime; __pid_t shm_cpid; __pid_t shm_lpid; shmatt_t shm_nattch; __syscall_ulong_t __glibc_reserved4; __syscall_ulong_t __glibc_reserved5; }", "ref_name": "shm_info", "ref_type": "struct shmid_ds { ipc_perm shm_perm; size_t shm_segsz; __time_t shm_atime; __time_t shm_dtime; __time_t shm_ctime; __pid_t shm_cpid; __pid_t shm_lpid; shmatt_t shm_nattch; __syscall_ulong_t __glibc_reserved4; __syscall_ulong_t __glibc_reserved5; }"}], "body_in_train": false}, {"repo_owner": "pk-codebox-evo", "repo_name": "iOS-apps-dospad", "path": "pk-codebox-evo/iOS-apps-dospad/9c85bc2016ddce9c4059eaea047d42eff6b099525d09324c3aa6c865fe1f4130", "path_in_repo": "pk-codebox-evo/iOS-apps-dospad/dosbox/src/shell/shell_cmds.o", "objdump": "0000000000000000 <_ZN9DOS_Block3dtaEv>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 83 ec 20          \tsub    $0x20,%rsp\n   8:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   c:\t48 8d 45 fc          \tlea    -0x4(%rbp),%rax\n  10:\tba 00 00 00 00       \tmov    $0x0,%edx\n  15:\tbe b2 00 00 00       \tmov    $0xb2,%esi\n  1a:\t48 89 c7             \tmov    %rax,%rdi\n  1d:\te8 00 00 00 00       \tcallq  22 <_ZN9DOS_Block3dtaEv+0x22>\n  22:\t48 8d 45 fc          \tlea    -0x4(%rbp),%rax\n  26:\t48 89 c7             \tmov    %rax,%rdi\n  29:\te8 00 00 00 00       \tcallq  2e <_ZN9DOS_Block3dtaEv+0x2e>\n  2e:\tc9                   \tleaveq \n  2f:\tc3                   \tretq   ", "code_s": "__int64 __fastcall DOS_Block dta(DOS_Block *this) {\n  char <span class=\"supfact\">v2</span>[Number];\n  DOS_SDA DOS_SDA((DOS_SDA *)<span class=\"supfact\">v2</span>, Number, Number);\n  return DOS_SDA GetDTA((DOS_SDA *)<span class=\"supfact\">v2</span>);\n}", "code_t": "RealPt __cdecl DOS_Block dta(DOS_Block *const this) {\n  DOS_SDA <span class=\"supfact\">v2</span>;\n  DOS_SDA DOS_SDA(&<span class=\"supfact\">v2</span>, Number, Number);\n  return DOS_SDA GetDTA(&<span class=\"supfact\">v2</span>);\n}", "var": [{"name": "v2", "type": "struct DOS_SDA { MemStruct baseclass_0; }", "ref_name": "v2", "ref_type": "struct DOS_SDA { MemStruct baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "ralph-irving", "repo_name": "zapwireless", "path": "ralph-irving/zapwireless/768664298d96eb137a1945609ea9cd4affd1a7be1e15427a515de140e85afa17", "path_in_repo": "ralph-irving/zapwireless//bin/linux/zap", "objdump": "0000000000406832 <get_current_usecs>:\n  406832:\t55                   \tpush   %rbp\n  406833:\t48 89 e5             \tmov    %rsp,%rbp\n  406836:\t48 83 ec 30          \tsub    $0x30,%rsp\n  40683a:\t48 8d 55 d8          \tlea    -0x28(%rbp),%rdx\n  40683e:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  406842:\t48 89 d6             \tmov    %rdx,%rsi\n  406845:\t48 89 c7             \tmov    %rax,%rdi\n  406848:\te8 e3 b8 ff ff       \tcallq  402130 <gettimeofday@plt>\n  40684d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  406851:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  406855:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  406859:\t48 69 c0 40 42 0f 00 \timul   $0xf4240,%rax,%rax\n  406860:\t48 01 45 f8          \tadd    %rax,-0x8(%rbp)\n  406864:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  406868:\tc9                   \tleaveq \n  406869:\tc3                   \tretq   ", "code_s": "__time_t get_current_usecs() {\n  struct timezone <span class=\"supfact\">tz</span>;\n  struct timeval <span class=\"supfact\">tv</span>;\n  gettimeofday(&<span class=\"supfact\">tv</span>, &<span class=\"supfact\">tz</span>);\n  return Number * <span class=\"supfact\">tv</span>.tv_sec + <span class=\"supfact\">tv</span>.tv_usec;\n}", "code_t": "__int64 __cdecl get_current_usecs() {\n  timezone <span class=\"supfact\">tz</span>;\n  timeval <span class=\"supfact\">tv</span>;\n  gettimeofday(&<span class=\"supfact\">tv</span>, &<span class=\"supfact\">tz</span>);\n  return Number * <span class=\"supfact\">tv</span>.tv_sec + <span class=\"supfact\">tv</span>.tv_usec;\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "tv", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}, {"name": "tz", "type": "struct timezone { int tz_minuteswest; int tz_dsttime; }", "ref_name": "tz", "ref_type": "struct timezone { int tz_minuteswest; int tz_dsttime; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/167d712463e0992729e10389549ca204bb5a890bb1dd0460101cee04a39115ca", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/drivers/taito_f2.o", "objdump": "000000000001a4a7 <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring>:\n   1a4a7:\t55                   \tpush   %rbp\n   1a4a8:\t48 89 e5             \tmov    %rsp,%rbp\n   1a4ab:\t53                   \tpush   %rbx\n   1a4ac:\t48 81 ec 88 00 00 00 \tsub    $0x88,%rsp\n   1a4b3:\t48 89 7d 88          \tmov    %rdi,-0x78(%rbp)\n   1a4b7:\t48 89 75 80          \tmov    %rsi,-0x80(%rbp)\n   1a4bb:\t48 89 95 78 ff ff ff \tmov    %rdx,-0x88(%rbp)\n   1a4c2:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n   1a4c6:\t48 89 c7             \tmov    %rax,%rdi\n   1a4c9:\te8 00 00 00 00       \tcallq  1a4ce <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0x27>\n   1a4ce:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n   1a4d5:\t00 \n   1a4d6:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n   1a4dd:\t00 \n   1a4de:\t48 c7 45 d8 00 00 00 \tmovq   $0x0,-0x28(%rbp)\n   1a4e5:\t00 \n   1a4e6:\tc7 45 d4 00 00 00 00 \tmovl   $0x0,-0x2c(%rbp)\n   1a4ed:\t48 8b 95 78 ff ff ff \tmov    -0x88(%rbp),%rdx\n   1a4f4:\t48 8b 4d 80          \tmov    -0x80(%rbp),%rcx\n   1a4f8:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n   1a4fc:\t48 89 ce             \tmov    %rcx,%rsi\n   1a4ff:\t48 89 c7             \tmov    %rax,%rdi\n   1a502:\te8 7e f3 ff ff       \tcallq  19885 <_ZL23construct_ioport_metalbR8device_tR11tagged_listI17input_port_configER7astring>\n   1a507:\t48 8b 4d 88          \tmov    -0x78(%rbp),%rcx\n   1a50b:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n   1a50f:\tba 00 00 00 00       \tmov    $0x0,%edx\n   1a514:\t48 89 ce             \tmov    %rcx,%rsi\n   1a517:\t48 89 c7             \tmov    %rax,%rdi\n   1a51a:\te8 00 00 00 00       \tcallq  1a51f <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0x78>\n   1a51f:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n   1a523:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n   1a52a:\t00 \n   1a52b:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n   1a532:\t00 \n   1a533:\tc7 45 d4 00 00 00 00 \tmovl   $0x0,-0x2c(%rbp)\n   1a53a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n   1a53e:\t41 b8 0a 00 00 00    \tmov    $0xa,%r8d\n   1a544:\tb9 30 00 00 00       \tmov    $0x30,%ecx\n   1a549:\tba 30 00 00 00       \tmov    $0x30,%edx\n   1a54e:\tbe 05 00 00 00       \tmov    $0x5,%esi\n   1a553:\t48 89 c7             \tmov    %rax,%rdi\n   1a556:\te8 00 00 00 00       \tcallq  1a55b <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0xb4>\n   1a55b:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n   1a55f:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n   1a566:\t00 \n   1a567:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1a56b:\tba 12 00 00 00       \tmov    $0x12,%edx\n   1a570:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   1a575:\t48 89 c7             \tmov    %rax,%rdi\n   1a578:\te8 00 00 00 00       \tcallq  1a57d <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0xd6>\n   1a57d:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   1a581:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1a585:\t8b 00                \tmov    (%rax),%eax\n   1a587:\t83 e0 10             \tand    $0x10,%eax\n   1a58a:\t89 c1                \tmov    %eax,%ecx\n   1a58c:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1a590:\tba 15 00 00 00       \tmov    $0x15,%edx\n   1a595:\t89 ce                \tmov    %ecx,%esi\n   1a597:\t48 89 c7             \tmov    %rax,%rdi\n   1a59a:\te8 00 00 00 00       \tcallq  1a59f <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0xf8>\n   1a59f:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   1a5a3:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1a5a7:\t8b 00                \tmov    (%rax),%eax\n   1a5a9:\t83 e0 30             \tand    $0x30,%eax\n   1a5ac:\t89 c1                \tmov    %eax,%ecx\n   1a5ae:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1a5b2:\tba 1c 00 00 00       \tmov    $0x1c,%edx\n   1a5b7:\t89 ce                \tmov    %ecx,%esi\n   1a5b9:\t48 89 c7             \tmov    %rax,%rdi\n   1a5bc:\te8 00 00 00 00       \tcallq  1a5c1 <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0x11a>\n   1a5c1:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   1a5c5:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1a5c9:\t8b 00                \tmov    (%rax),%eax\n   1a5cb:\t83 e0 20             \tand    $0x20,%eax\n   1a5ce:\t89 c1                \tmov    %eax,%ecx\n   1a5d0:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1a5d4:\tba 22 00 00 00       \tmov    $0x22,%edx\n   1a5d9:\t89 ce                \tmov    %ecx,%esi\n   1a5db:\t48 89 c7             \tmov    %rax,%rdi\n   1a5de:\te8 00 00 00 00       \tcallq  1a5e3 <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0x13c>\n   1a5e3:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   1a5e7:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n   1a5eb:\t41 b8 0b 00 00 00    \tmov    $0xb,%r8d\n   1a5f1:\tb9 c0 00 00 00       \tmov    $0xc0,%ecx\n   1a5f6:\tba c0 00 00 00       \tmov    $0xc0,%edx\n   1a5fb:\tbe 05 00 00 00       \tmov    $0x5,%esi\n   1a600:\t48 89 c7             \tmov    %rax,%rdi\n   1a603:\te8 00 00 00 00       \tcallq  1a608 <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0x161>\n   1a608:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n   1a60c:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n   1a613:\t00 \n   1a614:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1a618:\tba 12 00 00 00       \tmov    $0x12,%edx\n   1a61d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   1a622:\t48 89 c7             \tmov    %rax,%rdi\n   1a625:\te8 00 00 00 00       \tcallq  1a62a <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0x183>\n   1a62a:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   1a62e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1a632:\t8b 00                \tmov    (%rax),%eax\n   1a634:\t83 e0 40             \tand    $0x40,%eax\n   1a637:\t89 c1                \tmov    %eax,%ecx\n   1a639:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1a63d:\tba 15 00 00 00       \tmov    $0x15,%edx\n   1a642:\t89 ce                \tmov    %ecx,%esi\n   1a644:\t48 89 c7             \tmov    %rax,%rdi\n   1a647:\te8 00 00 00 00       \tcallq  1a64c <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0x1a5>\n   1a64c:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   1a650:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1a654:\t8b 00                \tmov    (%rax),%eax\n   1a656:\t25 c0 00 00 00       \tand    $0xc0,%eax\n   1a65b:\t89 c1                \tmov    %eax,%ecx\n   1a65d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1a661:\tba 1c 00 00 00       \tmov    $0x1c,%edx\n   1a666:\t89 ce                \tmov    %ecx,%esi\n   1a668:\t48 89 c7             \tmov    %rax,%rdi\n   1a66b:\te8 00 00 00 00       \tcallq  1a670 <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0x1c9>\n   1a670:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   1a674:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1a678:\t8b 00                \tmov    (%rax),%eax\n   1a67a:\t25 80 00 00 00       \tand    $0x80,%eax\n   1a67f:\t89 c1                \tmov    %eax,%ecx\n   1a681:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1a685:\tba 22 00 00 00       \tmov    $0x22,%edx\n   1a68a:\t89 ce                \tmov    %ecx,%esi\n   1a68c:\t48 89 c7             \tmov    %rax,%rdi\n   1a68f:\te8 00 00 00 00       \tcallq  1a694 <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0x1ed>\n   1a694:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   1a698:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n   1a69c:\t48 89 c7             \tmov    %rax,%rdi\n   1a69f:\te8 00 00 00 00       \tcallq  1a6a4 <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0x1fd>\n   1a6a4:\teb 1a                \tjmp    1a6c0 <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0x219>\n   1a6a6:\t48 89 c3             \tmov    %rax,%rbx\n   1a6a9:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n   1a6ad:\t48 89 c7             \tmov    %rax,%rdi\n   1a6b0:\te8 00 00 00 00       \tcallq  1a6b5 <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0x20e>\n   1a6b5:\t48 89 d8             \tmov    %rbx,%rax\n   1a6b8:\t48 89 c7             \tmov    %rax,%rdi\n   1a6bb:\te8 00 00 00 00       \tcallq  1a6c0 <_ZL24construct_ioport_metalbjR8device_tR11tagged_listI17input_port_configER7astring+0x219>\n   1a6c0:\t48 81 c4 88 00 00 00 \tadd    $0x88,%rsp\n   1a6c7:\t5b                   \tpop    %rbx\n   1a6c8:\t5d                   \tpop    %rbp\n   1a6c9:\tc3                   \tretq   ", "code_s": "void __fastcall construct_ioport_metalbj(__int64 a1, __int64 a2, __int64 a3) {\n  char <span class=\"supfact\">v4</span>[Number];\n  int v5;\n  __int64 v6;\n  _DWORD *v7;\n  __int64 v8;\n  astring astring((astring *)<span class=\"supfact\">v4</span>);\n  v8 = Number L;\n  v7 = Number L;\n  v6 = Number L;\n  v5 = Number;\n  construct_ioport_metalb(a1, a2, a3);\n  v6 = ioconfig_modify_port(a2, a1, String);\n  v7 = Number L;\n  v8 = Number L;\n  v5 = Number;\n  v7 = (_DWORD *)ioconfig_alloc_field(v6, Number L, Number L, Number L,\n                                      Number L);\n  v8 = Number L;\n  v8 = ioconfig_alloc_setting(v7, Number L, Number L);\n  v8 = ioconfig_alloc_setting(v7, *v7 & Number, Number L);\n  v8 = ioconfig_alloc_setting(v7, *v7 & Number, Number L);\n  v8 = ioconfig_alloc_setting(v7, *v7 & Number, Number L);\n  v7 = (_DWORD *)ioconfig_alloc_field(v6, Number L, Number L, Number L,\n                                      Number L);\n  v8 = Number L;\n  v8 = ioconfig_alloc_setting(v7, Number L, Number L);\n  v8 = ioconfig_alloc_setting(v7, *v7 & Number, Number L);\n  v8 = ioconfig_alloc_setting(v7, *v7 & Number, Number L);\n  v8 = ioconfig_alloc_setting(v7, *v7 & Number, Number L);\n  astring ~astring((astring *)<span class=\"supfact\">v4</span>);\n}", "code_t": "void __cdecl construct_ioport_metalbj(device_t *owner, ioport_list *portlist,\n                                      astring *errorbuf) {\n  astring <span class=\"supfact\">fulltag</span>;\n  input_port_value maskbits;\n  input_port_config *curport;\n  input_field_config *curfield;\n  input_setting_config *cursetting;\n  astring astring(&<span class=\"supfact\">fulltag</span>);\n  cursetting = Number L;\n  curfield = Number L;\n  curport = Number L;\n  maskbits = Number;\n  construct_ioport_metalb(owner, portlist, errorbuf);\n  curport = (input_port_config *)ioconfig_modify_port(portlist, owner, String);\n  curfield = Number L;\n  cursetting = Number L;\n  maskbits = Number;\n  curfield = (input_field_config *)ioconfig_alloc_field(\n      curport, Number, Number, Number, (const char *)&loc_8 + Number);\n  cursetting = Number L;\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, Number, (const char *)&loc_10 + Number);\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, curfield->mask & Number, (const char *)&loc_14 + Number);\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, curfield->mask & Number, (const char *)&loc_1A + Number);\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, curfield->mask & Number, (const char *)&loc_21 + Number);\n  curfield = (input_field_config *)ioconfig_alloc_field(\n      curport, Number, Number, Number, (const char *)&loc_8 + Number);\n  cursetting = Number L;\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, Number, (const char *)&loc_10 + Number);\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, curfield->mask & Number, (const char *)&loc_14 + Number);\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, curfield->mask & Number, (const char *)&loc_1A + Number);\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, curfield->mask & Number, (const char *)&loc_21 + Number);\n  astring ~astring(&<span class=\"supfact\">fulltag</span>);\n}", "var": [{"name": "v4", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "fulltag", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "magnesiumlinux", "repo_name": "keylock", "path": "magnesiumlinux/keylock/437098e062337ec900e212f8e3d51345eee6af2e1435d517e6db74a2877e9be5", "path_in_repo": "magnesiumlinux/keylock//server.o", "objdump": "00000000000005f6 <do_server>:\n 5f6:\t55                   \tpush   %rbp\n 5f7:\t48 89 e5             \tmov    %rsp,%rbp\n 5fa:\t48 81 ec a0 00 00 00 \tsub    $0xa0,%rsp\n 601:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 606:\te8 00 00 00 00       \tcallq  60b <do_server+0x15>\n 60b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 610:\te8 00 00 00 00       \tcallq  615 <do_server+0x1f>\n 615:\t48 c7 85 60 ff ff ff \tmovq   $0x0,-0xa0(%rbp)\n 61c:\t00 00 00 00 \n 620:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n 627:\t48 83 c0 08          \tadd    $0x8,%rax\n 62b:\t48 89 c7             \tmov    %rax,%rdi\n 62e:\te8 00 00 00 00       \tcallq  633 <do_server+0x3d>\n 633:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n 63a:\tba 00 00 00 00       \tmov    $0x0,%edx\n 63f:\t48 89 c6             \tmov    %rax,%rsi\n 642:\tbf 0f 00 00 00       \tmov    $0xf,%edi\n 647:\te8 00 00 00 00       \tcallq  64c <do_server+0x56>\n 64c:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n 653:\tba 00 00 00 00       \tmov    $0x0,%edx\n 658:\t48 89 c6             \tmov    %rax,%rsi\n 65b:\tbf 0a 00 00 00       \tmov    $0xa,%edi\n 660:\te8 00 00 00 00       \tcallq  665 <do_server+0x6f>\n 665:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 66a:\te8 00 00 00 00       \tcallq  66f <do_server+0x79>\n 66f:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 672:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 679 <do_server+0x83>\n 679:\t48 89 c1             \tmov    %rax,%rcx\n 67c:\tba 07 00 00 00       \tmov    $0x7,%edx\n 681:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 686:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 68b:\te8 00 00 00 00       \tcallq  690 <do_server+0x9a>\n 690:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 693:\tba 00 00 00 00       \tmov    $0x0,%edx\n 698:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 69d:\t89 c7                \tmov    %eax,%edi\n 69f:\te8 00 00 00 00       \tcallq  6a4 <do_server+0xae>\n 6a4:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n 6a7:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 6aa:\t89 c7                \tmov    %eax,%edi\n 6ac:\te8 00 00 00 00       \tcallq  6b1 <do_server+0xbb>\n 6b1:\teb dd                \tjmp    690 <do_server+0x9a>\n", "code_s": "void __noreturn do_server() {\n  struct sigaction <span class=\"supfact\">v0</span>;\n  int v1;\n  int fd;\n  mote_test_init();\n  read_data();\n  <span class=\"supfact\">v0</span>.sa_handler = (__sighandler_t)write_data;\n  sigfillset(&<span class=\"supfact\">v0</span>.sa_mask);\n  sigaction(Number, &<span class=\"supfact\">v0</span>, Number L);\n  sigaction(Number, &<span class=\"supfact\">v0</span>, Number L);\n  fd = waitsocket(Number L);\n  fwrite(String, Number, Number, stderr);\n  while (Number) {\n    v1 = accept(fd, Number L, Number L);\n    serve(v1);\n  }\n}", "code_t": "int __cdecl __noreturn do_server() {\n  sigaction <span class=\"supfact\">siggy</span>;\n  int connsock;\n  int master_sock;\n  mote_test_init();\n  read_data();\n  <span class=\"supfact\">siggy</span>.sa_handler = (__sighandler_t)write_data;\n  sigfillset(&<span class=\"supfact\">siggy</span>.sa_mask);\n  sigaction_0(Number, &<span class=\"supfact\">siggy</span>, Number L);\n  sigaction_0(Number, &<span class=\"supfact\">siggy</span>, Number L);\n  master_sock = waitsocket();\n  fwrite(String, Number, Number, stderr);\n  while (Number) {\n    connsock = accept(master_sock, Number L, Number L);\n    serve(connsock);\n  }\n}", "var": [{"name": "v0", "type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }", "ref_name": "siggy", "ref_type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/3da554e7be727d06ab7f4e2330fe40c06e49dc1c481fc3ec5a772104aacc182a", "path_in_repo": "XanClic/qemu//hw/scsi/megasas.o", "objdump": "0000000000000ba6 <_nocheck__trace_megasas_initq_mismatch>:\n     ba6:\t55                   \tpush   %rbp\n     ba7:\t48 89 e5             \tmov    %rsp,%rbp\n     baa:\t41 54                \tpush   %r12\n     bac:\t53                   \tpush   %rbx\n     bad:\t48 83 ec 30          \tsub    $0x30,%rsp\n     bb1:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n     bb4:\t89 75 c8             \tmov    %esi,-0x38(%rbp)\n     bb7:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     bbe:\t00 00 \n     bc0:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     bc4:\t31 c0                \txor    %eax,%eax\n     bc6:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # bcc <_nocheck__trace_megasas_initq_mismatch+0x26>\n     bcc:\t85 c0                \ttest   %eax,%eax\n     bce:\t0f 95 c0             \tsetne  %al\n     bd1:\t0f b6 c0             \tmovzbl %al,%eax\n     bd4:\t48 85 c0             \ttest   %rax,%rax\n     bd7:\t74 63                \tje     c3c <_nocheck__trace_megasas_initq_mismatch+0x96>\n     bd9:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # be0 <_nocheck__trace_megasas_initq_mismatch+0x3a>\n     be0:\t66 85 c0             \ttest   %ax,%ax\n     be3:\t74 57                \tje     c3c <_nocheck__trace_megasas_initq_mismatch+0x96>\n     be5:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n     bea:\te8 3e fc ff ff       \tcallq  82d <qemu_loglevel_mask>\n     bef:\t84 c0                \ttest   %al,%al\n     bf1:\t74 49                \tje     c3c <_nocheck__trace_megasas_initq_mismatch+0x96>\n     bf3:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     bf7:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     bfc:\t48 89 c7             \tmov    %rax,%rdi\n     bff:\te8 00 00 00 00       \tcallq  c04 <_nocheck__trace_megasas_initq_mismatch+0x5e>\n     c04:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     c08:\t49 89 c4             \tmov    %rax,%r12\n     c0b:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     c0f:\t48 89 c3             \tmov    %rax,%rbx\n     c12:\te8 00 00 00 00       \tcallq  c17 <_nocheck__trace_megasas_initq_mismatch+0x71>\n     c17:\t8b 4d c8             \tmov    -0x38(%rbp),%ecx\n     c1a:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n     c1d:\t41 89 c9             \tmov    %ecx,%r9d\n     c20:\t41 89 d0             \tmov    %edx,%r8d\n     c23:\t4c 89 e1             \tmov    %r12,%rcx\n     c26:\t48 89 da             \tmov    %rbx,%rdx\n     c29:\t89 c6                \tmov    %eax,%esi\n     c2b:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # c32 <_nocheck__trace_megasas_initq_mismatch+0x8c>\n     c32:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     c37:\te8 00 00 00 00       \tcallq  c3c <_nocheck__trace_megasas_initq_mismatch+0x96>\n     c3c:\t90                   \tnop\n     c3d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     c41:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n     c48:\t00 00 \n     c4a:\t74 05                \tje     c51 <_nocheck__trace_megasas_initq_mismatch+0xab>\n     c4c:\te8 00 00 00 00       \tcallq  c51 <_nocheck__trace_megasas_initq_mismatch+0xab>\n     c51:\t48 83 c4 30          \tadd    $0x30,%rsp\n     c55:\t5b                   \tpop    %rbx\n     c56:\t41 5c                \tpop    %r12\n     c58:\t5d                   \tpop    %rbp\n     c59:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_megasas_initq_mismatch(\n    unsigned int a1, unsigned int a2) {\n  __suseconds_t v2;\n  __time_t v3;\n  unsigned int v4;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v7;\n  v7 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_INITQ_MISMATCH_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v2 = <span class=\"supfact\">tv</span>.tv_usec;\n    v3 = <span class=\"supfact\">tv</span>.tv_sec;\n    v4 = qemu_get_thread_id();\n    qemu_log(String, v4, v3, v2, a1, a2);\n  }\n  return __readfsqword(Number) ^ v7;\n}", "code_t": "void __cdecl nocheck__trace_megasas_initq_mismatch(int queue_len, int fw_cmds) {\n  __suseconds_t v2;\n  __time_t v3;\n  unsigned int v4;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v6;\n  v6 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_INITQ_MISMATCH_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v2 = <span class=\"supfact\">_now</span>.tv_usec;\n    v3 = <span class=\"supfact\">_now</span>.tv_sec;\n    v4 = qemu_get_thread_id();\n    qemu_log(String, v4, v3, v2, (unsigned int)queue_len,\n             (unsigned int)fw_cmds);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "jerlich", "repo_name": "rt-fsm", "path": "jerlich/rt-fsm/60df64061cfd42fe7c8f3d2633b13e050d54a7a1f46b86639c967bca55a358c8", "path_in_repo": "jerlich/rt-fsm/addons/SoundTrig/SoundServer.o", "objdump": "0000000000000000 <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t53                   \tpush   %rbx\n   5:\t48 83 ec 48          \tsub    $0x48,%rsp\n   9:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n   d:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n  11:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  15:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  19:\t48 89 d6             \tmov    %rdx,%rsi\n  1c:\t48 89 c7             \tmov    %rax,%rdi\n  1f:\te8 00 00 00 00       \tcallq  24 <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0x24>\n  24:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n  28:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  2c:\t48 89 c7             \tmov    %rax,%rdi\n  2f:\te8 00 00 00 00       \tcallq  34 <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0x34>\n  34:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n  38:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n  3c:\t48 8d 45 c8          \tlea    -0x38(%rbp),%rax\n  40:\t48 89 d6             \tmov    %rdx,%rsi\n  43:\t48 89 c7             \tmov    %rax,%rdi\n  46:\te8 00 00 00 00       \tcallq  4b <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0x4b>\n  4b:\t84 c0                \ttest   %al,%al\n  4d:\t75 32                \tjne    81 <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0x81>\n  4f:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  53:\t48 89 c7             \tmov    %rax,%rdi\n  56:\te8 00 00 00 00       \tcallq  5b <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0x5b>\n  5b:\t48 8d 45 c8          \tlea    -0x38(%rbp),%rax\n  5f:\t48 89 c7             \tmov    %rax,%rdi\n  62:\te8 00 00 00 00       \tcallq  67 <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0x67>\n  67:\t48 89 c2             \tmov    %rax,%rdx\n  6a:\t48 8b 4d b0          \tmov    -0x50(%rbp),%rcx\n  6e:\t48 8d 45 de          \tlea    -0x22(%rbp),%rax\n  72:\t48 89 ce             \tmov    %rcx,%rsi\n  75:\t48 89 c7             \tmov    %rax,%rdi\n  78:\te8 00 00 00 00       \tcallq  7d <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0x7d>\n  7d:\t84 c0                \ttest   %al,%al\n  7f:\t74 07                \tje     88 <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0x88>\n  81:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  86:\teb 05                \tjmp    8d <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0x8d>\n  88:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  8d:\t84 c0                \ttest   %al,%al\n  8f:\t74 5b                \tje     ec <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0xec>\n  91:\t48 8b 5d b8          \tmov    -0x48(%rbp),%rbx\n  95:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  99:\t48 89 c7             \tmov    %rax,%rdi\n  9c:\te8 00 00 00 00       \tcallq  a1 <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0xa1>\n  a1:\t48 89 c2             \tmov    %rax,%rdx\n  a4:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  a8:\t48 89 d6             \tmov    %rdx,%rsi\n  ab:\t48 89 c7             \tmov    %rax,%rdi\n  ae:\te8 00 00 00 00       \tcallq  b3 <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0xb3>\n  b3:\t48 8d 55 c8          \tlea    -0x38(%rbp),%rdx\n  b7:\t48 8d 45 e8          \tlea    -0x18(%rbp),%rax\n  bb:\t48 89 d6             \tmov    %rdx,%rsi\n  be:\t48 89 c7             \tmov    %rax,%rdi\n  c1:\te8 00 00 00 00       \tcallq  c6 <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0xc6>\n  c6:\t48 8d 4d df          \tlea    -0x21(%rbp),%rcx\n  ca:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n  ce:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  d2:\t49 89 c8             \tmov    %rcx,%r8\n  d5:\t48 89 d1             \tmov    %rdx,%rcx\n  d8:\tba 00 00 00 00       \tmov    $0x0,%edx\n  dd:\t48 89 c6             \tmov    %rax,%rsi\n  e0:\t48 89 df             \tmov    %rbx,%rdi\n  e3:\te8 00 00 00 00       \tcallq  e8 <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0xe8>\n  e8:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n  ec:\t48 8d 45 c8          \tlea    -0x38(%rbp),%rax\n  f0:\t48 89 c7             \tmov    %rax,%rdi\n  f3:\te8 00 00 00 00       \tcallq  f8 <_ZNSt3mapIjN14AbstractUserSM9SoundFileESt4lessIjESaISt4pairIKjS1_EEEixEOj+0xf8>\n  f8:\t48 83 c0 08          \tadd    $0x8,%rax\n  fc:\t48 83 c4 48          \tadd    $0x48,%rsp\n 100:\t5b                   \tpop    %rbx\n 101:\t5d                   \tpop    %rbp\n 102:\tc3                   \tretq   ", "code_s": "__int64 __fastcall std map<unsigned int, AbstractUserSM SoundFile>\noperator[](__int64 a1, __int64 a2) {\n  __int64 v2;\n  __int64 v4;\n  __int64 v6;\n  __int64 v7;\n  char <span class=\"supfact\">v8</span>;\n  char <span class=\"supfact\">v9</span>;\n  char v10[Number];\n  __int64 v11[Number];\n  v6 = std map<unsigned int, AbstractUserSM SoundFile> lower_bound(a1, a2);\n  v7 = std map<unsigned int, AbstractUserSM SoundFile> end(a1);\n  if ((unsigned __int8)std operator==(&v6, &v7) ||\n      (std map<unsigned int, AbstractUserSM SoundFile> key_comp(a1),\n       v2 = std _Rb_tree_iterator<\n           std pair<unsigned int const, AbstractUserSM SoundFile>>\n       operator*(&v6),\n       (unsigned __int8)std less<unsigned int> operator()(&<span class=\"supfact\">v8</span>,\n                                                          a2, v2))) {\n    v4 = std move<unsigned int &>(a2);\n    std forward_as_tuple<unsigned int>(v10, v4);\n    std _Rb_tree_const_iterator<\n        std pair<unsigned int const, AbstractUserSM SoundFile>>\n        _Rb_tree_const_iterator(v11, &v6);\n    v6 = std _Rb_tree<\n        unsigned int, std pair<unsigned int const, AbstractUserSM SoundFile>,\n        std _Select1st<std pair<unsigned int const, AbstractUserSM SoundFile>>,\n        std less<unsigned int>,\n        std allocator<std pair<unsigned int const, AbstractUserSM SoundFile>>>\n    _M_emplace_hint_unique<std piecewise_construct_t const &,\n                           std tuple<unsigned int &&>, std tuple<>>(\n        a1, v11[Number], &std piecewise_construct, v10, &<span class=\"supfact\">v9</span>);\n  }\n  return std _Rb_tree_iterator<\n             std pair<unsigned int const, AbstractUserSM SoundFile>>\n         operator*(&v6) + Number;\n}", "code_t": "std map<unsigned int, AbstractUserSM SoundFile> mapped_type *__cdecl std\n    map<unsigned int, AbstractUserSM SoundFile>\n    operator[](std map<unsigned int, AbstractUserSM SoundFile> *const this,\n               std map<unsigned int, AbstractUserSM SoundFile> key_type *__k) {\n  std _Rb_tree_iterator<std pair<unsigned int const, AbstractUserSM SoundFile>>\n      reference v2;\n  unsigned int *v4;\n  const std piecewise_construct_t *v5;\n  std map<unsigned int, AbstractUserSM SoundFile> iterator __i;\n  std _Rb_tree_iterator<std pair<unsigned int const, AbstractUserSM SoundFile>>\n      _Self __y;\n  std less<unsigned int> <span class=\"supfact\">v9</span>;\n  std tuple<> <span class=\"supfact\">v10</span>;\n  std tuple<unsigned int &&> v11;\n  std _Rb_tree_const_iterator<\n      std pair<unsigned int const, AbstractUserSM SoundFile>>\n      __pos;\n  __i._M_node =\n      std map<unsigned int, AbstractUserSM SoundFile> lower_bound(this, __k)\n          ._M_node;\n  __y._M_node =\n      std map<unsigned int, AbstractUserSM SoundFile> end(this)._M_node;\n  if (std operator==(&__i, &__y) ||\n      (std map<unsigned int, AbstractUserSM SoundFile> key_comp(this),\n       v2 = std _Rb_tree_iterator<\n           std pair<unsigned int const, AbstractUserSM SoundFile>>\n       operator*(&__i),\n       std less<unsigned int> operator()(&<span class=\"supfact\">v9</span>, __k,\n                                         &v2->first))) {\n    v4 = std move<unsigned int &>(__k);\n    std forward_as_tuple<unsigned int>((unsigned int *)&v11, v4);\n    std _Rb_tree_const_iterator<\n        std pair<unsigned int const, AbstractUserSM SoundFile>>\n        _Rb_tree_const_iterator(&__pos, &__i);\n    __i._M_node =\n        std _Rb_tree<unsigned int,\n                     std pair<unsigned int const, AbstractUserSM SoundFile>,\n                     std _Select1st<std pair<unsigned int const,\n                                             AbstractUserSM SoundFile>>,\n                     std less<unsigned int>,\n                     std allocator<std pair<unsigned int const,\n                                            AbstractUserSM SoundFile>>>\n        _M_emplace_hint_unique<std piecewise_construct_t const &,\n                               std tuple<unsigned int &&>, std tuple<>>(\n            &this->_M_t, __pos, &std piecewise_construct, &v11,\n            &<span class=\"supfact\">v10</span>, v5, (std tuple<unsigned int &&> *)__k,\n            (std tuple<> *)this)\n            ._M_node;\n  }\n  return &std _Rb_tree_iterator<\n              std pair<unsigned int const, AbstractUserSM SoundFile>>\n          operator*(&__i)->second;\n}", "var": [{"name": "v9", "type": "char", "ref_name": "v10", "ref_type": "struct std::tuple<> { __int8[1] gap0; }"}, {"name": "v8", "type": "char", "ref_name": "v9", "ref_type": "struct std::less<unsigned int> { std::binary_function<unsigned int,unsigned int,bool> baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "HarryWei", "repo_name": "qemu", "path": "HarryWei/qemu/b50fcc460b388d1d26b145f13fd0fbd6de9a50c6ca865361dfb49e04cb6ef893", "path_in_repo": "HarryWei/qemu//qga/commands-posix.o", "objdump": "000000000000190a <qmp_guest_fstrim>:\n    190a:\t55                   \tpush   %rbp\n    190b:\t48 89 e5             \tmov    %rsp,%rbp\n    190e:\t53                   \tpush   %rbx\n    190f:\t48 83 ec 78          \tsub    $0x78,%rsp\n    1913:\t89 f8                \tmov    %edi,%eax\n    1915:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n    1919:\t48 89 55 88          \tmov    %rdx,-0x78(%rbp)\n    191d:\t88 45 9c             \tmov    %al,-0x64(%rbp)\n    1920:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    1927:\t00 00 \n    1929:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    192d:\t31 c0                \txor    %eax,%eax\n    192f:\tc7 45 a8 00 00 00 00 \tmovl   $0x0,-0x58(%rbp)\n    1936:\t48 c7 45 b0 00 00 00 \tmovq   $0x0,-0x50(%rbp)\n    193d:\t00 \n    193e:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n    1945:\t00 \n    1946:\t48 c7 45 d8 ff ff ff \tmovq   $0xffffffffffffffff,-0x28(%rbp)\n    194d:\tff \n    194e:\t80 7d 9c 00          \tcmpb   $0x0,-0x64(%rbp)\n    1952:\t74 06                \tje     195a <qmp_guest_fstrim+0x50>\n    1954:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    1958:\teb 05                \tjmp    195f <qmp_guest_fstrim+0x55>\n    195a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    195f:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    1963:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 196a <qmp_guest_fstrim+0x60>\n    196a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    196f:\te8 00 00 00 00       \tcallq  1974 <qmp_guest_fstrim+0x6a>\n    1974:\t48 c7 45 c0 00 00 00 \tmovq   $0x0,-0x40(%rbp)\n    197b:\t00 \n    197c:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    1980:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    1984:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n    1988:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    198c:\t48 89 d6             \tmov    %rdx,%rsi\n    198f:\t48 89 c7             \tmov    %rax,%rdi\n    1992:\te8 12 f8 ff ff       \tcallq  11a9 <build_fs_mount_list>\n    1997:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    199b:\t48 85 c0             \ttest   %rax,%rax\n    199e:\t74 18                \tje     19b8 <qmp_guest_fstrim+0xae>\n    19a0:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n    19a4:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    19a8:\t48 89 d6             \tmov    %rdx,%rsi\n    19ab:\t48 89 c7             \tmov    %rax,%rdi\n    19ae:\te8 00 00 00 00       \tcallq  19b3 <qmp_guest_fstrim+0xa9>\n    19b3:\te9 03 01 00 00       \tjmpq   1abb <qmp_guest_fstrim+0x1b1>\n    19b8:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    19bc:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n    19c0:\te9 de 00 00 00       \tjmpq   1aa3 <qmp_guest_fstrim+0x199>\n    19c5:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    19c9:\t48 8b 00             \tmov    (%rax),%rax\n    19cc:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    19d1:\t48 89 c7             \tmov    %rax,%rdi\n    19d4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    19d9:\te8 00 00 00 00       \tcallq  19de <qmp_guest_fstrim+0xd4>\n    19de:\t89 45 ac             \tmov    %eax,-0x54(%rbp)\n    19e1:\t83 7d ac ff          \tcmpl   $0xffffffff,-0x54(%rbp)\n    19e5:\t75 33                \tjne    1a1a <qmp_guest_fstrim+0x110>\n    19e7:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    19eb:\t48 8b 18             \tmov    (%rax),%rbx\n    19ee:\te8 00 00 00 00       \tcallq  19f3 <qmp_guest_fstrim+0xe9>\n    19f3:\t8b 30                \tmov    (%rax),%esi\n    19f5:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    19f9:\t49 89 d8             \tmov    %rbx,%r8\n    19fc:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 1a03 <qmp_guest_fstrim+0xf9>\n    1a03:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1a08:\t48 89 c7             \tmov    %rax,%rdi\n    1a0b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1a10:\te8 00 00 00 00       \tcallq  1a15 <qmp_guest_fstrim+0x10b>\n    1a15:\te9 95 00 00 00       \tjmpq   1aaf <qmp_guest_fstrim+0x1a5>\n    1a1a:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    1a1e:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n    1a21:\tbe 79 58 18 c0       \tmov    $0xc0185879,%esi\n    1a26:\t89 c7                \tmov    %eax,%edi\n    1a28:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1a2d:\te8 00 00 00 00       \tcallq  1a32 <qmp_guest_fstrim+0x128>\n    1a32:\t89 45 a8             \tmov    %eax,-0x58(%rbp)\n    1a35:\t83 7d a8 ff          \tcmpl   $0xffffffff,-0x58(%rbp)\n    1a39:\t75 52                \tjne    1a8d <qmp_guest_fstrim+0x183>\n    1a3b:\te8 00 00 00 00       \tcallq  1a40 <qmp_guest_fstrim+0x136>\n    1a40:\t8b 00                \tmov    (%rax),%eax\n    1a42:\t83 f8 19             \tcmp    $0x19,%eax\n    1a45:\t74 46                \tje     1a8d <qmp_guest_fstrim+0x183>\n    1a47:\te8 00 00 00 00       \tcallq  1a4c <qmp_guest_fstrim+0x142>\n    1a4c:\t8b 00                \tmov    (%rax),%eax\n    1a4e:\t83 f8 5f             \tcmp    $0x5f,%eax\n    1a51:\t74 3a                \tje     1a8d <qmp_guest_fstrim+0x183>\n    1a53:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    1a57:\t48 8b 18             \tmov    (%rax),%rbx\n    1a5a:\te8 00 00 00 00       \tcallq  1a5f <qmp_guest_fstrim+0x155>\n    1a5f:\t8b 30                \tmov    (%rax),%esi\n    1a61:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    1a65:\t49 89 d8             \tmov    %rbx,%r8\n    1a68:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 1a6f <qmp_guest_fstrim+0x165>\n    1a6f:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1a74:\t48 89 c7             \tmov    %rax,%rdi\n    1a77:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1a7c:\te8 00 00 00 00       \tcallq  1a81 <qmp_guest_fstrim+0x177>\n    1a81:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n    1a84:\t89 c7                \tmov    %eax,%edi\n    1a86:\te8 00 00 00 00       \tcallq  1a8b <qmp_guest_fstrim+0x181>\n    1a8b:\teb 22                \tjmp    1aaf <qmp_guest_fstrim+0x1a5>\n    1a8d:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n    1a90:\t89 c7                \tmov    %eax,%edi\n    1a92:\te8 00 00 00 00       \tcallq  1a97 <qmp_guest_fstrim+0x18d>\n    1a97:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    1a9b:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    1a9f:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n    1aa3:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n    1aa8:\t0f 85 17 ff ff ff    \tjne    19c5 <qmp_guest_fstrim+0xbb>\n    1aae:\t90                   \tnop\n    1aaf:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    1ab3:\t48 89 c7             \tmov    %rax,%rdi\n    1ab6:\te8 36 f6 ff ff       \tcallq  10f1 <free_fs_mount_list>\n    1abb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1abf:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    1ac6:\t00 00 \n    1ac8:\t74 05                \tje     1acf <qmp_guest_fstrim+0x1c5>\n    1aca:\te8 00 00 00 00       \tcallq  1acf <qmp_guest_fstrim+0x1c5>\n    1acf:\t48 83 c4 78          \tadd    $0x78,%rsp\n    1ad3:\t5b                   \tpop    %rbx\n    1ad4:\t5d                   \tpop    %rbp\n    1ad5:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall qmp_guest_fstrim(char a1, __int64 a2, __int64 a3) {\n  const char *v4;\n  int *v5;\n  const char *v6;\n  int *v7;\n  int fd;\n  __int64 v11;\n  const char **i;\n  __int64 <span class=\"supfact\">v13</span>[Number];\n  __int64 <span class=\"supfact\">v14</span>[Number];\n  unsigned __int64 v15;\n  v15 = __readfsqword(Number);\n  v11 = Number L;\n  <span class=\"supfact\">v14</span>[Number] = Number L;\n  <span class=\"supfact\">v14</span>[Number] = Number;\n  if (!a1)\n    a2 = Number L;\n  <span class=\"supfact\">v14</span>[Number] = a2;\n  slog(String);\n  <span class=\"supfact\">v13</span>[Number] = Number L;\n  <span class=\"supfact\">v13</span>[Number] = (__int64)<span class=\"supfact\">v13</span>;\n  build_fs_mount_list((__int64)<span class=\"supfact\">v13</span>, (__int64)&v11);\n  if (v11) {\n    error_propagate(a3, v11);\n  } else {\n    for (i = (const char **)<span class=\"supfact\">v13</span>[Number]; i;\n         i = (const char **)i[Number]) {\n      fd = qemu_open(*i, Number L);\n      if (fd == Number) {\n        v4 = *i;\n        v5 = _errno_location();\n        error_set_errno(a3, (unsigned int)*v5, Number L, String, v4);\n        break;\n      }\n      if (ioctl(fd, Number, <span class=\"supfact\">v14</span>) == Number &&\n          *_errno_location() != Number && *_errno_location() != Number) {\n        v6 = *i;\n        v7 = _errno_location();\n        error_set_errno(a3, (unsigned int)*v7, Number L, String, v6);\n        close(fd);\n        break;\n      }\n      close(fd);\n    }\n    free_fs_mount_list(<span class=\"supfact\">v13</span>);\n  }\n  return __readfsqword(Number) ^ v15;\n}", "code_t": "void __cdecl qmp_guest_fstrim(bool has_minimum, int64_t minimum,\n                              Error_0 **err) {\n  char *v4;\n  int *v5;\n  char *v6;\n  int *v7;\n  int fd;\n  Error_0 *local_err;\n  FsMount *mount;\n  FsMountList_0 <span class=\"supfact\">mounts</span>;\n  fstrim_range <span class=\"supfact\">r</span>;\n  unsigned __int64 v14;\n  v14 = __readfsqword(Number);\n  local_err = Number L;\n  <span class=\"supfact\">r</span>.start = Number L;\n  <span class=\"supfact\">r</span>.len = Number;\n  if (!has_minimum)\n    minimum = Number L;\n  <span class=\"supfact\">r</span>.minlen = minimum;\n  slog(String);\n  <span class=\"supfact\">mounts</span>.tqh_first = Number L;\n  <span class=\"supfact\">mounts</span>.tqh_last = (FsMount **)&<span class=\"supfact\">mounts</span>;\n  build_fs_mount_list(&<span class=\"supfact\">mounts</span>, &local_err);\n  if (local_err) {\n    error_propagate(err, local_err);\n  } else {\n    for (mount = <span class=\"supfact\">mounts</span>.tqh_first; mount;\n         mount = (FsMount *)mount->next.tqe_next) {\n      fd = qemu_open(mount->dirname, Number L);\n      if (fd == Number) {\n        v4 = mount->dirname;\n        v5 = _errno_location();\n        error_set_errno(err, (unsigned int)*v5, Number L, String, v4);\n        break;\n      }\n      if (ioctl(fd, Number, &<span class=\"supfact\">r</span>) == Number &&\n          *_errno_location() != Number && *_errno_location() != Number) {\n        v6 = mount->dirname;\n        v7 = _errno_location();\n        error_set_errno(err, (unsigned int)*v7, Number L, String, v6);\n        close(fd);\n        break;\n      }\n      close(fd);\n    }\n    free_fs_mount_list(&<span class=\"supfact\">mounts</span>);\n  }\n}", "var": [{"name": "v14", "type": "struct fstrim_range { __u64 start; __u64 len; __u64 minlen; }", "ref_name": "r", "ref_type": "struct fstrim_range { __u64 start; __u64 len; __u64 minlen; }"}, {"name": "v13", "type": "struct FsMountList_0 { FsMount * tqh_first; FsMount ** tqh_last; }", "ref_name": "mounts", "ref_type": "struct FsMountList_0 { FsMount * tqh_first; FsMount ** tqh_last; }"}], "body_in_train": false}, {"repo_owner": "silentbicycle", "repo_name": "theft", "path": "silentbicycle/theft/87c15ad1a2fbbed817818486acb7ddc78f0c1d916a84ede0f59adef464ab4e28", "path_in_repo": "silentbicycle/theft//build/test_theft_autoshrink.o", "objdump": "00000000000038a5 <ll_prop>:\n    38a5:\t55                   \tpush   %rbp\n    38a6:\t48 89 e5             \tmov    %rsp,%rbp\n    38a9:\t48 81 ec a0 01 00 00 \tsub    $0x1a0,%rsp\n    38b0:\t48 89 bd 78 fe ff ff \tmov    %rdi,-0x188(%rbp)\n    38b7:\t48 89 b5 70 fe ff ff \tmov    %rsi,-0x190(%rbp)\n    38be:\t48 89 95 68 fe ff ff \tmov    %rdx,-0x198(%rbp)\n    38c5:\te8 00 00 00 00       \tcallq  38ca <ll_prop+0x25>\n    38ca:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    38ce:\t48 c7 45 a0 00 00 00 \tmovq   $0x0,-0x60(%rbp)\n    38d5:\t00 \n    38d6:\t48 c7 45 a8 00 00 00 \tmovq   $0x0,-0x58(%rbp)\n    38dd:\t00 \n    38de:\t48 c7 45 b0 00 00 00 \tmovq   $0x0,-0x50(%rbp)\n    38e5:\t00 \n    38e6:\t48 c7 45 b8 00 00 00 \tmovq   $0x0,-0x48(%rbp)\n    38ed:\t00 \n    38ee:\t48 c7 45 c0 00 00 00 \tmovq   $0x0,-0x40(%rbp)\n    38f5:\t00 \n    38f6:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n    38fd:\t00 \n    38fe:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n    3905:\t00 \n    3906:\t48 c7 45 d8 00 00 00 \tmovq   $0x0,-0x28(%rbp)\n    390d:\t00 \n    390e:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    3915:\t00 \n    3916:\tc6 45 a0 45          \tmovb   $0x45,-0x60(%rbp)\n    391a:\t48 8d 95 80 fe ff ff \tlea    -0x180(%rbp),%rdx\n    3921:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3926:\tb9 23 00 00 00       \tmov    $0x23,%ecx\n    392b:\t48 89 d7             \tmov    %rdx,%rdi\n    392e:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n    3931:\t48 8b 85 68 fe ff ff \tmov    -0x198(%rbp),%rax\n    3938:\t48 89 85 80 fe ff ff \tmov    %rax,-0x180(%rbp)\n    393f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3946 <ll_prop+0xa1>\n    3946:\t48 89 85 b8 fe ff ff \tmov    %rax,-0x148(%rbp)\n    394d:\t48 8b 85 70 fe ff ff \tmov    -0x190(%rbp),%rax\n    3954:\t48 89 85 f0 fe ff ff \tmov    %rax,-0x110(%rbp)\n    395b:\t48 8b 85 78 fe ff ff \tmov    -0x188(%rbp),%rax\n    3962:\t48 89 85 08 ff ff ff \tmov    %rax,-0xf8(%rbp)\n    3969:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    396d:\t48 89 85 10 ff ff ff \tmov    %rax,-0xf0(%rbp)\n    3974:\t48 8d 05 c0 fe ff ff \tlea    -0x140(%rip),%rax        # 383b <ll_trial_pre_hook>\n    397b:\t48 89 85 58 ff ff ff \tmov    %rax,-0xa8(%rbp)\n    3982:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n    3986:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n    398a:\t48 8d 85 80 fe ff ff \tlea    -0x180(%rbp),%rax\n    3991:\t48 89 c7             \tmov    %rax,%rdi\n    3994:\te8 00 00 00 00       \tcallq  3999 <ll_prop+0xf4>\n    3999:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    399c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 39a3 <ll_prop+0xfe>\n    39a3:\t8b 40 44             \tmov    0x44(%rax),%eax\n    39a6:\t8d 50 01             \tlea    0x1(%rax),%edx\n    39a9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 39b0 <ll_prop+0x10b>\n    39b0:\t89 50 44             \tmov    %edx,0x44(%rax)\n    39b3:\t83 7d f4 01          \tcmpl   $0x1,-0xc(%rbp)\n    39b7:\t74 52                \tje     3a0b <ll_prop+0x166>\n    39b9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 39c0 <ll_prop+0x11b>\n    39c0:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 39c7 <ll_prop+0x122>\n    39c7:\t48 89 50 50          \tmov    %rdx,0x50(%rax)\n    39cb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 39d2 <ll_prop+0x12d>\n    39d2:\tc7 40 48 89 03 00 00 \tmovl   $0x389,0x48(%rax)\n    39d9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 39e0 <ll_prop+0x13b>\n    39e0:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 39e7 <ll_prop+0x142>\n    39e7:\t48 89 50 58          \tmov    %rdx,0x58(%rax)\n    39eb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 39f2 <ll_prop+0x14d>\n    39f2:\t0f b6 00             \tmovzbl (%rax),%eax\n    39f5:\t0f b6 c0             \tmovzbl %al,%eax\n    39f8:\t83 e0 04             \tand    $0x4,%eax\n    39fb:\t85 c0                \ttest   %eax,%eax\n    39fd:\t74 05                \tje     3a04 <ll_prop+0x15f>\n    39ff:\te8 00 00 00 00       \tcallq  3a04 <ll_prop+0x15f>\n    3a04:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    3a09:\teb 14                \tjmp    3a1f <ll_prop+0x17a>\n    3a0b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3a12 <ll_prop+0x16d>\n    3a12:\t48 c7 40 58 00 00 00 \tmovq   $0x0,0x58(%rax)\n    3a19:\t00 \n    3a1a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3a1f:\tc9                   \tleaveq \n    3a20:\tc3                   \tretq   ", "code_s": "__int64 __fastcall ll_prop(__int64 a1, __int64 a2, __int64 a3) {\n  __int64 result;\n  __int64 <span class=\"supfact\">v5</span>[Number];\n  __int64 v6[Number];\n  int v7;\n  __int64 v8;\n  v8 = theft_seed_of_time();\n  v6[Number] = Number L;\n  v6[Number] = Number L;\n  v6[Number] = Number L;\n  v6[Number] = Number L;\n  v6[Number] = Number L;\n  v6[Number] = Number L;\n  v6[Number] = Number L;\n  v6[Number] = Number L;\n  v6[Number] = Number L;\n  memset(<span class=\"supfact\">v5</span>, Number, Number);\n  <span class=\"supfact\">v5</span>[Number] = a3;\n  <span class=\"supfact\">v5</span>[Number] = (__int64)ll_info;\n  <span class=\"supfact\">v5</span>[Number] = a2;\n  <span class=\"supfact\">v5</span>[Number] = a1;\n  <span class=\"supfact\">v5</span>[Number] = v8;\n  <span class=\"supfact\">v5</span>[Number] = (__int64)ll_trial_pre_hook;\n  <span class=\"supfact\">v5</span>[Number] = (__int64)v6;\n  v7 = theft_run(<span class=\"supfact\">v5</span>, a2, <span class=\"supfact\">v5</span>);\n  ++*((_DWORD *)&greatest_info + Number);\n  if (v7 == Number) {\n    *((_QWORD *)&greatest_info + Number) = Number L;\n    result = Number L;\n  } else {\n    *((_QWORD *)&greatest_info + Number) = String;\n    *((_DWORD *)&greatest_info + Number) = Number;\n    *((_QWORD *)&greatest_info + Number) = String;\n    if ((greatest_info & Number) != Number)\n      abort();\n    result = Number;\n  }\n  return result;\n}", "code_t": "greatest_test_res __cdecl ll_prop(size_t trials, const char *name,\n                                  theft_propfun1 *prop) {\n  greatest_test_res result;\n  theft_run_config <span class=\"supfact\">cfg</span>;\n  hook_env env;\n  theft_run_res res;\n  theft_seed seed;\n  seed = theft_seed_of_time();\n  *(_QWORD *)&env.tag = Number L;\n  *(_QWORD *)&env.print_env.tag = Number L;\n  env.print_env.scale_pass = Number L;\n  env.print_env.scale_skip = Number L;\n  env.print_env.scale_dup = Number L;\n  env.print_env.consec_pass = Number L;\n  env.print_env.consec_skip = Number L;\n  env.print_env.consec_dup = Number L;\n  *(_QWORD *)&env.minimal = Number L;\n  memset(&<span class=\"supfact\">cfg</span>, Number, sizeof(<span class=\"supfact\">cfg</span>));\n  <span class=\"supfact\">cfg</span>.prop1 = prop;\n  <span class=\"supfact\">cfg</span>.type_info[Number] = (const theft_type_info *)ll_info;\n  <span class=\"supfact\">cfg</span>.name = name;\n  <span class=\"supfact\">cfg</span>.trials = trials;\n  <span class=\"supfact\">cfg</span>.seed = seed;\n  <span class=\"supfact\">cfg</span>.hooks.trial_pre =\n      (theft_hook_trial_pre_cb *)ll_trial_pre_hook;\n  <span class=\"supfact\">cfg</span>.hooks.env = &env;\n  res =\n      (unsigned int)theft_run(&<span class=\"supfact\">cfg</span>, name, &<span class=\"supfact\">cfg</span>);\n  ++*((_DWORD *)&greatest_info + Number);\n  if (res == THEFT_RUN_FAIL) {\n    *((_QWORD *)&greatest_info + Number) = Number L;\n    result = GREATEST_TEST_RES_PASS;\n  } else {\n    *((_QWORD *)&greatest_info + Number) = String;\n    *((_DWORD *)&greatest_info + Number) = Number;\n    *((_QWORD *)&greatest_info + Number) = String;\n    if ((greatest_info & Number) != Number)\n      abort();\n    result = GREATEST_TEST_RES_FAIL;\n  }\n  return result;\n}", "var": [{"name": "v5", "type": "__unk__", "ref_name": "cfg", "ref_type": "struct theft_run_config { theft_propfun1 * prop1; theft_propfun2 * prop2; theft_propfun3 * prop3; theft_propfun4 * prop4; theft_propfun5 * prop5; theft_propfun6 * prop6; theft_propfun7 * prop7; const theft_type_info *[7] type_info; const char * name; size_t always_seed_count; theft_seed * always_seeds; size_t trials; theft_seed seed; uint8_t bloom_bits; PADDING (7); $1169078AED1AEB32693D11A2FE9368C4 fork; $426D6590B0318B973A92003B274969BB hooks; }"}], "body_in_train": false}, {"repo_owner": "krysmopompas", "repo_name": "OpenFrameworks-ng", "path": "krysmopompas/OpenFrameworks-ng/8705675c38806a2636ef9e01882a4e613a8d555758da6da678ccdb53fbbec44a", "path_in_repo": "krysmopompas/OpenFrameworks-ng/extern/trees/poco/XML/samples/SAXParser/bin/Linux/x86_64/SAXParserd", "objdump": "0000000000402b66 <_ZN9MyHandler19ignorableWhitespaceEPKcii>:\n  402b66:\t55                   \tpush   %rbp\n  402b67:\t48 89 e5             \tmov    %rsp,%rbp\n  402b6a:\t53                   \tpush   %rbx\n  402b6b:\t48 83 ec 58          \tsub    $0x58,%rsp\n  402b6f:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n  402b73:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n  402b77:\t89 55 ac             \tmov    %edx,-0x54(%rbp)\n  402b7a:\t89 4d a8             \tmov    %ecx,-0x58(%rbp)\n  402b7d:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n  402b81:\t48 89 c7             \tmov    %rax,%rdi\n  402b84:\te8 07 f6 ff ff       \tcallq  402190 <_ZNSaIcEC1Ev@plt>\n  402b89:\t48 8d 55 ef          \tlea    -0x11(%rbp),%rdx\n  402b8d:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  402b91:\t48 8d 35 df 14 00 00 \tlea    0x14df(%rip),%rsi        # 404077 <_ZStL6ignore+0x71>\n  402b98:\t48 89 c7             \tmov    %rax,%rdi\n  402b9b:\te8 80 f5 ff ff       \tcallq  402120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_@plt>\n  402ba0:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n  402ba4:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  402ba8:\t48 89 d6             \tmov    %rdx,%rsi\n  402bab:\t48 89 c7             \tmov    %rax,%rdi\n  402bae:\te8 1f 08 00 00       \tcallq  4033d2 <_ZN9MyHandler5whereERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>\n  402bb3:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  402bb7:\t48 89 c7             \tmov    %rax,%rdi\n  402bba:\te8 d1 f4 ff ff       \tcallq  402090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>\n  402bbf:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n  402bc3:\t48 89 c7             \tmov    %rax,%rdi\n  402bc6:\te8 25 f5 ff ff       \tcallq  4020f0 <_ZNSaIcED1Ev@plt>\n  402bcb:\teb 2b                \tjmp    402bf8 <_ZN9MyHandler19ignorableWhitespaceEPKcii+0x92>\n  402bcd:\t48 89 c3             \tmov    %rax,%rbx\n  402bd0:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  402bd4:\t48 89 c7             \tmov    %rax,%rdi\n  402bd7:\te8 b4 f4 ff ff       \tcallq  402090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>\n  402bdc:\teb 03                \tjmp    402be1 <_ZN9MyHandler19ignorableWhitespaceEPKcii+0x7b>\n  402bde:\t48 89 c3             \tmov    %rax,%rbx\n  402be1:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n  402be5:\t48 89 c7             \tmov    %rax,%rdi\n  402be8:\te8 03 f5 ff ff       \tcallq  4020f0 <_ZNSaIcED1Ev@plt>\n  402bed:\t48 89 d8             \tmov    %rbx,%rax\n  402bf0:\t48 89 c7             \tmov    %rax,%rdi\n  402bf3:\te8 88 f5 ff ff       \tcallq  402180 <_Unwind_Resume@plt>\n  402bf8:\t48 83 c4 58          \tadd    $0x58,%rsp\n  402bfc:\t5b                   \tpop    %rbx\n  402bfd:\t5d                   \tpop    %rbp\n  402bfe:\tc3                   \tretq   \n  402bff:\t90                   \tnop", "code_s": "__int64 __fastcall MyHandler ignorableWhitespace(MyHandler *this,\n                                                 const char *a2) {\n  char <span class=\"supfact\">v3</span>[Number];\n  std allocator<char> allocator();\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n  basic_string();\n  MyHandler where(this, <span class=\"supfact\">v3</span>);\n  std __cxx11 basic_string<char, std char_traits<char>,\n                           std allocator<char>> ~basic_string();\n  return std allocator<char> ~allocator();\n}", "code_t": "void __cdecl MyHandler ignorableWhitespace(MyHandler *const this,\n                                           const Poco XML XMLChar *ch_0,\n                                           int start, int length) {\n  std string <span class=\"supfact\">meth</span>;\n  std allocator<char> allocator();\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n  basic_string();\n  MyHandler where(this, &<span class=\"supfact\">meth</span>);\n  std __cxx11 basic_string<char, std char_traits<char>,\n                           std allocator<char>> ~basic_string();\n  std allocator<char> ~allocator();\n}", "var": [{"name": "v3", "type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }", "ref_name": "meth", "ref_type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/d4a3e7148b67bff6fe668513f6b0b311eb206e1822da210277eb341beb1dc43d", "path_in_repo": "XanClic/qemu//arm-softmmu/hw/arm/smmuv3.o", "objdump": "0000000000000c37 <_nocheck__trace_smmuv3_record_event>:\n     c37:\t55                   \tpush   %rbp\n     c38:\t48 89 e5             \tmov    %rsp,%rbp\n     c3b:\t41 54                \tpush   %r12\n     c3d:\t53                   \tpush   %rbx\n     c3e:\t48 83 ec 30          \tsub    $0x30,%rsp\n     c42:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n     c46:\t89 75 c4             \tmov    %esi,-0x3c(%rbp)\n     c49:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     c50:\t00 00 \n     c52:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     c56:\t31 c0                \txor    %eax,%eax\n     c58:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # c5e <_nocheck__trace_smmuv3_record_event+0x27>\n     c5e:\t85 c0                \ttest   %eax,%eax\n     c60:\t0f 95 c0             \tsetne  %al\n     c63:\t0f b6 c0             \tmovzbl %al,%eax\n     c66:\t48 85 c0             \ttest   %rax,%rax\n     c69:\t74 64                \tje     ccf <_nocheck__trace_smmuv3_record_event+0x98>\n     c6b:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # c72 <_nocheck__trace_smmuv3_record_event+0x3b>\n     c72:\t66 85 c0             \ttest   %ax,%ax\n     c75:\t74 58                \tje     ccf <_nocheck__trace_smmuv3_record_event+0x98>\n     c77:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n     c7c:\te8 d0 f6 ff ff       \tcallq  351 <qemu_loglevel_mask>\n     c81:\t84 c0                \ttest   %al,%al\n     c83:\t74 4a                \tje     ccf <_nocheck__trace_smmuv3_record_event+0x98>\n     c85:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     c89:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     c8e:\t48 89 c7             \tmov    %rax,%rdi\n     c91:\te8 00 00 00 00       \tcallq  c96 <_nocheck__trace_smmuv3_record_event+0x5f>\n     c96:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     c9a:\t49 89 c4             \tmov    %rax,%r12\n     c9d:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     ca1:\t48 89 c3             \tmov    %rax,%rbx\n     ca4:\te8 00 00 00 00       \tcallq  ca9 <_nocheck__trace_smmuv3_record_event+0x72>\n     ca9:\t8b 4d c4             \tmov    -0x3c(%rbp),%ecx\n     cac:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n     cb0:\t41 89 c9             \tmov    %ecx,%r9d\n     cb3:\t49 89 d0             \tmov    %rdx,%r8\n     cb6:\t4c 89 e1             \tmov    %r12,%rcx\n     cb9:\t48 89 da             \tmov    %rbx,%rdx\n     cbc:\t89 c6                \tmov    %eax,%esi\n     cbe:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # cc5 <_nocheck__trace_smmuv3_record_event+0x8e>\n     cc5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     cca:\te8 00 00 00 00       \tcallq  ccf <_nocheck__trace_smmuv3_record_event+0x98>\n     ccf:\t90                   \tnop\n     cd0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     cd4:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n     cdb:\t00 00 \n     cdd:\t74 05                \tje     ce4 <_nocheck__trace_smmuv3_record_event+0xad>\n     cdf:\te8 00 00 00 00       \tcallq  ce4 <_nocheck__trace_smmuv3_record_event+0xad>\n     ce4:\t48 83 c4 30          \tadd    $0x30,%rsp\n     ce8:\t5b                   \tpop    %rbx\n     ce9:\t41 5c                \tpop    %r12\n     ceb:\t5d                   \tpop    %rbp\n     cec:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_smmuv3_record_event(\n    const char *a1, unsigned int a2) {\n  __suseconds_t v2;\n  __time_t v3;\n  unsigned int v4;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v7;\n  v7 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_SMMUV3_RECORD_EVENT_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v2 = <span class=\"supfact\">tv</span>.tv_usec;\n    v3 = <span class=\"supfact\">tv</span>.tv_sec;\n    v4 = qemu_get_thread_id();\n    qemu_log(String, v4, v3, v2, a1, a2);\n  }\n  return __readfsqword(Number) ^ v7;\n}", "code_t": "void __cdecl nocheck__trace_smmuv3_record_event(const char *type,\n                                                uint32_t sid) {\n  __suseconds_t v2;\n  __time_t v3;\n  unsigned int v4;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v6;\n  v6 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_SMMUV3_RECORD_EVENT_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v2 = <span class=\"supfact\">_now</span>.tv_usec;\n    v3 = <span class=\"supfact\">_now</span>.tv_sec;\n    v4 = qemu_get_thread_id();\n    qemu_log(String, v4, v3, v2, type, sid);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "khuedoan98", "repo_name": "st", "path": "khuedoan98/st/99f7f1f6ff1706ba581b706c1a991facf8b4d0eab0e198d20f2913ed51bf1601", "path_in_repo": "khuedoan98/st//st", "objdump": "000000000040d727 <xsettitle>:\n  40d727:\t55                   \tpush   %rbp\n  40d728:\t48 89 e5             \tmov    %rsp,%rbp\n  40d72b:\t48 83 ec 30          \tsub    $0x30,%rsp\n  40d72f:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n  40d733:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  40d737:\t48 85 c0             \ttest   %rax,%rax\n  40d73a:\t74 06                \tje     40d742 <xsettitle+0x1b>\n  40d73c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  40d740:\teb 07                \tjmp    40d749 <xsettitle+0x22>\n  40d742:\t48 8b 05 d7 0e 01 00 \tmov    0x10ed7(%rip),%rax        # 41e620 <opt_title>\n  40d749:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n  40d74d:\t48 8b 05 0c 0c 01 00 \tmov    0x10c0c(%rip),%rax        # 41e360 <xw>\n  40d754:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n  40d758:\t48 8d 75 d8          \tlea    -0x28(%rbp),%rsi\n  40d75c:\t49 89 d0             \tmov    %rdx,%r8\n  40d75f:\tb9 04 00 00 00       \tmov    $0x4,%ecx\n  40d764:\tba 01 00 00 00       \tmov    $0x1,%edx\n  40d769:\t48 89 c7             \tmov    %rax,%rdi\n  40d76c:\te8 4f 5c ff ff       \tcallq  4033c0 <Xutf8TextListToTextProperty@plt>\n  40d771:\t48 8b 0d f8 0b 01 00 \tmov    0x10bf8(%rip),%rcx        # 41e370 <xw+0x10>\n  40d778:\t48 8b 05 e1 0b 01 00 \tmov    0x10be1(%rip),%rax        # 41e360 <xw>\n  40d77f:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n  40d783:\t48 89 ce             \tmov    %rcx,%rsi\n  40d786:\t48 89 c7             \tmov    %rax,%rdi\n  40d789:\te8 f2 5b ff ff       \tcallq  403380 <XSetWMName@plt>\n  40d78e:\t48 8b 0d 03 0c 01 00 \tmov    0x10c03(%rip),%rcx        # 41e398 <xw+0x38>\n  40d795:\t48 8b 35 d4 0b 01 00 \tmov    0x10bd4(%rip),%rsi        # 41e370 <xw+0x10>\n  40d79c:\t48 8b 05 bd 0b 01 00 \tmov    0x10bbd(%rip),%rax        # 41e360 <xw>\n  40d7a3:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n  40d7a7:\t48 89 c7             \tmov    %rax,%rdi\n  40d7aa:\te8 31 5c ff ff       \tcallq  4033e0 <XSetTextProperty@plt>\n  40d7af:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  40d7b3:\t48 89 c7             \tmov    %rax,%rdi\n  40d7b6:\te8 d5 58 ff ff       \tcallq  403090 <XFree@plt>\n  40d7bb:\t90                   \tnop\n  40d7bc:\tc9                   \tleaveq \n  40d7bd:\tc3                   \tretq   ", "code_s": "int __fastcall xsettitle(char *a1) {\n  char *v1;\n  char *list;\n  XTextProperty <span class=\"supfact\">text_prop_return</span>;\n  list = a1;\n  if (a1)\n    v1 = list;\n  else\n    v1 = (char *)opt_title;\n  list = v1;\n  Xutf8TextListToTextProperty(xw, &list, Number, XUTF8StringStyle,\n                              &<span class=\"supfact\">text_prop_return</span>);\n  XSetWMName(xw, qword_41E370, &<span class=\"supfact\">text_prop_return</span>);\n  XSetTextProperty(xw, qword_41E370, &<span class=\"supfact\">text_prop_return</span>,\n                   qword_41E398);\n  return XFree(<span class=\"supfact\">text_prop_return</span>.value);\n}", "code_t": "void __cdecl xsettitle(char *p) {\n  char *v1;\n  char *pa;\n  XTextProperty <span class=\"supfact\">prop</span>;\n  pa = p;\n  if (p)\n    v1 = pa;\n  else\n    v1 = opt_title;\n  pa = v1;\n  Xutf8TextListToTextProperty(xw.dpy, &pa, Number, XUTF8StringStyle,\n                              &<span class=\"supfact\">prop</span>);\n  XSetWMName(xw.dpy, xw.win, &<span class=\"supfact\">prop</span>);\n  XSetTextProperty(xw.dpy, xw.win, &<span class=\"supfact\">prop</span>, xw.netwmname);\n  XFree(<span class=\"supfact\">prop</span>.value);\n}", "var": [{"name": "text_prop_return", "type": "struct XTextProperty { unsigned __int8 * value; Atom encoding; int format; PADDING (4); unsigned __int64 nitems; }", "ref_name": "prop", "ref_type": "struct XTextProperty { unsigned __int8 * value; Atom encoding; int format; PADDING (4); unsigned __int64 nitems; }"}], "body_in_train": false}, {"repo_owner": "drusong", "repo_name": "unpv2", "path": "drusong/unpv2/e16889b01dbb6ab42f2c9d4efdbee13a9788e73753e984029b3d2df4422a2d15", "path_in_repo": "drusong/unpv2/rtsignals/test1", "objdump": "0000000000402850 <signal_rt>:\n  402850:\t41 54                \tpush   %r12\n  402852:\t41 89 fc             \tmov    %edi,%r12d\n  402855:\t53                   \tpush   %rbx\n  402856:\t48 81 ec 48 01 00 00 \tsub    $0x148,%rsp\n  40285d:\t48 8d 9c 24 a0 00 00 \tlea    0xa0(%rsp),%rbx\n  402864:\t00 \n  402865:\t48 89 b4 24 a0 00 00 \tmov    %rsi,0xa0(%rsp)\n  40286c:\t00 \n  40286d:\t48 8d 7b 08          \tlea    0x8(%rbx),%rdi\n  402871:\te8 0a fa ff ff       \tcallq  402280 <sigemptyset@plt>\n  402876:\t41 83 fc 0e          \tcmp    $0xe,%r12d\n  40287a:\tba 04 00 00 10       \tmov    $0x10000004,%edx\n  40287f:\tb8 04 00 00 20       \tmov    $0x20000004,%eax\n  402884:\t0f 45 c2             \tcmovne %edx,%eax\n  402887:\t48 89 de             \tmov    %rbx,%rsi\n  40288a:\t48 89 e2             \tmov    %rsp,%rdx\n  40288d:\t44 89 e7             \tmov    %r12d,%edi\n  402890:\t89 84 24 28 01 00 00 \tmov    %eax,0x128(%rsp)\n  402897:\te8 04 f8 ff ff       \tcallq  4020a0 <sigaction@plt>\n  40289c:\t89 c2                \tmov    %eax,%edx\n  40289e:\t48 c7 c0 ff ff ff ff \tmov    $0xffffffffffffffff,%rax\n  4028a5:\t83 c2 01             \tadd    $0x1,%edx\n  4028a8:\t48 0f 4f 04 24       \tcmovg  (%rsp),%rax\n  4028ad:\t48 81 c4 48 01 00 00 \tadd    $0x148,%rsp\n  4028b4:\t5b                   \tpop    %rbx\n  4028b5:\t41 5c                \tpop    %r12\n  4028b7:\tc3                   \tretq   \n  4028b8:\t0f 1f 84 00 00 00 00 \tnopl   0x0(%rax,%rax,1)\n  4028bf:\t00 ", "code_s": "__int64 __fastcall signal_rt(int sig, void (*a2)(int)) {\n  int v2;\n  int v3;\n  __int64 result;\n  struct sigaction <span class=\"supfact\">v5</span>;\n  struct sigaction <span class=\"supfact\">v6</span>;\n  <span class=\"supfact\">v6</span>.sa_handler = a2;\n  sigemptyset(&<span class=\"supfact\">v6</span>.sa_mask);\n  v2 = Number;\n  if (sig != Number)\n    v2 = Number;\n  <span class=\"supfact\">v6</span>.sa_flags = v2;\n  v3 = sigaction(sig, &<span class=\"supfact\">v6</span>, &<span class=\"supfact\">v5</span>);\n  result = Number;\n  if (!((v3 + Number < Number) ^ __OFADD__(Number, v3) | (v3 == Number)))\n    result = (__int64)<span class=\"supfact\">v5</span>.sa_handler;\n  return result;\n}", "code_t": "Sigfunc_rt *__fastcall signal_rt(int signo, Sigfunc_rt *func) {\n  int v2;\n  int v3;\n  Sigfunc_rt *result;\n  sigaction <span class=\"supfact\">oact</span>;\n  sigaction <span class=\"supfact\">act</span>;\n  <span class=\"supfact\">act</span>.sa_handler = (__sighandler_t)func;\n  sigemptyset(&<span class=\"supfact\">act</span>.sa_mask);\n  v2 = Number;\n  if (signo != Number)\n    v2 = Number;\n  <span class=\"supfact\">act</span>.sa_flags = v2;\n  v3 = sigaction(signo, &<span class=\"supfact\">act</span>, &<span class=\"supfact\">oact</span>);\n  result = (Sigfunc_rt *)Number;\n  if (!((v3 + Number < Number) ^ __OFADD__(Number, v3) | (v3 == Number)))\n    result = (Sigfunc_rt *)<span class=\"supfact\">oact</span>.sa_handler;\n  return result;\n}", "var": [{"name": "v6", "type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }", "ref_name": "act", "ref_type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }"}, {"name": "v5", "type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }", "ref_name": "oact", "ref_type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }"}], "body_in_train": false}, {"repo_owner": "kruzer", "repo_name": "st", "path": "kruzer/st/c8386bdf3f0f66298864342e25ef706207fbf014320172179472349ba9214ed5", "path_in_repo": "kruzer/st//x.o", "objdump": "00000000000005c9 <bpress>:\n     5c9:\t55                   \tpush   %rbp\n     5ca:\t48 89 e5             \tmov    %rsp,%rbp\n     5cd:\t53                   \tpush   %rbx\n     5ce:\t48 83 ec 38          \tsub    $0x38,%rsp\n     5d2:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n     5d6:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 5dc <bpress+0x13>\n     5dc:\t25 18 c0 00 00       \tand    $0xc018,%eax\n     5e1:\t85 c0                \ttest   %eax,%eax\n     5e3:\t74 24                \tje     609 <bpress+0x40>\n     5e5:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     5e9:\t8b 50 50             \tmov    0x50(%rax),%edx\n     5ec:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 5f2 <bpress+0x29>\n     5f2:\t21 d0                \tand    %edx,%eax\n     5f4:\t85 c0                \ttest   %eax,%eax\n     5f6:\t75 11                \tjne    609 <bpress+0x40>\n     5f8:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     5fc:\t48 89 c7             \tmov    %rax,%rdi\n     5ff:\te8 5c fd ff ff       \tcallq  360 <mousereport>\n     604:\te9 f3 01 00 00       \tjmpq   7fc <bpress+0x233>\n     609:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n     610:\t00 \n     611:\teb 61                \tjmp    674 <bpress+0xab>\n     613:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     617:\t8b 50 54             \tmov    0x54(%rax),%edx\n     61a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     61e:\t8b 00                \tmov    (%rax),%eax\n     620:\t39 c2                \tcmp    %eax,%edx\n     622:\t75 4b                \tjne    66f <bpress+0xa6>\n     624:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     628:\t8b 50 50             \tmov    0x50(%rax),%edx\n     62b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     62f:\t8b 40 04             \tmov    0x4(%rax),%eax\n     632:\t89 d6                \tmov    %edx,%esi\n     634:\t89 c7                \tmov    %eax,%edi\n     636:\te8 24 3a 00 00       \tcallq  405f <match>\n     63b:\t85 c0                \ttest   %eax,%eax\n     63d:\t74 30                \tje     66f <bpress+0xa6>\n     63f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     643:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     647:\t48 89 c7             \tmov    %rax,%rdi\n     64a:\te8 00 00 00 00       \tcallq  64f <bpress+0x86>\n     64f:\t48 89 c1             \tmov    %rax,%rcx\n     652:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     656:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     65a:\tba 01 00 00 00       \tmov    $0x1,%edx\n     65f:\t48 89 ce             \tmov    %rcx,%rsi\n     662:\t48 89 c7             \tmov    %rax,%rdi\n     665:\te8 00 00 00 00       \tcallq  66a <bpress+0xa1>\n     66a:\te9 8d 01 00 00       \tjmpq   7fc <bpress+0x233>\n     66f:\t48 83 45 e8 10       \taddq   $0x10,-0x18(%rbp)\n     674:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     679:\t48 39 45 e8          \tcmp    %rax,-0x18(%rbp)\n     67d:\t72 94                \tjb     613 <bpress+0x4a>\n     67f:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     683:\t8b 40 54             \tmov    0x54(%rax),%eax\n     686:\t83 f8 01             \tcmp    $0x1,%eax\n     689:\t0f 85 6d 01 00 00    \tjne    7fc <bpress+0x233>\n     68f:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     693:\t48 89 c6             \tmov    %rax,%rsi\n     696:\tbf 01 00 00 00       \tmov    $0x1,%edi\n     69b:\te8 00 00 00 00       \tcallq  6a0 <bpress+0xd7>\n     6a0:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n     6a4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6ab <bpress+0xe2>\n     6ab:\t48 29 c2             \tsub    %rax,%rdx\n     6ae:\t48 89 d0             \tmov    %rdx,%rax\n     6b1:\t48 69 c0 e8 03 00 00 \timul   $0x3e8,%rax,%rax\n     6b8:\tf2 48 0f 2a c8       \tcvtsi2sd %rax,%xmm1\n     6bd:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n     6c1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c8 <bpress+0xff>\n     6c8:\t48 29 c2             \tsub    %rax,%rdx\n     6cb:\t48 89 d0             \tmov    %rdx,%rax\n     6ce:\tf2 48 0f 2a c0       \tcvtsi2sd %rax,%xmm0\n     6d3:\tf2 0f 10 15 00 00 00 \tmovsd  0x0(%rip),%xmm2        # 6db <bpress+0x112>\n     6da:\t00 \n     6db:\tf2 0f 5e c2          \tdivsd  %xmm2,%xmm0\n     6df:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n     6e3:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 6e9 <bpress+0x120>\n     6e9:\t89 c0                \tmov    %eax,%eax\n     6eb:\t48 85 c0             \ttest   %rax,%rax\n     6ee:\t78 07                \tjs     6f7 <bpress+0x12e>\n     6f0:\tf2 48 0f 2a c0       \tcvtsi2sd %rax,%xmm0\n     6f5:\teb 15                \tjmp    70c <bpress+0x143>\n     6f7:\t48 89 c2             \tmov    %rax,%rdx\n     6fa:\t48 d1 ea             \tshr    %rdx\n     6fd:\t83 e0 01             \tand    $0x1,%eax\n     700:\t48 09 c2             \tor     %rax,%rdx\n     703:\tf2 48 0f 2a c2       \tcvtsi2sd %rdx,%xmm0\n     708:\tf2 0f 58 c0          \taddsd  %xmm0,%xmm0\n     70c:\t66 0f 2f c1          \tcomisd %xmm1,%xmm0\n     710:\t72 0c                \tjb     71e <bpress+0x155>\n     712:\tc7 45 e4 02 00 00 00 \tmovl   $0x2,-0x1c(%rbp)\n     719:\te9 82 00 00 00       \tjmpq   7a0 <bpress+0x1d7>\n     71e:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n     722:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 729 <bpress+0x160>\n     729:\t48 29 c2             \tsub    %rax,%rdx\n     72c:\t48 89 d0             \tmov    %rdx,%rax\n     72f:\t48 69 c0 e8 03 00 00 \timul   $0x3e8,%rax,%rax\n     736:\tf2 48 0f 2a c8       \tcvtsi2sd %rax,%xmm1\n     73b:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n     73f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 746 <bpress+0x17d>\n     746:\t48 29 c2             \tsub    %rax,%rdx\n     749:\t48 89 d0             \tmov    %rdx,%rax\n     74c:\tf2 48 0f 2a c0       \tcvtsi2sd %rax,%xmm0\n     751:\tf2 0f 10 15 00 00 00 \tmovsd  0x0(%rip),%xmm2        # 759 <bpress+0x190>\n     758:\t00 \n     759:\tf2 0f 5e c2          \tdivsd  %xmm2,%xmm0\n     75d:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n     761:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 767 <bpress+0x19e>\n     767:\t89 c0                \tmov    %eax,%eax\n     769:\t48 85 c0             \ttest   %rax,%rax\n     76c:\t78 07                \tjs     775 <bpress+0x1ac>\n     76e:\tf2 48 0f 2a c0       \tcvtsi2sd %rax,%xmm0\n     773:\teb 15                \tjmp    78a <bpress+0x1c1>\n     775:\t48 89 c2             \tmov    %rax,%rdx\n     778:\t48 d1 ea             \tshr    %rdx\n     77b:\t83 e0 01             \tand    $0x1,%eax\n     77e:\t48 09 c2             \tor     %rax,%rdx\n     781:\tf2 48 0f 2a c2       \tcvtsi2sd %rdx,%xmm0\n     786:\tf2 0f 58 c0          \taddsd  %xmm0,%xmm0\n     78a:\t66 0f 2f c1          \tcomisd %xmm1,%xmm0\n     78e:\t72 09                \tjb     799 <bpress+0x1d0>\n     790:\tc7 45 e4 01 00 00 00 \tmovl   $0x1,-0x1c(%rbp)\n     797:\teb 07                \tjmp    7a0 <bpress+0x1d7>\n     799:\tc7 45 e4 00 00 00 00 \tmovl   $0x0,-0x1c(%rbp)\n     7a0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7a7 <bpress+0x1de>\n     7a7:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 7ae <bpress+0x1e5>\n     7ae:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 7b5 <bpress+0x1ec>\n     7b5:\t48 89 15 00 00 00 00 \tmov    %rdx,0x0(%rip)        # 7bc <bpress+0x1f3>\n     7bc:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     7c0:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n     7c4:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 7cb <bpress+0x202>\n     7cb:\t48 89 15 00 00 00 00 \tmov    %rdx,0x0(%rip)        # 7d2 <bpress+0x209>\n     7d2:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     7d6:\t48 89 c7             \tmov    %rax,%rdi\n     7d9:\te8 75 fa ff ff       \tcallq  253 <evrow>\n     7de:\t89 c3                \tmov    %eax,%ebx\n     7e0:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     7e4:\t48 89 c7             \tmov    %rax,%rdi\n     7e7:\te8 14 fa ff ff       \tcallq  200 <evcol>\n     7ec:\t89 c1                \tmov    %eax,%ecx\n     7ee:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n     7f1:\t89 c2                \tmov    %eax,%edx\n     7f3:\t89 de                \tmov    %ebx,%esi\n     7f5:\t89 cf                \tmov    %ecx,%edi\n     7f7:\te8 00 00 00 00       \tcallq  7fc <bpress+0x233>\n     7fc:\t48 83 c4 38          \tadd    $0x38,%rsp\n     800:\t5b                   \tpop    %rbx\n     801:\t5d                   \tpop    %rbp\n     802:\tc3                   \tretq   ", "code_s": "__int64 __fastcall bpress(_DWORD *a1) {\n  __int64 result;\n  size_t v2;\n  unsigned int v3;\n  unsigned int v4;\n  struct timespec <span class=\"supfact\">tp</span>;\n  unsigned int v6;\n  const char **i;\n  if ((dword_7C38 & Number) != Number && (a1[Number] & forceselmod) == Number)\n    return mousereport(a1);\n  for (i = (const char **)&mshortcuts; i < (const char **)&shortcuts;\n       i += Number) {\n    if (a1[Number] == *(_DWORD *)i &&\n        (unsigned int)match(*((unsigned int *)i + Number),\n                            (unsigned int)a1[Number])) {\n      v2 = strlen(i[Number]);\n      return ttywrite(i[Number], v2, Number L);\n    }\n  }\n  result = (unsigned int)a1[Number];\n  if ((_DWORD)result == Number) {\n    clock_gettime(Number, &<span class=\"supfact\">tp</span>);\n    if ((double)tripleclicktimeout <\n        (double)(Number * (LODWORD(<span class=\"supfact\">tp</span>.tv_sec) -\n                           LODWORD(stru_7C08.tv_sec))) +\n            (double)(LODWORD(<span class=\"supfact\">tp</span>.tv_nsec) -\n                     LODWORD(stru_7C08.tv_nsec)) /\n                Number)\n      v6 = (double)doubleclicktimeout >=\n           (double)(Number * (LODWORD(<span class=\"supfact\">tp</span>.tv_sec) -\n                              LODWORD(<span class=\"supfact\">tp</span>.tv_sec))) +\n               (double)(LODWORD(<span class=\"supfact\">tp</span>.tv_nsec) -\n                        LODWORD(<span class=\"supfact\">tp</span>.tv_nsec)) /\n                   Number;\n    else\n      v6 = Number;\n    stru_7C08 = <span class=\"supfact\">tp</span>;\n    <span class=\"supfact\">tp</span> = <span class=\"supfact\">tp</span>;\n    v3 = evrow((__int64)a1);\n    v4 = evcol((__int64)a1);\n    result = selstart(v4, v3, v6);\n  }\n  return result;\n}", "code_t": "void __cdecl bpress(XEvent *e) {\n  size_t v1;\n  unsigned int v2;\n  unsigned int v3;\n  timespec <span class=\"supfact\">now</span>;\n  int snap;\n  MouseShortcut *ms;\n  if ((win.mode & Number) == Number ||\n      (e->xkey.state & forceselmod) != Number) {\n    for (ms = mshortcuts; ms < (MouseShortcut *)shortcuts; ++ms) {\n      if (e->xkey.keycode == ms->b && match(ms->mask, e->xkey.state)) {\n        v1 = strlen(ms->s);\n        ttywrite(ms->s, v1, Number L);\n        return;\n      }\n    }\n    if (e->xkey.keycode == Number) {\n      clock_gettime(Number, &<span class=\"supfact\">now</span>);\n      if ((double)(int)tripleclicktimeout <\n          (double)(Number * (LODWORD(<span class=\"supfact\">now</span>.tv_sec) -\n                             LODWORD(xsel.tclick2.tv_sec))) +\n              (double)(LODWORD(<span class=\"supfact\">now</span>.tv_nsec) -\n                       LODWORD(xsel.tclick2.tv_nsec)) /\n                  Number)\n        snap = (double)(int)doubleclicktimeout >=\n               (double)(Number * (LODWORD(<span class=\"supfact\">now</span>.tv_sec) -\n                                  LODWORD(xsel.tclick1.tv_sec))) +\n                   (double)(LODWORD(<span class=\"supfact\">now</span>.tv_nsec) -\n                            LODWORD(xsel.tclick1.tv_nsec)) /\n                       Number;\n      else\n        snap = Number;\n      xsel.tclick2 = xsel.tclick1;\n      xsel.tclick1 = <span class=\"supfact\">now</span>;\n      v2 = evrow(e);\n      v3 = evcol(e);\n      selstart(v3, v2, (unsigned int)snap);\n    }\n  } else {\n    mousereport(e);\n  }\n}", "var": [{"name": "tp", "type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }", "ref_name": "now", "ref_type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }"}], "body_in_train": false}, {"repo_owner": "romankap", "repo_name": "Using-dlib", "path": "romankap/Using-dlib/eebdb1d2d9af3f5ec71427ae382bf9801cc42fcfadd9f5c8b4b7638ab15698bc", "path_in_repo": "romankap/Using-dlib/Lot_w_dlib/dlib-18.10/dlib/test/iosockstream.o", "objdump": "0000000000000000 <_ZN4dlib5timerINS_7timeoutEE5clearEv>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t53                   \tpush   %rbx\n   5:\t48 83 ec 38          \tsub    $0x38,%rsp\n   9:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n   d:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  11:\t48 05 b0 00 00 00    \tadd    $0xb0,%rax\n  17:\t48 89 c7             \tmov    %rax,%rdi\n  1a:\te8 00 00 00 00       \tcallq  1f <_ZN4dlib5timerINS_7timeoutEE5clearEv+0x1f>\n  1f:\t48 8d 90 80 00 00 00 \tlea    0x80(%rax),%rdx\n  26:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  2a:\t48 89 d6             \tmov    %rdx,%rsi\n  2d:\t48 89 c7             \tmov    %rax,%rdi\n  30:\te8 00 00 00 00       \tcallq  35 <_ZN4dlib5timerINS_7timeoutEE5clearEv+0x35>\n  35:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  39:\tc6 80 91 00 00 00 00 \tmovb   $0x0,0x91(%rax)\n  40:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  44:\t48 05 b0 00 00 00    \tadd    $0xb0,%rax\n  4a:\t48 89 c7             \tmov    %rax,%rdi\n  4d:\te8 00 00 00 00       \tcallq  52 <_ZN4dlib5timerINS_7timeoutEE5clearEv+0x52>\n  52:\t48 89 c2             \tmov    %rax,%rdx\n  55:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  59:\t48 89 c6             \tmov    %rax,%rsi\n  5c:\t48 89 d7             \tmov    %rdx,%rdi\n  5f:\te8 00 00 00 00       \tcallq  64 <_ZN4dlib5timerINS_7timeoutEE5clearEv+0x64>\n  64:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  68:\t48 c7 80 80 00 00 00 \tmovq   $0x3e8,0x80(%rax)\n  6f:\te8 03 00 00 \n  73:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  77:\t48 c7 80 88 00 00 00 \tmovq   $0x0,0x88(%rax)\n  7e:\t00 00 00 00 \n  82:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  86:\t48 89 c7             \tmov    %rax,%rdi\n  89:\te8 00 00 00 00       \tcallq  8e <_ZN4dlib5timerINS_7timeoutEE5clearEv+0x8e>\n  8e:\teb 1a                \tjmp    aa <_ZN4dlib5timerINS_7timeoutEE5clearEv+0xaa>\n  90:\t48 89 c3             \tmov    %rax,%rbx\n  93:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  97:\t48 89 c7             \tmov    %rax,%rdi\n  9a:\te8 00 00 00 00       \tcallq  9f <_ZN4dlib5timerINS_7timeoutEE5clearEv+0x9f>\n  9f:\t48 89 d8             \tmov    %rbx,%rax\n  a2:\t48 89 c7             \tmov    %rax,%rdi\n  a5:\te8 00 00 00 00       \tcallq  aa <_ZN4dlib5timerINS_7timeoutEE5clearEv+0xaa>\n  aa:\t48 83 c4 38          \tadd    $0x38,%rsp\n  ae:\t5b                   \tpop    %rbx\n  af:\t5d                   \tpop    %rbp\n  b0:\tc3                   \tretq   ", "code_s": "void __fastcall dlib timer<dlib timeout> clear(__int64 a1) {\n  __int64 v1;\n  dlib timer_global_clock *v2;\n  char <span class=\"supfact\">v3</span>[Number];\n  v1 = dlib shared_ptr_thread_safe<dlib timer_global_clock> operator->(a1 +\n                                                                       Number);\n  dlib auto_mutex auto_mutex((dlib auto_mutex *)<span class=\"supfact\">v3</span>,\n                             (const dlib mutex *)(v1 + Number));\n  *(_BYTE *)(a1 + Number) = Number;\n  v2 = (dlib timer_global_clock *)\n           dlib shared_ptr_thread_safe<dlib timer_global_clock>\n           operator->(a1 + Number);\n  dlib timer_global_clock remove(v2, (dlib timer_base *)a1);\n  *(_QWORD *)(a1 + Number) = Number L;\n  *(_QWORD *)(a1 + Number) = Number L;\n  dlib auto_mutex ~auto_mutex((dlib auto_mutex *)<span class=\"supfact\">v3</span>);\n}", "code_t": "void __cdecl dlib timer<dlib timeout>\nclear(dlib timer<dlib timeout> *const this) {\n  dlib timer_global_clock *v1;\n  dlib timer_global_clock *v2;\n  dlib auto_mutex <span class=\"supfact\">M</span>;\n  v1 = dlib shared_ptr_thread_safe<dlib timer_global_clock> operator->(\n      &this->gc);\n  dlib auto_mutex auto_mutex(&<span class=\"supfact\">M</span>,\n                             (const dlib mutex *)((char *)v1 + Number));\n  this->running = Number;\n  v2 = dlib shared_ptr_thread_safe<dlib timer_global_clock> operator->(\n      &this->gc);\n  dlib timer_global_clock remove(v2, this);\n  this->delay = Number L;\n  this->next_time_to_run = Number L;\n  dlib auto_mutex ~auto_mutex(&<span class=\"supfact\">M</span>);\n}", "var": [{"name": "v3", "type": "struct dlib::auto_mutex { const dlib::mutex * m; const dlib::rmutex * r; const dlib::read_write_mutex * rw; }", "ref_name": "M", "ref_type": "struct dlib::auto_mutex { const dlib::mutex * m; const dlib::rmutex * r; const dlib::read_write_mutex * rw; }"}], "body_in_train": false}, {"repo_owner": "davidnieder", "repo_name": "remote-sockets", "path": "davidnieder/remote-sockets/ddbdf4ef8d940cec9af22705bc1fe1e0409de9e12684061f72879c376f1a7e3b", "path_in_repo": "davidnieder/remote-sockets/raspberry/build/remote-sockets", "objdump": "000000000040752c <register_signal>:\n  40752c:\t55                   \tpush   %rbp\n  40752d:\t48 89 e5             \tmov    %rsp,%rbp\n  407530:\t48 81 ec b0 00 00 00 \tsub    $0xb0,%rsp\n  407537:\t89 bd 5c ff ff ff    \tmov    %edi,-0xa4(%rbp)\n  40753d:\t48 89 b5 50 ff ff ff \tmov    %rsi,-0xb0(%rbp)\n  407544:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n  40754b:\t48 83 c0 08          \tadd    $0x8,%rax\n  40754f:\t48 89 c7             \tmov    %rax,%rdi\n  407552:\te8 b9 ac ff ff       \tcallq  402210 <sigemptyset@plt>\n  407557:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n  40755e:\t48 89 85 60 ff ff ff \tmov    %rax,-0xa0(%rbp)\n  407565:\tc7 45 e8 00 00 00 10 \tmovl   $0x10000000,-0x18(%rbp)\n  40756c:\t48 8d 8d 60 ff ff ff \tlea    -0xa0(%rbp),%rcx\n  407573:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n  407579:\tba 00 00 00 00       \tmov    $0x0,%edx\n  40757e:\t48 89 ce             \tmov    %rcx,%rsi\n  407581:\t89 c7                \tmov    %eax,%edi\n  407583:\te8 18 ab ff ff       \tcallq  4020a0 <sigaction@plt>\n  407588:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n  40758b:\t75 07                \tjne    407594 <register_signal+0x68>\n  40758d:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n  407592:\teb 05                \tjmp    407599 <register_signal+0x6d>\n  407594:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  407599:\tc9                   \tleaveq \n  40759a:\tc3                   \tretq   ", "code_s": "__int64 __fastcall register_signal(int a1, void (*a2)(int)) {\n  __int64 result;\n  struct sigaction <span class=\"supfact\">v3</span>;\n  sigemptyset(&<span class=\"supfact\">v3</span>.sa_mask);\n  <span class=\"supfact\">v3</span>.sa_handler = a2;\n  <span class=\"supfact\">v3</span>.sa_flags = Number;\n  if (sigaction(a1, &<span class=\"supfact\">v3</span>, Number L) == Number)\n    result = Number;\n  else\n    result = Number L;\n  return result;\n}", "code_t": "int __cdecl register_signal(int signal, void (*signal_handler)(int)) {\n  int result;\n  sigaction <span class=\"supfact\">sa</span>;\n  sigemptyset(&<span class=\"supfact\">sa</span>.sa_mask);\n  <span class=\"supfact\">sa</span>.sa_handler = signal_handler;\n  <span class=\"supfact\">sa</span>.sa_flags = Number;\n  if (sigaction(signal, &<span class=\"supfact\">sa</span>, Number L) == Number)\n    result = Number;\n  else\n    result = Number;\n  return result;\n}", "var": [{"name": "v3", "type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }", "ref_name": "sa", "ref_type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }"}], "body_in_train": false}, {"repo_owner": "crossbuild", "repo_name": "isl", "path": "crossbuild/isl/69359f85b432bc81c1c76e75a656b36c215560fb70e65202f1f2729c38a20ce8", "path_in_repo": "crossbuild/isl/imath/imrat.o", "objdump": "0000000000001ae9 <s_rat_reduce>:\n    1ae9:\t55                   \tpush   %rbp\n    1aea:\t48 89 e5             \tmov    %rsp,%rbp\n    1aed:\t48 83 ec 40          \tsub    $0x40,%rsp\n    1af1:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    1af5:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1afb <s_rat_reduce+0x12>\n    1afb:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    1afe:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1b02:\t48 89 c7             \tmov    %rax,%rdi\n    1b05:\te8 00 00 00 00       \tcallq  1b0a <s_rat_reduce+0x21>\n    1b0a:\t85 c0                \ttest   %eax,%eax\n    1b0c:\t75 20                \tjne    1b2e <s_rat_reduce+0x45>\n    1b0e:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1b12:\t48 83 c0 20          \tadd    $0x20,%rax\n    1b16:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    1b1b:\t48 89 c7             \tmov    %rax,%rdi\n    1b1e:\te8 00 00 00 00       \tcallq  1b23 <s_rat_reduce+0x3a>\n    1b23:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1b29 <s_rat_reduce+0x40>\n    1b29:\te9 25 01 00 00       \tjmpq   1c53 <s_rat_reduce+0x16a>\n    1b2e:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1b32:\t48 89 c7             \tmov    %rax,%rdi\n    1b35:\te8 00 00 00 00       \tcallq  1b3a <s_rat_reduce+0x51>\n    1b3a:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    1b3d:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1b43 <s_rat_reduce+0x5a>\n    1b43:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n    1b46:\t74 08                \tje     1b50 <s_rat_reduce+0x67>\n    1b48:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    1b4b:\te9 03 01 00 00       \tjmpq   1c53 <s_rat_reduce+0x16a>\n    1b50:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1b54:\t48 8d 48 20          \tlea    0x20(%rax),%rcx\n    1b58:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1b5c:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    1b60:\t48 89 ce             \tmov    %rcx,%rsi\n    1b63:\t48 89 c7             \tmov    %rax,%rdi\n    1b66:\te8 00 00 00 00       \tcallq  1b6b <s_rat_reduce+0x82>\n    1b6b:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    1b6e:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1b74 <s_rat_reduce+0x8b>\n    1b74:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n    1b77:\t0f 85 c0 00 00 00    \tjne    1c3d <s_rat_reduce+0x154>\n    1b7d:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1b81:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    1b86:\t48 89 c7             \tmov    %rax,%rdi\n    1b89:\te8 00 00 00 00       \tcallq  1b8e <s_rat_reduce+0xa5>\n    1b8e:\t85 c0                \ttest   %eax,%eax\n    1b90:\t74 5a                \tje     1bec <s_rat_reduce+0x103>\n    1b92:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    1b96:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1b9a:\t48 8d 75 d0          \tlea    -0x30(%rbp),%rsi\n    1b9e:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    1ba3:\t48 89 c7             \tmov    %rax,%rdi\n    1ba6:\te8 00 00 00 00       \tcallq  1bab <s_rat_reduce+0xc2>\n    1bab:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    1bae:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1bb4 <s_rat_reduce+0xcb>\n    1bb4:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n    1bb7:\t0f 85 83 00 00 00    \tjne    1c40 <s_rat_reduce+0x157>\n    1bbd:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1bc1:\t48 8d 50 20          \tlea    0x20(%rax),%rdx\n    1bc5:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1bc9:\t48 8d 78 20          \tlea    0x20(%rax),%rdi\n    1bcd:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1bd1:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    1bd6:\t48 89 c6             \tmov    %rax,%rsi\n    1bd9:\te8 00 00 00 00       \tcallq  1bde <s_rat_reduce+0xf5>\n    1bde:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    1be1:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1be7 <s_rat_reduce+0xfe>\n    1be7:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n    1bea:\t75 57                \tjne    1c43 <s_rat_reduce+0x15a>\n    1bec:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1bf0:\t0f b6 50 18          \tmovzbl 0x18(%rax),%edx\n    1bf4:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1bf8:\t0f b6 40 38          \tmovzbl 0x38(%rax),%eax\n    1bfc:\t38 c2                \tcmp    %al,%dl\n    1bfe:\t75 1f                \tjne    1c1f <s_rat_reduce+0x136>\n    1c00:\t0f b6 15 00 00 00 00 \tmovzbl 0x0(%rip),%edx        # 1c07 <s_rat_reduce+0x11e>\n    1c07:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1c0b:\t88 50 38             \tmov    %dl,0x38(%rax)\n    1c0e:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1c12:\t0f b6 50 38          \tmovzbl 0x38(%rax),%edx\n    1c16:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1c1a:\t88 50 18             \tmov    %dl,0x18(%rax)\n    1c1d:\teb 25                \tjmp    1c44 <s_rat_reduce+0x15b>\n    1c1f:\t0f b6 15 00 00 00 00 \tmovzbl 0x0(%rip),%edx        # 1c26 <s_rat_reduce+0x13d>\n    1c26:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1c2a:\t88 50 18             \tmov    %dl,0x18(%rax)\n    1c2d:\t0f b6 15 00 00 00 00 \tmovzbl 0x0(%rip),%edx        # 1c34 <s_rat_reduce+0x14b>\n    1c34:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1c38:\t88 50 38             \tmov    %dl,0x38(%rax)\n    1c3b:\teb 07                \tjmp    1c44 <s_rat_reduce+0x15b>\n    1c3d:\t90                   \tnop\n    1c3e:\teb 04                \tjmp    1c44 <s_rat_reduce+0x15b>\n    1c40:\t90                   \tnop\n    1c41:\teb 01                \tjmp    1c44 <s_rat_reduce+0x15b>\n    1c43:\t90                   \tnop\n    1c44:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1c48:\t48 89 c7             \tmov    %rax,%rdi\n    1c4b:\te8 00 00 00 00       \tcallq  1c50 <s_rat_reduce+0x167>\n    1c50:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    1c53:\tc9                   \tleaveq \n    1c54:\tc3                   \tretq   ", "code_s": "__int64 __fastcall s_rat_reduce(__int64 a1) {\n  __int64 result;\n  char <span class=\"supfact\">v2</span>[Number];\n  unsigned int v3;\n  v3 = MP_OK;\n  if ((unsigned int)mp_int_compare_zero(a1)) {\n    v3 = mp_int_init(<span class=\"supfact\">v2</span>);\n    if (v3 == MP_OK) {\n      v3 = mp_int_gcd(a1, a1 + Number, <span class=\"supfact\">v2</span>);\n      if (v3 == MP_OK) {\n        if (!(unsigned int)mp_int_compare_value(<span class=\"supfact\">v2</span>, Number L) ||\n            (v3 = mp_int_div(a1, <span class=\"supfact\">v2</span>, a1, Number L),\n             v3 == MP_OK) &&\n                (v3 = mp_int_div(a1 + Number, <span class=\"supfact\">v2</span>, a1 + Number,\n                                 Number L),\n                 v3 == MP_OK)) {\n          if (*(_BYTE *)(a1 + Number) == *(_BYTE *)(a1 + Number)) {\n            *(_BYTE *)(a1 + Number) = MP_ZPOS;\n            *(_BYTE *)(a1 + Number) = *(_BYTE *)(a1 + Number);\n          } else {\n            *(_BYTE *)(a1 + Number) = MP_NEG;\n            *(_BYTE *)(a1 + Number) = MP_ZPOS;\n          }\n        }\n      }\n      mp_int_clear(<span class=\"supfact\">v2</span>);\n      result = v3;\n    } else {\n      result = v3;\n    }\n  } else {\n    mp_int_set_value(a1 + Number, Number L);\n    result = MP_OK;\n  }\n  return result;\n}", "code_t": "mp_result __cdecl s_rat_reduce(mp_rat r) {\n  mp_result result;\n  mpz_t <span class=\"supfact\">gcd</span>;\n  mp_result res;\n  res = MP_OK;\n  if ((unsigned int)mp_int_compare_zero(r)) {\n    res = mp_int_init(&<span class=\"supfact\">gcd</span>);\n    if (res == MP_OK) {\n      res = mp_int_gcd(r, &r->den, &<span class=\"supfact\">gcd</span>);\n      if (res == MP_OK) {\n        if (!(unsigned int)mp_int_compare_value(&<span class=\"supfact\">gcd</span>,\n                                                Number L) ||\n            (res = mp_int_div(r, &<span class=\"supfact\">gcd</span>, r, Number L),\n             res == MP_OK) &&\n                (res = mp_int_div(&r->den, &<span class=\"supfact\">gcd</span>, &r->den,\n                                  Number L),\n                 res == MP_OK)) {\n          if (r->num.sign == r->den.sign) {\n            r->den.sign = MP_ZPOS;\n            r->num.sign = r->den.sign;\n          } else {\n            r->num.sign = MP_NEG;\n            r->den.sign = MP_ZPOS;\n          }\n        }\n      }\n      mp_int_clear(&<span class=\"supfact\">gcd</span>);\n      result = res;\n    } else {\n      result = res;\n    }\n  } else {\n    mp_int_set_value(&r->den, Number L);\n    result = MP_OK;\n  }\n  return result;\n}", "var": [{"name": "v2", "type": "uint8_t[32]", "ref_name": "gcd", "ref_type": "struct mpz_t { mp_digit single; PADDING (4); mp_digit * digits; mp_size alloc; mp_size used; mp_sign sign; PADDING (7); }"}], "body_in_train": false}, {"repo_owner": "Infusion-OS", "repo_name": "android_external_lz4", "path": "Infusion-OS/android_external_lz4/908dc9741afd670c0f61ba2d8c89d1931f73132e9eb7e74dbb977ba6204b2d58", "path_in_repo": "Infusion-OS/android_external_lz4/programs/lz4", "objdump": "000000000041af67 <LZ4IO_GetFileSize>:\n  41af67:\t55                   \tpush   %rbp\n  41af68:\t48 89 e5             \tmov    %rsp,%rbp\n  41af6b:\t48 81 ec b0 00 00 00 \tsub    $0xb0,%rsp\n  41af72:\t48 89 bd 58 ff ff ff \tmov    %rdi,-0xa8(%rbp)\n  41af79:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n  41af80:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n  41af87:\t48 89 d6             \tmov    %rdx,%rsi\n  41af8a:\t48 89 c7             \tmov    %rax,%rdi\n  41af8d:\te8 5e 40 00 00       \tcallq  41eff0 <stat64>\n  41af92:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  41af95:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n  41af99:\t75 12                \tjne    41afad <LZ4IO_GetFileSize+0x46>\n  41af9b:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n  41afa1:\t25 00 f0 00 00       \tand    $0xf000,%eax\n  41afa6:\t3d 00 80 00 00       \tcmp    $0x8000,%eax\n  41afab:\t74 07                \tje     41afb4 <LZ4IO_GetFileSize+0x4d>\n  41afad:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  41afb2:\teb 04                \tjmp    41afb8 <LZ4IO_GetFileSize+0x51>\n  41afb4:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  41afb8:\tc9                   \tleaveq \n  41afb9:\tc3                   \tretq   ", "code_s": "__off_t __fastcall LZ4IO_GetFileSize(char *a1) {\n  __off_t result;\n  struct stat64 <span class=\"supfact\">v2</span>;\n  int v3;\n  v3 = stat64(a1, &<span class=\"supfact\">v2</span>);\n  if (!v3 && (<span class=\"supfact\">v2</span>.st_mode & Number) == Number)\n    result = <span class=\"supfact\">v2</span>.st_size;\n  else\n    result = Number L;\n  return result;\n}", "code_t": "unsigned __int64 __cdecl LZ4IO_GetFileSize(const char *infilename) {\n  unsigned __int64 result;\n  stat <span class=\"supfact\">statbuf</span>;\n  int r;\n  r = stat64((char *)infilename, (struct stat64 *)&<span class=\"supfact\">statbuf</span>);\n  if (!r && (<span class=\"supfact\">statbuf</span>.st_mode & Number) == Number)\n    result = <span class=\"supfact\">statbuf</span>.st_size;\n  else\n    result = Number L;\n  return result;\n}", "var": [{"name": "v2", "type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }", "ref_name": "statbuf", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; __time_t st_atime; __syscall_ulong_t st_atimensec; __time_t st_mtime; __syscall_ulong_t st_mtimensec; __time_t st_ctime; __syscall_ulong_t st_ctimensec; __syscall_slong_t[3] __glibc_reserved; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/15a5b8989460b9fe7a264fef632b9c326d75797bb9bc55d73f5a16fdabf55d7d", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/drivers/merit.o", "objdump": "0000000000009e78 <_ZL31construct_machine_config_tictacR14machine_configP8device_t>:\n    9e78:\t55                   \tpush   %rbp\n    9e79:\t48 89 e5             \tmov    %rsp,%rbp\n    9e7c:\t53                   \tpush   %rbx\n    9e7d:\t48 83 ec 68          \tsub    $0x68,%rsp\n    9e81:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n    9e85:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n    9e89:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    9e90:\t00 \n    9e91:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n    9e95:\t48 89 c7             \tmov    %rax,%rdi\n    9e98:\te8 00 00 00 00       \tcallq  9e9d <_ZL31construct_machine_config_tictacR14machine_configP8device_t+0x25>\n    9e9d:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n    9ea1:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    9ea5:\t48 89 d6             \tmov    %rdx,%rsi\n    9ea8:\t48 89 c7             \tmov    %rax,%rdi\n    9eab:\te8 c2 f9 ff ff       \tcallq  9872 <_ZL32construct_machine_config_pitbossR14machine_configP8device_t>\n    9eb0:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n    9eb4:\t48 8b 4d 90          \tmov    -0x70(%rbp),%rcx\n    9eb8:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    9ebc:\tba 00 00 00 00       \tmov    $0x0,%edx\n    9ec1:\t48 89 ce             \tmov    %rcx,%rsi\n    9ec4:\t48 89 c7             \tmov    %rax,%rdi\n    9ec7:\te8 00 00 00 00       \tcallq  9ecc <_ZL31construct_machine_config_tictacR14machine_configP8device_t+0x54>\n    9ecc:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    9ed0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    9ed4:\tba 00 00 00 00       \tmov    $0x0,%edx\n    9ed9:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    9ede:\t48 89 c7             \tmov    %rax,%rdi\n    9ee1:\te8 00 00 00 00       \tcallq  9ee6 <_ZL31construct_machine_config_tictacR14machine_configP8device_t+0x6e>\n    9ee6:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    9eea:\tba 00 00 00 00       \tmov    $0x0,%edx\n    9eef:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    9ef4:\t48 89 c7             \tmov    %rax,%rdi\n    9ef7:\te8 00 00 00 00       \tcallq  9efc <_ZL31construct_machine_config_tictacR14machine_configP8device_t+0x84>\n    9efc:\t48 8b 5d 90          \tmov    -0x70(%rbp),%rbx\n    9f00:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n    9f04:\t48 89 c7             \tmov    %rax,%rdi\n    9f07:\te8 00 00 00 00       \tcallq  9f0c <_ZL31construct_machine_config_tictacR14machine_configP8device_t+0x94>\n    9f0c:\t48 89 d8             \tmov    %rbx,%rax\n    9f0f:\teb 1a                \tjmp    9f2b <_ZL31construct_machine_config_tictacR14machine_configP8device_t+0xb3>\n    9f11:\t48 89 c3             \tmov    %rax,%rbx\n    9f14:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n    9f18:\t48 89 c7             \tmov    %rax,%rdi\n    9f1b:\te8 00 00 00 00       \tcallq  9f20 <_ZL31construct_machine_config_tictacR14machine_configP8device_t+0xa8>\n    9f20:\t48 89 d8             \tmov    %rbx,%rax\n    9f23:\t48 89 c7             \tmov    %rax,%rdi\n    9f26:\te8 00 00 00 00       \tcallq  9f2b <_ZL31construct_machine_config_tictacR14machine_configP8device_t+0xb3>\n    9f2b:\t48 83 c4 68          \tadd    $0x68,%rsp\n    9f2f:\t5b                   \tpop    %rbx\n    9f30:\t5d                   \tpop    %rbp\n    9f31:\tc3                   \tretq   ", "code_s": "device_t *__fastcall construct_machine_config_tictac(machine_config *a1,\n                                                     device_t *a2) {\n  device_t *v3;\n  char <span class=\"supfact\">v4</span>[Number];\n  __int64 v5;\n  v5 = Number L;\n  astring astring((astring *)<span class=\"supfact\">v4</span>);\n  v3 = construct_machine_config_pitboss(a1, a2);\n  v5 = machine_config device_find(a1, v3, String);\n  device_memory_interface static_set_addrmap(v5, Number L,\n                                             construct_address_map_tictac_map);\n  device_memory_interface static_set_addrmap(\n      v5, Number L, construct_address_map_tictac_io_map);\n  astring ~astring((astring *)<span class=\"supfact\">v4</span>);\n  return v3;\n}", "code_t": "device_t *__cdecl construct_machine_config_tictac(machine_config *config,\n                                                  device_t *owner) {\n  void(__fastcall * v2)(address_map *, const device_t *);\n  void(__fastcall * v3)(address_map *, const device_t *);\n  device_t *ownera;\n  astring <span class=\"supfact\">tempstring</span>;\n  device_t *device;\n  device = Number L;\n  astring astring(&<span class=\"supfact\">tempstring</span>);\n  ownera = construct_machine_config_pitboss(config, owner);\n  device = (device_t *)machine_config device_find(config, ownera, String);\n  device_memory_interface static_set_addrmap(\n      device, Number L, (address_spacenum)construct_address_map_tictac_map, v2);\n  device_memory_interface static_set_addrmap(\n      device, (device_t *)((char *)&loc_1 + Number),\n      (address_spacenum)construct_address_map_tictac_io_map, v3);\n  astring ~astring(&<span class=\"supfact\">tempstring</span>);\n  return ownera;\n}", "var": [{"name": "v4", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "tempstring", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/3da554e7be727d06ab7f4e2330fe40c06e49dc1c481fc3ec5a772104aacc182a", "path_in_repo": "XanClic/qemu//hw/scsi/megasas.o", "objdump": "0000000000002f86 <_nocheck__trace_megasas_dcmd_unhandled>:\n    2f86:\t55                   \tpush   %rbp\n    2f87:\t48 89 e5             \tmov    %rsp,%rbp\n    2f8a:\t41 54                \tpush   %r12\n    2f8c:\t53                   \tpush   %rbx\n    2f8d:\t48 83 ec 30          \tsub    $0x30,%rsp\n    2f91:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n    2f94:\t89 75 c8             \tmov    %esi,-0x38(%rbp)\n    2f97:\t89 55 c4             \tmov    %edx,-0x3c(%rbp)\n    2f9a:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    2fa1:\t00 00 \n    2fa3:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    2fa7:\t31 c0                \txor    %eax,%eax\n    2fa9:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2faf <_nocheck__trace_megasas_dcmd_unhandled+0x29>\n    2faf:\t85 c0                \ttest   %eax,%eax\n    2fb1:\t0f 95 c0             \tsetne  %al\n    2fb4:\t0f b6 c0             \tmovzbl %al,%eax\n    2fb7:\t48 85 c0             \ttest   %rax,%rax\n    2fba:\t74 6f                \tje     302b <_nocheck__trace_megasas_dcmd_unhandled+0xa5>\n    2fbc:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 2fc3 <_nocheck__trace_megasas_dcmd_unhandled+0x3d>\n    2fc3:\t66 85 c0             \ttest   %ax,%ax\n    2fc6:\t74 63                \tje     302b <_nocheck__trace_megasas_dcmd_unhandled+0xa5>\n    2fc8:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n    2fcd:\te8 5b d8 ff ff       \tcallq  82d <qemu_loglevel_mask>\n    2fd2:\t84 c0                \ttest   %al,%al\n    2fd4:\t74 55                \tje     302b <_nocheck__trace_megasas_dcmd_unhandled+0xa5>\n    2fd6:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    2fda:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2fdf:\t48 89 c7             \tmov    %rax,%rdi\n    2fe2:\te8 00 00 00 00       \tcallq  2fe7 <_nocheck__trace_megasas_dcmd_unhandled+0x61>\n    2fe7:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    2feb:\t49 89 c4             \tmov    %rax,%r12\n    2fee:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    2ff2:\t48 89 c3             \tmov    %rax,%rbx\n    2ff5:\te8 00 00 00 00       \tcallq  2ffa <_nocheck__trace_megasas_dcmd_unhandled+0x74>\n    2ffa:\t89 c6                \tmov    %eax,%esi\n    2ffc:\t8b 4d c8             \tmov    -0x38(%rbp),%ecx\n    2fff:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    3002:\t48 83 ec 08          \tsub    $0x8,%rsp\n    3006:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    3009:\t50                   \tpush   %rax\n    300a:\t41 89 c9             \tmov    %ecx,%r9d\n    300d:\t41 89 d0             \tmov    %edx,%r8d\n    3010:\t4c 89 e1             \tmov    %r12,%rcx\n    3013:\t48 89 da             \tmov    %rbx,%rdx\n    3016:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 301d <_nocheck__trace_megasas_dcmd_unhandled+0x97>\n    301d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3022:\te8 00 00 00 00       \tcallq  3027 <_nocheck__trace_megasas_dcmd_unhandled+0xa1>\n    3027:\t48 83 c4 10          \tadd    $0x10,%rsp\n    302b:\t90                   \tnop\n    302c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3030:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    3037:\t00 00 \n    3039:\t74 05                \tje     3040 <_nocheck__trace_megasas_dcmd_unhandled+0xba>\n    303b:\te8 00 00 00 00       \tcallq  3040 <_nocheck__trace_megasas_dcmd_unhandled+0xba>\n    3040:\t48 8d 65 f0          \tlea    -0x10(%rbp),%rsp\n    3044:\t5b                   \tpop    %rbx\n    3045:\t41 5c                \tpop    %r12\n    3047:\t5d                   \tpop    %rbp\n    3048:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_megasas_dcmd_unhandled(\n    unsigned int a1, unsigned int a2, unsigned int a3) {\n  __suseconds_t v3;\n  __time_t v4;\n  unsigned int v5;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v9;\n  v9 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_DCMD_UNHANDLED_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v3 = <span class=\"supfact\">tv</span>.tv_usec;\n    v4 = <span class=\"supfact\">tv</span>.tv_sec;\n    v5 = qemu_get_thread_id();\n    qemu_log(String, v5, v4, v3, a1, a2, a3);\n  }\n  return __readfsqword(Number) ^ v9;\n}", "code_t": "void __cdecl nocheck__trace_megasas_dcmd_unhandled(int cmd, int opcode,\n                                                   int len) {\n  __suseconds_t v3;\n  __time_t v4;\n  unsigned int v5;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v8;\n  v8 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_DCMD_UNHANDLED_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v3 = <span class=\"supfact\">_now</span>.tv_usec;\n    v4 = <span class=\"supfact\">_now</span>.tv_sec;\n    v5 = qemu_get_thread_id();\n    qemu_log(String, v5, v4, v3, (unsigned int)cmd, (unsigned int)opcode,\n             (unsigned int)len);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "nandra", "repo_name": "omap_850_kernel", "path": "nandra/omap_850_kernel/b96d28ded501cd1d6e0292b0d8b2e01709572b59e2eeb0a6e62ef10b207bb64b", "path_in_repo": "nandra/omap_850_kernel/Documentation/lguest/lguest", "objdump": "0000000000402b06 <load_kernel>:\n  402b06:\t55                   \tpush   %rbp\n  402b07:\t48 89 e5             \tmov    %rsp,%rbp\n  402b0a:\t48 83 ec 50          \tsub    $0x50,%rsp\n  402b0e:\t89 7d bc             \tmov    %edi,-0x44(%rbp)\n  402b11:\t48 8d 4d c0          \tlea    -0x40(%rbp),%rcx\n  402b15:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n  402b18:\tba 34 00 00 00       \tmov    $0x34,%edx\n  402b1d:\t48 89 ce             \tmov    %rcx,%rsi\n  402b20:\t89 c7                \tmov    %eax,%edi\n  402b22:\te8 89 f6 ff ff       \tcallq  4021b0 <read@plt>\n  402b27:\t48 83 f8 34          \tcmp    $0x34,%rax\n  402b2b:\t74 14                \tje     402b41 <load_kernel+0x3b>\n  402b2d:\tbe 4f 61 40 00       \tmov    $0x40614f,%esi\n  402b32:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  402b37:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  402b3c:\te8 df f6 ff ff       \tcallq  402220 <err@plt>\n  402b41:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  402b45:\tba 04 00 00 00       \tmov    $0x4,%edx\n  402b4a:\tbe 5e 61 40 00       \tmov    $0x40615e,%esi\n  402b4f:\t48 89 c7             \tmov    %rax,%rdi\n  402b52:\te8 69 f6 ff ff       \tcallq  4021c0 <memcmp@plt>\n  402b57:\t85 c0                \ttest   %eax,%eax\n  402b59:\t75 13                \tjne    402b6e <load_kernel+0x68>\n  402b5b:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n  402b5f:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n  402b62:\t48 89 d6             \tmov    %rdx,%rsi\n  402b65:\t89 c7                \tmov    %eax,%edi\n  402b67:\te8 40 fc ff ff       \tcallq  4027ac <map_elf>\n  402b6c:\teb 0a                \tjmp    402b78 <load_kernel+0x72>\n  402b6e:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n  402b71:\t89 c7                \tmov    %eax,%edi\n  402b73:\te8 a6 fe ff ff       \tcallq  402a1e <load_bzimage>\n  402b78:\tc9                   \tleaveq \n  402b79:\tc3                   \tretq   ", "code_s": "__int64 __fastcall load_kernel(int a1) {\n  __int64 result;\n  char <span class=\"supfact\">buf</span>[Number];\n  if (read(a1, <span class=\"supfact\">buf</span>, Number) != Number)\n    err(Number, String);\n  if (!memcmp(<span class=\"supfact\">buf</span>, &unk_40615E, Number))\n    result = map_elf(a1, (__int64)<span class=\"supfact\">buf</span>);\n  else\n    result = load_bzimage(a1);\n  return result;\n}", "code_t": "unsigned __int64 __cdecl load_kernel(int fd) {\n  unsigned __int64 result;\n  Elf32_Ehdr <span class=\"supfact\">hdr</span>;\n  if (read(fd, &<span class=\"supfact\">hdr</span>, Number) != Number)\n    err(Number, String);\n  if (!memcmp(&<span class=\"supfact\">hdr</span>, &unk_40615E, Number))\n    result = map_elf(fd, &<span class=\"supfact\">hdr</span>);\n  else\n    result = load_bzimage(fd);\n  return result;\n}", "var": [{"name": "buf", "type": "char[50]", "ref_name": "hdr", "ref_type": "struct Elf32_Ehdr { unsigned __int8[16] e_ident; Elf32_Half e_type; Elf32_Half e_machine; Elf32_Word e_version; Elf32_Addr e_entry; Elf32_Off e_phoff; Elf32_Off e_shoff; Elf32_Word e_flags; Elf32_Half e_ehsize; Elf32_Half e_phentsize; Elf32_Half e_phnum; Elf32_Half e_shentsize; Elf32_Half e_shnum; Elf32_Half e_shstrndx; }"}], "body_in_train": false}, {"repo_owner": "OESF", "repo_name": "Linaro-Android_LinaroSprint2011Q1", "path": "OESF/Linaro-Android_LinaroSprint2011Q1/9e0e7bde95273e1fe6f3b943d51edf52247370223421fae7a37e694b6d83fa18", "path_in_repo": "OESF/Linaro-Android_LinaroSprint2011Q1/tools/perf/builtin-top.o", "objdump": "0000000000003941 <__cmd_top>:\n    3941:\t55                   \tpush   %rbp\n    3942:\t48 89 e5             \tmov    %rsp,%rbp\n    3945:\t48 83 ec 30          \tsub    $0x30,%rsp\n    3949:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    3950:\t00 00 \n    3952:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    3956:\t31 c0                \txor    %eax,%eax\n    3958:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    395d:\tba 00 00 00 00       \tmov    $0x0,%edx\n    3962:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    3967:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    396c:\te8 00 00 00 00       \tcallq  3971 <__cmd_top+0x30>\n    3971:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    3975:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    397a:\t75 1d                \tjne    3999 <__cmd_top+0x58>\n    397c:\tb8 f4 ff ff ff       \tmov    $0xfffffff4,%eax\n    3981:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    3985:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n    398c:\t00 00 \n    398e:\t0f 84 76 01 00 00    \tje     3b0a <__cmd_top+0x1c9>\n    3994:\te9 6c 01 00 00       \tjmpq   3b05 <__cmd_top+0x1c4>\n    3999:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 399f <__cmd_top+0x5e>\n    399f:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    39a2:\t74 18                \tje     39bc <__cmd_top+0x7b>\n    39a4:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 39aa <__cmd_top+0x69>\n    39aa:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    39ae:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    39b3:\t89 c7                \tmov    %eax,%edi\n    39b5:\te8 00 00 00 00       \tcallq  39ba <__cmd_top+0x79>\n    39ba:\teb 11                \tjmp    39cd <__cmd_top+0x8c>\n    39bc:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    39c0:\t48 89 c6             \tmov    %rax,%rsi\n    39c3:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    39c8:\te8 00 00 00 00       \tcallq  39cd <__cmd_top+0x8c>\n    39cd:\tc7 45 d8 00 00 00 00 \tmovl   $0x0,-0x28(%rbp)\n    39d4:\teb 35                \tjmp    3a0b <__cmd_top+0xca>\n    39d6:\tc7 05 00 00 00 00 ff \tmovl   $0xffffffff,0x0(%rip)        # 39e0 <__cmd_top+0x9f>\n    39dd:\tff ff ff \n    39e0:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n    39e7:\teb 13                \tjmp    39fc <__cmd_top+0xbb>\n    39e9:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n    39ec:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    39ef:\t89 d6                \tmov    %edx,%esi\n    39f1:\t89 c7                \tmov    %eax,%edi\n    39f3:\te8 d4 f9 ff ff       \tcallq  33cc <start_counter>\n    39f8:\t83 45 dc 01          \taddl   $0x1,-0x24(%rbp)\n    39fc:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 3a02 <__cmd_top+0xc1>\n    3a02:\t39 45 dc             \tcmp    %eax,-0x24(%rbp)\n    3a05:\t7c e2                \tjl     39e9 <__cmd_top+0xa8>\n    3a07:\t83 45 d8 01          \taddl   $0x1,-0x28(%rbp)\n    3a0b:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 3a11 <__cmd_top+0xd0>\n    3a11:\t39 45 d8             \tcmp    %eax,-0x28(%rbp)\n    3a14:\t7c c0                \tjl     39d6 <__cmd_top+0x95>\n    3a16:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 3a1c <__cmd_top+0xdb>\n    3a1c:\t48 63 c8             \tmovslq %eax,%rcx\n    3a1f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3a26 <__cmd_top+0xe5>\n    3a26:\tba 64 00 00 00       \tmov    $0x64,%edx\n    3a2b:\t48 89 ce             \tmov    %rcx,%rsi\n    3a2e:\t48 89 c7             \tmov    %rax,%rdi\n    3a31:\te8 00 00 00 00       \tcallq  3a36 <__cmd_top+0xf5>\n    3a36:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3a3a:\t48 89 c7             \tmov    %rax,%rdi\n    3a3d:\te8 d0 f8 ff ff       \tcallq  3312 <perf_session__mmap_read>\n    3a42:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    3a46:\t48 8d 45 e8          \tlea    -0x18(%rbp),%rax\n    3a4a:\t48 89 d1             \tmov    %rdx,%rcx\n    3a4d:\tba 00 00 00 00       \tmov    $0x0,%edx\n    3a52:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    3a57:\t48 89 c7             \tmov    %rax,%rdi\n    3a5a:\te8 00 00 00 00       \tcallq  3a5f <__cmd_top+0x11e>\n    3a5f:\t85 c0                \ttest   %eax,%eax\n    3a61:\t74 14                \tje     3a77 <__cmd_top+0x136>\n    3a63:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3a68:\te8 00 00 00 00       \tcallq  3a6d <__cmd_top+0x12c>\n    3a6d:\tbf ff ff ff ff       \tmov    $0xffffffff,%edi\n    3a72:\te8 00 00 00 00       \tcallq  3a77 <__cmd_top+0x136>\n    3a77:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 3a7d <__cmd_top+0x13c>\n    3a7d:\t85 c0                \ttest   %eax,%eax\n    3a7f:\t74 37                \tje     3ab8 <__cmd_top+0x177>\n    3a81:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 3a87 <__cmd_top+0x146>\n    3a87:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n    3a8a:\t48 8d 45 d4          \tlea    -0x2c(%rbp),%rax\n    3a8e:\t48 89 c2             \tmov    %rax,%rdx\n    3a91:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    3a96:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3a9b:\te8 00 00 00 00       \tcallq  3aa0 <__cmd_top+0x15f>\n    3aa0:\t85 c0                \ttest   %eax,%eax\n    3aa2:\t74 14                \tje     3ab8 <__cmd_top+0x177>\n    3aa4:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3aa9:\te8 00 00 00 00       \tcallq  3aae <__cmd_top+0x16d>\n    3aae:\tbf ff ff ff ff       \tmov    $0xffffffff,%edi\n    3ab3:\te8 00 00 00 00       \tcallq  3ab8 <__cmd_top+0x177>\n    3ab8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3abf <__cmd_top+0x17e>\n    3abf:\t89 45 e0             \tmov    %eax,-0x20(%rbp)\n    3ac2:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3ac6:\t48 89 c7             \tmov    %rax,%rdi\n    3ac9:\te8 44 f8 ff ff       \tcallq  3312 <perf_session__mmap_read>\n    3ace:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n    3ad1:\t48 63 d0             \tmovslq %eax,%rdx\n    3ad4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3adb <__cmd_top+0x19a>\n    3adb:\t48 39 c2             \tcmp    %rax,%rdx\n    3ade:\t75 d8                \tjne    3ab8 <__cmd_top+0x177>\n    3ae0:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 3ae6 <__cmd_top+0x1a5>\n    3ae6:\t48 63 c8             \tmovslq %eax,%rcx\n    3ae9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3af0 <__cmd_top+0x1af>\n    3af0:\tba 64 00 00 00       \tmov    $0x64,%edx\n    3af5:\t48 89 ce             \tmov    %rcx,%rsi\n    3af8:\t48 89 c7             \tmov    %rax,%rdi\n    3afb:\te8 00 00 00 00       \tcallq  3b00 <__cmd_top+0x1bf>\n    3b00:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n    3b03:\teb b3                \tjmp    3ab8 <__cmd_top+0x177>\n    3b05:\te8 00 00 00 00       \tcallq  3b0a <__cmd_top+0x1c9>\n    3b0a:\tc9                   \tleaveq \n    3b0b:\tc3                   \tretq   ", "code_s": "__int64 _cmd_top() {\n  struct sched_param <span class=\"supfact\">param</span>;\n  int i;\n  int j;\n  int v4;\n  int v5;\n  pthread_t newthread;\n  void *arg;\n  unsigned __int64 v8;\n  v8 = __readfsqword(Number);\n  arg = (void *)perf_session__new(Number L, Number L, Number L, Number L);\n  if (arg) {\n    if (target_tid == Number)\n      event__synthesize_threads(event__process, arg);\n    else\n      event__synthesize_thread((unsigned int)target_tid, event__process, arg);\n    for (i = Number; i < nr_cpus; ++i) {\n      group_fd = Number;\n      for (j = Number; j < nr_counters; ++j)\n        start_counter(i, j);\n    }\n    poll(event_array, nr_poll, Number);\n    perf_session__mmap_read((__int64)arg);\n    if (pthread_create(&newthread, Number L, (void *(*)(void *))display_thread,\n                       arg)) {\n      puts(String);\n      exit(Number);\n    }\n    if (realtime_prio) {\n      <span class=\"supfact\">param</span>.__sched_priority = realtime_prio;\n      if (sched_setscheduler(Number, Number, &<span class=\"supfact\">param</span>)) {\n        puts(String);\n        exit(Number);\n      }\n    }\n    while (Number) {\n      do {\n        v4 = samples;\n        perf_session__mmap_read((__int64)arg);\n      } while (v4 != samples);\n      v5 = poll(event_array, nr_poll, Number);\n    }\n  }\n  return Number L;\n}", "code_t": "int __cdecl _cmd_top() {\n  sched_param <span class=\"supfact\">param</span>;\n  int i;\n  int counter;\n  int hits;\n  int ret;\n  pthread_t thread;\n  perf_session *session;\n  unsigned __int64 v8;\n  v8 = __readfsqword(Number);\n  session =\n      (perf_session *)perf_session__new(Number L, Number L, Number L, Number L);\n  if (session) {\n    if (target_tid == Number)\n      event__synthesize_threads(event__process, session);\n    else\n      event__synthesize_thread((unsigned int)target_tid, event__process,\n                               session);\n    for (i = Number; i < nr_cpus; ++i) {\n      group_fd = Number;\n      for (counter = Number; counter < nr_counters; ++counter)\n        start_counter(i, counter);\n    }\n    poll(event_array, nr_poll, Number);\n    perf_session__mmap_read(session);\n    if (pthread_create(&thread, Number L, (void *(*)(void *))display_thread,\n                       session)) {\n      puts(String);\n      exit(Number);\n    }\n    if (realtime_prio) {\n      <span class=\"supfact\">param</span>.sched_priority = realtime_prio;\n      if (sched_setscheduler(Number, Number, &<span class=\"supfact\">param</span>)) {\n        puts(String);\n        exit(Number);\n      }\n    }\n    while (Number) {\n      do {\n        hits = samples;\n        perf_session__mmap_read(session);\n      } while (hits != samples);\n      ret = poll(event_array, nr_poll, Number);\n    }\n  }\n  return Number;\n}", "var": [{"name": "param", "type": "struct sched_param { int sched_priority; }", "ref_name": "param", "ref_type": "struct sched_param { int sched_priority; }"}], "body_in_train": false}, {"repo_owner": "giamteckchoon", "repo_name": "djbdns-ipv6", "path": "giamteckchoon/djbdns-ipv6/2946bc6b2cb1a1e1216fa683dccd2a7add36cbec1239142ef60136aebebb1da7", "path_in_repo": "giamteckchoon/djbdns-ipv6//axfr-get", "objdump": "", "code_s": "_QWORD *__fastcall sub_403E50(_QWORD *a1) {\n  _QWORD *result;\n  struct timeval <span class=\"supfact\">tv</span>;\n  gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n  *a1 = <span class=\"supfact\">tv</span>.tv_sec + Number;\n  a1[Number] = Number * <span class=\"supfact\">tv</span>.tv_usec + Number;\n  result = a1;\n  a1[Number] = Number L;\n  return result;\n}", "code_t": "_QWORD *__fastcall sub_403E50(_QWORD *a1) {\n  _QWORD *result;\n  struct timeval <span class=\"supfact\">tv</span>;\n  gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n  *a1 = <span class=\"supfact\">tv</span>.tv_sec + Number;\n  a1[Number] = Number * <span class=\"supfact\">tv</span>.tv_usec + Number;\n  result = a1;\n  a1[Number] = Number L;\n  return result;\n}", "var": [{"name": "tv", "type": "struct struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "tv", "ref_type": "struct struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "grivon", "repo_name": "yabusame-qemu-dpt", "path": "grivon/yabusame-qemu-dpt/d09cde138898c4294be79b0cc8f2bf6de27e338c94814fa2ab88ac4fbb6d3e4b", "path_in_repo": "grivon/yabusame-qemu-dpt//sparc-linux-user/signal.o", "objdump": "0000000000001d2a <do_sigreturn>:\n    1d2a:\t55                   \tpush   %rbp\n    1d2b:\t48 89 e5             \tmov    %rsp,%rbp\n    1d2e:\t53                   \tpush   %rbx\n    1d2f:\t48 81 ec d8 00 00 00 \tsub    $0xd8,%rsp\n    1d36:\t48 89 bd 28 ff ff ff \tmov    %rdi,-0xd8(%rbp)\n    1d3d:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    1d44:\t00 00 \n    1d46:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    1d4a:\t31 c0                \txor    %eax,%eax\n    1d4c:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    1d53:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    1d57:\t8b 40 18             \tmov    0x18(%rax),%eax\n    1d5a:\t89 85 4c ff ff ff    \tmov    %eax,-0xb4(%rbp)\n    1d60:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n    1d66:\tb9 01 00 00 00       \tmov    $0x1,%ecx\n    1d6b:\tba e0 02 00 00       \tmov    $0x2e0,%edx\n    1d70:\t89 c6                \tmov    %eax,%esi\n    1d72:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1d77:\te8 c6 e3 ff ff       \tcallq  142 <lock_user>\n    1d7c:\t48 89 85 50 ff ff ff \tmov    %rax,-0xb0(%rbp)\n    1d83:\t48 83 bd 50 ff ff ff \tcmpq   $0x0,-0xb0(%rbp)\n    1d8a:\t00 \n    1d8b:\t0f 84 eb 02 00 00    \tje     207c <do_sigreturn+0x352>\n    1d91:\t8b 85 4c ff ff ff    \tmov    -0xb4(%rbp),%eax\n    1d97:\t83 e0 03             \tand    $0x3,%eax\n    1d9a:\t85 c0                \ttest   %eax,%eax\n    1d9c:\t0f 85 dd 02 00 00    \tjne    207f <do_sigreturn+0x355>\n    1da2:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    1da9:\t48 83 c0 6c          \tadd    $0x6c,%rax\n    1dad:\t8b 00                \tmov    (%rax),%eax\n    1daf:\t89 c7                \tmov    %eax,%edi\n    1db1:\te8 b9 e2 ff ff       \tcallq  6f <tswap32>\n    1db6:\t89 85 48 ff ff ff    \tmov    %eax,-0xb8(%rbp)\n    1dbc:\t90                   \tnop\n    1dbd:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1dc2:\t89 85 38 ff ff ff    \tmov    %eax,-0xc8(%rbp)\n    1dc8:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    1dcf:\t48 83 c0 70          \tadd    $0x70,%rax\n    1dd3:\t8b 00                \tmov    (%rax),%eax\n    1dd5:\t89 c7                \tmov    %eax,%edi\n    1dd7:\te8 93 e2 ff ff       \tcallq  6f <tswap32>\n    1ddc:\t89 85 44 ff ff ff    \tmov    %eax,-0xbc(%rbp)\n    1de2:\t90                   \tnop\n    1de3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1de8:\t09 85 38 ff ff ff    \tor     %eax,-0xc8(%rbp)\n    1dee:\t8b 85 48 ff ff ff    \tmov    -0xb8(%rbp),%eax\n    1df4:\t0b 85 44 ff ff ff    \tor     -0xbc(%rbp),%eax\n    1dfa:\t83 e0 03             \tand    $0x3,%eax\n    1dfd:\t85 c0                \ttest   %eax,%eax\n    1dff:\t0f 85 7d 02 00 00    \tjne    2082 <do_sigreturn+0x358>\n    1e05:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    1e0c:\t48 83 c0 68          \tadd    $0x68,%rax\n    1e10:\t8b 00                \tmov    (%rax),%eax\n    1e12:\t89 c7                \tmov    %eax,%edi\n    1e14:\te8 56 e2 ff ff       \tcallq  6f <tswap32>\n    1e19:\t89 85 40 ff ff ff    \tmov    %eax,-0xc0(%rbp)\n    1e1f:\t90                   \tnop\n    1e20:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1e25:\t09 85 38 ff ff ff    \tor     %eax,-0xc8(%rbp)\n    1e2b:\t8b 85 40 ff ff ff    \tmov    -0xc0(%rbp),%eax\n    1e31:\t25 00 00 f0 00       \tand    $0xf00000,%eax\n    1e36:\t89 c2                \tmov    %eax,%edx\n    1e38:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    1e3f:\t8b 40 50             \tmov    0x50(%rax),%eax\n    1e42:\t25 ff ff 0f ff       \tand    $0xff0fffff,%eax\n    1e47:\t09 c2                \tor     %eax,%edx\n    1e49:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    1e50:\t89 50 50             \tmov    %edx,0x50(%rax)\n    1e53:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    1e5a:\t8b 95 48 ff ff ff    \tmov    -0xb8(%rbp),%edx\n    1e60:\t89 50 28             \tmov    %edx,0x28(%rax)\n    1e63:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    1e6a:\t8b 95 44 ff ff ff    \tmov    -0xbc(%rbp),%edx\n    1e70:\t89 50 2c             \tmov    %edx,0x2c(%rax)\n    1e73:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    1e7a:\t48 83 c0 74          \tadd    $0x74,%rax\n    1e7e:\t8b 00                \tmov    (%rax),%eax\n    1e80:\t89 c7                \tmov    %eax,%edi\n    1e82:\te8 e8 e1 ff ff       \tcallq  6f <tswap32>\n    1e87:\t48 8b 95 28 ff ff ff \tmov    -0xd8(%rbp),%rdx\n    1e8e:\t89 42 30             \tmov    %eax,0x30(%rdx)\n    1e91:\t90                   \tnop\n    1e92:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1e97:\t09 85 38 ff ff ff    \tor     %eax,-0xc8(%rbp)\n    1e9d:\tc7 85 3c ff ff ff 00 \tmovl   $0x0,-0xc4(%rbp)\n    1ea4:\t00 00 00 \n    1ea7:\teb 51                \tjmp    1efa <do_sigreturn+0x1d0>\n    1ea9:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n    1eaf:\t48 98                \tcltq   \n    1eb1:\t48 83 c0 1c          \tadd    $0x1c,%rax\n    1eb5:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    1ebc:\t00 \n    1ebd:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    1ec4:\t48 01 d0             \tadd    %rdx,%rax\n    1ec7:\t48 83 c0 08          \tadd    $0x8,%rax\n    1ecb:\t8b 00                \tmov    (%rax),%eax\n    1ecd:\t89 c7                \tmov    %eax,%edi\n    1ecf:\te8 9b e1 ff ff       \tcallq  6f <tswap32>\n    1ed4:\t48 8b 95 28 ff ff ff \tmov    -0xd8(%rbp),%rdx\n    1edb:\t8b 8d 3c ff ff ff    \tmov    -0xc4(%rbp),%ecx\n    1ee1:\t48 63 c9             \tmovslq %ecx,%rcx\n    1ee4:\t89 04 8a             \tmov    %eax,(%rdx,%rcx,4)\n    1ee7:\t90                   \tnop\n    1ee8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1eed:\t09 85 38 ff ff ff    \tor     %eax,-0xc8(%rbp)\n    1ef3:\t83 85 3c ff ff ff 01 \taddl   $0x1,-0xc4(%rbp)\n    1efa:\t83 bd 3c ff ff ff 07 \tcmpl   $0x7,-0xc4(%rbp)\n    1f01:\t7e a6                \tjle    1ea9 <do_sigreturn+0x17f>\n    1f03:\tc7 85 3c ff ff ff 00 \tmovl   $0x0,-0xc4(%rbp)\n    1f0a:\t00 00 00 \n    1f0d:\teb 5f                \tjmp    1f6e <do_sigreturn+0x244>\n    1f0f:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n    1f15:\t83 c0 08             \tadd    $0x8,%eax\n    1f18:\t48 98                \tcltq   \n    1f1a:\t48 83 c0 1c          \tadd    $0x1c,%rax\n    1f1e:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    1f25:\t00 \n    1f26:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    1f2d:\t48 01 d0             \tadd    %rdx,%rax\n    1f30:\t48 83 c0 08          \tadd    $0x8,%rax\n    1f34:\t8b 00                \tmov    (%rax),%eax\n    1f36:\t48 8b 95 28 ff ff ff \tmov    -0xd8(%rbp),%rdx\n    1f3d:\t48 8b 52 20          \tmov    0x20(%rdx),%rdx\n    1f41:\t8b 8d 3c ff ff ff    \tmov    -0xc4(%rbp),%ecx\n    1f47:\t48 63 c9             \tmovslq %ecx,%rcx\n    1f4a:\t48 c1 e1 02          \tshl    $0x2,%rcx\n    1f4e:\t48 8d 1c 0a          \tlea    (%rdx,%rcx,1),%rbx\n    1f52:\t89 c7                \tmov    %eax,%edi\n    1f54:\te8 16 e1 ff ff       \tcallq  6f <tswap32>\n    1f59:\t89 03                \tmov    %eax,(%rbx)\n    1f5b:\t90                   \tnop\n    1f5c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1f61:\t09 85 38 ff ff ff    \tor     %eax,-0xc8(%rbp)\n    1f67:\t83 85 3c ff ff ff 01 \taddl   $0x1,-0xc4(%rbp)\n    1f6e:\t83 bd 3c ff ff ff 07 \tcmpl   $0x7,-0xc4(%rbp)\n    1f75:\t7e 98                \tjle    1f0f <do_sigreturn+0x1e5>\n    1f77:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    1f7e:\t48 05 b8 00 00 00    \tadd    $0xb8,%rax\n    1f84:\t8b 00                \tmov    (%rax),%eax\n    1f86:\t89 c7                \tmov    %eax,%edi\n    1f88:\te8 e2 e0 ff ff       \tcallq  6f <tswap32>\n    1f8d:\t89 85 58 ff ff ff    \tmov    %eax,-0xa8(%rbp)\n    1f93:\t90                   \tnop\n    1f94:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1f99:\t09 85 38 ff ff ff    \tor     %eax,-0xc8(%rbp)\n    1f9f:\tc7 85 3c ff ff ff 01 \tmovl   $0x1,-0xc4(%rbp)\n    1fa6:\t00 00 00 \n    1fa9:\teb 51                \tjmp    1ffc <do_sigreturn+0x2d2>\n    1fab:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n    1fb1:\t83 e8 01             \tsub    $0x1,%eax\n    1fb4:\t48 98                \tcltq   \n    1fb6:\t48 83 c0 30          \tadd    $0x30,%rax\n    1fba:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    1fc1:\t00 \n    1fc2:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    1fc9:\t48 01 d0             \tadd    %rdx,%rax\n    1fcc:\t48 83 c0 08          \tadd    $0x8,%rax\n    1fd0:\t8b 00                \tmov    (%rax),%eax\n    1fd2:\t89 c7                \tmov    %eax,%edi\n    1fd4:\te8 96 e0 ff ff       \tcallq  6f <tswap32>\n    1fd9:\t8b 95 3c ff ff ff    \tmov    -0xc4(%rbp),%edx\n    1fdf:\t48 63 d2             \tmovslq %edx,%rdx\n    1fe2:\t89 84 95 58 ff ff ff \tmov    %eax,-0xa8(%rbp,%rdx,4)\n    1fe9:\t90                   \tnop\n    1fea:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1fef:\t09 85 38 ff ff ff    \tor     %eax,-0xc8(%rbp)\n    1ff5:\t83 85 3c ff ff ff 01 \taddl   $0x1,-0xc4(%rbp)\n    1ffc:\t83 bd 3c ff ff ff 01 \tcmpl   $0x1,-0xc4(%rbp)\n    2003:\t7e a6                \tjle    1fab <do_sigreturn+0x281>\n    2005:\t48 8d 95 58 ff ff ff \tlea    -0xa8(%rbp),%rdx\n    200c:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n    2013:\t48 89 d6             \tmov    %rdx,%rsi\n    2016:\t48 89 c7             \tmov    %rax,%rdi\n    2019:\te8 43 e5 ff ff       \tcallq  561 <target_to_host_sigset_internal>\n    201e:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n    2025:\tba 00 00 00 00       \tmov    $0x0,%edx\n    202a:\t48 89 c6             \tmov    %rax,%rsi\n    202d:\tbf 02 00 00 00       \tmov    $0x2,%edi\n    2032:\te8 00 00 00 00       \tcallq  2037 <do_sigreturn+0x30d>\n    2037:\t83 bd 38 ff ff ff 00 \tcmpl   $0x0,-0xc8(%rbp)\n    203e:\t75 45                \tjne    2085 <do_sigreturn+0x35b>\n    2040:\t8b 8d 4c ff ff ff    \tmov    -0xb4(%rbp),%ecx\n    2046:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    204d:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2052:\t89 ce                \tmov    %ecx,%esi\n    2054:\t48 89 c7             \tmov    %rax,%rdi\n    2057:\te8 4d e1 ff ff       \tcallq  1a9 <unlock_user>\n    205c:\t48 8b 85 28 ff ff ff \tmov    -0xd8(%rbp),%rax\n    2063:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    2067:\t8b 00                \tmov    (%rax),%eax\n    2069:\t89 c0                \tmov    %eax,%eax\n    206b:\t48 8b 5d e8          \tmov    -0x18(%rbp),%rbx\n    206f:\t64 48 33 1c 25 28 00 \txor    %fs:0x28,%rbx\n    2076:\t00 00 \n    2078:\t74 37                \tje     20b1 <do_sigreturn+0x387>\n    207a:\teb 30                \tjmp    20ac <do_sigreturn+0x382>\n    207c:\t90                   \tnop\n    207d:\teb 07                \tjmp    2086 <do_sigreturn+0x35c>\n    207f:\t90                   \tnop\n    2080:\teb 04                \tjmp    2086 <do_sigreturn+0x35c>\n    2082:\t90                   \tnop\n    2083:\teb 01                \tjmp    2086 <do_sigreturn+0x35c>\n    2085:\t90                   \tnop\n    2086:\t8b 8d 4c ff ff ff    \tmov    -0xb4(%rbp),%ecx\n    208c:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    2093:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2098:\t89 ce                \tmov    %ecx,%esi\n    209a:\t48 89 c7             \tmov    %rax,%rdi\n    209d:\te8 07 e1 ff ff       \tcallq  1a9 <unlock_user>\n    20a2:\tbf 0b 00 00 00       \tmov    $0xb,%edi\n    20a7:\te8 35 ed ff ff       \tcallq  de1 <force_sig>\n    20ac:\te8 00 00 00 00       \tcallq  20b1 <do_sigreturn+0x387>\n    20b1:\t48 81 c4 d8 00 00 00 \tadd    $0xd8,%rsp\n    20b8:\t5b                   \tpop    %rbx\n    20b9:\t5d                   \tpop    %rbp\n    20ba:\tc3                   \tretq   ", "code_s": "__int64 __fastcall do_sigreturn(__int64 a1) {\n  _DWORD *v1;\n  int i;\n  int j;\n  int k;\n  int v6;\n  int v7;\n  unsigned int v8;\n  unsigned int *v9;\n  int <span class=\"supfact\">v10</span>[Number];\n  sigset_t <span class=\"supfact\">set</span>;\n  unsigned __int64 v12;\n  v12 = __readfsqword(Number);\n  v8 = *(_DWORD *)(*(_QWORD *)(a1 + Number) + Number L);\n  v9 = (unsigned int *)lock_user(Number, v8, Number);\n  if (!v9 || (v8 & Number) != Number ||\n      (v7 = tswap32(v9[Number]), v6 = tswap32(v9[Number]),\n       (((unsigned __int8)v6 | (unsigned __int8)v7) & Number) != Number)) {\n    unlock_user(v9, v8, Number L);\n    force_sig(Number);\n  }\n  *(_DWORD *)(a1 + Number) =\n      *(_DWORD *)(a1 + Number) & Number | tswap32(v9[Number]) & Number;\n  *(_DWORD *)(a1 + Number) = v7;\n  *(_DWORD *)(a1 + Number) = v6;\n  *(_DWORD *)(a1 + Number) = tswap32(v9[Number]);\n  for (i = Number; i <= Number; ++i)\n    *(_DWORD *)(a1 + Number L * i) = tswap32(v9[i + Number]);\n  for (j = Number; j <= Number; ++j) {\n    v1 = (_DWORD *)(*(_QWORD *)(a1 + Number) + Number L * j);\n    *v1 = tswap32(v9[j + Number]);\n  }\n  <span class=\"supfact\">v10</span>[Number] = tswap32(v9[Number]);\n  for (k = Number; k <= Number; ++k)\n    <span class=\"supfact\">v10</span>[k] = tswap32(v9[k + Number]);\n  target_to_host_sigset_internal(&<span class=\"supfact\">set</span>,\n                                 (__int64)<span class=\"supfact\">v10</span>);\n  sigprocmask(Number, &<span class=\"supfact\">set</span>, Number L);\n  unlock_user(v9, v8, Number L);\n  return **(unsigned int **)(a1 + Number);\n}", "code_t": "__int64 __cdecl do_sigreturn(CPUSPARCState_0 *env) {\n  target_ulong *v1;\n  int i;\n  int ia;\n  int ib;\n  target_ulong npc;\n  target_ulong pc;\n  target_ulong sf_addr;\n  target_signal_frame *sf_0;\n  target_sigset_t <span class=\"supfact\">set</span>;\n  sigset_t <span class=\"supfact\">host_set</span>;\n  unsigned __int64 v12;\n  v12 = __readfsqword(Number);\n  sf_addr = env->regwptr[Number];\n  sf_0 = (target_signal_frame *)lock_user(Number, sf_addr, Number L, Number);\n  if (!sf_0 || (sf_addr & Number) != Number ||\n      (pc = tswap32(sf_0->info.si_regs.pc),\n       npc = tswap32(sf_0->info.si_regs.npc),\n       (((unsigned __int8)npc | (unsigned __int8)pc) & Number) != Number)) {\n    unlock_user(sf_0, sf_addr, Number L);\n    force_sig(Number);\n  }\n  env->psr = env->psr & Number | tswap32(sf_0->info.si_regs.psr) & Number;\n  env->pc = pc;\n  env->npc = npc;\n  env->y = tswap32(sf_0->info.si_regs.y);\n  for (i = Number; i <= Number; ++i)\n    env->gregs[i] = tswap32(sf_0->info.si_regs.u_regs[i]);\n  for (ia = Number; ia <= Number; ++ia) {\n    v1 = &env->regwptr[ia];\n    *v1 = tswap32(sf_0->info.si_regs.u_regs[ia + Number]);\n  }\n  <span class=\"supfact\">set</span>.sig[Number] = tswap32(sf_0->info.si_mask);\n  for (ib = Number; ib <= Number; ++ib)\n    <span class=\"supfact\">set</span>.sig[ib] = tswap32(sf_0->insns[ib + Number]);\n  target_to_host_sigset_internal(&<span class=\"supfact\">host_set</span>,\n                                 &<span class=\"supfact\">set</span>);\n  sigprocmask(Number, &<span class=\"supfact\">host_set</span>, Number L);\n  unlock_user(sf_0, sf_addr, Number L);\n  return *env->regwptr;\n}", "var": [{"name": "set", "type": "struct sigset_t { unsigned __int64[16] __val; }", "ref_name": "host_set", "ref_type": "struct sigset_t { unsigned __int64[16] __val; }"}, {"name": "v10", "type": "struct target_sigset_t { abi_ulong[2] sig; }", "ref_name": "set", "ref_type": "struct target_sigset_t { abi_ulong[2] sig; }"}], "body_in_train": false}, {"repo_owner": "mstoilov", "repo_name": "rpatk", "path": "mstoilov/rpatk/854f3e568a9afd98774cedd7c686e4f523f055fb0146229d91c795c01c512cf8", "path_in_repo": "mstoilov/rpatk/rvm/build/unix/x86_64/out/librvm.so.2.0", "objdump": "000000000000d202 <rvm_reg_create_ophandler>:\n    d202:\t55                   \tpush   %rbp\n    d203:\t48 89 e5             \tmov    %rsp,%rbp\n    d206:\t48 83 ec 20          \tsub    $0x20,%rsp\n    d20a:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    d20e:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    d212:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n    d216:\t48 89 d6             \tmov    %rdx,%rsi\n    d219:\t48 89 c7             \tmov    %rax,%rdi\n    d21c:\te8 ff 73 ff ff       \tcallq  4620 <rvm_reg_setophandler@plt>\n    d221:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    d225:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    d229:\tc9                   \tleaveq \n    d22a:\tc3                   \tretq   ", "code_s": "__int64 __fastcall rvm_reg_create_ophandler(__int64 a1) {\n  __int64 <span class=\"supfact\">v2</span>;\n  rvm_reg_setophandler(&<span class=\"supfact\">v2</span>, a1);\n  return <span class=\"supfact\">v2</span>;\n}", "code_t": "rvmreg_t __cdecl rvm_reg_create_ophandler(rpointer p) {\n  rvmreg_t <span class=\"supfact\">r</span>;\n  rvm_reg_setophandler(&<span class=\"supfact\">r</span>, p);\n  return <span class=\"supfact\">r</span>;\n}", "var": [{"name": "v2", "type": "rmap_t *", "ref_name": "r", "ref_type": "struct rvmreg_t { $8B83D36BBA2B5A9DA35EC761161D149E v; ruint32 size; rvmreg_type_t type; rvmreg_flags_t flags; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/d4a3e7148b67bff6fe668513f6b0b311eb206e1822da210277eb341beb1dc43d", "path_in_repo": "XanClic/qemu//arm-softmmu/hw/arm/smmuv3.o", "objdump": "0000000000001863 <_nocheck__trace_smmuv3_cmdq_cfgi_cd>:\n    1863:\t55                   \tpush   %rbp\n    1864:\t48 89 e5             \tmov    %rsp,%rbp\n    1867:\t41 54                \tpush   %r12\n    1869:\t53                   \tpush   %rbx\n    186a:\t48 83 ec 30          \tsub    $0x30,%rsp\n    186e:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n    1871:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    1878:\t00 00 \n    187a:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    187e:\t31 c0                \txor    %eax,%eax\n    1880:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1886 <_nocheck__trace_smmuv3_cmdq_cfgi_cd+0x23>\n    1886:\t85 c0                \ttest   %eax,%eax\n    1888:\t0f 95 c0             \tsetne  %al\n    188b:\t0f b6 c0             \tmovzbl %al,%eax\n    188e:\t48 85 c0             \ttest   %rax,%rax\n    1891:\t74 5d                \tje     18f0 <_nocheck__trace_smmuv3_cmdq_cfgi_cd+0x8d>\n    1893:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 189a <_nocheck__trace_smmuv3_cmdq_cfgi_cd+0x37>\n    189a:\t66 85 c0             \ttest   %ax,%ax\n    189d:\t74 51                \tje     18f0 <_nocheck__trace_smmuv3_cmdq_cfgi_cd+0x8d>\n    189f:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n    18a4:\te8 a8 ea ff ff       \tcallq  351 <qemu_loglevel_mask>\n    18a9:\t84 c0                \ttest   %al,%al\n    18ab:\t74 43                \tje     18f0 <_nocheck__trace_smmuv3_cmdq_cfgi_cd+0x8d>\n    18ad:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    18b1:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    18b6:\t48 89 c7             \tmov    %rax,%rdi\n    18b9:\te8 00 00 00 00       \tcallq  18be <_nocheck__trace_smmuv3_cmdq_cfgi_cd+0x5b>\n    18be:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    18c2:\t49 89 c4             \tmov    %rax,%r12\n    18c5:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    18c9:\t48 89 c3             \tmov    %rax,%rbx\n    18cc:\te8 00 00 00 00       \tcallq  18d1 <_nocheck__trace_smmuv3_cmdq_cfgi_cd+0x6e>\n    18d1:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    18d4:\t41 89 d0             \tmov    %edx,%r8d\n    18d7:\t4c 89 e1             \tmov    %r12,%rcx\n    18da:\t48 89 da             \tmov    %rbx,%rdx\n    18dd:\t89 c6                \tmov    %eax,%esi\n    18df:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 18e6 <_nocheck__trace_smmuv3_cmdq_cfgi_cd+0x83>\n    18e6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    18eb:\te8 00 00 00 00       \tcallq  18f0 <_nocheck__trace_smmuv3_cmdq_cfgi_cd+0x8d>\n    18f0:\t90                   \tnop\n    18f1:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    18f5:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    18fc:\t00 00 \n    18fe:\t74 05                \tje     1905 <_nocheck__trace_smmuv3_cmdq_cfgi_cd+0xa2>\n    1900:\te8 00 00 00 00       \tcallq  1905 <_nocheck__trace_smmuv3_cmdq_cfgi_cd+0xa2>\n    1905:\t48 83 c4 30          \tadd    $0x30,%rsp\n    1909:\t5b                   \tpop    %rbx\n    190a:\t41 5c                \tpop    %r12\n    190c:\t5d                   \tpop    %rbp\n    190d:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_smmuv3_cmdq_cfgi_cd(\n    unsigned int a1) {\n  __suseconds_t v1;\n  __time_t v2;\n  unsigned int v3;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v6;\n  v6 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_SMMUV3_CMDQ_CFGI_CD_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v1 = <span class=\"supfact\">tv</span>.tv_usec;\n    v2 = <span class=\"supfact\">tv</span>.tv_sec;\n    v3 = qemu_get_thread_id();\n    qemu_log(String, v3, v2, v1, a1);\n  }\n  return __readfsqword(Number) ^ v6;\n}", "code_t": "void __cdecl nocheck__trace_smmuv3_cmdq_cfgi_cd(uint32_t sid) {\n  __suseconds_t v1;\n  __time_t v2;\n  unsigned int v3;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v5;\n  v5 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_SMMUV3_CMDQ_CFGI_CD_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v1 = <span class=\"supfact\">_now</span>.tv_usec;\n    v2 = <span class=\"supfact\">_now</span>.tv_sec;\n    v3 = qemu_get_thread_id();\n    qemu_log(String, v3, v2, v1, sid);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "mDibyo", "repo_name": "py-dlib", "path": "mDibyo/py-dlib/d00a54a73f0a7862888db48f974a0404f85faa9914b1976ae3b066f6b9db7f21", "path_in_repo": "mDibyo/py-dlib/dlib/test/find_max_factor_graph_nmplp.o", "objdump": "00000000000046ae <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE>:\n    46ae:\t55                   \tpush   %rbp\n    46af:\t48 89 e5             \tmov    %rsp,%rbp\n    46b2:\t53                   \tpush   %rbx\n    46b3:\t48 83 ec 58          \tsub    $0x58,%rsp\n    46b7:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n    46bb:\t48 89 75 a0          \tmov    %rsi,-0x60(%rbp)\n    46bf:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    46c3:\t48 89 c7             \tmov    %rax,%rdi\n    46c6:\te8 00 00 00 00       \tcallq  46cb <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x1d>\n    46cb:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n    46d2:\t00 \n    46d3:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    46d7:\t48 89 c7             \tmov    %rax,%rdi\n    46da:\te8 1d 2e 00 00       \tcallq  74fc <_ZNK12_GLOBAL__N_111map_problemILb0EE15number_of_nodesEv>\n    46df:\t48 89 c1             \tmov    %rax,%rcx\n    46e2:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    46e6:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    46ea:\t48 89 ce             \tmov    %rcx,%rsi\n    46ed:\t48 89 c7             \tmov    %rax,%rdi\n    46f0:\te8 00 00 00 00       \tcallq  46f5 <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x47>\n    46f5:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # 46fd <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x4f>\n    46fc:\t00 \n    46fd:\tf2 0f 11 45 e8       \tmovsd  %xmm0,-0x18(%rbp)\n    4702:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    4709:\t00 \n    470a:\t48 81 7d e0 fe 00 00 \tcmpq   $0xfe,-0x20(%rbp)\n    4711:\t00 \n    4712:\t0f 87 71 01 00 00    \tja     4889 <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x1db>\n    4718:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    471c:\t83 e0 01             \tand    $0x1,%eax\n    471f:\t48 85 c0             \ttest   %rax,%rax\n    4722:\t0f 95 c3             \tsetne  %bl\n    4725:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    4729:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    472e:\t48 89 c7             \tmov    %rax,%rdi\n    4731:\te8 00 00 00 00       \tcallq  4736 <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x88>\n    4736:\t0f b6 d3             \tmovzbl %bl,%edx\n    4739:\t48 89 10             \tmov    %rdx,(%rax)\n    473c:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    4740:\t83 e0 02             \tand    $0x2,%eax\n    4743:\t48 85 c0             \ttest   %rax,%rax\n    4746:\t0f 95 c3             \tsetne  %bl\n    4749:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    474d:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    4752:\t48 89 c7             \tmov    %rax,%rdi\n    4755:\te8 00 00 00 00       \tcallq  475a <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0xac>\n    475a:\t0f b6 d3             \tmovzbl %bl,%edx\n    475d:\t48 89 10             \tmov    %rdx,(%rax)\n    4760:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    4764:\t83 e0 04             \tand    $0x4,%eax\n    4767:\t48 85 c0             \ttest   %rax,%rax\n    476a:\t0f 95 c3             \tsetne  %bl\n    476d:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    4771:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    4776:\t48 89 c7             \tmov    %rax,%rdi\n    4779:\te8 00 00 00 00       \tcallq  477e <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0xd0>\n    477e:\t0f b6 d3             \tmovzbl %bl,%edx\n    4781:\t48 89 10             \tmov    %rdx,(%rax)\n    4784:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    4788:\t83 e0 08             \tand    $0x8,%eax\n    478b:\t48 85 c0             \ttest   %rax,%rax\n    478e:\t0f 95 c3             \tsetne  %bl\n    4791:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    4795:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    479a:\t48 89 c7             \tmov    %rax,%rdi\n    479d:\te8 00 00 00 00       \tcallq  47a2 <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0xf4>\n    47a2:\t0f b6 d3             \tmovzbl %bl,%edx\n    47a5:\t48 89 10             \tmov    %rdx,(%rax)\n    47a8:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    47ac:\t83 e0 10             \tand    $0x10,%eax\n    47af:\t48 85 c0             \ttest   %rax,%rax\n    47b2:\t0f 95 c3             \tsetne  %bl\n    47b5:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    47b9:\tbe 04 00 00 00       \tmov    $0x4,%esi\n    47be:\t48 89 c7             \tmov    %rax,%rdi\n    47c1:\te8 00 00 00 00       \tcallq  47c6 <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x118>\n    47c6:\t0f b6 d3             \tmovzbl %bl,%edx\n    47c9:\t48 89 10             \tmov    %rdx,(%rax)\n    47cc:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    47d0:\t83 e0 20             \tand    $0x20,%eax\n    47d3:\t48 85 c0             \ttest   %rax,%rax\n    47d6:\t0f 95 c3             \tsetne  %bl\n    47d9:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    47dd:\tbe 05 00 00 00       \tmov    $0x5,%esi\n    47e2:\t48 89 c7             \tmov    %rax,%rdi\n    47e5:\te8 00 00 00 00       \tcallq  47ea <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x13c>\n    47ea:\t0f b6 d3             \tmovzbl %bl,%edx\n    47ed:\t48 89 10             \tmov    %rdx,(%rax)\n    47f0:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    47f4:\t83 e0 40             \tand    $0x40,%eax\n    47f7:\t48 85 c0             \ttest   %rax,%rax\n    47fa:\t0f 95 c3             \tsetne  %bl\n    47fd:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    4801:\tbe 06 00 00 00       \tmov    $0x6,%esi\n    4806:\t48 89 c7             \tmov    %rax,%rdi\n    4809:\te8 00 00 00 00       \tcallq  480e <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x160>\n    480e:\t0f b6 d3             \tmovzbl %bl,%edx\n    4811:\t48 89 10             \tmov    %rdx,(%rax)\n    4814:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    4818:\t25 80 00 00 00       \tand    $0x80,%eax\n    481d:\t48 85 c0             \ttest   %rax,%rax\n    4820:\t0f 95 c3             \tsetne  %bl\n    4823:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    4827:\tbe 07 00 00 00       \tmov    $0x7,%esi\n    482c:\t48 89 c7             \tmov    %rax,%rdi\n    482f:\te8 00 00 00 00       \tcallq  4834 <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x186>\n    4834:\t0f b6 d3             \tmovzbl %bl,%edx\n    4837:\t48 89 10             \tmov    %rdx,(%rax)\n    483a:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n    483e:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    4842:\t48 89 d6             \tmov    %rdx,%rsi\n    4845:\t48 89 c7             \tmov    %rax,%rdi\n    4848:\te8 12 fd ff ff       \tcallq  455f <_ZN12_GLOBAL__N_116find_total_scoreINS_11map_problemILb0EEEEEdRKT_RKSt6vectorImSaImEE>\n    484d:\t66 48 0f 7e c0       \tmovq   %xmm0,%rax\n    4852:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    4856:\tf2 0f 10 45 d8       \tmovsd  -0x28(%rbp),%xmm0\n    485b:\t66 0f 2f 45 e8       \tcomisd -0x18(%rbp),%xmm0\n    4860:\t76 1d                \tjbe    487f <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x1d1>\n    4862:\tf2 0f 10 45 d8       \tmovsd  -0x28(%rbp),%xmm0\n    4867:\tf2 0f 11 45 e8       \tmovsd  %xmm0,-0x18(%rbp)\n    486c:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n    4870:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    4874:\t48 89 d6             \tmov    %rdx,%rsi\n    4877:\t48 89 c7             \tmov    %rax,%rdi\n    487a:\te8 00 00 00 00       \tcallq  487f <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x1d1>\n    487f:\t48 83 45 e0 01       \taddq   $0x1,-0x20(%rbp)\n    4884:\te9 81 fe ff ff       \tjmpq   470a <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x5c>\n    4889:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    488d:\t48 89 c7             \tmov    %rax,%rdi\n    4890:\te8 00 00 00 00       \tcallq  4895 <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x1e7>\n    4895:\teb 1a                \tjmp    48b1 <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x203>\n    4897:\t48 89 c3             \tmov    %rax,%rbx\n    489a:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    489e:\t48 89 c7             \tmov    %rax,%rdi\n    48a1:\te8 00 00 00 00       \tcallq  48a6 <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x1f8>\n    48a6:\t48 89 d8             \tmov    %rbx,%rax\n    48a9:\t48 89 c7             \tmov    %rax,%rdi\n    48ac:\te8 00 00 00 00       \tcallq  48b1 <_ZN12_GLOBAL__N_139brute_force_find_max_factor_graph_nmplpINS_11map_problemILb0EEEEEvRKT_RSt6vectorImSaImEE+0x203>\n    48b1:\t48 83 c4 58          \tadd    $0x58,%rsp\n    48b5:\t5b                   \tpop    %rbx\n    48b6:\t5d                   \tpop    %rbp\n    48b7:\tc3                   \tretq   ", "code_s": "__int64 __fastcall ` anonymous namespace ' brute_force_find_max_factor_graph_nmplp < ` anonymous namespace ' map_problem<\n    false> > (__int64 a1, __int64 a2) {\n  double v2;\n  __int64 v3;\n  bool v4;\n  bool v5;\n  bool v6;\n  bool v7;\n  bool v8;\n  bool v9;\n  bool v10;\n  bool v11;\n  char <span class=\"supfact\">v13</span>[Number];\n  __int64 v14;\n  double v15;\n  unsigned __int64 i;\n  double v17;\n  v2 = std vector<unsigned long> vector(<span class=\"supfact\">v13</span>);\n  v14 = Number L;\n  v3 = ` anonymous namespace ' map_problem < false > number_of_nodes ( a1 ) ; std vector < unsigned long > resize ( <span class=\"supfact\">v13</span> , v3 , & v14 , v2 ) ; v17 = - INFINITY ; for ( i = Number L ; i <= Number ; ++ i ) { v4 = ( i & Number ) != Number ; * ( _QWORD * ) std vector < unsigned long > operator [ ] ( <span class=\"supfact\">v13</span> , Number L ) = v4 ; v5 = ( i & Number ) != Number ; * ( _QWORD * ) std vector < unsigned long > operator [ ] ( <span class=\"supfact\">v13</span> , Number L ) = v5 ; v6 = ( i & Number ) != Number ; * ( _QWORD * ) std vector < unsigned long > operator [ ] ( <span class=\"supfact\">v13</span> , Number L ) = v6 ; v7 = ( i & Number ) != Number ; * ( _QWORD * ) std vector < unsigned long > operator [ ] ( <span class=\"supfact\">v13</span> , Number L ) = v7 ; v8 = ( i & Number ) != Number ; * ( _QWORD * ) std vector < unsigned long > operator [ ] ( <span class=\"supfact\">v13</span> , Number L ) = v8 ; v9 = ( i & Number ) != Number ; * ( _QWORD * ) std vector < unsigned long > operator [ ] ( <span class=\"supfact\">v13</span> , Number L ) = v9 ; v10 = ( i & Number ) != Number ; * ( _QWORD * ) std vector < unsigned long > operator [ ] ( <span class=\"supfact\">v13</span> , Number L ) = v10 ; v11 = ( i & Number ) != Number ; * ( _QWORD * ) std vector < unsigned long > operator [ ] ( <span class=\"supfact\">v13</span> , Number L ) = v11 ; v15 = ` anonymous namespace ' find_total_score < ` anonymous namespace ' map_problem < false >> ( a1 , ( __int64 ) <span class=\"supfact\">v13</span> ) ; if ( v15 > v17 ) { v17 = v15 ; std vector < unsigned long > operator = ( a2 , <span class=\"supfact\">v13</span> ) ; } } return std vector < unsigned long > ~ vector ( <span class=\"supfact\">v13</span> ) ; }", "code_t": "void __cdecl ` anonymous namespace ' brute_force_find_max_factor_graph_nmplp < ` anonymous namespace ' map_problem < false >> ( const ` anonymous namespace ' map_problem < false > * prob , std vector < long unsigned int > * map_assignment ) { unsigned __int64 v2 ; bool v3 ; bool v4 ; bool v5 ; bool v6 ; bool v7 ; bool v8 ; bool v9 ; bool v10 ; std vector < long unsigned int > <span class=\"supfact\">temp_assignment</span> ; std vector < long unsigned int > value_type __x ; double score ; unsigned __int64 i ; double best_score ; std vector < unsigned long > vector ( & <span class=\"supfact\">temp_assignment</span> ) ; __x = Number L ; v2 = ` anonymous namespace ' map_problem < false > number_of_nodes ( prob ) ; std vector < unsigned long > resize ( & <span class=\"supfact\">temp_assignment</span> , v2 , & __x ) ; best_score = - INFINITY ; for ( i = Number L ; i <= Number ; ++ i ) {\n  v3 = (i & Number) != Number;\n  *std vector<unsigned long> operator[](&<span class=\"supfact\">temp_assignment</span>,\n                                        Number L) = v3;\n  v4 = (i & Number) != Number;\n  *std vector<unsigned long> operator[](&<span class=\"supfact\">temp_assignment</span>,\n                                        Number) = v4;\n  v5 = (i & Number) != Number;\n  *std vector<unsigned long> operator[](&<span class=\"supfact\">temp_assignment</span>,\n                                        Number) = v5;\n  v6 = (i & Number) != Number;\n  *std vector<unsigned long> operator[](&<span class=\"supfact\">temp_assignment</span>,\n                                        Number) = v6;\n  v7 = (i & Number) != Number;\n  *std vector<unsigned long> operator[](&<span class=\"supfact\">temp_assignment</span>,\n                                        Number) = v7;\n  v8 = (i & Number) != Number;\n  *std vector<unsigned long> operator[](&<span class=\"supfact\">temp_assignment</span>,\n                                        Number) = v8;\n  v9 = (i & Number) != Number;\n  *std vector<unsigned long> operator[](&<span class=\"supfact\">temp_assignment</span>,\n                                        Number) = v9;\n  v10 = (i & Number) != Number;\n  *std vector<unsigned long> operator[](&<span class=\"supfact\">temp_assignment</span>,\n                                        Number) = v10;\n  score = ` anonymous namespace ' find_total_score < ` anonymous namespace ' map_problem<\n              false> > (prob, &<span class=\"supfact\">temp_assignment</span>);\n  if (score > best_score) {\n    best_score = score;\n    std vector<unsigned long> operator=(map_assignment,\n                                        &<span class=\"supfact\">temp_assignment</span>);\n  } } std vector < unsigned long > ~ vector ( & <span class=\"supfact\">temp_assignment</span> ) ;\n}", "var": [{"name": "v13", "type": "char[32]", "ref_name": "temp_assignment", "ref_type": "struct std::vector<long unsigned int> { std::_Vector_base<long unsigned int> baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/2869d1fa54a46c5d013a503a7dc2869b989dde2ddac38d52b406cd74961f503d", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/video/polepos.o", "objdump": "000000000000164c <_Z21screen_update_poleposP13screen_deviceP8bitmap_tPK10_rectangle>:\n    164c:\t55                   \tpush   %rbp\n    164d:\t48 89 e5             \tmov    %rsp,%rbp\n    1650:\t48 83 ec 40          \tsub    $0x40,%rsp\n    1654:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    1658:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n    165c:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n    1660:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1664:\t48 89 c7             \tmov    %rax,%rdi\n    1667:\te8 00 00 00 00       \tcallq  166c <_Z21screen_update_poleposP13screen_deviceP8bitmap_tPK10_rectangle+0x20>\n    166c:\t48 89 c7             \tmov    %rax,%rdi\n    166f:\te8 00 00 00 00       \tcallq  1674 <_Z21screen_update_poleposP13screen_deviceP8bitmap_tPK10_rectangle+0x28>\n    1674:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1678:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    167c:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    1680:\t48 8b 00             \tmov    (%rax),%rax\n    1683:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    1687:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n    168b:\tc7 45 ec 7f 00 00 00 \tmovl   $0x7f,-0x14(%rbp)\n    1692:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1696:\t48 8b 90 28 04 00 00 \tmov    0x428(%rax),%rdx\n    169d:\t48 8d 75 e0          \tlea    -0x20(%rbp),%rsi\n    16a1:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    16a5:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    16ab:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    16b0:\t48 89 c7             \tmov    %rax,%rdi\n    16b3:\te8 82 ea ff ff       \tcallq  13a <_ZL12tilemap_drawP8bitmap_tPK10_rectangleP9tilemap_tjh>\n    16b8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    16bc:\t48 89 c7             \tmov    %rax,%rdi\n    16bf:\te8 00 00 00 00       \tcallq  16c4 <_Z21screen_update_poleposP13screen_deviceP8bitmap_tPK10_rectangle+0x78>\n    16c4:\t48 89 c2             \tmov    %rax,%rdx\n    16c7:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    16cb:\t48 89 c6             \tmov    %rax,%rsi\n    16ce:\t48 89 d7             \tmov    %rdx,%rdi\n    16d1:\te8 27 f9 ff ff       \tcallq  ffd <_ZL9draw_roadR15running_machineP8bitmap_t>\n    16d6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    16da:\t48 89 c7             \tmov    %rax,%rdi\n    16dd:\te8 00 00 00 00       \tcallq  16e2 <_Z21screen_update_poleposP13screen_deviceP8bitmap_tPK10_rectangle+0x96>\n    16e2:\t48 89 c1             \tmov    %rax,%rcx\n    16e5:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    16e9:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    16ed:\t48 89 c6             \tmov    %rax,%rsi\n    16f0:\t48 89 cf             \tmov    %rcx,%rdi\n    16f3:\te8 fd fd ff ff       \tcallq  14f5 <_ZL12draw_spritesR15running_machineP8bitmap_tPK10_rectangle>\n    16f8:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    16fc:\t48 8b 90 30 04 00 00 \tmov    0x430(%rax),%rdx\n    1703:\t48 8b 75 c8          \tmov    -0x38(%rbp),%rsi\n    1707:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    170b:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    1711:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    1716:\t48 89 c7             \tmov    %rax,%rdi\n    1719:\te8 1c ea ff ff       \tcallq  13a <_ZL12tilemap_drawP8bitmap_tPK10_rectangleP9tilemap_tjh>\n    171e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1723:\tc9                   \tleaveq \n    1724:\tc3                   \tretq   ", "code_s": "__int64 __fastcall screen_update_polepos(device_t *a1, __int64 a2,\n                                         __int64 *a3) {\n  __int64 v3;\n  __int64 v4;\n  running_machine *v5;\n  running_machine *v6;\n  __int64 <span class=\"supfact\">v9</span>[Number];\n  __int64 v10;\n  v3 = device_t machine(a1);\n  v10 = running_machine driver_data<polepos_state>(v3);\n  v4 = a3[Number];\n  <span class=\"supfact\">v9</span>[Number] = *a3;\n  <span class=\"supfact\">v9</span>[Number] = (unsigned int)v4 | Number;\n  tilemap_draw(a2, (__int64)<span class=\"supfact\">v9</span>, *(_QWORD *)(v10 + Number),\n               Number, Number);\n  v5 = (running_machine *)device_t machine(a1);\n  draw_road(v5, a2);\n  v6 = (running_machine *)device_t machine(a1);\n  draw_sprites(v6, a2);\n  tilemap_draw(a2, (__int64)a3, *(_QWORD *)(v10 + Number), Number, Number);\n  return Number L;\n}", "code_t": "UINT32 __cdecl screen_update_polepos(screen_device *screen, bitmap_t *bitmap,\n                                     const rectangle *cliprect) {\n  running_machine *v3;\n  __int64 v4;\n  running_machine *v5;\n  running_machine *v6;\n  rectangle <span class=\"supfact\">clip</span>;\n  polepos_state *state;\n  v3 = device_t machine(screen);\n  state = running_machine driver_data<polepos_state>(v3);\n  v4 = *(_QWORD *)&cliprect->min_y;\n  *(_QWORD *)&<span class=\"supfact\">clip</span>.min_x = *(_QWORD *)&cliprect->min_x;\n  <span class=\"supfact\">clip</span>.min_y = v4;\n  <span class=\"supfact\">clip</span>.max_y = Number;\n  tilemap_draw(bitmap, &<span class=\"supfact\">clip</span>, state->m_bg_tilemap, Number,\n               Number);\n  v5 = device_t machine(screen);\n  draw_road(v5, bitmap);\n  v6 = device_t machine(screen);\n  draw_sprites(v6, bitmap, cliprect);\n  tilemap_draw(bitmap, cliprect, state->m_tx_tilemap, Number, Number);\n  return Number;\n}", "var": [{"name": "v9", "type": "struct rectangle { int min_x; int max_x; int min_y; int max_y; }", "ref_name": "clip", "ref_type": "struct rectangle { int min_x; int max_x; int min_y; int max_y; }"}], "body_in_train": false}, {"repo_owner": "chilldude", "repo_name": "peer-library-core", "path": "chilldude/peer-library-core/d740ecf4cc826fa5f555d7a7bd57132cf15cbb1266d7e69f73830ef1ac2b13f0", "path_in_repo": "chilldude/peer-library-core/db/src/sentinel.o", "objdump": "0000000000000bed <sentinelGetScriptListNodeByPid>:\n     bed:\t55                   \tpush   %rbp\n     bee:\t48 89 e5             \tmov    %rsp,%rbp\n     bf1:\t48 83 ec 30          \tsub    $0x30,%rsp\n     bf5:\t89 7d dc             \tmov    %edi,-0x24(%rbp)\n     bf8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # bff <sentinelGetScriptListNodeByPid+0x12>\n     bff:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n     c03:\t48 89 d6             \tmov    %rdx,%rsi\n     c06:\t48 89 c7             \tmov    %rax,%rdi\n     c09:\te8 00 00 00 00       \tcallq  c0e <sentinelGetScriptListNodeByPid+0x21>\n     c0e:\teb 2b                \tjmp    c3b <sentinelGetScriptListNodeByPid+0x4e>\n     c10:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     c14:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     c18:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     c1c:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     c20:\t8b 00                \tmov    (%rax),%eax\n     c22:\t83 e0 01             \tand    $0x1,%eax\n     c25:\t85 c0                \ttest   %eax,%eax\n     c27:\t74 12                \tje     c3b <sentinelGetScriptListNodeByPid+0x4e>\n     c29:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     c2d:\t8b 40 18             \tmov    0x18(%rax),%eax\n     c30:\t39 45 dc             \tcmp    %eax,-0x24(%rbp)\n     c33:\t75 06                \tjne    c3b <sentinelGetScriptListNodeByPid+0x4e>\n     c35:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     c39:\teb 1c                \tjmp    c57 <sentinelGetScriptListNodeByPid+0x6a>\n     c3b:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     c3f:\t48 89 c7             \tmov    %rax,%rdi\n     c42:\te8 00 00 00 00       \tcallq  c47 <sentinelGetScriptListNodeByPid+0x5a>\n     c47:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     c4b:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n     c50:\t75 be                \tjne    c10 <sentinelGetScriptListNodeByPid+0x23>\n     c52:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     c57:\tc9                   \tleaveq \n     c58:\tc3                   \tretq   ", "code_s": "__int64 __fastcall sentinelGetScriptListNodeByPid(int a1) {\n  char <span class=\"supfact\">v2</span>[Number];\n  _DWORD *v3;\n  __int64 v4;\n  listRewind(sentinel[Number], <span class=\"supfact\">v2</span>);\n  while (Number) {\n    v4 = listNext(<span class=\"supfact\">v2</span>);\n    if (!v4)\n      break;\n    v3 = *(_DWORD **)(v4 + Number);\n    if ((*v3 & Number) != Number && a1 == v3[Number])\n      return v4;\n  }\n  return Number L;\n}", "code_t": "listNode_0 *__cdecl sentinelGetScriptListNodeByPid(pid_t pid) {\n  listIter_0 <span class=\"supfact\">li</span>;\n  sentinelScriptJob_0 *sj;\n  listNode_0 *ln;\n  listRewind(sentinel.scripts_queue, &<span class=\"supfact\">li</span>);\n  while (Number) {\n    ln = (listNode_0 *)listNext(&<span class=\"supfact\">li</span>);\n    if (!ln)\n      break;\n    sj = (sentinelScriptJob_0 *)ln->value;\n    if ((sj->flags & Number) != Number && pid == sj->pid)\n      return ln;\n  }\n  return Number L;\n}", "var": [{"name": "v2", "type": "struct listIter_0 { listNode_0 * next; int direction; PADDING (4); }", "ref_name": "li", "ref_type": "struct listIter_0 { listNode_0 * next; int direction; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "royceda", "repo_name": "Parallelism", "path": "royceda/Parallelism/1862736d4ce51f2fe6ec8510ab127e3abb9e89c497122d60fd1a9eea2f096090", "path_in_repo": "royceda/Parallelism/TP4/fichiers/AddMat/addmat", "objdump": "00000000004015d9 <check_output_data>:\n  4015d9:\t55                   \tpush   %rbp\n  4015da:\t48 89 e5             \tmov    %rsp,%rbp\n  4015dd:\t48 83 ec 40          \tsub    $0x40,%rsp\n  4015e1:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n  4015e8:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n  4015ef:\teb 65                \tjmp    401656 <check_output_data+0x7d>\n  4015f1:\t48 8b 05 b8 3b 00 00 \tmov    0x3bb8(%rip),%rax        # 4051b0 <A_data>\n  4015f8:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n  4015fb:\t48 63 d2             \tmovslq %edx,%rdx\n  4015fe:\t48 c1 e2 02          \tshl    $0x2,%rdx\n  401602:\t48 01 d0             \tadd    %rdx,%rax\n  401605:\tf3 0f 10 08          \tmovss  (%rax),%xmm1\n  401609:\t48 8b 05 80 3b 00 00 \tmov    0x3b80(%rip),%rax        # 405190 <B_data>\n  401610:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n  401613:\t48 63 d2             \tmovslq %edx,%rdx\n  401616:\t48 c1 e2 02          \tshl    $0x2,%rdx\n  40161a:\t48 01 d0             \tadd    %rdx,%rax\n  40161d:\tf3 0f 10 00          \tmovss  (%rax),%xmm0\n  401621:\tf3 0f 58 c1          \taddss  %xmm1,%xmm0\n  401625:\tf3 0f 11 45 e4       \tmovss  %xmm0,-0x1c(%rbp)\n  40162a:\t48 8b 05 6f 3b 00 00 \tmov    0x3b6f(%rip),%rax        # 4051a0 <C_data>\n  401631:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n  401634:\t48 63 d2             \tmovslq %edx,%rdx\n  401637:\t48 c1 e2 02          \tshl    $0x2,%rdx\n  40163b:\t48 01 d0             \tadd    %rdx,%rax\n  40163e:\tf3 0f 10 00          \tmovss  (%rax),%xmm0\n  401642:\t0f 2e 45 e4          \tucomiss -0x1c(%rbp),%xmm0\n  401646:\t7a 0a                \tjp     401652 <check_output_data+0x79>\n  401648:\t0f 2e 45 e4          \tucomiss -0x1c(%rbp),%xmm0\n  40164c:\t75 04                \tjne    401652 <check_output_data+0x79>\n  40164e:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n  401652:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n  401656:\t8b 15 0c 3b 00 00    \tmov    0x3b0c(%rip),%edx        # 405168 <SIZE>\n  40165c:\t8b 05 06 3b 00 00    \tmov    0x3b06(%rip),%eax        # 405168 <SIZE>\n  401662:\t0f af d0             \timul   %eax,%edx\n  401665:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  401668:\t39 c2                \tcmp    %eax,%edx\n  40166a:\t77 85                \tja     4015f1 <check_output_data+0x18>\n  40166c:\t8b 15 f6 3a 00 00    \tmov    0x3af6(%rip),%edx        # 405168 <SIZE>\n  401672:\t8b 05 f0 3a 00 00    \tmov    0x3af0(%rip),%eax        # 405168 <SIZE>\n  401678:\t0f af d0             \timul   %eax,%edx\n  40167b:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40167e:\t89 c6                \tmov    %eax,%esi\n  401680:\tbf 98 30 40 00       \tmov    $0x403098,%edi\n  401685:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  40168a:\te8 41 fa ff ff       \tcallq  4010d0 <printf@plt>\n  40168f:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  401693:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  401698:\t48 89 c7             \tmov    %rax,%rdi\n  40169b:\te8 50 fa ff ff       \tcallq  4010f0 <gettimeofday@plt>\n  4016a0:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n  4016a7:\teb 73                \tjmp    40171c <check_output_data+0x143>\n  4016a9:\tc7 45 f0 00 00 00 00 \tmovl   $0x0,-0x10(%rbp)\n  4016b0:\teb 50                \tjmp    401702 <check_output_data+0x129>\n  4016b2:\t48 8b 05 f7 3a 00 00 \tmov    0x3af7(%rip),%rax        # 4051b0 <A_data>\n  4016b9:\t8b 55 f0             \tmov    -0x10(%rbp),%edx\n  4016bc:\t48 63 d2             \tmovslq %edx,%rdx\n  4016bf:\t48 c1 e2 02          \tshl    $0x2,%rdx\n  4016c3:\t48 01 d0             \tadd    %rdx,%rax\n  4016c6:\tf3 0f 10 08          \tmovss  (%rax),%xmm1\n  4016ca:\t48 8b 05 bf 3a 00 00 \tmov    0x3abf(%rip),%rax        # 405190 <B_data>\n  4016d1:\t8b 55 f0             \tmov    -0x10(%rbp),%edx\n  4016d4:\t48 63 d2             \tmovslq %edx,%rdx\n  4016d7:\t48 c1 e2 02          \tshl    $0x2,%rdx\n  4016db:\t48 01 d0             \tadd    %rdx,%rax\n  4016de:\tf3 0f 10 00          \tmovss  (%rax),%xmm0\n  4016e2:\t48 8b 05 b7 3a 00 00 \tmov    0x3ab7(%rip),%rax        # 4051a0 <C_data>\n  4016e9:\t8b 55 f0             \tmov    -0x10(%rbp),%edx\n  4016ec:\t48 63 d2             \tmovslq %edx,%rdx\n  4016ef:\t48 c1 e2 02          \tshl    $0x2,%rdx\n  4016f3:\t48 01 d0             \tadd    %rdx,%rax\n  4016f6:\tf3 0f 58 c1          \taddss  %xmm1,%xmm0\n  4016fa:\tf3 0f 11 00          \tmovss  %xmm0,(%rax)\n  4016fe:\t83 45 f0 01          \taddl   $0x1,-0x10(%rbp)\n  401702:\t8b 15 60 3a 00 00    \tmov    0x3a60(%rip),%edx        # 405168 <SIZE>\n  401708:\t8b 05 5a 3a 00 00    \tmov    0x3a5a(%rip),%eax        # 405168 <SIZE>\n  40170e:\t0f af d0             \timul   %eax,%edx\n  401711:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n  401714:\t39 c2                \tcmp    %eax,%edx\n  401716:\t77 9a                \tja     4016b2 <check_output_data+0xd9>\n  401718:\t83 45 f4 01          \taddl   $0x1,-0xc(%rbp)\n  40171c:\t83 7d f4 63          \tcmpl   $0x63,-0xc(%rbp)\n  401720:\t76 87                \tjbe    4016a9 <check_output_data+0xd0>\n  401722:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  401726:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  40172b:\t48 89 c7             \tmov    %rax,%rdi\n  40172e:\te8 bd f9 ff ff       \tcallq  4010f0 <gettimeofday@plt>\n  401733:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n  401737:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  40173b:\t48 29 c2             \tsub    %rax,%rdx\n  40173e:\t48 89 d0             \tmov    %rdx,%rax\n  401741:\t48 69 c0 40 42 0f 00 \timul   $0xf4240,%rax,%rax\n  401748:\t48 8b 4d c8          \tmov    -0x38(%rbp),%rcx\n  40174c:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n  401750:\t48 29 d1             \tsub    %rdx,%rcx\n  401753:\t48 89 ca             \tmov    %rcx,%rdx\n  401756:\t48 01 d0             \tadd    %rdx,%rax\n  401759:\tf2 48 0f 2a c0       \tcvtsi2sd %rax,%xmm0\n  40175e:\tf2 0f 10 0d 9a 1d 00 \tmovsd  0x1d9a(%rip),%xmm1        # 403500 <_IO_stdin_used+0x500>\n  401765:\t00 \n  401766:\tf2 0f 5e c1          \tdivsd  %xmm1,%xmm0\n  40176a:\tf2 0f 11 45 e8       \tmovsd  %xmm0,-0x18(%rbp)\n  40176f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  401773:\t66 48 0f 6e c0       \tmovq   %rax,%xmm0\n  401778:\tbf c0 30 40 00       \tmov    $0x4030c0,%edi\n  40177d:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  401782:\te8 49 f9 ff ff       \tcallq  4010d0 <printf@plt>\n  401787:\t90                   \tnop\n  401788:\tc9                   \tleaveq \n  401789:\tc3                   \tretq   ", "code_s": "int check_output_data() {\n  struct timeval <span class=\"supfact\">v1</span>;\n  struct timeval <span class=\"supfact\">tv</span>;\n  float v3;\n  unsigned int k;\n  unsigned int j;\n  unsigned int i;\n  unsigned int v7;\n  v7 = Number;\n  for (i = Number; SIZE * SIZE > i; ++i) {\n    v3 = *((float *)B_data + (int)i) + *((float *)A_data + (int)i);\n    if (*((float *)C_data + (int)i) == v3)\n      ++v7;\n  }\n  printf(String, v7, (unsigned int)(SIZE * SIZE));\n  gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n  for (j = Number; j <= Number; ++j) {\n    for (k = Number; SIZE * SIZE > k; ++k)\n      *((float *)C_data + (int)k) =\n          *((float *)B_data + (int)k) + *((float *)A_data + (int)k);\n  }\n  gettimeofday(&<span class=\"supfact\">v1</span>, Number L);\n  return printf(aComputationPer,\n                (double)(LODWORD(<span class=\"supfact\">v1</span>.tv_usec) -\n                         LODWORD(<span class=\"supfact\">tv</span>.tv_usec) +\n                         Number * (LODWORD(<span class=\"supfact\">v1</span>.tv_sec) -\n                                   LODWORD(<span class=\"supfact\">tv</span>.tv_sec))) /\n                    Number);\n}", "code_t": "void __cdecl check_output_data() {\n  timeval <span class=\"supfact\">t2</span>;\n  timeval <span class=\"supfact\">t1</span>;\n  float expected;\n  int i_0;\n  unsigned int iter;\n  int i;\n  unsigned int correct;\n  correct = Number;\n  for (i = Number; SIZE * SIZE > i; ++i) {\n    expected = B_data[i] + A_data[i];\n    if (C_data[i] == expected)\n      ++correct;\n  }\n  printf(String, correct, SIZE * SIZE);\n  gettimeofday(&<span class=\"supfact\">t1</span>, Number L);\n  for (iter = Number; iter <= Number; ++iter) {\n    for (i_0 = Number; SIZE * SIZE > i_0; ++i_0)\n      C_data[i_0] = B_data[i_0] + A_data[i_0];\n  }\n  gettimeofday(&<span class=\"supfact\">t2</span>, Number L);\n  printf(aComputationPer,\n         (double)(LODWORD(<span class=\"supfact\">t2</span>.tv_usec) -\n                  LODWORD(<span class=\"supfact\">t1</span>.tv_usec) +\n                  Number * (LODWORD(<span class=\"supfact\">t2</span>.tv_sec) -\n                            LODWORD(<span class=\"supfact\">t1</span>.tv_sec))) /\n             Number);\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "t1", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}, {"name": "v1", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "t2", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "romankap", "repo_name": "Using-dlib", "path": "romankap/Using-dlib/eebdb1d2d9af3f5ec71427ae382bf9801cc42fcfadd9f5c8b4b7638ab15698bc", "path_in_repo": "romankap/Using-dlib/Lot_w_dlib/dlib-18.10/dlib/test/iosockstream.o", "objdump": "0000000000000000 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t41 54                \tpush   %r12\n   6:\t53                   \tpush   %rbx\n   7:\t48 83 ec 70          \tsub    $0x70,%rsp\n   b:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n   f:\t48 89 75 a0          \tmov    %rsi,-0x60(%rbp)\n  13:\t48 89 55 98          \tmov    %rdx,-0x68(%rbp)\n  17:\t48 89 4d 90          \tmov    %rcx,-0x70(%rbp)\n  1b:\t4c 89 45 88          \tmov    %r8,-0x78(%rbp)\n  1f:\t44 89 ca             \tmov    %r9d,%edx\n  22:\t8b 45 10             \tmov    0x10(%rbp),%eax\n  25:\t66 89 55 84          \tmov    %dx,-0x7c(%rbp)\n  29:\t66 89 45 80          \tmov    %ax,-0x80(%rbp)\n  2d:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  31:\tba 00 00 00 00       \tmov    $0x0,%edx\n  36:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  3b:\t48 89 c7             \tmov    %rax,%rdi\n  3e:\te8 00 00 00 00       \tcallq  43 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x43>\n  43:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  47:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  4c:\t48 89 c7             \tmov    %rax,%rdi\n  4f:\te8 00 00 00 00       \tcallq  54 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x54>\n  54:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  58:\t48 89 c7             \tmov    %rax,%rdi\n  5b:\te8 00 00 00 00       \tcallq  60 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x60>\n  60:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n  64:\t48 89 c7             \tmov    %rax,%rdi\n  67:\te8 00 00 00 00       \tcallq  6c <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x6c>\n  6c:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n  70:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  74:\t48 89 d6             \tmov    %rdx,%rsi\n  77:\t48 89 c7             \tmov    %rax,%rdi\n  7a:\te8 00 00 00 00       \tcallq  7f <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x7f>\n  7f:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n  83:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  88:\t48 89 c7             \tmov    %rax,%rdi\n  8b:\te8 00 00 00 00       \tcallq  90 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x90>\n  90:\t0f b6 c0             \tmovzbl %al,%eax\n  93:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  98:\tba 00 00 00 00       \tmov    $0x0,%edx\n  9d:\tbe 2d 00 00 00       \tmov    $0x2d,%esi\n  a2:\t89 c7                \tmov    %eax,%edi\n  a4:\te8 00 00 00 00       \tcallq  a9 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0xa9>\n  a9:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n  ad:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  b1:\t48 89 d6             \tmov    %rdx,%rsi\n  b4:\t48 89 c7             \tmov    %rax,%rdi\n  b7:\te8 00 00 00 00       \tcallq  bc <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0xbc>\n  bc:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n  c0:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  c5:\t48 89 c7             \tmov    %rax,%rdi\n  c8:\te8 00 00 00 00       \tcallq  cd <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0xcd>\n  cd:\t0f b6 c0             \tmovzbl %al,%eax\n  d0:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  d5:\tba 00 00 00 00       \tmov    $0x0,%edx\n  da:\tbe 2f 00 00 00       \tmov    $0x2f,%esi\n  df:\t89 c7                \tmov    %eax,%edi\n  e1:\te8 00 00 00 00       \tcallq  e6 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0xe6>\n  e6:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n  ea:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  ef:\t48 89 c7             \tmov    %rax,%rdi\n  f2:\te8 00 00 00 00       \tcallq  f7 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0xf7>\n  f7:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n  fb:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  ff:\t48 89 d6             \tmov    %rdx,%rsi\n 102:\t48 89 c7             \tmov    %rax,%rdi\n 105:\te8 00 00 00 00       \tcallq  10a <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x10a>\n 10a:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n 10e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 113:\t48 89 c7             \tmov    %rax,%rdi\n 116:\te8 00 00 00 00       \tcallq  11b <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x11b>\n 11b:\t0f b6 c0             \tmovzbl %al,%eax\n 11e:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 123:\tba 00 00 00 00       \tmov    $0x0,%edx\n 128:\tbe 32 00 00 00       \tmov    $0x32,%esi\n 12d:\t89 c7                \tmov    %eax,%edi\n 12f:\te8 00 00 00 00       \tcallq  134 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x134>\n 134:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n 138:\t48 89 c7             \tmov    %rax,%rdi\n 13b:\te8 00 00 00 00       \tcallq  140 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x140>\n 140:\te9 95 00 00 00       \tjmpq   1da <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x1da>\n 145:\t49 89 c4             \tmov    %rax,%r12\n 148:\t48 89 d3             \tmov    %rdx,%rbx\n 14b:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n 14f:\t48 89 c7             \tmov    %rax,%rdi\n 152:\te8 00 00 00 00       \tcallq  157 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x157>\n 157:\t4c 89 e0             \tmov    %r12,%rax\n 15a:\t48 89 da             \tmov    %rbx,%rdx\n 15d:\teb 18                \tjmp    177 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x177>\n 15f:\t49 89 c4             \tmov    %rax,%r12\n 162:\t48 89 d3             \tmov    %rdx,%rbx\n 165:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n 169:\t48 89 c7             \tmov    %rax,%rdi\n 16c:\te8 00 00 00 00       \tcallq  171 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x171>\n 171:\t4c 89 e0             \tmov    %r12,%rax\n 174:\t48 89 da             \tmov    %rbx,%rdx\n 177:\t48 83 fa 01          \tcmp    $0x1,%rdx\n 17b:\t74 08                \tje     185 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x185>\n 17d:\t48 89 c7             \tmov    %rax,%rdi\n 180:\te8 00 00 00 00       \tcallq  185 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x185>\n 185:\t48 89 c7             \tmov    %rax,%rdi\n 188:\te8 00 00 00 00       \tcallq  18d <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x18d>\n 18d:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 191:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 195:\t48 8b 00             \tmov    (%rax),%rax\n 198:\t48 83 c0 10          \tadd    $0x10,%rax\n 19c:\t48 8b 10             \tmov    (%rax),%rdx\n 19f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 1a3:\t48 89 c7             \tmov    %rax,%rdi\n 1a6:\tff d2                \tcallq  *%rdx\n 1a8:\t48 89 c2             \tmov    %rax,%rdx\n 1ab:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 1af:\t48 05 f0 03 00 00    \tadd    $0x3f0,%rax\n 1b5:\t48 89 d6             \tmov    %rdx,%rsi\n 1b8:\t48 89 c7             \tmov    %rax,%rdi\n 1bb:\te8 00 00 00 00       \tcallq  1c0 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x1c0>\n 1c0:\te8 00 00 00 00       \tcallq  1c5 <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x1c5>\n 1c5:\teb 13                \tjmp    1da <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x1da>\n 1c7:\t48 89 c3             \tmov    %rax,%rbx\n 1ca:\te8 00 00 00 00       \tcallq  1cf <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x1cf>\n 1cf:\t48 89 d8             \tmov    %rbx,%rax\n 1d2:\t48 89 c7             \tmov    %rax,%rdi\n 1d5:\te8 00 00 00 00       \tcallq  1da <_ZN12_GLOBAL__N_14serv10on_connectERSiRSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESA_tty+0x1da>\n 1da:\t48 83 c4 70          \tadd    $0x70,%rsp\n 1de:\t5b                   \tpop    %rbx\n 1df:\t41 5c                \tpop    %r12\n 1e1:\t5d                   \tpop    %rbp\n 1e2:\tc3                   \tretq   \n 1e3:\t90                   \tnop", "code_s": "__int64 __fastcall ` anonymous namespace ' serv on_connect ( __int64 a1 , __int64 a2 , __int64 a3 ) { unsigned __int8 v3 ; const char * v4 ; unsigned __int8 v5 ; const char * v6 ; unsigned __int8 v7 ; const char * v8 ; char <span class=\"supfact\">v11</span> [ Number ] ; char <span class=\"supfact\">v12</span> [ Number ] ; dlib logger operator << ( <span class=\"supfact\">v12</span> , & ` anonymous namespace ' dlog , & dlib LINFO ) ;\ndlib logger logger_stream operator<<<char[Number]>(<span class=\"supfact\">v12</span>, String);\ndlib logger logger_stream ~logger_stream((dlib logger logger_stream *)\n                                             <span class=\"supfact\">v12</span>);\nstd __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n    basic_string(<span class=\"supfact\">v11</span>);\nstd operator>><char>(a2, <span class=\"supfact\">v11</span>);\nv3 = std operator==<char>(<span class=\"supfact\">v11</span>, String);\ntest check_test((test *)v3, Number, (__int64)String, String, v4);\nstd operator>><char>(a2, <span class=\"supfact\">v11</span>);\nv5 = std operator==<char>(<span class=\"supfact\">v11</span>, String);\ntest check_test((test *)v5, Number, (__int64)String, String, v6);\nstd operator<<<std char_traits<char>>(a3, String);\nstd operator>><char>(a2, <span class=\"supfact\">v11</span>);\nv7 = std operator==<char>(<span class=\"supfact\">v11</span>, String);\ntest check_test((test *)v7, Number, (__int64)String, String, v8);\nreturn std __cxx11\n    basic_string<char, std char_traits<char>,\n                 std allocator<char>> ~basic_string(<span class=\"supfact\">v11</span>);\n}", "code_t": "void __cdecl ` anonymous namespace ' serv on_connect ( ` anonymous namespace ' serv * const this , std istream * in , std ostream * out , const std string * a4 , const std string * a5 , unsigned __int16 a6 , unsigned __int16 a7 , dlib uint64 a8 ) {\n  bool v8;\n  const char *v9;\n  bool v10;\n  const char *v11;\n  bool v12;\n  const char *v13;\n  std string <span class=\"supfact\">temp</span>;\n  dlib logger logger_stream <span class=\"supfact\">v16</span>; dlib logger operator << ( & <span class=\"supfact\">v16</span> , ( const dlib logger * const ) & ` anonymous namespace ' dlog , & dlib LINFO ) ; dlib logger logger_stream operator << < char [ Number ] > ( & <span class=\"supfact\">v16</span> , ( const char ( * ) [ Number ] ) String ) ; dlib logger logger_stream ~ logger_stream ( & <span class=\"supfact\">v16</span> ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> basic_string ( & <span class=\"supfact\">temp</span> ) ; std operator >> < char > ( in , & <span class=\"supfact\">temp</span> ) ; v8 = std operator == < char > ( & <span class=\"supfact\">temp</span> , String ) ; test check_test ( ( test * ) v8 , Number , ( __int64 ) String , String , v9 ) ; std operator >> < char > ( in , & <span class=\"supfact\">temp</span> ) ; v10 = std operator == < char > ( & <span class=\"supfact\">temp</span> , String ) ; test check_test ( ( test * ) v10 , Number , ( __int64 ) String , String , v11 ) ; std operator << < std char_traits < char >> ( out , String ) ; std operator >> < char > ( in , & <span class=\"supfact\">temp</span> ) ; v12 = std operator == < char > ( & <span class=\"supfact\">temp</span> , String ) ; test check_test ( ( test * ) v12 , Number , ( __int64 ) String , String , v13 ) ; std __cxx11 basic_string < char , std char_traits < char > , std allocator < char >> ~ basic_string ( & <span class=\"supfact\">temp</span> ) ; }", "var": [{"name": "v12", "type": "struct dlib::logger::logger_stream { const dlib::log_level * l; dlib::logger * log; bool been_used; const bool enabled; PADDING (6); }", "ref_name": "v16", "ref_type": "struct dlib::logger::logger_stream { const dlib::log_level * l; dlib::logger * log; bool been_used; const bool enabled; PADDING (6); }"}, {"name": "v11", "type": "struct dlib::logger::logger_stream { const dlib::log_level * l; dlib::logger * log; bool been_used; const bool enabled; PADDING (6); }", "ref_name": "temp", "ref_type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}], "body_in_train": false}, {"repo_owner": "SirClaudiu", "repo_name": "sshbackdoor", "path": "SirClaudiu/sshbackdoor/3780e207a869c6bbcc6f7ebf8c0a3784fa6579dda5c3bbf12cfdc33b5abb8635", "path_in_repo": "SirClaudiu/sshbackdoor//sftp-client.o", "objdump": "0000000000000832 <do_close>:\n     832:\t55                   \tpush   %rbp\n     833:\t48 89 e5             \tmov    %rsp,%rbp\n     836:\t48 83 ec 40          \tsub    $0x40,%rsp\n     83a:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n     83e:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n     842:\t89 55 cc             \tmov    %edx,-0x34(%rbp)\n     845:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     849:\t48 89 c7             \tmov    %rax,%rdi\n     84c:\te8 00 00 00 00       \tcallq  851 <do_close+0x1f>\n     851:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     855:\t8b 40 14             \tmov    0x14(%rax),%eax\n     858:\t8d 48 01             \tlea    0x1(%rax),%ecx\n     85b:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n     85f:\t89 4a 14             \tmov    %ecx,0x14(%rdx)\n     862:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n     865:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     869:\tbe 04 00 00 00       \tmov    $0x4,%esi\n     86e:\t48 89 c7             \tmov    %rax,%rdi\n     871:\te8 00 00 00 00       \tcallq  876 <do_close+0x44>\n     876:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n     879:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     87d:\t89 d6                \tmov    %edx,%esi\n     87f:\t48 89 c7             \tmov    %rax,%rdi\n     882:\te8 00 00 00 00       \tcallq  887 <do_close+0x55>\n     887:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n     88a:\t48 8b 4d d0          \tmov    -0x30(%rbp),%rcx\n     88e:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     892:\t48 89 ce             \tmov    %rcx,%rsi\n     895:\t48 89 c7             \tmov    %rax,%rdi\n     898:\te8 00 00 00 00       \tcallq  89d <do_close+0x6b>\n     89d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     8a1:\t8b 40 04             \tmov    0x4(%rax),%eax\n     8a4:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n     8a8:\t48 89 d6             \tmov    %rdx,%rsi\n     8ab:\t89 c7                \tmov    %eax,%edi\n     8ad:\te8 4e f7 ff ff       \tcallq  0 <send_msg>\n     8b2:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     8b5:\t89 c6                \tmov    %eax,%esi\n     8b7:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     8bc:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     8c1:\te8 00 00 00 00       \tcallq  8c6 <do_close+0x94>\n     8c6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     8ca:\t8b 00                \tmov    (%rax),%eax\n     8cc:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n     8cf:\t89 d6                \tmov    %edx,%esi\n     8d1:\t89 c7                \tmov    %eax,%edi\n     8d3:\te8 ca fa ff ff       \tcallq  3a2 <get_status>\n     8d8:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n     8db:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n     8df:\t74 1c                \tje     8fd <do_close+0xcb>\n     8e1:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n     8e4:\t89 c7                \tmov    %eax,%edi\n     8e6:\te8 00 00 00 00       \tcallq  8eb <do_close+0xb9>\n     8eb:\t48 89 c6             \tmov    %rax,%rsi\n     8ee:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     8f3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     8f8:\te8 00 00 00 00       \tcallq  8fd <do_close+0xcb>\n     8fd:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     901:\t48 89 c7             \tmov    %rax,%rdi\n     904:\te8 00 00 00 00       \tcallq  909 <do_close+0xd7>\n     909:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n     90c:\tc9                   \tleaveq \n     90d:\tc3                   \tretq   ", "code_s": "__int64 __fastcall do_close(unsigned int *a1, __int64 a2, unsigned int a3) {\n  unsigned int v3;\n  int v4;\n  const char *v5;\n  char <span class=\"supfact\">v8</span>[Number];\n  unsigned int v9;\n  unsigned int v10;\n  buffer_init(<span class=\"supfact\">v8</span>);\n  v3 = a1[Number];\n  a1[Number] = v3 + Number;\n  v10 = v3;\n  buffer_put_char(<span class=\"supfact\">v8</span>, Number L);\n  buffer_put_int(<span class=\"supfact\">v8</span>, v10);\n  buffer_put_string(<span class=\"supfact\">v8</span>, a2, a3);\n  send_msg(a1[Number], (__int64)<span class=\"supfact\">v8</span>);\n  debug3(String, v10);\n  v9 = get_status(*a1, v10);\n  if (v9) {\n    v4 = fx2txt(v9);\n    error((int)String, v4, v5);\n  }\n  buffer_free(<span class=\"supfact\">v8</span>);\n  return v9;\n}", "code_t": "int __cdecl do_close(sftp_conn *conn, char *handle, u_int handle_len) {\n  u_int v3;\n  int v4;\n  const char *v5;\n  Buffer <span class=\"supfact\">msg</span>;\n  u_int status;\n  u_int id;\n  buffer_init(&<span class=\"supfact\">msg</span>);\n  v3 = conn->msg_id;\n  conn->msg_id = v3 + Number;\n  id = v3;\n  buffer_put_char(&<span class=\"supfact\">msg</span>, Number L);\n  buffer_put_int(&<span class=\"supfact\">msg</span>, id);\n  buffer_put_string(&<span class=\"supfact\">msg</span>, handle, handle_len);\n  send_msg(conn->fd_out, &<span class=\"supfact\">msg</span>);\n  debug3(String, id);\n  status = get_status(conn->fd_in, id);\n  if (status) {\n    v4 = fx2txt(status);\n    error((int)String, v4, v5);\n  }\n  buffer_free(&<span class=\"supfact\">msg</span>);\n  return status;\n}", "var": [{"name": "v8", "type": "char[16]", "ref_name": "msg", "ref_type": "struct Buffer { u_char * buf; u_int alloc; u_int offset; u_int end; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "jordansissel", "repo_name": "tmux", "path": "jordansissel/tmux/a27947aa6f3cd5a2dd5fdae965d2a144f825894e09b8096117d48f2314893aac", "path_in_repo": "jordansissel/tmux/tags/TMUX_1_0/compat/imsg.o", "objdump": "0000000000000079 <imsg_read>:\n  79:\t55                   \tpush   %rbp\n  7a:\t48 89 e5             \tmov    %rsp,%rbp\n  7d:\t48 81 ec d0 00 00 00 \tsub    $0xd0,%rsp\n  84:\t48 89 bd 38 ff ff ff \tmov    %rdi,-0xc8(%rbp)\n  8b:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  8f:\tbe 38 00 00 00       \tmov    $0x38,%esi\n  94:\t48 89 c7             \tmov    %rax,%rdi\n  97:\te8 00 00 00 00       \tcallq  9c <imsg_read+0x23>\n  9c:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  a3:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n  a7:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  ae:\t48 8b 80 18 00 01 00 \tmov    0x10018(%rax),%rax\n  b5:\t48 01 d0             \tadd    %rdx,%rax\n  b8:\t48 89 85 40 ff ff ff \tmov    %rax,-0xc0(%rbp)\n  bf:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  c6:\t48 8b 80 18 00 01 00 \tmov    0x10018(%rax),%rax\n  cd:\tba ff ff 00 00       \tmov    $0xffff,%edx\n  d2:\t48 29 c2             \tsub    %rax,%rdx\n  d5:\t48 89 d0             \tmov    %rdx,%rax\n  d8:\t48 89 85 48 ff ff ff \tmov    %rax,-0xb8(%rbp)\n  df:\t48 8d 85 40 ff ff ff \tlea    -0xc0(%rbp),%rax\n  e6:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n  ea:\t48 c7 45 b8 01 00 00 \tmovq   $0x1,-0x48(%rbp)\n  f1:\t00 \n  f2:\t48 8d 85 50 ff ff ff \tlea    -0xb0(%rbp),%rax\n  f9:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n  fd:\t48 c7 45 c8 50 00 00 \tmovq   $0x50,-0x38(%rbp)\n 104:\t00 \n 105:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 10c:\t8b 80 38 00 01 00    \tmov    0x10038(%rax),%eax\n 112:\t48 8d 4d a0          \tlea    -0x60(%rbp),%rcx\n 116:\tba 00 00 00 00       \tmov    $0x0,%edx\n 11b:\t48 89 ce             \tmov    %rcx,%rsi\n 11e:\t89 c7                \tmov    %eax,%edi\n 120:\te8 00 00 00 00       \tcallq  125 <imsg_read+0xac>\n 125:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n 129:\t48 83 7d f0 ff       \tcmpq   $0xffffffffffffffff,-0x10(%rbp)\n 12e:\t75 30                \tjne    160 <imsg_read+0xe7>\n 130:\te8 00 00 00 00       \tcallq  135 <imsg_read+0xbc>\n 135:\t8b 00                \tmov    (%rax),%eax\n 137:\t83 f8 04             \tcmp    $0x4,%eax\n 13a:\t74 18                \tje     154 <imsg_read+0xdb>\n 13c:\te8 00 00 00 00       \tcallq  141 <imsg_read+0xc8>\n 141:\t8b 00                \tmov    (%rax),%eax\n 143:\t83 f8 0b             \tcmp    $0xb,%eax\n 146:\t74 0c                \tje     154 <imsg_read+0xdb>\n 148:\t48 c7 c0 ff ff ff ff \tmov    $0xffffffffffffffff,%rax\n 14f:\te9 08 01 00 00       \tjmpq   25c <imsg_read+0x1e3>\n 154:\t48 c7 c0 fe ff ff ff \tmov    $0xfffffffffffffffe,%rax\n 15b:\te9 fc 00 00 00       \tjmpq   25c <imsg_read+0x1e3>\n 160:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 167:\t48 8b 90 18 00 01 00 \tmov    0x10018(%rax),%rdx\n 16e:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 172:\t48 01 c2             \tadd    %rax,%rdx\n 175:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 17c:\t48 89 90 18 00 01 00 \tmov    %rdx,0x10018(%rax)\n 183:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 187:\t48 83 f8 0f          \tcmp    $0xf,%rax\n 18b:\t76 06                \tjbe    193 <imsg_read+0x11a>\n 18d:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 191:\teb 05                \tjmp    198 <imsg_read+0x11f>\n 193:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 198:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 19c:\te9 ac 00 00 00       \tjmpq   24d <imsg_read+0x1d4>\n 1a1:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 1a5:\t8b 40 08             \tmov    0x8(%rax),%eax\n 1a8:\t83 f8 01             \tcmp    $0x1,%eax\n 1ab:\t0f 85 85 00 00 00    \tjne    236 <imsg_read+0x1bd>\n 1b1:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 1b5:\t8b 40 0c             \tmov    0xc(%rax),%eax\n 1b8:\t83 f8 01             \tcmp    $0x1,%eax\n 1bb:\t75 79                \tjne    236 <imsg_read+0x1bd>\n 1bd:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 1c1:\t48 83 c0 10          \tadd    $0x10,%rax\n 1c5:\t8b 00                \tmov    (%rax),%eax\n 1c7:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n 1ca:\tbe 18 00 00 00       \tmov    $0x18,%esi\n 1cf:\tbf 01 00 00 00       \tmov    $0x1,%edi\n 1d4:\te8 00 00 00 00       \tcallq  1d9 <imsg_read+0x160>\n 1d9:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 1dd:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n 1e2:\t75 09                \tjne    1ed <imsg_read+0x174>\n 1e4:\t48 c7 c0 ff ff ff ff \tmov    $0xffffffffffffffff,%rax\n 1eb:\teb 6f                \tjmp    25c <imsg_read+0x1e3>\n 1ed:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 1f1:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n 1f4:\t89 50 10             \tmov    %edx,0x10(%rax)\n 1f7:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 1fb:\t48 c7 00 00 00 00 00 \tmovq   $0x0,(%rax)\n 202:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 209:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 20d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 211:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n 215:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 21c:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n 220:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n 224:\t48 89 10             \tmov    %rdx,(%rax)\n 227:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n 22b:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n 232:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n 236:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n 23a:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n 23e:\t48 89 d6             \tmov    %rdx,%rsi\n 241:\t48 89 c7             \tmov    %rax,%rdi\n 244:\te8 00 00 00 00       \tcallq  249 <imsg_read+0x1d0>\n 249:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 24d:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n 252:\t0f 85 49 ff ff ff    \tjne    1a1 <imsg_read+0x128>\n 258:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 25c:\tc9                   \tleaveq \n 25d:\tc3                   \tretq   ", "code_s": "ssize_t __fastcall imsg_read(__int64 a1) {\n  ssize_t result;\n  struct cmsghdr *v2;\n  __int64 <span class=\"supfact\">v3</span>[Number];\n  char v4;\n  struct msghdr <span class=\"supfact\">s</span>;\n  _DWORD *v6;\n  int v7;\n  ssize_t v8;\n  struct cmsghdr *cmsg;\n  bzero(&<span class=\"supfact\">s</span>, Number);\n  <span class=\"supfact\">v3</span>[Number] = a1 + Number + *(_QWORD *)(a1 + Number);\n  <span class=\"supfact\">v3</span>[Number] = Number - *(_QWORD *)(a1 + Number);\n  <span class=\"supfact\">s</span>.msg_iov = (struct iovec *)<span class=\"supfact\">v3</span>;\n  <span class=\"supfact\">s</span>.msg_iovlen = Number L;\n  <span class=\"supfact\">s</span>.msg_control = &v4;\n  <span class=\"supfact\">s</span>.msg_controllen = Number L;\n  v8 = recvmsg(*(_DWORD *)(a1 + Number), &<span class=\"supfact\">s</span>, Number);\n  if (v8 == Number) {\n    if (*_errno_location() == Number || *_errno_location() == Number)\n      result = Number;\n    else\n      result = Number;\n  } else {\n    *(_QWORD *)(a1 + Number) += v8;\n    if (<span class=\"supfact\">s</span>.msg_controllen <= Number)\n      v2 = Number L;\n    else\n      v2 = (struct cmsghdr *)<span class=\"supfact\">s</span>.msg_control;\n    for (cmsg = v2; cmsg; cmsg = _cmsg_nxthdr(&<span class=\"supfact\">s</span>, cmsg)) {\n      if (cmsg->cmsg_level == Number && cmsg->cmsg_type == Number) {\n        v7 = *(_DWORD *)cmsg->__cmsg_data;\n        v6 = calloc(Number, Number);\n        if (!v6)\n          return Number;\n        v6[Number] = v7;\n        *(_QWORD *)v6 = Number L;\n        *((_QWORD *)v6 + Number) = *(_QWORD *)(a1 + Number);\n        **(_QWORD **)(a1 + Number) = v6;\n        *(_QWORD *)(a1 + Number) = v6;\n      }\n    }\n    result = v8;\n  }\n  return result;\n}", "code_t": "ssize_t __cdecl imsg_read(imsgbuf *ibuf) {\n  ssize_t result;\n  cmsghdr *v2;\n  iovec <span class=\"supfact\">iov</span>;\n  char v4;\n  msghdr <span class=\"supfact\">msg</span>;\n  imsg_fd *ifd;\n  int fd;\n  ssize_t n;\n  cmsghdr *cmsg;\n  bzero(&<span class=\"supfact\">msg</span>, Number);\n  <span class=\"supfact\">iov</span>.iov_base = &ibuf->r.buf[ibuf->r.wpos];\n  <span class=\"supfact\">iov</span>.iov_len = Number - ibuf->r.wpos;\n  <span class=\"supfact\">msg</span>.msg_iov = &<span class=\"supfact\">iov</span>;\n  <span class=\"supfact\">msg</span>.msg_iovlen = Number L;\n  <span class=\"supfact\">msg</span>.msg_control = &v4;\n  <span class=\"supfact\">msg</span>.msg_controllen = Number L;\n  n = recvmsg(ibuf->fd, &<span class=\"supfact\">msg</span>, Number);\n  if (n == Number) {\n    if (*_errno_location() == Number || *_errno_location() == Number)\n      result = Number;\n    else\n      result = Number;\n  } else {\n    ibuf->r.wpos += n;\n    if (<span class=\"supfact\">msg</span>.msg_controllen <= Number)\n      v2 = Number L;\n    else\n      v2 = (cmsghdr *)<span class=\"supfact\">msg</span>.msg_control;\n    for (cmsg = v2; cmsg; cmsg = _cmsg_nxthdr(&<span class=\"supfact\">msg</span>, cmsg)) {\n      if (cmsg->cmsg_level == Number && cmsg->cmsg_type == Number) {\n        fd = *(_DWORD *)cmsg->__cmsg_data;\n        ifd = (imsg_fd *)calloc(Number, Number);\n        if (!ifd)\n          return Number;\n        ifd->fd = fd;\n        ifd->entry.tqe_next = Number L;\n        ifd->entry.tqe_prev = ibuf->fds.tqh_last;\n        *ibuf->fds.tqh_last = ifd;\n        ibuf->fds.tqh_last = &ifd->entry.tqe_next;\n      }\n    }\n    result = n;\n  }\n  return result;\n}", "var": [{"name": "s", "type": "struct msghdr { void * msg_name; socklen_t msg_namelen; PADDING (4); iovec * msg_iov; size_t msg_iovlen; void * msg_control; size_t msg_controllen; int msg_flags; PADDING (4); }", "ref_name": "msg", "ref_type": "struct msghdr { void * msg_name; socklen_t msg_namelen; PADDING (4); iovec * msg_iov; size_t msg_iovlen; void * msg_control; size_t msg_controllen; int msg_flags; PADDING (4); }"}, {"name": "v3", "type": "struct iovec { void * iov_base; size_t iov_len; }", "ref_name": "iov", "ref_type": "struct iovec { void * iov_base; size_t iov_len; }"}], "body_in_train": false}, {"repo_owner": "christoph-husse", "repo_name": "isynth", "path": "christoph-husse/isynth/a6c0476d37fab0a2016b706bb595a9db57bad22bae2083133c2d1eeb6cb12f1c", "path_in_repo": "christoph-husse/isynth/dependencies/juce/extras/Introjucer/Builds/Linux/build/intermediate/Debug/juce_events_584896b4.o", "objdump": "", "code_s": "void __fastcall juce LeakedObjectDetector<juce InterprocessConnectionServer>\n    LeakCounter ~LeakCounter(void *a1) {\n  __int64 v1;\n  juce InterprocessConnectionServer *v2;\n  __int64 v3;\n  const char *v4;\n  int v5;\n  char <span class=\"supfact\">v6</span>[Number];\n  if (*(int *)a1 > Number) {\n    juce String String((juce String *)<span class=\"supfact\">v6</span>);\n    v1 = juce operator<<(<span class=\"supfact\">v6</span>, String);\n    v2 = (juce InterprocessConnectionServer *)juce operator<<(\n        v1, *(unsigned int *)a1);\n    v3 = juce operator<<(v2, String);\n    v4 = juce LeakedObjectDetector<juce InterprocessConnectionServer>\n        getLeakedObjectClassName(v2);\n    juce operator<<(v3, v4);\n    juce Logger outputDebugString((juce Logger *)<span class=\"supfact\">v6</span>,\n                                  (const juce String *)v4);\n    juce String ~String((juce String *)<span class=\"supfact\">v6</span>);\n    juce logAssertion((juce *)String, (const char *)&loc_5B + Number, v5);\n    if ((unsigned __int8)juce juce_isRunningUnderDebugger(\n            (juce *)String String))\n      kill(Number, Number);\n  }\n  juce Atomic<int> ~Atomic();\n}", "code_t": "void __cdecl juce LeakedObjectDetector<juce InterprocessConnectionServer>\n    LeakCounter ~LeakCounter(\n        juce LeakedObjectDetector<juce InterprocessConnectionServer> LeakCounter\n            *const this) {\n  __int64 v1;\n  __int64 v2;\n  __int64 v3;\n  const char *v4;\n  int v5;\n  juce String <span class=\"supfact\">tempDbgBuf</span>;\n  if (this->numObjects.value > Number) {\n    juce String String(&<span class=\"supfact\">tempDbgBuf</span>);\n    v1 = juce operator<<(&<span class=\"supfact\">tempDbgBuf</span>, String);\n    v2 = juce operator<<(v1, (unsigned int)this->numObjects.value);\n    v3 = juce operator<<(v2, String);\n    v4 = juce LeakedObjectDetector<juce InterprocessConnectionServer>\n    getLeakedObjectClassName();\n    juce operator<<(v3, v4);\n    juce Logger outputDebugString((juce Logger *)&<span class=\"supfact\">tempDbgBuf</span>,\n                                  (const juce String *)v4);\n    juce String ~String(&<span class=\"supfact\">tempDbgBuf</span>);\n    juce logAssertion((juce *)String, (const char *)&loc_5B + Number, v5);\n    if ((unsigned __int8)juce juce_isRunningUnderDebugger(\n            (juce *)String String))\n      kill(Number, Number);\n  }\n  juce Atomic<int> ~Atomic(&this->numObjects);\n}", "var": [{"name": "v6", "type": "struct juce::String { juce::String::CharPointerType text; }", "ref_name": "tempDbgBuf", "ref_type": "struct juce::String { juce::String::CharPointerType text; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/3da554e7be727d06ab7f4e2330fe40c06e49dc1c481fc3ec5a772104aacc182a", "path_in_repo": "XanClic/qemu//hw/scsi/megasas.o", "objdump": "0000000000001833 <_nocheck__trace_megasas_iov_read_overflow>:\n    1833:\t55                   \tpush   %rbp\n    1834:\t48 89 e5             \tmov    %rsp,%rbp\n    1837:\t41 54                \tpush   %r12\n    1839:\t53                   \tpush   %rbx\n    183a:\t48 83 ec 30          \tsub    $0x30,%rsp\n    183e:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n    1841:\t89 75 c8             \tmov    %esi,-0x38(%rbp)\n    1844:\t89 55 c4             \tmov    %edx,-0x3c(%rbp)\n    1847:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    184e:\t00 00 \n    1850:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    1854:\t31 c0                \txor    %eax,%eax\n    1856:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 185c <_nocheck__trace_megasas_iov_read_overflow+0x29>\n    185c:\t85 c0                \ttest   %eax,%eax\n    185e:\t0f 95 c0             \tsetne  %al\n    1861:\t0f b6 c0             \tmovzbl %al,%eax\n    1864:\t48 85 c0             \ttest   %rax,%rax\n    1867:\t74 6f                \tje     18d8 <_nocheck__trace_megasas_iov_read_overflow+0xa5>\n    1869:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 1870 <_nocheck__trace_megasas_iov_read_overflow+0x3d>\n    1870:\t66 85 c0             \ttest   %ax,%ax\n    1873:\t74 63                \tje     18d8 <_nocheck__trace_megasas_iov_read_overflow+0xa5>\n    1875:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n    187a:\te8 ae ef ff ff       \tcallq  82d <qemu_loglevel_mask>\n    187f:\t84 c0                \ttest   %al,%al\n    1881:\t74 55                \tje     18d8 <_nocheck__trace_megasas_iov_read_overflow+0xa5>\n    1883:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1887:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    188c:\t48 89 c7             \tmov    %rax,%rdi\n    188f:\te8 00 00 00 00       \tcallq  1894 <_nocheck__trace_megasas_iov_read_overflow+0x61>\n    1894:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1898:\t49 89 c4             \tmov    %rax,%r12\n    189b:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    189f:\t48 89 c3             \tmov    %rax,%rbx\n    18a2:\te8 00 00 00 00       \tcallq  18a7 <_nocheck__trace_megasas_iov_read_overflow+0x74>\n    18a7:\t89 c6                \tmov    %eax,%esi\n    18a9:\t8b 4d c8             \tmov    -0x38(%rbp),%ecx\n    18ac:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    18af:\t48 83 ec 08          \tsub    $0x8,%rsp\n    18b3:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    18b6:\t50                   \tpush   %rax\n    18b7:\t41 89 c9             \tmov    %ecx,%r9d\n    18ba:\t41 89 d0             \tmov    %edx,%r8d\n    18bd:\t4c 89 e1             \tmov    %r12,%rcx\n    18c0:\t48 89 da             \tmov    %rbx,%rdx\n    18c3:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 18ca <_nocheck__trace_megasas_iov_read_overflow+0x97>\n    18ca:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    18cf:\te8 00 00 00 00       \tcallq  18d4 <_nocheck__trace_megasas_iov_read_overflow+0xa1>\n    18d4:\t48 83 c4 10          \tadd    $0x10,%rsp\n    18d8:\t90                   \tnop\n    18d9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    18dd:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    18e4:\t00 00 \n    18e6:\t74 05                \tje     18ed <_nocheck__trace_megasas_iov_read_overflow+0xba>\n    18e8:\te8 00 00 00 00       \tcallq  18ed <_nocheck__trace_megasas_iov_read_overflow+0xba>\n    18ed:\t48 8d 65 f0          \tlea    -0x10(%rbp),%rsp\n    18f1:\t5b                   \tpop    %rbx\n    18f2:\t41 5c                \tpop    %r12\n    18f4:\t5d                   \tpop    %rbp\n    18f5:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_megasas_iov_read_overflow(\n    unsigned int a1, unsigned int a2, unsigned int a3) {\n  __suseconds_t v3;\n  __time_t v4;\n  unsigned int v5;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v9;\n  v9 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_IOV_READ_OVERFLOW_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v3 = <span class=\"supfact\">tv</span>.tv_usec;\n    v4 = <span class=\"supfact\">tv</span>.tv_sec;\n    v5 = qemu_get_thread_id();\n    qemu_log(String, v5, v4, v3, a1, a2, a3);\n  }\n  return __readfsqword(Number) ^ v9;\n}", "code_t": "void __cdecl nocheck__trace_megasas_iov_read_overflow(int cmd, int bytes,\n                                                      int len) {\n  __suseconds_t v3;\n  __time_t v4;\n  unsigned int v5;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v8;\n  v8 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_IOV_READ_OVERFLOW_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v3 = <span class=\"supfact\">_now</span>.tv_usec;\n    v4 = <span class=\"supfact\">_now</span>.tv_sec;\n    v5 = qemu_get_thread_id();\n    qemu_log(String, v5, v4, v3, (unsigned int)cmd, (unsigned int)bytes,\n             (unsigned int)len);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/167d712463e0992729e10389549ca204bb5a890bb1dd0460101cee04a39115ca", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/drivers/taito_f2.o", "objdump": "00000000000258f1 <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t>:\n   258f1:\t55                   \tpush   %rbp\n   258f2:\t48 89 e5             \tmov    %rsp,%rbp\n   258f5:\t53                   \tpush   %rbx\n   258f6:\t48 83 ec 68          \tsub    $0x68,%rsp\n   258fa:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n   258fe:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n   25902:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n   25909:\t00 \n   2590a:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   2590e:\t48 89 c7             \tmov    %rax,%rdi\n   25911:\te8 00 00 00 00       \tcallq  25916 <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0x25>\n   25916:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n   2591a:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   2591e:\t48 89 d6             \tmov    %rdx,%rsi\n   25921:\t48 89 c7             \tmov    %rax,%rdi\n   25924:\te8 14 e3 ff ff       \tcallq  23c3d <_ZL33construct_machine_config_taito_f2R14machine_configP8device_t>\n   25929:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n   2592d:\t48 8b 4d 90          \tmov    -0x70(%rbp),%rcx\n   25931:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   25935:\tba 00 00 00 00       \tmov    $0x0,%edx\n   2593a:\t48 89 ce             \tmov    %rcx,%rsi\n   2593d:\t48 89 c7             \tmov    %rax,%rdi\n   25940:\te8 00 00 00 00       \tcallq  25945 <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0x54>\n   25945:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   25949:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   2594d:\tba 00 00 00 00       \tmov    $0x0,%edx\n   25952:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   25957:\t48 89 c7             \tmov    %rax,%rdi\n   2595a:\te8 00 00 00 00       \tcallq  2595f <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0x6e>\n   2595f:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n   25963:\tba 00 00 00 00       \tmov    $0x0,%edx\n   25968:\tbe 04 00 00 00       \tmov    $0x4,%esi\n   2596d:\t48 89 c7             \tmov    %rax,%rdi\n   25970:\te8 00 00 00 00       \tcallq  25975 <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0x84>\n   25975:\t48 8b 4d 90          \tmov    -0x70(%rbp),%rcx\n   25979:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   2597d:\tba 00 00 00 00       \tmov    $0x0,%edx\n   25982:\t48 89 ce             \tmov    %rcx,%rsi\n   25985:\t48 89 c7             \tmov    %rax,%rdi\n   25988:\te8 00 00 00 00       \tcallq  2598d <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0x9c>\n   2598d:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   25991:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   25995:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   2599a:\t48 89 c7             \tmov    %rax,%rdi\n   2599d:\te8 00 00 00 00       \tcallq  259a2 <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0xb1>\n   259a2:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 259a9 <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0xb8>\n   259a9:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n   259ad:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   259b1:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n   259b7:\t48 89 d1             \tmov    %rdx,%rcx\n   259ba:\tba 00 00 00 00       \tmov    $0x0,%edx\n   259bf:\t48 89 c7             \tmov    %rax,%rdi\n   259c2:\te8 00 00 00 00       \tcallq  259c7 <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0xd6>\n   259c7:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   259cb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   259cf:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   259d4:\t48 89 c7             \tmov    %rax,%rdi\n   259d7:\te8 00 00 00 00       \tcallq  259dc <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0xeb>\n   259dc:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 259e3 <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0xf2>\n   259e3:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n   259e7:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   259eb:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n   259f1:\t48 89 d1             \tmov    %rdx,%rcx\n   259f4:\tba 00 00 00 00       \tmov    $0x0,%edx\n   259f9:\t48 89 c7             \tmov    %rax,%rdi\n   259fc:\te8 00 00 00 00       \tcallq  25a01 <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0x110>\n   25a01:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   25a05:\t48 8b 5d 90          \tmov    -0x70(%rbp),%rbx\n   25a09:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   25a0d:\t48 89 c7             \tmov    %rax,%rdi\n   25a10:\te8 00 00 00 00       \tcallq  25a15 <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0x124>\n   25a15:\t48 89 d8             \tmov    %rbx,%rax\n   25a18:\teb 1a                \tjmp    25a34 <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0x143>\n   25a1a:\t48 89 c3             \tmov    %rax,%rbx\n   25a1d:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   25a21:\t48 89 c7             \tmov    %rax,%rdi\n   25a24:\te8 00 00 00 00       \tcallq  25a29 <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0x138>\n   25a29:\t48 89 d8             \tmov    %rbx,%rax\n   25a2c:\t48 89 c7             \tmov    %rax,%rdi\n   25a2f:\te8 00 00 00 00       \tcallq  25a34 <_ZL33construct_machine_config_solfigtrR14machine_configP8device_t+0x143>\n   25a34:\t48 83 c4 68          \tadd    $0x68,%rsp\n   25a38:\t5b                   \tpop    %rbx\n   25a39:\t5d                   \tpop    %rbp\n   25a3a:\tc3                   \tretq   ", "code_s": "device_t *__fastcall construct_machine_config_solfigtr(machine_config *a1,\n                                                       device_t *a2) {\n  const void *v2;\n  device_t *v4;\n  char <span class=\"supfact\">v5</span>[Number];\n  device_t *v6;\n  v6 = Number L;\n  astring astring((astring *)<span class=\"supfact\">v5</span>);\n  v4 = construct_machine_config_taito_f2(a1, a2);\n  v6 = (device_t *)machine_config device_find(a1, v4, String);\n  device_memory_interface static_set_addrmap(\n      v6, Number L, construct_address_map_solfigtr_map);\n  driver_device static_set_callback(v4, Number L,\n                                    &video_start_taitof2_solfigtr);\n  v6 = (device_t *)machine_config device_find(a1, v4, String);\n  screen_device static_set_screen_update(v6, &screen_update_taitof2_pri);\n  v6 = (device_t *)machine_config device_add(a1, v4, String, TC0100SCN, Number);\n  device_t static_set_static_config(v6, (device_t *)&solfigtr_tc0100scn_intf,\n                                    v2);\n  v6 = (device_t *)machine_config device_add(a1, v4, String, TC0360PRI, Number);\n  astring ~astring((astring *)<span class=\"supfact\">v5</span>);\n  return v4;\n}", "code_t": "device_t *__cdecl construct_machine_config_solfigtr(machine_config *config,\n                                                    device_t *owner) {\n  void(__fastcall * v2)(address_map *, const device_t *);\n  void(__fastcall * v3)(running_machine *);\n  unsigned int(__fastcall * v4)(screen_device *, bitmap_t *,\n                                const _rectangle *);\n  device_t *ownera;\n  astring <span class=\"supfact\">tempstring</span>;\n  device_t *device;\n  device = Number L;\n  astring astring(&<span class=\"supfact\">tempstring</span>);\n  ownera = construct_machine_config_taito_f2(config, owner);\n  device = (device_t *)machine_config device_find(config, ownera, String);\n  device_memory_interface static_set_addrmap(\n      device, Number L, (address_spacenum)construct_address_map_solfigtr_map,\n      v2);\n  driver_device static_set_callback(\n      ownera, (device_t *)&loc_4,\n      (driver_device callback_type)&video_start_taitof2_solfigtr, v3);\n  device = (device_t *)machine_config device_find(config, ownera, String);\n  screen_device static_set_screen_update(\n      device, (device_t *)&screen_update_taitof2_pri, v4);\n  device = (device_t *)machine_config device_add(config, ownera, String,\n                                                 TC0100SCN, Number);\n  device_t static_set_static_config(device, &solfigtr_tc0100scn_intf);\n  device = (device_t *)machine_config device_add(config, ownera, String,\n                                                 TC0360PRI, Number);\n  astring ~astring(&<span class=\"supfact\">tempstring</span>);\n  return ownera;\n}", "var": [{"name": "v5", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "tempstring", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "richardcochran", "repo_name": "linuxptp", "path": "richardcochran/linuxptp/ae32ca0160ef6276d4254ff6bd34dcabf3d4298f7d0b5cf07a8492f19d9ca542", "path_in_repo": "richardcochran/linuxptp//rtnl.o", "objdump": "00000000000001dc <rtnl_link_query>:\n 1dc:\t55                   \tpush   %rbp\n 1dd:\t48 89 e5             \tmov    %rsp,%rbp\n 1e0:\t48 81 ec 90 00 00 00 \tsub    $0x90,%rsp\n 1e7:\t89 bd 7c ff ff ff    \tmov    %edi,-0x84(%rbp)\n 1ed:\t48 89 b5 70 ff ff ff \tmov    %rsi,-0x90(%rbp)\n 1f4:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n 1f8:\tba 0c 00 00 00       \tmov    $0xc,%edx\n 1fd:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 202:\t48 89 c7             \tmov    %rax,%rdi\n 205:\te8 00 00 00 00       \tcallq  20a <rtnl_link_query+0x2e>\n 20a:\t66 c7 45 f0 10 00    \tmovw   $0x10,-0x10(%rbp)\n 210:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n 214:\tba 20 00 00 00       \tmov    $0x20,%edx\n 219:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 21e:\t48 89 c7             \tmov    %rax,%rdi\n 221:\te8 00 00 00 00       \tcallq  226 <rtnl_link_query+0x4a>\n 226:\tc7 45 80 20 00 00 00 \tmovl   $0x20,-0x80(%rbp)\n 22d:\t66 c7 45 84 12 00    \tmovw   $0x12,-0x7c(%rbp)\n 233:\t66 c7 45 86 01 00    \tmovw   $0x1,-0x7a(%rbp)\n 239:\tc7 45 88 01 00 00 00 \tmovl   $0x1,-0x78(%rbp)\n 240:\tc7 45 8c 00 00 00 00 \tmovl   $0x0,-0x74(%rbp)\n 247:\tc6 45 90 00          \tmovb   $0x0,-0x70(%rbp)\n 24b:\t48 83 bd 70 ff ff ff \tcmpq   $0x0,-0x90(%rbp)\n 252:\t00 \n 253:\t74 09                \tje     25e <rtnl_link_query+0x82>\n 255:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n 25c:\teb 05                \tjmp    263 <rtnl_link_query+0x87>\n 25e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 263:\t48 89 c7             \tmov    %rax,%rdi\n 266:\te8 00 00 00 00       \tcallq  26b <rtnl_link_query+0x8f>\n 26b:\t89 45 94             \tmov    %eax,-0x6c(%rbp)\n 26e:\tc7 45 9c ff ff ff ff \tmovl   $0xffffffff,-0x64(%rbp)\n 275:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n 279:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n 27d:\t48 c7 45 a8 20 00 00 \tmovq   $0x20,-0x58(%rbp)\n 284:\t00 \n 285:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n 289:\tba 38 00 00 00       \tmov    $0x38,%edx\n 28e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 293:\t48 89 c7             \tmov    %rax,%rdi\n 296:\te8 00 00 00 00       \tcallq  29b <rtnl_link_query+0xbf>\n 29b:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n 29f:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n 2a3:\tc7 45 b8 0c 00 00 00 \tmovl   $0xc,-0x48(%rbp)\n 2aa:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n 2ae:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n 2b2:\t48 c7 45 c8 01 00 00 \tmovq   $0x1,-0x38(%rbp)\n 2b9:\t00 \n 2ba:\t48 8d 4d b0          \tlea    -0x50(%rbp),%rcx\n 2be:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n 2c4:\tba 00 00 00 00       \tmov    $0x0,%edx\n 2c9:\t48 89 ce             \tmov    %rcx,%rsi\n 2cc:\t89 c7                \tmov    %eax,%edi\n 2ce:\te8 00 00 00 00       \tcallq  2d3 <rtnl_link_query+0xf7>\n 2d3:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 2d6:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n 2da:\t79 1b                \tjns    2f7 <rtnl_link_query+0x11b>\n 2dc:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 2e1:\tbf 03 00 00 00       \tmov    $0x3,%edi\n 2e6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 2eb:\te8 00 00 00 00       \tcallq  2f0 <rtnl_link_query+0x114>\n 2f0:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n 2f5:\teb 05                \tjmp    2fc <rtnl_link_query+0x120>\n 2f7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 2fc:\tc9                   \tleaveq \n 2fd:\tc3                   \tretq   ", "code_s": "__int64 __fastcall rtnl_link_query(int a1, const char *a2) {\n  const char *v2;\n  int v4[Number];\n  __int64 <span class=\"supfact\">v5</span>[Number];\n  struct msghdr <span class=\"supfact\">message</span>;\n  __int16 <span class=\"supfact\">s</span>[Number];\n  int v8;\n  memset(<span class=\"supfact\">s</span>, Number, sizeof(<span class=\"supfact\">s</span>));\n  <span class=\"supfact\">s</span>[Number] = Number;\n  memset(v4, Number, sizeof(v4));\n  v4[Number] = Number;\n  v4[Number] = Number;\n  v4[Number] = Number;\n  v4[Number] = Number;\n  LOBYTE(v4[Number]) = Number;\n  if (a2)\n    v2 = a2;\n  else\n    v2 = (const char *)&unk_F62;\n  v4[Number] = if_nametoindex(v2);\n  v4[Number] = Number;\n  <span class=\"supfact\">v5</span>[Number] = (__int64)v4;\n  <span class=\"supfact\">v5</span>[Number] = Number L;\n  memset(&<span class=\"supfact\">message</span>, Number, sizeof(<span class=\"supfact\">message</span>));\n  <span class=\"supfact\">message</span>.msg_name = <span class=\"supfact\">s</span>;\n  <span class=\"supfact\">message</span>.msg_namelen = Number;\n  <span class=\"supfact\">message</span>.msg_iov = (iovec *)<span class=\"supfact\">v5</span>;\n  <span class=\"supfact\">message</span>.msg_iovlen = Number L;\n  v8 = sendmsg(a1, &<span class=\"supfact\">message</span>, Number);\n  if (v8 >= Number)\n    return Number L;\n  print(Number L, String);\n  return Number;\n}", "code_t": "int __cdecl rtnl_link_query(int fd, char *device) {\n  char *v2;\n  rtnl_link_query $465D929A1CE510E63F8DE3EC2A89BAC8 request;\n  iovec <span class=\"supfact\">iov</span>;\n  msghdr <span class=\"supfact\">msg</span>;\n  sockaddr_nl <span class=\"supfact\">sa</span>;\n  int cnt;\n  memset(&<span class=\"supfact\">sa</span>, Number, sizeof(<span class=\"supfact\">sa</span>));\n  <span class=\"supfact\">sa</span>.nl_family = Number;\n  memset(&request, Number, sizeof(request));\n  request.hdr.nlmsg_len = Number;\n  request.hdr.nlmsg_type = Number;\n  request.hdr.nlmsg_flags = Number;\n  request.hdr.nlmsg_seq = Number;\n  request.hdr.nlmsg_pid = Number;\n  request.ifm.ifi_family = Number;\n  if (device)\n    v2 = device;\n  else\n    v2 = (char *)&unk_F62;\n  request.ifm.ifi_index = if_nametoindex(v2);\n  request.ifm.ifi_change = Number;\n  <span class=\"supfact\">iov</span>.iov_base = &request;\n  <span class=\"supfact\">iov</span>.iov_len = Number L;\n  memset(&<span class=\"supfact\">msg</span>, Number, sizeof(<span class=\"supfact\">msg</span>));\n  <span class=\"supfact\">msg</span>.msg_name = &<span class=\"supfact\">sa</span>;\n  <span class=\"supfact\">msg</span>.msg_namelen = Number;\n  <span class=\"supfact\">msg</span>.msg_iov = &<span class=\"supfact\">iov</span>;\n  <span class=\"supfact\">msg</span>.msg_iovlen = Number L;\n  cnt = sendmsg(fd, &<span class=\"supfact\">msg</span>, Number);\n  if (cnt >= Number)\n    return Number;\n  print(Number L, String);\n  return Number;\n}", "var": [{"name": "s", "type": "struct sockaddr_nl { __kernel_sa_family_t nl_family; unsigned __int16 nl_pad; __u32 nl_pid; __u32 nl_groups; }", "ref_name": "sa", "ref_type": "struct sockaddr_nl { __kernel_sa_family_t nl_family; unsigned __int16 nl_pad; __u32 nl_pid; __u32 nl_groups; }"}, {"name": "message", "type": "struct msghdr { void * msg_name; socklen_t msg_namelen; PADDING (4); iovec * msg_iov; size_t msg_iovlen; void * msg_control; size_t msg_controllen; int msg_flags; PADDING (4); }", "ref_name": "msg", "ref_type": "struct msghdr { void * msg_name; socklen_t msg_namelen; PADDING (4); iovec * msg_iov; size_t msg_iovlen; void * msg_control; size_t msg_controllen; int msg_flags; PADDING (4); }"}, {"name": "v5", "type": "struct iovec { void * iov_base; size_t iov_len; }", "ref_name": "iov", "ref_type": "struct iovec { void * iov_base; size_t iov_len; }"}], "body_in_train": false}, {"repo_owner": "jamesbulpin", "repo_name": "xcp-xen-4.1", "path": "jamesbulpin/xcp-xen-4.1/24b00767a273e76fe678054697f4aa2426b3b24fa88f4257f4124cb3b68e0c30", "path_in_repo": "jamesbulpin/xcp-xen-4.1/tools/libxen/src/xen_acmpolicy.o", "objdump": "0000000000000649 <xen_acmpolicy_get_uuid>:\n 649:\t53                   \tpush   %rbx\n 64a:\t48 83 ec 70          \tsub    $0x70,%rsp\n 64e:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n 653:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n 658:\t48 89 54 24 08       \tmov    %rdx,0x8(%rsp)\n 65d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 664 <xen_acmpolicy_get_uuid+0x1b>\n 664:\t48 89 44 24 60       \tmov    %rax,0x60(%rsp)\n 669:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n 66e:\t48 89 44 24 68       \tmov    %rax,0x68(%rsp)\n 673:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 67a <xen_acmpolicy_get_uuid+0x31>\n 67a:\t48 8b 08             \tmov    (%rax),%rcx\n 67d:\t48 8b 58 08          \tmov    0x8(%rax),%rbx\n 681:\t48 89 4c 24 20       \tmov    %rcx,0x20(%rsp)\n 686:\t48 89 5c 24 28       \tmov    %rbx,0x28(%rsp)\n 68b:\t48 8b 48 10          \tmov    0x10(%rax),%rcx\n 68f:\t48 8b 58 18          \tmov    0x18(%rax),%rbx\n 693:\t48 89 4c 24 30       \tmov    %rcx,0x30(%rsp)\n 698:\t48 89 5c 24 38       \tmov    %rbx,0x38(%rsp)\n 69d:\t48 8b 48 20          \tmov    0x20(%rax),%rcx\n 6a1:\t48 8b 58 28          \tmov    0x28(%rax),%rbx\n 6a5:\t48 89 4c 24 40       \tmov    %rcx,0x40(%rsp)\n 6aa:\t48 89 5c 24 48       \tmov    %rbx,0x48(%rsp)\n 6af:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n 6b3:\t48 89 44 24 50       \tmov    %rax,0x50(%rsp)\n 6b8:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n 6bd:\t48 c7 00 00 00 00 00 \tmovq   $0x0,(%rax)\n 6c4:\t48 8b 74 24 10       \tmov    0x10(%rsp),%rsi\n 6c9:\t48 8d 4c 24 20       \tlea    0x20(%rsp),%rcx\n 6ce:\t48 8d 54 24 60       \tlea    0x60(%rsp),%rdx\n 6d3:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n 6d8:\t49 89 f1             \tmov    %rsi,%r9\n 6db:\t49 89 c8             \tmov    %rcx,%r8\n 6de:\tb9 01 00 00 00       \tmov    $0x1,%ecx\n 6e3:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6ea <xen_acmpolicy_get_uuid+0xa1>\n 6ea:\t48 89 c7             \tmov    %rax,%rdi\n 6ed:\te8 00 00 00 00       \tcallq  6f2 <xen_acmpolicy_get_uuid+0xa9>\n 6f2:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n 6f7:\t0f b6 40 18          \tmovzbl 0x18(%rax),%eax\n 6fb:\t48 83 c4 70          \tadd    $0x70,%rsp\n 6ff:\t5b                   \tpop    %rbx\n 700:\tc3                   \tretq   \n", "code_s": "__int64 __fastcall xen_acmpolicy_get_uuid(__int64 a1, _QWORD *a2, __int64 a3) {\n  __int64 v3;\n  __int64 v4;\n  __int64 v5;\n  __int64 <span class=\"supfact\">v7</span>[Number];\n  __int64 v8[Number];\n  v8[Number] = (__int64)abstract_type_string;\n  v8[Number] = a3;\n  v3 = abstract_type_string[Number];\n  <span class=\"supfact\">v7</span>[Number] = abstract_type_string[Number];\n  <span class=\"supfact\">v7</span>[Number] = v3;\n  v4 = abstract_type_string[Number];\n  <span class=\"supfact\">v7</span>[Number] = abstract_type_string[Number];\n  <span class=\"supfact\">v7</span>[Number] = v4;\n  v5 = abstract_type_string[Number];\n  <span class=\"supfact\">v7</span>[Number] = abstract_type_string[Number];\n  <span class=\"supfact\">v7</span>[Number] = v5;\n  <span class=\"supfact\">v7</span>[Number] = abstract_type_string[Number];\n  *a2 = Number L;\n  xen_call_(a1, String, v8, Number L, <span class=\"supfact\">v7</span>, a2);\n  return *(unsigned __int8 *)(a1 + Number);\n}", "code_t": "bool __cdecl xen_acmpolicy_get_uuid(xen_session *session, char **result,\n                                    xen_xspolicy xspolicy) {\n  const abstract_type *v3;\n  int (*v4)(xen_session *, const char *);\n  size_t v5;\n  abstract_type_0 <span class=\"supfact\">result_type</span>;\n  abstract_value_0 param_values[Number];\n  param_values[Number].type = (const abstract_type_0 *)abstract_type_string;\n  param_values[Number].u.int_val = (int64_t)xspolicy;\n  v3 = (const abstract_type *)abstract_type_string[Number];\n  *(_QWORD *)&<span class=\"supfact\">result_type</span>.typename =\n      abstract_type_string[Number];\n  <span class=\"supfact\">result_type</span>.child = v3;\n  v4 = (int (*)(xen_session *, const char *))abstract_type_string[Number];\n  <span class=\"supfact\">result_type</span>.enum_marshaller =\n      (const char *(*)(int))abstract_type_string[Number];\n  <span class=\"supfact\">result_type</span>.enum_demarshaller = v4;\n  v5 = abstract_type_string[Number];\n  <span class=\"supfact\">result_type</span>.struct_size = abstract_type_string[Number];\n  <span class=\"supfact\">result_type</span>.member_count = v5;\n  <span class=\"supfact\">result_type</span>.members =\n      (const struct_member_0 *)abstract_type_string[Number];\n  *result = Number L;\n  xen_call_(session, String, param_values, Number L,\n            &<span class=\"supfact\">result_type</span>, result);\n  return session->ok;\n}", "var": [{"name": "v7", "type": "struct abstract_type_0 { abstract_typename typename; PADDING (4); const abstract_type * child; const char *(*)(int) enum_marshaller; int (*)(xen_session *, const char *) enum_demarshaller; size_t struct_size; size_t member_count; const struct_member_0 * members; }", "ref_name": "result_type", "ref_type": "struct abstract_type_0 { abstract_typename typename; PADDING (4); const abstract_type * child; const char *(*)(int) enum_marshaller; int (*)(xen_session *, const char *) enum_demarshaller; size_t struct_size; size_t member_count; const struct_member_0 * members; }"}], "body_in_train": false}, {"repo_owner": "AlexanderVangelov", "repo_name": "pjsip", "path": "AlexanderVangelov/pjsip/1e1e7cb97ebb80eac8dbb33680b64d176ff61b4eaa68df0fca22659194da5490", "path_in_repo": "AlexanderVangelov/pjsip//pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/stateful_proxy", "objdump": "000000000041e3b5 <udp_destroy>:\n  41e3b5:\t55                   \tpush   %rbp\n  41e3b6:\t48 89 e5             \tmov    %rsp,%rbp\n  41e3b9:\t48 83 ec 40          \tsub    $0x40,%rsp\n  41e3bd:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n  41e3c1:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  41e3c5:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  41e3c9:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41e3cd:\tc7 80 80 01 00 00 01 \tmovl   $0x1,0x180(%rax)\n  41e3d4:\t00 00 00 \n  41e3d7:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41e3db:\t48 8b 80 68 01 00 00 \tmov    0x168(%rax),%rax\n  41e3e2:\t48 85 c0             \ttest   %rax,%rax\n  41e3e5:\t74 24                \tje     41e40b <udp_destroy+0x56>\n  41e3e7:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41e3eb:\t48 8b 80 68 01 00 00 \tmov    0x168(%rax),%rax\n  41e3f2:\t48 89 c7             \tmov    %rax,%rdi\n  41e3f5:\te8 ff a2 03 00       \tcallq  4586f9 <pj_ioqueue_unregister>\n  41e3fa:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41e3fe:\t48 c7 80 68 01 00 00 \tmovq   $0x0,0x168(%rax)\n  41e405:\t00 00 00 00 \n  41e409:\teb 43                \tjmp    41e44e <udp_destroy+0x99>\n  41e40b:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41e40f:\t48 8b 80 60 01 00 00 \tmov    0x160(%rax),%rax\n  41e416:\t48 85 c0             \ttest   %rax,%rax\n  41e419:\t74 33                \tje     41e44e <udp_destroy+0x99>\n  41e41b:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41e41f:\t48 8b 80 60 01 00 00 \tmov    0x160(%rax),%rax\n  41e426:\t48 83 f8 ff          \tcmp    $0xffffffffffffffff,%rax\n  41e42a:\t74 22                \tje     41e44e <udp_destroy+0x99>\n  41e42c:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41e430:\t48 8b 80 60 01 00 00 \tmov    0x160(%rax),%rax\n  41e437:\t48 89 c7             \tmov    %rax,%rdi\n  41e43a:\te8 32 e1 03 00       \tcallq  45c571 <pj_sock_close>\n  41e43f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41e443:\t48 c7 80 60 01 00 00 \tmovq   $0xffffffffffffffff,0x160(%rax)\n  41e44a:\tff ff ff ff \n  41e44e:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n  41e455:\teb 42                \tjmp    41e499 <udp_destroy+0xe4>\n  41e457:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n  41e45e:\t00 \n  41e45f:\t48 c7 45 d8 01 00 00 \tmovq   $0x1,-0x28(%rbp)\n  41e466:\t00 \n  41e467:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  41e46b:\t48 8b 80 e0 00 00 00 \tmov    0xe0(%rax),%rax\n  41e472:\t48 89 c7             \tmov    %rax,%rdi\n  41e475:\te8 1b 52 ff ff       \tcallq  413695 <pjsip_endpt_get_ioqueue>\n  41e47a:\t48 89 c2             \tmov    %rax,%rdx\n  41e47d:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  41e481:\t48 89 c6             \tmov    %rax,%rsi\n  41e484:\t48 89 d7             \tmov    %rdx,%rdi\n  41e487:\te8 c0 a6 03 00       \tcallq  458b4c <pj_ioqueue_poll>\n  41e48c:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n  41e48f:\t83 7d ec 00          \tcmpl   $0x0,-0x14(%rbp)\n  41e493:\t74 24                \tje     41e4b9 <udp_destroy+0x104>\n  41e495:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n  41e499:\t83 7d fc 31          \tcmpl   $0x31,-0x4(%rbp)\n  41e49d:\t7f 1b                \tjg     41e4ba <udp_destroy+0x105>\n  41e49f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41e4a3:\t8b 90 70 01 00 00    \tmov    0x170(%rax),%edx\n  41e4a9:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41e4ad:\t8b 80 80 01 00 00    \tmov    0x180(%rax),%eax\n  41e4b3:\t39 c2                \tcmp    %eax,%edx\n  41e4b5:\t7d a0                \tjge    41e457 <udp_destroy+0xa2>\n  41e4b7:\teb 01                \tjmp    41e4ba <udp_destroy+0x105>\n  41e4b9:\t90                   \tnop\n  41e4ba:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41e4be:\t48 8b 80 90 01 00 00 \tmov    0x190(%rax),%rax\n  41e4c5:\t48 85 c0             \ttest   %rax,%rax\n  41e4c8:\t74 2c                \tje     41e4f6 <udp_destroy+0x141>\n  41e4ca:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41e4ce:\t48 8b 80 90 01 00 00 \tmov    0x190(%rax),%rax\n  41e4d5:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n  41e4d9:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41e4dd:\t48 c7 80 90 01 00 00 \tmovq   $0x0,0x190(%rax)\n  41e4e4:\t00 00 00 00 \n  41e4e8:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  41e4ec:\t48 89 c7             \tmov    %rax,%rdi\n  41e4ef:\te8 ac 1d 04 00       \tcallq  4602a0 <pj_grp_lock_dec_ref>\n  41e4f4:\teb 0c                \tjmp    41e502 <udp_destroy+0x14d>\n  41e4f6:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  41e4fa:\t48 89 c7             \tmov    %rax,%rdi\n  41e4fd:\te8 e2 fd ff ff       \tcallq  41e2e4 <udp_on_destroy>\n  41e502:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  41e507:\tc9                   \tleaveq \n  41e508:\tc3                   \tretq   ", "code_s": "__int64 __fastcall udp_destroy(__int64 a1) {\n  __int64 v1;\n  __int64 <span class=\"supfact\">v3</span>[Number];\n  __int64 v4;\n  __int64 v6;\n  int i;\n  v6 = a1;\n  *(_DWORD *)(a1 + Number) = Number;\n  if (*(_QWORD *)(v6 + Number)) {\n    pj_ioqueue_unregister(*(_QWORD *)(v6 + Number));\n    *(_QWORD *)(v6 + Number) = Number L;\n  } else if (*(_QWORD *)(v6 + Number) && *(_QWORD *)(v6 + Number) != Number) {\n    pj_sock_close(*(_QWORD *)(v6 + Number));\n    *(_QWORD *)(v6 + Number) = Number;\n  }\n  for (i = Number; i <= Number; ++i) {\n    if (*(_DWORD *)(v6 + Number) < *(_DWORD *)(v6 + Number))\n      break;\n    <span class=\"supfact\">v3</span>[Number] = Number L;\n    <span class=\"supfact\">v3</span>[Number] = Number L;\n    v1 = pjsip_endpt_get_ioqueue(*(_QWORD *)(a1 + Number));\n    if (!(unsigned int)pj_ioqueue_poll(v1, <span class=\"supfact\">v3</span>))\n      break;\n  }\n  if (*(_QWORD *)(v6 + Number)) {\n    v4 = *(_QWORD *)(v6 + Number);\n    *(_QWORD *)(v6 + Number) = Number L;\n    pj_grp_lock_dec_ref(v4);\n  } else {\n    udp_on_destroy(v6);\n  }\n  return Number L;\n}", "code_t": "pj_status_t __cdecl udp_destroy(pjsip_transport_0 *transport) {\n  pj_ioqueue_t_0 *v1;\n  pj_time_val_0 <span class=\"supfact\">timeout</span>;\n  pj_grp_lock_t_0 *grp_lock;\n  udp_transport *tp;\n  int i;\n  tp = (udp_transport *)transport;\n  LODWORD(transport[Number].pool) = Number;\n  if (tp->key) {\n    pj_ioqueue_unregister(tp->key);\n    tp->key = Number L;\n  } else if (tp->sock && tp->sock != Number) {\n    pj_sock_close(tp->sock);\n    tp->sock = Number;\n  }\n  for (i = Number; i <= Number; ++i) {\n    if (tp->rdata_cnt < tp->is_closing)\n      break;\n    <span class=\"supfact\">timeout</span>.sec = Number L;\n    <span class=\"supfact\">timeout</span>.msec = Number L;\n    v1 = pjsip_endpt_get_ioqueue(transport->endpt);\n    if (!pj_ioqueue_poll(v1, &<span class=\"supfact\">timeout</span>))\n      break;\n  }\n  if (tp->grp_lock) {\n    grp_lock = tp->grp_lock;\n    tp->grp_lock = Number L;\n    pj_grp_lock_dec_ref(grp_lock);\n  } else {\n    udp_on_destroy(tp);\n  }\n  return Number;\n}", "var": [{"name": "v3", "type": "struct pj_time_val_0 { __int64 sec; __int64 msec; }", "ref_name": "timeout", "ref_type": "struct pj_time_val_0 { __int64 sec; __int64 msec; }"}], "body_in_train": false}, {"repo_owner": "ireader", "repo_name": "sdk", "path": "ireader/sdk/8cfb4007e0f9c4befce6030950fa80504c913159a90ef69ae7f988acf2219141", "path_in_repo": "ireader/sdk//source/port/aio-socket-epoll.o", "objdump": "000000000000108f <epoll_recv_v>:\n    108f:\t55                   \tpush   %rbp\n    1090:\t48 89 e5             \tmov    %rsp,%rbp\n    1093:\t53                   \tpush   %rbx\n    1094:\t48 83 ec 58          \tsub    $0x58,%rsp\n    1098:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n    109c:\t89 75 a4             \tmov    %esi,-0x5c(%rbp)\n    109f:\t89 55 a0             \tmov    %edx,-0x60(%rbp)\n    10a2:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    10a6:\tba 38 00 00 00       \tmov    $0x38,%edx\n    10ab:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    10b0:\t48 89 c7             \tmov    %rax,%rdi\n    10b3:\te8 00 00 00 00       \tcallq  10b8 <epoll_recv_v+0x29>\n    10b8:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    10bc:\t48 8b 40 50          \tmov    0x50(%rax),%rax\n    10c0:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    10c4:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    10c8:\t8b 40 58             \tmov    0x58(%rax),%eax\n    10cb:\t48 98                \tcltq   \n    10cd:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    10d1:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    10d5:\t8b 40 10             \tmov    0x10(%rax),%eax\n    10d8:\t48 8d 4d b0          \tlea    -0x50(%rbp),%rcx\n    10dc:\tba 00 00 00 00       \tmov    $0x0,%edx\n    10e1:\t48 89 ce             \tmov    %rcx,%rsi\n    10e4:\t89 c7                \tmov    %eax,%edi\n    10e6:\te8 00 00 00 00       \tcallq  10eb <epoll_recv_v+0x5c>\n    10eb:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    10ef:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    10f4:\t78 25                \tjs     111b <epoll_recv_v+0x8c>\n    10f6:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    10fa:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    10fe:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    1102:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1106:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n    110a:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    110f:\t48 89 c7             \tmov    %rax,%rdi\n    1112:\tff d1                \tcallq  *%rcx\n    1114:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1119:\teb 37                \tjmp    1152 <epoll_recv_v+0xc3>\n    111b:\t83 7d a4 00          \tcmpl   $0x0,-0x5c(%rbp)\n    111f:\t75 09                \tjne    112a <epoll_recv_v+0x9b>\n    1121:\te8 00 00 00 00       \tcallq  1126 <epoll_recv_v+0x97>\n    1126:\t8b 00                \tmov    (%rax),%eax\n    1128:\teb 28                \tjmp    1152 <epoll_recv_v+0xc3>\n    112a:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    112e:\t48 8b 58 40          \tmov    0x40(%rax),%rbx\n    1132:\te8 00 00 00 00       \tcallq  1137 <epoll_recv_v+0xa8>\n    1137:\t8b 08                \tmov    (%rax),%ecx\n    1139:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    113d:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n    1141:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1146:\t89 ce                \tmov    %ecx,%esi\n    1148:\t48 89 c7             \tmov    %rax,%rdi\n    114b:\tff d3                \tcallq  *%rbx\n    114d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1152:\t48 83 c4 58          \tadd    $0x58,%rsp\n    1156:\t5b                   \tpop    %rbx\n    1157:\t5d                   \tpop    %rbp\n    1158:\tc3                   \tretq   ", "code_s": "__int64 __fastcall epoll_recv_v(__int64 a1, int a2) {\n  __int64 result;\n  void(__fastcall * v3)(_QWORD, _QWORD, _QWORD);\n  int *v4;\n  struct msghdr <span class=\"supfact\">s</span>;\n  ssize_t v6;\n  memset(&<span class=\"supfact\">s</span>, Number, sizeof(<span class=\"supfact\">s</span>));\n  <span class=\"supfact\">s</span>.msg_iov = *(iovec **)(a1 + Number);\n  <span class=\"supfact\">s</span>.msg_iovlen = *(int *)(a1 + Number);\n  v6 = recvmsg(*(_DWORD *)(a1 + Number), &<span class=\"supfact\">s</span>, Number);\n  if (v6 < Number) {\n    if (a2) {\n      v3 = *(void(__fastcall **)(_QWORD, _QWORD, _QWORD))(a1 + Number);\n      v4 = _errno_location();\n      v3(*(_QWORD *)(a1 + Number), (unsigned int)*v4, Number L);\n      result = Number L;\n    } else {\n      result = (unsigned int)*_errno_location();\n    }\n  } else {\n    (*(void(__fastcall **)(_QWORD, _QWORD, ssize_t))(a1 + Number))(\n        *(_QWORD *)(a1 + Number), Number L, v6);\n    result = Number L;\n  }\n  return result;\n}", "code_t": "int __cdecl epoll_recv_v(epoll_context *ctx, int flags, int error) {\n  int result;\n  aio_onaccept v4;\n  int *v5;\n  msghdr <span class=\"supfact\">msg</span>;\n  ssize_t r;\n  memset(&<span class=\"supfact\">msg</span>, Number, sizeof(<span class=\"supfact\">msg</span>));\n  <span class=\"supfact\">msg</span>.msg_iov = ctx->in.recv_v.vec;\n  <span class=\"supfact\">msg</span>.msg_iovlen = ctx->in.recv_v.n;\n  r = recvmsg(ctx->socket, &<span class=\"supfact\">msg</span>, Number);\n  if (r < Number) {\n    if (flags) {\n      v4 = ctx->in.accept.proc;\n      v5 = _errno_location();\n      ((void(__fastcall *)(void *, _QWORD, _QWORD))v4)(\n          ctx->in.accept.param, (unsigned int)*v5, Number L);\n      result = Number;\n    } else {\n      result = *_errno_location();\n    }\n  } else {\n    ((void(__fastcall *)(void *, _QWORD, ssize_t))ctx->in.accept.proc)(\n        ctx->in.accept.param, Number L, r);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "s", "type": "struct msghdr { void * msg_name; socklen_t msg_namelen; PADDING (4); iovec * msg_iov; size_t msg_iovlen; void * msg_control; size_t msg_controllen; int msg_flags; PADDING (4); }", "ref_name": "msg", "ref_type": "struct msghdr { void * msg_name; socklen_t msg_namelen; PADDING (4); iovec * msg_iov; size_t msg_iovlen; void * msg_control; size_t msg_controllen; int msg_flags; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "ebe-forks", "repo_name": "org", "path": "ebe-forks/org/46d6044de27f679a8fa022ceac18a4f75f9fcf9644cf9fac3195ac05dc4e39a7", "path_in_repo": "ebe-forks/org/tests/cmd-line/obj/GNU/Linux/x86_64/Debug/tcf/framework/trace.o", "objdump": "0000000000000000 <print_trace>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t53                   \tpush   %rbx\n   5:\t48 81 ec f8 00 00 00 \tsub    $0xf8,%rsp\n   c:\t89 bd 0c ff ff ff    \tmov    %edi,-0xf4(%rbp)\n  12:\t48 89 b5 00 ff ff ff \tmov    %rsi,-0x100(%rbp)\n  19:\t48 89 95 50 ff ff ff \tmov    %rdx,-0xb0(%rbp)\n  20:\t48 89 8d 58 ff ff ff \tmov    %rcx,-0xa8(%rbp)\n  27:\t4c 89 85 60 ff ff ff \tmov    %r8,-0xa0(%rbp)\n  2e:\t4c 89 8d 68 ff ff ff \tmov    %r9,-0x98(%rbp)\n  35:\t84 c0                \ttest   %al,%al\n  37:\t74 23                \tje     5c <print_trace+0x5c>\n  39:\t0f 29 85 70 ff ff ff \tmovaps %xmm0,-0x90(%rbp)\n  40:\t0f 29 4d 80          \tmovaps %xmm1,-0x80(%rbp)\n  44:\t0f 29 55 90          \tmovaps %xmm2,-0x70(%rbp)\n  48:\t0f 29 5d a0          \tmovaps %xmm3,-0x60(%rbp)\n  4c:\t0f 29 65 b0          \tmovaps %xmm4,-0x50(%rbp)\n  50:\t0f 29 6d c0          \tmovaps %xmm5,-0x40(%rbp)\n  54:\t0f 29 75 d0          \tmovaps %xmm6,-0x30(%rbp)\n  58:\t0f 29 7d e0          \tmovaps %xmm7,-0x20(%rbp)\n  5c:\te8 00 00 00 00       \tcallq  61 <print_trace+0x61>\n  61:\t8b 00                \tmov    (%rax),%eax\n  63:\t89 85 3c ff ff ff    \tmov    %eax,-0xc4(%rbp)\n  69:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70 <print_trace+0x70>\n  70:\t48 85 c0             \ttest   %rax,%rax\n  73:\t75 0a                \tjne    7f <print_trace+0x7f>\n  75:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  7a:\te9 a8 02 00 00       \tjmpq   327 <print_trace+0x327>\n  7f:\t83 bd 0c ff ff ff 00 \tcmpl   $0x0,-0xf4(%rbp)\n  86:\t74 1a                \tje     a2 <print_trace+0xa2>\n  88:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 8e <print_trace+0x8e>\n  8e:\t23 85 0c ff ff ff    \tand    -0xf4(%rbp),%eax\n  94:\t85 c0                \ttest   %eax,%eax\n  96:\t75 0a                \tjne    a2 <print_trace+0xa2>\n  98:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  9d:\te9 85 02 00 00       \tjmpq   327 <print_trace+0x327>\n  a2:\tc7 85 20 ff ff ff 10 \tmovl   $0x10,-0xe0(%rbp)\n  a9:\t00 00 00 \n  ac:\tc7 85 24 ff ff ff 30 \tmovl   $0x30,-0xdc(%rbp)\n  b3:\t00 00 00 \n  b6:\t48 8d 45 10          \tlea    0x10(%rbp),%rax\n  ba:\t48 89 85 28 ff ff ff \tmov    %rax,-0xd8(%rbp)\n  c1:\t48 8d 85 40 ff ff ff \tlea    -0xc0(%rbp),%rax\n  c8:\t48 89 85 30 ff ff ff \tmov    %rax,-0xd0(%rbp)\n  cf:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # d5 <print_trace+0xd5>\n  d5:\t85 c0                \ttest   %eax,%eax\n  d7:\t74 20                \tje     f9 <print_trace+0xf9>\n  d9:\t48 8d 95 20 ff ff ff \tlea    -0xe0(%rbp),%rdx\n  e0:\t48 8b 85 00 ff ff ff \tmov    -0x100(%rbp),%rax\n  e7:\t48 89 c6             \tmov    %rax,%rsi\n  ea:\tbf 1e 00 00 00       \tmov    $0x1e,%edi\n  ef:\te8 00 00 00 00       \tcallq  f4 <print_trace+0xf4>\n  f4:\te9 1c 02 00 00       \tjmpq   315 <print_trace+0x315>\n  f9:\t48 8d 85 10 ff ff ff \tlea    -0xf0(%rbp),%rax\n 100:\t48 89 c6             \tmov    %rax,%rsi\n 103:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 108:\te8 00 00 00 00       \tcallq  10d <print_trace+0x10d>\n 10d:\t85 c0                \ttest   %eax,%eax\n 10f:\t74 14                \tje     125 <print_trace+0x125>\n 111:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 116:\te8 00 00 00 00       \tcallq  11b <print_trace+0x11b>\n 11b:\tbf 01 00 00 00       \tmov    $0x1,%edi\n 120:\te8 00 00 00 00       \tcallq  125 <print_trace+0x125>\n 125:\te8 00 00 00 00       \tcallq  12a <print_trace+0x12a>\n 12a:\t48 89 c3             \tmov    %rax,%rbx\n 12d:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 132:\te8 00 00 00 00       \tcallq  137 <print_trace+0x137>\n 137:\t89 03                \tmov    %eax,(%rbx)\n 139:\t8b 03                \tmov    (%rbx),%eax\n 13b:\t85 c0                \ttest   %eax,%eax\n 13d:\t74 14                \tje     153 <print_trace+0x153>\n 13f:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 144:\te8 00 00 00 00       \tcallq  149 <print_trace+0x149>\n 149:\tbf 01 00 00 00       \tmov    $0x1,%edi\n 14e:\te8 00 00 00 00       \tcallq  153 <print_trace+0x153>\n 153:\t48 8b 8d 18 ff ff ff \tmov    -0xe8(%rbp),%rcx\n 15a:\t48 ba db 34 b6 d7 82 \tmovabs $0x431bde82d7b634db,%rdx\n 161:\tde 1b 43 \n 164:\t48 89 c8             \tmov    %rcx,%rax\n 167:\t48 f7 ea             \timul   %rdx\n 16a:\t48 c1 fa 12          \tsar    $0x12,%rdx\n 16e:\t48 89 c8             \tmov    %rcx,%rax\n 171:\t48 c1 f8 3f          \tsar    $0x3f,%rax\n 175:\t48 29 c2             \tsub    %rax,%rdx\n 178:\t48 89 d0             \tmov    %rdx,%rax\n 17b:\t41 89 c0             \tmov    %eax,%r8d\n 17e:\t48 8b 8d 10 ff ff ff \tmov    -0xf0(%rbp),%rcx\n 185:\t48 ba 89 88 88 88 88 \tmovabs $0x8888888888888889,%rdx\n 18c:\t88 88 88 \n 18f:\t48 89 c8             \tmov    %rcx,%rax\n 192:\t48 f7 ea             \timul   %rdx\n 195:\t48 8d 04 0a          \tlea    (%rdx,%rcx,1),%rax\n 199:\t48 c1 f8 05          \tsar    $0x5,%rax\n 19d:\t48 89 c2             \tmov    %rax,%rdx\n 1a0:\t48 89 c8             \tmov    %rcx,%rax\n 1a3:\t48 c1 f8 3f          \tsar    $0x3f,%rax\n 1a7:\t48 29 c2             \tsub    %rax,%rdx\n 1aa:\t48 89 d0             \tmov    %rdx,%rax\n 1ad:\t48 c1 e0 04          \tshl    $0x4,%rax\n 1b1:\t48 29 d0             \tsub    %rdx,%rax\n 1b4:\t48 c1 e0 02          \tshl    $0x2,%rax\n 1b8:\t48 29 c1             \tsub    %rax,%rcx\n 1bb:\t48 89 ca             \tmov    %rcx,%rdx\n 1be:\t89 d7                \tmov    %edx,%edi\n 1c0:\t48 8b 8d 10 ff ff ff \tmov    -0xf0(%rbp),%rcx\n 1c7:\t48 ba 89 88 88 88 88 \tmovabs $0x8888888888888889,%rdx\n 1ce:\t88 88 88 \n 1d1:\t48 89 c8             \tmov    %rcx,%rax\n 1d4:\t48 f7 ea             \timul   %rdx\n 1d7:\t48 8d 04 0a          \tlea    (%rdx,%rcx,1),%rax\n 1db:\t48 c1 f8 05          \tsar    $0x5,%rax\n 1df:\t48 89 c2             \tmov    %rax,%rdx\n 1e2:\t48 89 c8             \tmov    %rcx,%rax\n 1e5:\t48 c1 f8 3f          \tsar    $0x3f,%rax\n 1e9:\t48 89 d1             \tmov    %rdx,%rcx\n 1ec:\t48 29 c1             \tsub    %rax,%rcx\n 1ef:\t48 ba 89 88 88 88 88 \tmovabs $0x8888888888888889,%rdx\n 1f6:\t88 88 88 \n 1f9:\t48 89 c8             \tmov    %rcx,%rax\n 1fc:\t48 f7 ea             \timul   %rdx\n 1ff:\t48 8d 04 0a          \tlea    (%rdx,%rcx,1),%rax\n 203:\t48 c1 f8 05          \tsar    $0x5,%rax\n 207:\t48 89 c2             \tmov    %rax,%rdx\n 20a:\t48 89 c8             \tmov    %rcx,%rax\n 20d:\t48 c1 f8 3f          \tsar    $0x3f,%rax\n 211:\t48 29 c2             \tsub    %rax,%rdx\n 214:\t48 89 d0             \tmov    %rdx,%rax\n 217:\t48 c1 e0 04          \tshl    $0x4,%rax\n 21b:\t48 29 d0             \tsub    %rdx,%rax\n 21e:\t48 c1 e0 02          \tshl    $0x2,%rax\n 222:\t48 29 c1             \tsub    %rax,%rcx\n 225:\t48 89 ca             \tmov    %rcx,%rdx\n 228:\t89 d6                \tmov    %edx,%esi\n 22a:\t48 8b 8d 10 ff ff ff \tmov    -0xf0(%rbp),%rcx\n 231:\t48 ba 05 7c f3 6a e2 \tmovabs $0x48d159e26af37c05,%rdx\n 238:\t59 d1 48 \n 23b:\t48 89 c8             \tmov    %rcx,%rax\n 23e:\t48 f7 ea             \timul   %rdx\n 241:\t48 c1 fa 0a          \tsar    $0xa,%rdx\n 245:\t48 89 c8             \tmov    %rcx,%rax\n 248:\t48 c1 f8 3f          \tsar    $0x3f,%rax\n 24c:\t48 89 d1             \tmov    %rdx,%rcx\n 24f:\t48 29 c1             \tsub    %rax,%rcx\n 252:\t48 ba ab aa aa aa aa \tmovabs $0x2aaaaaaaaaaaaaab,%rdx\n 259:\taa aa 2a \n 25c:\t48 89 c8             \tmov    %rcx,%rax\n 25f:\t48 f7 ea             \timul   %rdx\n 262:\t48 c1 fa 02          \tsar    $0x2,%rdx\n 266:\t48 89 c8             \tmov    %rcx,%rax\n 269:\t48 c1 f8 3f          \tsar    $0x3f,%rax\n 26d:\t48 29 c2             \tsub    %rax,%rdx\n 270:\t48 89 d0             \tmov    %rdx,%rax\n 273:\t48 01 c0             \tadd    %rax,%rax\n 276:\t48 01 d0             \tadd    %rdx,%rax\n 279:\t48 c1 e0 03          \tshl    $0x3,%rax\n 27d:\t48 29 c1             \tsub    %rax,%rcx\n 280:\t48 89 ca             \tmov    %rcx,%rdx\n 283:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 28a <print_trace+0x28a>\n 28a:\t45 89 c1             \tmov    %r8d,%r9d\n 28d:\t41 89 f8             \tmov    %edi,%r8d\n 290:\t89 f1                \tmov    %esi,%ecx\n 292:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 297:\t48 89 c7             \tmov    %rax,%rdi\n 29a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 29f:\te8 00 00 00 00       \tcallq  2a4 <print_trace+0x2a4>\n 2a4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2ab <print_trace+0x2ab>\n 2ab:\t48 8d 95 20 ff ff ff \tlea    -0xe0(%rbp),%rdx\n 2b2:\t48 8b 8d 00 ff ff ff \tmov    -0x100(%rbp),%rcx\n 2b9:\t48 89 ce             \tmov    %rcx,%rsi\n 2bc:\t48 89 c7             \tmov    %rax,%rdi\n 2bf:\te8 00 00 00 00       \tcallq  2c4 <print_trace+0x2c4>\n 2c4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2cb <print_trace+0x2cb>\n 2cb:\t48 89 c6             \tmov    %rax,%rsi\n 2ce:\tbf 0a 00 00 00       \tmov    $0xa,%edi\n 2d3:\te8 00 00 00 00       \tcallq  2d8 <print_trace+0x2d8>\n 2d8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2df <print_trace+0x2df>\n 2df:\t48 89 c7             \tmov    %rax,%rdi\n 2e2:\te8 00 00 00 00       \tcallq  2e7 <print_trace+0x2e7>\n 2e7:\te8 00 00 00 00       \tcallq  2ec <print_trace+0x2ec>\n 2ec:\t48 89 c3             \tmov    %rax,%rbx\n 2ef:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 2f4:\te8 00 00 00 00       \tcallq  2f9 <print_trace+0x2f9>\n 2f9:\t89 03                \tmov    %eax,(%rbx)\n 2fb:\t8b 03                \tmov    (%rbx),%eax\n 2fd:\t85 c0                \ttest   %eax,%eax\n 2ff:\t74 14                \tje     315 <print_trace+0x315>\n 301:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 306:\te8 00 00 00 00       \tcallq  30b <print_trace+0x30b>\n 30b:\tbf 01 00 00 00       \tmov    $0x1,%edi\n 310:\te8 00 00 00 00       \tcallq  315 <print_trace+0x315>\n 315:\te8 00 00 00 00       \tcallq  31a <print_trace+0x31a>\n 31a:\t8b 95 3c ff ff ff    \tmov    -0xc4(%rbp),%edx\n 320:\t89 10                \tmov    %edx,(%rax)\n 322:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 327:\t48 81 c4 f8 00 00 00 \tadd    $0xf8,%rsp\n 32e:\t5b                   \tpop    %rbx\n 32f:\t5d                   \tpop    %rbp\n 330:\tc3                   \tretq   ", "code_s": "__int64 print_trace(int a1, const char *a2, __int64 a3, __int64 a4, __int64 a5,\n                    __int64 a6, ...) {\n  int *v7;\n  int *v8;\n  struct timespec <span class=\"supfact\">tp</span>;\n  gcc_va_list ap;\n  int v11;\n  __int64 v12;\n  __int64 v13;\n  __int64 v14;\n  __int64 v15;\n  v12 = a3;\n  v13 = a4;\n  v14 = a5;\n  v15 = a6;\n  v11 = *_errno_location();\n  if (!log_file)\n    return Number L;\n  if (a1 && (a1 & log_mode) == Number)\n    return Number L;\n  ap[Number].gp_offset = Number;\n  va_start(ap, a6);\n  if (use_syslog) {\n    vsyslog(Number, a2, ap);\n  } else {\n    if (clock_gettime(Number, &<span class=\"supfact\">tp</span>)) {\n      perror(String);\n      exit(Number);\n    }\n    v7 = _errno_location();\n    *v7 = pthread_mutex_lock(&mutex);\n    if (*v7) {\n      perror(String);\n      exit(Number);\n    }\n    fprintf(log_file, String, <span class=\"supfact\">tp</span>.tv_sec / Number % Number,\n            (unsigned int)((int)(<span class=\"supfact\">tp</span>.tv_sec / Number) % Number),\n            (unsigned int)(SLODWORD(<span class=\"supfact\">tp</span>.tv_sec) % Number),\n            (unsigned int)(SLODWORD(<span class=\"supfact\">tp</span>.tv_nsec) / Number));\n    vfprintf(log_file, a2, ap);\n    fputc(Number, log_file);\n    fflush(log_file);\n    v8 = _errno_location();\n    *v8 = pthread_mutex_unlock(&mutex);\n    if (*v8) {\n      perror(String);\n      exit(Number);\n    }\n  }\n  *_errno_location() = v11;\n  return Number L;\n}", "code_t": "int print_trace(int mode, const char *fmt, ...) {\n  __int64 v2;\n  __int64 v3;\n  __int64 v4;\n  __int64 v5;\n  __int64 v7;\n  __int64 v8;\n  __int64 v9;\n  __int64 v10;\n  int *v11;\n  int *v12;\n  timespec <span class=\"supfact\">timenow</span>;\n  va_list ap;\n  int error;\n  __int64 v16;\n  __int64 v17;\n  __int64 v18;\n  __int64 v19;\n  va_start(ap, fmt);\n  v2 = va_arg(ap, _QWORD);\n  v3 = va_arg(ap, _QWORD);\n  v4 = va_arg(ap, _QWORD);\n  v5 = va_arg(ap, _QWORD);\n  va_end(ap);\n  v16 = v2;\n  v17 = v3;\n  v18 = v4;\n  v19 = v5;\n  error = *_errno_location();\n  if (!log_file)\n    return Number;\n  if (mode && (mode & log_mode) == Number)\n    return Number;\n  ap[Number].gp_offset = Number;\n  va_start(ap, fmt);\n  v7 = va_arg(ap, _QWORD);\n  v8 = va_arg(ap, _QWORD);\n  v9 = va_arg(ap, _QWORD);\n  v10 = va_arg(ap, _QWORD);\n  if (use_syslog) {\n    vsyslog(Number, fmt, ap);\n  } else {\n    if (clock_gettime(Number, &<span class=\"supfact\">timenow</span>)) {\n      perror(String);\n      exit(Number);\n    }\n    v11 = _errno_location();\n    *v11 = pthread_mutex_lock(&mutex);\n    if (*v11) {\n      perror(String);\n      exit(Number);\n    }\n    fprintf(\n        log_file, String, <span class=\"supfact\">timenow</span>.tv_sec / Number % Number,\n        (unsigned int)((int)(<span class=\"supfact\">timenow</span>.tv_sec / Number) % Number),\n        (unsigned int)(SLODWORD(<span class=\"supfact\">timenow</span>.tv_sec) % Number),\n        (unsigned int)(SLODWORD(<span class=\"supfact\">timenow</span>.tv_nsec) / Number));\n    vfprintf(log_file, fmt, ap);\n    fputc(Number, log_file);\n    fflush(log_file);\n    v12 = _errno_location();\n    *v12 = pthread_mutex_unlock(&mutex);\n    if (*v12) {\n      perror(String);\n      exit(Number);\n    }\n  }\n  *_errno_location() = error;\n  return Number;\n}", "var": [{"name": "tp", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "timenow", "ref_type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }"}], "body_in_train": false}, {"repo_owner": "mDibyo", "repo_name": "py-dlib", "path": "mDibyo/py-dlib/56f6e076c71f8a305193935cefe2644ae75ac6ddd049cf08be7bbfa5a954a64b", "path_in_repo": "mDibyo/py-dlib/dlib/test/type_safe_union.o", "objdump": "0000000000000000 <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t41 54                \tpush   %r12\n   6:\t53                   \tpush   %rbx\n   7:\t48 83 ec 50          \tsub    $0x50,%rsp\n   b:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n   f:\t48 89 75 a0          \tmov    %rsi,-0x60(%rbp)\n  13:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n  17:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n  1b:\t48 89 d6             \tmov    %rdx,%rsi\n  1e:\t48 89 c7             \tmov    %rax,%rdi\n  21:\te8 00 00 00 00       \tcallq  26 <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0x26>\n  26:\t48 8b 55 a0          \tmov    -0x60(%rbp),%rdx\n  2a:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n  2e:\t48 89 d6             \tmov    %rdx,%rsi\n  31:\t48 89 c7             \tmov    %rax,%rdi\n  34:\te8 00 00 00 00       \tcallq  39 <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0x39>\n  39:\te9 a4 00 00 00       \tjmpq   e2 <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0xe2>\n  3e:\t48 83 fa 01          \tcmp    $0x1,%rdx\n  42:\t74 08                \tje     4c <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0x4c>\n  44:\t48 89 c7             \tmov    %rax,%rdi\n  47:\te8 00 00 00 00       \tcallq  4c <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0x4c>\n  4c:\t48 89 c7             \tmov    %rax,%rdi\n  4f:\te8 00 00 00 00       \tcallq  54 <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0x54>\n  54:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  58:\tbf 30 00 00 00       \tmov    $0x30,%edi\n  5d:\te8 00 00 00 00       \tcallq  62 <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0x62>\n  62:\t48 89 c3             \tmov    %rax,%rbx\n  65:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  69:\t48 8d 48 08          \tlea    0x8(%rax),%rcx\n  6d:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  71:\tba 00 00 00 00       \tmov    $0x0,%edx\n  76:\t48 89 ce             \tmov    %rcx,%rsi\n  79:\t48 89 c7             \tmov    %rax,%rdi\n  7c:\te8 00 00 00 00       \tcallq  81 <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0x81>\n  81:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  85:\t48 89 c6             \tmov    %rax,%rsi\n  88:\t48 89 df             \tmov    %rbx,%rdi\n  8b:\te8 00 00 00 00       \tcallq  90 <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0x90>\n  90:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  94:\t48 89 c7             \tmov    %rax,%rdi\n  97:\te8 00 00 00 00       \tcallq  9c <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0x9c>\n  9c:\tba 00 00 00 00       \tmov    $0x0,%edx\n  a1:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  a6:\t48 89 df             \tmov    %rbx,%rdi\n  a9:\te8 00 00 00 00       \tcallq  ae <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0xae>\n  ae:\t49 89 c4             \tmov    %rax,%r12\n  b1:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  b5:\t48 89 c7             \tmov    %rax,%rdi\n  b8:\te8 00 00 00 00       \tcallq  bd <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0xbd>\n  bd:\teb 03                \tjmp    c2 <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0xc2>\n  bf:\t49 89 c4             \tmov    %rax,%r12\n  c2:\t48 89 df             \tmov    %rbx,%rdi\n  c5:\te8 00 00 00 00       \tcallq  ca <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0xca>\n  ca:\t4c 89 e3             \tmov    %r12,%rbx\n  cd:\teb 03                \tjmp    d2 <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0xd2>\n  cf:\t48 89 c3             \tmov    %rax,%rbx\n  d2:\te8 00 00 00 00       \tcallq  d7 <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0xd7>\n  d7:\t48 89 d8             \tmov    %rbx,%rax\n  da:\t48 89 c7             \tmov    %rax,%rdi\n  dd:\te8 00 00 00 00       \tcallq  e2 <_ZN4dlib24serialize_floating_pointIfEEvRKT_RSo+0xe2>\n  e2:\t48 83 c4 50          \tadd    $0x50,%rsp\n  e6:\t5b                   \tpop    %rbx\n  e7:\t41 5c                \tpop    %r12\n  e9:\t5d                   \tpop    %rbp\n  ea:\tc3                   \tretq   ", "code_s": "__int64 __fastcall dlib\nserialize_floating_point<float>(const float *a1, const dlib float_details *a2) {\n  char <span class=\"supfact\">v3</span>[Number];\n  dlib float_details float_details((dlib float_details *)<span class=\"supfact\">v3</span>,\n                                   a1);\n  return dlib serialize((dlib *)<span class=\"supfact\">v3</span>, a2, a2);\n}", "code_t": "void __cdecl dlib serialize_floating_point<float>(const float *item,\n                                                  std ostream *out) {\n  dlib float_details <span class=\"supfact\">temp</span>;\n  dlib float_details float_details(&<span class=\"supfact\">temp</span>, item);\n  dlib serialize(&<span class=\"supfact\">temp</span>, out);\n}", "var": [{"name": "v3", "type": "struct dlib::float_details { dlib::int64 mantissa; dlib::int16 exponent; PADDING (6); }", "ref_name": "temp", "ref_type": "struct dlib::float_details { dlib::int64 mantissa; dlib::int16 exponent; PADDING (6); }"}], "body_in_train": false}, {"repo_owner": "janakj", "repo_name": "git-ccn", "path": "janakj/git-ccn/9f1262cf3c8141d143c8a540bbd501d26767ae75659855dd63df56e1a9c9efc9", "path_in_repo": "janakj/git-ccn//merge-recursive.o", "objdump": "000000000000234f <conflict_rename_delete>:\n    234f:\t55                   \tpush   %rbp\n    2350:\t48 89 e5             \tmov    %rsp,%rbp\n    2353:\t48 81 ec c0 00 00 00 \tsub    $0xc0,%rsp\n    235a:\t48 89 bd 58 ff ff ff \tmov    %rdi,-0xa8(%rbp)\n    2361:\t48 89 b5 50 ff ff ff \tmov    %rsi,-0xb0(%rbp)\n    2368:\t48 89 95 48 ff ff ff \tmov    %rdx,-0xb8(%rbp)\n    236f:\t48 89 8d 40 ff ff ff \tmov    %rcx,-0xc0(%rbp)\n    2376:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    237d:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2381:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    2385:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    2389:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n    2390:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    2397:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    239b:\t48 8b 48 18          \tmov    0x18(%rax),%rcx\n    239f:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    23a6:\t48 8b 00             \tmov    (%rax),%rax\n    23a9:\t48 8b 50 18          \tmov    0x18(%rax),%rdx\n    23ad:\t48 8b b5 48 ff ff ff \tmov    -0xb8(%rbp),%rsi\n    23b4:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    23bb:\t48 83 ec 08          \tsub    $0x8,%rsp\n    23bf:\tff b5 40 ff ff ff    \tpushq  -0xc0(%rbp)\n    23c5:\t49 89 f1             \tmov    %rsi,%r9\n    23c8:\t49 89 c8             \tmov    %rcx,%r8\n    23cb:\t48 89 d1             \tmov    %rdx,%rcx\n    23ce:\tba 00 00 00 00       \tmov    $0x0,%edx\n    23d3:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    23d8:\t48 89 c7             \tmov    %rax,%rdi\n    23db:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    23e0:\te8 71 e0 ff ff       \tcallq  456 <output>\n    23e5:\t48 83 c4 10          \tadd    $0x10,%rsp\n    23e9:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    23f0:\t8b 40 48             \tmov    0x48(%rax),%eax\n    23f3:\t85 c0                \ttest   %eax,%eax\n    23f5:\t75 66                \tjne    245d <conflict_rename_delete+0x10e>\n    23f7:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    23fe:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2402:\t48 39 85 48 ff ff ff \tcmp    %rax,-0xb8(%rbp)\n    2409:\t74 0d                \tje     2418 <conflict_rename_delete+0xc9>\n    240b:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    2412:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    2416:\teb 05                \tjmp    241d <conflict_rename_delete+0xce>\n    2418:\tba 00 00 00 00       \tmov    $0x0,%edx\n    241d:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    2424:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2428:\t48 39 85 48 ff ff ff \tcmp    %rax,-0xb8(%rbp)\n    242f:\t75 0d                \tjne    243e <conflict_rename_delete+0xef>\n    2431:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    2438:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    243c:\teb 05                \tjmp    2443 <conflict_rename_delete+0xf4>\n    243e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2443:\t48 8b 7d f8          \tmov    -0x8(%rbp),%rdi\n    2447:\t41 b8 01 00 00 00    \tmov    $0x1,%r8d\n    244d:\t48 89 d1             \tmov    %rdx,%rcx\n    2450:\t48 89 c2             \tmov    %rax,%rdx\n    2453:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2458:\te8 e4 ef ff ff       \tcallq  1441 <update_stages>\n    245d:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n    2464:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2468:\t48 89 d6             \tmov    %rdx,%rsi\n    246b:\t48 89 c7             \tmov    %rax,%rdi\n    246e:\te8 00 00 00 00       \tcallq  2473 <conflict_rename_delete+0x124>\n    2473:\t85 c0                \ttest   %eax,%eax\n    2475:\t75 3a                \tjne    24b1 <conflict_rename_delete+0x162>\n    2477:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    247d:\t25 00 f0 00 00       \tand    $0xf000,%eax\n    2482:\t3d 00 40 00 00       \tcmp    $0x4000,%eax\n    2487:\t75 28                \tjne    24b1 <conflict_rename_delete+0x162>\n    2489:\t48 8b 95 48 ff ff ff \tmov    -0xb8(%rbp),%rdx\n    2490:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    2494:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    249b:\t48 89 ce             \tmov    %rcx,%rsi\n    249e:\t48 89 c7             \tmov    %rax,%rdi\n    24a1:\te8 58 f1 ff ff       \tcallq  15fe <unique_path>\n    24a6:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    24aa:\tc7 45 f4 01 00 00 00 \tmovl   $0x1,-0xc(%rbp)\n    24b1:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    24b8:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    24bc:\t0f b7 40 4c          \tmovzwl 0x4c(%rax),%eax\n    24c0:\t0f b7 d0             \tmovzwl %ax,%edx\n    24c3:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    24ca:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    24ce:\t48 89 c6             \tmov    %rax,%rsi\n    24d1:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    24d5:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    24dc:\t49 89 c8             \tmov    %rcx,%r8\n    24df:\t89 d1                \tmov    %edx,%ecx\n    24e1:\t48 89 f2             \tmov    %rsi,%rdx\n    24e4:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    24e9:\t48 89 c7             \tmov    %rax,%rdi\n    24ec:\te8 8a f7 ff ff       \tcallq  1c7b <update_file>\n    24f1:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    24f5:\t74 0c                \tje     2503 <conflict_rename_delete+0x1b4>\n    24f7:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    24fb:\t48 89 c7             \tmov    %rax,%rdi\n    24fe:\te8 00 00 00 00       \tcallq  2503 <conflict_rename_delete+0x1b4>\n    2503:\t90                   \tnop\n    2504:\tc9                   \tleaveq \n    2505:\tc3                   \tretq   ", "code_s": "void __fastcall conflict_rename_delete(__int64 a1, void **a2, const char *a3,\n                                       __int64 a4) {\n  unsigned __int16 *v4;\n  unsigned __int16 *v5;\n  struct stat64 <span class=\"supfact\">buf</span>;\n  int v8;\n  char *file;\n  file = (char *)*((_QWORD *)a2[Number] + Number);\n  v8 = Number;\n  output(a1, Number, String, *((_QWORD *)*a2 + Number),\n         *((_QWORD *)a2[Number] + Number), (__int64)a3, a4);\n  if (!*(_DWORD *)(a1 + Number)) {\n    if (a3 == *(const char **)(a1 + Number))\n      v4 = Number L;\n    else\n      v4 = (unsigned __int16 *)a2[Number];\n    if (a3 == *(const char **)(a1 + Number))\n      v5 = (unsigned __int16 *)a2[Number];\n    else\n      v5 = Number L;\n    update_stages((__int64)file, Number L, v5, v4, Number);\n  }\n  if (!lstat64(file, &<span class=\"supfact\">buf</span>) &&\n      (<span class=\"supfact\">buf</span>.st_mode & Number) == Number) {\n    file = unique_path(a1, file, a3);\n    v8 = Number;\n  }\n  update_file(a1, Number, a2[Number],\n              *((unsigned __int16 *)a2[Number] + Number), file);\n  if (v8)\n    free(file);\n}", "code_t": "void __cdecl conflict_rename_delete(merge_options *o, diff_filepair *pair,\n                                    const char *rename_branch,\n                                    const char *other_branch) {\n  diff_filespec *v4;\n  diff_filespec *v5;\n  stat <span class=\"supfact\">st</span>;\n  int df_conflict;\n  char *dest_name;\n  dest_name = pair->two->path;\n  df_conflict = Number;\n  output(o, Number, String, pair->one->path, pair->two->path, rename_branch,\n         other_branch);\n  if (!o->call_depth) {\n    if (rename_branch == o->branch1)\n      v4 = Number L;\n    else\n      v4 = pair->two;\n    if (rename_branch == o->branch1)\n      v5 = pair->two;\n    else\n      v5 = Number L;\n    update_stages(dest_name, Number L, v5, v4, Number);\n  }\n  if (!lstat64(dest_name, (struct stat64 *)&<span class=\"supfact\">st</span>) &&\n      (<span class=\"supfact\">st</span>.st_mode & Number) == Number) {\n    dest_name = unique_path(o, dest_name, rename_branch);\n    df_conflict = Number;\n  }\n  update_file(o, Number, pair->two->sha1, pair->two->mode, dest_name);\n  if (df_conflict)\n    free(dest_name);\n}", "var": [{"name": "buf", "type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }", "ref_name": "st", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }"}], "body_in_train": false}, {"repo_owner": "ttsiodras", "repo_name": "asn1scc", "path": "ttsiodras/asn1scc/2beb20dcb6d06d546c7b73861c56821da9f0856d96395c33931e97359f0f32c4", "path_in_repo": "ttsiodras/asn1scc/mantis/0000411/p2/a_c_out/mainprogram", "objdump": "000000000040a052 <BerDecodeReal>:\n  40a052:\t55                   \tpush   %rbp\n  40a053:\t48 89 e5             \tmov    %rsp,%rbp\n  40a056:\t48 83 ec 40          \tsub    $0x40,%rsp\n  40a05a:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n  40a05e:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n  40a062:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n  40a066:\t48 89 4d c0          \tmov    %rcx,-0x40(%rbp)\n  40a06a:\t48 8b 05 4f 4e 01 00 \tmov    0x14e4f(%rip),%rax        # 41eec0 <__gcov0.BerDecodeReal>\n  40a071:\t48 83 c0 01          \tadd    $0x1,%rax\n  40a075:\t48 89 05 44 4e 01 00 \tmov    %rax,0x14e44(%rip)        # 41eec0 <__gcov0.BerDecodeReal>\n  40a07c:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n  40a080:\t48 8b 4d d0          \tmov    -0x30(%rbp),%rcx\n  40a084:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  40a088:\t48 89 ce             \tmov    %rcx,%rsi\n  40a08b:\t48 89 c7             \tmov    %rax,%rdi\n  40a08e:\te8 df f0 ff ff       \tcallq  409172 <BerDecodeTag>\n  40a093:\t89 c2                \tmov    %eax,%edx\n  40a095:\t48 8b 05 2c 4e 01 00 \tmov    0x14e2c(%rip),%rax        # 41eec8 <__gcov0.BerDecodeReal+0x8>\n  40a09c:\t48 83 c0 01          \tadd    $0x1,%rax\n  40a0a0:\t48 89 05 21 4e 01 00 \tmov    %rax,0x14e21(%rip)        # 41eec8 <__gcov0.BerDecodeReal+0x8>\n  40a0a7:\t89 d0                \tmov    %edx,%eax\n  40a0a9:\t83 f0 01             \txor    $0x1,%eax\n  40a0ac:\t84 c0                \ttest   %al,%al\n  40a0ae:\t74 1c                \tje     40a0cc <BerDecodeReal+0x7a>\n  40a0b0:\tba 00 00 00 00       \tmov    $0x0,%edx\n  40a0b5:\t48 8b 05 14 4e 01 00 \tmov    0x14e14(%rip),%rax        # 41eed0 <__gcov0.BerDecodeReal+0x10>\n  40a0bc:\t48 83 c0 01          \tadd    $0x1,%rax\n  40a0c0:\t48 89 05 09 4e 01 00 \tmov    %rax,0x14e09(%rip)        # 41eed0 <__gcov0.BerDecodeReal+0x10>\n  40a0c7:\te9 cb 00 00 00       \tjmpq   40a197 <BerDecodeReal+0x145>\n  40a0cc:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  40a0d0:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n  40a0d4:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  40a0d8:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  40a0dc:\t48 29 c2             \tsub    %rax,%rdx\n  40a0df:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  40a0e3:\t48 8b 08             \tmov    (%rax),%rcx\n  40a0e6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  40a0ea:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  40a0ee:\t48 01 c1             \tadd    %rax,%rcx\n  40a0f1:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  40a0f5:\t48 89 ce             \tmov    %rcx,%rsi\n  40a0f8:\t48 89 c7             \tmov    %rax,%rdi\n  40a0fb:\te8 7c c0 ff ff       \tcallq  40617c <BitStream_AttachBuffer>\n  40a100:\t48 8b 05 d1 4d 01 00 \tmov    0x14dd1(%rip),%rax        # 41eed8 <__gcov0.BerDecodeReal+0x18>\n  40a107:\t48 83 c0 01          \tadd    $0x1,%rax\n  40a10b:\t48 89 05 c6 4d 01 00 \tmov    %rax,0x14dc6(%rip)        # 41eed8 <__gcov0.BerDecodeReal+0x18>\n  40a112:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n  40a116:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  40a11a:\t48 89 d6             \tmov    %rdx,%rsi\n  40a11d:\t48 89 c7             \tmov    %rax,%rdi\n  40a120:\te8 df e5 ff ff       \tcallq  408704 <BitStream_DecodeReal>\n  40a125:\t83 f0 01             \txor    $0x1,%eax\n  40a128:\t84 c0                \ttest   %al,%al\n  40a12a:\t74 23                \tje     40a14f <BerDecodeReal+0xfd>\n  40a12c:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  40a130:\tc7 00 65 00 00 00    \tmovl   $0x65,(%rax)\n  40a136:\tba 00 00 00 00       \tmov    $0x0,%edx\n  40a13b:\t48 8b 05 a6 4d 01 00 \tmov    0x14da6(%rip),%rax        # 41eee8 <__gcov0.BerDecodeReal+0x28>\n  40a142:\t48 83 c0 01          \tadd    $0x1,%rax\n  40a146:\t48 89 05 9b 4d 01 00 \tmov    %rax,0x14d9b(%rip)        # 41eee8 <__gcov0.BerDecodeReal+0x28>\n  40a14d:\teb 48                \tjmp    40a197 <BerDecodeReal+0x145>\n  40a14f:\t48 8b 05 8a 4d 01 00 \tmov    0x14d8a(%rip),%rax        # 41eee0 <__gcov0.BerDecodeReal+0x20>\n  40a156:\t48 83 c0 01          \tadd    $0x1,%rax\n  40a15a:\t48 89 05 7f 4d 01 00 \tmov    %rax,0x14d7f(%rip)        # 41eee0 <__gcov0.BerDecodeReal+0x20>\n  40a161:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  40a165:\t48 89 c7             \tmov    %rax,%rdi\n  40a168:\te8 62 c0 ff ff       \tcallq  4061cf <BitStream_GetLength>\n  40a16d:\t48 8b 15 7c 4d 01 00 \tmov    0x14d7c(%rip),%rdx        # 41eef0 <__gcov0.BerDecodeReal+0x30>\n  40a174:\t48 83 c2 01          \tadd    $0x1,%rdx\n  40a178:\t48 89 15 71 4d 01 00 \tmov    %rdx,0x14d71(%rip)        # 41eef0 <__gcov0.BerDecodeReal+0x30>\n  40a17f:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n  40a183:\t48 8b 52 10          \tmov    0x10(%rdx),%rdx\n  40a187:\t48 01 c2             \tadd    %rax,%rdx\n  40a18a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  40a18e:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n  40a192:\tba 01 00 00 00       \tmov    $0x1,%edx\n  40a197:\t89 d0                \tmov    %edx,%eax\n  40a199:\tc9                   \tleaveq \n  40a19a:\tc3                   \tretq   ", "code_s": "__int64 __fastcall BerDecodeReal(_QWORD *a1, unsigned __int64 a2, _QWORD *a3,\n                                 _DWORD *a4) {\n  char v4;\n  unsigned int v5;\n  __int64 v6;\n  __int64 <span class=\"supfact\">v10</span>[Number];\n  ++_gcov0_BerDecodeReal;\n  v4 = BerDecodeTag(a1, a2, a4);\n  ++qword_41EEC8;\n  if (v4 != Number) {\n    v5 = Number;\n    ++qword_41EED0;\n  } else {\n    BitStream_AttachBuffer((__int64)<span class=\"supfact\">v10</span>, a1[Number] + *a1,\n                           a1[Number] - a1[Number]);\n    ++qword_41EED8;\n    if ((unsigned __int8)BitStream_DecodeReal(<span class=\"supfact\">v10</span>, a3) !=\n        Number) {\n      *a4 = Number;\n      v5 = Number;\n      ++qword_41EEE8;\n    } else {\n      ++qword_41EEE0;\n      v6 = BitStream_GetLength((__int64)<span class=\"supfact\">v10</span>);\n      ++qword_41EEF0;\n      a1[Number] += v6;\n      v5 = Number;\n    }\n  }\n  return v5;\n}", "code_t": "flag __cdecl BerDecodeReal(ByteStream *pByteStrm, BerTag tag, double *value,\n                           int *pErrCode) {\n  flag v4;\n  flag v5;\n  asn1SccSint v6;\n  BitStream <span class=\"supfact\">tmp</span>;\n  ++_gcov0_BerDecodeReal;\n  v4 = BerDecodeTag(pByteStrm, tag, pErrCode);\n  ++qword_41EEC8;\n  if (!v4) {\n    v5 = Number;\n    ++qword_41EED0;\n  } else {\n    BitStream_AttachBuffer(&<span class=\"supfact\">tmp</span>,\n                           &pByteStrm->buf[pByteStrm->currentByte],\n                           pByteStrm->count - pByteStrm->currentByte);\n    ++qword_41EED8;\n    if (!BitStream_DecodeReal(&<span class=\"supfact\">tmp</span>, value)) {\n      *pErrCode = Number;\n      v5 = Number;\n      ++qword_41EEE8;\n    } else {\n      ++qword_41EEE0;\n      v6 = BitStream_GetLength(&<span class=\"supfact\">tmp</span>);\n      ++qword_41EEF0;\n      pByteStrm->currentByte += v6;\n      v5 = Number;\n    }\n  }\n  return v5;\n}", "var": [{"name": "v10", "type": "struct BitStream { byte * buf; __int64 count; __int64 currentByte; int currentBit; PADDING (4); }", "ref_name": "tmp", "ref_type": "struct BitStream { byte * buf; __int64 count; __int64 currentByte; int currentBit; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "janakj", "repo_name": "git-ccn", "path": "janakj/git-ccn/9f1262cf3c8141d143c8a540bbd501d26767ae75659855dd63df56e1a9c9efc9", "path_in_repo": "janakj/git-ccn//merge-recursive.o", "objdump": "000000000000234f <conflict_rename_delete>:\n    234f:\t55                   \tpush   %rbp\n    2350:\t48 89 e5             \tmov    %rsp,%rbp\n    2353:\t48 81 ec c0 00 00 00 \tsub    $0xc0,%rsp\n    235a:\t48 89 bd 58 ff ff ff \tmov    %rdi,-0xa8(%rbp)\n    2361:\t48 89 b5 50 ff ff ff \tmov    %rsi,-0xb0(%rbp)\n    2368:\t48 89 95 48 ff ff ff \tmov    %rdx,-0xb8(%rbp)\n    236f:\t48 89 8d 40 ff ff ff \tmov    %rcx,-0xc0(%rbp)\n    2376:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    237d:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2381:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    2385:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    2389:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n    2390:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    2397:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    239b:\t48 8b 48 18          \tmov    0x18(%rax),%rcx\n    239f:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    23a6:\t48 8b 00             \tmov    (%rax),%rax\n    23a9:\t48 8b 50 18          \tmov    0x18(%rax),%rdx\n    23ad:\t48 8b b5 48 ff ff ff \tmov    -0xb8(%rbp),%rsi\n    23b4:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    23bb:\t48 83 ec 08          \tsub    $0x8,%rsp\n    23bf:\tff b5 40 ff ff ff    \tpushq  -0xc0(%rbp)\n    23c5:\t49 89 f1             \tmov    %rsi,%r9\n    23c8:\t49 89 c8             \tmov    %rcx,%r8\n    23cb:\t48 89 d1             \tmov    %rdx,%rcx\n    23ce:\tba 00 00 00 00       \tmov    $0x0,%edx\n    23d3:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    23d8:\t48 89 c7             \tmov    %rax,%rdi\n    23db:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    23e0:\te8 71 e0 ff ff       \tcallq  456 <output>\n    23e5:\t48 83 c4 10          \tadd    $0x10,%rsp\n    23e9:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    23f0:\t8b 40 48             \tmov    0x48(%rax),%eax\n    23f3:\t85 c0                \ttest   %eax,%eax\n    23f5:\t75 66                \tjne    245d <conflict_rename_delete+0x10e>\n    23f7:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    23fe:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2402:\t48 39 85 48 ff ff ff \tcmp    %rax,-0xb8(%rbp)\n    2409:\t74 0d                \tje     2418 <conflict_rename_delete+0xc9>\n    240b:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    2412:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    2416:\teb 05                \tjmp    241d <conflict_rename_delete+0xce>\n    2418:\tba 00 00 00 00       \tmov    $0x0,%edx\n    241d:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    2424:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2428:\t48 39 85 48 ff ff ff \tcmp    %rax,-0xb8(%rbp)\n    242f:\t75 0d                \tjne    243e <conflict_rename_delete+0xef>\n    2431:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    2438:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    243c:\teb 05                \tjmp    2443 <conflict_rename_delete+0xf4>\n    243e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2443:\t48 8b 7d f8          \tmov    -0x8(%rbp),%rdi\n    2447:\t41 b8 01 00 00 00    \tmov    $0x1,%r8d\n    244d:\t48 89 d1             \tmov    %rdx,%rcx\n    2450:\t48 89 c2             \tmov    %rax,%rdx\n    2453:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2458:\te8 e4 ef ff ff       \tcallq  1441 <update_stages>\n    245d:\t48 8d 95 60 ff ff ff \tlea    -0xa0(%rbp),%rdx\n    2464:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2468:\t48 89 d6             \tmov    %rdx,%rsi\n    246b:\t48 89 c7             \tmov    %rax,%rdi\n    246e:\te8 00 00 00 00       \tcallq  2473 <conflict_rename_delete+0x124>\n    2473:\t85 c0                \ttest   %eax,%eax\n    2475:\t75 3a                \tjne    24b1 <conflict_rename_delete+0x162>\n    2477:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    247d:\t25 00 f0 00 00       \tand    $0xf000,%eax\n    2482:\t3d 00 40 00 00       \tcmp    $0x4000,%eax\n    2487:\t75 28                \tjne    24b1 <conflict_rename_delete+0x162>\n    2489:\t48 8b 95 48 ff ff ff \tmov    -0xb8(%rbp),%rdx\n    2490:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    2494:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    249b:\t48 89 ce             \tmov    %rcx,%rsi\n    249e:\t48 89 c7             \tmov    %rax,%rdi\n    24a1:\te8 58 f1 ff ff       \tcallq  15fe <unique_path>\n    24a6:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    24aa:\tc7 45 f4 01 00 00 00 \tmovl   $0x1,-0xc(%rbp)\n    24b1:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    24b8:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    24bc:\t0f b7 40 4c          \tmovzwl 0x4c(%rax),%eax\n    24c0:\t0f b7 d0             \tmovzwl %ax,%edx\n    24c3:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    24ca:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    24ce:\t48 89 c6             \tmov    %rax,%rsi\n    24d1:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    24d5:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    24dc:\t49 89 c8             \tmov    %rcx,%r8\n    24df:\t89 d1                \tmov    %edx,%ecx\n    24e1:\t48 89 f2             \tmov    %rsi,%rdx\n    24e4:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    24e9:\t48 89 c7             \tmov    %rax,%rdi\n    24ec:\te8 8a f7 ff ff       \tcallq  1c7b <update_file>\n    24f1:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    24f5:\t74 0c                \tje     2503 <conflict_rename_delete+0x1b4>\n    24f7:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    24fb:\t48 89 c7             \tmov    %rax,%rdi\n    24fe:\te8 00 00 00 00       \tcallq  2503 <conflict_rename_delete+0x1b4>\n    2503:\t90                   \tnop\n    2504:\tc9                   \tleaveq \n    2505:\tc3                   \tretq   ", "code_s": "void __fastcall conflict_rename_delete(__int64 a1, void **a2, const char *a3,\n                                       __int64 a4) {\n  unsigned __int16 *v4;\n  unsigned __int16 *v5;\n  struct stat64 <span class=\"supfact\">buf</span>;\n  int v8;\n  char *file;\n  file = (char *)*((_QWORD *)a2[Number] + Number);\n  v8 = Number;\n  output(a1, Number, String, *((_QWORD *)*a2 + Number),\n         *((_QWORD *)a2[Number] + Number), (__int64)a3, a4);\n  if (!*(_DWORD *)(a1 + Number)) {\n    if (a3 == *(const char **)(a1 + Number))\n      v4 = Number L;\n    else\n      v4 = (unsigned __int16 *)a2[Number];\n    if (a3 == *(const char **)(a1 + Number))\n      v5 = (unsigned __int16 *)a2[Number];\n    else\n      v5 = Number L;\n    update_stages((__int64)file, Number L, v5, v4, Number);\n  }\n  if (!lstat64(file, &<span class=\"supfact\">buf</span>) &&\n      (<span class=\"supfact\">buf</span>.st_mode & Number) == Number) {\n    file = unique_path(a1, file, a3);\n    v8 = Number;\n  }\n  update_file(a1, Number, a2[Number],\n              *((unsigned __int16 *)a2[Number] + Number), file);\n  if (v8)\n    free(file);\n}", "code_t": "void __cdecl conflict_rename_delete(merge_options *o, diff_filepair *pair,\n                                    const char *rename_branch,\n                                    const char *other_branch) {\n  diff_filespec *v4;\n  diff_filespec *v5;\n  stat <span class=\"supfact\">st</span>;\n  int df_conflict;\n  char *dest_name;\n  dest_name = pair->two->path;\n  df_conflict = Number;\n  output(o, Number, String, pair->one->path, pair->two->path, rename_branch,\n         other_branch);\n  if (!o->call_depth) {\n    if (rename_branch == o->branch1)\n      v4 = Number L;\n    else\n      v4 = pair->two;\n    if (rename_branch == o->branch1)\n      v5 = pair->two;\n    else\n      v5 = Number L;\n    update_stages(dest_name, Number L, v5, v4, Number);\n  }\n  if (!lstat64(dest_name, (struct stat64 *)&<span class=\"supfact\">st</span>) &&\n      (<span class=\"supfact\">st</span>.st_mode & Number) == Number) {\n    dest_name = unique_path(o, dest_name, rename_branch);\n    df_conflict = Number;\n  }\n  update_file(o, Number, pair->two->sha1, pair->two->mode, dest_name);\n  if (df_conflict)\n    free(dest_name);\n}", "var": [{"name": "buf", "type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }", "ref_name": "st", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/3da554e7be727d06ab7f4e2330fe40c06e49dc1c481fc3ec5a772104aacc182a", "path_in_repo": "XanClic/qemu//hw/scsi/megasas.o", "objdump": "0000000000001cc5 <_nocheck__trace_megasas_scsi_read_start>:\n    1cc5:\t55                   \tpush   %rbp\n    1cc6:\t48 89 e5             \tmov    %rsp,%rbp\n    1cc9:\t41 54                \tpush   %r12\n    1ccb:\t53                   \tpush   %rbx\n    1ccc:\t48 83 ec 30          \tsub    $0x30,%rsp\n    1cd0:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n    1cd3:\t89 75 c8             \tmov    %esi,-0x38(%rbp)\n    1cd6:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    1cdd:\t00 00 \n    1cdf:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    1ce3:\t31 c0                \txor    %eax,%eax\n    1ce5:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1ceb <_nocheck__trace_megasas_scsi_read_start+0x26>\n    1ceb:\t85 c0                \ttest   %eax,%eax\n    1ced:\t0f 95 c0             \tsetne  %al\n    1cf0:\t0f b6 c0             \tmovzbl %al,%eax\n    1cf3:\t48 85 c0             \ttest   %rax,%rax\n    1cf6:\t74 63                \tje     1d5b <_nocheck__trace_megasas_scsi_read_start+0x96>\n    1cf8:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 1cff <_nocheck__trace_megasas_scsi_read_start+0x3a>\n    1cff:\t66 85 c0             \ttest   %ax,%ax\n    1d02:\t74 57                \tje     1d5b <_nocheck__trace_megasas_scsi_read_start+0x96>\n    1d04:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n    1d09:\te8 1f eb ff ff       \tcallq  82d <qemu_loglevel_mask>\n    1d0e:\t84 c0                \ttest   %al,%al\n    1d10:\t74 49                \tje     1d5b <_nocheck__trace_megasas_scsi_read_start+0x96>\n    1d12:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1d16:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1d1b:\t48 89 c7             \tmov    %rax,%rdi\n    1d1e:\te8 00 00 00 00       \tcallq  1d23 <_nocheck__trace_megasas_scsi_read_start+0x5e>\n    1d23:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1d27:\t49 89 c4             \tmov    %rax,%r12\n    1d2a:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    1d2e:\t48 89 c3             \tmov    %rax,%rbx\n    1d31:\te8 00 00 00 00       \tcallq  1d36 <_nocheck__trace_megasas_scsi_read_start+0x71>\n    1d36:\t8b 4d c8             \tmov    -0x38(%rbp),%ecx\n    1d39:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    1d3c:\t41 89 c9             \tmov    %ecx,%r9d\n    1d3f:\t41 89 d0             \tmov    %edx,%r8d\n    1d42:\t4c 89 e1             \tmov    %r12,%rcx\n    1d45:\t48 89 da             \tmov    %rbx,%rdx\n    1d48:\t89 c6                \tmov    %eax,%esi\n    1d4a:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 1d51 <_nocheck__trace_megasas_scsi_read_start+0x8c>\n    1d51:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1d56:\te8 00 00 00 00       \tcallq  1d5b <_nocheck__trace_megasas_scsi_read_start+0x96>\n    1d5b:\t90                   \tnop\n    1d5c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1d60:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    1d67:\t00 00 \n    1d69:\t74 05                \tje     1d70 <_nocheck__trace_megasas_scsi_read_start+0xab>\n    1d6b:\te8 00 00 00 00       \tcallq  1d70 <_nocheck__trace_megasas_scsi_read_start+0xab>\n    1d70:\t48 83 c4 30          \tadd    $0x30,%rsp\n    1d74:\t5b                   \tpop    %rbx\n    1d75:\t41 5c                \tpop    %r12\n    1d77:\t5d                   \tpop    %rbp\n    1d78:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_megasas_scsi_read_start(\n    unsigned int a1, unsigned int a2) {\n  __suseconds_t v2;\n  __time_t v3;\n  unsigned int v4;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v7;\n  v7 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_SCSI_READ_START_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v2 = <span class=\"supfact\">tv</span>.tv_usec;\n    v3 = <span class=\"supfact\">tv</span>.tv_sec;\n    v4 = qemu_get_thread_id();\n    qemu_log(String, v4, v3, v2, a1, a2);\n  }\n  return __readfsqword(Number) ^ v7;\n}", "code_t": "void __cdecl nocheck__trace_megasas_scsi_read_start(int cmd, int len) {\n  __suseconds_t v2;\n  __time_t v3;\n  unsigned int v4;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v6;\n  v6 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_SCSI_READ_START_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v2 = <span class=\"supfact\">_now</span>.tv_usec;\n    v3 = <span class=\"supfact\">_now</span>.tv_sec;\n    v4 = qemu_get_thread_id();\n    qemu_log(String, v4, v3, v2, (unsigned int)cmd, (unsigned int)len);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "bloodstalker", "repo_name": "blogstuff", "path": "bloodstalker/blogstuff/e5d1c8fad2951977dc94940e542db30173b87fe2732e6c1c20f8e810270889e7", "path_in_repo": "bloodstalker/blogstuff/src/cstruct2luatbale/lua/lua", "objdump": "00000000004283b9 <luaL_loadbufferx>:\n  4283b9:\t55                   \tpush   %rbp\n  4283ba:\t48 89 e5             \tmov    %rsp,%rbp\n  4283bd:\t48 83 ec 40          \tsub    $0x40,%rsp\n  4283c1:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  4283c5:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n  4283c9:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n  4283cd:\t48 89 4d d0          \tmov    %rcx,-0x30(%rbp)\n  4283d1:\t4c 89 45 c8          \tmov    %r8,-0x38(%rbp)\n  4283d5:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  4283d9:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  4283dd:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  4283e1:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  4283e5:\t48 8b 75 c8          \tmov    -0x38(%rbp),%rsi\n  4283e9:\t48 8b 4d d0          \tmov    -0x30(%rbp),%rcx\n  4283ed:\t48 8d 55 f0          \tlea    -0x10(%rbp),%rdx\n  4283f1:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4283f5:\t49 89 f0             \tmov    %rsi,%r8\n  4283f8:\tbe 69 83 42 00       \tmov    $0x428369,%esi\n  4283fd:\t48 89 c7             \tmov    %rax,%rdi\n  428400:\te8 d3 02 fe ff       \tcallq  4086d8 <lua_load>\n  428405:\tc9                   \tleaveq \n  428406:\tc3                   \tretq   ", "code_s": "__int64 __fastcall luaL_loadbufferx(__int64 a1, __int64 a2, __int64 a3,\n                                    void *a4, __int64 a5) {\n  __int64 <span class=\"supfact\">v6</span>[Number];\n  <span class=\"supfact\">v6</span>[Number] = a2;\n  <span class=\"supfact\">v6</span>[Number] = a3;\n  return lua_load(a1, (__int64)getS, (__int64)<span class=\"supfact\">v6</span>, a4, a5);\n}", "code_t": "int __cdecl luaL_loadbufferx(lua_State_0 *L, const char *buff, size_t size,\n                             const char *name, const char *mode) {\n  LoadS_0 <span class=\"supfact\">ls</span>;\n  <span class=\"supfact\">ls</span>.s = buff;\n  <span class=\"supfact\">ls</span>.size = size;\n  return lua_load(L, (lua_Reader)getS, &<span class=\"supfact\">ls</span>, name, mode);\n}", "var": [{"name": "v6", "type": "struct LoadS_0 { const char * s; size_t size; }", "ref_name": "ls", "ref_type": "struct LoadS_0 { const char * s; size_t size; }"}], "body_in_train": false}, {"repo_owner": "versatica", "repo_name": "mediasoup", "path": "versatica/mediasoup/2134079dc2804ca9459849763577ae24d73ab817240db6b3280b213c8d183029", "path_in_repo": "versatica/mediasoup/worker/out/Release/obj.target/abseil/deps/libwebrtc/deps/abseil-cpp/abseil-cpp/absl/strings/str_replace.o", "objdump": "0000000000000000 <_ZNK4absl11string_view6substrEmm>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 83 ec 40          \tsub    $0x40,%rsp\n   8:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n   c:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n  10:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n  14:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  18:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  1c:\t48 39 45 d0          \tcmp    %rax,-0x30(%rbp)\n  20:\t0f 97 c0             \tseta   %al\n  23:\t0f b6 c0             \tmovzbl %al,%eax\n  26:\t48 85 c0             \ttest   %rax,%rax\n  29:\t74 0c                \tje     37 <_ZNK4absl11string_view6substrEmm+0x37>\n  2b:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 32 <_ZNK4absl11string_view6substrEmm+0x32>\n  32:\te8 00 00 00 00       \tcallq  37 <_ZNK4absl11string_view6substrEmm+0x37>\n  37:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  3b:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  3f:\t48 2b 45 d0          \tsub    -0x30(%rbp),%rax\n  43:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  47:\t48 8d 55 e8          \tlea    -0x18(%rbp),%rdx\n  4b:\t48 8d 45 c8          \tlea    -0x38(%rbp),%rax\n  4f:\t48 89 d6             \tmov    %rdx,%rsi\n  52:\t48 89 c7             \tmov    %rax,%rdi\n  55:\te8 00 00 00 00       \tcallq  5a <_ZNK4absl11string_view6substrEmm+0x5a>\n  5a:\t48 8b 00             \tmov    (%rax),%rax\n  5d:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n  61:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n  65:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  69:\t48 8b 08             \tmov    (%rax),%rcx\n  6c:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  70:\t48 01 c1             \tadd    %rax,%rcx\n  73:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n  77:\t48 89 ce             \tmov    %rcx,%rsi\n  7a:\t48 89 c7             \tmov    %rax,%rdi\n  7d:\te8 00 00 00 00       \tcallq  82 <_ZNK4absl11string_view6substrEmm+0x82>\n  82:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  86:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  8a:\tc9                   \tleaveq \n  8b:\tc3                   \tretq   ", "code_s": "__int64 __fastcall absl string_view substr(absl string_view *this,\n                                           const char *a2,\n                                           unsigned __int64 a3) {\n  unsigned __int64 v4;\n  const char *v5;\n  absl string_view *v6;\n  __int64 v7;\n  __int64 <span class=\"supfact\">v8</span>;\n  v6 = this;\n  v5 = a2;\n  v4 = a3;\n  if ((unsigned __int64)a2 > *((_QWORD *)this + Number))\n    absl base_internal ThrowStdOutOfRange((absl base_internal *)String, a2);\n  v7 = *((_QWORD *)v6 + Number) - (_QWORD)v5;\n  v4 = *(_QWORD *)std min<unsigned long>(&v4, &v7);\n  absl string_view string_view((absl string_view *)&<span class=\"supfact\">v8</span>,\n                               &v5[*(_QWORD *)v6], (absl string_view *)v4);\n  return <span class=\"supfact\">v8</span>;\n}", "code_t": "absl string_view __cdecl absl string_view\nsubstr(const absl string_view *const this, absl string_view size_type pos,\n       absl string_view size_type n) {\n  absl string_view size_type na;\n  absl string_view size_type posa;\n  const absl string_view *thisa;\n  unsigned __int64 __b;\n  absl string_view <span class=\"supfact\">v8</span>;\n  thisa = this;\n  posa = pos;\n  na = n;\n  if (pos > this->length_)\n    absl base_internal ThrowStdOutOfRange((absl base_internal *)String,\n                                          (const char *)pos);\n  __b = thisa->length_ - posa;\n  na = *std min<unsigned long>(&na, &__b);\n  absl string_view string_view(&<span class=\"supfact\">v8</span>, &thisa->ptr_[posa], na);\n  return <span class=\"supfact\">v8</span>;\n}", "var": [{"name": "v8", "type": "__unk__", "ref_name": "v8", "ref_type": "struct absl::string_view { const char * ptr_; absl::string_view::size_type length_; }"}], "body_in_train": false}, {"repo_owner": "jordansissel", "repo_name": "zmqexec", "path": "jordansissel/zmqexec/90f51cbd02e259d79f79138bcef4bc0398c8d782bd2eb677105168da074a7c5f", "path_in_repo": "jordansissel/zmqexec//build/zeromq-2.1.11/src/.libs/libzmq.so.1.0.0", "objdump": "0000000000019180 <_ZN3zmq10signaler_t4waitEi>:\n   19180:\t41 54                \tpush   %r12\n   19182:\t89 f2                \tmov    %esi,%edx\n   19184:\tbe 01 00 00 00       \tmov    $0x1,%esi\n   19189:\t48 83 ec 10          \tsub    $0x10,%rsp\n   1918d:\t8b 47 04             \tmov    0x4(%rdi),%eax\n   19190:\t48 8d 7c 24 08       \tlea    0x8(%rsp),%rdi\n   19195:\t89 44 24 08          \tmov    %eax,0x8(%rsp)\n   19199:\tb8 01 00 00 00       \tmov    $0x1,%eax\n   1919e:\t66 89 44 24 0c       \tmov    %ax,0xc(%rsp)\n   191a3:\te8 d8 13 ff ff       \tcallq  a580 <poll@plt>\n   191a8:\t85 c0                \ttest   %eax,%eax\n   191aa:\t78 24                \tjs     191d0 <_ZN3zmq10signaler_t4waitEi+0x50>\n   191ac:\t74 72                \tje     19220 <_ZN3zmq10signaler_t4waitEi+0xa0>\n   191ae:\t83 f8 01             \tcmp    $0x1,%eax\n   191b1:\t0f 85 81 00 00 00    \tjne    19238 <_ZN3zmq10signaler_t4waitEi+0xb8>\n   191b7:\t45 31 e4             \txor    %r12d,%r12d\n   191ba:\tf6 44 24 0e 01       \ttestb  $0x1,0xe(%rsp)\n   191bf:\t0f 84 b3 00 00 00    \tje     19278 <_ZN3zmq10signaler_t4waitEi+0xf8>\n   191c5:\t48 83 c4 10          \tadd    $0x10,%rsp\n   191c9:\t44 89 e0             \tmov    %r12d,%eax\n   191cc:\t41 5c                \tpop    %r12\n   191ce:\tc3                   \tretq   \n   191cf:\t90                   \tnop\n   191d0:\te8 6b 0e ff ff       \tcallq  a040 <__errno_location@plt>\n   191d5:\t41 bc ff ff ff ff    \tmov    $0xffffffff,%r12d\n   191db:\t83 38 04             \tcmpl   $0x4,(%rax)\n   191de:\t74 e5                \tje     191c5 <_ZN3zmq10signaler_t4waitEi+0x45>\n   191e0:\t48 8b 05 f1 8d 01 00 \tmov    0x18df1(%rip),%rax        # 31fd8 <_DYNAMIC+0x280>\n   191e7:\t41 b8 93 00 00 00    \tmov    $0x93,%r8d\n   191ed:\t48 8d 0d ad b9 00 00 \tlea    0xb9ad(%rip),%rcx        # 24ba1 <_ZTSN3zmq9session_tE+0x11>\n   191f4:\t48 8d 15 cc b9 00 00 \tlea    0xb9cc(%rip),%rdx        # 24bc7 <_ZTSN3zmq9session_tE+0x37>\n   191fb:\t48 8d 35 29 ae 00 00 \tlea    0xae29(%rip),%rsi        # 2402b <_fini+0xac7>\n   19202:\t48 8b 38             \tmov    (%rax),%rdi\n   19205:\t31 c0                \txor    %eax,%eax\n   19207:\te8 04 13 ff ff       \tcallq  a510 <fprintf@plt>\n   1920c:\t48 8d 3d b4 b9 00 00 \tlea    0xb9b4(%rip),%rdi        # 24bc7 <_ZTSN3zmq9session_tE+0x37>\n   19213:\te8 3a 16 ff ff       \tcallq  a852 <_ZN3zmq9zmq_abortEPKc>\n   19218:\teb ab                \tjmp    191c5 <_ZN3zmq10signaler_t4waitEi+0x45>\n   1921a:\t66 0f 1f 44 00 00    \tnopw   0x0(%rax,%rax,1)\n   19220:\te8 1b 0e ff ff       \tcallq  a040 <__errno_location@plt>\n   19225:\t41 bc ff ff ff ff    \tmov    $0xffffffff,%r12d\n   1922b:\tc7 00 0b 00 00 00    \tmovl   $0xb,(%rax)\n   19231:\teb 92                \tjmp    191c5 <_ZN3zmq10signaler_t4waitEi+0x45>\n   19233:\t0f 1f 44 00 00       \tnopl   0x0(%rax,%rax,1)\n   19238:\t48 8b 05 99 8d 01 00 \tmov    0x18d99(%rip),%rax        # 31fd8 <_DYNAMIC+0x280>\n   1923f:\t41 b8 9a 00 00 00    \tmov    $0x9a,%r8d\n   19245:\t48 8d 0d 55 b9 00 00 \tlea    0xb955(%rip),%rcx        # 24ba1 <_ZTSN3zmq9session_tE+0x11>\n   1924c:\t48 8d 15 83 b9 00 00 \tlea    0xb983(%rip),%rdx        # 24bd6 <_ZTSN3zmq9session_tE+0x46>\n   19253:\t48 8d 35 d1 ad 00 00 \tlea    0xadd1(%rip),%rsi        # 2402b <_fini+0xac7>\n   1925a:\t48 8b 38             \tmov    (%rax),%rdi\n   1925d:\t31 c0                \txor    %eax,%eax\n   1925f:\te8 ac 12 ff ff       \tcallq  a510 <fprintf@plt>\n   19264:\t48 8d 3d 6b b9 00 00 \tlea    0xb96b(%rip),%rdi        # 24bd6 <_ZTSN3zmq9session_tE+0x46>\n   1926b:\te8 e2 15 ff ff       \tcallq  a852 <_ZN3zmq9zmq_abortEPKc>\n   19270:\te9 42 ff ff ff       \tjmpq   191b7 <_ZN3zmq10signaler_t4waitEi+0x37>\n   19275:\t0f 1f 00             \tnopl   (%rax)\n   19278:\t48 8b 05 59 8d 01 00 \tmov    0x18d59(%rip),%rax        # 31fd8 <_DYNAMIC+0x280>\n   1927f:\t41 b8 9b 00 00 00    \tmov    $0x9b,%r8d\n   19285:\t48 8d 0d 15 b9 00 00 \tlea    0xb915(%rip),%rcx        # 24ba1 <_ZTSN3zmq9session_tE+0x11>\n   1928c:\t48 8d 15 4b b9 00 00 \tlea    0xb94b(%rip),%rdx        # 24bde <_ZTSN3zmq9session_tE+0x4e>\n   19293:\t48 8d 35 91 ad 00 00 \tlea    0xad91(%rip),%rsi        # 2402b <_fini+0xac7>\n   1929a:\t48 8b 38             \tmov    (%rax),%rdi\n   1929d:\t31 c0                \txor    %eax,%eax\n   1929f:\te8 6c 12 ff ff       \tcallq  a510 <fprintf@plt>\n   192a4:\t48 8d 3d 33 b9 00 00 \tlea    0xb933(%rip),%rdi        # 24bde <_ZTSN3zmq9session_tE+0x4e>\n   192ab:\te8 a2 15 ff ff       \tcallq  a852 <_ZN3zmq9zmq_abortEPKc>\n   192b0:\te9 10 ff ff ff       \tjmpq   191c5 <_ZN3zmq10signaler_t4waitEi+0x45>\n   192b5:\t90                   \tnop\n   192b6:\t66 2e 0f 1f 84 00 00 \tnopw   %cs:0x0(%rax,%rax,1)\n   192bd:\t00 00 00 ", "code_s": "__int64 __fastcall zmq signaler_t wait(zmq signaler_t *this, int a2) {\n  int v2;\n  unsigned int v3;\n  struct pollfd <span class=\"supfact\">fds</span>;\n  <span class=\"supfact\">fds</span>.fd = *((_DWORD *)this + Number);\n  <span class=\"supfact\">fds</span>.events = Number;\n  v2 = poll(&<span class=\"supfact\">fds</span>, Number, a2);\n  if (v2 < Number) {\n    v3 = Number;\n    if (*__errno_location() != Number) {\n      fprintf(stderr, String, String, String, Number L);\n      zmq zmq_abort((zmq *)String, String);\n    }\n  } else if (v2) {\n    if (v2 != Number) {\n      fprintf(stderr, String, String, String, Number L);\n      zmq zmq_abort((zmq *)String, String);\n    }\n    v3 = Number;\n    if ((<span class=\"supfact\">fds</span>.revents & Number) == Number) {\n      fprintf(stderr, String, String, String, Number L);\n      zmq zmq_abort((zmq *)String, String);\n    }\n  } else {\n    v3 = Number;\n    *__errno_location() = Number;\n  }\n  return v3;\n}", "code_t": "int __fastcall zmq signaler_t wait(zmq signaler_t *const this, int timeout_) {\n  int v2;\n  int v3;\n  pollfd <span class=\"supfact\">pfd</span>;\n  <span class=\"supfact\">pfd</span>.fd = this->r;\n  <span class=\"supfact\">pfd</span>.events = Number;\n  v2 = poll(&<span class=\"supfact\">pfd</span>, Number, timeout_);\n  if (v2 < Number) {\n    v3 = Number;\n    if (*__errno_location() != Number) {\n      fprintf(stderr, (const char *)&format, String, String, Number L);\n      zmq zmq_abort(String);\n    }\n  } else if (v2) {\n    if (v2 != Number) {\n      fprintf(stderr, (const char *)&format, String, String, Number L);\n      zmq zmq_abort(String);\n    }\n    v3 = Number;\n    if ((<span class=\"supfact\">pfd</span>.revents & Number) == Number) {\n      fprintf(stderr, (const char *)&format, String, String, Number L);\n      zmq zmq_abort(String);\n    }\n  } else {\n    v3 = Number;\n    *__errno_location() = Number;\n  }\n  return v3;\n}", "var": [{"name": "fds", "type": "struct pollfd { int fd; __int16 events; __int16 revents; }", "ref_name": "pfd", "ref_type": "struct pollfd { int fd; __int16 events; __int16 revents; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/65929704b8fc5f2b19d3a759b392893f39798fb00a7830c3a14c58d25d9d3565", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/drivers/kingpin.o", "objdump": "0000000000000bc2 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t>:\n bc2:\t55                   \tpush   %rbp\n bc3:\t48 89 e5             \tmov    %rsp,%rbp\n bc6:\t53                   \tpush   %rbx\n bc7:\t48 83 ec 68          \tsub    $0x68,%rsp\n bcb:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n bcf:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n bd3:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n bda:\t00 \n bdb:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n bdf:\t48 89 c7             \tmov    %rax,%rdi\n be2:\te8 00 00 00 00       \tcallq  be7 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x25>\n be7:\t48 83 7d 90 00       \tcmpq   $0x0,-0x70(%rbp)\n bec:\t75 25                \tjne    c13 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x51>\n bee:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n bf2:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n bf8:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n bfd:\tba 00 00 00 00       \tmov    $0x0,%edx\n c02:\tbe 00 00 00 00       \tmov    $0x0,%esi\n c07:\t48 89 c7             \tmov    %rax,%rdi\n c0a:\te8 00 00 00 00       \tcallq  c0f <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x4d>\n c0f:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n c13:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # c1a <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x58>\n c1a:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n c1e:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n c22:\t41 b8 99 9e 36 00    \tmov    $0x369e99,%r8d\n c28:\t48 89 d1             \tmov    %rdx,%rcx\n c2b:\tba 00 00 00 00       \tmov    $0x0,%edx\n c30:\t48 89 c7             \tmov    %rax,%rdi\n c33:\te8 00 00 00 00       \tcallq  c38 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x76>\n c38:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n c3c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n c40:\tba 00 00 00 00       \tmov    $0x0,%edx\n c45:\tbe 00 00 00 00       \tmov    $0x0,%esi\n c4a:\t48 89 c7             \tmov    %rax,%rdi\n c4d:\te8 00 00 00 00       \tcallq  c52 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x90>\n c52:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n c56:\tba 00 00 00 00       \tmov    $0x0,%edx\n c5b:\tbe 02 00 00 00       \tmov    $0x2,%esi\n c60:\t48 89 c7             \tmov    %rax,%rdi\n c63:\te8 00 00 00 00       \tcallq  c68 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0xa6>\n c68:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n c6c:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n c71:\tba 00 00 00 00       \tmov    $0x0,%edx\n c76:\tbe 00 00 00 00       \tmov    $0x0,%esi\n c7b:\t48 89 c7             \tmov    %rax,%rdi\n c7e:\te8 00 00 00 00       \tcallq  c83 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0xc1>\n c83:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # c8a <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0xc8>\n c8a:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n c8e:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n c92:\t41 b8 99 9e 36 00    \tmov    $0x369e99,%r8d\n c98:\t48 89 d1             \tmov    %rdx,%rcx\n c9b:\tba 00 00 00 00       \tmov    $0x0,%edx\n ca0:\t48 89 c7             \tmov    %rax,%rdi\n ca3:\te8 00 00 00 00       \tcallq  ca8 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0xe6>\n ca8:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n cac:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n cb0:\tba 00 00 00 00       \tmov    $0x0,%edx\n cb5:\tbe 00 00 00 00       \tmov    $0x0,%esi\n cba:\t48 89 c7             \tmov    %rax,%rdi\n cbd:\te8 00 00 00 00       \tcallq  cc2 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x100>\n cc2:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n cc6:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n cca:\t48 89 d6             \tmov    %rdx,%rsi\n ccd:\t48 89 c7             \tmov    %rax,%rdi\n cd0:\te8 00 00 00 00       \tcallq  cd5 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x113>\n cd5:\t48 8b 4d 90          \tmov    -0x70(%rbp),%rcx\n cd9:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n cdd:\tba 00 00 00 00       \tmov    $0x0,%edx\n ce2:\t48 89 ce             \tmov    %rcx,%rsi\n ce5:\t48 89 c7             \tmov    %rax,%rdi\n ce8:\te8 00 00 00 00       \tcallq  ced <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x12b>\n ced:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n cf1:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n cf5:\t48 be aa aa 41 ba 3e \tmovabs $0x3b363eba41aaaa,%rsi\n cfc:\t36 3b 00 \n cff:\t48 89 c7             \tmov    %rax,%rdi\n d02:\te8 00 00 00 00       \tcallq  d07 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x145>\n d07:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n d0b:\tbe 02 00 00 00       \tmov    $0x2,%esi\n d10:\t48 89 c7             \tmov    %rax,%rdi\n d13:\te8 00 00 00 00       \tcallq  d18 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x156>\n d18:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n d1c:\t48 be 00 40 f0 9b bc \tmovabs $0x8e1bc9bf04000,%rsi\n d23:\te1 08 00 \n d26:\t48 89 c7             \tmov    %rax,%rdi\n d29:\te8 00 00 00 00       \tcallq  d2e <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x16c>\n d2e:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # d35 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x173>\n d35:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n d39:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n d3d:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n d43:\t48 89 d1             \tmov    %rdx,%rcx\n d46:\tba 00 00 00 00       \tmov    $0x0,%edx\n d4b:\t48 89 c7             \tmov    %rax,%rdi\n d4e:\te8 00 00 00 00       \tcallq  d53 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x191>\n d53:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n d57:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n d5b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n d60:\t48 89 c7             \tmov    %rax,%rdi\n d63:\te8 00 00 00 00       \tcallq  d68 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x1a6>\n d68:\t48 8b 5d 90          \tmov    -0x70(%rbp),%rbx\n d6c:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n d70:\t48 89 c7             \tmov    %rax,%rdi\n d73:\te8 00 00 00 00       \tcallq  d78 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x1b6>\n d78:\t48 89 d8             \tmov    %rbx,%rax\n d7b:\teb 1a                \tjmp    d97 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x1d5>\n d7d:\t48 89 c3             \tmov    %rax,%rbx\n d80:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n d84:\t48 89 c7             \tmov    %rax,%rdi\n d87:\te8 00 00 00 00       \tcallq  d8c <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x1ca>\n d8c:\t48 89 d8             \tmov    %rbx,%rax\n d8f:\t48 89 c7             \tmov    %rax,%rdi\n d92:\te8 00 00 00 00       \tcallq  d97 <_ZL32construct_machine_config_kingpinR14machine_configP8device_t+0x1d5>\n d97:\t48 83 c4 68          \tadd    $0x68,%rsp\n d9b:\t5b                   \tpop    %rbx\n d9c:\t5d                   \tpop    %rbp\n d9d:\tc3                   \tretq   ", "code_s": "device_t *__fastcall construct_machine_config_kingpin(machine_config *a1,\n                                                      device_t *a2) {\n  int v2;\n  __int64 v3;\n  __int64 v4;\n  device_t *v6;\n  char <span class=\"supfact\">v7</span>[Number];\n  device_execute_interface *v8;\n  v6 = a2;\n  v8 = Number L;\n  astring astring((astring *)<span class=\"supfact\">v7</span>);\n  if (!a2)\n    v6 = (device_t *)machine_config device_add(\n        a1, Number L, String, driver_device_creator<kingpin_state>, Number);\n  v8 = (device_execute_interface *)machine_config device_add(a1, v6, String,\n                                                             Z80, Number);\n  device_memory_interface static_set_addrmap(\n      v8, Number L, construct_address_map_kingpin_program_map);\n  device_memory_interface static_set_addrmap(\n      v8, Number L, construct_address_map_kingpin_io_map);\n  device_execute_interface static_set_vblank_int(\n      v8, (device_t *)kingpin_video_interrupt,\n      (void(__fastcall *)(device_t *))String, Number L, v2);\n  v8 = (device_execute_interface *)machine_config device_add(a1, v6, String,\n                                                             Z80, Number);\n  device_memory_interface static_set_addrmap(\n      v8, Number L, construct_address_map_kingpin_sound_map);\n  construct_machine_config_tms9928a(a1, v6);\n  v8 = (device_execute_interface *)machine_config device_find(a1, v6, String);\n  screen_device static_set_refresh(v8, (device_t *)Number, v3);\n  screen_device static_set_format(v8, Number L);\n  screen_device static_set_vblank_time(v8, (device_t *)Number, v4);\n  v8 = (device_execute_interface *)machine_config device_add(a1, v6, String,\n                                                             NVRAM, Number);\n  nvram_device static_set_default_value(v8, Number L);\n  astring ~astring((astring *)<span class=\"supfact\">v7</span>);\n  return v6;\n}", "code_t": "device_t *__cdecl construct_machine_config_kingpin(machine_config *config,\n                                                   device_t *owner) {\n  void(__fastcall * v2)(address_map *, const device_t *);\n  void(__fastcall * v3)(address_map *, const device_t *);\n  int v4;\n  void(__fastcall * v5)(address_map *, const device_t *);\n  __int64 v6;\n  _bitmap_format v7;\n  __int64 v8;\n  device_t *ownera;\n  astring <span class=\"supfact\">tempstring</span>;\n  device_t *device;\n  ownera = owner;\n  device = Number L;\n  astring astring(&<span class=\"supfact\">tempstring</span>);\n  if (!owner)\n    ownera = (device_t *)machine_config device_add(\n        config, Number L, String,\n        (device_t * (__fastcall *)(const machine_config *, const char *,\n                                   device_t *, unsigned int))\n            driver_device_creator<kingpin_state>,\n        Number);\n  device = (device_t *)machine_config device_add(config, ownera, String, Z80,\n                                                 Number);\n  device_memory_interface static_set_addrmap(\n      device, Number L,\n      (address_spacenum)construct_address_map_kingpin_program_map, v2);\n  device_memory_interface static_set_addrmap(\n      device, (device_t *)((char *)&loc_1 + Number),\n      (address_spacenum)construct_address_map_kingpin_io_map, v3);\n  device_execute_interface static_set_vblank_int(\n      device, (device_t *)kingpin_video_interrupt,\n      (void(__fastcall *)(device_t *))String, Number L, v4);\n  device = (device_t *)machine_config device_add(config, ownera, String, Z80,\n                                                 Number);\n  device_memory_interface static_set_addrmap(\n      device, Number L,\n      (address_spacenum)construct_address_map_kingpin_sound_map, v5);\n  construct_machine_config_tms9928a(config, ownera);\n  device = (device_t *)machine_config device_find(config, ownera, String);\n  screen_device static_set_refresh(device, (device_t *)Number, v6);\n  screen_device static_set_format(device, (device_t *)((char *)&loc_1 + Number),\n                                  v7);\n  screen_device static_set_vblank_time(device, (device_t *)Number, v8);\n  device = (device_t *)machine_config device_add(config, ownera, String, NVRAM,\n                                                 Number);\n  nvram_device static_set_default_value(device, Number L);\n  astring ~astring(&<span class=\"supfact\">tempstring</span>);\n  return ownera;\n}", "var": [{"name": "v7", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "tempstring", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "johankj", "repo_name": "ShillBSD", "path": "johankj/ShillBSD/c20e2363f2d6cb974cb163c0611e038d0bff096fe72cc6b7129e21d4af3e31ca", "path_in_repo": "johankj/ShillBSD/usr.bin/csup/mux.o", "objdump": "00000000000000c0 <sock_write>:\n      c0:\t55                   \tpush   %rbp\n      c1:\t48 89 e5             \tmov    %rsp,%rbp\n      c4:\t48 83 ec 40          \tsub    $0x40,%rsp\n      c8:\t89 7d dc             \tmov    %edi,-0x24(%rbp)\n      cb:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n      cf:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n      d3:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n      d7:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n      db:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n      df:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n      e3:\t48 8d 4d e0          \tlea    -0x20(%rbp),%rcx\n      e7:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n      ea:\tba 01 00 00 00       \tmov    $0x1,%edx\n      ef:\t48 89 ce             \tmov    %rcx,%rsi\n      f2:\t89 c7                \tmov    %eax,%edi\n      f4:\te8 07 ff ff ff       \tcallq  0 <sock_writev>\n      f9:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n      fc:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n      ff:\tc9                   \tleaveq \n     100:\tc3                   \tretq   ", "code_s": "__int64 __fastcall sock_write(int a1, void *a2, size_t a3) {\n  struct iovec <span class=\"supfact\">v4</span>;\n  <span class=\"supfact\">v4</span>.iov_base = a2;\n  <span class=\"supfact\">v4</span>.iov_len = a3;\n  return (unsigned int)sock_writev(a1, &<span class=\"supfact\">v4</span>, Number);\n}", "code_t": "int __cdecl sock_write(int s, void *buf, size_t size) {\n  iovec <span class=\"supfact\">iov</span>;\n  <span class=\"supfact\">iov</span>.iov_base = buf;\n  <span class=\"supfact\">iov</span>.iov_len = size;\n  return sock_writev(s, &<span class=\"supfact\">iov</span>, Number);\n}", "var": [{"name": "v4", "type": "struct iovec { void * iov_base; size_t iov_len; }", "ref_name": "iov", "ref_type": "struct iovec { void * iov_base; size_t iov_len; }"}], "body_in_train": false}, {"repo_owner": "AlexanderVangelov", "repo_name": "pjsip", "path": "AlexanderVangelov/pjsip/1e1e7cb97ebb80eac8dbb33680b64d176ff61b4eaa68df0fca22659194da5490", "path_in_repo": "AlexanderVangelov/pjsip//pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/stateful_proxy", "objdump": "000000000040f0ff <parse_hdr_retry_after>:\n  40f0ff:\t55                   \tpush   %rbp\n  40f100:\t48 89 e5             \tmov    %rsp,%rbp\n  40f103:\t48 83 ec 40          \tsub    $0x40,%rsp\n  40f107:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n  40f10b:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  40f10f:\t48 8b 00             \tmov    (%rax),%rax\n  40f112:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  40f116:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  40f11a:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  40f11e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  40f123:\t48 89 c7             \tmov    %rax,%rdi\n  40f126:\te8 f9 ab ff ff       \tcallq  409d24 <pjsip_retry_after_hdr_create>\n  40f12b:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  40f12f:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n  40f133:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f137:\tbe 40 98 48 00       \tmov    $0x489840,%esi\n  40f13c:\t48 89 c7             \tmov    %rax,%rdi\n  40f13f:\te8 21 38 02 00       \tcallq  432965 <pj_scan_get>\n  40f144:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  40f148:\t48 8d 50 40          \tlea    0x40(%rax),%rdx\n  40f14c:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  40f150:\t48 89 d1             \tmov    %rdx,%rcx\n  40f153:\tba ff ff ff 7f       \tmov    $0x7fffffff,%edx\n  40f158:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  40f15d:\t48 89 c7             \tmov    %rax,%rdi\n  40f160:\te8 da c1 ff ff       \tcallq  40b33f <strtoi_validate>\n  40f165:\te9 d7 00 00 00       \tjmpq   40f241 <parse_hdr_retry_after+0x142>\n  40f16a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f16e:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  40f172:\t0f b6 00             \tmovzbl (%rax),%eax\n  40f175:\t3c 28                \tcmp    $0x28,%al\n  40f177:\t75 51                \tjne    40f1ca <parse_hdr_retry_after+0xcb>\n  40f179:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  40f17d:\t48 8d 50 78          \tlea    0x78(%rax),%rdx\n  40f181:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f185:\t48 89 d1             \tmov    %rdx,%rcx\n  40f188:\tba 29 00 00 00       \tmov    $0x29,%edx\n  40f18d:\tbe 28 00 00 00       \tmov    $0x28,%esi\n  40f192:\t48 89 c7             \tmov    %rax,%rdi\n  40f195:\te8 c5 3a 02 00       \tcallq  432c5f <pj_scan_get_quote>\n  40f19a:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  40f19e:\t48 8b 40 78          \tmov    0x78(%rax),%rax\n  40f1a2:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  40f1a6:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  40f1aa:\t48 89 50 78          \tmov    %rdx,0x78(%rax)\n  40f1ae:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  40f1b2:\t48 8b 80 80 00 00 00 \tmov    0x80(%rax),%rax\n  40f1b9:\t48 8d 50 fe          \tlea    -0x2(%rax),%rdx\n  40f1bd:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  40f1c1:\t48 89 90 80 00 00 00 \tmov    %rdx,0x80(%rax)\n  40f1c8:\teb 77                \tjmp    40f241 <parse_hdr_retry_after+0x142>\n  40f1ca:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f1ce:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  40f1d2:\t0f b6 00             \tmovzbl (%rax),%eax\n  40f1d5:\t3c 3b                \tcmp    $0x3b,%al\n  40f1d7:\t75 5c                \tjne    40f235 <parse_hdr_retry_after+0x136>\n  40f1d9:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  40f1dd:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  40f1e1:\tbe 30 00 00 00       \tmov    $0x30,%esi\n  40f1e6:\t48 89 c7             \tmov    %rax,%rdi\n  40f1e9:\te8 5f 22 05 00       \tcallq  46144d <pj_pool_alloc>\n  40f1ee:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  40f1f2:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40f1f6:\t48 8d 48 20          \tlea    0x20(%rax),%rcx\n  40f1fa:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40f1fe:\t48 8d 50 10          \tlea    0x10(%rax),%rdx\n  40f202:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  40f206:\t48 8b 70 08          \tmov    0x8(%rax),%rsi\n  40f20a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f20e:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n  40f214:\t48 89 c7             \tmov    %rax,%rdi\n  40f217:\te8 46 e5 ff ff       \tcallq  40d762 <int_parse_param>\n  40f21c:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  40f220:\t48 8d 50 48          \tlea    0x48(%rax),%rdx\n  40f224:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40f228:\t48 89 c6             \tmov    %rax,%rsi\n  40f22b:\t48 89 d7             \tmov    %rdx,%rdi\n  40f22e:\te8 6f bd ff ff       \tcallq  40afa2 <pj_list_push_back>\n  40f233:\teb 0c                \tjmp    40f241 <parse_hdr_retry_after+0x142>\n  40f235:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f239:\t48 89 c7             \tmov    %rax,%rdi\n  40f23c:\te8 16 c0 ff ff       \tcallq  40b257 <on_syntax_error>\n  40f241:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f245:\t48 89 c7             \tmov    %rax,%rdi\n  40f248:\te8 b2 bd ff ff       \tcallq  40afff <pj_scan_is_eof>\n  40f24d:\t85 c0                \ttest   %eax,%eax\n  40f24f:\t75 22                \tjne    40f273 <parse_hdr_retry_after+0x174>\n  40f251:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f255:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  40f259:\t0f b6 00             \tmovzbl (%rax),%eax\n  40f25c:\t3c 0d                \tcmp    $0xd,%al\n  40f25e:\t74 13                \tje     40f273 <parse_hdr_retry_after+0x174>\n  40f260:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f264:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  40f268:\t0f b6 00             \tmovzbl (%rax),%eax\n  40f26b:\t3c 0a                \tcmp    $0xa,%al\n  40f26d:\t0f 85 f7 fe ff ff    \tjne    40f16a <parse_hdr_retry_after+0x6b>\n  40f273:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f277:\t48 89 c7             \tmov    %rax,%rdi\n  40f27a:\te8 01 f2 ff ff       \tcallq  40e480 <parse_hdr_end>\n  40f27f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  40f283:\tc9                   \tleaveq \n  40f284:\tc3                   \tretq   ", "code_s": "__int64 __fastcall parse_hdr_retry_after(__int64 *a1) {\n  _QWORD <span class=\"supfact\">v2</span>[Number];\n  __int64 v3;\n  __int64 v4;\n  __int64 v5;\n  v5 = *a1;\n  v4 = pjsip_retry_after_hdr_create(a1[Number], Number);\n  pj_scan_get(v5, &unk_489840, <span class=\"supfact\">v2</span>);\n  strtoi_validate(<span class=\"supfact\">v2</span>, Number, Number, (_DWORD *)(v4 + Number));\n  while (!pj_scan_is_eof(v5) && **(_BYTE **)(v5 + Number) != Number &&\n         **(_BYTE **)(v5 + Number) != Number) {\n    if (**(_BYTE **)(v5 + Number) == Number) {\n      pj_scan_get_quote(v5, Number L, Number L, v4 + Number);\n      ++*(_QWORD *)(v4 + Number);\n      *(_QWORD *)(v4 + Number) -= Number L;\n    } else {\n      if (**(_BYTE **)(v5 + Number) != Number)\n        on_syntax_error(v5);\n      v3 = pj_pool_alloc(a1[Number], Number L);\n      int_parse_param(v5, a1[Number], (__int64 *)(v3 + Number),\n                      (__int64 *)(v3 + Number), Number);\n      pj_list_push_back(v4 + Number, v3);\n    }\n  }\n  parse_hdr_end(v5);\n  return v4;\n}", "code_t": "pjsip_hdr_0 *__cdecl parse_hdr_retry_after(pjsip_parse_ctx_0 *ctx) {\n  pj_str_t_0 <span class=\"supfact\">tmp</span>;\n  pjsip_param_0 *prm;\n  pjsip_retry_after_hdr_0 *hdr;\n  pj_scanner_0 *scanner;\n  scanner = ctx->scanner;\n  hdr = pjsip_retry_after_hdr_create(ctx->pool, Number);\n  pj_scan_get(scanner, &pconst.pjsip_DIGIT_SPEC, &<span class=\"supfact\">tmp</span>);\n  strtoi_validate(&<span class=\"supfact\">tmp</span>, Number, Number, &hdr->ivalue);\n  while (!pj_scan_is_eof(scanner) && *scanner->curptr != Number &&\n         *scanner->curptr != Number) {\n    if (*scanner->curptr == Number) {\n      pj_scan_get_quote(scanner, Number, Number, &hdr->comment);\n      ++hdr->comment.ptr;\n      hdr->comment.slen -= Number L;\n    } else {\n      if (*scanner->curptr != Number)\n        on_syntax_error(scanner);\n      prm = (pjsip_param_0 *)pj_pool_alloc(ctx->pool, Number);\n      int_parse_param(scanner, ctx->pool, &prm->name, &prm->value, Number);\n      pj_list_push_back(&hdr->param, prm);\n    }\n  }\n  parse_hdr_end(scanner);\n  return (pjsip_hdr_0 *)hdr;\n}", "var": [{"name": "v2", "type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }", "ref_name": "tmp", "ref_type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }"}], "body_in_train": false}, {"repo_owner": "citypw", "repo_name": "citypw-SCFE", "path": "citypw/citypw-SCFE/39f3c3076dcbf07698e490aa7a8fa742fb3d1f7834c9322d162d0b30aaf2a56b", "path_in_repo": "citypw/citypw-SCFE/networking/userspace_socket/udp_cmd_client", "objdump": "000000000040143d <main>:\n  40143d:\t55                   \tpush   %rbp\n  40143e:\t48 89 e5             \tmov    %rsp,%rbp\n  401441:\t53                   \tpush   %rbx\n  401442:\t48 83 ec 38          \tsub    $0x38,%rsp\n  401446:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n  401449:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n  40144d:\tc7 45 ec 10 00 00 00 \tmovl   $0x10,-0x14(%rbp)\n  401454:\t83 7d cc 03          \tcmpl   $0x3,-0x34(%rbp)\n  401458:\t74 23                \tje     40147d <main+0x40>\n  40145a:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  40145e:\t48 8b 00             \tmov    (%rax),%rax\n  401461:\t48 89 c6             \tmov    %rax,%rsi\n  401464:\tbf 90 20 40 00       \tmov    $0x402090,%edi\n  401469:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  40146e:\te8 dd fb ff ff       \tcallq  401050 <printf@plt>\n  401473:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  401478:\te8 53 fc ff ff       \tcallq  4010d0 <exit@plt>\n  40147d:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  401481:\t48 83 c0 08          \tadd    $0x8,%rax\n  401485:\t48 8b 10             \tmov    (%rax),%rdx\n  401488:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  40148c:\t48 89 c6             \tmov    %rax,%rsi\n  40148f:\tbf 54 25 00 00       \tmov    $0x2554,%edi\n  401494:\te8 b5 fe ff ff       \tcallq  40134e <open_udp_client_socket>\n  401499:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n  40149c:\t8b 5d ec             \tmov    -0x14(%rbp),%ebx\n  40149f:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  4014a3:\t48 83 c0 10          \tadd    $0x10,%rax\n  4014a7:\t48 8b 00             \tmov    (%rax),%rax\n  4014aa:\t48 89 c7             \tmov    %rax,%rdi\n  4014ad:\te8 7e fb ff ff       \tcallq  401030 <strlen@plt>\n  4014b2:\t48 89 c2             \tmov    %rax,%rdx\n  4014b5:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  4014b9:\t48 83 c0 10          \tadd    $0x10,%rax\n  4014bd:\t48 8b 30             \tmov    (%rax),%rsi\n  4014c0:\t48 8d 4d d0          \tlea    -0x30(%rbp),%rcx\n  4014c4:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n  4014c7:\t41 89 d9             \tmov    %ebx,%r9d\n  4014ca:\t49 89 c8             \tmov    %rcx,%r8\n  4014cd:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  4014d2:\t89 c7                \tmov    %eax,%edi\n  4014d4:\te8 a7 fb ff ff       \tcallq  401080 <sendto@plt>\n  4014d9:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n  4014dc:\t89 c7                \tmov    %eax,%edi\n  4014de:\te8 ad fb ff ff       \tcallq  401090 <close@plt>\n  4014e3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4014e8:\t48 83 c4 38          \tadd    $0x38,%rsp\n  4014ec:\t5b                   \tpop    %rbx\n  4014ed:\t5d                   \tpop    %rbp\n  4014ee:\tc3                   \tretq   \n  4014ef:\t90                   \tnop", "code_s": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  socklen_t v3;\n  size_t v4;\n  struct sockaddr <span class=\"supfact\">addr</span>;\n  int fd;\n  socklen_t addr_len;\n  addr_len = Number;\n  if (argc != Number) {\n    printf(String, *argv);\n    exit(Number);\n  }\n  fd = open_udp_client_socket(Number, &<span class=\"supfact\">addr</span>, argv[Number]);\n  v3 = addr_len;\n  v4 = strlen(argv[Number]);\n  sendto(fd, argv[Number], v4, Number, &<span class=\"supfact\">addr</span>, v3);\n  close(fd);\n  return Number;\n}", "code_t": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  int v3;\n  size_t v4;\n  sockaddr_in <span class=\"supfact\">cli_addr</span>;\n  int sockfd;\n  int addrlen;\n  addrlen = Number;\n  if (argc != Number) {\n    printf(String, *argv);\n    exit(Number);\n  }\n  sockfd = open_udp_client_socket(Number, &<span class=\"supfact\">cli_addr</span>,\n                                  (char *)argv[Number]);\n  v3 = addrlen;\n  v4 = strlen(argv[Number]);\n  sendto(sockfd, argv[Number], v4, Number,\n         (const struct sockaddr *)&<span class=\"supfact\">cli_addr</span>, v3);\n  close(sockfd);\n  return Number;\n}", "var": [{"name": "addr", "type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }", "ref_name": "cli_addr", "ref_type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }"}], "body_in_train": false}, {"repo_owner": "ireader", "repo_name": "sdk", "path": "ireader/sdk/6d01f19d41b93fc9877d6b61e183300c9888c71064410388defa6624582be723", "path_in_repo": "ireader/sdk/test/aio-socket-test5.o", "objdump": "00000000000000f2 <socket_select_write>:\n  f2:\t55                   \tpush   %rbp\n  f3:\t48 89 e5             \tmov    %rsp,%rbp\n  f6:\t48 83 ec 20          \tsub    $0x20,%rsp\n  fa:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n  fd:\t89 75 e8             \tmov    %esi,-0x18(%rbp)\n 100:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 103:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n 106:\t66 c7 45 f8 04 00    \tmovw   $0x4,-0x8(%rbp)\n 10c:\t66 c7 45 fa 00 00    \tmovw   $0x0,-0x6(%rbp)\n 112:\t8b 55 e8             \tmov    -0x18(%rbp),%edx\n 115:\t48 8d 45 f4          \tlea    -0xc(%rbp),%rax\n 119:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 11e:\t48 89 c7             \tmov    %rax,%rdi\n 121:\te8 00 00 00 00       \tcallq  126 <socket_select_write+0x34>\n 126:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 129:\teb 17                \tjmp    142 <socket_select_write+0x50>\n 12b:\t8b 55 e8             \tmov    -0x18(%rbp),%edx\n 12e:\t48 8d 45 f4          \tlea    -0xc(%rbp),%rax\n 132:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 137:\t48 89 c7             \tmov    %rax,%rdi\n 13a:\te8 00 00 00 00       \tcallq  13f <socket_select_write+0x4d>\n 13f:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 142:\t83 7d fc ff          \tcmpl   $0xffffffff,-0x4(%rbp)\n 146:\t75 0c                \tjne    154 <socket_select_write+0x62>\n 148:\te8 00 00 00 00       \tcallq  14d <socket_select_write+0x5b>\n 14d:\t8b 00                \tmov    (%rax),%eax\n 14f:\t83 f8 04             \tcmp    $0x4,%eax\n 152:\t74 d7                \tje     12b <socket_select_write+0x39>\n 154:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 157:\tc9                   \tleaveq \n 158:\tc3                   \tretq   ", "code_s": "__int64 __fastcall socket_select_write(int a1, int a2) {\n  struct pollfd <span class=\"supfact\">fds</span>;\n  unsigned int i;\n  <span class=\"supfact\">fds</span>.fd = a1;\n  <span class=\"supfact\">fds</span>.events = Number;\n  <span class=\"supfact\">fds</span>.revents = Number;\n  for (i = poll(&<span class=\"supfact\">fds</span>, Number, a2);\n       i == Number && *_errno_location() == Number;\n       i = poll(&<span class=\"supfact\">fds</span>, Number, a2))\n    ;\n  return i;\n}", "code_t": "int __cdecl socket_select_write(socket_t sock, int timeout) {\n  pollfd <span class=\"supfact\">fds</span>;\n  int r;\n  <span class=\"supfact\">fds</span>.fd = sock;\n  <span class=\"supfact\">fds</span>.events = Number;\n  <span class=\"supfact\">fds</span>.revents = Number;\n  for (r = poll(&<span class=\"supfact\">fds</span>, Number, timeout);\n       r == Number && *_errno_location() == Number;\n       r = poll(&<span class=\"supfact\">fds</span>, Number, timeout))\n    ;\n  return r;\n}", "var": [{"name": "fds", "type": "struct pollfd { int fd; __int16 events; __int16 revents; }", "ref_name": "fds", "ref_type": "struct pollfd { int fd; __int16 events; __int16 revents; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/560880a0d78a16c1d09b1d26c617d93994fcc3deea10e346cbe2cb3ba3e3c537", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/drivers/royalmah.o", "objdump": "0000000000016dac <_ZL31construct_machine_config_suzumeR14machine_configP8device_t>:\n   16dac:\t55                   \tpush   %rbp\n   16dad:\t48 89 e5             \tmov    %rsp,%rbp\n   16db0:\t53                   \tpush   %rbx\n   16db1:\t48 83 ec 68          \tsub    $0x68,%rsp\n   16db5:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n   16db9:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n   16dbd:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n   16dc4:\t00 \n   16dc5:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   16dc9:\t48 89 c7             \tmov    %rax,%rdi\n   16dcc:\te8 00 00 00 00       \tcallq  16dd1 <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0x25>\n   16dd1:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n   16dd5:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   16dd9:\t48 89 d6             \tmov    %rdx,%rsi\n   16ddc:\t48 89 c7             \tmov    %rax,%rdi\n   16ddf:\te8 fe fb ff ff       \tcallq  169e2 <_ZL33construct_machine_config_dondenmjR14machine_configP8device_t>\n   16de4:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n   16de8:\t48 8b 4d 90          \tmov    -0x70(%rbp),%rcx\n   16dec:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   16df0:\tba 00 00 00 00       \tmov    $0x0,%edx\n   16df5:\t48 89 ce             \tmov    %rcx,%rsi\n   16df8:\t48 89 c7             \tmov    %rax,%rdi\n   16dfb:\te8 00 00 00 00       \tcallq  16e00 <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0x54>\n   16e00:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   16e04:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   16e08:\tba 00 00 00 00       \tmov    $0x0,%edx\n   16e0d:\tbe 02 00 00 00       \tmov    $0x2,%esi\n   16e12:\t48 89 c7             \tmov    %rax,%rdi\n   16e15:\te8 00 00 00 00       \tcallq  16e1a <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0x6e>\n   16e1a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   16e1e:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n   16e23:\tba 00 00 00 00       \tmov    $0x0,%edx\n   16e28:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   16e2d:\t48 89 c7             \tmov    %rax,%rdi\n   16e30:\te8 00 00 00 00       \tcallq  16e35 <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0x89>\n   16e35:\t48 8b 5d 90          \tmov    -0x70(%rbp),%rbx\n   16e39:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   16e3d:\t48 89 c7             \tmov    %rax,%rdi\n   16e40:\te8 00 00 00 00       \tcallq  16e45 <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0x99>\n   16e45:\t48 89 d8             \tmov    %rbx,%rax\n   16e48:\teb 1a                \tjmp    16e64 <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0xb8>\n   16e4a:\t48 89 c3             \tmov    %rax,%rbx\n   16e4d:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   16e51:\t48 89 c7             \tmov    %rax,%rdi\n   16e54:\te8 00 00 00 00       \tcallq  16e59 <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0xad>\n   16e59:\t48 89 d8             \tmov    %rbx,%rax\n   16e5c:\t48 89 c7             \tmov    %rax,%rdi\n   16e5f:\te8 00 00 00 00       \tcallq  16e64 <_ZL31construct_machine_config_suzumeR14machine_configP8device_t+0xb8>\n   16e64:\t48 83 c4 68          \tadd    $0x68,%rsp\n   16e68:\t5b                   \tpop    %rbx\n   16e69:\t5d                   \tpop    %rbp\n   16e6a:\tc3                   \tretq   ", "code_s": "device_t *__fastcall construct_machine_config_suzume(machine_config *a1,\n                                                     device_t *a2) {\n  int v2;\n  device_t *v4;\n  char <span class=\"supfact\">v5</span>[Number];\n  device_execute_interface *v6;\n  v6 = Number L;\n  astring astring((astring *)<span class=\"supfact\">v5</span>);\n  v4 = construct_machine_config_dondenmj(a1, a2);\n  v6 = (device_execute_interface *)machine_config device_find(a1, v4, String);\n  device_memory_interface static_set_addrmap(\n      v6, Number L, construct_address_map_suzume_iomap);\n  device_execute_interface static_set_vblank_int(\n      v6, (device_t *)suzume_irq, (void(__fastcall *)(device_t *))String,\n      Number L, v2);\n  astring ~astring((astring *)<span class=\"supfact\">v5</span>);\n  return v4;\n}", "code_t": "device_t *__cdecl construct_machine_config_suzume(machine_config *config,\n                                                  device_t *owner) {\n  void(__fastcall * v2)(address_map *, const device_t *);\n  int v3;\n  device_t *ownera;\n  astring <span class=\"supfact\">tempstring</span>;\n  device_t *device;\n  device = Number L;\n  astring astring(&<span class=\"supfact\">tempstring</span>);\n  ownera = construct_machine_config_dondenmj(config, owner);\n  device = (device_t *)machine_config device_find(config, ownera, String);\n  device_memory_interface static_set_addrmap(\n      device, (device_t *)((char *)&loc_1 + Number),\n      (address_spacenum)construct_address_map_suzume_iomap, v2);\n  device_execute_interface static_set_vblank_int(\n      device, (device_t *)suzume_irq, (void(__fastcall *)(device_t *))String,\n      Number L, v3);\n  astring ~astring(&<span class=\"supfact\">tempstring</span>);\n  return ownera;\n}", "var": [{"name": "v5", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "tempstring", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/3da554e7be727d06ab7f4e2330fe40c06e49dc1c481fc3ec5a772104aacc182a", "path_in_repo": "XanClic/qemu//hw/scsi/megasas.o", "objdump": "0000000000000c7a <_nocheck__trace_megasas_qf_mapped>:\n     c7a:\t55                   \tpush   %rbp\n     c7b:\t48 89 e5             \tmov    %rsp,%rbp\n     c7e:\t41 54                \tpush   %r12\n     c80:\t53                   \tpush   %rbx\n     c81:\t48 83 ec 30          \tsub    $0x30,%rsp\n     c85:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n     c88:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     c8f:\t00 00 \n     c91:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     c95:\t31 c0                \txor    %eax,%eax\n     c97:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # c9d <_nocheck__trace_megasas_qf_mapped+0x23>\n     c9d:\t85 c0                \ttest   %eax,%eax\n     c9f:\t0f 95 c0             \tsetne  %al\n     ca2:\t0f b6 c0             \tmovzbl %al,%eax\n     ca5:\t48 85 c0             \ttest   %rax,%rax\n     ca8:\t74 5d                \tje     d07 <_nocheck__trace_megasas_qf_mapped+0x8d>\n     caa:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # cb1 <_nocheck__trace_megasas_qf_mapped+0x37>\n     cb1:\t66 85 c0             \ttest   %ax,%ax\n     cb4:\t74 51                \tje     d07 <_nocheck__trace_megasas_qf_mapped+0x8d>\n     cb6:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n     cbb:\te8 6d fb ff ff       \tcallq  82d <qemu_loglevel_mask>\n     cc0:\t84 c0                \ttest   %al,%al\n     cc2:\t74 43                \tje     d07 <_nocheck__trace_megasas_qf_mapped+0x8d>\n     cc4:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     cc8:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     ccd:\t48 89 c7             \tmov    %rax,%rdi\n     cd0:\te8 00 00 00 00       \tcallq  cd5 <_nocheck__trace_megasas_qf_mapped+0x5b>\n     cd5:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     cd9:\t49 89 c4             \tmov    %rax,%r12\n     cdc:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     ce0:\t48 89 c3             \tmov    %rax,%rbx\n     ce3:\te8 00 00 00 00       \tcallq  ce8 <_nocheck__trace_megasas_qf_mapped+0x6e>\n     ce8:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n     ceb:\t41 89 d0             \tmov    %edx,%r8d\n     cee:\t4c 89 e1             \tmov    %r12,%rcx\n     cf1:\t48 89 da             \tmov    %rbx,%rdx\n     cf4:\t89 c6                \tmov    %eax,%esi\n     cf6:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # cfd <_nocheck__trace_megasas_qf_mapped+0x83>\n     cfd:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     d02:\te8 00 00 00 00       \tcallq  d07 <_nocheck__trace_megasas_qf_mapped+0x8d>\n     d07:\t90                   \tnop\n     d08:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     d0c:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n     d13:\t00 00 \n     d15:\t74 05                \tje     d1c <_nocheck__trace_megasas_qf_mapped+0xa2>\n     d17:\te8 00 00 00 00       \tcallq  d1c <_nocheck__trace_megasas_qf_mapped+0xa2>\n     d1c:\t48 83 c4 30          \tadd    $0x30,%rsp\n     d20:\t5b                   \tpop    %rbx\n     d21:\t41 5c                \tpop    %r12\n     d23:\t5d                   \tpop    %rbp\n     d24:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_megasas_qf_mapped(unsigned int a1) {\n  __suseconds_t v1;\n  __time_t v2;\n  unsigned int v3;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v6;\n  v6 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_QF_MAPPED_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v1 = <span class=\"supfact\">tv</span>.tv_usec;\n    v2 = <span class=\"supfact\">tv</span>.tv_sec;\n    v3 = qemu_get_thread_id();\n    qemu_log(String, v3, v2, v1, a1);\n  }\n  return __readfsqword(Number) ^ v6;\n}", "code_t": "void __cdecl nocheck__trace_megasas_qf_mapped(unsigned int index) {\n  __suseconds_t v1;\n  __time_t v2;\n  unsigned int v3;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v5;\n  v5 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_QF_MAPPED_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v1 = <span class=\"supfact\">_now</span>.tv_usec;\n    v2 = <span class=\"supfact\">_now</span>.tv_sec;\n    v3 = qemu_get_thread_id();\n    qemu_log(String, v3, v2, v1, index);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "sslab-gatech", "repo_name": "janus", "path": "sslab-gatech/janus/8f8b600dd647fc4f8a99225a5f0230bc0903b805741b9a7de0f247a7e255007a", "path_in_repo": "sslab-gatech/janus/core/Utils.o", "objdump": "00000000000004e8 <_ZSt10generate_nIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEmZ13random_stringmEUlvE_ET_SB_T0_T1_>:\n 4e8:\t55                   \tpush   %rbp\n 4e9:\t48 89 e5             \tmov    %rsp,%rbp\n 4ec:\t53                   \tpush   %rbx\n 4ed:\t48 83 ec 28          \tsub    $0x28,%rsp\n 4f1:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n 4f5:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n 4f9:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 4fd:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 501:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n 506:\t74 2d                \tje     535 <_ZSt10generate_nIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEmZ13random_stringmEUlvE_ET_SB_T0_T1_+0x4d>\n 508:\t48 8d 45 d8          \tlea    -0x28(%rbp),%rax\n 50c:\t48 89 c7             \tmov    %rax,%rdi\n 50f:\te8 00 00 00 00       \tcallq  514 <_ZSt10generate_nIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEmZ13random_stringmEUlvE_ET_SB_T0_T1_+0x2c>\n 514:\t48 89 c3             \tmov    %rax,%rbx\n 517:\t48 8d 7d 10          \tlea    0x10(%rbp),%rdi\n 51b:\te8 fe fb ff ff       \tcallq  11e <_ZZ13random_stringB5cxx11mENKUlvE_clEv>\n 520:\t88 03                \tmov    %al,(%rbx)\n 522:\t48 83 6d e8 01       \tsubq   $0x1,-0x18(%rbp)\n 527:\t48 8d 45 d8          \tlea    -0x28(%rbp),%rax\n 52b:\t48 89 c7             \tmov    %rax,%rdi\n 52e:\te8 00 00 00 00       \tcallq  533 <_ZSt10generate_nIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEmZ13random_stringmEUlvE_ET_SB_T0_T1_+0x4b>\n 533:\teb cc                \tjmp    501 <_ZSt10generate_nIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEmZ13random_stringmEUlvE_ET_SB_T0_T1_+0x19>\n 535:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 539:\t48 83 c4 28          \tadd    $0x28,%rsp\n 53d:\t5b                   \tpop    %rbx\n 53e:\t5d                   \tpop    %rbp\n 53f:\tc3                   \tretq   ", "code_s": "__int64 __fastcall std\ngenerate_n<__gnu_cxx __normal_iterator<\n               char *, std __cxx11 basic_string<char, std char_traits<char>,\n                                                std allocator<char>>>,\n           unsigned long, random_string(unsigned long){lambda(void) #Number}>(\n    __int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6,\n    char a7) {\n  _BYTE *v7;\n  __int64 <span class=\"supfact\">v9</span>[Number];\n  __int64 v10;\n  <span class=\"supfact\">v9</span>[Number] = a1;\n  v10 = a2;\n  while (v10) {\n    v7 = (_BYTE *)__gnu_cxx __normal_iterator<\n        char *, std __cxx11 basic_string<char, std char_traits<char>,\n                                         std allocator<char>>>\n    operator*(<span class=\"supfact\">v9</span>);\n    *v7 = random_string[abi:cxx11](unsigned long) { lambda(void) #Number }\n    operator()(&a7);\n    --v10;\n    __gnu_cxx __normal_iterator<\n        char *, std __cxx11 basic_string<char, std char_traits<char>,\n                                         std allocator<char>>>\n    operator++(<span class=\"supfact\">v9</span>);\n  }\n  return <span class=\"supfact\">v9</span>[Number];\n}", "code_t": "__gnu_cxx __normal_iterator<\n    char *, std __cxx11 basic_string<char, std char_traits<char>,\n                                     std allocator<char>>> __cdecl std\ngenerate_n<__gnu_cxx __normal_iterator<\n               char *, std __cxx11 basic_string<char, std char_traits<char>,\n                                                std allocator<char>>>,\n           unsigned long, random_string(unsigned long){lambda(void) #Number}>(\n    __gnu_cxx __normal_iterator<\n        char *, std __cxx11 basic_string<char, std char_traits<char>,\n                                         std allocator<char>>>\n        __first,\n    unsigned __int64 __n, random_string<lambda()> __gen) {\n  __gnu_cxx __normal_iterator<\n      char *, std __cxx11 basic_string<char, std char_traits<char>,\n                                       std allocator<char>>>\n      reference v3;\n  __gnu_cxx __normal_iterator<\n      char *, std __cxx11 basic_string<char, std char_traits<char>,\n                                       std allocator<char>>>\n      <span class=\"supfact\">__firsta</span>;\n  unsigned __int64 __niter;\n  random_string<lambda()> __gena;\n  <span class=\"supfact\">__firsta</span>._M_current = __first._M_current;\n  __niter = __n;\n  while (__niter) {\n    v3 = __gnu_cxx __normal_iterator<\n        char *, std __cxx11 basic_string<char, std char_traits<char>,\n                                         std allocator<char>>>\n    operator*(&<span class=\"supfact\">__firsta</span>);\n    *v3 = random_string[abi:cxx11](unsigned long) { lambda(void) #Number }\n    operator()(&__gena);\n    --__niter;\n    __gnu_cxx __normal_iterator<\n        char *, std __cxx11 basic_string<char, std char_traits<char>,\n                                         std allocator<char>>>\n    operator++(&<span class=\"supfact\">__firsta</span>);\n  }\n  return <span class=\"supfact\">__firsta</span>;\n}", "var": [{"name": "v9", "type": "__int64[2]", "ref_name": "__firsta", "ref_type": "struct __gnu_cxx::__normal_iterator<char*,std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > > { char * _M_current; }"}], "body_in_train": false}, {"repo_owner": "CPFL", "repo_name": "xen", "path": "CPFL/xen/bf7ded588946945d1153eacf57c6228d878082f2fae1060e1c2e695ce80936ea", "path_in_repo": "CPFL/xen/xen/arch/x86/mm/built_in.o", "objdump": "", "code_s": "__int64 __fastcall validate_gl2e_0(__int64 a1, unsigned __int64 *a2, __int64 a3,\n                                   unsigned __int64 *a4) {\n  __int64 v4;\n  int v5;\n  __int64 v8;\n  __int64 v9;\n  int v10;\n  __int64 <span class=\"supfact\">v11</span>;\n  unsigned __int64 v12;\n  unsigned __int64 v13;\n  unsigned __int64 *v14;\n  __int64 v15;\n  unsigned int v16;\n  v15 = *(_QWORD *)(a1 + Number);\n  v12 = *a2;\n  v14 = a4;\n  <span class=\"supfact\">v11</span> = mfn_10(Number);\n  v16 = Number;\n  if ((guest_l2e_get_flags_3(v12) & Number) != Number) {\n    v9 = guest_l2e_get_gfn_3(v12);\n    if ((unsigned int)guest_supports_superpages_3(a1) &&\n        (guest_l2e_get_flags_3(v12) & Number) != Number) {\n      <span class=\"supfact\">v11</span> = get_fl1_shadow_status_0(v15, v9);\n    } else {\n      v4 = gfn_x_3(v9);\n      v8 = get_gfn_query_unlocked_3(v15, v4, &v10);\n      if (((Number >> v10) & Number) != Number) {\n        <span class=\"supfact\">v11</span> = get_shadow_status_0(v15, v8, Number);\n      } else if (v10 != Number) {\n        v16 |= Number;\n      }\n    }\n  }\n  l2e_propagate_from_guest_0(a1, v12, <span class=\"supfact\">v11</span>, &v13, Number);\n  v5 = shadow_set_l2e_0(v15, v14, v13, a3);\n  return v5 | v16;\n}", "code_t": "int __cdecl validate_gl2e_0(vcpu *v, void *new_ge, mfn_t sl2mfn, void *se) {\n  unsigned __int64 v4;\n  int v5;\n  unsigned __int64 gl1mfn;\n  unsigned __int64 gl1gfn;\n  p2m_type_t p2mt;\n  mfn_t <span class=\"supfact\">sl1mfn</span>;\n  guest_l2e_t_0 new_gl2e;\n  shadow_l2e_t new_sl2e;\n  shadow_l2e_t *sl2p;\n  domain *d;\n  int result;\n  d = v->domain;\n  new_gl2e.l2 = *(_QWORD *)new_ge;\n  sl2p = (shadow_l2e_t *)se;\n  <span class=\"supfact\">sl1mfn</span>.mfn = mfn_10(Number).mfn;\n  result = Number;\n  if ((guest_l2e_get_flags_3(new_gl2e) & Number) != Number) {\n    gl1gfn = guest_l2e_get_gfn_3(new_gl2e).gfn;\n    if (guest_supports_superpages_3(v) &&\n        (guest_l2e_get_flags_3(new_gl2e) & Number) != Number) {\n      <span class=\"supfact\">sl1mfn</span>.mfn =\n          get_fl1_shadow_status_0(d, (gfn_t)gl1gfn).mfn;\n    } else {\n      v4 = gfn_x_3((gfn_t)gl1gfn);\n      gl1mfn = get_gfn_query_unlocked_3(d, v4, &p2mt).mfn;\n      if (((Number >> p2mt) & Number) != Number) {\n        <span class=\"supfact\">sl1mfn</span>.mfn =\n            get_shadow_status_0(d, (mfn_t)gl1mfn, Number).mfn;\n      } else if (p2mt != p2m_populate_on_demand) {\n        result |= Number;\n      }\n    }\n  }\n  l2e_propagate_from_guest_0(v, new_gl2e, <span class=\"supfact\">sl1mfn</span>, &new_sl2e,\n                             ft_prefetch);\n  v5 = shadow_set_l2e_0(d, sl2p, new_sl2e, sl2mfn);\n  return v5 | result;\n}", "var": [{"name": "v11", "type": "struct l1_pgentry_t { intpte_t l1; }", "ref_name": "sl1mfn", "ref_type": "struct mfn_t { unsigned __int64 mfn; }"}], "body_in_train": false}, {"repo_owner": "blueJpg", "repo_name": "blog_resources", "path": "blueJpg/blog_resources/28e9ede8eeaef5c65a24dd90f716a9ef6b2e50087c69cbc2ddf390d792f7f3f1", "path_in_repo": "blueJpg/blog_resources/IPV4\u7ec4\u64ad\u5b9e\u4f8b/multicast_svr", "objdump": "0000000000401202 <main>:\n  401202:\t55                   \tpush   %rbp\n  401203:\t48 89 e5             \tmov    %rsp,%rbp\n  401206:\t53                   \tpush   %rbx\n  401207:\t48 83 ec 58          \tsub    $0x58,%rsp\n  40120b:\t89 7d ac             \tmov    %edi,-0x54(%rbp)\n  40120e:\t48 89 75 a0          \tmov    %rsi,-0x60(%rbp)\n  401212:\t83 7d ac 02          \tcmpl   $0x2,-0x54(%rbp)\n  401216:\t7f 23                \tjg     40123b <main+0x39>\n  401218:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  40121c:\t48 8b 00             \tmov    (%rax),%rax\n  40121f:\t48 89 c6             \tmov    %rax,%rsi\n  401222:\tbf 08 20 40 00       \tmov    $0x402008,%edi\n  401227:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  40122c:\te8 2f fe ff ff       \tcallq  401060 <printf@plt>\n  401231:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  401236:\te8 a5 fe ff ff       \tcallq  4010e0 <exit@plt>\n  40123b:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n  401242:\t48 c7 45 e0 31 20 40 \tmovq   $0x402031,-0x20(%rbp)\n  401249:\t00 \n  40124a:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  40124e:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  401252:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n  401256:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  40125a:\t48 83 c0 10          \tadd    $0x10,%rax\n  40125e:\t48 8b 00             \tmov    (%rax),%rax\n  401261:\tba 0a 00 00 00       \tmov    $0xa,%edx\n  401266:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  40126b:\t48 89 c7             \tmov    %rax,%rdi\n  40126e:\te8 3d fe ff ff       \tcallq  4010b0 <strtol@plt>\n  401273:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n  401276:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  40127a:\tba 10 00 00 00       \tmov    $0x10,%edx\n  40127f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  401284:\t48 89 c7             \tmov    %rax,%rdi\n  401287:\te8 f4 fd ff ff       \tcallq  401080 <memset@plt>\n  40128c:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n  401290:\tba 10 00 00 00       \tmov    $0x10,%edx\n  401295:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  40129a:\t48 89 c7             \tmov    %rax,%rdi\n  40129d:\te8 de fd ff ff       \tcallq  401080 <memset@plt>\n  4012a2:\t66 c7 45 c0 02 00    \tmovw   $0x2,-0x40(%rbp)\n  4012a8:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  4012ac:\t48 83 c0 08          \tadd    $0x8,%rax\n  4012b0:\t48 8b 00             \tmov    (%rax),%rax\n  4012b3:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n  4012b7:\t48 83 c2 04          \tadd    $0x4,%rdx\n  4012bb:\t48 89 c6             \tmov    %rax,%rsi\n  4012be:\tbf 02 00 00 00       \tmov    $0x2,%edi\n  4012c3:\te8 f8 fd ff ff       \tcallq  4010c0 <inet_pton@plt>\n  4012c8:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n  4012cb:\t75 36                \tjne    401303 <main+0x101>\n  4012cd:\te8 5e fd ff ff       \tcallq  401030 <__errno_location@plt>\n  4012d2:\t8b 00                \tmov    (%rax),%eax\n  4012d4:\t89 c7                \tmov    %eax,%edi\n  4012d6:\te8 15 fe ff ff       \tcallq  4010f0 <strerror@plt>\n  4012db:\t48 89 c3             \tmov    %rax,%rbx\n  4012de:\te8 4d fd ff ff       \tcallq  401030 <__errno_location@plt>\n  4012e3:\t8b 00                \tmov    (%rax),%eax\n  4012e5:\t48 89 da             \tmov    %rbx,%rdx\n  4012e8:\t89 c6                \tmov    %eax,%esi\n  4012ea:\tbf 48 20 40 00       \tmov    $0x402048,%edi\n  4012ef:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4012f4:\te8 67 fd ff ff       \tcallq  401060 <printf@plt>\n  4012f9:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  4012fe:\te8 dd fd ff ff       \tcallq  4010e0 <exit@plt>\n  401303:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n  401306:\t0f b7 c0             \tmovzwl %ax,%eax\n  401309:\t89 c7                \tmov    %eax,%edi\n  40130b:\te8 40 fd ff ff       \tcallq  401050 <htons@plt>\n  401310:\t66 89 45 c2          \tmov    %ax,-0x3e(%rbp)\n  401314:\t66 c7 45 b0 02 00    \tmovw   $0x2,-0x50(%rbp)\n  40131a:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  40131f:\te8 4c fd ff ff       \tcallq  401070 <htonl@plt>\n  401324:\t89 45 b4             \tmov    %eax,-0x4c(%rbp)\n  401327:\tba 00 00 00 00       \tmov    $0x0,%edx\n  40132c:\tbe 02 00 00 00       \tmov    $0x2,%esi\n  401331:\tbf 02 00 00 00       \tmov    $0x2,%edi\n  401336:\te8 d5 fd ff ff       \tcallq  401110 <socket@plt>\n  40133b:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n  40133e:\t83 7d ec 00          \tcmpl   $0x0,-0x14(%rbp)\n  401342:\t79 36                \tjns    40137a <main+0x178>\n  401344:\te8 e7 fc ff ff       \tcallq  401030 <__errno_location@plt>\n  401349:\t8b 00                \tmov    (%rax),%eax\n  40134b:\t89 c7                \tmov    %eax,%edi\n  40134d:\te8 9e fd ff ff       \tcallq  4010f0 <strerror@plt>\n  401352:\t48 89 c3             \tmov    %rax,%rbx\n  401355:\te8 d6 fc ff ff       \tcallq  401030 <__errno_location@plt>\n  40135a:\t8b 00                \tmov    (%rax),%eax\n  40135c:\t48 89 da             \tmov    %rbx,%rdx\n  40135f:\t89 c6                \tmov    %eax,%esi\n  401361:\tbf 69 20 40 00       \tmov    $0x402069,%edi\n  401366:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  40136b:\te8 f0 fc ff ff       \tcallq  401060 <printf@plt>\n  401370:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  401375:\te8 66 fd ff ff       \tcallq  4010e0 <exit@plt>\n  40137a:\t48 8d 4d b0          \tlea    -0x50(%rbp),%rcx\n  40137e:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  401381:\tba 10 00 00 00       \tmov    $0x10,%edx\n  401386:\t48 89 ce             \tmov    %rcx,%rsi\n  401389:\t89 c7                \tmov    %eax,%edi\n  40138b:\te8 40 fd ff ff       \tcallq  4010d0 <bind@plt>\n  401390:\t85 c0                \ttest   %eax,%eax\n  401392:\t79 40                \tjns    4013d4 <main+0x1d2>\n  401394:\te8 97 fc ff ff       \tcallq  401030 <__errno_location@plt>\n  401399:\t8b 00                \tmov    (%rax),%eax\n  40139b:\t89 c7                \tmov    %eax,%edi\n  40139d:\te8 4e fd ff ff       \tcallq  4010f0 <strerror@plt>\n  4013a2:\t48 89 c3             \tmov    %rax,%rbx\n  4013a5:\te8 86 fc ff ff       \tcallq  401030 <__errno_location@plt>\n  4013aa:\t8b 00                \tmov    (%rax),%eax\n  4013ac:\t48 89 da             \tmov    %rbx,%rdx\n  4013af:\t89 c6                \tmov    %eax,%esi\n  4013b1:\tbf 87 20 40 00       \tmov    $0x402087,%edi\n  4013b6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4013bb:\te8 a0 fc ff ff       \tcallq  401060 <printf@plt>\n  4013c0:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  4013c3:\t89 c7                \tmov    %eax,%edi\n  4013c5:\te8 d6 fc ff ff       \tcallq  4010a0 <close@plt>\n  4013ca:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  4013cf:\te8 0c fd ff ff       \tcallq  4010e0 <exit@plt>\n  4013d4:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  4013d8:\t48 89 c7             \tmov    %rax,%rdi\n  4013db:\te8 60 fc ff ff       \tcallq  401040 <strlen@plt>\n  4013e0:\t48 89 c2             \tmov    %rax,%rdx\n  4013e3:\t48 8d 4d c0          \tlea    -0x40(%rbp),%rcx\n  4013e7:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n  4013eb:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  4013ee:\t41 b9 10 00 00 00    \tmov    $0x10,%r9d\n  4013f4:\t49 89 c8             \tmov    %rcx,%r8\n  4013f7:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  4013fc:\t89 c7                \tmov    %eax,%edi\n  4013fe:\te8 8d fc ff ff       \tcallq  401090 <sendto@plt>\n  401403:\t48 85 c0             \ttest   %rax,%rax\n  401406:\t79 2e                \tjns    401436 <main+0x234>\n  401408:\te8 23 fc ff ff       \tcallq  401030 <__errno_location@plt>\n  40140d:\t8b 00                \tmov    (%rax),%eax\n  40140f:\t89 c7                \tmov    %eax,%edi\n  401411:\te8 da fc ff ff       \tcallq  4010f0 <strerror@plt>\n  401416:\t48 89 c3             \tmov    %rax,%rbx\n  401419:\te8 12 fc ff ff       \tcallq  401030 <__errno_location@plt>\n  40141e:\t8b 00                \tmov    (%rax),%eax\n  401420:\t48 89 da             \tmov    %rbx,%rdx\n  401423:\t89 c6                \tmov    %eax,%esi\n  401425:\tbf a3 20 40 00       \tmov    $0x4020a3,%edi\n  40142a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  40142f:\te8 2c fc ff ff       \tcallq  401060 <printf@plt>\n  401434:\teb 1a                \tjmp    401450 <main+0x24e>\n  401436:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n  40143a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  40143e:\t48 89 c6             \tmov    %rax,%rsi\n  401441:\tbf c8 20 40 00       \tmov    $0x4020c8,%edi\n  401446:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  40144b:\te8 10 fc ff ff       \tcallq  401060 <printf@plt>\n  401450:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  401455:\te8 a6 fc ff ff       \tcallq  401100 <sleep@plt>\n  40145a:\te9 75 ff ff ff       \tjmpq   4013d4 <main+0x1d2>\n  40145f:\t90                   \tnop", "code_s": "int __cdecl __noreturn main(int argc, const char **argv, const char **envp) {\n  int *v3;\n  char *v4;\n  int *v5;\n  int *v6;\n  char *v7;\n  int *v8;\n  int *v9;\n  char *v10;\n  int *v11;\n  size_t v12;\n  int *v13;\n  char *v14;\n  int *v15;\n  struct sockaddr <span class=\"supfact\">addr</span>;\n  struct sockaddr <span class=\"supfact\">s</span>;\n  int v18;\n  const char *v19;\n  char *v20;\n  int fd;\n  if (argc <= Number) {\n    printf(String, *argv);\n    exit(Number);\n  }\n  fd = Number;\n  v20 = String;\n  v19 = argv[Number];\n  v18 = strtol(argv[Number], Number L, Number);\n  memset(&<span class=\"supfact\">s</span>, Number, sizeof(<span class=\"supfact\">s</span>));\n  memset(&<span class=\"supfact\">addr</span>, Number, sizeof(<span class=\"supfact\">addr</span>));\n  <span class=\"supfact\">s</span>.sa_family = Number;\n  if (inet_pton(Number, argv[Number], &<span class=\"supfact\">s</span>.sa_data[Number]) ==\n      Number) {\n    v3 = __errno_location();\n    v4 = strerror(*v3);\n    v5 = __errno_location();\n    printf(String, (unsigned int)*v5, v4);\n    exit(Number);\n  }\n  *(_WORD *)<span class=\"supfact\">s</span>.sa_data = htons(v18);\n  <span class=\"supfact\">addr</span>.sa_family = Number;\n  *(_DWORD *)&<span class=\"supfact\">addr</span>.sa_data[Number] = htonl(Number);\n  fd = socket(Number, Number, Number);\n  if (fd < Number) {\n    v6 = __errno_location();\n    v7 = strerror(*v6);\n    v8 = __errno_location();\n    printf(String, (unsigned int)*v8, v7);\n    exit(Number);\n  }\n  if (bind(fd, &<span class=\"supfact\">addr</span>, Number) < Number) {\n    v9 = __errno_location();\n    v10 = strerror(*v9);\n    v11 = __errno_location();\n    printf(String, (unsigned int)*v11, v10);\n    close(fd);\n    exit(Number);\n  }\n  while (Number) {\n    v12 = strlen(v20);\n    if (sendto(fd, v20, v12, Number, &<span class=\"supfact\">s</span>, Number) >= Number) {\n      printf(String, v19, v20);\n    } else {\n      v13 = __errno_location();\n      v14 = strerror(*v13);\n      v15 = __errno_location();\n      printf(String, (unsigned int)*v15, v14);\n    }\n    sleep(Number);\n  }\n}", "code_t": "int __cdecl __noreturn main(int argc, const char **argv, const char **envp) {\n  int *v3;\n  char *v4;\n  int *v5;\n  int *v6;\n  char *v7;\n  int *v8;\n  int *v9;\n  char *v10;\n  int *v11;\n  size_t v12;\n  int *v13;\n  char *v14;\n  int *v15;\n  sockaddr_in <span class=\"supfact\">in</span>;\n  sockaddr_in <span class=\"supfact\">svr</span>;\n  int port;\n  const char *multicast_addr;\n  const char *buf;\n  int fd;\n  if (argc <= Number) {\n    printf(String, *argv);\n    exit(Number);\n  }\n  fd = Number;\n  buf = String;\n  multicast_addr = argv[Number];\n  port = strtol(argv[Number], Number L, Number);\n  memset(&<span class=\"supfact\">svr</span>, Number, sizeof(<span class=\"supfact\">svr</span>));\n  memset(&<span class=\"supfact\">in</span>, Number, sizeof(<span class=\"supfact\">in</span>));\n  <span class=\"supfact\">svr</span>.sin_family = Number;\n  if (inet_pton(Number, argv[Number], &<span class=\"supfact\">svr</span>.sin_addr) ==\n      Number) {\n    v3 = __errno_location();\n    v4 = strerror(*v3);\n    v5 = __errno_location();\n    printf(String, (unsigned int)*v5, v4);\n    exit(Number);\n  }\n  <span class=\"supfact\">svr</span>.sin_port = htons(port);\n  <span class=\"supfact\">in</span>.sin_family = Number;\n  <span class=\"supfact\">in</span>.sin_addr.s_addr = htonl(Number);\n  fd = socket(Number, Number, Number);\n  if (fd < Number) {\n    v6 = __errno_location();\n    v7 = strerror(*v6);\n    v8 = __errno_location();\n    printf(String, (unsigned int)*v8, v7);\n    exit(Number);\n  }\n  if (bind(fd, (const struct sockaddr *)&<span class=\"supfact\">in</span>, Number) < Number) {\n    v9 = __errno_location();\n    v10 = strerror(*v9);\n    v11 = __errno_location();\n    printf(String, (unsigned int)*v11, v10);\n    close(fd);\n    exit(Number);\n  }\n  while (Number) {\n    v12 = strlen(buf);\n    if (sendto(fd, buf, v12, Number,\n               (const struct sockaddr *)&<span class=\"supfact\">svr</span>,\n               Number) >= Number) {\n      printf(String, multicast_addr, buf);\n    } else {\n      v13 = __errno_location();\n      v14 = strerror(*v13);\n      v15 = __errno_location();\n      printf(String, (unsigned int)*v15, v14);\n    }\n    sleep(Number);\n  }\n}", "var": [{"name": "s", "type": "struct sockaddr { sa_family_t sa_family; char[14] sa_data; }", "ref_name": "svr", "ref_type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }"}, {"name": "addr", "type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }", "ref_name": "in", "ref_type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }"}], "body_in_train": false}, {"repo_owner": "Wesley-Jzy", "repo_name": "icslabs", "path": "Wesley-Jzy/icslabs/4f3ff74323298514f8e720996f389736a7bb5e4c4cbf10892a815a8ff06fad0e", "path_in_repo": "Wesley-Jzy/icslabs/lab10/proxy.o", "objdump": "00000000000007b4 <Open_clientfd_ts>:\n 7b4:\t55                   \tpush   %rbp\n 7b5:\t48 89 e5             \tmov    %rsp,%rbp\n 7b8:\t48 83 ec 30          \tsub    $0x30,%rsp\n 7bc:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n 7c0:\t89 75 d4             \tmov    %esi,-0x2c(%rbp)\n 7c3:\tba 00 00 00 00       \tmov    $0x0,%edx\n 7c8:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 7cd:\tbf 02 00 00 00       \tmov    $0x2,%edi\n 7d2:\te8 00 00 00 00       \tcallq  7d7 <Open_clientfd_ts+0x23>\n 7d7:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 7da:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n 7de:\t79 0a                \tjns    7ea <Open_clientfd_ts+0x36>\n 7e0:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n 7e5:\te9 b5 00 00 00       \tjmpq   89f <Open_clientfd_ts+0xeb>\n 7ea:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 7ef:\te8 00 00 00 00       \tcallq  7f4 <Open_clientfd_ts+0x40>\n 7f4:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 7f8:\t48 89 c7             \tmov    %rax,%rdi\n 7fb:\te8 00 00 00 00       \tcallq  800 <Open_clientfd_ts+0x4c>\n 800:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n 804:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n 809:\t75 14                \tjne    81f <Open_clientfd_ts+0x6b>\n 80b:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 810:\te8 00 00 00 00       \tcallq  815 <Open_clientfd_ts+0x61>\n 815:\tb8 fe ff ff ff       \tmov    $0xfffffffe,%eax\n 81a:\te9 80 00 00 00       \tjmpq   89f <Open_clientfd_ts+0xeb>\n 81f:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n 823:\t48 c7 00 00 00 00 00 \tmovq   $0x0,(%rax)\n 82a:\t48 c7 40 08 00 00 00 \tmovq   $0x0,0x8(%rax)\n 831:\t00 \n 832:\t66 c7 45 e0 02 00    \tmovw   $0x2,-0x20(%rbp)\n 838:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n 83b:\t0f b7 c0             \tmovzwl %ax,%eax\n 83e:\t89 c7                \tmov    %eax,%edi\n 840:\te8 00 00 00 00       \tcallq  845 <Open_clientfd_ts+0x91>\n 845:\t66 89 45 e2          \tmov    %ax,-0x1e(%rbp)\n 849:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 84d:\t8b 40 14             \tmov    0x14(%rax),%eax\n 850:\t48 63 d0             \tmovslq %eax,%rdx\n 853:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 857:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n 85b:\t48 8b 00             \tmov    (%rax),%rax\n 85e:\t48 8d 4d e0          \tlea    -0x20(%rbp),%rcx\n 862:\t48 83 c1 04          \tadd    $0x4,%rcx\n 866:\t48 89 c6             \tmov    %rax,%rsi\n 869:\t48 89 cf             \tmov    %rcx,%rdi\n 86c:\te8 00 00 00 00       \tcallq  871 <Open_clientfd_ts+0xbd>\n 871:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 876:\te8 00 00 00 00       \tcallq  87b <Open_clientfd_ts+0xc7>\n 87b:\t48 8d 4d e0          \tlea    -0x20(%rbp),%rcx\n 87f:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 882:\tba 10 00 00 00       \tmov    $0x10,%edx\n 887:\t48 89 ce             \tmov    %rcx,%rsi\n 88a:\t89 c7                \tmov    %eax,%edi\n 88c:\te8 00 00 00 00       \tcallq  891 <Open_clientfd_ts+0xdd>\n 891:\t85 c0                \ttest   %eax,%eax\n 893:\t79 07                \tjns    89c <Open_clientfd_ts+0xe8>\n 895:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n 89a:\teb 03                \tjmp    89f <Open_clientfd_ts+0xeb>\n 89c:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 89f:\tc9                   \tleaveq \n 8a0:\tc3                   \tretq   \n", "code_s": "__int64 __fastcall Open_clientfd_ts(const char *a1, uint16_t a2) {\n  __int64 result;\n  struct sockaddr <span class=\"supfact\">addr</span>;\n  struct hostent *v4;\n  int fd;\n  fd = socket(Number, Number, Number);\n  if (fd < Number)\n    return Number;\n  P(dns_lock);\n  v4 = gethostbyname(a1);\n  if (v4) {\n    *(_QWORD *)&<span class=\"supfact\">addr</span>.sa_family = Number L;\n    *(_QWORD *)&<span class=\"supfact\">addr</span>.sa_data[Number] = Number L;\n    *(_WORD *)<span class=\"supfact\">addr</span>.sa_data = htons(a2);\n    memmove(&<span class=\"supfact\">addr</span>.sa_data[Number],\n            *(const void **)v4->h_addr_list, v4->h_length);\n    V(dns_lock);\n    if (connect(fd, &<span class=\"supfact\">addr</span>, Number) >= Number)\n      result = (unsigned int)fd;\n    else\n      result = Number;\n  } else {\n    V(dns_lock);\n    result = Number L;\n  }\n  return result;\n}", "code_t": "int __cdecl Open_clientfd_ts(char *hostname, int port) {\n  int result;\n  sockaddr_in <span class=\"supfact\">serveraddr</span>;\n  hostent *hp;\n  int clientfd;\n  clientfd = socket(Number, Number, Number);\n  if (clientfd < Number)\n    return Number;\n  P(&dns_lock);\n  hp = gethostbyname(hostname);\n  if (hp) {\n    *(_QWORD *)&<span class=\"supfact\">serveraddr</span>.sin_family = Number L;\n    *(_QWORD *)<span class=\"supfact\">serveraddr</span>.sin_zero = Number L;\n    <span class=\"supfact\">serveraddr</span>.sin_port = htons(port);\n    memmove(&<span class=\"supfact\">serveraddr</span>.sin_addr,\n            *(const void **)hp->h_addr_list, hp->h_length);\n    V(&dns_lock);\n    if (connect(clientfd, (const struct sockaddr *)&<span class=\"supfact\">serveraddr</span>,\n                Number) >= Number)\n      result = clientfd;\n    else\n      result = Number;\n  } else {\n    V(&dns_lock);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "addr", "type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }", "ref_name": "serveraddr", "ref_type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }"}], "body_in_train": false}, {"repo_owner": "claymodel", "repo_name": "voip-foip", "path": "claymodel/voip-foip/adb4b1a90f2690c30d4a1365af93df8c2bccbb6b325703d7e40acbd5b4cb2fd4", "path_in_repo": "claymodel/voip-foip/kamailio-3.1.4/lib/presence/libser_presence.so.0.1", "objdump": "000000000000623a <create_presence_note_zt>:\n    623a:\t55                   \tpush   %rbp\n    623b:\t48 89 e5             \tmov    %rsp,%rbp\n    623e:\t48 83 ec 30          \tsub    $0x30,%rsp\n    6242:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    6246:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n    624a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    624e:\t48 89 c7             \tmov    %rax,%rdi\n    6251:\te8 aa ce ff ff       \tcallq  3100 <zt2str@plt>\n    6256:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    625a:\t48 89 55 f8          \tmov    %rdx,-0x8(%rbp)\n    625e:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    6262:\t48 89 c7             \tmov    %rax,%rdi\n    6265:\te8 96 ce ff ff       \tcallq  3100 <zt2str@plt>\n    626a:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    626e:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n    6272:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n    6276:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n    627a:\t48 89 d6             \tmov    %rdx,%rsi\n    627d:\t48 89 c7             \tmov    %rax,%rdi\n    6280:\te8 5b d1 ff ff       \tcallq  33e0 <create_presence_note@plt>\n    6285:\tc9                   \tleaveq \n    6286:\tc3                   \tretq   ", "code_s": "__int64 create_presence_note_zt() {\n  __int64 v0;\n  __int64 v1;\n  __int64 <span class=\"supfact\">v3</span>[Number];\n  __int64 <span class=\"supfact\">v4</span>[Number];\n  <span class=\"supfact\">v4</span>[Number] = zt2str();\n  <span class=\"supfact\">v4</span>[Number] = v0;\n  <span class=\"supfact\">v3</span>[Number] = zt2str();\n  <span class=\"supfact\">v3</span>[Number] = v1;\n  return create_presence_note(<span class=\"supfact\">v4</span>, <span class=\"supfact\">v3</span>);\n}", "code_t": "presence_note_t *__cdecl create_presence_note_zt(const char *note,\n                                                 const char *lang) {\n  __int64 v2;\n  __int64 v3;\n  str_t <span class=\"supfact\">lang_s</span>;\n  str_t <span class=\"supfact\">note_s</span>;\n  <span class=\"supfact\">note_s</span>.s = (char *)zt2str();\n  *(_QWORD *)&<span class=\"supfact\">note_s</span>.len = v2;\n  <span class=\"supfact\">lang_s</span>.s = (char *)zt2str();\n  *(_QWORD *)&<span class=\"supfact\">lang_s</span>.len = v3;\n  return create_presence_note(&<span class=\"supfact\">note_s</span>, &<span class=\"supfact\">lang_s</span>);\n}", "var": [{"name": "v4", "type": "__unk__", "ref_name": "note_s", "ref_type": "struct str_t { char * s; int len; PADDING (4); }"}, {"name": "v3", "type": "__unk__", "ref_name": "lang_s", "ref_type": "struct str_t { char * s; int len; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "christoph-husse", "repo_name": "isynth", "path": "christoph-husse/isynth/a6c0476d37fab0a2016b706bb595a9db57bad22bae2083133c2d1eeb6cb12f1c", "path_in_repo": "christoph-husse/isynth/dependencies/juce/extras/Introjucer/Builds/Linux/build/intermediate/Debug/juce_events_584896b4.o", "objdump": "", "code_s": "void __fastcall juce LeakedObjectDetector<juce Timer TimerThread>\n    LeakCounter ~LeakCounter(void *a1) {\n  __int64 v1;\n  juce Timer TimerThread *v2;\n  __int64 v3;\n  const char *v4;\n  int v5;\n  char <span class=\"supfact\">v6</span>[Number];\n  if (*(int *)a1 > Number) {\n    juce String String((juce String *)<span class=\"supfact\">v6</span>);\n    v1 = juce operator<<(<span class=\"supfact\">v6</span>, String);\n    v2 = (juce Timer TimerThread *)juce operator<<(v1, *(unsigned int *)a1);\n    v3 = juce operator<<(v2, String);\n    v4 = juce LeakedObjectDetector<juce Timer TimerThread>\n        getLeakedObjectClassName(v2);\n    juce operator<<(v3, v4);\n    juce Logger outputDebugString((juce Logger *)<span class=\"supfact\">v6</span>,\n                                  (const juce String *)v4);\n    juce String ~String((juce String *)<span class=\"supfact\">v6</span>);\n    juce logAssertion((juce *)String, (const char *)&loc_5B + Number, v5);\n    if ((unsigned __int8)juce juce_isRunningUnderDebugger(\n            (juce *)String String))\n      kill(Number, Number);\n  }\n  juce Atomic<int> ~Atomic();\n}", "code_t": "void __cdecl juce LeakedObjectDetector<juce Timer TimerThread>\n    LeakCounter ~LeakCounter(juce LeakedObjectDetector<juce Timer TimerThread>\n                                 LeakCounter *const this) {\n  __int64 v1;\n  __int64 v2;\n  __int64 v3;\n  const char *v4;\n  int v5;\n  juce String <span class=\"supfact\">tempDbgBuf</span>;\n  if (this->numObjects.value > Number) {\n    juce String String(&<span class=\"supfact\">tempDbgBuf</span>);\n    v1 = juce operator<<(&<span class=\"supfact\">tempDbgBuf</span>, String);\n    v2 = juce operator<<(v1, (unsigned int)this->numObjects.value);\n    v3 = juce operator<<(v2, String);\n    v4 = juce LeakedObjectDetector<juce Timer TimerThread>\n    getLeakedObjectClassName();\n    juce operator<<(v3, v4);\n    juce Logger outputDebugString((juce Logger *)&<span class=\"supfact\">tempDbgBuf</span>,\n                                  (const juce String *)v4);\n    juce String ~String(&<span class=\"supfact\">tempDbgBuf</span>);\n    juce logAssertion((juce *)String, (const char *)&loc_5B + Number, v5);\n    if ((unsigned __int8)juce juce_isRunningUnderDebugger(\n            (juce *)String String))\n      kill(Number, Number);\n  }\n  juce Atomic<int> ~Atomic(&this->numObjects);\n}", "var": [{"name": "v6", "type": "struct juce::String { juce::String::CharPointerType text; }", "ref_name": "tempDbgBuf", "ref_type": "struct juce::String { juce::String::CharPointerType text; }"}], "body_in_train": false}, {"repo_owner": "jordansissel", "repo_name": "tmux", "path": "jordansissel/tmux/8c54c58ec5c6c45af38e829f1a79d944af77d1a77275700b93d321f9e256a16e", "path_in_repo": "jordansissel/tmux/tags/TMUX_1_0/tmux", "objdump": "0000000000435f6e <window_choose_redraw_screen>:\n  435f6e:\t55                   \tpush   %rbp\n  435f6f:\t48 89 e5             \tmov    %rsp,%rbp\n  435f72:\t48 83 ec 40          \tsub    $0x40,%rsp\n  435f76:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n  435f7a:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  435f7e:\t48 8b 80 90 01 00 00 \tmov    0x190(%rax),%rax\n  435f85:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  435f89:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  435f8d:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  435f91:\t48 8b 4d c8          \tmov    -0x38(%rbp),%rcx\n  435f95:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  435f99:\tba 00 00 00 00       \tmov    $0x0,%edx\n  435f9e:\t48 89 ce             \tmov    %rcx,%rsi\n  435fa1:\t48 89 c7             \tmov    %rax,%rdi\n  435fa4:\te8 79 be fe ff       \tcallq  421e22 <screen_write_start>\n  435fa9:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n  435fb0:\teb 1a                \tjmp    435fcc <window_choose_redraw_screen+0x5e>\n  435fb2:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n  435fb5:\t48 8d 4d d0          \tlea    -0x30(%rbp),%rcx\n  435fb9:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  435fbd:\t48 89 ce             \tmov    %rcx,%rsi\n  435fc0:\t48 89 c7             \tmov    %rax,%rdi\n  435fc3:\te8 e8 fd ff ff       \tcallq  435db0 <window_choose_write_line>\n  435fc8:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n  435fcc:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  435fd0:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  435fd4:\t8b 40 08             \tmov    0x8(%rax),%eax\n  435fd7:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n  435fda:\t72 d6                \tjb     435fb2 <window_choose_redraw_screen+0x44>\n  435fdc:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  435fe0:\t48 89 c7             \tmov    %rax,%rdi\n  435fe3:\te8 88 be fe ff       \tcallq  421e70 <screen_write_stop>\n  435fe8:\t90                   \tnop\n  435fe9:\tc9                   \tleaveq \n  435fea:\tc3                   \tretq   ", "code_s": "void __fastcall window_choose_redraw_screen(_QWORD *a1) {\n  __int64 v1;\n  __int64 v2;\n  _QWORD <span class=\"supfact\">v3</span>[Number];\n  __int64 v4;\n  __int64 v5;\n  unsigned int i;\n  v5 = a1[Number];\n  v4 = v5;\n  screen_write_start(<span class=\"supfact\">v3</span>, (__int64)a1, Number L);\n  for (i = Number; i < *(_DWORD *)(*(_QWORD *)(v4 + Number) + Number L); ++i)\n    window_choose_write_line(a1, (__int64)<span class=\"supfact\">v3</span>, i,\n                             (__int64)<span class=\"supfact\">v3</span>, v1, v2);\n  screen_write_stop();\n}", "code_t": "void __cdecl window_choose_redraw_screen(window_pane *wp) {\n  screen_write_ctx <span class=\"supfact\">ctx</span>;\n  screen *s;\n  window_choose_mode_data *data;\n  u_int i;\n  data = (window_choose_mode_data *)wp->modedata;\n  s = &data->screen;\n  screen_write_start(&<span class=\"supfact\">ctx</span>, wp, Number L);\n  for (i = Number; i < s->grid->sy; ++i)\n    window_choose_write_line(wp, &<span class=\"supfact\">ctx</span>, i);\n  screen_write_stop(&<span class=\"supfact\">ctx</span>);\n}", "var": [{"name": "v3", "type": "struct screen_write_ctx { window_pane * wp; screen * s; }", "ref_name": "ctx", "ref_type": "struct screen_write_ctx { window_pane * wp; screen * s; }"}], "body_in_train": false}, {"code_s": "__int64 __fastcall Poco Logger shutdown(Poco Logger *this) {\n  __int64 v1;\n  void *v2;\n  __int64 i;\n  char <span class=\"supfact\">v5</span>[Number];\n  __int64 v6[Number];\n  Poco ScopedLock<Poco Mutex> ScopedLock(<span class=\"supfact\">v5</span>,\n                                         &Poco Logger _mapMtx);\n  if (Poco Logger _pLoggerMap [abi:cxx11]) {\n    for (i = std map<std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>>,\n                     Poco Logger *>\n             begin(Poco Logger _pLoggerMap [abi:cxx11]);\n         ; std _Rb_tree_iterator<\n             std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                               std allocator<char>> const,\n                      Poco Logger *>>\n         operator++(&i)) {\n      v6[Number] = std map<std __cxx11 basic_string<char, std char_traits<char>,\n                                                    std allocator<char>>,\n                           Poco Logger *>\n      end(Poco Logger _pLoggerMap [abi:cxx11]);\n      if (!(unsigned __int8)std operator!=(&i, v6))\n        break;\n      v1 = std _Rb_tree_iterator<\n               std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                 std allocator<char>> const,\n                        Poco Logger *>>\n           operator->(&i);\n      Poco RefCountedObject release(\n          (Poco RefCountedObject *)(*(_QWORD *)(v1 + Number) + Number L));\n    }\n    v2 = (void *)Poco Logger _pLoggerMap [abi:cxx11];\n    if (Poco Logger _pLoggerMap [abi:cxx11]) {\n      std map<std __cxx11 basic_string<char, std char_traits<char>,\n                                       std allocator<char>>,\n              Poco Logger *> ~map(Poco Logger _pLoggerMap [abi:cxx11]);\n      operator delete(v2, Number);\n    }\n    Poco Logger _pLoggerMap [abi:cxx11] = Number L;\n  }\n  return Poco ScopedLock<Poco Mutex> ~ScopedLock(<span class=\"supfact\">v5</span>);\n}", "code_t": "void __cdecl Poco Logger shutdown() {\n  std _Rb_tree_iterator<\n      std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>>,\n               Poco Logger *>>\n      pointer v0;\n  Poco Logger LoggerMap *v1;\n  std map<std __cxx11\n              basic_string<char, std char_traits<char>, std allocator<char>>,\n          Poco Logger *>\n      iterator it;\n  Poco Mutex ScopedLock <span class=\"supfact\">lock</span>;\n  std _Rb_tree_iterator<\n      std pair<const std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>>,\n               Poco Logger *>>\n      _Self __y;\n  Poco ScopedLock<Poco Mutex> ScopedLock(&<span class=\"supfact\">lock</span>,\n                                         &Poco Logger _mapMtx);\n  if (Poco Logger _pLoggerMap [abi:cxx11]) {\n    for (it._M_node =\n             std map<std __cxx11 basic_string<char, std char_traits<char>,\n                                              std allocator<char>>,\n                     Poco Logger *>\n                 begin(Poco Logger _pLoggerMap [abi:cxx11])\n                     ._M_node;\n         ; std _Rb_tree_iterator<\n             std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                               std allocator<char>> const,\n                      Poco Logger *>>\n         operator++(&it)) {\n      __y._M_node =\n          std map<std __cxx11 basic_string<char, std char_traits<char>,\n                                           std allocator<char>>,\n                  Poco Logger *>\n          end(Poco Logger _pLoggerMap [abi:cxx11])._M_node;\n      if (!std operator!=(&it, &__y))\n        break;\n      v0 = std _Rb_tree_iterator<\n               std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                                 std allocator<char>> const,\n                        Poco Logger *>>\n           operator->(&it);\n      Poco RefCountedObject release((const Poco RefCountedObject *const) &\n                                    v0->second->baseclass_0[Number]);\n    }\n    v1 = Poco Logger _pLoggerMap [abi:cxx11];\n    if (Poco Logger _pLoggerMap [abi:cxx11]) {\n      std map<std __cxx11 basic_string<char, std char_traits<char>,\n                                       std allocator<char>>,\n              Poco Logger *> ~map(Poco Logger _pLoggerMap [abi:cxx11]);\n      operator delete(v1, Number);\n    }\n    Poco Logger _pLoggerMap [abi:cxx11] = Number L;\n  }\n  Poco ScopedLock<Poco Mutex> ~ScopedLock(&<span class=\"supfact\">lock</span>);\n}", "var": [{"name": "v5", "type": "struct Poco::Notification::Ptr { Poco::Notification * _ptr; }", "ref_name": "lock", "ref_type": "struct Poco::Mutex::ScopedLock { Poco::Mutex * _mutex; }"}], "body_in_train": false}, {"repo_owner": "ralph-irving", "repo_name": "zapwireless", "path": "ralph-irving/zapwireless/768664298d96eb137a1945609ea9cd4affd1a7be1e15427a515de140e85afa17", "path_in_repo": "ralph-irving/zapwireless//bin/linux/zap", "objdump": "00000000004065aa <get_data>:\n  4065aa:\t55                   \tpush   %rbp\n  4065ab:\t48 89 e5             \tmov    %rsp,%rbp\n  4065ae:\t48 81 ec e0 00 00 00 \tsub    $0xe0,%rsp\n  4065b5:\t89 bd 3c ff ff ff    \tmov    %edi,-0xc4(%rbp)\n  4065bb:\t48 89 b5 30 ff ff ff \tmov    %rsi,-0xd0(%rbp)\n  4065c2:\t89 95 38 ff ff ff    \tmov    %edx,-0xc8(%rbp)\n  4065c8:\t48 89 8d 28 ff ff ff \tmov    %rcx,-0xd8(%rbp)\n  4065cf:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n  4065d6:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n  4065dd:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n  4065e4:\te9 41 01 00 00       \tjmpq   40672a <get_data+0x180>\n  4065e9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4065ee:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n  4065f3:\t48 8d 95 50 ff ff ff \tlea    -0xb0(%rbp),%rdx\n  4065fa:\t48 89 d7             \tmov    %rdx,%rdi\n  4065fd:\tfc                   \tcld    \n  4065fe:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n  406601:\t89 f8                \tmov    %edi,%eax\n  406603:\t89 ca                \tmov    %ecx,%edx\n  406605:\t89 55 f0             \tmov    %edx,-0x10(%rbp)\n  406608:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n  40660b:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n  406611:\t8d 50 3f             \tlea    0x3f(%rax),%edx\n  406614:\t85 c0                \ttest   %eax,%eax\n  406616:\t0f 48 c2             \tcmovs  %edx,%eax\n  406619:\tc1 f8 06             \tsar    $0x6,%eax\n  40661c:\t89 c6                \tmov    %eax,%esi\n  40661e:\t48 63 c6             \tmovslq %esi,%rax\n  406621:\t48 8b bc c5 50 ff ff \tmov    -0xb0(%rbp,%rax,8),%rdi\n  406628:\tff \n  406629:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n  40662f:\t99                   \tcltd   \n  406630:\tc1 ea 1a             \tshr    $0x1a,%edx\n  406633:\t01 d0                \tadd    %edx,%eax\n  406635:\t83 e0 3f             \tand    $0x3f,%eax\n  406638:\t29 d0                \tsub    %edx,%eax\n  40663a:\tba 01 00 00 00       \tmov    $0x1,%edx\n  40663f:\t89 c1                \tmov    %eax,%ecx\n  406641:\t48 d3 e2             \tshl    %cl,%rdx\n  406644:\t48 89 d0             \tmov    %rdx,%rax\n  406647:\t48 09 c7             \tor     %rax,%rdi\n  40664a:\t48 89 fa             \tmov    %rdi,%rdx\n  40664d:\t48 63 c6             \tmovslq %esi,%rax\n  406650:\t48 89 94 c5 50 ff ff \tmov    %rdx,-0xb0(%rbp,%rax,8)\n  406657:\tff \n  406658:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n  40665e:\t3b 45 f8             \tcmp    -0x8(%rbp),%eax\n  406661:\t7c 0c                \tjl     40666f <get_data+0xc5>\n  406663:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n  406669:\t83 c0 01             \tadd    $0x1,%eax\n  40666c:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n  40666f:\t48 c7 85 40 ff ff ff \tmovq   $0xa,-0xc0(%rbp)\n  406676:\t0a 00 00 00 \n  40667a:\t48 c7 85 48 ff ff ff \tmovq   $0x0,-0xb8(%rbp)\n  406681:\t00 00 00 00 \n  406685:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  406688:\t8d 78 01             \tlea    0x1(%rax),%edi\n  40668b:\t48 8d 95 40 ff ff ff \tlea    -0xc0(%rbp),%rdx\n  406692:\t48 8d 85 50 ff ff ff \tlea    -0xb0(%rbp),%rax\n  406699:\t49 89 d0             \tmov    %rdx,%r8\n  40669c:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  4066a1:\tba 00 00 00 00       \tmov    $0x0,%edx\n  4066a6:\t48 89 c6             \tmov    %rax,%rsi\n  4066a9:\te8 52 bb ff ff       \tcallq  402200 <select@plt>\n  4066ae:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  4066b1:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n  4066b5:\t75 1b                \tjne    4066d2 <get_data+0x128>\n  4066b7:\tba ef 00 00 00       \tmov    $0xef,%edx\n  4066bc:\tbe d0 be 40 00       \tmov    $0x40bed0,%esi\n  4066c1:\tbf e0 be 40 00       \tmov    $0x40bee0,%edi\n  4066c6:\te8 50 2e 00 00       \tcallq  40951b <warn_errno>\n  4066cb:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  4066d0:\teb 6d                \tjmp    40673f <get_data+0x195>\n  4066d2:\t83 7d f4 ff          \tcmpl   $0xffffffff,-0xc(%rbp)\n  4066d6:\t75 07                \tjne    4066df <get_data+0x135>\n  4066d8:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  4066dd:\teb 60                \tjmp    40673f <get_data+0x195>\n  4066df:\tc7 45 e8 10 00 00 00 \tmovl   $0x10,-0x18(%rbp)\n  4066e6:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  4066e9:\t8b 95 38 ff ff ff    \tmov    -0xc8(%rbp),%edx\n  4066ef:\t29 c2                \tsub    %eax,%edx\n  4066f1:\t89 d0                \tmov    %edx,%eax\n  4066f3:\t89 c7                \tmov    %eax,%edi\n  4066f5:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  4066f8:\t48 63 d0             \tmovslq %eax,%rdx\n  4066fb:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n  406702:\t48 8d 34 02          \tlea    (%rdx,%rax,1),%rsi\n  406706:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n  40670c:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  406711:\t48 89 fa             \tmov    %rdi,%rdx\n  406714:\t89 c7                \tmov    %eax,%edi\n  406716:\te8 25 b9 ff ff       \tcallq  402040 <recv@plt>\n  40671b:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n  40671e:\t83 7d e4 00          \tcmpl   $0x0,-0x1c(%rbp)\n  406722:\t7e 17                \tjle    40673b <get_data+0x191>\n  406724:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n  406727:\t01 45 fc             \tadd    %eax,-0x4(%rbp)\n  40672a:\t8b 85 38 ff ff ff    \tmov    -0xc8(%rbp),%eax\n  406730:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n  406733:\t0f 8c b0 fe ff ff    \tjl     4065e9 <get_data+0x3f>\n  406739:\teb 01                \tjmp    40673c <get_data+0x192>\n  40673b:\t90                   \tnop\n  40673c:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40673f:\tc9                   \tleaveq \n  406740:\tc3                   \tretq   ", "code_s": "__int64 __fastcall get_data(int a1, __int64 a2, signed int a3) {\n  struct timeval <span class=\"supfact\">timeout</span>;\n  fd_set <span class=\"supfact\">readfds</span>;\n  __int64 <span class=\"supfact\">v7</span>;\n  int v8;\n  int v9;\n  unsigned int v10;\n  int v11;\n  int v12;\n  int v13;\n  unsigned int v14;\n  v14 = Number;\n  v12 = Number;\n  v13 = Number;\n  while ((int)v14 < a3) {\n    memset(&<span class=\"supfact\">readfds</span>, Number, sizeof(<span class=\"supfact\">readfds</span>));\n    v11 = Number;\n    v10 = (unsigned int)&<span class=\"supfact\">v7</span>;\n    <span class=\"supfact\">readfds</span>.fds_bits[a1 / Number] |= Number L << (a1 % Number);\n    if (a1 >= v13)\n      v13 = a1 + Number;\n    <span class=\"supfact\">timeout</span>.tv_sec = Number L;\n    <span class=\"supfact\">timeout</span>.tv_usec = Number L;\n    v12 = select(v13 + Number, &<span class=\"supfact\">readfds</span>, Number L, Number L,\n                 &<span class=\"supfact\">timeout</span>);\n    if (!v12) {\n      warn_errno(String, String, Number L);\n      return Number L;\n    }\n    if (v12 == Number)\n      return Number L;\n    v9 = Number;\n    v8 = recv(a1, (void *)((int)v14 + a2), a3 - v14, Number);\n    if (v8 <= Number)\n      break;\n    v14 += v8;\n  }\n  return v14;\n}", "code_t": "int __cdecl get_data(int sock, unsigned __int8 *data, unsigned int len,\n                     unsigned int *remote_addr) {\n  timeval <span class=\"supfact\">tv</span>;\n  fd_set <span class=\"supfact\">read_fds</span>;\n  sockaddr_in <span class=\"supfact\">addr</span>;\n  int rlen;\n  int addr_len;\n  int __d1;\n  int __d0;\n  int ttsk;\n  int n_fd;\n  int total;\n  total = Number;\n  ttsk = Number;\n  n_fd = Number;\n  while (total < (int)len) {\n    memset(&<span class=\"supfact\">read_fds</span>, Number, sizeof(<span class=\"supfact\">read_fds</span>));\n    __d0 = Number;\n    __d1 = (unsigned int)&<span class=\"supfact\">addr</span>;\n    <span class=\"supfact\">read_fds</span>.__fds_bits[sock / Number] |= Number L\n                                                          << (sock % Number);\n    if (sock >= n_fd)\n      n_fd = sock + Number;\n    <span class=\"supfact\">tv</span>.tv_sec = Number L;\n    <span class=\"supfact\">tv</span>.tv_usec = Number L;\n    ttsk = select(n_fd + Number, &<span class=\"supfact\">read_fds</span>, Number L, Number L,\n                  &<span class=\"supfact\">tv</span>);\n    if (!ttsk) {\n      warn_errno(String, String, Number);\n      return Number;\n    }\n    if (ttsk == Number)\n      return Number;\n    addr_len = Number;\n    rlen = recv(sock, &data[total], len - total, Number);\n    if (rlen <= Number)\n      break;\n    total += rlen;\n  }\n  return total;\n}", "var": [{"name": "v7", "type": "__int64", "ref_name": "addr", "ref_type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }"}, {"name": "readfds", "type": "struct fd_set { __fd_mask[16] __fds_bits; }", "ref_name": "read_fds", "ref_type": "struct fd_set { __fd_mask[16] __fds_bits; }"}, {"name": "timeout", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "tv", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "kjkasi", "repo_name": "030005", "path": "kjkasi/030005/0182fbeb07f5b25ca323532ca8dc50746772e05d797b633188dc1b76361bfc75", "path_in_repo": "kjkasi/030005/ngos/JWNR2000_4EMRUS/SW/opensource/wireless/wpa2/wpa_supplicant/driver_wext.o", "objdump": "00000000000030a5 <wpa_driver_wext_set_key>:\n    30a5:\t55                   \tpush   %rbp\n    30a6:\t48 89 e5             \tmov    %rsp,%rbp\n    30a9:\t48 83 ec 60          \tsub    $0x60,%rsp\n    30ad:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    30b1:\t89 75 c4             \tmov    %esi,-0x3c(%rbp)\n    30b4:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n    30b8:\t89 4d c0             \tmov    %ecx,-0x40(%rbp)\n    30bb:\t44 89 45 b4          \tmov    %r8d,-0x4c(%rbp)\n    30bf:\t4c 89 4d a8          \tmov    %r9,-0x58(%rbp)\n    30c3:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    30c7:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    30cb:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    30d2:\t8b 4d b4             \tmov    -0x4c(%rbp),%ecx\n    30d5:\t8b 55 c0             \tmov    -0x40(%rbp),%edx\n    30d8:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    30db:\tff 75 20             \tpushq  0x20(%rbp)\n    30de:\tff 75 10             \tpushq  0x10(%rbp)\n    30e1:\t41 89 c9             \tmov    %ecx,%r9d\n    30e4:\t41 89 d0             \tmov    %edx,%r8d\n    30e7:\t89 c1                \tmov    %eax,%ecx\n    30e9:\tba 00 00 00 00       \tmov    $0x0,%edx\n    30ee:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    30f3:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    30f8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    30fd:\te8 00 00 00 00       \tcallq  3102 <wpa_driver_wext_set_key+0x5d>\n    3102:\t48 83 c4 10          \tadd    $0x10,%rsp\n    3106:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    310a:\tba 20 00 00 00       \tmov    $0x20,%edx\n    310f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    3114:\t48 89 c7             \tmov    %rax,%rdi\n    3117:\te8 00 00 00 00       \tcallq  311c <wpa_driver_wext_set_key+0x77>\n    311c:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3120:\t48 8d 48 14          \tlea    0x14(%rax),%rcx\n    3124:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    3128:\tba 10 00 00 00       \tmov    $0x10,%edx\n    312d:\t48 89 ce             \tmov    %rcx,%rsi\n    3130:\t48 89 c7             \tmov    %rax,%rdi\n    3133:\te8 00 00 00 00       \tcallq  3138 <wpa_driver_wext_set_key+0x93>\n    3138:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    313b:\t83 c0 01             \tadd    $0x1,%eax\n    313e:\t66 89 45 ea          \tmov    %ax,-0x16(%rbp)\n    3142:\t83 7d c4 00          \tcmpl   $0x0,-0x3c(%rbp)\n    3146:\t75 0c                \tjne    3154 <wpa_driver_wext_set_key+0xaf>\n    3148:\t0f b7 45 ea          \tmovzwl -0x16(%rbp),%eax\n    314c:\t66 0d 00 80          \tor     $0x8000,%ax\n    3150:\t66 89 45 ea          \tmov    %ax,-0x16(%rbp)\n    3154:\t48 8b 45 18          \tmov    0x18(%rbp),%rax\n    3158:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    315c:\t48 8b 45 20          \tmov    0x20(%rbp),%rax\n    3160:\t66 89 45 e8          \tmov    %ax,-0x18(%rbp)\n    3164:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3168:\t8b 40 0c             \tmov    0xc(%rax),%eax\n    316b:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    316f:\tbe 2a 8b 00 00       \tmov    $0x8b2a,%esi\n    3174:\t89 c7                \tmov    %eax,%edi\n    3176:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    317b:\te8 00 00 00 00       \tcallq  3180 <wpa_driver_wext_set_key+0xdb>\n    3180:\t85 c0                \ttest   %eax,%eax\n    3182:\t79 11                \tjns    3195 <wpa_driver_wext_set_key+0xf0>\n    3184:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3189:\te8 00 00 00 00       \tcallq  318e <wpa_driver_wext_set_key+0xe9>\n    318e:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n    3195:\t83 7d b4 00          \tcmpl   $0x0,-0x4c(%rbp)\n    3199:\t0f 84 81 00 00 00    \tje     3220 <wpa_driver_wext_set_key+0x17b>\n    319f:\t83 7d c4 00          \tcmpl   $0x0,-0x3c(%rbp)\n    31a3:\t74 7b                \tje     3220 <wpa_driver_wext_set_key+0x17b>\n    31a5:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    31a9:\tba 20 00 00 00       \tmov    $0x20,%edx\n    31ae:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    31b3:\t48 89 c7             \tmov    %rax,%rdi\n    31b6:\te8 00 00 00 00       \tcallq  31bb <wpa_driver_wext_set_key+0x116>\n    31bb:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    31bf:\t48 8d 48 14          \tlea    0x14(%rax),%rcx\n    31c3:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    31c7:\tba 10 00 00 00       \tmov    $0x10,%edx\n    31cc:\t48 89 ce             \tmov    %rcx,%rsi\n    31cf:\t48 89 c7             \tmov    %rax,%rdi\n    31d2:\te8 00 00 00 00       \tcallq  31d7 <wpa_driver_wext_set_key+0x132>\n    31d7:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    31da:\t83 c0 01             \tadd    $0x1,%eax\n    31dd:\t66 89 45 ea          \tmov    %ax,-0x16(%rbp)\n    31e1:\t48 8b 45 18          \tmov    0x18(%rbp),%rax\n    31e5:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    31e9:\t66 c7 45 e8 00 00    \tmovw   $0x0,-0x18(%rbp)\n    31ef:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    31f3:\t8b 40 0c             \tmov    0xc(%rax),%eax\n    31f6:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    31fa:\tbe 2a 8b 00 00       \tmov    $0x8b2a,%esi\n    31ff:\t89 c7                \tmov    %eax,%edi\n    3201:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3206:\te8 00 00 00 00       \tcallq  320b <wpa_driver_wext_set_key+0x166>\n    320b:\t85 c0                \ttest   %eax,%eax\n    320d:\t79 11                \tjns    3220 <wpa_driver_wext_set_key+0x17b>\n    320f:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3214:\te8 00 00 00 00       \tcallq  3219 <wpa_driver_wext_set_key+0x174>\n    3219:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n    3220:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    3223:\tc9                   \tleaveq \n    3224:\tc3                   \tretq   ", "code_s": "__int64 __fastcall wpa_driver_wext_set_key(__int64 a1, unsigned int a2,\n                                           __int64 a3, unsigned int a4,\n                                           unsigned int a5, __int64 a6,\n                                           __int64 a7, __int64 a8, __int64 a9) {\n  __int16 v11;\n  __int64 <span class=\"supfact\">s</span>[Number];\n  __int64 v13;\n  unsigned int v14;\n  v11 = a4;\n  v13 = a1;\n  v14 = Number;\n  wpa_printf(Number L, String, String, a2, a4, a5, a7, a9);\n  memset(<span class=\"supfact\">s</span>, Number, sizeof(<span class=\"supfact\">s</span>));\n  strncpy((char *)<span class=\"supfact\">s</span>, (const char *)(a1 + Number), Number);\n  WORD1(<span class=\"supfact\">s</span>[Number]) = v11 + Number;\n  if (!a2)\n    WORD1(<span class=\"supfact\">s</span>[Number]) |= Number;\n  <span class=\"supfact\">s</span>[Number] = a8;\n  LOWORD(<span class=\"supfact\">s</span>[Number]) = a9;\n  if (ioctl(*(_DWORD *)(v13 + Number), Number, <span class=\"supfact\">s</span>) < Number) {\n    perror(String);\n    v14 = Number;\n  }\n  if (a5) {\n    if (a2) {\n      memset(<span class=\"supfact\">s</span>, Number, sizeof(<span class=\"supfact\">s</span>));\n      strncpy((char *)<span class=\"supfact\">s</span>, (const char *)(v13 + Number), Number);\n      WORD1(<span class=\"supfact\">s</span>[Number]) = v11 + Number;\n      <span class=\"supfact\">s</span>[Number] = a8;\n      LOWORD(<span class=\"supfact\">s</span>[Number]) = Number;\n      if (ioctl(*(_DWORD *)(v13 + Number), Number, <span class=\"supfact\">s</span>) <\n          Number) {\n        perror(String);\n        v14 = Number;\n      }\n    }\n  }\n  return v14;\n}", "code_t": "int __cdecl wpa_driver_wext_set_key(void *priv, wpa_alg alg, const u8 *addr,\n                                    int key_idx, int set_tx, const u8 *seq,\n                                    size_t seq_len, const u8 *key,\n                                    size_t key_len) {\n  __int16 key_idxa;\n  iwreq <span class=\"supfact\">iwr</span>;\n  wpa_driver_wext_data *drv;\n  int ret;\n  key_idxa = key_idx;\n  drv = (wpa_driver_wext_data *)priv;\n  ret = Number;\n  wpa_printf(Number L, String, String, (unsigned int)alg, (unsigned int)key_idx,\n             (unsigned int)set_tx, seq_len, key_len);\n  memset(&<span class=\"supfact\">iwr</span>, Number, sizeof(<span class=\"supfact\">iwr</span>));\n  strncpy(<span class=\"supfact\">iwr</span>.ifr_ifrn.ifrn_name, (const char *)priv + Number,\n          Number);\n  <span class=\"supfact\">iwr</span>.u.essid.flags = key_idxa + Number;\n  if (alg == WPA_ALG_NONE)\n    <span class=\"supfact\">iwr</span>.u.essid.flags |= Number;\n  <span class=\"supfact\">iwr</span>.u.essid.pointer = (void *)key;\n  <span class=\"supfact\">iwr</span>.u.essid.length = key_len;\n  if (ioctl(drv->ioctl_sock, Number, &<span class=\"supfact\">iwr</span>) < Number) {\n    perror(String);\n    ret = Number;\n  }\n  if (set_tx) {\n    if (alg) {\n      memset(&<span class=\"supfact\">iwr</span>, Number, sizeof(<span class=\"supfact\">iwr</span>));\n      strncpy(<span class=\"supfact\">iwr</span>.ifr_ifrn.ifrn_name, drv->ifname, Number);\n      <span class=\"supfact\">iwr</span>.u.essid.flags = key_idxa + Number;\n      <span class=\"supfact\">iwr</span>.u.essid.pointer = (void *)key;\n      <span class=\"supfact\">iwr</span>.u.essid.length = Number;\n      if (ioctl(drv->ioctl_sock, Number, &<span class=\"supfact\">iwr</span>) < Number) {\n        perror(String);\n        ret = Number;\n      }\n    }\n  }\n  return ret;\n}", "var": [{"name": "s", "type": "struct sockaddr_ll { unsigned __int16 sll_family; unsigned __int16 sll_protocol; int sll_ifindex; unsigned __int16 sll_hatype; unsigned __int8 sll_pkttype; unsigned __int8 sll_halen; unsigned __int8[8] sll_addr; }", "ref_name": "iwr", "ref_type": "struct iwreq { $EC3FB77B1F5CBB3C6B6AB4B4CE5B261D ifr_ifrn; iwreq_data u; }"}], "body_in_train": false}, {"repo_owner": "CPFL", "repo_name": "xen", "path": "CPFL/xen/bf7ded588946945d1153eacf57c6228d878082f2fae1060e1c2e695ce80936ea", "path_in_repo": "CPFL/xen/xen/arch/x86/mm/built_in.o", "objdump": "0000000000018cb2 <mem_sharing_add_to_physmap>:\n   18cb2:\t55                   \tpush   %rbp\n   18cb3:\t48 89 e5             \tmov    %rsp,%rbp\n   18cb6:\t48 81 ec a0 00 00 00 \tsub    $0xa0,%rsp\n   18cbd:\t48 89 7d 88          \tmov    %rdi,-0x78(%rbp)\n   18cc1:\t48 89 75 80          \tmov    %rsi,-0x80(%rbp)\n   18cc5:\t48 89 95 78 ff ff ff \tmov    %rdx,-0x88(%rbp)\n   18ccc:\t48 89 8d 70 ff ff ff \tmov    %rcx,-0x90(%rbp)\n   18cd3:\t4c 89 85 68 ff ff ff \tmov    %r8,-0x98(%rbp)\n   18cda:\tc7 45 fc ea ff ff ff \tmovl   $0xffffffea,-0x4(%rbp)\n   18ce1:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n   18ce8:\t48 8b 80 f0 0a 00 00 \tmov    0xaf0(%rax),%rax\n   18cef:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n   18cf3:\t4c 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%r8\n   18cfa:\t48 8d 7d d0          \tlea    -0x30(%rbp),%rdi\n   18cfe:\t48 8d 55 c4          \tlea    -0x3c(%rbp),%rdx\n   18d02:\t48 8b 75 80          \tmov    -0x80(%rbp),%rsi\n   18d06:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n   18d0a:\t48 8d 4d 98          \tlea    -0x68(%rbp),%rcx\n   18d0e:\t51                   \tpush   %rcx\n   18d0f:\t6a 00                \tpushq  $0x0\n   18d11:\t48 8d 4d c8          \tlea    -0x38(%rbp),%rcx\n   18d15:\t51                   \tpush   %rcx\n   18d16:\t48 8d 4d bc          \tlea    -0x44(%rbp),%rcx\n   18d1a:\t51                   \tpush   %rcx\n   18d1b:\t48 8d 4d c0          \tlea    -0x40(%rbp),%rcx\n   18d1f:\t51                   \tpush   %rcx\n   18d20:\tff b5 68 ff ff ff    \tpushq  -0x98(%rbp)\n   18d26:\t4d 89 c1             \tmov    %r8,%r9\n   18d29:\t49 89 f8             \tmov    %rdi,%r8\n   18d2c:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n   18d31:\t48 89 c7             \tmov    %rax,%rdi\n   18d34:\te8 6d d9 ff ff       \tcallq  166a6 <get_two_gfns>\n   18d39:\t48 83 c4 30          \tadd    $0x30,%rsp\n   18d3d:\tc7 45 fc f6 ff ff ff \tmovl   $0xfffffff6,-0x4(%rbp)\n   18d44:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n   18d48:\t48 89 c7             \tmov    %rax,%rdi\n   18d4b:\te8 a1 f3 ff ff       \tcallq  180f1 <__grab_shared_page>\n   18d50:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   18d54:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n   18d59:\t0f 84 f0 01 00 00    \tje     18f4f <mem_sharing_add_to_physmap+0x29d>\n   18d5f:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n   18d62:\t83 f8 0c             \tcmp    $0xc,%eax\n   18d65:\t0f 95 c0             \tsetne  %al\n   18d68:\t0f b6 c0             \tmovzbl %al,%eax\n   18d6b:\t48 85 c0             \ttest   %rax,%rax\n   18d6e:\t74 02                \tje     18d72 <mem_sharing_add_to_physmap+0xc0>\n   18d70:\t0f 0b                \tud2    \n   18d72:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   18d76:\t48 8b 00             \tmov    (%rax),%rax\n   18d79:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n   18d7d:\t48 39 85 78 ff ff ff \tcmp    %rax,-0x88(%rbp)\n   18d84:\t0f 85 b6 01 00 00    \tjne    18f40 <mem_sharing_add_to_physmap+0x28e>\n   18d8a:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n   18d8d:\tba 12 0c 00 00       \tmov    $0xc12,%edx\n   18d92:\t89 c1                \tmov    %eax,%ecx\n   18d94:\t48 d3 ea             \tshr    %cl,%rdx\n   18d97:\t48 89 d0             \tmov    %rdx,%rax\n   18d9a:\t83 e0 01             \tand    $0x1,%eax\n   18d9d:\t48 85 c0             \ttest   %rax,%rax\n   18da0:\t75 0c                \tjne    18dae <mem_sharing_add_to_physmap+0xfc>\n   18da2:\tc7 45 fc f7 ff ff ff \tmovl   $0xfffffff7,-0x4(%rbp)\n   18da9:\te9 93 01 00 00       \tjmpq   18f41 <mem_sharing_add_to_physmap+0x28f>\n   18dae:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 18db5 <mem_sharing_add_to_physmap+0x103>\n   18db5:\t48 8b 08             \tmov    (%rax),%rcx\n   18db8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   18dbc:\t48 ba 00 00 00 00 00 \tmovabs $0x8000000000000000,%rdx\n   18dc3:\t00 00 80 \n   18dc6:\t48 89 ce             \tmov    %rcx,%rsi\n   18dc9:\t48 89 c7             \tmov    %rax,%rdi\n   18dcc:\te8 64 d5 ff ff       \tcallq  16335 <get_page_and_type>\n   18dd1:\t85 c0                \ttest   %eax,%eax\n   18dd3:\t0f 94 c0             \tsete   %al\n   18dd6:\t0f b6 c0             \tmovzbl %al,%eax\n   18dd9:\t48 85 c0             \ttest   %rax,%rax\n   18ddc:\t74 02                \tje     18de0 <mem_sharing_add_to_physmap+0x12e>\n   18dde:\t0f 0b                \tud2    \n   18de0:\t48 8b 95 68 ff ff ff \tmov    -0x98(%rbp),%rdx\n   18de7:\t48 8b 8d 70 ff ff ff \tmov    -0x90(%rbp),%rcx\n   18dee:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   18df2:\t48 89 ce             \tmov    %rcx,%rsi\n   18df5:\t48 89 c7             \tmov    %rax,%rdi\n   18df8:\te8 94 e8 ff ff       \tcallq  17691 <mem_sharing_gfn_alloc>\n   18dfd:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n   18e01:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n   18e06:\t75 18                \tjne    18e20 <mem_sharing_add_to_physmap+0x16e>\n   18e08:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   18e0c:\t48 89 c7             \tmov    %rax,%rdi\n   18e0f:\te8 fa d4 ff ff       \tcallq  1630e <put_page_and_type>\n   18e14:\tc7 45 fc f4 ff ff ff \tmovl   $0xfffffff4,-0x4(%rbp)\n   18e1b:\te9 21 01 00 00       \tjmpq   18f41 <mem_sharing_add_to_physmap+0x28f>\n   18e20:\t8b 4d bc             \tmov    -0x44(%rbp),%ecx\n   18e23:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n   18e27:\t48 8b b5 68 ff ff ff \tmov    -0x98(%rbp),%rsi\n   18e2e:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   18e32:\t41 89 c9             \tmov    %ecx,%r9d\n   18e35:\t41 b8 0c 00 00 00    \tmov    $0xc,%r8d\n   18e3b:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n   18e40:\t48 89 c7             \tmov    %rax,%rdi\n   18e43:\te8 00 00 00 00       \tcallq  18e48 <mem_sharing_add_to_physmap+0x196>\n   18e48:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n   18e4b:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n   18e4f:\t74 2b                \tje     18e7c <mem_sharing_add_to_physmap+0x1ca>\n   18e51:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n   18e55:\t48 8b 8d 70 ff ff ff \tmov    -0x90(%rbp),%rcx\n   18e5c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   18e60:\t48 89 ce             \tmov    %rcx,%rsi\n   18e63:\t48 89 c7             \tmov    %rax,%rdi\n   18e66:\te8 9e e8 ff ff       \tcallq  17709 <mem_sharing_gfn_destroy>\n   18e6b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   18e6f:\t48 89 c7             \tmov    %rax,%rdi\n   18e72:\te8 97 d4 ff ff       \tcallq  1630e <put_page_and_type>\n   18e77:\te9 b6 00 00 00       \tjmpq   18f32 <mem_sharing_add_to_physmap+0x280>\n   18e7c:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n   18e7f:\tba 00 0e 00 00       \tmov    $0xe00,%edx\n   18e84:\t89 c1                \tmov    %eax,%ecx\n   18e86:\t48 d3 ea             \tshr    %cl,%rdx\n   18e89:\t48 89 d0             \tmov    %rdx,%rax\n   18e8c:\t83 e0 01             \tand    $0x1,%eax\n   18e8f:\t48 85 c0             \ttest   %rax,%rax\n   18e92:\t0f 84 9a 00 00 00    \tje     18f32 <mem_sharing_add_to_physmap+0x280>\n   18e98:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n   18e9b:\t83 f8 09             \tcmp    $0x9,%eax\n   18e9e:\t0f 84 8e 00 00 00    \tje     18f32 <mem_sharing_add_to_physmap+0x280>\n   18ea4:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n   18eab:\t48 83 c0 5c          \tadd    $0x5c,%rax\n   18eaf:\t48 89 c7             \tmov    %rax,%rdi\n   18eb2:\te8 14 d4 ff ff       \tcallq  162cb <atomic_dec>\n   18eb7:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n   18ebb:\t48 89 c7             \tmov    %rax,%rdi\n   18ebe:\te8 f5 d4 ff ff       \tcallq  163b8 <mfn_x>\n   18ec3:\t48 89 c7             \tmov    %rax,%rdi\n   18ec6:\te8 00 00 00 00       \tcallq  18ecb <mem_sharing_add_to_physmap+0x219>\n   18ecb:\t85 c0                \ttest   %eax,%eax\n   18ecd:\t74 63                \tje     18f32 <mem_sharing_add_to_physmap+0x280>\n   18ecf:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n   18ed3:\t48 89 c7             \tmov    %rax,%rdi\n   18ed6:\te8 dd d4 ff ff       \tcallq  163b8 <mfn_x>\n   18edb:\t48 89 c7             \tmov    %rax,%rdi\n   18ede:\te8 c3 d0 ff ff       \tcallq  15fa6 <pfn_to_pdx>\n   18ee3:\t48 c1 e0 05          \tshl    $0x5,%rax\n   18ee7:\t48 89 c2             \tmov    %rax,%rdx\n   18eea:\t48 b8 00 00 00 00 e0 \tmovabs $0xffff82e000000000,%rax\n   18ef1:\t82 ff ff \n   18ef4:\t48 01 d0             \tadd    %rdx,%rax\n   18ef7:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n   18efb:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n   18f00:\t0f 94 c0             \tsete   %al\n   18f03:\t0f b6 c0             \tmovzbl %al,%eax\n   18f06:\t48 85 c0             \ttest   %rax,%rax\n   18f09:\t74 02                \tje     18f0d <mem_sharing_add_to_physmap+0x25b>\n   18f0b:\t0f 0b                \tud2    \n   18f0d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n   18f11:\t48 83 c0 08          \tadd    $0x8,%rax\n   18f15:\t48 89 c6             \tmov    %rax,%rsi\n   18f18:\tbf 3f 00 00 00       \tmov    $0x3f,%edi\n   18f1d:\te8 5c d0 ff ff       \tcallq  15f7e <test_and_clear_bit>\n   18f22:\t85 c0                \ttest   %eax,%eax\n   18f24:\t74 0c                \tje     18f32 <mem_sharing_add_to_physmap+0x280>\n   18f26:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n   18f2a:\t48 89 c7             \tmov    %rax,%rdi\n   18f2d:\te8 00 00 00 00       \tcallq  18f32 <mem_sharing_add_to_physmap+0x280>\n   18f32:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 18f39 <mem_sharing_add_to_physmap+0x287>\n   18f39:\te8 73 d3 ff ff       \tcallq  162b1 <atomic_inc>\n   18f3e:\teb 01                \tjmp    18f41 <mem_sharing_add_to_physmap+0x28f>\n   18f40:\t90                   \tnop\n   18f41:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   18f45:\t48 89 c7             \tmov    %rax,%rdi\n   18f48:\te8 ea df ff ff       \tcallq  16f37 <mem_sharing_page_unlock>\n   18f4d:\teb 01                \tjmp    18f50 <mem_sharing_add_to_physmap+0x29e>\n   18f4f:\t90                   \tnop\n   18f50:\t48 8d 45 98          \tlea    -0x68(%rbp),%rax\n   18f54:\t48 89 c7             \tmov    %rax,%rdi\n   18f57:\te8 58 d9 ff ff       \tcallq  168b4 <put_two_gfns>\n   18f5c:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n   18f5f:\tc9                   \tleaveq \n   18f60:\tc3                   \tretq   ", "code_s": "__int64 __fastcall mem_sharing_add_to_physmap(_WORD *a1, unsigned __int64 a2,\n                                              __int64 a3, __int64 a4,\n                                              unsigned __int64 a5) {\n  __int64 v5;\n  __int64 v6;\n  unsigned __int64 v7;\n  __int64 v12[Number];\n  unsigned int v13;\n  int v14;\n  int v15;\n  __int64 <span class=\"supfact\">v16</span>;\n  __int64 <span class=\"supfact\">v17</span>;\n  unsigned __int64 v18;\n  __int64 v19;\n  __int64 v20;\n  __int64 v21;\n  unsigned int v22;\n  v22 = Number;\n  v21 = *(_QWORD *)(a4 + Number);\n  get_two_gfns(a1, a2, (char *)&v15, Number L, (char *)&<span class=\"supfact\">v17</span>,\n               (_WORD *)a4, a5, (char *)&v14, (char *)&v13,\n               (char *)&<span class=\"supfact\">v16</span>, Number, v12);\n  v22 = Number;\n  v20 = _grab_shared_page(<span class=\"supfact\">v17</span>);\n  if (v20) {\n    if (v15 != Number)\n      BUG();\n    if (a3 == *(_QWORD *)(*(_QWORD *)v20 + Number L)) {\n      if (((Number >> v14) & Number) != Number) {\n        if (!(unsigned int)get_page_and_type(v20, dom_cow, Number))\n          BUG();\n        v19 = mem_sharing_gfn_alloc(v20, a4, a5);\n        if (v19) {\n          v22 =\n              p2m_set_entry(v21, a5, <span class=\"supfact\">v17</span>, Number, Number, v13);\n          if (v22) {\n            mem_sharing_gfn_destroy(v20, a4, v19);\n            put_page_and_type_0(v20);\n          } else if (((Number >> v14) & Number) != Number && v14 != Number) {\n            atomic_dec_0((volatile signed __int32 *)(a4 + Number));\n            v5 = mfn_x_7(<span class=\"supfact\">v16</span>);\n            if ((unsigned int)_mfn_valid(v5)) {\n              v6 = mfn_x_7(<span class=\"supfact\">v16</span>);\n              v7 = pfn_to_pdx_7(v6);\n              v18 = Number * v7 - Number;\n              if (Number * v7 == Number)\n                BUG();\n              if ((unsigned int)test_and_clear_bit_1(\n                      Number, (volatile signed __int32 *)(v18 + Number)))\n                put_page(v18);\n            }\n          }\n          atomic_inc_0((volatile signed __int32 *)&nr_saved_mfns);\n        } else {\n          put_page_and_type_0(v20);\n          v22 = Number;\n        }\n      } else {\n        v22 = Number;\n      }\n    }\n    mem_sharing_page_unlock(v20);\n  }\n  put_two_gfns(v12);\n  return v22;\n}", "code_t": "int __cdecl mem_sharing_add_to_physmap(domain *sd, unsigned __int64 sgfn,\n                                       shr_handle_t sh, domain *cd,\n                                       unsigned __int64 cgfn) {\n  unsigned __int64 v5;\n  unsigned __int64 v6;\n  unsigned __int64 v7;\n  two_gfns tg;\n  p2m_access_t a;\n  p2m_type_t cmfn_type;\n  p2m_type_t smfn_type;\n  mfn_t <span class=\"supfact\">cmfn</span>;\n  mfn_t <span class=\"supfact\">smfn</span>;\n  page_info *cpage;\n  gfn_info *gfn_info;\n  page_info *spage;\n  p2m_domain *p2m;\n  int ret;\n  ret = Number;\n  p2m = cd->arch.p2m;\n  get_two_gfns(sd, sgfn, &smfn_type, Number L, &<span class=\"supfact\">smfn</span>, cd, cgfn,\n               &cmfn_type, &a, &<span class=\"supfact\">cmfn</span>, Number, &tg);\n  ret = Number;\n  spage = _grab_shared_page(<span class=\"supfact\">smfn</span>);\n  if (spage) {\n    if (smfn_type != p2m_ram_shared)\n      BUG();\n    if (sh == *(_QWORD *)(spage->_anon_0.up + Number)) {\n      if (((Number >> cmfn_type) & Number) != Number) {\n        if (!get_page_and_type(spage, dom_cow, Number))\n          BUG();\n        gfn_info = mem_sharing_gfn_alloc(spage, cd, cgfn);\n        if (gfn_info) {\n          ret = p2m_set_entry(p2m, cgfn, <span class=\"supfact\">smfn</span>, Number,\n                              p2m_ram_shared, a);\n          if (ret) {\n            mem_sharing_gfn_destroy(spage, cd, gfn_info);\n            put_page_and_type_0(spage);\n          } else if (((Number >> cmfn_type) & Number) != Number &&\n                     cmfn_type != p2m_ram_paging_out) {\n            atomic_dec_0(&cd->paged_pages);\n            v5 = mfn_x_7(<span class=\"supfact\">cmfn</span>);\n            if ((unsigned int)_mfn_valid(v5)) {\n              v6 = mfn_x_7(<span class=\"supfact\">cmfn</span>);\n              v7 = pfn_to_pdx_7(v6);\n              cpage = (page_info *)(Number * v7 - Number);\n              if (Number * v7 == Number)\n                BUG();\n              if (test_and_clear_bit_1(Number, &cpage->count_info))\n                put_page(cpage);\n            }\n          }\n          atomic_inc_0(&nr_saved_mfns);\n        } else {\n          put_page_and_type_0(spage);\n          ret = Number;\n        }\n      } else {\n        ret = Number;\n      }\n    }\n    mem_sharing_page_unlock(spage);\n  }\n  put_two_gfns(&tg);\n  return ret;\n}", "var": [{"name": "v17", "type": "unsigned __int64", "ref_name": "smfn", "ref_type": "struct mfn_t { unsigned __int64 mfn; }"}, {"name": "v16", "type": "unsigned __int64", "ref_name": "cmfn", "ref_type": "struct mfn_t { unsigned __int64 mfn; }"}], "body_in_train": false}, {"repo_owner": "krysmopompas", "repo_name": "OpenFrameworks-ng", "path": "krysmopompas/OpenFrameworks-ng/142fa26381d3e9037cb76726690b7a6dd5d4e684dd3fe35f4cc25077ea0c4e96", "path_in_repo": "krysmopompas/OpenFrameworks-ng/extern/trees/poco/Foundation/testsuite/obj/Linux/x86_64/debug_shared/LineEndingConverterTest.o", "objdump": "0000000000000b6e <_ZN23LineEndingConverterTest19testOutputDosToUnixEv>:\n     b6e:\t55                   \tpush   %rbp\n     b6f:\t48 89 e5             \tmov    %rsp,%rbp\n     b72:\t53                   \tpush   %rbx\n     b73:\t48 81 ec b8 03 00 00 \tsub    $0x3b8,%rsp\n     b7a:\t48 89 bd 48 fc ff ff \tmov    %rdi,-0x3b8(%rbp)\n     b81:\t48 8d 85 10 fe ff ff \tlea    -0x1f0(%rbp),%rax\n     b88:\t48 89 c7             \tmov    %rax,%rdi\n     b8b:\te8 00 00 00 00       \tcallq  b90 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x22>\n     b90:\t48 8d 8d 10 fe ff ff \tlea    -0x1f0(%rbp),%rcx\n     b97:\t48 8d 85 70 fc ff ff \tlea    -0x390(%rbp),%rax\n     b9e:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # ba5 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x37>\n     ba5:\t48 89 ce             \tmov    %rcx,%rsi\n     ba8:\t48 89 c7             \tmov    %rax,%rdi\n     bab:\te8 00 00 00 00       \tcallq  bb0 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x42>\n     bb0:\t48 8d 85 70 fc ff ff \tlea    -0x390(%rbp),%rax\n     bb7:\t48 05 90 00 00 00    \tadd    $0x90,%rax\n     bbd:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # bc4 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x56>\n     bc4:\t48 89 c7             \tmov    %rax,%rdi\n     bc7:\te8 00 00 00 00       \tcallq  bcc <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x5e>\n     bcc:\t48 89 c2             \tmov    %rax,%rdx\n     bcf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # bd6 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x68>\n     bd6:\t48 89 c6             \tmov    %rax,%rsi\n     bd9:\t48 89 d7             \tmov    %rdx,%rdi\n     bdc:\te8 00 00 00 00       \tcallq  be1 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x73>\n     be1:\t48 8d 85 50 fc ff ff \tlea    -0x3b0(%rbp),%rax\n     be8:\t48 8d 95 10 fe ff ff \tlea    -0x1f0(%rbp),%rdx\n     bef:\t48 89 d6             \tmov    %rdx,%rsi\n     bf2:\t48 89 c7             \tmov    %rax,%rdi\n     bf5:\te8 00 00 00 00       \tcallq  bfa <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x8c>\n     bfa:\t48 8b 9d 48 fc ff ff \tmov    -0x3b8(%rbp),%rbx\n     c01:\t48 8d 45 bf          \tlea    -0x41(%rbp),%rax\n     c05:\t48 89 c7             \tmov    %rax,%rdi\n     c08:\te8 00 00 00 00       \tcallq  c0d <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x9f>\n     c0d:\t48 8d 55 bf          \tlea    -0x41(%rbp),%rdx\n     c11:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n     c15:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # c1c <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0xae>\n     c1c:\t48 89 c7             \tmov    %rax,%rdi\n     c1f:\te8 00 00 00 00       \tcallq  c24 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0xb6>\n     c24:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n     c28:\t48 89 c7             \tmov    %rax,%rdi\n     c2b:\te8 00 00 00 00       \tcallq  c30 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0xc2>\n     c30:\t48 8d 55 ef          \tlea    -0x11(%rbp),%rdx\n     c34:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n     c38:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # c3f <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0xd1>\n     c3f:\t48 89 c7             \tmov    %rax,%rdi\n     c42:\te8 00 00 00 00       \tcallq  c47 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0xd9>\n     c47:\t48 8d 85 50 fc ff ff \tlea    -0x3b0(%rbp),%rax\n     c4e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # c55 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0xe7>\n     c55:\t48 89 c7             \tmov    %rax,%rdi\n     c58:\te8 00 00 00 00       \tcallq  c5d <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0xef>\n     c5d:\t0f b6 c0             \tmovzbl %al,%eax\n     c60:\t48 8d 4d 90          \tlea    -0x70(%rbp),%rcx\n     c64:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n     c68:\t49 89 c8             \tmov    %rcx,%r8\n     c6b:\tb9 6b 00 00 00       \tmov    $0x6b,%ecx\n     c70:\t89 c6                \tmov    %eax,%esi\n     c72:\t48 89 df             \tmov    %rbx,%rdi\n     c75:\te8 00 00 00 00       \tcallq  c7a <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x10c>\n     c7a:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n     c7e:\t48 89 c7             \tmov    %rax,%rdi\n     c81:\te8 00 00 00 00       \tcallq  c86 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x118>\n     c86:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n     c8a:\t48 89 c7             \tmov    %rax,%rdi\n     c8d:\te8 00 00 00 00       \tcallq  c92 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x124>\n     c92:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n     c96:\t48 89 c7             \tmov    %rax,%rdi\n     c99:\te8 00 00 00 00       \tcallq  c9e <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x130>\n     c9e:\t48 8d 45 bf          \tlea    -0x41(%rbp),%rax\n     ca2:\t48 89 c7             \tmov    %rax,%rdi\n     ca5:\te8 00 00 00 00       \tcallq  caa <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x13c>\n     caa:\t48 8d 85 50 fc ff ff \tlea    -0x3b0(%rbp),%rax\n     cb1:\t48 89 c7             \tmov    %rax,%rdi\n     cb4:\te8 00 00 00 00       \tcallq  cb9 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x14b>\n     cb9:\t48 8d 85 70 fc ff ff \tlea    -0x390(%rbp),%rax\n     cc0:\t48 89 c7             \tmov    %rax,%rdi\n     cc3:\te8 00 00 00 00       \tcallq  cc8 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x15a>\n     cc8:\t48 8d 85 10 fe ff ff \tlea    -0x1f0(%rbp),%rax\n     ccf:\t48 89 c7             \tmov    %rax,%rdi\n     cd2:\te8 00 00 00 00       \tcallq  cd7 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x169>\n     cd7:\teb 7f                \tjmp    d58 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x1ea>\n     cd9:\t48 89 c3             \tmov    %rax,%rbx\n     cdc:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n     ce0:\t48 89 c7             \tmov    %rax,%rdi\n     ce3:\te8 00 00 00 00       \tcallq  ce8 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x17a>\n     ce8:\teb 03                \tjmp    ced <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x17f>\n     cea:\t48 89 c3             \tmov    %rax,%rbx\n     ced:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n     cf1:\t48 89 c7             \tmov    %rax,%rdi\n     cf4:\te8 00 00 00 00       \tcallq  cf9 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x18b>\n     cf9:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n     cfd:\t48 89 c7             \tmov    %rax,%rdi\n     d00:\te8 00 00 00 00       \tcallq  d05 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x197>\n     d05:\teb 03                \tjmp    d0a <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x19c>\n     d07:\t48 89 c3             \tmov    %rax,%rbx\n     d0a:\t48 8d 45 bf          \tlea    -0x41(%rbp),%rax\n     d0e:\t48 89 c7             \tmov    %rax,%rdi\n     d11:\te8 00 00 00 00       \tcallq  d16 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x1a8>\n     d16:\t48 8d 85 50 fc ff ff \tlea    -0x3b0(%rbp),%rax\n     d1d:\t48 89 c7             \tmov    %rax,%rdi\n     d20:\te8 00 00 00 00       \tcallq  d25 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x1b7>\n     d25:\teb 03                \tjmp    d2a <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x1bc>\n     d27:\t48 89 c3             \tmov    %rax,%rbx\n     d2a:\t48 8d 85 70 fc ff ff \tlea    -0x390(%rbp),%rax\n     d31:\t48 89 c7             \tmov    %rax,%rdi\n     d34:\te8 00 00 00 00       \tcallq  d39 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x1cb>\n     d39:\teb 03                \tjmp    d3e <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x1d0>\n     d3b:\t48 89 c3             \tmov    %rax,%rbx\n     d3e:\t48 8d 85 10 fe ff ff \tlea    -0x1f0(%rbp),%rax\n     d45:\t48 89 c7             \tmov    %rax,%rdi\n     d48:\te8 00 00 00 00       \tcallq  d4d <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x1df>\n     d4d:\t48 89 d8             \tmov    %rbx,%rax\n     d50:\t48 89 c7             \tmov    %rax,%rdi\n     d53:\te8 00 00 00 00       \tcallq  d58 <_ZN23LineEndingConverterTest19testOutputDosToUnixEv+0x1ea>\n     d58:\t48 81 c4 b8 03 00 00 \tadd    $0x3b8,%rsp\n     d5f:\t5b                   \tpop    %rbx\n     d60:\t5d                   \tpop    %rbp\n     d61:\tc3                   \tretq   ", "code_s": "__int64 __fastcall LineEndingConverterTest\ntestOutputDosToUnix(LineEndingConverterTest *this) {\n  __int64 v1;\n  unsigned __int8 v2;\n  char <span class=\"supfact\">v4</span>[Number];\n  char v5[Number];\n  __int64 v6;\n  char v7[Number];\n  char v8[Number];\n  char v9;\n  char v10[Number];\n  char v11[Number];\n  std __cxx11\n      basic_ostringstream<char, std char_traits<char>, std allocator<char>>\n          basic_ostringstream(v7);\n  Poco OutputLineEndingConverter OutputLineEndingConverter(\n      v5, v7, &Poco LineEnding NEWLINE_LF [abi:cxx11]);\n  v1 = std operator<<<std char_traits<char>>(&v6, String);\n  std ostream operator<<(v1, &std flush<char, std char_traits<char>>);\n  std __cxx11\n      basic_ostringstream<char, std char_traits<char>, std allocator<char>>\n          str(<span class=\"supfact\">v4</span>, v7);\n  std allocator<char> allocator(&v9);\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(v8, String, &v9);\n  std allocator<char> allocator(v11);\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(v10, String, v11);\n  v2 = std operator==<char>(<span class=\"supfact\">v4</span>, String);\n  CppUnit TestCase assertImplementation(this, v2, v10, Number L, v8);\n  std __cxx11 basic_string<char, std char_traits<char>,\n                           std allocator<char>> ~basic_string(v10);\n  std allocator<char> ~allocator(v11);\n  std __cxx11 basic_string<char, std char_traits<char>,\n                           std allocator<char>> ~basic_string(v8);\n  std allocator<char> ~allocator(&v9);\n  std __cxx11\n      basic_string<char, std char_traits<char>,\n                   std allocator<char>> ~basic_string(<span class=\"supfact\">v4</span>);\n  Poco OutputLineEndingConverter ~OutputLineEndingConverter(\n      (Poco OutputLineEndingConverter *)v5);\n  return std __cxx11\n      basic_ostringstream<char, std char_traits<char>,\n                          std allocator<char>> ~basic_ostringstream(v7);\n}", "code_t": "void __cdecl LineEndingConverterTest\ntestOutputDosToUnix(LineEndingConverterTest *const this) {\n  __int64 v1;\n  bool v2;\n  std string <span class=\"supfact\">result</span>;\n  char v4[Number];\n  __int64 v5;\n  char v6[Number];\n  char v7[Number];\n  char v8;\n  char v9[Number];\n  char v10[Number];\n  std __cxx11\n      basic_ostringstream<char, std char_traits<char>, std allocator<char>>\n          basic_ostringstream(v6);\n  Poco OutputLineEndingConverter OutputLineEndingConverter(\n      v4, v6, &Poco LineEnding NEWLINE_LF [abi:cxx11]);\n  v1 = std operator<<<std char_traits<char>>(&v5, String);\n  std ostream operator<<(v1, &std flush<char, std char_traits<char>>);\n  std __cxx11\n      basic_ostringstream<char, std char_traits<char>, std allocator<char>>\n          str(&<span class=\"supfact\">result</span>, v6);\n  std allocator<char> allocator(&v8);\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(v7, String, &v8);\n  std allocator<char> allocator(v10);\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(v9, String, v10);\n  v2 = std operator==<char>(&<span class=\"supfact\">result</span>, String);\n  CppUnit TestCase assertImplementation(this, v2, v9, Number L, v7);\n  std __cxx11 basic_string<char, std char_traits<char>,\n                           std allocator<char>> ~basic_string(v9);\n  std allocator<char> ~allocator(v10);\n  std __cxx11 basic_string<char, std char_traits<char>,\n                           std allocator<char>> ~basic_string(v7);\n  std allocator<char> ~allocator(&v8);\n  std __cxx11\n      basic_string<char, std char_traits<char>,\n                   std allocator<char>> ~basic_string(&<span class=\"supfact\">result</span>);\n  Poco OutputLineEndingConverter ~OutputLineEndingConverter(\n      (Poco OutputLineEndingConverter *)v4);\n  std __cxx11 basic_ostringstream<char, std char_traits<char>,\n                                  std allocator<char>> ~basic_ostringstream(v6);\n}", "var": [{"name": "v4", "type": "char[32]", "ref_name": "result", "ref_type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}], "body_in_train": false}, {"repo_owner": "jordansissel", "repo_name": "tmux", "path": "jordansissel/tmux/8c54c58ec5c6c45af38e829f1a79d944af77d1a77275700b93d321f9e256a16e", "path_in_repo": "jordansissel/tmux/tags/TMUX_1_0/tmux", "objdump": "00000000004399f4 <window_more_scroll_down>:\n  4399f4:\t55                   \tpush   %rbp\n  4399f5:\t48 89 e5             \tmov    %rsp,%rbp\n  4399f8:\t48 83 ec 30          \tsub    $0x30,%rsp\n  4399fc:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n  439a00:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  439a04:\t48 8b 80 90 01 00 00 \tmov    0x190(%rax),%rax\n  439a0b:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  439a0f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  439a13:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  439a17:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  439a1b:\t8b 50 78             \tmov    0x78(%rax),%edx\n  439a1e:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  439a22:\t8b 40 68             \tmov    0x68(%rax),%eax\n  439a25:\t39 c2                \tcmp    %eax,%edx\n  439a27:\t0f 83 97 00 00 00    \tjae    439ac4 <window_more_scroll_down+0xd0>\n  439a2d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  439a31:\t8b 40 78             \tmov    0x78(%rax),%eax\n  439a34:\t8d 50 01             \tlea    0x1(%rax),%edx\n  439a37:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  439a3b:\t89 50 78             \tmov    %edx,0x78(%rax)\n  439a3e:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n  439a42:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  439a46:\tba 00 00 00 00       \tmov    $0x0,%edx\n  439a4b:\t48 89 ce             \tmov    %rcx,%rsi\n  439a4e:\t48 89 c7             \tmov    %rax,%rdi\n  439a51:\te8 cc 83 fe ff       \tcallq  421e22 <screen_write_start>\n  439a56:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  439a5a:\tba 00 00 00 00       \tmov    $0x0,%edx\n  439a5f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  439a64:\t48 89 c7             \tmov    %rax,%rdi\n  439a67:\te8 aa 9e fe ff       \tcallq  423916 <screen_write_cursormove>\n  439a6c:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  439a70:\tbe 01 00 00 00       \tmov    $0x1,%esi\n  439a75:\t48 89 c7             \tmov    %rax,%rdi\n  439a78:\te8 42 9b fe ff       \tcallq  4235bf <screen_write_deleteline>\n  439a7d:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  439a81:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  439a85:\t8b 40 08             \tmov    0x8(%rax),%eax\n  439a88:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n  439a8b:\t48 8d 4d e0          \tlea    -0x20(%rbp),%rcx\n  439a8f:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  439a93:\t48 89 ce             \tmov    %rcx,%rsi\n  439a96:\t48 89 c7             \tmov    %rax,%rdi\n  439a99:\te8 f1 fb ff ff       \tcallq  43968f <window_more_write_line>\n  439a9e:\t48 8d 4d e0          \tlea    -0x20(%rbp),%rcx\n  439aa2:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  439aa6:\tba 00 00 00 00       \tmov    $0x0,%edx\n  439aab:\t48 89 ce             \tmov    %rcx,%rsi\n  439aae:\t48 89 c7             \tmov    %rax,%rdi\n  439ab1:\te8 d9 fb ff ff       \tcallq  43968f <window_more_write_line>\n  439ab6:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  439aba:\t48 89 c7             \tmov    %rax,%rdi\n  439abd:\te8 ae 83 fe ff       \tcallq  421e70 <screen_write_stop>\n  439ac2:\teb 01                \tjmp    439ac5 <window_more_scroll_down+0xd1>\n  439ac4:\t90                   \tnop\n  439ac5:\tc9                   \tleaveq \n  439ac6:\tc3                   \tretq   ", "code_s": "void __fastcall window_more_scroll_down(_QWORD *a1) {\n  _QWORD <span class=\"supfact\">v1</span>[Number];\n  __int64 v2;\n  __int64 v3;\n  v3 = a1[Number];\n  v2 = v3;\n  if (*(_DWORD *)(v3 + Number) < *(_DWORD *)(v3 + Number)) {\n    ++*(_DWORD *)(v3 + Number);\n    screen_write_start(<span class=\"supfact\">v1</span>, (__int64)a1, Number L);\n    screen_write_cursormove((__int64)<span class=\"supfact\">v1</span>, Number, Number);\n    screen_write_deleteline(<span class=\"supfact\">v1</span>, Number);\n    window_more_write_line(a1, (__int64)<span class=\"supfact\">v1</span>,\n                           *(_DWORD *)(*(_QWORD *)(v2 + Number) + Number L) -\n                               Number);\n    window_more_write_line(a1, (__int64)<span class=\"supfact\">v1</span>, Number);\n    screen_write_stop();\n  }\n}", "code_t": "void __cdecl window_more_scroll_down(window_pane *wp) {\n  screen_write_ctx <span class=\"supfact\">ctx</span>;\n  screen *s;\n  window_more_mode_data *data;\n  data = (window_more_mode_data *)wp->modedata;\n  s = &data->screen;\n  if (data->top < data->list.num) {\n    ++data->top;\n    screen_write_start(&<span class=\"supfact\">ctx</span>, wp, Number L);\n    screen_write_cursormove(&<span class=\"supfact\">ctx</span>, Number, Number);\n    screen_write_deleteline(&<span class=\"supfact\">ctx</span>, Number);\n    window_more_write_line(wp, &<span class=\"supfact\">ctx</span>, s->grid->sy - Number);\n    window_more_write_line(wp, &<span class=\"supfact\">ctx</span>, Number);\n    screen_write_stop(&<span class=\"supfact\">ctx</span>);\n  }\n}", "var": [{"name": "v1", "type": "struct screen_write_ctx { window_pane * wp; screen * s; }", "ref_name": "ctx", "ref_type": "struct screen_write_ctx { window_pane * wp; screen * s; }"}], "body_in_train": false}, {"repo_owner": "naderman", "repo_name": "beanstalkd", "path": "naderman/beanstalkd/b50b29dc2b5fde7c104c355b6dd8b99a0387073b5e71ffeb8bbba62595c321c7", "path_in_repo": "naderman/beanstalkd//linux.o", "objdump": "0000000000000070 <sockwant>:\n  70:\t55                   \tpush   %rbp\n  71:\t48 89 e5             \tmov    %rsp,%rbp\n  74:\t48 83 ec 20          \tsub    $0x20,%rsp\n  78:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  7c:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n  7f:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n  86:\t00 \n  87:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n  8e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  92:\t8b 40 18             \tmov    0x18(%rax),%eax\n  95:\t85 c0                \ttest   %eax,%eax\n  97:\t75 10                \tjne    a9 <sockwant+0x39>\n  99:\t83 7d e4 00          \tcmpl   $0x0,-0x1c(%rbp)\n  9d:\t75 0a                \tjne    a9 <sockwant+0x39>\n  9f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  a4:\te9 87 00 00 00       \tjmpq   130 <sockwant+0xc0>\n  a9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  ad:\t8b 40 18             \tmov    0x18(%rax),%eax\n  b0:\t85 c0                \ttest   %eax,%eax\n  b2:\t75 1a                \tjne    ce <sockwant+0x5e>\n  b4:\t83 7d e4 00          \tcmpl   $0x0,-0x1c(%rbp)\n  b8:\t74 14                \tje     ce <sockwant+0x5e>\n  ba:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  be:\tc7 40 18 01 00 00 00 \tmovl   $0x1,0x18(%rax)\n  c5:\tc7 45 fc 01 00 00 00 \tmovl   $0x1,-0x4(%rbp)\n  cc:\teb 16                \tjmp    e4 <sockwant+0x74>\n  ce:\t83 7d e4 00          \tcmpl   $0x0,-0x1c(%rbp)\n  d2:\t75 09                \tjne    dd <sockwant+0x6d>\n  d4:\tc7 45 fc 02 00 00 00 \tmovl   $0x2,-0x4(%rbp)\n  db:\teb 07                \tjmp    e4 <sockwant+0x74>\n  dd:\tc7 45 fc 03 00 00 00 \tmovl   $0x3,-0x4(%rbp)\n  e4:\t83 7d e4 72          \tcmpl   $0x72,-0x1c(%rbp)\n  e8:\t74 08                \tje     f2 <sockwant+0x82>\n  ea:\t83 7d e4 77          \tcmpl   $0x77,-0x1c(%rbp)\n  ee:\t74 0b                \tje     fb <sockwant+0x8b>\n  f0:\teb 11                \tjmp    103 <sockwant+0x93>\n  f2:\tc7 45 f0 01 00 00 00 \tmovl   $0x1,-0x10(%rbp)\n  f9:\teb 08                \tjmp    103 <sockwant+0x93>\n  fb:\tc7 45 f0 04 00 00 00 \tmovl   $0x4,-0x10(%rbp)\n 102:\t90                   \tnop\n 103:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n 106:\t0d 02 20 00 00       \tor     $0x2002,%eax\n 10b:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n 10e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 112:\t48 89 45 f4          \tmov    %rax,-0xc(%rbp)\n 116:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 11a:\t8b 10                \tmov    (%rax),%edx\n 11c:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 122 <sockwant+0xb2>\n 122:\t48 8d 4d f0          \tlea    -0x10(%rbp),%rcx\n 126:\t8b 75 fc             \tmov    -0x4(%rbp),%esi\n 129:\t89 c7                \tmov    %eax,%edi\n 12b:\te8 00 00 00 00       \tcallq  130 <sockwant+0xc0>\n 130:\tc9                   \tleaveq \n 131:\tc3                   \tretq   ", "code_s": "int __fastcall sockwant(int *a1, int a2) {\n  struct epoll_event <span class=\"supfact\">event</span>;\n  int op;\n  *(_QWORD *)&<span class=\"supfact\">event</span>.events = Number L;\n  HIDWORD(<span class=\"supfact\">event</span>.data.u64) = Number;\n  if (!a1[Number] && !a2)\n    return Number;\n  if (a1[Number] || !a2) {\n    if (a2)\n      op = Number;\n    else\n      op = Number;\n  } else {\n    a1[Number] = Number;\n    op = Number;\n  }\n  if (a2 == Number) {\n    <span class=\"supfact\">event</span>.events = Number;\n  } else if (a2 == Number) {\n    <span class=\"supfact\">event</span>.events = Number;\n  }\n  <span class=\"supfact\">event</span>.events |= Number;\n  <span class=\"supfact\">event</span>.data.u64 = (uint64_t)a1;\n  return epoll_ctl(epfd, op, *a1, &<span class=\"supfact\">event</span>);\n}", "code_t": "int __cdecl sockwant(Socket_0 *s, int rw) {\n  epoll_event <span class=\"supfact\">ev</span>;\n  int op;\n  *(_QWORD *)&<span class=\"supfact\">ev</span>.events = Number L;\n  HIDWORD(<span class=\"supfact\">ev</span>.data.u64) = Number;\n  if (!s->added && !rw)\n    return Number;\n  if (s->added || !rw) {\n    if (rw)\n      op = Number;\n    else\n      op = Number;\n  } else {\n    s->added = Number;\n    op = Number;\n  }\n  if (rw == Number) {\n    <span class=\"supfact\">ev</span>.events = Number;\n  } else if (rw == Number) {\n    <span class=\"supfact\">ev</span>.events = Number;\n  }\n  <span class=\"supfact\">ev</span>.events |= Number;\n  <span class=\"supfact\">ev</span>.data.u64 = (uint64_t)s;\n  return epoll_ctl(epfd, op, s->fd, &<span class=\"supfact\">ev</span>);\n}", "var": [{"name": "event", "type": "struct epoll_event { uint32_t events; epoll_data_t data; }", "ref_name": "ev", "ref_type": "struct epoll_event { uint32_t events; epoll_data_t data; }"}], "body_in_train": false}, {"repo_owner": "jberaud", "repo_name": "joystick_remote", "path": "jberaud/joystick_remote/e29378cf60c4550ec64f1285d94adc093a93abfdfb99d211e92c73f3d153c412", "path_in_repo": "jberaud/joystick_remote//joystick_remote", "objdump": "000000000040139f <microsleep>:\n  40139f:\t55                   \tpush   %rbp\n  4013a0:\t48 89 e5             \tmov    %rsp,%rbp\n  4013a3:\t48 83 ec 20          \tsub    $0x20,%rsp\n  4013a7:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n  4013aa:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n  4013b1:\t00 \n  4013b2:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  4013b5:\t48 69 c0 e8 03 00 00 \timul   $0x3e8,%rax,%rax\n  4013bc:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  4013c0:\t90                   \tnop\n  4013c1:\t48 8d 55 f0          \tlea    -0x10(%rbp),%rdx\n  4013c5:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n  4013c9:\t48 89 d6             \tmov    %rdx,%rsi\n  4013cc:\t48 89 c7             \tmov    %rax,%rdi\n  4013cf:\te8 dc fc ff ff       \tcallq  4010b0 <nanosleep@plt>\n  4013d4:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n  4013d7:\t75 0c                \tjne    4013e5 <microsleep+0x46>\n  4013d9:\te8 72 fc ff ff       \tcallq  401050 <__errno_location@plt>\n  4013de:\t8b 00                \tmov    (%rax),%eax\n  4013e0:\t83 f8 04             \tcmp    $0x4,%eax\n  4013e3:\t74 dc                \tje     4013c1 <microsleep+0x22>\n  4013e5:\t90                   \tnop\n  4013e6:\tc9                   \tleaveq \n  4013e7:\tc3                   \tretq   ", "code_s": "int __fastcall microsleep(unsigned int a1) {\n  int result;\n  struct timespec <span class=\"supfact\">requested_time</span>;\n  <span class=\"supfact\">requested_time</span>.tv_sec = Number L;\n  <span class=\"supfact\">requested_time</span>.tv_nsec = Number L * a1;\n  do {\n    result = nanosleep(&<span class=\"supfact\">requested_time</span>,\n                       &<span class=\"supfact\">requested_time</span>);\n    if (result != Number)\n      break;\n    result = *__errno_location();\n  } while (result == Number);\n  return result;\n}", "code_t": "void __cdecl microsleep(uint32_t usec) {\n  timespec <span class=\"supfact\">ts</span>;\n  <span class=\"supfact\">ts</span>.tv_sec = Number L;\n  <span class=\"supfact\">ts</span>.tv_nsec = Number L * usec;\n  while (nanosleep(&<span class=\"supfact\">ts</span>, &<span class=\"supfact\">ts</span>) == Number &&\n         *__errno_location() == Number)\n    ;\n}", "var": [{"name": "requested_time", "type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }", "ref_name": "ts", "ref_type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }"}], "body_in_train": false}, {"repo_owner": "jberaud", "repo_name": "joystick_remote", "path": "jberaud/joystick_remote/e29378cf60c4550ec64f1285d94adc093a93abfdfb99d211e92c73f3d153c412", "path_in_repo": "jberaud/joystick_remote//joystick_remote", "objdump": "000000000040139f <microsleep>:\n  40139f:\t55                   \tpush   %rbp\n  4013a0:\t48 89 e5             \tmov    %rsp,%rbp\n  4013a3:\t48 83 ec 20          \tsub    $0x20,%rsp\n  4013a7:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n  4013aa:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n  4013b1:\t00 \n  4013b2:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  4013b5:\t48 69 c0 e8 03 00 00 \timul   $0x3e8,%rax,%rax\n  4013bc:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  4013c0:\t90                   \tnop\n  4013c1:\t48 8d 55 f0          \tlea    -0x10(%rbp),%rdx\n  4013c5:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n  4013c9:\t48 89 d6             \tmov    %rdx,%rsi\n  4013cc:\t48 89 c7             \tmov    %rax,%rdi\n  4013cf:\te8 dc fc ff ff       \tcallq  4010b0 <nanosleep@plt>\n  4013d4:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n  4013d7:\t75 0c                \tjne    4013e5 <microsleep+0x46>\n  4013d9:\te8 72 fc ff ff       \tcallq  401050 <__errno_location@plt>\n  4013de:\t8b 00                \tmov    (%rax),%eax\n  4013e0:\t83 f8 04             \tcmp    $0x4,%eax\n  4013e3:\t74 dc                \tje     4013c1 <microsleep+0x22>\n  4013e5:\t90                   \tnop\n  4013e6:\tc9                   \tleaveq \n  4013e7:\tc3                   \tretq   ", "code_s": "int __fastcall microsleep(unsigned int a1) {\n  int result;\n  struct timespec <span class=\"supfact\">requested_time</span>;\n  <span class=\"supfact\">requested_time</span>.tv_sec = Number L;\n  <span class=\"supfact\">requested_time</span>.tv_nsec = Number L * a1;\n  do {\n    result = nanosleep(&<span class=\"supfact\">requested_time</span>,\n                       &<span class=\"supfact\">requested_time</span>);\n    if (result != Number)\n      break;\n    result = *__errno_location();\n  } while (result == Number);\n  return result;\n}", "code_t": "void __cdecl microsleep(uint32_t usec) {\n  timespec <span class=\"supfact\">ts</span>;\n  <span class=\"supfact\">ts</span>.tv_sec = Number L;\n  <span class=\"supfact\">ts</span>.tv_nsec = Number L * usec;\n  while (nanosleep(&<span class=\"supfact\">ts</span>, &<span class=\"supfact\">ts</span>) == Number &&\n         *__errno_location() == Number)\n    ;\n}", "var": [{"name": "requested_time", "type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }", "ref_name": "ts", "ref_type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }"}], "body_in_train": false}, {"repo_owner": "darkspr1te", "repo_name": "s3c44b0x", "path": "darkspr1te/s3c44b0x/c673c653d65eb86c0a698b86f776bd45b12c6c8572a6901ee5c6c122b6c38dc0", "path_in_repo": "darkspr1te/s3c44b0x/uClinux-dist/uClibc/libc/stdlib/div.o", "objdump": "0000000000000000 <div>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n   7:\t89 75 e8             \tmov    %esi,-0x18(%rbp)\n   a:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n   d:\t99                   \tcltd   \n   e:\tf7 7d e8             \tidivl  -0x18(%rbp)\n  11:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n  14:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  17:\t0f af 45 e8          \timul   -0x18(%rbp),%eax\n  1b:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n  1e:\t29 c2                \tsub    %eax,%edx\n  20:\t89 d0                \tmov    %edx,%eax\n  22:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  25:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  29:\t5d                   \tpop    %rbp\n  2a:\tc3                   \tretq   \n", "code_s": "__int64 __fastcall div(int a1, int a2) {\n  __int64 <span class=\"supfact\">v3</span>;\n  LODWORD(<span class=\"supfact\">v3</span>) = a1 / a2;\n  HIDWORD(<span class=\"supfact\">v3</span>) = a1 - a2 * (a1 / a2);\n  return <span class=\"supfact\">v3</span>;\n}", "code_t": "div_t __cdecl div(int numer, int denom) {\n  div_t <span class=\"supfact\">result</span>;\n  <span class=\"supfact\">result</span>.quot = numer / denom;\n  <span class=\"supfact\">result</span>.rem = numer - denom * (numer / denom);\n  return <span class=\"supfact\">result</span>;\n}", "var": [{"name": "v3", "type": "__int64", "ref_name": "result", "ref_type": "struct div_t { int quot; int rem; }"}], "body_in_train": false}, {"repo_owner": "SwooshyCueb", "repo_name": "OSC", "path": "SwooshyCueb/OSC/706b64d3f64fe05ea3002c41234070a6505bb1c84b6828deca958a0ed5da830a", "path_in_repo": "SwooshyCueb/OSC/externs/rocksdb/rocksdb-4.9/db/db_iter.o", "objdump": "0000000000000000 <_ZN7rocksdb16InternalIterator11GetPropertyENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_>:\n   0:\t55                   \tpush   %rbp\n   1:\tbe 03 00 00 00       \tmov    $0x3,%esi\n   6:\t48 89 e5             \tmov    %rsp,%rbp\n   9:\t41 54                \tpush   %r12\n   b:\t49 89 fc             \tmov    %rdi,%r12\n   e:\t48 8d 4d e0          \tlea    -0x20(%rbp),%rcx\n  12:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n  16:\t48 83 ec 28          \tsub    $0x28,%rsp\n  1a:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n  21:\t00 \n  22:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n  29:\t00 \n  2a:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n  31:\t00 \n  32:\t48 c7 45 d8 00 00 00 \tmovq   $0x0,-0x28(%rbp)\n  39:\t00 \n  3a:\te8 00 00 00 00       \tcallq  3f <_ZN7rocksdb16InternalIterator11GetPropertyENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS6_+0x3f>\n  3f:\t48 83 c4 28          \tadd    $0x28,%rsp\n  43:\t4c 89 e0             \tmov    %r12,%rax\n  46:\t41 5c                \tpop    %r12\n  48:\t5d                   \tpop    %rbp\n  49:\tc3                   \tretq   ", "code_s": "__int64 __fastcall rocksdb InternalIterator GetProperty(__int64 a1) {\n  __int64 <span class=\"supfact\">v2</span>[Number];\n  __int64 <span class=\"supfact\">v3</span>[Number];\n  <span class=\"supfact\">v3</span>[Number] = (__int64)&unk_73F5;\n  <span class=\"supfact\">v3</span>[Number] = Number L;\n  <span class=\"supfact\">v2</span>[Number] = (__int64)&unk_73F5;\n  <span class=\"supfact\">v2</span>[Number] = Number L;\n  rocksdb Status Status(a1, Number L, <span class=\"supfact\">v2</span>, <span class=\"supfact\">v3</span>);\n  return a1;\n}", "code_t": "rocksdb InternalIterator *__fastcall rocksdb InternalIterator\nGetProperty(rocksdb InternalIterator *const this, std string *prop) {\n  rocksdb Slice <span class=\"supfact\">v3</span>;\n  rocksdb Slice <span class=\"supfact\">v4</span>;\n  <span class=\"supfact\">v4</span>.data_ = (const char *)&unk_73F5;\n  <span class=\"supfact\">v4</span>.size_ = Number L;\n  <span class=\"supfact\">v3</span>.data_ = (const char *)&unk_73F5;\n  <span class=\"supfact\">v3</span>.size_ = Number L;\n  rocksdb Status Status((rocksdb Status *)this, kNotSupported,\n                        &<span class=\"supfact\">v3</span>, &<span class=\"supfact\">v4</span>);\n  return this;\n}", "var": [{"name": "v3", "type": "struct rocksdb::Slice { const char * data_; size_t size_; }", "ref_name": "v4", "ref_type": "struct rocksdb::Slice { const char * data_; size_t size_; }"}, {"name": "v2", "type": "struct rocksdb::Slice { const char * data_; size_t size_; }", "ref_name": "v3", "ref_type": "struct rocksdb::Slice { const char * data_; size_t size_; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/d4a3e7148b67bff6fe668513f6b0b311eb206e1822da210277eb341beb1dc43d", "path_in_repo": "XanClic/qemu//arm-softmmu/hw/arm/smmuv3.o", "objdump": "000000000000178f <_nocheck__trace_smmuv3_cmdq_cfgi_ste_range>:\n    178f:\t55                   \tpush   %rbp\n    1790:\t48 89 e5             \tmov    %rsp,%rbp\n    1793:\t41 54                \tpush   %r12\n    1795:\t53                   \tpush   %rbx\n    1796:\t48 83 ec 30          \tsub    $0x30,%rsp\n    179a:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n    179d:\t89 75 c8             \tmov    %esi,-0x38(%rbp)\n    17a0:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    17a7:\t00 00 \n    17a9:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    17ad:\t31 c0                \txor    %eax,%eax\n    17af:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 17b5 <_nocheck__trace_smmuv3_cmdq_cfgi_ste_range+0x26>\n    17b5:\t85 c0                \ttest   %eax,%eax\n    17b7:\t0f 95 c0             \tsetne  %al\n    17ba:\t0f b6 c0             \tmovzbl %al,%eax\n    17bd:\t48 85 c0             \ttest   %rax,%rax\n    17c0:\t74 63                \tje     1825 <_nocheck__trace_smmuv3_cmdq_cfgi_ste_range+0x96>\n    17c2:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 17c9 <_nocheck__trace_smmuv3_cmdq_cfgi_ste_range+0x3a>\n    17c9:\t66 85 c0             \ttest   %ax,%ax\n    17cc:\t74 57                \tje     1825 <_nocheck__trace_smmuv3_cmdq_cfgi_ste_range+0x96>\n    17ce:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n    17d3:\te8 79 eb ff ff       \tcallq  351 <qemu_loglevel_mask>\n    17d8:\t84 c0                \ttest   %al,%al\n    17da:\t74 49                \tje     1825 <_nocheck__trace_smmuv3_cmdq_cfgi_ste_range+0x96>\n    17dc:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    17e0:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    17e5:\t48 89 c7             \tmov    %rax,%rdi\n    17e8:\te8 00 00 00 00       \tcallq  17ed <_nocheck__trace_smmuv3_cmdq_cfgi_ste_range+0x5e>\n    17ed:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    17f1:\t49 89 c4             \tmov    %rax,%r12\n    17f4:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    17f8:\t48 89 c3             \tmov    %rax,%rbx\n    17fb:\te8 00 00 00 00       \tcallq  1800 <_nocheck__trace_smmuv3_cmdq_cfgi_ste_range+0x71>\n    1800:\t8b 4d c8             \tmov    -0x38(%rbp),%ecx\n    1803:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    1806:\t41 89 c9             \tmov    %ecx,%r9d\n    1809:\t41 89 d0             \tmov    %edx,%r8d\n    180c:\t4c 89 e1             \tmov    %r12,%rcx\n    180f:\t48 89 da             \tmov    %rbx,%rdx\n    1812:\t89 c6                \tmov    %eax,%esi\n    1814:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 181b <_nocheck__trace_smmuv3_cmdq_cfgi_ste_range+0x8c>\n    181b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1820:\te8 00 00 00 00       \tcallq  1825 <_nocheck__trace_smmuv3_cmdq_cfgi_ste_range+0x96>\n    1825:\t90                   \tnop\n    1826:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    182a:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    1831:\t00 00 \n    1833:\t74 05                \tje     183a <_nocheck__trace_smmuv3_cmdq_cfgi_ste_range+0xab>\n    1835:\te8 00 00 00 00       \tcallq  183a <_nocheck__trace_smmuv3_cmdq_cfgi_ste_range+0xab>\n    183a:\t48 83 c4 30          \tadd    $0x30,%rsp\n    183e:\t5b                   \tpop    %rbx\n    183f:\t41 5c                \tpop    %r12\n    1841:\t5d                   \tpop    %rbp\n    1842:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_smmuv3_cmdq_cfgi_ste_range(\n    unsigned int a1, unsigned int a2) {\n  __suseconds_t v2;\n  __time_t v3;\n  unsigned int v4;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v7;\n  v7 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_SMMUV3_CMDQ_CFGI_STE_RANGE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v2 = <span class=\"supfact\">tv</span>.tv_usec;\n    v3 = <span class=\"supfact\">tv</span>.tv_sec;\n    v4 = qemu_get_thread_id();\n    qemu_log(String, v4, v3, v2, a1, a2);\n  }\n  return __readfsqword(Number) ^ v7;\n}", "code_t": "void __cdecl nocheck__trace_smmuv3_cmdq_cfgi_ste_range(int start, int end) {\n  __suseconds_t v2;\n  __time_t v3;\n  unsigned int v4;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v6;\n  v6 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_SMMUV3_CMDQ_CFGI_STE_RANGE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v2 = <span class=\"supfact\">_now</span>.tv_usec;\n    v3 = <span class=\"supfact\">_now</span>.tv_sec;\n    v4 = qemu_get_thread_id();\n    qemu_log(String, v4, v3, v2, (unsigned int)start, (unsigned int)end);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/bf092b7c48ee8b2a747867da3b84e7b6c5e9416d4b39dc725576f4f177b3d57b", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/drivers/d9final.o", "objdump": "0000000000001c37 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t>:\n    1c37:\t55                   \tpush   %rbp\n    1c38:\t48 89 e5             \tmov    %rsp,%rbp\n    1c3b:\t53                   \tpush   %rbx\n    1c3c:\t48 83 ec 68          \tsub    $0x68,%rsp\n    1c40:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n    1c44:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n    1c48:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    1c4f:\t00 \n    1c50:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n    1c54:\t48 89 c7             \tmov    %rax,%rdi\n    1c57:\te8 00 00 00 00       \tcallq  1c5c <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x25>\n    1c5c:\t48 83 7d 90 00       \tcmpq   $0x0,-0x70(%rbp)\n    1c61:\t75 25                \tjne    1c88 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x51>\n    1c63:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    1c67:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    1c6d:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    1c72:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1c77:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1c7c:\t48 89 c7             \tmov    %rax,%rdi\n    1c7f:\te8 00 00 00 00       \tcallq  1c84 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x4d>\n    1c84:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n    1c88:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 1c8f <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x58>\n    1c8f:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n    1c93:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    1c97:\t41 b8 80 8d 5b 00    \tmov    $0x5b8d80,%r8d\n    1c9d:\t48 89 d1             \tmov    %rdx,%rcx\n    1ca0:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1ca5:\t48 89 c7             \tmov    %rax,%rdi\n    1ca8:\te8 00 00 00 00       \tcallq  1cad <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x76>\n    1cad:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    1cb1:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1cb5:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1cba:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1cbf:\t48 89 c7             \tmov    %rax,%rdi\n    1cc2:\te8 00 00 00 00       \tcallq  1cc7 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x90>\n    1cc7:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1ccb:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1cd0:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    1cd5:\t48 89 c7             \tmov    %rax,%rdi\n    1cd8:\te8 00 00 00 00       \tcallq  1cdd <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0xa6>\n    1cdd:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1ce1:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    1ce6:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1ceb:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1cf0:\t48 89 c7             \tmov    %rax,%rdi\n    1cf3:\te8 00 00 00 00       \tcallq  1cf8 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0xc1>\n    1cf8:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    1cfc:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1d01:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    1d06:\t48 89 c7             \tmov    %rax,%rdi\n    1d09:\te8 00 00 00 00       \tcallq  1d0e <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0xd7>\n    1d0e:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 1d15 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0xde>\n    1d15:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n    1d19:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    1d1d:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    1d23:\t48 89 d1             \tmov    %rdx,%rcx\n    1d26:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1d2b:\t48 89 c7             \tmov    %rax,%rdi\n    1d2e:\te8 00 00 00 00       \tcallq  1d33 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0xfc>\n    1d33:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    1d37:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1d3b:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    1d40:\t48 89 c7             \tmov    %rax,%rdi\n    1d43:\te8 00 00 00 00       \tcallq  1d48 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x111>\n    1d48:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1d4c:\t48 be aa aa 41 ba 3e \tmovabs $0x3b363eba41aaaa,%rsi\n    1d53:\t36 3b 00 \n    1d56:\t48 89 c7             \tmov    %rax,%rdi\n    1d59:\te8 00 00 00 00       \tcallq  1d5e <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x127>\n    1d5e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1d62:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1d67:\t48 89 c7             \tmov    %rax,%rdi\n    1d6a:\te8 00 00 00 00       \tcallq  1d6f <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x138>\n    1d6f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1d73:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    1d78:\t48 89 c7             \tmov    %rax,%rdi\n    1d7b:\te8 00 00 00 00       \tcallq  1d80 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x149>\n    1d80:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1d84:\tba 00 01 00 00       \tmov    $0x100,%edx\n    1d89:\tbe 00 02 00 00       \tmov    $0x200,%esi\n    1d8e:\t48 89 c7             \tmov    %rax,%rdi\n    1d91:\te8 00 00 00 00       \tcallq  1d96 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x15f>\n    1d96:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1d9a:\t41 b8 ef 00 00 00    \tmov    $0xef,%r8d\n    1da0:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n    1da5:\tba ff 01 00 00       \tmov    $0x1ff,%edx\n    1daa:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1daf:\t48 89 c7             \tmov    %rax,%rdi\n    1db2:\te8 00 00 00 00       \tcallq  1db7 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x180>\n    1db7:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1dbb:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1dc0:\t48 89 c7             \tmov    %rax,%rdi\n    1dc3:\te8 00 00 00 00       \tcallq  1dc8 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x191>\n    1dc8:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    1dcc:\t48 c7 40 48 00 00 00 \tmovq   $0x0,0x48(%rax)\n    1dd3:\t00 \n    1dd4:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    1dd8:\tc7 40 50 00 04 00 00 \tmovl   $0x400,0x50(%rax)\n    1ddf:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    1de3:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1de8:\t48 89 c7             \tmov    %rax,%rdi\n    1deb:\te8 00 00 00 00       \tcallq  1df0 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x1b9>\n    1df0:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    1df4:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1df9:\tbe 04 00 00 00       \tmov    $0x4,%esi\n    1dfe:\t48 89 c7             \tmov    %rax,%rdi\n    1e01:\te8 00 00 00 00       \tcallq  1e06 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x1cf>\n    1e06:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 1e0d <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x1d6>\n    1e0d:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n    1e11:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    1e15:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    1e1b:\t48 89 d1             \tmov    %rdx,%rcx\n    1e1e:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1e23:\t48 89 c7             \tmov    %rax,%rdi\n    1e26:\te8 00 00 00 00       \tcallq  1e2b <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x1f4>\n    1e2b:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    1e2f:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # 1e37 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x200>\n    1e36:\t00 \n    1e37:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1e3b:\t66 0f 28 d0          \tmovapd %xmm0,%xmm2\n    1e3f:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n    1e43:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n    1e47:\t48 89 c7             \tmov    %rax,%rdi\n    1e4a:\te8 00 00 00 00       \tcallq  1e4f <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x218>\n    1e4f:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 1e56 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x21f>\n    1e56:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n    1e5a:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    1e5e:\t41 b8 99 9e 36 00    \tmov    $0x369e99,%r8d\n    1e64:\t48 89 d1             \tmov    %rdx,%rcx\n    1e67:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1e6c:\t48 89 c7             \tmov    %rax,%rdi\n    1e6f:\te8 00 00 00 00       \tcallq  1e74 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x23d>\n    1e74:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    1e78:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 1e7f <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x248>\n    1e7f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1e83:\tb9 ff ff 00 00       \tmov    $0xffff,%ecx\n    1e88:\t66 48 0f 6e c2       \tmovq   %rdx,%xmm0\n    1e8d:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1e92:\tbe ff ff 00 00       \tmov    $0xffff,%esi\n    1e97:\t48 89 c7             \tmov    %rax,%rdi\n    1e9a:\te8 00 00 00 00       \tcallq  1e9f <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x268>\n    1e9f:\t48 8b 5d 90          \tmov    -0x70(%rbp),%rbx\n    1ea3:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n    1ea7:\t48 89 c7             \tmov    %rax,%rdi\n    1eaa:\te8 00 00 00 00       \tcallq  1eaf <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x278>\n    1eaf:\t48 89 d8             \tmov    %rbx,%rax\n    1eb2:\teb 1a                \tjmp    1ece <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x297>\n    1eb4:\t48 89 c3             \tmov    %rax,%rbx\n    1eb7:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n    1ebb:\t48 89 c7             \tmov    %rax,%rdi\n    1ebe:\te8 00 00 00 00       \tcallq  1ec3 <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x28c>\n    1ec3:\t48 89 d8             \tmov    %rbx,%rax\n    1ec6:\t48 89 c7             \tmov    %rax,%rdi\n    1ec9:\te8 00 00 00 00       \tcallq  1ece <_ZL32construct_machine_config_d9finalR14machine_configP8device_t+0x297>\n    1ece:\t48 83 c4 68          \tadd    $0x68,%rsp\n    1ed2:\t5b                   \tpop    %rbx\n    1ed3:\t5d                   \tpop    %rbp\n    1ed4:\tc3                   \tretq   ", "code_s": "device_t *__fastcall construct_machine_config_d9final(__int64 a1,\n                                                      device_t *a2) {\n  int v2;\n  __int64 v3;\n  __int64 v4;\n  unsigned __int16 v5;\n  __int16 v6;\n  void(__fastcall * v7)(running_machine *, const unsigned __int8 *);\n  unsigned int v8;\n  device_t *v10;\n  char <span class=\"supfact\">v11</span>[Number];\n  device_execute_interface *v12;\n  v10 = a2;\n  v12 = Number L;\n  astring astring((astring *)<span class=\"supfact\">v11</span>);\n  if (!a2)\n    v10 = (device_t *)machine_config device_add(\n        a1, Number L, String, driver_device_creator<d9final_state>, Number L);\n  v12 = (device_execute_interface *)machine_config device_add(a1, v10, String,\n                                                              Z80, Number L);\n  device_memory_interface static_set_addrmap(v12, Number L,\n                                             construct_address_map_d9final_map);\n  device_memory_interface static_set_addrmap(v12, Number L,\n                                             construct_address_map_d9final_io);\n  device_execute_interface static_set_vblank_int(\n      v12, (device_t *)&irq0_line_hold, (void(__fastcall *)(device_t *))String,\n      Number L, v2);\n  driver_device static_set_callback(v10, Number L, machine_reset_d9final);\n  v12 = (device_execute_interface *)machine_config device_add(a1, v10, String,\n                                                              SCREEN, Number L);\n  screen_device static_set_type(v12, Number L);\n  screen_device static_set_refresh(v12, (device_t *)Number, v3);\n  screen_device static_set_vblank_time(v12, Number L, v4);\n  screen_device static_set_format(v12, Number L);\n  screen_device static_set_size(v12, (device_t *)((char *)&loc_1FF + Number),\n                                Number, v5);\n  screen_device static_set_visarea(v12, Number L, Number, Number, Number, v6);\n  screen_device static_set_screen_update(v12, screen_update_d9final);\n  *(_QWORD *)(a1 + Number) = &gfxdecodeinfo_d9final;\n  *(_DWORD *)(a1 + Number) = Number;\n  driver_device static_set_palette_init(\n      v10, (device_t *)&palette_init_all_black, v7);\n  driver_device static_set_callback(v10, Number L, video_start_d9final);\n  v12 = (device_execute_interface *)machine_config device_add(\n      a1, v10, String, SPEAKER, Number L);\n  speaker_device static_set_position(v12, v10, Number, Number, Number);\n  v12 = (device_execute_interface *)machine_config device_add(a1, v10, String,\n                                                              YM2413, Number L);\n  device_sound_interface static_add_route(v12, (device_t *)Number,\n                                          (unsigned int)String,\n                                          (const char *)Number, Number, v8);\n  astring ~astring((astring *)<span class=\"supfact\">v11</span>);\n  return v10;\n}", "code_t": "device_t *__cdecl construct_machine_config_d9final(machine_config *config,\n                                                   device_t *owner) {\n  void(__fastcall * v2)(address_map *, const device_t *);\n  void(__fastcall * v3)(address_map *, const device_t *);\n  int v4;\n  void(__fastcall * v5)(running_machine *);\n  screen_type_enum v6;\n  __int64 v7;\n  __int64 v8;\n  _bitmap_format v9;\n  unsigned __int16 v10;\n  __int16 v11;\n  unsigned int(__fastcall * v12)(screen_device *, bitmap_t *,\n                                 const _rectangle *);\n  void(__fastcall * v13)(running_machine *, const unsigned __int8 *);\n  void(__fastcall * v14)(running_machine *);\n  unsigned int v15;\n  device_t *ownera;\n  astring <span class=\"supfact\">tempstring</span>;\n  device_t *device;\n  ownera = owner;\n  device = Number L;\n  astring astring(&<span class=\"supfact\">tempstring</span>);\n  if (!owner)\n    ownera = (device_t *)machine_config device_add(\n        config, Number L, String,\n        (device_t * (__fastcall *)(const machine_config *, const char *,\n                                   device_t *, unsigned int))\n            driver_device_creator<d9final_state>,\n        Number);\n  device = (device_t *)machine_config device_add(config, ownera, String, Z80,\n                                                 Number);\n  device_memory_interface static_set_addrmap(\n      device, Number L, (address_spacenum)construct_address_map_d9final_map,\n      v2);\n  device_memory_interface static_set_addrmap(\n      device, (device_t *)((char *)&loc_1 + Number),\n      (address_spacenum)construct_address_map_d9final_io, v3);\n  device_execute_interface static_set_vblank_int(\n      device, (device_t *)&irq0_line_hold,\n      (void(__fastcall *)(device_t *))String, Number L, v4);\n  driver_device static_set_callback(\n      ownera, (device_t *)&loc_1,\n      (driver_device callback_type)machine_reset_d9final, v5);\n  device = (device_t *)machine_config device_add(config, ownera, String, SCREEN,\n                                                 Number);\n  screen_device static_set_type(device, (device_t *)&loc_1, v6);\n  screen_device static_set_refresh(device, (device_t *)Number, v7);\n  screen_device static_set_vblank_time(device, Number L, v8);\n  screen_device static_set_format(device, (device_t *)((char *)&loc_1 + Number),\n                                  v9);\n  screen_device static_set_size(device, (device_t *)((char *)&loc_1FF + Number),\n                                Number, v10);\n  screen_device static_set_visarea(device, Number L, Number, Number, Number,\n                                   v11);\n  screen_device static_set_screen_update(\n      device, (device_t *)screen_update_d9final, v12);\n  config->m_gfxdecodeinfo = gfxdecodeinfo_d9final;\n  config->m_total_colors = Number;\n  driver_device static_set_palette_init(\n      ownera, (device_t *)&palette_init_all_black, v13);\n  driver_device static_set_callback(\n      ownera, (device_t *)&loc_4,\n      (driver_device callback_type)video_start_d9final, v14);\n  device = (device_t *)machine_config device_add(config, ownera, String,\n                                                 SPEAKER, Number);\n  speaker_device static_set_position(device, ownera, Number, Number, Number);\n  device = (device_t *)machine_config device_add(config, ownera, String, YM2413,\n                                                 Number);\n  device_sound_interface static_add_route(device, (device_t *)Number,\n                                          (unsigned int)String,\n                                          (const char *)Number, Number, v15);\n  astring ~astring(&<span class=\"supfact\">tempstring</span>);\n  return ownera;\n}", "var": [{"name": "v11", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "tempstring", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "mDibyo", "repo_name": "py-dlib", "path": "mDibyo/py-dlib/d74674d396f15835bcc4b40e8f72ef79b96db76341a2e1c0bfb6a82ace3d6dc5", "path_in_repo": "mDibyo/py-dlib/dlib/test/array2d.o", "objdump": "0000000000001bb8 <_ZN12_GLOBAL__N_114array2d_tester12perform_testEv>:\n    1bb8:\t55                   \tpush   %rbp\n    1bb9:\t48 89 e5             \tmov    %rsp,%rbp\n    1bbc:\t53                   \tpush   %rbx\n    1bbd:\t48 83 ec 38          \tsub    $0x38,%rsp\n    1bc1:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    1bc5:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1bc9:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1bce:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1bd3:\t48 89 c7             \tmov    %rax,%rdi\n    1bd6:\te8 00 00 00 00       \tcallq  1bdb <_ZN12_GLOBAL__N_114array2d_tester12perform_testEv+0x23>\n    1bdb:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1bdf:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1be4:\t48 89 c7             \tmov    %rax,%rdi\n    1be7:\te8 00 00 00 00       \tcallq  1bec <_ZN12_GLOBAL__N_114array2d_tester12perform_testEv+0x34>\n    1bec:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1bf0:\t48 89 c7             \tmov    %rax,%rdi\n    1bf3:\te8 00 00 00 00       \tcallq  1bf8 <_ZN12_GLOBAL__N_114array2d_tester12perform_testEv+0x40>\n    1bf8:\te8 32 00 00 00       \tcallq  1c2f <_ZN12_GLOBAL__N_119array2d_kernel_testIN4dlib7array2dImNS1_33memory_manager_stateless_kernel_1IcEEEEEEvv>\n    1bfd:\te8 00 00 00 00       \tcallq  1c02 <_ZN12_GLOBAL__N_114array2d_tester12perform_testEv+0x4a>\n    1c02:\te8 f9 e3 ff ff       \tcallq  0 <_ZN12_GLOBAL__N_118test_serializationEv>\n    1c07:\te8 00 00 00 00       \tcallq  1c0c <_ZN12_GLOBAL__N_114array2d_tester12perform_testEv+0x54>\n    1c0c:\teb 1a                \tjmp    1c28 <_ZN12_GLOBAL__N_114array2d_tester12perform_testEv+0x70>\n    1c0e:\t48 89 c3             \tmov    %rax,%rbx\n    1c11:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1c15:\t48 89 c7             \tmov    %rax,%rdi\n    1c18:\te8 00 00 00 00       \tcallq  1c1d <_ZN12_GLOBAL__N_114array2d_tester12perform_testEv+0x65>\n    1c1d:\t48 89 d8             \tmov    %rbx,%rax\n    1c20:\t48 89 c7             \tmov    %rax,%rdi\n    1c23:\te8 00 00 00 00       \tcallq  1c28 <_ZN12_GLOBAL__N_114array2d_tester12perform_testEv+0x70>\n    1c28:\t48 83 c4 38          \tadd    $0x38,%rsp\n    1c2c:\t5b                   \tpop    %rbx\n    1c2d:\t5d                   \tpop    %rbp\n    1c2e:\tc3                   \tretq   ", "code_s": "__int64 __fastcall ` anonymous namespace ' array2d_tester perform_test ( _anonymous_namespace_ array2d_tester * this ) { char <span class=\"supfact\">v2</span> [ Number ] ; dlib logger operator << ( <span class=\"supfact\">v2</span> , & ` anonymous namespace ' dlog , & dlib LINFO ) ;\ndlib logger logger_stream operator<<<char[Number]>(<span class=\"supfact\">v2</span>, String);\ndlib logger logger_stream ~logger_stream((dlib logger logger_stream *)\n                                             <span class=\"supfact\">v2</span>);\n` anonymous namespace ' array2d_kernel_test < dlib array2d < unsigned long , dlib memory_manager_stateless_kernel_1 < char >> > ( ) ; test print_spinner ( ( test * ) <span class=\"supfact\">v2</span> ) ; ` anonymous namespace ' test_serialization(\n    (_anonymous_namespace_ *)<span class=\"supfact\">v2</span>);\nreturn test print_spinner((test *)<span class=\"supfact\">v2</span>);\n}", "code_t": "void __cdecl ` anonymous namespace ' array2d_tester perform_test ( ` anonymous namespace ' array2d_tester * const this ) {\n  dlib logger logger_stream <span class=\"supfact\">v1</span>; dlib logger operator << ( & <span class=\"supfact\">v1</span> , ( const dlib logger * const ) & ` anonymous namespace ' dlog , & dlib LINFO ) ; dlib logger logger_stream operator << < char [ Number ] > ( & <span class=\"supfact\">v1</span> , ( const char ( * ) [ Number ] ) String ) ; dlib logger logger_stream ~ logger_stream ( & <span class=\"supfact\">v1</span> ) ; ` anonymous namespace ' array2d_kernel_test < dlib array2d < unsigned long , dlib memory_manager_stateless_kernel_1 < char >> > ( ) ; test print_spinner ( ( test * ) & <span class=\"supfact\">v1</span> ) ; ` anonymous namespace ' test_serialization ( ) ; test print_spinner ( ( test * ) & <span class=\"supfact\">v1</span> ) ; }", "var": [{"name": "v2", "type": "struct dlib::logger::logger_stream { const dlib::log_level * l; dlib::logger * log; bool been_used; const bool enabled; PADDING (6); }", "ref_name": "v1", "ref_type": "struct dlib::logger::logger_stream { const dlib::log_level * l; dlib::logger * log; bool been_used; const bool enabled; PADDING (6); }"}], "body_in_train": false}, {"repo_owner": "ColinGilbert", "repo_name": "netmap-ipfw", "path": "ColinGilbert/netmap-ipfw/59d01c2ba1fbee8eff60ce9dd37eb86f0b22b78fe4aa0ece26829d101bac9d4f", "path_in_repo": "ColinGilbert/netmap-ipfw/ipfw/dummynet.o", "objdump": "0000000000000241 <list_flow>:\n     241:\t55                   \tpush   %rbp\n     242:\t48 89 e5             \tmov    %rsp,%rbp\n     245:\t53                   \tpush   %rbx\n     246:\t48 81 ec 38 01 00 00 \tsub    $0x138,%rsp\n     24d:\t48 89 bd c8 fe ff ff \tmov    %rdi,-0x138(%rbp)\n     254:\t48 89 b5 c0 fe ff ff \tmov    %rsi,-0x140(%rbp)\n     25b:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n     262:\t00 \n     263:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n     26a:\t48 83 c0 08          \tadd    $0x8,%rax\n     26e:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n     272:\t48 8b 85 c0 fe ff ff \tmov    -0x140(%rbp),%rax\n     279:\t8b 00                \tmov    (%rax),%eax\n     27b:\t85 c0                \ttest   %eax,%eax\n     27d:\t74 20                \tje     29f <list_flow+0x5e>\n     27f:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n     286:\t48 83 c0 08          \tadd    $0x8,%rax\n     28a:\t48 89 c7             \tmov    %rax,%rdi\n     28d:\te8 7e ff ff ff       \tcallq  210 <print_header>\n     292:\t48 8b 85 c0 fe ff ff \tmov    -0x140(%rbp),%rax\n     299:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n     29f:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     2a3:\t0f b6 40 0d          \tmovzbl 0xd(%rax),%eax\n     2a7:\t0f b6 c0             \tmovzbl %al,%eax\n     2aa:\t89 c7                \tmov    %eax,%edi\n     2ac:\te8 00 00 00 00       \tcallq  2b1 <list_flow+0x70>\n     2b1:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     2b5:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     2b9:\t8b 40 34             \tmov    0x34(%rax),%eax\n     2bc:\t85 c0                \ttest   %eax,%eax\n     2be:\t74 07                \tje     2c7 <list_flow+0x86>\n     2c0:\tba 2a 00 00 00       \tmov    $0x2a,%edx\n     2c5:\teb 05                \tjmp    2cc <list_flow+0x8b>\n     2c7:\tba 20 00 00 00       \tmov    $0x20,%edx\n     2cc:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n     2d3:\t8b 40 04             \tmov    0x4(%rax),%eax\n     2d6:\t0f b6 c0             \tmovzbl %al,%eax\n     2d9:\t89 c6                \tmov    %eax,%esi\n     2db:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     2e0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     2e5:\te8 00 00 00 00       \tcallq  2ea <list_flow+0xa9>\n     2ea:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     2ee:\t0f b6 40 0f          \tmovzbl 0xf(%rax),%eax\n     2f2:\t3c 06                \tcmp    $0x6,%al\n     2f4:\t0f 84 c2 00 00 00    \tje     3bc <list_flow+0x17b>\n     2fa:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n     2ff:\t74 1b                \tje     31c <list_flow+0xdb>\n     301:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     305:\t48 8b 00             \tmov    (%rax),%rax\n     308:\t48 89 c6             \tmov    %rax,%rsi\n     30b:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     310:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     315:\te8 00 00 00 00       \tcallq  31a <list_flow+0xd9>\n     31a:\teb 1c                \tjmp    338 <list_flow+0xf7>\n     31c:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     320:\t0f b6 40 0d          \tmovzbl 0xd(%rax),%eax\n     324:\t0f b6 c0             \tmovzbl %al,%eax\n     327:\t89 c6                \tmov    %eax,%esi\n     329:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     32e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     333:\te8 00 00 00 00       \tcallq  338 <list_flow+0xf7>\n     338:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     33c:\t8b 40 04             \tmov    0x4(%rax),%eax\n     33f:\t89 c7                \tmov    %eax,%edi\n     341:\te8 00 00 00 00       \tcallq  346 <list_flow+0x105>\n     346:\t89 85 dc fe ff ff    \tmov    %eax,-0x124(%rbp)\n     34c:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     350:\t0f b7 40 0a          \tmovzwl 0xa(%rax),%eax\n     354:\t0f b7 d8             \tmovzwl %ax,%ebx\n     357:\t8b 85 dc fe ff ff    \tmov    -0x124(%rbp),%eax\n     35d:\t89 c7                \tmov    %eax,%edi\n     35f:\te8 00 00 00 00       \tcallq  364 <list_flow+0x123>\n     364:\t89 da                \tmov    %ebx,%edx\n     366:\t48 89 c6             \tmov    %rax,%rsi\n     369:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     36e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     373:\te8 00 00 00 00       \tcallq  378 <list_flow+0x137>\n     378:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     37c:\t8b 00                \tmov    (%rax),%eax\n     37e:\t89 c7                \tmov    %eax,%edi\n     380:\te8 00 00 00 00       \tcallq  385 <list_flow+0x144>\n     385:\t89 85 dc fe ff ff    \tmov    %eax,-0x124(%rbp)\n     38b:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     38f:\t0f b7 40 08          \tmovzwl 0x8(%rax),%eax\n     393:\t0f b7 d8             \tmovzwl %ax,%ebx\n     396:\t8b 85 dc fe ff ff    \tmov    -0x124(%rbp),%eax\n     39c:\t89 c7                \tmov    %eax,%edi\n     39e:\te8 00 00 00 00       \tcallq  3a3 <list_flow+0x162>\n     3a3:\t89 da                \tmov    %ebx,%edx\n     3a5:\t48 89 c6             \tmov    %rax,%rsi\n     3a8:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     3ad:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     3b2:\te8 00 00 00 00       \tcallq  3b7 <list_flow+0x176>\n     3b7:\te9 c7 00 00 00       \tjmpq   483 <list_flow+0x242>\n     3bc:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n     3c1:\t74 1b                \tje     3de <list_flow+0x19d>\n     3c3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     3c7:\t48 8b 00             \tmov    (%rax),%rax\n     3ca:\t48 89 c6             \tmov    %rax,%rsi\n     3cd:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     3d2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     3d7:\te8 00 00 00 00       \tcallq  3dc <list_flow+0x19b>\n     3dc:\teb 1c                \tjmp    3fa <list_flow+0x1b9>\n     3de:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     3e2:\t0f b6 40 0d          \tmovzbl 0xd(%rax),%eax\n     3e6:\t0f b6 c0             \tmovzbl %al,%eax\n     3e9:\t89 c6                \tmov    %eax,%esi\n     3eb:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     3f0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     3f5:\te8 00 00 00 00       \tcallq  3fa <list_flow+0x1b9>\n     3fa:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     3fe:\t0f b7 40 0a          \tmovzwl 0xa(%rax),%eax\n     402:\t0f b7 d8             \tmovzwl %ax,%ebx\n     405:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     409:\t48 8d 70 20          \tlea    0x20(%rax),%rsi\n     40d:\t48 8d 85 e0 fe ff ff \tlea    -0x120(%rbp),%rax\n     414:\tb9 ff 00 00 00       \tmov    $0xff,%ecx\n     419:\t48 89 c2             \tmov    %rax,%rdx\n     41c:\tbf 0a 00 00 00       \tmov    $0xa,%edi\n     421:\te8 00 00 00 00       \tcallq  426 <list_flow+0x1e5>\n     426:\t48 89 c2             \tmov    %rax,%rdx\n     429:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     42d:\t8b 40 30             \tmov    0x30(%rax),%eax\n     430:\t89 d9                \tmov    %ebx,%ecx\n     432:\t89 c6                \tmov    %eax,%esi\n     434:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     439:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     43e:\te8 00 00 00 00       \tcallq  443 <list_flow+0x202>\n     443:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     447:\t0f b7 40 08          \tmovzwl 0x8(%rax),%eax\n     44b:\t0f b7 d8             \tmovzwl %ax,%ebx\n     44e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     452:\t48 8d 70 10          \tlea    0x10(%rax),%rsi\n     456:\t48 8d 85 e0 fe ff ff \tlea    -0x120(%rbp),%rax\n     45d:\tb9 ff 00 00 00       \tmov    $0xff,%ecx\n     462:\t48 89 c2             \tmov    %rax,%rdx\n     465:\tbf 0a 00 00 00       \tmov    $0xa,%edi\n     46a:\te8 00 00 00 00       \tcallq  46f <list_flow+0x22e>\n     46f:\t89 da                \tmov    %ebx,%edx\n     471:\t48 89 c6             \tmov    %rax,%rsi\n     474:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     479:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     47e:\te8 00 00 00 00       \tcallq  483 <list_flow+0x242>\n     483:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n     48a:\t48 83 c0 40          \tadd    $0x40,%rax\n     48e:\tbe 04 00 00 00       \tmov    $0x4,%esi\n     493:\t48 89 c7             \tmov    %rax,%rdi\n     496:\te8 00 00 00 00       \tcallq  49b <list_flow+0x25a>\n     49b:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n     4a2:\t48 83 c0 48          \tadd    $0x48,%rax\n     4a6:\tbe 08 00 00 00       \tmov    $0x8,%esi\n     4ab:\t48 89 c7             \tmov    %rax,%rdi\n     4ae:\te8 00 00 00 00       \tcallq  4b3 <list_flow+0x272>\n     4b3:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n     4ba:\t8b 48 58             \tmov    0x58(%rax),%ecx\n     4bd:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n     4c4:\t8b 50 54             \tmov    0x54(%rax),%edx\n     4c7:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n     4ce:\t8b 40 50             \tmov    0x50(%rax),%eax\n     4d1:\t89 c6                \tmov    %eax,%esi\n     4d3:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     4d8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     4dd:\te8 00 00 00 00       \tcallq  4e2 <list_flow+0x2a1>\n     4e2:\t90                   \tnop\n     4e3:\t48 81 c4 38 01 00 00 \tadd    $0x138,%rsp\n     4ea:\t5b                   \tpop    %rbx\n     4eb:\t5d                   \tpop    %rbp\n     4ec:\tc3                   \tretq   ", "code_s": "int __fastcall list_flow(_DWORD *a1, _DWORD *a2) {\n  __int64 v2;\n  uint32_t v3;\n  unsigned int v4;\n  char *v5;\n  unsigned int v6;\n  char *v7;\n  unsigned int v8;\n  const char *v9;\n  unsigned int v10;\n  const char *v11;\n  struct in_addr <span class=\"supfact\">in</span>;\n  char buf[Number];\n  uint32_t *v15;\n  struct protoent *v16;\n  v16 = Number L;\n  v15 = a1 + Number;\n  if (*a2) {\n    print_header((__int64)(a1 + Number));\n    *a2 = Number;\n  }\n  v16 = getprotobynumber(*((unsigned __int8 *)v15 + Number));\n  if (v15[Number])\n    v2 = Number L;\n  else\n    v2 = Number L;\n  printf(String, (unsigned __int8)a1[Number], v2);\n  if (*((_BYTE *)v15 + Number) == Number) {\n    if (v16)\n      printf(String, v16->p_name);\n    else\n      printf(String, *((unsigned __int8 *)v15 + Number));\n    v8 = *((unsigned __int16 *)v15 + Number);\n    v9 = inet_ntop(Number, v15 + Number, buf, Number);\n    printf(String, v15[Number], v9, v8);\n    v10 = *((unsigned __int16 *)v15 + Number);\n    v11 = inet_ntop(Number, v15 + Number, buf, Number);\n    printf(String, v11, v10);\n  } else {\n    if (v16)\n      printf(String, v16->p_name);\n    else\n      printf(String, *((unsigned __int8 *)v15 + Number));\n    v3 = htonl(v15[Number]);\n    v4 = *((unsigned __int16 *)v15 + Number);\n    v5 = inet_ntoa((struct in_addr)v3);\n    printf(String, v5, v4);\n    <span class=\"supfact\">in</span>.s_addr = htonl(*v15);\n    v6 = *((unsigned __int16 *)v15 + Number);\n    v7 = inet_ntoa(<span class=\"supfact\">in</span>);\n    printf(String, v7, v6);\n  }\n  pr_u64(a1 + Number, Number L);\n  pr_u64(a1 + Number, Number L);\n  return printf(String, (unsigned int)a1[Number], (unsigned int)a1[Number],\n                (unsigned int)a1[Number]);\n}", "code_t": "void __cdecl list_flow(dn_flow *ni, int *print) {\n  __int64 v2;\n  uint32_t v3;\n  unsigned int v4;\n  char *v5;\n  unsigned int v6;\n  char *v7;\n  unsigned int v8;\n  const char *v9;\n  unsigned int v10;\n  const char *v11;\n  in_addr <span class=\"supfact\">ina</span>;\n  char buff[Number];\n  ipfw_flow_id *id;\n  protoent *pe;\n  pe = Number L;\n  id = &ni->fid;\n  if (*print) {\n    print_header(&ni->fid);\n    *print = Number;\n  }\n  pe = getprotobynumber(id->proto);\n  if (id->extra)\n    v2 = Number L;\n  else\n    v2 = Number L;\n  printf(String, (unsigned __int8)ni->oid.id, v2);\n  if (id->addr_type == Number) {\n    if (pe)\n      printf(String, pe->p_name);\n    else\n      printf(String, id->proto);\n    v8 = id->src_port;\n    v9 = inet_ntop(Number, &id->src_ip6, buff, Number);\n    printf(String, id->flow_id6, v9, v8);\n    v10 = id->dst_port;\n    v11 = inet_ntop(Number, &id->dst_ip6, buff, Number);\n    printf(String, v11, v10);\n  } else {\n    if (pe)\n      printf(String, pe->p_name);\n    else\n      printf(String, id->proto);\n    v3 = htonl(id->src_ip);\n    v4 = id->src_port;\n    v5 = inet_ntoa((struct in_addr)v3);\n    printf(String, v5, v4);\n    <span class=\"supfact\">ina</span>.s_addr = htonl(id->dst_ip);\n    v6 = id->dst_port;\n    v7 = inet_ntoa(<span class=\"supfact\">ina</span>);\n    printf(String, v7, v6);\n  }\n  pr_u64(&ni->tot_pkts, Number L);\n  pr_u64(&ni->tot_bytes, Number L);\n  printf(String, ni->length, ni->len_bytes, ni->drops);\n}", "var": [{"name": "in", "type": "struct in_addr { in_addr_t s_addr; }", "ref_name": "ina", "ref_type": "struct in_addr { in_addr_t s_addr; }"}], "body_in_train": false}, {"repo_owner": "giamteckchoon", "repo_name": "djbdns-ipv6", "path": "giamteckchoon/djbdns-ipv6/49fa39ad4fca16b46e4d05158ac24b8a4cefed76e4464489a30a44573b562ac8", "path_in_repo": "giamteckchoon/djbdns-ipv6//dnstxt", "objdump": "", "code_s": "__int64 __fastcall sub_4055E2(int a1) {\n  char buf;\n  socklen_t len;\n  struct sockaddr <span class=\"supfact\">addr</span>;\n  len = Number;\n  if (getpeername(a1, &<span class=\"supfact\">addr</span>, &len) != Number)\n    return Number L;\n  read(a1, &buf, Number);\n  return Number L;\n}", "code_t": "__int64 __fastcall sub_4055E2(int a1) {\n  char buf;\n  socklen_t len;\n  struct sockaddr <span class=\"supfact\">addr</span>;\n  len = Number;\n  if (getpeername(a1, &<span class=\"supfact\">addr</span>, &len) != Number)\n    return Number L;\n  read(a1, &buf, Number);\n  return Number L;\n}", "var": [{"name": "addr", "type": "struct struct sockaddr { sa_family_t sa_family; char[14] sa_data; }", "ref_name": "addr", "ref_type": "struct struct sockaddr { sa_family_t sa_family; char[14] sa_data; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/3da554e7be727d06ab7f4e2330fe40c06e49dc1c481fc3ec5a772104aacc182a", "path_in_repo": "XanClic/qemu//hw/scsi/megasas.o", "objdump": "0000000000002020 <_nocheck__trace_megasas_command_complete>:\n    2020:\t55                   \tpush   %rbp\n    2021:\t48 89 e5             \tmov    %rsp,%rbp\n    2024:\t41 54                \tpush   %r12\n    2026:\t53                   \tpush   %rbx\n    2027:\t48 83 ec 30          \tsub    $0x30,%rsp\n    202b:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n    202e:\t89 75 c8             \tmov    %esi,-0x38(%rbp)\n    2031:\t89 55 c4             \tmov    %edx,-0x3c(%rbp)\n    2034:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    203b:\t00 00 \n    203d:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    2041:\t31 c0                \txor    %eax,%eax\n    2043:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2049 <_nocheck__trace_megasas_command_complete+0x29>\n    2049:\t85 c0                \ttest   %eax,%eax\n    204b:\t0f 95 c0             \tsetne  %al\n    204e:\t0f b6 c0             \tmovzbl %al,%eax\n    2051:\t48 85 c0             \ttest   %rax,%rax\n    2054:\t74 6f                \tje     20c5 <_nocheck__trace_megasas_command_complete+0xa5>\n    2056:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 205d <_nocheck__trace_megasas_command_complete+0x3d>\n    205d:\t66 85 c0             \ttest   %ax,%ax\n    2060:\t74 63                \tje     20c5 <_nocheck__trace_megasas_command_complete+0xa5>\n    2062:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n    2067:\te8 c1 e7 ff ff       \tcallq  82d <qemu_loglevel_mask>\n    206c:\t84 c0                \ttest   %al,%al\n    206e:\t74 55                \tje     20c5 <_nocheck__trace_megasas_command_complete+0xa5>\n    2070:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    2074:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2079:\t48 89 c7             \tmov    %rax,%rdi\n    207c:\te8 00 00 00 00       \tcallq  2081 <_nocheck__trace_megasas_command_complete+0x61>\n    2081:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    2085:\t49 89 c4             \tmov    %rax,%r12\n    2088:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    208c:\t48 89 c3             \tmov    %rax,%rbx\n    208f:\te8 00 00 00 00       \tcallq  2094 <_nocheck__trace_megasas_command_complete+0x74>\n    2094:\t89 c6                \tmov    %eax,%esi\n    2096:\t8b 4d c8             \tmov    -0x38(%rbp),%ecx\n    2099:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    209c:\t48 83 ec 08          \tsub    $0x8,%rsp\n    20a0:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    20a3:\t50                   \tpush   %rax\n    20a4:\t41 89 c9             \tmov    %ecx,%r9d\n    20a7:\t41 89 d0             \tmov    %edx,%r8d\n    20aa:\t4c 89 e1             \tmov    %r12,%rcx\n    20ad:\t48 89 da             \tmov    %rbx,%rdx\n    20b0:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 20b7 <_nocheck__trace_megasas_command_complete+0x97>\n    20b7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    20bc:\te8 00 00 00 00       \tcallq  20c1 <_nocheck__trace_megasas_command_complete+0xa1>\n    20c1:\t48 83 c4 10          \tadd    $0x10,%rsp\n    20c5:\t90                   \tnop\n    20c6:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    20ca:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    20d1:\t00 00 \n    20d3:\t74 05                \tje     20da <_nocheck__trace_megasas_command_complete+0xba>\n    20d5:\te8 00 00 00 00       \tcallq  20da <_nocheck__trace_megasas_command_complete+0xba>\n    20da:\t48 8d 65 f0          \tlea    -0x10(%rbp),%rsp\n    20de:\t5b                   \tpop    %rbx\n    20df:\t41 5c                \tpop    %r12\n    20e1:\t5d                   \tpop    %rbp\n    20e2:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_megasas_command_complete(\n    unsigned int a1, unsigned int a2, unsigned int a3) {\n  __suseconds_t v3;\n  __time_t v4;\n  unsigned int v5;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v9;\n  v9 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_COMMAND_COMPLETE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v3 = <span class=\"supfact\">tv</span>.tv_usec;\n    v4 = <span class=\"supfact\">tv</span>.tv_sec;\n    v5 = qemu_get_thread_id();\n    qemu_log(String, v5, v4, v3, a1, a2, a3);\n  }\n  return __readfsqword(Number) ^ v9;\n}", "code_t": "void __cdecl nocheck__trace_megasas_command_complete(int cmd, uint32_t status,\n                                                     uint32_t resid) {\n  __suseconds_t v3;\n  __time_t v4;\n  unsigned int v5;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v8;\n  v8 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_COMMAND_COMPLETE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v3 = <span class=\"supfact\">_now</span>.tv_usec;\n    v4 = <span class=\"supfact\">_now</span>.tv_sec;\n    v5 = qemu_get_thread_id();\n    qemu_log(String, v5, v4, v3, (unsigned int)cmd, status, resid);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "mstoilov", "repo_name": "rpatk", "path": "mstoilov/rpatk/37ec2e0abc2a46bb09cdfda162c9811549ab1149b5f4a1b73dc526bed4ef4835", "path_in_repo": "mstoilov/rpatk/rvm/build/unix/arm/out/librvm.so.2.0", "objdump": "000000000000d1a2 <rvm_reg_create_signed>:\n    d1a2:\t55                   \tpush   %rbp\n    d1a3:\t48 89 e5             \tmov    %rsp,%rbp\n    d1a6:\t48 83 ec 20          \tsub    $0x20,%rsp\n    d1aa:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    d1ae:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    d1b2:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n    d1b6:\t48 89 d6             \tmov    %rdx,%rsi\n    d1b9:\t48 89 c7             \tmov    %rax,%rdi\n    d1bc:\te8 0f 71 ff ff       \tcallq  42d0 <rvm_reg_setsigned@plt>\n    d1c1:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    d1c5:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    d1c9:\tc9                   \tleaveq \n    d1ca:\tc3                   \tretq   ", "code_s": "__int64 __fastcall rvm_reg_create_signed(__int64 a1) {\n  __int64 <span class=\"supfact\">v2</span>;\n  rvm_reg_setsigned(&<span class=\"supfact\">v2</span>, a1);\n  return <span class=\"supfact\">v2</span>;\n}", "code_t": "rvmreg_t __cdecl rvm_reg_create_signed(rword l) {\n  rvmreg_t <span class=\"supfact\">r</span>;\n  rvm_reg_setsigned(&<span class=\"supfact\">r</span>, l);\n  return <span class=\"supfact\">r</span>;\n}", "var": [{"name": "v2", "type": "struct rvmreg_t { $8B83D36BBA2B5A9DA35EC761161D149E v; ruint32 size; rvmreg_type_t type; rvmreg_flags_t flags; }", "ref_name": "r", "ref_type": "struct rvmreg_t { $8B83D36BBA2B5A9DA35EC761161D149E v; ruint32 size; rvmreg_type_t type; rvmreg_flags_t flags; }"}], "body_in_train": false}, {"repo_owner": "cleverjiji", "repo_name": "HSPT", "path": "cleverjiji/HSPT/8f32322f615aebafac8f28dbeb1395e93be4272f851d59a24f985233fcd98396", "path_in_repo": "cleverjiji/HSPT/distrib/sdl-1.2.15/src/thread/pthread/SDL_syscond.o", "objdump": "000000000000013f <SDL_CondWaitTimeout>:\n 13f:\t55                   \tpush   %rbp\n 140:\t48 89 e5             \tmov    %rsp,%rbp\n 143:\t48 83 ec 50          \tsub    $0x50,%rsp\n 147:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n 14b:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n 14f:\t89 55 bc             \tmov    %edx,-0x44(%rbp)\n 152:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n 157:\t75 19                \tjne    172 <SDL_CondWaitTimeout+0x33>\n 159:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 15e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 163:\te8 00 00 00 00       \tcallq  168 <SDL_CondWaitTimeout+0x29>\n 168:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n 16d:\te9 ea 00 00 00       \tjmpq   25c <SDL_CondWaitTimeout+0x11d>\n 172:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n 176:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 17b:\t48 89 c7             \tmov    %rax,%rdi\n 17e:\te8 00 00 00 00       \tcallq  183 <SDL_CondWaitTimeout+0x44>\n 183:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 187:\t8b 55 bc             \tmov    -0x44(%rbp),%edx\n 18a:\t89 d2                \tmov    %edx,%edx\n 18c:\t48 69 d2 d3 4d 62 10 \timul   $0x10624dd3,%rdx,%rdx\n 193:\t48 c1 ea 20          \tshr    $0x20,%rdx\n 197:\tc1 ea 06             \tshr    $0x6,%edx\n 19a:\t89 d2                \tmov    %edx,%edx\n 19c:\t48 01 d0             \tadd    %rdx,%rax\n 19f:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n 1a3:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n 1a7:\t8b 55 bc             \tmov    -0x44(%rbp),%edx\n 1aa:\t89 d0                \tmov    %edx,%eax\n 1ac:\t48 69 c0 d3 4d 62 10 \timul   $0x10624dd3,%rax,%rax\n 1b3:\t48 c1 e8 20          \tshr    $0x20,%rax\n 1b7:\tc1 e8 06             \tshr    $0x6,%eax\n 1ba:\t69 c0 e8 03 00 00    \timul   $0x3e8,%eax,%eax\n 1c0:\t29 c2                \tsub    %eax,%edx\n 1c2:\t89 d0                \tmov    %edx,%eax\n 1c4:\t69 c0 e8 03 00 00    \timul   $0x3e8,%eax,%eax\n 1ca:\t89 c0                \tmov    %eax,%eax\n 1cc:\t48 01 c8             \tadd    %rcx,%rax\n 1cf:\t48 69 c0 e8 03 00 00 \timul   $0x3e8,%rax,%rax\n 1d6:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n 1da:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 1de:\t48 3d 00 ca 9a 3b    \tcmp    $0x3b9aca00,%rax\n 1e4:\t7e 1c                \tjle    202 <SDL_CondWaitTimeout+0xc3>\n 1e6:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 1ea:\t48 83 c0 01          \tadd    $0x1,%rax\n 1ee:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n 1f2:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 1f6:\t48 2d 00 ca 9a 3b    \tsub    $0x3b9aca00,%rax\n 1fc:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n 200:\teb 01                \tjmp    203 <SDL_CondWaitTimeout+0xc4>\n 202:\t90                   \tnop\n 203:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n 207:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 20b:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n 20f:\t48 89 ce             \tmov    %rcx,%rsi\n 212:\t48 89 c7             \tmov    %rax,%rdi\n 215:\te8 00 00 00 00       \tcallq  21a <SDL_CondWaitTimeout+0xdb>\n 21a:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 21d:\t83 7d fc 6e          \tcmpl   $0x6e,-0x4(%rbp)\n 221:\t74 14                \tje     237 <SDL_CondWaitTimeout+0xf8>\n 223:\t83 7d fc 6e          \tcmpl   $0x6e,-0x4(%rbp)\n 227:\t7f 17                \tjg     240 <SDL_CondWaitTimeout+0x101>\n 229:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n 22d:\t74 29                \tje     258 <SDL_CondWaitTimeout+0x119>\n 22f:\t83 7d fc 04          \tcmpl   $0x4,-0x4(%rbp)\n 233:\t75 0b                \tjne    240 <SDL_CondWaitTimeout+0x101>\n 235:\teb cc                \tjmp    203 <SDL_CondWaitTimeout+0xc4>\n 237:\tc7 45 fc 01 00 00 00 \tmovl   $0x1,-0x4(%rbp)\n 23e:\teb 19                \tjmp    259 <SDL_CondWaitTimeout+0x11a>\n 240:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 245:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 24a:\te8 00 00 00 00       \tcallq  24f <SDL_CondWaitTimeout+0x110>\n 24f:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n 256:\teb 01                \tjmp    259 <SDL_CondWaitTimeout+0x11a>\n 258:\t90                   \tnop\n 259:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 25c:\tc9                   \tleaveq \n 25d:\tc3                   \tretq   ", "code_s": "__int64 __fastcall SDL_CondWaitTimeout(pthread_cond_t *a1, pthread_mutex_t *a2,\n                                       unsigned int a3) {\n  __int64 result;\n  struct timespec <span class=\"supfact\">abstime</span>;\n  struct timeval <span class=\"supfact\">tv</span>;\n  int v7;\n  if (a1) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    <span class=\"supfact\">abstime</span>.tv_sec = a3 / Number + <span class=\"supfact\">tv</span>.tv_sec;\n    <span class=\"supfact\">abstime</span>.tv_nsec =\n        Number * (<span class=\"supfact\">tv</span>.tv_usec + Number * (a3 % Number));\n    if (<span class=\"supfact\">abstime</span>.tv_nsec > Number) {\n      ++<span class=\"supfact\">abstime</span>.tv_sec;\n      <span class=\"supfact\">abstime</span>.tv_nsec -= Number L;\n    }\n    do {\n      v7 = pthread_cond_timedwait(a1, a2, &<span class=\"supfact\">abstime</span>);\n      if (v7 == Number) {\n        v7 = Number;\n        goto LABEL_12;\n      }\n      if (v7 > Number)\n        break;\n      if (!v7)\n        goto LABEL_12;\n    } while (v7 == Number);\n    SDL_SetError(String);\n    v7 = Number;\n  LABEL_12:\n    result = (unsigned int)v7;\n  } else {\n    SDL_SetError(String);\n    result = Number;\n  }\n  return result;\n}", "code_t": "int __cdecl SDL_CondWaitTimeout(SDL_cond_0 *cond, SDL_mutex_0 *mutex,\n                                Uint32 ms) {\n  int result;\n  timespec <span class=\"supfact\">abstime</span>;\n  timeval <span class=\"supfact\">delta</span>;\n  int retval;\n  if (cond) {\n    gettimeofday(&<span class=\"supfact\">delta</span>, Number L);\n    <span class=\"supfact\">abstime</span>.tv_sec = ms / Number + <span class=\"supfact\">delta</span>.tv_sec;\n    <span class=\"supfact\">abstime</span>.tv_nsec =\n        Number * (<span class=\"supfact\">delta</span>.tv_usec + Number * (ms % Number));\n    if (<span class=\"supfact\">abstime</span>.tv_nsec > Number) {\n      ++<span class=\"supfact\">abstime</span>.tv_sec;\n      <span class=\"supfact\">abstime</span>.tv_nsec -= Number L;\n    }\n    do {\n      retval = pthread_cond_timedwait(&cond->cond, &mutex->id,\n                                      &<span class=\"supfact\">abstime</span>);\n      if (retval == Number) {\n        retval = Number;\n        goto LABEL_12;\n      }\n      if (retval > Number)\n        break;\n      if (!retval)\n        goto LABEL_12;\n    } while (retval == Number);\n    SDL_SetError(String);\n    retval = Number;\n  LABEL_12:\n    result = retval;\n  } else {\n    SDL_SetError(String);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "delta", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}, {"name": "abstime", "type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }", "ref_name": "abstime", "ref_type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }"}], "body_in_train": false}, {"repo_owner": "zeabusTeam", "repo_name": "zeabus-elec-code", "path": "zeabusTeam/zeabus-elec-code/7d697646d0d82fbb0ce0878927cee986e13b8e021e507ace9204ccd783c59482", "path_in_repo": "zeabusTeam/zeabus-elec-code/libftd2xx-x86_64-1.3.6/examples/Simple/simple-static", "objdump": "0000000000411ada <libusb_wait_for_event>:\n  411ada:\t55                   \tpush   %rbp\n  411adb:\t48 89 e5             \tmov    %rsp,%rbp\n  411ade:\t48 83 ec 30          \tsub    $0x30,%rsp\n  411ae2:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n  411ae6:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n  411aea:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n  411aef:\t75 0e                \tjne    411aff <libusb_wait_for_event+0x25>\n  411af1:\t48 8d 05 28 29 01 00 \tlea    0x12928(%rip),%rax        # 424420 <usbi_default_context>\n  411af8:\t48 8b 00             \tmov    (%rax),%rax\n  411afb:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n  411aff:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n  411b04:\t75 2a                \tjne    411b30 <libusb_wait_for_event+0x56>\n  411b06:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  411b0a:\t48 8d 90 a8 01 00 00 \tlea    0x1a8(%rax),%rdx\n  411b11:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  411b15:\t48 05 d0 01 00 00    \tadd    $0x1d0,%rax\n  411b1b:\t48 89 d6             \tmov    %rdx,%rsi\n  411b1e:\t48 89 c7             \tmov    %rax,%rdi\n  411b21:\te8 ca 05 ff ff       \tcallq  4020f0 <pthread_cond_wait@plt>\n  411b26:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  411b2b:\te9 e6 00 00 00       \tjmpq   411c16 <libusb_wait_for_event+0x13c>\n  411b30:\t48 8d 05 89 22 01 00 \tlea    0x12289(%rip),%rax        # 423dc0 <usbi_backend>\n  411b37:\t48 8b 00             \tmov    (%rax),%rax\n  411b3a:\t48 8b 80 d8 00 00 00 \tmov    0xd8(%rax),%rax\n  411b41:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n  411b45:\t48 89 d6             \tmov    %rdx,%rsi\n  411b48:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  411b4d:\tff d0                \tcallq  *%rax\n  411b4f:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  411b52:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n  411b56:\t79 38                \tjns    411b90 <libusb_wait_for_event+0xb6>\n  411b58:\te8 03 05 ff ff       \tcallq  402060 <__errno_location@plt>\n  411b5d:\t8b 10                \tmov    (%rax),%edx\n  411b5f:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  411b63:\t41 89 d0             \tmov    %edx,%r8d\n  411b66:\t48 8d 0d 6b ad 00 00 \tlea    0xad6b(%rip),%rcx        # 41c8d8 <__FUNCTION__.5136+0x118>\n  411b6d:\t48 8d 15 1c b1 00 00 \tlea    0xb11c(%rip),%rdx        # 41cc90 <__FUNCTION__.5436>\n  411b74:\tbe 01 00 00 00       \tmov    $0x1,%esi\n  411b79:\t48 89 c7             \tmov    %rax,%rdi\n  411b7c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  411b81:\te8 2a ca ff ff       \tcallq  40e5b0 <usbi_log>\n  411b86:\tb8 9d ff ff ff       \tmov    $0xffffff9d,%eax\n  411b8b:\te9 86 00 00 00       \tjmpq   411c16 <libusb_wait_for_event+0x13c>\n  411b90:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n  411b94:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  411b98:\t48 8b 00             \tmov    (%rax),%rax\n  411b9b:\t48 01 d0             \tadd    %rdx,%rax\n  411b9e:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n  411ba2:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  411ba6:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  411baa:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  411bae:\t48 69 c0 e8 03 00 00 \timul   $0x3e8,%rax,%rax\n  411bb5:\t48 01 d0             \tadd    %rdx,%rax\n  411bb8:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  411bbc:\teb 1a                \tjmp    411bd8 <libusb_wait_for_event+0xfe>\n  411bbe:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  411bc2:\t48 2d 00 ca 9a 3b    \tsub    $0x3b9aca00,%rax\n  411bc8:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  411bcc:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  411bd0:\t48 83 c0 01          \tadd    $0x1,%rax\n  411bd4:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n  411bd8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  411bdc:\t48 3d ff c9 9a 3b    \tcmp    $0x3b9ac9ff,%rax\n  411be2:\t7f da                \tjg     411bbe <libusb_wait_for_event+0xe4>\n  411be4:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  411be8:\t48 8d b0 a8 01 00 00 \tlea    0x1a8(%rax),%rsi\n  411bef:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  411bf3:\t48 8d 88 d0 01 00 00 \tlea    0x1d0(%rax),%rcx\n  411bfa:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n  411bfe:\t48 89 c2             \tmov    %rax,%rdx\n  411c01:\t48 89 cf             \tmov    %rcx,%rdi\n  411c04:\te8 d7 07 ff ff       \tcallq  4023e0 <pthread_cond_timedwait@plt>\n  411c09:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  411c0c:\t83 7d fc 6e          \tcmpl   $0x6e,-0x4(%rbp)\n  411c10:\t0f 94 c0             \tsete   %al\n  411c13:\t0f b6 c0             \tmovzbl %al,%eax\n  411c16:\tc9                   \tleaveq \n  411c17:\tc3                   \tretq   ", "code_s": "__int64 __fastcall libusb_wait_for_event(__int64 a1, _QWORD *a2) {\n  __int64 result;\n  int *v3;\n  __int64 v4;\n  struct timespec <span class=\"supfact\">abstime</span>;\n  int v6;\n  v4 = a1;\n  if (!a1)\n    v4 = usbi_default_context;\n  if (a2) {\n    v6 = ((__int64(__fastcall *)(__int64, struct timespec *)) *\n          (&linux_usbfs_backend + Number))(Number L, &<span class=\"supfact\">abstime</span>);\n    if (v6 >= Number) {\n      <span class=\"supfact\">abstime</span>.tv_sec += *a2;\n      <span class=\"supfact\">abstime</span>.tv_nsec += Number L * a2[Number];\n      while (<span class=\"supfact\">abstime</span>.tv_nsec > Number) {\n        <span class=\"supfact\">abstime</span>.tv_nsec -= Number L;\n        ++<span class=\"supfact\">abstime</span>.tv_sec;\n      }\n      result = pthread_cond_timedwait((pthread_cond_t *)(v4 + Number),\n                                      (pthread_mutex_t *)(v4 + Number),\n                                      &<span class=\"supfact\">abstime</span>) == Number;\n    } else {\n      v3 = __errno_location();\n      usbi_log((int *)v4, Number, String, String, (unsigned int)*v3);\n      result = Number L;\n    }\n  } else {\n    pthread_cond_wait((pthread_cond_t *)(v4 + Number),\n                      (pthread_mutex_t *)(v4 + Number));\n    result = Number L;\n  }\n  return result;\n}", "code_t": "__int64 __fastcall libusb_wait_for_event(__int64 a1, _QWORD *a2) {\n  __int64 result;\n  int *v3;\n  __int64 v4;\n  struct timespec <span class=\"supfact\">abstime</span>;\n  int v6;\n  v4 = a1;\n  if (!a1)\n    v4 = usbi_default_context;\n  if (a2) {\n    v6 = ((__int64(__fastcall *)(__int64, struct timespec *)) *\n          (&linux_usbfs_backend + Number))(Number L, &<span class=\"supfact\">abstime</span>);\n    if (v6 >= Number) {\n      <span class=\"supfact\">abstime</span>.tv_sec += *a2;\n      <span class=\"supfact\">abstime</span>.tv_nsec += Number L * a2[Number];\n      while (<span class=\"supfact\">abstime</span>.tv_nsec > Number) {\n        <span class=\"supfact\">abstime</span>.tv_nsec -= Number L;\n        ++<span class=\"supfact\">abstime</span>.tv_sec;\n      }\n      result = pthread_cond_timedwait((pthread_cond_t *)(v4 + Number),\n                                      (pthread_mutex_t *)(v4 + Number),\n                                      &<span class=\"supfact\">abstime</span>) == Number;\n    } else {\n      v3 = __errno_location();\n      usbi_log((int *)v4, Number, String, String, (unsigned int)*v3);\n      result = Number L;\n    }\n  } else {\n    pthread_cond_wait((pthread_cond_t *)(v4 + Number),\n                      (pthread_mutex_t *)(v4 + Number));\n    result = Number L;\n  }\n  return result;\n}", "var": [{"name": "abstime", "type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }", "ref_name": "abstime", "ref_type": "struct struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/3da554e7be727d06ab7f4e2330fe40c06e49dc1c481fc3ec5a772104aacc182a", "path_in_repo": "XanClic/qemu//hw/scsi/megasas.o", "objdump": "0000000000000ede <_nocheck__trace_megasas_qf_enqueue>:\n     ede:\t55                   \tpush   %rbp\n     edf:\t48 89 e5             \tmov    %rsp,%rbp\n     ee2:\t41 54                \tpush   %r12\n     ee4:\t53                   \tpush   %rbx\n     ee5:\t48 83 ec 40          \tsub    $0x40,%rsp\n     ee9:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n     eec:\t89 75 c8             \tmov    %esi,-0x38(%rbp)\n     eef:\t48 89 55 c0          \tmov    %rdx,-0x40(%rbp)\n     ef3:\t89 4d bc             \tmov    %ecx,-0x44(%rbp)\n     ef6:\t44 89 45 b8          \tmov    %r8d,-0x48(%rbp)\n     efa:\t44 89 4d b4          \tmov    %r9d,-0x4c(%rbp)\n     efe:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     f05:\t00 00 \n     f07:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     f0b:\t31 c0                \txor    %eax,%eax\n     f0d:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # f13 <_nocheck__trace_megasas_qf_enqueue+0x35>\n     f13:\t85 c0                \ttest   %eax,%eax\n     f15:\t0f 95 c0             \tsetne  %al\n     f18:\t0f b6 c0             \tmovzbl %al,%eax\n     f1b:\t48 85 c0             \ttest   %rax,%rax\n     f1e:\t74 76                \tje     f96 <_nocheck__trace_megasas_qf_enqueue+0xb8>\n     f20:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # f27 <_nocheck__trace_megasas_qf_enqueue+0x49>\n     f27:\t66 85 c0             \ttest   %ax,%ax\n     f2a:\t74 6a                \tje     f96 <_nocheck__trace_megasas_qf_enqueue+0xb8>\n     f2c:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n     f31:\te8 f7 f8 ff ff       \tcallq  82d <qemu_loglevel_mask>\n     f36:\t84 c0                \ttest   %al,%al\n     f38:\t74 5c                \tje     f96 <_nocheck__trace_megasas_qf_enqueue+0xb8>\n     f3a:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     f3e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     f43:\t48 89 c7             \tmov    %rax,%rdi\n     f46:\te8 00 00 00 00       \tcallq  f4b <_nocheck__trace_megasas_qf_enqueue+0x6d>\n     f4b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     f4f:\t49 89 c4             \tmov    %rax,%r12\n     f52:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     f56:\t48 89 c3             \tmov    %rax,%rbx\n     f59:\te8 00 00 00 00       \tcallq  f5e <_nocheck__trace_megasas_qf_enqueue+0x80>\n     f5e:\t89 c6                \tmov    %eax,%esi\n     f60:\t8b 4d c8             \tmov    -0x38(%rbp),%ecx\n     f63:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n     f66:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n     f69:\t50                   \tpush   %rax\n     f6a:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n     f6d:\t50                   \tpush   %rax\n     f6e:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n     f71:\t50                   \tpush   %rax\n     f72:\tff 75 c0             \tpushq  -0x40(%rbp)\n     f75:\t41 89 c9             \tmov    %ecx,%r9d\n     f78:\t41 89 d0             \tmov    %edx,%r8d\n     f7b:\t4c 89 e1             \tmov    %r12,%rcx\n     f7e:\t48 89 da             \tmov    %rbx,%rdx\n     f81:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # f88 <_nocheck__trace_megasas_qf_enqueue+0xaa>\n     f88:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     f8d:\te8 00 00 00 00       \tcallq  f92 <_nocheck__trace_megasas_qf_enqueue+0xb4>\n     f92:\t48 83 c4 20          \tadd    $0x20,%rsp\n     f96:\t90                   \tnop\n     f97:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     f9b:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n     fa2:\t00 00 \n     fa4:\t74 05                \tje     fab <_nocheck__trace_megasas_qf_enqueue+0xcd>\n     fa6:\te8 00 00 00 00       \tcallq  fab <_nocheck__trace_megasas_qf_enqueue+0xcd>\n     fab:\t48 8d 65 f0          \tlea    -0x10(%rbp),%rsp\n     faf:\t5b                   \tpop    %rbx\n     fb0:\t41 5c                \tpop    %r12\n     fb2:\t5d                   \tpop    %rbp\n     fb3:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_megasas_qf_enqueue(\n    unsigned int a1, unsigned int a2, __int64 a3, unsigned int a4,\n    unsigned int a5, unsigned int a6) {\n  __suseconds_t v6;\n  __time_t v7;\n  unsigned int v8;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v15;\n  v15 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_QF_ENQUEUE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v6 = <span class=\"supfact\">tv</span>.tv_usec;\n    v7 = <span class=\"supfact\">tv</span>.tv_sec;\n    v8 = qemu_get_thread_id();\n    qemu_log(String, v8, v7, v6, a1, a2, a3, a4, a5, a6);\n  }\n  return __readfsqword(Number) ^ v15;\n}", "code_t": "void __cdecl nocheck__trace_megasas_qf_enqueue(unsigned int index,\n                                               unsigned int count,\n                                               uint64_t context,\n                                               unsigned int head,\n                                               unsigned int tail, int busy) {\n  __suseconds_t v6;\n  __time_t v7;\n  unsigned int v8;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v14;\n  v14 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_QF_ENQUEUE_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v6 = <span class=\"supfact\">_now</span>.tv_usec;\n    v7 = <span class=\"supfact\">_now</span>.tv_sec;\n    v8 = qemu_get_thread_id();\n    qemu_log(String, v8, v7, v6, index, count, context, head, tail,\n             (unsigned int)busy);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "ardax", "repo_name": "Pellet", "path": "ardax/Pellet/09647a44e76be3cea0c2f9a7241b9e63370114795cc5f1de0c47077caeb8eb9e", "path_in_repo": "ardax/Pellet//CompletionStrategy.o", "objdump": "0000000000004d6e <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv>:\n    4d6e:\t55                   \tpush   %rbp\n    4d6f:\t48 89 e5             \tmov    %rsp,%rbp\n    4d72:\t48 83 ec 40          \tsub    $0x40,%rsp\n    4d76:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    4d7a:\te8 00 00 00 00       \tcallq  4d7f <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x11>\n    4d7f:\t84 c0                \ttest   %al,%al\n    4d81:\t74 4a                \tje     4dcd <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x5f>\n    4d83:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 4d89 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x1b>\n    4d89:\t83 c0 01             \tadd    $0x1,%eax\n    4d8c:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 4d92 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x24>\n    4d92:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    4d99:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 4d9f <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x31>\n    4d9f:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n    4da2:\t7d 15                \tjge    4db9 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x4b>\n    4da4:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    4da9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4dae:\te8 00 00 00 00       \tcallq  4db3 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x45>\n    4db3:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    4db7:\teb e0                \tjmp    4d99 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x2b>\n    4db9:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    4dbe:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    4dc3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4dc8:\te8 00 00 00 00       \tcallq  4dcd <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x5f>\n    4dcd:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    4dd1:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    4dd5:\t48 05 a0 00 00 00    \tadd    $0xa0,%rax\n    4ddb:\t48 89 c7             \tmov    %rax,%rdi\n    4dde:\te8 00 00 00 00       \tcallq  4de3 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x75>\n    4de3:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    4de7:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    4deb:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    4def:\t48 05 a0 00 00 00    \tadd    $0xa0,%rax\n    4df5:\t48 89 c7             \tmov    %rax,%rdi\n    4df8:\te8 00 00 00 00       \tcallq  4dfd <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x8f>\n    4dfd:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    4e01:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n    4e05:\t48 8d 45 d8          \tlea    -0x28(%rbp),%rax\n    4e09:\t48 89 d6             \tmov    %rdx,%rsi\n    4e0c:\t48 89 c7             \tmov    %rax,%rdi\n    4e0f:\te8 00 00 00 00       \tcallq  4e14 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0xa6>\n    4e14:\t84 c0                \ttest   %al,%al\n    4e16:\t0f 84 88 00 00 00    \tje     4ea4 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x136>\n    4e1c:\t48 8d 45 d8          \tlea    -0x28(%rbp),%rax\n    4e20:\t48 89 c7             \tmov    %rax,%rdi\n    4e23:\te8 00 00 00 00       \tcallq  4e28 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0xba>\n    4e28:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    4e2c:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    4e30:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    4e34:\t48 8b 00             \tmov    (%rax),%rax\n    4e37:\t48 83 c0 60          \tadd    $0x60,%rax\n    4e3b:\t48 8b 10             \tmov    (%rax),%rdx\n    4e3e:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    4e42:\t48 89 c7             \tmov    %rax,%rdi\n    4e45:\tff d2                \tcallq  *%rdx\n    4e47:\t83 f0 01             \txor    $0x1,%eax\n    4e4a:\t84 c0                \ttest   %al,%al\n    4e4c:\t75 3e                \tjne    4e8c <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x11e>\n    4e4e:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    4e52:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    4e56:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    4e5a:\t48 8b 00             \tmov    (%rax),%rax\n    4e5d:\t48 05 00 01 00 00    \tadd    $0x100,%rax\n    4e63:\t48 8b 08             \tmov    (%rax),%rcx\n    4e66:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    4e6a:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    4e6e:\t48 89 d6             \tmov    %rdx,%rsi\n    4e71:\t48 89 c7             \tmov    %rax,%rdi\n    4e74:\tff d1                \tcallq  *%rcx\n    4e76:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    4e7a:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    4e7e:\t48 89 c7             \tmov    %rax,%rdi\n    4e81:\te8 00 00 00 00       \tcallq  4e86 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x118>\n    4e86:\t84 c0                \ttest   %al,%al\n    4e88:\t75 19                \tjne    4ea3 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x135>\n    4e8a:\teb 01                \tjmp    4e8d <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x11f>\n    4e8c:\t90                   \tnop\n    4e8d:\t48 8d 45 d8          \tlea    -0x28(%rbp),%rax\n    4e91:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    4e96:\t48 89 c7             \tmov    %rax,%rdi\n    4e99:\te8 00 00 00 00       \tcallq  4e9e <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x130>\n    4e9e:\te9 44 ff ff ff       \tjmpq   4de7 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x79>\n    4ea3:\t90                   \tnop\n    4ea4:\te8 00 00 00 00       \tcallq  4ea9 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x13b>\n    4ea9:\t84 c0                \ttest   %al,%al\n    4eab:\t74 4a                \tje     4ef7 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x189>\n    4ead:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n    4eb4:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 4eba <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x14c>\n    4eba:\t39 45 f8             \tcmp    %eax,-0x8(%rbp)\n    4ebd:\t7d 15                \tjge    4ed4 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x166>\n    4ebf:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    4ec4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4ec9:\te8 00 00 00 00       \tcallq  4ece <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x160>\n    4ece:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n    4ed2:\teb e0                \tjmp    4eb4 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x146>\n    4ed4:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    4ed9:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    4ede:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4ee3:\te8 00 00 00 00       \tcallq  4ee8 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x17a>\n    4ee8:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 4eee <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x180>\n    4eee:\t83 e8 01             \tsub    $0x1,%eax\n    4ef1:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 4ef7 <_ZN18CompletionStrategy28applyChooseRuleOnIndividualsEv+0x189>\n    4ef7:\t90                   \tnop\n    4ef8:\tc9                   \tleaveq \n    4ef9:\tc3                   \tretq   ", "code_s": "__int64 __fastcall CompletionStrategy\napplyChooseRuleOnIndividuals(CompletionStrategy *this) {\n  __int64 result;\n  __int64 <span class=\"supfact\">j</span>;\n  __int64 <span class=\"supfact\">v3</span>[Number];\n  __int64 v4;\n  int k;\n  int i;\n  if ((unsigned __int8)PARAMS_PRINT_DEBUGINFO_INHTML()) {\n    ++g_iCommentIndent;\n    for (i = Number; i < g_iCommentIndent; ++i)\n      printf(String);\n    printf(String, String);\n  }\n  for (<span class=\"supfact\">j</span> =\n           std map<_ExpressionNode_ *, Node *, strCmpExprNode,\n                   std allocator<std pair<_ExpressionNode_ *const, Node *>>>\n               begin(*((_QWORD *)this + Number) + Number L);\n       ; std _Rb_tree_iterator<std pair<_ExpressionNode_ *const, Node *>>\n       operator++(&<span class=\"supfact\">j</span>, Number L)) {\n    <span class=\"supfact\">v3</span>[Number] =\n        std map<_ExpressionNode_ *, Node *, strCmpExprNode,\n                std allocator<std pair<_ExpressionNode_ *const, Node *>>>\n        end(*((_QWORD *)this + Number) + Number L);\n    if (!(unsigned __int8)std operator!=(&<span class=\"supfact\">j</span>,\n                                         <span class=\"supfact\">v3</span>))\n      break;\n    v4 = *(\n        _QWORD\n            *)(std _Rb_tree_iterator<std pair<_ExpressionNode_ *const, Node *>>\n               operator->(&<span class=\"supfact\">j</span>) +\n               Number);\n    if ((*(unsigned __int8(__fastcall **)(__int64))(*(_QWORD *)v4 + Number L))(\n            v4) == Number) {\n      <span class=\"supfact\">v3</span>[Number] = v4;\n      (*(void(__fastcall **)(CompletionStrategy *, __int64))(\n          *(_QWORD *)this + Number L))(this, v4);\n      if ((unsigned __int8)ABox isClosed(*((ABox **)this + Number)))\n        break;\n    }\n  }\n  result = PARAMS_PRINT_DEBUGINFO_INHTML();\n  if ((_BYTE)result) {\n    for (k = Number; k < g_iCommentIndent; ++k)\n      printf(String);\n    printf(String);\n    result = (unsigned int)--g_iCommentIndent;\n  }\n  return result;\n}", "code_t": "void __cdecl CompletionStrategy\napplyChooseRuleOnIndividuals(CompletionStrategy *const this) {\n  std map<_ExpressionNode_ *, Node *, strCmpExprNode,\n          std allocator<std pair<_ExpressionNode_ *const, Node *>>>\n      iterator <span class=\"supfact\">i_0</span>;\n  std _Rb_tree_iterator<std pair<_ExpressionNode_ *const, Node *>> _Self\n      <span class=\"supfact\">__y</span>;\n  Individual *pNode;\n  Node *pN;\n  int i_1;\n  int i;\n  if ((unsigned __int8)PARAMS_PRINT_DEBUGINFO_INHTML()) {\n    ++g_iCommentIndent;\n    for (i = Number; i < g_iCommentIndent; ++i)\n      printf(String);\n    printf(String, String);\n  }\n  for (<span class=\"supfact\">i_0</span>._M_node =\n           std map<_ExpressionNode_ *, Node *, strCmpExprNode,\n                   std allocator<std pair<_ExpressionNode_ *const, Node *>>>\n               begin(&this->m_pABox->m_mNodes)\n                   ._M_node;\n       ; std _Rb_tree_iterator<std pair<_ExpressionNode_ *const, Node *>>\n       operator++(&<span class=\"supfact\">i_0</span>, Number)) {\n    <span class=\"supfact\">__y</span>._M_node =\n        std map<_ExpressionNode_ *, Node *, strCmpExprNode,\n                std allocator<std pair<_ExpressionNode_ *const, Node *>>>\n            end(&this->m_pABox->m_mNodes)._M_node;\n    if (!std operator!=(&<span class=\"supfact\">i_0</span>, &<span class=\"supfact\">__y</span>))\n      break;\n    pN = std _Rb_tree_iterator<std pair<_ExpressionNode_ *const, Node *>>\n         operator->(&<span class=\"supfact\">i_0</span>)->second;\n    if ((*(unsigned __int8(__fastcall **)(Node *))(*(_QWORD *)pN + Number L))(\n            pN) == Number) {\n      pNode = pN;\n      (*((void(__fastcall **)(CompletionStrategy *const,\n                              Node *))this->_vptr_CompletionStrategy +\n         Number))(this, pN);\n      if ((unsigned __int8)ABox isClosed(this->m_pABox))\n        break;\n    }\n  }\n  if ((unsigned __int8)PARAMS_PRINT_DEBUGINFO_INHTML()) {\n    for (i_1 = Number; i_1 < g_iCommentIndent; ++i_1)\n      printf(String);\n    printf(String);\n    --g_iCommentIndent;\n  }\n}", "var": [{"name": "v3", "type": "__unk__", "ref_name": "__y", "ref_type": "struct std::_Rb_tree_iterator<std::pair<_ExpressionNode_* const,Node*> >::_Self { std::_Rb_tree_iterator<std::pair<_ExpressionNode_* const,Node*> >::_Base_ptr _M_node; }"}, {"name": "j", "type": "__unk__", "ref_name": "i_0", "ref_type": "struct std::map<_ExpressionNode_*,Node*,strCmpExprNode,std::allocator<std::pair<_ExpressionNode_* const,Node*> > >::iterator { std::_Rb_tree_iterator<std::pair<_ExpressionNode_* const,Node*> >::_Base_ptr _M_node; }"}], "body_in_train": false}, {"repo_owner": "williswangy", "repo_name": "Operating-System", "path": "williswangy/Operating-System/68f6cb44c199b521a69982905d70484edaf568ed264bee7715e7e20625cfe68f", "path_in_repo": "williswangy/Operating-System/Projects Code/proj1/doit", "objdump": "00000000004024c6 <_Z17printProcessStatsl>:\n  4024c6:\t55                   \tpush   %rbp\n  4024c7:\t48 89 e5             \tmov    %rsp,%rbp\n  4024ca:\t48 81 ec c0 00 00 00 \tsub    $0xc0,%rsp\n  4024d1:\t48 89 bd 48 ff ff ff \tmov    %rdi,-0xb8(%rbp)\n  4024d8:\t48 8d 85 50 ff ff ff \tlea    -0xb0(%rbp),%rax\n  4024df:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  4024e4:\t48 89 c7             \tmov    %rax,%rdi\n  4024e7:\te8 b4 fd ff ff       \tcallq  4022a0 <gettimeofday@plt>\n  4024ec:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n  4024f3:\t48 69 f0 e8 03 00 00 \timul   $0x3e8,%rax,%rsi\n  4024fa:\t48 8b 8d 58 ff ff ff \tmov    -0xa8(%rbp),%rcx\n  402501:\t48 ba cf f7 53 e3 a5 \tmovabs $0x20c49ba5e353f7cf,%rdx\n  402508:\t9b c4 20 \n  40250b:\t48 89 c8             \tmov    %rcx,%rax\n  40250e:\t48 f7 ea             \timul   %rdx\n  402511:\t48 c1 fa 07          \tsar    $0x7,%rdx\n  402515:\t48 89 c8             \tmov    %rcx,%rax\n  402518:\t48 c1 f8 3f          \tsar    $0x3f,%rax\n  40251c:\t48 29 c2             \tsub    %rax,%rdx\n  40251f:\t48 89 d0             \tmov    %rdx,%rax\n  402522:\t48 01 f0             \tadd    %rsi,%rax\n  402525:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  402529:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n  402530:\t48 89 c6             \tmov    %rax,%rsi\n  402533:\tbf ff ff ff ff       \tmov    $0xffffffff,%edi\n  402538:\te8 e3 fb ff ff       \tcallq  402120 <getrusage@plt>\n  40253d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  402541:\t48 2b 85 48 ff ff ff \tsub    -0xb8(%rbp),%rax\n  402548:\t48 89 c6             \tmov    %rax,%rsi\n  40254b:\tbf 0b 50 40 00       \tmov    $0x40500b,%edi\n  402550:\te8 dd fe ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  402555:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n  40255c:\t48 69 f0 e8 03 00 00 \timul   $0x3e8,%rax,%rsi\n  402563:\t48 8b 8d 68 ff ff ff \tmov    -0x98(%rbp),%rcx\n  40256a:\t48 ba cf f7 53 e3 a5 \tmovabs $0x20c49ba5e353f7cf,%rdx\n  402571:\t9b c4 20 \n  402574:\t48 89 c8             \tmov    %rcx,%rax\n  402577:\t48 f7 ea             \timul   %rdx\n  40257a:\t48 c1 fa 07          \tsar    $0x7,%rdx\n  40257e:\t48 89 c8             \tmov    %rcx,%rax\n  402581:\t48 c1 f8 3f          \tsar    $0x3f,%rax\n  402585:\t48 29 c2             \tsub    %rax,%rdx\n  402588:\t48 89 d0             \tmov    %rdx,%rax\n  40258b:\t48 01 f0             \tadd    %rsi,%rax\n  40258e:\t48 89 c6             \tmov    %rax,%rsi\n  402591:\tbf 1d 50 40 00       \tmov    $0x40501d,%edi\n  402596:\te8 97 fe ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  40259b:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n  4025a2:\t48 69 f0 e8 03 00 00 \timul   $0x3e8,%rax,%rsi\n  4025a9:\t48 8b 8d 78 ff ff ff \tmov    -0x88(%rbp),%rcx\n  4025b0:\t48 ba cf f7 53 e3 a5 \tmovabs $0x20c49ba5e353f7cf,%rdx\n  4025b7:\t9b c4 20 \n  4025ba:\t48 89 c8             \tmov    %rcx,%rax\n  4025bd:\t48 f7 ea             \timul   %rdx\n  4025c0:\t48 c1 fa 07          \tsar    $0x7,%rdx\n  4025c4:\t48 89 c8             \tmov    %rcx,%rax\n  4025c7:\t48 c1 f8 3f          \tsar    $0x3f,%rax\n  4025cb:\t48 29 c2             \tsub    %rax,%rdx\n  4025ce:\t48 89 d0             \tmov    %rdx,%rax\n  4025d1:\t48 01 f0             \tadd    %rsi,%rax\n  4025d4:\t48 89 c6             \tmov    %rax,%rsi\n  4025d7:\tbf 2c 50 40 00       \tmov    $0x40502c,%edi\n  4025dc:\te8 51 fe ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  4025e1:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n  4025e5:\t48 89 c6             \tmov    %rax,%rsi\n  4025e8:\tbf 3d 50 40 00       \tmov    $0x40503d,%edi\n  4025ed:\te8 40 fe ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  4025f2:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n  4025f6:\t48 89 c6             \tmov    %rax,%rsi\n  4025f9:\tbf 46 50 40 00       \tmov    $0x405046,%edi\n  4025fe:\te8 2f fe ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  402603:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  402607:\t48 89 c6             \tmov    %rax,%rsi\n  40260a:\tbf 63 50 40 00       \tmov    $0x405063,%edi\n  40260f:\te8 1e fe ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  402614:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n  402618:\t48 89 c6             \tmov    %rax,%rsi\n  40261b:\tbf 80 50 40 00       \tmov    $0x405080,%edi\n  402620:\te8 0d fe ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  402625:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  402629:\t48 89 c6             \tmov    %rax,%rsi\n  40262c:\tbf 9e 50 40 00       \tmov    $0x40509e,%edi\n  402631:\te8 fc fd ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  402636:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  40263a:\t48 89 c6             \tmov    %rax,%rsi\n  40263d:\tbf ad 50 40 00       \tmov    $0x4050ad,%edi\n  402642:\te8 eb fd ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  402647:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  40264b:\t48 89 c6             \tmov    %rax,%rsi\n  40264e:\tbf ba 50 40 00       \tmov    $0x4050ba,%edi\n  402653:\te8 da fd ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  402658:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  40265c:\t48 89 c6             \tmov    %rax,%rsi\n  40265f:\tbf c1 50 40 00       \tmov    $0x4050c1,%edi\n  402664:\te8 c9 fd ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  402669:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  40266d:\t48 89 c6             \tmov    %rax,%rsi\n  402670:\tbf d9 50 40 00       \tmov    $0x4050d9,%edi\n  402675:\te8 b8 fd ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  40267a:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  40267e:\t48 89 c6             \tmov    %rax,%rsi\n  402681:\tbf f2 50 40 00       \tmov    $0x4050f2,%edi\n  402686:\te8 a7 fd ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  40268b:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  40268f:\t48 89 c6             \tmov    %rax,%rsi\n  402692:\tbf 05 51 40 00       \tmov    $0x405105,%edi\n  402697:\te8 96 fd ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  40269c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  4026a0:\t48 89 c6             \tmov    %rax,%rsi\n  4026a3:\tbf 1c 51 40 00       \tmov    $0x40511c,%edi\n  4026a8:\te8 85 fd ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  4026ad:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  4026b1:\t48 89 c6             \tmov    %rax,%rsi\n  4026b4:\tbf 2e 51 40 00       \tmov    $0x40512e,%edi\n  4026b9:\te8 74 fd ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  4026be:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4026c2:\t48 89 c6             \tmov    %rax,%rsi\n  4026c5:\tbf 4a 51 40 00       \tmov    $0x40514a,%edi\n  4026ca:\te8 63 fd ff ff       \tcallq  402432 <_Z11printStatusPKcl>\n  4026cf:\t90                   \tnop\n  4026d0:\tc9                   \tleaveq \n  4026d1:\tc3                   \tretq   ", "code_s": "__int64 __fastcall printProcessStats() {\n  struct timeval <span class=\"supfact\">tv</span>;\n  struct rusage <span class=\"supfact\">usage</span>;\n  __time_t v3;\n  gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n  v3 = Number * <span class=\"supfact\">tv</span>.tv_sec + <span class=\"supfact\">tv</span>.tv_usec / Number;\n  getrusage(RUSAGE_CHILDREN, &<span class=\"supfact\">usage</span>);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  return printStatus(String);\n}", "code_t": "__int64 __fastcall printProcessStats() {\n  struct timeval <span class=\"supfact\">tv</span>;\n  struct rusage <span class=\"supfact\">usage</span>;\n  __time_t v3;\n  gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n  v3 = Number * <span class=\"supfact\">tv</span>.tv_sec + <span class=\"supfact\">tv</span>.tv_usec / Number;\n  getrusage(RUSAGE_CHILDREN, &<span class=\"supfact\">usage</span>);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  printStatus(String);\n  return printStatus(String);\n}", "var": [{"name": "usage", "type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }", "ref_name": "usage", "ref_type": "struct struct rusage { timeval ru_utime; timeval ru_stime; rusage::$C8E0368DFE215138D5FE989391EDF66A ; rusage::$432FF46A9027D949EED7182447443219 ; rusage::$E7EE59A34ECBA4FFAE4E24E03E23B031 ; rusage::$D61F8409E13EA6E11D92C6D9757A1531 ; rusage::$1358501C97B7AC417CB67978351D7ED8 ; rusage::$BE0BA0CA85EE8DDDB4C2D45E2D812E33 ; rusage::$C0F0170E03C25EB818136FFBEB1A4400 ; rusage::$053CCAE027B5BFCB43679F38B0BBAFFB ; rusage::$9F5E3C17DD7C53B5A698FB11C246C70B ; rusage::$5B25822D21B23C62AAC800B59197C0E9 ; rusage::$C564AC21F6E5BE8C627FEDECB4652ACF ; rusage::$C83E8E9C9ADD361154E0D8EBED847957 ; rusage::$2C815BBF04E92D15CDB4A45E8AD3A3E5 ; rusage::$3B4947AE73BD84433438D8F38CADF7D5 ; }"}, {"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "tv", "ref_type": "struct struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "FireLeaf", "repo_name": "XGame", "path": "FireLeaf/XGame/d0936d3fd267b52202e81dacd5e88fe84ae9b94854c876c137065c03a605cbc3", "path_in_repo": "FireLeaf/XGame/XGame/XSrc/3-Party/openssl/crypto/sha/sha512.o", "objdump": "000000000000088e <SHA384>:\n     88e:\t55                   \tpush   %rbp\n     88f:\t48 89 e5             \tmov    %rsp,%rbp\n     892:\t48 81 ec 00 01 00 00 \tsub    $0x100,%rsp\n     899:\t48 89 bd 18 ff ff ff \tmov    %rdi,-0xe8(%rbp)\n     8a0:\t48 89 b5 10 ff ff ff \tmov    %rsi,-0xf0(%rbp)\n     8a7:\t48 89 95 08 ff ff ff \tmov    %rdx,-0xf8(%rbp)\n     8ae:\t48 83 bd 08 ff ff ff \tcmpq   $0x0,-0xf8(%rbp)\n     8b5:\t00 \n     8b6:\t75 0b                \tjne    8c3 <SHA384+0x35>\n     8b8:\t48 c7 85 08 ff ff ff \tmovq   $0x0,-0xf8(%rbp)\n     8bf:\t00 00 00 00 \n     8c3:\t48 8d 85 20 ff ff ff \tlea    -0xe0(%rbp),%rax\n     8ca:\t48 89 c7             \tmov    %rax,%rdi\n     8cd:\te8 00 00 00 00       \tcallq  8d2 <SHA384+0x44>\n     8d2:\t48 8b 95 10 ff ff ff \tmov    -0xf0(%rbp),%rdx\n     8d9:\t48 8b 8d 18 ff ff ff \tmov    -0xe8(%rbp),%rcx\n     8e0:\t48 8d 85 20 ff ff ff \tlea    -0xe0(%rbp),%rax\n     8e7:\t48 89 ce             \tmov    %rcx,%rsi\n     8ea:\t48 89 c7             \tmov    %rax,%rdi\n     8ed:\te8 00 00 00 00       \tcallq  8f2 <SHA384+0x64>\n     8f2:\t48 8d 95 20 ff ff ff \tlea    -0xe0(%rbp),%rdx\n     8f9:\t48 8b 85 08 ff ff ff \tmov    -0xf8(%rbp),%rax\n     900:\t48 89 d6             \tmov    %rdx,%rsi\n     903:\t48 89 c7             \tmov    %rax,%rdi\n     906:\te8 00 00 00 00       \tcallq  90b <SHA384+0x7d>\n     90b:\t48 8d 85 20 ff ff ff \tlea    -0xe0(%rbp),%rax\n     912:\tbe d8 00 00 00       \tmov    $0xd8,%esi\n     917:\t48 89 c7             \tmov    %rax,%rdi\n     91a:\te8 00 00 00 00       \tcallq  91f <SHA384+0x91>\n     91f:\t48 8b 85 08 ff ff ff \tmov    -0xf8(%rbp),%rax\n     926:\tc9                   \tleaveq \n     927:\tc3                   \tretq   ", "code_s": "_BYTE *__fastcall SHA384(char *a1, size_t a2, _BYTE *a3) {\n  _BYTE *v4;\n  char <span class=\"supfact\">v5</span>[Number];\n  v4 = a3;\n  if (!a3)\n    v4 = &m_4979;\n  SHA384_Init((__int64)<span class=\"supfact\">v5</span>);\n  SHA512_Update((__int64)<span class=\"supfact\">v5</span>, a1, a2);\n  SHA512_Final(v4, (__int64)<span class=\"supfact\">v5</span>);\n  OPENSSL_cleanse(<span class=\"supfact\">v5</span>, Number L);\n  return v4;\n}", "code_t": "unsigned __int8 *__cdecl SHA384(const unsigned __int8 *d, size_t n,\n                                unsigned __int8 *md) {\n  unsigned __int8 *mda;\n  SHA512_CTX <span class=\"supfact\">c</span>;\n  mda = md;\n  if (!md)\n    mda = m_4979;\n  SHA384_Init(&<span class=\"supfact\">c</span>);\n  SHA512_Update(&<span class=\"supfact\">c</span>, d, n);\n  SHA512_Final(mda, &<span class=\"supfact\">c</span>);\n  OPENSSL_cleanse(&<span class=\"supfact\">c</span>, Number L);\n  return mda;\n}", "var": [{"name": "v5", "type": "struct SHA512_CTX { unsigned __int64[8] h; unsigned __int64 Nl; unsigned __int64 Nh; $0AAA0609D5016D809FE36CDE65EE8581 u; unsigned int num; unsigned int md_len; }", "ref_name": "c", "ref_type": "struct SHA512_CTX { unsigned __int64[8] h; unsigned __int64 Nl; unsigned __int64 Nh; $0AAA0609D5016D809FE36CDE65EE8581 u; unsigned int num; unsigned int md_len; }"}], "body_in_train": false}, {"repo_owner": "kjkasi", "repo_name": "030005", "path": "kjkasi/030005/0182fbeb07f5b25ca323532ca8dc50746772e05d797b633188dc1b76361bfc75", "path_in_repo": "kjkasi/030005/ngos/JWNR2000_4EMRUS/SW/opensource/wireless/wpa2/wpa_supplicant/driver_wext.o", "objdump": "000000000000017b <wpa_driver_wext_set_auth_param>:\n     17b:\t55                   \tpush   %rbp\n     17c:\t48 89 e5             \tmov    %rsp,%rbp\n     17f:\t48 83 ec 40          \tsub    $0x40,%rsp\n     183:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n     187:\t89 75 c4             \tmov    %esi,-0x3c(%rbp)\n     18a:\t89 55 c0             \tmov    %edx,-0x40(%rbp)\n     18d:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n     194:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     198:\tba 20 00 00 00       \tmov    $0x20,%edx\n     19d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     1a2:\t48 89 c7             \tmov    %rax,%rdi\n     1a5:\te8 00 00 00 00       \tcallq  1aa <wpa_driver_wext_set_auth_param+0x2f>\n     1aa:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     1ae:\t48 8d 48 14          \tlea    0x14(%rax),%rcx\n     1b2:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     1b6:\tba 10 00 00 00       \tmov    $0x10,%edx\n     1bb:\t48 89 ce             \tmov    %rcx,%rsi\n     1be:\t48 89 c7             \tmov    %rax,%rdi\n     1c1:\te8 00 00 00 00       \tcallq  1c6 <wpa_driver_wext_set_auth_param+0x4b>\n     1c6:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n     1c9:\t66 25 ff 0f          \tand    $0xfff,%ax\n     1cd:\t66 89 45 e6          \tmov    %ax,-0x1a(%rbp)\n     1d1:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n     1d4:\t89 45 e0             \tmov    %eax,-0x20(%rbp)\n     1d7:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     1db:\t8b 40 0c             \tmov    0xc(%rax),%eax\n     1de:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n     1e2:\tbe 32 8b 00 00       \tmov    $0x8b32,%esi\n     1e7:\t89 c7                \tmov    %eax,%edi\n     1e9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     1ee:\te8 00 00 00 00       \tcallq  1f3 <wpa_driver_wext_set_auth_param+0x78>\n     1f3:\t85 c0                \ttest   %eax,%eax\n     1f5:\t79 44                \tjns    23b <wpa_driver_wext_set_auth_param+0xc0>\n     1f7:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     1fc:\te8 00 00 00 00       \tcallq  201 <wpa_driver_wext_set_auth_param+0x86>\n     201:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 208 <wpa_driver_wext_set_auth_param+0x8d>\n     208:\t8b 4d c0             \tmov    -0x40(%rbp),%ecx\n     20b:\t8b 55 c4             \tmov    -0x3c(%rbp),%edx\n     20e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     213:\t48 89 c7             \tmov    %rax,%rdi\n     216:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     21b:\te8 00 00 00 00       \tcallq  220 <wpa_driver_wext_set_auth_param+0xa5>\n     220:\te8 00 00 00 00       \tcallq  225 <wpa_driver_wext_set_auth_param+0xaa>\n     225:\t8b 00                \tmov    (%rax),%eax\n     227:\t83 f8 5f             \tcmp    $0x5f,%eax\n     22a:\t75 07                \tjne    233 <wpa_driver_wext_set_auth_param+0xb8>\n     22c:\tb8 fe ff ff ff       \tmov    $0xfffffffe,%eax\n     231:\teb 05                \tjmp    238 <wpa_driver_wext_set_auth_param+0xbd>\n     233:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n     238:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n     23b:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     23e:\tc9                   \tleaveq \n     23f:\tc3                   \tretq   ", "code_s": "__int64 __fastcall wpa_driver_wext_set_auth_param(__int64 a1, unsigned int a2,\n                                                  unsigned int a3) {\n  unsigned int v3;\n  int <span class=\"supfact\">s</span>[Number];\n  unsigned int v7;\n  v7 = Number;\n  memset(<span class=\"supfact\">s</span>, Number, Number);\n  strncpy((char *)<span class=\"supfact\">s</span>, (const char *)(a1 + Number), Number);\n  HIWORD(<span class=\"supfact\">s</span>[Number]) = a2 & Number;\n  <span class=\"supfact\">s</span>[Number] = a3;\n  if (ioctl(*(_DWORD *)(a1 + Number), Number, <span class=\"supfact\">s</span>) < Number) {\n    perror(String);\n    fprintf(stderr, String, a2, a3);\n    if (*_errno_location() == Number)\n      v3 = Number;\n    else\n      v3 = Number;\n    v7 = v3;\n  }\n  return v7;\n}", "code_t": "int __cdecl wpa_driver_wext_set_auth_param(wpa_driver_wext_data *drv, int idx,\n                                           u32 value) {\n  int v3;\n  iwreq <span class=\"supfact\">iwr</span>;\n  int ret;\n  ret = Number;\n  memset(&<span class=\"supfact\">iwr</span>, Number, sizeof(<span class=\"supfact\">iwr</span>));\n  strncpy(<span class=\"supfact\">iwr</span>.ifr_ifrn.ifrn_name, drv->ifname, Number);\n  <span class=\"supfact\">iwr</span>.u.nwid.flags = idx & Number;\n  <span class=\"supfact\">iwr</span>.u.nwid.value = value;\n  if (ioctl(drv->ioctl_sock, Number, &<span class=\"supfact\">iwr</span>) < Number) {\n    perror(String);\n    fprintf(stderr, String, (unsigned int)idx, value);\n    if (*_errno_location() == Number)\n      v3 = Number;\n    else\n      v3 = Number;\n    ret = v3;\n  }\n  return ret;\n}", "var": [{"name": "s", "type": "struct ifreq { $EC3FB77B1F5CBB3C6B6AB4B4CE5B261D ifr_ifrn; $3766CEB1D20AE6FB37CD7F05C4AF9C4E ifr_ifru; }", "ref_name": "iwr", "ref_type": "struct iwreq { $EC3FB77B1F5CBB3C6B6AB4B4CE5B261D ifr_ifrn; iwreq_data u; }"}], "body_in_train": false}, {"code_s": "void __fastcall DSP56K XMemoryDataMoveWithShortDisplacement\ndisassemble(DSP56K XMemoryDataMoveWithShortDisplacement *this, astring *a2) {\n  char <span class=\"supfact\">v2</span>[Number];\n  char <span class=\"supfact\">v3</span>[Number];\n  operator+(\n      (astring *)<span class=\"supfact\">v3</span>,\n      (DSP56K XMemoryDataMoveWithShortDisplacement *)((char *)this + Number),\n      String);\n  operator+(\n      (astring *)<span class=\"supfact\">v2</span>, (const astring *)<span class=\"supfact\">v3</span>,\n      (DSP56K XMemoryDataMoveWithShortDisplacement *)((char *)this + Number));\n  astring operator=(a2, (const astring *)<span class=\"supfact\">v2</span>);\n  astring ~astring((astring *)<span class=\"supfact\">v2</span>);\n  astring ~astring((astring *)<span class=\"supfact\">v3</span>);\n}", "code_t": "void __cdecl DSP56K XMemoryDataMoveWithShortDisplacement\ndisassemble(const DSP56K XMemoryDataMoveWithShortDisplacement *const this,\n            astring *retString) {\n  astring <span class=\"supfact\">string</span>;\n  astring <span class=\"supfact\">lhs</span>;\n  operator+(&<span class=\"supfact\">lhs</span>, &this->m_source, String);\n  operator+(&<span class=\"supfact\">string</span>, &<span class=\"supfact\">lhs</span>,\n            &this->m_destination);\n  astring operator=(retString, &<span class=\"supfact\">string</span>);\n  astring ~astring(&<span class=\"supfact\">string</span>);\n  astring ~astring(&<span class=\"supfact\">lhs</span>);\n}", "var": [{"name": "v3", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "lhs", "ref_type": "struct astring { _astring_base baseclass_0; }"}, {"name": "v2", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "string", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/560880a0d78a16c1d09b1d26c617d93994fcc3deea10e346cbe2cb3ba3e3c537", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/drivers/royalmah.o", "objdump": "0000000000017111 <_ZL33construct_machine_config_mjderngrR14machine_configP8device_t>:\n   17111:\t55                   \tpush   %rbp\n   17112:\t48 89 e5             \tmov    %rsp,%rbp\n   17115:\t53                   \tpush   %rbx\n   17116:\t48 83 ec 68          \tsub    $0x68,%rsp\n   1711a:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n   1711e:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n   17122:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n   17129:\t00 \n   1712a:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   1712e:\t48 89 c7             \tmov    %rax,%rdi\n   17131:\te8 00 00 00 00       \tcallq  17136 <_ZL33construct_machine_config_mjderngrR14machine_configP8device_t+0x25>\n   17136:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n   1713a:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   1713e:\t48 89 d6             \tmov    %rdx,%rsi\n   17141:\t48 89 c7             \tmov    %rax,%rdi\n   17144:\te8 99 f8 ff ff       \tcallq  169e2 <_ZL33construct_machine_config_dondenmjR14machine_configP8device_t>\n   17149:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n   1714d:\t48 8b 4d 90          \tmov    -0x70(%rbp),%rcx\n   17151:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   17155:\tba 00 00 00 00       \tmov    $0x0,%edx\n   1715a:\t48 89 ce             \tmov    %rcx,%rsi\n   1715d:\t48 89 c7             \tmov    %rax,%rdi\n   17160:\te8 00 00 00 00       \tcallq  17165 <_ZL33construct_machine_config_mjderngrR14machine_configP8device_t+0x54>\n   17165:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   17169:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1716d:\tba 00 00 00 00       \tmov    $0x0,%edx\n   17172:\tbe 02 00 00 00       \tmov    $0x2,%esi\n   17177:\t48 89 c7             \tmov    %rax,%rdi\n   1717a:\te8 00 00 00 00       \tcallq  1717f <_ZL33construct_machine_config_mjderngrR14machine_configP8device_t+0x6e>\n   1717f:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   17183:\tc7 40 50 00 02 00 00 \tmovl   $0x200,0x50(%rax)\n   1718a:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n   1718e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   17193:\t48 89 c7             \tmov    %rax,%rdi\n   17196:\te8 00 00 00 00       \tcallq  1719b <_ZL33construct_machine_config_mjderngrR14machine_configP8device_t+0x8a>\n   1719b:\t48 8b 5d 90          \tmov    -0x70(%rbp),%rbx\n   1719f:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   171a3:\t48 89 c7             \tmov    %rax,%rdi\n   171a6:\te8 00 00 00 00       \tcallq  171ab <_ZL33construct_machine_config_mjderngrR14machine_configP8device_t+0x9a>\n   171ab:\t48 89 d8             \tmov    %rbx,%rax\n   171ae:\teb 1a                \tjmp    171ca <_ZL33construct_machine_config_mjderngrR14machine_configP8device_t+0xb9>\n   171b0:\t48 89 c3             \tmov    %rax,%rbx\n   171b3:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n   171b7:\t48 89 c7             \tmov    %rax,%rdi\n   171ba:\te8 00 00 00 00       \tcallq  171bf <_ZL33construct_machine_config_mjderngrR14machine_configP8device_t+0xae>\n   171bf:\t48 89 d8             \tmov    %rbx,%rax\n   171c2:\t48 89 c7             \tmov    %rax,%rdi\n   171c5:\te8 00 00 00 00       \tcallq  171ca <_ZL33construct_machine_config_mjderngrR14machine_configP8device_t+0xb9>\n   171ca:\t48 83 c4 68          \tadd    $0x68,%rsp\n   171ce:\t5b                   \tpop    %rbx\n   171cf:\t5d                   \tpop    %rbp\n   171d0:\tc3                   \tretq   ", "code_s": "driver_device *__fastcall construct_machine_config_mjderngr(machine_config *a1,\n                                                            device_t *a2) {\n  void(__fastcall * v2)(running_machine *, const unsigned __int8 *);\n  driver_device *v4;\n  char <span class=\"supfact\">v5</span>[Number];\n  __int64 v6;\n  v6 = Number L;\n  astring astring((astring *)<span class=\"supfact\">v5</span>);\n  v4 = construct_machine_config_dondenmj(a1, a2);\n  v6 = machine_config device_find(a1, v4, String);\n  device_memory_interface static_set_addrmap(\n      v6, Number L, construct_address_map_mjderngr_iomap);\n  *((_DWORD *)a1 + Number) = Number;\n  driver_device static_set_palette_init(v4, (device_t *)palette_init_mjderngr,\n                                        v2);\n  astring ~astring((astring *)<span class=\"supfact\">v5</span>);\n  return v4;\n}", "code_t": "device_t *__cdecl construct_machine_config_mjderngr(machine_config *config,\n                                                    device_t *owner) {\n  void(__fastcall * v2)(address_map *, const device_t *);\n  void(__fastcall * v3)(running_machine *, const unsigned __int8 *);\n  device_t *ownera;\n  astring <span class=\"supfact\">tempstring</span>;\n  device_t *device;\n  device = Number L;\n  astring astring(&<span class=\"supfact\">tempstring</span>);\n  ownera = construct_machine_config_dondenmj(config, owner);\n  device = (device_t *)machine_config device_find(config, ownera, String);\n  device_memory_interface static_set_addrmap(\n      device, (device_t *)((char *)&loc_1 + Number),\n      (address_spacenum)construct_address_map_mjderngr_iomap, v2);\n  config->m_total_colors = Number;\n  driver_device static_set_palette_init(ownera,\n                                        (device_t *)palette_init_mjderngr, v3);\n  astring ~astring(&<span class=\"supfact\">tempstring</span>);\n  return ownera;\n}", "var": [{"name": "v5", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "tempstring", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/3da554e7be727d06ab7f4e2330fe40c06e49dc1c481fc3ec5a772104aacc182a", "path_in_repo": "XanClic/qemu//hw/scsi/megasas.o", "objdump": "00000000000010de <_nocheck__trace_megasas_qf_map_failed>:\n    10de:\t55                   \tpush   %rbp\n    10df:\t48 89 e5             \tmov    %rsp,%rbp\n    10e2:\t41 54                \tpush   %r12\n    10e4:\t53                   \tpush   %rbx\n    10e5:\t48 83 ec 30          \tsub    $0x30,%rsp\n    10e9:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n    10ec:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n    10f0:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    10f7:\t00 00 \n    10f9:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    10fd:\t31 c0                \txor    %eax,%eax\n    10ff:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1105 <_nocheck__trace_megasas_qf_map_failed+0x27>\n    1105:\t85 c0                \ttest   %eax,%eax\n    1107:\t0f 95 c0             \tsetne  %al\n    110a:\t0f b6 c0             \tmovzbl %al,%eax\n    110d:\t48 85 c0             \ttest   %rax,%rax\n    1110:\t74 64                \tje     1176 <_nocheck__trace_megasas_qf_map_failed+0x98>\n    1112:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 1119 <_nocheck__trace_megasas_qf_map_failed+0x3b>\n    1119:\t66 85 c0             \ttest   %ax,%ax\n    111c:\t74 58                \tje     1176 <_nocheck__trace_megasas_qf_map_failed+0x98>\n    111e:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n    1123:\te8 05 f7 ff ff       \tcallq  82d <qemu_loglevel_mask>\n    1128:\t84 c0                \ttest   %al,%al\n    112a:\t74 4a                \tje     1176 <_nocheck__trace_megasas_qf_map_failed+0x98>\n    112c:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    1130:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1135:\t48 89 c7             \tmov    %rax,%rdi\n    1138:\te8 00 00 00 00       \tcallq  113d <_nocheck__trace_megasas_qf_map_failed+0x5f>\n    113d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1141:\t49 89 c4             \tmov    %rax,%r12\n    1144:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    1148:\t48 89 c3             \tmov    %rax,%rbx\n    114b:\te8 00 00 00 00       \tcallq  1150 <_nocheck__trace_megasas_qf_map_failed+0x72>\n    1150:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n    1154:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    1157:\t49 89 c9             \tmov    %rcx,%r9\n    115a:\t41 89 d0             \tmov    %edx,%r8d\n    115d:\t4c 89 e1             \tmov    %r12,%rcx\n    1160:\t48 89 da             \tmov    %rbx,%rdx\n    1163:\t89 c6                \tmov    %eax,%esi\n    1165:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 116c <_nocheck__trace_megasas_qf_map_failed+0x8e>\n    116c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1171:\te8 00 00 00 00       \tcallq  1176 <_nocheck__trace_megasas_qf_map_failed+0x98>\n    1176:\t90                   \tnop\n    1177:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    117b:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    1182:\t00 00 \n    1184:\t74 05                \tje     118b <_nocheck__trace_megasas_qf_map_failed+0xad>\n    1186:\te8 00 00 00 00       \tcallq  118b <_nocheck__trace_megasas_qf_map_failed+0xad>\n    118b:\t48 83 c4 30          \tadd    $0x30,%rsp\n    118f:\t5b                   \tpop    %rbx\n    1190:\t41 5c                \tpop    %r12\n    1192:\t5d                   \tpop    %rbp\n    1193:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_megasas_qf_map_failed(\n    unsigned int a1, __int64 a2) {\n  __suseconds_t v2;\n  __time_t v3;\n  unsigned int v4;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v7;\n  v7 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_QF_MAP_FAILED_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v2 = <span class=\"supfact\">tv</span>.tv_usec;\n    v3 = <span class=\"supfact\">tv</span>.tv_sec;\n    v4 = qemu_get_thread_id();\n    qemu_log(String, v4, v3, v2, a1, a2);\n  }\n  return __readfsqword(Number) ^ v7;\n}", "code_t": "void __cdecl nocheck__trace_megasas_qf_map_failed(int cmd,\n                                                  unsigned __int64 frame) {\n  __suseconds_t v2;\n  __time_t v3;\n  unsigned int v4;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v6;\n  v6 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_QF_MAP_FAILED_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v2 = <span class=\"supfact\">_now</span>.tv_usec;\n    v3 = <span class=\"supfact\">_now</span>.tv_sec;\n    v4 = qemu_get_thread_id();\n    qemu_log(String, v4, v3, v2, (unsigned int)cmd, frame);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "jbcrail", "repo_name": "allocation-benchmark", "path": "jbcrail/allocation-benchmark/8cea0507c5809d6c623fd3d69597da9ea0499bfc2a62fb76c318770aaa22b1c7", "path_in_repo": "jbcrail/allocation-benchmark//allocation_bench.o", "objdump": "000000000000057f <bench_initialize_with_calloc>:\n 57f:\t55                   \tpush   %rbp\n 580:\t48 89 e5             \tmov    %rsp,%rbp\n 583:\t48 83 ec 50          \tsub    $0x50,%rsp\n 587:\t89 7d cc             \tmov    %edi,-0x34(%rbp)\n 58a:\t89 75 c8             \tmov    %esi,-0x38(%rbp)\n 58d:\t48 89 55 c0          \tmov    %rdx,-0x40(%rbp)\n 591:\t48 89 4d b8          \tmov    %rcx,-0x48(%rbp)\n 595:\t8b 45 c8             \tmov    -0x38(%rbp),%eax\n 598:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n 59b:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 59e:\t48 c1 e0 03          \tshl    $0x3,%rax\n 5a2:\t48 89 c7             \tmov    %rax,%rdi\n 5a5:\te8 00 00 00 00       \tcallq  5aa <bench_initialize_with_calloc+0x2b>\n 5aa:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n 5ae:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n 5b5:\te9 c7 00 00 00       \tjmpq   681 <bench_initialize_with_calloc+0x102>\n 5ba:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n 5bd:\tba 00 00 00 00       \tmov    $0x0,%edx\n 5c2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 5c7:\t89 c7                \tmov    %eax,%edi\n 5c9:\te8 00 00 00 00       \tcallq  5ce <bench_initialize_with_calloc+0x4f>\n 5ce:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n 5d2:\t48 89 c7             \tmov    %rax,%rdi\n 5d5:\te8 00 00 00 00       \tcallq  5da <bench_initialize_with_calloc+0x5b>\n 5da:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 5de:\t48 83 c0 01          \tadd    $0x1,%rax\n 5e2:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 5e7:\t48 89 c7             \tmov    %rax,%rdi\n 5ea:\te8 00 00 00 00       \tcallq  5ef <bench_initialize_with_calloc+0x70>\n 5ef:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n 5f3:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n 5f8:\t75 19                \tjne    613 <bench_initialize_with_calloc+0x94>\n 5fa:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 5ff:\tba 67 00 00 00       \tmov    $0x67,%edx\n 604:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 609:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 60e:\te8 00 00 00 00       \tcallq  613 <bench_initialize_with_calloc+0x94>\n 613:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n 617:\t48 8b 4d b8          \tmov    -0x48(%rbp),%rcx\n 61b:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n 61e:\t48 89 ce             \tmov    %rcx,%rsi\n 621:\t89 c7                \tmov    %eax,%edi\n 623:\te8 00 00 00 00       \tcallq  628 <bench_initialize_with_calloc+0xa9>\n 628:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n 62c:\t48 89 c7             \tmov    %rax,%rdi\n 62f:\te8 00 00 00 00       \tcallq  634 <bench_initialize_with_calloc+0xb5>\n 634:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n 638:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 63c:\t48 29 c2             \tsub    %rax,%rdx\n 63f:\t48 89 d0             \tmov    %rdx,%rax\n 642:\t48 69 c0 00 ca 9a 3b \timul   $0x3b9aca00,%rax,%rax\n 649:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n 64d:\t48 01 c2             \tadd    %rax,%rdx\n 650:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 654:\t48 89 c6             \tmov    %rax,%rsi\n 657:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 65a:\t48 98                \tcltq   \n 65c:\t48 8d 0c c5 00 00 00 \tlea    0x0(,%rax,8),%rcx\n 663:\t00 \n 664:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 668:\t48 01 c8             \tadd    %rcx,%rax\n 66b:\t48 29 f2             \tsub    %rsi,%rdx\n 66e:\t48 89 10             \tmov    %rdx,(%rax)\n 671:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 675:\t48 89 c7             \tmov    %rax,%rdi\n 678:\te8 00 00 00 00       \tcallq  67d <bench_initialize_with_calloc+0xfe>\n 67d:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 681:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 684:\t39 45 c8             \tcmp    %eax,-0x38(%rbp)\n 687:\t0f 87 2d ff ff ff    \tja     5ba <bench_initialize_with_calloc+0x3b>\n 68d:\t8b 75 f8             \tmov    -0x8(%rbp),%esi\n 690:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 694:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 699:\tba 08 00 00 00       \tmov    $0x8,%edx\n 69e:\t48 89 c7             \tmov    %rax,%rdi\n 6a1:\te8 00 00 00 00       \tcallq  6a6 <bench_initialize_with_calloc+0x127>\n 6a6:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 6ab:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 6b0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 6b5:\te8 00 00 00 00       \tcallq  6ba <bench_initialize_with_calloc+0x13b>\n 6ba:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 6be:\t48 8b 00             \tmov    (%rax),%rax\n 6c1:\t48 89 c6             \tmov    %rax,%rsi\n 6c4:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 6c9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 6ce:\te8 00 00 00 00       \tcallq  6d3 <bench_initialize_with_calloc+0x154>\n 6d3:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 6d6:\tc1 e8 02             \tshr    $0x2,%eax\n 6d9:\t89 c0                \tmov    %eax,%eax\n 6db:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 6e2:\t00 \n 6e3:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 6e7:\t48 01 d0             \tadd    %rdx,%rax\n 6ea:\t48 8b 10             \tmov    (%rax),%rdx\n 6ed:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 6f0:\tc1 e8 02             \tshr    $0x2,%eax\n 6f3:\t83 c0 01             \tadd    $0x1,%eax\n 6f6:\t89 c0                \tmov    %eax,%eax\n 6f8:\t48 8d 0c c5 00 00 00 \tlea    0x0(,%rax,8),%rcx\n 6ff:\t00 \n 700:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 704:\t48 01 c8             \tadd    %rcx,%rax\n 707:\t48 8b 00             \tmov    (%rax),%rax\n 70a:\t48 01 d0             \tadd    %rdx,%rax\n 70d:\t48 d1 e8             \tshr    %rax\n 710:\t48 89 c6             \tmov    %rax,%rsi\n 713:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 718:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 71d:\te8 00 00 00 00       \tcallq  722 <bench_initialize_with_calloc+0x1a3>\n 722:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 725:\td1 e8                \tshr    %eax\n 727:\t83 e8 01             \tsub    $0x1,%eax\n 72a:\t89 c0                \tmov    %eax,%eax\n 72c:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 733:\t00 \n 734:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 738:\t48 01 d0             \tadd    %rdx,%rax\n 73b:\t48 8b 10             \tmov    (%rax),%rdx\n 73e:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 741:\td1 e8                \tshr    %eax\n 743:\t89 c0                \tmov    %eax,%eax\n 745:\t48 8d 0c c5 00 00 00 \tlea    0x0(,%rax,8),%rcx\n 74c:\t00 \n 74d:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 751:\t48 01 c8             \tadd    %rcx,%rax\n 754:\t48 8b 00             \tmov    (%rax),%rax\n 757:\t48 01 d0             \tadd    %rdx,%rax\n 75a:\t48 d1 e8             \tshr    %rax\n 75d:\t48 89 c6             \tmov    %rax,%rsi\n 760:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 765:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 76a:\te8 00 00 00 00       \tcallq  76f <bench_initialize_with_calloc+0x1f0>\n 76f:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 772:\tc1 e8 02             \tshr    $0x2,%eax\n 775:\t89 c2                \tmov    %eax,%edx\n 777:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 77a:\t29 d0                \tsub    %edx,%eax\n 77c:\t83 e8 01             \tsub    $0x1,%eax\n 77f:\t89 c0                \tmov    %eax,%eax\n 781:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 788:\t00 \n 789:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 78d:\t48 01 d0             \tadd    %rdx,%rax\n 790:\t48 8b 10             \tmov    (%rax),%rdx\n 793:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 796:\tc1 e8 02             \tshr    $0x2,%eax\n 799:\t89 c1                \tmov    %eax,%ecx\n 79b:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 79e:\t29 c8                \tsub    %ecx,%eax\n 7a0:\t89 c0                \tmov    %eax,%eax\n 7a2:\t48 8d 0c c5 00 00 00 \tlea    0x0(,%rax,8),%rcx\n 7a9:\t00 \n 7aa:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 7ae:\t48 01 c8             \tadd    %rcx,%rax\n 7b1:\t48 8b 00             \tmov    (%rax),%rax\n 7b4:\t48 01 d0             \tadd    %rdx,%rax\n 7b7:\t48 d1 e8             \tshr    %rax\n 7ba:\t48 89 c6             \tmov    %rax,%rsi\n 7bd:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 7c2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 7c7:\te8 00 00 00 00       \tcallq  7cc <bench_initialize_with_calloc+0x24d>\n 7cc:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 7cf:\t83 e8 01             \tsub    $0x1,%eax\n 7d2:\t89 c0                \tmov    %eax,%eax\n 7d4:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 7db:\t00 \n 7dc:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 7e0:\t48 01 d0             \tadd    %rdx,%rax\n 7e3:\t48 8b 00             \tmov    (%rax),%rax\n 7e6:\t48 89 c6             \tmov    %rax,%rsi\n 7e9:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 7ee:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 7f3:\te8 00 00 00 00       \tcallq  7f8 <bench_initialize_with_calloc+0x279>\n 7f8:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 7fc:\t48 89 c7             \tmov    %rax,%rdi\n 7ff:\te8 00 00 00 00       \tcallq  804 <bench_initialize_with_calloc+0x285>\n 804:\t90                   \tnop\n 805:\tc9                   \tleaveq \n 806:\tc3                   \tretq   ", "code_s": "void __fastcall bench_initialize_with_calloc(int a1, unsigned int a2,\n                                             size_t a3) {\n  void *buf;\n  struct timespec <span class=\"supfact\">v5</span>;\n  struct timespec <span class=\"supfact\">v6</span>;\n  void *base;\n  size_t nmemb;\n  nmemb = a2;\n  base = malloc(Number L * a2);\n  while (a2 > HIDWORD(nmemb)) {\n    lseek(a1, Number L, Number);\n    get_monotonic_clock(&<span class=\"supfact\">v6</span>);\n    buf = calloc(a3 + Number, Number);\n    if (!buf)\n      _assert_fail(String, String, Number, String);\n    read(a1, buf, a3);\n    get_monotonic_clock(&<span class=\"supfact\">v5</span>);\n    *((_QWORD *)base + SHIDWORD(nmemb)) =\n        Number * (<span class=\"supfact\">v5</span>.tv_sec - <span class=\"supfact\">v6</span>.tv_sec) +\n        <span class=\"supfact\">v5</span>.tv_nsec - <span class=\"supfact\">v6</span>.tv_nsec;\n    free(buf);\n    ++HIDWORD(nmemb);\n  }\n  qsort(base, (unsigned int)nmemb, Number, (__compar_fn_t)compare_samples);\n  printf(String, String);\n  printf(String, *(_QWORD *)base);\n  printf(String,\n         (*((_QWORD *)base + ((unsigned int)nmemb >> Number)) +\n          *((_QWORD *)base + ((unsigned int)nmemb >> Number) + Number)) >>\n             Number);\n  printf(String, (*((_QWORD *)base + ((unsigned int)nmemb >> Number) - Number) +\n                  *((_QWORD *)base + ((unsigned int)nmemb >> Number))) >>\n                     Number);\n  printf(String, (*((_QWORD *)base + (unsigned int)nmemb -\n                    ((unsigned int)nmemb >> Number) - Number) +\n                  *((_QWORD *)base + (unsigned int)nmemb -\n                    ((unsigned int)nmemb >> Number))) >>\n                     Number);\n  printf(String, *((_QWORD *)base + (unsigned int)(nmemb - Number)));\n  free(base);\n}", "code_t": "void __cdecl bench_initialize_with_calloc(int fd, uint32_t num_tests,\n                                          size_t bytes, char *ptr) {\n  char *ptra;\n  timespec <span class=\"supfact\">tpe</span>;\n  timespec <span class=\"supfact\">tps</span>;\n  uint64_t *samples;\n  uint32_t ntests;\n  int i;\n  ntests = num_tests;\n  samples = (uint64_t *)malloc(Number L * num_tests);\n  for (i = Number; num_tests > i; ++i) {\n    lseek(fd, Number L, Number);\n    get_monotonic_clock(&<span class=\"supfact\">tps</span>);\n    ptra = (char *)calloc(bytes + Number, Number);\n    if (!ptra)\n      _assert_fail(String, String, Number, String);\n    read(fd, ptra, bytes);\n    get_monotonic_clock(&<span class=\"supfact\">tpe</span>);\n    samples[i] =\n        Number * (<span class=\"supfact\">tpe</span>.tv_sec - <span class=\"supfact\">tps</span>.tv_sec) +\n        <span class=\"supfact\">tpe</span>.tv_nsec - <span class=\"supfact\">tps</span>.tv_nsec;\n    free(ptra);\n  }\n  qsort(samples, ntests, Number, (__compar_fn_t)compare_samples);\n  printf(String, String);\n  printf(String, *samples);\n  printf(String,\n         (samples[ntests >> Number] + samples[(ntests >> Number) + Number]) >>\n             Number);\n  printf(String,\n         (samples[(ntests >> Number) - Number] + samples[ntests >> Number]) >>\n             Number);\n  printf(String, (samples[ntests - (ntests >> Number) - Number] +\n                  samples[ntests - (ntests >> Number)]) >>\n                     Number);\n  printf(String, samples[ntests - Number]);\n  free(samples);\n}", "var": [{"name": "v6", "type": "struct iovec { void * iov_base; size_t iov_len; }", "ref_name": "tps", "ref_type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }"}, {"name": "v5", "type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }", "ref_name": "tpe", "ref_type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }"}], "body_in_train": false}, {"repo_owner": "mongoose700", "repo_name": "xen-coalesce", "path": "mongoose700/xen-coalesce/2165f5c9af0ceaa812164127cb5e07214edc0ad23cc6bb3cb77deacf6c09c8ed", "path_in_repo": "mongoose700/xen-coalesce/xen/arch/x86/mm/p2m-pod.o", "objdump": "0000000000003d8a <guest_physmap_mark_populate_on_demand>:\n    3d8a:\t55                   \tpush   %rbp\n    3d8b:\t48 89 e5             \tmov    %rsp,%rbp\n    3d8e:\t53                   \tpush   %rbx\n    3d8f:\t48 83 ec 78          \tsub    $0x78,%rsp\n    3d93:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n    3d97:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n    3d9b:\t89 55 8c             \tmov    %edx,-0x74(%rbp)\n    3d9e:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    3da2:\t48 8b 80 a8 07 00 00 \tmov    0x7a8(%rax),%rax\n    3da9:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    3dad:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    3db4:\t00 \n    3db5:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n    3dbc:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    3dc0:\t8b 80 d0 06 00 00    \tmov    0x6d0(%rax),%eax\n    3dc6:\t25 00 20 00 00       \tand    $0x2000,%eax\n    3dcb:\t85 c0                \ttest   %eax,%eax\n    3dcd:\t75 0a                \tjne    3dd9 <guest_physmap_mark_populate_on_demand+0x4f>\n    3dcf:\tb8 ea ff ff ff       \tmov    $0xffffffea,%eax\n    3dd4:\te9 ef 01 00 00       \tjmpq   3fc8 <guest_physmap_mark_populate_on_demand+0x23e>\n    3dd9:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3ddd:\t48 89 c7             \tmov    %rax,%rdi\n    3de0:\te8 ba c7 ff ff       \tcallq  59f <p2m_is_altp2m>\n    3de5:\t84 c0                \ttest   %al,%al\n    3de7:\t74 15                \tje     3dfe <guest_physmap_mark_populate_on_demand+0x74>\n    3de9:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3ded:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3df4 <guest_physmap_mark_populate_on_demand+0x6a>\n    3df4:\t48 89 c7             \tmov    %rax,%rdi\n    3df7:\te8 47 cd ff ff       \tcallq  b43 <mm_write_lock_altp2m>\n    3dfc:\teb 13                \tjmp    3e11 <guest_physmap_mark_populate_on_demand+0x87>\n    3dfe:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3e02:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3e09 <guest_physmap_mark_populate_on_demand+0x7f>\n    3e09:\t48 89 c7             \tmov    %rax,%rdi\n    3e0c:\te8 07 cd ff ff       \tcallq  b18 <mm_write_lock_p2m>\n    3e11:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    3e18:\t00 \n    3e19:\te9 a8 00 00 00       \tjmpq   3ec6 <guest_physmap_mark_populate_on_demand+0x13c>\n    3e1e:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3e22:\t4c 8b 90 98 00 00 00 \tmov    0x98(%rax),%r10\n    3e29:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n    3e2d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3e31:\t48 8d 34 02          \tlea    (%rdx,%rax,1),%rsi\n    3e35:\t48 8d 7d b0          \tlea    -0x50(%rbp),%rdi\n    3e39:\t48 8d 4d b4          \tlea    -0x4c(%rbp),%rcx\n    3e3d:\t48 8d 55 c4          \tlea    -0x3c(%rbp),%rdx\n    3e41:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3e45:\t48 83 ec 08          \tsub    $0x8,%rsp\n    3e49:\t6a 00                \tpushq  $0x0\n    3e4b:\t49 89 f9             \tmov    %rdi,%r9\n    3e4e:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    3e54:\t48 89 c7             \tmov    %rax,%rdi\n    3e57:\t41 ff d2             \tcallq  *%r10\n    3e5a:\t48 83 c4 10          \tadd    $0x10,%rsp\n    3e5e:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n    3e62:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    3e65:\t89 45 ac             \tmov    %eax,-0x54(%rbp)\n    3e68:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n    3e6b:\t89 45 a8             \tmov    %eax,-0x58(%rbp)\n    3e6e:\t8b 55 a8             \tmov    -0x58(%rbp),%edx\n    3e71:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n    3e74:\t39 c2                \tcmp    %eax,%edx\n    3e76:\t0f 46 c2             \tcmovbe %edx,%eax\n    3e79:\tba 01 00 00 00       \tmov    $0x1,%edx\n    3e7e:\t89 c1                \tmov    %eax,%ecx\n    3e80:\t48 d3 e2             \tshl    %cl,%rdx\n    3e83:\t48 89 d0             \tmov    %rdx,%rax\n    3e86:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    3e8a:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    3e8d:\tba 0d 1e 00 00       \tmov    $0x1e0d,%edx\n    3e92:\t89 c1                \tmov    %eax,%ecx\n    3e94:\t48 d3 ea             \tshr    %cl,%rdx\n    3e97:\t48 89 d0             \tmov    %rdx,%rax\n    3e9a:\t83 e0 01             \tand    $0x1,%eax\n    3e9d:\t48 85 c0             \ttest   %rax,%rax\n    3ea0:\t74 0c                \tje     3eae <guest_physmap_mark_populate_on_demand+0x124>\n    3ea2:\tc7 45 dc f0 ff ff ff \tmovl   $0xfffffff0,-0x24(%rbp)\n    3ea9:\te9 0b 01 00 00       \tjmpq   3fb9 <guest_physmap_mark_populate_on_demand+0x22f>\n    3eae:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n    3eb1:\t83 f8 06             \tcmp    $0x6,%eax\n    3eb4:\t75 08                \tjne    3ebe <guest_physmap_mark_populate_on_demand+0x134>\n    3eb6:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    3eba:\t48 01 45 e0          \tadd    %rax,-0x20(%rbp)\n    3ebe:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    3ec2:\t48 01 45 e8          \tadd    %rax,-0x18(%rbp)\n    3ec6:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    3ec9:\tba 01 00 00 00       \tmov    $0x1,%edx\n    3ece:\t89 c1                \tmov    %eax,%ecx\n    3ed0:\t48 d3 e2             \tshl    %cl,%rdx\n    3ed3:\t48 89 d0             \tmov    %rdx,%rax\n    3ed6:\t48 39 45 e8          \tcmp    %rax,-0x18(%rbp)\n    3eda:\t0f 82 3e ff ff ff    \tjb     3e1e <guest_physmap_mark_populate_on_demand+0x94>\n    3ee0:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3ee4:\t8b 98 e0 00 00 00    \tmov    0xe0(%rax),%ebx\n    3eea:\t48 c7 c7 ff ff ff ff \tmov    $0xffffffffffffffff,%rdi\n    3ef1:\te8 db c2 ff ff       \tcallq  1d1 <_mfn>\n    3ef6:\t48 89 c7             \tmov    %rax,%rdi\n    3ef9:\t8b 55 8c             \tmov    -0x74(%rbp),%edx\n    3efc:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n    3f00:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3f04:\t41 89 d9             \tmov    %ebx,%r9d\n    3f07:\t41 b8 06 00 00 00    \tmov    $0x6,%r8d\n    3f0d:\t89 d1                \tmov    %edx,%ecx\n    3f0f:\t48 89 fa             \tmov    %rdi,%rdx\n    3f12:\t48 89 c7             \tmov    %rax,%rdi\n    3f15:\te8 00 00 00 00       \tcallq  3f1a <guest_physmap_mark_populate_on_demand+0x190>\n    3f1a:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n    3f1d:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n    3f21:\t0f 85 91 00 00 00    \tjne    3fb8 <guest_physmap_mark_populate_on_demand+0x22e>\n    3f27:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3f2b:\t48 05 50 02 00 00    \tadd    $0x250,%rax\n    3f31:\tba 00 00 00 00       \tmov    $0x0,%edx\n    3f36:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3f3d <guest_physmap_mark_populate_on_demand+0x1b3>\n    3f3d:\t48 89 c7             \tmov    %rax,%rdi\n    3f40:\te8 29 cc ff ff       \tcallq  b6e <mm_lock_pod>\n    3f45:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3f49:\t48 8b 90 30 01 00 00 \tmov    0x130(%rax),%rdx\n    3f50:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    3f53:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    3f58:\t89 c1                \tmov    %eax,%ecx\n    3f5a:\td3 e6                \tshl    %cl,%esi\n    3f5c:\t89 f0                \tmov    %esi,%eax\n    3f5e:\t48 98                \tcltq   \n    3f60:\t48 01 c2             \tadd    %rax,%rdx\n    3f63:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3f67:\t48 89 90 30 01 00 00 \tmov    %rdx,0x130(%rax)\n    3f6e:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3f72:\t48 8b 80 30 01 00 00 \tmov    0x130(%rax),%rax\n    3f79:\t48 2b 45 e0          \tsub    -0x20(%rbp),%rax\n    3f7d:\t48 89 c2             \tmov    %rax,%rdx\n    3f80:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3f84:\t48 89 90 30 01 00 00 \tmov    %rdx,0x130(%rax)\n    3f8b:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3f8f:\t48 8b 80 30 01 00 00 \tmov    0x130(%rax),%rax\n    3f96:\t48 c1 e8 3f          \tshr    $0x3f,%rax\n    3f9a:\t0f b6 c0             \tmovzbl %al,%eax\n    3f9d:\t48 85 c0             \ttest   %rax,%rax\n    3fa0:\t74 02                \tje     3fa4 <guest_physmap_mark_populate_on_demand+0x21a>\n    3fa2:\t0f 0b                \tud2    \n    3fa4:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3fa8:\t48 05 50 02 00 00    \tadd    $0x250,%rax\n    3fae:\t48 89 c7             \tmov    %rax,%rdi\n    3fb1:\te8 6a ca ff ff       \tcallq  a20 <mm_unlock>\n    3fb6:\teb 01                \tjmp    3fb9 <guest_physmap_mark_populate_on_demand+0x22f>\n    3fb8:\t90                   \tnop\n    3fb9:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    3fbd:\t48 89 c7             \tmov    %rax,%rdi\n    3fc0:\te8 d4 c9 ff ff       \tcallq  999 <mm_write_unlock>\n    3fc5:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    3fc8:\t48 8b 5d f8          \tmov    -0x8(%rbp),%rbx\n    3fcc:\tc9                   \tleaveq \n    3fcd:\tc3                   \tretq   \n", "code_s": "__int64 __fastcall guest_physmap_mark_populate_on_demand(__int64 a1, __int64 a2,\n                                                         unsigned int a3) {\n  char v4;\n  unsigned int v5;\n  __int64 v6;\n  unsigned int v8;\n  char v9[Number];\n  __int64 <span class=\"supfact\">v10</span>;\n  int v11;\n  __int64 v12;\n  __int64 v13;\n  unsigned int v14;\n  __int64 v15;\n  unsigned __int64 i;\n  v13 = *(_QWORD *)(a1 + Number);\n  v15 = Number L;\n  v14 = Number;\n  if ((*(_DWORD *)(a1 + Number) & Number) == Number)\n    return Number L;\n  if (p2m_is_altp2m(v13))\n    mm_write_lock_altp2m(v13, (__int64)String);\n  else\n    mm_write_lock_p2m(v13, (__int64)String);\n  for (i = Number L; i < Number L << a3; i += v12) {\n    <span class=\"supfact\">v10</span> = (*(__int64(__fastcall **)(\n        __int64, unsigned __int64, int *, char *, _QWORD, unsigned int *,\n        _QWORD))(v13 + Number))(v13, a2 + i, &v11, v9, Number L, &v8, Number L);\n    v4 = a3;\n    if (v8 <= a3)\n      v4 = v8;\n    v12 = Number L << v4;\n    if (((Number >> v11) & Number) != Number) {\n      v14 = Number;\n      goto LABEL_19;\n    }\n    if (v11 == Number)\n      v15 += v12;\n  }\n  v5 = *(_DWORD *)(v13 + Number);\n  v6 = mfn(Number);\n  v14 = p2m_set_entry(v13, a2, v6, a3, Number L, v5);\n  if (!v14) {\n    mm_lock_pod(v13 + Number, (__int64)String, Number);\n    *(_QWORD *)(v13 + Number) += Number << a3;\n    *(_QWORD *)(v13 + Number) -= v15;\n    if (*(__int64 *)(v13 + Number) < Number)\n      BUG();\n    mm_unlock(v13 + Number);\n  }\nLABEL_19:\n  mm_write_unlock(v13);\n  return v14;\n}", "code_t": "int __cdecl guest_physmap_mark_populate_on_demand(domain *d,\n                                                  unsigned __int64 gfn,\n                                                  unsigned int order) {\n  char v4;\n  p2m_access_t v5;\n  mfn_t v6;\n  unsigned int cur_order;\n  p2m_access_t a;\n  mfn_t <span class=\"supfact\">omfn</span>;\n  p2m_type_t ot;\n  unsigned __int64 n;\n  p2m_domain *p2m;\n  int rc;\n  unsigned __int64 pod_count;\n  unsigned __int64 i;\n  p2m = d->arch.p2m;\n  pod_count = Number L;\n  rc = Number;\n  if ((d->arch.paging.mode & Number) == Number)\n    return Number;\n  if (p2m_is_altp2m(p2m))\n    mm_write_lock_altp2m(&p2m->lock, String);\n  else\n    mm_write_lock_p2m(&p2m->lock, String);\n  for (i = Number L; i < Number L << order; i += n) {\n    <span class=\"supfact\">omfn</span>.mfn = ((__int64(__fastcall *)(\n        p2m_domain *, unsigned __int64, p2m_type_t *, p2m_access_t *, _QWORD,\n        unsigned int *, _QWORD))p2m->get_entry)(p2m, gfn + i, &ot, &a, Number L,\n                                                &cur_order, Number L);\n    v4 = order;\n    if (cur_order <= order)\n      v4 = cur_order;\n    n = Number L << v4;\n    if (((Number >> ot) & Number) != Number) {\n      rc = Number;\n      goto out;\n    }\n    if (ot == p2m_populate_on_demand)\n      pod_count += n;\n  }\n  v5 = p2m->default_access;\n  v6.mfn = mfn(Number).mfn;\n  rc = p2m_set_entry(p2m, gfn, v6.mfn, order, Number L, (unsigned int)v5);\n  if (!rc) {\n    mm_lock_pod(&p2m->pod.lock, String, Number);\n    p2m->pod.entry_count += Number << order;\n    p2m->pod.entry_count -= pod_count;\n    if (p2m->pod.entry_count < Number)\n      BUG();\n    mm_unlock(&p2m->pod.lock);\n  }\nout:\n  mm_write_unlock(&p2m->lock);\n  return rc;\n}", "var": [{"name": "v10", "type": "unsigned __int64", "ref_name": "omfn", "ref_type": "struct mfn_t { unsigned __int64 mfn; }"}], "body_in_train": false}, {"repo_owner": "darrensessions", "repo_name": "rtn56u", "path": "darrensessions/rtn56u/42932b1fabfbc594ce52dca8f7041d3cc6b2df9d928aba1c119f3821673f4a45", "path_in_repo": "darrensessions/rtn56u/user/mt-daapd-0.2.4.2/src/uici.o", "objdump": "0000000000000237 <u_connect>:\n 237:\t55                   \tpush   %rbp\n 238:\t48 89 e5             \tmov    %rsp,%rbp\n 23b:\t48 81 ec d0 00 00 00 \tsub    $0xd0,%rsp\n 242:\t89 f8                \tmov    %edi,%eax\n 244:\t48 89 b5 30 ff ff ff \tmov    %rsi,-0xd0(%rbp)\n 24b:\t66 89 85 3c ff ff ff \tmov    %ax,-0xc4(%rbp)\n 252:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n 259:\t48 89 c7             \tmov    %rax,%rdi\n 25c:\te8 00 00 00 00       \tcallq  261 <u_connect+0x2a>\n 261:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n 264:\t75 41                \tjne    2a7 <u_connect+0x70>\n 266:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n 26d:\t48 89 c7             \tmov    %rax,%rdi\n 270:\te8 00 00 00 00       \tcallq  275 <u_connect+0x3e>\n 275:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n 279:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n 27e:\t75 15                \tjne    295 <u_connect+0x5e>\n 280:\te8 00 00 00 00       \tcallq  285 <u_connect+0x4e>\n 285:\tc7 00 16 00 00 00    \tmovl   $0x16,(%rax)\n 28b:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n 290:\te9 03 02 00 00       \tjmpq   498 <u_connect+0x261>\n 295:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 299:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n 29d:\t48 8b 00             \tmov    (%rax),%rax\n 2a0:\t8b 00                \tmov    (%rax),%eax\n 2a2:\t89 45 c4             \tmov    %eax,-0x3c(%rbp)\n 2a5:\teb 12                \tjmp    2b9 <u_connect+0x82>\n 2a7:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n 2ae:\t48 89 c7             \tmov    %rax,%rdi\n 2b1:\te8 00 00 00 00       \tcallq  2b6 <u_connect+0x7f>\n 2b6:\t89 45 c4             \tmov    %eax,-0x3c(%rbp)\n 2b9:\t0f b7 85 3c ff ff ff \tmovzwl -0xc4(%rbp),%eax\n 2c0:\t89 c7                \tmov    %eax,%edi\n 2c2:\te8 00 00 00 00       \tcallq  2c7 <u_connect+0x90>\n 2c7:\t66 89 45 c2          \tmov    %ax,-0x3e(%rbp)\n 2cb:\t66 c7 45 c0 02 00    \tmovw   $0x2,-0x40(%rbp)\n 2d1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 2d6:\te8 25 fd ff ff       \tcallq  0 <u_ignore_sigpipe>\n 2db:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n 2de:\t74 1d                \tje     2fd <u_connect+0xc6>\n 2e0:\tba 00 00 00 00       \tmov    $0x0,%edx\n 2e5:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 2ea:\tbf 02 00 00 00       \tmov    $0x2,%edi\n 2ef:\te8 00 00 00 00       \tcallq  2f4 <u_connect+0xbd>\n 2f4:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n 2f7:\t83 7d ec ff          \tcmpl   $0xffffffff,-0x14(%rbp)\n 2fb:\t75 0a                \tjne    307 <u_connect+0xd0>\n 2fd:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n 302:\te9 91 01 00 00       \tjmpq   498 <u_connect+0x261>\n 307:\t48 8d 4d c0          \tlea    -0x40(%rbp),%rcx\n 30b:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 30e:\tba 10 00 00 00       \tmov    $0x10,%edx\n 313:\t48 89 ce             \tmov    %rcx,%rsi\n 316:\t89 c7                \tmov    %eax,%edi\n 318:\te8 00 00 00 00       \tcallq  31d <u_connect+0xe6>\n 31d:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 320:\t83 7d fc ff          \tcmpl   $0xffffffff,-0x4(%rbp)\n 324:\t0f 85 2e 01 00 00    \tjne    458 <u_connect+0x221>\n 32a:\te8 00 00 00 00       \tcallq  32f <u_connect+0xf8>\n 32f:\t8b 00                \tmov    (%rax),%eax\n 331:\t83 f8 04             \tcmp    $0x4,%eax\n 334:\t74 10                \tje     346 <u_connect+0x10f>\n 336:\te8 00 00 00 00       \tcallq  33b <u_connect+0x104>\n 33b:\t8b 00                \tmov    (%rax),%eax\n 33d:\t83 f8 72             \tcmp    $0x72,%eax\n 340:\t0f 85 12 01 00 00    \tjne    458 <u_connect+0x221>\n 346:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 34b:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n 350:\t48 8d 95 40 ff ff ff \tlea    -0xc0(%rbp),%rdx\n 357:\t48 89 d7             \tmov    %rdx,%rdi\n 35a:\tfc                   \tcld    \n 35b:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n 35e:\t89 f8                \tmov    %edi,%eax\n 360:\t89 ca                \tmov    %ecx,%edx\n 362:\t89 55 e8             \tmov    %edx,-0x18(%rbp)\n 365:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n 368:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 36b:\t8d 50 3f             \tlea    0x3f(%rax),%edx\n 36e:\t85 c0                \ttest   %eax,%eax\n 370:\t0f 48 c2             \tcmovs  %edx,%eax\n 373:\tc1 f8 06             \tsar    $0x6,%eax\n 376:\t89 c6                \tmov    %eax,%esi\n 378:\t48 63 c6             \tmovslq %esi,%rax\n 37b:\t48 8b bc c5 40 ff ff \tmov    -0xc0(%rbp,%rax,8),%rdi\n 382:\tff \n 383:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 386:\t99                   \tcltd   \n 387:\tc1 ea 1a             \tshr    $0x1a,%edx\n 38a:\t01 d0                \tadd    %edx,%eax\n 38c:\t83 e0 3f             \tand    $0x3f,%eax\n 38f:\t29 d0                \tsub    %edx,%eax\n 391:\tba 01 00 00 00       \tmov    $0x1,%edx\n 396:\t89 c1                \tmov    %eax,%ecx\n 398:\t48 d3 e2             \tshl    %cl,%rdx\n 39b:\t48 89 d0             \tmov    %rdx,%rax\n 39e:\t48 09 c7             \tor     %rax,%rdi\n 3a1:\t48 89 fa             \tmov    %rdi,%rdx\n 3a4:\t48 63 c6             \tmovslq %esi,%rax\n 3a7:\t48 89 94 c5 40 ff ff \tmov    %rdx,-0xc0(%rbp,%rax,8)\n 3ae:\tff \n 3af:\teb 69                \tjmp    41a <u_connect+0x1e3>\n 3b1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 3b6:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n 3bb:\t48 8d 95 40 ff ff ff \tlea    -0xc0(%rbp),%rdx\n 3c2:\t48 89 d7             \tmov    %rdx,%rdi\n 3c5:\tfc                   \tcld    \n 3c6:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n 3c9:\t89 f8                \tmov    %edi,%eax\n 3cb:\t89 ca                \tmov    %ecx,%edx\n 3cd:\t89 55 e0             \tmov    %edx,-0x20(%rbp)\n 3d0:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n 3d3:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 3d6:\t8d 50 3f             \tlea    0x3f(%rax),%edx\n 3d9:\t85 c0                \ttest   %eax,%eax\n 3db:\t0f 48 c2             \tcmovs  %edx,%eax\n 3de:\tc1 f8 06             \tsar    $0x6,%eax\n 3e1:\t89 c6                \tmov    %eax,%esi\n 3e3:\t48 63 c6             \tmovslq %esi,%rax\n 3e6:\t48 8b bc c5 40 ff ff \tmov    -0xc0(%rbp,%rax,8),%rdi\n 3ed:\tff \n 3ee:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 3f1:\t99                   \tcltd   \n 3f2:\tc1 ea 1a             \tshr    $0x1a,%edx\n 3f5:\t01 d0                \tadd    %edx,%eax\n 3f7:\t83 e0 3f             \tand    $0x3f,%eax\n 3fa:\t29 d0                \tsub    %edx,%eax\n 3fc:\tba 01 00 00 00       \tmov    $0x1,%edx\n 401:\t89 c1                \tmov    %eax,%ecx\n 403:\t48 d3 e2             \tshl    %cl,%rdx\n 406:\t48 89 d0             \tmov    %rdx,%rax\n 409:\t48 09 c7             \tor     %rax,%rdi\n 40c:\t48 89 fa             \tmov    %rdi,%rdx\n 40f:\t48 63 c6             \tmovslq %esi,%rax\n 412:\t48 89 94 c5 40 ff ff \tmov    %rdx,-0xc0(%rbp,%rax,8)\n 419:\tff \n 41a:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 41d:\t8d 78 01             \tlea    0x1(%rax),%edi\n 420:\t48 8d 85 40 ff ff ff \tlea    -0xc0(%rbp),%rax\n 427:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n 42d:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 432:\t48 89 c2             \tmov    %rax,%rdx\n 435:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 43a:\te8 00 00 00 00       \tcallq  43f <u_connect+0x208>\n 43f:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 442:\t83 7d fc ff          \tcmpl   $0xffffffff,-0x4(%rbp)\n 446:\t75 10                \tjne    458 <u_connect+0x221>\n 448:\te8 00 00 00 00       \tcallq  44d <u_connect+0x216>\n 44d:\t8b 00                \tmov    (%rax),%eax\n 44f:\t83 f8 04             \tcmp    $0x4,%eax\n 452:\t0f 84 59 ff ff ff    \tje     3b1 <u_connect+0x17a>\n 458:\t83 7d fc ff          \tcmpl   $0xffffffff,-0x4(%rbp)\n 45c:\t75 37                \tjne    495 <u_connect+0x25e>\n 45e:\te8 00 00 00 00       \tcallq  463 <u_connect+0x22c>\n 463:\t8b 00                \tmov    (%rax),%eax\n 465:\t89 45 d8             \tmov    %eax,-0x28(%rbp)\n 468:\t90                   \tnop\n 469:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 46c:\t89 c7                \tmov    %eax,%edi\n 46e:\te8 00 00 00 00       \tcallq  473 <u_connect+0x23c>\n 473:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n 476:\t75 0c                \tjne    484 <u_connect+0x24d>\n 478:\te8 00 00 00 00       \tcallq  47d <u_connect+0x246>\n 47d:\t8b 00                \tmov    (%rax),%eax\n 47f:\t83 f8 04             \tcmp    $0x4,%eax\n 482:\t74 e5                \tje     469 <u_connect+0x232>\n 484:\te8 00 00 00 00       \tcallq  489 <u_connect+0x252>\n 489:\t8b 55 d8             \tmov    -0x28(%rbp),%edx\n 48c:\t89 10                \tmov    %edx,(%rax)\n 48e:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n 493:\teb 03                \tjmp    498 <u_connect+0x261>\n 495:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 498:\tc9                   \tleaveq \n 499:\tc3                   \tretq   \n", "code_s": "__int64 __fastcall u_connect(uint16_t a1, const char *a2) {\n  fd_set <span class=\"supfact\">writefds</span>;\n  struct sockaddr <span class=\"supfact\">addr</span>;\n  int v5;\n  unsigned int v6;\n  int v7;\n  unsigned int v8;\n  int v9;\n  int fd;\n  struct hostent *v11;\n  int v12;\n  if (inet_addr(a2) == Number) {\n    v11 = gethostbyname(a2);\n    if (!v11) {\n      *_errno_location() = Number;\n      return Number;\n    }\n    *(_DWORD *)&<span class=\"supfact\">addr</span>.sa_data[Number] =\n        **(_DWORD **)v11->h_addr_list;\n  } else {\n    *(_DWORD *)&<span class=\"supfact\">addr</span>.sa_data[Number] = inet_addr(a2);\n  }\n  *(_WORD *)<span class=\"supfact\">addr</span>.sa_data = htons(a1);\n  <span class=\"supfact\">addr</span>.sa_family = Number;\n  if ((unsigned int)u_ignore_sigpipe() == Number)\n    return Number;\n  fd = socket(Number, Number, Number);\n  if (fd == Number)\n    return Number;\n  v12 = connect(fd, &<span class=\"supfact\">addr</span>, Number);\n  if (v12 == Number &&\n      (*_errno_location() == Number || *_errno_location() == Number)) {\n    memset(&<span class=\"supfact\">writefds</span>, Number, sizeof(<span class=\"supfact\">writefds</span>));\n    v9 = Number;\n    v8 = (unsigned int)&<span class=\"supfact\">addr</span>;\n    for (<span class=\"supfact\">writefds</span>.fds_bits[fd / Number] |= Number L\n                                                           << (fd % Number);\n         ; <span class=\"supfact\">writefds</span>.fds_bits[fd / Number] |= Number L\n                                                             << (fd % Number)) {\n      v12 = select(fd + Number, Number L, &<span class=\"supfact\">writefds</span>, Number L,\n                   Number L);\n      if (v12 != Number || *_errno_location() != Number)\n        break;\n      memset(&<span class=\"supfact\">writefds</span>, Number,\n             sizeof(<span class=\"supfact\">writefds</span>));\n      v7 = Number;\n      v6 = (unsigned int)&<span class=\"supfact\">addr</span>;\n    }\n  }\n  if (v12 != Number)\n    return (unsigned int)fd;\n  v5 = *_errno_location();\n  while (close(fd) == Number && *_errno_location() == Number)\n    ;\n  *_errno_location() = v5;\n  return Number;\n}", "code_t": "int __cdecl u_connect(u_port_t port, char *hostn) {\n  fd_set <span class=\"supfact\">sockset</span>;\n  sockaddr_in <span class=\"supfact\">server</span>;\n  int error;\n  int __d1_0;\n  int __d0_0;\n  int __d1;\n  int __d0;\n  int sock;\n  hostent *phe;\n  int retval;\n  if (inet_addr(hostn) == Number) {\n    phe = gethostbyname(hostn);\n    if (!phe) {\n      *_errno_location() = Number;\n      return Number;\n    }\n    <span class=\"supfact\">server</span>.sin_addr.s_addr = **(_DWORD **)phe->h_addr_list;\n  } else {\n    <span class=\"supfact\">server</span>.sin_addr.s_addr = inet_addr(hostn);\n  }\n  <span class=\"supfact\">server</span>.sin_port = htons(port);\n  <span class=\"supfact\">server</span>.sin_family = Number;\n  if (u_ignore_sigpipe() == Number)\n    return Number;\n  sock = socket(Number, Number, Number);\n  if (sock == Number)\n    return Number;\n  retval =\n      connect(sock, (const struct sockaddr *)&<span class=\"supfact\">server</span>, Number);\n  if (retval == Number &&\n      (*_errno_location() == Number || *_errno_location() == Number)) {\n    memset(&<span class=\"supfact\">sockset</span>, Number, sizeof(<span class=\"supfact\">sockset</span>));\n    __d0 = Number;\n    __d1 = (unsigned int)&<span class=\"supfact\">server</span>;\n    for (<span class=\"supfact\">sockset</span>.__fds_bits[sock / Number] |=\n         Number L << (sock % Number);\n         ; <span class=\"supfact\">sockset</span>.__fds_bits[sock / Number] |=\n           Number L << (sock % Number)) {\n      retval = select(sock + Number, Number L, &<span class=\"supfact\">sockset</span>,\n                      Number L, Number L);\n      if (retval != Number || *_errno_location() != Number)\n        break;\n      memset(&<span class=\"supfact\">sockset</span>, Number, sizeof(<span class=\"supfact\">sockset</span>));\n      __d0_0 = Number;\n      __d1_0 = (unsigned int)&<span class=\"supfact\">server</span>;\n    }\n  }\n  if (retval != Number)\n    return sock;\n  error = *_errno_location();\n  while (close(sock) == Number && *_errno_location() == Number)\n    ;\n  *_errno_location() = error;\n  return Number;\n}", "var": [{"name": "addr", "type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }", "ref_name": "server", "ref_type": "struct sockaddr_in { sa_family_t sin_family; in_port_t sin_port; in_addr sin_addr; unsigned __int8[8] sin_zero; }"}, {"name": "writefds", "type": "struct fd_set { __fd_mask[16] __fds_bits; }", "ref_name": "sockset", "ref_type": "struct fd_set { __fd_mask[16] __fds_bits; }"}], "body_in_train": false}, {"repo_owner": "AlexanderVangelov", "repo_name": "pjsip", "path": "AlexanderVangelov/pjsip/1e1e7cb97ebb80eac8dbb33680b64d176ff61b4eaa68df0fca22659194da5490", "path_in_repo": "AlexanderVangelov/pjsip//pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/stateful_proxy", "objdump": "000000000040e2e8 <int_parse_status_line>:\n  40e2e8:\t55                   \tpush   %rbp\n  40e2e9:\t48 89 e5             \tmov    %rsp,%rbp\n  40e2ec:\t48 83 ec 20          \tsub    $0x20,%rsp\n  40e2f0:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  40e2f4:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n  40e2f8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40e2fc:\t48 89 c7             \tmov    %rax,%rdi\n  40e2ff:\te8 22 ec ff ff       \tcallq  40cf26 <parse_sip_version>\n  40e304:\t48 8d 55 f0          \tlea    -0x10(%rbp),%rdx\n  40e308:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40e30c:\tbe 40 98 48 00       \tmov    $0x489840,%esi\n  40e311:\t48 89 c7             \tmov    %rax,%rdi\n  40e314:\te8 4c 46 02 00       \tcallq  432965 <pj_scan_get>\n  40e319:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n  40e31d:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n  40e321:\t48 89 d1             \tmov    %rdx,%rcx\n  40e324:\tba e7 03 00 00       \tmov    $0x3e7,%edx\n  40e329:\tbe 64 00 00 00       \tmov    $0x64,%esi\n  40e32e:\t48 89 c7             \tmov    %rax,%rdi\n  40e331:\te8 09 d0 ff ff       \tcallq  40b33f <strtoi_validate>\n  40e336:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40e33a:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  40e33e:\t0f b6 00             \tmovzbl (%rax),%eax\n  40e341:\t3c 0d                \tcmp    $0xd,%al\n  40e343:\t74 2a                \tje     40e36f <int_parse_status_line+0x87>\n  40e345:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40e349:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  40e34d:\t0f b6 00             \tmovzbl (%rax),%eax\n  40e350:\t3c 0a                \tcmp    $0xa,%al\n  40e352:\t74 1b                \tje     40e36f <int_parse_status_line+0x87>\n  40e354:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  40e358:\t48 8d 50 08          \tlea    0x8(%rax),%rdx\n  40e35c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40e360:\tbe 70 99 48 00       \tmov    $0x489970,%esi\n  40e365:\t48 89 c7             \tmov    %rax,%rdi\n  40e368:\te8 f8 45 02 00       \tcallq  432965 <pj_scan_get>\n  40e36d:\teb 18                \tjmp    40e387 <int_parse_status_line+0x9f>\n  40e36f:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  40e373:\t48 c7 40 10 00 00 00 \tmovq   $0x0,0x10(%rax)\n  40e37a:\t00 \n  40e37b:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  40e37f:\t48 c7 40 08 00 00 00 \tmovq   $0x0,0x8(%rax)\n  40e386:\t00 \n  40e387:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40e38b:\t48 89 c7             \tmov    %rax,%rdi\n  40e38e:\te8 c4 4b 02 00       \tcallq  432f57 <pj_scan_get_newline>\n  40e393:\t90                   \tnop\n  40e394:\tc9                   \tleaveq \n  40e395:\tc3                   \tretq   ", "code_s": "__int64 __fastcall int_parse_status_line(__int64 a1, __int64 a2) {\n  _QWORD <span class=\"supfact\">v3</span>[Number];\n  parse_sip_version(a1);\n  pj_scan_get(a1, &unk_489840, <span class=\"supfact\">v3</span>);\n  strtoi_validate(<span class=\"supfact\">v3</span>, Number, Number, (_DWORD *)a2);\n  if (**(_BYTE **)(a1 + Number) == Number ||\n      **(_BYTE **)(a1 + Number) == Number) {\n    *(_QWORD *)(a2 + Number) = Number L;\n    *(_QWORD *)(a2 + Number) = Number L;\n  } else {\n    pj_scan_get(a1, &unk_489970, a2 + Number);\n  }\n  return pj_scan_get_newline(a1);\n}", "code_t": "void __cdecl int_parse_status_line(pj_scanner_0 *scanner,\n                                   pjsip_status_line_0 *status_line) {\n  pj_str_t_0 <span class=\"supfact\">token</span>;\n  parse_sip_version(scanner);\n  pj_scan_get(scanner, &pconst.pjsip_DIGIT_SPEC, &<span class=\"supfact\">token</span>);\n  strtoi_validate(&<span class=\"supfact\">token</span>, Number, Number, &status_line->code);\n  if (*scanner->curptr == Number || *scanner->curptr == Number) {\n    status_line->reason.slen = Number L;\n    status_line->reason.ptr = Number L;\n  } else {\n    pj_scan_get(scanner, &pconst.pjsip_NOT_NEWLINE, &status_line->reason);\n  }\n  pj_scan_get_newline(scanner);\n}", "var": [{"name": "v3", "type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }", "ref_name": "token", "ref_type": "struct pj_str_t_0 { char * ptr; pj_ssize_t slen; }"}], "body_in_train": false}, {"repo_owner": "josephgbr", "repo_name": "cups-pt_BR", "path": "josephgbr/cups-pt_BR/9e000c5258cbc547dc3ef736b5de990812af4d5dfe2453b60a5c8644159bdf15", "path_in_repo": "josephgbr/cups-pt_BR/cups-2.1.2/backend/snmp.o", "objdump": "0000000000000000 <main>:\n       0:\t55                   \tpush   %rbp\n       1:\t48 89 e5             \tmov    %rsp,%rbp\n       4:\t48 81 ec c0 00 00 00 \tsub    $0xc0,%rsp\n       b:\t89 bd 4c ff ff ff    \tmov    %edi,-0xb4(%rbp)\n      11:\t48 89 b5 40 ff ff ff \tmov    %rsi,-0xc0(%rbp)\n      18:\t83 bd 4c ff ff ff 02 \tcmpl   $0x2,-0xb4(%rbp)\n      1f:\t7e 23                \tjle    44 <main+0x44>\n      21:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 28 <main+0x28>\n      28:\t48 8b 00             \tmov    (%rax),%rax\n      2b:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 32 <main+0x32>\n      32:\t48 89 c7             \tmov    %rax,%rdi\n      35:\te8 00 00 00 00       \tcallq  3a <main+0x3a>\n      3a:\tb8 01 00 00 00       \tmov    $0x1,%eax\n      3f:\te9 5a 01 00 00       \tjmpq   19e <main+0x19e>\n      44:\t48 8d 3d da 0b 00 00 \tlea    0xbda(%rip),%rdi        # c25 <password_cb>\n      4b:\te8 00 00 00 00       \tcallq  50 <main+0x50>\n      50:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n      57:\tba 98 00 00 00       \tmov    $0x98,%edx\n      5c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n      61:\t48 89 c7             \tmov    %rax,%rdi\n      64:\te8 00 00 00 00       \tcallq  69 <main+0x69>\n      69:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n      70:\t48 83 c0 08          \tadd    $0x8,%rax\n      74:\t48 89 c7             \tmov    %rax,%rdi\n      77:\te8 00 00 00 00       \tcallq  7c <main+0x7c>\n      7c:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n      83:\t48 83 c0 08          \tadd    $0x8,%rax\n      87:\tbe 0e 00 00 00       \tmov    $0xe,%esi\n      8c:\t48 89 c7             \tmov    %rax,%rdi\n      8f:\te8 00 00 00 00       \tcallq  94 <main+0x94>\n      94:\t48 8d 05 46 05 00 00 \tlea    0x546(%rip),%rax        # 5e1 <alarm_handler>\n      9b:\t48 89 85 60 ff ff ff \tmov    %rax,-0xa0(%rbp)\n      a2:\t48 8d 85 60 ff ff ff \tlea    -0xa0(%rbp),%rax\n      a9:\tba 00 00 00 00       \tmov    $0x0,%edx\n      ae:\t48 89 c6             \tmov    %rax,%rsi\n      b1:\tbf 0e 00 00 00       \tmov    $0xe,%edi\n      b6:\te8 00 00 00 00       \tcallq  bb <main+0xbb>\n      bb:\tbf 02 00 00 00       \tmov    $0x2,%edi\n      c0:\te8 00 00 00 00       \tcallq  c5 <main+0xc5>\n      c5:\t89 85 58 ff ff ff    \tmov    %eax,-0xa8(%rbp)\n      cb:\t83 bd 58 ff ff ff 00 \tcmpl   $0x0,-0xa8(%rbp)\n      d2:\t79 0a                \tjns    de <main+0xde>\n      d4:\tb8 01 00 00 00       \tmov    $0x1,%eax\n      d9:\te9 c0 00 00 00       \tjmpq   19e <main+0x19e>\n      de:\tbf 0a 00 00 00       \tmov    $0xa,%edi\n      e3:\te8 00 00 00 00       \tcallq  e8 <main+0xe8>\n      e8:\t89 85 5c ff ff ff    \tmov    %eax,-0xa4(%rbp)\n      ee:\t83 bd 5c ff ff ff 00 \tcmpl   $0x0,-0xa4(%rbp)\n      f5:\t79 0c                \tjns    103 <main+0x103>\n      f7:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # fe <main+0xfe>\n      fe:\te8 00 00 00 00       \tcallq  103 <main+0x103>\n     103:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n     10a:\t48 83 c0 08          \tadd    $0x8,%rax\n     10e:\t48 8b 00             \tmov    (%rax),%rax\n     111:\t48 89 c7             \tmov    %rax,%rdi\n     114:\te8 a0 0e 00 00       \tcallq  fb9 <read_snmp_conf>\n     119:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 11f <main+0x11f>\n     11f:\t89 c7                \tmov    %eax,%edi\n     121:\te8 00 00 00 00       \tcallq  126 <main+0x126>\n     126:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     12b:\t48 8d 3d dd 04 00 00 \tlea    0x4dd(%rip),%rdi        # 60f <compare_cache>\n     132:\te8 00 00 00 00       \tcallq  137 <main+0x137>\n     137:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 13e <main+0x13e>\n     13e:\t8b 95 5c ff ff ff    \tmov    -0xa4(%rbp),%edx\n     144:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n     14a:\t89 d6                \tmov    %edx,%esi\n     14c:\t89 c7                \tmov    %eax,%edi\n     14e:\te8 98 1d 00 00       \tcallq  1eeb <scan_devices>\n     153:\t8b 85 58 ff ff ff    \tmov    -0xa8(%rbp),%eax\n     159:\t89 c7                \tmov    %eax,%edi\n     15b:\te8 00 00 00 00       \tcallq  160 <main+0x160>\n     160:\t83 bd 5c ff ff ff 00 \tcmpl   $0x0,-0xa4(%rbp)\n     167:\t78 0d                \tjs     176 <main+0x176>\n     169:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n     16f:\t89 c7                \tmov    %eax,%edi\n     171:\te8 00 00 00 00       \tcallq  176 <main+0x176>\n     176:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 17d <main+0x17d>\n     17d:\t48 89 c7             \tmov    %rax,%rdi\n     180:\te8 ec 07 00 00       \tcallq  971 <free_array>\n     185:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 18c <main+0x18c>\n     18c:\t48 89 c7             \tmov    %rax,%rdi\n     18f:\te8 dd 07 00 00       \tcallq  971 <free_array>\n     194:\te8 28 08 00 00       \tcallq  9c1 <free_cache>\n     199:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     19e:\tc9                   \tleaveq \n     19f:\tc3                   \tretq   ", "code_s": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  int result;\n  int v4;\n  int v5;\n  struct sigaction <span class=\"supfact\">s</span>;\n  if (argc <= Number) {\n    cupsSetPasswordCB(password_cb, argv, envp);\n    memset(&<span class=\"supfact\">s</span>, Number, sizeof(<span class=\"supfact\">s</span>));\n    sigemptyset(&<span class=\"supfact\">s</span>.sa_mask);\n    sigaddset(&<span class=\"supfact\">s</span>.sa_mask, Number);\n    <span class=\"supfact\">s</span>.sa_handler = (__sighandler_t)alarm_handler;\n    sigaction(Number, &<span class=\"supfact\">s</span>, Number L);\n    v4 = cupsSNMPOpen(Number L);\n    if (v4 >= Number) {\n      v5 = cupsSNMPOpen(Number L);\n      if (v5 < Number)\n        perror(String);\n      read_snmp_conf(argv[Number]);\n      cupsSNMPSetDebug((unsigned int)DebugLevel);\n      Devices = cupsArrayNew(compare_cache, Number L);\n      scan_devices((unsigned int)v4, (unsigned int)v5);\n      cupsSNMPClose((unsigned int)v4);\n      if (v5 >= Number)\n        cupsSNMPClose((unsigned int)v5);\n      free_array(Addresses);\n      free_array(Communities);\n      free_cache();\n      result = Number;\n    } else {\n      result = Number;\n    }\n  } else {\n    cupsLangPuts(stderr, String, envp);\n    result = Number;\n  }\n  return result;\n}", "code_t": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  int result;\n  int ipv4;\n  int ipv6;\n  sigaction <span class=\"supfact\">action</span>;\n  if (argc <= Number) {\n    cupsSetPasswordCB(password_cb, argv, envp);\n    memset(&<span class=\"supfact\">action</span>, Number, sizeof(<span class=\"supfact\">action</span>));\n    sigemptyset(&<span class=\"supfact\">action</span>.sa_mask);\n    sigaddset(&<span class=\"supfact\">action</span>.sa_mask, Number);\n    <span class=\"supfact\">action</span>.sa_handler = (__sighandler_t)alarm_handler;\n    sigaction_0(Number, &<span class=\"supfact\">action</span>, Number L);\n    ipv4 = cupsSNMPOpen(Number L);\n    if (ipv4 >= Number) {\n      ipv6 = cupsSNMPOpen(Number L);\n      if (ipv6 < Number)\n        perror(String);\n      read_snmp_conf(argv[Number]);\n      cupsSNMPSetDebug((unsigned int)DebugLevel);\n      Devices = (cups_array_t *)cupsArrayNew(compare_cache, Number L);\n      scan_devices(ipv4, ipv6);\n      cupsSNMPClose((unsigned int)ipv4);\n      if (ipv6 >= Number)\n        cupsSNMPClose((unsigned int)ipv6);\n      free_array(Addresses);\n      free_array(Communities);\n      free_cache();\n      result = Number;\n    } else {\n      result = Number;\n    }\n  } else {\n    cupsLangPuts(stderr, String, envp);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "s", "type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }", "ref_name": "action", "ref_type": "struct sigaction { $A264F945D93E77C42166F8517888D535 __sigaction_handler; __sigset_t sa_mask; int sa_flags; PADDING (4); void (*)(void) sa_restorer; }"}], "body_in_train": false}, {"repo_owner": "UgoLi", "repo_name": "freeswitch_1.9", "path": "UgoLi/freeswitch_1.9/f21e4291fcf413635acecc4ec465a89012b58d0294bd346a96cd46059f94a789", "path_in_repo": "UgoLi/freeswitch_1.9/freeswitch_src/libs/xmlrpc-c/examples/xmlrpc_asynch_client.o", "objdump": "000000000000012e <main>:\n 12e:\t55                   \tpush   %rbp\n 12f:\t48 89 e5             \tmov    %rsp,%rbp\n 132:\t48 83 ec 50          \tsub    $0x50,%rsp\n 136:\t89 7d bc             \tmov    %edi,-0x44(%rbp)\n 139:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n 13d:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n 144:\t00 \n 145:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n 14c:\t00 \n 14d:\t83 7d bc 01          \tcmpl   $0x1,-0x44(%rbp)\n 151:\t7e 28                \tjle    17b <main+0x4d>\n 153:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 15a <main+0x2c>\n 15a:\t48 89 c1             \tmov    %rax,%rcx\n 15d:\tba 1e 00 00 00       \tmov    $0x1e,%edx\n 162:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 167:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 16c:\te8 00 00 00 00       \tcallq  171 <main+0x43>\n 171:\tbf 01 00 00 00       \tmov    $0x1,%edi\n 176:\te8 00 00 00 00       \tcallq  17b <main+0x4d>\n 17b:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n 17f:\t48 89 c7             \tmov    %rax,%rdi\n 182:\te8 00 00 00 00       \tcallq  187 <main+0x59>\n 187:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n 18b:\t48 89 c7             \tmov    %rax,%rdi\n 18e:\te8 00 00 00 00       \tcallq  193 <main+0x65>\n 193:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n 197:\t48 89 c7             \tmov    %rax,%rdi\n 19a:\te8 61 fe ff ff       \tcallq  0 <die_if_fault_occurred>\n 19f:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n 1a3:\t48 83 ec 08          \tsub    $0x8,%rsp\n 1a7:\t48 8d 55 c8          \tlea    -0x38(%rbp),%rdx\n 1ab:\t52                   \tpush   %rdx\n 1ac:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n 1b2:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n 1b8:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 1bd:\tba 00 00 00 00       \tmov    $0x0,%edx\n 1c2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 1c7:\t48 89 c7             \tmov    %rax,%rdi\n 1ca:\te8 00 00 00 00       \tcallq  1cf <main+0xa1>\n 1cf:\t48 83 c4 10          \tadd    $0x10,%rsp\n 1d3:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n 1d7:\t48 89 c7             \tmov    %rax,%rdi\n 1da:\te8 21 fe ff ff       \tcallq  0 <die_if_fault_occurred>\n 1df:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n 1e6:\teb 69                \tjmp    251 <main+0x123>\n 1e8:\t8b 4d fc             \tmov    -0x4(%rbp),%ecx\n 1eb:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n 1ef:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 1f3:\t48 89 c6             \tmov    %rax,%rsi\n 1f6:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 1fb:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 200:\te8 00 00 00 00       \tcallq  205 <main+0xd7>\n 205:\t48 8b 75 c8          \tmov    -0x38(%rbp),%rsi\n 209:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n 20d:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n 211:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n 215:\t48 83 ec 08          \tsub    $0x8,%rsp\n 219:\t8b 7d fc             \tmov    -0x4(%rbp),%edi\n 21c:\t57                   \tpush   %rdi\n 21d:\t6a 05                \tpushq  $0x5\n 21f:\t68 00 00 00 00       \tpushq  $0x0\n 224:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n 22a:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n 230:\t48 89 c7             \tmov    %rax,%rdi\n 233:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 238:\te8 00 00 00 00       \tcallq  23d <main+0x10f>\n 23d:\t48 83 c4 20          \tadd    $0x20,%rsp\n 241:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n 245:\t48 89 c7             \tmov    %rax,%rdi\n 248:\te8 b3 fd ff ff       \tcallq  0 <die_if_fault_occurred>\n 24d:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 251:\t83 7d fc 02          \tcmpl   $0x2,-0x4(%rbp)\n 255:\t7e 91                \tjle    1e8 <main+0xba>\n 257:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 25c:\te8 00 00 00 00       \tcallq  261 <main+0x133>\n 261:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 265:\t48 89 c7             \tmov    %rax,%rdi\n 268:\te8 00 00 00 00       \tcallq  26d <main+0x13f>\n 26d:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 272:\te8 00 00 00 00       \tcallq  277 <main+0x149>\n 277:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 27b:\t48 89 c7             \tmov    %rax,%rdi\n 27e:\te8 00 00 00 00       \tcallq  283 <main+0x155>\n 283:\te8 00 00 00 00       \tcallq  288 <main+0x15a>\n 288:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 28d:\tc9                   \tleaveq \n 28e:\tc3                   \tretq   \n", "code_s": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  __int64 v3;\n  __int64 v5;\n  const char *<span class=\"supfact\">v6</span>[Number];\n  const char *v7;\n  const char *v8;\n  unsigned int i;\n  v8 = String;\n  v7 = String;\n  if (argc > Number) {\n    fwrite(String, Number, Number, stderr);\n    exit(Number);\n  }\n  xmlrpc_env_init(<span class=\"supfact\">v6</span>);\n  xmlrpc_client_setup_global_const(<span class=\"supfact\">v6</span>);\n  die_if_fault_occurred(<span class=\"supfact\">v6</span>);\n  xmlrpc_client_create(<span class=\"supfact\">v6</span>, Number L, String, String, Number L,\n                       Number L, &v5);\n  die_if_fault_occurred(<span class=\"supfact\">v6</span>);\n  for (i = Number; (int)i <= Number; ++i) {\n    printf(String, v8, v7, i);\n    xmlrpc_client_start_rpcf(<span class=\"supfact\">v6</span>, v5, v8, v7,\n                             handle_sample_add_response, Number L, String,\n                             Number L, i);\n    die_if_fault_occurred(<span class=\"supfact\">v6</span>);\n  }\n  puts(String);\n  xmlrpc_client_event_loop_finish(v5);\n  puts(String);\n  v3 = v5;\n  xmlrpc_client_destroy(v5);\n  xmlrpc_client_teardown_global_const(v3);\n  return Number;\n}", "code_t": "int __cdecl main(int argc, const char **argv, const char **envp) {\n  xmlrpc_client_0 *v3;\n  xmlrpc_client_0 *clientP;\n  xmlrpc_env <span class=\"supfact\">env</span>;\n  const char *methodName;\n  const char *serverUrl;\n  xmlrpc_int adder;\n  serverUrl = String;\n  methodName = String;\n  if (argc > Number) {\n    fwrite(String, Number, Number, stderr);\n    exit(Number);\n  }\n  xmlrpc_env_init(&<span class=\"supfact\">env</span>);\n  xmlrpc_client_setup_global_const(&<span class=\"supfact\">env</span>);\n  die_if_fault_occurred(&<span class=\"supfact\">env</span>);\n  xmlrpc_client_create(&<span class=\"supfact\">env</span>, Number L, String, String, Number L,\n                       Number L, &clientP);\n  die_if_fault_occurred(&<span class=\"supfact\">env</span>);\n  for (adder = Number; adder <= Number; ++adder) {\n    printf(String, serverUrl, methodName, (unsigned int)adder);\n    xmlrpc_client_start_rpcf(&<span class=\"supfact\">env</span>, clientP, serverUrl,\n                             methodName, handle_sample_add_response, Number L,\n                             String, Number L, (unsigned int)adder);\n    die_if_fault_occurred(&<span class=\"supfact\">env</span>);\n  }\n  puts(String);\n  xmlrpc_client_event_loop_finish(clientP);\n  puts(String);\n  v3 = clientP;\n  xmlrpc_client_destroy(clientP);\n  xmlrpc_client_teardown_global_const(v3);\n  return Number;\n}", "var": [{"name": "v6", "type": "char *[3]", "ref_name": "env", "ref_type": "struct xmlrpc_env { int fault_occurred; int fault_code; char * fault_string; }"}], "body_in_train": false}, {"repo_owner": "shishuo365", "repo_name": "ffmpeg-h265", "path": "shishuo365/ffmpeg-h265/dd16ee63dc8b5e879c2b8762dd579ec94c577ebfacfd79e64c3ecd7f4f8e4490", "path_in_repo": "shishuo365/ffmpeg-h265//libavfilter/avf_concat.o", "objdump": "0000000000000d82 <send_silence>:\n     d82:\t48 83 ec 78          \tsub    $0x78,%rsp\n     d86:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n     d8b:\t89 74 24 14          \tmov    %esi,0x14(%rsp)\n     d8f:\t89 54 24 10          \tmov    %edx,0x10(%rsp)\n     d93:\t48 89 4c 24 08       \tmov    %rcx,0x8(%rsp)\n     d98:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     d9d:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n     da1:\t48 89 44 24 50       \tmov    %rax,0x50(%rsp)\n     da6:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     dab:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n     daf:\t8b 54 24 10          \tmov    0x10(%rsp),%edx\n     db3:\t48 c1 e2 03          \tshl    $0x3,%rdx\n     db7:\t48 01 d0             \tadd    %rdx,%rax\n     dba:\t48 8b 00             \tmov    (%rax),%rax\n     dbd:\t48 89 44 24 48       \tmov    %rax,0x48(%rsp)\n     dc2:\t48 8b 44 24 50       \tmov    0x50(%rsp),%rax\n     dc7:\t48 8b 48 28          \tmov    0x28(%rax),%rcx\n     dcb:\t8b 54 24 14          \tmov    0x14(%rsp),%edx\n     dcf:\t48 89 d0             \tmov    %rdx,%rax\n     dd2:\t48 c1 e0 06          \tshl    $0x6,%rax\n     dd6:\t48 01 d0             \tadd    %rdx,%rax\n     dd9:\t48 c1 e0 05          \tshl    $0x5,%rax\n     ddd:\t48 01 c8             \tadd    %rcx,%rax\n     de0:\t48 8b 10             \tmov    (%rax),%rdx\n     de3:\t48 8b 44 24 50       \tmov    0x50(%rsp),%rax\n     de8:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n     dec:\t48 01 d0             \tadd    %rdx,%rax\n     def:\t48 2b 44 24 08       \tsub    0x8(%rsp),%rax\n     df4:\t48 89 44 24 40       \tmov    %rax,0x40(%rsp)\n     df9:\t48 c7 44 24 60 00 00 \tmovq   $0x0,0x60(%rsp)\n     e00:\t00 00 \n     e02:\tc7 44 24 2c 01 00 00 \tmovl   $0x1,0x2c(%rsp)\n     e09:\t00 \n     e0a:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     e0f:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n     e13:\t8b 54 24 14          \tmov    0x14(%rsp),%edx\n     e17:\t48 c1 e2 03          \tshl    $0x3,%rdx\n     e1b:\t48 01 d0             \tadd    %rdx,%rax\n     e1e:\t48 8b 00             \tmov    (%rax),%rax\n     e21:\t8b 40 40             \tmov    0x40(%rax),%eax\n     e24:\t89 44 24 30          \tmov    %eax,0x30(%rsp)\n     e28:\t8b 44 24 30          \tmov    0x30(%rsp),%eax\n     e2c:\t85 c0                \ttest   %eax,%eax\n     e2e:\t75 0a                \tjne    e3a <send_silence+0xb8>\n     e30:\tb8 be aa b8 de       \tmov    $0xdeb8aabe,%eax\n     e35:\te9 6e 01 00 00       \tjmpq   fa8 <send_silence+0x226>\n     e3a:\t48 8b 44 24 50       \tmov    0x50(%rsp),%rax\n     e3f:\t48 8b 48 28          \tmov    0x28(%rax),%rcx\n     e43:\t8b 54 24 14          \tmov    0x14(%rsp),%edx\n     e47:\t48 89 d0             \tmov    %rdx,%rax\n     e4a:\t48 c1 e0 06          \tshl    $0x6,%rax\n     e4e:\t48 01 d0             \tadd    %rdx,%rax\n     e51:\t48 c1 e0 05          \tshl    $0x5,%rax\n     e55:\t48 01 c8             \tadd    %rcx,%rax\n     e58:\t48 8b 00             \tmov    (%rax),%rax\n     e5b:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     e60:\t48 89 d1             \tmov    %rdx,%rcx\n     e63:\t48 29 c1             \tsub    %rax,%rcx\n     e66:\t48 8b 54 24 2c       \tmov    0x2c(%rsp),%rdx\n     e6b:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n     e70:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n     e74:\t48 89 c6             \tmov    %rax,%rsi\n     e77:\t48 89 cf             \tmov    %rcx,%rdi\n     e7a:\te8 00 00 00 00       \tcallq  e7f <send_silence+0xfd>\n     e7f:\t48 89 44 24 68       \tmov    %rax,0x68(%rsp)\n     e84:\t8b 44 24 30          \tmov    0x30(%rsp),%eax\n     e88:\t3d 7f bb 00 00       \tcmp    $0xbb7f,%eax\n     e8d:\t7e 1d                \tjle    eac <send_silence+0x12a>\n     e8f:\t8b 44 24 30          \tmov    0x30(%rsp),%eax\n     e93:\t48 63 d0             \tmovslq %eax,%rdx\n     e96:\t48 69 d2 67 66 66 66 \timul   $0x66666667,%rdx,%rdx\n     e9d:\t48 c1 ea 20          \tshr    $0x20,%rdx\n     ea1:\td1 fa                \tsar    %edx\n     ea3:\tc1 f8 1f             \tsar    $0x1f,%eax\n     ea6:\t29 c2                \tsub    %eax,%edx\n     ea8:\t89 d0                \tmov    %edx,%eax\n     eaa:\teb 05                \tjmp    eb1 <send_silence+0x12f>\n     eac:\tb8 80 25 00 00       \tmov    $0x2580,%eax\n     eb1:\t89 44 24 5c          \tmov    %eax,0x5c(%rsp)\n     eb5:\te9 dd 00 00 00       \tjmpq   f97 <send_silence+0x215>\n     eba:\t8b 44 24 5c          \tmov    0x5c(%rsp),%eax\n     ebe:\t48 98                \tcltq   \n     ec0:\t48 39 44 24 68       \tcmp    %rax,0x68(%rsp)\n     ec5:\t48 0f 4e 44 24 68    \tcmovle 0x68(%rsp),%rax\n     ecb:\t89 44 24 5c          \tmov    %eax,0x5c(%rsp)\n     ecf:\t8b 54 24 5c          \tmov    0x5c(%rsp),%edx\n     ed3:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n     ed8:\t89 d6                \tmov    %edx,%esi\n     eda:\t48 89 c7             \tmov    %rax,%rdi\n     edd:\te8 00 00 00 00       \tcallq  ee2 <send_silence+0x160>\n     ee2:\t48 89 44 24 38       \tmov    %rax,0x38(%rsp)\n     ee7:\t48 83 7c 24 38 00    \tcmpq   $0x0,0x38(%rsp)\n     eed:\t75 0a                \tjne    ef9 <send_silence+0x177>\n     eef:\tb8 f4 ff ff ff       \tmov    $0xfffffff4,%eax\n     ef4:\te9 af 00 00 00       \tjmpq   fa8 <send_silence+0x226>\n     ef9:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n     efe:\t8b 70 44             \tmov    0x44(%rax),%esi\n     f01:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n     f06:\t8b 88 c4 00 00 00    \tmov    0xc4(%rax),%ecx\n     f0c:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n     f11:\t48 8b 40 60          \tmov    0x60(%rax),%rax\n     f15:\t8b 54 24 5c          \tmov    0x5c(%rsp),%edx\n     f19:\t41 89 f0             \tmov    %esi,%r8d\n     f1c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     f21:\t48 89 c7             \tmov    %rax,%rdi\n     f24:\te8 00 00 00 00       \tcallq  f29 <send_silence+0x1a7>\n     f29:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n     f2e:\t48 8b 50 48          \tmov    0x48(%rax),%rdx\n     f32:\t48 8b 4c 24 2c       \tmov    0x2c(%rsp),%rcx\n     f37:\t48 8b 44 24 60       \tmov    0x60(%rsp),%rax\n     f3c:\t48 89 ce             \tmov    %rcx,%rsi\n     f3f:\t48 89 c7             \tmov    %rax,%rdi\n     f42:\te8 00 00 00 00       \tcallq  f47 <send_silence+0x1c5>\n     f47:\t48 8b 54 24 40       \tmov    0x40(%rsp),%rdx\n     f4c:\t48 01 c2             \tadd    %rax,%rdx\n     f4f:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n     f54:\t48 89 90 88 00 00 00 \tmov    %rdx,0x88(%rax)\n     f5b:\t48 8b 54 24 38       \tmov    0x38(%rsp),%rdx\n     f60:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n     f65:\t48 89 d6             \tmov    %rdx,%rsi\n     f68:\t48 89 c7             \tmov    %rax,%rdi\n     f6b:\te8 00 00 00 00       \tcallq  f70 <send_silence+0x1ee>\n     f70:\t89 44 24 34          \tmov    %eax,0x34(%rsp)\n     f74:\t83 7c 24 34 00       \tcmpl   $0x0,0x34(%rsp)\n     f79:\t79 06                \tjns    f81 <send_silence+0x1ff>\n     f7b:\t8b 44 24 34          \tmov    0x34(%rsp),%eax\n     f7f:\teb 27                \tjmp    fa8 <send_silence+0x226>\n     f81:\t8b 44 24 5c          \tmov    0x5c(%rsp),%eax\n     f85:\t48 98                \tcltq   \n     f87:\t48 01 44 24 60       \tadd    %rax,0x60(%rsp)\n     f8c:\t8b 44 24 5c          \tmov    0x5c(%rsp),%eax\n     f90:\t48 98                \tcltq   \n     f92:\t48 29 44 24 68       \tsub    %rax,0x68(%rsp)\n     f97:\t48 83 7c 24 68 00    \tcmpq   $0x0,0x68(%rsp)\n     f9d:\t0f 85 17 ff ff ff    \tjne    eba <send_silence+0x138>\n     fa3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     fa8:\t48 83 c4 78          \tadd    $0x78,%rsp\n     fac:\tc3                   \tretq   ", "code_s": "__int64 __fastcall send_silence(_QWORD *a1, unsigned int a2, unsigned int a3,\n                                __int64 a4) {\n  int v5;\n  unsigned int v6;\n  __int64 <span class=\"supfact\">v7</span>;\n  int v8;\n  __int64 v9;\n  __int64 v10;\n  __int64 v11;\n  __int64 v12;\n  int v13;\n  __int64 v14;\n  __int64 v15;\n  v12 = a1[Number];\n  v11 = *(_QWORD *)(Number L * a3 + a1[Number]);\n  v10 = *(_QWORD *)(*(_QWORD *)(v12 + Number) + Number L * a2) +\n        *(_QWORD *)(v12 + Number) - a4;\n  v14 = Number L;\n  LODWORD(<span class=\"supfact\">v7</span>) = Number;\n  HIDWORD(<span class=\"supfact\">v7</span>) =\n      *(_DWORD *)(*(_QWORD *)(Number L * a2 + a1[Number]) + Number L);\n  if (!HIDWORD(<span class=\"supfact\">v7</span>))\n    return Number L;\n  v15 =\n      av_rescale_q(a4 - *(_QWORD *)(*(_QWORD *)(v12 + Number) + Number L * a2),\n                   *(_QWORD *)(v11 + Number), <span class=\"supfact\">v7</span>);\n  if (SHIDWORD(<span class=\"supfact\">v7</span>) <= Number)\n    v5 = Number;\n  else\n    v5 = SHIDWORD(<span class=\"supfact\">v7</span>) / Number;\n  v13 = v5;\n  while (v15) {\n    v6 = v13;\n    if (v15 <= v13)\n      v6 = v15;\n    v13 = v6;\n    v9 = ff_get_audio_buffer(v11, v6);\n    if (!v9)\n      return Number L;\n    av_samples_set_silence(*(_QWORD *)(v9 + Number), Number L,\n                           (unsigned int)v13, *(unsigned int *)(v11 + Number),\n                           *(unsigned int *)(v11 + Number));\n    *(_QWORD *)(v9 + Number) =\n        av_rescale_q(v14, <span class=\"supfact\">v7</span>, *(_QWORD *)(v11 + Number)) + v10;\n    v8 = ff_filter_frame(v11, v9);\n    if (v8 < Number)\n      return (unsigned int)v8;\n    v14 += v13;\n    v15 -= v13;\n  }\n  return Number L;\n}", "code_t": "int __cdecl send_silence(AVFilterContext_0 *ctx, unsigned int in_no,\n                         unsigned int out_no, int64_t seg_delta) {\n  int v5;\n  unsigned int v6;\n  AVRational_0 <span class=\"supfact\">rate_tb</span>;\n  int ret;\n  AVFrame_0 *buf;\n  int64_t base_pts;\n  AVFilterLink_0 *outlink;\n  ConcatContext_0 *cat;\n  int frame_nb_samples;\n  int64_t sent;\n  int64_t nb_samples;\n  cat = (ConcatContext_0 *)ctx->priv;\n  outlink = ctx->outputs[out_no];\n  base_pts = cat->in[in_no].pts + cat->delta_ts - seg_delta;\n  sent = Number L;\n  <span class=\"supfact\">rate_tb</span>.num = Number;\n  <span class=\"supfact\">rate_tb</span>.den = ctx->inputs[in_no]->sample_rate;\n  if (!<span class=\"supfact\">rate_tb</span>.den)\n    return Number;\n  nb_samples = ((__int64(__fastcall *)(_QWORD, _QWORD, _QWORD))av_rescale_q)(\n      seg_delta - cat->in[in_no].pts, *(_QWORD *)&outlink->time_base,\n      <span class=\"supfact\">rate_tb</span>);\n  if (<span class=\"supfact\">rate_tb</span>.den <= Number)\n    v5 = Number;\n  else\n    v5 = <span class=\"supfact\">rate_tb</span>.den / Number;\n  frame_nb_samples = v5;\n  while (nb_samples) {\n    v6 = frame_nb_samples;\n    if (nb_samples <= frame_nb_samples)\n      v6 = nb_samples;\n    frame_nb_samples = v6;\n    buf = (AVFrame_0 *)ff_get_audio_buffer(outlink, v6);\n    if (!buf)\n      return Number;\n    av_samples_set_silence(\n        buf->extended_data, Number L, (unsigned int)frame_nb_samples,\n        (unsigned int)outlink->channels, (unsigned int)outlink->format);\n    buf->pts =\n        ((__int64(__fastcall *)(_QWORD, _QWORD, _QWORD))av_rescale_q)(\n            sent, <span class=\"supfact\">rate_tb</span>, *(_QWORD *)&outlink->time_base) +\n        base_pts;\n    ret = ff_filter_frame(outlink, buf);\n    if (ret < Number)\n      return ret;\n    sent += frame_nb_samples;\n    nb_samples -= frame_nb_samples;\n  }\n  return Number;\n}", "var": [{"name": "v7", "type": "struct AVRational_0 { int num; int den; }", "ref_name": "rate_tb", "ref_type": "struct AVRational_0 { int num; int den; }"}], "body_in_train": false}, {"repo_owner": "CPFL", "repo_name": "xen", "path": "CPFL/xen/bf7ded588946945d1153eacf57c6228d878082f2fae1060e1c2e695ce80936ea", "path_in_repo": "CPFL/xen/xen/arch/x86/mm/built_in.o", "objdump": "", "code_s": "__int64 __fastcall shadow_set_l2e_0(__int64 a1, unsigned __int64 *a2,\n                                    unsigned __int64 a3, __int64 a4) {\n  __int64 v5;\n  __int64 v6;\n  __int64 v7;\n  __int64 v8;\n  __int64 v9;\n  __int64 v10;\n  int v11;\n  int v12;\n  unsigned __int64 v14;\n  unsigned __int64 *v15;\n  __int64 v16;\n  __int64 <span class=\"supfact\">v17</span>;\n  __int64 <span class=\"supfact\">v18</span>;\n  __int64 <span class=\"supfact\">v19</span>;\n  unsigned __int64 v20;\n  unsigned __int64 v21;\n  __int64 v22;\n  unsigned int v23;\n  v16 = a1;\n  v15 = a2;\n  v14 = a3;\n  v23 = Number;\n  if (!a2)\n    BUG();\n  v20 = *v15;\n  if (v20 == v14)\n    return Number L;\n  v22 = (mfn_x_10(a4) << Number) | (unsigned __int16)v15 & Number;\n  if ((shadow_l2e_get_flags_0(v14) & Number) != Number) {\n    <span class=\"supfact\">v19</span> = shadow_l2e_get_mfn_0(v14);\n    v5 = mfn_x_10(<span class=\"supfact\">v19</span>);\n    if ((*(_BYTE *)(Number * pfn_to_pdx_10(v5) - Number + Number) & Number) ==\n        Number)\n      BUG();\n    if (!(unsigned int)sh_get_ref_0(v16, <span class=\"supfact\">v19</span>, v22)) {\n      printk(String, String, Number L);\n      _domain_crash(v16);\n      return Number L;\n    }\n    v6 = mfn_x_10(<span class=\"supfact\">v19</span>);\n    v21 = Number * pfn_to_pdx_10(v6) - Number;\n    if ((*(_BYTE *)(v21 + Number) & Number) == Number)\n      BUG();\n    v7 = pdx_to_pfn_10(*(unsigned int *)(v21 + Number));\n    <span class=\"supfact\">v18</span> = mfn_10(v7);\n    if ((*(_BYTE *)(v21 + Number) & Number) != Number) {\n      v8 = mfn_x_10(<span class=\"supfact\">v18</span>);\n      if ((unsigned int)_mfn_valid(v8)) {\n        if (mfn_is_out_of_sync_1(<span class=\"supfact\">v18</span>))\n          sh_resync(v16, <span class=\"supfact\">v18</span>);\n      }\n    }\n  }\n  shadow_write_entries_0(v15, &v14, Number, a4);\n  v23 |= Number;\n  if ((shadow_l2e_get_flags_0(v20) & Number) != Number) {\n    <span class=\"supfact\">v17</span> = shadow_l2e_get_mfn_0(v20);\n    v9 = mfn_x_10(<span class=\"supfact\">v17</span>);\n    v10 = shadow_l2e_get_mfn_0(v14);\n    if (v9 != mfn_x_10(v10) ||\n        (v11 = shadow_l2e_get_flags_0(v14), v12 = shadow_l2e_get_flags_0(v20),\n         !perms_strictly_increased_0(v12, v11))) {\n      v23 |= Number;\n    }\n    sh_put_ref_1(v16, <span class=\"supfact\">v17</span>, v22);\n  }\n  return v23;\n}", "code_t": "int __cdecl shadow_set_l2e_0(domain *d, shadow_l2e_t *sl2e,\n                             shadow_l2e_t new_sl2e, mfn_t sl2mfn) {\n  unsigned __int64 v5;\n  unsigned __int64 v6;\n  unsigned __int64 v7;\n  unsigned __int64 v8;\n  unsigned __int64 v9;\n  mfn_t v10;\n  u32 v11;\n  u32 v12;\n  shadow_l2e_t new_sl2ea;\n  shadow_l2e_t *sl2ea;\n  domain *da;\n  mfn_t <span class=\"supfact\">osl1mfn</span>;\n  mfn_t <span class=\"supfact\">gl1mfn</span>;\n  mfn_t <span class=\"supfact\">sl1mfn</span>;\n  shadow_l2e_t old_sl2e;\n  page_info *sp_0;\n  paddr_t paddr;\n  int flags;\n  da = d;\n  sl2ea = sl2e;\n  new_sl2ea.l2 = new_sl2e.l2;\n  flags = Number;\n  if (!sl2e)\n    BUG();\n  old_sl2e.l2 = sl2ea->l2;\n  if (old_sl2e.l2 == new_sl2ea.l2)\n    return Number;\n  paddr = (mfn_x_10(sl2mfn) << Number) | (unsigned __int16)sl2ea & Number;\n  if ((shadow_l2e_get_flags_0(new_sl2ea) & Number) != Number) {\n    <span class=\"supfact\">sl1mfn</span>.mfn = shadow_l2e_get_mfn_0(new_sl2ea).mfn;\n    v5 = mfn_x_10(<span class=\"supfact\">sl1mfn</span>);\n    if ((*(_BYTE *)(Number * pfn_to_pdx_10(v5) - Number + Number) & Number) ==\n        Number)\n      BUG();\n    if (!sh_get_ref_0(da, <span class=\"supfact\">sl1mfn</span>, paddr)) {\n      printk(String, String, Number L);\n      _domain_crash(da);\n      return Number;\n    }\n    v6 = mfn_x_10(<span class=\"supfact\">sl1mfn</span>);\n    sp_0 = (page_info *)(Number * pfn_to_pdx_10(v6) - Number);\n    if ((sp_0->u.free.need_tlbflush & Number) == Number)\n      BUG();\n    v7 = pdx_to_pfn_10(sp_0->v.inuse._domain);\n    <span class=\"supfact\">gl1mfn</span>.mfn = mfn_10(v7).mfn;\n    if ((sp_0->u.free.need_tlbflush & Number) != Number) {\n      v8 = mfn_x_10(<span class=\"supfact\">gl1mfn</span>);\n      if ((unsigned int)_mfn_valid(v8)) {\n        if (mfn_is_out_of_sync_1(<span class=\"supfact\">gl1mfn</span>))\n          sh_resync(da, <span class=\"supfact\">gl1mfn</span>);\n      }\n    }\n  }\n  shadow_write_entries_0(sl2ea, &new_sl2ea, Number, sl2mfn);\n  flags |= Number;\n  if ((shadow_l2e_get_flags_0(old_sl2e) & Number) != Number) {\n    <span class=\"supfact\">osl1mfn</span>.mfn = shadow_l2e_get_mfn_0(old_sl2e).mfn;\n    v9 = mfn_x_10(<span class=\"supfact\">osl1mfn</span>);\n    v10.mfn = shadow_l2e_get_mfn_0(new_sl2ea).mfn;\n    if (v9 != mfn_x_10(v10) || (v11 = shadow_l2e_get_flags_0(new_sl2ea),\n                                v12 = shadow_l2e_get_flags_0(old_sl2e),\n                                !perms_strictly_increased_0(v12, v11))) {\n      flags |= Number;\n    }\n    sh_put_ref_1(da, <span class=\"supfact\">osl1mfn</span>, paddr);\n  }\n  return flags;\n}", "var": [{"name": "v19", "type": "page_info *", "ref_name": "sl1mfn", "ref_type": "struct mfn_t { unsigned __int64 mfn; }"}, {"name": "v18", "type": "page_info *", "ref_name": "gl1mfn", "ref_type": "struct mfn_t { unsigned __int64 mfn; }"}, {"name": "v17", "type": "page_info *", "ref_name": "osl1mfn", "ref_type": "struct mfn_t { unsigned __int64 mfn; }"}], "body_in_train": false}, {"repo_owner": "ADoby", "repo_name": "Project_Space_Pirate", "path": "ADoby/Project_Space_Pirate/f5868d766fb7a6da99203947602aabe3fafe3cf8a4c6ba6b81446ab5cc9fa247", "path_in_repo": "ADoby/Project_Space_Pirate/ProjectFiles/cocos2dx/proj.linux/obj/release/platform/linux/CCFileUtilsLinux.o", "objdump": "0000000000000130 <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev>:\n 130:\t41 55                \tpush   %r13\n 132:\t49 89 f5             \tmov    %rsi,%r13\n 135:\t41 54                \tpush   %r12\n 137:\t49 89 fc             \tmov    %rdi,%r12\n 13a:\tbf 01 00 00 00       \tmov    $0x1,%edi\n 13f:\t55                   \tpush   %rbp\n 140:\t48 81 ec a0 00 00 00 \tsub    $0xa0,%rsp\n 147:\t48 8b b6 90 00 00 00 \tmov    0x90(%rsi),%rsi\n 14e:\t48 8d 54 24 10       \tlea    0x10(%rsp),%rdx\n 153:\te8 00 00 00 00       \tcallq  158 <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev+0x28>\n 158:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n 15c:\t25 00 f0 00 00       \tand    $0xf000,%eax\n 161:\t3d 00 40 00 00       \tcmp    $0x4000,%eax\n 166:\t74 11                \tje     179 <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev+0x49>\n 168:\t49 8b bd 90 00 00 00 \tmov    0x90(%r13),%rdi\n 16f:\tbe e4 01 00 00       \tmov    $0x1e4,%esi\n 174:\te8 00 00 00 00       \tcallq  179 <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev+0x49>\n 179:\t49 8d 7c 24 10       \tlea    0x10(%r12),%rdi\n 17e:\t49 89 3c 24          \tmov    %rdi,(%r12)\n 182:\t49 8b ad 90 00 00 00 \tmov    0x90(%r13),%rbp\n 189:\t4d 8b ad 98 00 00 00 \tmov    0x98(%r13),%r13\n 190:\t48 89 e8             \tmov    %rbp,%rax\n 193:\t4c 01 e8             \tadd    %r13,%rax\n 196:\t74 05                \tje     19d <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev+0x6d>\n 198:\t48 85 ed             \ttest   %rbp,%rbp\n 19b:\t74 79                \tje     216 <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev+0xe6>\n 19d:\t4c 89 6c 24 08       \tmov    %r13,0x8(%rsp)\n 1a2:\t49 83 fd 0f          \tcmp    $0xf,%r13\n 1a6:\t77 38                \tja     1e0 <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev+0xb0>\n 1a8:\t49 83 fd 01          \tcmp    $0x1,%r13\n 1ac:\t75 2a                \tjne    1d8 <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev+0xa8>\n 1ae:\t0f b6 45 00          \tmovzbl 0x0(%rbp),%eax\n 1b2:\t41 88 44 24 10       \tmov    %al,0x10(%r12)\n 1b7:\t4d 89 6c 24 08       \tmov    %r13,0x8(%r12)\n 1bc:\t4c 89 e0             \tmov    %r12,%rax\n 1bf:\t42 c6 04 2f 00       \tmovb   $0x0,(%rdi,%r13,1)\n 1c4:\t48 81 c4 a0 00 00 00 \tadd    $0xa0,%rsp\n 1cb:\t5d                   \tpop    %rbp\n 1cc:\t41 5c                \tpop    %r12\n 1ce:\t41 5d                \tpop    %r13\n 1d0:\tc3                   \tretq   \n 1d1:\t0f 1f 80 00 00 00 00 \tnopl   0x0(%rax)\n 1d8:\t4d 85 ed             \ttest   %r13,%r13\n 1db:\t74 da                \tje     1b7 <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev+0x87>\n 1dd:\teb 21                \tjmp    200 <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev+0xd0>\n 1df:\t90                   \tnop\n 1e0:\t4c 89 e7             \tmov    %r12,%rdi\n 1e3:\t48 8d 74 24 08       \tlea    0x8(%rsp),%rsi\n 1e8:\t31 d2                \txor    %edx,%edx\n 1ea:\te8 00 00 00 00       \tcallq  1ef <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev+0xbf>\n 1ef:\t49 89 04 24          \tmov    %rax,(%r12)\n 1f3:\t48 89 c7             \tmov    %rax,%rdi\n 1f6:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n 1fb:\t49 89 44 24 10       \tmov    %rax,0x10(%r12)\n 200:\t4c 89 ea             \tmov    %r13,%rdx\n 203:\t48 89 ee             \tmov    %rbp,%rsi\n 206:\te8 00 00 00 00       \tcallq  20b <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev+0xdb>\n 20b:\t4c 8b 6c 24 08       \tmov    0x8(%rsp),%r13\n 210:\t49 8b 3c 24          \tmov    (%r12),%rdi\n 214:\teb a1                \tjmp    1b7 <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev+0x87>\n 216:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 21d <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev+0xed>\n 21d:\te8 00 00 00 00       \tcallq  222 <_ZN7cocos2d14FileUtilsLinux15getWritablePathB5cxx11Ev+0xf2>\n 222:\t66 66 2e 0f 1f 84 00 \tdata16 nopw %cs:0x0(%rax,%rax,1)\n 229:\t00 00 00 00 \n 22d:\t0f 1f 00             \tnopl   (%rax)", "code_s": "__int64 *__fastcall cocos2d\n    FileUtilsLinux getWritablePath[abi:cxx11](__int64 *a1, __int64 a2) {\n  void *v3;\n  _BYTE *v4;\n  size_t v5;\n  __int64 *result;\n  __int64 v7;\n  size_t v8;\n  struct stat <span class=\"supfact\">stat_buf</span>;\n  _xstat(Number, *(const char **)(a2 + Number), &<span class=\"supfact\">stat_buf</span>);\n  if ((<span class=\"supfact\">stat_buf</span>.st_mode & Number) != Number)\n    mkdir(*(const char **)(a2 + Number), Number);\n  v3 = a1 + Number;\n  *a1 = (__int64)(a1 + Number);\n  v4 = *(_BYTE **)(a2 + Number);\n  v5 = *(_QWORD *)(a2 + Number);\n  if (&v4[v5] && !v4)\n    std __throw_logic_error(String);\n  v8 = *(_QWORD *)(a2 + Number);\n  if (v5 > Number) {\n    v7 = std __cxx11\n        basic_string<char, std char_traits<char>, std allocator<char>>\n        _M_create(a1, &v8, Number L);\n    *a1 = v7;\n    v3 = (void *)v7;\n    a1[Number] = v8;\n    goto LABEL_12;\n  }\n  if (v5 != Number) {\n    if (!v5)\n      goto LABEL_8;\n  LABEL_12:\n    memcpy(v3, v4, v5);\n    v5 = v8;\n    v3 = (void *)*a1;\n    goto LABEL_8;\n  }\n  *((_BYTE *)a1 + Number) = *v4;\nLABEL_8:\n  a1[Number] = v5;\n  result = a1;\n  *((_BYTE *)v3 + v5) = Number;\n  return result;\n}", "code_t": "__int64 *__fastcall cocos2d\n    FileUtilsLinux getWritablePath[abi:cxx11](__int64 *a1, __int64 a2) {\n  void *v3;\n  _BYTE *v4;\n  size_t v5;\n  __int64 *result;\n  __int64 v7;\n  size_t v8;\n  struct stat <span class=\"supfact\">stat_buf</span>;\n  _xstat(Number, *(const char **)(a2 + Number), &<span class=\"supfact\">stat_buf</span>);\n  if ((<span class=\"supfact\">stat_buf</span>.st_mode & Number) != Number)\n    mkdir(*(const char **)(a2 + Number), Number);\n  v3 = a1 + Number;\n  *a1 = (__int64)(a1 + Number);\n  v4 = *(_BYTE **)(a2 + Number);\n  v5 = *(_QWORD *)(a2 + Number);\n  if (&v4[v5] && !v4)\n    std __throw_logic_error(String);\n  v8 = *(_QWORD *)(a2 + Number);\n  if (v5 > Number) {\n    v7 = std __cxx11\n        basic_string<char, std char_traits<char>, std allocator<char>>\n        _M_create(a1, &v8, Number L);\n    *a1 = v7;\n    v3 = (void *)v7;\n    a1[Number] = v8;\n    goto LABEL_12;\n  }\n  if (v5 != Number) {\n    if (!v5)\n      goto LABEL_8;\n  LABEL_12:\n    memcpy(v3, v4, v5);\n    v5 = v8;\n    v3 = (void *)*a1;\n    goto LABEL_8;\n  }\n  *((_BYTE *)a1 + Number) = *v4;\nLABEL_8:\n  a1[Number] = v5;\n  result = a1;\n  *((_BYTE *)v3 + v5) = Number;\n  return result;\n}", "var": [{"name": "stat_buf", "type": "struct struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __unused; }", "ref_name": "stat_buf", "ref_type": "struct struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __unused; }"}], "body_in_train": false}, {"repo_owner": "dfangx", "repo_name": "dwm", "path": "dfangx/dwm/84d3ecb2dc6eafb03eb6a472ecd98c9a7a0296988dafe2ce1ebb42676dd29fcd", "path_in_repo": "dfangx/dwm//dwm", "objdump": "0000000000409402 <restack>:\n  409402:\t55                   \tpush   %rbp\n  409403:\t48 89 e5             \tmov    %rsp,%rbp\n  409406:\t48 81 ec 10 01 00 00 \tsub    $0x110,%rsp\n  40940d:\t48 89 bd f8 fe ff ff \tmov    %rdi,-0x108(%rbp)\n  409414:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n  40941b:\t48 89 c7             \tmov    %rax,%rdi\n  40941e:\te8 cc d5 ff ff       \tcallq  4069ef <drawbar>\n  409423:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n  40942a:\t48 8b 40 60          \tmov    0x60(%rax),%rax\n  40942e:\t48 85 c0             \ttest   %rax,%rax\n  409431:\t0f 84 8f 01 00 00    \tje     4095c6 <restack+0x1c4>\n  409437:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n  40943e:\t48 8b 40 60          \tmov    0x60(%rax),%rax\n  409442:\t8b 80 58 01 00 00    \tmov    0x158(%rax),%eax\n  409448:\t85 c0                \ttest   %eax,%eax\n  40944a:\t75 24                \tjne    409470 <restack+0x6e>\n  40944c:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n  409453:\t8b 50 44             \tmov    0x44(%rax),%edx\n  409456:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n  40945d:\t89 d2                \tmov    %edx,%edx\n  40945f:\t48 83 c2 10          \tadd    $0x10,%rdx\n  409463:\t48 8b 04 d0          \tmov    (%rax,%rdx,8),%rax\n  409467:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  40946b:\t48 85 c0             \ttest   %rax,%rax\n  40946e:\t75 24                \tjne    409494 <restack+0x92>\n  409470:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n  409477:\t48 8b 40 60          \tmov    0x60(%rax),%rax\n  40947b:\t48 8b 90 88 01 00 00 \tmov    0x188(%rax),%rdx\n  409482:\t48 8b 05 47 80 00 00 \tmov    0x8047(%rip),%rax        # 4114d0 <dpy>\n  409489:\t48 89 d6             \tmov    %rdx,%rsi\n  40948c:\t48 89 c7             \tmov    %rax,%rdi\n  40948f:\te8 dc 9c ff ff       \tcallq  403170 <XRaiseWindow@plt>\n  409494:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n  40949b:\t8b 50 44             \tmov    0x44(%rax),%edx\n  40949e:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n  4094a5:\t89 d2                \tmov    %edx,%edx\n  4094a7:\t48 83 c2 10          \tadd    $0x10,%rdx\n  4094ab:\t48 8b 04 d0          \tmov    (%rax,%rdx,8),%rax\n  4094af:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  4094b3:\t48 85 c0             \ttest   %rax,%rax\n  4094b6:\t0f 84 d4 00 00 00    \tje     409590 <restack+0x18e>\n  4094bc:\tc7 85 20 ff ff ff 01 \tmovl   $0x1,-0xe0(%rbp)\n  4094c3:\t00 00 00 \n  4094c6:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n  4094cd:\t48 8b 40 78          \tmov    0x78(%rax),%rax\n  4094d1:\t48 89 85 18 ff ff ff \tmov    %rax,-0xe8(%rbp)\n  4094d8:\t48 8b 85 f8 fe ff ff \tmov    -0x108(%rbp),%rax\n  4094df:\t48 8b 40 68          \tmov    0x68(%rax),%rax\n  4094e3:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  4094e7:\te9 99 00 00 00       \tjmpq   409585 <restack+0x183>\n  4094ec:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4094f0:\t8b 80 58 01 00 00    \tmov    0x158(%rax),%eax\n  4094f6:\t85 c0                \ttest   %eax,%eax\n  4094f8:\t75 7c                \tjne    409576 <restack+0x174>\n  4094fa:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4094fe:\t8b 88 50 01 00 00    \tmov    0x150(%rax),%ecx\n  409504:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  409508:\t48 8b 80 80 01 00 00 \tmov    0x180(%rax),%rax\n  40950f:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  409513:\t48 8b 92 80 01 00 00 \tmov    0x180(%rdx),%rdx\n  40951a:\t8b 52 40             \tmov    0x40(%rdx),%edx\n  40951d:\t89 d2                \tmov    %edx,%edx\n  40951f:\t48 83 c2 10          \tadd    $0x10,%rdx\n  409523:\t8b 44 90 08          \tmov    0x8(%rax,%rdx,4),%eax\n  409527:\t21 c8                \tand    %ecx,%eax\n  409529:\t85 c0                \ttest   %eax,%eax\n  40952b:\t75 0e                \tjne    40953b <restack+0x139>\n  40952d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  409531:\t8b 80 6c 01 00 00    \tmov    0x16c(%rax),%eax\n  409537:\t85 c0                \ttest   %eax,%eax\n  409539:\t74 3b                \tje     409576 <restack+0x174>\n  40953b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40953f:\t48 8b b0 88 01 00 00 \tmov    0x188(%rax),%rsi\n  409546:\t48 8b 05 83 7f 00 00 \tmov    0x7f83(%rip),%rax        # 4114d0 <dpy>\n  40954d:\t48 8d 95 00 ff ff ff \tlea    -0x100(%rbp),%rdx\n  409554:\t48 89 d1             \tmov    %rdx,%rcx\n  409557:\tba 60 00 00 00       \tmov    $0x60,%edx\n  40955c:\t48 89 c7             \tmov    %rax,%rdi\n  40955f:\te8 9c 9b ff ff       \tcallq  403100 <XConfigureWindow@plt>\n  409564:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  409568:\t48 8b 80 88 01 00 00 \tmov    0x188(%rax),%rax\n  40956f:\t48 89 85 18 ff ff ff \tmov    %rax,-0xe8(%rbp)\n  409576:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40957a:\t48 8b 80 78 01 00 00 \tmov    0x178(%rax),%rax\n  409581:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  409585:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n  40958a:\t0f 85 5c ff ff ff    \tjne    4094ec <restack+0xea>\n  409590:\t48 8b 05 39 7f 00 00 \tmov    0x7f39(%rip),%rax        # 4114d0 <dpy>\n  409597:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  40959c:\t48 89 c7             \tmov    %rax,%rdi\n  40959f:\te8 fc 9e ff ff       \tcallq  4034a0 <XSync@plt>\n  4095a4:\t90                   \tnop\n  4095a5:\t48 8b 05 24 7f 00 00 \tmov    0x7f24(%rip),%rax        # 4114d0 <dpy>\n  4095ac:\t48 8d 95 30 ff ff ff \tlea    -0xd0(%rbp),%rdx\n  4095b3:\tbe 10 00 00 00       \tmov    $0x10,%esi\n  4095b8:\t48 89 c7             \tmov    %rax,%rdi\n  4095bb:\te8 40 9e ff ff       \tcallq  403400 <XCheckMaskEvent@plt>\n  4095c0:\t85 c0                \ttest   %eax,%eax\n  4095c2:\t75 e1                \tjne    4095a5 <restack+0x1a3>\n  4095c4:\teb 01                \tjmp    4095c7 <restack+0x1c5>\n  4095c6:\t90                   \tnop\n  4095c7:\tc9                   \tleaveq \n  4095c8:\tc3                   \tretq   ", "code_s": "int __fastcall restack(__int64 a1) {\n  __int64 v1;\n  XWindowChanges <span class=\"supfact\">v3</span>;\n  XEvent v4;\n  __int64 i;\n  drawbar(a1);\n  v1 = *(_QWORD *)(a1 + Number);\n  if (v1) {\n    if (*(_DWORD *)(*(_QWORD *)(a1 + Number) + Number L) ||\n        !*(_QWORD *)(*(_QWORD *)(a1 + Number * (*(unsigned int *)(a1 + Number) +\n                                                Number L)) +\n                     Number L)) {\n      XRaiseWindow(dpy, *(_QWORD *)(*(_QWORD *)(a1 + Number) + Number L));\n    }\n    if (*(_QWORD *)(*(_QWORD *)(a1 + Number * (*(unsigned int *)(a1 + Number) +\n                                               Number L)) +\n                    Number L)) {\n      <span class=\"supfact\">v3</span>.stack_mode = Number;\n      <span class=\"supfact\">v3</span>.sibling = *(_QWORD *)(a1 + Number);\n      for (i = *(_QWORD *)(a1 + Number); i; i = *(_QWORD *)(i + Number)) {\n        if (!*(_DWORD *)(i + Number) &&\n            ((*(_DWORD *)(i + Number) &\n              *(_DWORD *)(*(_QWORD *)(i + Number) +\n                          Number * (*(unsigned int *)(*(_QWORD *)(i + Number) +\n                                                      Number L) +\n                                    Number L) +\n                          Number)) != Number ||\n             *(_DWORD *)(i + Number))) {\n          XConfigureWindow(dpy, *(_QWORD *)(i + Number), Number,\n                           &<span class=\"supfact\">v3</span>);\n          <span class=\"supfact\">v3</span>.sibling = *(_QWORD *)(i + Number);\n        }\n      }\n    }\n    XSync(dpy, Number);\n    do\n      LODWORD(v1) = XCheckMaskEvent(dpy, Number L, &v4);\n    while ((_DWORD)v1);\n  }\n  return v1;\n}", "code_t": "void __cdecl restack(Monitor_0 *m) {\n  XWindowChanges <span class=\"supfact\">wc</span>;\n  XEvent ev;\n  Client_0 *c;\n  drawbar(m);\n  if (m->sel) {\n    if (m->sel->isfloating || !m->lt[m->sellt]->arrange)\n      XRaiseWindow(dpy, m->sel->win);\n    if (m->lt[m->sellt]->arrange) {\n      <span class=\"supfact\">wc</span>.stack_mode = Number;\n      <span class=\"supfact\">wc</span>.sibling = m->barwin;\n      for (c = m->stack; c; c = c->snext) {\n        if (!c->isfloating &&\n            ((c->tags & c->mon->tagset[c->mon->seltags]) != Number ||\n             c->issticky)) {\n          XConfigureWindow(dpy, c->win, Number, &<span class=\"supfact\">wc</span>);\n          <span class=\"supfact\">wc</span>.sibling = c->win;\n        }\n      }\n    }\n    XSync(dpy, Number);\n    while (XCheckMaskEvent(dpy, Number L, &ev))\n      ;\n  }\n}", "var": [{"name": "v3", "type": "struct XWindowChanges { int x; int y; int width; int height; int border_width; PADDING (4); Window sibling; int stack_mode; PADDING (4); }", "ref_name": "wc", "ref_type": "struct XWindowChanges { int x; int y; int width; int height; int border_width; PADDING (4); Window sibling; int stack_mode; PADDING (4); }"}], "body_in_train": false}, {"repo_owner": "rogerjowett", "repo_name": "ClientServerMAME", "path": "rogerjowett/ClientServerMAME/167d712463e0992729e10389549ca204bb5a890bb1dd0460101cee04a39115ca", "path_in_repo": "rogerjowett/ClientServerMAME/mame/obj/sdl/mame64/mame/drivers/taito_f2.o", "objdump": "000000000000a053 <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring>:\n    a053:\t55                   \tpush   %rbp\n    a054:\t48 89 e5             \tmov    %rsp,%rbp\n    a057:\t53                   \tpush   %rbx\n    a058:\t48 81 ec 88 00 00 00 \tsub    $0x88,%rsp\n    a05f:\t48 89 7d 88          \tmov    %rdi,-0x78(%rbp)\n    a063:\t48 89 75 80          \tmov    %rsi,-0x80(%rbp)\n    a067:\t48 89 95 78 ff ff ff \tmov    %rdx,-0x88(%rbp)\n    a06e:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    a072:\t48 89 c7             \tmov    %rax,%rdi\n    a075:\te8 00 00 00 00       \tcallq  a07a <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0x27>\n    a07a:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    a081:\t00 \n    a082:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    a089:\t00 \n    a08a:\t48 c7 45 d8 00 00 00 \tmovq   $0x0,-0x28(%rbp)\n    a091:\t00 \n    a092:\tc7 45 d4 00 00 00 00 \tmovl   $0x0,-0x2c(%rbp)\n    a099:\t48 8b 95 78 ff ff ff \tmov    -0x88(%rbp),%rdx\n    a0a0:\t48 8b 4d 80          \tmov    -0x80(%rbp),%rcx\n    a0a4:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    a0a8:\t48 89 ce             \tmov    %rcx,%rsi\n    a0ab:\t48 89 c7             \tmov    %rax,%rdi\n    a0ae:\te8 7e f3 ff ff       \tcallq  9431 <_ZL25construct_ioport_dondokodR8device_tR11tagged_listI17input_port_configER7astring>\n    a0b3:\t48 8b 4d 88          \tmov    -0x78(%rbp),%rcx\n    a0b7:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n    a0bb:\tba 00 00 00 00       \tmov    $0x0,%edx\n    a0c0:\t48 89 ce             \tmov    %rcx,%rsi\n    a0c3:\t48 89 c7             \tmov    %rax,%rdi\n    a0c6:\te8 00 00 00 00       \tcallq  a0cb <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0x78>\n    a0cb:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    a0cf:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    a0d6:\t00 \n    a0d7:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    a0de:\t00 \n    a0df:\tc7 45 d4 00 00 00 00 \tmovl   $0x0,-0x2c(%rbp)\n    a0e6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    a0ea:\t41 b8 09 00 00 00    \tmov    $0x9,%r8d\n    a0f0:\tb9 30 00 00 00       \tmov    $0x30,%ecx\n    a0f5:\tba 30 00 00 00       \tmov    $0x30,%edx\n    a0fa:\tbe 05 00 00 00       \tmov    $0x5,%esi\n    a0ff:\t48 89 c7             \tmov    %rax,%rdi\n    a102:\te8 00 00 00 00       \tcallq  a107 <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0xb4>\n    a107:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    a10b:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    a112:\t00 \n    a113:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    a117:\tba 11 00 00 00       \tmov    $0x11,%edx\n    a11c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    a121:\t48 89 c7             \tmov    %rax,%rdi\n    a124:\te8 00 00 00 00       \tcallq  a129 <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0xd6>\n    a129:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    a12d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    a131:\t8b 00                \tmov    (%rax),%eax\n    a133:\t83 e0 10             \tand    $0x10,%eax\n    a136:\t89 c1                \tmov    %eax,%ecx\n    a138:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    a13c:\tba 12 00 00 00       \tmov    $0x12,%edx\n    a141:\t89 ce                \tmov    %ecx,%esi\n    a143:\t48 89 c7             \tmov    %rax,%rdi\n    a146:\te8 00 00 00 00       \tcallq  a14b <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0xf8>\n    a14b:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    a14f:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    a153:\t8b 00                \tmov    (%rax),%eax\n    a155:\t83 e0 20             \tand    $0x20,%eax\n    a158:\t89 c1                \tmov    %eax,%ecx\n    a15a:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    a15e:\tba 15 00 00 00       \tmov    $0x15,%edx\n    a163:\t89 ce                \tmov    %ecx,%esi\n    a165:\t48 89 c7             \tmov    %rax,%rdi\n    a168:\te8 00 00 00 00       \tcallq  a16d <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0x11a>\n    a16d:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    a171:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    a175:\t8b 00                \tmov    (%rax),%eax\n    a177:\t83 e0 30             \tand    $0x30,%eax\n    a17a:\t89 c1                \tmov    %eax,%ecx\n    a17c:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    a180:\tba 1c 00 00 00       \tmov    $0x1c,%edx\n    a185:\t89 ce                \tmov    %ecx,%esi\n    a187:\t48 89 c7             \tmov    %rax,%rdi\n    a18a:\te8 00 00 00 00       \tcallq  a18f <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0x13c>\n    a18f:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    a193:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    a197:\t41 b8 63 00 00 00    \tmov    $0x63,%r8d\n    a19d:\tb9 c0 00 00 00       \tmov    $0xc0,%ecx\n    a1a2:\tba c0 00 00 00       \tmov    $0xc0,%edx\n    a1a7:\tbe 05 00 00 00       \tmov    $0x5,%esi\n    a1ac:\t48 89 c7             \tmov    %rax,%rdi\n    a1af:\te8 00 00 00 00       \tcallq  a1b4 <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0x161>\n    a1b4:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    a1b8:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    a1bf:\t00 \n    a1c0:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    a1c4:\tba 12 00 00 00       \tmov    $0x12,%edx\n    a1c9:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    a1ce:\t48 89 c7             \tmov    %rax,%rdi\n    a1d1:\te8 00 00 00 00       \tcallq  a1d6 <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0x183>\n    a1d6:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    a1da:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    a1de:\t8b 00                \tmov    (%rax),%eax\n    a1e0:\t83 e0 40             \tand    $0x40,%eax\n    a1e3:\t89 c1                \tmov    %eax,%ecx\n    a1e5:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    a1e9:\tba 15 00 00 00       \tmov    $0x15,%edx\n    a1ee:\t89 ce                \tmov    %ecx,%esi\n    a1f0:\t48 89 c7             \tmov    %rax,%rdi\n    a1f3:\te8 00 00 00 00       \tcallq  a1f8 <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0x1a5>\n    a1f8:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    a1fc:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    a200:\t8b 00                \tmov    (%rax),%eax\n    a202:\t25 80 00 00 00       \tand    $0x80,%eax\n    a207:\t89 c1                \tmov    %eax,%ecx\n    a209:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    a20d:\tba 1c 00 00 00       \tmov    $0x1c,%edx\n    a212:\t89 ce                \tmov    %ecx,%esi\n    a214:\t48 89 c7             \tmov    %rax,%rdi\n    a217:\te8 00 00 00 00       \tcallq  a21c <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0x1c9>\n    a21c:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    a220:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    a224:\t8b 00                \tmov    (%rax),%eax\n    a226:\t25 c0 00 00 00       \tand    $0xc0,%eax\n    a22b:\t89 c1                \tmov    %eax,%ecx\n    a22d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    a231:\tba 00 00 00 00       \tmov    $0x0,%edx\n    a236:\t89 ce                \tmov    %ecx,%esi\n    a238:\t48 89 c7             \tmov    %rax,%rdi\n    a23b:\te8 00 00 00 00       \tcallq  a240 <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0x1ed>\n    a240:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    a244:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    a248:\t48 89 c7             \tmov    %rax,%rdi\n    a24b:\te8 00 00 00 00       \tcallq  a250 <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0x1fd>\n    a250:\teb 1a                \tjmp    a26c <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0x219>\n    a252:\t48 89 c3             \tmov    %rax,%rbx\n    a255:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    a259:\t48 89 c7             \tmov    %rax,%rdi\n    a25c:\te8 00 00 00 00       \tcallq  a261 <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0x20e>\n    a261:\t48 89 d8             \tmov    %rbx,%rax\n    a264:\t48 89 c7             \tmov    %rax,%rdi\n    a267:\te8 00 00 00 00       \tcallq  a26c <_ZL26construct_ioport_dondokoduR8device_tR11tagged_listI17input_port_configER7astring+0x219>\n    a26c:\t48 81 c4 88 00 00 00 \tadd    $0x88,%rsp\n    a273:\t5b                   \tpop    %rbx\n    a274:\t5d                   \tpop    %rbp\n    a275:\tc3                   \tretq   ", "code_s": "void __fastcall construct_ioport_dondokodu(__int64 a1, __int64 a2, __int64 a3) {\n  char <span class=\"supfact\">v4</span>[Number];\n  int v5;\n  __int64 v6;\n  _DWORD *v7;\n  __int64 v8;\n  astring astring((astring *)<span class=\"supfact\">v4</span>);\n  v8 = Number L;\n  v7 = Number L;\n  v6 = Number L;\n  v5 = Number;\n  construct_ioport_dondokod(a1, a2, a3);\n  v6 = ioconfig_modify_port(a2, a1, String);\n  v7 = Number L;\n  v8 = Number L;\n  v5 = Number;\n  v7 = (_DWORD *)ioconfig_alloc_field(v6, Number L, Number L, Number L,\n                                      Number L);\n  v8 = Number L;\n  v8 = ioconfig_alloc_setting(v7, Number L, Number L);\n  v8 = ioconfig_alloc_setting(v7, *v7 & Number, Number L);\n  v8 = ioconfig_alloc_setting(v7, *v7 & Number, Number L);\n  v8 = ioconfig_alloc_setting(v7, *v7 & Number, Number L);\n  v7 = (_DWORD *)ioconfig_alloc_field(v6, Number L, Number L, Number L,\n                                      Number L);\n  v8 = Number L;\n  v8 = ioconfig_alloc_setting(v7, Number L, Number L);\n  v8 = ioconfig_alloc_setting(v7, *v7 & Number, Number L);\n  v8 = ioconfig_alloc_setting(v7, *v7 & Number, Number L);\n  v8 = ioconfig_alloc_setting(v7, *v7 & Number, String);\n  astring ~astring((astring *)<span class=\"supfact\">v4</span>);\n}", "code_t": "void __cdecl construct_ioport_dondokodu(device_t *owner, ioport_list *portlist,\n                                        astring *errorbuf) {\n  astring <span class=\"supfact\">fulltag</span>;\n  input_port_value maskbits;\n  input_port_config *curport;\n  input_field_config *curfield;\n  input_setting_config *cursetting;\n  astring astring(&<span class=\"supfact\">fulltag</span>);\n  cursetting = Number L;\n  curfield = Number L;\n  curport = Number L;\n  maskbits = Number;\n  construct_ioport_dondokod(owner, portlist, errorbuf);\n  curport = (input_port_config *)ioconfig_modify_port(portlist, owner, String);\n  curfield = Number L;\n  cursetting = Number L;\n  maskbits = Number;\n  curfield = (input_field_config *)ioconfig_alloc_field(\n      curport, Number, Number, Number, (const char *)&loc_8 + Number);\n  cursetting = Number L;\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, Number, (const char *)&loc_10 + Number);\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, curfield->mask & Number, (const char *)&loc_10 + Number);\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, curfield->mask & Number, (const char *)&loc_14 + Number);\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, curfield->mask & Number, (const char *)&loc_1A + Number);\n  curfield = (input_field_config *)ioconfig_alloc_field(\n      curport, Number, Number, Number, (const char *)&loc_62 + Number);\n  cursetting = Number L;\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, Number, (const char *)&loc_10 + Number);\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, curfield->mask & Number, (const char *)&loc_14 + Number);\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, curfield->mask & Number, (const char *)&loc_1A + Number);\n  cursetting = (input_setting_config *)ioconfig_alloc_setting(\n      curfield, curfield->mask & Number, String);\n  astring ~astring(&<span class=\"supfact\">fulltag</span>);\n}", "var": [{"name": "v4", "type": "struct astring { _astring_base baseclass_0; }", "ref_name": "fulltag", "ref_type": "struct astring { _astring_base baseclass_0; }"}], "body_in_train": false}, {"repo_owner": "khuedoan98", "repo_name": "st", "path": "khuedoan98/st/99f7f1f6ff1706ba581b706c1a991facf8b4d0eab0e198d20f2913ed51bf1601", "path_in_repo": "khuedoan98/st//st", "objdump": "000000000040a3bb <bpress>:\n  40a3bb:\t55                   \tpush   %rbp\n  40a3bc:\t48 89 e5             \tmov    %rsp,%rbp\n  40a3bf:\t53                   \tpush   %rbx\n  40a3c0:\t48 83 ec 48          \tsub    $0x48,%rsp\n  40a3c4:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n  40a3c8:\t8b 05 ea 40 01 00    \tmov    0x140ea(%rip),%eax        # 41e4b8 <win+0x18>\n  40a3ce:\t25 18 c0 00 00       \tand    $0xc018,%eax\n  40a3d3:\t85 c0                \ttest   %eax,%eax\n  40a3d5:\t74 24                \tje     40a3fb <bpress+0x40>\n  40a3d7:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  40a3db:\t8b 50 50             \tmov    0x50(%rax),%edx\n  40a3de:\t8b 05 c8 bd 00 00    \tmov    0xbdc8(%rip),%eax        # 4161ac <forceselmod>\n  40a3e4:\t21 d0                \tand    %edx,%eax\n  40a3e6:\t85 c0                \ttest   %eax,%eax\n  40a3e8:\t75 11                \tjne    40a3fb <bpress+0x40>\n  40a3ea:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  40a3ee:\t48 89 c7             \tmov    %rax,%rdi\n  40a3f1:\te8 5c fd ff ff       \tcallq  40a152 <mousereport>\n  40a3f6:\te9 53 02 00 00       \tjmpq   40a64e <bpress+0x293>\n  40a3fb:\t48 c7 45 e8 80 5f 41 \tmovq   $0x415f80,-0x18(%rbp)\n  40a402:\t00 \n  40a403:\teb 61                \tjmp    40a466 <bpress+0xab>\n  40a405:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  40a409:\t8b 50 54             \tmov    0x54(%rax),%edx\n  40a40c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a410:\t8b 00                \tmov    (%rax),%eax\n  40a412:\t39 c2                \tcmp    %eax,%edx\n  40a414:\t75 4b                \tjne    40a461 <bpress+0xa6>\n  40a416:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  40a41a:\t8b 50 50             \tmov    0x50(%rax),%edx\n  40a41d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a421:\t8b 40 04             \tmov    0x4(%rax),%eax\n  40a424:\t89 d6                \tmov    %edx,%esi\n  40a426:\t89 c7                \tmov    %eax,%edi\n  40a428:\te8 bd 38 00 00       \tcallq  40dcea <match>\n  40a42d:\t85 c0                \ttest   %eax,%eax\n  40a42f:\t74 30                \tje     40a461 <bpress+0xa6>\n  40a431:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a435:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  40a439:\t48 89 c7             \tmov    %rax,%rdi\n  40a43c:\te8 cf 8e ff ff       \tcallq  403310 <strlen@plt>\n  40a441:\t48 89 c1             \tmov    %rax,%rcx\n  40a444:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40a448:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  40a44c:\tba 01 00 00 00       \tmov    $0x1,%edx\n  40a451:\t48 89 ce             \tmov    %rcx,%rsi\n  40a454:\t48 89 c7             \tmov    %rax,%rdi\n  40a457:\te8 02 b2 ff ff       \tcallq  40565e <ttywrite>\n  40a45c:\te9 ed 01 00 00       \tjmpq   40a64e <bpress+0x293>\n  40a461:\t48 83 45 e8 10       \taddq   $0x10,-0x18(%rbp)\n  40a466:\tb8 a0 5f 41 00       \tmov    $0x415fa0,%eax\n  40a46b:\t48 39 45 e8          \tcmp    %rax,-0x18(%rbp)\n  40a46f:\t72 94                \tjb     40a405 <bpress+0x4a>\n  40a471:\t48 c7 45 e0 a0 5f 41 \tmovq   $0x415fa0,-0x20(%rbp)\n  40a478:\t00 \n  40a479:\teb 4b                \tjmp    40a4c6 <bpress+0x10b>\n  40a47b:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  40a47f:\t8b 50 54             \tmov    0x54(%rax),%edx\n  40a482:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  40a486:\t8b 00                \tmov    (%rax),%eax\n  40a488:\t39 c2                \tcmp    %eax,%edx\n  40a48a:\t75 35                \tjne    40a4c1 <bpress+0x106>\n  40a48c:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  40a490:\t8b 50 50             \tmov    0x50(%rax),%edx\n  40a493:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  40a497:\t8b 40 04             \tmov    0x4(%rax),%eax\n  40a49a:\t89 d6                \tmov    %edx,%esi\n  40a49c:\t89 c7                \tmov    %eax,%edi\n  40a49e:\te8 47 38 00 00       \tcallq  40dcea <match>\n  40a4a3:\t85 c0                \ttest   %eax,%eax\n  40a4a5:\t74 1a                \tje     40a4c1 <bpress+0x106>\n  40a4a7:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  40a4ab:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n  40a4af:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n  40a4b3:\t48 83 c2 10          \tadd    $0x10,%rdx\n  40a4b7:\t48 89 d7             \tmov    %rdx,%rdi\n  40a4ba:\tff d0                \tcallq  *%rax\n  40a4bc:\te9 8d 01 00 00       \tjmpq   40a64e <bpress+0x293>\n  40a4c1:\t48 83 45 e0 18       \taddq   $0x18,-0x20(%rbp)\n  40a4c6:\tb8 d0 5f 41 00       \tmov    $0x415fd0,%eax\n  40a4cb:\t48 39 45 e0          \tcmp    %rax,-0x20(%rbp)\n  40a4cf:\t72 aa                \tjb     40a47b <bpress+0xc0>\n  40a4d1:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  40a4d5:\t8b 40 54             \tmov    0x54(%rax),%eax\n  40a4d8:\t83 f8 01             \tcmp    $0x1,%eax\n  40a4db:\t0f 85 6d 01 00 00    \tjne    40a64e <bpress+0x293>\n  40a4e1:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  40a4e5:\t48 89 c6             \tmov    %rax,%rsi\n  40a4e8:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  40a4ed:\te8 1e 93 ff ff       \tcallq  403810 <clock_gettime@plt>\n  40a4f2:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n  40a4f6:\t48 8b 05 8b 3f 01 00 \tmov    0x13f8b(%rip),%rax        # 41e488 <xsel+0x28>\n  40a4fd:\t48 29 c2             \tsub    %rax,%rdx\n  40a500:\t48 89 d0             \tmov    %rdx,%rax\n  40a503:\t48 69 c0 e8 03 00 00 \timul   $0x3e8,%rax,%rax\n  40a50a:\tf2 48 0f 2a c8       \tcvtsi2sd %rax,%xmm1\n  40a50f:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n  40a513:\t48 8b 05 76 3f 01 00 \tmov    0x13f76(%rip),%rax        # 41e490 <xsel+0x30>\n  40a51a:\t48 29 c2             \tsub    %rax,%rdx\n  40a51d:\t48 89 d0             \tmov    %rdx,%rax\n  40a520:\tf2 48 0f 2a c0       \tcvtsi2sd %rax,%xmm0\n  40a525:\tf2 0f 10 15 1b 7b 00 \tmovsd  0x7b1b(%rip),%xmm2        # 412048 <base64_digits+0x1fe8>\n  40a52c:\t00 \n  40a52d:\tf2 0f 5e c2          \tdivsd  %xmm2,%xmm0\n  40a531:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n  40a535:\t8b 05 d9 b1 00 00    \tmov    0xb1d9(%rip),%eax        # 415714 <tripleclicktimeout>\n  40a53b:\t89 c0                \tmov    %eax,%eax\n  40a53d:\t48 85 c0             \ttest   %rax,%rax\n  40a540:\t78 07                \tjs     40a549 <bpress+0x18e>\n  40a542:\tf2 48 0f 2a c0       \tcvtsi2sd %rax,%xmm0\n  40a547:\teb 15                \tjmp    40a55e <bpress+0x1a3>\n  40a549:\t48 89 c2             \tmov    %rax,%rdx\n  40a54c:\t48 d1 ea             \tshr    %rdx\n  40a54f:\t83 e0 01             \tand    $0x1,%eax\n  40a552:\t48 09 c2             \tor     %rax,%rdx\n  40a555:\tf2 48 0f 2a c2       \tcvtsi2sd %rdx,%xmm0\n  40a55a:\tf2 0f 58 c0          \taddsd  %xmm0,%xmm0\n  40a55e:\t66 0f 2f c1          \tcomisd %xmm1,%xmm0\n  40a562:\t72 0c                \tjb     40a570 <bpress+0x1b5>\n  40a564:\tc7 45 dc 02 00 00 00 \tmovl   $0x2,-0x24(%rbp)\n  40a56b:\te9 82 00 00 00       \tjmpq   40a5f2 <bpress+0x237>\n  40a570:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n  40a574:\t48 8b 05 fd 3e 01 00 \tmov    0x13efd(%rip),%rax        # 41e478 <xsel+0x18>\n  40a57b:\t48 29 c2             \tsub    %rax,%rdx\n  40a57e:\t48 89 d0             \tmov    %rdx,%rax\n  40a581:\t48 69 c0 e8 03 00 00 \timul   $0x3e8,%rax,%rax\n  40a588:\tf2 48 0f 2a c8       \tcvtsi2sd %rax,%xmm1\n  40a58d:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n  40a591:\t48 8b 05 e8 3e 01 00 \tmov    0x13ee8(%rip),%rax        # 41e480 <xsel+0x20>\n  40a598:\t48 29 c2             \tsub    %rax,%rdx\n  40a59b:\t48 89 d0             \tmov    %rdx,%rax\n  40a59e:\tf2 48 0f 2a c0       \tcvtsi2sd %rax,%xmm0\n  40a5a3:\tf2 0f 10 15 9d 7a 00 \tmovsd  0x7a9d(%rip),%xmm2        # 412048 <base64_digits+0x1fe8>\n  40a5aa:\t00 \n  40a5ab:\tf2 0f 5e c2          \tdivsd  %xmm2,%xmm0\n  40a5af:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n  40a5b3:\t8b 05 57 b1 00 00    \tmov    0xb157(%rip),%eax        # 415710 <doubleclicktimeout>\n  40a5b9:\t89 c0                \tmov    %eax,%eax\n  40a5bb:\t48 85 c0             \ttest   %rax,%rax\n  40a5be:\t78 07                \tjs     40a5c7 <bpress+0x20c>\n  40a5c0:\tf2 48 0f 2a c0       \tcvtsi2sd %rax,%xmm0\n  40a5c5:\teb 15                \tjmp    40a5dc <bpress+0x221>\n  40a5c7:\t48 89 c2             \tmov    %rax,%rdx\n  40a5ca:\t48 d1 ea             \tshr    %rdx\n  40a5cd:\t83 e0 01             \tand    $0x1,%eax\n  40a5d0:\t48 09 c2             \tor     %rax,%rdx\n  40a5d3:\tf2 48 0f 2a c2       \tcvtsi2sd %rdx,%xmm0\n  40a5d8:\tf2 0f 58 c0          \taddsd  %xmm0,%xmm0\n  40a5dc:\t66 0f 2f c1          \tcomisd %xmm1,%xmm0\n  40a5e0:\t72 09                \tjb     40a5eb <bpress+0x230>\n  40a5e2:\tc7 45 dc 01 00 00 00 \tmovl   $0x1,-0x24(%rbp)\n  40a5e9:\teb 07                \tjmp    40a5f2 <bpress+0x237>\n  40a5eb:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n  40a5f2:\t48 8b 05 7f 3e 01 00 \tmov    0x13e7f(%rip),%rax        # 41e478 <xsel+0x18>\n  40a5f9:\t48 8b 15 80 3e 01 00 \tmov    0x13e80(%rip),%rdx        # 41e480 <xsel+0x20>\n  40a600:\t48 89 05 81 3e 01 00 \tmov    %rax,0x13e81(%rip)        # 41e488 <xsel+0x28>\n  40a607:\t48 89 15 82 3e 01 00 \tmov    %rdx,0x13e82(%rip)        # 41e490 <xsel+0x30>\n  40a60e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  40a612:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n  40a616:\t48 89 05 5b 3e 01 00 \tmov    %rax,0x13e5b(%rip)        # 41e478 <xsel+0x18>\n  40a61d:\t48 89 15 5c 3e 01 00 \tmov    %rdx,0x13e5c(%rip)        # 41e480 <xsel+0x20>\n  40a624:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  40a628:\t48 89 c7             \tmov    %rax,%rdi\n  40a62b:\te8 15 fa ff ff       \tcallq  40a045 <evrow>\n  40a630:\t89 c3                \tmov    %eax,%ebx\n  40a632:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  40a636:\t48 89 c7             \tmov    %rax,%rdi\n  40a639:\te8 b4 f9 ff ff       \tcallq  409ff2 <evcol>\n  40a63e:\t89 c1                \tmov    %eax,%ecx\n  40a640:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n  40a643:\t89 c2                \tmov    %eax,%edx\n  40a645:\t89 de                \tmov    %ebx,%esi\n  40a647:\t89 cf                \tmov    %ecx,%edi\n  40a649:\te8 7b 9b ff ff       \tcallq  4041c9 <selstart>\n  40a64e:\t48 83 c4 48          \tadd    $0x48,%rsp\n  40a652:\t5b                   \tpop    %rbx\n  40a653:\t5d                   \tpop    %rbp\n  40a654:\tc3                   \tretq   ", "code_s": "__int64 __fastcall bpress(_DWORD *a1) {\n  __int64 result;\n  size_t v2;\n  int v3;\n  int v4;\n  struct timespec <span class=\"supfact\">tp</span>;\n  int v6;\n  __int64(__fastcall * *j)(__int64);\n  const char **i;\n  if ((dword_41E4B8 & Number) != Number && (a1[Number] & forceselmod) == Number)\n    return mousereport(a1);\n  for (i = (const char **)&mshortcuts; i < (const char **)&mkeys; i += Number) {\n    if (a1[Number] == *(_DWORD *)i &&\n        (unsigned int)match(*((unsigned int *)i + Number),\n                            (unsigned int)a1[Number])) {\n      v2 = strlen(i[Number]);\n      return ttywrite(i[Number], v2, Number);\n    }\n  }\n  for (j = (__int64(__fastcall **)(__int64)) & mkeys; j < qword_415FD0;\n       j += Number) {\n    if (a1[Number] == *(_DWORD *)j &&\n        (unsigned int)match(*((unsigned int *)j + Number),\n                            (unsigned int)a1[Number]))\n      return j[Number]((__int64)(j + Number));\n  }\n  result = (unsigned int)a1[Number];\n  if ((_DWORD)result == Number) {\n    clock_gettime(Number, &<span class=\"supfact\">tp</span>);\n    if ((double)tripleclicktimeout <\n        (double)(Number * (LODWORD(<span class=\"supfact\">tp</span>.tv_sec) -\n                           LODWORD(stru_41E488.tv_sec))) +\n            (double)(LODWORD(<span class=\"supfact\">tp</span>.tv_nsec) -\n                     LODWORD(stru_41E488.tv_nsec)) /\n                Number)\n      v6 = (double)doubleclicktimeout >=\n           (double)(Number * (LODWORD(<span class=\"supfact\">tp</span>.tv_sec) -\n                              LODWORD(<span class=\"supfact\">tp</span>.tv_sec))) +\n               (double)(LODWORD(<span class=\"supfact\">tp</span>.tv_nsec) -\n                        LODWORD(<span class=\"supfact\">tp</span>.tv_nsec)) /\n                   Number;\n    else\n      v6 = Number;\n    stru_41E488 = <span class=\"supfact\">tp</span>;\n    <span class=\"supfact\">tp</span> = <span class=\"supfact\">tp</span>;\n    v3 = evrow((__int64)a1);\n    v4 = evcol((__int64)a1);\n    result = selstart(v4, v3, v6);\n  }\n  return result;\n}", "code_t": "void __cdecl bpress(XEvent *e) {\n  size_t v1;\n  int v2;\n  int v3;\n  timespec <span class=\"supfact\">now</span>;\n  int snap;\n  MouseKey *mk;\n  MouseShortcut *ms;\n  if ((win.mode & Number) == Number ||\n      (e->xkey.state & forceselmod) != Number) {\n    for (ms = mshortcuts; ms < (MouseShortcut *)mkeys; ++ms) {\n      if (e->xkey.keycode == ms->b && match(ms->mask, e->xkey.state)) {\n        v1 = strlen(ms->s);\n        ttywrite(ms->s, v1, Number);\n        return;\n      }\n    }\n    for (mk = mkeys; mk < (MouseKey *)&unk_415FD0; ++mk) {\n      if (e->xkey.keycode == mk->b && match(mk->mask, e->xkey.state)) {\n        mk->func(&mk->arg);\n        return;\n      }\n    }\n    if (e->xkey.keycode == Number) {\n      clock_gettime(Number, &<span class=\"supfact\">now</span>);\n      if ((double)(int)tripleclicktimeout <\n          (double)(Number * (LODWORD(<span class=\"supfact\">now</span>.tv_sec) -\n                             LODWORD(xsel.tclick2.tv_sec))) +\n              (double)(LODWORD(<span class=\"supfact\">now</span>.tv_nsec) -\n                       LODWORD(xsel.tclick2.tv_nsec)) /\n                  Number)\n        snap = (double)(int)doubleclicktimeout >=\n               (double)(Number * (LODWORD(<span class=\"supfact\">now</span>.tv_sec) -\n                                  LODWORD(xsel.tclick1.tv_sec))) +\n                   (double)(LODWORD(<span class=\"supfact\">now</span>.tv_nsec) -\n                            LODWORD(xsel.tclick1.tv_nsec)) /\n                       Number;\n      else\n        snap = Number;\n      xsel.tclick2 = xsel.tclick1;\n      xsel.tclick1 = <span class=\"supfact\">now</span>;\n      v2 = evrow(e);\n      v3 = evcol(e);\n      selstart(v3, v2, snap);\n    }\n  } else {\n    mousereport(e);\n  }\n}", "var": [{"name": "tp", "type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }", "ref_name": "now", "ref_type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }"}], "body_in_train": false}, {"repo_owner": "kedric", "repo_name": "42", "path": "kedric/42/f4e5eabe10cd9f433532ca4d3c0ae26f3785bb37577f1dc9c7c0bd0e4cfff030", "path_in_repo": "kedric/42/PiscineC-/d01/ex07/main.o", "objdump": "0000000000000000 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t53                   \tpush   %rbx\n   5:\t48 81 ec 68 02 00 00 \tsub    $0x268,%rsp\n   c:\t48 89 bd 98 fd ff ff \tmov    %rdi,-0x268(%rbp)\n  13:\t48 89 b5 90 fd ff ff \tmov    %rsi,-0x270(%rbp)\n  1a:\t48 8d 85 c0 fd ff ff \tlea    -0x240(%rbp),%rax\n  21:\t48 89 c7             \tmov    %rax,%rdi\n  24:\te8 00 00 00 00       \tcallq  29 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x29>\n  29:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n  30:\t48 8d 85 a0 fd ff ff \tlea    -0x260(%rbp),%rax\n  37:\t48 89 c7             \tmov    %rax,%rdi\n  3a:\te8 00 00 00 00       \tcallq  3f <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3f>\n  3f:\tbe 10 00 00 00       \tmov    $0x10,%esi\n  44:\tbf 08 00 00 00       \tmov    $0x8,%edi\n  49:\te8 00 00 00 00       \tcallq  4e <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4e>\n  4e:\t89 c2                \tmov    %eax,%edx\n  50:\t48 8b 8d 90 fd ff ff \tmov    -0x270(%rbp),%rcx\n  57:\t48 8d 85 c0 fd ff ff \tlea    -0x240(%rbp),%rax\n  5e:\t48 89 ce             \tmov    %rcx,%rsi\n  61:\t48 89 c7             \tmov    %rax,%rdi\n  64:\te8 00 00 00 00       \tcallq  69 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x69>\n  69:\t48 8d 85 c0 fd ff ff \tlea    -0x240(%rbp),%rax\n  70:\t48 89 c7             \tmov    %rax,%rdi\n  73:\te8 00 00 00 00       \tcallq  78 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x78>\n  78:\t83 f0 01             \txor    $0x1,%eax\n  7b:\t84 c0                \ttest   %al,%al\n  7d:\t74 26                \tje     a5 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa5>\n  7f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  84:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  89:\te8 00 00 00 00       \tcallq  8e <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e>\n  8e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  93:\t48 89 c7             \tmov    %rax,%rdi\n  96:\te8 00 00 00 00       \tcallq  9b <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9b>\n  9b:\tbf 01 00 00 00       \tmov    $0x1,%edi\n  a0:\te8 00 00 00 00       \tcallq  a5 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa5>\n  a5:\t48 8d 85 c0 fd ff ff \tlea    -0x240(%rbp),%rax\n  ac:\tba 02 00 00 00       \tmov    $0x2,%edx\n  b1:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  b6:\t48 89 c7             \tmov    %rax,%rdi\n  b9:\te8 00 00 00 00       \tcallq  be <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbe>\n  be:\t48 8d 85 c0 fd ff ff \tlea    -0x240(%rbp),%rax\n  c5:\t48 89 c7             \tmov    %rax,%rdi\n  c8:\te8 00 00 00 00       \tcallq  cd <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd>\n  cd:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n  d1:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n  d5:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  d9:\t48 89 c7             \tmov    %rax,%rdi\n  dc:\te8 00 00 00 00       \tcallq  e1 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xe1>\n  e1:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n  e4:\t48 8d 85 c0 fd ff ff \tlea    -0x240(%rbp),%rax\n  eb:\tba 00 00 00 00       \tmov    $0x0,%edx\n  f0:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  f5:\t48 89 c7             \tmov    %rax,%rdi\n  f8:\te8 00 00 00 00       \tcallq  fd <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xfd>\n  fd:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 100:\t83 c0 01             \tadd    $0x1,%eax\n 103:\t48 98                \tcltq   \n 105:\t48 89 c7             \tmov    %rax,%rdi\n 108:\te8 00 00 00 00       \tcallq  10d <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x10d>\n 10d:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 111:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 114:\t48 63 d0             \tmovslq %eax,%rdx\n 117:\t48 8b 4d e0          \tmov    -0x20(%rbp),%rcx\n 11b:\t48 8d 85 c0 fd ff ff \tlea    -0x240(%rbp),%rax\n 122:\t48 89 ce             \tmov    %rcx,%rsi\n 125:\t48 89 c7             \tmov    %rax,%rdi\n 128:\te8 00 00 00 00       \tcallq  12d <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x12d>\n 12d:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 130:\t48 63 d0             \tmovslq %eax,%rdx\n 133:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 137:\t48 01 d0             \tadd    %rdx,%rax\n 13a:\tc6 00 00             \tmovb   $0x0,(%rax)\n 13d:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n 141:\t48 8d 85 a0 fd ff ff \tlea    -0x260(%rbp),%rax\n 148:\t48 89 d6             \tmov    %rdx,%rsi\n 14b:\t48 89 c7             \tmov    %rax,%rdi\n 14e:\te8 00 00 00 00       \tcallq  153 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x153>\n 153:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 157:\t48 85 c0             \ttest   %rax,%rax\n 15a:\t74 0d                \tje     169 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x169>\n 15c:\tbe 01 00 00 00       \tmov    $0x1,%esi\n 161:\t48 89 c7             \tmov    %rax,%rdi\n 164:\te8 00 00 00 00       \tcallq  169 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x169>\n 169:\t48 8d 85 c0 fd ff ff \tlea    -0x240(%rbp),%rax\n 170:\t48 89 c7             \tmov    %rax,%rdi\n 173:\te8 00 00 00 00       \tcallq  178 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x178>\n 178:\t48 8d 95 a0 fd ff ff \tlea    -0x260(%rbp),%rdx\n 17f:\t48 8b 85 98 fd ff ff \tmov    -0x268(%rbp),%rax\n 186:\t48 89 d6             \tmov    %rdx,%rsi\n 189:\t48 89 c7             \tmov    %rax,%rdi\n 18c:\te8 00 00 00 00       \tcallq  191 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x191>\n 191:\t48 8d 85 a0 fd ff ff \tlea    -0x260(%rbp),%rax\n 198:\t48 89 c7             \tmov    %rax,%rdi\n 19b:\te8 00 00 00 00       \tcallq  1a0 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a0>\n 1a0:\t48 8d 85 c0 fd ff ff \tlea    -0x240(%rbp),%rax\n 1a7:\t48 89 c7             \tmov    %rax,%rdi\n 1aa:\te8 00 00 00 00       \tcallq  1af <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1af>\n 1af:\teb 2c                \tjmp    1dd <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1dd>\n 1b1:\t48 89 c3             \tmov    %rax,%rbx\n 1b4:\t48 8d 85 a0 fd ff ff \tlea    -0x260(%rbp),%rax\n 1bb:\t48 89 c7             \tmov    %rax,%rdi\n 1be:\te8 00 00 00 00       \tcallq  1c3 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1c3>\n 1c3:\t48 8d 85 c0 fd ff ff \tlea    -0x240(%rbp),%rax\n 1ca:\t48 89 c7             \tmov    %rax,%rdi\n 1cd:\te8 00 00 00 00       \tcallq  1d2 <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1d2>\n 1d2:\t48 89 d8             \tmov    %rbx,%rax\n 1d5:\t48 89 c7             \tmov    %rax,%rdi\n 1d8:\te8 00 00 00 00       \tcallq  1dd <_Z8ReadFileNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1dd>\n 1dd:\t48 8b 85 98 fd ff ff \tmov    -0x268(%rbp),%rax\n 1e4:\t48 81 c4 68 02 00 00 \tadd    $0x268,%rsp\n 1eb:\t5b                   \tpop    %rbx\n 1ec:\t5d                   \tpop    %rbp\n 1ed:\tc3                   \tretq   ", "code_s": "__int64 __fastcall ReadFile(__int64 a1, __int64 a2) {\n  unsigned int v2;\n  __int64 v3;\n  __int64 v4;\n  char <span class=\"supfact\">v6</span>[Number];\n  char v7[Number];\n  __int64 <span class=\"supfact\">v8</span>[Number];\n  char *v9;\n  int v10;\n  std fstream basic_fstream(v7);\n  v10 = Number;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(<span class=\"supfact\">v6</span>);\n  v2 = std operator|(Number L, Number L);\n  std fstream open(v7, a2, v2);\n  if ((unsigned __int8)std fstream is_open(v7) != Number) {\n    v3 = std operator<<<std char_traits<char>>(&std cerr, String);\n    std ostream operator<<(v3, &std endl<char, std char_traits<char>>);\n    exit(Number);\n  }\n  std istream seekg(v7, Number L, Number L);\n  <span class=\"supfact\">v8</span>[Number] = std istream tellg((std istream *)v7);\n  <span class=\"supfact\">v8</span>[Number] = v4;\n  v10 = std fpos<__mbstate_t> operator long(<span class=\"supfact\">v8</span>);\n  std istream seekg(v7, Number L, Number L);\n  v9 = (char *)operator new[](v10 + Number);\n  std istream read((std istream *)v7, v9, v10);\n  v9[v10] = Number;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n  operator+=(<span class=\"supfact\">v6</span>, v9);\n  if (v9)\n    operator delete(v9, Number);\n  std fstream close(v7);\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(a1, <span class=\"supfact\">v6</span>);\n  std __cxx11\n      basic_string<char, std char_traits<char>,\n                   std allocator<char>> ~basic_string(<span class=\"supfact\">v6</span>);\n  std fstream ~fstream(v7);\n  return a1;\n}", "code_t": "std string *__cdecl ReadFile(std string *retstr, std string *p_filename) {\n  std _Ios_Openmode v2;\n  __int64 v3;\n  __mbstate_t v4;\n  std string <span class=\"supfact\">buff</span>;\n  char v7[Number];\n  std fpos<__mbstate_t> <span class=\"supfact\">v8</span>;\n  char *buffer;\n  int length;\n  std fstream basic_fstream(v7);\n  length = Number;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(&<span class=\"supfact\">buff</span>);\n  v2 = std operator|(_S_in, _S_out);\n  std fstream open(v7, p_filename, (unsigned int)v2);\n  if ((unsigned __int8)std fstream is_open(v7) != Number) {\n    v3 = std operator<<<std char_traits<char>>(&std cerr, String);\n    std ostream operator<<(v3, &std endl<char, std char_traits<char>>);\n    exit(Number);\n  }\n  std istream seekg(v7, Number L, Number L);\n  <span class=\"supfact\">v8</span>._M_off = std istream tellg((std istream *)v7);\n  <span class=\"supfact\">v8</span>._M_state = v4;\n  length = std fpos<__mbstate_t> operator long(&<span class=\"supfact\">v8</span>);\n  std istream seekg(v7, Number L, Number L);\n  buffer = (char *)operator new[](length + Number);\n  std istream read((std istream *)v7, buffer, length);\n  buffer[length] = Number;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n  operator+=(&<span class=\"supfact\">buff</span>, buffer);\n  if (buffer)\n    operator delete(buffer, Number);\n  std fstream close(v7);\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      basic_string(retstr, &<span class=\"supfact\">buff</span>);\n  std __cxx11\n      basic_string<char, std char_traits<char>,\n                   std allocator<char>> ~basic_string(&<span class=\"supfact\">buff</span>);\n  std fstream ~fstream(v7);\n  return retstr;\n}", "var": [{"name": "v8", "type": "__int64[2]", "ref_name": "v8", "ref_type": "struct std::fpos<__mbstate_t> { std::streamoff _M_off; __mbstate_t _M_state; }"}, {"name": "v6", "type": "char[32]", "ref_name": "buff", "ref_type": "struct std::string { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}], "body_in_train": false}, {"repo_owner": "psi46", "repo_name": "HDItest", "path": "psi46/HDItest/82abee2fb4722aa2aa99d55e484044fca2bb76d788616b3b28ef7e58c893c484", "path_in_repo": "psi46/HDItest/FTDI-1.0.4/libftd2xx1.0.4/libusb-1.0.8/libusb/libusb_1_0_la-io.o", "objdump": "0000000000000ebc <libusb_wait_for_event>:\n     ebc:\t55                   \tpush   %rbp\n     ebd:\t48 89 e5             \tmov    %rsp,%rbp\n     ec0:\t48 83 ec 30          \tsub    $0x30,%rsp\n     ec4:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n     ec8:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n     ecc:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n     ed1:\t75 0b                \tjne    ede <libusb_wait_for_event+0x22>\n     ed3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # eda <libusb_wait_for_event+0x1e>\n     eda:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n     ede:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n     ee3:\t75 2a                \tjne    f0f <libusb_wait_for_event+0x53>\n     ee5:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     ee9:\t48 8d 90 68 01 00 00 \tlea    0x168(%rax),%rdx\n     ef0:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     ef4:\t48 05 90 01 00 00    \tadd    $0x190,%rax\n     efa:\t48 89 d6             \tmov    %rdx,%rsi\n     efd:\t48 89 c7             \tmov    %rax,%rdi\n     f00:\te8 00 00 00 00       \tcallq  f05 <libusb_wait_for_event+0x49>\n     f05:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     f0a:\te9 dd 00 00 00       \tjmpq   fec <libusb_wait_for_event+0x130>\n     f0f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # f16 <libusb_wait_for_event+0x5a>\n     f16:\t48 8b 90 c0 00 00 00 \tmov    0xc0(%rax),%rdx\n     f1d:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     f21:\t48 89 c6             \tmov    %rax,%rsi\n     f24:\tbf 01 00 00 00       \tmov    $0x1,%edi\n     f29:\tff d2                \tcallq  *%rdx\n     f2b:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n     f2e:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n     f32:\t79 34                \tjns    f68 <libusb_wait_for_event+0xac>\n     f34:\te8 00 00 00 00       \tcallq  f39 <libusb_wait_for_event+0x7d>\n     f39:\t8b 10                \tmov    (%rax),%edx\n     f3b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     f3f:\t41 89 d0             \tmov    %edx,%r8d\n     f42:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n     f47:\tba 00 00 00 00       \tmov    $0x0,%edx\n     f4c:\tbe 03 00 00 00       \tmov    $0x3,%esi\n     f51:\t48 89 c7             \tmov    %rax,%rdi\n     f54:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     f59:\te8 00 00 00 00       \tcallq  f5e <libusb_wait_for_event+0xa2>\n     f5e:\tb8 9d ff ff ff       \tmov    $0xffffff9d,%eax\n     f63:\te9 84 00 00 00       \tjmpq   fec <libusb_wait_for_event+0x130>\n     f68:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n     f6c:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     f70:\t48 8b 00             \tmov    (%rax),%rax\n     f73:\t48 01 d0             \tadd    %rdx,%rax\n     f76:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n     f7a:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n     f7e:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     f82:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     f86:\t48 69 c0 e8 03 00 00 \timul   $0x3e8,%rax,%rax\n     f8d:\t48 01 d0             \tadd    %rdx,%rax\n     f90:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     f94:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     f98:\t48 3d 00 ca 9a 3b    \tcmp    $0x3b9aca00,%rax\n     f9e:\t7e 1a                \tjle    fba <libusb_wait_for_event+0xfe>\n     fa0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     fa4:\t48 2d 00 ca 9a 3b    \tsub    $0x3b9aca00,%rax\n     faa:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     fae:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     fb2:\t48 83 c0 01          \tadd    $0x1,%rax\n     fb6:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n     fba:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     fbe:\t48 8d b0 68 01 00 00 \tlea    0x168(%rax),%rsi\n     fc5:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     fc9:\t48 8d 88 90 01 00 00 \tlea    0x190(%rax),%rcx\n     fd0:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     fd4:\t48 89 c2             \tmov    %rax,%rdx\n     fd7:\t48 89 cf             \tmov    %rcx,%rdi\n     fda:\te8 00 00 00 00       \tcallq  fdf <libusb_wait_for_event+0x123>\n     fdf:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n     fe2:\t83 7d fc 6e          \tcmpl   $0x6e,-0x4(%rbp)\n     fe6:\t0f 94 c0             \tsete   %al\n     fe9:\t0f b6 c0             \tmovzbl %al,%eax\n     fec:\tc9                   \tleaveq \n     fed:\tc3                   \tretq   ", "code_s": "__int64 __fastcall libusb_wait_for_event(__int64 a1, _QWORD *a2) {\n  __int64 result;\n  int *v3;\n  __int64 v4;\n  struct timespec <span class=\"supfact\">abstime</span>;\n  int v6;\n  v4 = a1;\n  if (!a1)\n    v4 = usbi_default_context;\n  if (a2) {\n    v6 = (*(__int64(__fastcall **)(__int64, struct timespec *))(\n        usbi_backend + Number L))(Number L, &<span class=\"supfact\">abstime</span>);\n    if (v6 >= Number) {\n      <span class=\"supfact\">abstime</span>.tv_sec += *a2;\n      <span class=\"supfact\">abstime</span>.tv_nsec += Number L * a2[Number];\n      if (<span class=\"supfact\">abstime</span>.tv_nsec > Number) {\n        <span class=\"supfact\">abstime</span>.tv_nsec -= Number L;\n        ++<span class=\"supfact\">abstime</span>.tv_sec;\n      }\n      result = pthread_cond_timedwait((pthread_cond_t *)(v4 + Number),\n                                      (pthread_mutex_t *)(v4 + Number),\n                                      &<span class=\"supfact\">abstime</span>) == Number;\n    } else {\n      v3 = _errno_location();\n      usbi_log(v4, Number L, String, String, (unsigned int)*v3);\n      result = Number L;\n    }\n  } else {\n    pthread_cond_wait((pthread_cond_t *)(v4 + Number),\n                      (pthread_mutex_t *)(v4 + Number));\n    result = Number L;\n  }\n  return result;\n}", "code_t": "int __cdecl libusb_wait_for_event(libusb_context_0 *ctx, timeval *tv) {\n  int result;\n  int *v3;\n  libusb_context_0 *ctxa;\n  timespec <span class=\"supfact\">timeout</span>;\n  int r;\n  ctxa = ctx;\n  if (!ctx)\n    ctxa = (libusb_context_0 *)usbi_default_context;\n  if (tv) {\n    r = (*(__int64(__fastcall **)(__int64, timespec *))(\n        usbi_backend + Number L))(Number L, &<span class=\"supfact\">timeout</span>);\n    if (r >= Number) {\n      <span class=\"supfact\">timeout</span>.tv_sec += tv->tv_sec;\n      <span class=\"supfact\">timeout</span>.tv_nsec += Number * tv->tv_usec;\n      if (<span class=\"supfact\">timeout</span>.tv_nsec > Number) {\n        <span class=\"supfact\">timeout</span>.tv_nsec -= Number L;\n        ++<span class=\"supfact\">timeout</span>.tv_sec;\n      }\n      result = pthread_cond_timedwait(&ctxa->event_waiters_cond,\n                                      &ctxa->event_waiters_lock,\n                                      &<span class=\"supfact\">timeout</span>) == Number;\n    } else {\n      v3 = _errno_location();\n      usbi_log(ctxa, Number L, String, String, (unsigned int)*v3);\n      result = Number;\n    }\n  } else {\n    pthread_cond_wait(&ctxa->event_waiters_cond, &ctxa->event_waiters_lock);\n    result = Number;\n  }\n  return result;\n}", "var": [{"name": "abstime", "type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }", "ref_name": "timeout", "ref_type": "struct timespec { __time_t tv_sec; __syscall_slong_t tv_nsec; }"}], "body_in_train": false}, {"repo_owner": "ardax", "repo_name": "Pellet", "path": "ardax/Pellet/09647a44e76be3cea0c2f9a7241b9e63370114795cc5f1de0c47077caeb8eb9e", "path_in_repo": "ardax/Pellet//CompletionStrategy.o", "objdump": "0000000000001c2a <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv>:\n    1c2a:\t55                   \tpush   %rbp\n    1c2b:\t48 89 e5             \tmov    %rsp,%rbp\n    1c2e:\t41 54                \tpush   %r12\n    1c30:\t53                   \tpush   %rbx\n    1c31:\t48 83 ec 40          \tsub    $0x40,%rsp\n    1c35:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n    1c39:\te8 00 00 00 00       \tcallq  1c3e <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x14>\n    1c3e:\t84 c0                \ttest   %al,%al\n    1c40:\t74 4a                \tje     1c8c <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x62>\n    1c42:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1c48 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x1e>\n    1c48:\t83 c0 01             \tadd    $0x1,%eax\n    1c4b:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 1c51 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x27>\n    1c51:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n    1c58:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1c5e <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x34>\n    1c5e:\t39 45 ec             \tcmp    %eax,-0x14(%rbp)\n    1c61:\t7d 15                \tjge    1c78 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x4e>\n    1c63:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1c68:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1c6d:\te8 00 00 00 00       \tcallq  1c72 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x48>\n    1c72:\t83 45 ec 01          \taddl   $0x1,-0x14(%rbp)\n    1c76:\teb e0                \tjmp    1c58 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x2e>\n    1c78:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1c7d:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1c82:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1c87:\te8 00 00 00 00       \tcallq  1c8c <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x62>\n    1c8c:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    1c90:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1c94:\t48 05 a0 00 00 00    \tadd    $0xa0,%rax\n    1c9a:\t48 89 c7             \tmov    %rax,%rdi\n    1c9d:\te8 00 00 00 00       \tcallq  1ca2 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x78>\n    1ca2:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    1ca6:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    1caa:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1cae:\t48 05 a0 00 00 00    \tadd    $0xa0,%rax\n    1cb4:\t48 89 c7             \tmov    %rax,%rdi\n    1cb7:\te8 00 00 00 00       \tcallq  1cbc <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x92>\n    1cbc:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    1cc0:\t48 8d 55 c8          \tlea    -0x38(%rbp),%rdx\n    1cc4:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    1cc8:\t48 89 d6             \tmov    %rdx,%rsi\n    1ccb:\t48 89 c7             \tmov    %rax,%rdi\n    1cce:\te8 00 00 00 00       \tcallq  1cd3 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0xa9>\n    1cd3:\t84 c0                \ttest   %al,%al\n    1cd5:\t0f 84 f1 00 00 00    \tje     1dcc <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x1a2>\n    1cdb:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    1cdf:\t48 89 c7             \tmov    %rax,%rdi\n    1ce2:\te8 00 00 00 00       \tcallq  1ce7 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0xbd>\n    1ce7:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1ceb:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    1cef:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1cf3:\t48 8b 00             \tmov    (%rax),%rax\n    1cf6:\t48 83 c0 60          \tadd    $0x60,%rax\n    1cfa:\t48 8b 10             \tmov    (%rax),%rdx\n    1cfd:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1d01:\t48 89 c7             \tmov    %rax,%rdi\n    1d04:\tff d2                \tcallq  *%rdx\n    1d06:\t84 c0                \ttest   %al,%al\n    1d08:\t0f 85 a3 00 00 00    \tjne    1db1 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x187>\n    1d0e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1d12:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    1d16:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1d1a:\t48 8b 80 10 01 00 00 \tmov    0x110(%rax),%rax\n    1d21:\t48 85 c0             \ttest   %rax,%rax\n    1d24:\t0f 85 8a 00 00 00    \tjne    1db4 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x18a>\n    1d2a:\tbf 68 00 00 00       \tmov    $0x68,%edi\n    1d2f:\te8 00 00 00 00       \tcallq  1d34 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x10a>\n    1d34:\t48 89 c3             \tmov    %rax,%rbx\n    1d37:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1d3b:\t48 8b b0 20 01 00 00 \tmov    0x120(%rax),%rsi\n    1d42:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    1d46:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1d4a:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n    1d4e:\t48 8b 55 b8          \tmov    -0x48(%rbp),%rdx\n    1d52:\t49 89 f0             \tmov    %rsi,%r8\n    1d55:\t48 89 c6             \tmov    %rax,%rsi\n    1d58:\t48 89 df             \tmov    %rbx,%rdi\n    1d5b:\te8 00 00 00 00       \tcallq  1d60 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x136>\n    1d60:\t48 89 5d d0          \tmov    %rbx,-0x30(%rbp)\n    1d64:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    1d68:\t48 8b 00             \tmov    (%rax),%rax\n    1d6b:\t48 05 b8 01 00 00    \tadd    $0x1b8,%rax\n    1d71:\t48 8b 08             \tmov    (%rax),%rcx\n    1d74:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    1d78:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    1d7c:\t48 89 d6             \tmov    %rdx,%rsi\n    1d7f:\t48 89 c7             \tmov    %rax,%rdi\n    1d82:\tff d1                \tcallq  *%rcx\n    1d84:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    1d88:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    1d8c:\t48 8b 12             \tmov    (%rdx),%rdx\n    1d8f:\t48 83 c2 18          \tadd    $0x18,%rdx\n    1d93:\t48 8b 12             \tmov    (%rdx),%rdx\n    1d96:\t48 89 c7             \tmov    %rax,%rdi\n    1d99:\tff d2                \tcallq  *%rdx\n    1d9b:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    1d9f:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1da3:\t48 89 c7             \tmov    %rax,%rdi\n    1da6:\te8 00 00 00 00       \tcallq  1dab <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x181>\n    1dab:\t84 c0                \ttest   %al,%al\n    1dad:\t75 1c                \tjne    1dcb <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x1a1>\n    1daf:\teb 04                \tjmp    1db5 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x18b>\n    1db1:\t90                   \tnop\n    1db2:\teb 01                \tjmp    1db5 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x18b>\n    1db4:\t90                   \tnop\n    1db5:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n    1db9:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1dbe:\t48 89 c7             \tmov    %rax,%rdi\n    1dc1:\te8 00 00 00 00       \tcallq  1dc6 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x19c>\n    1dc6:\te9 db fe ff ff       \tjmpq   1ca6 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x7c>\n    1dcb:\t90                   \tnop\n    1dcc:\te8 00 00 00 00       \tcallq  1dd1 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x1a7>\n    1dd1:\t84 c0                \ttest   %al,%al\n    1dd3:\t74 67                \tje     1e3c <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x212>\n    1dd5:\tc7 45 e8 00 00 00 00 \tmovl   $0x0,-0x18(%rbp)\n    1ddc:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1de2 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x1b8>\n    1de2:\t39 45 e8             \tcmp    %eax,-0x18(%rbp)\n    1de5:\t7d 15                \tjge    1dfc <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x1d2>\n    1de7:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1dec:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1df1:\te8 00 00 00 00       \tcallq  1df6 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x1cc>\n    1df6:\t83 45 e8 01          \taddl   $0x1,-0x18(%rbp)\n    1dfa:\teb e0                \tjmp    1ddc <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x1b2>\n    1dfc:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1e01:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1e06:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1e0b:\te8 00 00 00 00       \tcallq  1e10 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x1e6>\n    1e10:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1e16 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x1ec>\n    1e16:\t83 e8 01             \tsub    $0x1,%eax\n    1e19:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 1e1f <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x1f5>\n    1e1f:\teb 1b                \tjmp    1e3c <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x212>\n    1e21:\t49 89 c4             \tmov    %rax,%r12\n    1e24:\tbe 68 00 00 00       \tmov    $0x68,%esi\n    1e29:\t48 89 df             \tmov    %rbx,%rdi\n    1e2c:\te8 00 00 00 00       \tcallq  1e31 <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x207>\n    1e31:\t4c 89 e0             \tmov    %r12,%rax\n    1e34:\t48 89 c7             \tmov    %rax,%rdi\n    1e37:\te8 00 00 00 00       \tcallq  1e3c <_ZN18CompletionStrategy29applyLiteralRuleOnIndividualsEv+0x212>\n    1e3c:\t90                   \tnop\n    1e3d:\t48 83 c4 40          \tadd    $0x40,%rsp\n    1e41:\t5b                   \tpop    %rbx\n    1e42:\t41 5c                \tpop    %r12\n    1e44:\t5d                   \tpop    %rbp\n    1e45:\tc3                   \tretq   ", "code_s": "__int64 __fastcall CompletionStrategy\napplyLiteralRuleOnIndividuals(CompletionStrategy *this) {\n  __int64 v1;\n  __int64 result;\n  __int64 <span class=\"supfact\">j</span>;\n  __int64 <span class=\"supfact\">v4</span>;\n  __int64 v5;\n  _QWORD *v6;\n  _QWORD *v7;\n  int k;\n  int i;\n  if ((unsigned __int8)PARAMS_PRINT_DEBUGINFO_INHTML()) {\n    ++g_iCommentIndent;\n    for (i = Number; i < g_iCommentIndent; ++i)\n      printf(String);\n    printf(String, String);\n  }\n  for (<span class=\"supfact\">j</span> =\n           std map<_ExpressionNode_ *, Node *, strCmpExprNode,\n                   std allocator<std pair<_ExpressionNode_ *const, Node *>>>\n               begin(*((_QWORD *)this + Number) + Number L);\n       ; std _Rb_tree_iterator<std pair<_ExpressionNode_ *const, Node *>>\n       operator++(&<span class=\"supfact\">j</span>, Number L)) {\n    <span class=\"supfact\">v4</span> =\n        std map<_ExpressionNode_ *, Node *, strCmpExprNode,\n                std allocator<std pair<_ExpressionNode_ *const, Node *>>>\n        end(*((_QWORD *)this + Number) + Number L);\n    if (!(unsigned __int8)std operator!=(&<span class=\"supfact\">j</span>,\n                                         &<span class=\"supfact\">v4</span>))\n      break;\n    v7 = *(\n        _QWORD *\n            *)(std _Rb_tree_iterator<std pair<_ExpressionNode_ *const, Node *>>\n               operator->(&<span class=\"supfact\">j</span>) +\n               Number);\n    if (!(*(unsigned __int8(__fastcall **)(_QWORD *))(*v7 + Number L))(v7)) {\n      v6 = v7;\n      if (!v7[Number]) {\n        v1 = operator new(Number);\n        LiteralValueBranch LiteralValueBranch(v1, *((_QWORD *)this + Number),\n                                              this, v6, v6[Number]);\n        v5 = v1;\n        (*(void(__fastcall **)(CompletionStrategy *, __int64))(\n            *(_QWORD *)this + Number L))(this, v1);\n        (*(void(__fastcall **)(__int64))(*(_QWORD *)v5 + Number L))(v5);\n        if ((unsigned __int8)ABox isClosed(*((ABox **)this + Number)))\n          break;\n      }\n    }\n  }\n  result = PARAMS_PRINT_DEBUGINFO_INHTML();\n  if ((_BYTE)result) {\n    for (k = Number; k < g_iCommentIndent; ++k)\n      printf(String);\n    printf(String);\n    result = (unsigned int)--g_iCommentIndent;\n  }\n  return result;\n}", "code_t": "void __cdecl CompletionStrategy\napplyLiteralRuleOnIndividuals(CompletionStrategy *const this) {\n  LiteralValueBranch *v1;\n  std map<_ExpressionNode_ *, Node *, strCmpExprNode,\n          std allocator<std pair<_ExpressionNode_ *const, Node *>>>\n      iterator <span class=\"supfact\">i_0</span>;\n  std _Rb_tree_iterator<std pair<_ExpressionNode_ *const, Node *>> _Self\n      <span class=\"supfact\">__y</span>;\n  LiteralValueBranch *pNewBranch;\n  Literal *pLit;\n  Node *pN;\n  int i_1;\n  int i;\n  if ((unsigned __int8)PARAMS_PRINT_DEBUGINFO_INHTML()) {\n    ++g_iCommentIndent;\n    for (i = Number; i < g_iCommentIndent; ++i)\n      printf(String);\n    printf(String, String);\n  }\n  for (<span class=\"supfact\">i_0</span>._M_node =\n           std map<_ExpressionNode_ *, Node *, strCmpExprNode,\n                   std allocator<std pair<_ExpressionNode_ *const, Node *>>>\n               begin(&this->m_pABox->m_mNodes)\n                   ._M_node;\n       ; std _Rb_tree_iterator<std pair<_ExpressionNode_ *const, Node *>>\n       operator++(&<span class=\"supfact\">i_0</span>, Number)) {\n    <span class=\"supfact\">__y</span>._M_node =\n        std map<_ExpressionNode_ *, Node *, strCmpExprNode,\n                std allocator<std pair<_ExpressionNode_ *const, Node *>>>\n            end(&this->m_pABox->m_mNodes)._M_node;\n    if (!std operator!=(&<span class=\"supfact\">i_0</span>, &<span class=\"supfact\">__y</span>))\n      break;\n    pN = std _Rb_tree_iterator<std pair<_ExpressionNode_ *const, Node *>>\n         operator->(&<span class=\"supfact\">i_0</span>)->second;\n    if (!(*(unsigned __int8(__fastcall **)(Node *))(*(_QWORD *)pN + Number L))(\n            pN)) {\n      pLit = pN;\n      if (!*((_QWORD *)pN + Number)) {\n        v1 = (LiteralValueBranch *)operator new(Number);\n        LiteralValueBranch LiteralValueBranch(v1, this->m_pABox, this, pLit,\n                                              *((_QWORD *)pLit + Number));\n        pNewBranch = v1;\n        (*((void(__fastcall **)(\n               CompletionStrategy *const,\n               LiteralValueBranch *))this->_vptr_CompletionStrategy +\n           Number))(this, v1);\n        (*(void(__fastcall **)(LiteralValueBranch *))(*(_QWORD *)pNewBranch +\n                                                      Number L))(pNewBranch);\n        if ((unsigned __int8)ABox isClosed(this->m_pABox))\n          break;\n      }\n    }\n  }\n  if ((unsigned __int8)PARAMS_PRINT_DEBUGINFO_INHTML()) {\n    for (i_1 = Number; i_1 < g_iCommentIndent; ++i_1)\n      printf(String);\n    printf(String);\n    --g_iCommentIndent;\n  }\n}", "var": [{"name": "v4", "type": "__unk__", "ref_name": "__y", "ref_type": "struct std::_Rb_tree_iterator<std::pair<_ExpressionNode_* const,Node*> >::_Self { std::_Rb_tree_iterator<std::pair<_ExpressionNode_* const,Node*> >::_Base_ptr _M_node; }"}, {"name": "j", "type": "__unk__", "ref_name": "i_0", "ref_type": "struct std::map<_ExpressionNode_*,Node*,strCmpExprNode,std::allocator<std::pair<_ExpressionNode_* const,Node*> > >::iterator { std::_Rb_tree_iterator<std::pair<_ExpressionNode_* const,Node*> >::_Base_ptr _M_node; }"}], "body_in_train": false}, {"repo_owner": "QuakeII", "repo_name": "Quake2", "path": "QuakeII/Quake2/08400484cb7a3b9eb028fb7304e21fcc01ec51ca62761e6c2e06cc78c62c3daa", "path_in_repo": "QuakeII/Quake2/quake2-3.21/linux/debugi386/client/q_shlinux.o", "objdump": "00000000000001d7 <Sys_Milliseconds>:\n 1d7:\t55                   \tpush   %rbp\n 1d8:\t48 89 e5             \tmov    %rsp,%rbp\n 1db:\t48 83 ec 20          \tsub    $0x20,%rsp\n 1df:\t48 8d 55 e8          \tlea    -0x18(%rbp),%rdx\n 1e3:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n 1e7:\t48 89 d6             \tmov    %rdx,%rsi\n 1ea:\t48 89 c7             \tmov    %rax,%rdi\n 1ed:\te8 00 00 00 00       \tcallq  1f2 <Sys_Milliseconds+0x1b>\n 1f2:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1f8 <Sys_Milliseconds+0x21>\n 1f8:\t85 c0                \ttest   %eax,%eax\n 1fa:\t75 31                \tjne    22d <Sys_Milliseconds+0x56>\n 1fc:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 200:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 206 <Sys_Milliseconds+0x2f>\n 206:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n 20a:\t48 ba cf f7 53 e3 a5 \tmovabs $0x20c49ba5e353f7cf,%rdx\n 211:\t9b c4 20 \n 214:\t48 89 c8             \tmov    %rcx,%rax\n 217:\t48 f7 ea             \timul   %rdx\n 21a:\t48 c1 fa 07          \tsar    $0x7,%rdx\n 21e:\t48 89 c8             \tmov    %rcx,%rax\n 221:\t48 c1 f8 3f          \tsar    $0x3f,%rax\n 225:\t48 29 c2             \tsub    %rax,%rdx\n 228:\t48 89 d0             \tmov    %rdx,%rax\n 22b:\teb 4b                \tjmp    278 <Sys_Milliseconds+0xa1>\n 22d:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n 231:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 237 <Sys_Milliseconds+0x60>\n 237:\t48 98                \tcltq   \n 239:\t48 29 c2             \tsub    %rax,%rdx\n 23c:\t48 89 d0             \tmov    %rdx,%rax\n 23f:\t69 f0 e8 03 00 00    \timul   $0x3e8,%eax,%esi\n 245:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n 249:\t48 ba cf f7 53 e3 a5 \tmovabs $0x20c49ba5e353f7cf,%rdx\n 250:\t9b c4 20 \n 253:\t48 89 c8             \tmov    %rcx,%rax\n 256:\t48 f7 ea             \timul   %rdx\n 259:\t48 c1 fa 07          \tsar    $0x7,%rdx\n 25d:\t48 89 c8             \tmov    %rcx,%rax\n 260:\t48 c1 f8 3f          \tsar    $0x3f,%rax\n 264:\t48 29 c2             \tsub    %rax,%rdx\n 267:\t48 89 d0             \tmov    %rdx,%rax\n 26a:\t01 f0                \tadd    %esi,%eax\n 26c:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 272 <Sys_Milliseconds+0x9b>\n 272:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 278 <Sys_Milliseconds+0xa1>\n 278:\tc9                   \tleaveq \n 279:\tc3                   \tretq   ", "code_s": "__suseconds_t Sys_Milliseconds() {\n  __suseconds_t result;\n  struct timezone <span class=\"supfact\">tz</span>;\n  struct timeval <span class=\"supfact\">tv</span>;\n  gettimeofday(&<span class=\"supfact\">tv</span>, &<span class=\"supfact\">tz</span>);\n  if (secbase_6173) {\n    curtime = Number * (LODWORD(<span class=\"supfact\">tv</span>.tv_sec) - secbase_6173) +\n              <span class=\"supfact\">tv</span>.tv_usec / Number;\n    result = (unsigned int)curtime;\n  } else {\n    secbase_6173 = <span class=\"supfact\">tv</span>.tv_sec;\n    result = <span class=\"supfact\">tv</span>.tv_usec / Number;\n  }\n  return result;\n}", "code_t": "int __cdecl Sys_Milliseconds() {\n  __suseconds_t v0;\n  timezone <span class=\"supfact\">tzp</span>;\n  timeval <span class=\"supfact\">tp</span>;\n  gettimeofday(&<span class=\"supfact\">tp</span>, &<span class=\"supfact\">tzp</span>);\n  if (secbase_6173) {\n    curtime = Number * (LODWORD(<span class=\"supfact\">tp</span>.tv_sec) - secbase_6173) +\n              <span class=\"supfact\">tp</span>.tv_usec / Number;\n    LODWORD(v0) = curtime;\n  } else {\n    secbase_6173 = <span class=\"supfact\">tp</span>.tv_sec;\n    v0 = <span class=\"supfact\">tp</span>.tv_usec / Number;\n  }\n  return v0;\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "tp", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}, {"name": "tz", "type": "struct timezone { int tz_minuteswest; int tz_dsttime; }", "ref_name": "tzp", "ref_type": "struct timezone { int tz_minuteswest; int tz_dsttime; }"}], "body_in_train": false}, {"repo_owner": "rim99", "repo_name": "PostgreSQL-src", "path": "rim99/PostgreSQL-src/07bba0263dd4e3ed5fcca077f2b05b0b537a850b516eb436a50233f06a6e77ee", "path_in_repo": "rim99/PostgreSQL-src//src/backend/parser/parse_type.o", "objdump": "0000000000000ec7 <TypeNameToString>:\n     ec7:\t55                   \tpush   %rbp\n     ec8:\t48 89 e5             \tmov    %rsp,%rbp\n     ecb:\t48 83 ec 30          \tsub    $0x30,%rsp\n     ecf:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n     ed3:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     ed7:\t48 89 c7             \tmov    %rax,%rdi\n     eda:\te8 00 00 00 00       \tcallq  edf <TypeNameToString+0x18>\n     edf:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n     ee3:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     ee7:\t48 89 d6             \tmov    %rdx,%rsi\n     eea:\t48 89 c7             \tmov    %rax,%rdi\n     eed:\te8 ee fe ff ff       \tcallq  de0 <appendTypeNameToBuffer>\n     ef2:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     ef6:\tc9                   \tleaveq \n     ef7:\tc3                   \tretq   ", "code_s": "__int64 __fastcall TypeNameToString(__int64 a1) {\n  __int64 <span class=\"supfact\">v2</span>[Number];\n  initStringInfo(<span class=\"supfact\">v2</span>);\n  appendTypeNameToBuffer(a1, (__int64)<span class=\"supfact\">v2</span>);\n  return <span class=\"supfact\">v2</span>[Number];\n}", "code_t": "char *__cdecl TypeNameToString(const TypeName_0 *typeName) {\n  StringInfoData_0 <span class=\"supfact\">string</span>;\n  initStringInfo(&<span class=\"supfact\">string</span>);\n  appendTypeNameToBuffer(typeName, &<span class=\"supfact\">string</span>);\n  return <span class=\"supfact\">string</span>.data;\n}", "var": [{"name": "v2", "type": "struct StringInfoData_0 { char * data; int len; int maxlen; int cursor; PADDING (4); }", "ref_name": "string", "ref_type": "struct StringInfoData_0 { char * data; int len; int maxlen; int cursor; PADDING (4); }"}], "body_in_train": false}, {"code_s": "__int64 __fastcall Poco Logger has(__int64 a1) {\n  __int64 v1;\n  char <span class=\"supfact\">v3</span>[Number];\n  Poco ScopedLock<Poco Mutex> ScopedLock(<span class=\"supfact\">v3</span>,\n                                         &Poco Logger _mapMtx);\n  v1 = Poco Logger find(a1);\n  Poco ScopedLock<Poco Mutex> ~ScopedLock(<span class=\"supfact\">v3</span>);\n  return v1;\n}", "code_t": "Poco Logger *__cdecl Poco Logger has(const std string *name) {\n  Poco Logger *v1;\n  Poco Mutex ScopedLock <span class=\"supfact\">lock</span>;\n  Poco ScopedLock<Poco Mutex> ScopedLock(&<span class=\"supfact\">lock</span>,\n                                         &Poco Logger _mapMtx);\n  v1 = Poco Logger find(name);\n  Poco ScopedLock<Poco Mutex> ~ScopedLock(&<span class=\"supfact\">lock</span>);\n  return v1;\n}", "var": [{"name": "v3", "type": "struct Poco::Mutex::ScopedLock { Poco::Mutex * _mutex; }", "ref_name": "lock", "ref_type": "struct Poco::Mutex::ScopedLock { Poco::Mutex * _mutex; }"}], "body_in_train": false}, {"repo_owner": "mDibyo", "repo_name": "py-dlib", "path": "mDibyo/py-dlib/d74674d396f15835bcc4b40e8f72ef79b96db76341a2e1c0bfb6a82ace3d6dc5", "path_in_repo": "mDibyo/py-dlib/dlib/test/array2d.o", "objdump": "0000000000000000 <_ZN4dlib11deserializeERtRSi>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t41 54                \tpush   %r12\n   6:\t53                   \tpush   %rbx\n   7:\t48 83 ec 60          \tsub    $0x60,%rsp\n   b:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n   f:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n  13:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n  17:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n  1b:\t48 89 d6             \tmov    %rdx,%rsi\n  1e:\t48 89 c7             \tmov    %rax,%rdi\n  21:\te8 00 00 00 00       \tcallq  26 <_ZN4dlib11deserializeERtRSi+0x26>\n  26:\t84 c0                \ttest   %al,%al\n  28:\t0f 84 cc 00 00 00    \tje     fa <_ZN4dlib11deserializeERtRSi+0xfa>\n  2e:\tbf 30 00 00 00       \tmov    $0x30,%edi\n  33:\te8 00 00 00 00       \tcallq  38 <_ZN4dlib11deserializeERtRSi+0x38>\n  38:\t48 89 c3             \tmov    %rax,%rbx\n  3b:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n  3f:\t48 89 c7             \tmov    %rax,%rdi\n  42:\te8 00 00 00 00       \tcallq  47 <_ZN4dlib11deserializeERtRSi+0x47>\n  47:\t48 8d 55 ef          \tlea    -0x11(%rbp),%rdx\n  4b:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  4f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  54:\t48 89 c7             \tmov    %rax,%rdi\n  57:\te8 00 00 00 00       \tcallq  5c <_ZN4dlib11deserializeERtRSi+0x5c>\n  5c:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  60:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n  64:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  69:\t48 89 c7             \tmov    %rax,%rdi\n  6c:\te8 00 00 00 00       \tcallq  71 <_ZN4dlib11deserializeERtRSi+0x71>\n  71:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  75:\t48 89 c6             \tmov    %rax,%rsi\n  78:\t48 89 df             \tmov    %rbx,%rdi\n  7b:\te8 00 00 00 00       \tcallq  80 <_ZN4dlib11deserializeERtRSi+0x80>\n  80:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  84:\t48 89 c7             \tmov    %rax,%rdi\n  87:\te8 00 00 00 00       \tcallq  8c <_ZN4dlib11deserializeERtRSi+0x8c>\n  8c:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  90:\t48 89 c7             \tmov    %rax,%rdi\n  93:\te8 00 00 00 00       \tcallq  98 <_ZN4dlib11deserializeERtRSi+0x98>\n  98:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n  9c:\t48 89 c7             \tmov    %rax,%rdi\n  9f:\te8 00 00 00 00       \tcallq  a4 <_ZN4dlib11deserializeERtRSi+0xa4>\n  a4:\tba 00 00 00 00       \tmov    $0x0,%edx\n  a9:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  ae:\t48 89 df             \tmov    %rbx,%rdi\n  b1:\te8 00 00 00 00       \tcallq  b6 <_ZN4dlib11deserializeERtRSi+0xb6>\n  b6:\t49 89 c4             \tmov    %rax,%r12\n  b9:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  bd:\t48 89 c7             \tmov    %rax,%rdi\n  c0:\te8 00 00 00 00       \tcallq  c5 <_ZN4dlib11deserializeERtRSi+0xc5>\n  c5:\teb 03                \tjmp    ca <_ZN4dlib11deserializeERtRSi+0xca>\n  c7:\t49 89 c4             \tmov    %rax,%r12\n  ca:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  ce:\t48 89 c7             \tmov    %rax,%rdi\n  d1:\te8 00 00 00 00       \tcallq  d6 <_ZN4dlib11deserializeERtRSi+0xd6>\n  d6:\teb 03                \tjmp    db <_ZN4dlib11deserializeERtRSi+0xdb>\n  d8:\t49 89 c4             \tmov    %rax,%r12\n  db:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n  df:\t48 89 c7             \tmov    %rax,%rdi\n  e2:\te8 00 00 00 00       \tcallq  e7 <_ZN4dlib11deserializeERtRSi+0xe7>\n  e7:\t48 89 df             \tmov    %rbx,%rdi\n  ea:\te8 00 00 00 00       \tcallq  ef <_ZN4dlib11deserializeERtRSi+0xef>\n  ef:\t4c 89 e0             \tmov    %r12,%rax\n  f2:\t48 89 c7             \tmov    %rax,%rdi\n  f5:\te8 00 00 00 00       \tcallq  fa <_ZN4dlib11deserializeERtRSi+0xfa>\n  fa:\t90                   \tnop\n  fb:\t48 83 c4 60          \tadd    $0x60,%rsp\n  ff:\t5b                   \tpop    %rbx\n 100:\t41 5c                \tpop    %r12\n 102:\t5d                   \tpop    %rbp\n 103:\tc3                   \tretq   ", "code_s": "__int64 __fastcall dlib deserialize(dlib *this, unsigned __int16 *a2,\n                                    std istream *a3) {\n  __int64 result;\n  std exception *v4;\n  char <span class=\"supfact\">v5</span>[Number];\n  char <span class=\"supfact\">v6</span>[Number];\n  char v7[Number];\n  result = dlib ser_helper unpack_int<unsigned short>(this, a2);\n  if ((_BYTE)result) {\n    v4 = (std exception *)_cxa_allocate_exception(Number);\n    std allocator<char> allocator(v7);\n    std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n        basic_string(<span class=\"supfact\">v6</span>, String, v7);\n    std operator+<char>(<span class=\"supfact\">v5</span>, String, <span class=\"supfact\">v6</span>);\n    dlib serialization_error serialization_error(v4,\n                                                 (__int64)<span class=\"supfact\">v5</span>);\n    std __cxx11\n        basic_string<char, std char_traits<char>,\n                     std allocator<char>> ~basic_string(<span class=\"supfact\">v5</span>);\n    std __cxx11\n        basic_string<char, std char_traits<char>,\n                     std allocator<char>> ~basic_string(<span class=\"supfact\">v6</span>);\n    std allocator<char> ~allocator(v7); _cxa_throw ( v4 , ( struct type_info * ) & ` typeinfo for ' dlib serialization_error , dlib serialization_error ~ serialization_error ) ; } return result ; }", "code_t": "void __cdecl dlib deserialize(unsigned __int16 *item, std istream *in) {\n  dlib serialization_error *v2;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      <span class=\"supfact\">e</span>;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      <span class=\"supfact\">__rhs</span>;\n  char v5[Number];\n  if (dlib ser_helper unpack_int<unsigned short>(item, in)) {\n    v2 = (dlib serialization_error *)_cxa_allocate_exception(Number);\n    std allocator<char> allocator(v5);\n    std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n        basic_string(&<span class=\"supfact\">__rhs</span>, String, v5);\n    std operator+<char>(&<span class=\"supfact\">e</span>, String, &<span class=\"supfact\">__rhs</span>);\n    dlib serialization_error serialization_error(v2, &<span class=\"supfact\">e</span>);\n    std __cxx11\n        basic_string<char, std char_traits<char>,\n                     std allocator<char>> ~basic_string(&<span class=\"supfact\">e</span>);\n    std __cxx11\n        basic_string<char, std char_traits<char>,\n                     std allocator<char>> ~basic_string(&<span class=\"supfact\">__rhs</span>);\n    std allocator<char> ~allocator(v5); _cxa_throw ( v2 , ( struct type_info * ) & ` typeinfo for ' dlib serialization_error , ( void ( __fastcall * ) ( void * ) ) dlib serialization_error ~ serialization_error ) ; } }", "var": [{"name": "v6", "type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }", "ref_name": "__rhs", "ref_type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}, {"name": "v5", "type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }", "ref_name": "e", "ref_type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}], "body_in_train": false}, {"repo_owner": "on4today", "repo_name": "pdfViewer", "path": "on4today/pdfViewer/3efc1e774b62ba3c33cbca461bb79bcad9b25f6276f2938a4010eca9450a2a55", "path_in_repo": "on4today/pdfViewer//build/debug/fitz/bbox-device.o", "objdump": "0000000000000532 <fz_bbox_clip_image_mask>:\n 532:\t55                   \tpush   %rbp\n 533:\t48 89 e5             \tmov    %rsp,%rbp\n 536:\t48 83 ec 30          \tsub    $0x30,%rsp\n 53a:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n 53e:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n 542:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n 546:\t48 89 4d d0          \tmov    %rcx,-0x30(%rbp)\n 54a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 551 <fz_bbox_clip_image_mask+0x1f>\n 551:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 558 <fz_bbox_clip_image_mask+0x26>\n 558:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n 55c:\t48 89 55 f8          \tmov    %rdx,-0x8(%rbp)\n 560:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n 564:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n 568:\t48 89 d6             \tmov    %rdx,%rsi\n 56b:\t48 89 c7             \tmov    %rax,%rdi\n 56e:\te8 00 00 00 00       \tcallq  573 <fz_bbox_clip_image_mask+0x41>\n 573:\t48 89 c1             \tmov    %rax,%rcx\n 576:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 57a:\tba 01 00 00 00       \tmov    $0x1,%edx\n 57f:\t48 89 ce             \tmov    %rcx,%rsi\n 582:\t48 89 c7             \tmov    %rax,%rdi\n 585:\te8 76 fa ff ff       \tcallq  0 <fz_bbox_add_rect>\n 58a:\t90                   \tnop\n 58b:\tc9                   \tleaveq \n 58c:\tc3                   \tretq   ", "code_s": "__int64 __fastcall fz_bbox_clip_image_mask(__int64 a1, __int64 a2, __int64 a3,\n                                           __int64 a4) {\n  __int64 v4;\n  __int64 *v5;\n  __int64 <span class=\"supfact\">v7</span>[Number];\n  v4 = fz_unit_rect[Number];\n  <span class=\"supfact\">v7</span>[Number] = fz_unit_rect[Number];\n  <span class=\"supfact\">v7</span>[Number] = v4;\n  v5 = (__int64 *)fz_transform_rect(<span class=\"supfact\">v7</span>, a4);\n  return fz_bbox_add_rect(a1, v5, Number);\n}", "code_t": "void __cdecl fz_bbox_clip_image_mask(fz_device *dev, fz_image *image,\n                                     const fz_rect *rect,\n                                     const fz_matrix *ctm) {\n  __int64 v4;\n  const fz_rect *v5;\n  fz_rect <span class=\"supfact\">r</span>;\n  v4 = fz_unit_rect[Number];\n  *(_QWORD *)&<span class=\"supfact\">r</span>.x0 = fz_unit_rect[Number];\n  *(_QWORD *)&<span class=\"supfact\">r</span>.x1 = v4;\n  v5 = (const fz_rect *)fz_transform_rect(&<span class=\"supfact\">r</span>, ctm);\n  fz_bbox_add_rect(dev, v5, Number);\n}", "var": [{"name": "v7", "type": "__unk__", "ref_name": "r", "ref_type": "struct fz_rect { float x0; float y0; float x1; float y1; }"}], "body_in_train": false}, {"repo_owner": "mDibyo", "repo_name": "py-dlib", "path": "mDibyo/py-dlib/d74674d396f15835bcc4b40e8f72ef79b96db76341a2e1c0bfb6a82ace3d6dc5", "path_in_repo": "mDibyo/py-dlib/dlib/test/array2d.o", "objdump": "0000000000000000 <_ZN4dlib9serializeERKlRSo>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t41 54                \tpush   %r12\n   6:\t53                   \tpush   %rbx\n   7:\t48 83 ec 60          \tsub    $0x60,%rsp\n   b:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n   f:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n  13:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n  17:\t48 8b 00             \tmov    (%rax),%rax\n  1a:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n  1e:\t48 89 d6             \tmov    %rdx,%rsi\n  21:\t48 89 c7             \tmov    %rax,%rdi\n  24:\te8 00 00 00 00       \tcallq  29 <_ZN4dlib9serializeERKlRSo+0x29>\n  29:\t84 c0                \ttest   %al,%al\n  2b:\t0f 84 cc 00 00 00    \tje     fd <_ZN4dlib9serializeERKlRSo+0xfd>\n  31:\tbf 30 00 00 00       \tmov    $0x30,%edi\n  36:\te8 00 00 00 00       \tcallq  3b <_ZN4dlib9serializeERKlRSo+0x3b>\n  3b:\t48 89 c3             \tmov    %rax,%rbx\n  3e:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n  42:\t48 89 c7             \tmov    %rax,%rdi\n  45:\te8 00 00 00 00       \tcallq  4a <_ZN4dlib9serializeERKlRSo+0x4a>\n  4a:\t48 8d 55 ef          \tlea    -0x11(%rbp),%rdx\n  4e:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  52:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  57:\t48 89 c7             \tmov    %rax,%rdi\n  5a:\te8 00 00 00 00       \tcallq  5f <_ZN4dlib9serializeERKlRSo+0x5f>\n  5f:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  63:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n  67:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  6c:\t48 89 c7             \tmov    %rax,%rdi\n  6f:\te8 00 00 00 00       \tcallq  74 <_ZN4dlib9serializeERKlRSo+0x74>\n  74:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  78:\t48 89 c6             \tmov    %rax,%rsi\n  7b:\t48 89 df             \tmov    %rbx,%rdi\n  7e:\te8 00 00 00 00       \tcallq  83 <_ZN4dlib9serializeERKlRSo+0x83>\n  83:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  87:\t48 89 c7             \tmov    %rax,%rdi\n  8a:\te8 00 00 00 00       \tcallq  8f <_ZN4dlib9serializeERKlRSo+0x8f>\n  8f:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  93:\t48 89 c7             \tmov    %rax,%rdi\n  96:\te8 00 00 00 00       \tcallq  9b <_ZN4dlib9serializeERKlRSo+0x9b>\n  9b:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n  9f:\t48 89 c7             \tmov    %rax,%rdi\n  a2:\te8 00 00 00 00       \tcallq  a7 <_ZN4dlib9serializeERKlRSo+0xa7>\n  a7:\tba 00 00 00 00       \tmov    $0x0,%edx\n  ac:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  b1:\t48 89 df             \tmov    %rbx,%rdi\n  b4:\te8 00 00 00 00       \tcallq  b9 <_ZN4dlib9serializeERKlRSo+0xb9>\n  b9:\t49 89 c4             \tmov    %rax,%r12\n  bc:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  c0:\t48 89 c7             \tmov    %rax,%rdi\n  c3:\te8 00 00 00 00       \tcallq  c8 <_ZN4dlib9serializeERKlRSo+0xc8>\n  c8:\teb 03                \tjmp    cd <_ZN4dlib9serializeERKlRSo+0xcd>\n  ca:\t49 89 c4             \tmov    %rax,%r12\n  cd:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n  d1:\t48 89 c7             \tmov    %rax,%rdi\n  d4:\te8 00 00 00 00       \tcallq  d9 <_ZN4dlib9serializeERKlRSo+0xd9>\n  d9:\teb 03                \tjmp    de <_ZN4dlib9serializeERKlRSo+0xde>\n  db:\t49 89 c4             \tmov    %rax,%r12\n  de:\t48 8d 45 ef          \tlea    -0x11(%rbp),%rax\n  e2:\t48 89 c7             \tmov    %rax,%rdi\n  e5:\te8 00 00 00 00       \tcallq  ea <_ZN4dlib9serializeERKlRSo+0xea>\n  ea:\t48 89 df             \tmov    %rbx,%rdi\n  ed:\te8 00 00 00 00       \tcallq  f2 <_ZN4dlib9serializeERKlRSo+0xf2>\n  f2:\t4c 89 e0             \tmov    %r12,%rax\n  f5:\t48 89 c7             \tmov    %rax,%rdi\n  f8:\te8 00 00 00 00       \tcallq  fd <_ZN4dlib9serializeERKlRSo+0xfd>\n  fd:\t90                   \tnop\n  fe:\t48 83 c4 60          \tadd    $0x60,%rsp\n 102:\t5b                   \tpop    %rbx\n 103:\t41 5c                \tpop    %r12\n 105:\t5d                   \tpop    %rbp\n 106:\tc3                   \tretq   ", "code_s": "__int64 __fastcall dlib serialize(dlib *this, const __int64 *a2,\n                                  std ostream *a3) {\n  __int64 result;\n  std exception *v4;\n  char <span class=\"supfact\">v5</span>[Number];\n  char <span class=\"supfact\">v6</span>[Number];\n  char v7[Number];\n  result = dlib ser_helper pack_int<long>(*(_QWORD *)this, a2);\n  if ((_BYTE)result) {\n    v4 = (std exception *)_cxa_allocate_exception(Number);\n    std allocator<char> allocator(v7);\n    std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n        basic_string(<span class=\"supfact\">v6</span>, String, v7);\n    std operator+<char>(<span class=\"supfact\">v5</span>, String, <span class=\"supfact\">v6</span>);\n    dlib serialization_error serialization_error(v4,\n                                                 (__int64)<span class=\"supfact\">v5</span>);\n    std __cxx11\n        basic_string<char, std char_traits<char>,\n                     std allocator<char>> ~basic_string(<span class=\"supfact\">v5</span>);\n    std __cxx11\n        basic_string<char, std char_traits<char>,\n                     std allocator<char>> ~basic_string(<span class=\"supfact\">v6</span>);\n    std allocator<char> ~allocator(v7); _cxa_throw ( v4 , ( struct type_info * ) & ` typeinfo for ' dlib serialization_error , dlib serialization_error ~ serialization_error ) ; } return result ; }", "code_t": "void __cdecl dlib serialize(const __int64 *item, std ostream *out) {\n  dlib serialization_error *v2;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      <span class=\"supfact\">e</span>;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      <span class=\"supfact\">__rhs</span>;\n  char v5[Number];\n  if (dlib ser_helper pack_int<long>(*item, out)) {\n    v2 = (dlib serialization_error *)_cxa_allocate_exception(Number);\n    std allocator<char> allocator(v5);\n    std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n        basic_string(&<span class=\"supfact\">__rhs</span>, String, v5);\n    std operator+<char>(&<span class=\"supfact\">e</span>, String, &<span class=\"supfact\">__rhs</span>);\n    dlib serialization_error serialization_error(v2, &<span class=\"supfact\">e</span>);\n    std __cxx11\n        basic_string<char, std char_traits<char>,\n                     std allocator<char>> ~basic_string(&<span class=\"supfact\">e</span>);\n    std __cxx11\n        basic_string<char, std char_traits<char>,\n                     std allocator<char>> ~basic_string(&<span class=\"supfact\">__rhs</span>);\n    std allocator<char> ~allocator(v5); _cxa_throw ( v2 , ( struct type_info * ) & ` typeinfo for ' dlib serialization_error , ( void ( __fastcall * ) ( void * ) ) dlib serialization_error ~ serialization_error ) ; } }", "var": [{"name": "v6", "type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }", "ref_name": "__rhs", "ref_type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}, {"name": "v5", "type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }", "ref_name": "e", "ref_type": "struct std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> > { std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Alloc_hider _M_dataplus; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::size_type _M_string_length; std::__cxx11::basic_string<char,std::char_traits<char>,std::allocator<char> >::$CFBEC286C7F52157F7E59FC354047095 _anon_0; }"}], "body_in_train": false}, {"repo_owner": "morten-krogh", "repo_name": "trlmdb", "path": "morten-krogh/trlmdb/dbfc4c0b000643aeee15f326dbc4b8cb027ca0c30ea22c4bbc2b8ee2eaf0f5d5", "path_in_repo": "morten-krogh/trlmdb//mdb.o", "objdump": "0000000000010afd <mdb_put>:\n   10afd:\t55                   \tpush   %rbp\n   10afe:\t48 89 e5             \tmov    %rsp,%rbp\n   10b01:\t48 81 ec a0 03 00 00 \tsub    $0x3a0,%rsp\n   10b08:\t48 89 bd 78 fc ff ff \tmov    %rdi,-0x388(%rbp)\n   10b0f:\t89 b5 74 fc ff ff    \tmov    %esi,-0x38c(%rbp)\n   10b15:\t48 89 95 68 fc ff ff \tmov    %rdx,-0x398(%rbp)\n   10b1c:\t48 89 8d 60 fc ff ff \tmov    %rcx,-0x3a0(%rbp)\n   10b23:\t44 89 85 70 fc ff ff \tmov    %r8d,-0x390(%rbp)\n   10b2a:\t48 83 bd 68 fc ff ff \tcmpq   $0x0,-0x398(%rbp)\n   10b31:\t00 \n   10b32:\t74 47                \tje     10b7b <mdb_put+0x7e>\n   10b34:\t48 83 bd 60 fc ff ff \tcmpq   $0x0,-0x3a0(%rbp)\n   10b3b:\t00 \n   10b3c:\t74 3d                \tje     10b7b <mdb_put+0x7e>\n   10b3e:\t48 83 bd 78 fc ff ff \tcmpq   $0x0,-0x388(%rbp)\n   10b45:\t00 \n   10b46:\t74 33                \tje     10b7b <mdb_put+0x7e>\n   10b48:\t48 8b 85 78 fc ff ff \tmov    -0x388(%rbp),%rax\n   10b4f:\t8b 40 78             \tmov    0x78(%rax),%eax\n   10b52:\t39 85 74 fc ff ff    \tcmp    %eax,-0x38c(%rbp)\n   10b58:\t73 21                \tjae    10b7b <mdb_put+0x7e>\n   10b5a:\t48 8b 85 78 fc ff ff \tmov    -0x388(%rbp),%rax\n   10b61:\t48 8b 50 70          \tmov    0x70(%rax),%rdx\n   10b65:\t8b 85 74 fc ff ff    \tmov    -0x38c(%rbp),%eax\n   10b6b:\t48 01 d0             \tadd    %rdx,%rax\n   10b6e:\t0f b6 00             \tmovzbl (%rax),%eax\n   10b71:\t0f b6 c0             \tmovzbl %al,%eax\n   10b74:\t83 e0 10             \tand    $0x10,%eax\n   10b77:\t85 c0                \ttest   %eax,%eax\n   10b79:\t75 0a                \tjne    10b85 <mdb_put+0x88>\n   10b7b:\tb8 16 00 00 00       \tmov    $0x16,%eax\n   10b80:\te9 05 01 00 00       \tjmpq   10c8a <mdb_put+0x18d>\n   10b85:\t8b 85 70 fc ff ff    \tmov    -0x390(%rbp),%eax\n   10b8b:\t25 cf ff f8 ff       \tand    $0xfff8ffcf,%eax\n   10b90:\t85 c0                \ttest   %eax,%eax\n   10b92:\t74 0a                \tje     10b9e <mdb_put+0xa1>\n   10b94:\tb8 16 00 00 00       \tmov    $0x16,%eax\n   10b99:\te9 ec 00 00 00       \tjmpq   10c8a <mdb_put+0x18d>\n   10b9e:\t48 8b 85 78 fc ff ff \tmov    -0x388(%rbp),%rax\n   10ba5:\t8b 40 7c             \tmov    0x7c(%rax),%eax\n   10ba8:\t25 13 00 02 00       \tand    $0x20013,%eax\n   10bad:\t85 c0                \ttest   %eax,%eax\n   10baf:\t74 27                \tje     10bd8 <mdb_put+0xdb>\n   10bb1:\t48 8b 85 78 fc ff ff \tmov    -0x388(%rbp),%rax\n   10bb8:\t8b 40 7c             \tmov    0x7c(%rax),%eax\n   10bbb:\t25 00 00 02 00       \tand    $0x20000,%eax\n   10bc0:\t85 c0                \ttest   %eax,%eax\n   10bc2:\t74 0a                \tje     10bce <mdb_put+0xd1>\n   10bc4:\tb8 0d 00 00 00       \tmov    $0xd,%eax\n   10bc9:\te9 bc 00 00 00       \tjmpq   10c8a <mdb_put+0x18d>\n   10bce:\tb8 c2 87 ff ff       \tmov    $0xffff87c2,%eax\n   10bd3:\te9 b2 00 00 00       \tjmpq   10c8a <mdb_put+0x18d>\n   10bd8:\t48 8d 8d 80 fc ff ff \tlea    -0x380(%rbp),%rcx\n   10bdf:\t8b 95 74 fc ff ff    \tmov    -0x38c(%rbp),%edx\n   10be5:\t48 8b b5 78 fc ff ff \tmov    -0x388(%rbp),%rsi\n   10bec:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n   10bf3:\t48 89 c7             \tmov    %rax,%rdi\n   10bf6:\te8 03 aa ff ff       \tcallq  b5fe <mdb_cursor_init>\n   10bfb:\t48 8b 85 78 fc ff ff \tmov    -0x388(%rbp),%rax\n   10c02:\t48 8b 40 68          \tmov    0x68(%rax),%rax\n   10c06:\t8b 95 74 fc ff ff    \tmov    -0x38c(%rbp),%edx\n   10c0c:\t48 c1 e2 03          \tshl    $0x3,%rdx\n   10c10:\t48 01 d0             \tadd    %rdx,%rax\n   10c13:\t48 8b 00             \tmov    (%rax),%rax\n   10c16:\t48 89 85 70 fe ff ff \tmov    %rax,-0x190(%rbp)\n   10c1d:\t48 8b 85 78 fc ff ff \tmov    -0x388(%rbp),%rax\n   10c24:\t48 8b 40 68          \tmov    0x68(%rax),%rax\n   10c28:\t8b 95 74 fc ff ff    \tmov    -0x38c(%rbp),%edx\n   10c2e:\t48 c1 e2 03          \tshl    $0x3,%rdx\n   10c32:\t48 01 c2             \tadd    %rax,%rdx\n   10c35:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n   10c3c:\t48 89 02             \tmov    %rax,(%rdx)\n   10c3f:\t8b 8d 70 fc ff ff    \tmov    -0x390(%rbp),%ecx\n   10c45:\t48 8b 95 60 fc ff ff \tmov    -0x3a0(%rbp),%rdx\n   10c4c:\t48 8b b5 68 fc ff ff \tmov    -0x398(%rbp),%rsi\n   10c53:\t48 8d 85 70 fe ff ff \tlea    -0x190(%rbp),%rax\n   10c5a:\t48 89 c7             \tmov    %rax,%rdi\n   10c5d:\te8 00 00 00 00       \tcallq  10c62 <mdb_put+0x165>\n   10c62:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n   10c65:\t48 8b 85 78 fc ff ff \tmov    -0x388(%rbp),%rax\n   10c6c:\t48 8b 40 68          \tmov    0x68(%rax),%rax\n   10c70:\t8b 95 74 fc ff ff    \tmov    -0x38c(%rbp),%edx\n   10c76:\t48 c1 e2 03          \tshl    $0x3,%rdx\n   10c7a:\t48 01 c2             \tadd    %rax,%rdx\n   10c7d:\t48 8b 85 70 fe ff ff \tmov    -0x190(%rbp),%rax\n   10c84:\t48 89 02             \tmov    %rax,(%rdx)\n   10c87:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n   10c8a:\tc9                   \tleaveq \n   10c8b:\tc3                   \tretq   ", "code_s": "__int64 __fastcall mdb_put(__int64 a1, unsigned int a2, __int64 a3, __int64 a4,\n                           int a5) {\n  __int64 result;\n  char <span class=\"supfact\">v9</span>[Number];\n  __int64 <span class=\"supfact\">v10</span>[Number];\n  unsigned int v11;\n  if (!a3 || !a4 || !a1 || a2 >= *(_DWORD *)(a1 + Number) ||\n      (*(_BYTE *)(*(_QWORD *)(a1 + Number) + a2) & Number) == Number)\n    return Number L;\n  if ((a5 & Number) != Number)\n    return Number L;\n  if ((*(_DWORD *)(a1 + Number) & Number) != Number) {\n    if ((*(_DWORD *)(a1 + Number) & Number) != Number)\n      result = Number L;\n    else\n      result = Number L;\n  } else {\n    mdb_cursor_init((__int64)<span class=\"supfact\">v10</span>, a1, a2,\n                    (__int64)<span class=\"supfact\">v9</span>);\n    <span class=\"supfact\">v10</span>[Number] =\n        *(_QWORD *)(Number L * a2 + *(_QWORD *)(a1 + Number));\n    *(_QWORD *)(*(_QWORD *)(a1 + Number) + Number L * a2) = <span class=\"supfact\">v10</span>;\n    v11 = mdb_cursor_put((__int64)<span class=\"supfact\">v10</span>, a3, a4, a5);\n    *(_QWORD *)(*(_QWORD *)(a1 + Number) + Number L * a2) =\n        <span class=\"supfact\">v10</span>[Number];\n    result = v11;\n  }\n  return result;\n}", "code_t": "int __cdecl mdb_put(MDB_txn_0 *txn, MDB_dbi dbi, MDB_val_0 *key,\n                    MDB_val_0 *data, unsigned int flags) {\n  int result;\n  MDB_xcursor_0 <span class=\"supfact\">mx</span>;\n  MDB_cursor_0 <span class=\"supfact\">mc</span>;\n  int rc;\n  if (!key || !data || !txn || dbi >= txn->mt_numdbs ||\n      (txn->mt_dbflags[dbi] & Number) == Number)\n    return Number;\n  if ((flags & Number) != Number)\n    return Number;\n  if ((txn->mt_flags & Number) != Number) {\n    if ((txn->mt_flags & Number) != Number)\n      result = Number;\n    else\n      result = Number;\n  } else {\n    mdb_cursor_init(&<span class=\"supfact\">mc</span>, txn, dbi, &<span class=\"supfact\">mx</span>);\n    <span class=\"supfact\">mc</span>.mc_next = txn->mt_cursors[dbi];\n    txn->mt_cursors[dbi] = &<span class=\"supfact\">mc</span>;\n    rc = mdb_cursor_put(&<span class=\"supfact\">mc</span>, key, data, flags);\n    txn->mt_cursors[dbi] = <span class=\"supfact\">mc</span>.mc_next;\n    result = rc;\n  }\n  return result;\n}", "var": [{"name": "v10", "type": "struct MDB_cursor_0 { MDB_cursor_0 * mc_next; MDB_cursor_0 * mc_backup; MDB_xcursor * mc_xcursor; MDB_txn_0 * mc_txn; MDB_dbi mc_dbi; PADDING (4); MDB_db_0 * mc_db; MDB_dbx_0 * mc_dbx; unsigned __int8 * mc_dbflag; unsigned __int16 mc_snum; unsigned __int16 mc_top; unsigned int mc_flags; MDB_page_0 *[32] mc_pg; indx_t[32] mc_ki; }", "ref_name": "mc", "ref_type": "struct MDB_cursor_0 { MDB_cursor_0 * mc_next; MDB_cursor_0 * mc_backup; MDB_xcursor * mc_xcursor; MDB_txn_0 * mc_txn; MDB_dbi mc_dbi; PADDING (4); MDB_db_0 * mc_db; MDB_dbx_0 * mc_dbx; unsigned __int8 * mc_dbflag; unsigned __int16 mc_snum; unsigned __int16 mc_top; unsigned int mc_flags; MDB_page_0 *[32] mc_pg; indx_t[32] mc_ki; }"}, {"name": "v9", "type": "struct MDB_xcursor_0 { MDB_cursor_0 mx_cursor; MDB_db_0 mx_db; MDB_dbx_0 mx_dbx; unsigned __int8 mx_dbflag; PADDING (7); }", "ref_name": "mx", "ref_type": "struct MDB_xcursor_0 { MDB_cursor_0 mx_cursor; MDB_db_0 mx_db; MDB_dbx_0 mx_dbx; unsigned __int8 mx_dbflag; PADDING (7); }"}], "body_in_train": false}, {"repo_owner": "kjkasi", "repo_name": "030005", "path": "kjkasi/030005/d5329596a8a967e39fcb9a7ca4cd5c3aa31df6f07b8e9cad3624500fe8e91478", "path_in_repo": "kjkasi/030005/kernels/Realtek_3.1/Realtek_3.1/linux/scripts/kconfig/zconf.tab.o", "objdump": "0000000000004ff9 <conf_get_default_confname>:\n    4ff9:\t48 81 ec a8 00 00 00 \tsub    $0xa8,%rsp\n    5000:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    5005:\te8 83 fe ff ff       \tcallq  4e8d <conf_expand_value>\n    500a:\t48 89 84 24 98 00 00 \tmov    %rax,0x98(%rsp)\n    5011:\t00 \n    5012:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    5017:\te8 00 00 00 00       \tcallq  501c <conf_get_default_confname+0x23>\n    501c:\t48 89 84 24 90 00 00 \tmov    %rax,0x90(%rsp)\n    5023:\t00 \n    5024:\t48 83 bc 24 90 00 00 \tcmpq   $0x0,0x90(%rsp)\n    502b:\t00 00 \n    502d:\t74 45                \tje     5074 <conf_get_default_confname+0x7b>\n    502f:\t48 8b 94 24 98 00 00 \tmov    0x98(%rsp),%rdx\n    5036:\t00 \n    5037:\t48 8b 84 24 90 00 00 \tmov    0x90(%rsp),%rax\n    503e:\t00 \n    503f:\t48 89 d1             \tmov    %rdx,%rcx\n    5042:\t48 89 c2             \tmov    %rax,%rdx\n    5045:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    504a:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    504f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5054:\te8 00 00 00 00       \tcallq  5059 <conf_get_default_confname+0x60>\n    5059:\t48 89 e0             \tmov    %rsp,%rax\n    505c:\t48 89 c6             \tmov    %rax,%rsi\n    505f:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    5064:\te8 00 00 00 00       \tcallq  5069 <conf_get_default_confname+0x70>\n    5069:\t85 c0                \ttest   %eax,%eax\n    506b:\t75 07                \tjne    5074 <conf_get_default_confname+0x7b>\n    506d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5072:\teb 08                \tjmp    507c <conf_get_default_confname+0x83>\n    5074:\t48 8b 84 24 98 00 00 \tmov    0x98(%rsp),%rax\n    507b:\t00 \n    507c:\t48 81 c4 a8 00 00 00 \tadd    $0xa8,%rsp\n    5083:\tc3                   \tretq   ", "code_s": "char *conf_get_default_confname() {\n  char *result;\n  struct stat <span class=\"supfact\">v1</span>;\n  char *v2;\n  char *v3;\n  v3 = conf_expand_value(String);\n  v2 = getenv(String);\n  if (!v2 || (sprintf(fullname_5263, String, v2, v3),\n              stat(fullname_5263, &<span class=\"supfact\">v1</span>)))\n    result = v3;\n  else\n    result = fullname_5263;\n  return result;\n}", "code_t": "char *__cdecl conf_get_default_confname() {\n  char *result;\n  stat <span class=\"supfact\">buf</span>;\n  char *env;\n  char *name;\n  name = conf_expand_value(String);\n  env = getenv(String);\n  if (!env || (sprintf(fullname_5263, String, env, name),\n               stat_0(fullname_5263, &<span class=\"supfact\">buf</span>)))\n    result = name;\n  else\n    result = fullname_5263;\n  return result;\n}", "var": [{"name": "v1", "type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }", "ref_name": "buf", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }"}], "body_in_train": false}, {"repo_owner": "hbowden", "repo_name": "nextgen", "path": "hbowden/nextgen/749cd7274abd7be4b3735b79dc38349403f91a69d36ed4ba6331261be3d2741d", "path_in_repo": "hbowden/nextgen/deps/libressl-2.5.1/ssl/d1_lib.o", "objdump": "00000000000008b6 <dtls1_get_timeout>:\n 8b6:\t55                   \tpush   %rbp\n 8b7:\t48 89 e5             \tmov    %rsp,%rbp\n 8ba:\t48 83 ec 30          \tsub    $0x30,%rsp\n 8be:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n 8c2:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n 8c6:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n 8cd:\t00 00 \n 8cf:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 8d3:\t31 c0                \txor    %eax,%eax\n 8d5:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 8d9:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n 8dd:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n 8e1:\t48 85 c0             \ttest   %rax,%rax\n 8e4:\t75 1b                \tjne    901 <dtls1_get_timeout+0x4b>\n 8e6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 8ea:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n 8ee:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n 8f2:\t48 85 c0             \ttest   %rax,%rax\n 8f5:\t75 0a                \tjne    901 <dtls1_get_timeout+0x4b>\n 8f7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 8fc:\te9 25 01 00 00       \tjmpq   a26 <dtls1_get_timeout+0x170>\n 901:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n 905:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 90a:\t48 89 c7             \tmov    %rax,%rdi\n 90d:\te8 00 00 00 00       \tcallq  912 <dtls1_get_timeout+0x5c>\n 912:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 916:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n 91a:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 91e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 922:\t48 39 c2             \tcmp    %rax,%rdx\n 925:\t7c 2a                \tjl     951 <dtls1_get_timeout+0x9b>\n 927:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 92b:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n 92f:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 933:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 937:\t48 39 c2             \tcmp    %rax,%rdx\n 93a:\t75 34                \tjne    970 <dtls1_get_timeout+0xba>\n 93c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 940:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n 944:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n 948:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 94c:\t48 39 c2             \tcmp    %rax,%rdx\n 94f:\t7f 1f                \tjg     970 <dtls1_get_timeout+0xba>\n 951:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 955:\tba 10 00 00 00       \tmov    $0x10,%edx\n 95a:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 95f:\t48 89 c7             \tmov    %rax,%rdi\n 962:\te8 00 00 00 00       \tcallq  967 <dtls1_get_timeout+0xb1>\n 967:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 96b:\te9 b6 00 00 00       \tjmpq   a26 <dtls1_get_timeout+0x170>\n 970:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 974:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n 978:\t48 83 c0 08          \tadd    $0x8,%rax\n 97c:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 980:\t48 8b 00             \tmov    (%rax),%rax\n 983:\t48 8b 4d d0          \tmov    -0x30(%rbp),%rcx\n 987:\t48 89 01             \tmov    %rax,(%rcx)\n 98a:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n 98e:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 992:\t48 8b 10             \tmov    (%rax),%rdx\n 995:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 999:\t48 29 c2             \tsub    %rax,%rdx\n 99c:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 9a0:\t48 89 10             \tmov    %rdx,(%rax)\n 9a3:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 9a7:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 9ab:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 9af:\t48 29 c2             \tsub    %rax,%rdx\n 9b2:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 9b6:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n 9ba:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 9be:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n 9c2:\t48 85 c0             \ttest   %rax,%rax\n 9c5:\t79 29                \tjns    9f0 <dtls1_get_timeout+0x13a>\n 9c7:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 9cb:\t48 8b 00             \tmov    (%rax),%rax\n 9ce:\t48 8d 50 ff          \tlea    -0x1(%rax),%rdx\n 9d2:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 9d6:\t48 89 10             \tmov    %rdx,(%rax)\n 9d9:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 9dd:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n 9e1:\t48 8d 90 40 42 0f 00 \tlea    0xf4240(%rax),%rdx\n 9e8:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 9ec:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n 9f0:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 9f4:\t48 8b 00             \tmov    (%rax),%rax\n 9f7:\t48 85 c0             \ttest   %rax,%rax\n 9fa:\t75 26                \tjne    a22 <dtls1_get_timeout+0x16c>\n 9fc:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n a00:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n a04:\t48 3d 97 3a 00 00    \tcmp    $0x3a97,%rax\n a0a:\t7f 16                \tjg     a22 <dtls1_get_timeout+0x16c>\n a0c:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n a10:\tba 10 00 00 00       \tmov    $0x10,%edx\n a15:\tbe 00 00 00 00       \tmov    $0x0,%esi\n a1a:\t48 89 c7             \tmov    %rax,%rdi\n a1d:\te8 00 00 00 00       \tcallq  a22 <dtls1_get_timeout+0x16c>\n a22:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n a26:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n a2a:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n a31:\t00 00 \n a33:\t74 05                \tje     a3a <dtls1_get_timeout+0x184>\n a35:\te8 00 00 00 00       \tcallq  a3a <dtls1_get_timeout+0x184>\n a3a:\tc9                   \tleaveq \n a3b:\tc3                   \tretq   ", "code_s": "_QWORD *__fastcall dtls1_get_timeout(__int64 a1, _QWORD *a2) {\n  _QWORD *result;\n  __int64 v3;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v5;\n  v5 = __readfsqword(Number);\n  if (!*(_QWORD *)(*(_QWORD *)(a1 + Number) + Number L) &&\n      !*(_QWORD *)(*(_QWORD *)(a1 + Number) + Number L))\n    return Number L;\n  gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n  if (*(_QWORD *)(*(_QWORD *)(a1 + Number) + Number L) <\n          <span class=\"supfact\">tv</span>.tv_sec ||\n      *(_QWORD *)(*(_QWORD *)(a1 + Number) + Number L) ==\n              <span class=\"supfact\">tv</span>.tv_sec &&\n          *(_QWORD *)(*(_QWORD *)(a1 + Number) + Number L) <=\n              <span class=\"supfact\">tv</span>.tv_usec) {\n    memset(a2, Number, Number);\n    result = a2;\n  } else {\n    v3 = *(_QWORD *)(*(_QWORD *)(a1 + Number) + Number L);\n    *a2 = *(_QWORD *)(*(_QWORD *)(a1 + Number) + Number L);\n    a2[Number] = v3;\n    *a2 -= <span class=\"supfact\">tv</span>.tv_sec;\n    a2[Number] -= <span class=\"supfact\">tv</span>.tv_usec;\n    if ((__int64)a2[Number] < Number) {\n      --*a2;\n      a2[Number] += Number L;\n    }\n    if (!*a2 && (__int64)a2[Number] <= Number)\n      memset(a2, Number, Number);\n    result = a2;\n  }\n  return result;\n}", "code_t": "timeval *__cdecl dtls1_get_timeout(SSL *s, timeval *timeleft) {\n  timeval *result;\n  __suseconds_t v3;\n  timeval <span class=\"supfact\">timenow</span>;\n  unsigned __int64 v5;\n  v5 = __readfsqword(Number);\n  if (!s->d1->next_timeout.tv_sec && !s->d1->next_timeout.tv_usec)\n    return Number L;\n  gettimeofday(&<span class=\"supfact\">timenow</span>, Number L);\n  if (s->d1->next_timeout.tv_sec < <span class=\"supfact\">timenow</span>.tv_sec ||\n      s->d1->next_timeout.tv_sec == <span class=\"supfact\">timenow</span>.tv_sec &&\n          s->d1->next_timeout.tv_usec <= <span class=\"supfact\">timenow</span>.tv_usec) {\n    memset(timeleft, Number, sizeof(timeval));\n    result = timeleft;\n  } else {\n    v3 = s->d1->next_timeout.tv_usec;\n    timeleft->tv_sec = s->d1->next_timeout.tv_sec;\n    timeleft->tv_usec = v3;\n    timeleft->tv_sec -= <span class=\"supfact\">timenow</span>.tv_sec;\n    timeleft->tv_usec -= <span class=\"supfact\">timenow</span>.tv_usec;\n    if (timeleft->tv_usec < Number) {\n      --timeleft->tv_sec;\n      timeleft->tv_usec += Number L;\n    }\n    if (!timeleft->tv_sec && timeleft->tv_usec <= Number)\n      memset(timeleft, Number, sizeof(timeval));\n    result = timeleft;\n  }\n  return result;\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "timenow", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "mstoilov", "repo_name": "rpatk", "path": "mstoilov/rpatk/37ec2e0abc2a46bb09cdfda162c9811549ab1149b5f4a1b73dc526bed4ef4835", "path_in_repo": "mstoilov/rpatk/rvm/build/unix/arm/out/librvm.so.2.0", "objdump": "000000000000d0f2 <rvm_reg_create_swi>:\n    d0f2:\t55                   \tpush   %rbp\n    d0f3:\t48 89 e5             \tmov    %rsp,%rbp\n    d0f6:\t48 83 ec 20          \tsub    $0x20,%rsp\n    d0fa:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    d0fe:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    d102:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n    d106:\t48 89 d6             \tmov    %rdx,%rsi\n    d109:\t48 89 c7             \tmov    %rax,%rdi\n    d10c:\te8 3f 75 ff ff       \tcallq  4650 <rvm_reg_setswi@plt>\n    d111:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    d115:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    d119:\tc9                   \tleaveq \n    d11a:\tc3                   \tretq   ", "code_s": "__int64 __fastcall rvm_reg_create_swi(__int64 a1) {\n  __int64 <span class=\"supfact\">v2</span>;\n  rvm_reg_setswi(&<span class=\"supfact\">v2</span>, a1);\n  return <span class=\"supfact\">v2</span>;\n}", "code_t": "rvmreg_t __cdecl rvm_reg_create_swi(ruword swiid) {\n  rvmreg_t <span class=\"supfact\">r</span>;\n  rvm_reg_setswi(&<span class=\"supfact\">r</span>, swiid);\n  return <span class=\"supfact\">r</span>;\n}", "var": [{"name": "v2", "type": "__int64", "ref_name": "r", "ref_type": "struct rvmreg_t { $8B83D36BBA2B5A9DA35EC761161D149E v; ruint32 size; rvmreg_type_t type; rvmreg_flags_t flags; }"}], "body_in_train": false}, {"repo_owner": "christoph-husse", "repo_name": "isynth", "path": "christoph-husse/isynth/95e2976d4dbab75a04d3663dbd6d625147c011b33b8fb7696190981a0e7d946e", "path_in_repo": "christoph-husse/isynth/dependencies/juce/extras/Introjucer/Builds/Linux/build/intermediate/Debug/juce_data_structures_84790dfc.o", "objdump": "0000000000000000 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t53                   \tpush   %rbx\n   5:\t48 83 ec 38          \tsub    $0x38,%rsp\n   9:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n   d:\t89 75 d4             \tmov    %esi,-0x2c(%rbp)\n  10:\t89 55 d0             \tmov    %edx,-0x30(%rbp)\n  13:\t48 89 4d c8          \tmov    %rcx,-0x38(%rbp)\n  17:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  1b:\t48 83 c0 20          \tadd    $0x20,%rax\n  1f:\t48 89 c7             \tmov    %rax,%rdi\n  22:\te8 00 00 00 00       \tcallq  27 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x27>\n  27:\t89 c2                \tmov    %eax,%edx\n  29:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n  2c:\t89 d6                \tmov    %edx,%esi\n  2e:\t89 c7                \tmov    %eax,%edi\n  30:\te8 00 00 00 00       \tcallq  35 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x35>\n  35:\t83 f0 01             \txor    $0x1,%eax\n  38:\t84 c0                \ttest   %al,%al\n  3a:\t74 27                \tje     63 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x63>\n  3c:\tbe 59 01 00 00       \tmov    $0x159,%esi\n  41:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  46:\te8 00 00 00 00       \tcallq  4b <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x4b>\n  4b:\te8 00 00 00 00       \tcallq  50 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x50>\n  50:\t84 c0                \ttest   %al,%al\n  52:\t74 0f                \tje     63 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x63>\n  54:\tbe 05 00 00 00       \tmov    $0x5,%esi\n  59:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  5e:\te8 00 00 00 00       \tcallq  63 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x63>\n  63:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n  66:\t3b 45 d0             \tcmp    -0x30(%rbp),%eax\n  69:\t74 29                \tje     94 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x94>\n  6b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  6f:\t48 83 c0 20          \tadd    $0x20,%rax\n  73:\t48 89 c7             \tmov    %rax,%rdi\n  76:\te8 00 00 00 00       \tcallq  7b <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x7b>\n  7b:\t89 c2                \tmov    %eax,%edx\n  7d:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n  80:\t89 d6                \tmov    %edx,%esi\n  82:\t89 c7                \tmov    %eax,%edi\n  84:\te8 00 00 00 00       \tcallq  89 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x89>\n  89:\t84 c0                \ttest   %al,%al\n  8b:\t74 07                \tje     94 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x94>\n  8d:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  92:\teb 05                \tjmp    99 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x99>\n  94:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  99:\t84 c0                \ttest   %al,%al\n  9b:\t0f 84 d6 00 00 00    \tje     177 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x177>\n  a1:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n  a6:\t75 29                \tjne    d1 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0xd1>\n  a8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  ac:\t48 83 c0 20          \tadd    $0x20,%rax\n  b0:\t8b 55 d0             \tmov    -0x30(%rbp),%edx\n  b3:\t8b 4d d4             \tmov    -0x2c(%rbp),%ecx\n  b6:\t89 ce                \tmov    %ecx,%esi\n  b8:\t48 89 c7             \tmov    %rax,%rdi\n  bb:\te8 00 00 00 00       \tcallq  c0 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0xc0>\n  c0:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  c4:\t48 89 c7             \tmov    %rax,%rdi\n  c7:\te8 00 00 00 00       \tcallq  cc <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0xcc>\n  cc:\te9 a6 00 00 00       \tjmpq   177 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x177>\n  d1:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  d5:\t48 83 c0 20          \tadd    $0x20,%rax\n  d9:\t48 89 c7             \tmov    %rax,%rdi\n  dc:\te8 00 00 00 00       \tcallq  e1 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0xe1>\n  e1:\t89 c2                \tmov    %eax,%edx\n  e3:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n  e6:\t89 d6                \tmov    %edx,%esi\n  e8:\t89 c7                \tmov    %eax,%edi\n  ea:\te8 00 00 00 00       \tcallq  ef <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0xef>\n  ef:\t83 f0 01             \txor    $0x1,%eax\n  f2:\t84 c0                \ttest   %al,%al\n  f4:\t74 15                \tje     10b <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x10b>\n  f6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  fa:\t48 83 c0 20          \tadd    $0x20,%rax\n  fe:\t48 89 c7             \tmov    %rax,%rdi\n 101:\te8 00 00 00 00       \tcallq  106 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x106>\n 106:\tff c8                \tdec    %eax\n 108:\t89 45 d0             \tmov    %eax,-0x30(%rbp)\n 10b:\t48 8d 45 e8          \tlea    -0x18(%rbp),%rax\n 10f:\t48 89 c7             \tmov    %rax,%rdi\n 112:\te8 00 00 00 00       \tcallq  117 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x117>\n 117:\tbf 18 00 00 00       \tmov    $0x18,%edi\n 11c:\te8 00 00 00 00       \tcallq  121 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x121>\n 121:\t48 89 c3             \tmov    %rax,%rbx\n 124:\t8b 4d d0             \tmov    -0x30(%rbp),%ecx\n 127:\t8b 55 d4             \tmov    -0x2c(%rbp),%edx\n 12a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 12e:\t48 89 c6             \tmov    %rax,%rsi\n 131:\t48 89 df             \tmov    %rbx,%rdi\n 134:\te8 00 00 00 00       \tcallq  139 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x139>\n 139:\t48 8d 45 e8          \tlea    -0x18(%rbp),%rax\n 13d:\t48 8b 4d c8          \tmov    -0x38(%rbp),%rcx\n 141:\t48 89 c2             \tmov    %rax,%rdx\n 144:\t48 89 de             \tmov    %rbx,%rsi\n 147:\t48 89 cf             \tmov    %rcx,%rdi\n 14a:\te8 00 00 00 00       \tcallq  14f <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x14f>\n 14f:\t48 8d 45 e8          \tlea    -0x18(%rbp),%rax\n 153:\t48 89 c7             \tmov    %rax,%rdi\n 156:\te8 00 00 00 00       \tcallq  15b <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x15b>\n 15b:\teb 1a                \tjmp    177 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x177>\n 15d:\t48 89 c3             \tmov    %rax,%rbx\n 160:\t48 8d 45 e8          \tlea    -0x18(%rbp),%rax\n 164:\t48 89 c7             \tmov    %rax,%rdi\n 167:\te8 00 00 00 00       \tcallq  16c <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x16c>\n 16c:\t48 89 d8             \tmov    %rbx,%rax\n 16f:\t48 89 c7             \tmov    %rax,%rdi\n 172:\te8 00 00 00 00       \tcallq  177 <_ZN4juce9ValueTree12SharedObject9moveChildEiiPNS_11UndoManagerE+0x177>\n 177:\t90                   \tnop\n 178:\t48 83 c4 38          \tadd    $0x38,%rsp\n 17c:\t5b                   \tpop    %rbx\n 17d:\t5d                   \tpop    %rbp\n 17e:\tc3                   \tretq   ", "code_s": "void __fastcall juce ValueTree SharedObject\nmoveChild(juce ValueTree SharedObject *this, unsigned int a2, unsigned int a3,\n          juce UndoManager *a4) {\n  int v4;\n  int v5;\n  int v6;\n  int v8;\n  juce ValueTree SharedObject MoveChildAction *v9;\n  char <span class=\"supfact\">v12</span>[Number];\n  v4 = juce ReferenceCountedArray<juce ValueTree SharedObject,\n                                  juce DummyCriticalSection>\n      size((char *)this + Number);\n  if (!juce isPositiveAndBelow<int>(a2, v4, v4)) {\n    juce logAssertion((juce *)String, (const char *)&loc_157 + Number, v5);\n    if ((unsigned __int8)juce juce_isRunningUnderDebugger((juce *)String))\n      kill(Number, Number);\n  }\n  if (a2 != a3) {\n    v6 = juce ReferenceCountedArray<juce ValueTree SharedObject,\n                                    juce DummyCriticalSection>\n        size((char *)this + Number);\n    if (juce isPositiveAndBelow<int>(a2, v6, v6)) {\n      if (a4) {\n        v8 = juce ReferenceCountedArray<juce ValueTree SharedObject,\n                                        juce DummyCriticalSection>\n            size((char *)this + Number);\n        if (!juce isPositiveAndBelow<int>(a3, v8, v8))\n          a3 = juce ReferenceCountedArray<juce ValueTree SharedObject,\n                                          juce DummyCriticalSection>\n                   size((char *)this + Number) - Number;\n        juce String String((juce String *)<span class=\"supfact\">v12</span>);\n        v9 =\n            (juce ValueTree SharedObject MoveChildAction *)operator new(Number);\n        juce ValueTree SharedObject MoveChildAction MoveChildAction(v9, this,\n                                                                    a2, a3);\n        juce UndoManager perform(a4, v9,\n                                 (const juce String *)<span class=\"supfact\">v12</span>);\n        juce String ~String((juce String *)<span class=\"supfact\">v12</span>);\n      } else {\n        juce ReferenceCountedArray<juce ValueTree SharedObject,\n                                   juce DummyCriticalSection>\n            move((char *)this + Number, a2, a3);\n        juce ValueTree SharedObject sendChildOrderChangedMessage(this);\n      }\n    }\n  }\n}", "code_t": "void __cdecl juce ValueTree SharedObject\nmoveChild(juce ValueTree SharedObject *const this, int currentIndex,\n          int newIndex, juce UndoManager *undoManager) {\n  int v4;\n  int v5;\n  int v6;\n  int v8;\n  juce ValueTree SharedObject MoveChildAction *v9;\n  juce String <span class=\"supfact\">actionName</span>;\n  v4 = juce ReferenceCountedArray<juce ValueTree SharedObject,\n                                  juce DummyCriticalSection>\n      size(&this->children);\n  if (!juce isPositiveAndBelow<int>(currentIndex, v4)) {\n    juce logAssertion((juce *)String, (const char *)&loc_157 + Number, v5);\n    if ((unsigned __int8)juce juce_isRunningUnderDebugger((juce *)String))\n      kill(Number, Number);\n  }\n  if (currentIndex != newIndex) {\n    v6 = juce ReferenceCountedArray<juce ValueTree SharedObject,\n                                    juce DummyCriticalSection>\n        size(&this->children);\n    if (juce isPositiveAndBelow<int>(currentIndex, v6)) {\n      if (undoManager) {\n        v8 = juce ReferenceCountedArray<juce ValueTree SharedObject,\n                                        juce DummyCriticalSection>\n            size(&this->children);\n        if (!juce isPositiveAndBelow<int>(newIndex, v8))\n          newIndex = juce ReferenceCountedArray<juce ValueTree SharedObject,\n                                                juce DummyCriticalSection>\n                         size(&this->children) - Number;\n        juce String String(&<span class=\"supfact\">actionName</span>);\n        v9 =\n            (juce ValueTree SharedObject MoveChildAction *)operator new(Number);\n        juce ValueTree SharedObject MoveChildAction MoveChildAction(\n            v9, this, currentIndex, newIndex);\n        juce UndoManager perform(undoManager, v9, &<span class=\"supfact\">actionName</span>);\n        juce String ~String(&<span class=\"supfact\">actionName</span>);\n      } else {\n        juce ReferenceCountedArray<juce ValueTree SharedObject,\n                                   juce DummyCriticalSection>\n            move(&this->children, currentIndex, newIndex);\n        juce ValueTree SharedObject sendChildOrderChangedMessage(this);\n      }\n    }\n  }\n}", "var": [{"name": "v12", "type": "struct juce::String { juce::String::CharPointerType text; }", "ref_name": "actionName", "ref_type": "struct juce::String { juce::String::CharPointerType text; }"}], "body_in_train": false}, {"repo_owner": "XanClic", "repo_name": "qemu", "path": "XanClic/qemu/3da554e7be727d06ab7f4e2330fe40c06e49dc1c481fc3ec5a772104aacc182a", "path_in_repo": "XanClic/qemu//hw/scsi/megasas.o", "objdump": "000000000000151a <_nocheck__trace_megasas_handle_scsi>:\n    151a:\t55                   \tpush   %rbp\n    151b:\t48 89 e5             \tmov    %rsp,%rbp\n    151e:\t41 54                \tpush   %r12\n    1520:\t53                   \tpush   %rbx\n    1521:\t48 83 ec 50          \tsub    $0x50,%rsp\n    1525:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    1529:\t89 75 c4             \tmov    %esi,-0x3c(%rbp)\n    152c:\t89 55 c0             \tmov    %edx,-0x40(%rbp)\n    152f:\t89 4d bc             \tmov    %ecx,-0x44(%rbp)\n    1532:\t4c 89 45 b0          \tmov    %r8,-0x50(%rbp)\n    1536:\t4c 89 4d a8          \tmov    %r9,-0x58(%rbp)\n    153a:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    1541:\t00 00 \n    1543:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    1547:\t31 c0                \txor    %eax,%eax\n    1549:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 154f <_nocheck__trace_megasas_handle_scsi+0x35>\n    154f:\t85 c0                \ttest   %eax,%eax\n    1551:\t0f 95 c0             \tsetne  %al\n    1554:\t0f b6 c0             \tmovzbl %al,%eax\n    1557:\t48 85 c0             \ttest   %rax,%rax\n    155a:\t74 76                \tje     15d2 <_nocheck__trace_megasas_handle_scsi+0xb8>\n    155c:\t0f b7 05 00 00 00 00 \tmovzwl 0x0(%rip),%eax        # 1563 <_nocheck__trace_megasas_handle_scsi+0x49>\n    1563:\t66 85 c0             \ttest   %ax,%ax\n    1566:\t74 6a                \tje     15d2 <_nocheck__trace_megasas_handle_scsi+0xb8>\n    1568:\tbf 00 80 00 00       \tmov    $0x8000,%edi\n    156d:\te8 bb f2 ff ff       \tcallq  82d <qemu_loglevel_mask>\n    1572:\t84 c0                \ttest   %al,%al\n    1574:\t74 5c                \tje     15d2 <_nocheck__trace_megasas_handle_scsi+0xb8>\n    1576:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    157a:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    157f:\t48 89 c7             \tmov    %rax,%rdi\n    1582:\te8 00 00 00 00       \tcallq  1587 <_nocheck__trace_megasas_handle_scsi+0x6d>\n    1587:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    158b:\t49 89 c4             \tmov    %rax,%r12\n    158e:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    1592:\t48 89 c3             \tmov    %rax,%rbx\n    1595:\te8 00 00 00 00       \tcallq  159a <_nocheck__trace_megasas_handle_scsi+0x80>\n    159a:\t89 c6                \tmov    %eax,%esi\n    159c:\t8b 4d c4             \tmov    -0x3c(%rbp),%ecx\n    159f:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    15a3:\tff 75 a8             \tpushq  -0x58(%rbp)\n    15a6:\tff 75 b0             \tpushq  -0x50(%rbp)\n    15a9:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    15ac:\t50                   \tpush   %rax\n    15ad:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    15b0:\t50                   \tpush   %rax\n    15b1:\t41 89 c9             \tmov    %ecx,%r9d\n    15b4:\t49 89 d0             \tmov    %rdx,%r8\n    15b7:\t4c 89 e1             \tmov    %r12,%rcx\n    15ba:\t48 89 da             \tmov    %rbx,%rdx\n    15bd:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 15c4 <_nocheck__trace_megasas_handle_scsi+0xaa>\n    15c4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    15c9:\te8 00 00 00 00       \tcallq  15ce <_nocheck__trace_megasas_handle_scsi+0xb4>\n    15ce:\t48 83 c4 20          \tadd    $0x20,%rsp\n    15d2:\t90                   \tnop\n    15d3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    15d7:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    15de:\t00 00 \n    15e0:\t74 05                \tje     15e7 <_nocheck__trace_megasas_handle_scsi+0xcd>\n    15e2:\te8 00 00 00 00       \tcallq  15e7 <_nocheck__trace_megasas_handle_scsi+0xcd>\n    15e7:\t48 8d 65 f0          \tlea    -0x10(%rbp),%rsp\n    15eb:\t5b                   \tpop    %rbx\n    15ec:\t41 5c                \tpop    %r12\n    15ee:\t5d                   \tpop    %rbp\n    15ef:\tc3                   \tretq   ", "code_s": "unsigned __int64 __fastcall nocheck__trace_megasas_handle_scsi(\n    const char *a1, unsigned int a2, unsigned int a3, unsigned int a4,\n    const void *a5, __int64 a6) {\n  __suseconds_t v6;\n  __time_t v7;\n  unsigned int v8;\n  struct timeval <span class=\"supfact\">tv</span>;\n  unsigned __int64 v15;\n  v15 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_HANDLE_SCSI_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">tv</span>, Number L);\n    v6 = <span class=\"supfact\">tv</span>.tv_usec;\n    v7 = <span class=\"supfact\">tv</span>.tv_sec;\n    v8 = qemu_get_thread_id();\n    qemu_log(String, v8, v7, v6, a1, a2, a3, a4, a5, a6);\n  }\n  return __readfsqword(Number) ^ v15;\n}", "code_t": "void __cdecl nocheck__trace_megasas_handle_scsi(const char *frame, int bus,\n                                                int dev, int lun, void *sdev,\n                                                unsigned __int64 size) {\n  __suseconds_t v6;\n  __time_t v7;\n  unsigned int v8;\n  timeval <span class=\"supfact\">_now</span>;\n  unsigned __int64 v14;\n  v14 = __readfsqword(Number);\n  if (trace_events_enabled_count && TRACE_MEGASAS_HANDLE_SCSI_DSTATE &&\n      qemu_loglevel_mask(Number)) {\n    gettimeofday(&<span class=\"supfact\">_now</span>, Number L);\n    v6 = <span class=\"supfact\">_now</span>.tv_usec;\n    v7 = <span class=\"supfact\">_now</span>.tv_sec;\n    v8 = qemu_get_thread_id();\n    qemu_log(String, v8, v7, v6, frame, (unsigned int)bus, (unsigned int)dev,\n             (unsigned int)lun, sdev, size);\n  }\n}", "var": [{"name": "tv", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "ref_name": "_now", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}]