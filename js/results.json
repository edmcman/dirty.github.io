[{"repo_owner": "khalebios", "repo_name": "LinuxKernelKhalebios", "path": "khalebios/LinuxKernelKhalebios/f0de4b53a2a754b9a9a10cb22ccc00fa4df54fd7f49077a6442300eeb8033391", "path_in_repo": "khalebios/LinuxKernelKhalebios/linux-4.4.2/tools/testing/selftests/ipc/msgque_test", "objdump": "", "code_s": "ssize_t write(int __fd, void *__buf, size_t __n) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_write_00404030)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "ssize_t write(int __fd, void *__buf, size_t __n) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_write_00404030)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "ssize_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "ssize_t"}], "body_in_train": true}, {"repo_owner": "kentalabur", "repo_name": "egs", "path": "kentalabur/egs/6f4018511ead2a9304dcc05885393cf530d43bc72f7ee99cb06d5cfcf21c2f73", "path_in_repo": "kentalabur/egs/ps_6/network7", "objdump": "", "code_s": "ssize_t sendto(int __fd, void *__buf, size_t __n, int __flags, sockaddr *__addr,\n               socklen_t __addr_len) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_sendto_004160c8)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "ssize_t sendto(int __fd, void *__buf, size_t __n, int __flags, sockaddr *__addr,\n               socklen_t __addr_len) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_sendto_004160c8)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "ssize_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "ssize_t"}], "body_in_train": true}, {"repo_owner": "dandalf", "repo_name": "task-spooler", "path": "dandalf/task-spooler/2043462d4775ae0c619859f30bd74f02976fd968fae96bd8b3befad0c8d1e9ee", "path_in_repo": "dandalf/task-spooler//ts", "objdump": "", "code_s": "int connect(int __fd, sockaddr *__addr, socklen_t __len) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_connect_00411210)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int connect(int __fd, sockaddr *__addr, socklen_t __len) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_connect_00411210)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "barajas", "repo_name": "Intel-GLTP", "path": "barajas/Intel-GLTP/40399678d9260edffc9f436ed017dcd3ed8974612ac1f4f4caacc66493af80d9", "path_in_repo": "barajas/Intel-GLTP/ltp-full-20110228/testcases/open_posix_testsuite/conformance/interfaces/sigaddset/4-core", "objdump": "", "code_s": "int sigemptyset(sigset_t *__set) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_sigemptyset_00404030)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int sigemptyset(sigset_t *__set) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_sigemptyset_00404030)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "gurvindersingh", "repo_name": "sipade", "path": "gurvindersingh/sipade/6f8315e6389e7d15f5e952fd5a30babf05ebb9a1580edc28b7a0466acb83d5b4", "path_in_repo": "gurvindersingh/sipade/src/sipade", "objdump": "", "code_s": "time_t mktime(tm *__tp) {\n  time_t <span class=\"supfact\">tVar1</span>;\n  <span class=\"supfact\">tVar1</span> = (*(code *)PTR_mktime_0040c0a8)();\n  return <span class=\"supfact\">tVar1</span>;\n}", "code_t": "time_t mktime(tm *__tp) {\n  time_t <span class=\"supfact\">tVar1</span>;\n  <span class=\"supfact\">tVar1</span> = (*(code *)PTR_mktime_0040c0a8)();\n  return <span class=\"supfact\">tVar1</span>;\n}", "var": [{"name": "tVar1", "type": "time_t", "pred_name": "tVar1", "ref_name": "tVar1", "ref_type": "time_t"}], "body_in_train": false}, {"repo_owner": "davidlt", "repo_name": "openssl-fedora", "path": "davidlt/openssl-fedora/0db47cd308e66842bdf2cfa66432793fab7061279c35c926c31cf937dfc9fa6f", "path_in_repo": "davidlt/openssl-fedora/test/jpaketest", "objdump": "0000000000406376 <ERR_peek_last_error_line_data>:\n  406376:\t55                   \tpush   %rbp\n  406377:\t48 89 e5             \tmov    %rsp,%rbp\n  40637a:\t48 83 ec 20          \tsub    $0x20,%rsp\n  40637e:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  406382:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n  406386:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n  40638a:\t48 89 4d e0          \tmov    %rcx,-0x20(%rbp)\n  40638e:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n  406392:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n  406396:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n  40639a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40639e:\t49 89 f1             \tmov    %rsi,%r9\n  4063a1:\t49 89 c8             \tmov    %rcx,%r8\n  4063a4:\t48 89 d1             \tmov    %rdx,%rcx\n  4063a7:\t48 89 c2             \tmov    %rax,%rdx\n  4063aa:\tbe 01 00 00 00       \tmov    $0x1,%esi\n  4063af:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  4063b4:\te8 02 00 00 00       \tcall   4063bb <get_error_values>\n  4063b9:\tc9                   \tleave  \n  4063ba:\tc3                   \tret    ", "code_s": "ulong ERR_peek_last_error_line_data(char **<span class=\"supfact\">file</span>,\n                                    int *<span class=\"supfact\">line</span>,\n                                    char **<span class=\"supfact\">data</span>,\n                                    int *<span class=\"supfact\">flags</span>) {\n  ulong <span class=\"supfact\">uVar1</span>;\n  <span class=\"supfact\">uVar1</span> =\n      FUN_004063bb(Number, Number, <span class=\"supfact\">file</span>, <span class=\"supfact\">line</span>,\n                   <span class=\"supfact\">data</span>, <span class=\"supfact\">flags</span>);\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "ulong ERR_peek_last_error_line_data(char **<span class=\"supfact\">file</span>,\n                                    int *<span class=\"supfact\">line</span>,\n                                    char **<span class=\"supfact\">data</span>,\n                                    int *<span class=\"supfact\">flags</span>) {\n  ulong <span class=\"supfact\">uVar1</span>;\n  int *<span class=\"supfact\">flags</span> - local;\n  char **<span class=\"supfact\">data</span> - local;\n  int *<span class=\"supfact\">line</span> - local;\n  char **<span class=\"supfact\">file</span> - local;\n  <span class=\"supfact\">uVar1</span> = get_error_values(\n      Number, Number, <span class=\"supfact\">file</span>, <span class=\"supfact\">line</span>,\n      <span class=\"supfact\">data</span>, <span class=\"supfact\">flags</span>);\n  return <span class=\"supfact\">uVar1</span>;\n}", "var": [{"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "uVar1", "ref_type": "ulong"}, {"name": "file", "type": "__unk__", "pred_name": "ts", "ref_name": "file", "ref_type": "char * * *"}, {"name": "line", "type": "disappear", "pred_name": "", "ref_name": "line", "ref_type": "int * *"}, {"name": "data", "type": "disappear", "pred_name": "", "ref_name": "data", "ref_type": "char * * *"}, {"name": "flags", "type": "disappear", "pred_name": "", "ref_name": "flags", "ref_type": "int * *"}], "body_in_train": false}, {"repo_owner": "blue-cloud", "repo_name": "freebsd", "path": "blue-cloud/freebsd/10fb4b38c0bc0a87c8709ababa755c5577971f8fdc69e60f5ed0f266424d5320", "path_in_repo": "blue-cloud/freebsd/games/bcd/bcd", "objdump": "", "code_s": "int putchar(int __c) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_putchar_00404018)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int putchar(int __c) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_putchar_00404018)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "alpheios-project", "repo_name": "morpheus", "path": "alpheios-project/morpheus/c70274e50ee6429f73eb5d6a916f82af8ccd6c9ca824bf6be09e2c975723205c", "path_in_repo": "alpheios-project/morpheus/src/gkends/indendtables", "objdump": "", "code_s": "char *strchr(char *__s, int __c) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strchr_00418068)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *strchr(char *__s, int __c) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strchr_00418068)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "barajas", "repo_name": "Intel-GLTP", "path": "barajas/Intel-GLTP/318a066df14554fa4106aa80ea2980e1600c589550a8c59185431685742ef503", "path_in_repo": "barajas/Intel-GLTP/ltp-full-20110228/testcases/open_posix_testsuite/conformance/interfaces/mmap/11-5.run-test", "objdump": "", "code_s": "__pid_t wait(void *__stat_loc) {\n  __pid_t <span class=\"supfact\">_Var1</span>;\n  <span class=\"supfact\">_Var1</span> = (*(code *)PTR_wait_00404088)();\n  return <span class=\"supfact\">_Var1</span>;\n}", "code_t": "__pid_t wait(void *__stat_loc) {\n  __pid_t <span class=\"supfact\">_Var1</span>;\n  <span class=\"supfact\">_Var1</span> = (*(code *)PTR_wait_00404088)();\n  return <span class=\"supfact\">_Var1</span>;\n}", "var": [{"name": "_Var1", "type": "__pid_t", "pred_name": "_Var1", "ref_name": "_Var1", "ref_type": "__pid_t"}], "body_in_train": true}, {"repo_owner": "camargodev", "repo_name": "compilers", "path": "camargodev/compilers/ede81eec97f7cefab827bd5ebd8d3f3bcd6d039cb4f012f86bf63ec98e3ec416", "path_in_repo": "camargodev/compilers/part-1/etapa1", "objdump": "", "code_s": "void *realloc(void *__ptr, size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_realloc_00408078)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *realloc(void *__ptr, size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_realloc_00408078)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": true}, {"repo_owner": "leemgs", "repo_name": "notrace32", "path": "leemgs/notrace32/960d5c4d0e67442536ada4df1af1b88ced3cbd080e82b1a14a08295a822d820d", "path_in_repo": "leemgs/notrace32/source/nt32-kernel-goldfish-2629/scripts/kconfig/conf", "objdump": "", "code_s": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_00419180)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_00419180)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": true}, {"repo_owner": "anhquang", "repo_name": "contiki", "path": "anhquang/contiki/224e918571b88c4578ffb90fe2ee078b8284a196d5df2b5138c4d6d3926b1261", "path_in_repo": "anhquang/contiki/examples/rime/example-runicast.native", "objdump": "", "code_s": "void *memset(void *__s, int __c, size_t __n) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_memset_00411040)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *memset(void *__s, int __c, size_t __n) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_memset_00411040)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": true}, {"repo_owner": "ymkjp", "repo_name": "http_server", "path": "ymkjp/http_server/cb08310d91a272bcee48de462ec9bc407e331726089451c6f291b2eea01606b7", "path_in_repo": "ymkjp/http_server/LinuxProgramming-samples/memmon", "objdump": "", "code_s": "size_t fwrite(void *__ptr, size_t __size, size_t __n, FILE *__s) {\n  size_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_fwrite_00404058)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "size_t fwrite(void *__ptr, size_t __size, size_t __n, FILE *__s) {\n  size_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_fwrite_00404058)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "size_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "size_t"}], "body_in_train": true}, {"repo_owner": "dcasella", "repo_name": "carrillo-lipman", "path": "dcasella/carrillo-lipman/d85add456ef41cab756659bbccad590255b7db06d24df3d21b186a51254429c0", "path_in_repo": "dcasella/carrillo-lipman/seq-align/bin/smith_waterman", "objdump": "", "code_s": "void *calloc(size_t __nmemb, size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_calloc_004160e8)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *calloc(size_t __nmemb, size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_calloc_004160e8)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": true}, {"repo_owner": "m4rk", "repo_name": "MT9T001-linux-driver", "path": "m4rk/MT9T001-linux-driver/097f11703daa44ad433d1a4f0f4c26824e7deebc923ca554e6b646c5c1f80d90", "path_in_repo": "m4rk/MT9T001-linux-driver/snapgear-2.6-p42/user/ncurses/ncurses-5.6/test/demo_altkeys", "objdump": "", "code_s": "speed_t cfgetospeed(termios *__termios_p) {\n  speed_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_cfgetospeed_004461b0)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "speed_t cfgetospeed(termios *__termios_p) {\n  speed_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_cfgetospeed_004461b0)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "speed_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "speed_t"}], "body_in_train": false}, {"repo_owner": "Jinholy", "repo_name": "advSysProject", "path": "Jinholy/advSysProject/874da891bdb3ffdb716ad677234fa86fe95ec722ec2cd9a55edbc8cf6e29d33e", "path_in_repo": "Jinholy/advSysProject/curl-7.64.1/tests/libtest/.libs/lib505", "objdump": "", "code_s": "char *strerror(int __errnum) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*_DAT_004040a0)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *strerror(int __errnum) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*_DAT_004040a0)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": true}, {"repo_owner": "samikshan", "repo_name": "spartakus", "path": "samikshan/spartakus/2a404a127441ce3e3de1085fb8b4bad458ff4bde773f8fa8ac4b082b70551cb5", "path_in_repo": "samikshan/spartakus//compile", "objdump": "", "code_s": "size_t strftime(char *__s, size_t __maxsize, char *__format, tm *__tp) {\n  size_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_strftime_00442130)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "size_t strftime(char *__s, size_t __maxsize, char *__format, tm *__tp) {\n  size_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_strftime_00442130)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "size_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "size_t"}], "body_in_train": false}, {"repo_owner": "erdincay", "repo_name": "pjsip", "path": "erdincay/pjsip/7b5d6182a9a3c2784ecc4dc7f19fee35ae46c4e1b63314494954336d85ee70c0", "path_in_repo": "erdincay/pjsip//pjnath/bin/pjturn-client-x86_64-unknown-linux-gnu", "objdump": "", "code_s": "void *memcpy(void *__dest, void *__src, size_t __n) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_memcpy_00447178)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *memcpy(void *__dest, void *__src, size_t __n) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_memcpy_00447178)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "caiweiqing1990", "repo_name": "barrier_breaker", "path": "caiweiqing1990/barrier_breaker/b0607dd5f7970eead40c1e3dab56436f8dca15771e5129a805432b040d401c3f", "path_in_repo": "caiweiqing1990/barrier_breaker/package/satfi/srcback/httpdown", "objdump": "", "code_s": "int memcmp(void *__s1, void *__s2, size_t __n) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_memcmp_004050d8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int memcmp(void *__s1, void *__s2, size_t __n) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_memcmp_004050d8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "sashatim125", "repo_name": "Experis-H50", "path": "sashatim125/Experis-H50/0cef6d8c1747a0798ec5f60b0d793b9e6475936951498a11207888b5a6195fdb", "path_in_repo": "sashatim125/Experis-H50/IPC/MT/pingpong/pingpong", "objdump": "", "code_s": "int pthread_create(pthread_t *__newthread, pthread_attr_t *__attr,\n                   __start_routine *__start_routine, void *__arg) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_create_00405020)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int pthread_create(pthread_t *__newthread, pthread_attr_t *__attr,\n                   __start_routine *__start_routine, void *__arg) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_create_00405020)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "anhquang", "repo_name": "contiki", "path": "anhquang/contiki/224e918571b88c4578ffb90fe2ee078b8284a196d5df2b5138c4d6d3926b1261", "path_in_repo": "anhquang/contiki/examples/rime/example-runicast.native", "objdump": "0000000000406fd8 <broadcast_open>:\n  406fd8:\t55                   \tpush   %rbp\n  406fd9:\t48 89 e5             \tmov    %rsp,%rbp\n  406fdc:\t48 83 ec 20          \tsub    $0x20,%rsp\n  406fe0:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  406fe4:\t89 f0                \tmov    %esi,%eax\n  406fe6:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n  406fea:\t66 89 45 f4          \tmov    %ax,-0xc(%rbp)\n  406fee:\t0f b7 4d f4          \tmovzwl -0xc(%rbp),%ecx\n  406ff2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  406ff6:\tba 40 c3 40 00       \tmov    $0x40c340,%edx\n  406ffb:\t89 ce                \tmov    %ecx,%esi\n  406ffd:\t48 89 c7             \tmov    %rax,%rdi\n  407000:\te8 12 03 00 00       \tcall   407317 <abc_open>\n  407005:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  407009:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  40700d:\t48 89 50 28          \tmov    %rdx,0x28(%rax)\n  407011:\t0f b7 45 f4          \tmovzwl -0xc(%rbp),%eax\n  407015:\tbe 30 c3 40 00       \tmov    $0x40c330,%esi\n  40701a:\t89 c7                \tmov    %eax,%edi\n  40701c:\te8 7c da ff ff       \tcall   404a9d <channel_set_attributes>\n  407021:\t90                   \tnop\n  407022:\tc9                   \tleave  \n  407023:\tc3                   \tret    ", "code_s": "void broadcast_open(long <span class=\"supfact\">param_1</span>,\n                    undefined2 <span class=\"supfact\">param_2</span>,\n                    undefined8 <span class=\"supfact\">param_3</span>) {\n  abc_open(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>, &amp;\n           PTR_FUN_0040c340);\n  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = <span class=\"supfact\">param_3</span>;\n  channel_set_attributes(<span class=\"supfact\">param_2</span>, &amp; DAT_0040c330);\n  return;\n}", "code_t": "void broadcast_open(broadcast_conn *<span class=\"supfact\">c</span>,\n                    uint16_t <span class=\"supfact\">channel</span>,\n                    broadcast_callbacks *<span class=\"supfact\">u</span>) {\n  broadcast_callbacks *<span class=\"supfact\">u</span> - local;\n  uint16_t <span class=\"supfact\">channel</span> - local;\n  broadcast_conn *<span class=\"supfact\">c</span> - local;\n  abc_open(&amp; <span class=\"supfact\">c</span> - &gt;\n           <span class=\"supfact\">c</span>, <span class=\"supfact\">channel</span>, &amp; broadcast);\n  <span class=\"supfact\">c</span> - &gt;\n  <span class=\"supfact\">u</span> = <span class=\"supfact\">u</span>;\n  channel_set_attributes(<span class=\"supfact\">channel</span>, attributes);\n  return;\n}", "var": [{"name": "param_1", "type": "broadcast_conn * *", "pred_name": "c", "ref_name": "c", "ref_type": "broadcast_conn * *"}, {"name": "param_2", "type": "uint16_t", "pred_name": "channel", "ref_name": "channel", "ref_type": "uint16_t"}, {"name": "param_3", "type": "broadcast_callbacks * *", "pred_name": "u", "ref_name": "u", "ref_type": "broadcast_callbacks * *"}], "body_in_train": false}, {"repo_owner": "risenanti", "repo_name": "NewSevSeg", "path": "risenanti/NewSevSeg/905c906aeff8b29e9dfc9f974cb79a66109455bf8e17b385c7c7b056fc76fc84", "path_in_repo": "risenanti/NewSevSeg/socfpga_kern/tools/testing/selftests/mqueue/mq_perf_tests", "objdump": "", "code_s": "int mq_getattr(mqd_t __mqdes, mq_attr *__mqstat) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_mq_getattr_00408058)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int mq_getattr(mqd_t __mqdes, mq_attr *__mqstat) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_mq_getattr_00408058)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "qc2105", "repo_name": "Computer-Systems-A-Programmer-s-Perspective", "path": "qc2105/Computer-Systems-A-Programmer-s-Perspective/1244de64ec0b872bb9e6185a3bd026991176c6cf5c1ce65c8c715b899adedbe7", "path_in_repo": "qc2105/Computer-Systems-A-Programmer-s-Perspective/conc/echoservert_cnt", "objdump": "", "code_s": "void *calloc(size_t __nmemb, size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_calloc_00408110)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *calloc(size_t __nmemb, size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_calloc_00408110)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": true}, {"repo_owner": "xyfabc", "repo_name": "codes", "path": "xyfabc/codes/abfa9f9431d2bc4862a4babf83956c5de2ac7625ef95491f74023806bfbfd9ec", "path_in_repo": "xyfabc/codes/scsi_vender_demo/linux-2.6.31.3/drivers/mtd/mtd-utils/tests/fs-tests/simple/ftrunc", "objdump": "", "code_s": "int closedir(DIR *__dirp) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_closedir_004090e8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int closedir(DIR *__dirp) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_closedir_004090e8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "cmotc", "repo_name": "fireaxe-kernel-grsec", "path": "cmotc/fireaxe-kernel-grsec/1800b4eab2a821d87bb6f95c0d56c808dac99968e9367df7e9c8f13437603d23", "path_in_repo": "cmotc/fireaxe-kernel-grsec/tools/power/cpupower/bench/cpufreq-bench", "objdump": "", "code_s": "time_t time(time_t *__timer) {\n  time_t <span class=\"supfact\">tVar1</span>;\n  <span class=\"supfact\">tVar1</span> = (*(code *)PTR_time_004060c0)();\n  return <span class=\"supfact\">tVar1</span>;\n}", "code_t": "time_t time(time_t *__timer) {\n  time_t <span class=\"supfact\">tVar1</span>;\n  <span class=\"supfact\">tVar1</span> = (*(code *)PTR_time_004060c0)();\n  return <span class=\"supfact\">tVar1</span>;\n}", "var": [{"name": "tVar1", "type": "time_t", "pred_name": "tVar1", "ref_name": "tVar1", "ref_type": "time_t"}], "body_in_train": true}, {"repo_owner": "Couragewang", "repo_name": "htttpd", "path": "Couragewang/htttpd/5ad39fe0d94f0685cf8736c5b67e86869bcf0f7fbd22dacd209a6c55687f923a", "path_in_repo": "Couragewang/htttpd//demo_client", "objdump": "", "code_s": "int puts(char *__s) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_puts_00404020)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int puts(char *__s) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_puts_00404020)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "b05902085-felixthecat", "repo_name": "CN-final", "path": "b05902085-felixthecat/CN-final/e1898eecb56d6d828ebf853ea128d9cdd18c9c2fd06e2ec84bd868dda86ccdae", "path_in_repo": "b05902085-felixthecat/CN-final//server", "objdump": "", "code_s": "size_t strlen(char *__s) {\n  size_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_strlen_00404030)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "size_t strlen(char *__s) {\n  size_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_strlen_00404030)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "size_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "size_t"}], "body_in_train": true}, {"repo_owner": "TheTypoMaster", "repo_name": "open1", "path": "TheTypoMaster/open1/c9a04eae5e42d9841c57eaaa6d9ff38b1c3b8d4c913935a3edbe734de7ee407f", "path_in_repo": "TheTypoMaster/open1/modules/db_virtual/db_virtual.so", "objdump": "0000000000004bd4 <db_virtual_bind_api>:\n    4bd4:\t55                   \tpush   %rbp\n    4bd5:\t48 89 e5             \tmov    %rsp,%rbp\n    4bd8:\t41 55                \tpush   %r13\n    4bda:\t41 54                \tpush   %r12\n    4bdc:\t53                   \tpush   %rbx\n    4bdd:\t48 83 ec 38          \tsub    $0x38,%rsp\n    4be1:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n    4be5:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n    4be9:\t48 8b 05 50 c3 00 00 \tmov    0xc350(%rip),%rax        # 10f40 <debug>\n    4bf0:\t48 8b 00             \tmov    (%rax),%rax\n    4bf3:\t8b 00                \tmov    (%rax),%eax\n    4bf5:\t83 f8 03             \tcmp    $0x3,%eax\n    4bf8:\t0f 8e 86 00 00 00    \tjle    4c84 <db_virtual_bind_api+0xb0>\n    4bfe:\t48 8b 05 e3 c2 00 00 \tmov    0xc2e3(%rip),%rax        # 10ee8 <log_stderr>\n    4c05:\t8b 00                \tmov    (%rax),%eax\n    4c07:\t85 c0                \ttest   %eax,%eax\n    4c09:\t74 40                \tje     4c4b <db_virtual_bind_api+0x77>\n    4c0b:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    4c0f:\t4c 8b 28             \tmov    (%rax),%r13\n    4c12:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    4c16:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    4c1a:\te8 11 d5 ff ff       \tcall   2130 <dp_my_pid@plt>\n    4c1f:\t89 c3                \tmov    %eax,%ebx\n    4c21:\te8 cf d6 ff ff       \tcall   22f5 <dp_time>\n    4c26:\t4d 89 e9             \tmov    %r13,%r9\n    4c29:\t45 89 e0             \tmov    %r12d,%r8d\n    4c2c:\t48 8d 0d ed 9c 00 00 \tlea    0x9ced(%rip),%rcx        # e920 <__FUNCTION__.8036>\n    4c33:\t89 da                \tmov    %ebx,%edx\n    4c35:\t48 89 c6             \tmov    %rax,%rsi\n    4c38:\t48 8d 3d 51 94 00 00 \tlea    0x9451(%rip),%rdi        # e090 <_fini+0x12cc>\n    4c3f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4c44:\te8 d7 d5 ff ff       \tcall   2220 <dprint@plt>\n    4c49:\teb 39                \tjmp    4c84 <db_virtual_bind_api+0xb0>\n    4c4b:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    4c4f:\t48 8b 08             \tmov    (%rax),%rcx\n    4c52:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    4c56:\t8b 40 08             \tmov    0x8(%rax),%eax\n    4c59:\t48 8b 15 c0 c2 00 00 \tmov    0xc2c0(%rip),%rdx        # 10f20 <log_facility>\n    4c60:\t8b 12                \tmov    (%rdx),%edx\n    4c62:\t89 d7                \tmov    %edx,%edi\n    4c64:\t83 cf 07             \tor     $0x7,%edi\n    4c67:\t49 89 c8             \tmov    %rcx,%r8\n    4c6a:\t89 c1                \tmov    %eax,%ecx\n    4c6c:\t48 8d 15 ad 9c 00 00 \tlea    0x9cad(%rip),%rdx        # e920 <__FUNCTION__.8036>\n    4c73:\t48 8d 35 56 94 00 00 \tlea    0x9456(%rip),%rsi        # e0d0 <_fini+0x130c>\n    4c7a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4c7f:\te8 cc d4 ff ff       \tcall   2150 <syslog@plt>\n    4c84:\t48 8b 05 ad c2 00 00 \tmov    0xc2ad(%rip),%rax        # 10f38 <global@@Base-0x530>\n    4c8b:\t48 8b 00             \tmov    (%rax),%rax\n    4c8e:\t48 85 c0             \ttest   %rax,%rax\n    4c91:\t75 13                \tjne    4ca6 <db_virtual_bind_api+0xd2>\n    4c93:\te8 78 d5 ff ff       \tcall   2210 <virtual_mod_init@plt>\n    4c98:\t85 c0                \ttest   %eax,%eax\n    4c9a:\t74 0a                \tje     4ca6 <db_virtual_bind_api+0xd2>\n    4c9c:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    4ca1:\te9 1e 04 00 00       \tjmp    50c4 <db_virtual_bind_api+0x4f0>\n    4ca6:\t48 83 7d b0 00       \tcmpq   $0x0,-0x50(%rbp)\n    4cab:\t75 0a                \tjne    4cb7 <db_virtual_bind_api+0xe3>\n    4cad:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    4cb2:\te9 0d 04 00 00       \tjmp    50c4 <db_virtual_bind_api+0x4f0>\n    4cb7:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    4cbb:\tba 80 00 00 00       \tmov    $0x80,%edx\n    4cc0:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    4cc5:\t48 89 c7             \tmov    %rax,%rdi\n    4cc8:\te8 e3 d3 ff ff       \tcall   20b0 <memset@plt>\n    4ccd:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    4cd1:\t48 8b 00             \tmov    (%rax),%rax\n    4cd4:\tbe 2f 00 00 00       \tmov    $0x2f,%esi\n    4cd9:\t48 89 c7             \tmov    %rax,%rdi\n    4cdc:\te8 af d3 ff ff       \tcall   2090 <strchr@plt>\n    4ce1:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    4ce5:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    4ce9:\t48 83 c0 02          \tadd    $0x2,%rax\n    4ced:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    4cf1:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n    4cf8:\teb 6b                \tjmp    4d65 <db_virtual_bind_api+0x191>\n    4cfa:\t48 8b 05 37 c2 00 00 \tmov    0xc237(%rip),%rax        # 10f38 <global@@Base-0x530>\n    4d01:\t48 8b 00             \tmov    (%rax),%rax\n    4d04:\t48 8b 08             \tmov    (%rax),%rcx\n    4d07:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    4d0a:\t48 63 d0             \tmovslq %eax,%rdx\n    4d0d:\t48 89 d0             \tmov    %rdx,%rax\n    4d10:\t48 c1 e0 02          \tshl    $0x2,%rax\n    4d14:\t48 01 d0             \tadd    %rdx,%rax\n    4d17:\t48 c1 e0 03          \tshl    $0x3,%rax\n    4d1b:\t48 01 c8             \tadd    %rcx,%rax\n    4d1e:\t8b 40 08             \tmov    0x8(%rax),%eax\n    4d21:\t48 63 f0             \tmovslq %eax,%rsi\n    4d24:\t48 8b 05 0d c2 00 00 \tmov    0xc20d(%rip),%rax        # 10f38 <global@@Base-0x530>\n    4d2b:\t48 8b 00             \tmov    (%rax),%rax\n    4d2e:\t48 8b 08             \tmov    (%rax),%rcx\n    4d31:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    4d34:\t48 63 d0             \tmovslq %eax,%rdx\n    4d37:\t48 89 d0             \tmov    %rdx,%rax\n    4d3a:\t48 c1 e0 02          \tshl    $0x2,%rax\n    4d3e:\t48 01 d0             \tadd    %rdx,%rax\n    4d41:\t48 c1 e0 03          \tshl    $0x3,%rax\n    4d45:\t48 01 c8             \tadd    %rcx,%rax\n    4d48:\t48 8b 08             \tmov    (%rax),%rcx\n    4d4b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    4d4f:\t48 89 f2             \tmov    %rsi,%rdx\n    4d52:\t48 89 ce             \tmov    %rcx,%rsi\n    4d55:\t48 89 c7             \tmov    %rax,%rdi\n    4d58:\te8 f3 d2 ff ff       \tcall   2050 <strncmp@plt>\n    4d5d:\t85 c0                \ttest   %eax,%eax\n    4d5f:\t74 18                \tje     4d79 <db_virtual_bind_api+0x1a5>\n    4d61:\t83 45 dc 01          \taddl   $0x1,-0x24(%rbp)\n    4d65:\t48 8b 05 cc c1 00 00 \tmov    0xc1cc(%rip),%rax        # 10f38 <global@@Base-0x530>\n    4d6c:\t48 8b 00             \tmov    (%rax),%rax\n    4d6f:\t8b 40 08             \tmov    0x8(%rax),%eax\n    4d72:\t39 45 dc             \tcmp    %eax,-0x24(%rbp)\n    4d75:\t7c 83                \tjl     4cfa <db_virtual_bind_api+0x126>\n    4d77:\teb 01                \tjmp    4d7a <db_virtual_bind_api+0x1a6>\n    4d79:\t90                   \tnop\n    4d7a:\t48 8b 05 bf c1 00 00 \tmov    0xc1bf(%rip),%rax        # 10f40 <debug>\n    4d81:\t48 8b 00             \tmov    (%rax),%rax\n    4d84:\t8b 00                \tmov    (%rax),%eax\n    4d86:\t83 f8 03             \tcmp    $0x3,%eax\n    4d89:\t0f 8e 0a 01 00 00    \tjle    4e99 <db_virtual_bind_api+0x2c5>\n    4d8f:\t48 8b 05 52 c1 00 00 \tmov    0xc152(%rip),%rax        # 10ee8 <log_stderr>\n    4d96:\t8b 00                \tmov    (%rax),%eax\n    4d98:\t85 c0                \ttest   %eax,%eax\n    4d9a:\t0f 84 80 00 00 00    \tje     4e20 <db_virtual_bind_api+0x24c>\n    4da0:\t48 8b 05 91 c1 00 00 \tmov    0xc191(%rip),%rax        # 10f38 <global@@Base-0x530>\n    4da7:\t48 8b 00             \tmov    (%rax),%rax\n    4daa:\t48 8b 08             \tmov    (%rax),%rcx\n    4dad:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    4db0:\t48 63 d0             \tmovslq %eax,%rdx\n    4db3:\t48 89 d0             \tmov    %rdx,%rax\n    4db6:\t48 c1 e0 02          \tshl    $0x2,%rax\n    4dba:\t48 01 d0             \tadd    %rdx,%rax\n    4dbd:\t48 c1 e0 03          \tshl    $0x3,%rax\n    4dc1:\t48 01 c8             \tadd    %rcx,%rax\n    4dc4:\t4c 8b 28             \tmov    (%rax),%r13\n    4dc7:\t48 8b 05 6a c1 00 00 \tmov    0xc16a(%rip),%rax        # 10f38 <global@@Base-0x530>\n    4dce:\t48 8b 00             \tmov    (%rax),%rax\n    4dd1:\t48 8b 08             \tmov    (%rax),%rcx\n    4dd4:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    4dd7:\t48 63 d0             \tmovslq %eax,%rdx\n    4dda:\t48 89 d0             \tmov    %rdx,%rax\n    4ddd:\t48 c1 e0 02          \tshl    $0x2,%rax\n    4de1:\t48 01 d0             \tadd    %rdx,%rax\n    4de4:\t48 c1 e0 03          \tshl    $0x3,%rax\n    4de8:\t48 01 c8             \tadd    %rcx,%rax\n    4deb:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    4def:\te8 3c d3 ff ff       \tcall   2130 <dp_my_pid@plt>\n    4df4:\t89 c3                \tmov    %eax,%ebx\n    4df6:\te8 fa d4 ff ff       \tcall   22f5 <dp_time>\n    4dfb:\t4d 89 e9             \tmov    %r13,%r9\n    4dfe:\t45 89 e0             \tmov    %r12d,%r8d\n    4e01:\t48 8d 0d 18 9b 00 00 \tlea    0x9b18(%rip),%rcx        # e920 <__FUNCTION__.8036>\n    4e08:\t89 da                \tmov    %ebx,%edx\n    4e0a:\t48 89 c6             \tmov    %rax,%rsi\n    4e0d:\t48 8d 3d f4 92 00 00 \tlea    0x92f4(%rip),%rdi        # e108 <_fini+0x1344>\n    4e14:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4e19:\te8 02 d4 ff ff       \tcall   2220 <dprint@plt>\n    4e1e:\teb 79                \tjmp    4e99 <db_virtual_bind_api+0x2c5>\n    4e20:\t48 8b 05 11 c1 00 00 \tmov    0xc111(%rip),%rax        # 10f38 <global@@Base-0x530>\n    4e27:\t48 8b 00             \tmov    (%rax),%rax\n    4e2a:\t48 8b 08             \tmov    (%rax),%rcx\n    4e2d:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    4e30:\t48 63 d0             \tmovslq %eax,%rdx\n    4e33:\t48 89 d0             \tmov    %rdx,%rax\n    4e36:\t48 c1 e0 02          \tshl    $0x2,%rax\n    4e3a:\t48 01 d0             \tadd    %rdx,%rax\n    4e3d:\t48 c1 e0 03          \tshl    $0x3,%rax\n    4e41:\t48 01 c8             \tadd    %rcx,%rax\n    4e44:\t48 8b 30             \tmov    (%rax),%rsi\n    4e47:\t48 8b 05 ea c0 00 00 \tmov    0xc0ea(%rip),%rax        # 10f38 <global@@Base-0x530>\n    4e4e:\t48 8b 00             \tmov    (%rax),%rax\n    4e51:\t48 8b 08             \tmov    (%rax),%rcx\n    4e54:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    4e57:\t48 63 d0             \tmovslq %eax,%rdx\n    4e5a:\t48 89 d0             \tmov    %rdx,%rax\n    4e5d:\t48 c1 e0 02          \tshl    $0x2,%rax\n    4e61:\t48 01 d0             \tadd    %rdx,%rax\n    4e64:\t48 c1 e0 03          \tshl    $0x3,%rax\n    4e68:\t48 01 c8             \tadd    %rcx,%rax\n    4e6b:\t8b 40 08             \tmov    0x8(%rax),%eax\n    4e6e:\t48 8b 15 ab c0 00 00 \tmov    0xc0ab(%rip),%rdx        # 10f20 <log_facility>\n    4e75:\t8b 12                \tmov    (%rdx),%edx\n    4e77:\t89 d7                \tmov    %edx,%edi\n    4e79:\t83 cf 07             \tor     $0x7,%edi\n    4e7c:\t49 89 f0             \tmov    %rsi,%r8\n    4e7f:\t89 c1                \tmov    %eax,%ecx\n    4e81:\t48 8d 15 98 9a 00 00 \tlea    0x9a98(%rip),%rdx        # e920 <__FUNCTION__.8036>\n    4e88:\t48 8d 35 b9 92 00 00 \tlea    0x92b9(%rip),%rsi        # e148 <_fini+0x1384>\n    4e8f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4e94:\te8 b7 d2 ff ff       \tcall   2150 <syslog@plt>\n    4e99:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    4e9d:\tc7 00 fb 03 00 00    \tmovl   $0x3fb,(%rax)\n    4ea3:\tc7 45 d8 00 00 00 00 \tmovl   $0x0,-0x28(%rbp)\n    4eaa:\teb 5c                \tjmp    4f08 <db_virtual_bind_api+0x334>\n    4eac:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    4eb0:\t8b 08                \tmov    (%rax),%ecx\n    4eb2:\t48 8b 05 7f c0 00 00 \tmov    0xc07f(%rip),%rax        # 10f38 <global@@Base-0x530>\n    4eb9:\t48 8b 00             \tmov    (%rax),%rax\n    4ebc:\t48 8b 30             \tmov    (%rax),%rsi\n    4ebf:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    4ec2:\t48 63 d0             \tmovslq %eax,%rdx\n    4ec5:\t48 89 d0             \tmov    %rdx,%rax\n    4ec8:\t48 c1 e0 02          \tshl    $0x2,%rax\n    4ecc:\t48 01 d0             \tadd    %rdx,%rax\n    4ecf:\t48 c1 e0 03          \tshl    $0x3,%rax\n    4ed3:\t48 01 f0             \tadd    %rsi,%rax\n    4ed6:\t48 8b 70 18          \tmov    0x18(%rax),%rsi\n    4eda:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    4edd:\t48 63 d0             \tmovslq %eax,%rdx\n    4ee0:\t48 89 d0             \tmov    %rdx,%rax\n    4ee3:\t48 c1 e0 03          \tshl    $0x3,%rax\n    4ee7:\t48 01 d0             \tadd    %rdx,%rax\n    4eea:\t48 01 c0             \tadd    %rax,%rax\n    4eed:\t48 01 d0             \tadd    %rdx,%rax\n    4ef0:\t48 c1 e0 03          \tshl    $0x3,%rax\n    4ef4:\t48 01 f0             \tadd    %rsi,%rax\n    4ef7:\t8b 40 10             \tmov    0x10(%rax),%eax\n    4efa:\t21 c1                \tand    %eax,%ecx\n    4efc:\t89 ca                \tmov    %ecx,%edx\n    4efe:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    4f02:\t89 10                \tmov    %edx,(%rax)\n    4f04:\t83 45 d8 01          \taddl   $0x1,-0x28(%rbp)\n    4f08:\t48 8b 05 29 c0 00 00 \tmov    0xc029(%rip),%rax        # 10f38 <global@@Base-0x530>\n    4f0f:\t48 8b 00             \tmov    (%rax),%rax\n    4f12:\t48 8b 08             \tmov    (%rax),%rcx\n    4f15:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    4f18:\t48 63 d0             \tmovslq %eax,%rdx\n    4f1b:\t48 89 d0             \tmov    %rdx,%rax\n    4f1e:\t48 c1 e0 02          \tshl    $0x2,%rax\n    4f22:\t48 01 d0             \tadd    %rdx,%rax\n    4f25:\t48 c1 e0 03          \tshl    $0x3,%rax\n    4f29:\t48 01 c8             \tadd    %rcx,%rax\n    4f2c:\t8b 40 20             \tmov    0x20(%rax),%eax\n    4f2f:\t39 45 d8             \tcmp    %eax,-0x28(%rbp)\n    4f32:\t0f 8c 74 ff ff ff    \tjl     4eac <db_virtual_bind_api+0x2d8>\n    4f38:\t48 8b 05 f9 bf 00 00 \tmov    0xbff9(%rip),%rax        # 10f38 <global@@Base-0x530>\n    4f3f:\t48 8b 00             \tmov    (%rax),%rax\n    4f42:\t48 8b 08             \tmov    (%rax),%rcx\n    4f45:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    4f48:\t48 63 d0             \tmovslq %eax,%rdx\n    4f4b:\t48 89 d0             \tmov    %rdx,%rax\n    4f4e:\t48 c1 e0 02          \tshl    $0x2,%rax\n    4f52:\t48 01 d0             \tadd    %rdx,%rax\n    4f55:\t48 c1 e0 03          \tshl    $0x3,%rax\n    4f59:\t48 01 c8             \tadd    %rcx,%rax\n    4f5c:\t0f b6 40 10          \tmovzbl 0x10(%rax),%eax\n    4f60:\t84 c0                \ttest   %al,%al\n    4f62:\t75 18                \tjne    4f7c <db_virtual_bind_api+0x3a8>\n    4f64:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    4f68:\t8b 00                \tmov    (%rax),%eax\n    4f6a:\t25 fb 03 00 00       \tand    $0x3fb,%eax\n    4f6f:\t89 c2                \tmov    %eax,%edx\n    4f71:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    4f75:\t89 10                \tmov    %edx,(%rax)\n    4f77:\te9 80 00 00 00       \tjmp    4ffc <db_virtual_bind_api+0x428>\n    4f7c:\t48 8b 05 b5 bf 00 00 \tmov    0xbfb5(%rip),%rax        # 10f38 <global@@Base-0x530>\n    4f83:\t48 8b 00             \tmov    (%rax),%rax\n    4f86:\t48 8b 08             \tmov    (%rax),%rcx\n    4f89:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    4f8c:\t48 63 d0             \tmovslq %eax,%rdx\n    4f8f:\t48 89 d0             \tmov    %rdx,%rax\n    4f92:\t48 c1 e0 02          \tshl    $0x2,%rax\n    4f96:\t48 01 d0             \tadd    %rdx,%rax\n    4f99:\t48 c1 e0 03          \tshl    $0x3,%rax\n    4f9d:\t48 01 c8             \tadd    %rcx,%rax\n    4fa0:\t0f b6 40 10          \tmovzbl 0x10(%rax),%eax\n    4fa4:\t3c 01                \tcmp    $0x1,%al\n    4fa6:\t75 15                \tjne    4fbd <db_virtual_bind_api+0x3e9>\n    4fa8:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    4fac:\t8b 00                \tmov    (%rax),%eax\n    4fae:\t25 fb 03 00 00       \tand    $0x3fb,%eax\n    4fb3:\t89 c2                \tmov    %eax,%edx\n    4fb5:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    4fb9:\t89 10                \tmov    %edx,(%rax)\n    4fbb:\teb 3f                \tjmp    4ffc <db_virtual_bind_api+0x428>\n    4fbd:\t48 8b 05 74 bf 00 00 \tmov    0xbf74(%rip),%rax        # 10f38 <global@@Base-0x530>\n    4fc4:\t48 8b 00             \tmov    (%rax),%rax\n    4fc7:\t48 8b 08             \tmov    (%rax),%rcx\n    4fca:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    4fcd:\t48 63 d0             \tmovslq %eax,%rdx\n    4fd0:\t48 89 d0             \tmov    %rdx,%rax\n    4fd3:\t48 c1 e0 02          \tshl    $0x2,%rax\n    4fd7:\t48 01 d0             \tadd    %rdx,%rax\n    4fda:\t48 c1 e0 03          \tshl    $0x3,%rax\n    4fde:\t48 01 c8             \tadd    %rcx,%rax\n    4fe1:\t0f b6 40 10          \tmovzbl 0x10(%rax),%eax\n    4fe5:\t3c 02                \tcmp    $0x2,%al\n    4fe7:\t75 13                \tjne    4ffc <db_virtual_bind_api+0x428>\n    4fe9:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    4fed:\t8b 00                \tmov    (%rax),%eax\n    4fef:\t25 8b 03 00 00       \tand    $0x38b,%eax\n    4ff4:\t89 c2                \tmov    %eax,%edx\n    4ff6:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    4ffa:\t89 10                \tmov    %edx,(%rax)\n    4ffc:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    5000:\t48 8b 15 89 bf 00 00 \tmov    0xbf89(%rip),%rdx        # 10f90 <db_virtual_use_table@@Base+0x9233>\n    5007:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n    500b:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    500f:\t48 8b 15 c2 bf 00 00 \tmov    0xbfc2(%rip),%rdx        # 10fd8 <db_virtual_init@@Base+0xa48b>\n    5016:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n    501a:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    501e:\t48 8b 15 c3 bf 00 00 \tmov    0xbfc3(%rip),%rdx        # 10fe8 <db_virtual_close@@Base+0x95b5>\n    5025:\t48 89 50 18          \tmov    %rdx,0x18(%rax)\n    5029:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    502d:\t48 8b 15 bc bf 00 00 \tmov    0xbfbc(%rip),%rdx        # 10ff0 <db_virtual_query@@Base+0x85db>\n    5034:\t48 89 50 20          \tmov    %rdx,0x20(%rax)\n    5038:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    503c:\t48 8b 15 e5 be 00 00 \tmov    0xbee5(%rip),%rdx        # 10f28 <db_virtual_fetch_result@@Base+0x7c4f>\n    5043:\t48 89 50 28          \tmov    %rdx,0x28(%rax)\n    5047:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    504b:\t48 8b 15 06 bf 00 00 \tmov    0xbf06(%rip),%rdx        # 10f58 <db_virtual_raw_query@@Base+0x741d>\n    5052:\t48 89 50 30          \tmov    %rdx,0x30(%rax)\n    5056:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    505a:\t48 8b 15 17 bf 00 00 \tmov    0xbf17(%rip),%rdx        # 10f78 <db_virtual_free_result@@Base+0x8dba>\n    5061:\t48 89 50 38          \tmov    %rdx,0x38(%rax)\n    5065:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    5069:\t48 8b 15 10 bf 00 00 \tmov    0xbf10(%rip),%rdx        # 10f80 <db_virtual_insert@@Base+0x6bc3>\n    5070:\t48 89 50 40          \tmov    %rdx,0x40(%rax)\n    5074:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    5078:\t48 8b 15 21 bf 00 00 \tmov    0xbf21(%rip),%rdx        # 10fa0 <db_virtual_delete@@Base+0x64f6>\n    507f:\t48 89 50 48          \tmov    %rdx,0x48(%rax)\n    5083:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    5087:\t48 8b 15 42 bf 00 00 \tmov    0xbf42(%rip),%rdx        # 10fd0 <db_virtual_update@@Base+0x5e43>\n    508e:\t48 89 50 50          \tmov    %rdx,0x50(%rax)\n    5092:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    5096:\t48 8b 15 b3 be 00 00 \tmov    0xbeb3(%rip),%rdx        # 10f50 <db_virtual_replace@@Base+0x56c0>\n    509d:\t48 89 50 58          \tmov    %rdx,0x58(%rax)\n    50a1:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    50a5:\t48 8b 15 44 be 00 00 \tmov    0xbe44(%rip),%rdx        # 10ef0 <db_virtual_last_inserted_id@@Base+0x4f90>\n    50ac:\t48 89 50 60          \tmov    %rdx,0x60(%rax)\n    50b0:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    50b4:\t48 8b 15 f5 be 00 00 \tmov    0xbef5(%rip),%rdx        # 10fb0 <db_virtual_insert_update@@Base+0x48d9>\n    50bb:\t48 89 50 68          \tmov    %rdx,0x68(%rax)\n    50bf:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    50c4:\t48 83 c4 38          \tadd    $0x38,%rsp\n    50c8:\t5b                   \tpop    %rbx\n    50c9:\t41 5c                \tpop    %r12\n    50cb:\t41 5d                \tpop    %r13\n    50cd:\t5d                   \tpop    %rbp\n    50ce:\tc3                   \tret    ", "code_s": "undefined8 db_virtual_bind_api(char **<span class=\"supfact\">param_1</span>,\n                               uint *<span class=\"supfact\">param_2</span>) {\n  undefined4 uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined8 uVar4;\n  char *pcVar5;\n  undefined8 uVar6;\n  int <span class=\"supfact\">local_30</span>;\n  int <span class=\"supfact\">local_2c</span>;\n  if (Number & lt; **(int **)PTR_debug_00110f40) {\n    if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n      syslog(*(uint *)PTR_log_facility_00110f20 | Number, String, String,\n             (ulong) * (uint *)(<span class=\"supfact\">param_1</span> + Number),\n             *<span class=\"supfact\">param_1</span>);\n    } else {\n      pcVar5 = *<span class=\"supfact\">param_1</span>;\n      uVar1 = *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n      uVar2 = dp_my_pid();\n      uVar4 = FUN_001022f5();\n      dprint(String, uVar4, uVar2, String, uVar1, pcVar5);\n    }\n  }\n  if ((*(long *)PTR_global_00110f38 == Number) & amp; &amp;\n      (iVar3 = virtual_mod_init(), iVar3 != Number)) {\n    uVar4 = Number;\n  } else if (<span class=\"supfact\">param_2</span> == (uint *)Number) {\n    uVar4 = Number;\n  } else {\n    memset(<span class=\"supfact\">param_2</span>, Number, Number);\n    pcVar5 = strchr(*<span class=\"supfact\">param_1</span>, Number);\n    <span class=\"supfact\">local_2c</span> = Number;\n    while ((<span class=\"supfact\">local_2c</span> & lt;\n            *(int *)(*(long *)PTR_global_00110f38 + Number) & amp; &amp;\n            (iVar3 = strncmp(\n                 pcVar5 + Number,\n                 *(char **)((long)<span class=\"supfact\">local_2c</span> * Number +\n                            **(long **)PTR_global_00110f38),\n                 (long)*(int *)((long)<span class=\"supfact\">local_2c</span> * Number +\n                                **(long **)PTR_global_00110f38 + Number)),\n             iVar3 != Number))) {\n      <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">local_2c</span> + Number;\n    }\n    if (Number & lt; **(int **)PTR_debug_00110f40) {\n      if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n        syslog(*(uint *)PTR_log_facility_00110f20 | Number, String, String,\n               (ulong) * (uint *)((long)<span class=\"supfact\">local_2c</span> * Number +\n                                  **(long **)PTR_global_00110f38 + Number),\n               *(undefined8 *)((long)<span class=\"supfact\">local_2c</span> * Number +\n                               **(long **)PTR_global_00110f38));\n      } else {\n        uVar4 = *(undefined8 *)((long)<span class=\"supfact\">local_2c</span> * Number +\n                                **(long **)PTR_global_00110f38);\n        uVar1 = *(undefined4 *)((long)<span class=\"supfact\">local_2c</span> * Number +\n                                **(long **)PTR_global_00110f38 + Number);\n        uVar2 = dp_my_pid();\n        uVar6 = FUN_001022f5();\n        dprint(String, uVar6, uVar2, String, uVar1, uVar4);\n      }\n    }\n    *<span class=\"supfact\">param_2</span> = Number;\n    for (<span class=\"supfact\">local_30</span> = Number; <span class=\"supfact\">local_30</span> & lt;\n         *(int *)((long)<span class=\"supfact\">local_2c</span> * Number +\n                  **(long **)PTR_global_00110f38 + Number);\n         <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_30</span> + Number) {\n      *<span class=\"supfact\">param_2</span> = *<span class=\"supfact\">param_2</span> & amp;\n      *(uint *)((long)<span class=\"supfact\">local_30</span> * Number +\n                *(long *)((long)<span class=\"supfact\">local_2c</span> * Number +\n                          **(long **)PTR_global_00110f38 + Number) +\n                Number);\n    }\n    if (*(char *)((long)<span class=\"supfact\">local_2c</span> * Number +\n                  **(long **)PTR_global_00110f38 + Number) == String) {\n      *<span class=\"supfact\">param_2</span> = *<span class=\"supfact\">param_2</span> & amp;\n      Number;\n    } else if (*(char *)((long)<span class=\"supfact\">local_2c</span> * Number +\n                         **(long **)PTR_global_00110f38 + Number) == String) {\n      *<span class=\"supfact\">param_2</span> = *<span class=\"supfact\">param_2</span> & amp;\n      Number;\n    } else if (*(char *)((long)<span class=\"supfact\">local_2c</span> * Number +\n                         **(long **)PTR_global_00110f38 + Number) == String) {\n      *<span class=\"supfact\">param_2</span> = *<span class=\"supfact\">param_2</span> & amp;\n      Number;\n    }\n    *(undefined **)(<span class=\"supfact\">param_2</span> + Number) =\n        PTR_db_virtual_use_table_00110f90;\n    *(undefined **)(<span class=\"supfact\">param_2</span> + Number) =\n        PTR_db_virtual_init_00110fd8;\n    *(undefined **)(<span class=\"supfact\">param_2</span> + Number) =\n        PTR_db_virtual_close_00110fe8;\n    *(undefined **)(<span class=\"supfact\">param_2</span> + Number) =\n        PTR_db_virtual_query_00110ff0;\n    *(undefined **)(<span class=\"supfact\">param_2</span> + Number) =\n        PTR_db_virtual_fetch_result_00110f28;\n    *(undefined **)(<span class=\"supfact\">param_2</span> + Number) =\n        PTR_db_virtual_raw_query_00110f58;\n    *(undefined **)(<span class=\"supfact\">param_2</span> + Number) =\n        PTR_db_virtual_free_result_00110f78;\n    *(undefined **)(<span class=\"supfact\">param_2</span> + Number) =\n        PTR_db_virtual_insert_00110f80;\n    *(undefined **)(<span class=\"supfact\">param_2</span> + Number) =\n        PTR_db_virtual_delete_00110fa0;\n    *(undefined **)(<span class=\"supfact\">param_2</span> + Number) =\n        PTR_db_virtual_update_00110fd0;\n    *(undefined **)(<span class=\"supfact\">param_2</span> + Number) =\n        PTR_db_virtual_replace_00110f50;\n    *(undefined **)(<span class=\"supfact\">param_2</span> + Number) =\n        PTR_db_virtual_last_inserted_id_00110ef0;\n    *(undefined **)(<span class=\"supfact\">param_2</span> + Number) =\n        PTR_db_virtual_insert_update_00110fb0;\n    uVar4 = Number;\n  }\n  return uVar4;\n}", "code_t": "int db_virtual_bind_api(str *<span class=\"supfact\">mod</span>,\n                        db_func_t *<span class=\"supfact\">dbb</span>) {\n  undefined8 uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  char *pcVar5;\n  char *pcVar6;\n  db_func_t *<span class=\"supfact\">dbb</span> - local;\n  str *<span class=\"supfact\">mod</span> - local;\n  str s;\n  int <span class=\"supfact\">j</span>;\n  int <span class=\"supfact\">i</span>;\n  if (Number & lt; **(int **)PTR_debug_00110f40) {\n    if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n      syslog(*(uint *)PTR_log_facility_00110f20 | Number, String, String,\n             (ulong)(uint)<span class=\"supfact\">mod</span> - &gt;\n             len, <span class=\"supfact\">mod</span> - &gt; s);\n    } else {\n      pcVar6 = <span class=\"supfact\">mod</span> - &gt;\n      s;\n      iVar3 = <span class=\"supfact\">mod</span> - &gt;\n      len;\n      uVar2 = dp_my_pid();\n      pcVar5 = dp_time();\n      dprint(String, pcVar5, uVar2, String, iVar3, pcVar6);\n    }\n  }\n  if ((*(long *)PTR_global_00110f38 == Number) & amp; &amp;\n      (iVar3 = virtual_mod_init(), iVar3 != Number)) {\n    iVar3 = Number;\n  } else if (<span class=\"supfact\">dbb</span> == (db_func_t *)Number) {\n    iVar3 = -Number;\n  } else {\n    memset(<span class=\"supfact\">dbb</span>, Number, Number);\n    pcVar6 = strchr(<span class=\"supfact\">mod</span> - &gt; s, Number);\n    <span class=\"supfact\">i</span> = Number;\n    while ((<span class=\"supfact\">i</span> & lt;\n            *(int *)(*(long *)PTR_global_00110f38 + Number) & amp; &amp;\n            (iVar3 = strncmp(pcVar6 + Number,\n                             *(char **)((long)<span class=\"supfact\">i</span> * Number +\n                                        **(long **)PTR_global_00110f38),\n                             (long)*(int *)((long)<span class=\"supfact\">i</span> * Number +\n                                            **(long **)PTR_global_00110f38 +\n                                            Number)),\n             iVar3 != Number))) {\n      <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n    }\n    if (Number & lt; **(int **)PTR_debug_00110f40) {\n      if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n        syslog(*(uint *)PTR_log_facility_00110f20 | Number, String, String,\n               (ulong) * (uint *)((long)<span class=\"supfact\">i</span> * Number +\n                                  **(long **)PTR_global_00110f38 + Number),\n               *(undefined8 *)((long)<span class=\"supfact\">i</span> * Number +\n                               **(long **)PTR_global_00110f38));\n      } else {\n        uVar1 = *(undefined8 *)((long)<span class=\"supfact\">i</span> * Number +\n                                **(long **)PTR_global_00110f38);\n        uVar2 = *(undefined4 *)((long)<span class=\"supfact\">i</span> * Number +\n                                **(long **)PTR_global_00110f38 + Number);\n        uVar4 = dp_my_pid();\n        pcVar6 = dp_time();\n        dprint(String, pcVar6, uVar4, String, uVar2, uVar1);\n      }\n    }\n    <span class=\"supfact\">dbb</span> - &gt;\n    cap = Number;\n    for (<span class=\"supfact\">j</span> = Number; <span class=\"supfact\">j</span> & lt;\n         *(int *)((long)<span class=\"supfact\">i</span> * Number +\n                  **(long **)PTR_global_00110f38 + Number);\n         <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number) {\n      <span class=\"supfact\">dbb</span> - &gt;\n      cap = <span class=\"supfact\">dbb</span> - &gt;\n      cap &amp;\n      *(uint *)((long)<span class=\"supfact\">j</span> * Number +\n                *(long *)((long)<span class=\"supfact\">i</span> * Number +\n                          **(long **)PTR_global_00110f38 + Number) +\n                Number);\n    }\n    if (*(char *)((long)<span class=\"supfact\">i</span> * Number +\n                  **(long **)PTR_global_00110f38 + Number) == String) {\n      <span class=\"supfact\">dbb</span> - &gt;\n      cap = <span class=\"supfact\">dbb</span> - &gt;\n      cap &amp;\n      Number;\n    } else if (*(char *)((long)<span class=\"supfact\">i</span> * Number +\n                         **(long **)PTR_global_00110f38 + Number) == String) {\n      <span class=\"supfact\">dbb</span> - &gt;\n      cap = <span class=\"supfact\">dbb</span> - &gt;\n      cap &amp;\n      Number;\n    } else if (*(char *)((long)<span class=\"supfact\">i</span> * Number +\n                         **(long **)PTR_global_00110f38 + Number) == String) {\n      <span class=\"supfact\">dbb</span> - &gt;\n      cap = <span class=\"supfact\">dbb</span> - &gt;\n      cap &amp;\n      Number;\n    }\n    <span class=\"supfact\">dbb</span> - &gt;\n    use_table = (db_use_table_f)PTR_db_virtual_use_table_00110f90;\n    <span class=\"supfact\">dbb</span> - &gt;\n    init = (db_init_f)PTR_db_virtual_init_00110fd8;\n    <span class=\"supfact\">dbb</span> - &gt;\n    close = (db_close_f)PTR_db_virtual_close_00110fe8;\n    <span class=\"supfact\">dbb</span> - &gt;\n    query = (db_query_f)PTR_db_virtual_query_00110ff0;\n    <span class=\"supfact\">dbb</span> - &gt;\n    fetch_result = (db_fetch_result_f)PTR_db_virtual_fetch_result_00110f28;\n    <span class=\"supfact\">dbb</span> - &gt;\n    raw_query = (db_raw_query_f)PTR_db_virtual_raw_query_00110f58;\n    <span class=\"supfact\">dbb</span> - &gt;\n    free_result = (db_free_result_f)PTR_db_virtual_free_result_00110f78;\n    <span class=\"supfact\">dbb</span> - &gt;\n    insert = (db_insert_f)PTR_db_virtual_insert_00110f80;\n    <span class=\"supfact\">dbb</span> - &gt;\n    delete = (db_delete_f)PTR_db_virtual_delete_00110fa0;\n    <span class=\"supfact\">dbb</span> - &gt;\n    update = (db_update_f)PTR_db_virtual_update_00110fd0;\n    <span class=\"supfact\">dbb</span> - &gt;\n    replace = (db_replace_f)PTR_db_virtual_replace_00110f50;\n    <span class=\"supfact\">dbb</span> - &gt;\n    last_inserted_id =\n        (db_last_inserted_id_f)PTR_db_virtual_last_inserted_id_00110ef0;\n    <span class=\"supfact\">dbb</span> - &gt;\n    insert_update = (db_insert_update_f)PTR_db_virtual_insert_update_00110fb0;\n    iVar3 = Number;\n  }\n  return iVar3;\n}", "var": [{"name": "param_1", "type": "dbt_table_p", "pred_name": "_dtp", "ref_name": "mod", "ref_type": "str * *"}, {"name": "param_2", "type": "str * *", "pred_name": "__unk__", "ref_name": "dbb", "ref_type": "db_func_t * *"}, {"name": "local_30", "type": "int", "pred_name": "__unk__", "ref_name": "j", "ref_type": "int"}, {"name": "local_2c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "ENCODE-DCC", "repo_name": "kentUtils", "path": "ENCODE-DCC/kentUtils/2275f5f951b04433085c82e5b32948dd5e38db03281c71e83433696717dfd057", "path_in_repo": "ENCODE-DCC/kentUtils//bin/wordLine", "objdump": "", "code_s": "char *ERR_reason_error_string(ulong e) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> =\n      (char *)(*(code *)PTR_ERR_reason_error_string_00447020)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *ERR_reason_error_string(ulong e) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> =\n      (char *)(*(code *)PTR_ERR_reason_error_string_00447020)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "hexu1985", "repo_name": "demo_code", "path": "hexu1985/demo_code/42d7d2d69c3e65de476ab509376e68b4af738fc62f66a12d2f9921416a6a27f0", "path_in_repo": "hexu1985/demo_code/boost/asio/echo/blocking_udp_echo_client", "objdump": "", "code_s": "ssize_t sendmsg(int __fd, msghdr *__message, int __flags) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_sendmsg_0041f108)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "ssize_t sendmsg(int __fd, msghdr *__message, int __flags) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_sendmsg_0041f108)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "ssize_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "ssize_t"}], "body_in_train": false}, {"repo_owner": "y-c", "repo_name": "BeginningLinuxProgramming", "path": "y-c/BeginningLinuxProgramming/58180ce1d6ed64a9a834f15fd1e8cc01ee6a3a79b3a2cb15a0b5e743c7de0691", "path_in_repo": "y-c/BeginningLinuxProgramming/chapter05/menu3", "objdump": "", "code_s": "int fgetc(FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fgetc_00404028)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int fgetc(FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fgetc_00404028)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "OS2World", "repo_name": "LIB-MM-libvpx", "path": "OS2World/LIB-MM-libvpx/b577fcb032e876ede91c0ded024fd7c3ac5ec77c6940cb4cf78180df49014f0a", "path_in_repo": "OS2World/LIB-MM-libvpx/src/third_party/googletest/src/make/sample1_unittest", "objdump": "", "code_s": "int vsnprintf(char *__s, size_t __maxlen, char *__format,\n              __gnuc_va_list __arg) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_vsnprintf_0044c138)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int vsnprintf(char *__s, size_t __maxlen, char *__format,\n              __gnuc_va_list __arg) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_vsnprintf_0044c138)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "lmac2019", "repo_name": "Cmpt-300-Mac-Waswa", "path": "lmac2019/Cmpt-300-Mac-Waswa/a66e277205b87526de8b778e63dbb5e2581785a64ed21711c82d3a671e53385b", "path_in_repo": "lmac2019/Cmpt-300-Mac-Waswa/Assignment5/linux-stable/tools/lib/traceevent/libtraceevent.so.1.1.0", "objdump": "", "code_s": "char *strdup(char *__s) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strdup_00121328)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *strdup(char *__s) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strdup_00121328)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "naclander", "repo_name": "crcon", "path": "naclander/crcon/02d99f80bcd8a79679440b3782f72c2cd4e7a64626dc02318d74f10cdc6b8642", "path_in_repo": "naclander/crcon//crcon", "objdump": "", "code_s": "char *strchr(char *__s, int __c) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strchr_00405060)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *strchr(char *__s, int __c) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strchr_00405060)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": true}, {"repo_owner": "moseymosey", "repo_name": "netpbm", "path": "moseymosey/netpbm/027f2b5422bb14f45a1ee219a516b5af5594f6461cf01fbf10fe61fb860b974b", "path_in_repo": "moseymosey/netpbm/converter/pgm/pgmtopgm", "objdump": "", "code_s": "int putc(int __c, FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_putc_004130d0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int putc(int __c, FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_putc_004130d0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "moseymosey", "repo_name": "netpbm", "path": "moseymosey/netpbm/027f2b5422bb14f45a1ee219a516b5af5594f6461cf01fbf10fe61fb860b974b", "path_in_repo": "moseymosey/netpbm/converter/pgm/pgmtopgm", "objdump": "", "code_s": "int putc(int __c, FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_putc_004130d0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int putc(int __c, FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_putc_004130d0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "leemgs", "repo_name": "notrace32", "path": "leemgs/notrace32/960d5c4d0e67442536ada4df1af1b88ced3cbd080e82b1a14a08295a822d820d", "path_in_repo": "leemgs/notrace32/source/nt32-kernel-goldfish-2629/scripts/kconfig/conf", "objdump": "", "code_s": "int mkdir(char *__path, __mode_t __mode) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_mkdir_00419048)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int mkdir(char *__path, __mode_t __mode) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_mkdir_00419048)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "temporaer", "repo_name": "seralign", "path": "temporaer/seralign/1e9f8183e21927e8fc6b2d93d9836496f5baa810687ac03f3f12d4d37ac49834", "path_in_repo": "temporaer/seralign/src/third_party/triangle/triangle", "objdump": "", "code_s": "char *fgets(char *__s, int __n, FILE *__stream) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_fgets_00449088)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *fgets(char *__s, int __n, FILE *__stream) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_fgets_00449088)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "r6144", "repo_name": "mesa-fixes", "path": "r6144/mesa-fixes/bd6e9bb895c747a5cd2570f52350f3de833e683dbca8275e541580bd68216cd3", "path_in_repo": "r6144/mesa-fixes/progs/demos/multiarb", "objdump": "", "code_s": "void *calloc(size_t __nmemb, size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_calloc_004070b8)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *calloc(size_t __nmemb, size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_calloc_004070b8)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": true}, {"repo_owner": "chengym", "repo_name": "unpv22e_dev", "path": "chengym/unpv22e_dev/5f71f7630343663e37b96c763d83a72b4ea8fac5a7a31d0d081fe416ea7c100a", "path_in_repo": "chengym/unpv22e_dev/pipe/mainfifo", "objdump": "", "code_s": "int __xstat(int __ver, char *__filename, stat *__stat_buf) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR___xstat_00408180)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int __xstat(int __ver, char *__filename, stat *__stat_buf) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR___xstat_00408180)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "zenfone5", "repo_name": "android_kernel_asus_T00F", "path": "zenfone5/android_kernel_asus_T00F/f986bcab6deafc7e2bf841ef876b4a65d9eedae0460d59189e524203284c7005", "path_in_repo": "zenfone5/android_kernel_asus_T00F/T00F/tools/testing/selftests/efivarfs/open-unlink", "objdump": "", "code_s": "ssize_t read(int __fd, void *__buf, size_t __nbytes) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_read_00404030)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "ssize_t read(int __fd, void *__buf, size_t __nbytes) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_read_00404030)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "ssize_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "ssize_t"}], "body_in_train": true}, {"repo_owner": "patrick-ken", "repo_name": "MyNet_N900", "path": "patrick-ken/MyNet_N900/25c1f2012f51cb6206bf4a2ff42fba9ed5fd6fa32ebefa9f1bffebf4a5473f7f", "path_in_repo": "patrick-ken/MyNet_N900/elbox_WRGND15/progs.gpl/itunes_server/gdbm-1.8.3/.libs/libgdbm.so.3.0.0", "objdump": "0000000000006608 <_gdbm_end_update>:\n    6608:\t55                   \tpush   %rbp\n    6609:\t48 89 e5             \tmov    %rsp,%rbp\n    660c:\t53                   \tpush   %rbx\n    660d:\t48 83 ec 28          \tsub    $0x28,%rsp\n    6611:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    6615:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    6619:\t0f b6 40 6a          \tmovzbl 0x6a(%rax),%eax\n    661d:\t84 c0                \ttest   %al,%al\n    661f:\t74 2c                \tje     664d <_gdbm_end_update+0x45>\n    6621:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    6625:\t48 8b 40 60          \tmov    0x60(%rax),%rax\n    6629:\t48 85 c0             \ttest   %rax,%rax\n    662c:\t74 1f                \tje     664d <_gdbm_end_update+0x45>\n    662e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    6632:\t48 8b 50 60          \tmov    0x60(%rax),%rdx\n    6636:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    663a:\t48 89 d6             \tmov    %rdx,%rsi\n    663d:\t48 89 c7             \tmov    %rax,%rdi\n    6640:\te8 2b ba ff ff       \tcall   2070 <_gdbm_write_bucket@plt>\n    6645:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    6649:\tc6 40 6a 00          \tmovb   $0x0,0x6a(%rax)\n    664d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    6651:\t0f b6 40 6b          \tmovzbl 0x6b(%rax),%eax\n    6655:\t84 c0                \ttest   %al,%al\n    6657:\t74 7a                \tje     66d3 <_gdbm_end_update+0xcb>\n    6659:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    665d:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n    6661:\t48 85 c0             \ttest   %rax,%rax\n    6664:\t74 65                \tje     66cb <_gdbm_end_update+0xc3>\n    6666:\tbb 00 00 00 00       \tmov    $0x0,%ebx\n    666b:\teb 53                \tjmp    66c0 <_gdbm_end_update+0xb8>\n    666d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    6671:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    6675:\t48 63 d3             \tmovslq %ebx,%rdx\n    6678:\t48 89 d0             \tmov    %rdx,%rax\n    667b:\t48 c1 e0 03          \tshl    $0x3,%rax\n    667f:\t48 29 d0             \tsub    %rdx,%rax\n    6682:\t48 c1 e0 03          \tshl    $0x3,%rax\n    6686:\t48 01 c8             \tadd    %rcx,%rax\n    6689:\t0f b6 40 10          \tmovzbl 0x10(%rax),%eax\n    668d:\t84 c0                \ttest   %al,%al\n    668f:\t74 2c                \tje     66bd <_gdbm_end_update+0xb5>\n    6691:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    6695:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    6699:\t48 63 d3             \tmovslq %ebx,%rdx\n    669c:\t48 89 d0             \tmov    %rdx,%rax\n    669f:\t48 c1 e0 03          \tshl    $0x3,%rax\n    66a3:\t48 29 d0             \tsub    %rdx,%rax\n    66a6:\t48 c1 e0 03          \tshl    $0x3,%rax\n    66aa:\t48 8d 14 01          \tlea    (%rcx,%rax,1),%rdx\n    66ae:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    66b2:\t48 89 d6             \tmov    %rdx,%rsi\n    66b5:\t48 89 c7             \tmov    %rax,%rdi\n    66b8:\te8 b3 b9 ff ff       \tcall   2070 <_gdbm_write_bucket@plt>\n    66bd:\t83 c3 01             \tadd    $0x1,%ebx\n    66c0:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    66c4:\t8b 40 48             \tmov    0x48(%rax),%eax\n    66c7:\t39 c3                \tcmp    %eax,%ebx\n    66c9:\t7c a2                \tjl     666d <_gdbm_end_update+0x65>\n    66cb:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    66cf:\tc6 40 6b 00          \tmovb   $0x0,0x6b(%rax)\n    66d3:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    66d7:\t0f b6 40 69          \tmovzbl 0x69(%rax),%eax\n    66db:\t84 c0                \ttest   %al,%al\n    66dd:\t0f 84 c5 00 00 00    \tje     67a8 <_gdbm_end_update+0x1a0>\n    66e3:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    66e7:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    66eb:\t48 8b 48 08          \tmov    0x8(%rax),%rcx\n    66ef:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    66f3:\t8b 40 28             \tmov    0x28(%rax),%eax\n    66f6:\tba 00 00 00 00       \tmov    $0x0,%edx\n    66fb:\t48 89 ce             \tmov    %rcx,%rsi\n    66fe:\t89 c7                \tmov    %eax,%edi\n    6700:\te8 1b ba ff ff       \tcall   2120 <lseek@plt>\n    6705:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    6709:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    670d:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    6711:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    6715:\t48 39 45 e8          \tcmp    %rax,-0x18(%rbp)\n    6719:\t74 13                \tje     672e <_gdbm_end_update+0x126>\n    671b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    671f:\t48 8d 35 30 0b 00 00 \tlea    0xb30(%rip),%rsi        # 7256 <_fini+0x9d6>\n    6726:\t48 89 c7             \tmov    %rax,%rdi\n    6729:\te8 12 b9 ff ff       \tcall   2040 <_gdbm_fatal@plt>\n    672e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    6732:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    6736:\t8b 40 10             \tmov    0x10(%rax),%eax\n    6739:\t48 63 d0             \tmovslq %eax,%rdx\n    673c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    6740:\t48 8b 48 38          \tmov    0x38(%rax),%rcx\n    6744:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    6748:\t8b 40 28             \tmov    0x28(%rax),%eax\n    674b:\t48 89 ce             \tmov    %rcx,%rsi\n    674e:\t89 c7                \tmov    %eax,%edi\n    6750:\te8 4b b9 ff ff       \tcall   20a0 <write@plt>\n    6755:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n    6758:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    675c:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    6760:\t8b 40 10             \tmov    0x10(%rax),%eax\n    6763:\t39 45 e4             \tcmp    %eax,-0x1c(%rbp)\n    6766:\t74 13                \tje     677b <_gdbm_end_update+0x173>\n    6768:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    676c:\t48 8d 35 ef 0a 00 00 \tlea    0xaef(%rip),%rsi        # 7262 <_fini+0x9e2>\n    6773:\t48 89 c7             \tmov    %rax,%rdi\n    6776:\te8 c5 b8 ff ff       \tcall   2040 <_gdbm_fatal@plt>\n    677b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    677f:\tc6 40 69 00          \tmovb   $0x0,0x69(%rax)\n    6783:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    6787:\t0f b6 40 68          \tmovzbl 0x68(%rax),%eax\n    678b:\t84 c0                \ttest   %al,%al\n    678d:\t75 19                \tjne    67a8 <_gdbm_end_update+0x1a0>\n    678f:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    6793:\t8b 40 0c             \tmov    0xc(%rax),%eax\n    6796:\t85 c0                \ttest   %eax,%eax\n    6798:\t75 0e                \tjne    67a8 <_gdbm_end_update+0x1a0>\n    679a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    679e:\t8b 40 28             \tmov    0x28(%rax),%eax\n    67a1:\t89 c7                \tmov    %eax,%edi\n    67a3:\te8 78 ba ff ff       \tcall   2220 <fsync@plt>\n    67a8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    67ac:\t0f b6 40 68          \tmovzbl 0x68(%rax),%eax\n    67b0:\t84 c0                \ttest   %al,%al\n    67b2:\t74 14                \tje     67c8 <_gdbm_end_update+0x1c0>\n    67b4:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    67b8:\t48 89 c7             \tmov    %rax,%rdi\n    67bb:\te8 9d fd ff ff       \tcall   655d <write_header>\n    67c0:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    67c4:\tc6 40 68 00          \tmovb   $0x0,0x68(%rax)\n    67c8:\t90                   \tnop\n    67c9:\t48 83 c4 28          \tadd    $0x28,%rsp\n    67cd:\t5b                   \tpop    %rbx\n    67ce:\t5d                   \tpop    %rbp\n    67cf:\tc3                   \tret    ", "code_s": "void _gdbm_end_update(long <span class=\"supfact\">param_1</span>) {\n  __off_t _Var1;\n  ssize_t sVar2;\n  int <span class=\"supfact\">iVar3</span>;\n  if ((*(char *)(<span class=\"supfact\">param_1</span> + Number) != String) & amp; &amp;\n      (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number)) {\n    _gdbm_write_bucket(<span class=\"supfact\">param_1</span>,\n                       *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n    *(undefined *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  }\n  if (*(char *)(<span class=\"supfact\">param_1</span> + Number) != String) {\n    if (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n      for (<span class=\"supfact\">iVar3</span> = Number; <span class=\"supfact\">iVar3</span> & lt;\n           *(int *)(<span class=\"supfact\">param_1</span> + Number);\n           <span class=\"supfact\">iVar3</span> = <span class=\"supfact\">iVar3</span> + Number) {\n        if (*(char *)((long)<span class=\"supfact\">iVar3</span> * Number +\n                      *(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) !=\n            String) {\n          _gdbm_write_bucket(<span class=\"supfact\">param_1</span>,\n                             *(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                                 (long)<span class=\"supfact\">iVar3</span> * Number);\n        }\n      }\n    }\n    *(undefined *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  }\n  if (*(char *)(<span class=\"supfact\">param_1</span> + Number) != String) {\n    _Var1 = lseek(\n        *(int *)(<span class=\"supfact\">param_1</span> + Number),\n        *(__off_t *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number),\n        Number);\n    if (_Var1 !=\n        *(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number)) {\n      _gdbm_fatal(<span class=\"supfact\">param_1</span>, String);\n    }\n    sVar2 = write(\n        *(int *)(<span class=\"supfact\">param_1</span> + Number),\n        *(void **)(<span class=\"supfact\">param_1</span> + Number),\n        (long)*(int *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number));\n    if ((int)sVar2 !=\n        *(int *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number)) {\n      _gdbm_fatal(<span class=\"supfact\">param_1</span>, String);\n    }\n    *(undefined *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n    if ((*(char *)(<span class=\"supfact\">param_1</span> + Number) == String) & amp; &amp;\n        (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number)) {\n      fsync(*(int *)(<span class=\"supfact\">param_1</span> + Number));\n    }\n  }\n  if (*(char *)(<span class=\"supfact\">param_1</span> + Number) != String) {\n    FUN_0010655d(<span class=\"supfact\">param_1</span>);\n    *(undefined *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  }\n  return;\n}", "code_t": "void _gdbm_end_update(gdbm_file_info *<span class=\"supfact\">dbf</span>) {\n  __off_t _Var1;\n  ssize_t sVar2;\n  int <span class=\"supfact\">iVar3</span>;\n  if ((<span class=\"supfact\">dbf</span> - &gt; bucket_changed != String) & amp; &amp;\n      (<span class=\"supfact\">dbf</span> - &gt; cache_entry != (cache_elem *)Number)) {\n    _gdbm_write_bucket(<span class=\"supfact\">dbf</span>, <span class=\"supfact\">dbf</span> - &gt;\n                       cache_entry);\n    <span class=\"supfact\">dbf</span> - &gt;\n    bucket_changed = String;\n  }\n  if (<span class=\"supfact\">dbf</span> - &gt; second_changed != String) {\n    if (<span class=\"supfact\">dbf</span> - &gt; bucket_cache != (cache_elem *)Number) {\n      for (<span class=\"supfact\">iVar3</span> = Number; <span class=\"supfact\">iVar3</span> & lt;\n           <span class=\"supfact\">dbf</span> - &gt; cache_size;\n           <span class=\"supfact\">iVar3</span> = <span class=\"supfact\">iVar3</span> + Number) {\n        if (<span class=\"supfact\">dbf</span> - &gt;\n            bucket_cache[<span class=\"supfact\">iVar3</span>].ca_changed != String) {\n          _gdbm_write_bucket(<span class=\"supfact\">dbf</span>, <span class=\"supfact\">dbf</span> - &gt;\n                             bucket_cache + <span class=\"supfact\">iVar3</span>);\n        }\n      }\n    }\n    <span class=\"supfact\">dbf</span> - &gt;\n    second_changed = String;\n  }\n  if (<span class=\"supfact\">dbf</span> - &gt; directory_changed != String) {\n    _Var1 = lseek(<span class=\"supfact\">dbf</span> - &gt; desc, <span class=\"supfact\">dbf</span> - &gt;\n                  header - &gt; dir, Number);\n    if (_Var1 != <span class=\"supfact\">dbf</span> - &gt; header - &gt; dir) {\n      _gdbm_fatal(<span class=\"supfact\">dbf</span>, String);\n    }\n    sVar2 = write(<span class=\"supfact\">dbf</span> - &gt; desc, <span class=\"supfact\">dbf</span> - &gt;\n                  dir, (long)<span class=\"supfact\">dbf</span> - &gt; header - &gt; dir_size);\n    if ((int)sVar2 != <span class=\"supfact\">dbf</span> - &gt; header - &gt; dir_size) {\n      _gdbm_fatal(<span class=\"supfact\">dbf</span>, String);\n    }\n    <span class=\"supfact\">dbf</span> - &gt;\n    directory_changed = String;\n    if ((<span class=\"supfact\">dbf</span> - &gt; header_changed == String) & amp; &amp;\n        (<span class=\"supfact\">dbf</span> - &gt; fast_write == Number)) {\n      fsync(<span class=\"supfact\">dbf</span> - &gt; desc);\n    }\n  }\n  if (<span class=\"supfact\">dbf</span> - &gt; header_changed != String) {\n    write_header(<span class=\"supfact\">dbf</span>);\n    <span class=\"supfact\">dbf</span> - &gt;\n    header_changed = String;\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "h", "ref_name": "dbf", "ref_type": "gdbm_file_info * *"}, {"name": "iVar3", "type": "int", "pred_name": "iVar3", "ref_name": "iVar3", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "fergy", "repo_name": "aplit_linux-5", "path": "fergy/aplit_linux-5/334a26cf56221abf99038c1b9620241a43b1a22cebc6f534f74cf5953d934390", "path_in_repo": "fergy/aplit_linux-5/tools/testing/selftests/timers/inconsistency-check", "objdump": "", "code_s": "time_t time(time_t *__timer) {\n  time_t <span class=\"supfact\">tVar1</span>;\n  <span class=\"supfact\">tVar1</span> = (*(code *)PTR_time_00404038)();\n  return <span class=\"supfact\">tVar1</span>;\n}", "code_t": "time_t time(time_t *__timer) {\n  time_t <span class=\"supfact\">tVar1</span>;\n  <span class=\"supfact\">tVar1</span> = (*(code *)PTR_time_00404038)();\n  return <span class=\"supfact\">tVar1</span>;\n}", "var": [{"name": "tVar1", "type": "time_t", "pred_name": "tVar1", "ref_name": "tVar1", "ref_type": "time_t"}], "body_in_train": true}, {"repo_owner": "timvideos", "repo_name": "HDMI2USB-fx2-firmware", "path": "timvideos/HDMI2USB-fx2-firmware/08bcf8174f35f41f8419809668d05aaeaaeff0704190510446fd26add6163d1b", "path_in_repo": "timvideos/HDMI2USB-fx2-firmware//conda/pkgs/python-3.7.4-h265db76_1/lib/python3.7/lib-dynload/_sha3.cpython-37m-x86_64-linux-gnu.so", "objdump": "0000000000003157 <_PySHA3_KeccakP1600_OverwriteBytesInLane>:\n    3157:\t41 89 f1             \tmov    %esi,%r9d\n    315a:\t48 89 d6             \tmov    %rdx,%rsi\n    315d:\t41 8d 51 ff          \tlea    -0x1(%r9),%edx\n    3161:\t42 8d 04 cd 00 00 00 \tlea    0x0(,%r9,8),%eax\n    3168:\t00 \n    3169:\t83 fa 01             \tcmp    $0x1,%edx\n    316c:\t76 16                \tjbe    3184 <_PySHA3_KeccakP1600_OverwriteBytesInLane+0x2d>\n    316e:\t41 83 f9 08          \tcmp    $0x8,%r9d\n    3172:\t74 10                \tje     3184 <_PySHA3_KeccakP1600_OverwriteBytesInLane+0x2d>\n    3174:\t45 8d 51 f4          \tlea    -0xc(%r9),%r10d\n    3178:\t41 83 e2 f7          \tand    $0xfffffff7,%r10d\n    317c:\t74 06                \tje     3184 <_PySHA3_KeccakP1600_OverwriteBytesInLane+0x2d>\n    317e:\t41 83 f9 11          \tcmp    $0x11,%r9d\n    3182:\t75 1e                \tjne    31a2 <_PySHA3_KeccakP1600_OverwriteBytesInLane+0x4b>\n    3184:\t01 c8                \tadd    %ecx,%eax\n    3186:\t45 31 db             \txor    %r11d,%r11d\n    3189:\t45 39 c3             \tcmp    %r8d,%r11d\n    318c:\t73 13                \tjae    31a1 <_PySHA3_KeccakP1600_OverwriteBytesInLane+0x4a>\n    318e:\t42 8a 14 1e          \tmov    (%rsi,%r11,1),%dl\n    3192:\t46 8d 0c 18          \tlea    (%rax,%r11,1),%r9d\n    3196:\t49 ff c3             \tinc    %r11\n    3199:\tf7 d2                \tnot    %edx\n    319b:\t42 88 14 0f          \tmov    %dl,(%rdi,%r9,1)\n    319f:\teb e8                \tjmp    3189 <_PySHA3_KeccakP1600_OverwriteBytesInLane+0x32>\n    31a1:\tc3                   \tret    \n    31a2:\t89 c9                \tmov    %ecx,%ecx\n    31a4:\t48 01 c8             \tadd    %rcx,%rax\n    31a7:\t44 89 c1             \tmov    %r8d,%ecx\n    31aa:\t48 01 f8             \tadd    %rdi,%rax\n    31ad:\t48 89 c7             \tmov    %rax,%rdi\n    31b0:\tf3 a4                \trep movsb %ds:(%rsi),%es:(%rdi)\n    31b2:\tc3                   \tret    ", "code_s": "void _PySHA3_KeccakP1600_OverwriteBytesInLane(\n    long <span class=\"supfact\">param_1</span>, int <span class=\"supfact\">param_2</span>,\n    undefined *<span class=\"supfact\">param_3</span>, uint <span class=\"supfact\">param_4</span>,\n    uint <span class=\"supfact\">param_5</span>) {\n  ulong <span class=\"supfact\">uVar1</span>;\n  undefined *puVar2;\n  long <span class=\"supfact\">lVar3</span>;\n  if ((((Number & lt; <span class=\"supfact\">param_2</span> - Number) & amp; &amp;\n        (<span class=\"supfact\">param_2</span> != Number)) &\n           amp;\n       &amp; ((<span class=\"supfact\">param_2</span> - Number & amp; Number) != Number)) &\n          amp;\n      &amp; (<span class=\"supfact\">param_2</span> != Number)) {\n    puVar2 =\n        (undefined *)((ulong)(uint)(<span class=\"supfact\">param_2</span> * Number) +\n                      (ulong)<span class=\"supfact\">param_4</span> + <span class=\"supfact\">param_1</span>);\n    for (<span class=\"supfact\">uVar1</span> = (ulong)<span class=\"supfact\">param_5</span>;\n         <span class=\"supfact\">uVar1</span> != Number;\n         <span class=\"supfact\">uVar1</span> = <span class=\"supfact\">uVar1</span> - Number) {\n      *puVar2 = *<span class=\"supfact\">param_3</span>;\n      <span class=\"supfact\">param_3</span> = <span class=\"supfact\">param_3</span> + Number;\n      puVar2 = puVar2 + Number;\n    }\n    return;\n  }\n  for (<span class=\"supfact\">lVar3</span> = Number; (uint)<span class=\"supfact\">lVar3</span> & lt;\n       <span class=\"supfact\">param_5</span>;\n       <span class=\"supfact\">lVar3</span> = <span class=\"supfact\">lVar3</span> + Number) {\n    *(undefined *)(<span class=\"supfact\">param_1</span> +\n                   (ulong)(<span class=\"supfact\">param_2</span> * Number +\n                           <span class=\"supfact\">param_4</span> +\n                           (uint)<span class=\"supfact\">lVar3</span>)) =\n        ~<span class=\"supfact\">param_3</span>[<span class=\"supfact\">lVar3</span>];\n  }\n  return;\n}", "code_t": "void _PySHA3_KeccakP1600_OverwriteBytesInLane(void *<span class=\"supfact\">state</span>,\n                                              uint <span class=\"supfact\">lanePosition</span>,\n                                              uchar *<span class=\"supfact\">data</span>,\n                                              uint <span class=\"supfact\">offset</span>,\n                                              uint <span class=\"supfact\">length</span>) {\n  ulong <span class=\"supfact\">uVar1</span>;\n  uchar *puVar2;\n  uint i;\n  long <span class=\"supfact\">lVar3</span>;\n  if ((((Number & lt; <span class=\"supfact\">lanePosition</span> - Number) & amp; &amp;\n        (<span class=\"supfact\">lanePosition</span> != Number)) &\n           amp;\n       &amp;\n       ((<span class=\"supfact\">lanePosition</span> - Number & amp; Number) != Number)) &\n          amp;\n      &amp; (<span class=\"supfact\">lanePosition</span> != Number)) {\n    puVar2 =\n        (uchar *)((ulong)(<span class=\"supfact\">lanePosition</span> * Number) +\n                  (ulong)<span class=\"supfact\">offset</span> + (long)<span class=\"supfact\">state</span>);\n    for (<span class=\"supfact\">uVar1</span> = (ulong)<span class=\"supfact\">length</span>;\n         <span class=\"supfact\">uVar1</span> != Number;\n         <span class=\"supfact\">uVar1</span> = <span class=\"supfact\">uVar1</span> - Number) {\n      *puVar2 = *<span class=\"supfact\">data</span>;\n      <span class=\"supfact\">data</span> = <span class=\"supfact\">data</span> + Number;\n      puVar2 = puVar2 + Number;\n    }\n    return;\n  }\n  for (<span class=\"supfact\">lVar3</span> = Number; i = (uint)<span class=\"supfact\">lVar3</span>, i & lt;\n       <span class=\"supfact\">length</span>;\n       <span class=\"supfact\">lVar3</span> = <span class=\"supfact\">lVar3</span> + Number) {\n    *(uchar *)((long)<span class=\"supfact\">state</span> +\n               (ulong)(<span class=\"supfact\">lanePosition</span> * Number +\n                       <span class=\"supfact\">offset</span> + i)) =\n        ~<span class=\"supfact\">data</span>[<span class=\"supfact\">lVar3</span>];\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "void * *", "pred_name": "pointer", "ref_name": "state", "ref_type": "void * *"}, {"name": "param_2", "type": "int", "pred_name": "len", "ref_name": "lanePosition", "ref_type": "uint"}, {"name": "param_3", "type": "char * *", "pred_name": "buf", "ref_name": "data", "ref_type": "uchar * *"}, {"name": "param_4", "type": "int", "pred_name": "blen", "ref_name": "offset", "ref_type": "uint"}, {"name": "param_5", "type": "int", "pred_name": "blen", "ref_name": "length", "ref_type": "uint"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "uVar1", "ref_type": "ulong"}, {"name": "lVar3", "type": "long", "pred_name": "lVar3", "ref_name": "lVar3", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "htsat", "repo_name": "caliper", "path": "htsat/caliper/8daa67e04885f8d39450e0d2397e7e9086621b806069d7ea0de6897cdd1036da", "path_in_repo": "htsat/caliper/benchmarks/490.lmbench/bin/lat_mem_rd", "objdump": "", "code_s": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_0041c0c0)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_0041c0c0)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "zzilla", "repo_name": "CodeCollection", "path": "zzilla/CodeCollection/a12eca54e008b52f40ac526980797804be4f34e39b0f44c504f890e5793bdc38", "path_in_repo": "zzilla/CodeCollection/Net/TinyHttpd/tinyhttpd", "objdump": "", "code_s": "int accept(int __fd, sockaddr *__addr, socklen_t *__addr_len) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_accept_004050e8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int accept(int __fd, sockaddr *__addr, socklen_t *__addr_len) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_accept_004050e8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "Jinholy", "repo_name": "advSysProject", "path": "Jinholy/advSysProject/874da891bdb3ffdb716ad677234fa86fe95ec722ec2cd9a55edbc8cf6e29d33e", "path_in_repo": "Jinholy/advSysProject/curl-7.64.1/tests/libtest/.libs/lib505", "objdump": "", "code_s": "int select(int __nfds, fd_set *__readfds, fd_set *__writefds,\n           fd_set *__exceptfds, timeval *__timeout) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_select_00404048)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int select(int __nfds, fd_set *__readfds, fd_set *__writefds,\n           fd_set *__exceptfds, timeval *__timeout) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_select_00404048)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "amremam2004", "repo_name": "pjsip-trunk", "path": "amremam2004/pjsip-trunk/99aaa9f9ea944575f6e73434e074f6b410f36dfc5bfd3fe914004442c55bfc6d", "path_in_repo": "amremam2004/pjsip-trunk//pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/httpdemo", "objdump": "00000000004151bf <speex_bits_write_whole_bytes>:\n  4151bf:\t55                   \tpush   %rbp\n  4151c0:\t48 89 e5             \tmov    %rsp,%rbp\n  4151c3:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  4151c7:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n  4151cb:\t89 55 dc             \tmov    %edx,-0x24(%rbp)\n  4151ce:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n  4151d1:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  4151d4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4151d8:\t8b 40 08             \tmov    0x8(%rax),%eax\n  4151db:\tc1 f8 03             \tsar    $0x3,%eax\n  4151de:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n  4151e1:\t7e 0d                \tjle    4151f0 <speex_bits_write_whole_bytes+0x31>\n  4151e3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4151e7:\t8b 40 08             \tmov    0x8(%rax),%eax\n  4151ea:\tc1 f8 03             \tsar    $0x3,%eax\n  4151ed:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  4151f0:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n  4151f7:\teb 25                \tjmp    41521e <speex_bits_write_whole_bytes+0x5f>\n  4151f9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4151fd:\t48 8b 10             \tmov    (%rax),%rdx\n  415200:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  415203:\t48 98                \tcltq   \n  415205:\t48 01 d0             \tadd    %rdx,%rax\n  415208:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n  41520b:\t48 63 ca             \tmovslq %edx,%rcx\n  41520e:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n  415212:\t48 01 ca             \tadd    %rcx,%rdx\n  415215:\t0f b6 00             \tmovzbl (%rax),%eax\n  415218:\t88 02                \tmov    %al,(%rdx)\n  41521a:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n  41521e:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  415221:\t3b 45 fc             \tcmp    -0x4(%rbp),%eax\n  415224:\t7c d3                \tjl     4151f9 <speex_bits_write_whole_bytes+0x3a>\n  415226:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  41522a:\t8b 40 10             \tmov    0x10(%rax),%eax\n  41522d:\t85 c0                \ttest   %eax,%eax\n  41522f:\t7e 1d                \tjle    41524e <speex_bits_write_whole_bytes+0x8f>\n  415231:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  415235:\t48 8b 10             \tmov    (%rax),%rdx\n  415238:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  41523b:\t48 98                \tcltq   \n  41523d:\t48 01 c2             \tadd    %rax,%rdx\n  415240:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  415244:\t48 8b 00             \tmov    (%rax),%rax\n  415247:\t0f b6 12             \tmovzbl (%rdx),%edx\n  41524a:\t88 10                \tmov    %dl,(%rax)\n  41524c:\teb 0a                \tjmp    415258 <speex_bits_write_whole_bytes+0x99>\n  41524e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  415252:\t48 8b 00             \tmov    (%rax),%rax\n  415255:\tc6 00 00             \tmovb   $0x0,(%rax)\n  415258:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  41525c:\tc7 40 0c 00 00 00 00 \tmovl   $0x0,0xc(%rax)\n  415263:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  415267:\t8b 40 08             \tmov    0x8(%rax),%eax\n  41526a:\t83 e0 07             \tand    $0x7,%eax\n  41526d:\t89 c2                \tmov    %eax,%edx\n  41526f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  415273:\t89 50 08             \tmov    %edx,0x8(%rax)\n  415276:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  415279:\t5d                   \tpop    %rbp\n  41527a:\tc3                   \tret    ", "code_s": "int speex_bits_write_whole_bytes(long *<span class=\"supfact\">param_1</span>,\n                                 long <span class=\"supfact\">param_2</span>,\n                                 int <span class=\"supfact\">param_3</span>) {\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_c</span> = <span class=\"supfact\">param_3</span>;\n  if (*(int *)(<span class=\"supfact\">param_1</span> + Number) & gt; &gt; Number & lt;\n      <span class=\"supfact\">param_3</span>) {\n    <span class=\"supfact\">local_c</span> = *(int *)(<span class=\"supfact\">param_1</span> + Number) & gt;\n    &gt;\n    Number;\n  }\n  for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> & lt;\n       <span class=\"supfact\">local_c</span>;\n       <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n    *(undefined *)(<span class=\"supfact\">param_2</span> + <span class=\"supfact\">local_10</span>) = *(\n        undefined *)((long)<span class=\"supfact\">local_10</span> + *<span class=\"supfact\">param_1</span>);\n  }\n  if (*(int *)(<span class=\"supfact\">param_1</span> + Number) & lt; Number) {\n    *(undefined *)*<span class=\"supfact\">param_1</span> = Number;\n  } else {\n    *(undefined *)*<span class=\"supfact\">param_1</span> = *(\n        undefined *)(*<span class=\"supfact\">param_1</span> + (long)<span class=\"supfact\">local_c</span>);\n  }\n  *(undefined4 *)((long)<span class=\"supfact\">param_1</span> + Number) = Number;\n  *(uint *)(<span class=\"supfact\">param_1</span> + Number) =\n      *(uint *)(<span class=\"supfact\">param_1</span> + Number) & amp;\n  Number;\n  return <span class=\"supfact\">local_c</span>;\n}", "code_t": "int speex_bits_write_whole_bytes(SpeexBits *<span class=\"supfact\">bits</span>,\n                                 char *<span class=\"supfact\">chars</span>,\n                                 int <span class=\"supfact\">max_nbytes</span>) {\n  int <span class=\"supfact\">max_nbytes</span> - local;\n  char *<span class=\"supfact\">chars</span> - local;\n  SpeexBits *<span class=\"supfact\">bits</span> - local;\n  int <span class=\"supfact\">i</span>;\n  int <span class=\"supfact\">max_nchars</span>;\n  <span class=\"supfact\">max_nchars</span> = <span class=\"supfact\">max_nbytes</span>;\n  if (<span class=\"supfact\">bits</span> - &gt; nbBits & gt; &gt; Number & lt;\n      <span class=\"supfact\">max_nbytes</span>) {\n    <span class=\"supfact\">max_nchars</span> = <span class=\"supfact\">bits</span> - &gt;\n    nbBits &gt;\n    &gt;\n    Number;\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n       <span class=\"supfact\">max_nchars</span>;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    <span class=\"supfact\">chars</span>[<span class=\"supfact\">i</span>] = <span class=\"supfact\">bits</span> - &gt;\n    <span class=\"supfact\">chars</span>[<span class=\"supfact\">i</span>];\n  }\n  if (<span class=\"supfact\">bits</span> - &gt; bitPtr & lt; Number) {\n    *<span class=\"supfact\">bits</span> - &gt;\n    <span class=\"supfact\">chars</span> = String;\n  } else {\n    *<span class=\"supfact\">bits</span> - &gt;\n    <span class=\"supfact\">chars</span> = <span class=\"supfact\">bits</span> - &gt;\n    <span class=\"supfact\">chars</span>[<span class=\"supfact\">max_nchars</span>];\n  }\n  <span class=\"supfact\">bits</span> - &gt;\n  charPtr = Number;\n  <span class=\"supfact\">bits</span> - &gt;\n  nbBits = <span class=\"supfact\">bits</span> - &gt;\n  nbBits &amp;\n  Number;\n  return <span class=\"supfact\">max_nchars</span>;\n}", "var": [{"name": "param_1", "type": "SpeexBits * *", "pred_name": "bits", "ref_name": "bits", "ref_type": "SpeexBits * *"}, {"name": "param_2", "type": "char * *", "pred_name": "chars", "ref_name": "chars", "ref_type": "char * *"}, {"name": "param_3", "type": "int", "pred_name": "__unk__", "ref_name": "max_nbytes", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "__unk__", "ref_name": "max_nchars", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "anhquang", "repo_name": "contiki", "path": "anhquang/contiki/224e918571b88c4578ffb90fe2ee078b8284a196d5df2b5138c4d6d3926b1261", "path_in_repo": "anhquang/contiki/examples/rime/example-runicast.native", "objdump": "00000000004063fc <pir_sensor_changed>:\n  4063fc:\t55                   \tpush   %rbp\n  4063fd:\t48 89 e5             \tmov    %rsp,%rbp\n  406400:\t48 83 ec 10          \tsub    $0x10,%rsp\n  406404:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n  406407:\t8b 15 37 b8 00 00    \tmov    0xb837(%rip),%edx        # 411c44 <pir_value>\n  40640d:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  406410:\t01 d0                \tadd    %edx,%eax\n  406412:\t89 05 2c b8 00 00    \tmov    %eax,0xb82c(%rip)        # 411c44 <pir_value>\n  406418:\tbf 80 c2 40 00       \tmov    $0x40c280,%edi\n  40641d:\te8 f4 00 00 00       \tcall   406516 <sensors_changed>\n  406422:\t90                   \tnop\n  406423:\tc9                   \tleave  \n  406424:\tc3                   \tret    ", "code_s": "void pir_sensor_changed(int <span class=\"supfact\">param_1</span>) {\n  DAT_00411c44 = <span class=\"supfact\">param_1</span> + DAT_00411c44;\n  sensors_changed(pir_sensor);\n  return;\n}", "code_t": "void pir_sensor_changed(int <span class=\"supfact\">strength</span>) {\n  int <span class=\"supfact\">strength</span> - local;\n  pir_value = <span class=\"supfact\">strength</span> + pir_value;\n  sensors_changed(&amp; pir_sensor);\n  return;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "strength", "ref_name": "strength", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "xianggong", "repo_name": "m2c_unit_test", "path": "xianggong/m2c_unit_test/f09c9b2b0f60cb590a04d099247a9913ea796dc1f7724c1a2ebef396efcb51ed", "path_in_repo": "xianggong/m2c_unit_test/test/operator/remainder_ushort2ushort2/exe_src", "objdump": "", "code_s": "int putchar(int __c) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_putchar_00404028)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int putchar(int __c) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_putchar_00404028)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "alyptik", "repo_name": "derpgp", "path": "alyptik/derpgp/3121d840561a28e232a7d0f1295a100e765686c09eb283ceddcfd3c1df49437c", "path_in_repo": "alyptik/derpgp//t/test_div_algo", "objdump": "", "code_s": "int vprintf(char *__format, __gnuc_va_list __arg) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_vprintf_00403fc8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int vprintf(char *__format, __gnuc_va_list __arg) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_vprintf_00403fc8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "clostra", "repo_name": "newnode", "path": "clostra/newnode/9da00b67c4bd600369796ff811a4a09abecbe3309030f016562b6f240d424395", "path_in_repo": "clostra/newnode/libutp/libutp.so", "objdump": "00000000000053b0 <utp_create_socket>:\n    53b0:\t41 54                \tpush   %r12\n    53b2:\t53                   \tpush   %rbx\n    53b3:\t48 83 ec 08          \tsub    $0x8,%rsp\n    53b7:\t48 85 ff             \ttest   %rdi,%rdi\n    53ba:\t0f 84 b2 01 00 00    \tje     5572 <utp_create_socket+0x1c2>\n    53c0:\t48 89 fb             \tmov    %rdi,%rbx\n    53c3:\tbf a0 02 00 00       \tmov    $0x2a0,%edi\n    53c8:\te8 b3 ef ff ff       \tcall   4380 <malloc@plt>\n    53cd:\tb9 54 00 00 00       \tmov    $0x54,%ecx\n    53d2:\t49 89 c4             \tmov    %rax,%r12\n    53d5:\t31 c0                \txor    %eax,%eax\n    53d7:\t4c 89 e7             \tmov    %r12,%rdi\n    53da:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n    53dd:\t4c 89 e7             \tmov    %r12,%rdi\n    53e0:\te8 6b ef ff ff       \tcall   4350 <_ZN14PackedSockAddrC1Ev@plt>\n    53e5:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n    53e9:\tba 01 00 00 00       \tmov    $0x1,%edx\n    53ee:\t48 b8 00 00 00 00 20 \tmovabs $0x32000000000,%rax\n    53f5:\t03 00 00 \n    53f8:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    53fd:\tbf 10 00 00 00       \tmov    $0x10,%edi\n    5402:\t49 89 5c 24 18       \tmov    %rbx,0x18(%r12)\n    5407:\tf3 0f 6f 8b 30 01 00 \tmovdqu 0x130(%rbx),%xmm1\n    540e:\t00 \n    540f:\t49 89 84 24 b0 00 00 \tmov    %rax,0xb0(%r12)\n    5416:\t00 \n    5417:\t31 c0                \txor    %eax,%eax\n    5419:\t66 41 89 44 24 2a    \tmov    %ax,0x2a(%r12)\n    541f:\t48 b8 00 00 00 00 01 \tmovabs $0x100000000,%rax\n    5426:\t00 00 00 \n    5429:\t49 89 44 24 78       \tmov    %rax,0x78(%r12)\n    542e:\t48 8b 83 28 01 00 00 \tmov    0x128(%rbx),%rax\n    5435:\t66 41 89 94 24 80 00 \tmov    %dx,0x80(%r12)\n    543c:\t00 00 \n    543e:\t49 89 44 24 50       \tmov    %rax,0x50(%r12)\n    5443:\t48 8b 83 30 01 00 00 \tmov    0x130(%rbx),%rax\n    544a:\t41 0f 11 84 24 30 01 \tmovups %xmm0,0x130(%r12)\n    5451:\t00 00 \n    5453:\t41 0f 11 4c 24 40    \tmovups %xmm1,0x40(%r12)\n    5459:\t41 80 64 24 58 80    \tandb   $0x80,0x58(%r12)\n    545f:\t41 c7 44 24 68 00 00 \tmovl   $0x0,0x68(%r12)\n    5466:\t00 00 \n    5468:\t49 c7 84 24 50 01 00 \tmovq   $0x0,0x150(%r12)\n    546f:\t00 00 00 00 00 \n    5474:\t41 c7 84 24 28 01 00 \tmovl   $0x0,0x128(%r12)\n    547b:\t00 00 00 00 00 \n    5480:\t49 c7 44 24 30 00 00 \tmovq   $0x0,0x30(%r12)\n    5487:\t00 00 \n    5489:\t41 c7 84 24 44 02 00 \tmovl   $0x0,0x244(%r12)\n    5490:\t00 00 00 00 00 \n    5495:\t49 c7 84 24 48 02 00 \tmovq   $0x0,0x248(%r12)\n    549c:\t00 00 00 00 00 \n    54a1:\t49 c7 84 24 50 02 00 \tmovq   $0x0,0x250(%r12)\n    54a8:\t00 00 00 00 00 \n    54ad:\t49 c7 84 24 58 02 00 \tmovq   $0x0,0x258(%r12)\n    54b4:\t00 00 00 00 00 \n    54b9:\t49 c7 84 24 a0 00 00 \tmovq   $0x0,0xa0(%r12)\n    54c0:\t00 00 00 00 00 \n    54c5:\t49 c7 84 24 a8 00 00 \tmovq   $0x0,0xa8(%r12)\n    54cc:\t00 00 00 00 00 \n    54d1:\t41 c7 84 24 b8 00 00 \tmovl   $0xbb8,0xb8(%r12)\n    54d8:\t00 b8 0b 00 00 \n    54dd:\t49 c7 44 24 60 65 95 \tmovq   $0x59565,0x60(%r12)\n    54e4:\t05 00 \n    54e6:\t41 c7 84 24 84 00 00 \tmovl   $0x0,0x84(%r12)\n    54ed:\t00 00 00 00 00 \n    54f2:\t41 c6 84 24 90 02 00 \tmovb   $0x1,0x290(%r12)\n    54f9:\t00 01 \n    54fb:\t49 89 84 24 98 02 00 \tmov    %rax,0x298(%r12)\n    5502:\t00 \n    5503:\t49 c7 84 24 80 02 00 \tmovq   $0xf,0x280(%r12)\n    550a:\t00 0f 00 00 00 \n    550f:\t49 c7 84 24 68 02 00 \tmovq   $0x0,0x268(%r12)\n    5516:\t00 00 00 00 00 \n    551b:\t49 c7 84 24 70 02 00 \tmovq   $0xf,0x270(%r12)\n    5522:\t00 0f 00 00 00 \n    5527:\te8 34 ec ff ff       \tcall   4160 <calloc@plt>\n    552c:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    5531:\tbf 10 00 00 00       \tmov    $0x10,%edi\n    5536:\t49 89 84 24 88 02 00 \tmov    %rax,0x288(%r12)\n    553d:\t00 \n    553e:\te8 1d ec ff ff       \tcall   4160 <calloc@plt>\n    5543:\t41 c6 44 24 28 00    \tmovb   $0x0,0x28(%r12)\n    5549:\t49 89 84 24 78 02 00 \tmov    %rax,0x278(%r12)\n    5550:\t00 \n    5551:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    5556:\t49 89 44 24 20       \tmov    %rax,0x20(%r12)\n    555b:\t4c 89 e0             \tmov    %r12,%rax\n    555e:\t49 c7 84 24 28 02 00 \tmovq   $0x0,0x228(%r12)\n    5565:\t00 00 00 00 00 \n    556a:\t48 83 c4 08          \tadd    $0x8,%rsp\n    556e:\t5b                   \tpop    %rbx\n    556f:\t41 5c                \tpop    %r12\n    5571:\tc3                   \tret    \n    5572:\t48 8d 0d 07 6d 00 00 \tlea    0x6d07(%rip),%rcx        # c280 <_fini+0xc44>\n    5579:\tba 1f 0a 00 00       \tmov    $0xa1f,%edx\n    557e:\t48 8d 35 e5 79 00 00 \tlea    0x79e5(%rip),%rsi        # cf6a <_fini+0x192e>\n    5585:\t48 8d 3d a9 7a 00 00 \tlea    0x7aa9(%rip),%rdi        # d035 <_fini+0x19f9>\n    558c:\te8 bf eb ff ff       \tcall   4150 <__assert_fail@plt>\n    5591:\t66 66 2e 0f 1f 84 00 \tdata16 cs nopw 0x0(%rax,%rax,1)\n    5598:\t00 00 00 00 \n    559c:\t0f 1f 40 00          \tnopl   0x0(%rax)", "code_s": "undefined8 *utp_create_socket(long <span class=\"supfact\">param_1</span>) {\n  undefined8 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined8 *this;\n  void *pvVar6;\n  long <span class=\"supfact\">lVar7</span>;\n  undefined8 *puVar8;\n  byte <span class=\"supfact\">bVar9</span>;\n  <span class=\"supfact\">bVar9</span> = Number;\n  if (<span class=\"supfact\">param_1</span> == Number) {\n    __assert_fail(String, String, Number, String);\n  }\n  this = (undefined8 *)malloc(Number);\n  puVar8 = this;\n  for (<span class=\"supfact\">lVar7</span> = Number; <span class=\"supfact\">lVar7</span> != Number;\n       <span class=\"supfact\">lVar7</span> = <span class=\"supfact\">lVar7</span> + -Number) {\n    *puVar8 = Number;\n    puVar8 = puVar8 + (ulong)<span class=\"supfact\">bVar9</span> * -Number + Number;\n  }\n  PackedSockAddr PackedSockAddr((PackedSockAddr *)this);\n  this[Number] = <span class=\"supfact\">param_1</span>;\n  uVar2 = *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n  uVar3 = *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n  uVar4 = *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n  uVar5 = *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n  this[Number] = Number;\n  *(undefined2 *)((long)this + Number) = Number;\n  this[Number] = Number;\n  uVar1 = *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n  *(undefined2 *)(this + Number) = Number;\n  this[Number] = uVar1;\n  uVar1 = *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n  *(undefined(*)[Number])(this + Number) = (undefined[Number])Number;\n  *(undefined4 *)(this + Number) = uVar2;\n  *(undefined4 *)((long)this + Number) = uVar3;\n  *(undefined4 *)(this + Number) = uVar4;\n  *(undefined4 *)((long)this + Number) = uVar5;\n  *(byte *)(this + Number) = *(byte *)(this + Number) & amp;\n  Number;\n  *(undefined4 *)(this + Number) = Number;\n  this[Number] = Number;\n  *(undefined4 *)(this + Number) = Number;\n  this[Number] = Number;\n  *(undefined4 *)((long)this + Number) = Number;\n  this[Number] = Number;\n  this[Number] = Number;\n  this[Number] = Number;\n  this[Number] = Number;\n  this[Number] = Number;\n  *(undefined4 *)(this + Number) = Number;\n  this[Number] = Number;\n  *(undefined4 *)((long)this + Number) = Number;\n  *(undefined *)(this + Number) = Number;\n  this[Number] = uVar1;\n  this[Number] = Number;\n  this[Number] = Number;\n  this[Number] = Number;\n  pvVar6 = calloc(Number, Number);\n  this[Number] = pvVar6;\n  pvVar6 = calloc(Number, Number);\n  *(undefined *)(this + Number) = Number;\n  this[Number] = pvVar6;\n  this[Number] = Number;\n  this[Number] = Number;\n  return this;\n}", "code_t": "utp_socket *utp_create_socket(utp_context *<span class=\"supfact\">ctx</span>) {\n  size_t sVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  utp_socket *this;\n  void **ppvVar6;\n  long <span class=\"supfact\">lVar7</span>;\n  utp_socket *puVar8;\n  byte <span class=\"supfact\">bVar9</span>;\n  <span class=\"supfact\">bVar9</span> = Number;\n  if (<span class=\"supfact\">ctx</span> == (utp_context *)Number) {\n    __assert_fail(String, String, Number, String);\n  }\n  this = (utp_socket *)malloc(Number);\n  puVar8 = this;\n  for (<span class=\"supfact\">lVar7</span> = Number; <span class=\"supfact\">lVar7</span> != Number;\n       <span class=\"supfact\">lVar7</span> = <span class=\"supfact\">lVar7</span> + -Number) {\n    *(undefined8 *)&amp;\n    (puVar8 - &gt; addr)._in = Number;\n    puVar8 = (utp_socket *)((long)puVar8 +\n                            (ulong)<span class=\"supfact\">bVar9</span> * -Number + Number);\n  }\n  PackedSockAddr PackedSockAddr((PackedSockAddr *)this);\n  this - &gt;\n  <span class=\"supfact\">ctx</span> = <span class=\"supfact\">ctx</span>;\n  uVar2 = *(undefined4 *)&amp;\n  <span class=\"supfact\">ctx</span> - &gt;\n  opt_sndbuf;\n  uVar3 = *(undefined4 *)((long)&amp; <span class=\"supfact\">ctx</span> - &gt;\n                          opt_sndbuf + Number);\n  uVar4 = *(undefined4 *)&amp;\n  <span class=\"supfact\">ctx</span> - &gt;\n  opt_rcvbuf;\n  uVar5 = *(undefined4 *)((long)&amp; <span class=\"supfact\">ctx</span> - &gt;\n                          opt_rcvbuf + Number);\n  this - &gt;\n  rtt = Number;\n  this - &gt;\n  rtt_var = Number;\n  this - &gt;\n  cur_window_packets = Number;\n  this - &gt;\n  eof_pkt = Number;\n  this - &gt;\n  ack_nr = Number;\n  this - &gt;\n  seq_nr = Number;\n  this - &gt;\n  timeout_seq_nr = Number;\n  sVar1 = <span class=\"supfact\">ctx</span> - &gt;\n  target_delay;\n  this - &gt;\n  fast_resend_seq_nr = Number;\n  this - &gt;\n  target_delay = sVar1;\n  sVar1 = <span class=\"supfact\">ctx</span> - &gt;\n  opt_sndbuf;\n  this - &gt;\n  rto_timeout = Number;\n  this - &gt;\n  zerowindow_time = Number;\n  *(undefined4 *)&amp;\n  this - &gt;\n  opt_sndbuf = uVar2;\n  *(undefined4 *)((long)&amp; this - &gt; opt_sndbuf + Number) = uVar3;\n  *(undefined4 *)&amp;\n  this - &gt;\n  opt_rcvbuf = uVar4;\n  *(undefined4 *)((long)&amp; this - &gt; opt_rcvbuf + Number) = uVar5;\n  this - &gt;\n  field_0x58 = this - &gt;\n  field_0x58 &amp;\n  Number;\n  this - &gt;\n  state = CS_UNINITIALIZED;\n  this - &gt;\n  last_rcv_win = Number;\n  this - &gt;\n  retransmit_timeout = Number;\n  this - &gt;\n  cur_window = Number;\n  this - &gt;\n  mtu_probe_seq = Number;\n  this - &gt;\n  mtu_probe_size = Number;\n  this - &gt;\n  average_delay = Number;\n  this - &gt;\n  current_delay_sum = Number;\n  this - &gt;\n  current_delay_samples = Number;\n  this - &gt;\n  average_delay_base = Number;\n  this - &gt;\n  last_maxed_out_window = Number;\n  this - &gt;\n  userdata = (void *)Number;\n  this - &gt;\n  rto = Number;\n  this - &gt;\n  max_window_user = Number;\n  this - &gt;\n  reply_micro = Number;\n  this - &gt;\n  slow_start = true;\n  this - &gt;\n  ssthresh = sVar1;\n  (this - &gt; outbuf).mask = Number;\n  this - &gt;\n  clock_drift = Number;\n  this - &gt;\n  clock_drift_raw = Number;\n  (this - &gt; inbuf).mask = Number;\n  ppvVar6 = (void **)calloc(Number, Number);\n  (this - &gt; outbuf).elements = ppvVar6;\n  ppvVar6 = (void **)calloc(Number, Number);\n  this - &gt;\n  duplicate_ack = String;\n  (this - &gt; inbuf).elements = ppvVar6;\n  this - &gt;\n  ida = -Number;\n  this - &gt;\n  retransmit_count = Number;\n  this - &gt;\n  reorder_count = Number;\n  *(undefined8 *)this - &gt;\n  extensions = Number;\n  return this;\n}", "var": [{"name": "param_1", "type": "void * *", "pred_name": "param_1", "ref_name": "ctx", "ref_type": "utp_context * *"}, {"name": "lVar7", "type": "long", "pred_name": "lVar7", "ref_name": "lVar7", "ref_type": "long"}, {"name": "bVar9", "type": "byte", "pred_name": "bVar9", "ref_name": "bVar9", "ref_type": "byte"}], "body_in_train": false}, {"repo_owner": "chmduquesne", "repo_name": "nosync", "path": "chmduquesne/nosync/0cfd4042c2a6e41e1a2e4a89b983d514060eb8f0dec9e5f24f2cea70aa9bd87e", "path_in_repo": "chmduquesne/nosync//libnosync.so", "objdump": "0000000000001965 <init>:\n    1965:\t55                   \tpush   %rbp\n    1966:\t48 89 e5             \tmov    %rsp,%rbp\n    1969:\tba 88 00 00 00       \tmov    $0x88,%edx\n    196e:\tbe 0b 00 00 00       \tmov    $0xb,%esi\n    1973:\t48 8d 3d 10 08 00 00 \tlea    0x810(%rip),%rdi        # 218a <_fini+0x632>\n    197a:\te8 f1 f7 ff ff       \tcall   1170 <openlog@plt>\n    197f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1984:\te8 a7 f7 ff ff       \tcall   1130 <inituser@plt>\n    1989:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    198e:\te8 7d f7 ff ff       \tcall   1110 <initprocess@plt>\n    1993:\t48 8b 05 06 26 00 00 \tmov    0x2606(%rip),%rax        # 3fa0 <user@@Base-0x180>\n    199a:\t48 89 c1             \tmov    %rax,%rcx\n    199d:\t48 8b 05 0c 26 00 00 \tmov    0x260c(%rip),%rax        # 3fb0 <process@@Base-0x190>\n    19a4:\t48 89 c2             \tmov    %rax,%rdx\n    19a7:\t48 8d 35 e6 07 00 00 \tlea    0x7e6(%rip),%rsi        # 2194 <_fini+0x63c>\n    19ae:\tbf 05 00 00 00       \tmov    $0x5,%edi\n    19b3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    19b8:\te8 63 f7 ff ff       \tcall   1120 <syslog@plt>\n    19bd:\te8 7e f6 ff ff       \tcall   1040 <initsymbols@plt>\n    19c2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    19c7:\te8 b4 f7 ff ff       \tcall   1180 <readconfig@plt>\n    19cc:\t90                   \tnop\n    19cd:\t5d                   \tpop    %rbp\n    19ce:\tc3                   \tret    ", "code_s": "int init(EVP_PKEY_CTX *ctx) {\n  int <span class=\"supfact\">iVar1</span>;\n  openlog(String, Number, Number);\n  inituser();\n  initprocess();\n  syslog(Number, String, PTR_process_00103fb0, PTR_user_00103fa0);\n  initsymbols();\n  <span class=\"supfact\">iVar1</span> = readconfig();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int init(EVP_PKEY_CTX *ctx) {\n  int <span class=\"supfact\">extraout_EAX</span>;\n  openlog(String, Number, Number);\n  inituser();\n  initprocess();\n  syslog(Number, String, PTR_process_00103fb0, PTR_user_00103fa0);\n  initsymbols();\n  readconfig();\n  return <span class=\"supfact\">extraout_EAX</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "extraout_EAX", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "richj25", "repo_name": "pthreads", "path": "richj25/pthreads/d2097ad0b151c147e95c12cf14f7ff651a4d899cd716ae7b763d063f0d021268", "path_in_repo": "richj25/pthreads/test/posixtestsuite/conformance/interfaces/sched_setparam/3-1.test", "objdump": "", "code_s": "int puts(char *__s) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*_DAT_00404018)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int puts(char *__s) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*_DAT_00404018)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "rogerq", "repo_name": "ltp-ddt", "path": "rogerq/ltp-ddt/56d7984aa27a775ed19db3d0598d5f9704b76da1e22e8d0f5b8c55ac5683a96b", "path_in_repo": "rogerq/ltp-ddt/testcases/network/sockets/ltpServer", "objdump": "", "code_s": "int printf(char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_printf_00404048)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int printf(char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_printf_00404048)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "foresthz", "repo_name": "op", "path": "foresthz/op/df8986ef04e2a1af4957bf55690420b14374b17fe22038d7dbae41aa56d1513d", "path_in_repo": "foresthz/op/trunk/package/network/services/ead/src/tinysrp/tconf", "objdump": "", "code_s": "int fprintf(FILE *__stream, char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fprintf_00411090)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int fprintf(FILE *__stream, char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fprintf_00411090)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "amremam2004", "repo_name": "pjsip-trunk", "path": "amremam2004/pjsip-trunk/99aaa9f9ea944575f6e73434e074f6b410f36dfc5bfd3fe914004442c55bfc6d", "path_in_repo": "amremam2004/pjsip-trunk//pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/httpdemo", "objdump": "", "code_s": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_00452330)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_00452330)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "amremam2004", "repo_name": "pjsip-trunk", "path": "amremam2004/pjsip-trunk/99aaa9f9ea944575f6e73434e074f6b410f36dfc5bfd3fe914004442c55bfc6d", "path_in_repo": "amremam2004/pjsip-trunk//pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/httpdemo", "objdump": "", "code_s": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_00452330)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_00452330)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "presentzeng", "repo_name": "2014", "path": "presentzeng/2014/6dc2db20b261270c63b65b949eb8df587c63c97cc8e839482fc3e98e427ac5ac", "path_in_repo": "presentzeng/2014/Readn/test", "objdump": "", "code_s": "void *memcpy(void *__dest, void *__src, size_t __n) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*_DAT_00404028)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *memcpy(void *__dest, void *__src, size_t __n) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*_DAT_00404028)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "Fleuri", "repo_name": "NetworkWeek6", "path": "Fleuri/NetworkWeek6/0b76053dda0b91cea3f1b06e89dbe24f99382a2a3ca683a953c1c1f5e070903b", "path_in_repo": "Fleuri/NetworkWeek6/unpv22e/mutex/prodcons1", "objdump": "", "code_s": "int pthread_key_create(pthread_key_t *__key,\n                       __destr_function *__destr_function) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_key_create_004060f0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int pthread_key_create(pthread_key_t *__key,\n                       __destr_function *__destr_function) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_key_create_004060f0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "camargodev", "repo_name": "compilers", "path": "camargodev/compilers/ede81eec97f7cefab827bd5ebd8d3f3bcd6d039cb4f012f86bf63ec98e3ec416", "path_in_repo": "camargodev/compilers/part-1/etapa1", "objdump": "", "code_s": "int ferror(FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_ferror_00408028)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int ferror(FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_ferror_00408028)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "benjaminlevine", "repo_name": "hostapd-devel-mtlk", "path": "benjaminlevine/hostapd-devel-mtlk/234e0d18ecb998e22fc74d2a920b77bc95e1212a9b82e81c95d50aa8a5d41bfc", "path_in_repo": "benjaminlevine/hostapd-devel-mtlk/wpaspy/build/lib.linux-x86_64-2.7/wpaspy.so", "objdump": "00000000000031f0 <os_file_exists>:\n    31f0:\t48 83 ec 08          \tsub    $0x8,%rsp\n    31f4:\t31 f6                \txor    %esi,%esi\n    31f6:\te8 d5 f0 ff ff       \tcall   22d0 <access@plt>\n    31fb:\t85 c0                \ttest   %eax,%eax\n    31fd:\t0f 94 c0             \tsete   %al\n    3200:\t48 83 c4 08          \tadd    $0x8,%rsp\n    3204:\t0f b6 c0             \tmovzbl %al,%eax\n    3207:\tc3                   \tret    \n    3208:\t0f 1f 84 00 00 00 00 \tnopl   0x0(%rax,%rax,1)\n    320f:\t00 ", "code_s": "bool os_file_exists(char *<span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = access(<span class=\"supfact\">param_1</span>, Number);\n  return <span class=\"supfact\">iVar1</span> == Number;\n}", "code_t": "int os_file_exists(char *<span class=\"supfact\">fname</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = access(<span class=\"supfact\">fname</span>, Number);\n  return (int)(<span class=\"supfact\">iVar1</span> == Number);\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "fname", "ref_name": "fname", "ref_type": "char * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "GeorgeZhuo", "repo_name": "execise", "path": "GeorgeZhuo/execise/17fab6015e7290e3f694f86f0976ddfaf58041de5784a1fb000389f643ffdec6", "path_in_repo": "GeorgeZhuo/execise/apue/apue.3e/printer/printd", "objdump": "", "code_s": "ssize_t writev(int __fd, iovec *__iovec, int __count) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_writev_00409060)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "ssize_t writev(int __fd, iovec *__iovec, int __count) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_writev_00409060)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "ssize_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "ssize_t"}], "body_in_train": true}, {"repo_owner": "clostra", "repo_name": "newnode", "path": "clostra/newnode/9da00b67c4bd600369796ff811a4a09abecbe3309030f016562b6f240d424395", "path_in_repo": "clostra/newnode/libutp/libutp.so", "objdump": "", "code_s": "void utp_default_get_microseconds(utp_callback_arguments *param_1) {\n  uint <span class=\"supfact\">uVar1</span>;\n  ulong <span class=\"supfact\">uVar2</span>;\n  long <span class=\"supfact\">lVar3</span>;\n  timespec <span class=\"supfact\">local_18</span>;\n  if ((int)DAT_00110288 & lt; Number) {\n    <span class=\"supfact\">uVar1</span> =\n        clock_gettime(Number, &amp; <span class=\"supfact\">local_18</span>);\n    DAT_00110288 = ~<span class=\"supfact\">uVar1</span> & gt;\n    &gt;\n    Number;\n  }\n  if (DAT_00110288 == Number) {\n    gettimeofday((timeval *)&amp;\n                 <span class=\"supfact\">local_18</span>, (__timezone_ptr_t)Number);\n    <span class=\"supfact\">lVar3</span> = <span class=\"supfact\">local_18</span>.tv_sec * Number +\n                            <span class=\"supfact\">local_18</span>.tv_nsec;\n  } else {\n    clock_gettime(Number, &amp; <span class=\"supfact\">local_18</span>);\n    <span class=\"supfact\">lVar3</span> = (ulong)<span class=\"supfact\">local_18</span>.tv_nsec / Number +\n                            <span class=\"supfact\">local_18</span>.tv_sec * Number;\n  }\n  <span class=\"supfact\">uVar2</span> = DAT_00114408 + <span class=\"supfact\">lVar3</span>;\n  if ((ulong)(DAT_00114408 + <span class=\"supfact\">lVar3</span>) & lt; DAT_00114400) {\n    DAT_00114408 = DAT_00114400 - <span class=\"supfact\">lVar3</span>;\n    <span class=\"supfact\">uVar2</span> = DAT_00114400;\n  }\n  DAT_00114400 = <span class=\"supfact\">uVar2</span>;\n  return;\n}", "code_t": "uint64 utp_default_get_microseconds(utp_callback_arguments *args) {\n  uint uVar1;\n  int rc;\n  uint64 now;\n  ulong uVar2;\n  long <span class=\"supfact\">lVar3</span>;\n  timeval <span class=\"supfact\">tv</span>;\n  if ((int)__GetMicroseconds() have_posix_clocks & lt; Number) {\n    uVar1 = clock_gettime(Number, (timespec *)&amp; <span class=\"supfact\">tv</span>);\n    rc = ~uVar1;\n    __GetMicroseconds() have_posix_clocks = (uint)rc & gt;\n    &gt;\n    Number;\n  }\n  if (__GetMicroseconds() have_posix_clocks == Number) {\n    gettimeofday((timeval *)&amp; <span class=\"supfact\">tv</span>, (__timezone_ptr_t)Number);\n    <span class=\"supfact\">lVar3</span> =\n        <span class=\"supfact\">tv</span>.tv_sec * Number + <span class=\"supfact\">tv</span>.tv_usec;\n  } else {\n    clock_gettime(Number, (timespec *)&amp; <span class=\"supfact\">tv</span>);\n    <span class=\"supfact\">lVar3</span> = (ulong)<span class=\"supfact\">tv</span>.tv_usec / Number +\n                            <span class=\"supfact\">tv</span>.tv_sec * Number;\n  }\n  uVar2 = UTP_GetMicroseconds() offset + <span class=\"supfact\">lVar3</span>;\n  if ((ulong)(UTP_GetMicroseconds() offset + <span class=\"supfact\">lVar3</span>) & lt;\n      UTP_GetMicroseconds() previous) {\n    UTP_GetMicroseconds() offset =\n        UTP_GetMicroseconds() previous - <span class=\"supfact\">lVar3</span>;\n    uVar2 = UTP_GetMicroseconds() previous;\n  }\n  UTP_GetMicroseconds() previous = uVar2;\n  return uVar2;\n}", "var": [{"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uVar2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "lVar3", "type": "long", "pred_name": "lVar3", "ref_name": "lVar3", "ref_type": "long"}, {"name": "local_18", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "pred_name": "tv", "ref_name": "tv", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}], "body_in_train": false}, {"repo_owner": "daydaygit", "repo_name": "smdk6410_sameVsnAsFL", "path": "daydaygit/smdk6410_sameVsnAsFL/c99872ec31819c23e30b2203c835c40a943436e5015f0064dabe086320f20f6f", "path_in_repo": "daydaygit/smdk6410_sameVsnAsFL/rootfs/yaffs2/direct/python/libyaffsfs.so", "objdump": "000000000001b725 <yaffs_unpack_tags2_tags_only>:\n   1b725:\t55                   \tpush   %rbp\n   1b726:\t48 89 e5             \tmov    %rsp,%rbp\n   1b729:\t48 83 ec 10          \tsub    $0x10,%rsp\n   1b72d:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n   1b731:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n   1b735:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b739:\tba 40 00 00 00       \tmov    $0x40,%edx\n   1b73e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   1b743:\t48 89 c7             \tmov    %rax,%rdi\n   1b746:\te8 55 bd fe ff       \tcall   74a0 <memset@plt>\n   1b74b:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b74f:\t8b 00                \tmov    (%rax),%eax\n   1b751:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n   1b754:\t0f 84 3f 01 00 00    \tje     1b899 <yaffs_unpack_tags2_tags_only+0x174>\n   1b75a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b75e:\tc7 40 14 00 00 00 00 \tmovl   $0x0,0x14(%rax)\n   1b765:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b769:\tc7 00 01 00 00 00    \tmovl   $0x1,(%rax)\n   1b76f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b773:\t8b 50 04             \tmov    0x4(%rax),%edx\n   1b776:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b77a:\t89 50 04             \tmov    %edx,0x4(%rax)\n   1b77d:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b781:\t8b 50 08             \tmov    0x8(%rax),%edx\n   1b784:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b788:\t89 50 08             \tmov    %edx,0x8(%rax)\n   1b78b:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b78f:\t8b 50 0c             \tmov    0xc(%rax),%edx\n   1b792:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b796:\t89 50 0c             \tmov    %edx,0xc(%rax)\n   1b799:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b79d:\tc7 40 18 00 00 00 00 \tmovl   $0x0,0x18(%rax)\n   1b7a4:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b7a8:\tc7 40 1c 00 00 00 00 \tmovl   $0x0,0x1c(%rax)\n   1b7af:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b7b3:\t8b 10                \tmov    (%rax),%edx\n   1b7b5:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b7b9:\t89 50 20             \tmov    %edx,0x20(%rax)\n   1b7bc:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b7c0:\t8b 40 08             \tmov    0x8(%rax),%eax\n   1b7c3:\t85 c0                \ttest   %eax,%eax\n   1b7c5:\t0f 89 b4 00 00 00    \tjns    1b87f <yaffs_unpack_tags2_tags_only+0x15a>\n   1b7cb:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b7cf:\tc7 40 08 00 00 00 00 \tmovl   $0x0,0x8(%rax)\n   1b7d6:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b7da:\tc7 40 0c 00 00 00 00 \tmovl   $0x0,0xc(%rax)\n   1b7e1:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b7e5:\tc7 40 24 01 00 00 00 \tmovl   $0x1,0x24(%rax)\n   1b7ec:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b7f0:\t8b 40 08             \tmov    0x8(%rax),%eax\n   1b7f3:\t25 ff ff ff 0f       \tand    $0xfffffff,%eax\n   1b7f8:\t89 c2                \tmov    %eax,%edx\n   1b7fa:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b7fe:\t89 50 28             \tmov    %edx,0x28(%rax)\n   1b801:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b805:\t8b 40 08             \tmov    0x8(%rax),%eax\n   1b808:\tc1 e8 1e             \tshr    $0x1e,%eax\n   1b80b:\t83 e0 01             \tand    $0x1,%eax\n   1b80e:\t89 c2                \tmov    %eax,%edx\n   1b810:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b814:\t89 50 2c             \tmov    %edx,0x2c(%rax)\n   1b817:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b81b:\t8b 40 08             \tmov    0x8(%rax),%eax\n   1b81e:\tc1 e8 1d             \tshr    $0x1d,%eax\n   1b821:\t83 e0 01             \tand    $0x1,%eax\n   1b824:\t89 c2                \tmov    %eax,%edx\n   1b826:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b82a:\t89 50 30             \tmov    %edx,0x30(%rax)\n   1b82d:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b831:\t8b 40 04             \tmov    0x4(%rax),%eax\n   1b834:\tc1 e8 1c             \tshr    $0x1c,%eax\n   1b837:\t89 c2                \tmov    %eax,%edx\n   1b839:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b83d:\t89 50 34             \tmov    %edx,0x34(%rax)\n   1b840:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b844:\t8b 40 04             \tmov    0x4(%rax),%eax\n   1b847:\t25 ff ff ff 0f       \tand    $0xfffffff,%eax\n   1b84c:\t89 c2                \tmov    %eax,%edx\n   1b84e:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b852:\t89 50 04             \tmov    %edx,0x4(%rax)\n   1b855:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b859:\t8b 40 34             \tmov    0x34(%rax),%eax\n   1b85c:\t83 f8 04             \tcmp    $0x4,%eax\n   1b85f:\t75 10                \tjne    1b871 <yaffs_unpack_tags2_tags_only+0x14c>\n   1b861:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b865:\t8b 50 0c             \tmov    0xc(%rax),%edx\n   1b868:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b86c:\t89 50 3c             \tmov    %edx,0x3c(%rax)\n   1b86f:\teb 0e                \tjmp    1b87f <yaffs_unpack_tags2_tags_only+0x15a>\n   1b871:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b875:\t8b 50 0c             \tmov    0xc(%rax),%edx\n   1b878:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b87c:\t89 50 38             \tmov    %edx,0x38(%rax)\n   1b87f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b883:\t48 89 c7             \tmov    %rax,%rdi\n   1b886:\te8 18 fc ff ff       \tcall   1b4a3 <yaffs_dump_packed_tags2_tags_only>\n   1b88b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1b88f:\t48 89 c7             \tmov    %rax,%rdi\n   1b892:\te8 79 fc ff ff       \tcall   1b510 <yaffs_dump_tags2>\n   1b897:\teb 01                \tjmp    1b89a <yaffs_unpack_tags2_tags_only+0x175>\n   1b899:\t90                   \tnop\n   1b89a:\tc9                   \tleave  \n   1b89b:\tc3                   \tret    ", "code_s": "void yaffs_unpack_tags2_tags_only(undefined4 *<span class=\"supfact\">param_1</span>,\n                                  int *<span class=\"supfact\">param_2</span>) {\n  memset(<span class=\"supfact\">param_1</span>, Number, Number);\n  if (*<span class=\"supfact\">param_2</span> != -Number) {\n    <span class=\"supfact\">param_1</span>[Number] = Number;\n    *<span class=\"supfact\">param_1</span> = Number;\n    <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">param_2</span>[Number];\n    <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">param_2</span>[Number];\n    <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">param_2</span>[Number];\n    <span class=\"supfact\">param_1</span>[Number] = Number;\n    <span class=\"supfact\">param_1</span>[Number] = Number;\n    <span class=\"supfact\">param_1</span>[Number] = *<span class=\"supfact\">param_2</span>;\n    if (<span class=\"supfact\">param_2</span>[Number] & lt; Number) {\n      <span class=\"supfact\">param_1</span>[Number] = Number;\n      <span class=\"supfact\">param_1</span>[Number] = Number;\n      <span class=\"supfact\">param_1</span>[Number] = Number;\n      <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">param_2</span>[Number] & amp;\n      Number;\n      <span class=\"supfact\">param_1</span>[Number] =\n          (uint)<span class=\"supfact\">param_2</span>[Number] & gt;\n      &gt;\n      Number &amp;\n      Number;\n      <span class=\"supfact\">param_1</span>[Number] =\n          (uint)<span class=\"supfact\">param_2</span>[Number] & gt;\n      &gt;\n      Number &amp;\n      Number;\n      <span class=\"supfact\">param_1</span>[Number] =\n          (uint)<span class=\"supfact\">param_2</span>[Number] & gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">param_1</span>[Number] & amp;\n      Number;\n      if (<span class=\"supfact\">param_1</span>[Number] == Number) {\n        <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">param_2</span>[Number];\n      } else {\n        <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">param_2</span>[Number];\n      }\n    }\n    FUN_0011b4a3(<span class=\"supfact\">param_2</span>);\n    FUN_0011b510(<span class=\"supfact\">param_1</span>);\n  }\n  return;\n}", "code_t": "void yaffs_unpack_tags2_tags_only(\n    yaffs_ext_tags *<span class=\"supfact\">t</span>,\n    yaffs_packed_tags2_tags_only *<span class=\"supfact\">ptt</span>) {\n  (*(code *)PTR_yaffs_unpack_tags2_tags_only_0012f228)();\n  return;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "flags", "ref_name": "t", "ref_type": "yaffs_ext_tags * *"}, {"name": "param_2", "type": "__unk__", "pred_name": "__unk__", "ref_name": "ptt", "ref_type": "yaffs_packed_tags2_tags_only * *"}], "body_in_train": false}, {"repo_owner": "amremam2004", "repo_name": "pjsip-trunk", "path": "amremam2004/pjsip-trunk/99aaa9f9ea944575f6e73434e074f6b410f36dfc5bfd3fe914004442c55bfc6d", "path_in_repo": "amremam2004/pjsip-trunk//pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/httpdemo", "objdump": "00000000004149f5 <gsm_asl>:\n  4149f5:\t55                   \tpush   %rbp\n  4149f6:\t48 89 e5             \tmov    %rsp,%rbp\n  4149f9:\t48 83 ec 10          \tsub    $0x10,%rsp\n  4149fd:\t89 f8                \tmov    %edi,%eax\n  4149ff:\t89 75 f8             \tmov    %esi,-0x8(%rbp)\n  414a02:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  414a06:\t83 7d f8 0f          \tcmpl   $0xf,-0x8(%rbp)\n  414a0a:\t7e 07                \tjle    414a13 <gsm_asl+0x1e>\n  414a0c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  414a11:\teb 3e                \tjmp    414a51 <gsm_asl+0x5c>\n  414a13:\t83 7d f8 f1          \tcmpl   $0xfffffff1,-0x8(%rbp)\n  414a17:\t7d 0f                \tjge    414a28 <gsm_asl+0x33>\n  414a19:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  414a1d:\t66 c1 e8 0f          \tshr    $0xf,%ax\n  414a21:\t0f b6 c0             \tmovzbl %al,%eax\n  414a24:\tf7 d8                \tneg    %eax\n  414a26:\teb 29                \tjmp    414a51 <gsm_asl+0x5c>\n  414a28:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n  414a2c:\t79 16                \tjns    414a44 <gsm_asl+0x4f>\n  414a2e:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  414a31:\tf7 d8                \tneg    %eax\n  414a33:\t89 c2                \tmov    %eax,%edx\n  414a35:\t0f bf 45 fc          \tmovswl -0x4(%rbp),%eax\n  414a39:\t89 d6                \tmov    %edx,%esi\n  414a3b:\t89 c7                \tmov    %eax,%edi\n  414a3d:\te8 6a 00 00 00       \tcall   414aac <gsm_asr>\n  414a42:\teb 0d                \tjmp    414a51 <gsm_asl+0x5c>\n  414a44:\t0f bf 55 fc          \tmovswl -0x4(%rbp),%edx\n  414a48:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  414a4b:\t89 c1                \tmov    %eax,%ecx\n  414a4d:\td3 e2                \tshl    %cl,%edx\n  414a4f:\t89 d0                \tmov    %edx,%eax\n  414a51:\tc9                   \tleave  \n  414a52:\tc3                   \tret    ", "code_s": "ulong gsm_asl(short <span class=\"supfact\">param_1</span>, int <span class=\"supfact\">param_2</span>) {\n  ulong <span class=\"supfact\">uVar1</span>;\n  if (<span class=\"supfact\">param_2</span> & lt; Number) {\n    if (<span class=\"supfact\">param_2</span> & lt; - Number) {\n      <span class=\"supfact\">uVar1</span> =\n          (ulong) -\n          (uint)(byte)((ushort)<span class=\"supfact\">param_1</span> & gt; &gt; Number);\n    } else if (<span class=\"supfact\">param_2</span> & lt; Number) {\n      <span class=\"supfact\">uVar1</span> =\n          gsm_asr((int)<span class=\"supfact\">param_1</span>, -<span class=\"supfact\">param_2</span>);\n    } else {\n      <span class=\"supfact\">uVar1</span> =\n          (ulong)(uint)((int)<span class=\"supfact\">param_1</span> & lt; &lt;\n                        ((byte)<span class=\"supfact\">param_2</span> & amp; Number));\n    }\n  } else {\n    <span class=\"supfact\">uVar1</span> = Number;\n  }\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "word gsm_asl(word <span class=\"supfact\">a</span>, int <span class=\"supfact\">n</span>) {\n  short sVar1;\n  int <span class=\"supfact\">n</span> - local;\n  word <span class=\"supfact\">a</span> - local;\n  if (<span class=\"supfact\">n</span> & lt; Number) {\n    if (<span class=\"supfact\">n</span> & lt; - Number) {\n      sVar1 = <span class=\"supfact\">a</span> & gt;\n      &gt;\n      Number;\n    } else if (<span class=\"supfact\">n</span> & lt; Number) {\n      sVar1 = gsm_asr(<span class=\"supfact\">a</span>, -<span class=\"supfact\">n</span>);\n    } else {\n      sVar1 = (short)((int)<span class=\"supfact\">a</span> & lt; &lt;\n                      ((byte)<span class=\"supfact\">n</span> & amp; Number));\n    }\n  } else {\n    sVar1 = Number;\n  }\n  return sVar1;\n}", "var": [{"name": "param_1", "type": "word", "pred_name": "a", "ref_name": "a", "ref_type": "word"}, {"name": "param_2", "type": "int", "pred_name": "n", "ref_name": "n", "ref_type": "int"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "mnhrdt", "repo_name": "imscript", "path": "mnhrdt/imscript/69accb9029669bb26ebf6bf07e12f40ee6f48b1497740f36e08bc9fdfa1a6160", "path_in_repo": "mnhrdt/imscript/src/fancy_crop", "objdump": "", "code_s": "int vfprintf(FILE *__s, char *__format, __gnuc_va_list __arg) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_vfprintf_00421100)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int vfprintf(FILE *__s, char *__format, __gnuc_va_list __arg) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_vfprintf_00421100)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "clostra", "repo_name": "newnode", "path": "clostra/newnode/9da00b67c4bd600369796ff811a4a09abecbe3309030f016562b6f240d424395", "path_in_repo": "clostra/newnode/libutp/libutp.so", "objdump": "", "code_s": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_001101c0)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_001101c0)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "rikka0w0", "repo_name": "l4d2_motd", "path": "rikka0w0/l4d2_motd/ccc72dc2782fa12fef8ea6be081fd2c6f1515a29ee8041e5484cff6ed96b1347", "path_in_repo": "rikka0w0/l4d2_motd//motdsvr", "objdump": "", "code_s": "char *inet_ntoa(in_addr __in) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_inet_ntoa_004050e8)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *inet_ntoa(in_addr __in) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_inet_ntoa_004050e8)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": true}, {"repo_owner": "macmanes-lab", "repo_name": "wgs-assembler", "path": "macmanes-lab/wgs-assembler/62e7644b2e4817c2b3d1a54f0df1cb30a59aa25528e0e4588229fd76249cb516", "path_in_repo": "macmanes-lab/wgs-assembler/kmer/sim4dbutils/pickUniquePolish", "objdump": "", "code_s": "char *strrchr(char *__s, int __c) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strrchr_0040f118)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *strrchr(char *__s, int __c) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strrchr_0040f118)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "waelsy123", "repo_name": "C-Scrabble-TCP", "path": "waelsy123/C-Scrabble-TCP/907f1310bbcb3b84ecfe01f8e34aa66de76f42b8f17c3059390f0ce4a80419fd", "path_in_repo": "waelsy123/C-Scrabble-TCP//client", "objdump": "", "code_s": "ssize_t read(int __fd, void *__buf, size_t __nbytes) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_read_00406060)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "ssize_t read(int __fd, void *__buf, size_t __nbytes) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_read_00406060)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "ssize_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "ssize_t"}], "body_in_train": false}, {"repo_owner": "morris821028", "repo_name": "hw-realtime-system", "path": "morris821028/hw-realtime-system/ec2e383222a94713c4d1da6ce223cd6f308529b13315afc2d515bc2f6a2237c0", "path_in_repo": "morris821028/hw-realtime-system/homework2/submission/Part2/test_sjf", "objdump": "", "code_s": "int strcmp(char *__s1, char *__s2) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_strcmp_00404060)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int strcmp(char *__s1, char *__s2) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_strcmp_00404060)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "Fleuri", "repo_name": "NetworkWeek6", "path": "Fleuri/NetworkWeek6/0b76053dda0b91cea3f1b06e89dbe24f99382a2a3ca683a953c1c1f5e070903b", "path_in_repo": "Fleuri/NetworkWeek6/unpv22e/mutex/prodcons1", "objdump": "", "code_s": "int pthread_mutex_unlock(pthread_mutex_t *__mutex) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_mutex_unlock_004060d0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int pthread_mutex_unlock(pthread_mutex_t *__mutex) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_mutex_unlock_004060d0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "junta-de-andalucia", "repo_name": "guadalinex-v5", "path": "junta-de-andalucia/guadalinex-v5/d01287bd50220ce5560716fc49c368acb158af64b4e7e708f489f9cd7caa8c31", "path_in_repo": "junta-de-andalucia/guadalinex-v5/apps/ubiquity/tags/ubiquity-1.8.12guada9/d-i/source/migration-assistant/ma-import", "objdump": "", "code_s": "FILE *fopen(char *__filename, char *__modes) {\n  FILE *<span class=\"supfact\">pFVar1</span>;\n  <span class=\"supfact\">pFVar1</span> = (FILE *)(*(code *)PTR_fopen_0040e130)();\n  return <span class=\"supfact\">pFVar1</span>;\n}", "code_t": "FILE *fopen(char *__filename, char *__modes) {\n  FILE *<span class=\"supfact\">pFVar1</span>;\n  <span class=\"supfact\">pFVar1</span> = (FILE *)(*(code *)PTR_fopen_0040e130)();\n  return <span class=\"supfact\">pFVar1</span>;\n}", "var": [{"name": "pFVar1", "type": "FILE * *", "pred_name": "pFVar1", "ref_name": "pFVar1", "ref_type": "FILE * *"}], "body_in_train": false}, {"repo_owner": "clostra", "repo_name": "newnode", "path": "clostra/newnode/9da00b67c4bd600369796ff811a4a09abecbe3309030f016562b6f240d424395", "path_in_repo": "clostra/newnode/libutp/libutp.so", "objdump": "0000000000007840 <utp_check_timeouts>:\n    7840:\t41 54                \tpush   %r12\n    7842:\t55                   \tpush   %rbp\n    7843:\t53                   \tpush   %rbx\n    7844:\t48 83 ec 10          \tsub    $0x10,%rsp\n    7848:\t48 85 ff             \ttest   %rdi,%rdi\n    784b:\t0f 84 c6 01 00 00    \tje     7a17 <utp_check_timeouts+0x1d7>\n    7851:\t31 f6                \txor    %esi,%esi\n    7853:\t48 89 fb             \tmov    %rdi,%rbx\n    7856:\te8 15 ca ff ff       \tcall   4270 <_Z25utp_call_get_millisecondsP18struct_utp_contextP9UTPSocket@plt>\n    785b:\t48 89 c2             \tmov    %rax,%rdx\n    785e:\t48 2b 93 40 01 00 00 \tsub    0x140(%rbx),%rdx\n    7865:\t48 89 83 b8 00 00 00 \tmov    %rax,0xb8(%rbx)\n    786c:\t48 81 fa f3 01 00 00 \tcmp    $0x1f3,%rdx\n    7873:\t0f 86 c0 00 00 00    \tjbe    7939 <utp_check_timeouts+0xf9>\n    7879:\t48 8b 8b 18 01 00 00 \tmov    0x118(%rbx),%rcx\n    7880:\t48 89 83 40 01 00 00 \tmov    %rax,0x140(%rbx)\n    7887:\t48 85 c9             \ttest   %rcx,%rcx\n    788a:\t0f 84 2c 01 00 00    \tje     79bc <utp_check_timeouts+0x17c>\n    7890:\t48 8b bb 08 01 00 00 \tmov    0x108(%rbx),%rdi\n    7897:\t49 89 c8             \tmov    %rcx,%r8\n    789a:\t31 d2                \txor    %edx,%edx\n    789c:\teb 31                \tjmp    78cf <utp_check_timeouts+0x8f>\n    789e:\t66 90                \txchg   %ax,%ax\n    78a0:\t48 83 c2 01          \tadd    $0x1,%rdx\n    78a4:\t4c 39 c2             \tcmp    %r8,%rdx\n    78a7:\t0f 83 89 01 00 00    \tjae    7a36 <utp_check_timeouts+0x1f6>\n    78ad:\t8b 83 b8 00 00 00    \tmov    0xb8(%rbx),%eax\n    78b3:\t48 8b bb 08 01 00 00 \tmov    0x108(%rbx),%rdi\n    78ba:\t48 85 d2             \ttest   %rdx,%rdx\n    78bd:\t74 0d                \tje     78cc <utp_check_timeouts+0x8c>\n    78bf:\t48 39 93 10 01 00 00 \tcmp    %rdx,0x110(%rbx)\n    78c6:\t0f 86 2c 01 00 00    \tjbe    79f8 <utp_check_timeouts+0x1b8>\n    78cc:\t4c 89 c1             \tmov    %r8,%rcx\n    78cf:\t48 8d 34 92          \tlea    (%rdx,%rdx,4),%rsi\n    78d3:\t48 8d 34 f7          \tlea    (%rdi,%rsi,8),%rsi\n    78d7:\t2b 46 20             \tsub    0x20(%rsi),%eax\n    78da:\t3d 0f 27 00 00       \tcmp    $0x270f,%eax\n    78df:\t7e bf                \tjle    78a0 <utp_check_timeouts+0x60>\n    78e1:\t48 83 e9 01          \tsub    $0x1,%rcx\n    78e5:\t48 89 8b 18 01 00 00 \tmov    %rcx,0x118(%rbx)\n    78ec:\t48 39 d1             \tcmp    %rdx,%rcx\n    78ef:\t75 57                \tjne    7948 <utp_check_timeouts+0x108>\n    78f1:\t48 39 93 10 01 00 00 \tcmp    %rdx,0x110(%rbx)\n    78f8:\t0f 85 92 00 00 00    \tjne    7990 <utp_check_timeouts+0x150>\n    78fe:\t48 c7 44 24 08 ff ff \tmovq   $0xffffffffffffffff,0x8(%rsp)\n    7905:\tff ff \n    7907:\t4c 8d 64 24 08       \tlea    0x8(%rsp),%r12\n    790c:\teb 14                \tjmp    7922 <utp_check_timeouts+0xe2>\n    790e:\t66 90                \txchg   %ax,%ax\n    7910:\t48 8b 68 20          \tmov    0x20(%rax),%rbp\n    7914:\t48 89 ef             \tmov    %rbp,%rdi\n    7917:\te8 14 c7 ff ff       \tcall   4030 <_ZN9UTPSocket14check_timeoutsEv@plt>\n    791c:\t83 7d 68 08          \tcmpl   $0x8,0x68(%rbp)\n    7920:\t74 56                \tje     7978 <utp_check_timeouts+0x138>\n    7922:\t48 8b 83 20 01 00 00 \tmov    0x120(%rbx),%rax\n    7929:\t4c 89 e6             \tmov    %r12,%rsi\n    792c:\t48 8b 38             \tmov    (%rax),%rdi\n    792f:\te8 fc c9 ff ff       \tcall   4330 <_Z16utp_hash_iterateP10utp_hash_tP19utp_hash_iterator_t@plt>\n    7934:\t48 85 c0             \ttest   %rax,%rax\n    7937:\t75 d7                \tjne    7910 <utp_check_timeouts+0xd0>\n    7939:\t48 83 c4 10          \tadd    $0x10,%rsp\n    793d:\t5b                   \tpop    %rbx\n    793e:\t5d                   \tpop    %rbp\n    793f:\t41 5c                \tpop    %r12\n    7941:\tc3                   \tret    \n    7942:\t66 0f 1f 44 00 00    \tnopw   0x0(%rax,%rax,1)\n    7948:\t48 8d 04 89          \tlea    (%rcx,%rcx,4),%rax\n    794c:\t48 8d 04 c7          \tlea    (%rdi,%rax,8),%rax\n    7950:\tf3 0f 6f 08          \tmovdqu (%rax),%xmm1\n    7954:\t0f 11 0e             \tmovups %xmm1,(%rsi)\n    7957:\tf3 0f 6f 50 10       \tmovdqu 0x10(%rax),%xmm2\n    795c:\t0f 11 56 10          \tmovups %xmm2,0x10(%rsi)\n    7960:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    7964:\t48 89 46 20          \tmov    %rax,0x20(%rsi)\n    7968:\t4c 8b 83 18 01 00 00 \tmov    0x118(%rbx),%r8\n    796f:\te9 30 ff ff ff       \tjmp    78a4 <utp_check_timeouts+0x64>\n    7974:\t0f 1f 40 00          \tnopl   0x0(%rax)\n    7978:\t48 89 ef             \tmov    %rbp,%rdi\n    797b:\te8 f0 c6 ff ff       \tcall   4070 <_ZN9UTPSocketD1Ev@plt>\n    7980:\t48 89 ef             \tmov    %rbp,%rdi\n    7983:\te8 78 c9 ff ff       \tcall   4300 <free@plt>\n    7988:\teb 98                \tjmp    7922 <utp_check_timeouts+0xe2>\n    798a:\t66 0f 1f 44 00 00    \tnopw   0x0(%rax,%rax,1)\n    7990:\t48 8b bb 08 01 00 00 \tmov    0x108(%rbx),%rdi\n    7997:\t48 85 d2             \ttest   %rdx,%rdx\n    799a:\t74 3c                \tje     79d8 <utp_check_timeouts+0x198>\n    799c:\t48 89 93 10 01 00 00 \tmov    %rdx,0x110(%rbx)\n    79a3:\t48 8d 34 92          \tlea    (%rdx,%rdx,4),%rsi\n    79a7:\t48 c1 e6 03          \tshl    $0x3,%rsi\n    79ab:\te8 90 ca ff ff       \tcall   4440 <realloc@plt>\n    79b0:\t48 89 83 08 01 00 00 \tmov    %rax,0x108(%rbx)\n    79b7:\te9 42 ff ff ff       \tjmp    78fe <utp_check_timeouts+0xbe>\n    79bc:\t48 83 bb 10 01 00 00 \tcmpq   $0x0,0x110(%rbx)\n    79c3:\t00 \n    79c4:\t0f 84 34 ff ff ff    \tje     78fe <utp_check_timeouts+0xbe>\n    79ca:\t48 8b bb 08 01 00 00 \tmov    0x108(%rbx),%rdi\n    79d1:\t0f 1f 80 00 00 00 00 \tnopl   0x0(%rax)\n    79d8:\te8 23 c9 ff ff       \tcall   4300 <free@plt>\n    79dd:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n    79e1:\t48 c7 83 08 01 00 00 \tmovq   $0x0,0x108(%rbx)\n    79e8:\t00 00 00 00 \n    79ec:\t0f 11 83 10 01 00 00 \tmovups %xmm0,0x110(%rbx)\n    79f3:\te9 06 ff ff ff       \tjmp    78fe <utp_check_timeouts+0xbe>\n    79f8:\t48 8d 0d b1 46 00 00 \tlea    0x46b1(%rip),%rcx        # c0b0 <_fini+0xa74>\n    79ff:\tba 78 00 00 00       \tmov    $0x78,%edx\n    7a04:\t48 8d 35 79 55 00 00 \tlea    0x5579(%rip),%rsi        # cf84 <_fini+0x1948>\n    7a0b:\t48 8d 3d 82 55 00 00 \tlea    0x5582(%rip),%rdi        # cf94 <_fini+0x1958>\n    7a12:\te8 39 c7 ff ff       \tcall   4150 <__assert_fail@plt>\n    7a17:\t48 8d 0d a2 4e 00 00 \tlea    0x4ea2(%rip),%rcx        # c8c0 <_fini+0x1284>\n    7a1e:\tba e0 0c 00 00       \tmov    $0xce0,%edx\n    7a23:\t48 8d 35 40 55 00 00 \tlea    0x5540(%rip),%rsi        # cf6a <_fini+0x192e>\n    7a2a:\t48 8d 3d 04 56 00 00 \tlea    0x5604(%rip),%rdi        # d035 <_fini+0x19f9>\n    7a31:\te8 1a c7 ff ff       \tcall   4150 <__assert_fail@plt>\n    7a36:\t4c 89 c2             \tmov    %r8,%rdx\n    7a39:\te9 b3 fe ff ff       \tjmp    78f1 <utp_check_timeouts+0xb1>\n    7a3e:\t66 90                \txchg   %ax,%ax", "code_s": "void utp_check_timeouts(struct_utp_context *<span class=\"supfact\">param_1</span>) {\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  UTPSocket *this;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  ulong uVar6;\n  long lVar7;\n  void *pvVar8;\n  ulong <span class=\"supfact\">uVar9</span>;\n  ulong uVar10;\n  ulong uVar11;\n  undefined8 <span class=\"supfact\">local_20</span>;\n  if (<span class=\"supfact\">param_1</span> == (struct_utp_context *)Number) {\n    __assert_fail(String, String, Number, String);\n  }\n  uVar6 =\n      utp_call_get_milliseconds(<span class=\"supfact\">param_1</span>, (UTPSocket *)Number);\n  *(ulong *)(<span class=\"supfact\">param_1</span> + Number) = uVar6;\n  if (uVar6 - *(long *)(<span class=\"supfact\">param_1</span> + Number) & lt; Number) {\n    return;\n  }\n  *(ulong *)(<span class=\"supfact\">param_1</span> + Number) = uVar6;\n  if (*(ulong *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n    if (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number)\n      goto LAB_001078fe;\n    pvVar8 = *(void **)(<span class=\"supfact\">param_1</span> + Number);\n  } else {\n    lVar7 = *(long *)(<span class=\"supfact\">param_1</span> + Number);\n    uVar10 = Number;\n    <span class=\"supfact\">uVar9</span> = *(ulong *)(<span class=\"supfact\">param_1</span> + Number);\n    while (uVar11 = uVar10, puVar1 = (undefined4 *)(lVar7 + uVar11 * Number),\n           (int)uVar6 - puVar1[Number] & lt;\n           Number) {\n      uVar10 = uVar11 + Number;\n      uVar11 = <span class=\"supfact\">uVar9</span>;\n    LAB_001078a4:\n      if (uVar11 &lt; = uVar10)\n        goto LAB_001078f1;\n      uVar6 = (ulong) * (uint *)(<span class=\"supfact\">param_1</span> + Number);\n      lVar7 = *(long *)(<span class=\"supfact\">param_1</span> + Number);\n      <span class=\"supfact\">uVar9</span> = uVar11;\n      if ((uVar10 != Number) & amp; &amp;\n          (*(ulong *)(<span class=\"supfact\">param_1</span> + Number) &lt; = uVar10)) {\n        __assert_fail(String, String, Number, String);\n      }\n    }\n    <span class=\"supfact\">uVar9</span> = <span class=\"supfact\">uVar9</span> - Number;\n    *(ulong *)(<span class=\"supfact\">param_1</span> + Number) = <span class=\"supfact\">uVar9</span>;\n    if (<span class=\"supfact\">uVar9</span> != uVar11) {\n      puVar2 = (undefined4 *)(lVar7 + <span class=\"supfact\">uVar9</span> * Number);\n      uVar3 = puVar2[Number];\n      uVar4 = puVar2[Number];\n      uVar5 = puVar2[Number];\n      *puVar1 = *puVar2;\n      puVar1[Number] = uVar3;\n      puVar1[Number] = uVar4;\n      puVar1[Number] = uVar5;\n      uVar3 = puVar2[Number];\n      uVar4 = puVar2[Number];\n      uVar5 = puVar2[Number];\n      puVar1[Number] = puVar2[Number];\n      puVar1[Number] = uVar3;\n      puVar1[Number] = uVar4;\n      puVar1[Number] = uVar5;\n      *(undefined8 *)(puVar1 + Number) = *(undefined8 *)(puVar2 + Number);\n      uVar10 = uVar11;\n      uVar11 = *(ulong *)(<span class=\"supfact\">param_1</span> + Number);\n      goto LAB_001078a4;\n    }\n  LAB_001078f1:\n    if (*(ulong *)(<span class=\"supfact\">param_1</span> + Number) == uVar11)\n      goto LAB_001078fe;\n    pvVar8 = *(void **)(<span class=\"supfact\">param_1</span> + Number);\n    if (uVar11 != Number) {\n      *(ulong *)(<span class=\"supfact\">param_1</span> + Number) = uVar11;\n      pvVar8 = realloc(pvVar8, uVar11 * Number);\n      *(void **)(<span class=\"supfact\">param_1</span> + Number) = pvVar8;\n      goto LAB_001078fe;\n    }\n  }\n  free(pvVar8);\n  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  *(undefined(*)[Number])(<span class=\"supfact\">param_1</span> + Number) =\n      (undefined[Number])Number;\nLAB_001078fe:\n  <span class=\"supfact\">local_20</span> = Number;\n  while (lVar7 = utp_hash_iterate(\n             **(utp_hash_t ***)(<span class=\"supfact\">param_1</span> + Number),\n             (utp_hash_iterator_t *)&amp;\n             <span class=\"supfact\">local_20</span>),\n         lVar7 != Number) {\n    this = *(UTPSocket **)(lVar7 + Number);\n    UTPSocket check_timeouts();\n    if (*(int *)(this + Number) == Number) {\n      UTPSocket ~UTPSocket(this);\n      free(this);\n    }\n  }\n  return;\n}", "code_t": "void utp_check_timeouts(utp_context *<span class=\"supfact\">ctx</span>) {\n  RST_Info *pRVar1;\n  UTPSocket *this;\n  uint32 uVar2;\n  uint32 uVar3;\n  uint32 uVar4;\n  uint16 uVar5;\n  undefined2 uVar6;\n  uint16 uVar7;\n  undefined2 uVar8;\n  uint64 uVar9;\n  UTPSocketKeyData *keyData;\n  void *pvVar10;\n  RST_Info *pRVar11;\n  ulong uVar12;\n  size_t c;\n  size_t sVar13;\n  UTPSocket *conn;\n  int __in_chrg;\n  size_t sVar15;\n  utp_hash_iterator_t <span class=\"supfact\">it</span>;\n  utp_hash_iterator_t *puVar14;\n  if (<span class=\"supfact\">ctx</span> == (utp_context *)Number) {\n    __assert_fail(String, String, Number, String);\n  }\n  uVar9 = utp_call_get_milliseconds(<span class=\"supfact\">ctx</span>, (utp_socket *)Number);\n  <span class=\"supfact\">ctx</span> - &gt;\n  current_ms = uVar9;\n  if (uVar9 - <span class=\"supfact\">ctx</span> - &gt; last_check & lt; Number) {\n    return;\n  }\n  sVar15 = (<span class=\"supfact\">ctx</span> - &gt; rst_info).count;\n  <span class=\"supfact\">ctx</span> - &gt;\n  last_check = uVar9;\n  if (sVar15 == Number) {\n    if ((<span class=\"supfact\">ctx</span> - &gt; rst_info).alloc == Number)\n      goto LAB_001078fe;\n    pRVar11 = (<span class=\"supfact\">ctx</span> - &gt; rst_info).mem;\n  } else {\n    pRVar11 = (<span class=\"supfact\">ctx</span> - &gt; rst_info).mem;\n    uVar12 = Number;\n    while (sVar13 = uVar12, pRVar1 = pRVar11 + sVar13,\n           (int)uVar9 - *(int *)&amp;\n           pRVar1 - &gt; timestamp & lt; Number) {\n      uVar12 = sVar13 + Number;\n      sVar13 = sVar15;\n    LAB_001078a4:\n      if (sVar13 &lt; = uVar12)\n        goto LAB_001078f1;\n      uVar9 = (uint64) * (uint *)&amp;\n      <span class=\"supfact\">ctx</span> - &gt;\n      current_ms;\n      pRVar11 = (<span class=\"supfact\">ctx</span> - &gt; rst_info).mem;\n      sVar15 = sVar13;\n      if ((uVar12 != Number) & amp; &amp;\n          ((<span class=\"supfact\">ctx</span> - &gt; rst_info).alloc &lt; = uVar12)) {\n        __assert_fail(String, String, Number, String);\n      }\n    }\n    uVar12 = sVar15 - Number;\n    (<span class=\"supfact\">ctx</span> - &gt; rst_info).count = uVar12;\n    if (uVar12 != sVar13) {\n      pRVar11 = pRVar11 + uVar12;\n      uVar2 = (pRVar11 - &gt; addr)._in._in6d[Number];\n      uVar3 = (pRVar11 - &gt; addr)._in._in6d[Number];\n      uVar4 = (pRVar11 - &gt; addr)._in._in6d[Number];\n      (pRVar1 - &gt; addr)._in._in6d[Number] =\n          (pRVar11 - &gt; addr)._in._in6d[Number];\n      (pRVar1 - &gt; addr)._in._in6d[Number] = uVar2;\n      (pRVar1 - &gt; addr)._in._in6d[Number] = uVar3;\n      (pRVar1 - &gt; addr)._in._in6d[Number] = uVar4;\n      uVar5 = (pRVar11 - &gt; addr)._port;\n      uVar6 = *(undefined2 *)&amp;\n      (pRVar11 - &gt; addr).field_0x16;\n      uVar2 = pRVar11 - &gt;\n      connid;\n      uVar7 = pRVar11 - &gt;\n      ack_nr;\n      uVar8 = *(undefined2 *)&amp;\n      pRVar11 - &gt;\n      field_0x1e;\n      (pRVar1 - &gt; addr)._in6_scope_id = (pRVar11 - &gt; addr)._in6_scope_id;\n      (pRVar1 - &gt; addr)._port = uVar5;\n      *(undefined2 *)&amp;\n      (pRVar1 - &gt; addr).field_0x16 = uVar6;\n      pRVar1 - &gt;\n      connid = uVar2;\n      pRVar1 - &gt;\n      ack_nr = uVar7;\n      *(undefined2 *)&amp;\n      pRVar1 - &gt;\n      field_0x1e = uVar8;\n      pRVar1 - &gt;\n      timestamp = pRVar11 - &gt;\n      timestamp;\n      uVar12 = sVar13;\n      sVar13 = (<span class=\"supfact\">ctx</span> - &gt; rst_info).count;\n      goto LAB_001078a4;\n    }\n  LAB_001078f1:\n    if ((<span class=\"supfact\">ctx</span> - &gt; rst_info).alloc == sVar13)\n      goto LAB_001078fe;\n    pRVar11 = (<span class=\"supfact\">ctx</span> - &gt; rst_info).mem;\n    if (sVar13 != Number) {\n      (<span class=\"supfact\">ctx</span> - &gt; rst_info).alloc = sVar13;\n      pRVar11 = (RST_Info *)realloc(pRVar11, sVar13 * Number);\n      (<span class=\"supfact\">ctx</span> - &gt; rst_info).mem = pRVar11;\n      goto LAB_001078fe;\n    }\n  }\n  free(pRVar11);\n  (<span class=\"supfact\">ctx</span> - &gt; rst_info).mem = (RST_Info *)Number;\n  (<span class=\"supfact\">ctx</span> - &gt; rst_info).alloc = Number;\n  (<span class=\"supfact\">ctx</span> - &gt; rst_info).count = Number;\nLAB_001078fe:\n  <span class=\"supfact\">it</span>.bucket = Number;\n  <span class=\"supfact\">it</span>.elem = Number;\n  while (true) {\n    puVar14 = &amp;\n    <span class=\"supfact\">it</span>;\n    pvVar10 = utp_hash_iterate((<span class=\"supfact\">ctx</span> - &gt; utp_sockets - &gt;\n                                super_utpHashTable & lt;\n                                UTPSocketKey, _UTPSocketKeyData & gt;)\n                                   .hash,\n                               &amp;\n                               <span class=\"supfact\">it</span>);\n    __in_chrg = (int)puVar14;\n    if (pvVar10 == (void *)Number)\n      break;\n    this = *(UTPSocket **)((long)pvVar10 + Number);\n    UTPSocket check_timeouts(this);\n    if (this - &gt; state == CS_DESTROY) {\n      UTPSocket ~UTPSocket(this, __in_chrg);\n      free(this);\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "ctx", "ref_type": "utp_context * *"}, {"name": "uVar9", "type": "ulong", "pred_name": "uVar10", "ref_name": "", "ref_type": "disappear"}, {"name": "local_20", "type": "__unk__", "pred_name": "__unk__", "ref_name": "it", "ref_type": "struct utp_hash_iterator_t { utp_link_t bucket; utp_link_t elem; }"}], "body_in_train": false}, {"repo_owner": "GeorgeZhuo", "repo_name": "execise", "path": "GeorgeZhuo/execise/17fab6015e7290e3f694f86f0976ddfaf58041de5784a1fb000389f643ffdec6", "path_in_repo": "GeorgeZhuo/execise/apue/apue.3e/printer/printd", "objdump": "", "code_s": "int strncasecmp(char *__s1, char *__s2, size_t __n) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_strncasecmp_00409198)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int strncasecmp(char *__s1, char *__s2, size_t __n) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_strncasecmp_00409198)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "anhquang", "repo_name": "contiki", "path": "anhquang/contiki/224e918571b88c4578ffb90fe2ee078b8284a196d5df2b5138c4d6d3926b1261", "path_in_repo": "anhquang/contiki/examples/rime/example-runicast.native", "objdump": "00000000004059e3 <packetbuf_attr_copyto>:\n  4059e3:\t55                   \tpush   %rbp\n  4059e4:\t48 89 e5             \tmov    %rsp,%rbp\n  4059e7:\t48 83 ec 10          \tsub    $0x10,%rsp\n  4059eb:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  4059ef:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n  4059f3:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4059f7:\tba 30 00 00 00       \tmov    $0x30,%edx\n  4059fc:\tbe 00 25 41 00       \tmov    $0x412500,%esi\n  405a01:\t48 89 c7             \tmov    %rax,%rdi\n  405a04:\te8 a7 e6 ff ff       \tcall   4040b0 <memcpy@plt>\n  405a09:\t48 8b 15 20 cb 00 00 \tmov    0xcb20(%rip),%rdx        # 412530 <packetbuf_addrs>\n  405a10:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  405a14:\t48 89 10             \tmov    %rdx,(%rax)\n  405a17:\t90                   \tnop\n  405a18:\tc9                   \tleave  \n  405a19:\tc3                   \tret    ", "code_s": "void packetbuf_attr_copyto(void *<span class=\"supfact\">param_1</span>,\n                           undefined8 *<span class=\"supfact\">param_2</span>) {\n  memcpy(<span class=\"supfact\">param_1</span>, packetbuf_attrs, Number);\n  *<span class=\"supfact\">param_2</span> = packetbuf_addrs;\n  return;\n}", "code_t": "void packetbuf_attr_copyto(packetbuf_attr *<span class=\"supfact\">attrs</span>,\n                           packetbuf_addr *<span class=\"supfact\">addrs</span>) {\n  packetbuf_addr *<span class=\"supfact\">addrs</span> - local;\n  packetbuf_attr *<span class=\"supfact\">attrs</span> - local;\n  memcpy(<span class=\"supfact\">attrs</span>, packetbuf_attrs, Number);\n  *(packetbuf_addr(*)[Number])<span class=\"supfact\">addrs</span> = packetbuf_addrs;\n  return;\n}", "var": [{"name": "param_1", "type": "packetbuf_attr * *", "pred_name": "attrs", "ref_name": "attrs", "ref_type": "packetbuf_attr * *"}, {"name": "param_2", "type": "packetbuf_addr * *", "pred_name": "addrs", "ref_name": "addrs", "ref_type": "packetbuf_addr * *"}], "body_in_train": true}, {"repo_owner": "davidlt", "repo_name": "openssl-fedora", "path": "davidlt/openssl-fedora/0db47cd308e66842bdf2cfa66432793fab7061279c35c926c31cf937dfc9fa6f", "path_in_repo": "davidlt/openssl-fedora/test/jpaketest", "objdump": "0000000000420642 <ASN1_get_object>:\n  420642:\t55                   \tpush   %rbp\n  420643:\t48 89 e5             \tmov    %rsp,%rbp\n  420646:\t48 83 ec 70          \tsub    $0x70,%rsp\n  42064a:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n  42064e:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n  420652:\t48 89 55 a8          \tmov    %rdx,-0x58(%rbp)\n  420656:\t48 89 4d a0          \tmov    %rcx,-0x60(%rbp)\n  42065a:\t4c 89 45 98          \tmov    %r8,-0x68(%rbp)\n  42065e:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  420662:\t48 8b 00             \tmov    (%rax),%rax\n  420665:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n  420669:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n  42066d:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n  420671:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n  420676:\t0f 84 a0 01 00 00    \tje     42081c <ASN1_get_object+0x1da>\n  42067c:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  420680:\t0f b6 00             \tmovzbl (%rax),%eax\n  420683:\t0f b6 c0             \tmovzbl %al,%eax\n  420686:\t83 e0 20             \tand    $0x20,%eax\n  420689:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  42068c:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  420690:\t0f b6 00             \tmovzbl (%rax),%eax\n  420693:\t0f b6 c0             \tmovzbl %al,%eax\n  420696:\t25 c0 00 00 00       \tand    $0xc0,%eax\n  42069b:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n  42069e:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  4206a2:\t0f b6 00             \tmovzbl (%rax),%eax\n  4206a5:\t0f b6 c0             \tmovzbl %al,%eax\n  4206a8:\t83 e0 1f             \tand    $0x1f,%eax\n  4206ab:\t89 45 d8             \tmov    %eax,-0x28(%rbp)\n  4206ae:\t83 7d d8 1f          \tcmpl   $0x1f,-0x28(%rbp)\n  4206b2:\t0f 85 a7 00 00 00    \tjne    42075f <ASN1_get_object+0x11d>\n  4206b8:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  4206bc:\t48 83 c0 01          \tadd    $0x1,%rax\n  4206c0:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n  4206c4:\t48 83 6d e0 01       \tsubq   $0x1,-0x20(%rbp)\n  4206c9:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n  4206ce:\t0f 84 4b 01 00 00    \tje     42081f <ASN1_get_object+0x1dd>\n  4206d4:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n  4206db:\t00 \n  4206dc:\teb 3e                \tjmp    42071c <ASN1_get_object+0xda>\n  4206de:\t48 c1 65 f0 07       \tshlq   $0x7,-0x10(%rbp)\n  4206e3:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  4206e7:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4206eb:\t48 89 55 d0          \tmov    %rdx,-0x30(%rbp)\n  4206ef:\t0f b6 00             \tmovzbl (%rax),%eax\n  4206f2:\t0f b6 c0             \tmovzbl %al,%eax\n  4206f5:\t83 e0 7f             \tand    $0x7f,%eax\n  4206f8:\t48 98                \tcltq   \n  4206fa:\t48 09 45 f0          \tor     %rax,-0x10(%rbp)\n  4206fe:\t48 83 6d e0 01       \tsubq   $0x1,-0x20(%rbp)\n  420703:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n  420708:\t0f 84 14 01 00 00    \tje     420822 <ASN1_get_object+0x1e0>\n  42070e:\t48 81 7d f0 ff ff ff \tcmpq   $0xffffff,-0x10(%rbp)\n  420715:\t00 \n  420716:\t0f 8f 09 01 00 00    \tjg     420825 <ASN1_get_object+0x1e3>\n  42071c:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  420720:\t0f b6 00             \tmovzbl (%rax),%eax\n  420723:\t84 c0                \ttest   %al,%al\n  420725:\t78 b7                \tjs     4206de <ASN1_get_object+0x9c>\n  420727:\t48 c1 65 f0 07       \tshlq   $0x7,-0x10(%rbp)\n  42072c:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  420730:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  420734:\t48 89 55 d0          \tmov    %rdx,-0x30(%rbp)\n  420738:\t0f b6 00             \tmovzbl (%rax),%eax\n  42073b:\t0f b6 c0             \tmovzbl %al,%eax\n  42073e:\t83 e0 7f             \tand    $0x7f,%eax\n  420741:\t48 98                \tcltq   \n  420743:\t48 09 45 f0          \tor     %rax,-0x10(%rbp)\n  420747:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  42074b:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n  42074e:\t48 83 6d e0 01       \tsubq   $0x1,-0x20(%rbp)\n  420753:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n  420758:\t75 27                \tjne    420781 <ASN1_get_object+0x13f>\n  42075a:\te9 d0 00 00 00       \tjmp    42082f <ASN1_get_object+0x1ed>\n  42075f:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n  420762:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n  420765:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  420769:\t48 83 c0 01          \tadd    $0x1,%rax\n  42076d:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n  420771:\t48 83 6d e0 01       \tsubq   $0x1,-0x20(%rbp)\n  420776:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n  42077b:\t0f 84 a7 00 00 00    \tje     420828 <ASN1_get_object+0x1e6>\n  420781:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n  420785:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n  420788:\t89 10                \tmov    %edx,(%rax)\n  42078a:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n  42078e:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n  420791:\t89 10                \tmov    %edx,(%rax)\n  420793:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  420797:\t89 c1                \tmov    %eax,%ecx\n  420799:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  42079d:\t48 8d 75 cc          \tlea    -0x34(%rbp),%rsi\n  4207a1:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n  4207a5:\t48 89 c7             \tmov    %rax,%rdi\n  4207a8:\te8 a8 00 00 00       \tcall   420855 <asn1_get_length>\n  4207ad:\t85 c0                \ttest   %eax,%eax\n  4207af:\t74 7a                \tje     42082b <ASN1_get_object+0x1e9>\n  4207b1:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  4207b4:\t85 c0                \ttest   %eax,%eax\n  4207b6:\t74 0a                \tje     4207c2 <ASN1_get_object+0x180>\n  4207b8:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  4207bb:\t83 e0 20             \tand    $0x20,%eax\n  4207be:\t85 c0                \ttest   %eax,%eax\n  4207c0:\t74 6c                \tje     42082e <ASN1_get_object+0x1ec>\n  4207c2:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n  4207c6:\t48 8b 10             \tmov    (%rax),%rdx\n  4207c9:\t48 8b 4d d0          \tmov    -0x30(%rbp),%rcx\n  4207cd:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  4207d1:\t48 8b 00             \tmov    (%rax),%rax\n  4207d4:\t48 29 c1             \tsub    %rax,%rcx\n  4207d7:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n  4207db:\t48 29 c8             \tsub    %rcx,%rax\n  4207de:\t48 39 c2             \tcmp    %rax,%rdx\n  4207e1:\t7e 26                \tjle    420809 <ASN1_get_object+0x1c7>\n  4207e3:\t41 b8 93 00 00 00    \tmov    $0x93,%r8d\n  4207e9:\tb9 69 5e 43 00       \tmov    $0x435e69,%ecx\n  4207ee:\tba 9b 00 00 00       \tmov    $0x9b,%edx\n  4207f3:\tbe 72 00 00 00       \tmov    $0x72,%esi\n  4207f8:\tbf 0d 00 00 00       \tmov    $0xd,%edi\n  4207fd:\te8 d0 56 fe ff       \tcall   405ed2 <ERR_put_error>\n  420802:\t81 4d fc 80 00 00 00 \torl    $0x80,-0x4(%rbp)\n  420809:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n  42080d:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  420811:\t48 89 10             \tmov    %rdx,(%rax)\n  420814:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  420817:\t0b 45 fc             \tor     -0x4(%rbp),%eax\n  42081a:\teb 37                \tjmp    420853 <ASN1_get_object+0x211>\n  42081c:\t90                   \tnop\n  42081d:\teb 10                \tjmp    42082f <ASN1_get_object+0x1ed>\n  42081f:\t90                   \tnop\n  420820:\teb 0d                \tjmp    42082f <ASN1_get_object+0x1ed>\n  420822:\t90                   \tnop\n  420823:\teb 0a                \tjmp    42082f <ASN1_get_object+0x1ed>\n  420825:\t90                   \tnop\n  420826:\teb 07                \tjmp    42082f <ASN1_get_object+0x1ed>\n  420828:\t90                   \tnop\n  420829:\teb 04                \tjmp    42082f <ASN1_get_object+0x1ed>\n  42082b:\t90                   \tnop\n  42082c:\teb 01                \tjmp    42082f <ASN1_get_object+0x1ed>\n  42082e:\t90                   \tnop\n  42082f:\t41 b8 9d 00 00 00    \tmov    $0x9d,%r8d\n  420835:\tb9 69 5e 43 00       \tmov    $0x435e69,%ecx\n  42083a:\tba 7b 00 00 00       \tmov    $0x7b,%edx\n  42083f:\tbe 72 00 00 00       \tmov    $0x72,%esi\n  420844:\tbf 0d 00 00 00       \tmov    $0xd,%edi\n  420849:\te8 84 56 fe ff       \tcall   405ed2 <ERR_put_error>\n  42084e:\tb8 80 00 00 00       \tmov    $0x80,%eax\n  420853:\tc9                   \tleave  \n  420854:\tc3                   \tret    ", "code_s": "int ASN1_get_object(uchar **<span class=\"supfact\">pp</span>, long *<span class=\"supfact\">plength</span>,\n                    int *<span class=\"supfact\">ptag</span>, int *<span class=\"supfact\">pclass</span>,\n                    long <span class=\"supfact\">omax</span>) {\n  byte *pbVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  uint <span class=\"supfact\">local_3c</span>;\n  byte *<span class=\"supfact\">local_38</span>;\n  uint <span class=\"supfact\">local_30</span>;\n  uint <span class=\"supfact\">local_2c</span>;\n  ulong <span class=\"supfact\">local_28</span>;\n  uint <span class=\"supfact\">local_1c</span>;\n  ulong <span class=\"supfact\">local_18</span>;\n  uint <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_38</span> = *<span class=\"supfact\">pp</span>;\n  if (<span class=\"supfact\">omax</span> == Number) {\n    <span class=\"supfact\">local_28</span> = Number;\n  } else {\n    <span class=\"supfact\">local_c</span> = *<span class=\"supfact\">local_38</span> & amp;\n    Number;\n    <span class=\"supfact\">local_2c</span> = *<span class=\"supfact\">local_38</span> & amp;\n    Number;\n    <span class=\"supfact\">local_30</span> = *<span class=\"supfact\">local_38</span> & amp;\n    Number;\n    if (<span class=\"supfact\">local_30</span> == Number) {\n      <span class=\"supfact\">local_28</span> = <span class=\"supfact\">omax</span> - Number;\n      if (<span class=\"supfact\">local_28</span> == Number) {\n        <span class=\"supfact\">local_28</span> = Number;\n        <span class=\"supfact\">local_38</span> = <span class=\"supfact\">local_38</span> + Number;\n      } else {\n        <span class=\"supfact\">local_18</span> = Number;\n        <span class=\"supfact\">local_38</span> = <span class=\"supfact\">local_38</span> + Number;\n        do {\n          if (-Number & lt; (char)*<span class=\"supfact\">local_38</span>) {\n            <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> & lt;\n            &lt;\n            Number | (long)(int)(*<span class=\"supfact\">local_38</span> & amp; Number);\n            <span class=\"supfact\">local_1c</span> = (uint)<span class=\"supfact\">local_18</span>;\n            <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_28</span> - Number;\n            goto joined_r0x0042077b;\n          }\n          pbVar1 = <span class=\"supfact\">local_38</span> + Number;\n          <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> & lt;\n          &lt;\n          Number | (long)(int)(*<span class=\"supfact\">local_38</span> & amp; Number);\n          <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_28</span> - Number;\n          <span class=\"supfact\">local_38</span> = pbVar1;\n        } while ((<span class=\"supfact\">local_28</span> != Number) & amp; &amp;\n                 ((long)<span class=\"supfact\">local_18</span> & lt; Number));\n      }\n    } else {\n      <span class=\"supfact\">local_28</span> = <span class=\"supfact\">omax</span> - Number;\n      <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_30</span>;\n    joined_r0x0042077b:\n      <span class=\"supfact\">local_38</span> = <span class=\"supfact\">local_38</span> + Number;\n      if (<span class=\"supfact\">local_28</span> != Number) {\n        *<span class=\"supfact\">ptag</span> = <span class=\"supfact\">local_1c</span>;\n        *<span class=\"supfact\">pclass</span> = <span class=\"supfact\">local_2c</span>;\n        <span class=\"supfact\">iVar2</span> =\n            FUN_00420855(&amp; <span class=\"supfact\">local_38</span>, &amp;\n                         <span class=\"supfact\">local_3c</span>, <span class=\"supfact\">plength</span>,\n                         <span class=\"supfact\">local_28</span> & amp;\n                         Number);\n        if ((<span class=\"supfact\">iVar2</span> != Number) & amp; &amp;\n            ((<span class=\"supfact\">local_3c</span> == Number ||\n              ((<span class=\"supfact\">local_c</span> & amp; Number) != Number)))) {\n          if (<span class=\"supfact\">omax</span> - ((long)<span class=\"supfact\">local_38</span> -\n                                      (long)*<span class=\"supfact\">pp</span>) &\n                  lt;\n              *<span class=\"supfact\">plength</span>) {\n            ERR_put_error(Number, Number, Number, String, Number);\n            <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> | Number;\n          }\n          *<span class=\"supfact\">pp</span> = <span class=\"supfact\">local_38</span>;\n          return <span class=\"supfact\">local_3c</span> | <span class=\"supfact\">local_c</span>;\n        }\n      }\n    }\n  }\n  ERR_put_error(Number, Number, Number, String, Number);\n  return Number;\n}", "code_t": "int ASN1_get_object(uchar **<span class=\"supfact\">pp</span>, long *<span class=\"supfact\">plength</span>,\n                    int *<span class=\"supfact\">ptag</span>, int *<span class=\"supfact\">pclass</span>,\n                    long <span class=\"supfact\">omax</span>) {\n  uchar *puVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  long <span class=\"supfact\">omax</span> - local;\n  int *<span class=\"supfact\">pclass</span> - local;\n  int *<span class=\"supfact\">ptag</span> - local;\n  long *<span class=\"supfact\">plength</span> - local;\n  uchar **<span class=\"supfact\">pp</span> - local;\n  int <span class=\"supfact\">inf</span>;\n  uchar *<span class=\"supfact\">p</span>;\n  int <span class=\"supfact\">i</span>;\n  int <span class=\"supfact\">xclass</span>;\n  long <span class=\"supfact\">max</span>;\n  int <span class=\"supfact\">tag</span>;\n  long <span class=\"supfact\">l</span>;\n  int <span class=\"supfact\">ret</span>;\n  <span class=\"supfact\">p</span> = *<span class=\"supfact\">pp</span>;\n  if (<span class=\"supfact\">omax</span> == Number) {\n    <span class=\"supfact\">max</span> = Number;\n  } else {\n    <span class=\"supfact\">ret</span> = *<span class=\"supfact\">p</span> & amp;\n    Number;\n    <span class=\"supfact\">xclass</span> = *<span class=\"supfact\">p</span> & amp;\n    Number;\n    <span class=\"supfact\">i</span> = *<span class=\"supfact\">p</span> & amp;\n    Number;\n    if (<span class=\"supfact\">i</span> == Number) {\n      <span class=\"supfact\">max</span> = <span class=\"supfact\">omax</span> + -Number;\n      if (<span class=\"supfact\">max</span> == Number) {\n        <span class=\"supfact\">max</span> = Number;\n        <span class=\"supfact\">p</span> = <span class=\"supfact\">p</span> + Number;\n      } else {\n        <span class=\"supfact\">l</span> = Number;\n        <span class=\"supfact\">p</span> = <span class=\"supfact\">p</span> + Number;\n        do {\n          if (-Number & lt; (char)*<span class=\"supfact\">p</span>) {\n            <span class=\"supfact\">l</span> = <span class=\"supfact\">l</span> & lt;\n            &lt;\n            Number | (long)(int)(*<span class=\"supfact\">p</span> & amp; Number);\n            <span class=\"supfact\">tag</span> = (int)<span class=\"supfact\">l</span>;\n            <span class=\"supfact\">max</span> = <span class=\"supfact\">max</span> + -Number;\n            goto joined_r0x0042077b;\n          }\n          puVar1 = <span class=\"supfact\">p</span> + Number;\n          <span class=\"supfact\">l</span> = <span class=\"supfact\">l</span> & lt;\n          &lt;\n          Number | (long)(int)(*<span class=\"supfact\">p</span> & amp; Number);\n          <span class=\"supfact\">max</span> = <span class=\"supfact\">max</span> + -Number;\n          <span class=\"supfact\">p</span> = puVar1;\n        } while ((<span class=\"supfact\">max</span> != Number) & amp; &amp;\n                 (<span class=\"supfact\">l</span> & lt; Number));\n      }\n    } else {\n      <span class=\"supfact\">max</span> = <span class=\"supfact\">omax</span> + -Number;\n      <span class=\"supfact\">tag</span> = <span class=\"supfact\">i</span>;\n    joined_r0x0042077b:\n      <span class=\"supfact\">p</span> = <span class=\"supfact\">p</span> + Number;\n      if (<span class=\"supfact\">max</span> != Number) {\n        *<span class=\"supfact\">ptag</span> = <span class=\"supfact\">tag</span>;\n        *<span class=\"supfact\">pclass</span> = <span class=\"supfact\">xclass</span>;\n        <span class=\"supfact\">iVar2</span> =\n            asn1_get_length(&amp; <span class=\"supfact\">p</span>, &amp;\n                            <span class=\"supfact\">inf</span>, <span class=\"supfact\">plength</span>,\n                            (int)<span class=\"supfact\">max</span>);\n        if ((<span class=\"supfact\">iVar2</span> != Number) & amp; &amp;\n            ((<span class=\"supfact\">inf</span> == Number ||\n              ((<span class=\"supfact\">ret</span> & amp; Number) != Number)))) {\n          if (<span class=\"supfact\">omax</span> -\n                      ((long)<span class=\"supfact\">p</span> - (long)*<span class=\"supfact\">pp</span>) &\n                  lt;\n              *<span class=\"supfact\">plength</span>) {\n            ERR_put_error(Number, Number, Number, String, Number);\n            <span class=\"supfact\">ret</span> = <span class=\"supfact\">ret</span> | Number;\n          }\n          *<span class=\"supfact\">pp</span> = <span class=\"supfact\">p</span>;\n          return <span class=\"supfact\">inf</span> | <span class=\"supfact\">ret</span>;\n        }\n      }\n    }\n  }\n  ERR_put_error(Number, Number, Number, String, Number);\n  return Number;\n}", "var": [{"name": "iVar2", "type": "int", "pred_name": "iVar2", "ref_name": "iVar2", "ref_type": "int"}, {"name": "local_3c", "type": "uint", "pred_name": "bits", "ref_name": "inf", "ref_type": "int"}, {"name": "local_38", "type": "ulong", "pred_name": "local_38", "ref_name": "p", "ref_type": "uchar * *"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "i", "ref_type": "int"}, {"name": "local_2c", "type": "disappear", "pred_name": "", "ref_name": "xclass", "ref_type": "int"}, {"name": "local_28", "type": "disappear", "pred_name": "", "ref_name": "max", "ref_type": "long"}, {"name": "local_1c", "type": "disappear", "pred_name": "", "ref_name": "tag", "ref_type": "int"}, {"name": "local_18", "type": "ulong", "pred_name": "__unk__", "ref_name": "l", "ref_type": "long"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "ret", "ref_type": "int"}, {"name": "pp", "type": "ulong", "pred_name": "__unk__", "ref_name": "pp", "ref_type": "uchar * * *"}, {"name": "plength", "type": "ulong", "pred_name": "__unk__", "ref_name": "plength", "ref_type": "long * *"}, {"name": "ptag", "type": "ulong", "pred_name": "__unk__", "ref_name": "ptag", "ref_type": "int * *"}, {"name": "pclass", "type": "ulong", "pred_name": "__unk__", "ref_name": "pclass", "ref_type": "int * *"}, {"name": "omax", "type": "ulong", "pred_name": "__unk__", "ref_name": "omax", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "Peatropaulo", "repo_name": "OS-Memory-Manager", "path": "Peatropaulo/OS-Memory-Manager/21d3d2635afad0a0bf9b3ca88f889358fb2af29537b2003b1d57ea12b4aa3d74", "path_in_repo": "Peatropaulo/OS-Memory-Manager//malloc", "objdump": "", "code_s": "int printf(char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_printf_00406038)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int printf(char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_printf_00406038)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "xe1gyp", "repo_name": "device_driver_test", "path": "xe1gyp/device_driver_test/38686e68254513259032e49374bed455071f684cead6c1ffd750e559423c2d28", "path_in_repo": "xe1gyp/device_driver_test/nand/test_code/utils/fs/fs_di/create_datafile", "objdump": "", "code_s": "int fsync(int __fd) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fsync_00404050)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int fsync(int __fd) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fsync_00404050)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "Fleuri", "repo_name": "NetworkWeek6", "path": "Fleuri/NetworkWeek6/0b76053dda0b91cea3f1b06e89dbe24f99382a2a3ca683a953c1c1f5e070903b", "path_in_repo": "Fleuri/NetworkWeek6/unpv22e/mutex/prodcons1", "objdump": "", "code_s": "int pthread_attr_setdetachstate(pthread_attr_t *__attr, int __detachstate) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_attr_setdetachstate_004060c8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int pthread_attr_setdetachstate(pthread_attr_t *__attr, int __detachstate) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_attr_setdetachstate_004060c8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "Couragewang", "repo_name": "htttpd", "path": "Couragewang/htttpd/5ad39fe0d94f0685cf8736c5b67e86869bcf0f7fbd22dacd209a6c55687f923a", "path_in_repo": "Couragewang/htttpd//demo_client", "objdump": "", "code_s": "uint16_t htons(uint16_t __hostshort) {\n  uint16_t <span class=\"supfact\">uVar1</span>;\n  <span class=\"supfact\">uVar1</span> = (*(code *)PTR_htons_00404038)();\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "uint16_t htons(uint16_t __hostshort) {\n  uint16_t <span class=\"supfact\">uVar1</span>;\n  <span class=\"supfact\">uVar1</span> = (*(code *)PTR_htons_00404038)();\n  return <span class=\"supfact\">uVar1</span>;\n}", "var": [{"name": "uVar1", "type": "uint16_t", "pred_name": "uVar1", "ref_name": "uVar1", "ref_type": "uint16_t"}], "body_in_train": true}, {"repo_owner": "multipath-tcp", "repo_name": "iproute-mptcp", "path": "multipath-tcp/iproute-mptcp/0163204be42ccc3295c5d6ccf1882cabd5ba7a52caf89a17dde8bc6e364caf39", "path_in_repo": "multipath-tcp/iproute-mptcp//rdma/rdma", "objdump": "", "code_s": "int fclose(FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fclose_0041d0c0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int fclose(FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fclose_0041d0c0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "FelipeSchreiber", "repo_name": "C-classes", "path": "FelipeSchreiber/C-classes/150979baabc186dfcde74cf59e95eabf5f96428a8d647dbc32d0bd3c78d80012", "path_in_repo": "FelipeSchreiber/C-classes//aula0402c", "objdump": "", "code_s": "int printf(char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_printf_00404028)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int printf(char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_printf_00404028)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "magarcia", "repo_name": "CASO", "path": "magarcia/CASO/4fa9b0a094e1d7dbfdf93f0270b2624a0d1eb900346a8e23e4daebe3bea33cef", "path_in_repo": "magarcia/CASO/Labs/Lab3/exemple-rendiment/write-to-disk1", "objdump": "", "code_s": "int atoi(char *__nptr) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_atoi_00404058)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int atoi(char *__nptr) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_atoi_00404058)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "amremam2004", "repo_name": "pjsip-trunk", "path": "amremam2004/pjsip-trunk/99aaa9f9ea944575f6e73434e074f6b410f36dfc5bfd3fe914004442c55bfc6d", "path_in_repo": "amremam2004/pjsip-trunk//pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/httpdemo", "objdump": "", "code_s": "int accept(int __fd, sockaddr *__addr, socklen_t *__addr_len) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_accept_00452300)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int accept(int __fd, sockaddr *__addr, socklen_t *__addr_len) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_accept_00452300)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "fanglinn", "repo_name": "tiny4412-SDK", "path": "fanglinn/tiny4412-SDK/153e419a6ad702f64e38cf297441dd8700aa05cd4e00abbf61604e2a8bed7387", "path_in_repo": "fanglinn/tiny4412-SDK/linux-4.19.27/tools/testing/selftests/bpf/test_skb_cgroup_id_user", "objdump": "", "code_s": "int mount(char *__special_file, char *__dir, char *__fstype, ulong __rwflag,\n          void *__data) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_mount_004120b8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int mount(char *__special_file, char *__dir, char *__fstype, ulong __rwflag,\n          void *__data) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_mount_004120b8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "Radiographie", "repo_name": "A3-FileSystem", "path": "Radiographie/A3-FileSystem/17146d558a39342bf4611e10bf831c6ffc6196bac63244f74b874dd39e6f9f6a", "path_in_repo": "Radiographie/A3-FileSystem//ext2_mkdir", "objdump": "", "code_s": "int strncmp(char *__s1, char *__s2, size_t __n) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_strncmp_00404020)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int strncmp(char *__s1, char *__s2, size_t __n) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_strncmp_00404020)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "huberyZ", "repo_name": "linux-5.0", "path": "huberyZ/linux-5.0/3305ada96d3ddca238905f948b8250fc6e36985111f86eb3fefd3a26cf5cb294", "path_in_repo": "huberyZ/linux-5.0/linux-stable/tools/testing/selftests/x86/single_step_syscall_64", "objdump": "", "code_s": "int sigemptyset(sigset_t *__set) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_sigemptyset_00404048)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int sigemptyset(sigset_t *__set) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_sigemptyset_00404048)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "amremam2004", "repo_name": "pjsip-trunk", "path": "amremam2004/pjsip-trunk/99aaa9f9ea944575f6e73434e074f6b410f36dfc5bfd3fe914004442c55bfc6d", "path_in_repo": "amremam2004/pjsip-trunk//pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/httpdemo", "objdump": "", "code_s": "int fprintf(FILE *__stream, char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fprintf_004521e8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int fprintf(FILE *__stream, char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fprintf_004521e8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "clostra", "repo_name": "newnode", "path": "clostra/newnode/9da00b67c4bd600369796ff811a4a09abecbe3309030f016562b6f240d424395", "path_in_repo": "clostra/newnode/libutp/libutp.so", "objdump": "", "code_s": "void *realloc(void *__ptr, size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_realloc_00110220)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *realloc(void *__ptr, size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_realloc_00110220)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "xianggong", "repo_name": "m2c_unit_test", "path": "xianggong/m2c_unit_test/a53d726843569d6e7220bad95b8cdd3f2bf25dc1e80e42cbe3d9fc214d280494", "path_in_repo": "xianggong/m2c_unit_test/test/integer/abs_uint8/exe_src", "objdump": "", "code_s": "int fseek(FILE *__stream, long __off, int __whence) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fseek_004040d0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int fseek(FILE *__stream, long __off, int __whence) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fseek_004040d0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "mnhrdt", "repo_name": "imscript", "path": "mnhrdt/imscript/69accb9029669bb26ebf6bf07e12f40ee6f48b1497740f36e08bc9fdfa1a6160", "path_in_repo": "mnhrdt/imscript/src/fancy_crop", "objdump": "", "code_s": "char *dirname(char *__path) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_dirname_00421020)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *dirname(char *__path) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_dirname_00421020)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "mr-sven", "repo_name": "ipc-25hdc", "path": "mr-sven/ipc-25hdc/73c360728a0a1f7663b516accca45edb6eb8c0653e5c52180aa4bcc00d8b2c41", "path_in_repo": "mr-sven/ipc-25hdc/source/user/rp-pppoe-3.8/src/pppoe-sniff", "objdump": "", "code_s": "int vsnprintf(char *__s, size_t __maxlen, char *__format,\n              __gnuc_va_list __arg) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_vsnprintf_00407048)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int vsnprintf(char *__s, size_t __maxlen, char *__format,\n              __gnuc_va_list __arg) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_vsnprintf_00407048)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "davidlt", "repo_name": "openssl-fedora", "path": "davidlt/openssl-fedora/0db47cd308e66842bdf2cfa66432793fab7061279c35c926c31cf937dfc9fa6f", "path_in_repo": "davidlt/openssl-fedora/test/jpaketest", "objdump": "000000000041111d <BN_bin2bn>:\n  41111d:\t55                   \tpush   %rbp\n  41111e:\t48 89 e5             \tmov    %rsp,%rbp\n  411121:\t48 83 ec 50          \tsub    $0x50,%rsp\n  411125:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n  411129:\t89 75 c4             \tmov    %esi,-0x3c(%rbp)\n  41112c:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n  411130:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n  411137:\t00 \n  411138:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n  41113d:\t75 11                \tjne    411150 <BN_bin2bn+0x33>\n  41113f:\te8 d2 f8 ff ff       \tcall   410a16 <BN_new>\n  411144:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  411148:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  41114c:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n  411150:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n  411155:\t75 0a                \tjne    411161 <BN_bin2bn+0x44>\n  411157:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  41115c:\te9 65 01 00 00       \tjmp    4112c6 <BN_bin2bn+0x1a9>\n  411161:\tc7 45 f0 00 00 00 00 \tmovl   $0x0,-0x10(%rbp)\n  411168:\t8b 45 c4             \tmov    -0x3c(%rbp),%eax\n  41116b:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  41116e:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n  411172:\t75 14                \tjne    411188 <BN_bin2bn+0x6b>\n  411174:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  411178:\tc7 40 08 00 00 00 00 \tmovl   $0x0,0x8(%rax)\n  41117f:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  411183:\te9 3e 01 00 00       \tjmp    4112c6 <BN_bin2bn+0x1a9>\n  411188:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  41118b:\t83 e8 01             \tsub    $0x1,%eax\n  41118e:\tc1 e8 02             \tshr    $0x2,%eax\n  411191:\t83 c0 01             \tadd    $0x1,%eax\n  411194:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  411197:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  41119a:\t83 e8 01             \tsub    $0x1,%eax\n  41119d:\t83 e0 03             \tand    $0x3,%eax\n  4111a0:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n  4111a3:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  4111a7:\t8b 50 0c             \tmov    0xc(%rax),%edx\n  4111aa:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  4111ad:\t39 c2                \tcmp    %eax,%edx\n  4111af:\t7d 19                \tjge    4111ca <BN_bin2bn+0xad>\n  4111b1:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n  4111b4:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  4111b8:\t89 d6                \tmov    %edx,%esi\n  4111ba:\t48 89 c7             \tmov    %rax,%rdi\n  4111bd:\te8 3e fb ff ff       \tcall   410d00 <bn_expand2>\n  4111c2:\t48 85 c0             \ttest   %rax,%rax\n  4111c5:\t0f 94 c0             \tsete   %al\n  4111c8:\teb 08                \tjmp    4111d2 <BN_bin2bn+0xb5>\n  4111ca:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n  4111cf:\t0f 94 c0             \tsete   %al\n  4111d2:\t84 c0                \ttest   %al,%al\n  4111d4:\t74 1d                \tje     4111f3 <BN_bin2bn+0xd6>\n  4111d6:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n  4111db:\t74 0c                \tje     4111e9 <BN_bin2bn+0xcc>\n  4111dd:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  4111e1:\t48 89 c7             \tmov    %rax,%rdi\n  4111e4:\te8 8d f7 ff ff       \tcall   410976 <BN_free>\n  4111e9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4111ee:\te9 d3 00 00 00       \tjmp    4112c6 <BN_bin2bn+0x1a9>\n  4111f3:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n  4111f6:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  4111fa:\t89 50 08             \tmov    %edx,0x8(%rax)\n  4111fd:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  411201:\tc7 40 10 00 00 00 00 \tmovl   $0x0,0x10(%rax)\n  411208:\teb 54                \tjmp    41125e <BN_bin2bn+0x141>\n  41120a:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n  41120d:\tc1 e0 08             \tshl    $0x8,%eax\n  411210:\t89 c1                \tmov    %eax,%ecx\n  411212:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  411216:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  41121a:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n  41121e:\t0f b6 00             \tmovzbl (%rax),%eax\n  411221:\t0f b6 c0             \tmovzbl %al,%eax\n  411224:\t09 c8                \tor     %ecx,%eax\n  411226:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n  411229:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  41122c:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n  41122f:\t89 55 f8             \tmov    %edx,-0x8(%rbp)\n  411232:\t85 c0                \ttest   %eax,%eax\n  411234:\t75 28                \tjne    41125e <BN_bin2bn+0x141>\n  411236:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  41123a:\t48 8b 00             \tmov    (%rax),%rax\n  41123d:\t83 6d fc 01          \tsubl   $0x1,-0x4(%rbp)\n  411241:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n  411244:\t48 c1 e2 02          \tshl    $0x2,%rdx\n  411248:\t48 01 c2             \tadd    %rax,%rdx\n  41124b:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n  41124e:\t89 02                \tmov    %eax,(%rdx)\n  411250:\tc7 45 f0 00 00 00 00 \tmovl   $0x0,-0x10(%rbp)\n  411257:\tc7 45 f8 03 00 00 00 \tmovl   $0x3,-0x8(%rbp)\n  41125e:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  411261:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n  411264:\t89 55 f4             \tmov    %edx,-0xc(%rbp)\n  411267:\t85 c0                \ttest   %eax,%eax\n  411269:\t75 9f                \tjne    41120a <BN_bin2bn+0xed>\n  41126b:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  41126f:\t8b 40 08             \tmov    0x8(%rax),%eax\n  411272:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n  411275:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n  411279:\t7e 47                \tjle    4112c2 <BN_bin2bn+0x1a5>\n  41127b:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  41127f:\t48 8b 00             \tmov    (%rax),%rax\n  411282:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n  411285:\t48 63 d2             \tmovslq %edx,%rdx\n  411288:\t48 c1 e2 02          \tshl    $0x2,%rdx\n  41128c:\t48 83 ea 04          \tsub    $0x4,%rdx\n  411290:\t48 01 d0             \tadd    %rdx,%rax\n  411293:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n  411297:\teb 16                \tjmp    4112af <BN_bin2bn+0x192>\n  411299:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  41129d:\t48 8d 50 fc          \tlea    -0x4(%rax),%rdx\n  4112a1:\t48 89 55 e0          \tmov    %rdx,-0x20(%rbp)\n  4112a5:\t8b 00                \tmov    (%rax),%eax\n  4112a7:\t85 c0                \ttest   %eax,%eax\n  4112a9:\t75 0c                \tjne    4112b7 <BN_bin2bn+0x19a>\n  4112ab:\t83 6d dc 01          \tsubl   $0x1,-0x24(%rbp)\n  4112af:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n  4112b3:\t7f e4                \tjg     411299 <BN_bin2bn+0x17c>\n  4112b5:\teb 01                \tjmp    4112b8 <BN_bin2bn+0x19b>\n  4112b7:\t90                   \tnop\n  4112b8:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  4112bc:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n  4112bf:\t89 50 08             \tmov    %edx,0x8(%rax)\n  4112c2:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n  4112c6:\tc9                   \tleave  \n  4112c7:\tc3                   \tret    ", "code_s": "BIGNUM *BN_bin2bn(uchar *<span class=\"supfact\">s</span>, int <span class=\"supfact\">len</span>,\n                  BIGNUM *<span class=\"supfact\">ret</span>) {\n  int iVar1;\n  byte *pbVar2;\n  BIGNUM *<span class=\"supfact\">pBVar3</span>;\n  bool <span class=\"supfact\">bVar4</span>;\n  BIGNUM *<span class=\"supfact\">local_50</span>;\n  byte *<span class=\"supfact\">local_40</span>;\n  int <span class=\"supfact\">local_2c</span>;\n  int *<span class=\"supfact\">local_28</span>;\n  BIGNUM *<span class=\"supfact\">local_20</span>;\n  uint <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_14</span>;\n  uint <span class=\"supfact\">local_10</span>;\n  uint <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_20</span> = (BIGNUM *)Number;\n  <span class=\"supfact\">local_50</span> = <span class=\"supfact\">ret</span>;\n  if (<span class=\"supfact\">ret</span> == (BIGNUM *)Number) {\n    <span class=\"supfact\">local_50</span> = BN_new();\n    <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_50</span>;\n  }\n  if (<span class=\"supfact\">local_50</span> == (BIGNUM *)Number) {\n    <span class=\"supfact\">local_50</span> = (BIGNUM *)Number;\n  } else {\n    <span class=\"supfact\">local_18</span> = Number;\n    if (<span class=\"supfact\">len</span> == Number) {\n      <span class=\"supfact\">local_50</span> - &gt;\n      top = Number;\n    } else {\n      <span class=\"supfact\">local_c</span> =\n          (<span class=\"supfact\">len</span> - Number & gt; &gt; Number) + Number;\n      <span class=\"supfact\">pBVar3</span> = <span class=\"supfact\">local_50</span>;\n      if (<span class=\"supfact\">local_50</span> - &gt; dmax & lt;\n          (int)<span class=\"supfact\">local_c</span>) {\n        <span class=\"supfact\">pBVar3</span> = (BIGNUM *)FUN_00410d00(\n            <span class=\"supfact\">local_50</span>, <span class=\"supfact\">local_c</span>);\n      }\n      if (<span class=\"supfact\">pBVar3</span> == (BIGNUM *)Number) {\n        if (<span class=\"supfact\">local_20</span> != (BIGNUM *)Number) {\n          BN_free(<span class=\"supfact\">local_20</span>);\n        }\n        <span class=\"supfact\">local_50</span> = (BIGNUM *)Number;\n      } else {\n        <span class=\"supfact\">local_50</span> - &gt;\n        top = <span class=\"supfact\">local_c</span>;\n        <span class=\"supfact\">local_50</span> - &gt;\n        neg = Number;\n        <span class=\"supfact\">local_40</span> = <span class=\"supfact\">s</span>;\n        <span class=\"supfact\">local_14</span> = <span class=\"supfact\">len</span>;\n        <span class=\"supfact\">local_10</span> = <span class=\"supfact\">len</span> - Number & amp;\n        Number;\n        while (iVar1 = <span class=\"supfact\">local_14</span> + -Number,\n               <span class=\"supfact\">local_14</span> != Number) {\n          pbVar2 = <span class=\"supfact\">local_40</span> + Number;\n          <span class=\"supfact\">local_18</span> =\n              (uint)*<span class=\"supfact\">local_40</span> | <span class=\"supfact\">local_18</span> & lt;\n          &lt;\n          Number;\n          <span class=\"supfact\">bVar4</span> = <span class=\"supfact\">local_10</span> == Number;\n          <span class=\"supfact\">local_40</span> = pbVar2;\n          <span class=\"supfact\">local_14</span> = iVar1;\n          <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> - Number;\n          if (<span class=\"supfact\">bVar4</span>) {\n            <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> - Number;\n            *(uint *)((ulong)<span class=\"supfact\">local_c</span> * Number +\n                          (long)<span class=\"supfact\">local_50</span> - &gt;\n                      d) = <span class=\"supfact\">local_18</span>;\n            <span class=\"supfact\">local_18</span> = Number;\n            <span class=\"supfact\">local_10</span> = Number;\n          }\n        }\n        <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">local_50</span> - &gt;\n        top;\n        if (Number & lt; <span class=\"supfact\">local_2c</span>) {\n          <span class=\"supfact\">local_28</span> =\n              (int *)((long)<span class=\"supfact\">local_50</span> - &gt;\n                      d + (long)<span class=\"supfact\">local_2c</span> * Number + -Number);\n          while ((Number & lt; <span class=\"supfact\">local_2c</span> & amp; &amp;\n                  (*<span class=\"supfact\">local_28</span> == Number))) {\n            <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">local_2c</span> + -Number;\n            <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_28</span> + -Number;\n          }\n          <span class=\"supfact\">local_50</span> - &gt;\n          top = <span class=\"supfact\">local_2c</span>;\n        }\n      }\n    }\n  }\n  return <span class=\"supfact\">local_50</span>;\n}", "code_t": "BIGNUM *BN_bin2bn(uchar *<span class=\"supfact\">s</span>, int <span class=\"supfact\">len</span>,\n                  BIGNUM *<span class=\"supfact\">ret</span>) {\n  uint uVar1;\n  uchar *puVar2;\n  BIGNUM *<span class=\"supfact\">pBVar3</span>;\n  bool <span class=\"supfact\">bVar4</span>;\n  BIGNUM *<span class=\"supfact\">ret</span> - local;\n  int <span class=\"supfact\">len</span> - local;\n  uchar *<span class=\"supfact\">s</span> - local;\n  int <span class=\"supfact\">tmp_top</span>;\n  uint *<span class=\"supfact\">ftl</span>;\n  BIGNUM *<span class=\"supfact\">bn</span>;\n  uint <span class=\"supfact\">l</span>;\n  uint <span class=\"supfact\">n</span>;\n  uint <span class=\"supfact\">m</span>;\n  uint <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">bn</span> = (BIGNUM *)Number;\n  <span class=\"supfact\">ret</span> - local = (BIGNUM *)<span class=\"supfact\">ret</span>;\n  if (<span class=\"supfact\">ret</span> == (BIGNUM *)Number) {\n    <span class=\"supfact\">ret</span> - local = (BIGNUM *)BN_new();\n    <span class=\"supfact\">bn</span> = <span class=\"supfact\">ret</span> - local;\n  }\n  if (<span class=\"supfact\">ret</span> - local == (BIGNUM *)Number) {\n    <span class=\"supfact\">ret</span> - local = (BIGNUM *)Number;\n  } else {\n    <span class=\"supfact\">l</span> = Number;\n    if (<span class=\"supfact\">len</span> == Number) {\n      <span class=\"supfact\">ret</span> - local - &gt;\n      top = Number;\n    } else {\n      <span class=\"supfact\">i</span> =\n          (<span class=\"supfact\">len</span> - Number & gt; &gt; Number) + Number;\n      <span class=\"supfact\">pBVar3</span> = (BIGNUM *)<span class=\"supfact\">ret</span> - local;\n      if (<span class=\"supfact\">ret</span> - local - &gt; dmax & lt;\n          (int)<span class=\"supfact\">i</span>) {\n        <span class=\"supfact\">pBVar3</span> =\n            bn_expand2(<span class=\"supfact\">ret</span> - local, <span class=\"supfact\">i</span>);\n      }\n      if (<span class=\"supfact\">pBVar3</span> == (BIGNUM *)Number) {\n        if (<span class=\"supfact\">bn</span> != (BIGNUM *)Number) {\n          BN_free((BIGNUM *)<span class=\"supfact\">bn</span>);\n        }\n        <span class=\"supfact\">ret</span> - local = (BIGNUM *)Number;\n      } else {\n        <span class=\"supfact\">ret</span> - local - &gt;\n        top = <span class=\"supfact\">i</span>;\n        <span class=\"supfact\">ret</span> - local - &gt;\n        neg = Number;\n        <span class=\"supfact\">s</span> - local = <span class=\"supfact\">s</span>;\n        <span class=\"supfact\">n</span> = <span class=\"supfact\">len</span>;\n        <span class=\"supfact\">m</span> = <span class=\"supfact\">len</span> - Number & amp;\n        Number;\n        while (uVar1 = <span class=\"supfact\">n</span> - Number,\n               <span class=\"supfact\">n</span> != Number) {\n          puVar2 = <span class=\"supfact\">s</span> - local + Number;\n          <span class=\"supfact\">l</span> =\n              (uint)*<span class=\"supfact\">s</span> - local | <span class=\"supfact\">l</span> & lt;\n          &lt;\n          Number;\n          <span class=\"supfact\">bVar4</span> = <span class=\"supfact\">m</span> == Number;\n          <span class=\"supfact\">s</span> - local = puVar2;\n          <span class=\"supfact\">n</span> = uVar1;\n          <span class=\"supfact\">m</span> = <span class=\"supfact\">m</span> - Number;\n          if (<span class=\"supfact\">bVar4</span>) {\n            <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> - Number;\n            <span class=\"supfact\">ret</span> - local - &gt;\n            d[<span class=\"supfact\">i</span>] = <span class=\"supfact\">l</span>;\n            <span class=\"supfact\">l</span> = Number;\n            <span class=\"supfact\">m</span> = Number;\n          }\n        }\n        <span class=\"supfact\">tmp_top</span> = <span class=\"supfact\">ret</span> - local - &gt;\n        top;\n        if (Number & lt; <span class=\"supfact\">tmp_top</span>) {\n          <span class=\"supfact\">ftl</span> = <span class=\"supfact\">ret</span> - local - &gt;\n          d + (long)<span class=\"supfact\">tmp_top</span> + -Number;\n          while ((Number & lt; <span class=\"supfact\">tmp_top</span> & amp; &amp;\n                  (*<span class=\"supfact\">ftl</span> == Number))) {\n            <span class=\"supfact\">tmp_top</span> = <span class=\"supfact\">tmp_top</span> + -Number;\n            <span class=\"supfact\">ftl</span> = <span class=\"supfact\">ftl</span> + -Number;\n          }\n          <span class=\"supfact\">ret</span> - local - &gt;\n          top = <span class=\"supfact\">tmp_top</span>;\n        }\n      }\n    }\n  }\n  return (BIGNUM *)<span class=\"supfact\">ret</span> - local;\n}", "var": [{"name": "len", "type": "int", "pred_name": "__unk__", "ref_name": "len", "ref_type": "int"}, {"name": "bVar4", "type": "bool", "pred_name": "bVar4", "ref_name": "bVar4", "ref_type": "bool"}, {"name": "local_50", "type": "__unk__", "pred_name": "__unk__", "ref_name": "ret-local", "ref_type": "BIGNUM * *"}, {"name": "local_40", "type": "__unk__", "pred_name": "__unk__", "ref_name": "s-local", "ref_type": "uchar * *"}, {"name": "local_2c", "type": "int", "pred_name": "__unk__", "ref_name": "tmp_top", "ref_type": "int"}, {"name": "local_28", "type": "__unk__", "pred_name": "__unk__", "ref_name": "ftl", "ref_type": "uint * *"}, {"name": "local_20", "type": "__unk__", "pred_name": "__unk__", "ref_name": "bn", "ref_type": "BIGNUM * *"}, {"name": "local_18", "type": "int", "pred_name": "__unk__", "ref_name": "l", "ref_type": "uint"}, {"name": "local_14", "type": "int", "pred_name": "__unk__", "ref_name": "n", "ref_type": "uint"}, {"name": "local_10", "type": "int", "pred_name": "__unk__", "ref_name": "m", "ref_type": "uint"}, {"name": "local_c", "type": "int", "pred_name": "fd", "ref_name": "i", "ref_type": "uint"}, {"name": "pBVar3", "type": "uchar * *", "pred_name": "__unk__", "ref_name": "pBVar3", "ref_type": "BIGNUM * *"}, {"name": "s", "type": "__unk__", "pred_name": "__unk__", "ref_name": "s", "ref_type": "uchar * *"}, {"name": "ret", "type": "int * *", "pred_name": "__unk__", "ref_name": "ret", "ref_type": "BIGNUM * *"}], "body_in_train": false}, {"repo_owner": "winlin", "repo_name": "GTCLogModule", "path": "winlin/GTCLogModule/0eb51af77c551af3c83fefe646b41c14a9f27bb527ea0b054126ed64d68d8af2", "path_in_repo": "winlin/GTCLogModule/use_std_buffer/MitLogTest", "objdump": "", "code_s": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_004050e0)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_004050e0)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": true}, {"repo_owner": "naps62", "repo_name": "CPD_PAPI", "path": "naps62/CPD_PAPI/a119fa17b17c45a6dbc82e1f5c177ff9b893b05cbc0fd0608b5d6960ef0c90d0", "path_in_repo": "naps62/CPD_PAPI/papi/papi-4.2.0/src/libpfm4/perf_examples/task_attach_timeout", "objdump": "", "code_s": "char *strstr(char *__haystack, char *__needle) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strstr_004701a0)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *strstr(char *__haystack, char *__needle) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strstr_004701a0)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "cooperative-computing-lab", "repo_name": "cctools", "path": "cooperative-computing-lab/cctools/21cbd1c20475a776824664323ef5ddc81ce11a79b6bfda9124775437e6cfc7b3", "path_in_repo": "cooperative-computing-lab/cctools/dttools/src/jx2json", "objdump": "", "code_s": "ssize_t write(int __fd, void *__buf, size_t __n) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_write_004220e0)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "ssize_t write(int __fd, void *__buf, size_t __n) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_write_004220e0)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "ssize_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "ssize_t"}], "body_in_train": false}, {"repo_owner": "ddccc", "repo_name": "foursort", "path": "ddccc/foursort/6e34f32a0efd9491595318ff780d0a32d23c27e73994d3c49afc654ae61753c0", "path_in_repo": "ddccc/foursort//useparfoursort", "objdump": "", "code_s": "int printf(char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_printf_0040c048)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int printf(char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_printf_0040c048)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "yshl", "repo_name": "MNNBFSL", "path": "yshl/MNNBFSL/0975a63c1e012536e7540624bd11b4fa260f0ccfebee9a745edaa4b5cb20484f", "path_in_repo": "yshl/MNNBFSL//mnnbfsl", "objdump": "", "code_s": "int putchar(int __c) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_putchar_00404020)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int putchar(int __c) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_putchar_00404020)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}]