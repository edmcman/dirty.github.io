[{"repo_owner": "githankH", "repo_name": "chromecast-mirrored-source.external", "path": "githankH/chromecast-mirrored-source.external/a4c77bebdfce1258aac6226de176b158ab477adb62cbeab650dc23be5825a8aa", "path_in_repo": "githankH/chromecast-mirrored-source.external/freetype/src/sfnt/sfnt.o", "objdump": "", "code_s": "char *FUN_0010a0ef(long <span class=\"supfact\">param_1</span>) {\n  short *psVar1;\n  long lVar2;\n  char *<span class=\"supfact\">local_38</span>;\n  char *<span class=\"supfact\">local_30</span>;\n  uint <span class=\"supfact\">local_24</span>;\n  char *<span class=\"supfact\">local_20</span>;\n  int <span class=\"supfact\">local_14</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_20</span> = (char *)Number;\n  if (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n    <span class=\"supfact\">local_10</span> = -Number;\n    <span class=\"supfact\">local_14</span> = -Number;\n    for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n         (int)(uint) * (ushort *)(<span class=\"supfact\">param_1</span> + Number);\n         <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n      psVar1 = (short *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                         (long)<span class=\"supfact\">local_c</span> * Number);\n      if ((psVar1[Number] == Number) & amp; &amp; (psVar1[Number] != Number)) {\n        if ((*psVar1 == Number) & amp; &amp;\n            ((psVar1[Number] == Number & amp; &amp;\n              (psVar1[Number] == Number)))) {\n          <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_c</span>;\n        }\n        if (((*psVar1 == Number) & amp; &amp; (psVar1[Number] == Number)) & amp;\n            &amp; (psVar1[Number] == Number)) {\n          <span class=\"supfact\">local_14</span> = <span class=\"supfact\">local_c</span>;\n        }\n      }\n    }\n    if (<span class=\"supfact\">local_10</span> == -Number) {\n      if (<span class=\"supfact\">local_14</span> != -Number) {\n        <span class=\"supfact\">local_20</span> = *(char **)(<span class=\"supfact\">param_1</span> + Number);\n        lVar2 = *(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                (long)<span class=\"supfact\">local_14</span> * Number;\n        if ((int)*(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n          <span class=\"supfact\">local_20</span>[*(ushort *)(lVar2 + Number)] = String;\n        } else {\n          *(undefined8 *)(lVar2 + Number) = Number;\n          *(undefined2 *)(lVar2 + Number) = Number;\n          *(undefined8 *)(lVar2 + Number) = Number;\n          <span class=\"supfact\">local_20</span> = (char *)Number;\n        }\n      }\n    } else {\n      <span class=\"supfact\">local_20</span> = *(char **)(<span class=\"supfact\">param_1</span> + Number);\n      lVar2 = *(long *)(<span class=\"supfact\">param_1</span> + Number) +\n              (long)<span class=\"supfact\">local_10</span> * Number;\n      <span class=\"supfact\">local_24</span> =\n          (uint)(*(ushort *)(lVar2 + Number) & gt; &gt; Number);\n      if ((int)*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n        <span class=\"supfact\">local_38</span> =\n            *(char **)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number);\n        <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_20</span>;\n        for (; <span class=\"supfact\">local_24</span> != Number;\n             <span class=\"supfact\">local_24</span> = <span class=\"supfact\">local_24</span> - Number) {\n          if (((*<span class=\"supfact\">local_38</span> == String) & amp; &amp;\n               (Number & lt; (byte)<span class=\"supfact\">local_38</span>[Number])) &\n                  amp;\n              &amp; (-Number & lt; <span class=\"supfact\">local_38</span>[Number])) {\n            *<span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_38</span>[Number];\n            <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_30</span> + Number;\n          }\n          <span class=\"supfact\">local_38</span> = <span class=\"supfact\">local_38</span> + Number;\n        }\n        *<span class=\"supfact\">local_30</span> = String;\n      } else {\n        <span class=\"supfact\">local_20</span> = (char *)Number;\n        *(undefined2 *)(lVar2 + Number) = Number;\n        *(undefined8 *)(lVar2 + Number) = Number;\n        *(undefined8 *)(lVar2 + Number) = Number;\n      }\n    }\n    *(char **)(<span class=\"supfact\">param_1</span> + Number) = <span class=\"supfact\">local_20</span>;\n  } else {\n    <span class=\"supfact\">local_20</span> = *(char **)(<span class=\"supfact\">param_1</span> + Number);\n  }\n  return <span class=\"supfact\">local_20</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "TT_Face", "pred_name": "face", "ref_name": "face", "ref_type": "TT_Face"}, {"name": "local_38", "type": "FT_Byte * *", "pred_name": "p", "ref_name": "p", "ref_type": "FT_Byte * *"}, {"name": "local_30", "type": "FT_String * *", "pred_name": "r", "ref_name": "r", "ref_type": "FT_String * *"}, {"name": "local_24", "type": "FT_UInt", "pred_name": "len", "ref_name": "len", "ref_type": "FT_UInt"}, {"name": "local_20", "type": "char * *", "pred_name": "result", "ref_name": "result", "ref_type": "char * *"}, {"name": "local_14", "type": "FT_Int", "pred_name": "found_apple", "ref_name": "found_apple", "ref_type": "FT_Int"}, {"name": "local_10", "type": "FT_Int", "pred_name": "found_win", "ref_name": "found_win", "ref_type": "FT_Int"}, {"name": "local_c", "type": "FT_Int", "pred_name": "n", "ref_name": "n", "ref_type": "FT_Int"}], "body_in_train": true}, {"repo_owner": "kaostao", "repo_name": "kona", "path": "kaostao/kona/9ead13e086c21fb82c80f501cfe4b955aace6b724ef32a43f26554ae784aedae", "path_in_repo": "kaostao/kona//k", "objdump": "", "code_s": "undefined4 FUN_0041696a(undefined8 <span class=\"supfact\">param_1</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  <span class=\"supfact\">lVar1</span> = FUN_0041650e(<span class=\"supfact\">param_1</span>);\n  if ((<span class=\"supfact\">lVar1</span> == Number) & amp; &amp;\n      (<span class=\"supfact\">lVar1</span> = FUN_0041654f(<span class=\"supfact\">param_1</span>),\n       <span class=\"supfact\">lVar1</span> == Number)) {\n    return Number;\n  }\n  return Number;\n}", "code_t": "", "var": [{"name": "param_1", "type": "char * *", "pred_name": "name", "ref_name": "p", "ref_type": "V"}, {"name": "lVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "IVar2", "ref_type": "I"}], "body_in_train": false}, {"repo_owner": "sbytnar", "repo_name": "mspdebug-patches", "path": "sbytnar/mspdebug-patches/0f4b9a42a67fb387bfed4c89f3b6c5cde3179569303e8de3598541b478a478f8", "path_in_repo": "sbytnar/mspdebug-patches//devcmd.o", "objdump": "", "code_s": "undefined8 FUN_00100a40(long *<span class=\"supfact\">param_1</span>,\n                        long <span class=\"supfact\">param_2</span>) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  *<span class=\"supfact\">param_1</span> = <span class=\"supfact\">param_2</span>;\n  if (*<span class=\"supfact\">param_1</span> == Number) {\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else {\n    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n    *(undefined4 *)((long)<span class=\"supfact\">param_1</span> + Number) = Number;\n    *(undefined2 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n    <span class=\"supfact\">uVar1</span> = Number;\n  }\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "unzFile", "pred_name": "file", "ref_name": "hexout", "ref_type": "hexout_data * *"}, {"name": "param_2", "type": "int * *", "pred_name": "method", "ref_name": "filename", "ref_type": "char * *"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "pFVar2", "ref_type": "FILE * *"}], "body_in_train": false}, {"repo_owner": "yhuili", "repo_name": "ComputerAnimation", "path": "yhuili/ComputerAnimation/8bd49462b363620e4525ece47a6f8491ec893c43b6a4a4b0f785c00c5c3b0987", "path_in_repo": "yhuili/ComputerAnimation/csci520-assignment2-startercode-2013/csci520-assignment2-startercode/fltk-1.3.2/test/overlay", "objdump": "", "code_s": "void FUN_00432192(undefined8 *<span class=\"supfact\">param_1</span>) {\n  *<span class=\"supfact\">param_1</span> = &amp;\n  PTR_FUN_00434420;\n  FUN_00411408();\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "Fl_Int_Input * *", "pred_name": "this", "ref_name": "this", "ref_type": "Fl_Return_Button * *"}], "body_in_train": false}, {"repo_owner": "kondra", "repo_name": "kanji_test", "path": "kondra/kanji_test/ee0a6ef58dd82fe20667ecd7e16c00aa048e7823a95946fb8ab40dd8a2913db3", "path_in_repo": "kondra/kanji_test/src/add_kanji.o", "objdump": "", "code_s": "double FUN_001005a0(int *<span class=\"supfact\">param_1</span>, undefined8 param_2,\n                    long <span class=\"supfact\">param_3</span>) {\n  int iVar1;\n  undefined8 uVar2;\n  undefined *<span class=\"supfact\">puVar3</span>;\n  undefined8 <span class=\"supfact\">auStack_140</span>[Number];\n  undefined <span class=\"supfact\">auStack_110</span>[Number];\n  int <span class=\"supfact\">local_1c</span>;\n  if (<span class=\"supfact\">param_1</span> != (int *)Number) {\n    iVar1 = <span class=\"supfact\">param_1</span>[Number];\n    <span class=\"supfact\">puVar3</span> = <span class=\"supfact\">auStack_110</span>;\n    for (<span class=\"supfact\">local_1c</span> = Number; <span class=\"supfact\">local_1c</span> & lt;\n         *<span class=\"supfact\">param_1</span>;\n         <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number) {\n      *(undefined8 *)(<span class=\"supfact\">puVar3</span> + -Number) = Number;\n      uVar2 = *(undefined8 *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                              (long)<span class=\"supfact\">local_1c</span> * Number);\n      *(undefined8 *)(<span class=\"supfact\">puVar3</span> + -Number) = Number;\n      *(undefined8 *)(<span class=\"supfact\">puVar3</span> + -Number) = uVar2;\n      *(undefined8 *)(<span class=\"supfact\">puVar3</span> + -Number) = Number;\n      *(undefined8 *)(<span class=\"supfact\">puVar3</span> + -Number) = Number;\n      <span class=\"supfact\">puVar3</span> = <span class=\"supfact\">puVar3</span> + -Number;\n    }\n    *(undefined8 *)(<span class=\"supfact\">param_3</span> + Number) =\n        *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n    return (double)iVar1;\n  }\n  do {\n  } while (true);\n}", "code_t": "", "var": [{"name": "param_1", "type": "fz_context * *", "pred_name": "ctx", "ref_name": "old", "ref_type": "Kanji * *"}, {"name": "param_3", "type": "disappear", "pred_name": "", "ref_name": "w", "ref_type": "Data * *"}, {"name": "puVar3", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_140", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_110", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_1c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "gint"}], "body_in_train": false}, {"repo_owner": "jenniferplayer-lambdaschool", "repo_name": "Intro-To-C", "path": "jenniferplayer-lambdaschool/Intro-To-C/23f38965e218c9eb6f4ae6935dbf58e10c9c3da7dab00d1b83c2da7098631a6e", "path_in_repo": "jenniferplayer-lambdaschool/Intro-To-C/pointers/pointers", "objdump": "", "code_s": "void FUN_004013d0(undefined4 <span class=\"supfact\">param_1</span>,\n                  undefined8 <span class=\"supfact\">param_2</span>,\n                  undefined8 <span class=\"supfact\">param_3</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  _DT_INIT();\n  <span class=\"supfact\">lVar1</span> = Number;\n  do {\n    (*(code *)(&amp; __DT_INIT_ARRAY)[<span class=\"supfact\">lVar1</span>])(\n        <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n        <span class=\"supfact\">param_3</span>);\n    <span class=\"supfact\">lVar1</span> = <span class=\"supfact\">lVar1</span> + Number;\n  } while (<span class=\"supfact\">lVar1</span> != Number);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "param_2", "type": "undefined8", "pred_name": "param_2", "ref_name": "param_2", "ref_type": "undefined8"}, {"name": "param_3", "type": "undefined8", "pred_name": "param_3", "ref_name": "param_3", "ref_type": "undefined8"}, {"name": "lVar1", "type": "long", "pred_name": "lVar1", "ref_name": "lVar1", "ref_type": "long"}], "body_in_train": true}, {"repo_owner": "Alpha-10000", "repo_name": "my-kvm-tool", "path": "Alpha-10000/my-kvm-tool/26714645726d57aae3c2b99c9eae0453272b9b8c52b49ab58c99ca3bc4429830", "path_in_repo": "Alpha-10000/my-kvm-tool/tests/minimal-linux/src/tools/perf/util/pmu.o", "objdump": "", "code_s": "long FUN_0010170d(long <span class=\"supfact\">param_1</span>) {\n  undefined *<span class=\"supfact\">puVar1</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  undefined <span class=\"supfact\">auStack_50</span>[Number];\n  undefined <span class=\"supfact\">auStack_40</span>[Number];\n  <span class=\"supfact\">puVar1</span> = <span class=\"supfact\">auStack_40</span>;\n  if (<span class=\"supfact\">param_1</span> == Number) {\n    <span class=\"supfact\">param_1</span> = Number;\n  } else {\n    <span class=\"supfact\">puVar1</span> = <span class=\"supfact\">auStack_50</span>;\n  }\n  if (*(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number) !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    *(undefined8 *)(<span class=\"supfact\">puVar1</span> + -Number) = Number;\n  }\n  return <span class=\"supfact\">param_1</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "char * *", "pred_name": "path", "ref_name": "path", "ref_type": "char * *"}, {"name": "puVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "auStack_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_40", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "mend0za", "repo_name": "QEMU-dt-config", "path": "mend0za/QEMU-dt-config/92d8349973cb984fb7413928206eb2eb492e9788869ea3163454e38b12f9c619", "path_in_repo": "mend0za/QEMU-dt-config//hw/pci/pci.o", "objdump": "", "code_s": "void FUN_0010004f(undefined2 *<span class=\"supfact\">param_1</span>,\n                  undefined2 <span class=\"supfact\">param_2</span>) {\n  *<span class=\"supfact\">param_1</span> = <span class=\"supfact\">param_2</span>;\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "void * *", "pred_name": "ptr", "ref_name": "ptr", "ref_type": "void * *"}, {"name": "param_2", "type": "uint16_t", "pred_name": "v", "ref_name": "v", "ref_type": "uint16_t"}], "body_in_train": false}, {"repo_owner": "heepdog", "repo_name": "u8g2", "path": "heepdog/u8g2/4244105b0f33c7b4fe1917a657bd644f871ddfc81f25f6771734e700787fb737", "path_in_repo": "heepdog/u8g2/include/sys/sdl/selection_list/u8g2_sdl", "objdump": "", "code_s": "void FUN_004072f0(undefined8 <span class=\"supfact\">param_1</span>,\n                  undefined8 <span class=\"supfact\">param_2</span>,\n                  undefined8 <span class=\"supfact\">param_3</span>,\n                  undefined8 <span class=\"supfact\">param_4</span>) {\n  undefined <span class=\"supfact\">local_11</span>;\n  undefined8 <span class=\"supfact\">local_10</span>;\n  FUN_00424998(<span class=\"supfact\">param_1</span>, FUN_0041c650, FUN_004170ae,\n               <span class=\"supfact\">param_3</span>, <span class=\"supfact\">param_4</span>);\n  <span class=\"supfact\">local_10</span> = FUN_00402eb8(&amp; <span class=\"supfact\">local_11</span>);\n  FUN_00413cfa(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_10</span>,\n               <span class=\"supfact\">local_11</span>, FUN_00412710, <span class=\"supfact\">param_2</span>);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "u8g2_t * *", "pred_name": "u8g2", "ref_name": "u8g2", "ref_type": "u8g2_t * *"}, {"name": "param_2", "type": "u8g2_cb_t * *", "pred_name": "rotation", "ref_name": "rotation", "ref_type": "u8g2_cb_t * *"}, {"name": "param_3", "type": "u8x8_msg_cb", "pred_name": "byte_cb", "ref_name": "byte_cb", "ref_type": "u8x8_msg_cb"}, {"name": "param_4", "type": "u8x8_msg_cb", "pred_name": "gpio_and_delay_cb", "ref_name": "gpio_and_delay_cb", "ref_type": "u8x8_msg_cb"}, {"name": "local_11", "type": "uint8_t", "pred_name": "tile_buf_height", "ref_name": "tile_buf_height", "ref_type": "uint8_t"}, {"name": "local_10", "type": "uint8_t * *", "pred_name": "buf", "ref_name": "buf", "ref_type": "uint8_t * *"}], "body_in_train": false}, {"repo_owner": "amery", "repo_name": "clip-itk", "path": "amery/clip-itk/77c2410a11974ba206697b445551d8f420163786acf05d0d297b956e4aa18a76", "path_in_repo": "amery/clip-itk/cliplibs/clip-gd/gd/gd2copypal", "objdump": "", "code_s": "undefined8 FUN_0040666e(undefined8 <span class=\"supfact\">param_1</span>,\n                        undefined4 <span class=\"supfact\">param_2</span>,\n                        undefined4 <span class=\"supfact\">param_3</span>,\n                        undefined8 <span class=\"supfact\">param_4</span>) {\n  long lVar1;\n  undefined8 uVar2;\n  lVar1 = FUN_00406a9e(Number, Number);\n  FUN_00406174(<span class=\"supfact\">param_1</span>, lVar1, <span class=\"supfact\">param_2</span>,\n               <span class=\"supfact\">param_3</span>);\n  uVar2 = FUN_00406b75(lVar1, <span class=\"supfact\">param_4</span>);\n  (**(code **)(lVar1 + Number))(lVar1);\n  return uVar2;\n}", "code_t": "", "var": [{"name": "param_1", "type": "cst_string * *", "pred_name": "string", "ref_name": "im", "ref_type": "gdImagePtr"}, {"name": "param_2", "type": "int", "pred_name": "x", "ref_name": "cs", "ref_type": "int"}, {"name": "param_3", "type": "int", "pred_name": "y", "ref_name": "fmt", "ref_type": "int"}, {"name": "param_4", "type": "char * *", "pred_name": "text", "ref_name": "size", "ref_type": "int * *"}], "body_in_train": false}, {"repo_owner": "krackeroda", "repo_name": "ContikiIDS", "path": "krackeroda/ContikiIDS/28bd7a04a89b67ff268e6ed364142dbdcdf96b0e41f6a263fac1e7d6ea65472e", "path_in_repo": "krackeroda/ContikiIDS/examples/example-shell/example-shell.native", "objdump": "", "code_s": "void FUN_0040a620(void) {\n  int <span class=\"supfact\">iVar1</span>;\n  undefined8 *<span class=\"supfact\">local_10</span>;\n  for (<span class=\"supfact\">local_10</span> = (undefined8 *)list_head(PTR_DAT_0042e1a8);\n       <span class=\"supfact\">local_10</span> != (undefined8 *)Number;\n       <span class=\"supfact\">local_10</span> = (undefined8 *)*<span class=\"supfact\">local_10</span>) {\n    if (<span class=\"supfact\">local_10</span> != (undefined8 *)&amp; DAT_0042e2c0) {\n      <span class=\"supfact\">iVar1</span> =\n          process_is_running(<span class=\"supfact\">local_10</span>[Number]);\n      if (<span class=\"supfact\">iVar1</span> != Number) {\n        FUN_0040a5e0(<span class=\"supfact\">local_10</span>);\n      }\n    }\n  }\n  return;\n}", "code_t": "", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "local_10", "type": "shell_command * *", "pred_name": "c", "ref_name": "c", "ref_type": "shell_command * *"}], "body_in_train": false}, {"repo_owner": "yhuili", "repo_name": "ComputerAnimation", "path": "yhuili/ComputerAnimation/8bd49462b363620e4525ece47a6f8491ec893c43b6a4a4b0f785c00c5c3b0987", "path_in_repo": "yhuili/ComputerAnimation/csci520-assignment2-startercode-2013/csci520-assignment2-startercode/fltk-1.3.2/test/overlay", "objdump": "", "code_s": "void FUN_0040882a(long <span class=\"supfact\">param_1</span>) {\n  if (((*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number) & amp; &amp;\n       (*(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) !=\n        Number)) &\n          amp;\n      &amp; (DAT_0047e09c == Number)) {\n    XFreePixmap(DAT_0047ed70);\n  }\n  FUN_00406b3a(<span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "Fl_Double_Window * *", "pred_name": "this", "ref_name": "this", "ref_type": "Fl_Double_Window * *"}], "body_in_train": false}, {"repo_owner": "comealong", "repo_name": "myMini2440", "path": "comealong/myMini2440/151f4352e145fdd06e020428ea3ea65efad3130b0d2a5717686ebf65cfd43b20", "path_in_repo": "comealong/myMini2440/mini2440-qemu/mips-softmmu/op_helper.o", "objdump": "", "code_s": "void FUN_001099ad(undefined4 <span class=\"supfact\">param_1</span>,\n                  undefined4 <span class=\"supfact\">param_2</span>,\n                  int <span class=\"supfact\">param_3</span>) {\n  uint uVar1;\n  long <span class=\"supfact\">unaff_R14</span>;\n  FUN_00109918(Number, <span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_1</span>,\n               <span class=\"supfact\">unaff_R14</span> + Number);\n  FUN_00105835();\n  if (<span class=\"supfact\">param_3</span> == Number) {\n    uVar1 = Number;\n  } else {\n    uVar1 = ~(Number & lt; &lt;\n              ((char)<span class=\"supfact\">param_3</span> + Number & amp; Number));\n  }\n  *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) =\n      *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) & amp;\n  uVar1;\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "uint32_t", "pred_name": "fst0", "ref_name": "fst0", "ref_type": "uint32_t"}, {"name": "param_2", "type": "uint32_t", "pred_name": "fst1", "ref_name": "fst1", "ref_type": "uint32_t"}, {"name": "param_3", "type": "int", "pred_name": "cc", "ref_name": "cc", "ref_type": "int"}, {"name": "unaff_R14", "type": "long", "pred_name": "unaff_R14", "ref_name": "unaff_R14", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "orangelle", "repo_name": "msyn", "path": "orangelle/msyn/027e6942b8fbda32322ba2d54a688b92d700a625f8ec0f03253c8ffb37ae47a2", "path_in_repo": "orangelle/msyn/abc/src/aig/gia/giaAig.o", "objdump": "", "code_s": "undefined[Number] FUN_00103cd4(undefined8 *<span class=\"supfact\">param_1</span>,\n                               undefined8 <span class=\"supfact\">param_2</span>,\n                               undefined8 <span class=\"supfact\">param_3</span>,\n                               undefined8 <span class=\"supfact\">param_4</span>) {\n  int iVar1;\n  undefined4 uVar2;\n  undefined8 <span class=\"supfact\">uVar3</span>;\n  undefined8 *puVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  undefined8 *puVar7;\n  undefined *puVar8;\n  undefined auVar9[Number];\n  undefined8 <span class=\"supfact\">auStack_70</span>[Number];\n  undefined8 <span class=\"supfact\">uStack_50</span>;\n  undefined <span class=\"supfact\">auStack_48</span>[Number];\n  int <span class=\"supfact\">local_44</span>;\n  undefined8 *<span class=\"supfact\">local_40</span>;\n  long <span class=\"supfact\">local_38</span>;\n  undefined8 *<span class=\"supfact\">local_30</span>;\n  undefined8 *<span class=\"supfact\">local_28</span>;\n  int <span class=\"supfact\">local_1c</span>;\n  <span class=\"supfact\">local_44</span> = (int)<span class=\"supfact\">param_2</span>;\n  puVar4 = (undefined8 *)<span class=\"supfact\">auStack_48</span>;\n  if ((<span class=\"supfact\">local_44</span> != Number) & amp; &amp;\n      ((<span class=\"supfact\">param_1</span>[Number] == Number ||\n        (puVar4 = (undefined8 *)<span class=\"supfact\">auStack_48</span>,\n         <span class=\"supfact\">param_1</span>[Number] == Number)))) {\n    <span class=\"supfact\">param_4</span> = Number;\n    <span class=\"supfact\">param_3</span> = Number;\n    <span class=\"supfact\">param_2</span> = Number;\n    puVar4 = &amp;\n    <span class=\"supfact\">uStack_50</span>;\n    <span class=\"supfact\">uStack_50</span> = Number;\n  }\n  *(undefined8 *)((long)puVar4 + -Number) = Number;\n  <span class=\"supfact\">local_40</span> = <span class=\"supfact\">param_1</span>;\n  <span class=\"supfact\">local_28</span> = (undefined8 *)FUN_00101b51(\n      <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>,\n      <span class=\"supfact\">param_4</span>);\n  puVar5 = (undefined *)((long)puVar4 + -Number);\n  *(undefined8 *)((long)puVar4 + -Number) = Number;\n  <span class=\"supfact\">uVar3</span> = *<span class=\"supfact\">local_40</span>;\n  *(undefined8 *)((long)puVar4 + -Number) = Number;\n  <span class=\"supfact\">uVar3</span> = FUN_00100016(<span class=\"supfact\">uVar3</span>);\n  *<span class=\"supfact\">local_28</span> = <span class=\"supfact\">uVar3</span>;\n  <span class=\"supfact\">uVar3</span> = <span class=\"supfact\">local_40</span>[Number];\n  *(undefined8 *)((long)puVar4 + -Number) = Number;\n  <span class=\"supfact\">uVar3</span> = FUN_00100016(<span class=\"supfact\">uVar3</span>);\n  <span class=\"supfact\">local_28</span>[Number] = <span class=\"supfact\">uVar3</span>;\n  *(undefined4 *)(<span class=\"supfact\">local_28</span> + Number) =\n      *(undefined4 *)((long)<span class=\"supfact\">local_40</span> + Number);\n  if (<span class=\"supfact\">local_44</span> != Number) {\n    *(undefined8 *)((long)puVar4 + -Number) = Number;\n    iVar1 = FUN_00101b40(<span class=\"supfact\">local_40</span>);\n    puVar5 = (undefined *)((long)puVar4 + -Number);\n    *(undefined8 *)((long)puVar4 + -Number) = Number;\n    <span class=\"supfact\">local_28</span>[Number] = (long)iVar1;\n  }\n  *(undefined8 *)(puVar5 + -Number) = Number;\n  iVar1 = FUN_00101b40(<span class=\"supfact\">local_40</span>);\n  <span class=\"supfact\">local_30</span> = (undefined8 *)(long)iVar1;\n  *(undefined8 *)(puVar5 + -Number) = Number;\n  *(undefined8 *)(puVar5 + -Number) = Number;\n  <span class=\"supfact\">uVar3</span> = FUN_0010183a(<span class=\"supfact\">local_28</span>, Number);\n  *<span class=\"supfact\">local_30</span> = <span class=\"supfact\">uVar3</span>;\n  <span class=\"supfact\">local_1c</span> = Number;\n  puVar6 = puVar5;\n  while (true) {\n    puVar8 = puVar6 + -Number;\n    <span class=\"supfact\">uVar3</span> = <span class=\"supfact\">local_40</span>[Number];\n    *(undefined8 *)(puVar6 + -Number) = Number;\n    iVar1 = FUN_00100337(<span class=\"supfact\">uVar3</span>);\n    if (iVar1 &lt; = <span class=\"supfact\">local_1c</span>)\n      break;\n    *(undefined8 *)(puVar6 + -Number) = Number;\n    <span class=\"supfact\">local_38</span> =\n        FUN_00101c01(<span class=\"supfact\">local_40</span>, <span class=\"supfact\">local_1c</span>);\n    if (<span class=\"supfact\">local_38</span> == Number)\n      break;\n    *(undefined8 *)(puVar6 + -Number) = Number;\n    iVar1 = FUN_00101c6d(<span class=\"supfact\">local_40</span>, <span class=\"supfact\">local_38</span>);\n    *(undefined8 *)(puVar6 + -Number) = Number;\n    <span class=\"supfact\">local_30</span>[iVar1] = <span class=\"supfact\">local_28</span>;\n    <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number;\n    puVar6 = puVar6 + -Number;\n  }\n  if (<span class=\"supfact\">local_40</span>[Number] != Number) {\n    <span class=\"supfact\">local_1c</span> = Number;\n    while (true) {\n      <span class=\"supfact\">uVar3</span> = <span class=\"supfact\">local_40</span>[Number];\n      *(undefined8 *)(puVar6 + -Number) = Number;\n      iVar1 = FUN_00100337(<span class=\"supfact\">uVar3</span>);\n      if (iVar1 &lt; = <span class=\"supfact\">local_1c</span>)\n        break;\n      *(undefined8 *)(puVar6 + -Number) = Number;\n      <span class=\"supfact\">local_38</span> =\n          FUN_00101c01(<span class=\"supfact\">local_40</span>, <span class=\"supfact\">local_1c</span>);\n      if (<span class=\"supfact\">local_38</span> == Number)\n        break;\n      *(undefined8 *)(puVar6 + -Number) = Number;\n      uVar2 = FUN_00101efc(<span class=\"supfact\">local_40</span>, <span class=\"supfact\">local_38</span>);\n      *(undefined8 *)(puVar6 + -Number) = Number;\n      iVar1 = FUN_00101c6d(<span class=\"supfact\">local_40</span>, <span class=\"supfact\">local_38</span>);\n      <span class=\"supfact\">uVar3</span> = <span class=\"supfact\">local_30</span>[iVar1];\n      *(undefined8 *)(puVar6 + -Number) = Number;\n      FUN_00101a16(<span class=\"supfact\">uVar3</span>, uVar2);\n      <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number;\n    }\n  }\n  <span class=\"supfact\">local_1c</span> = Number;\n  while (true) {\n    <span class=\"supfact\">uVar3</span> = <span class=\"supfact\">local_40</span>[Number];\n    *(undefined8 *)(puVar8 + -Number) = Number;\n    iVar1 = FUN_00100337(<span class=\"supfact\">uVar3</span>);\n    if (iVar1 &lt; = <span class=\"supfact\">local_1c</span>)\n      break;\n    *(undefined8 *)(puVar8 + -Number) = Number;\n    <span class=\"supfact\">local_38</span> =\n        FUN_00101c37(<span class=\"supfact\">local_40</span>, <span class=\"supfact\">local_1c</span>);\n    if (<span class=\"supfact\">local_38</span> == Number)\n      break;\n    *(undefined8 *)(puVar8 + -Number) = Number;\n    <span class=\"supfact\">uVar3</span> = FUN_00101e34(<span class=\"supfact\">local_38</span>);\n    *(undefined8 *)(puVar8 + -Number) = Number;\n    *(undefined8 *)(puVar8 + -Number) = Number;\n    uVar2 = FUN_00101c6d(<span class=\"supfact\">local_40</span>, <span class=\"supfact\">local_38</span>,\n                         <span class=\"supfact\">local_38</span>, <span class=\"supfact\">uVar3</span>);\n    *(undefined8 *)(puVar8 + -Number) = Number;\n    FUN_00102e68(<span class=\"supfact\">local_30</span>, <span class=\"supfact\">local_38</span>, uVar2);\n    *(undefined8 *)(puVar8 + -Number) = Number;\n    iVar1 = FUN_00101c6d(<span class=\"supfact\">local_40</span>, <span class=\"supfact\">local_38</span>);\n    puVar7 = (undefined8 *)(puVar8 + -Number);\n    puVar8 = puVar8 + -Number;\n    *puVar7 = Number;\n    <span class=\"supfact\">local_30</span>[iVar1] = <span class=\"supfact\">local_28</span>;\n    <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number;\n  }\n  *(undefined8 *)(puVar8 + -Number) = Number;\n  uVar2 = FUN_00101b2f(<span class=\"supfact\">local_40</span>);\n  *(undefined8 *)(puVar8 + -Number) = Number;\n  if (<span class=\"supfact\">local_30</span> != (undefined8 *)Number) {\n    *(undefined8 *)(puVar8 + -Number) = Number;\n  }\n  auVar9._8_4_ = uVar2;\n  auVar9._0_8_ = <span class=\"supfact\">local_28</span>;\n  auVar9._12_4_ = Number;\n  return auVar9;\n}", "code_t": "", "var": [{"name": "param_1", "type": "Gia_Man_t * *", "pred_name": "p", "ref_name": "p", "ref_type": "Gia_Man_t * *"}, {"name": "param_2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "param_3", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "param_4", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uVar3", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_70", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_48", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_44", "type": "int", "pred_name": "__unk__", "ref_name": "fChoices-local", "ref_type": "int"}, {"name": "local_40", "type": "Gia_Man_t * *", "pred_name": "p-local", "ref_name": "p-local", "ref_type": "Gia_Man_t * *"}, {"name": "local_38", "type": "Gia_Obj_t * *", "pred_name": "pObj", "ref_name": "pObj", "ref_type": "Gia_Obj_t * *"}, {"name": "local_30", "type": "Aig_Obj_t * * *", "pred_name": "ppNodes", "ref_name": "ppNodes", "ref_type": "Aig_Obj_t * * *"}, {"name": "local_28", "type": "Aig_Man_t * *", "pred_name": "pNew", "ref_name": "pNew", "ref_type": "Aig_Man_t * *"}, {"name": "local_1c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "krackeroda", "repo_name": "ContikiIDS", "path": "/home/ed/tardigrade/zecong/github/binaries/krackeroda/ContikiIDS/28bd7a04a89b67ff268e6ed364142dbdcdf96b0e41f6a263fac1e7d6ea65472e", "path_in_repo": "krackeroda/ContikiIDS/examples/example-shell/example-shell.native", "objdump": "0000000000415bde <announcement_register_observer_callback>:\n  415bde:\t55                   \tpush   %rbp\n  415bdf:\t48 89 e5             \tmov    %rsp,%rbp\n  415be2:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  415be6:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  415bea:\t48 89 05 27 1e 02 00 \tmov    %rax,0x21e27(%rip)        # 437a18 <observer_callback>\n  415bf1:\t90                   \tnop\n  415bf2:\t5d                   \tpop    %rbp\n  415bf3:\tc3                   \tret    ", "code_s": "void announcement_register_observer_callback(\n    undefined8 <span class=\"supfact\">param_1</span>) {\n  DAT_00437a18 = <span class=\"supfact\">param_1</span>;\n  return;\n}", "code_t": "void announcement_register_observer_callback(\n    announcement_observer <span class=\"supfact\">callback</span>) {\n  announcement_observer <span class=\"supfact\">callback</span> - local;\n  observer_callback = <span class=\"supfact\">callback</span>;\n  return;\n}", "var": [{"name": "param_1", "type": "announcement_observer", "pred_name": "callback", "ref_name": "callback", "ref_type": "announcement_observer"}], "body_in_train": false}, {"repo_owner": "LC2010", "repo_name": "nginxConf", "path": "LC2010/nginxConf/c42a8c9c62415faf73bc7fe632a0934ce46992cdbafa394eb61f3b79fae57d69", "path_in_repo": "LC2010/nginxConf/nginx/src/openssl-0.9.8l/crypto/asn1/a_object.o", "objdump": "", "code_s": "undefined[Number] FUN_00100000(long <span class=\"supfact\">param_1</span>,\n                               long *<span class=\"supfact\">param_2</span>,\n                               long <span class=\"supfact\">param_3</span>) {\n  uint uVar1;\n  ulong <span class=\"supfact\">uVar2</span>;\n  undefined auVar3[Number];\n  if ((<span class=\"supfact\">param_1</span> == Number) ||\n      (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number)) {\n    <span class=\"supfact\">uVar2</span> = Number;\n  } else {\n    uVar1 = *(uint *)(<span class=\"supfact\">param_1</span> + Number);\n    <span class=\"supfact\">param_3</span> = Number;\n    if (<span class=\"supfact\">param_2</span> == (long *)Number) {\n      <span class=\"supfact\">uVar2</span> = (ulong)uVar1;\n    } else {\n      <span class=\"supfact\">param_3</span> =\n          (long)*(int *)(<span class=\"supfact\">param_1</span> + Number) +\n          *<span class=\"supfact\">param_2</span>;\n      *<span class=\"supfact\">param_2</span> = <span class=\"supfact\">param_3</span>;\n      <span class=\"supfact\">uVar2</span> = (ulong)uVar1;\n    }\n  }\n  auVar3._8_8_ = <span class=\"supfact\">param_3</span>;\n  auVar3._0_8_ = <span class=\"supfact\">uVar2</span>;\n  return auVar3;\n}", "code_t": "", "var": [{"name": "param_1", "type": "ASN1_OBJECT * *", "pred_name": "a", "ref_name": "a", "ref_type": "ASN1_OBJECT * *"}, {"name": "param_2", "type": "uchar * * *", "pred_name": "pp", "ref_name": "pp", "ref_type": "uchar * * *"}, {"name": "param_3", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uVar2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "yangzhengxing", "repo_name": "PhysX-3.3", "path": "yangzhengxing/PhysX-3.3/2a202683a50ad6ff11b8ae7b3ae78edacf27f17f4fce07ba5c254bbd98eaf523", "path_in_repo": "yangzhengxing/PhysX-3.3/PhysXSDK/Samples/compiler/linux64/build/SampleRenderer-MT_debug/SampleFramework/renderer/src/RendererCapsuleShape.cpp.o", "objdump": "", "code_s": "void FUN_00102d04(long *<span class=\"supfact\">param_1</span>) {\n  if (<span class=\"supfact\">param_1</span> != (long *)Number) {\n    (**(code **)(*<span class=\"supfact\">param_1</span> + Number))(<span class=\"supfact\">param_1</span>);\n  }\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt; * *", "pred_name": "this", "ref_name": "this", "ref_type": "RendererIndexBuffer * *"}], "body_in_train": false}, {"repo_owner": "SebsterG", "repo_name": "INF5620", "path": "SebsterG/INF5620/03b0663e0789d098c0101bec883b32711ffc1b7daac9e5471f4abe302ab9bb31", "path_in_repo": "SebsterG/INF5620/Wave_project/ffmpeg-2.8/libavdevice/alsa_enc.o", "objdump": "", "code_s": "undefined4 FUN_00100000(long <span class=\"supfact\">param_1</span>) {\n  undefined4 <span class=\"supfact\">uStack_2c</span>;\n  int <span class=\"supfact\">local_28</span>;\n  undefined4 <span class=\"supfact\">uStack_1c</span>;\n  if ((*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) & amp; &amp;\n      (*(int *)(*(long *)(**(long **)(<span class=\"supfact\">param_1</span> + Number) +\n                          Number) +\n                Number) == Number)) {\n    if (*(int *)(*(long\n                       *)(CONCAT44(\n                              <span class=\"supfact\">uStack_1c</span>,\n                              *(undefined4\n                                    *)(*(long\n                                             *)(**(long *\n                                                       *)(<span class=\"supfact\">param_1</span> +\n                                                          Number) +\n                                                Number) +\n                                       Number)) +\n                          Number) +\n                 Number) == <span class=\"supfact\">local_28</span>) {\n      <span class=\"supfact\">uStack_2c</span> =\n          (undefined4)((ulong)<span class=\"supfact\">param_1</span> & gt; &gt; Number);\n    } else {\n      <span class=\"supfact\">uStack_2c</span> = Number;\n    }\n  } else {\n    <span class=\"supfact\">uStack_2c</span> = Number;\n  }\n  return <span class=\"supfact\">uStack_2c</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "AVFormatContext * *", "pred_name": "s1", "ref_name": "s1", "ref_type": "AVFormatContext * *"}, {"name": "uStack_2c", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_28", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_1c", "type": "int", "pred_name": "res", "ref_name": "res", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "engine12", "repo_name": "mplayer", "path": "engine12/mplayer/dba72118c587cd348114c74fef1d1e55ffa1f585d402faf32f9724e234c2e0b6", "path_in_repo": "engine12/mplayer/ffmpeg/libavcodec/alacenc.o", "objdump": "", "code_s": "void FUN_001014b8(long <span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  if (*(int *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) ==\n      Number) {\n    FUN_00100af6(<span class=\"supfact\">param_1</span>);\n  }\n  FUN_001001ad(<span class=\"supfact\">param_1</span> + Number, Number,\n               *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n  FUN_001001ad(<span class=\"supfact\">param_1</span> + Number, Number,\n               *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n       *(int *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number);\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    FUN_001005fb(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_c</span>);\n    FUN_001001ad(<span class=\"supfact\">param_1</span> + Number, Number, Number);\n    FUN_001001ad(<span class=\"supfact\">param_1</span> + Number, Number,\n                 *(undefined4 *)((long)<span class=\"supfact\">local_c</span> * Number +\n                                 <span class=\"supfact\">param_1</span> + Number));\n    FUN_001001ad(<span class=\"supfact\">param_1</span> + Number, Number,\n                 *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n    FUN_001001ad(<span class=\"supfact\">param_1</span> + Number, Number,\n                 *(undefined4 *)((long)<span class=\"supfact\">local_c</span> * Number +\n                                 <span class=\"supfact\">param_1</span> + Number));\n    for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> & lt;\n         *(int *)((long)<span class=\"supfact\">local_c</span> * Number +\n                  <span class=\"supfact\">param_1</span> + Number);\n         <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n      FUN_00100280(<span class=\"supfact\">param_1</span> + Number, Number,\n                   *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number +\n                                   ((long)<span class=\"supfact\">local_c</span> * Number +\n                                    (long)<span class=\"supfact\">local_10</span> + Number) *\n                                       Number));\n    }\n  }\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n       *(int *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number);\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    FUN_00100dcc(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_c</span>);\n    FUN_001012fb(<span class=\"supfact\">param_1</span>);\n  }\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "PVSCSICmdDescSetupRings * *", "pred_name": "rc", "ref_name": "s", "ref_type": "AlacEncodeContext * *"}, {"name": "local_10", "type": "int", "pred_name": "j", "ref_name": "j", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "mnolan2", "repo_name": "offlineSlSc", "path": "mnolan2/offlineSlSc/2595c28e3a40f38fc290545d944015cbebd6fc2ad077725d715b8798190805d7", "path_in_repo": "mnolan2/offlineSlSc/dlib-18.7/dlib/test/tester.o", "objdump": "", "code_s": "undefined FUN_0010583e(long <span class=\"supfact\">param_1</span>) {\n  return *(undefined *)(<span class=\"supfact\">param_1</span> + Number);\n}", "code_t": "", "var": [{"name": "param_1", "type": "void * *", "pred_name": "opaque", "ref_name": "this", "ref_type": "binary_search_tree_kernel_1&lt;std::__cxx11::basic_string&lt;char,_std::char_traits&lt;char&gt;,_std::allocator&lt;char&gt;_&gt;,_test::tester*,_dlib::memory_manager_stateless_kernel_1&lt;char&gt;,_std::less&lt;std::__cxx11::basic_string&lt;char,_std::char_traits&lt;char&gt;,_std::allocator&lt;char&gt;_&gt;_&gt;_&gt; * *"}], "body_in_train": false}, {"repo_owner": "HalogenOS", "repo_name": "android_external_elfutils", "path": "HalogenOS/android_external_elfutils/10551d2985b4dcf6b8780f38ff1251f3b5c642ef70c456dca05bf4b2dc3db753", "path_in_repo": "HalogenOS/android_external_elfutils/src/libdwfl/open.os", "objdump": "", "code_s": "undefined[Number] FUN_00100000(uint <span class=\"supfact\">param_1</span>,\n                               long **<span class=\"supfact\">param_2</span>,\n                               long <span class=\"supfact\">param_3</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  undefined *<span class=\"supfact\">puVar2</span>;\n  undefined auVar3[Number];\n  undefined8 <span class=\"supfact\">uStack_78</span>;\n  undefined <span class=\"supfact\">auStack_70</span>[Number];\n  undefined <span class=\"supfact\">auStack_60</span>[Number];\n  uint <span class=\"supfact\">local_c</span>;\n  if (**<span class=\"supfact\">param_2</span> == Number) {\n    <span class=\"supfact\">lVar1</span> = Number;\n  } else {\n    <span class=\"supfact\">param_3</span> = **<span class=\"supfact\">param_2</span>;\n    <span class=\"supfact\">lVar1</span> =\n        (*<span class=\"supfact\">param_2</span>)[Number] + <span class=\"supfact\">param_3</span>;\n  }\n  if ((*<span class=\"supfact\">param_2</span>)[Number] == Number) {\n    <span class=\"supfact\">local_c</span> = Number;\n    <span class=\"supfact\">lVar1</span> = <span class=\"supfact\">param_3</span>;\n  } else {\n    <span class=\"supfact\">puVar2</span> = <span class=\"supfact\">auStack_60</span>;\n    if (<span class=\"supfact\">param_1</span> == Number) {\n      <span class=\"supfact\">puVar2</span> = <span class=\"supfact\">auStack_70</span>;\n    }\n    if (<span class=\"supfact\">param_1</span> == Number) {\n      <span class=\"supfact\">local_c</span> = Number;\n      *(undefined8 *)(<span class=\"supfact\">puVar2</span> + -Number) = Number;\n    } else {\n      *(undefined8 *)(<span class=\"supfact\">puVar2</span> + -Number) = Number;\n      <span class=\"supfact\">local_c</span> = <span class=\"supfact\">param_1</span>;\n    }\n  }\n  auVar3._4_4_ = Number;\n  auVar3._0_4_ = <span class=\"supfact\">local_c</span>;\n  auVar3._8_8_ = <span class=\"supfact\">lVar1</span>;\n  return auVar3;\n}", "code_t": "", "var": [{"name": "param_1", "type": "int", "pred_name": "operation", "ref_name": "fd", "ref_type": "int"}, {"name": "param_2", "type": "ASN1_VALUE * * *", "pred_name": "pval", "ref_name": "elf", "ref_type": "Elf * * *"}, {"name": "param_3", "type": "ASN1_ITEM * *", "pred_name": "it", "ref_name": "", "ref_type": "disappear"}, {"name": "lVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "puVar2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_78", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_70", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_60", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_c", "type": "int", "pred_name": "ret", "ref_name": "error", "ref_type": "Dwfl_Error"}], "body_in_train": false}, {"repo_owner": "AlexAltea", "repo_name": "unicorn.js", "path": "AlexAltea/unicorn.js/29e181a08feb6fe1a4e596897a475fdd4864efa7b36e2975a7e41e3fe7d36e06", "path_in_repo": "AlexAltea/unicorn.js/unicorn/qemu/arm-softmmu/target-arm/iwmmxt_helper.o", "objdump": "", "code_s": "ulong FUN_001068e4(long <span class=\"supfact\">param_1</span>,\n                   undefined8 <span class=\"supfact\">param_2</span>,\n                   byte <span class=\"supfact\">param_3</span>) {\n  uint <span class=\"supfact\">uVar1</span>;\n  ulong <span class=\"supfact\">uVar2</span>;\n  uint <span class=\"supfact\">uVar3</span>;\n  ulong <span class=\"supfact\">uVar4</span>;\n  ulong uVar5;\n  uVar5 = (ulong)(long)(int)<span class=\"supfact\">param_2</span> & gt;\n  &gt;\n  (<span class=\"supfact\">param_3</span> & amp; Number) & amp;\n  Number;\n  <span class=\"supfact\">uVar4</span> =\n      (ulong)(long)(int)((ulong)<span class=\"supfact\">param_2</span> & gt; &gt; Number) & gt;\n  &gt;\n  (<span class=\"supfact\">param_3</span> & amp; Number);\n  <span class=\"supfact\">uVar2</span> = <span class=\"supfact\">uVar4</span> & lt;\n  &lt;\n  Number | uVar5;\n  if (uVar5 == Number) {\n    <span class=\"supfact\">uVar3</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar3</span> = Number;\n  }\n  if ((<span class=\"supfact\">uVar4</span> & amp; Number) == Number) {\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar1</span> = Number;\n  }\n  *(uint *)(<span class=\"supfact\">param_1</span> + Number) =\n      <span class=\"supfact\">uVar1</span> | <span class=\"supfact\">uVar3</span> |\n      (uint)(<span class=\"supfact\">uVar2</span> & gt; &gt; Number) & amp;\n  Number | (uint)<span class=\"supfact\">uVar4</span> &amp;\n  Number;\n  return <span class=\"supfact\">uVar2</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "CPUARMState * *", "pred_name": "env", "ref_name": "env", "ref_type": "CPUARMState * *"}, {"name": "param_2", "type": "uint64_t", "pred_name": "x", "ref_name": "x", "ref_type": "uint64_t"}, {"name": "param_3", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uVar1", "type": "uint", "pred_name": "uVar2", "ref_name": "uVar1", "ref_type": "uint"}, {"name": "uVar2", "type": "ulong", "pred_name": "uVar3", "ref_name": "uVar2", "ref_type": "ulong"}, {"name": "uVar3", "type": "uint32_t", "pred_name": "n", "ref_name": "n", "ref_type": "uint32_t"}, {"name": "uVar4", "type": "ulong", "pred_name": "uVar5", "ref_name": "uVar4", "ref_type": "ulong"}], "body_in_train": false}, {"repo_owner": "L4STeam", "repo_name": "sch_dualpi2_upstream", "path": "L4STeam/sch_dualpi2_upstream/930edf15bddda8e2dabb6b19683bcdbe6cddaf0325002ac1827e5f132a2b95a5", "path_in_repo": "L4STeam/sch_dualpi2_upstream/tools/testing/selftests/bpf/test_sockopt", "objdump": "", "code_s": "int FUN_00408204(long <span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  int *<span class=\"supfact\">piVar2</span>;\n  undefined <span class=\"supfact\">local_168</span>;\n  undefined <span class=\"supfact\">local_167</span>;\n  undefined2 <span class=\"supfact\">local_166</span>;\n  int <span class=\"supfact\">local_164</span>;\n  undefined <span class=\"supfact\">local_160</span>;\n  undefined <span class=\"supfact\">local_15f</span>;\n  undefined2 <span class=\"supfact\">local_15e</span>;\n  undefined4 <span class=\"supfact\">local_15c</span>;\n  undefined <span class=\"supfact\">local_158</span>;\n  undefined <span class=\"supfact\">local_157</span>;\n  undefined2 <span class=\"supfact\">local_156</span>;\n  undefined4 <span class=\"supfact\">local_154</span>;\n  undefined <span class=\"supfact\">local_150</span>;\n  undefined <span class=\"supfact\">local_14f</span>;\n  undefined2 <span class=\"supfact\">local_14e</span>;\n  undefined4 <span class=\"supfact\">local_14c</span>;\n  undefined <span class=\"supfact\">local_148</span>;\n  undefined <span class=\"supfact\">local_147</span>;\n  undefined2 <span class=\"supfact\">local_146</span>;\n  undefined4 <span class=\"supfact\">local_144</span>;\n  undefined <span class=\"supfact\">local_138</span>[Number];\n  undefined <span class=\"supfact\">local_b8</span>[Number];\n  undefined4 <span class=\"supfact\">local_b0</span>;\n  undefined4 <span class=\"supfact\">local_a8</span>;\n  undefined4 <span class=\"supfact\">local_a4</span>;\n  undefined4 <span class=\"supfact\">local_a0</span>;\n  undefined4 <span class=\"supfact\">local_78</span>[Number];\n  undefined *<span class=\"supfact\">local_68</span>;\n  undefined8 <span class=\"supfact\">local_60</span>;\n  undefined *local_58;\n  undefined8 local_18;\n  int local_10;\n  int local_c;\n  <span class=\"supfact\">local_168</span> = Number;\n  <span class=\"supfact\">local_167</span> = Number;\n  <span class=\"supfact\">local_166</span> = Number;\n  <span class=\"supfact\">local_164</span> = Number;\n  <span class=\"supfact\">local_160</span> = Number;\n  <span class=\"supfact\">local_15f</span> = Number;\n  <span class=\"supfact\">local_15e</span> = Number;\n  <span class=\"supfact\">local_15c</span> = Number;\n  <span class=\"supfact\">local_158</span> = Number;\n  <span class=\"supfact\">local_157</span> = Number;\n  <span class=\"supfact\">local_156</span> = Number;\n  <span class=\"supfact\">local_154</span> = Number;\n  <span class=\"supfact\">local_150</span> = Number;\n  <span class=\"supfact\">local_14f</span> = Number;\n  <span class=\"supfact\">local_14e</span> = Number;\n  <span class=\"supfact\">local_14c</span> = Number;\n  <span class=\"supfact\">local_148</span> = Number;\n  <span class=\"supfact\">local_147</span> = Number;\n  <span class=\"supfact\">local_146</span> = Number;\n  <span class=\"supfact\">local_144</span> = Number;\n  memset(<span class=\"supfact\">local_b8</span>, Number, Number);\n  <span class=\"supfact\">local_b0</span> = Number;\n  <span class=\"supfact\">local_a8</span> = Number;\n  <span class=\"supfact\">local_a4</span> = Number;\n  <span class=\"supfact\">local_a0</span> = Number;\n  local_c = FUN_004113ad(<span class=\"supfact\">local_b8</span>);\n  if (local_c & lt; Number) {\n    <span class=\"supfact\">piVar2</span> = __errno_location();\n    local_18 = FUN_0041857f(*<span class=\"supfact\">piVar2</span>, <span class=\"supfact\">local_138</span>,\n                            Number);\n    <span class=\"supfact\">piVar2</span> = __errno_location();\n    FUN_00403643(Number, String, String, local_18, *<span class=\"supfact\">piVar2</span>);\n    <span class=\"supfact\">piVar2</span> = __errno_location();\n    <span class=\"supfact\">iVar1</span> = -*<span class=\"supfact\">piVar2</span>;\n  } else {\n    <span class=\"supfact\">local_164</span> = local_c;\n    memset(<span class=\"supfact\">local_78</span>, Number, Number);\n    <span class=\"supfact\">local_78</span>[Number] = Number;\n    <span class=\"supfact\">local_68</span> = &amp;\n    <span class=\"supfact\">local_168</span>;\n    <span class=\"supfact\">local_60</span> = Number;\n    local_58 = &amp;\n    DAT_00421c75;\n    local_10 = FUN_0041181f(<span class=\"supfact\">local_78</span>, Number, Number);\n    if (-Number & lt; local_10) {\n      *(byte *)(<span class=\"supfact\">param_1</span> + Number) =\n          *(byte *)(<span class=\"supfact\">param_1</span> + Number) | Number;\n      close(local_10);\n    }\n    close(local_c);\n    <span class=\"supfact\">iVar1</span> = Number;\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "bpf_object * *", "pred_name": "obj", "ref_name": "obj", "ref_type": "bpf_object * *"}, {"name": "iVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "piVar2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_168", "type": "bpf_insn[5][5]", "pred_name": "insns", "ref_name": "insns", "ref_type": "bpf_insn[5][5]"}, {"name": "local_167", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_166", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_164", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_160", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_15f", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_15e", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_15c", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_158", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_157", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_156", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_154", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_150", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_14f", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_14e", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_14c", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_148", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_147", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_146", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_144", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_138", "type": "char[128][128]", "pred_name": "errmsg", "ref_name": "errmsg", "ref_type": "char[128][128]"}, {"name": "local_b8", "type": "struct bpf_create_map_attr { char * name; bpf_map_type map_type; __u32 map_flags; __u32 key_size; __u32 value_size; __u32 max_entries; __u32 numa_node; __u32 btf_fd; __u32 btf_key_type_id; __u32 btf_value_type_id; __u32 map_ifindex; __u32 inner_map_fd; PADDING (4); }", "pred_name": "map_attr", "ref_name": "map_attr", "ref_type": "struct bpf_create_map_attr { char * name; bpf_map_type map_type; __u32 map_flags; __u32 key_size; __u32 value_size; __u32 max_entries; __u32 numa_node; __u32 btf_fd; __u32 btf_key_type_id; __u32 btf_value_type_id; __u32 map_ifindex; __u32 inner_map_fd; PADDING (4); }"}, {"name": "local_b0", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_a8", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_a4", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_a0", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_78", "type": "struct bpf_load_program_attr { bpf_prog_type prog_type; bpf_attach_type expected_attach_type; char * name; bpf_insn * insns; size_t insns_cnt; char * license; __u32 kern_version; __u32 prog_ifindex; __u32 prog_btf_fd; __u32 func_info_rec_size; void * func_info; __u32 func_info_cnt; __u32 line_info_rec_size; void * line_info; __u32 line_info_cnt; __u32 log_level; __u32 prog_flags; PADDING (4); }", "pred_name": "prg_attr", "ref_name": "prg_attr", "ref_type": "struct bpf_load_program_attr { bpf_prog_type prog_type; bpf_attach_type expected_attach_type; char * name; bpf_insn * insns; size_t insns_cnt; char * license; __u32 kern_version; __u32 prog_ifindex; __u32 prog_btf_fd; __u32 func_info_rec_size; void * func_info; __u32 func_info_cnt; __u32 line_info_rec_size; void * line_info; __u32 line_info_cnt; __u32 log_level; __u32 prog_flags; PADDING (4); }"}, {"name": "local_68", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_60", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "carlohamalainen", "repo_name": "klatin", "path": "carlohamalainen/klatin/0a5f1ff48d72df7650123c17c62ff3f74adc284e575ca65089160fe122d816aa", "path_in_repo": "carlohamalainen/klatin/nauty25r2/geng", "objdump": "", "code_s": "void FUN_0040de9c(long <span class=\"supfact\">param_1</span>, int <span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">local_c</span>;\n  *(int *)(DAT_00423578 + Number) = <span class=\"supfact\">param_2</span>;\n  DAT_00423594 = <span class=\"supfact\">param_2</span>;\n  DAT_004235a0 = <span class=\"supfact\">param_2</span>;\n  DAT_004235a4 = <span class=\"supfact\">param_2</span>;\n  *(undefined2 *)(&amp; DAT_00423900 +\n                        (long)(<span class=\"supfact\">param_2</span> + Number) * Number) =\n      Number;\n  *(undefined4 *)(&amp; DAT_00423a40 +\n                        (long)(<span class=\"supfact\">param_2</span> + Number) * Number) =\n      Number;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n       DAT_0042355c;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    *(undefined4 *)(&amp;\n                    DAT_00423700 + (long)<span class=\"supfact\">local_c</span> * Number) =\n        *(undefined4 *)(<span class=\"supfact\">param_1</span> +\n                        (long)<span class=\"supfact\">local_c</span> * Number);\n  }\n  if (DAT_004234a0 != Number) {\n    DAT_004235ac = Number;\n    DAT_004235b0 = Number;\n    DAT_00423598 = <span class=\"supfact\">param_2</span>;\n    DAT_004235a8 = <span class=\"supfact\">param_2</span>;\n    DAT_004235b4 = <span class=\"supfact\">param_2</span>;\n    for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n         DAT_0042355c;\n         <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n      *(undefined4 *)(&amp;\n                      DAT_00423800 + (long)<span class=\"supfact\">local_c</span> * Number) =\n          *(undefined4 *)(<span class=\"supfact\">param_1</span> +\n                          (long)<span class=\"supfact\">local_c</span> * Number);\n    }\n    for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> &lt;\n         = <span class=\"supfact\">param_2</span>;\n         <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n      *(undefined2 *)(&amp;\n                      DAT_004239a0 + (long)<span class=\"supfact\">local_c</span> * Number) =\n          *(undefined2 *)(&amp; DAT_00423900 +\n                                (long)<span class=\"supfact\">local_c</span> * Number);\n    }\n    *(undefined2 *)(&amp; DAT_004239a0 +\n                          (long)(<span class=\"supfact\">param_2</span> + Number) * Number) =\n        Number;\n    *(undefined8 *)(DAT_00423578 + Number) = Number;\n  }\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "int * *", "pred_name": "lab", "ref_name": "lab", "ref_type": "int * *"}, {"name": "param_2", "type": "int", "pred_name": "level", "ref_name": "level", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "ausbin", "repo_name": "astro", "path": "ausbin/astro/2b21e8d91654358786e0c274dc50ae21103e72a0a01ce77398d443a2a6032f3d", "path_in_repo": "ausbin/astro/submods/unicorn/qemu/arm-softmmu/target-arm/helper.o", "objdump": "", "code_s": "long FUN_00103288(long <span class=\"supfact\">param_1</span>, int <span class=\"supfact\">param_2</span>) {\n  long lVar1;\n  ulong uVar2;\n  undefined8 *<span class=\"supfact\">puVar3</span>;\n  undefined8 <span class=\"supfact\">uStack_50</span>;\n  undefined <span class=\"supfact\">auStack_48</span>[Number];\n  int <span class=\"supfact\">local_44</span>;\n  long <span class=\"supfact\">local_40</span>;\n  uint <span class=\"supfact\">local_38</span>;\n  uint <span class=\"supfact\">local_34</span>;\n  int <span class=\"supfact\">local_30</span>;\n  undefined4 <span class=\"supfact\">local_2c</span>;\n  undefined8 <span class=\"supfact\">local_28</span>;\n  undefined8 <span class=\"supfact\">local_20</span>;\n  long <span class=\"supfact\">local_18</span>;\n  undefined8 <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">puVar3</span> = (undefined8 *)<span class=\"supfact\">auStack_48</span>;\n  <span class=\"supfact\">local_18</span> = <span class=\"supfact\">param_1</span> + Number;\n  <span class=\"supfact\">local_28</span> = Number;\n  <span class=\"supfact\">local_20</span> =\n      *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number +\n                      ((long)<span class=\"supfact\">param_2</span> + Number) * Number);\n  <span class=\"supfact\">local_10</span> =\n      *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number +\n                      ((long)<span class=\"supfact\">param_2</span> + Number) * Number);\n  <span class=\"supfact\">local_38</span> = Number;\n  if (*(long *)(<span class=\"supfact\">param_1</span> + Number +\n                ((long)<span class=\"supfact\">param_2</span> + Number) * Number) != Number) {\n    <span class=\"supfact\">puVar3</span> = &amp;\n    <span class=\"supfact\">uStack_50</span>;\n    <span class=\"supfact\">uStack_50</span> = Number;\n    *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number +\n                    ((long)<span class=\"supfact\">param_2</span> + Number) * Number) = Number;\n  }\n  *(undefined8 *)((long)<span class=\"supfact\">puVar3</span> + -Number) = Number;\n  <span class=\"supfact\">local_44</span> = <span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">local_40</span> = <span class=\"supfact\">param_1</span>;\n  lVar1 = FUN_0010045d(<span class=\"supfact\">local_10</span>, Number, Number);\n  if (lVar1 == Number) {\n    lVar1 = Number;\n  } else {\n    *(undefined8 *)((long)<span class=\"supfact\">puVar3</span> + -Number) = Number;\n    uVar2 = FUN_0010045d(<span class=\"supfact\">local_10</span>, Number, Number);\n    if (uVar2 == Number) {\n      <span class=\"supfact\">local_38</span> = <span class=\"supfact\">local_38</span> | Number;\n    } else if (uVar2 & lt; Number) {\n      if (uVar2 == Number) {\n        <span class=\"supfact\">local_38</span> = <span class=\"supfact\">local_38</span> | Number;\n      } else if (uVar2 & lt; Number) {\n        if (uVar2 == Number) {\n          return Number;\n        }\n        if (uVar2 == Number) {\n          <span class=\"supfact\">local_38</span> = <span class=\"supfact\">local_38</span> | Number;\n        }\n      }\n    }\n    *(undefined8 *)((long)<span class=\"supfact\">puVar3</span> + -Number) = Number;\n    lVar1 = FUN_0010045d(<span class=\"supfact\">local_10</span>, Number, Number);\n    <span class=\"supfact\">local_30</span> = (int)lVar1;\n    if ((<span class=\"supfact\">local_30</span> != Number) & amp; &amp;\n        (<span class=\"supfact\">local_30</span> != Number)) {\n      if (<span class=\"supfact\">local_30</span> == Number) {\n        *(undefined8 *)((long)<span class=\"supfact\">puVar3</span> + -Number) = Number;\n        lVar1 = FUN_0010045d(<span class=\"supfact\">local_10</span>, Number, Number);\n        <span class=\"supfact\">local_34</span> = (uint)lVar1;\n        if (<span class=\"supfact\">local_34</span> == Number) {\n          return lVar1;\n        }\n        *(undefined8 *)((long)<span class=\"supfact\">puVar3</span> + -Number) = Number;\n        lVar1 = FUN_0010045d(<span class=\"supfact\">local_20</span>, Number, Number);\n        if (lVar1 != Number) {\n          <span class=\"supfact\">local_34</span> = <span class=\"supfact\">local_34</span> & amp;\n          Number;\n        }\n        *(undefined8 *)((long)<span class=\"supfact\">puVar3</span> + -Number) = Number;\n        <span class=\"supfact\">local_2c</span> = FUN_001003bf(<span class=\"supfact\">local_34</span>);\n        *(undefined8 *)((long)<span class=\"supfact\">puVar3</span> + -Number) = Number;\n        FUN_001003da((int)<span class=\"supfact\">local_34</span> & gt; &gt;\n                     ((byte)<span class=\"supfact\">local_2c</span> & amp; Number));\n      }\n      *(undefined8 *)((long)<span class=\"supfact\">puVar3</span> + -Number) = Number;\n      lVar1 = <span class=\"supfact\">local_40</span>;\n    }\n  }\n  return lVar1;\n}", "code_t": "", "var": [{"name": "param_1", "type": "sPAPRMachineState * *", "pred_name": "spapr", "ref_name": "cpu", "ref_type": "ARMCPU * *"}, {"name": "param_2", "type": "int", "pred_name": "version_id", "ref_name": "n", "ref_type": "int"}, {"name": "puVar3", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_48", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_44", "type": "int", "pred_name": "version_id-local", "ref_name": "n-local", "ref_type": "int"}, {"name": "local_40", "type": "sPAPRMachineState * *", "pred_name": "spapr-local", "ref_name": "cpu-local", "ref_type": "ARMCPU * *"}, {"name": "local_38", "type": "int", "pred_name": "__unk__", "ref_name": "flags", "ref_type": "int"}, {"name": "local_34", "type": "int", "pred_name": "__unk__", "ref_name": "bas", "ref_type": "int"}, {"name": "local_30", "type": "int", "pred_name": "__unk__", "ref_name": "mask", "ref_type": "int"}, {"name": "local_2c", "type": "int", "pred_name": "__unk__", "ref_name": "basstart", "ref_type": "int"}, {"name": "local_28", "type": "ICSState * *", "pred_name": "ics", "ref_name": "len", "ref_type": "vaddr"}, {"name": "local_20", "type": "__unk__", "pred_name": "__unk__", "ref_name": "wvr", "ref_type": "vaddr"}, {"name": "local_18", "type": "__unk__", "pred_name": "__unk__", "ref_name": "env", "ref_type": "CPUARMState * *"}, {"name": "local_10", "type": "ICSState * *", "pred_name": "ics", "ref_name": "wcr", "ref_type": "uint64_t"}], "body_in_train": false}, {"repo_owner": "pauldmccarthy", "repo_name": "ccnet", "path": "pauldmccarthy/ccnet/f03b04a5dcdeda308f3ce688d2d70d0a07b02c9ebc65594e202c631949f11a84", "path_in_repo": "pauldmccarthy/ccnet//bin/ctrim", "objdump": "", "code_s": "void FUN_004118e1(undefined8 <span class=\"supfact\">param_1</span>) {\n  FUN_004164a2(<span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "this", "ref_name": "g", "ref_type": "graph_t * *"}], "body_in_train": false}, {"repo_owner": "xkfz007", "repo_name": "video_codecs", "path": "xkfz007/video_codecs/05c76f84e9eb3af15284ca40cb9c9af9b2b62350f58e2e2486d34156611e39fa", "path_in_repo": "xkfz007/video_codecs/hm-10.0/build/linux/lib/TLibCommon/objects/TComSampleAdaptiveOffset.d.o", "objdump": "", "code_s": "undefined8 FUN_00105d26(long <span class=\"supfact\">param_1</span>) {\n  return *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n}", "code_t": "", "var": [{"name": "param_1", "type": "yyscan_t", "pred_name": "yyscanner", "ref_name": "this", "ref_type": "TComPic * *"}], "body_in_train": false}, {"repo_owner": "m4rk", "repo_name": "MT9T001-linux-driver", "path": "m4rk/MT9T001-linux-driver/097f11703daa44ad433d1a4f0f4c26824e7deebc923ca554e6b646c5c1f80d90", "path_in_repo": "m4rk/MT9T001-linux-driver/snapgear-2.6-p42/user/ncurses/ncurses-5.6/test/demo_altkeys", "objdump": "", "code_s": "void FUN_004165d6(int <span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  if ((DAT_004470e0 & amp; Number) != Number) {\n    FUN_00416d93(String, <span class=\"supfact\">param_1</span>);\n  }\n  if (*(char *)(*(long *)(DAT_00446ce8 + Number) + Number) == String) {\n    <span class=\"supfact\">iVar1</span> = FUN_0041269e((int)DAT_004470ca);\n    <span class=\"supfact\">iVar1</span> =\n        (<span class=\"supfact\">iVar1</span> * <span class=\"supfact\">param_1</span>) / Number;\n    DAT_004470cc = DAT_004470cc + <span class=\"supfact\">iVar1</span>;\n    for (; Number & lt; <span class=\"supfact\">iVar1</span>;\n         <span class=\"supfact\">iVar1</span> = <span class=\"supfact\">iVar1</span> + -Number) {\n      (*(code *)PTR_FUN_00446298)((int)DAT_004470c8);\n    }\n    if ((code *)PTR_FUN_00446298 == FUN_004166d5) {\n      FUN_004166a6();\n    }\n  } else {\n    FUN_004166a6();\n    FUN_00420b54(<span class=\"supfact\">param_1</span>);\n  }\n  FUN_00417025(Number);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "int", "pred_name": "ms", "ref_name": "ms", "ref_type": "int"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "carlohamalainen", "repo_name": "klatin", "path": "carlohamalainen/klatin/0a5f1ff48d72df7650123c17c62ff3f74adc284e575ca65089160fe122d816aa", "path_in_repo": "carlohamalainen/klatin/nauty25r2/geng", "objdump": "", "code_s": "void FUN_00404e84(undefined8 <span class=\"supfact\">param_1</span>,\n                  int <span class=\"supfact\">param_2</span>, long <span class=\"supfact\">param_3</span>,\n                  int <span class=\"supfact\">param_4</span>, int <span class=\"supfact\">param_5</span>,\n                  int <span class=\"supfact\">param_6</span>, int <span class=\"supfact\">param_7</span>,\n                  undefined8 <span class=\"supfact\">param_8</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  undefined *<span class=\"supfact\">puVar2</span>;\n  undefined4 uVar3;\n  bool <span class=\"supfact\">bVar4</span>;\n  int <span class=\"supfact\">local_208</span>;\n  undefined4 <span class=\"supfact\">local_1dc</span>;\n  undefined4 <span class=\"supfact\">local_1d8</span>[Number];\n  undefined <span class=\"supfact\">local_158</span>[Number];\n  int <span class=\"supfact\">local_4c</span>;\n  int <span class=\"supfact\">local_48</span>;\n  int <span class=\"supfact\">local_44</span>;\n  uint <span class=\"supfact\">local_40</span>;\n  uint <span class=\"supfact\">local_3c</span>;\n  long <span class=\"supfact\">local_38</span>;\n  long <span class=\"supfact\">local_30</span>;\n  int <span class=\"supfact\">local_28</span>;\n  int <span class=\"supfact\">local_24</span>;\n  int <span class=\"supfact\">local_20</span>;\n  uint <span class=\"supfact\">local_1c</span>;\n  int <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_14</span>;\n  uint <span class=\"supfact\">local_10</span>;\n  uint <span class=\"supfact\">local_c</span>;\n  *(long *)(&amp; DAT_00423248 + (long)<span class=\"supfact\">param_2</span> * Number) =\n      *(long *)(&amp; DAT_00423248 + (long)<span class=\"supfact\">param_2</span> * Number) +\n      Number;\n  if (Number & lt;\n      *(long *)(&amp; DAT_00423248 + (long)<span class=\"supfact\">param_2</span> * Number)) {\n    *(long *)(&amp; DAT_00423240 + (long)<span class=\"supfact\">param_2</span> * Number) =\n        *(long *)(&amp; DAT_00423240 + (long)<span class=\"supfact\">param_2</span> * Number) +\n        Number;\n    *(long *)(&amp; DAT_00423248 + (long)<span class=\"supfact\">param_2</span> * Number) =\n        *(long *)(&amp; DAT_00423248 + (long)<span class=\"supfact\">param_2</span> * Number) +\n        -Number;\n  }\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_2</span> + Number;\n  <span class=\"supfact\">local_24</span> =\n      *(int *)(<span class=\"supfact\">param_3</span> +\n               (long)<span class=\"supfact\">param_2</span> * Number + -Number);\n  <span class=\"supfact\">local_28</span> =\n      <span class=\"supfact\">param_2</span> + (DAT_0041f7e8 - DAT_0041f7f0);\n  <span class=\"supfact\">local_10</span> = Number;\n  <span class=\"supfact\">local_c</span> = Number;\n  for (<span class=\"supfact\">local_14</span> = Number; <span class=\"supfact\">local_14</span> & lt;\n       <span class=\"supfact\">param_2</span>;\n       <span class=\"supfact\">local_14</span> = <span class=\"supfact\">local_14</span> + Number) {\n    if (<span class=\"supfact\">local_24</span> ==\n        *(int *)(<span class=\"supfact\">param_3</span> +\n                 (long)<span class=\"supfact\">local_14</span> * Number)) {\n      <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> |\n                                (&amp; DAT_0041f140)[<span class=\"supfact\">local_14</span>];\n    }\n    if (<span class=\"supfact\">local_28</span> ==\n        *(int *)(<span class=\"supfact\">param_3</span> +\n                 (long)<span class=\"supfact\">local_14</span> * Number)) {\n      <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> |\n                                 (&amp; DAT_0041f140)[<span class=\"supfact\">local_14</span>];\n    }\n  }\n  <span class=\"supfact\">local_208</span> = <span class=\"supfact\">param_6</span>;\n  if ((<span class=\"supfact\">param_6</span> == <span class=\"supfact\">local_24</span>) & amp; &amp;\n      (<span class=\"supfact\">param_2</span> & lt;\n       <span class=\"supfact\">local_24</span> +\n       *(int *)(&amp; DAT_00416220 + (ulong)(<span class=\"supfact\">local_c</span> & gt; &gt;\n                                             Number & amp; Number) *\n                                         Number) +\n       *(int *)(&amp; DAT_00416220 + (ulong)(<span class=\"supfact\">local_c</span> & gt; &gt;\n                                             Number & amp; Number) *\n                                         Number) +\n       *(int *)(&amp;\n                DAT_00416220 +\n                (ulong)(<span class=\"supfact\">local_c</span> & gt; &gt; Number) * Number) +\n       *(int *)(&amp;\n                DAT_00416220 +\n                (ulong)(<span class=\"supfact\">local_c</span> & amp; Number) * Number))) {\n    <span class=\"supfact\">local_208</span> = <span class=\"supfact\">param_6</span> + Number;\n  }\n  if ((<span class=\"supfact\">local_20</span> == DAT_0041f7f0) & amp; &amp;\n      (<span class=\"supfact\">local_208</span> & lt; DAT_0041f7e8)) {\n    <span class=\"supfact\">local_208</span> = DAT_0041f7e8;\n  }\n  if (<span class=\"supfact\">local_208</span> &lt; = <span class=\"supfact\">param_7</span>) {\n    <span class=\"supfact\">local_30</span> =\n        *(long *)(&amp; DAT_0041f9d8 + (long)<span class=\"supfact\">param_2</span> * Number);\n    <span class=\"supfact\">local_38</span> =\n        *(long *)(&amp; DAT_0041f9e0 + (long)<span class=\"supfact\">param_2</span> * Number);\n    <span class=\"supfact\">local_3c</span> =\n        *(uint *)(&amp; DAT_0041f9e8 + (long)<span class=\"supfact\">param_2</span> * Number);\n    if (<span class=\"supfact\">local_20</span> == DAT_0041f7f0) {\n      for (<span class=\"supfact\">local_1c</span> = Number; <span class=\"supfact\">local_1c</span> & lt;\n           <span class=\"supfact\">local_3c</span>;\n           <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number) {\n        <span class=\"supfact\">local_40</span> =\n            *(uint *)(<span class=\"supfact\">local_38</span> +\n                      (ulong)<span class=\"supfact\">local_1c</span> * Number);\n        <span class=\"supfact\">local_44</span> =\n            *(int *)(&amp;\n                     DAT_00416220 +\n                     (ulong)(<span class=\"supfact\">local_40</span> & amp; Number) * Number) +\n            *(int *)(&amp; DAT_00416220 + (ulong)(<span class=\"supfact\">local_40</span> & gt;\n                                                  &gt; Number & amp; Number) *\n                                              Number) +\n            *(int *)(&amp; DAT_00416220 + (ulong)(<span class=\"supfact\">local_40</span> & gt;\n                                                  &gt; Number & amp; Number) *\n                                              Number) +\n            *(int *)(&amp; DAT_00416220 +\n                           (ulong)(<span class=\"supfact\">local_40</span> & gt; &gt; Number) *\n                               Number);\n        if ((((<span class=\"supfact\">local_208</span> &lt; = <span class=\"supfact\">local_44</span>) & amp;\n              &amp; (<span class=\"supfact\">local_44</span> &lt; = <span class=\"supfact\">param_7</span>)) &\n                 amp;\n             &amp; ((<span class=\"supfact\">param_5</span> != Number ||\n                     (<span class=\"supfact\">local_1c</span> ==\n                      *(uint *)(<span class=\"supfact\">local_30</span> +\n                                (ulong)<span class=\"supfact\">local_1c</span> * Number))))) &\n                amp;\n            &amp;\n            (((<span class=\"supfact\">local_24</span> & lt;\n               <span class=\"supfact\">local_44</span> ||\n               ((<span class=\"supfact\">local_44</span> == <span class=\"supfact\">local_24</span> & amp;\n                 &amp; ((<span class=\"supfact\">local_40</span> & amp;\n                         <span class=\"supfact\">local_c</span>) == Number)))) &\n                  amp;\n              &amp; ((~<span class=\"supfact\">local_40</span> & amp;\n                      <span class=\"supfact\">local_10</span>) == Number)))) {\n          if ((<span class=\"supfact\">local_24</span> + Number & lt;\n               <span class=\"supfact\">local_44</span>) ||\n              ((<span class=\"supfact\">local_44</span> == <span class=\"supfact\">local_24</span> + Number &\n                    amp;\n                &amp; ((<span class=\"supfact\">local_40</span> & amp;\n                        <span class=\"supfact\">local_c</span>) == Number)))) {\n            uVar3 = Number;\n          } else {\n            uVar3 = Number;\n          }\n          <span class=\"supfact\">iVar1</span> =\n              FUN_004042b6(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n                           <span class=\"supfact\">local_40</span>, <span class=\"supfact\">local_158</span>,\n                           <span class=\"supfact\">param_3</span>, uVar3);\n          if ((<span class=\"supfact\">iVar1</span> != Number) & amp; &amp;\n              (((DAT_0041f7d0 == Number ||\n                 ((DAT_0041f7d0 == Number & amp; &amp;\n                   (<span class=\"supfact\">iVar1</span> = FUN_0040156f(\n                        <span class=\"supfact\">local_158</span>, <span class=\"supfact\">local_20</span>),\n                    <span class=\"supfact\">iVar1</span> != Number)))) ||\n                ((Number & lt; DAT_0041f7d0 & amp; &amp;\n                  (<span class=\"supfact\">iVar1</span> = FUN_00401643(\n                       <span class=\"supfact\">local_158</span>, <span class=\"supfact\">local_20</span>),\n                   <span class=\"supfact\">iVar1</span> != Number)))))) {\n            (&amp; DAT_00421328)[(long)(<span class=\"supfact\">local_44</span> +\n                                        <span class=\"supfact\">param_4</span>) *\n                                 Number] =\n                (&amp; DAT_00421328)[(long)(<span class=\"supfact\">local_44</span> +\n                                            <span class=\"supfact\">param_4</span>) *\n                                     Number] +\n                Number;\n            if (Number & lt;\n                (long)(&amp; DAT_00421328)[(long)(<span class=\"supfact\">local_44</span> +\n                                                  <span class=\"supfact\">param_4</span>) *\n                                           Number]) {\n              (&amp; DAT_00421320)[(long)(<span class=\"supfact\">local_44</span> +\n                                          <span class=\"supfact\">param_4</span>) *\n                                   Number] =\n                  (&amp; DAT_00421320)[(long)(<span class=\"supfact\">local_44</span> +\n                                              <span class=\"supfact\">param_4</span>) *\n                                       Number] +\n                  Number;\n              (&amp; DAT_00421328)[(long)(<span class=\"supfact\">param_4</span> +\n                                          <span class=\"supfact\">local_44</span>) *\n                                   Number] =\n                  (&amp; DAT_00421328)[(long)(<span class=\"supfact\">local_44</span> +\n                                              <span class=\"supfact\">param_4</span>) *\n                                       Number] +\n                  -Number;\n            }\n            if (DAT_00426434 == Number) {\n              <span class=\"supfact\">puVar2</span> = <span class=\"supfact\">local_158</span>;\n            } else {\n              <span class=\"supfact\">puVar2</span> = &amp;\n              DAT_0041f820;\n            }\n            (*DAT_0041f7c0)(DAT_0041f7c8, <span class=\"supfact\">puVar2</span>,\n                            <span class=\"supfact\">local_20</span>);\n          }\n        }\n      }\n    } else {\n      for (<span class=\"supfact\">local_1c</span> = Number; <span class=\"supfact\">local_1c</span> & lt;\n           <span class=\"supfact\">local_3c</span>;\n           <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number) {\n        if (<span class=\"supfact\">local_20</span> == DAT_0041f80c) {\n          <span class=\"supfact\">bVar4</span> = DAT_0041f808 == Number;\n          DAT_0041f808 = DAT_0041f808 + -Number;\n          if (<span class=\"supfact\">bVar4</span>) {\n            DAT_0041f808 = DAT_0041f7fc + -Number;\n            goto LAB_00405428;\n          }\n        } else {\n        LAB_00405428:\n          <span class=\"supfact\">local_40</span> =\n              *(uint *)(<span class=\"supfact\">local_38</span> +\n                        (ulong)<span class=\"supfact\">local_1c</span> * Number);\n          <span class=\"supfact\">local_44</span> =\n              *(int *)(&amp; DAT_00416220 +\n                             (ulong)(<span class=\"supfact\">local_40</span> & amp; Number) *\n                                 Number) +\n              *(int *)(&amp;\n                       DAT_00416220 + (ulong)(<span class=\"supfact\">local_40</span> & gt;\n                                              &gt; Number & amp; Number) *\n                                          Number) +\n              *(int *)(&amp;\n                       DAT_00416220 + (ulong)(<span class=\"supfact\">local_40</span> & gt;\n                                              &gt; Number & amp; Number) *\n                                          Number) +\n              *(int *)(&amp;\n                       DAT_00416220 +\n                       (ulong)(<span class=\"supfact\">local_40</span> & gt; &gt; Number) *\n                           Number);\n          if ((((<span class=\"supfact\">local_208</span> &lt; = <span class=\"supfact\">local_44</span>) &\n                    amp;\n                &amp;\n                (<span class=\"supfact\">local_44</span> &lt; = <span class=\"supfact\">param_7</span>)) &\n                   amp;\n               &amp;\n               ((<span class=\"supfact\">param_5</span> != Number ||\n                 (<span class=\"supfact\">local_1c</span> ==\n                  *(uint *)(<span class=\"supfact\">local_30</span> +\n                            (ulong)<span class=\"supfact\">local_1c</span> * Number))))) &\n                  amp;\n              &amp;\n              (((<span class=\"supfact\">local_24</span> & lt;\n                 <span class=\"supfact\">local_44</span> ||\n                 ((<span class=\"supfact\">local_44</span> == <span class=\"supfact\">local_24</span> & amp;\n                   &amp; ((<span class=\"supfact\">local_40</span> & amp;\n                           <span class=\"supfact\">local_c</span>) == Number)))) &\n                    amp;\n                &amp; ((~<span class=\"supfact\">local_40</span> & amp;\n                        <span class=\"supfact\">local_10</span>) == Number)))) {\n            for (<span class=\"supfact\">local_18</span> = Number;\n                 <span class=\"supfact\">local_18</span> & lt; <span class=\"supfact\">param_2</span>;\n                 <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> + Number) {\n              <span class=\"supfact\">local_1d8</span>[<span class=\"supfact\">local_18</span>] =\n                  *(undefined4 *)(<span class=\"supfact\">param_3</span> +\n                                  (long)<span class=\"supfact\">local_18</span> * Number);\n            }\n            if ((*(int *)(&amp; DAT_0041f920 +\n                                (long)<span class=\"supfact\">local_20</span> * Number) !=\n                 <span class=\"supfact\">local_44</span> + <span class=\"supfact\">param_4</span>) ||\n                (<span class=\"supfact\">local_44</span> !=\n                 *(int *)(&amp; DAT_0041f924 +\n                                (long)<span class=\"supfact\">local_20</span> * Number))) {\n              FUN_00404c8b(<span class=\"supfact\">local_20</span>,\n                           <span class=\"supfact\">param_4</span> + <span class=\"supfact\">local_44</span>,\n                           <span class=\"supfact\">local_44</span>);\n            }\n            <span class=\"supfact\">local_48</span> =\n                *(int *)(&amp; DAT_0041f928 +\n                               (long)<span class=\"supfact\">local_20</span> * Number);\n            <span class=\"supfact\">local_4c</span> =\n                *(int *)(&amp; DAT_0041f92c +\n                               (long)<span class=\"supfact\">local_20</span> * Number);\n            if ((<span class=\"supfact\">local_48</span> &lt; = <span class=\"supfact\">local_4c</span>) &\n                    amp;\n                &amp; (<span class=\"supfact\">iVar1</span> = FUN_00403c3f(\n                           <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n                           <span class=\"supfact\">local_40</span>, <span class=\"supfact\">local_158</span>,\n                           <span class=\"supfact\">local_1d8</span>, &amp;\n                           <span class=\"supfact\">local_1dc</span>, <span class=\"supfact\">param_8</span>),\n                       <span class=\"supfact\">iVar1</span> != Number)) {\n              FUN_00404e84(<span class=\"supfact\">local_158</span>, <span class=\"supfact\">local_20</span>,\n                           <span class=\"supfact\">local_1d8</span>,\n                           <span class=\"supfact\">param_4</span> + <span class=\"supfact\">local_44</span>,\n                           <span class=\"supfact\">local_1dc</span>, <span class=\"supfact\">local_48</span>,\n                           <span class=\"supfact\">local_4c</span>, <span class=\"supfact\">param_8</span>);\n            }\n          }\n        }\n      }\n      if (((<span class=\"supfact\">param_2</span> == DAT_0041f80c + -Number) & amp; &amp;\n           (DAT_0041f804 &lt; = <span class=\"supfact\">param_2</span>)) &\n              amp;\n          &amp;\n          ((Number & lt;\n            *(long *)(&amp;\n                      DAT_00423240 + (long)<span class=\"supfact\">param_2</span> * Number) ||\n            ((long)DAT_0041f810 &lt;\n             = *(long *)(&amp; DAT_00423248 +\n                               (long)<span class=\"supfact\">param_2</span> * Number))))) {\n        DAT_0041f80c = DAT_0041f80c + -Number;\n      }\n    }\n  }\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "int * *", "pred_name": "lab", "ref_name": "g", "ref_type": "graph * *"}, {"name": "param_2", "type": "int", "pred_name": "ptn", "ref_name": "n", "ref_type": "int"}, {"name": "param_3", "type": "int * *", "pred_name": "numcells", "ref_name": "deg", "ref_type": "int * *"}, {"name": "param_4", "type": "int", "pred_name": "__unk__", "ref_name": "ne", "ref_type": "int"}, {"name": "param_5", "type": "int", "pred_name": "__unk__", "ref_name": "rigid", "ref_type": "boolean"}, {"name": "param_6", "type": "int", "pred_name": "__unk__", "ref_name": "xlb", "ref_type": "int"}, {"name": "param_7", "type": "int", "pred_name": "__unk__", "ref_name": "xub", "ref_type": "int"}, {"name": "param_8", "type": "set * *", "pred_name": "active", "ref_name": "makeh", "ref_type": "_func_void_graph_ptr_xword_ptr_int * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "", "ref_type": "disappear"}, {"name": "puVar2", "type": "undefined * *", "pred_name": "puVar2", "ref_name": "pgVar3", "ref_type": "graph * *"}, {"name": "bVar4", "type": "bool", "pred_name": "bVar3", "ref_name": "bVar4", "ref_type": "bool"}, {"name": "local_208", "type": "int", "pred_name": "__unk__", "ref_name": "xlb-local", "ref_type": "int"}, {"name": "local_1dc", "type": "int", "pred_name": "__unk__", "ref_name": "rigidx", "ref_type": "boolean"}, {"name": "local_1d8", "type": "int[32][32]", "pred_name": "orbits", "ref_name": "degx", "ref_type": "int[32][32]"}, {"name": "local_158", "type": "char[256][256]", "pred_name": "tmp_buf", "ref_name": "gx", "ref_type": "graph[32][32]"}, {"name": "local_4c", "type": "int", "pred_name": "__unk__", "ref_name": "xubx", "ref_type": "int"}, {"name": "local_48", "type": "int", "pred_name": "__unk__", "ref_name": "xlbx", "ref_type": "int"}, {"name": "local_44", "type": "int", "pred_name": "__unk__", "ref_name": "xc", "ref_type": "int"}, {"name": "local_40", "type": "int", "pred_name": "__unk__", "ref_name": "x", "ref_type": "xword"}, {"name": "local_3c", "type": "int", "pred_name": "__unk__", "ref_name": "xlim", "ref_type": "xword"}, {"name": "local_38", "type": "setword * *", "pred_name": "es", "ref_name": "xx", "ref_type": "xword * *"}, {"name": "local_30", "type": "char * *", "pred_name": "__unk__", "ref_name": "xorb", "ref_type": "xword * *"}, {"name": "local_28", "type": "int", "pred_name": "__unk__", "ref_name": "dcrit", "ref_type": "int"}, {"name": "local_24", "type": "int", "pred_name": "__unk__", "ref_name": "dmax", "ref_type": "int"}, {"name": "local_20", "type": "int", "pred_name": "__unk__", "ref_name": "nx", "ref_type": "int"}, {"name": "local_1c", "type": "int", "pred_name": "__unk__", "ref_name": "ixx", "ref_type": "xword"}, {"name": "local_18", "type": "int", "pred_name": "__unk__", "ref_name": "j", "ref_type": "int"}, {"name": "local_14", "type": "int", "pred_name": "__unk__", "ref_name": "i", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "j", "ref_name": "dlow", "ref_type": "xword"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "d", "ref_type": "xword"}], "body_in_train": true}, {"repo_owner": "photoszzt", "repo_name": "cse466", "path": "photoszzt/cse466/ad31be6596d0b9036b075a44a34b47e580f0d56830ced949dacc6286b82a2317", "path_in_repo": "photoszzt/cse466/lab6/linux-2.6.32.2/drivers/scsi/aic7xxx/aicasm/aicasm", "objdump": "", "code_s": "undefined8 *FUN_0040beb2(long <span class=\"supfact\">param_1</span>,\n                         ulong <span class=\"supfact\">param_2</span>) {\n  undefined8 *<span class=\"supfact\">puVar1</span>;\n  if (((<span class=\"supfact\">param_2</span> & lt; Number) ||\n       (*(char *)(<span class=\"supfact\">param_1</span> +\n                  (<span class=\"supfact\">param_2</span> - Number)) != String)) ||\n      (*(char *)(<span class=\"supfact\">param_1</span> +\n                 (<span class=\"supfact\">param_2</span> - Number)) != String)) {\n    <span class=\"supfact\">puVar1</span> = (undefined8 *)Number;\n  } else {\n    <span class=\"supfact\">puVar1</span> = (undefined8 *)FUN_0040c27e(Number);\n    if (<span class=\"supfact\">puVar1</span> == (undefined8 *)Number) {\n      FUN_0040c0a4(String);\n    }\n    *(int *)(<span class=\"supfact\">puVar1</span> + Number) =\n        (int)<span class=\"supfact\">param_2</span> + -Number;\n    <span class=\"supfact\">puVar1</span>[Number] = <span class=\"supfact\">param_1</span>;\n    <span class=\"supfact\">puVar1</span>[Number] = <span class=\"supfact\">puVar1</span>[Number];\n    *(undefined4 *)(<span class=\"supfact\">puVar1</span> + Number) = Number;\n    *<span class=\"supfact\">puVar1</span> = Number;\n    *(undefined4 *)((long)<span class=\"supfact\">puVar1</span> + Number) =\n        *(undefined4 *)(<span class=\"supfact\">puVar1</span> + Number);\n    *(undefined4 *)((long)<span class=\"supfact\">puVar1</span> + Number) = Number;\n    *(undefined4 *)(<span class=\"supfact\">puVar1</span> + Number) = Number;\n    *(undefined4 *)((long)<span class=\"supfact\">puVar1</span> + Number) = Number;\n    *(undefined4 *)(<span class=\"supfact\">puVar1</span> + Number) = Number;\n    FUN_0040b7a9(<span class=\"supfact\">puVar1</span>);\n  }\n  return <span class=\"supfact\">puVar1</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "char * *", "pred_name": "base", "ref_name": "base", "ref_type": "char * *"}, {"name": "param_2", "type": "yy_size_t", "pred_name": "size", "ref_name": "size", "ref_type": "yy_size_t"}, {"name": "puVar1", "type": "YY_BUFFER_STATE", "pred_name": "new_buffer", "ref_name": "new_buffer", "ref_type": "YY_BUFFER_STATE"}], "body_in_train": true}, {"repo_owner": "staceyson", "repo_name": "qemu-bsd-user", "path": "staceyson/qemu-bsd-user/07ccb8d1f7e91e81bf3be19e5b698af45a54f4f4a34332582f6b7408aceb7a72", "path_in_repo": "staceyson/qemu-bsd-user//hw/intc/arm_gic.o", "objdump": "", "code_s": "void FUN_00101fb8(long *<span class=\"supfact\">param_1</span>,\n                  undefined4 <span class=\"supfact\">param_2</span>,\n                  undefined4 <span class=\"supfact\">param_3</span>) {\n  FUN_00101d6e(\n      *<span class=\"supfact\">param_1</span>,\n      (long)<span class=\"supfact\">param_1</span> - (*<span class=\"supfact\">param_1</span> + Number) & gt;\n      &gt; Number & amp;\n      Number, <span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "void * *", "pred_name": "opaque", "ref_name": "opaque", "ref_type": "void * *"}, {"name": "param_2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "param_3", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "statgen", "repo_name": "topmed_freeze3_calling", "path": "statgen/topmed_freeze3_calling/4bb66f52112a8bd10ae7e284cd522a5a16c6e3567251eb8d74047fc7f6018278", "path_in_repo": "statgen/topmed_freeze3_calling/gotcloud/src/htslib/faidx.o", "objdump": "", "code_s": "long FUN_001011f8(long *<span class=\"supfact\">param_1</span>) {\n  undefined8 *puVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  long in_RAX;\n  undefined8 uVar3;\n  long *plVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  undefined8 *puVar7;\n  undefined *puVar8;\n  undefined *puVar9;\n  undefined *puVar10;\n  undefined8 <span class=\"supfact\">auStack_90</span>[Number];\n  long *<span class=\"supfact\">local_60</span>;\n  long <span class=\"supfact\">local_58</span>;\n  undefined8 <span class=\"supfact\">local_50</span>;\n  undefined8 <span class=\"supfact\">local_48</span>;\n  long <span class=\"supfact\">local_38</span>;\n  ulong <span class=\"supfact\">local_30</span>;\n  long *<span class=\"supfact\">local_28</span>;\n  int <span class=\"supfact\">local_20</span>;\n  int <span class=\"supfact\">local_1c</span>;\n  int <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_14</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_58</span> = Number;\n  <span class=\"supfact\">local_50</span> = Number;\n  <span class=\"supfact\">local_48</span> = Number;\n  <span class=\"supfact\">auStack_90</span>[Number] = Number;\n  <span class=\"supfact\">local_60</span> = <span class=\"supfact\">param_1</span>;\n  <span class=\"supfact\">local_38</span> = in_RAX;\n  uVar3 = FUN_001003f7(Number, Number);\n  *(undefined8 *)(<span class=\"supfact\">local_38</span> + Number) = uVar3;\n  <span class=\"supfact\">local_14</span> = -Number;\n  <span class=\"supfact\">local_10</span> = -Number;\n  <span class=\"supfact\">local_30</span> = Number;\n  <span class=\"supfact\">local_18</span> = Number;\n  <span class=\"supfact\">local_20</span> = -Number;\n  <span class=\"supfact\">local_1c</span> = -Number;\n  <span class=\"supfact\">local_28</span> = (long *)Number;\n  puVar1 = <span class=\"supfact\">auStack_90</span> + Number;\nLAB_001014e4:\n  while (true) {\n    puVar9 = (undefined *)puVar1;\n    puVar10 = puVar9 + -Number;\n    *(undefined8 *)(puVar9 + -Number) = Number;\n    <span class=\"supfact\">local_c</span> = (int)<span class=\"supfact\">local_60</span>;\n    if (<span class=\"supfact\">local_c</span> & lt; Number)\n      break;\n    if (<span class=\"supfact\">local_c</span> != Number)\n      goto LAB_001012c2;\n    if (<span class=\"supfact\">local_18</span> != Number)\n      goto LAB_00101294;\n    *(undefined8 *)(puVar9 + -Number) = Number;\n    <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_60</span>;\n    puVar1 = (undefined8 *)(puVar9 + -Number);\n  }\n  puVar10 = puVar9 + -Number;\n  if (-Number & lt; (long)<span class=\"supfact\">local_30</span>) {\n    *(undefined8 *)(puVar9 + -Number) = Number;\n    <span class=\"supfact\">iVar2</span> =\n        FUN_00101025(<span class=\"supfact\">local_38</span>, <span class=\"supfact\">local_48</span>,\n                     <span class=\"supfact\">local_30</span> & amp;\n                     Number, <span class=\"supfact\">local_10</span>, <span class=\"supfact\">local_14</span>,\n                     <span class=\"supfact\">local_28</span>);\n    puVar10 = puVar9 + -Number;\n    if (<span class=\"supfact\">iVar2</span> == Number) {\n      *(undefined8 *)(puVar9 + -Number) = Number;\n      return <span class=\"supfact\">local_38</span>;\n    }\n  }\nLAB_0010154d:\n  *(undefined8 *)(puVar10 + -Number) = Number;\n  *(undefined8 *)(puVar10 + -Number) = Number;\n  return Number;\nLAB_00101294:\n  if (((<span class=\"supfact\">local_18</span> != Number) ||\n       (puVar1 = (undefined8 *)(puVar9 + -Number), -Number & lt;\n        (long)<span class=\"supfact\">local_30</span>)) &\n          amp;\n      &amp; (puVar1 = (undefined8 *)(puVar9 + -Number),\n             <span class=\"supfact\">local_18</span> != Number)) {\n    if (<span class=\"supfact\">local_18</span> == Number) {\n      <span class=\"supfact\">local_18</span> = Number;\n      puVar1 = (undefined8 *)(puVar9 + -Number);\n    } else {\n    LAB_001012c2:\n      if (<span class=\"supfact\">local_c</span> == Number) {\n        if (-Number & lt; (long)<span class=\"supfact\">local_30</span>) {\n          *(undefined8 *)(puVar9 + -Number) = Number;\n          <span class=\"supfact\">iVar2</span> =\n              FUN_00101025(<span class=\"supfact\">local_38</span>, <span class=\"supfact\">local_48</span>,\n                           <span class=\"supfact\">local_30</span> & amp;\n                           Number, <span class=\"supfact\">local_10</span>,\n                           <span class=\"supfact\">local_14</span>, <span class=\"supfact\">local_28</span>);\n          if (<span class=\"supfact\">iVar2</span> != Number)\n            goto LAB_0010154d;\n        }\n        <span class=\"supfact\">local_58</span> = Number;\n        puVar10 = puVar9 + -Number;\n        while (true) {\n          *(undefined8 *)(puVar10 + -Number) = Number;\n          <span class=\"supfact\">local_c</span> = (int)<span class=\"supfact\">local_60</span>;\n          puVar6 = puVar10 + -Number;\n          if (<span class=\"supfact\">local_c</span> & lt; Number)\n            break;\n          puVar5 = puVar10 + -Number;\n          *(undefined8 *)(puVar10 + -Number) = Number;\n          if ((*(ushort *)(*<span class=\"supfact\">local_60</span> +\n                           (long)<span class=\"supfact\">local_c</span> * Number) &\n                   amp;\n               Number) == Number) {\n            *(undefined8 *)(puVar10 + -Number) = Number;\n            FUN_00100293((ulong)<span class=\"supfact\">local_60</span> & amp; Number, &amp;\n                         <span class=\"supfact\">local_58</span>);\n            puVar10 = puVar10 + -Number;\n          } else {\n            puVar6 = puVar10 + -Number;\n            if ((<span class=\"supfact\">local_58</span> != Number) ||\n                (puVar10 = puVar10 + -Number, puVar6 = puVar5,\n                 <span class=\"supfact\">local_c</span> == Number))\n              break;\n          }\n        }\n        *(undefined8 *)(puVar6 + -Number) = Number;\n        FUN_001000ed(Number, Number, &amp; <span class=\"supfact\">local_58</span>);\n        <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_60</span>;\n        if (<span class=\"supfact\">local_c</span> & lt; Number) {\n          *(undefined8 *)(puVar6 + -Number) = Number;\n          puVar10 = puVar6 + -Number;\n          goto LAB_0010154d;\n        }\n        do {\n          puVar10 = puVar6;\n          if (<span class=\"supfact\">local_c</span> == Number)\n            break;\n          puVar7 = (undefined8 *)(puVar6 + -Number);\n          puVar10 = puVar6 + -Number;\n          puVar6 = puVar6 + -Number;\n          *puVar7 = Number;\n          <span class=\"supfact\">local_c</span> = (int)<span class=\"supfact\">local_60</span>;\n        } while (-Number & lt; <span class=\"supfact\">local_c</span>);\n        <span class=\"supfact\">local_18</span> = Number;\n        <span class=\"supfact\">local_30</span> = Number;\n        *(undefined8 *)(puVar10 + -Number) = Number;\n        puVar1 = (undefined8 *)(puVar10 + -Number);\n      } else {\n        if (<span class=\"supfact\">local_18</span> == Number) {\n          *(undefined8 *)(puVar9 + -Number) = Number;\n          puVar10 = puVar9 + -Number;\n          goto LAB_0010154d;\n        }\n        if (<span class=\"supfact\">local_18</span> == Number) {\n          <span class=\"supfact\">local_18</span> = Number;\n        }\n        <span class=\"supfact\">local_20</span> = Number;\n        <span class=\"supfact\">local_1c</span> = Number;\n        plVar4 = (long *)Number;\n        puVar10 = puVar9 + -Number;\n        <span class=\"supfact\">iVar2</span> = <span class=\"supfact\">local_1c</span>;\n        do {\n          <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">iVar2</span>;\n          puVar8 = puVar10;\n          *(undefined8 *)(puVar8 + -Number) = Number;\n          if (*(short *)(*plVar4 + (long)<span class=\"supfact\">local_c</span> * Number) & lt;\n              Number) {\n            <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_20</span> + Number;\n          }\n          *(undefined8 *)(puVar8 + -Number) = Number;\n        } while ((-Number & lt; <span class=\"supfact\">local_c</span>) & amp; &amp;\n                 (plVar4 = <span class=\"supfact\">local_60</span>, puVar10 = puVar8 + -Number,\n                  <span class=\"supfact\">iVar2</span> = <span class=\"supfact\">local_1c</span> + Number,\n                  <span class=\"supfact\">local_c</span> != Number));\n        if ((<span class=\"supfact\">local_18</span> == Number) & amp; &amp;\n            (<span class=\"supfact\">local_20</span> != Number)) {\n          *(undefined8 *)(puVar8 + -Number) = Number;\n          puVar10 = puVar8 + -Number;\n          goto LAB_0010154d;\n        }\n        <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number;\n        <span class=\"supfact\">local_30</span> =\n            <span class=\"supfact\">local_30</span> + (long)<span class=\"supfact\">local_20</span>;\n        if (<span class=\"supfact\">local_18</span> == Number) {\n          <span class=\"supfact\">local_14</span> = <span class=\"supfact\">local_20</span>;\n          <span class=\"supfact\">local_18</span> = Number;\n          puVar1 = (undefined8 *)(puVar8 + -Number);\n          <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_1c</span>;\n        } else {\n          puVar1 = (undefined8 *)(puVar8 + -Number);\n          if ((<span class=\"supfact\">local_18</span> == Number) & amp; &amp;\n              ((<span class=\"supfact\">local_1c</span> != <span class=\"supfact\">local_10</span> ||\n                (puVar1 = (undefined8 *)(puVar8 + -Number),\n                 <span class=\"supfact\">local_20</span> != <span class=\"supfact\">local_14</span>)))) {\n            <span class=\"supfact\">local_18</span> = Number;\n            puVar1 = (undefined8 *)(puVar8 + -Number);\n          }\n        }\n      }\n    }\n  }\n  goto LAB_001014e4;\n}", "code_t": "", "var": [{"name": "param_1", "type": "TS_RESP_CTX * *", "pred_name": "ctx", "ref_name": "bgzf", "ref_type": "BGZF * *"}, {"name": "iVar2", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "auStack_90", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_60", "type": "TS_RESP_CTX * *", "pred_name": "ctx-local", "ref_name": "bgzf-local", "ref_type": "BGZF * *"}, {"name": "local_58", "type": "ASN1_OBJECT * *", "pred_name": "policy", "ref_name": "name", "ref_type": "kstring_t"}, {"name": "local_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_48", "type": "ASN1_OBJECT * *", "pred_name": "policy-local", "ref_name": "", "ref_type": "disappear"}, {"name": "local_38", "type": "EVP_MD * *", "pred_name": "md", "ref_name": "idx", "ref_type": "faidx_t * *"}, {"name": "local_30", "type": "uchar * *", "pred_name": "p", "ref_name": "len", "ref_type": "int64_t"}, {"name": "local_28", "type": "EVP_MD * *", "pred_name": "md-local", "ref_name": "offset", "ref_type": "uint64_t"}, {"name": "local_20", "type": "int", "pred_name": "__unk__", "ref_name": "l2", "ref_type": "int"}, {"name": "local_1c", "type": "int", "pred_name": "__unk__", "ref_name": "l1", "ref_type": "int"}, {"name": "local_18", "type": "int", "pred_name": "__unk__", "ref_name": "state", "ref_type": "int"}, {"name": "local_14", "type": "int", "pred_name": "i", "ref_name": "line_blen", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "__unk__", "ref_name": "line_len", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "ret", "ref_name": "c", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "zarboz", "repo_name": "XBMC-PVR-mac", "path": "zarboz/XBMC-PVR-mac/f8570d260985bd92dbf985dc518bf75ed43e85e16c6c49b53e030ee917110afa", "path_in_repo": "zarboz/XBMC-PVR-mac/tools/darwin/depends/openssl/demos/state_machine/state_machine.o", "objdump": "", "code_s": "undefined[Number] FUN_0010021f(long <span class=\"supfact\">param_1</span>, undefined8 param_2,\n                               uint <span class=\"supfact\">param_3</span>) {\n  uint <span class=\"supfact\">uVar1</span>;\n  undefined *<span class=\"supfact\">puVar2</span>;\n  undefined <span class=\"supfact\">auStack_48</span>[Number];\n  undefined <span class=\"supfact\">auStack_40</span>[Number];\n  <span class=\"supfact\">puVar2</span> = <span class=\"supfact\">auStack_40</span>;\n  <span class=\"supfact\">uVar1</span> =\n      (uint) * (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n  if (<span class=\"supfact\">uVar1</span> != <span class=\"supfact\">param_3</span>) {\n    <span class=\"supfact\">puVar2</span> = <span class=\"supfact\">auStack_48</span>;\n  }\n  *(undefined8 *)(<span class=\"supfact\">puVar2</span> + -Number) = Number;\n  return ZEXT416(<span class=\"supfact\">uVar1</span>) & lt;\n  &lt;\n  Number;\n}", "code_t": "", "var": [{"name": "param_1", "type": "SSLStateMachine * *", "pred_name": "pMachine", "ref_name": "pMachine", "ref_type": "SSLStateMachine * *"}, {"name": "param_3", "type": "int", "pred_name": "nBuf", "ref_name": "nBuf", "ref_type": "int"}, {"name": "uVar1", "type": "uint", "pred_name": "uVar1", "ref_name": "uVar1", "ref_type": "uint"}, {"name": "puVar2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_48", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_40", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "opensag", "repo_name": "atom-openwrt", "path": "opensag/atom-openwrt/1bc33f4d15f0a1dd500bcd55cb365588c68f470f8a602b0a2218f241a7a049d4", "path_in_repo": "opensag/atom-openwrt/package/wav6/iwlwav-hostap/src/wps/wps_er_ssdp.o", "objdump": "", "code_s": "undefined[Number] FUN_001000a0(uint <span class=\"supfact\">param_1</span>,\n                               byte *<span class=\"supfact\">param_2</span>) {\n  uint *puVar1;\n  undefined *puVar2;\n  int <span class=\"supfact\">iVar3</span>;\n  byte *<span class=\"supfact\">pbVar4</span>;\n  undefined *<span class=\"supfact\">puVar5</span>;\n  undefined auVar6[Number];\n  undefined <span class=\"supfact\">auStack_708</span>[Number];\n  uint <span class=\"supfact\">local_6b8</span>[Number];\n  byte <span class=\"supfact\">local_6a9</span>[Number];\n  uint <span class=\"supfact\">local_54</span>[Number];\n  byte *<span class=\"supfact\">local_40</span>;\n  byte *<span class=\"supfact\">local_38</span>;\n  int <span class=\"supfact\">local_2c</span>;\n  int <span class=\"supfact\">local_28</span>;\n  int <span class=\"supfact\">local_24</span>;\n  byte *<span class=\"supfact\">local_20</span>;\n  uint *<span class=\"supfact\">local_18</span>;\n  byte *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_24</span> = Number;\n  <span class=\"supfact\">local_28</span> = Number;\n  <span class=\"supfact\">local_2c</span> = -Number;\n  <span class=\"supfact\">local_38</span> = (byte *)Number;\n  <span class=\"supfact\">pbVar4</span> = (byte *)(ulong)<span class=\"supfact\">param_1</span>;\n  <span class=\"supfact\">local_18</span> = (uint *)Number;\n  if (Number & lt; (int)<span class=\"supfact\">param_1</span>) {\n    <span class=\"supfact\">local_40</span> = <span class=\"supfact\">param_2</span>;\n    <span class=\"supfact\">local_6a9</span>[(long)(int)<span class=\"supfact\">param_1</span> + Number] =\n        Number;\n    if (*(int *)(<span class=\"supfact\">local_40</span> + Number) != Number) {\n      <span class=\"supfact\">local_18</span> =\n          (uint *)(ulong) * (uint *)(<span class=\"supfact\">local_40</span> + Number);\n      <span class=\"supfact\">pbVar4</span> = (byte *)(ulong)<span class=\"supfact\">local_54</span>[Number];\n      if (*(uint *)(<span class=\"supfact\">local_40</span> + Number) !=\n          <span class=\"supfact\">local_54</span>[Number])\n        goto LAB_001004d0;\n    }\n    if (<span class=\"supfact\">param_1</span> ==\n        *(uint *)(<span class=\"supfact\">local_40</span> + Number)) {\n      <span class=\"supfact\">pbVar4</span> = <span class=\"supfact\">local_6a9</span> + Number;\n      <span class=\"supfact\">local_18</span> = (uint *)Number;\n      <span class=\"supfact\">iVar3</span> = (int)<span class=\"supfact\">pbVar4</span>;\n    } else {\n      <span class=\"supfact\">pbVar4</span> = <span class=\"supfact\">local_6a9</span> + Number;\n      <span class=\"supfact\">local_18</span> = (uint *)Number;\n      <span class=\"supfact\">iVar3</span> = (int)<span class=\"supfact\">pbVar4</span>;\n    }\n    if (<span class=\"supfact\">iVar3</span> == Number) {\n      <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_6a9</span> + Number;\n      puVar1 = (uint *)Number;\n      puVar2 = <span class=\"supfact\">auStack_708</span>;\n      do {\n        do {\n          do {\n            while (true) {\n              while (true) {\n                while (true) {\n                  <span class=\"supfact\">puVar5</span> = puVar2;\n                  <span class=\"supfact\">local_18</span> = puVar1;\n                  <span class=\"supfact\">pbVar4</span> = <span class=\"supfact\">local_10</span>;\n                  if ((<span class=\"supfact\">local_10</span> == (byte *)Number) ||\n                      (<span class=\"supfact\">pbVar4</span> =\n                           (byte *)(ulong)*<span class=\"supfact\">local_10</span>,\n                       *<span class=\"supfact\">local_10</span> == Number)) {\n                    if (<span class=\"supfact\">local_24</span> != Number) {\n                      if (<span class=\"supfact\">local_28</span> == Number) {\n                        if ((<span class=\"supfact\">local_38</span> != (byte *)Number) & amp;\n                            &amp; (Number & lt; <span class=\"supfact\">local_2c</span>)) {\n                          *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) =\n                              Number;\n                          *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) =\n                              Number;\n                          <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_54</span>;\n                          *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) =\n                              Number;\n                          <span class=\"supfact\">pbVar4</span> = <span class=\"supfact\">local_40</span>;\n                        }\n                      } else {\n                        *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) =\n                            Number;\n                        <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_54</span>;\n                        *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) =\n                            Number;\n                        <span class=\"supfact\">pbVar4</span> = <span class=\"supfact\">local_40</span>;\n                      }\n                    }\n                    goto LAB_001004d0;\n                  }\n                  *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) = Number;\n                  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_10</span>;\n                  if (<span class=\"supfact\">local_10</span> != (byte *)Number) {\n                    if (<span class=\"supfact\">local_10</span>[-Number] == Number) {\n                      <span class=\"supfact\">local_10</span>[-Number] = Number;\n                    }\n                    <span class=\"supfact\">pbVar4</span> = <span class=\"supfact\">local_10</span> + Number;\n                    *<span class=\"supfact\">local_10</span> = Number;\n                    <span class=\"supfact\">local_10</span> = <span class=\"supfact\">pbVar4</span>;\n                  }\n                  *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) = Number;\n                  if (<span class=\"supfact\">local_20</span> != (byte *)Number) {\n                    <span class=\"supfact\">local_24</span> = Number;\n                  }\n                  *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) = Number;\n                  if (<span class=\"supfact\">local_20</span> != (byte *)Number) {\n                    <span class=\"supfact\">local_24</span> = Number;\n                  }\n                  *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) = Number;\n                  <span class=\"supfact\">iVar3</span> = (int)<span class=\"supfact\">local_20</span>;\n                  if (<span class=\"supfact\">iVar3</span> != Number)\n                    break;\n                  for (<span class=\"supfact\">local_20</span> =\n                           <span class=\"supfact\">local_20</span> + Number;\n                       *<span class=\"supfact\">local_20</span> == Number;\n                       <span class=\"supfact\">local_20</span> =\n                           <span class=\"supfact\">local_20</span> + Number) {\n                  }\n                  <span class=\"supfact\">local_38</span> = <span class=\"supfact\">local_20</span>;\n                  puVar1 = (uint *)Number;\n                  puVar2 = <span class=\"supfact\">puVar5</span> + -Number;\n                }\n                *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) = Number;\n                if (<span class=\"supfact\">iVar3</span> != Number)\n                  break;\n                *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) = Number;\n                puVar1 = (uint *)Number;\n                puVar2 = <span class=\"supfact\">puVar5</span> + -Number;\n                if (<span class=\"supfact\">local_20</span> != (byte *)Number) {\n                  <span class=\"supfact\">local_28</span> = Number;\n                  puVar2 = <span class=\"supfact\">puVar5</span> + -Number;\n                }\n              }\n              *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) = Number;\n              if (<span class=\"supfact\">iVar3</span> != Number)\n                break;\n              *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) = Number;\n              puVar1 = (uint *)Number;\n              puVar2 = <span class=\"supfact\">puVar5</span> + -Number;\n              if (<span class=\"supfact\">local_20</span> != (byte *)Number) {\n                <span class=\"supfact\">local_2c</span> = Number;\n                *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) = Number;\n                puVar2 = <span class=\"supfact\">puVar5</span> + -Number;\n              }\n            }\n            *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) = Number;\n            puVar1 = (uint *)Number;\n            puVar2 = <span class=\"supfact\">puVar5</span> + -Number;\n          } while (<span class=\"supfact\">iVar3</span> != Number);\n          *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) = Number;\n          puVar2 = <span class=\"supfact\">puVar5</span> + -Number;\n        } while (<span class=\"supfact\">local_20</span> == (byte *)Number);\n        for (<span class=\"supfact\">local_18</span> =\n                 (uint *)(<span class=\"supfact\">local_20</span> + Number);\n             *(byte *)<span class=\"supfact\">local_18</span> == Number;\n             <span class=\"supfact\">local_18</span> =\n                 (uint *)((long)<span class=\"supfact\">local_18</span> + Number)) {\n        }\n        *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) = Number;\n        puVar1 = <span class=\"supfact\">local_6b8</span>;\n        puVar2 = <span class=\"supfact\">puVar5</span> + -Number;\n      } while (-Number & lt; (int)<span class=\"supfact\">local_18</span>);\n      <span class=\"supfact\">pbVar4</span> = (byte *)Number;\n      *(undefined8 *)(<span class=\"supfact\">puVar5</span> + -Number) = Number;\n    }\n  }\nLAB_001004d0:\n  auVar6._8_8_ = <span class=\"supfact\">local_18</span>;\n  auVar6._0_8_ = <span class=\"supfact\">pbVar4</span>;\n  return auVar6;\n}", "code_t": "", "var": [{"name": "param_1", "type": "int", "pred_name": "sd", "ref_name": "sd", "ref_type": "int"}, {"name": "param_2", "type": "void * *", "pred_name": "eloop_ctx", "ref_name": "eloop_ctx", "ref_type": "void * *"}, {"name": "iVar3", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "pbVar4", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "puVar5", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_708", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_6b8", "type": "u8[16][16]", "pred_name": "uuid", "ref_name": "uuid", "ref_type": "u8[16][16]"}, {"name": "local_6a9", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_54", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_40", "type": "char * *", "pred_name": "__unk__", "ref_name": "er", "ref_type": "wps_er * *"}, {"name": "local_38", "type": "char * *", "pred_name": "__unk__", "ref_name": "location", "ref_type": "char * *"}, {"name": "local_2c", "type": "int", "pred_name": "__unk__", "ref_name": "max_age", "ref_type": "int"}, {"name": "local_28", "type": "int", "pred_name": "__unk__", "ref_name": "byebye", "ref_type": "int"}, {"name": "local_24", "type": "int", "pred_name": "__unk__", "ref_name": "wfa", "ref_type": "int"}, {"name": "local_20", "type": "char * *", "pred_name": "pos2", "ref_name": "start", "ref_type": "char * *"}, {"name": "local_18", "type": "char * *", "pred_name": "pos1", "ref_name": "pos2", "ref_type": "char * *"}, {"name": "local_10", "type": "char * *", "pred_name": "pos2", "ref_name": "pos", "ref_type": "char * *"}], "body_in_train": true}, {"repo_owner": "qcc-grading", "repo_name": "CS101_PBL", "path": "qcc-grading/CS101_PBL/007d3d863830c4904d105d073067dbb105b6631c7b5b309404df020684ff6cd5", "path_in_repo": "qcc-grading/CS101_PBL/411_gcd/student/CTester/CTester.o", "objdump": "", "code_s": "undefined[Number] FUN_00100238(void) {\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  undefined8 <span class=\"supfact\">uStack_20c8</span>;\n  undefined <span class=\"supfact\">auStack_20c0</span>[Number];\n  uRam0000000000100252 = Number;\n  uRam0000000000100275 = Number;\n  uRam000000000010029e = Number;\n  uRam00000000001002c1 = Number;\n  uRam00000000001002e6 = Number;\n  uRam00000000001002f1 = Number;\n  uRam00000000001002fc = Number;\n  uRam0000000000100307 = Number;\n  puVar1 = <span class=\"supfact\">auStack_20c0</span>;\n  do {\n    puVar2 = puVar1;\n    *(undefined8 *)(puVar2 + -Number) = Number;\n    puVar1 = puVar2 + -Number;\n    puVar3 = puVar2;\n  } while (Number & lt; iRam0000000000100346);\n  do {\n    *(undefined8 *)(puVar3 + -Number) = Number;\n    puVar3 = puVar3 + -Number;\n  } while (Number & lt; iRam000000000010036c);\n  uRam0000000000100392 = Number;\n  return ZEXT816(Number) & lt;\n  &lt;\n  Number;\n}", "code_t": "", "var": [{"name": "uStack_20c8", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_20c0", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "mrichards957", "repo_name": "ffmpeg-android", "path": "mrichards957/ffmpeg-android/adebb0189c7ff8723cfd41e6fc89f100fc76bd9e2d8240a2ae9311c4d6960a46", "path_in_repo": "mrichards957/ffmpeg-android/ffmpeg/libavcodec/g729dec.o", "objdump": "", "code_s": "void FUN_001006ec(undefined8 <span class=\"supfact\">param_1</span>,\n                  long <span class=\"supfact\">param_2</span>, long <span class=\"supfact\">param_3</span>,\n                  undefined4 <span class=\"supfact\">param_4</span>,\n                  undefined4 <span class=\"supfact\">param_5</span>) {\n  int <span class=\"supfact\">local_94</span>;\n  int <span class=\"supfact\">local_90</span>;\n  undefined8 <span class=\"supfact\">local_70</span>;\n  int <span class=\"supfact\">local_14</span>;\n  <span class=\"supfact\">local_70</span> = <span class=\"supfact\">param_1</span>;\n  for (<span class=\"supfact\">local_14</span> = Number; <span class=\"supfact\">local_14</span> & lt;\n       <span class=\"supfact\">local_94</span>;\n       <span class=\"supfact\">local_14</span> = <span class=\"supfact\">local_14</span> + Number) {\n    *(undefined2 *)(<span class=\"supfact\">param_2</span> +\n                    (long)<span class=\"supfact\">local_14</span> * Number) =\n        *(undefined2 *)(<span class=\"supfact\">param_3</span> +\n                        (long)<span class=\"supfact\">local_14</span> * Number);\n    *(short *)(<span class=\"supfact\">param_2</span> +\n               (long)<span class=\"supfact\">local_14</span> * Number) =\n        *(short *)(<span class=\"supfact\">param_2</span> +\n                   (long)<span class=\"supfact\">local_14</span> * Number) -\n        (short)(*(short *)(CONCAT44(<span class=\"supfact\">param_4</span>,\n                                    <span class=\"supfact\">param_5</span>) +\n                           (long)<span class=\"supfact\">local_14</span> * Number) *\n                            <span class=\"supfact\">local_90</span> +\n                        Number &\n                    gt;\n                &gt; Number);\n    *(short *)(<span class=\"supfact\">param_2</span> +\n               (long)<span class=\"supfact\">local_14</span> * Number) =\n        *(short *)(<span class=\"supfact\">param_2</span> +\n                   (long)<span class=\"supfact\">local_14</span> * Number) +\n        (short)(*(short *)((long)&amp;\n                           <span class=\"supfact\">local_70</span> +\n                           (long)<span class=\"supfact\">local_14</span> * Number) *\n                            <span class=\"supfact\">local_90</span> +\n                        Number &\n                    gt;\n                &gt; Number);\n  }\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "int16_t * *", "pred_name": "out", "ref_name": "out", "ref_type": "int16_t * *"}, {"name": "param_2", "type": "int16_t * *", "pred_name": "in", "ref_name": "in", "ref_type": "int16_t * *"}, {"name": "param_3", "type": "int16_t * *", "pred_name": "fc_cur", "ref_name": "fc_cur", "ref_type": "int16_t * *"}, {"name": "param_4", "type": "int", "pred_name": "dstate", "ref_name": "dstate", "ref_type": "int"}, {"name": "param_5", "type": "int", "pred_name": "gain_code", "ref_name": "gain_code", "ref_type": "int"}, {"name": "local_94", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_90", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_70", "type": "int16_t * *", "pred_name": "out-local", "ref_name": "out-local", "ref_type": "int16_t * *"}, {"name": "local_14", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "madeye", "repo_name": "GRACE", "path": "madeye/GRACE/907c02b9cc38dc04ef105bdd56a2885dc88fa872b2715431e6255e043bae9031", "path_in_repo": "madeye/GRACE/qemu-0.12.5/mipsel-softmmu/rtl8139.o", "objdump": "", "code_s": "void FUN_00101329(long <span class=\"supfact\">param_1</span>,\n                  undefined4 <span class=\"supfact\">param_2</span>) {\n  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = <span class=\"supfact\">param_2</span>;\n  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "rbuf * *", "pred_name": "rbuf", "ref_name": "s", "ref_type": "RTL8139State * *"}, {"name": "param_2", "type": "int", "pred_name": "fd", "ref_name": "bufferSize", "ref_type": "uint32_t"}], "body_in_train": true}, {"repo_owner": "irdc", "repo_name": "multifs", "path": "irdc/multifs/a50c41b131a57d50f2d41025009ee45107999c53cb923c3dbcabfb8502dcf6a8", "path_in_repo": "irdc/multifs//multifs", "objdump": "", "code_s": "void FUN_00402860(undefined8 <span class=\"supfact\">param_1</span>,\n                  undefined8 <span class=\"supfact\">param_2</span>) {\n  int *<span class=\"supfact\">piVar1</span>;\n  <span class=\"supfact\">piVar1</span> = __errno_location();\n  FUN_004025cd(*<span class=\"supfact\">piVar1</span>, <span class=\"supfact\">param_1</span>,\n               <span class=\"supfact\">param_2</span>, Number);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "undefined8", "pred_name": "param_1", "ref_name": "fmt", "ref_type": "char * *"}, {"name": "param_2", "type": "undefined8", "pred_name": "param_2", "ref_name": "ap", "ref_type": "__va_list_tag * *"}, {"name": "piVar1", "type": "int * *", "pred_name": "piVar1", "ref_name": "piVar1", "ref_type": "int * *"}], "body_in_train": false}, {"repo_owner": "alessiotrois", "repo_name": "build_getcopyright", "path": "alessiotrois/build_getcopyright/7912bf421924f25e421d7be1976b927339d69b063ad93df8c8d1d750cf459d66", "path_in_repo": "alessiotrois/build_getcopyright//Projects/cfitsio_lib/putcolsb.o", "objdump": "", "code_s": "undefined[Number] FUN_00100965(undefined8 param_1,\n                               long <span class=\"supfact\">param_2</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  uint *<span class=\"supfact\">in_R9</span>;\n  undefined auVar2[Number];\n  <span class=\"supfact\">lVar1</span> = Number;\n  if (Number & lt; <span class=\"supfact\">param_2</span>) {\n    <span class=\"supfact\">lVar1</span> = <span class=\"supfact\">param_2</span>;\n  }\n  auVar2._4_4_ = Number;\n  auVar2._0_4_ = *<span class=\"supfact\">in_R9</span>;\n  auVar2._8_8_ = <span class=\"supfact\">lVar1</span>;\n  return auVar2;\n}", "code_t": "", "var": [{"name": "param_2", "type": "long", "pred_name": "group", "ref_name": "group", "ref_type": "long"}, {"name": "lVar1", "type": "disappear", "pred_name": "", "ref_name": "firstrow", "ref_type": "LONGLONG"}, {"name": "in_R9", "type": "int * *", "pred_name": "status", "ref_name": "status", "ref_type": "int * *"}], "body_in_train": false}, {"repo_owner": "Steven-Blair", "repo_name": "308demo", "path": "Steven-Blair/308demo/2c02aa66580347aab695beafda1e896772fb850984f7ae0c42c03d4cdaac3a65", "path_in_repo": "Steven-Blair/308demo//load", "objdump": "", "code_s": "void FUN_00401b8a(undefined4 *<span class=\"supfact\">param_1</span>,\n                  void *<span class=\"supfact\">param_2</span>) {\n  undefined4 <span class=\"supfact\">uVar1</span>;\n  void *<span class=\"supfact\">pvVar2</span>;\n  free(<span class=\"supfact\">param_2</span>);\n  <span class=\"supfact\">pvVar2</span> = malloc(Number);\n  <span class=\"supfact\">uVar1</span> = FUN_004022a9();\n  *<span class=\"supfact\">param_1</span> = <span class=\"supfact\">uVar1</span>;\n  FUN_00402077(*<span class=\"supfact\">param_1</span>, <span class=\"supfact\">pvVar2</span>);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "Var * *", "pred_name": "this", "ref_name": "e_id", "ref_type": "int * *"}, {"name": "param_2", "type": "__unk__", "pred_name": "other", "ref_name": "e_poke", "ref_type": "Pokemon * *"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "iVar1", "ref_type": "int"}, {"name": "pvVar2", "type": "disappear", "pred_name": "", "ref_name": "p", "ref_type": "Pokemon * *"}], "body_in_train": false}, {"repo_owner": "PKUCloud", "repo_name": "cycle", "path": "PKUCloud/cycle/4da018dc7619406f1c7d712e9500f946e1508eb4428666917b8b4eefa2171982", "path_in_repo": "PKUCloud/cycle/qemu/libhw32/hw/rtl8139.o", "objdump": "", "code_s": "ushort FUN_00101078(long <span class=\"supfact\">param_1</span>) {\n  return *(ushort *)(<span class=\"supfact\">param_1</span> + Number) & amp;\n  Number;\n}", "code_t": "", "var": [{"name": "param_1", "type": "nlattr * *", "pred_name": "nla", "ref_name": "s", "ref_type": "RTL8139State * *"}], "body_in_train": false}, {"repo_owner": "m4rk", "repo_name": "MT9T001-linux-driver", "path": "m4rk/MT9T001-linux-driver/097f11703daa44ad433d1a4f0f4c26824e7deebc923ca554e6b646c5c1f80d90", "path_in_repo": "m4rk/MT9T001-linux-driver/snapgear-2.6-p42/user/ncurses/ncurses-5.6/test/demo_altkeys", "objdump": "", "code_s": "void FUN_0041f71e(long <span class=\"supfact\">param_1</span>, int <span class=\"supfact\">param_2</span>,\n                  short <span class=\"supfact\">param_3</span>, short <span class=\"supfact\">param_4</span>,\n                  undefined4 <span class=\"supfact\">param_5</span>) {\n  size_t <span class=\"supfact\">__n</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">__n</span> =\n      (long)(*(short *)(<span class=\"supfact\">param_1</span> + Number) + Number) & lt;\n  &lt;\n  Number;\n  if ((DAT_004470e0 & amp; Number) != Number) {\n    FUN_00416d93(String, <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n                 (long)<span class=\"supfact\">param_3</span>, (long)<span class=\"supfact\">param_4</span>);\n  }\n  if (((<span class=\"supfact\">param_3</span> & lt; Number) ||\n       (<span class=\"supfact\">param_4</span> & lt; <span class=\"supfact\">param_3</span>)) ||\n      (*(short *)(<span class=\"supfact\">param_1</span> + Number) & lt;\n       <span class=\"supfact\">param_4</span>)) {\n    if ((DAT_004470e0 & amp; Number) != Number) {\n      FUN_00416d93(String);\n    }\n  } else {\n    if (<span class=\"supfact\">param_2</span> & lt; Number) {\n      for (<span class=\"supfact\">local_c</span> = (int)<span class=\"supfact\">param_4</span>;\n           (<span class=\"supfact\">param_3</span> - <span class=\"supfact\">param_2</span> &lt;\n            = <span class=\"supfact\">local_c</span> & amp; &amp;\n            (-Number & lt; <span class=\"supfact\">local_c</span>));\n           <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + -Number) {\n        if ((DAT_004470e0 & amp; Number) != Number) {\n          FUN_00416d93(String,\n                       <span class=\"supfact\">local_c</span> + <span class=\"supfact\">param_2</span>,\n                       <span class=\"supfact\">local_c</span>);\n        }\n        memcpy(*(void **)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                          (long)<span class=\"supfact\">local_c</span> * Number),\n               *(void **)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                          (long)(<span class=\"supfact\">param_2</span> +\n                                 <span class=\"supfact\">local_c</span>) *\n                              Number),\n               <span class=\"supfact\">__n</span>);\n      }\n      for (<span class=\"supfact\">local_c</span> = (int)<span class=\"supfact\">param_3</span>;\n           (<span class=\"supfact\">local_c</span> & lt;\n            <span class=\"supfact\">param_3</span> - <span class=\"supfact\">param_2</span> & amp; &amp;\n            (<span class=\"supfact\">local_c</span> &lt;\n             = *(short *)(<span class=\"supfact\">param_1</span> + Number)));\n           <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n        if ((DAT_004470e0 & amp; Number) != Number) {\n          FUN_00416d93(String, <span class=\"supfact\">local_c</span>);\n        }\n        for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> &lt;\n             = *(short *)(<span class=\"supfact\">param_1</span> + Number);\n             <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n          *(undefined4 *)((long)<span class=\"supfact\">local_10</span> * Number +\n                          *(long *)(*(long *)(<span class=\"supfact\">param_1</span> +\n                                              Number) +\n                                    (long)<span class=\"supfact\">local_c</span> * Number)) =\n              <span class=\"supfact\">param_5</span>;\n        }\n      }\n    }\n    if (Number & lt; <span class=\"supfact\">param_2</span>) {\n      for (<span class=\"supfact\">local_c</span> = (int)<span class=\"supfact\">param_3</span>;\n           (<span class=\"supfact\">local_c</span> &lt;\n            = <span class=\"supfact\">param_4</span> - <span class=\"supfact\">param_2</span> & amp; &amp;\n            (<span class=\"supfact\">local_c</span> &lt;\n             = *(short *)(<span class=\"supfact\">param_1</span> + Number)));\n           <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n        memcpy(*(void **)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                          (long)<span class=\"supfact\">local_c</span> * Number),\n               *(void **)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                          (long)(<span class=\"supfact\">param_2</span> +\n                                 <span class=\"supfact\">local_c</span>) *\n                              Number),\n               <span class=\"supfact\">__n</span>);\n      }\n      for (<span class=\"supfact\">local_c</span> = (int)<span class=\"supfact\">param_4</span>;\n           (<span class=\"supfact\">param_4</span> - <span class=\"supfact\">param_2</span> & lt;\n            <span class=\"supfact\">local_c</span> & amp; &amp;\n            (-Number & lt; <span class=\"supfact\">local_c</span>));\n           <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + -Number) {\n        for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> &lt;\n             = *(short *)(<span class=\"supfact\">param_1</span> + Number);\n             <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n          *(undefined4 *)((long)<span class=\"supfact\">local_10</span> * Number +\n                          *(long *)(*(long *)(<span class=\"supfact\">param_1</span> +\n                                              Number) +\n                                    (long)<span class=\"supfact\">local_c</span> * Number)) =\n              <span class=\"supfact\">param_5</span>;\n        }\n      }\n    }\n    FUN_0040985d(<span class=\"supfact\">param_1</span>, (int)<span class=\"supfact\">param_3</span>,\n                 ((int)<span class=\"supfact\">param_4</span> - (int)<span class=\"supfact\">param_3</span>) +\n                     Number,\n                 Number);\n  }\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "float * *", "pred_name": "x", "ref_name": "win", "ref_type": "WINDOW.conflict * *"}, {"name": "param_2", "type": "int", "pred_name": "y", "ref_name": "n", "ref_type": "int"}, {"name": "param_3", "type": "short", "pred_name": "__unk__", "ref_name": "top", "ref_type": "short"}, {"name": "param_4", "type": "short", "pred_name": "__unk__", "ref_name": "bottom", "ref_type": "short"}, {"name": "param_5", "type": "int", "pred_name": "__unk__", "ref_name": "blank", "ref_type": "chtype"}, {"name": "__n", "type": "size_t", "pred_name": "__n", "ref_name": "__n", "ref_type": "size_t"}, {"name": "local_10", "type": "int", "pred_name": "j", "ref_name": "j", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "line", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "pexip", "repo_name": "os-linux", "path": "/home/ed/tardigrade/zecong/github/binaries/pexip/os-linux/9ad8a42cc78c10a4575ac73670934d361a1b9f643ee3d99670c38c19c2984156", "path_in_repo": "pexip/os-linux/tools/lib/lockdep/liblockdep.so.4.19.84", "objdump": "000000000000708b <lockdep_init_map>:\n    708b:\t55                   \tpush   %rbp\n    708c:\t48 89 e5             \tmov    %rsp,%rbp\n    708f:\t48 83 ec 20          \tsub    $0x20,%rsp\n    7093:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    7097:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n    709b:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n    709f:\t89 4d e4             \tmov    %ecx,-0x1c(%rbp)\n    70a2:\t8b 4d e4             \tmov    -0x1c(%rbp),%ecx\n    70a5:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    70a9:\t48 8b 75 f0          \tmov    -0x10(%rbp),%rsi\n    70ad:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    70b1:\t48 89 c7             \tmov    %rax,%rdi\n    70b4:\te8 fb fd ff ff       \tcall   6eb4 <__lockdep_init_map>\n    70b9:\t90                   \tnop\n    70ba:\tc9                   \tleave  \n    70bb:\tc3                   \tret    ", "code_s": "void lockdep_init_map(undefined8 <span class=\"supfact\">param_1</span>,\n                      undefined8 <span class=\"supfact\">param_2</span>,\n                      undefined8 <span class=\"supfact\">param_3</span>,\n                      undefined4 <span class=\"supfact\">param_4</span>) {\n  FUN_00106eb4(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n               <span class=\"supfact\">param_3</span>, <span class=\"supfact\">param_4</span>);\n  return;\n}", "code_t": "void lockdep_init_map(lockdep_map *<span class=\"supfact\">lock</span>,\n                      char *<span class=\"supfact\">name</span>,\n                      lock_class_key *<span class=\"supfact\">key</span>,\n                      int <span class=\"supfact\">subclass</span>) {\n  int <span class=\"supfact\">subclass</span> - local;\n  lock_class_key *<span class=\"supfact\">key</span> - local;\n  char *<span class=\"supfact\">name</span> - local;\n  lockdep_map *<span class=\"supfact\">lock</span> - local;\n  __lockdep_init_map(<span class=\"supfact\">lock</span>, <span class=\"supfact\">name</span>,\n                     <span class=\"supfact\">key</span>, <span class=\"supfact\">subclass</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "rtnl_handle * *", "pred_name": "rtnl", "ref_name": "lock", "ref_type": "lockdep_map * *"}, {"name": "param_2", "type": "iovec * *", "pred_name": "iov", "ref_name": "name", "ref_type": "char * *"}, {"name": "param_3", "type": "size_t", "pred_name": "iovlen", "ref_name": "key", "ref_type": "lock_class_key * *"}, {"name": "param_4", "type": "nlmsghdr * * *", "pred_name": "answer", "ref_name": "subclass", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "opensag", "repo_name": "atom-openwrt", "path": "opensag/atom-openwrt/d97f6558ab619b5ce5945888ac262fffa3038af55fae350ed53470e180b0dbcf", "path_in_repo": "opensag/atom-openwrt/package/wav6/iwlwav-iw/iw", "objdump": "", "code_s": "void FUN_0041e780(undefined8 <span class=\"supfact\">param_1</span>,\n                  undefined8 <span class=\"supfact\">param_2</span>,\n                  undefined4 <span class=\"supfact\">param_3</span>,\n                  undefined8 <span class=\"supfact\">param_4</span>,\n                  undefined4 <span class=\"supfact\">param_5</span>) {\n  FUN_0041cdd0(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n               <span class=\"supfact\">param_3</span>, <span class=\"supfact\">param_4</span>,\n               <span class=\"supfact\">param_5</span>, Number, Number, Number);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "uchar * * *", "pred_name": "out", "ref_name": "state", "ref_type": "nl80211_state * *"}, {"name": "param_2", "type": "uint * *", "pred_name": "w", "ref_name": "msg", "ref_type": "nl_msg * *"}, {"name": "param_3", "type": "uint", "pred_name": "h", "ref_name": "argc", "ref_type": "int"}, {"name": "param_4", "type": "uchar * *", "pred_name": "in", "ref_name": "argv", "ref_type": "char * * *"}, {"name": "param_5", "type": "uint", "pred_name": "insize", "ref_name": "id", "ref_type": "id_input"}], "body_in_train": false}, {"repo_owner": "jpirko", "repo_name": "qemu_rocker_bpf", "path": "jpirko/qemu_rocker_bpf/24568112bfba86025d05acc58a02189ea4077017211435ff413d14c98dab21ef", "path_in_repo": "jpirko/qemu_rocker_bpf//qobject/json-streamer.o", "objdump": "", "code_s": "void FUN_00100038(long <span class=\"supfact\">param_1</span>, long <span class=\"supfact\">param_2</span>,\n                  uint <span class=\"supfact\">param_3</span>,\n                  undefined4 <span class=\"supfact\">param_4</span>,\n                  undefined4 <span class=\"supfact\">param_5</span>) {\n  long lVar1;\n  code *pcVar2;\n  code *<span class=\"supfact\">pcVar3</span>;\n  uint *<span class=\"supfact\">puVar4</span>;\n  undefined8 *<span class=\"supfact\">puVar5</span>;\n  undefined8 <span class=\"supfact\">uStack_68</span>;\n  undefined8 <span class=\"supfact\">uStack_60</span>;\n  undefined8 <span class=\"supfact\">uStack_58</span>;\n  undefined8 <span class=\"supfact\">uStack_50</span>;\n  undefined4 <span class=\"supfact\">local_44</span>;\n  undefined4 <span class=\"supfact\">local_40</span>;\n  uint <span class=\"supfact\">local_3c</span>;\n  long <span class=\"supfact\">local_38</span>;\n  long <span class=\"supfact\">local_30</span>;\n  long <span class=\"supfact\">local_20</span>;\n  code **<span class=\"supfact\">local_18</span>;\n  uint *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_18</span> = (code **)(<span class=\"supfact\">param_1</span> + -Number);\n  if (<span class=\"supfact\">param_3</span> == Number) {\n    *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n        *(int *)(<span class=\"supfact\">param_1</span> + Number) + -Number;\n  } else if (<span class=\"supfact\">param_3</span> & lt; Number) {\n    if (<span class=\"supfact\">param_3</span> == Number) {\n      *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n          *(int *)(<span class=\"supfact\">param_1</span> + Number) + Number;\n    } else if (<span class=\"supfact\">param_3</span> & lt; Number) {\n      if (<span class=\"supfact\">param_3</span> == Number) {\n        *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n            *(int *)(<span class=\"supfact\">param_1</span> + Number) + Number;\n      } else if (<span class=\"supfact\">param_3</span> == Number) {\n        *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n            *(int *)(<span class=\"supfact\">param_1</span> + Number) + -Number;\n      }\n    }\n  }\n  lVar1 = *(long *)(<span class=\"supfact\">param_2</span> + Number);\n  <span class=\"supfact\">local_10</span> = (uint *)(lVar1 + Number);\n  <span class=\"supfact\">uStack_50</span> = Number;\n  *<span class=\"supfact\">local_10</span> = <span class=\"supfact\">param_3</span>;\n  <span class=\"supfact\">uStack_58</span> = Number;\n  *(undefined *)(lVar1 + Number + *(long *)(<span class=\"supfact\">param_2</span> + Number)) =\n      Number;\n  *(undefined4 *)(lVar1 + Number) = <span class=\"supfact\">param_4</span>;\n  *(undefined4 *)(lVar1 + Number) = <span class=\"supfact\">param_5</span>;\n  *(long *)(<span class=\"supfact\">param_1</span> + Number) =\n      *(long *)(<span class=\"supfact\">param_1</span> + Number) +\n      *(long *)(<span class=\"supfact\">param_2</span> + Number);\n  <span class=\"supfact\">uStack_60</span> = Number;\n  <span class=\"supfact\">puVar4</span> = <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">puVar5</span> = &amp;\n  <span class=\"supfact\">uStack_60</span>;\n  <span class=\"supfact\">local_44</span> = <span class=\"supfact\">param_5</span>;\n  <span class=\"supfact\">local_40</span> = <span class=\"supfact\">param_4</span>;\n  <span class=\"supfact\">local_3c</span> = <span class=\"supfact\">param_3</span>;\n  <span class=\"supfact\">local_38</span> = <span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">local_30</span> = <span class=\"supfact\">param_1</span>;\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_1</span>;\n  if (<span class=\"supfact\">param_3</span> != Number) {\n    <span class=\"supfact\">puVar5</span> = &amp;\n    <span class=\"supfact\">uStack_60</span>;\n    if (((*(int *)(<span class=\"supfact\">param_1</span> + Number) & lt; Number) ||\n         (<span class=\"supfact\">puVar5</span> = &amp;\n          <span class=\"supfact\">uStack_60</span>,\n          *(int *)(<span class=\"supfact\">param_1</span> + Number) & lt;\n          Number)) ||\n        ((*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number & amp; &amp;\n          (<span class=\"supfact\">puVar5</span> = &amp;\n           <span class=\"supfact\">uStack_60</span>,\n           *(int *)(<span class=\"supfact\">param_1</span> + Number) == Number))))\n      goto LAB_001001f8;\n    <span class=\"supfact\">puVar5</span> = &amp;\n    <span class=\"supfact\">uStack_60</span>;\n    if (*(ulong *)(<span class=\"supfact\">param_1</span> + Number) & lt; Number) {\n      <span class=\"supfact\">uStack_68</span> = Number;\n      <span class=\"supfact\">puVar5</span> = &amp;\n      <span class=\"supfact\">uStack_68</span>;\n      if (((uint) * (undefined8 *)(<span class=\"supfact\">param_1</span> + Number) & lt;\n           Number) &\n              amp;\n          &amp;\n          (<span class=\"supfact\">puVar4</span> =\n               (uint *)(ulong) * (uint *)(<span class=\"supfact\">param_1</span> + Number),\n           <span class=\"supfact\">puVar5</span> = &amp;\n           <span class=\"supfact\">uStack_68</span>,\n           *(int *)(<span class=\"supfact\">param_1</span> + Number) +\n                   *(uint *)(<span class=\"supfact\">param_1</span> + Number) &\n               lt;\n           Number)) {\n        return;\n      }\n    }\n  }\n  *(undefined8 *)((long)<span class=\"supfact\">puVar5</span> + -Number) = Number;\n  FUN_00100000(<span class=\"supfact\">local_18</span>, <span class=\"supfact\">local_10</span>,\n               <span class=\"supfact\">puVar4</span>, lVar1 + Number);\nLAB_001001f8:\n  *(undefined4 *)(<span class=\"supfact\">local_18</span> + Number) = Number;\n  *(undefined4 *)((long)<span class=\"supfact\">local_18</span> + Number) = Number;\n  <span class=\"supfact\">pcVar3</span> = *<span class=\"supfact\">local_18</span>;\n  pcVar2 = <span class=\"supfact\">local_18</span>[Number];\n  *(undefined8 *)((long)<span class=\"supfact\">puVar5</span> + -Number) = Number;\n  <span class=\"supfact\">pcVar3</span> =\n      (code *)(*<span class=\"supfact\">pcVar3</span>)(<span class=\"supfact\">local_18</span>, pcVar2);\n  *(undefined8 *)((long)<span class=\"supfact\">puVar5</span> + -Number) = Number;\n  <span class=\"supfact\">local_18</span>[Number] = <span class=\"supfact\">pcVar3</span>;\n  <span class=\"supfact\">local_18</span>[Number] = (code *)Number;\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "netdissect_options * *", "pred_name": "ndo", "ref_name": "lexer", "ref_type": "JSONLexer * *"}, {"name": "param_2", "type": "u_char * *", "pred_name": "cp", "ref_name": "input", "ref_type": "GString * *"}, {"name": "param_3", "type": "u_int", "pred_name": "len", "ref_name": "type", "ref_type": "JSONTokenType"}, {"name": "param_4", "type": "u_int", "pred_name": "records", "ref_name": "x", "ref_type": "int"}, {"name": "param_5", "type": "int", "pred_name": "__unk__", "ref_name": "y", "ref_type": "int"}, {"name": "pcVar3", "type": "undefined * *", "pred_name": "pcVar2", "ref_name": "", "ref_type": "disappear"}, {"name": "puVar4", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "puVar5", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_68", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_60", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_58", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_44", "type": "int", "pred_name": "__unk__", "ref_name": "y-local", "ref_type": "int"}, {"name": "local_40", "type": "u_int", "pred_name": "__unk__", "ref_name": "x-local", "ref_type": "int"}, {"name": "local_3c", "type": "u_int", "pred_name": "__unk__", "ref_name": "type-local", "ref_type": "JSONTokenType"}, {"name": "local_38", "type": "u_char * *", "pred_name": "cp-local", "ref_name": "input-local", "ref_type": "GString * *"}, {"name": "local_30", "type": "netdissect_options * *", "pred_name": "ndo-local", "ref_name": "lexer-local", "ref_type": "JSONLexer * *"}, {"name": "local_20", "type": "u_int", "pred_name": "len0", "ref_name": "__mptr", "ref_type": "JSONLexer * *"}, {"name": "local_18", "type": "u_char * *", "pred_name": "cp0", "ref_name": "parser", "ref_type": "JSONMessageParser * *"}, {"name": "local_10", "type": "u_char", "pred_name": "__unk__", "ref_name": "token", "ref_type": "JSONToken * *"}], "body_in_train": false}, {"repo_owner": "cs186-fa12", "repo_name": "fa12", "path": "cs186-fa12/fa12/7a23c9d5fd206730ee78e1975f580b5be3b679e8b79c64c3364bbad4ecea2995", "path_in_repo": "cs186-fa12/fa12/hw3/postgresql-8.4.2/src/bin/pg_dump/pg_dump", "objdump": "", "code_s": "void FUN_0040c6f0(long <span class=\"supfact\">param_1</span>, int <span class=\"supfact\">param_2</span>) {\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  int iVar16;\n  undefined8 *puVar17;\n  long lVar18;\n  undefined8 uVar19;\n  void *pvVar20;\n  char *pcVar21;\n  ulong uVar22;\n  undefined *puVar23;\n  int <span class=\"supfact\">local_20</span>;\n  int <span class=\"supfact\">local_1c</span>;\n  puVar17 = (undefined8 *)createPQExpBuffer();\n  for (<span class=\"supfact\">local_1c</span> = Number; <span class=\"supfact\">local_1c</span> & lt;\n       <span class=\"supfact\">param_2</span>;\n       <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number) {\n    lVar18 = <span class=\"supfact\">param_1</span> + (long)<span class=\"supfact\">local_1c</span> * Number;\n    if ((*(char *)(lVar18 + Number) != String) & amp; &amp;\n        (*(char *)(lVar18 + Number) != String)) {\n      if (DAT_0044ebba != String) {\n        FUN_00423904(Number, String, *(undefined8 *)(lVar18 + Number));\n      }\n      FUN_0041ce80(*(undefined8 *)(*(long *)(lVar18 + Number) + Number));\n      resetPQExpBuffer(puVar17);\n      if (*(int *)(DAT_0044ebc0 + Number) & lt; Number) {\n        if (*(int *)(DAT_0044ebc0 + Number) & lt; Number) {\n          if (*(int *)(DAT_0044ebc0 + Number) & lt; Number) {\n            appendPQExpBuffer(puVar17, String,\n                              *(undefined4 *)(lVar18 + Number));\n          } else {\n            appendPQExpBuffer(puVar17, String,\n                              *(undefined4 *)(lVar18 + Number));\n          }\n        } else {\n          appendPQExpBuffer(puVar17, String, *(undefined4 *)(lVar18 + Number));\n        }\n      } else {\n        appendPQExpBuffer(puVar17, String, *(undefined4 *)(lVar18 + Number));\n      }\n      uVar19 = PQexec(DAT_0044eb90, *puVar17);\n      FUN_0041d5bb(uVar19, DAT_0044eb90, *puVar17, Number);\n      iVar1 = PQntuples(uVar19);\n      uVar2 = PQfnumber(uVar19, String);\n      uVar3 = PQfnumber(uVar19, &amp; DAT_00436d70);\n      uVar4 = PQfnumber(uVar19, String);\n      uVar5 = PQfnumber(uVar19, String);\n      uVar6 = PQfnumber(uVar19, String);\n      uVar7 = PQfnumber(uVar19, String);\n      uVar8 = PQfnumber(uVar19, String);\n      uVar9 = PQfnumber(uVar19, String);\n      uVar10 = PQfnumber(uVar19, String);\n      uVar11 = PQfnumber(uVar19, String);\n      uVar12 = PQfnumber(uVar19, String);\n      uVar13 = PQfnumber(uVar19, String);\n      uVar14 = PQfnumber(uVar19, String);\n      uVar15 = PQfnumber(uVar19, String);\n      pvVar20 = malloc((long)iVar1 & lt; &lt; Number);\n      for (<span class=\"supfact\">local_20</span> = Number; <span class=\"supfact\">local_20</span> & lt;\n           iVar1;\n           <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_20</span> + Number) {\n        *(undefined4 *)((long)pvVar20 +\n                        (long)<span class=\"supfact\">local_20</span> * Number) = Number;\n        pcVar21 = (char *)PQgetvalue(uVar19, <span class=\"supfact\">local_20</span>, uVar2);\n        uVar22 = strtoul(pcVar21, (char **)Number, Number);\n        *(int *)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                 Number) = (int)uVar22;\n        pcVar21 = (char *)PQgetvalue(uVar19, <span class=\"supfact\">local_20</span>, uVar3);\n        uVar22 = strtoul(pcVar21, (char **)Number, Number);\n        *(int *)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                 Number) = (int)uVar22;\n        FUN_0041e170(\n            (void *)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number));\n        pcVar21 = (char *)PQgetvalue(uVar19, <span class=\"supfact\">local_20</span>, uVar4);\n        pcVar21 = strdup(pcVar21);\n        *(char **)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                   Number) = pcVar21;\n        *(undefined8 *)((long)pvVar20 +\n                        (long)<span class=\"supfact\">local_20</span> * Number + Number) =\n            *(undefined8 *)(lVar18 + Number);\n        *(long *)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                  Number) = lVar18;\n        pcVar21 = (char *)PQgetvalue(uVar19, <span class=\"supfact\">local_20</span>, uVar5);\n        pcVar21 = strdup(pcVar21);\n        *(char **)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                   Number) = pcVar21;\n        pcVar21 = (char *)PQgetvalue(uVar19, <span class=\"supfact\">local_20</span>, uVar6);\n        iVar16 = atoi(pcVar21);\n        *(int *)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                 Number) = iVar16;\n        pcVar21 = (char *)PQgetvalue(uVar19, <span class=\"supfact\">local_20</span>, uVar7);\n        iVar16 = atoi(pcVar21);\n        *(int *)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                 Number) = iVar16;\n        pcVar21 = (char *)PQgetvalue(uVar19, <span class=\"supfact\">local_20</span>, uVar8);\n        pcVar21 = strdup(pcVar21);\n        *(char **)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                   Number) = pcVar21;\n        pcVar21 = (char *)PQgetvalue(uVar19, <span class=\"supfact\">local_20</span>, uVar9);\n        *(bool *)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                  Number) = *pcVar21 == String;\n        puVar23 =\n            (undefined *)PQgetvalue(uVar19, <span class=\"supfact\">local_20</span>, uVar13);\n        *(undefined *)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                       Number) = *puVar23;\n        pcVar21 = (char *)PQgetvalue(uVar19, <span class=\"supfact\">local_20</span>, uVar14);\n        *(bool *)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                  Number) = *pcVar21 == String;\n        pcVar21 = (char *)PQgetvalue(uVar19, <span class=\"supfact\">local_20</span>, uVar15);\n        *(bool *)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                  Number) = *pcVar21 == String;\n        if (*(char *)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                      Number) == String) {\n          *(undefined8 *)((long)pvVar20 +\n                          (long)<span class=\"supfact\">local_20</span> * Number + Number) =\n              Number;\n          *(undefined4 *)((long)pvVar20 +\n                          (long)<span class=\"supfact\">local_20</span> * Number + Number) =\n              Number;\n          *(undefined8 *)((long)pvVar20 +\n                          (long)<span class=\"supfact\">local_20</span> * Number + Number) =\n              Number;\n        } else {\n          pcVar21 =\n              (char *)PQgetvalue(uVar19, <span class=\"supfact\">local_20</span>, uVar10);\n          pcVar21 = strdup(pcVar21);\n          *(char **)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                     Number) = pcVar21;\n          pcVar21 =\n              (char *)PQgetvalue(uVar19, <span class=\"supfact\">local_20</span>, uVar11);\n          uVar22 = strtoul(pcVar21, (char **)Number, Number);\n          *(int *)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                   Number) = (int)uVar22;\n          if (*(int *)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                       Number) == Number) {\n            *(undefined8 *)((long)pvVar20 +\n                            (long)<span class=\"supfact\">local_20</span> * Number + Number) =\n                Number;\n          } else {\n            iVar16 = PQgetisnull(uVar19, <span class=\"supfact\">local_20</span>, uVar12);\n            if (iVar16 != Number) {\n              FUN_00423904(\n                  Number, String,\n                  *(undefined8 *)((long)pvVar20 +\n                                  (long)<span class=\"supfact\">local_20</span> * Number +\n                                  Number),\n                  *(undefined8 *)(lVar18 + Number),\n                  *(undefined4 *)((long)pvVar20 +\n                                  (long)<span class=\"supfact\">local_20</span> * Number +\n                                  Number));\n              FUN_00404b85();\n            }\n            pcVar21 =\n                (char *)PQgetvalue(uVar19, <span class=\"supfact\">local_20</span>, uVar12);\n            pcVar21 = strdup(pcVar21);\n            *(char **)((long)pvVar20 + (long)<span class=\"supfact\">local_20</span> * Number +\n                       Number) = pcVar21;\n          }\n        }\n      }\n      PQclear(uVar19);\n    }\n  }\n  destroyPQExpBuffer(puVar17);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "map_session_data * *", "pred_name": "sd", "ref_name": "tblinfo", "ref_type": "TableInfo * *"}, {"name": "param_2", "type": "int", "pred_name": "type", "ref_name": "numTables", "ref_type": "int"}, {"name": "local_20", "type": "int", "pred_name": "j", "ref_name": "j", "ref_type": "int"}, {"name": "local_1c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "coordcn", "repo_name": "LuaIO", "path": "coordcn/LuaIO/5a6cca7a354b87c36ca7b80392f03b43cfcaa44dd071e89ab636c132f95bf9f2", "path_in_repo": "coordcn/LuaIO/deps/openssl/openssl/crypto/cms/cms_ess.o", "objdump": "", "code_s": "undefined[Number] FUN_00100089(long <span class=\"supfact\">param_1</span>,\n                               long *<span class=\"supfact\">param_2</span>) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  long <span class=\"supfact\">lVar2</span>;\n  undefined auVar3[Number];\n  if (<span class=\"supfact\">param_2</span> != (long *)Number) {\n    *<span class=\"supfact\">param_2</span> = Number;\n  }\n  <span class=\"supfact\">lVar2</span> = Number;\n  if (<span class=\"supfact\">param_1</span> == Number) {\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else if (<span class=\"supfact\">param_1</span> == Number) {\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else {\n    if (<span class=\"supfact\">param_2</span> != (long *)Number) {\n      *<span class=\"supfact\">param_2</span> = <span class=\"supfact\">param_1</span>;\n      <span class=\"supfact\">lVar2</span> = <span class=\"supfact\">param_1</span>;\n    }\n    <span class=\"supfact\">uVar1</span> = Number;\n  }\n  auVar3._8_8_ = <span class=\"supfact\">lVar2</span>;\n  auVar3._0_8_ = <span class=\"supfact\">uVar1</span>;\n  return auVar3;\n}", "code_t": "", "var": [{"name": "param_1", "type": "CURLM * *", "pred_name": "multi_handle", "ref_name": "si", "ref_type": "CMS_SignerInfo * *"}, {"name": "param_2", "type": "CURL * *", "pred_name": "res", "ref_name": "prr", "ref_type": "CMS_ReceiptRequest * * *"}, {"name": "uVar1", "type": "long", "pred_name": "lVar3", "ref_name": "", "ref_type": "disappear"}, {"name": "lVar2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "Jackie880823", "repo_name": "EncodeMedia", "path": "Jackie880823/EncodeMedia/079db7b098a5b5c8a12b10ab7712de9ab4c89ea063810bcdfd89905301da3740", "path_in_repo": "Jackie880823/EncodeMedia/FFmpeg/libavcodec/bgmc.o", "objdump": "", "code_s": "void FUN_0010049e(undefined8 <span class=\"supfact\">param_1</span>,\n                  undefined4 *<span class=\"supfact\">param_2</span>,\n                  undefined4 *<span class=\"supfact\">param_3</span>,\n                  undefined4 *<span class=\"supfact\">param_4</span>) {\n  undefined4 <span class=\"supfact\">uVar1</span>;\n  *<span class=\"supfact\">param_2</span> = Number;\n  *<span class=\"supfact\">param_3</span> = Number;\n  <span class=\"supfact\">uVar1</span> = FUN_001001cc(<span class=\"supfact\">param_1</span>, Number);\n  *<span class=\"supfact\">param_4</span> = <span class=\"supfact\">uVar1</span>;\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "GetBitContext * *", "pred_name": "gb", "ref_name": "gb", "ref_type": "GetBitContext * *"}, {"name": "param_2", "type": "uint * *", "pred_name": "h", "ref_name": "h", "ref_type": "uint * *"}, {"name": "param_3", "type": "uint * *", "pred_name": "l", "ref_name": "l", "ref_type": "uint * *"}, {"name": "param_4", "type": "uint * *", "pred_name": "v", "ref_name": "v", "ref_type": "uint * *"}, {"name": "uVar1", "type": "uint", "pred_name": "uVar1", "ref_name": "uVar1", "ref_type": "uint"}], "body_in_train": true}, {"repo_owner": "Aalto5G", "repo_name": "pptk", "path": "Aalto5G/pptk/d2507e860d48b814b57d75fdacc1e6bc10e2893a4da4e2865efe4feb2696c4cd", "path_in_repo": "Aalto5G/pptk/ipfrag/rfc791perf", "objdump": "", "code_s": "void FUN_0040173f(long <span class=\"supfact\">param_1</span>,\n                  undefined4 <span class=\"supfact\">param_2</span>) {\n  FUN_0040134a(<span class=\"supfact\">param_1</span> + Number, <span class=\"supfact\">param_2</span>);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "gk_string * *", "pred_name": "gstr", "ref_name": "pkt", "ref_type": "void * *"}, {"name": "param_2", "type": "disappear", "pred_name": "", "ref_name": "seq_number", "ref_type": "uint32_t"}], "body_in_train": false}, {"repo_owner": "akairain", "repo_name": "QEMU", "path": "akairain/QEMU/5a211b14306f96d153d2fbbc5a2e25253af5bbfda94c6b3d5fda12ed607366ca", "path_in_repo": "akairain/QEMU//hw/bt/hci.o", "objdump": "", "code_s": "void FUN_001003b7(long <span class=\"supfact\">param_1</span>,\n                  undefined8 <span class=\"supfact\">param_2</span>,\n                  int <span class=\"supfact\">param_3</span>) {\n  code *pcVar1;\n  undefined8 uVar2;\n  undefined8 *<span class=\"supfact\">puVar3</span>;\n  undefined8 <span class=\"supfact\">uStack_40</span>;\n  undefined <span class=\"supfact\">auStack_38</span>[Number];\n  int <span class=\"supfact\">local_2c</span>;\n  undefined8 <span class=\"supfact\">local_28</span>;\n  long <span class=\"supfact\">local_20</span>;\n  undefined *<span class=\"supfact\">local_18</span>;\n  undefined *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">puVar3</span> = (undefined8 *)<span class=\"supfact\">auStack_38</span>;\n  <span class=\"supfact\">uStack_40</span> = Number;\n  <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">param_3</span>;\n  <span class=\"supfact\">local_28</span> = <span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_1</span>;\n  <span class=\"supfact\">local_18</span> = (undefined *)FUN_001001f8(\n      <span class=\"supfact\">param_1</span>, Number, <span class=\"supfact\">param_3</span> + Number);\n  if (<span class=\"supfact\">local_18</span> != (undefined *)Number) {\n    *<span class=\"supfact\">local_18</span> = Number;\n    *(short *)(<span class=\"supfact\">local_18</span> + Number) =\n        (short)*(undefined4 *)(<span class=\"supfact\">local_20</span> + Number);\n    if (<span class=\"supfact\">local_2c</span> != Number) {\n      <span class=\"supfact\">puVar3</span> = &amp;\n      <span class=\"supfact\">uStack_40</span>;\n      <span class=\"supfact\">uStack_40</span> = Number;\n    }\n    pcVar1 = *(code **)(<span class=\"supfact\">local_20</span> + Number);\n    uVar2 = *(undefined8 *)(<span class=\"supfact\">local_20</span> + Number);\n    *(undefined8 *)((long)<span class=\"supfact\">puVar3</span> + -Number) = Number;\n    <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_18</span>;\n    (*pcVar1)(uVar2, <span class=\"supfact\">local_2c</span> + Number);\n  }\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "bt_hci_s * *", "pred_name": "hci", "ref_name": "hci", "ref_type": "bt_hci_s * *"}, {"name": "param_2", "type": "void * *", "pred_name": "ret", "ref_name": "ret", "ref_type": "void * *"}, {"name": "param_3", "type": "int", "pred_name": "len", "ref_name": "len", "ref_type": "int"}, {"name": "puVar3", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_40", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_38", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_2c", "type": "int", "pred_name": "len-local", "ref_name": "len-local", "ref_type": "int"}, {"name": "local_28", "type": "void * *", "pred_name": "ret-local", "ref_name": "ret-local", "ref_type": "void * *"}, {"name": "local_20", "type": "bt_hci_s * *", "pred_name": "hci-local", "ref_name": "hci-local", "ref_type": "bt_hci_s * *"}, {"name": "local_18", "type": "uint8_t * *", "pred_name": "packet", "ref_name": "packet", "ref_type": "uint8_t * *"}, {"name": "local_10", "type": "__unk__", "pred_name": "params", "ref_name": "params", "ref_type": "evt_cmd_complete * *"}], "body_in_train": true}, {"repo_owner": "heepdog", "repo_name": "u8g2", "path": "heepdog/u8g2/4244105b0f33c7b4fe1917a657bd644f871ddfc81f25f6771734e700787fb737", "path_in_repo": "heepdog/u8g2/include/sys/sdl/selection_list/u8g2_sdl", "objdump": "", "code_s": "void FUN_004100fe(undefined8 <span class=\"supfact\">param_1</span>,\n                  undefined8 <span class=\"supfact\">param_2</span>,\n                  undefined8 <span class=\"supfact\">param_3</span>,\n                  undefined8 <span class=\"supfact\">param_4</span>) {\n  undefined <span class=\"supfact\">local_11</span>;\n  undefined8 <span class=\"supfact\">local_10</span>;\n  FUN_00424998(<span class=\"supfact\">param_1</span>, FUN_0041791f, FUN_00416a78,\n               <span class=\"supfact\">param_3</span>, <span class=\"supfact\">param_4</span>);\n  <span class=\"supfact\">local_10</span> = FUN_00403858(&amp; <span class=\"supfact\">local_11</span>);\n  FUN_00413cfa(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_10</span>,\n               <span class=\"supfact\">local_11</span>, FUN_0041289a, <span class=\"supfact\">param_2</span>);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "u8g2_t * *", "pred_name": "u8g2", "ref_name": "u8g2", "ref_type": "u8g2_t * *"}, {"name": "param_2", "type": "u8g2_cb_t * *", "pred_name": "rotation", "ref_name": "rotation", "ref_type": "u8g2_cb_t * *"}, {"name": "param_3", "type": "u8x8_msg_cb", "pred_name": "byte_cb", "ref_name": "byte_cb", "ref_type": "u8x8_msg_cb"}, {"name": "param_4", "type": "u8x8_msg_cb", "pred_name": "gpio_and_delay_cb", "ref_name": "gpio_and_delay_cb", "ref_type": "u8x8_msg_cb"}, {"name": "local_11", "type": "uint8_t", "pred_name": "tile_buf_height", "ref_name": "tile_buf_height", "ref_type": "uint8_t"}, {"name": "local_10", "type": "uint8_t * *", "pred_name": "buf", "ref_name": "buf", "ref_type": "uint8_t * *"}], "body_in_train": false}, {"repo_owner": "hamayun", "repo_name": "NaSiK", "path": "hamayun/NaSiK/bd307cc752828f5e0bd0bf6da1c4d6623b887ce4ac3aa968c179f339821a49c5", "path_in_repo": "hamayun/NaSiK/hw/kvm-85/qemu/mips64-softmmu/lsi53c895a.o", "objdump": "", "code_s": "int FUN_0010178b(int <span class=\"supfact\">param_1</span>) {\n  return (<span class=\"supfact\">param_1</span> & lt; &lt; Number) & gt;\n  &gt;\n  Number;\n}", "code_t": "", "var": [{"name": "param_1", "type": "int32_t", "pred_name": "n", "ref_name": "n", "ref_type": "int32_t"}], "body_in_train": true}, {"repo_owner": "xqx12", "repo_name": "s2e1.1", "path": "xqx12/s2e1.1/eb2d987d59906bfdf6d180c0eb1ef7eaf8889d6df2bea2ed0711f6490f62a282", "path_in_repo": "xqx12/s2e1.1/s2e/qemu/arm-linux-user/op_helper.o", "objdump": "", "code_s": "int FUN_0010078e(int <span class=\"supfact\">param_1</span>, byte <span class=\"supfact\">param_2</span>) {\n  if (Number & lt; <span class=\"supfact\">param_2</span>) {\n    <span class=\"supfact\">param_2</span> = Number;\n  }\n  return <span class=\"supfact\">param_1</span> & gt;\n  &gt;\n  (<span class=\"supfact\">param_2</span> & amp; Number);\n}", "code_t": "", "var": [{"name": "param_1", "type": "uint32_t", "pred_name": "x", "ref_name": "x", "ref_type": "uint32_t"}, {"name": "param_2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "heepdog", "repo_name": "u8g2", "path": "heepdog/u8g2/4244105b0f33c7b4fe1917a657bd644f871ddfc81f25f6771734e700787fb737", "path_in_repo": "heepdog/u8g2/include/sys/sdl/selection_list/u8g2_sdl", "objdump": "", "code_s": "void FUN_00416687(undefined8 <span class=\"supfact\">param_1</span>,\n                  byte <span class=\"supfact\">param_2</span>) {\n  FUN_004165d8(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span> & amp; Number);\n  FUN_004165d8(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span> & amp; Number);\n  FUN_004165d8(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span> & amp; Number);\n  FUN_004165d8(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span> & amp; Number);\n  FUN_004165d8(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span> & amp; Number);\n  FUN_004165d8(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span> & amp; Number);\n  FUN_004165d8(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span> & amp; Number);\n  FUN_004165d8(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span> & amp; Number);\n  FUN_00416630(<span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "u8x8_t * *", "pred_name": "u8x8", "ref_name": "u8x8", "ref_type": "u8x8_t * *"}, {"name": "param_2", "type": "uint8_t", "pred_name": "b", "ref_name": "b", "ref_type": "uint8_t"}], "body_in_train": false}, {"repo_owner": "krysmopompas", "repo_name": "OpenFrameworks-ng", "path": "krysmopompas/OpenFrameworks-ng/de36bc7eae88737dd1ca3a520e345a9004147d71e253192a8e7d66f6e65e74c1", "path_in_repo": "krysmopompas/OpenFrameworks-ng/extern/trees/poco/Net/obj/Linux/x86_64/debug_shared/HTTPDigestCredentials.o", "objdump": "", "code_s": "undefined[Number] FUN_00103cc6(ulong <span class=\"supfact\">param_1</span>,\n                               undefined8 <span class=\"supfact\">param_2</span>) {\n  undefined auVar1[Number];\n  auVar1._0_8_ = <span class=\"supfact\">param_1</span> & gt;\n  &gt;\n  Number &amp;\n  Number;\n  auVar1._8_8_ = <span class=\"supfact\">param_2</span>;\n  return auVar1;\n}", "code_t": "", "var": [{"name": "param_1", "type": "func_t * *", "pred_name": "f", "ref_name": "__lhs", "ref_type": "basic_string&lt;char,_std::char_traits&lt;char&gt;,_std::allocator&lt;char&gt;_&gt; * *"}, {"name": "param_2", "type": "func_t * *", "pred_name": "g", "ref_name": "__rhs", "ref_type": "basic_string&lt;char,_std::char_traits&lt;char&gt;,_std::allocator&lt;char&gt;_&gt; * *"}], "body_in_train": false}, {"repo_owner": "CobraJet93", "repo_name": "kernel-3.10.54", "path": "CobraJet93/kernel-3.10.54/b14173010f9ab7fa389b5639946b5aeed7916b1f0fb3adcc3a036e2c9ef28310", "path_in_repo": "CobraJet93/kernel-3.10.54/LGE_H324_Kernel_3.10.54/tools/perf/ui/tui/setup.o", "objdump": "", "code_s": "void FUN_00100000(char <span class=\"supfact\">param_1</span>) {\n  undefined *<span class=\"supfact\">puVar1</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  undefined <span class=\"supfact\">auStack_48</span>[Number];\n  undefined <span class=\"supfact\">auStack_28</span>[Number];\n  <span class=\"supfact\">puVar1</span> = <span class=\"supfact\">auStack_28</span>;\n  if ((<span class=\"supfact\">param_1</span> != String) || (iRam0000000000100028 != Number)) {\n    uRam0000000000100036 = Number;\n    <span class=\"supfact\">puVar1</span> = <span class=\"supfact\">auStack_48</span>;\n  }\n  if (*(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number) !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    *(undefined8 *)(<span class=\"supfact\">puVar1</span> + -Number) = Number;\n  }\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "_Bool", "pred_name": "force", "ref_name": "force", "ref_type": "_Bool"}, {"name": "puVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "auStack_48", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_28", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "yhuili", "repo_name": "ComputerAnimation", "path": "yhuili/ComputerAnimation/8bd49462b363620e4525ece47a6f8491ec893c43b6a4a4b0f785c00c5c3b0987", "path_in_repo": "yhuili/ComputerAnimation/csci520-assignment2-startercode-2013/csci520-assignment2-startercode/fltk-1.3.2/test/overlay", "objdump": "", "code_s": "void FUN_004208e6(undefined8 <span class=\"supfact\">param_1</span>) {\n  FUN_004207c7(<span class=\"supfact\">param_1</span>, Number);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "size_t", "pred_name": "size", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "markob", "repo_name": "microcontroller-labs", "path": "markob/microcontroller-labs/e761282fcd16644563bfa76469d10a1238788ffb6fea057405dee928789f9d0e", "path_in_repo": "markob/microcontroller-labs/c51/wireless-sensor/pt/example-buffer", "objdump": "", "code_s": "undefined8 FUN_00401233(short *<span class=\"supfact\">param_1</span>) {\n  undefined4 <span class=\"supfact\">uVar1</span>;\n  undefined8 <span class=\"supfact\">uVar2</span>;\n  if (*<span class=\"supfact\">param_1</span> == Number) {\n    DAT_00404090 = Number;\n    goto LAB_004012b7;\n  }\n  if (*<span class=\"supfact\">param_1</span> == Number) {\n    while (DAT_00404084 != Number) {\n      DAT_00404084 = DAT_00404084 + -Number;\n      <span class=\"supfact\">uVar1</span> = FUN_004011e5();\n      FUN_00401132(<span class=\"supfact\">uVar1</span>);\n      DAT_00404088 = DAT_00404088 + Number;\n      DAT_00404090 = DAT_00404090 + Number;\n    LAB_004012b7:\n      if (Number & lt; DAT_00404090)\n        goto LAB_004012c2;\n      *<span class=\"supfact\">param_1</span> = Number;\n    }\n    <span class=\"supfact\">uVar2</span> = Number;\n  } else {\n  LAB_004012c2:\n    *<span class=\"supfact\">param_1</span> = Number;\n    <span class=\"supfact\">uVar2</span> = Number;\n  }\n  return <span class=\"supfact\">uVar2</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "_rl_search_cxt * *", "pred_name": "cxt", "ref_name": "pt", "ref_type": "pt * *"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "item", "ref_type": "int"}, {"name": "uVar2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "VingtDylan", "repo_name": "icslab", "path": "VingtDylan/icslab/d03c9b5a08e62fe93e644d0acc5834047e17145dfc47da0caa2839c17c091d7a", "path_in_repo": "VingtDylan/icslab/nemu/build/obj/cpu/exec/logic.o", "objdump": "", "code_s": "void FUN_001001cf(undefined4 *<span class=\"supfact\">param_1</span>,\n                  undefined4 *<span class=\"supfact\">param_2</span>) {\n  *<span class=\"supfact\">param_1</span> = *<span class=\"supfact\">param_2</span>;\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "void * *", "pred_name": "dst", "ref_name": "dest", "ref_type": "rtlreg_t * *"}, {"name": "param_2", "type": "void * *", "pred_name": "src", "ref_name": "src1", "ref_type": "rtlreg_t * *"}], "body_in_train": false}, {"repo_owner": "hamayun", "repo_name": "NaSiK", "path": "hamayun/NaSiK/bd307cc752828f5e0bd0bf6da1c4d6623b887ce4ac3aa968c179f339821a49c5", "path_in_repo": "hamayun/NaSiK/hw/kvm-85/qemu/mips64-softmmu/lsi53c895a.o", "objdump": "", "code_s": "void FUN_00104f0d(undefined8 <span class=\"supfact\">param_1</span>,\n                  undefined <span class=\"supfact\">param_2</span>,\n                  undefined <span class=\"supfact\">param_3</span>) {\n  FUN_0010315a(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n               <span class=\"supfact\">param_3</span>);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "void * *", "pred_name": "opaque", "ref_name": "opaque", "ref_type": "void * *"}, {"name": "param_2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "param_3", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "Lowy-Projects", "repo_name": "ffmpeg", "path": "Lowy-Projects/ffmpeg/833d6fb4218557a234c97dd373e2c6ec2774cf8a29a9edd263a186cbf76e04d7", "path_in_repo": "Lowy-Projects/ffmpeg/ffmpeg/libavcodec/jpeg2000dec.o", "objdump": "", "code_s": "int FUN_00101b3b(long <span class=\"supfact\">param_1</span>,\n                 undefined8 <span class=\"supfact\">param_2</span>,\n                 undefined8 <span class=\"supfact\">param_3</span>) {\n  ushort uVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  undefined8 *puVar3;\n  undefined *puVar4;\n  undefined8 <span class=\"supfact\">uStack_e0</span>;\n  undefined <span class=\"supfact\">auStack_d8</span>[Number];\n  long <span class=\"supfact\">local_d0</span>[Number];\n  undefined <span class=\"supfact\">local_b8</span>[Number];\n  undefined <span class=\"supfact\">local_ad</span>;\n  undefined <span class=\"supfact\">local_ac</span>;\n  char <span class=\"supfact\">local_ab</span>;\n  undefined <span class=\"supfact\">local_a9</span>;\n  long *<span class=\"supfact\">local_60</span>;\n  long *<span class=\"supfact\">local_58</span>;\n  long *<span class=\"supfact\">local_50</span>;\n  long *<span class=\"supfact\">local_48</span>;\n  ushort <span class=\"supfact\">local_3a</span>;\n  long *<span class=\"supfact\">local_38</span>;\n  long *<span class=\"supfact\">local_30</span>;\n  long *<span class=\"supfact\">local_28</span>;\n  long *<span class=\"supfact\">local_20</span>;\n  undefined8 *<span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_c</span>[Number];\n  puVar4 = <span class=\"supfact\">auStack_d8</span>;\n  <span class=\"supfact\">local_18</span> = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n  if ((uint)((int)*(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) -\n             (int)*<span class=\"supfact\">local_18</span>) &\n          lt;\n      Number) {\n    <span class=\"supfact\">iVar2</span> = -Number;\n  } else {\n    <span class=\"supfact\">local_60</span> = (long *)(<span class=\"supfact\">param_1</span> + Number);\n    *<span class=\"supfact\">local_60</span> = *<span class=\"supfact\">local_60</span> + Number;\n    <span class=\"supfact\">local_ad</span> =\n        *(undefined *)(*<span class=\"supfact\">local_60</span> + -Number);\n    <span class=\"supfact\">local_50</span> = (long *)(<span class=\"supfact\">param_1</span> + Number);\n    *<span class=\"supfact\">local_50</span> = *<span class=\"supfact\">local_50</span> + Number;\n    <span class=\"supfact\">local_a9</span> =\n        *(undefined *)(*<span class=\"supfact\">local_50</span> + -Number);\n    <span class=\"supfact\">local_38</span> = (long *)(<span class=\"supfact\">param_1</span> + Number);\n    *<span class=\"supfact\">local_38</span> = *<span class=\"supfact\">local_38</span> + Number;\n    uVar1 = *(ushort *)(*<span class=\"supfact\">local_38</span> + -Number);\n    <span class=\"supfact\">local_3a</span> = uVar1 & lt;\n    &lt;\n    Number | uVar1 &gt;\n    &gt;\n    Number;\n    <span class=\"supfact\">local_ac</span> = (undefined)(uVar1 & gt; &gt; Number);\n    <span class=\"supfact\">local_28</span> = (long *)(<span class=\"supfact\">param_1</span> + Number);\n    *<span class=\"supfact\">local_28</span> = *<span class=\"supfact\">local_28</span> + Number;\n    <span class=\"supfact\">local_ab</span> = *(char *)(*<span class=\"supfact\">local_28</span> + -Number);\n    if ((<span class=\"supfact\">local_ab</span> == String) ||\n        (Number & lt; *(int *)(<span class=\"supfact\">param_1</span> + Number))) {\n      <span class=\"supfact\">local_d0</span>[Number] = <span class=\"supfact\">param_3</span>;\n      <span class=\"supfact\">local_d0</span>[Number] = <span class=\"supfact\">param_2</span>;\n      <span class=\"supfact\">local_d0</span>[Number] = <span class=\"supfact\">param_1</span>;\n      <span class=\"supfact\">local_58</span> = <span class=\"supfact\">local_60</span>;\n      <span class=\"supfact\">local_48</span> = <span class=\"supfact\">local_50</span>;\n      <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_38</span>;\n      <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_28</span>;\n      <span class=\"supfact\">iVar2</span> =\n          FUN_00101695(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_b8</span>);\n      if (-Number & lt; <span class=\"supfact\">iVar2</span>) {\n        <span class=\"supfact\">local_c</span>[Number] = Number;\n        while (*(int *)(puVar4 + Number) & lt;\n               *(int *)(*(long *)(puVar4 + Number) + Number)) {\n          if ((*(byte *)(*(long *)(puVar4 + Number) +\n                         (long)*(int *)(puVar4 + Number)) &\n                   amp;\n               Number) == Number) {\n            puVar3 = (undefined8 *)(puVar4 + -Number);\n            puVar4 = puVar4 + -Number;\n            *puVar3 = Number;\n          }\n          *(int *)(puVar4 + Number) = *(int *)(puVar4 + Number) + Number;\n        }\n        <span class=\"supfact\">iVar2</span> = Number;\n      }\n    } else {\n      <span class=\"supfact\">iVar2</span> = -Number;\n    }\n  }\n  return <span class=\"supfact\">iVar2</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "Jpeg2000DecoderContext * *", "pred_name": "s", "ref_name": "s", "ref_type": "Jpeg2000DecoderContext * *"}, {"name": "param_2", "type": "Jpeg2000CodingStyle * *", "pred_name": "c", "ref_name": "c", "ref_type": "Jpeg2000CodingStyle * *"}, {"name": "param_3", "type": "uint8_t * *", "pred_name": "properties", "ref_name": "properties", "ref_type": "uint8_t * *"}, {"name": "iVar2", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "uStack_e0", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_d8", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_d0", "type": "uint8_t * *", "pred_name": "properties-local", "ref_name": "properties-local", "ref_type": "uint8_t * *"}, {"name": "local_b8", "type": "__unk__", "pred_name": "tmp", "ref_name": "tmp", "ref_type": "struct Jpeg2000CodingStyle { int nreslevels; int nreslevels2decode; uint8_t log2_cblk_width; uint8_t log2_cblk_height; uint8_t transform; uint8_t csty; uint8_t nlayers; uint8_t mct; uint8_t cblk_style; uint8_t prog_order; uint8_t[33] log2_prec_widths; uint8_t[33] log2_prec_heights; PADDING (2); }"}, {"name": "local_ad", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_ac", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_ab", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_a9", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_60", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_58", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_48", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_3a", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_38", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_28", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_20", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_18", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_c", "type": "int", "pred_name": "compno", "ref_name": "compno", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "cetic", "repo_name": "6lbr", "path": "cetic/6lbr/9859dc9b5ff615f97205a9cc51b673a4402aa1c0e71149bcf91992f32ed444e0", "path_in_repo": "cetic/6lbr/tools/release-tools/compile-platforms/minimal-net/obj_minimal-net/netflood.o", "objdump": "", "code_s": "undefined8 *FUN_0010002d(undefined8 *<span class=\"supfact\">param_1</span>,\n                         undefined8 <span class=\"supfact\">param_2</span>) {\n  ushort uVar1;\n  undefined8 *puVar2;\n  uint <span class=\"supfact\">uVar3</span>;\n  undefined8 *<span class=\"supfact\">puVar4</span>;\n  undefined8 *<span class=\"supfact\">puVar5</span>;\n  undefined8 <span class=\"supfact\">uStack_80</span>;\n  undefined8 <span class=\"supfact\">uStack_78</span>;\n  undefined8 <span class=\"supfact\">uStack_70</span>;\n  undefined8 <span class=\"supfact\">uStack_68</span>;\n  undefined8 <span class=\"supfact\">uStack_60</span>;\n  undefined8 <span class=\"supfact\">uStack_58</span>;\n  undefined8 <span class=\"supfact\">uStack_50</span>;\n  undefined8 <span class=\"supfact\">uStack_48</span>;\n  undefined8 <span class=\"supfact\">uStack_40</span>;\n  undefined8 <span class=\"supfact\">local_38</span>;\n  undefined8 *<span class=\"supfact\">local_30</span>;\n  undefined8 <span class=\"supfact\">local_24</span>;\n  ushort <span class=\"supfact\">local_1c</span>;\n  byte <span class=\"supfact\">local_19</span>;\n  undefined8 *<span class=\"supfact\">local_18</span>;\n  undefined8 *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">uStack_40</span> = Number;\n  <span class=\"supfact\">local_24</span> = *<span class=\"supfact\">param_1</span>;\n  <span class=\"supfact\">local_1c</span> = *(ushort *)(<span class=\"supfact\">param_1</span> + Number);\n  <span class=\"supfact\">local_10</span> = (undefined8 *)(ulong)<span class=\"supfact\">local_1c</span>;\n  <span class=\"supfact\">local_19</span> = (byte)<span class=\"supfact\">local_1c</span>;\n  <span class=\"supfact\">uStack_48</span> = Number;\n  <span class=\"supfact\">uStack_50</span> = Number;\n  <span class=\"supfact\">puVar4</span> = *(undefined8 **)<span class=\"supfact\">param_1</span>[Number];\n  <span class=\"supfact\">puVar5</span> = &amp;\n  <span class=\"supfact\">uStack_50</span>;\n  if (*(undefined8 **)<span class=\"supfact\">param_1</span>[Number] != (undefined8 *)Number) {\n    <span class=\"supfact\">uStack_58</span> = Number;\n    if (((int)&amp; <span class=\"supfact\">local_24</span> == -Number) ||\n        (<span class=\"supfact\">puVar4</span> =\n             (undefined8 *)(ulong) *\n             (byte *)((long)<span class=\"supfact\">param_1</span> + Number),\n         <span class=\"supfact\">puVar5</span> = &amp;\n         <span class=\"supfact\">uStack_58</span>,\n         *(byte *)((long)<span class=\"supfact\">param_1</span> + Number) & lt;\n         (ushort)<span class=\"supfact\">local_24</span>)) {\n      <span class=\"supfact\">uStack_60</span> = Number;\n      <span class=\"supfact\">local_38</span> = <span class=\"supfact\">param_2</span>;\n      <span class=\"supfact\">local_30</span> = <span class=\"supfact\">param_1</span>;\n      <span class=\"supfact\">local_18</span> = <span class=\"supfact\">param_1</span>;\n      <span class=\"supfact\">puVar4</span> =\n          (undefined8 *)(**(code **)<span class=\"supfact\">param_1</span>[Number])(\n              <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>, (long)&amp;\n              <span class=\"supfact\">local_24</span> + Number, (char)<span class=\"supfact\">local_24</span>,\n              <span class=\"supfact\">local_19</span>);\n      puVar2 = <span class=\"supfact\">local_10</span>;\n      <span class=\"supfact\">puVar5</span> = &amp;\n      <span class=\"supfact\">uStack_58</span>;\n      if (((int)<span class=\"supfact\">puVar4</span> != Number) & amp; &amp;\n          (<span class=\"supfact\">puVar5</span> = &amp;\n           <span class=\"supfact\">uStack_58</span>,\n           <span class=\"supfact\">local_10</span> != (undefined8 *)Number)) {\n        <span class=\"supfact\">uStack_60</span> = Number;\n        <span class=\"supfact\">uStack_68</span> = Number;\n        <span class=\"supfact\">local_10</span> = (undefined8 *)Number;\n        <span class=\"supfact\">puVar5</span> = &amp;\n        <span class=\"supfact\">uStack_70</span>;\n        <span class=\"supfact\">uStack_70</span> = Number;\n        <span class=\"supfact\">local_24</span> = *puVar2;\n        uVar1 = *(ushort *)(puVar2 + Number);\n        <span class=\"supfact\">puVar4</span> = (undefined8 *)(ulong)uVar1;\n        if (<span class=\"supfact\">local_19</span> & lt; Number) {\n          <span class=\"supfact\">uVar3</span> = uVar1 + Number;\n          <span class=\"supfact\">local_1c</span> = (ushort)<span class=\"supfact\">uVar3</span>;\n          <span class=\"supfact\">uStack_78</span> = Number;\n          *(undefined8 *)(ulong)<span class=\"supfact\">uVar3</span> =\n              <span class=\"supfact\">local_24</span>;\n          *(ushort *)((undefined8 *)(ulong)<span class=\"supfact\">uVar3</span> + Number) =\n              <span class=\"supfact\">local_1c</span>;\n          <span class=\"supfact\">uStack_80</span> = Number;\n          FUN_00100000(<span class=\"supfact\">local_18</span>);\n          <span class=\"supfact\">puVar5</span> = &amp;\n          <span class=\"supfact\">uStack_80</span>;\n          *(char *)((long)<span class=\"supfact\">local_18</span> + Number) =\n              (char)<span class=\"supfact\">local_24</span>;\n          <span class=\"supfact\">puVar4</span> = <span class=\"supfact\">local_18</span>;\n        }\n      }\n    }\n  }\n  if (<span class=\"supfact\">local_10</span> != (undefined8 *)Number) {\n    *(undefined8 *)((long)<span class=\"supfact\">puVar5</span> + -Number) = Number;\n    <span class=\"supfact\">puVar4</span> = <span class=\"supfact\">local_10</span>;\n  }\n  return <span class=\"supfact\">puVar4</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "ipolite_conn * *", "pred_name": "ipolite", "ref_name": "ipolite", "ref_type": "ipolite_conn * *"}, {"name": "param_2", "type": "rimeaddr_t * *", "pred_name": "from", "ref_name": "from", "ref_type": "linkaddr_t * *"}, {"name": "uVar3", "type": "int", "pred_name": "iVar2", "ref_name": "iVar2", "ref_type": "int"}, {"name": "puVar4", "type": "undefined4 * *", "pred_name": "puVar3", "ref_name": "puVar3", "ref_type": "undefined8 * *"}, {"name": "puVar5", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_80", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_78", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_70", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_68", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_60", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_58", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_48", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_40", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_38", "type": "rimeaddr_t * *", "pred_name": "from-local", "ref_name": "from-local", "ref_type": "linkaddr_t * *"}, {"name": "local_30", "type": "ipolite_conn * *", "pred_name": "ipolite-local", "ref_name": "ipolite-local", "ref_type": "ipolite_conn * *"}, {"name": "local_24", "type": "struct netflood_hdr { uint16_t originator_seqno; rimeaddr_t originator; uint16_t hops; }", "pred_name": "hdr", "ref_name": "hdr", "ref_type": "struct netflood_hdr { uint16_t originator_seqno; linkaddr_t originator; uint16_t hops; }"}, {"name": "local_1c", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_19", "type": "uint8_t", "pred_name": "hops", "ref_name": "hops", "ref_type": "uint8_t"}, {"name": "local_18", "type": "netflood_conn * *", "pred_name": "c", "ref_name": "c", "ref_type": "netflood_conn * *"}, {"name": "local_10", "type": "queuebuf * *", "pred_name": "queuebuf", "ref_name": "queuebuf", "ref_type": "queuebuf * *"}], "body_in_train": false}, {"repo_owner": "r-englund", "repo_name": "rGraphicsLibrary", "path": "r-englund/rGraphicsLibrary/038906d87d77c33caa07ce5d4d14ced88cd9e344bade30c8475d3688837d1ead", "path_in_repo": "r-englund/rGraphicsLibrary/ext/im/obj/z/Linux44_64/gzlib.o", "objdump": "", "code_s": "void FUN_001003a3(undefined8 <span class=\"supfact\">param_1</span>,\n                  undefined8 <span class=\"supfact\">param_2</span>) {\n  FUN_00100083(<span class=\"supfact\">param_1</span>, Number, <span class=\"supfact\">param_2</span>);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "char * *", "pred_name": "path", "ref_name": "path", "ref_type": "char * *"}, {"name": "param_2", "type": "char * *", "pred_name": "mode", "ref_name": "mode", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "ausbin", "repo_name": "astro", "path": "ausbin/astro/2b21e8d91654358786e0c274dc50ae21103e72a0a01ce77398d443a2a6032f3d", "path_in_repo": "ausbin/astro/submods/unicorn/qemu/arm-softmmu/target-arm/helper.o", "objdump": "", "code_s": "ushort FUN_00108d74(ushort <span class=\"supfact\">param_1</span>,\n                    ushort <span class=\"supfact\">param_2</span>) {\n  ushort <span class=\"supfact\">local_a</span>;\n  <span class=\"supfact\">local_a</span> = <span class=\"supfact\">param_2</span> + <span class=\"supfact\">param_1</span>;\n  if (((short)(<span class=\"supfact\">local_a</span> ^ <span class=\"supfact\">param_1</span>) & lt;\n       Number) &\n          amp;\n      &amp; (-Number & lt;\n             (short)(<span class=\"supfact\">param_1</span> ^ <span class=\"supfact\">param_2</span>))) {\n    if ((short)<span class=\"supfact\">param_1</span> & lt; Number) {\n      <span class=\"supfact\">local_a</span> = Number;\n    } else {\n      <span class=\"supfact\">local_a</span> = Number;\n    }\n  }\n  return <span class=\"supfact\">local_a</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "uint16_t", "pred_name": "a", "ref_name": "a", "ref_type": "uint16_t"}, {"name": "param_2", "type": "uint16_t", "pred_name": "b", "ref_name": "b", "ref_type": "uint16_t"}, {"name": "local_a", "type": "uint16_t", "pred_name": "res", "ref_name": "res", "ref_type": "uint16_t"}], "body_in_train": false}, {"repo_owner": "CentOS", "repo_name": "sig-core-t_ltp", "path": "CentOS/sig-core-t_ltp/a28c74467210df74bf8eff7dc9888a228a4c0d79933864f5e951d71cc561a85e", "path_in_repo": "CentOS/sig-core-t_ltp/testcases/kernel/syscalls/set_tid_address/set_tid_address01", "objdump": "", "code_s": "void FUN_00405258(undefined8 <span class=\"supfact\">param_1</span>) {\n  __uid_t <span class=\"supfact\">_Var1</span>;\n  <span class=\"supfact\">_Var1</span> = geteuid();\n  if (<span class=\"supfact\">_Var1</span> != Number) {\n    FUN_00405137(Number, <span class=\"supfact\">param_1</span>, String);\n  }\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "_func_void * *", "pred_name": "func", "ref_name": "func", "ref_type": "_func_void * *"}, {"name": "_Var1", "type": "__uid_t", "pred_name": "_Var1", "ref_name": "_Var1", "ref_type": "__uid_t"}], "body_in_train": false}, {"repo_owner": "inikep", "repo_name": "lzbench", "path": "inikep/lzbench/0134d83d5cd88208c9ee4fef9e9158134daf543dcf266813226f61bed00382c4", "path_in_repo": "inikep/lzbench//lzma/LzFind.o", "objdump": "", "code_s": "void FUN_00102a69(byte **<span class=\"supfact\">param_1</span>, int <span class=\"supfact\">param_2</span>) {\n  uint uVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  byte *pbVar4;\n  uint uVar5;\n  uint uVar6;\n  int <span class=\"supfact\">local_44</span>;\n  <span class=\"supfact\">local_44</span> = <span class=\"supfact\">param_2</span>;\n  do {\n    uVar2 = *(uint *)((long)<span class=\"supfact\">param_1</span> + Number);\n    if (uVar2 & lt; Number) {\n      FUN_00101395(<span class=\"supfact\">param_1</span>);\n    } else {\n      pbVar4 = *<span class=\"supfact\">param_1</span>;\n      uVar5 = (uint)pbVar4[Number] ^\n              *(uint *)((long)<span class=\"supfact\">param_1</span> +\n                        ((long)(int)(uint)*pbVar4 + Number) * Number + Number);\n      uVar1 = uVar5 ^ (uint)pbVar4[Number] & lt;\n      &lt;\n      Number;\n      uVar6 = *(uint *)(<span class=\"supfact\">param_1</span> + Number) & amp;\n      (*(int *)((long)<span class=\"supfact\">param_1</span> +\n                ((long)(int)(uint)pbVar4[Number] + Number) * Number + Number) &\n           lt;\n       &lt; Number ^ uVar1);\n      pbVar4 = <span class=\"supfact\">param_1</span>[Number];\n      uVar3 = *(undefined4 *)(pbVar4 + ((ulong)uVar6 + Number) * Number);\n      *(undefined4 *)(pbVar4 + ((ulong)uVar6 + Number) * Number) =\n          *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n      *(undefined4 *)(pbVar4 +\n                      ((ulong)(uVar1 & amp; Number) + Number) * Number) =\n          *(undefined4 *)(pbVar4 + ((ulong)uVar6 + Number) * Number);\n      *(undefined4 *)(pbVar4 + (ulong)(uVar5 & amp; Number) * Number) =\n          *(undefined4 *)(pbVar4 +\n                          ((ulong)(uVar1 & amp; Number) + Number) * Number);\n      FUN_00101199(uVar2, uVar3,\n                   *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                   *<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_1</span>[Number],\n                   *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                   *(undefined4 *)((long)<span class=\"supfact\">param_1</span> + Number),\n                   *(undefined4 *)((long)<span class=\"supfact\">param_1</span> + Number));\n      *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n          *(int *)(<span class=\"supfact\">param_1</span> + Number) + Number;\n      *<span class=\"supfact\">param_1</span> = *<span class=\"supfact\">param_1</span> + Number;\n      *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n          *(int *)(<span class=\"supfact\">param_1</span> + Number) + Number;\n      if (*(int *)(<span class=\"supfact\">param_1</span> + Number) ==\n          *(int *)((long)<span class=\"supfact\">param_1</span> + Number)) {\n        FUN_00100cee(<span class=\"supfact\">param_1</span>);\n      }\n    }\n    <span class=\"supfact\">local_44</span> = <span class=\"supfact\">local_44</span> + -Number;\n  } while (<span class=\"supfact\">local_44</span> != Number);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "CMatchFinder * *", "pred_name": "p", "ref_name": "p", "ref_type": "CMatchFinder * *"}, {"name": "param_2", "type": "UInt32", "pred_name": "num", "ref_name": "num", "ref_type": "UInt32"}, {"name": "local_44", "type": "UInt32", "pred_name": "num-local", "ref_name": "num-local", "ref_type": "UInt32"}], "body_in_train": false}, {"repo_owner": "unix1986", "repo_name": "universe", "path": "unix1986/universe/6fe32828391397be7843abb3ae26115b89a035de5f9c90b4f40f43a754792ff7", "path_in_repo": "unix1986/universe/book/bookcode/4/4.33/test/CLMessageLoopManager.o", "objdump": "", "code_s": "void FUN_00100000(undefined8 *<span class=\"supfact\">param_1</span>,\n                  long <span class=\"supfact\">param_2</span>) {\n  *<span class=\"supfact\">param_1</span> = Number;\n  if (<span class=\"supfact\">param_2</span> == Number) {\n    <span class=\"supfact\">param_1</span>[Number] = Number;\n  }\n  <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">param_2</span>;\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "stg_rtk_region_t * *", "pred_name": "region", "ref_name": "this", "ref_type": "CLMessageLoopManager * *"}, {"name": "param_2", "type": "size_t", "pred_name": "size", "ref_name": "pMessageObserver", "ref_type": "CLMessageObserver * *"}], "body_in_train": false}, {"repo_owner": "muzee-git", "repo_name": "ffmpeg_icy", "path": "muzee-git/ffmpeg_icy/4b6d7960a2e6bf45349c745c92e04ec898fdcf3a3a9e0e86d8c76a7685d0fee2", "path_in_repo": "muzee-git/ffmpeg_icy//libavfilter/vsrc_buffer.o", "objdump": "", "code_s": "undefined4 FUN_001000ad(long <span class=\"supfact\">param_1</span>,\n                        undefined8 <span class=\"supfact\">param_2</span>,\n                        uint <span class=\"supfact\">param_3</span>) {\n  uint uVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  undefined8 uVar4;\n  code *pcVar5;\n  undefined4 <span class=\"supfact\">uVar6</span>;\n  long <span class=\"supfact\">lVar7</span>;\n  undefined8 *puVar8;\n  undefined *puVar9;\n  undefined8 *puVar10;\n  long <span class=\"supfact\">alStack_4a8</span>[Number];\n  undefined8 <span class=\"supfact\">local_460</span>;\n  undefined <span class=\"supfact\">local_458</span>[Number];\n  uint <span class=\"supfact\">uStack_44c</span>;\n  undefined8 <span class=\"supfact\">local_448</span>;\n  long <span class=\"supfact\">local_440</span>;\n  long <span class=\"supfact\">local_80</span>;\n  undefined4 <span class=\"supfact\">uStack_74</span>;\n  undefined8 <span class=\"supfact\">local_70</span>;\n  int <span class=\"supfact\">aiStack_64</span>[Number];\n  undefined8 <span class=\"supfact\">local_58</span>;\n  long <span class=\"supfact\">local_40</span>[Number];\n  undefined8 *<span class=\"supfact\">local_18</span>;\n  long *<span class=\"supfact\">local_10</span>;\n  puVar8 = (undefined8 *)<span class=\"supfact\">local_458</span>;\n  <span class=\"supfact\">local_440</span> = <span class=\"supfact\">param_1</span>;\n  <span class=\"supfact\">local_448</span> = <span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">uStack_44c</span> = <span class=\"supfact\">param_3</span>;\n  <span class=\"supfact\">local_10</span> = *(long **)(<span class=\"supfact\">param_1</span> + Number);\n  <span class=\"supfact\">local_18</span> =\n      (undefined8 *)**(undefined8 **)(<span class=\"supfact\">param_1</span> + Number);\n  if (**(long **)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n    if ((<span class=\"supfact\">param_3</span> & amp; Number) == Number) {\n      return Number;\n    }\n    puVar8 = &amp;\n    <span class=\"supfact\">local_460</span>;\n    <span class=\"supfact\">local_460</span> = Number;\n    *(undefined8 *)**(undefined8 **)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  }\n  if (((**(int **)(*(long *)((long)puVar8 + Number) + Number) ==\n        *(int *)(*(long *)((long)puVar8 + Number) + Number)) &\n           amp;\n       &amp; (*(int *)(*(long *)(*(long *)((long)puVar8 + Number) + Number) +\n                       Number) ==\n              *(int *)(*(long *)((long)puVar8 + Number) + Number))) &\n          amp;\n      &amp; (puVar10 = puVar8,\n             *(int *)(*(long *)((long)puVar8 + Number) + Number) ==\n                 *(int *)(*(long *)((long)puVar8 + Number) + Number)))\n    goto LAB_0010059e;\n  *(undefined8 *)((long)puVar8 + Number) =\n      *(undefined8 *)(**(long **)(*(long *)((long)puVar8 + Number) + Number) +\n                      Number);\n  uVar1 =\n      *(uint *)(*(long *)(*(long *)((long)puVar8 + Number) + Number) + Number);\n  uVar2 = **(uint **)(*(long *)((long)puVar8 + Number) + Number);\n  *(undefined8 *)((long)puVar8 + -Number) = *(\n      undefined8 *)((long)*(int *)(*(long *)((long)puVar8 + Number) + Number) *\n                    Number);\n  *(ulong *)((long)puVar8 + -Number) = (ulong)uVar1;\n  *(ulong *)((long)puVar8 + -Number) = (ulong)uVar2;\n  *(undefined8 *)((long)puVar8 + -Number) = Number;\n  puVar9 = (undefined *)((long)puVar8 + -Number);\n  <span class=\"supfact\">lVar7</span> = *(long *)((long)puVar8 + Number);\n  if (<span class=\"supfact\">lVar7</span> == Number) {\n  LAB_0010028d:\n    *(undefined8 *)(puVar9 + -Number) = Number;\n    *(long *)(puVar9 + Number) = <span class=\"supfact\">lVar7</span>;\n    *(undefined8 *)(puVar9 + -Number) = Number;\n    *(undefined8 *)(puVar9 + -Number) = Number;\n    *(int *)(puVar9 + Number) = (int)(puVar9 + Number);\n    if (*(int *)(puVar9 + Number) & lt; Number) {\n      return *(undefined4 *)(puVar9 + Number);\n    }\n    *(undefined8 *)(puVar9 + -Number) = Number;\n    *(undefined8 *)(puVar9 + -Number) = Number;\n    *(int *)(puVar9 + Number) = (int)*(undefined8 *)(puVar9 + Number);\n    if (*(int *)(puVar9 + Number) & lt; Number) {\n      *(undefined8 *)(puVar9 + -Number) = Number;\n      return *(undefined4 *)(puVar9 + Number);\n    }\n    uVar4 = **(undefined8 **)(*(long *)(puVar9 + -Number) + Number);\n    puVar10 = (undefined8 *)(puVar9 + -Number);\n    *(undefined8 *)(puVar9 + -Number) = Number;\n    *(int *)(puVar9 + Number) = (int)uVar4;\n    if (*(int *)(puVar9 + Number) & lt; Number) {\n      *(undefined8 *)(puVar9 + -Number) = Number;\n      return *(undefined4 *)(puVar9 + Number);\n    }\n    *(undefined8 *)(**(long **)(*(long *)(puVar9 + Number) + Number) + Number) =\n        *(undefined8 *)(**(long **)(*(long *)(puVar9 + Number) + Number) +\n                        Number);\n    *(undefined4 *)(**(long **)(*(long *)(puVar9 + Number) + Number) + Number) =\n        *(undefined4 *)(*(long *)(puVar9 + Number) + Number);\n  } else {\n    <span class=\"supfact\">lVar7</span> =\n        **(long **)(*(long *)((long)puVar8 + Number) + Number);\n    puVar9 = (undefined *)((long)puVar8 + -Number);\n    *(undefined8 *)((long)puVar8 + -Number) = Number;\n    if ((int)<span class=\"supfact\">lVar7</span> != Number)\n      goto LAB_0010028d;\n    uVar4 = **(undefined8 **)(*(long *)((long)puVar8 + Number) + Number);\n    puVar10 = (undefined8 *)((long)puVar8 + -Number);\n    *(undefined8 *)((long)puVar8 + -Number) = Number;\n    if ((int)uVar4 == Number) {\n      puVar10 = (undefined8 *)((long)puVar8 + -Number);\n      *(undefined8 *)((long)puVar8 + -Number) = Number;\n      pcVar5 = *(code **)(*(long *)(*(long *)((long)puVar8 + Number) + Number) +\n                          Number);\n      *(undefined8 *)((long)puVar8 + -Number) = Number;\n      (*pcVar5)(*(undefined8 *)((long)puVar8 + Number), puVar8, Number, puVar8,\n                pcVar5, *(long *)((long)puVar8 + Number) + Number);\n    }\n  }\n  <span class=\"supfact\">lVar7</span> =\n      **(long **)(*(long *)((long)puVar10 + Number) + Number);\n  *(undefined4 *)(<span class=\"supfact\">lVar7</span> + Number) =\n      *(undefined4 *)(*(long *)((long)puVar10 + Number) + Number);\n  *(undefined4 *)(*(long *)((long)puVar10 + Number) + Number) =\n      *(undefined4 *)(<span class=\"supfact\">lVar7</span> + Number);\n  <span class=\"supfact\">lVar7</span> =\n      **(long **)(*(long *)((long)puVar10 + Number) + Number);\n  *(undefined4 *)(<span class=\"supfact\">lVar7</span> + Number) =\n      **(undefined4 **)(*(long *)((long)puVar10 + Number) + Number);\n  *(undefined4 *)(*(long *)((long)puVar10 + Number) + Number) =\n      *(undefined4 *)(<span class=\"supfact\">lVar7</span> + Number);\n  <span class=\"supfact\">lVar7</span> =\n      **(long **)(*(long *)((long)puVar10 + Number) + Number);\n  *(undefined4 *)(<span class=\"supfact\">lVar7</span> + Number) =\n      *(undefined4 *)(*(long *)(*(long *)((long)puVar10 + Number) + Number) +\n                      Number);\n  *(undefined4 *)(*(long *)((long)puVar10 + Number) + Number) =\n      *(undefined4 *)(<span class=\"supfact\">lVar7</span> + Number);\n  *(undefined8 *)((long)puVar10 + Number) =\n      **(undefined8 **)(*(long *)((long)puVar10 + Number) + Number);\n  pcVar5 = *(code **)(*(long *)(*(long *)((long)puVar10 + Number) + Number) +\n                      Number);\n  *(undefined8 *)((long)puVar10 + -Number) = Number;\n  <span class=\"supfact\">uVar6</span> = (*pcVar5)(*(undefined8 *)((long)puVar10 + Number));\n  *(undefined4 *)((long)puVar10 + Number) = <span class=\"supfact\">uVar6</span>;\n  if (*(int *)((long)puVar10 + Number) & lt; Number) {\n    return *(undefined4 *)((long)puVar10 + Number);\n  }\nLAB_0010059e:\n  puVar10[-Number] = Number;\n  *(undefined8 *)puVar10[Number] = puVar10[Number];\n  <span class=\"supfact\">uVar6</span> = **(undefined4 **)(puVar10[Number] + Number);\n  uVar3 = *(undefined4 *)(puVar10[Number] + Number);\n  puVar10[-Number] =\n      (ulong) * (uint *)(*(long *)(puVar10[Number] + Number) + Number);\n  puVar10[-Number] = Number;\n  uVar4 = *(undefined8 *)puVar10[Number];\n  puVar10[-Number] = Number;\n  FUN_00100000(uVar4, *puVar10, *puVar10, puVar10[Number] + Number, uVar3,\n               <span class=\"supfact\">uVar6</span>);\n  return Number;\n}", "code_t": "", "var": [{"name": "param_1", "type": "AVCodecContext * *", "pred_name": "avctx", "ref_name": "buffer_filter", "ref_type": "AVFilterContext * *"}, {"name": "param_2", "type": "AVPicture * *", "pred_name": "pic", "ref_name": "picref", "ref_type": "AVFilterBufferRef * *"}, {"name": "param_3", "type": "int", "pred_name": "depth", "ref_name": "flags", "ref_type": "int"}, {"name": "uVar6", "type": "int", "pred_name": "iVar2", "ref_name": "iVar2", "ref_type": "int"}, {"name": "lVar7", "type": "disappear", "pred_name": "", "ref_name": "pAVar3", "ref_type": "AVFilterBufferRef * *"}, {"name": "alStack_4a8", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_460", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_458", "type": "AVPicture * *", "pred_name": "pic-local", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_44c", "type": "int", "pred_name": "depth-local", "ref_name": "flags-local", "ref_type": "int"}, {"name": "local_448", "type": "AVPicture * *", "pred_name": "pic-local", "ref_name": "picref-local", "ref_type": "AVFilterBufferRef * *"}, {"name": "local_440", "type": "AVCodecContext * *", "pred_name": "avctx-local", "ref_name": "buffer_filter-local", "ref_type": "AVFilterContext * *"}, {"name": "local_80", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_74", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_70", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "aiStack_64", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_58", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_40", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_18", "type": "disappear", "pred_name": "", "ref_name": "outlink", "ref_type": "AVFilterLink * *"}, {"name": "local_10", "type": "uint8_t * *", "pred_name": "__unk__", "ref_name": "c", "ref_type": "BufferSourceContext * *"}], "body_in_train": true}, {"repo_owner": "tikozhong", "repo_name": "nodeTest", "path": "tikozhong/nodeTest/fffc9c265501801fd77e993b7d07482c43077a06864a38f477fae8c24d2fcf1b", "path_in_repo": "tikozhong/nodeTest/curl-7.64.0/lib/libcurl_la-doh.o", "objdump": "", "code_s": "long FUN_0010030b(undefined8 param_1, long <span class=\"supfact\">param_2</span>,\n                  long <span class=\"supfact\">param_3</span>, long *<span class=\"supfact\">param_4</span>) {\n  <span class=\"supfact\">param_2</span> = <span class=\"supfact\">param_2</span> * <span class=\"supfact\">param_3</span>;\n  if ((ulong)(<span class=\"supfact\">param_2</span> + <span class=\"supfact\">param_4</span>[Number]) & lt;\n      Number) {\n    *<span class=\"supfact\">param_4</span> = *<span class=\"supfact\">param_4</span>;\n    if (*<span class=\"supfact\">param_4</span> == Number) {\n      <span class=\"supfact\">param_2</span> = Number;\n    } else {\n      <span class=\"supfact\">param_4</span>[Number] =\n          <span class=\"supfact\">param_4</span>[Number] + <span class=\"supfact\">param_2</span>;\n    }\n  } else {\n    <span class=\"supfact\">param_2</span> = Number;\n  }\n  return <span class=\"supfact\">param_2</span>;\n}", "code_t": "", "var": [{"name": "param_2", "type": "size_t", "pred_name": "size", "ref_name": "size", "ref_type": "size_t"}, {"name": "param_3", "type": "size_t", "pred_name": "nmemb", "ref_name": "nmemb", "ref_type": "size_t"}, {"name": "param_4", "type": "void * *", "pred_name": "opaque", "ref_name": "userp", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "kisom", "repo_name": "site-tools", "path": "kisom/site-tools/0f6602ff460a489c82d7ae5e686491b28fcbcef8dec49fbdd11667b14a01828b", "path_in_repo": "kisom/site-tools/9base/rc/plan9ish.o", "objdump": "", "code_s": "undefined8 FUN_001013a8(undefined8 <span class=\"supfact\">param_1</span>) {\n  return <span class=\"supfact\">param_1</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "this", "ref_name": "n", "ref_type": "ulong"}], "body_in_train": true}, {"repo_owner": "lmac2019", "repo_name": "Cmpt-300-Mac-Waswa", "path": "lmac2019/Cmpt-300-Mac-Waswa/a66e277205b87526de8b778e63dbb5e2581785a64ed21711c82d3a671e53385b", "path_in_repo": "lmac2019/Cmpt-300-Mac-Waswa/Assignment5/linux-stable/tools/lib/traceevent/libtraceevent.so.1.1.0", "objdump": "", "code_s": "undefined8 FUN_00105594(ulong *<span class=\"supfact\">param_1</span>,\n                        ulong *<span class=\"supfact\">param_2</span>) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  if (*<span class=\"supfact\">param_1</span> & lt; *<span class=\"supfact\">param_2</span>) {\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else if (*<span class=\"supfact\">param_2</span> & lt; *<span class=\"supfact\">param_1</span>) {\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar1</span> = Number;\n  }\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "word * *", "pred_name": "pp1", "ref_name": "a", "ref_type": "void * *"}, {"name": "param_2", "type": "word * *", "pred_name": "pp2", "ref_name": "b", "ref_type": "void * *"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "svn2github", "repo_name": "uhexen2", "path": "svn2github/uhexen2/304c1ecbfc961c87128d0fbb9233eec92b25e9268f35c2e570bd1e20177e1979", "path_in_repo": "svn2github/uhexen2/utils/dcc/pr_comp.o", "objdump": "", "code_s": "undefined[Number] FUN_00101d60(int **<span class=\"supfact\">param_1</span>,\n                               int <span class=\"supfact\">param_2</span>,\n                               long <span class=\"supfact\">param_3</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  long lVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  undefined auVar5[Number];\n  undefined <span class=\"supfact\">auStack_30</span>[Number];\n  int <span class=\"supfact\">local_c</span>;\n  puVar4 = <span class=\"supfact\">auStack_30</span>;\n  for (<span class=\"supfact\">local_c</span> = Number;\n       lVar2 = <span class=\"supfact\">param_3</span>, <span class=\"supfact\">local_c</span> & lt;\n       <span class=\"supfact\">param_2</span>;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    puVar3 = puVar4 + -Number;\n    *(undefined8 *)(puVar4 + -Number) = Number;\n    if (*piRam0000000000101d91 != **<span class=\"supfact\">param_1</span>) {\n      puVar3 = puVar4 + -Number;\n      *(undefined8 *)(puVar4 + -Number) = Number;\n    }\n    <span class=\"supfact\">iVar1</span> =\n        *(int *)((long)*piRam0000000000101dc1 * Number) & lt;\n    &lt;\n    Number;\n    <span class=\"supfact\">param_3</span> = (long)<span class=\"supfact\">iVar1</span>;\n    *(undefined8 *)(puVar3 + -Number) = Number;\n    puVar4 = puVar3 + -Number;\n    *(undefined8 *)(puVar3 + -Number) = Number;\n    lVar2 = <span class=\"supfact\">param_3</span>;\n    if (<span class=\"supfact\">iVar1</span> == Number)\n      break;\n    puVar4 = puVar3 + -Number;\n    *(undefined8 *)(puVar3 + -Number) = Number;\n    if (<span class=\"supfact\">iVar1</span> != Number)\n      goto LAB_00101e69;\n  }\n  *(undefined8 *)(puVar4 + -Number) = Number;\n  <span class=\"supfact\">param_3</span> = Number;\n  *(undefined8 *)(puVar4 + -Number) = Number;\nLAB_00101e69:\n  auVar5._8_8_ = lVar2;\n  auVar5._0_8_ = <span class=\"supfact\">param_3</span>;\n  return auVar5;\n}", "code_t": "", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "scope", "ref_type": "def_t * *"}, {"name": "param_2", "type": "int", "pred_name": "__unk__", "ref_name": "size", "ref_type": "int"}, {"name": "param_3", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "iVar1", "type": "int", "pred_name": "__unk__", "ref_name": "iVar1", "ref_type": "int"}, {"name": "auStack_30", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "lvming", "repo_name": "bacnet-stack", "path": "lvming/bacnet-stack/4bd6180c0d3b50bdadc7d0c3545ae3b2dbaa01b4b00586ba75469417089f6a7a", "path_in_repo": "lvming/bacnet-stack//src/whois.o", "objdump": "", "code_s": "undefined[Number] FUN_001000b7(undefined8 param_1, int <span class=\"supfact\">param_2</span>,\n                               undefined4 *<span class=\"supfact\">param_3</span>) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  undefined auVar2[Number];\n  undefined4 <span class=\"supfact\">local_14</span>[Number];\n  if (<span class=\"supfact\">param_2</span> == Number) {\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else {\n    if (<span class=\"supfact\">param_3</span> != (undefined4 *)Number) {\n      *<span class=\"supfact\">param_3</span> = Number;\n    }\n    <span class=\"supfact\">param_3</span> = <span class=\"supfact\">local_14</span>;\n    <span class=\"supfact\">uVar1</span> = Number;\n  }\n  auVar2._8_8_ = <span class=\"supfact\">param_3</span>;\n  auVar2._0_8_ = <span class=\"supfact\">uVar1</span>;\n  return auVar2;\n}", "code_t": "", "var": [{"name": "param_2", "type": "int", "pred_name": "status", "ref_name": "apdu_len", "ref_type": "uint"}, {"name": "param_3", "type": "disappear", "pred_name": "", "ref_name": "pLow_limit", "ref_type": "int32_t * *"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_14", "type": "pid_t", "pred_name": "pid", "ref_name": "len_value", "ref_type": "uint32_t"}], "body_in_train": false}, {"repo_owner": "SKKU-ESLAB", "repo_name": "ant-hostap", "path": "SKKU-ESLAB/ant-hostap/24c91db3965e1facb2ba27fb42707b33076e9a33dc577ec4eac9f90ce6f6d3d8", "path_in_repo": "SKKU-ESLAB/ant-hostap/src/ap/ieee802_1x.o", "objdump": "", "code_s": "void FUN_00100166(undefined *<span class=\"supfact\">param_1</span>,\n                  undefined2 <span class=\"supfact\">param_2</span>) {\n  *<span class=\"supfact\">param_1</span> =\n      (char)((ushort)<span class=\"supfact\">param_2</span> & gt; &gt; Number);\n  <span class=\"supfact\">param_1</span>[Number] = (char)<span class=\"supfact\">param_2</span>;\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "uint16_t * *", "pred_name": "p", "ref_name": "a", "ref_type": "u8 * *"}, {"name": "param_2", "type": "uint16_t", "pred_name": "v", "ref_name": "val", "ref_type": "u16"}], "body_in_train": true}, {"repo_owner": "vh21", "repo_name": "codezero-qemu", "path": "vh21/codezero-qemu/cc9c98cb55fbc91be287101e82e511f1b8b2d35d5216a5d8b81e8ab8a9dadb88", "path_in_repo": "vh21/codezero-qemu//sparc32plus-linux-user/fpu/softfloat.o", "objdump": "", "code_s": "undefined[Number] FUN_00101df2(void) {\n  undefined auVar1[Number];\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  long <span class=\"supfact\">param_7</span>;\n  undefined8 <span class=\"supfact\">param_8</span>;\n  undefined8 <span class=\"supfact\">param_9</span>;\n  undefined8 <span class=\"supfact\">local_28</span>;\n  ulong <span class=\"supfact\">local_20</span>[Number];\n  undefined8 <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> =\n      *(undefined8 *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  FUN_00100218(<span class=\"supfact\">param_8</span>, <span class=\"supfact\">param_9</span>, Number,\n               <span class=\"supfact\">local_20</span>, &amp;\n               <span class=\"supfact\">local_28</span>);\n  auVar1._8_8_ = <span class=\"supfact\">param_7</span> & lt;\n  &lt;\n  Number | <span class=\"supfact\">local_20</span>[Number] | Number;\n  auVar1._0_8_ = <span class=\"supfact\">local_28</span>;\n  return auVar1;\n}", "code_t": "", "var": [{"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "param_7", "type": "struct commonNaNT { flag sign; bits64 high; bits64 low; PADDING (7); }", "pred_name": "a", "ref_name": "a", "ref_type": "struct commonNaNT { flag sign; bits64 high; bits64 low; PADDING (7); }"}, {"name": "param_8", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "param_9", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_28", "type": "struct float128 { uint64_t low; uint64_t high; }", "pred_name": "z", "ref_name": "z", "ref_type": "struct float128 { uint64_t low; uint64_t high; }"}, {"name": "local_20", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_10", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "AlexAltea", "repo_name": "unicorn.js", "path": "AlexAltea/unicorn.js/29e181a08feb6fe1a4e596897a475fdd4864efa7b36e2975a7e41e3fe7d36e06", "path_in_repo": "AlexAltea/unicorn.js/unicorn/qemu/arm-softmmu/target-arm/iwmmxt_helper.o", "objdump": "", "code_s": "ulong FUN_001036b3(long <span class=\"supfact\">param_1</span>, ulong <span class=\"supfact\">param_2</span>,\n                   ulong <span class=\"supfact\">param_3</span>) {\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  ulong <span class=\"supfact\">uVar13</span>;\n  ulong uVar14;\n  ulong uVar15;\n  ulong uVar16;\n  uVar1 = <span class=\"supfact\">param_3</span>;\n  if ((byte)<span class=\"supfact\">param_3</span> & lt; (byte)<span class=\"supfact\">param_2</span>) {\n    uVar1 = <span class=\"supfact\">param_2</span>;\n  }\n  uVar8 = (uint)<span class=\"supfact\">param_3</span>;\n  uVar5 = (uint)<span class=\"supfact\">param_2</span>;\n  uVar6 = uVar8;\n  if ((byte)(<span class=\"supfact\">param_3</span> & gt; &gt; Number) & lt;\n      (byte)(<span class=\"supfact\">param_2</span> & gt; &gt; Number)) {\n    uVar6 = uVar5;\n  }\n  uVar7 = uVar8;\n  if ((byte)(<span class=\"supfact\">param_3</span> & gt; &gt; Number) & lt;\n      (byte)(<span class=\"supfact\">param_2</span> & gt; &gt; Number)) {\n    uVar7 = uVar5;\n  }\n  if ((byte)(<span class=\"supfact\">param_3</span> & gt; &gt; Number) & lt;\n      (byte)(<span class=\"supfact\">param_2</span> & gt; &gt; Number)) {\n    uVar8 = uVar5;\n  }\n  uVar2 = <span class=\"supfact\">param_3</span>;\n  if ((byte)(<span class=\"supfact\">param_3</span> & gt; &gt; Number) & lt;\n      (byte)(<span class=\"supfact\">param_2</span> & gt; &gt; Number)) {\n    uVar2 = <span class=\"supfact\">param_2</span>;\n  }\n  uVar14 = (ulong)(uVar6 & amp; Number) | uVar1 & amp;\n  Number | (ulong)(uVar7 & amp; Number) | (ulong)(uVar8 & amp; Number) |\n      uVar2 &amp;\n  Number;\n  uVar3 = <span class=\"supfact\">param_3</span>;\n  if ((byte)(<span class=\"supfact\">param_3</span> & gt; &gt; Number) & lt;\n      (byte)(<span class=\"supfact\">param_2</span> & gt; &gt; Number)) {\n    uVar3 = <span class=\"supfact\">param_2</span>;\n  }\n  uVar15 = uVar14 | uVar3 & amp;\n  Number;\n  uVar4 = <span class=\"supfact\">param_3</span>;\n  if ((byte)(<span class=\"supfact\">param_3</span> & gt; &gt; Number) & lt;\n      (byte)(<span class=\"supfact\">param_2</span> & gt; &gt; Number)) {\n    uVar4 = <span class=\"supfact\">param_2</span>;\n  }\n  uVar16 = uVar15 | uVar4 & amp;\n  Number;\n  if ((byte)(<span class=\"supfact\">param_3</span> & gt; &gt; Number) & lt;\n      (byte)(<span class=\"supfact\">param_2</span> & gt; &gt; Number)) {\n    <span class=\"supfact\">param_3</span> = <span class=\"supfact\">param_2</span>;\n  }\n  <span class=\"supfact\">uVar13</span> = <span class=\"supfact\">param_3</span> & amp;\n  Number | uVar16;\n  if ((uVar1 & amp; Number) == Number) {\n    uVar5 = Number;\n  } else {\n    uVar5 = Number;\n  }\n  if ((uVar6 & amp; Number) == Number) {\n    uVar6 = Number;\n  } else {\n    uVar6 = Number;\n  }\n  if ((uVar7 & amp; Number) == Number) {\n    uVar7 = Number;\n  } else {\n    uVar7 = Number;\n  }\n  if (uVar8 & gt; &gt; Number == Number) {\n    uVar8 = Number;\n  } else {\n    uVar8 = Number;\n  }\n  if ((uVar2 & amp; Number) == Number) {\n    uVar9 = Number;\n  } else {\n    uVar9 = Number;\n  }\n  if ((uVar3 & amp; Number) == Number) {\n    uVar10 = Number;\n  } else {\n    uVar10 = Number;\n  }\n  if ((uVar4 & amp; Number) == Number) {\n    uVar11 = Number;\n  } else {\n    uVar11 = Number;\n  }\n  if (<span class=\"supfact\">param_3</span> & gt; &gt; Number == Number) {\n    uVar12 = Number;\n  } else {\n    uVar12 = Number;\n  }\n  *(uint *)(<span class=\"supfact\">param_1</span> + Number) =\n      uVar12 | (uint)(<span class=\"supfact\">uVar13</span> & gt; &gt; Number) & amp;\n  Number | uVar5 | (uint)(uVar14 & gt; &gt; Number) & amp;\n  Number | uVar6 | (uint)(<span class=\"supfact\">uVar13</span> & gt; &gt; Number) & amp;\n  Number | uVar7 | (uint)(uVar15 & gt; &gt; Number) & amp;\n  Number | uVar8 | (uint)(<span class=\"supfact\">uVar13</span> & gt; &gt; Number) & amp;\n  Number | uVar9 | (uint)(uVar16 & gt; &gt; Number) & amp;\n  Number | uVar10 | (uint)(<span class=\"supfact\">uVar13</span> & gt; &gt; Number) & amp;\n  Number | uVar11 | (uint)(<span class=\"supfact\">uVar13</span> & gt; &gt; Number) & amp;\n  Number;\n  return <span class=\"supfact\">uVar13</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "CPUARMState * *", "pred_name": "env", "ref_name": "env", "ref_type": "CPUARMState * *"}, {"name": "param_2", "type": "uint64_t", "pred_name": "a", "ref_name": "a", "ref_type": "uint64_t"}, {"name": "param_3", "type": "uint64_t", "pred_name": "b", "ref_name": "b", "ref_type": "uint64_t"}, {"name": "uVar13", "type": "ulong", "pred_name": "uVar14", "ref_name": "uVar13", "ref_type": "ulong"}], "body_in_train": false}, {"repo_owner": "undelimited", "repo_name": "ffmpeg-ha", "path": "undelimited/ffmpeg-ha/0a3733242b9c8e6a2ad19a5b2ef7ea86bae438a56035e2074d49eddece439bca", "path_in_repo": "undelimited/ffmpeg-ha//libavcodec/pnmenc.o", "objdump": "", "code_s": "undefined[Number] FUN_00100000(long <span class=\"supfact\">param_1</span>,\n                               uint <span class=\"supfact\">param_2</span>,\n                               long <span class=\"supfact\">param_3</span>,\n                               long <span class=\"supfact\">param_4</span>) {\n  ulong <span class=\"supfact\">uVar1</span>;\n  long lVar2;\n  ulong uVar3;\n  undefined8 *<span class=\"supfact\">puVar4</span>;\n  undefined8 *puVar5;\n  undefined auVar6[Number];\n  undefined8 *<span class=\"supfact\">local_50</span>;\n  undefined8 *<span class=\"supfact\">local_48</span>;\n  uVar3 = (ulong)(*(int *)(<span class=\"supfact\">param_1</span> + Number) + Number);\n  if ((int)<span class=\"supfact\">param_2</span> & lt; Number) {\n    <span class=\"supfact\">uVar1</span> = (ulong)<span class=\"supfact\">param_2</span>;\n  } else {\n    <span class=\"supfact\">puVar4</span> = (undefined8 *)Number;\n    puVar5 = <span class=\"supfact\">local_50</span>;\n    for (lVar2 = Number; lVar2 != Number; lVar2 = lVar2 + -Number) {\n      *puVar5 = *<span class=\"supfact\">puVar4</span>;\n      <span class=\"supfact\">puVar4</span> = <span class=\"supfact\">puVar4</span> + Number;\n      puVar5 = puVar5 + Number;\n    }\n    *(undefined4 *)((long)<span class=\"supfact\">local_50</span> + Number) = Number;\n    *(undefined4 *)(<span class=\"supfact\">local_50</span> + Number) = Number;\n    *<span class=\"supfact\">local_48</span> =\n        *(undefined8 *)(<span class=\"supfact\">param_4</span> + Number);\n    <span class=\"supfact\">local_48</span>[Number] = *<span class=\"supfact\">local_48</span>;\n    uVar3 = *(long *)(<span class=\"supfact\">param_4</span> + Number) +\n            (long)*(int *)(<span class=\"supfact\">param_4</span> + Number);\n    <span class=\"supfact\">local_48</span>[Number] = uVar3;\n    if (*(uint *)(<span class=\"supfact\">param_3</span> + Number) & lt; Number) {\n      auVar6 =\n          (**(code **)((ulong) * (uint *)(<span class=\"supfact\">param_3</span> + Number) *\n                       Number))();\n      return auVar6;\n    }\n    <span class=\"supfact\">uVar1</span> = Number;\n  }\n  auVar6._8_8_ = uVar3;\n  auVar6._0_8_ = <span class=\"supfact\">uVar1</span>;\n  return auVar6;\n}", "code_t": "", "var": [{"name": "param_1", "type": "FILE * *", "pred_name": "f", "ref_name": "avctx", "ref_type": "AVCodecContext * *"}, {"name": "param_2", "type": "int", "pred_name": "argc", "ref_name": "", "ref_type": "disappear"}, {"name": "param_3", "type": "char * * *", "pred_name": "argv", "ref_name": "pict", "ref_type": "AVFrame * *"}, {"name": "param_4", "type": "char * *", "pred_name": "argument", "ref_name": "got_packet", "ref_type": "int * *"}, {"name": "uVar1", "type": "char * *", "pred_name": "pcVar2", "ref_name": "sVar5", "ref_type": "size_t"}, {"name": "puVar4", "type": "disappear", "pred_name": "", "ref_name": "pkt", "ref_type": "AVPacket * *"}, {"name": "local_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_48", "type": "char * *", "pred_name": "__unk__", "ref_name": "h", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "paramesh014", "repo_name": "genode_bionic_first_commit", "path": "paramesh014/genode_bionic_first_commit/1a70a1255d65253bbcae6809690b523224d08b689e8930f10112801f3872c4c0", "path_in_repo": "paramesh014/genode_bionic_first_commit/contrib/mesa-abe06d02df59ba0624e97c92a91ab2d9806d4889/src/lib/mesa/src/gallium/auxiliary/cso_cache/cso_context.o", "objdump": "", "code_s": "undefined8 FUN_00101cb9(long *<span class=\"supfact\">param_1</span>,\n                        long <span class=\"supfact\">param_2</span>) {\n  if (<span class=\"supfact\">param_2</span> != <span class=\"supfact\">param_1</span>[Number]) {\n    <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">param_2</span>;\n    (**(code **)(*<span class=\"supfact\">param_1</span> + Number))(*<span class=\"supfact\">param_1</span>,\n                                                     <span class=\"supfact\">param_2</span>);\n  }\n  return Number;\n}", "code_t": "", "var": [{"name": "param_1", "type": "sidl_InvViolation", "pred_name": "self", "ref_name": "ctx", "ref_type": "cso_context * *"}, {"name": "param_2", "type": "sidl_BaseInterface * *", "pred_name": "_ex", "ref_name": "handle", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "cinelerra-gg", "repo_name": "cinelerra-cv-akirad", "path": "cinelerra-gg/cinelerra-cv-akirad/b93c39592e4b586cff1a85a58d5898c42c51f1059bae5419999759ec25f1a085", "path_in_repo": "cinelerra-gg/cinelerra-cv-akirad/quicktime/ffmpeg/libavcodec/h264qpel.o", "objdump": "", "code_s": "void FUN_0010abe3(long <span class=\"supfact\">param_1</span>, long <span class=\"supfact\">param_2</span>,\n                  long <span class=\"supfact\">param_3</span>,\n                  undefined4 <span class=\"supfact\">param_4</span>,\n                  undefined4 <span class=\"supfact\">param_5</span>,\n                  undefined4 <span class=\"supfact\">param_6</span>,\n                  undefined4 <span class=\"supfact\">param_7</span>) {\n  FUN_0010a9a4(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n               <span class=\"supfact\">param_3</span>, <span class=\"supfact\">param_4</span>,\n               <span class=\"supfact\">param_5</span>, <span class=\"supfact\">param_6</span>,\n               <span class=\"supfact\">param_7</span>);\n  FUN_0010a9a4(<span class=\"supfact\">param_1</span> + Number,\n               <span class=\"supfact\">param_2</span> + Number,\n               <span class=\"supfact\">param_3</span> + Number, <span class=\"supfact\">param_4</span>,\n               <span class=\"supfact\">param_5</span>, <span class=\"supfact\">param_6</span>,\n               <span class=\"supfact\">param_7</span>);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "uint8_t * *", "pred_name": "dst", "ref_name": "dst", "ref_type": "uint8_t * *"}, {"name": "param_2", "type": "uint8_t * *", "pred_name": "src1", "ref_name": "src1", "ref_type": "uint8_t * *"}, {"name": "param_3", "type": "uint8_t * *", "pred_name": "src2", "ref_name": "src2", "ref_type": "uint8_t * *"}, {"name": "param_4", "type": "int", "pred_name": "dst_stride", "ref_name": "dst_stride", "ref_type": "int"}, {"name": "param_5", "type": "int", "pred_name": "src_stride1", "ref_name": "src_stride1", "ref_type": "int"}, {"name": "param_6", "type": "int", "pred_name": "src_stride2", "ref_name": "src_stride2", "ref_type": "int"}, {"name": "param_7", "type": "int", "pred_name": "h", "ref_name": "h", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "pauldmccarthy", "repo_name": "ccnet", "path": "pauldmccarthy/ccnet/f03b04a5dcdeda308f3ce688d2d70d0a07b02c9ebc65594e202c631949f11a84", "path_in_repo": "pauldmccarthy/ccnet//bin/ctrim", "objdump": "", "code_s": "void FUN_004194c2(long <span class=\"supfact\">param_1</span>) {\n  if ((<span class=\"supfact\">param_1</span> != Number) & amp; &amp;\n      (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number)) {\n    qsort(*(void **)(<span class=\"supfact\">param_1</span> + Number),\n          (ulong) * (uint *)(<span class=\"supfact\">param_1</span> + Number),\n          (ulong) * (uint *)(<span class=\"supfact\">param_1</span> + Number),\n          *(__compar_fn_t *)(<span class=\"supfact\">param_1</span> + Number));\n  }\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "link * *", "pred_name": "link", "ref_name": "array", "ref_type": "array_t * *"}], "body_in_train": false}, {"repo_owner": "ambush276", "repo_name": "rifle", "path": "ambush276/rifle/bde041b042d0ab702cef144ebc2f233433544c616901d688f5e00195c0e3fd7a", "path_in_repo": "ambush276/rifle/pj/pjnath/build/output/pjnath-x86_64-unknown-linux-gnu/stun_session.o", "objdump": "", "code_s": "long FUN_001001fa(long <span class=\"supfact\">param_1</span>, long <span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = *(long *)(<span class=\"supfact\">param_1</span> + Number);\n  while (true) {\n    if (<span class=\"supfact\">local_10</span> == <span class=\"supfact\">param_1</span> + Number) {\n      return Number;\n    }\n    if ((*(int *)(<span class=\"supfact\">local_10</span> + Number) ==\n         *(int *)(<span class=\"supfact\">param_2</span> + Number)) &\n            amp;\n        &amp; (<span class=\"supfact\">iVar1</span> =\n                   FUN_001000c5(<span class=\"supfact\">local_10</span> + Number,\n                                <span class=\"supfact\">param_2</span> + Number, Number),\n               <span class=\"supfact\">iVar1</span> == Number))\n      break;\n    <span class=\"supfact\">local_10</span> = *(long *)(<span class=\"supfact\">local_10</span> + Number);\n  }\n  return <span class=\"supfact\">local_10</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "pj_stun_session * *", "pred_name": "sess", "ref_name": "sess", "ref_type": "pj_stun_session * *"}, {"name": "param_2", "type": "pj_stun_msg * *", "pred_name": "msg", "ref_name": "msg", "ref_type": "pj_stun_msg * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "local_10", "type": "pj_stun_tx_data * *", "pred_name": "tdata", "ref_name": "tdata", "ref_type": "pj_stun_tx_data * *"}], "body_in_train": false}, {"repo_owner": "imammedo", "repo_name": "qemu", "path": "imammedo/qemu/9a6ab23f952d87b34cab90cebf044f5c7da0b9276a4b17c9e0fa81b5b5781681", "path_in_repo": "imammedo/qemu//hw/usb/host-libusb.o", "objdump": "", "code_s": "void FUN_001004f4(undefined4 <span class=\"supfact\">param_1</span>,\n                  undefined4 <span class=\"supfact\">param_2</span>) {\n  FUN_00100440(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "int", "pred_name": "src", "ref_name": "bus", "ref_type": "int"}, {"name": "param_2", "type": "int", "pred_name": "dest", "ref_name": "addr", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "amery", "repo_name": "clip-itk", "path": "amery/clip-itk/77c2410a11974ba206697b445551d8f420163786acf05d0d297b956e4aa18a76", "path_in_repo": "amery/clip-itk/cliplibs/clip-gd/gd/gd2copypal", "objdump": "", "code_s": "long *FUN_004057b2(undefined8 <span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  long <span class=\"supfact\">local_88</span>;\n  long <span class=\"supfact\">local_80</span>;\n  int <span class=\"supfact\">local_78</span>;\n  undefined <span class=\"supfact\">local_74</span>[Number];\n  int <span class=\"supfact\">local_70</span>;\n  int <span class=\"supfact\">local_6c</span>;\n  int <span class=\"supfact\">local_68</span>;\n  undefined <span class=\"supfact\">local_64</span>[Number];\n  undefined <span class=\"supfact\">local_60</span>[Number];\n  int <span class=\"supfact\">local_5c</span>;\n  int <span class=\"supfact\">local_58</span>;\n  int <span class=\"supfact\">local_54</span>;\n  long *<span class=\"supfact\">local_50</span>;\n  undefined8 <span class=\"supfact\">local_48</span>;\n  int <span class=\"supfact\">local_40</span>;\n  int <span class=\"supfact\">local_3c</span>;\n  int <span class=\"supfact\">local_38</span>;\n  int <span class=\"supfact\">local_34</span>;\n  long <span class=\"supfact\">local_30</span>;\n  int <span class=\"supfact\">local_28</span>;\n  int <span class=\"supfact\">local_24</span>;\n  int <span class=\"supfact\">local_20</span>;\n  int <span class=\"supfact\">local_1c</span>;\n  int <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_14</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_80</span> = Number;\n  <span class=\"supfact\">local_30</span> = Number;\n  <span class=\"supfact\">local_34</span> = Number;\n  <span class=\"supfact\">local_38</span> = Number;\n  <span class=\"supfact\">local_3c</span> = Number;\n  <span class=\"supfact\">local_48</span> = Number;\n  <span class=\"supfact\">local_50</span> = (long *)FUN_0040561f(\n      <span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_60</span>,\n      <span class=\"supfact\">local_64</span>, &amp;\n      <span class=\"supfact\">local_70</span>, <span class=\"supfact\">local_74</span>, &amp;\n      <span class=\"supfact\">local_78</span>, &amp; <span class=\"supfact\">local_68</span>, &amp;\n      <span class=\"supfact\">local_6c</span>, &amp; <span class=\"supfact\">local_80</span>);\n  if (<span class=\"supfact\">local_50</span> == (long *)Number) {\n    <span class=\"supfact\">local_50</span> = (long *)Number;\n  } else {\n    <span class=\"supfact\">local_54</span> =\n        <span class=\"supfact\">local_6c</span> * <span class=\"supfact\">local_68</span>;\n    if (<span class=\"supfact\">local_78</span> == Number) {\n      <span class=\"supfact\">local_40</span> = Number;\n      for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n           <span class=\"supfact\">local_54</span>;\n           <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n        if (<span class=\"supfact\">local_40</span> & lt;\n            *(int *)(<span class=\"supfact\">local_80</span> +\n                     (long)<span class=\"supfact\">local_c</span> * Number + Number)) {\n          <span class=\"supfact\">local_40</span> =\n              *(int *)(<span class=\"supfact\">local_80</span> +\n                       (long)<span class=\"supfact\">local_c</span> * Number + Number);\n        }\n      }\n      <span class=\"supfact\">local_40</span> = <span class=\"supfact\">local_40</span> + Number;\n      <span class=\"supfact\">local_38</span> =\n          <span class=\"supfact\">local_70</span> * <span class=\"supfact\">local_70</span>;\n      <span class=\"supfact\">local_30</span> =\n          FUN_00407530((long)<span class=\"supfact\">local_38</span>, Number);\n      <span class=\"supfact\">local_48</span> =\n          FUN_00407530((long)<span class=\"supfact\">local_40</span>, Number);\n    }\n    for (<span class=\"supfact\">local_14</span> = Number; <span class=\"supfact\">local_14</span> & lt;\n         <span class=\"supfact\">local_6c</span>;\n         <span class=\"supfact\">local_14</span> = <span class=\"supfact\">local_14</span> + Number) {\n      for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> & lt;\n           <span class=\"supfact\">local_68</span>;\n           <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n        <span class=\"supfact\">local_58</span> =\n            <span class=\"supfact\">local_70</span> * <span class=\"supfact\">local_14</span>;\n        <span class=\"supfact\">local_20</span> =\n            <span class=\"supfact\">local_58</span> + <span class=\"supfact\">local_70</span>;\n        if (*(int *)((long)<span class=\"supfact\">local_50</span> + Number) & lt;\n            <span class=\"supfact\">local_20</span>) {\n          <span class=\"supfact\">local_20</span> =\n              *(int *)((long)<span class=\"supfact\">local_50</span> + Number);\n        }\n        if (<span class=\"supfact\">local_78</span> == Number) {\n          <span class=\"supfact\">local_88</span> = (long)<span class=\"supfact\">local_38</span>;\n          <span class=\"supfact\">iVar1</span> = FUN_004056d7(\n              *(undefined4 *)(<span class=\"supfact\">local_80</span> +\n                              (long)<span class=\"supfact\">local_34</span> * Number),\n              <span class=\"supfact\">local_48</span>,\n              *(undefined4 *)(<span class=\"supfact\">local_80</span> +\n                              (long)<span class=\"supfact\">local_34</span> * Number + Number),\n              <span class=\"supfact\">local_30</span>, &amp;\n              <span class=\"supfact\">local_88</span>, <span class=\"supfact\">param_1</span>);\n          if (<span class=\"supfact\">iVar1</span> == Number) {\n            FUN_00401689(<span class=\"supfact\">local_50</span>);\n            FUN_00407594(<span class=\"supfact\">local_30</span>);\n            FUN_00407594(<span class=\"supfact\">local_48</span>);\n            FUN_00407594(<span class=\"supfact\">local_80</span>);\n            return (long *)Number;\n          }\n          <span class=\"supfact\">local_3c</span> = Number;\n        }\n        for (<span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_58</span>;\n             <span class=\"supfact\">local_1c</span> & lt; <span class=\"supfact\">local_20</span>;\n             <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number) {\n          <span class=\"supfact\">local_5c</span> =\n              <span class=\"supfact\">local_70</span> * <span class=\"supfact\">local_10</span>;\n          <span class=\"supfact\">local_24</span> =\n              <span class=\"supfact\">local_5c</span> + <span class=\"supfact\">local_70</span>;\n          if (*(int *)(<span class=\"supfact\">local_50</span> + Number) & lt;\n              <span class=\"supfact\">local_24</span>) {\n            <span class=\"supfact\">local_24</span> =\n                *(int *)(<span class=\"supfact\">local_50</span> + Number);\n          }\n          <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_5c</span>;\n          if (<span class=\"supfact\">local_78</span> == Number) {\n            for (; <span class=\"supfact\">local_18</span> & lt; <span class=\"supfact\">local_24</span>;\n                 <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> + Number) {\n              <span class=\"supfact\">local_28</span> = FUN_00406841(<span class=\"supfact\">param_1</span>);\n              if (<span class=\"supfact\">local_28</span> == -Number) {\n                <span class=\"supfact\">local_28</span> = Number;\n              }\n              *(char *)((long)<span class=\"supfact\">local_18</span> +\n                        *(long *)(*<span class=\"supfact\">local_50</span> +\n                                  (long)<span class=\"supfact\">local_1c</span> * Number)) =\n                  (char)<span class=\"supfact\">local_28</span>;\n            }\n          } else {\n            for (; <span class=\"supfact\">local_18</span> & lt; <span class=\"supfact\">local_24</span>;\n                 <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> + Number) {\n              *(undefined *)((long)<span class=\"supfact\">local_18</span> +\n                             *(long *)(*<span class=\"supfact\">local_50</span> +\n                                       (long)<span class=\"supfact\">local_1c</span> *\n                                           Number)) =\n                  *(undefined *)(<span class=\"supfact\">local_30</span> +\n                                 <span class=\"supfact\">local_3c</span>);\n              <span class=\"supfact\">local_3c</span> = <span class=\"supfact\">local_3c</span> + Number;\n            }\n          }\n        }\n        <span class=\"supfact\">local_34</span> = <span class=\"supfact\">local_34</span> + Number;\n      }\n    }\n    FUN_00407594(<span class=\"supfact\">local_30</span>);\n    FUN_00407594(<span class=\"supfact\">local_48</span>);\n    FUN_00407594(<span class=\"supfact\">local_80</span>);\n  }\n  return <span class=\"supfact\">local_50</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "urlinfo * *", "pred_name": "u", "ref_name": "in", "ref_type": "gdIOCtxPtr"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "local_88", "type": "char * *", "pred_name": "__unk__", "ref_name": "chunkLen", "ref_type": "uLongf"}, {"name": "local_80", "type": "char * *", "pred_name": "__unk__", "ref_name": "chunkIdx", "ref_type": "t_chunk_info * *"}, {"name": "local_78", "type": "uerr_t", "pred_name": "err", "ref_name": "fmt", "ref_type": "int"}, {"name": "local_74", "type": "int", "pred_name": "__unk__", "ref_name": "vers", "ref_type": "int"}, {"name": "local_70", "type": "int", "pred_name": "__unk__", "ref_name": "cs", "ref_type": "int"}, {"name": "local_6c", "type": "int", "pred_name": "__unk__", "ref_name": "ncy", "ref_type": "int"}, {"name": "local_68", "type": "int", "pred_name": "__unk__", "ref_name": "ncx", "ref_type": "int"}, {"name": "local_64", "type": "int", "pred_name": "__unk__", "ref_name": "sy", "ref_type": "int"}, {"name": "local_60", "type": "int", "pred_name": "__unk__", "ref_name": "sx", "ref_type": "int"}, {"name": "local_5c", "type": "int", "pred_name": "__unk__", "ref_name": "xlo", "ref_type": "int"}, {"name": "local_58", "type": "int", "pred_name": "__unk__", "ref_name": "ylo", "ref_type": "int"}, {"name": "local_54", "type": "int", "pred_name": "__unk__", "ref_name": "nc", "ref_type": "int"}, {"name": "local_50", "type": "char * *", "pred_name": "__unk__", "ref_name": "im", "ref_type": "gdImagePtr"}, {"name": "local_48", "type": "char * *", "pred_name": "__unk__", "ref_name": "compBuf", "ref_type": "char * *"}, {"name": "local_40", "type": "int", "pred_name": "__unk__", "ref_name": "compMax", "ref_type": "int"}, {"name": "local_3c", "type": "int", "pred_name": "__unk__", "ref_name": "chunkPos", "ref_type": "int"}, {"name": "local_38", "type": "int", "pred_name": "__unk__", "ref_name": "chunkMax", "ref_type": "int"}, {"name": "local_34", "type": "int", "pred_name": "__unk__", "ref_name": "chunkNum", "ref_type": "int"}, {"name": "local_30", "type": "char * *", "pred_name": "__unk__", "ref_name": "chunkBuf", "ref_type": "char * *"}, {"name": "local_28", "type": "int", "pred_name": "__unk__", "ref_name": "ch", "ref_type": "int"}, {"name": "local_24", "type": "int", "pred_name": "__unk__", "ref_name": "xhi", "ref_type": "int"}, {"name": "local_20", "type": "int", "pred_name": "__unk__", "ref_name": "yhi", "ref_type": "int"}, {"name": "local_1c", "type": "int", "pred_name": "__unk__", "ref_name": "y", "ref_type": "int"}, {"name": "local_18", "type": "int", "pred_name": "__unk__", "ref_name": "x", "ref_type": "int"}, {"name": "local_14", "type": "int", "pred_name": "__unk__", "ref_name": "cy", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "__unk__", "ref_name": "cx", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "__unk__", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "efsofian", "repo_name": "libft", "path": "efsofian/libft/20a1de5329b215b272f0b9e749c28ac90efa94f5af4675b276b9f75deb591a21", "path_in_repo": "efsofian/libft//ft_memchr.o", "objdump": "", "code_s": "long FUN_00100000(long <span class=\"supfact\">param_1</span>, char <span class=\"supfact\">param_2</span>,\n                  ulong <span class=\"supfact\">param_3</span>) {\n  uint <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_c</span> = Number;\n  while (true) {\n    if (<span class=\"supfact\">param_3</span> &lt; = <span class=\"supfact\">local_c</span>) {\n      return Number;\n    }\n    if (*(char *)(<span class=\"supfact\">param_1</span> + (ulong)<span class=\"supfact\">local_c</span>) ==\n        <span class=\"supfact\">param_2</span>)\n      break;\n    <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number;\n  }\n  return <span class=\"supfact\">param_1</span> + (ulong)<span class=\"supfact\">local_c</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "void * *", "pred_name": "s", "ref_name": "s", "ref_type": "void * *"}, {"name": "param_2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "param_3", "type": "size_t", "pred_name": "n", "ref_name": "n", "ref_type": "size_t"}, {"name": "local_c", "type": "uint", "pred_name": "i", "ref_name": "i", "ref_type": "uint"}], "body_in_train": true}, {"repo_owner": "OSLL", "repo_name": "qemu-xtensa", "path": "OSLL/qemu-xtensa/1ced90332e5bd050644ee711df44bc02d4f97a4e9bd6d89361730b3753215a2c", "path_in_repo": "OSLL/qemu-xtensa//hw/usb/hcd-xhci.o", "objdump": "", "code_s": "undefined[Number] FUN_001053fc(long <span class=\"supfact\">param_1</span>) {\n  undefined auVar1[Number];\n  auVar1._0_8_ = <span class=\"supfact\">param_1</span> + Number;\n  auVar1._8_8_ = <span class=\"supfact\">param_1</span> + Number;\n  return auVar1;\n}", "code_t": "", "var": [{"name": "param_1", "type": "basic_wrap_stringstream&lt;char&gt; * *", "pred_name": "this", "ref_name": "xfer", "ref_type": "XHCITransfer * *"}], "body_in_train": false}, {"repo_owner": "sergey-senozhatsky", "repo_name": "linux-next-ss", "path": "sergey-senozhatsky/linux-next-ss/b0e16c83acc46ac3711e32d1fdd9f78fd4cfcea148553998c2c957c6ae2deb81", "path_in_repo": "sergey-senozhatsky/linux-next-ss/tools/testing/selftests/bpf/test_lirc_mode2_user", "objdump": "", "code_s": "undefined8 FUN_0041db67(long <span class=\"supfact\">param_1</span>) {\n  return *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n}", "code_t": "", "var": [{"name": "param_1", "type": "CwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;double&gt;,_const_Eigen::CoeffBasedProduct&lt;const_Eigen::Matrix&lt;double,_3,_3,_0,_3,_3&gt;&amp;,_const_Eigen::Matrix&lt;double,_3,_1,_0,_3,_1&gt;&amp;,_6&gt;,_const_Eigen::Matrix&lt;double,_3,_1,_0,_3,_1&gt;_&gt; * *", "pred_name": "this", "ref_name": "map", "ref_type": "hashmap * *"}], "body_in_train": false}, {"repo_owner": "ukidaveyash15", "repo_name": "m2sff", "path": "ukidaveyash15/m2sff/3abdec0b9bb5996d68e5d7223b057c5174420cad8177dd3f5c7078d256b625b8", "path_in_repo": "ukidaveyash15/m2sff/multi2sim-4.2/src/arch/x86/timing/sched.o", "objdump": "", "code_s": "void FUN_00100a3e(long <span class=\"supfact\">param_1</span>, long <span class=\"supfact\">param_2</span>,\n                  undefined8 param_3, undefined8 <span class=\"supfact\">param_4</span>) {\n  long lVar1;\n  long *plVar2;\n  undefined *puVar3;\n  undefined8 *puVar4;\n  undefined *puVar5;\n  undefined8 uVar6;\n  undefined8 <span class=\"supfact\">auStack_80</span>[Number];\n  undefined8 <span class=\"supfact\">uStack_50</span>;\n  long <span class=\"supfact\">local_48</span>;\n  long <span class=\"supfact\">local_40</span>;\n  long <span class=\"supfact\">local_30</span>;\n  long <span class=\"supfact\">local_28</span>;\n  int <span class=\"supfact\">local_20</span>;\n  int <span class=\"supfact\">local_1c</span>;\n  plVar2 = &amp;\n  <span class=\"supfact\">local_48</span>;\n  <span class=\"supfact\">local_1c</span> = *(int *)(<span class=\"supfact\">param_2</span> + Number);\n  <span class=\"supfact\">local_20</span> = *(int *)(<span class=\"supfact\">param_2</span> + Number);\n  <span class=\"supfact\">local_28</span> =\n      *(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                (long)<span class=\"supfact\">local_1c</span> * Number);\n  lVar1 = (long)<span class=\"supfact\">local_20</span> * Number;\n  <span class=\"supfact\">local_30</span> =\n      *(long *)(*(long *)(<span class=\"supfact\">local_28</span> + Number) + lVar1);\n  if (*(long *)(<span class=\"supfact\">local_30</span> + Number) != Number) {\n    <span class=\"supfact\">param_4</span> = Number;\n    lVar1 = Number;\n    plVar2 = &amp;\n    <span class=\"supfact\">uStack_50</span>;\n    <span class=\"supfact\">uStack_50</span> = Number;\n  }\n  puVar3 = (undefined *)((long)plVar2 + -Number);\n  *(undefined8 *)((long)plVar2 + -Number) = Number;\n  if ((int)<span class=\"supfact\">param_2</span> == Number) {\n    <span class=\"supfact\">param_4</span> = Number;\n    lVar1 = Number;\n    puVar3 = (undefined *)((long)plVar2 + -Number);\n    *(undefined8 *)((long)plVar2 + -Number) = Number;\n  }\n  uVar6 = Number;\n  puVar5 = puVar3 + -Number;\n  *(undefined8 *)(puVar3 + -Number) = Number;\n  if ((int)<span class=\"supfact\">param_2</span> != Number) {\n    <span class=\"supfact\">param_4</span> = Number;\n    lVar1 = Number;\n    uVar6 = Number;\n    puVar5 = puVar3 + -Number;\n    *(undefined8 *)(puVar3 + -Number) = Number;\n  }\n  if (*(int *)(<span class=\"supfact\">param_2</span> + Number) != Number) {\n    <span class=\"supfact\">param_4</span> = Number;\n    lVar1 = Number;\n    uVar6 = Number;\n    puVar4 = (undefined8 *)(puVar5 + -Number);\n    puVar5 = puVar5 + -Number;\n    *puVar4 = Number;\n  }\n  *(undefined **)(puVar5 + -Number) = &amp;\n  UNK_00100b5b;\n  <span class=\"supfact\">local_48</span> = <span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">local_40</span> = <span class=\"supfact\">param_1</span>;\n  FUN_0010001f(<span class=\"supfact\">param_1</span>, uVar6, lVar1, <span class=\"supfact\">param_4</span>);\n}", "code_t": "", "var": [{"name": "param_1", "type": "pj_timer_heap_t * *", "pred_name": "ht", "ref_name": "self", "ref_type": "X86Cpu * *"}, {"name": "param_2", "type": "pj_timer_entry * *", "pred_name": "entry", "ref_name": "ctx", "ref_type": "X86Context * *"}, {"name": "param_4", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_80", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_48", "type": "pj_timer_entry * *", "pred_name": "entry-local", "ref_name": "ctx-local", "ref_type": "X86Context * *"}, {"name": "local_40", "type": "pj_timer_heap_t * *", "pred_name": "ht-local", "ref_name": "self-local", "ref_type": "X86Cpu * *"}, {"name": "local_30", "type": "pj_timer_entry * *", "pred_name": "entry", "ref_name": "thread", "ref_type": "X86Thread * *"}, {"name": "local_28", "type": "pj_time_val * *", "pred_name": "now", "ref_name": "core", "ref_type": "X86Core * *"}, {"name": "local_20", "type": "int", "pred_name": "ret", "ref_name": "thread_index", "ref_type": "int"}, {"name": "local_1c", "type": "int", "pred_name": "i", "ref_name": "core_index", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "bji", "repo_name": "libmame", "path": "bji/libmame/f25ac49c1865c7a9e968d8e5d62ee34fb623436b45774e51c94883671bddf952", "path_in_repo": "bji/libmame//obj/sdl64/mame/video/sspeedr.o", "objdump": "", "code_s": "void FUN_00100000(long <span class=\"supfact\">param_1</span>, undefined8 param_2,\n                  undefined8 param_3, byte <span class=\"supfact\">param_4</span>) {\n  *(uint *)(<span class=\"supfact\">param_1</span> + Number) =\n      *(uint *)(<span class=\"supfact\">param_1</span> + Number) & amp;\n  Number | (uint)<span class=\"supfact\">param_4</span>;\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "thunderx_state * *", "pred_name": "this", "ref_name": "this", "ref_type": "sspeedr_state * *"}, {"name": "param_4", "type": "UINT8", "pred_name": "data", "ref_name": "data", "ref_type": "UINT8"}], "body_in_train": false}, {"repo_owner": "HorseMa", "repo_name": "InternetOfThings", "path": "HorseMa/InternetOfThings/fc2138b0b17bd5b4f335ca4ebe2ca1543c1710ef65626ebc39c1961108bb5827", "path_in_repo": "HorseMa/InternetOfThings/examples/trickle-library/obj_native/sensors.o", "objdump": "", "code_s": "undefined[Number] FUN_001000d5(int <span class=\"supfact\">param_1</span>, undefined8 param_2,\n                               ulong <span class=\"supfact\">param_3</span>) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  undefined8 *puVar2;\n  undefined *puVar3;\n  undefined auVar4[Number];\n  undefined8 <span class=\"supfact\">uStack_38</span>;\n  undefined <span class=\"supfact\">auStack_30</span>[Number];\n  int <span class=\"supfact\">local_c</span>;\n  puVar3 = <span class=\"supfact\">auStack_30</span>;\n  <span class=\"supfact\">local_c</span> = Number;\n  do {\n    if ((int)(uint)bRam000000000010013b &lt; = <span class=\"supfact\">local_c</span>) {\n      <span class=\"supfact\">uVar1</span> = Number;\n    LAB_00100148:\n      auVar4._8_8_ = <span class=\"supfact\">param_3</span>;\n      auVar4._0_8_ = <span class=\"supfact\">uVar1</span>;\n      return auVar4;\n    }\n    <span class=\"supfact\">param_3</span> = (ulong)(ushort)<span class=\"supfact\">param_1</span>;\n    puVar2 = (undefined8 *)(puVar3 + -Number);\n    puVar3 = puVar3 + -Number;\n    *puVar2 = Number;\n    if (<span class=\"supfact\">param_1</span> == Number) {\n      <span class=\"supfact\">uVar1</span> =\n          *(undefined8 *)((long)<span class=\"supfact\">local_c</span> * Number);\n      goto LAB_00100148;\n    }\n    <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number;\n  } while (true);\n}", "code_t": "", "var": [{"name": "param_1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "param_3", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uVar1", "type": "size_t", "pred_name": "sVar2", "ref_name": "sVar2", "ref_type": "size_t"}, {"name": "uStack_38", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_30", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "ayoubg", "repo_name": "gem5-graphics_v1", "path": "ayoubg/gem5-graphics_v1/80172583681dc7993872749220d5a7b204ac7d4ee93df83751a8419d158a7d3b", "path_in_repo": "ayoubg/gem5-graphics_v1/Mesa-7.11.2_GPGPU-Sim/src/egl/main/egldriver.o", "objdump": "", "code_s": "void FUN_00100a63(void) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  <span class=\"supfact\">uVar1</span> = FUN_001006ee();\n  FUN_00100656(<span class=\"supfact\">uVar1</span>, Number, Number);\n  return;\n}", "code_t": "", "var": [{"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "search_path", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "iGaryGu", "repo_name": "workspace", "path": "iGaryGu/workspace/d500075e4ef4b9bbd58176f6ede613e783f64c63d3e8a1aeb00c3b1667698acd", "path_in_repo": "iGaryGu/workspace/qemu_stm32/hw/usb/core.o", "objdump": "", "code_s": "void FUN_001016bb(long <span class=\"supfact\">param_1</span>) {\n  char <span class=\"supfact\">cVar1</span>;\n  undefined8 *puVar2;\n  undefined *puVar3;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  undefined8 <span class=\"supfact\">auStack_48</span>[Number];\n  undefined8 <span class=\"supfact\">uStack_30</span>;\n  undefined <span class=\"supfact\">auStack_28</span>[Number];\n  long <span class=\"supfact\">local_20</span>;\n  char <span class=\"supfact\">local_11</span>;\n  long <span class=\"supfact\">local_10</span>;\n  puVar2 = (undefined8 *)<span class=\"supfact\">auStack_28</span>;\n  <span class=\"supfact\">local_10</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_11</span> =\n      *(int *)(<span class=\"supfact\">param_1</span> + Number) == Number;\n  <span class=\"supfact\">uStack_30</span> = Number;\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_1</span>;\n  <span class=\"supfact\">cVar1</span> = FUN_00100000(<span class=\"supfact\">param_1</span>);\n  if (<span class=\"supfact\">cVar1</span> == String) {\n    puVar2 = &amp;\n    <span class=\"supfact\">uStack_30</span>;\n  }\n  puVar3 = (undefined *)((long)puVar2 + -Number);\n  *(undefined8 *)((long)puVar2 + -Number) = Number;\n  if (*(long *)(<span class=\"supfact\">local_20</span> + Number) == Number) {\n    *(undefined8 *)(*(long *)(<span class=\"supfact\">local_20</span> + Number) + Number) =\n        *(undefined8 *)(<span class=\"supfact\">local_20</span> + Number);\n  } else {\n    *(undefined8 *)(*(long *)(<span class=\"supfact\">local_20</span> + Number) + Number) =\n        *(undefined8 *)(<span class=\"supfact\">local_20</span> + Number);\n  }\n  **(undefined8 **)(<span class=\"supfact\">local_20</span> + Number) =\n      *(undefined8 *)(<span class=\"supfact\">local_20</span> + Number);\n  if (<span class=\"supfact\">local_11</span> != String) {\n    puVar3 = (undefined *)((long)puVar2 + -Number);\n    *(undefined8 *)((long)puVar2 + -Number) = Number;\n  }\n  if (<span class=\"supfact\">local_10</span> !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    *(undefined8 *)(puVar3 + -Number) = Number;\n  }\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "void * *", "pred_name": "opaque", "ref_name": "p", "ref_type": "USBPacket * *"}, {"name": "cVar1", "type": "_Bool", "pred_name": "_Var2", "ref_name": "_Var3", "ref_type": "_Bool"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "auStack_48", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_30", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_28", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_20", "type": "void * *", "pred_name": "opaque-local", "ref_name": "p-local", "ref_type": "USBPacket * *"}, {"name": "local_11", "type": "_Bool", "pred_name": "is_read", "ref_name": "callback", "ref_type": "_Bool"}, {"name": "local_10", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "heepdog", "repo_name": "u8g2", "path": "heepdog/u8g2/4244105b0f33c7b4fe1917a657bd644f871ddfc81f25f6771734e700787fb737", "path_in_repo": "heepdog/u8g2/include/sys/sdl/selection_list/u8g2_sdl", "objdump": "", "code_s": "char FUN_004239fa(long <span class=\"supfact\">param_1</span>) {\n  byte bVar1;\n  char <span class=\"supfact\">cVar2</span>;\n  <span class=\"supfact\">cVar2</span> = FUN_0042394c(<span class=\"supfact\">param_1</span>);\n  bVar1 = *(byte *)(<span class=\"supfact\">param_1</span> + Number);\n  if (bVar1 == Number) {\n    if (<span class=\"supfact\">cVar2</span> != *(char *)(<span class=\"supfact\">param_1</span> + Number)) {\n      return String;\n    }\n    *(undefined *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n    <span class=\"supfact\">cVar2</span> =\n        FUN_004239b6(*(undefined *)(<span class=\"supfact\">param_1</span> + Number),\n                     *(undefined *)(<span class=\"supfact\">param_1</span> + Number));\n    return <span class=\"supfact\">cVar2</span> + String;\n  }\n  if (bVar1 & lt; Number) {\n    if (bVar1 == Number) {\n      if (<span class=\"supfact\">cVar2</span> !=\n          *(char *)(<span class=\"supfact\">param_1</span> + Number)) {\n        *(undefined *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n        return String;\n      }\n      *(undefined *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n      return String;\n    }\n    if (bVar1 & lt; Number) {\n      if (bVar1 == Number) {\n        if (<span class=\"supfact\">cVar2</span> ==\n            *(char *)(<span class=\"supfact\">param_1</span> + Number)) {\n          return String;\n        }\n        *(undefined *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n        return String;\n      }\n      if (bVar1 == Number) {\n        if (<span class=\"supfact\">cVar2</span> ==\n            *(char *)(<span class=\"supfact\">param_1</span> + Number)) {\n          *(undefined *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n          return String;\n        }\n        *(char *)(<span class=\"supfact\">param_1</span> + Number) = <span class=\"supfact\">cVar2</span>;\n        *(undefined *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n        return String;\n      }\n    }\n  }\n  *(char *)(<span class=\"supfact\">param_1</span> + Number) =\n      *(char *)(<span class=\"supfact\">param_1</span> + Number) + -Number;\n  return String;\n}", "code_t": "", "var": [{"name": "param_1", "type": "u8x8_t * *", "pred_name": "u8x8", "ref_name": "u8x8", "ref_type": "u8x8_t * *"}, {"name": "cVar2", "type": "uint8_t", "pred_name": "uVar2", "ref_name": "uVar2", "ref_type": "uint8_t"}], "body_in_train": false}, {"repo_owner": "dakami", "repo_name": "autoclave", "path": "dakami/autoclave/efb6ded49fe8474764e2d5b87bdbe83ab2ecd6508de228a7105d91ee933ad934", "path_in_repo": "dakami/autoclave/old_but_working_qemu/hw/net/rocker/rocker_of_dpa.o", "objdump": "", "code_s": "undefined8 FUN_0010213e(long <span class=\"supfact\">param_1</span>,\n                        long <span class=\"supfact\">param_2</span>) {\n  undefined8 *puVar1;\n  undefined2 uVar2;\n  ushort uVar3;\n  undefined4 <span class=\"supfact\">uVar4</span>;\n  undefined8 <span class=\"supfact\">uVar5</span>;\n  undefined8 *puVar6;\n  long *plVar7;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  undefined8 <span class=\"supfact\">uStack_60</span>;\n  undefined8 <span class=\"supfact\">uStack_58</span>;\n  undefined8 <span class=\"supfact\">uStack_50</span>;\n  long <span class=\"supfact\">local_48</span>;\n  long <span class=\"supfact\">local_40</span>;\n  char <span class=\"supfact\">local_2d</span>;\n  undefined <span class=\"supfact\">local_2c</span>[Number];\n  undefined4 *<span class=\"supfact\">local_28</span>;\n  undefined4 *<span class=\"supfact\">local_20</span>;\n  uint *<span class=\"supfact\">local_18</span>;\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_28</span> = (undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n  <span class=\"supfact\">local_20</span> = (undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n  <span class=\"supfact\">local_18</span> = (uint *)(<span class=\"supfact\">param_1</span> + Number);\n  <span class=\"supfact\">local_48</span> = <span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">local_40</span> = <span class=\"supfact\">param_1</span>;\n  if ((*(long *)(<span class=\"supfact\">param_2</span> + Number) == Number) ||\n      (*(long *)(<span class=\"supfact\">param_2</span> + Number) == Number)) {\n    <span class=\"supfact\">uStack_50</span> = Number;\n    FUN_001001cd(Number);\n    <span class=\"supfact\">uVar5</span> = Number;\n    plVar7 = &amp;\n    <span class=\"supfact\">local_48</span>;\n    goto LAB_001023a5;\n  }\n  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  <span class=\"supfact\">uStack_50</span> = Number;\n  <span class=\"supfact\">uVar4</span> =\n      FUN_00100457(*(undefined8 *)(<span class=\"supfact\">param_2</span> + Number));\n  *<span class=\"supfact\">local_28</span> = <span class=\"supfact\">uVar4</span>;\n  plVar7 = &amp;\n  <span class=\"supfact\">uStack_50</span>;\n  <span class=\"supfact\">uStack_50</span> = Number;\n  if ((char)*<span class=\"supfact\">local_28</span> != String) {\n    <span class=\"supfact\">uStack_58</span> = Number;\n    FUN_001001cd(Number, *<span class=\"supfact\">local_28</span>);\n    <span class=\"supfact\">uVar5</span> = Number;\n    plVar7 = &amp;\n    <span class=\"supfact\">uStack_50</span>;\n    goto LAB_001023a5;\n  }\n  *<span class=\"supfact\">local_20</span> = Number;\n  <span class=\"supfact\">uStack_58</span> = Number;\n  uVar2 = FUN_001003fc(*(undefined8 *)(<span class=\"supfact\">local_48</span> + Number),\n                       <span class=\"supfact\">local_2c</span>);\n  *(undefined2 *)(<span class=\"supfact\">local_28</span> + Number) = uVar2;\n  if (*(long *)(<span class=\"supfact\">local_48</span> + Number) != Number) {\n    <span class=\"supfact\">uStack_58</span> = Number;\n    uVar2 = FUN_001003fc(*(undefined8 *)(<span class=\"supfact\">local_48</span> + Number));\n    *(undefined2 *)(<span class=\"supfact\">local_20</span> + Number) = uVar2;\n  }\n  <span class=\"supfact\">local_2d</span> =\n      *(short *)(<span class=\"supfact\">local_28</span> + Number) == Number;\n  if (*(long *)(<span class=\"supfact\">local_48</span> + Number) != Number) {\n    <span class=\"supfact\">uStack_58</span> = Number;\n    uVar3 = FUN_00100435(*(undefined8 *)(<span class=\"supfact\">local_48</span> + Number));\n    *<span class=\"supfact\">local_18</span> = (uint)uVar3;\n    if (*<span class=\"supfact\">local_18</span> != Number) {\n      <span class=\"supfact\">uStack_58</span> = Number;\n      FUN_001001cd(Number, *<span class=\"supfact\">local_18</span>);\n      <span class=\"supfact\">uVar5</span> = Number;\n      plVar7 = &amp;\n      <span class=\"supfact\">uStack_50</span>;\n      goto LAB_001023a5;\n    }\n  }\n  puVar1 = &amp;\n  <span class=\"supfact\">uStack_50</span>;\n  if (<span class=\"supfact\">local_2d</span> == String) {\n  LAB_001023a0:\n    plVar7 = puVar1;\n    <span class=\"supfact\">uVar5</span> = Number;\n  } else {\n    if (*(long *)(<span class=\"supfact\">local_48</span> + Number) == Number) {\n      <span class=\"supfact\">uStack_58</span> = Number;\n      FUN_001001cd(Number);\n      <span class=\"supfact\">uVar5</span> = Number;\n      goto LAB_001023a5;\n    }\n    <span class=\"supfact\">uStack_58</span> = Number;\n    uVar2 = FUN_001003fc(*(undefined8 *)(<span class=\"supfact\">local_48</span> + Number));\n    *(undefined2 *)(<span class=\"supfact\">local_18</span> + Number) = uVar2;\n    puVar6 = &amp;\n    <span class=\"supfact\">uStack_58</span>;\n    <span class=\"supfact\">uStack_58</span> = Number;\n    if (*(short *)(<span class=\"supfact\">local_18</span> + Number) != Number) {\n      puVar6 = &amp;\n      <span class=\"supfact\">uStack_60</span>;\n      <span class=\"supfact\">uStack_60</span> = Number;\n      puVar1 = &amp;\n      <span class=\"supfact\">uStack_60</span>;\n      if (*(ushort *)(<span class=\"supfact\">local_18</span> + Number) & lt; Number)\n        goto LAB_001023a0;\n    }\n    uVar2 = *(undefined2 *)(<span class=\"supfact\">local_18</span> + Number);\n    plVar7 = (long *)((long)puVar6 + -Number);\n    *(undefined8 *)((long)puVar6 + -Number) = Number;\n    *(undefined8 *)((long)puVar6 + -Number) = Number;\n    FUN_001001cd(Number, uVar2);\n    <span class=\"supfact\">uVar5</span> = Number;\n  }\nLAB_001023a5:\n  if (<span class=\"supfact\">local_10</span> !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    *(undefined8 *)((long)plVar7 + -Number) = Number;\n  }\n  return <span class=\"supfact\">uVar5</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "OfDpaFlow * *", "pred_name": "flow", "ref_name": "flow", "ref_type": "OfDpaFlow * *"}, {"name": "param_2", "type": "RockerTlv * * *", "pred_name": "flow_tlvs", "ref_name": "flow_tlvs", "ref_type": "RockerTlv * * *"}, {"name": "uVar4", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uVar5", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "uStack_60", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_58", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_48", "type": "RockerTlv * * *", "pred_name": "flow_tlvs-local", "ref_name": "flow_tlvs-local", "ref_type": "RockerTlv * * *"}, {"name": "local_40", "type": "OfDpaFlow * *", "pred_name": "flow-local", "ref_name": "flow-local", "ref_type": "OfDpaFlow * *"}, {"name": "local_2d", "type": "_Bool", "pred_name": "__unk__", "ref_name": "untagged", "ref_type": "_Bool"}, {"name": "local_2c", "type": "uint32_t", "pred_name": "port", "ref_name": "port", "ref_type": "uint32_t"}, {"name": "local_28", "type": "OfDpaFlowKey * *", "pred_name": "mask", "ref_name": "key", "ref_type": "OfDpaFlowKey * *"}, {"name": "local_20", "type": "OfDpaFlowAction * *", "pred_name": "action", "ref_name": "mask", "ref_type": "OfDpaFlowKey * *"}, {"name": "local_18", "type": "struct MACAddr { uint8_t[6] a; }", "pred_name": "__unk__", "ref_name": "action", "ref_type": "OfDpaFlowAction * *"}, {"name": "local_10", "type": "long", "pred_name": "local_10", "ref_name": "local_10", "ref_type": "long"}], "body_in_train": true}, {"repo_owner": "metajack", "repo_name": "daala", "path": "metajack/daala/afbb07cbb555050f78048d840463a4a9eb313d11a8937d27726e9a7dec22675d", "path_in_repo": "metajack/daala/unix/encoder_example", "objdump": "", "code_s": "void FUN_0043cc43(undefined8 <span class=\"supfact\">param_1</span>,\n                  undefined4 <span class=\"supfact\">param_2</span>,\n                  undefined8 <span class=\"supfact\">param_3</span>) {\n  FUN_0042d58b(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n               <span class=\"supfact\">param_3</span>, Number, Number);\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "pj_timer_heap_t * *", "pred_name": "ht", "ref_name": "_dst", "ref_type": "uchar * *"}, {"name": "param_2", "type": "int", "pred_name": "slot", "ref_name": "_dystride", "ref_type": "int"}, {"name": "param_3", "type": "pj_timer_entry * *", "pred_name": "moved_node", "ref_name": "_src", "ref_type": "uchar * * *"}], "body_in_train": false}, {"repo_owner": "garyb9", "repo_name": "QEMU-Fault-Injection", "path": "garyb9/QEMU-Fault-Injection/0ec47edcd3a0123cdbb2d3fe0fedcc9346924394fe2cbe0f79a227d5b919e325", "path_in_repo": "garyb9/QEMU-Fault-Injection/qemu_stm32/hw/char/sclpconsole-lm.o", "objdump": "", "code_s": "undefined4 FUN_00100222(char <span class=\"supfact\">param_1</span>) {\n  undefined4 <span class=\"supfact\">uVar1</span>;\n  if ((<span class=\"supfact\">param_1</span> == String) ||\n      (<span class=\"supfact\">param_1</span> == String)) {\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar1</span> = Number;\n  }\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "char", "pred_name": "c", "ref_name": "type", "ref_type": "uint8_t"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "rim99", "repo_name": "PostgreSQL-src", "path": "rim99/PostgreSQL-src/aeca413a50cb3a13719dcf3aae2d2c1d055ae329e1ebae670ac573f5f967fd38", "path_in_repo": "rim99/PostgreSQL-src//src/backend/utils/mb/conversion_procs/euc_tw_and_big5/euc_tw_and_big5.o", "objdump": "", "code_s": "void FUN_0010073a(char *<span class=\"supfact\">param_1</span>, char *<span class=\"supfact\">param_2</span>,\n                  int <span class=\"supfact\">param_3</span>) {\n  char *pcVar1;\n  char cVar2;\n  char cVar3;\n  int <span class=\"supfact\">iVar4</span>;\n  undefined8 *puVar5;\n  undefined *puVar6;\n  undefined *puVar7;\n  undefined <span class=\"supfact\">auStack_38</span>[Number];\n  int <span class=\"supfact\">local_2c</span>;\n  char *<span class=\"supfact\">local_28</span>;\n  char *<span class=\"supfact\">local_20</span>;\n  char <span class=\"supfact\">local_15</span>;\n  puVar7 = <span class=\"supfact\">auStack_38</span>;\n  <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">param_3</span>;\n  <span class=\"supfact\">local_28</span> = <span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_1</span>;\n  while (Number & lt; <span class=\"supfact\">local_2c</span>) {\n    cVar2 = *<span class=\"supfact\">local_20</span>;\n    if (cVar2 & lt; String) {\n      puVar6 = puVar7 + -Number;\n      *(undefined8 *)(puVar7 + -Number) = Number;\n      <span class=\"supfact\">iVar4</span> = (int)<span class=\"supfact\">local_20</span>;\n      if (<span class=\"supfact\">iVar4</span> & lt; Number) {\n        puVar6 = puVar7 + -Number;\n        *(undefined8 *)(puVar7 + -Number) = Number;\n      }\n      cVar3 = <span class=\"supfact\">local_20</span>[Number];\n      puVar7 = puVar6 + -Number;\n      *(undefined8 *)(puVar6 + -Number) = Number;\n      if (<span class=\"supfact\">local_15</span> == String) {\n        puVar7 = puVar6 + -Number;\n        *(undefined8 *)(puVar6 + -Number) = Number;\n      } else {\n        if ((<span class=\"supfact\">local_15</span> == -Number) ||\n            (<span class=\"supfact\">local_15</span> == -Number)) {\n          *<span class=\"supfact\">local_28</span> = -Number;\n          <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_28</span> + Number;\n        }\n        *<span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_15</span>;\n        pcVar1 = <span class=\"supfact\">local_28</span> + Number;\n        <span class=\"supfact\">local_28</span>[Number] = cVar2;\n        <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_28</span> + Number;\n        *pcVar1 = cVar3;\n        <span class=\"supfact\">local_20</span> =\n            <span class=\"supfact\">local_20</span> + <span class=\"supfact\">iVar4</span>;\n        <span class=\"supfact\">local_2c</span> =\n            <span class=\"supfact\">local_2c</span> - <span class=\"supfact\">iVar4</span>;\n      }\n    } else {\n      if (cVar2 == String) {\n        puVar5 = (undefined8 *)(puVar7 + -Number);\n        puVar7 = puVar7 + -Number;\n        *puVar5 = Number;\n      }\n      *<span class=\"supfact\">local_28</span> = cVar2;\n      <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_20</span> + Number;\n      <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">local_2c</span> + -Number;\n      <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_28</span> + Number;\n    }\n  }\n  *<span class=\"supfact\">local_28</span> = String;\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "char * *", "pred_name": "start", "ref_name": "big5", "ref_type": "uchar * *"}, {"name": "param_2", "type": "char * *", "pred_name": "end", "ref_name": "p", "ref_type": "uchar * *"}, {"name": "param_3", "type": "int", "pred_name": "maxlen", "ref_name": "len", "ref_type": "int"}, {"name": "iVar4", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_38", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_2c", "type": "int", "pred_name": "maxlen-local", "ref_name": "len-local", "ref_type": "int"}, {"name": "local_28", "type": "char * *", "pred_name": "end-local", "ref_name": "p-local", "ref_type": "uchar * *"}, {"name": "local_20", "type": "char * *", "pred_name": "start-local", "ref_name": "big5-local", "ref_type": "uchar * *"}, {"name": "local_15", "type": "char", "pred_name": "c", "ref_name": "lc", "ref_type": "uchar"}], "body_in_train": false}, {"repo_owner": "yhuili", "repo_name": "ComputerAnimation", "path": "yhuili/ComputerAnimation/8bd49462b363620e4525ece47a6f8491ec893c43b6a4a4b0f785c00c5c3b0987", "path_in_repo": "yhuili/ComputerAnimation/csci520-assignment2-startercode-2013/csci520-assignment2-startercode/fltk-1.3.2/test/overlay", "objdump": "", "code_s": "ulong FUN_00418792(uint <span class=\"supfact\">param_1</span>) {\n  ulong <span class=\"supfact\">uVar1</span>;\n  <span class=\"supfact\">uVar1</span> = (ulong)<span class=\"supfact\">param_1</span>;\n  if ((<span class=\"supfact\">param_1</span> & amp; Number) == Number) {\n    <span class=\"supfact\">uVar1</span> =\n        (ulong) * (uint *)(&amp; DAT_0047cae0 + <span class=\"supfact\">uVar1</span> * Number);\n  }\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "", "var": [{"name": "param_1", "type": "uint", "pred_name": "param_1", "ref_name": "param_1", "ref_type": "uint"}, {"name": "uVar1", "type": "ulong", "pred_name": "uVar1", "ref_name": "uVar1", "ref_type": "ulong"}], "body_in_train": false}, {"repo_owner": "fynv", "repo_name": "OpenGLSamples_ASTC", "path": "fynv/OpenGLSamples_ASTC/b0c4f0d9d5e8564a54637067836f8c828b564b708d091eb9a6141839c4ba28d4", "path_in_repo": "fynv/OpenGLSamples_ASTC/samples/build/linux64/build/cg4cpp_debug/extensions/externals/src/cg4cpp/upper3x1.cpp.o", "objdump": "", "code_s": "long FUN_00103164(long <span class=\"supfact\">param_1</span>, int <span class=\"supfact\">param_2</span>) {\n  return <span class=\"supfact\">param_1</span> + (long)<span class=\"supfact\">param_2</span> * Number;\n}", "code_t": "", "var": [{"name": "param_1", "type": "target_phys_addr_t", "pred_name": "desc_pa", "ref_name": "this", "ref_type": "__CGvector_storage&lt;double,_1,_Cg::__CGtype_trait&lt;double,_double&gt;_&gt; * *"}, {"name": "param_2", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "ihorkolomoyskyi", "repo_name": "bdg_dev_coin", "path": "ihorkolomoyskyi/bdg_dev_coin/87155efd0f8120184025284feccf5599cbd3a485dd97350dfe05be5e8e7de6a5", "path_in_repo": "ihorkolomoyskyi/bdg_dev_coin/depends/work/build/x86_64-pc-linux-gnu/libxcb/1.10-a1edfe23f8c/src/.libs/xf86dri.o", "objdump": "", "code_s": "undefined[Number] FUN_001000ec(void) {\n  undefined auVar1[Number];\n  undefined <span class=\"supfact\">local_28</span>[Number];\n  auVar1._0_8_ = (ulong)<span class=\"supfact\">local_28</span> & amp;\n  Number;\n  auVar1._8_8_ = <span class=\"supfact\">local_28</span>;\n  return auVar1;\n}", "code_t": "", "var": [{"name": "local_28", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "krackeroda", "repo_name": "ContikiIDS", "path": "krackeroda/ContikiIDS/28bd7a04a89b67ff268e6ed364142dbdcdf96b0e41f6a263fac1e7d6ea65472e", "path_in_repo": "krackeroda/ContikiIDS/examples/example-shell/example-shell.native", "objdump": "", "code_s": "void FUN_0040be2c(undefined8 <span class=\"supfact\">param_1</span>,\n                  byte <span class=\"supfact\">param_2</span>, byte <span class=\"supfact\">param_3</span>) {\n  short sVar1;\n  ushort uVar2;\n  short sVar3;\n  undefined4 *<span class=\"supfact\">puVar4</span>;\n  short <span class=\"supfact\">local_38</span>;\n  undefined <span class=\"supfact\">auStack_36</span>[Number];\n  ushort <span class=\"supfact\">local_34</span>;\n  ushort <span class=\"supfact\">local_32</span>;\n  undefined2 <span class=\"supfact\">local_30</span>;\n  undefined4 <span class=\"supfact\">local_2e</span>;\n  undefined2 <span class=\"supfact\">local_2a</span>;\n  int <span class=\"supfact\">local_28</span>;\n  undefined2 <span class=\"supfact\">local_22</span>;\n  long <span class=\"supfact\">local_20</span>;\n  <span class=\"supfact\">puVar4</span> = (undefined4 *)packetbuf_dataptr();\n  <span class=\"supfact\">local_2e</span> = *<span class=\"supfact\">puVar4</span>;\n  <span class=\"supfact\">local_2a</span> = *(undefined2 *)(<span class=\"supfact\">puVar4</span> + Number);\n  <span class=\"supfact\">local_20</span> = packetbuf_dataptr();\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_20</span> + Number;\n  <span class=\"supfact\">local_22</span> = Number;\n  if (DAT_0042f800 != Number) {\n    uVar2 = packetbuf_datalen();\n    if (Number & lt; uVar2) {\n      uVar2 = packetbuf_datalen();\n      <span class=\"supfact\">local_28</span> = uVar2 - Number;\n      sVar1 = <span class=\"supfact\">local_2e</span>._2_2_;\n      sVar3 = crc16_data(<span class=\"supfact\">local_20</span>, <span class=\"supfact\">local_28</span>,\n                         Number);\n      if (sVar1 == sVar3) {\n        uVar2 = packetbuf_datalen();\n        <span class=\"supfact\">local_38</span> =\n            (short)((int)(uVar2 - Number) / Number) + Number;\n        rimeaddr_copy(<span class=\"supfact\">auStack_36</span>, <span class=\"supfact\">param_1</span>);\n        <span class=\"supfact\">local_34</span> = (ushort)<span class=\"supfact\">param_2</span>;\n        <span class=\"supfact\">local_32</span> = (ushort)<span class=\"supfact\">param_3</span>;\n        <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_22</span>;\n        uVar2 = packetbuf_datalen();\n        shell_output(&amp; DAT_0042e660, &amp; <span class=\"supfact\">local_38</span>, Number,\n                                               <span class=\"supfact\">local_20</span>,\n                                               uVar2 - Number);\n      }\n    }\n  }\n  return;\n}", "code_t": "", "var": [{"name": "param_1", "type": "rimeaddr_t * *", "pred_name": "from", "ref_name": "originator", "ref_type": "rimeaddr_t * *"}, {"name": "param_2", "type": "uint8_t", "pred_name": "seqno", "ref_name": "seqno", "ref_type": "uint8_t"}, {"name": "param_3", "type": "uint8_t", "pred_name": "hops", "ref_name": "hops", "ref_type": "uint8_t"}, {"name": "puVar4", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_38", "type": "uint16_t", "pred_name": "index_1", "ref_name": "msg", "ref_type": "struct anon_struct_10_5_fda689e5 { uint16_t len; uint16_t originator; uint16_t seqno; uint16_t hops; uint16_t latency; }"}, {"name": "auStack_36", "type": "uint8_t", "pred_name": "__unk__", "ref_name": "", "ref_type": "disappear"}, {"name": "local_34", "type": "uint16_t", "pred_name": "__unk__", "ref_name": "", "ref_type": "disappear"}, {"name": "local_32", "type": "uint16_t", "pred_name": "__unk__", "ref_name": "", "ref_type": "disappear"}, {"name": "local_30", "type": "uint16_t", "pred_name": "__unk__", "ref_name": "", "ref_type": "disappear"}, {"name": "local_2e", "type": "int", "pred_name": "__unk__", "ref_name": "collect_msg", "ref_type": "struct collect_msg { uint16_t timestamp; uint16_t crc; uint8_t[1] data; PADDING (1); }"}, {"name": "local_2a", "type": "uint16_t", "pred_name": "__unk__", "ref_name": "", "ref_type": "disappear"}, {"name": "local_28", "type": "int", "pred_name": "__unk__", "ref_name": "len", "ref_type": "int"}, {"name": "local_22", "type": "uint16_t", "pred_name": "__unk__", "ref_name": "latency", "ref_type": "rtimer_clock_t"}, {"name": "local_20", "type": "announcement * *", "pred_name": "a", "ref_name": "dataptr", "ref_type": "char * *"}], "body_in_train": false}]