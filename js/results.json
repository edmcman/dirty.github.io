[{"repo_owner": "ajamous", "repo_name": "DOTS", "path": "ajamous/DOTS/28c9e348f3a3b11bc4f8699bd26ee99298379f2886174405e6aa1da54ee51932", "path_in_repo": "ajamous/DOTS/SIP_Clients_pjsip-2.7.1/pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/clidemo", "objdump": "000000000040f5c6 <gsm_create>:\n  40f5c6:\t55                   \tpush   %rbp\n  40f5c7:\t48 89 e5             \tmov    %rsp,%rbp\n  40f5ca:\t48 83 ec 10          \tsub    $0x10,%rsp\n  40f5ce:\tbf f8 02 00 00       \tmov    $0x2f8,%edi\n  40f5d3:\te8 68 50 ff ff       \tcall   404640 <malloc@plt>\n  40f5d8:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  40f5dc:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n  40f5e1:\t75 06                \tjne    40f5e9 <gsm_create+0x23>\n  40f5e3:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f5e7:\teb 27                \tjmp    40f610 <gsm_create+0x4a>\n  40f5e9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f5ed:\tba f8 02 00 00       \tmov    $0x2f8,%edx\n  40f5f2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  40f5f7:\t48 89 c7             \tmov    %rax,%rdi\n  40f5fa:\te8 01 4b ff ff       \tcall   404100 <memset@plt>\n  40f5ff:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f603:\t66 c7 80 d8 02 00 00 \tmovw   $0x28,0x2d8(%rax)\n  40f60a:\t28 00 \n  40f60c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f610:\tc9                   \tleave  \n  40f611:\tc3                   \tret    ", "code_s": "void *gsm_create(void) {\n  void *<span class=\"supfact\">__s</span>;\n  <span class=\"supfact\">__s</span> = malloc(Number);\n  if (<span class=\"supfact\">__s</span> != (void *)Number) {\n    memset(<span class=\"supfact\">__s</span>, Number, Number);\n    *(undefined2 *)((long)<span class=\"supfact\">__s</span> + Number) = Number;\n  }\n  return <span class=\"supfact\">__s</span>;\n}", "code_t": "gsm gsm_create(void) {\n  gsm <span class=\"supfact\">__s</span>;\n  gsm r;\n  <span class=\"supfact\">__s</span> = (gsm)malloc(Number);\n  if (<span class=\"supfact\">__s</span> != (gsm)Number) {\n    memset(<span class=\"supfact\">__s</span>, Number, Number);\n    <span class=\"supfact\">__s</span> - &gt;\n    nrp = Number;\n  }\n  return <span class=\"supfact\">__s</span>;\n}", "var": [{"name": "__s", "type": "void * *", "pred_name": "__s", "ref_name": "__s", "ref_type": "gsm"}], "body_in_train": true}, {"repo_owner": "DennisKofflard", "repo_name": "Trident_i2c_controller", "path": "DennisKofflard/Trident_i2c_controller/7f3b1341443e0a8ff448c9a5c1a21c28b9aacb88b829d641d7994be27df60654", "path_in_repo": "DennisKofflard/Trident_i2c_controller/congatec_cgoslib/Lx/libcgos.so", "objdump": "0000000000003dca <CgosBoardGetOption>:\n    3dca:\t55                   \tpush   %rbp\n    3dcb:\t48 89 e5             \tmov    %rsp,%rbp\n    3dce:\t48 83 ec 10          \tsub    $0x10,%rsp\n    3dd2:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n    3dd5:\t89 75 f8             \tmov    %esi,-0x8(%rbp)\n    3dd8:\t48 89 55 f0          \tmov    %rdx,-0x10(%rbp)\n    3ddc:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    3ddf:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    3de2:\t6a 00                \tpush   $0x0\n    3de4:\tff 75 f0             \tpush   -0x10(%rbp)\n    3de7:\t6a 00                \tpush   $0x0\n    3de9:\t6a 00                \tpush   $0x0\n    3deb:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    3df1:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    3df7:\t89 d1                \tmov    %edx,%ecx\n    3df9:\t89 c2                \tmov    %eax,%edx\n    3dfb:\tbe 09 00 00 00       \tmov    $0x9,%esi\n    3e00:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3e05:\te8 c6 f3 ff ff       \tcall   31d0 <CallDrvPlain@plt>\n    3e0a:\t48 83 c4 20          \tadd    $0x20,%rsp\n    3e0e:\tc9                   \tleave  \n    3e0f:\tc3                   \tret    ", "code_s": "void CgosBoardGetOption(undefined4 <span class=\"supfact\">param_1</span>,\n                        undefined4 <span class=\"supfact\">param_2</span>,\n                        undefined8 <span class=\"supfact\">param_3</span>) {\n  CallDrvPlain(Number, Number, <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n               Number, Number, Number, Number, <span class=\"supfact\">param_3</span>, Number);\n  return;\n}", "code_t": "uint CgosBoardGetOption(HCGOS <span class=\"supfact\">hCgos</span>,\n                        uint <span class=\"supfact\">dwOption</span>,\n                        uint *<span class=\"supfact\">pdwSetting</span>) {\n  uint uVar1;\n  uint *<span class=\"supfact\">pdwSetting</span> - local;\n  uint <span class=\"supfact\">dwOption</span> - local;\n  HCGOS <span class=\"supfact\">hCgos</span> - local;\n  uVar1 = CallDrvPlain(Number, Number, <span class=\"supfact\">hCgos</span>,\n                       <span class=\"supfact\">dwOption</span>, Number, Number, Number, Number,\n                       <span class=\"supfact\">pdwSetting</span>, (uint *)Number);\n  return uVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "hCgos", "ref_type": "HCGOS"}, {"name": "param_2", "type": "int", "pred_name": "__unk__", "ref_name": "dwOption", "ref_type": "uint"}, {"name": "param_3", "type": "uchar * *", "pred_name": "__unk__", "ref_name": "pdwSetting", "ref_type": "uint * *"}], "body_in_train": false}, {"repo_owner": "wufixx", "repo_name": "android_kernel_xiaomi_msm8953_vince", "path": "wufixx/android_kernel_xiaomi_msm8953_vince/e20e40c14979637892394d8d220a1ffb64a1912d5eb640ba7ecb67aef438b696", "path_in_repo": "wufixx/android_kernel_xiaomi_msm8953_vince/tools/lib/traceevent/libtraceevent.so", "objdump": "000000000000e157 <pevent_data_type>:\n    e157:\t55                   \tpush   %rbp\n    e158:\t48 89 e5             \tmov    %rsp,%rbp\n    e15b:\t48 83 ec 10          \tsub    $0x10,%rsp\n    e15f:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    e163:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n    e167:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    e16b:\t48 8b 50 20          \tmov    0x20(%rax),%rdx\n    e16f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    e173:\t48 89 d6             \tmov    %rdx,%rsi\n    e176:\t48 89 c7             \tmov    %rax,%rdi\n    e179:\te8 05 cb ff ff       \tcall   ac83 <trace_parse_common_type>\n    e17e:\tc9                   \tleave  \n    e17f:\tc3                   \tret    ", "code_s": "void pevent_data_type(undefined8 <span class=\"supfact\">param_1</span>,\n                      long <span class=\"supfact\">param_2</span>) {\n  FUN_0010ac83(<span class=\"supfact\">param_1</span>,\n               *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number));\n  return;\n}", "code_t": "int pevent_data_type(<span class=\"supfact\">pevent</span> *<span class=\"supfact\">pevent</span>,\n                     pevent_record *<span class=\"supfact\">rec</span>) {\n  int iVar1;\n  pevent_record *<span class=\"supfact\">rec</span> - local;\n  <span class=\"supfact\">pevent</span> *<span class=\"supfact\">pevent</span> - local;\n  iVar1 = trace_parse_common_type(\n      <span class=\"supfact\">pevent</span>, <span class=\"supfact\">rec</span> - &gt; data);\n  return iVar1;\n}", "var": [{"name": "param_1", "type": "pevent * *", "pred_name": "pevent", "ref_name": "pevent", "ref_type": "pevent * *"}, {"name": "param_2", "type": "pevent_record * *", "pred_name": "rec", "ref_name": "rec", "ref_type": "pevent_record * *"}], "body_in_train": true}, {"repo_owner": "ajamous", "repo_name": "DOTS", "path": "ajamous/DOTS/28c9e348f3a3b11bc4f8699bd26ee99298379f2886174405e6aa1da54ee51932", "path_in_repo": "ajamous/DOTS/SIP_Clients_pjsip-2.7.1/pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/clidemo", "objdump": "000000000040f5c6 <gsm_create>:\n  40f5c6:\t55                   \tpush   %rbp\n  40f5c7:\t48 89 e5             \tmov    %rsp,%rbp\n  40f5ca:\t48 83 ec 10          \tsub    $0x10,%rsp\n  40f5ce:\tbf f8 02 00 00       \tmov    $0x2f8,%edi\n  40f5d3:\te8 68 50 ff ff       \tcall   404640 <malloc@plt>\n  40f5d8:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  40f5dc:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n  40f5e1:\t75 06                \tjne    40f5e9 <gsm_create+0x23>\n  40f5e3:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f5e7:\teb 27                \tjmp    40f610 <gsm_create+0x4a>\n  40f5e9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f5ed:\tba f8 02 00 00       \tmov    $0x2f8,%edx\n  40f5f2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  40f5f7:\t48 89 c7             \tmov    %rax,%rdi\n  40f5fa:\te8 01 4b ff ff       \tcall   404100 <memset@plt>\n  40f5ff:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f603:\t66 c7 80 d8 02 00 00 \tmovw   $0x28,0x2d8(%rax)\n  40f60a:\t28 00 \n  40f60c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40f610:\tc9                   \tleave  \n  40f611:\tc3                   \tret    ", "code_s": "void *gsm_create(void) {\n  void *<span class=\"supfact\">__s</span>;\n  <span class=\"supfact\">__s</span> = malloc(Number);\n  if (<span class=\"supfact\">__s</span> != (void *)Number) {\n    memset(<span class=\"supfact\">__s</span>, Number, Number);\n    *(undefined2 *)((long)<span class=\"supfact\">__s</span> + Number) = Number;\n  }\n  return <span class=\"supfact\">__s</span>;\n}", "code_t": "gsm gsm_create(void) {\n  gsm <span class=\"supfact\">__s</span>;\n  gsm r;\n  <span class=\"supfact\">__s</span> = (gsm)malloc(Number);\n  if (<span class=\"supfact\">__s</span> != (gsm)Number) {\n    memset(<span class=\"supfact\">__s</span>, Number, Number);\n    <span class=\"supfact\">__s</span> - &gt;\n    nrp = Number;\n  }\n  return <span class=\"supfact\">__s</span>;\n}", "var": [{"name": "__s", "type": "void * *", "pred_name": "__s", "ref_name": "__s", "ref_type": "gsm"}], "body_in_train": true}, {"repo_owner": "DennisKofflard", "repo_name": "Trident_i2c_controller", "path": "DennisKofflard/Trident_i2c_controller/7f3b1341443e0a8ff448c9a5c1a21c28b9aacb88b829d641d7994be27df60654", "path_in_repo": "DennisKofflard/Trident_i2c_controller/congatec_cgoslib/Lx/libcgos.so", "objdump": "0000000000003b23 <CgosLibInstall>:\n    3b23:\t55                   \tpush   %rbp\n    3b24:\t48 89 e5             \tmov    %rsp,%rbp\n    3b27:\t48 83 ec 10          \tsub    $0x10,%rsp\n    3b2b:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n    3b2e:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    3b31:\t89 c7                \tmov    %eax,%edi\n    3b33:\te8 c8 f5 ff ff       \tcall   3100 <OsaInstallDriver@plt>\n    3b38:\tc9                   \tleave  \n    3b39:\tc3                   \tret    ", "code_s": "void CgosLibInstall(undefined4 <span class=\"supfact\">param_1</span>) {\n  OsaInstallDriver(<span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "uint CgosLibInstall(uint <span class=\"supfact\">install</span>) {\n  uint uVar1;\n  uint <span class=\"supfact\">install</span> - local;\n  uVar1 = OsaInstallDriver(<span class=\"supfact\">install</span>);\n  return uVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "install", "ref_type": "uint"}], "body_in_train": false}, {"repo_owner": "DennisKofflard", "repo_name": "Trident_i2c_controller", "path": "DennisKofflard/Trident_i2c_controller/7f3b1341443e0a8ff448c9a5c1a21c28b9aacb88b829d641d7994be27df60654", "path_in_repo": "DennisKofflard/Trident_i2c_controller/congatec_cgoslib/Lx/libcgos.so", "objdump": "0000000000003b23 <CgosLibInstall>:\n    3b23:\t55                   \tpush   %rbp\n    3b24:\t48 89 e5             \tmov    %rsp,%rbp\n    3b27:\t48 83 ec 10          \tsub    $0x10,%rsp\n    3b2b:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n    3b2e:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    3b31:\t89 c7                \tmov    %eax,%edi\n    3b33:\te8 c8 f5 ff ff       \tcall   3100 <OsaInstallDriver@plt>\n    3b38:\tc9                   \tleave  \n    3b39:\tc3                   \tret    ", "code_s": "void CgosLibInstall(undefined4 <span class=\"supfact\">param_1</span>) {\n  OsaInstallDriver(<span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "uint CgosLibInstall(uint <span class=\"supfact\">install</span>) {\n  uint uVar1;\n  uint <span class=\"supfact\">install</span> - local;\n  uVar1 = OsaInstallDriver(<span class=\"supfact\">install</span>);\n  return uVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "install", "ref_type": "uint"}], "body_in_train": false}, {"repo_owner": "wisfern", "repo_name": "ftplib", "path": "wisfern/ftplib/120c7c01c8a0aae43da663c920c3864b4039b4830e78d3276b50e784288a0c64", "path_in_repo": "wisfern/ftplib/src/libftp.so.4.0", "objdump": "000000000000473f <FtpMkdir>:\n    473f:\t55                   \tpush   %rbp\n    4740:\t48 89 e5             \tmov    %rsp,%rbp\n    4743:\t48 81 ec 10 04 00 00 \tsub    $0x410,%rsp\n    474a:\t48 89 bd f8 fb ff ff \tmov    %rdi,-0x408(%rbp)\n    4751:\t48 89 b5 f0 fb ff ff \tmov    %rsi,-0x410(%rbp)\n    4758:\t48 8b 85 f8 fb ff ff \tmov    -0x408(%rbp),%rax\n    475f:\t48 89 c7             \tmov    %rax,%rdi\n    4762:\te8 a9 d9 ff ff       \tcall   2110 <strlen@plt>\n    4767:\t48 83 c0 06          \tadd    $0x6,%rax\n    476b:\t48 3d 00 04 00 00    \tcmp    $0x400,%rax\n    4771:\t76 07                \tjbe    477a <FtpMkdir+0x3b>\n    4773:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4778:\teb 4d                \tjmp    47c7 <FtpMkdir+0x88>\n    477a:\t48 8b 95 f8 fb ff ff \tmov    -0x408(%rbp),%rdx\n    4781:\t48 8d 85 00 fc ff ff \tlea    -0x400(%rbp),%rax\n    4788:\t48 8d 35 9d 1a 00 00 \tlea    0x1a9d(%rip),%rsi        # 622c <_fini+0x1140>\n    478f:\t48 89 c7             \tmov    %rax,%rdi\n    4792:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4797:\te8 44 db ff ff       \tcall   22e0 <sprintf@plt>\n    479c:\t48 8b 95 f0 fb ff ff \tmov    -0x410(%rbp),%rdx\n    47a3:\t48 8d 85 00 fc ff ff \tlea    -0x400(%rbp),%rax\n    47aa:\tbe 32 00 00 00       \tmov    $0x32,%esi\n    47af:\t48 89 c7             \tmov    %rax,%rdi\n    47b2:\te8 1b ec ff ff       \tcall   33d2 <FtpSendCmd>\n    47b7:\t85 c0                \ttest   %eax,%eax\n    47b9:\t75 07                \tjne    47c2 <FtpMkdir+0x83>\n    47bb:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    47c0:\teb 05                \tjmp    47c7 <FtpMkdir+0x88>\n    47c2:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    47c7:\tc9                   \tleave  \n    47c8:\tc3                   \tret    ", "code_s": "undefined8 FtpMkdir(char *<span class=\"supfact\">param_1</span>,\n                    undefined8 <span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  size_t sVar2;\n  undefined8 uVar3;\n  char <span class=\"supfact\">local_408</span>[Number];\n  sVar2 = strlen(<span class=\"supfact\">param_1</span>);\n  if (sVar2 + Number & lt; Number) {\n    sprintf(<span class=\"supfact\">local_408</span>, String, <span class=\"supfact\">param_1</span>);\n    <span class=\"supfact\">iVar1</span> = FUN_001033d2(<span class=\"supfact\">local_408</span>, Number,\n                                         <span class=\"supfact\">param_2</span>);\n    if (<span class=\"supfact\">iVar1</span> == Number) {\n      uVar3 = Number;\n    } else {\n      uVar3 = Number;\n    }\n  } else {\n    uVar3 = Number;\n  }\n  return uVar3;\n}", "code_t": "int FtpMkdir(char *<span class=\"supfact\">path</span>, netbuf *<span class=\"supfact\">nControl</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  size_t sVar2;\n  netbuf *<span class=\"supfact\">nControl</span> - local;\n  char *<span class=\"supfact\">path</span> - local;\n  char <span class=\"supfact\">buf</span>[Number];\n  sVar2 = strlen(<span class=\"supfact\">path</span>);\n  if (sVar2 + Number & lt; Number) {\n    sprintf(<span class=\"supfact\">buf</span>, String, <span class=\"supfact\">path</span>);\n    <span class=\"supfact\">iVar1</span> =\n        FtpSendCmd(<span class=\"supfact\">buf</span>, String, <span class=\"supfact\">nControl</span>);\n    if (<span class=\"supfact\">iVar1</span> == Number) {\n      <span class=\"supfact\">iVar1</span> = Number;\n    } else {\n      <span class=\"supfact\">iVar1</span> = Number;\n    }\n  } else {\n    <span class=\"supfact\">iVar1</span> = Number;\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "param_1", "ref_name": "path", "ref_type": "char * *"}, {"name": "param_2", "type": "int * *", "pred_name": "param_2", "ref_name": "nControl", "ref_type": "netbuf * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "local_408", "type": "char[1024][1024]", "pred_name": "lpath", "ref_name": "buf", "ref_type": "char[1024][1024]"}], "body_in_train": false}, {"repo_owner": "malvira", "repo_name": "erbr", "path": "malvira/erbr/2f8350b2482c685589c80daaa31735f028d7aa115ebd831f8cce34b92e2b972e", "path_in_repo": "malvira/erbr/contiki/examples/multi-threading/multi-threading.native", "objdump": "000000000040a475 <uip_unlisten>:\n  40a475:\t55                   \tpush   %rbp\n  40a476:\t48 89 e5             \tmov    %rsp,%rbp\n  40a479:\t89 f8                \tmov    %edi,%eax\n  40a47b:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  40a47f:\tc6 05 be 93 00 00 00 \tmovb   $0x0,0x93be(%rip)        # 413844 <c>\n  40a486:\teb 42                \tjmp    40a4ca <uip_unlisten+0x55>\n  40a488:\t0f b6 05 b5 93 00 00 \tmovzbl 0x93b5(%rip),%eax        # 413844 <c>\n  40a48f:\t0f b6 c0             \tmovzbl %al,%eax\n  40a492:\t48 98                \tcltq   \n  40a494:\t0f b7 84 00 20 42 41 \tmovzwl 0x414220(%rax,%rax,1),%eax\n  40a49b:\t00 \n  40a49c:\t66 39 45 fc          \tcmp    %ax,-0x4(%rbp)\n  40a4a0:\t75 18                \tjne    40a4ba <uip_unlisten+0x45>\n  40a4a2:\t0f b6 05 9b 93 00 00 \tmovzbl 0x939b(%rip),%eax        # 413844 <c>\n  40a4a9:\t0f b6 c0             \tmovzbl %al,%eax\n  40a4ac:\t48 98                \tcltq   \n  40a4ae:\t66 c7 84 00 20 42 41 \tmovw   $0x0,0x414220(%rax,%rax,1)\n  40a4b5:\t00 00 00 \n  40a4b8:\teb 1b                \tjmp    40a4d5 <uip_unlisten+0x60>\n  40a4ba:\t0f b6 05 83 93 00 00 \tmovzbl 0x9383(%rip),%eax        # 413844 <c>\n  40a4c1:\t83 c0 01             \tadd    $0x1,%eax\n  40a4c4:\t88 05 7a 93 00 00    \tmov    %al,0x937a(%rip)        # 413844 <c>\n  40a4ca:\t0f b6 05 73 93 00 00 \tmovzbl 0x9373(%rip),%eax        # 413844 <c>\n  40a4d1:\t3c 27                \tcmp    $0x27,%al\n  40a4d3:\t76 b3                \tjbe    40a488 <uip_unlisten+0x13>\n  40a4d5:\t5d                   \tpop    %rbp\n  40a4d6:\tc3                   \tret    ", "code_s": "void uip_unlisten(short <span class=\"supfact\">param_1</span>) {\n  DAT_00413844 = Number;\n  while (true) {\n    if (Number & lt; DAT_00413844) {\n      return;\n    }\n    if (<span class=\"supfact\">param_1</span> ==\n        (&amp; uip_listenports)[(int)(uint)DAT_00413844])\n      break;\n    DAT_00413844 = DAT_00413844 + Number;\n  }\n  (&amp; uip_listenports)[(int)(uint)DAT_00413844] = Number;\n  return;\n}", "code_t": "void uip_unlisten(uint16_t <span class=\"supfact\">port</span>) {\n  uint16_t <span class=\"supfact\">port</span> - local;\n  c = String;\n  while (true) {\n    if (Number & lt; c) {\n      return;\n    }\n    if (<span class=\"supfact\">port</span> == uip_listenports[(int)(uint)c])\n      break;\n    c = c + String;\n  }\n  uip_listenports[(int)(uint)c] = Number;\n  return;\n}", "var": [{"name": "param_1", "type": "uint16_t", "pred_name": "port", "ref_name": "port", "ref_type": "uint16_t"}], "body_in_train": false}, {"repo_owner": "ajamous", "repo_name": "DOTS", "path": "ajamous/DOTS/28c9e348f3a3b11bc4f8699bd26ee99298379f2886174405e6aa1da54ee51932", "path_in_repo": "ajamous/DOTS/SIP_Clients_pjsip-2.7.1/pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/clidemo", "objdump": "0000000000426b81 <speex_stereo_state_reset>:\n  426b81:\t55                   \tpush   %rbp\n  426b82:\t48 89 e5             \tmov    %rsp,%rbp\n  426b85:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  426b89:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  426b8d:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  426b91:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  426b95:\tf3 0f 10 05 cf 03 02 \tmovss  0x203cf(%rip),%xmm0        # 446f6c <e_ratio_quant_bounds+0xc>\n  426b9c:\t00 \n  426b9d:\tf3 0f 11 00          \tmovss  %xmm0,(%rax)\n  426ba1:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  426ba5:\tf3 0f 10 05 c3 03 02 \tmovss  0x203c3(%rip),%xmm0        # 446f70 <e_ratio_quant_bounds+0x10>\n  426bac:\t00 \n  426bad:\tf3 0f 11 40 04       \tmovss  %xmm0,0x4(%rax)\n  426bb2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  426bb6:\tf3 0f 10 05 ae 03 02 \tmovss  0x203ae(%rip),%xmm0        # 446f6c <e_ratio_quant_bounds+0xc>\n  426bbd:\t00 \n  426bbe:\tf3 0f 11 40 08       \tmovss  %xmm0,0x8(%rax)\n  426bc3:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  426bc7:\tf3 0f 10 05 9d 03 02 \tmovss  0x2039d(%rip),%xmm0        # 446f6c <e_ratio_quant_bounds+0xc>\n  426bce:\t00 \n  426bcf:\tf3 0f 11 40 0c       \tmovss  %xmm0,0xc(%rax)\n  426bd4:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  426bd8:\tc7 40 10 00 00 00 00 \tmovl   $0x0,0x10(%rax)\n  426bdf:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  426be3:\tc7 40 14 00 00 00 00 \tmovl   $0x0,0x14(%rax)\n  426bea:\t90                   \tnop\n  426beb:\t5d                   \tpop    %rbp\n  426bec:\tc3                   \tret    ", "code_s": "void speex_stereo_state_reset(undefined4 *<span class=\"supfact\">param_1</span>) {\n  *<span class=\"supfact\">param_1</span> = DAT_00446f6c;\n  <span class=\"supfact\">param_1</span>[Number] = DAT_00446f70;\n  <span class=\"supfact\">param_1</span>[Number] = DAT_00446f6c;\n  <span class=\"supfact\">param_1</span>[Number] = DAT_00446f6c;\n  <span class=\"supfact\">param_1</span>[Number] = Number;\n  <span class=\"supfact\">param_1</span>[Number] = Number;\n  return;\n}", "code_t": "void speex_stereo_state_reset(SpeexStereoState *<span class=\"supfact\">_stereo</span>) {\n  SpeexStereoState *<span class=\"supfact\">_stereo</span> - local;\n  RealSpeexStereoState *stereo;\n  <span class=\"supfact\">_stereo</span> - &gt;\n  balance = DAT_00446f6c;\n  <span class=\"supfact\">_stereo</span> - &gt;\n  e_ratio = DAT_00446f70;\n  <span class=\"supfact\">_stereo</span> - &gt;\n  smooth_left = DAT_00446f6c;\n  <span class=\"supfact\">_stereo</span> - &gt;\n  smooth_right = DAT_00446f6c;\n  <span class=\"supfact\">_stereo</span> - &gt;\n  reserved1 = Number;\n  <span class=\"supfact\">_stereo</span> - &gt;\n  reserved2 = Number;\n  return;\n}", "var": [{"name": "param_1", "type": "SpeexStereoState * *", "pred_name": "__unk__", "ref_name": "_stereo", "ref_type": "SpeexStereoState * *"}], "body_in_train": false}, {"repo_owner": "DennisKofflard", "repo_name": "Trident_i2c_controller", "path": "DennisKofflard/Trident_i2c_controller/7f3b1341443e0a8ff448c9a5c1a21c28b9aacb88b829d641d7994be27df60654", "path_in_repo": "DennisKofflard/Trident_i2c_controller/congatec_cgoslib/Lx/libcgos.so", "objdump": "0000000000004c09 <CgosWDogSetConfigStruct>:\n    4c09:\t55                   \tpush   %rbp\n    4c0a:\t48 89 e5             \tmov    %rsp,%rbp\n    4c0d:\t48 83 ec 10          \tsub    $0x10,%rsp\n    4c11:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n    4c14:\t89 75 f8             \tmov    %esi,-0x8(%rbp)\n    4c17:\t48 89 55 f0          \tmov    %rdx,-0x10(%rbp)\n    4c1b:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    4c1e:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    4c21:\t6a 00                \tpush   $0x0\n    4c23:\t6a 00                \tpush   $0x0\n    4c25:\t6a 00                \tpush   $0x0\n    4c27:\tff 75 f0             \tpush   -0x10(%rbp)\n    4c2a:\t6a 00                \tpush   $0x0\n    4c2c:\t6a 00                \tpush   $0x0\n    4c2e:\t6a 00                \tpush   $0x0\n    4c30:\t6a 00                \tpush   $0x0\n    4c32:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    4c38:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    4c3e:\t89 d1                \tmov    %edx,%ecx\n    4c40:\t89 c2                \tmov    %eax,%edx\n    4c42:\tbe 36 00 00 00       \tmov    $0x36,%esi\n    4c47:\tbf 08 00 00 00       \tmov    $0x8,%edi\n    4c4c:\te8 4f e4 ff ff       \tcall   30a0 <CallDrvStruct@plt>\n    4c51:\t48 83 c4 40          \tadd    $0x40,%rsp\n    4c55:\tc9                   \tleave  \n    4c56:\tc3                   \tret    ", "code_s": "void CgosWDogSetConfigStruct(undefined4 <span class=\"supfact\">param_1</span>,\n                             undefined4 <span class=\"supfact\">param_2</span>,\n                             undefined8 <span class=\"supfact\">param_3</span>) {\n  CallDrvStruct(Number, Number, <span class=\"supfact\">param_1</span>,\n                <span class=\"supfact\">param_2</span>, Number, Number, Number, Number, Number,\n                Number, <span class=\"supfact\">param_3</span>, Number, Number, Number);\n  return;\n}", "code_t": "uint CgosWDogSetConfigStruct(HCGOS <span class=\"supfact\">hCgos</span>,\n                             uint <span class=\"supfact\">dwUnit</span>,\n                             CGOSWDCONFIG *<span class=\"supfact\">pConfig</span>) {\n  uint uVar1;\n  CGOSWDCONFIG *<span class=\"supfact\">pConfig</span> - local;\n  uint <span class=\"supfact\">dwUnit</span> - local;\n  HCGOS <span class=\"supfact\">hCgos</span> - local;\n  uVar1 = CallDrvStruct(Number, Number, <span class=\"supfact\">hCgos</span>,\n                        <span class=\"supfact\">dwUnit</span>, Number, Number, Number, Number,\n                        (uint *)Number, (uint *)Number, <span class=\"supfact\">pConfig</span>,\n                        Number, (void *)Number, Number);\n  return uVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "__unk__", "ref_name": "hCgos", "ref_type": "HCGOS"}, {"name": "param_2", "type": "int", "pred_name": "__unk__", "ref_name": "dwUnit", "ref_type": "uint"}, {"name": "param_3", "type": "char * *", "pred_name": "title", "ref_name": "pConfig", "ref_type": "CGOSWDCONFIG * *"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000000f1fa <socket_set_block>:\n    f1fa:\t55                   \tpush   %rbp\n    f1fb:\t48 89 e5             \tmov    %rsp,%rbp\n    f1fe:\t48 83 ec 20          \tsub    $0x20,%rsp\n    f202:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n    f205:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    f20c:\t00 00 \n    f20e:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    f212:\t31 c0                \txor    %eax,%eax\n    f214:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    f217:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    f21c:\t89 c7                \tmov    %eax,%edi\n    f21e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    f223:\te8 b8 94 ff ff       \tcall   86e0 <fcntl64@plt>\n    f228:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    f22b:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    f22e:\t80 e4 f7             \tand    $0xf7,%ah\n    f231:\t89 c2                \tmov    %eax,%edx\n    f233:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    f236:\tbe 04 00 00 00       \tmov    $0x4,%esi\n    f23b:\t89 c7                \tmov    %eax,%edi\n    f23d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    f242:\te8 99 94 ff ff       \tcall   86e0 <fcntl64@plt>\n    f247:\t90                   \tnop\n    f248:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    f24c:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    f253:\t00 00 \n    f255:\t74 05                \tje     f25c <socket_set_block+0x62>\n    f257:\te8 34 90 ff ff       \tcall   8290 <__stack_chk_fail@plt>\n    f25c:\tc9                   \tleave  \n    f25d:\tc3                   \tret    ", "code_s": "void socket_set_block(undefined4 <span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  uint <span class=\"supfact\">uVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">uVar2</span> = fcntl64(<span class=\"supfact\">param_1</span>, Number);\n  fcntl64(<span class=\"supfact\">param_1</span>, Number, <span class=\"supfact\">uVar2</span> & amp; Number);\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "code_t": "void socket_set_block(int <span class=\"supfact\">fd</span>) {\n  long lVar1;\n  uint <span class=\"supfact\">uVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">fd</span> - local;\n  int f;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">uVar2</span> = fcntl64(<span class=\"supfact\">fd</span>, Number);\n  fcntl64(<span class=\"supfact\">fd</span>, Number, <span class=\"supfact\">uVar2</span> & amp; Number);\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "fd", "ref_type": "int"}, {"name": "uVar2", "type": "disappear", "pred_name": "", "ref_name": "uVar2", "ref_type": "uint"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "sudipjai", "repo_name": "openvx", "path": "sudipjai/openvx/7b10b5540c6c565a0283e382d0e734b2dcd4ba1bda3a4e826e17c9dd4a2f8065", "path_in_repo": "sudipjai/openvx//out/LINUX/x86_64/release/vx_query", "objdump": "0000000000403662 <vxReadRectangle>:\n  403662:\t55                   \tpush   %rbp\n  403663:\t48 89 e5             \tmov    %rsp,%rbp\n  403666:\t48 81 ec 90 00 00 00 \tsub    $0x90,%rsp\n  40366d:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n  403671:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n  403675:\t48 89 55 88          \tmov    %rdx,-0x78(%rbp)\n  403679:\t89 4d 84             \tmov    %ecx,-0x7c(%rbp)\n  40367c:\t44 89 45 80          \tmov    %r8d,-0x80(%rbp)\n  403680:\t44 89 8d 7c ff ff ff \tmov    %r9d,-0x84(%rbp)\n  403687:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  40368b:\t8b 00                \tmov    (%rax),%eax\n  40368d:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n  403690:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  403694:\t8b 40 04             \tmov    0x4(%rax),%eax\n  403697:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n  40369a:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  40369e:\t8b 40 0c             \tmov    0xc(%rax),%eax\n  4036a1:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n  4036a4:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n  4036a8:\t8b 40 08             \tmov    0x8(%rax),%eax\n  4036ab:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n  4036ae:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n  4036b2:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n  4036b6:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n  4036bd:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n  4036c1:\t8b 00                \tmov    (%rax),%eax\n  4036c3:\t3d 02 c0 00 00       \tcmp    $0xc002,%eax\n  4036c8:\t74 11                \tje     4036db <vxReadRectangle+0x79>\n  4036ca:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n  4036ce:\t8b 00                \tmov    (%rax),%eax\n  4036d0:\t3d 00 c0 00 00       \tcmp    $0xc000,%eax\n  4036d5:\t0f 85 f4 01 00 00    \tjne    4038cf <vxReadRectangle+0x26d>\n  4036db:\t8b 45 18             \tmov    0x18(%rbp),%eax\n  4036de:\tf7 d8                \tneg    %eax\n  4036e0:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  4036e3:\te9 d6 01 00 00       \tjmp    4038be <vxReadRectangle+0x25c>\n  4036e8:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n  4036eb:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n  4036f1:\t01 d0                \tadd    %edx,%eax\n  4036f3:\t89 45 bc             \tmov    %eax,-0x44(%rbp)\n  4036f6:\t83 7d bc 00          \tcmpl   $0x0,-0x44(%rbp)\n  4036fa:\t78 15                \tjs     403711 <vxReadRectangle+0xaf>\n  4036fc:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n  4036ff:\t3b 45 ec             \tcmp    -0x14(%rbp),%eax\n  403702:\t7c 08                \tjl     40370c <vxReadRectangle+0xaa>\n  403704:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  403707:\t83 e8 01             \tsub    $0x1,%eax\n  40370a:\teb 0a                \tjmp    403716 <vxReadRectangle+0xb4>\n  40370c:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n  40370f:\teb 05                \tjmp    403716 <vxReadRectangle+0xb4>\n  403711:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  403716:\t89 45 bc             \tmov    %eax,-0x44(%rbp)\n  403719:\t8b 45 10             \tmov    0x10(%rbp),%eax\n  40371c:\tf7 d8                \tneg    %eax\n  40371e:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n  403721:\te9 88 01 00 00       \tjmp    4038ae <vxReadRectangle+0x24c>\n  403726:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n  403729:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n  40372c:\t01 d0                \tadd    %edx,%eax\n  40372e:\t89 45 b8             \tmov    %eax,-0x48(%rbp)\n  403731:\t83 7d b8 00          \tcmpl   $0x0,-0x48(%rbp)\n  403735:\t78 15                \tjs     40374c <vxReadRectangle+0xea>\n  403737:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n  40373a:\t3b 45 f0             \tcmp    -0x10(%rbp),%eax\n  40373d:\t7c 08                \tjl     403747 <vxReadRectangle+0xe5>\n  40373f:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n  403742:\t83 e8 01             \tsub    $0x1,%eax\n  403745:\teb 0a                \tjmp    403751 <vxReadRectangle+0xef>\n  403747:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n  40374a:\teb 05                \tjmp    403751 <vxReadRectangle+0xef>\n  40374c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  403751:\t89 45 b8             \tmov    %eax,-0x48(%rbp)\n  403754:\t81 7d 84 55 30 30 38 \tcmpl   $0x38303055,-0x7c(%rbp)\n  40375b:\t74 72                \tje     4037cf <vxReadRectangle+0x16d>\n  40375d:\t81 7d 84 55 30 30 38 \tcmpl   $0x38303055,-0x7c(%rbp)\n  403764:\t0f 87 37 01 00 00    \tja     4038a1 <vxReadRectangle+0x23f>\n  40376a:\t81 7d 84 55 30 31 36 \tcmpl   $0x36313055,-0x7c(%rbp)\n  403771:\t0f 84 89 00 00 00    \tje     403800 <vxReadRectangle+0x19e>\n  403777:\t81 7d 84 55 30 31 36 \tcmpl   $0x36313055,-0x7c(%rbp)\n  40377e:\t0f 87 1d 01 00 00    \tja     4038a1 <vxReadRectangle+0x23f>\n  403784:\t81 7d 84 53 30 31 36 \tcmpl   $0x36313053,-0x7c(%rbp)\n  40378b:\t74 73                \tje     403800 <vxReadRectangle+0x19e>\n  40378d:\t81 7d 84 53 30 31 36 \tcmpl   $0x36313053,-0x7c(%rbp)\n  403794:\t0f 87 07 01 00 00    \tja     4038a1 <vxReadRectangle+0x23f>\n  40379a:\t81 7d 84 55 30 33 32 \tcmpl   $0x32333055,-0x7c(%rbp)\n  4037a1:\t0f 84 8c 00 00 00    \tje     403833 <vxReadRectangle+0x1d1>\n  4037a7:\t81 7d 84 55 30 33 32 \tcmpl   $0x32333055,-0x7c(%rbp)\n  4037ae:\t0f 87 ed 00 00 00    \tja     4038a1 <vxReadRectangle+0x23f>\n  4037b4:\t81 7d 84 46 30 33 32 \tcmpl   $0x32333046,-0x7c(%rbp)\n  4037bb:\t0f 84 a7 00 00 00    \tje     403868 <vxReadRectangle+0x206>\n  4037c1:\t81 7d 84 53 30 33 32 \tcmpl   $0x32333053,-0x7c(%rbp)\n  4037c8:\t74 69                \tje     403833 <vxReadRectangle+0x1d1>\n  4037ca:\te9 d2 00 00 00       \tjmp    4038a1 <vxReadRectangle+0x23f>\n  4037cf:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n  4037d2:\t0f af 45 e8          \timul   -0x18(%rbp),%eax\n  4037d6:\t48 63 d0             \tmovslq %eax,%rdx\n  4037d9:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n  4037dc:\t0f af 45 e4          \timul   -0x1c(%rbp),%eax\n  4037e0:\t48 98                \tcltq   \n  4037e2:\t48 01 c2             \tadd    %rax,%rdx\n  4037e5:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  4037e9:\t48 01 d0             \tadd    %rdx,%rax\n  4037ec:\t8b 4d f4             \tmov    -0xc(%rbp),%ecx\n  4037ef:\t48 8b 55 20          \tmov    0x20(%rbp),%rdx\n  4037f3:\t48 01 ca             \tadd    %rcx,%rdx\n  4037f6:\t0f b6 00             \tmovzbl (%rax),%eax\n  4037f9:\t88 02                \tmov    %al,(%rdx)\n  4037fb:\te9 a6 00 00 00       \tjmp    4038a6 <vxReadRectangle+0x244>\n  403800:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n  403803:\t0f af 45 e8          \timul   -0x18(%rbp),%eax\n  403807:\t48 63 d0             \tmovslq %eax,%rdx\n  40380a:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n  40380d:\t0f af 45 e4          \timul   -0x1c(%rbp),%eax\n  403811:\t48 98                \tcltq   \n  403813:\t48 01 c2             \tadd    %rax,%rdx\n  403816:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  40381a:\t48 01 d0             \tadd    %rdx,%rax\n  40381d:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n  403820:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n  403824:\t48 8b 55 20          \tmov    0x20(%rbp),%rdx\n  403828:\t48 01 ca             \tadd    %rcx,%rdx\n  40382b:\t0f b7 00             \tmovzwl (%rax),%eax\n  40382e:\t66 89 02             \tmov    %ax,(%rdx)\n  403831:\teb 73                \tjmp    4038a6 <vxReadRectangle+0x244>\n  403833:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n  403836:\t0f af 45 e8          \timul   -0x18(%rbp),%eax\n  40383a:\t48 63 d0             \tmovslq %eax,%rdx\n  40383d:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n  403840:\t0f af 45 e4          \timul   -0x1c(%rbp),%eax\n  403844:\t48 98                \tcltq   \n  403846:\t48 01 c2             \tadd    %rax,%rdx\n  403849:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  40384d:\t48 01 d0             \tadd    %rdx,%rax\n  403850:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n  403853:\t48 8d 0c 95 00 00 00 \tlea    0x0(,%rdx,4),%rcx\n  40385a:\t00 \n  40385b:\t48 8b 55 20          \tmov    0x20(%rbp),%rdx\n  40385f:\t48 01 ca             \tadd    %rcx,%rdx\n  403862:\t8b 00                \tmov    (%rax),%eax\n  403864:\t89 02                \tmov    %eax,(%rdx)\n  403866:\teb 3e                \tjmp    4038a6 <vxReadRectangle+0x244>\n  403868:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n  40386b:\t0f af 45 e8          \timul   -0x18(%rbp),%eax\n  40386f:\t48 63 d0             \tmovslq %eax,%rdx\n  403872:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n  403875:\t0f af 45 e4          \timul   -0x1c(%rbp),%eax\n  403879:\t48 98                \tcltq   \n  40387b:\t48 01 c2             \tadd    %rax,%rdx\n  40387e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  403882:\t48 01 c2             \tadd    %rax,%rdx\n  403885:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  403888:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n  40388f:\t00 \n  403890:\t48 8b 45 20          \tmov    0x20(%rbp),%rax\n  403894:\t48 01 c8             \tadd    %rcx,%rax\n  403897:\tf3 0f 10 02          \tmovss  (%rdx),%xmm0\n  40389b:\tf3 0f 11 00          \tmovss  %xmm0,(%rax)\n  40389f:\teb 05                \tjmp    4038a6 <vxReadRectangle+0x244>\n  4038a1:\te8 ea e7 ff ff       \tcall   402090 <abort@plt>\n  4038a6:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n  4038aa:\t83 45 f4 01          \taddl   $0x1,-0xc(%rbp)\n  4038ae:\t8b 45 10             \tmov    0x10(%rbp),%eax\n  4038b1:\t39 45 f8             \tcmp    %eax,-0x8(%rbp)\n  4038b4:\t0f 8e 6c fe ff ff    \tjle    403726 <vxReadRectangle+0xc4>\n  4038ba:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n  4038be:\t8b 45 18             \tmov    0x18(%rbp),%eax\n  4038c1:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n  4038c4:\t0f 8e 1e fe ff ff    \tjle    4036e8 <vxReadRectangle+0x86>\n  4038ca:\te9 ab 02 00 00       \tjmp    403b7a <vxReadRectangle+0x518>\n  4038cf:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n  4038d3:\t8b 00                \tmov    (%rax),%eax\n  4038d5:\t3d 01 c0 00 00       \tcmp    $0xc001,%eax\n  4038da:\t0f 85 95 02 00 00    \tjne    403b75 <vxReadRectangle+0x513>\n  4038e0:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n  4038e4:\t48 8b 50 0c          \tmov    0xc(%rax),%rdx\n  4038e8:\t48 8b 40 04          \tmov    0x4(%rax),%rax\n  4038ec:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n  4038f0:\t48 89 55 a8          \tmov    %rdx,-0x58(%rbp)\n  4038f4:\t8b 45 18             \tmov    0x18(%rbp),%eax\n  4038f7:\tf7 d8                \tneg    %eax\n  4038f9:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  4038fc:\te9 66 02 00 00       \tjmp    403b67 <vxReadRectangle+0x505>\n  403901:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n  403904:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n  40390a:\t01 d0                \tadd    %edx,%eax\n  40390c:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n  40390f:\t83 7d d4 00          \tcmpl   $0x0,-0x2c(%rbp)\n  403913:\t78 08                \tjs     40391d <vxReadRectangle+0x2bb>\n  403915:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n  403918:\t3b 45 ec             \tcmp    -0x14(%rbp),%eax\n  40391b:\t7c 07                \tjl     403924 <vxReadRectangle+0x2c2>\n  40391d:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  403922:\teb 05                \tjmp    403929 <vxReadRectangle+0x2c7>\n  403924:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  403929:\t89 45 d0             \tmov    %eax,-0x30(%rbp)\n  40392c:\t8b 45 10             \tmov    0x10(%rbp),%eax\n  40392f:\tf7 d8                \tneg    %eax\n  403931:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n  403934:\te9 1e 02 00 00       \tjmp    403b57 <vxReadRectangle+0x4f5>\n  403939:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n  40393c:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n  40393f:\t01 d0                \tadd    %edx,%eax\n  403941:\t89 45 cc             \tmov    %eax,-0x34(%rbp)\n  403944:\t83 7d d0 00          \tcmpl   $0x0,-0x30(%rbp)\n  403948:\t75 0e                \tjne    403958 <vxReadRectangle+0x2f6>\n  40394a:\t83 7d cc 00          \tcmpl   $0x0,-0x34(%rbp)\n  40394e:\t78 08                \tjs     403958 <vxReadRectangle+0x2f6>\n  403950:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  403953:\t3b 45 f0             \tcmp    -0x10(%rbp),%eax\n  403956:\t7c 07                \tjl     40395f <vxReadRectangle+0x2fd>\n  403958:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  40395d:\teb 05                \tjmp    403964 <vxReadRectangle+0x302>\n  40395f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  403964:\t89 45 c8             \tmov    %eax,-0x38(%rbp)\n  403967:\t81 7d 84 55 30 30 38 \tcmpl   $0x38303055,-0x7c(%rbp)\n  40396e:\t74 7a                \tje     4039ea <vxReadRectangle+0x388>\n  403970:\t81 7d 84 55 30 30 38 \tcmpl   $0x38303055,-0x7c(%rbp)\n  403977:\t0f 87 cd 01 00 00    \tja     403b4a <vxReadRectangle+0x4e8>\n  40397d:\t81 7d 84 55 30 31 36 \tcmpl   $0x36313055,-0x7c(%rbp)\n  403984:\t0f 84 ac 00 00 00    \tje     403a36 <vxReadRectangle+0x3d4>\n  40398a:\t81 7d 84 55 30 31 36 \tcmpl   $0x36313055,-0x7c(%rbp)\n  403991:\t0f 87 b3 01 00 00    \tja     403b4a <vxReadRectangle+0x4e8>\n  403997:\t81 7d 84 53 30 31 36 \tcmpl   $0x36313053,-0x7c(%rbp)\n  40399e:\t0f 84 92 00 00 00    \tje     403a36 <vxReadRectangle+0x3d4>\n  4039a4:\t81 7d 84 53 30 31 36 \tcmpl   $0x36313053,-0x7c(%rbp)\n  4039ab:\t0f 87 99 01 00 00    \tja     403b4a <vxReadRectangle+0x4e8>\n  4039b1:\t81 7d 84 55 30 33 32 \tcmpl   $0x32333055,-0x7c(%rbp)\n  4039b8:\t0f 84 ce 00 00 00    \tje     403a8c <vxReadRectangle+0x42a>\n  4039be:\t81 7d 84 55 30 33 32 \tcmpl   $0x32333055,-0x7c(%rbp)\n  4039c5:\t0f 87 7f 01 00 00    \tja     403b4a <vxReadRectangle+0x4e8>\n  4039cb:\t81 7d 84 46 30 33 32 \tcmpl   $0x32333046,-0x7c(%rbp)\n  4039d2:\t0f 84 0b 01 00 00    \tje     403ae3 <vxReadRectangle+0x481>\n  4039d8:\t81 7d 84 53 30 33 32 \tcmpl   $0x32333053,-0x7c(%rbp)\n  4039df:\t0f 84 a7 00 00 00    \tje     403a8c <vxReadRectangle+0x42a>\n  4039e5:\te9 60 01 00 00       \tjmp    403b4a <vxReadRectangle+0x4e8>\n  4039ea:\t83 7d c8 00          \tcmpl   $0x0,-0x38(%rbp)\n  4039ee:\t75 31                \tjne    403a21 <vxReadRectangle+0x3bf>\n  4039f0:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n  4039f3:\t0f af 45 e8          \timul   -0x18(%rbp),%eax\n  4039f7:\t48 63 d0             \tmovslq %eax,%rdx\n  4039fa:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  4039fd:\t0f af 45 e4          \timul   -0x1c(%rbp),%eax\n  403a01:\t48 98                \tcltq   \n  403a03:\t48 01 c2             \tadd    %rax,%rdx\n  403a06:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  403a0a:\t48 01 d0             \tadd    %rdx,%rax\n  403a0d:\t8b 4d f4             \tmov    -0xc(%rbp),%ecx\n  403a10:\t48 8b 55 20          \tmov    0x20(%rbp),%rdx\n  403a14:\t48 01 ca             \tadd    %rcx,%rdx\n  403a17:\t0f b6 00             \tmovzbl (%rax),%eax\n  403a1a:\t88 02                \tmov    %al,(%rdx)\n  403a1c:\te9 2e 01 00 00       \tjmp    403b4f <vxReadRectangle+0x4ed>\n  403a21:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n  403a24:\t48 8b 45 20          \tmov    0x20(%rbp),%rax\n  403a28:\t48 01 c2             \tadd    %rax,%rdx\n  403a2b:\t0f b6 45 a0          \tmovzbl -0x60(%rbp),%eax\n  403a2f:\t88 02                \tmov    %al,(%rdx)\n  403a31:\te9 19 01 00 00       \tjmp    403b4f <vxReadRectangle+0x4ed>\n  403a36:\t83 7d c8 00          \tcmpl   $0x0,-0x38(%rbp)\n  403a3a:\t75 36                \tjne    403a72 <vxReadRectangle+0x410>\n  403a3c:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n  403a3f:\t0f af 45 e8          \timul   -0x18(%rbp),%eax\n  403a43:\t48 63 d0             \tmovslq %eax,%rdx\n  403a46:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  403a49:\t0f af 45 e4          \timul   -0x1c(%rbp),%eax\n  403a4d:\t48 98                \tcltq   \n  403a4f:\t48 01 c2             \tadd    %rax,%rdx\n  403a52:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  403a56:\t48 01 d0             \tadd    %rdx,%rax\n  403a59:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n  403a5c:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n  403a60:\t48 8b 55 20          \tmov    0x20(%rbp),%rdx\n  403a64:\t48 01 ca             \tadd    %rcx,%rdx\n  403a67:\t0f b7 00             \tmovzwl (%rax),%eax\n  403a6a:\t66 89 02             \tmov    %ax,(%rdx)\n  403a6d:\te9 dd 00 00 00       \tjmp    403b4f <vxReadRectangle+0x4ed>\n  403a72:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  403a75:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n  403a79:\t48 8b 45 20          \tmov    0x20(%rbp),%rax\n  403a7d:\t48 01 c2             \tadd    %rax,%rdx\n  403a80:\t0f b7 45 a0          \tmovzwl -0x60(%rbp),%eax\n  403a84:\t66 89 02             \tmov    %ax,(%rdx)\n  403a87:\te9 c3 00 00 00       \tjmp    403b4f <vxReadRectangle+0x4ed>\n  403a8c:\t83 7d c8 00          \tcmpl   $0x0,-0x38(%rbp)\n  403a90:\t75 38                \tjne    403aca <vxReadRectangle+0x468>\n  403a92:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n  403a95:\t0f af 45 e8          \timul   -0x18(%rbp),%eax\n  403a99:\t48 63 d0             \tmovslq %eax,%rdx\n  403a9c:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  403a9f:\t0f af 45 e4          \timul   -0x1c(%rbp),%eax\n  403aa3:\t48 98                \tcltq   \n  403aa5:\t48 01 c2             \tadd    %rax,%rdx\n  403aa8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  403aac:\t48 01 d0             \tadd    %rdx,%rax\n  403aaf:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n  403ab2:\t48 8d 0c 95 00 00 00 \tlea    0x0(,%rdx,4),%rcx\n  403ab9:\t00 \n  403aba:\t48 8b 55 20          \tmov    0x20(%rbp),%rdx\n  403abe:\t48 01 ca             \tadd    %rcx,%rdx\n  403ac1:\t8b 00                \tmov    (%rax),%eax\n  403ac3:\t89 02                \tmov    %eax,(%rdx)\n  403ac5:\te9 85 00 00 00       \tjmp    403b4f <vxReadRectangle+0x4ed>\n  403aca:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  403acd:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n  403ad4:\t00 \n  403ad5:\t48 8b 45 20          \tmov    0x20(%rbp),%rax\n  403ad9:\t48 01 c2             \tadd    %rax,%rdx\n  403adc:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n  403adf:\t89 02                \tmov    %eax,(%rdx)\n  403ae1:\teb 6c                \tjmp    403b4f <vxReadRectangle+0x4ed>\n  403ae3:\t83 7d c8 00          \tcmpl   $0x0,-0x38(%rbp)\n  403ae7:\t75 39                \tjne    403b22 <vxReadRectangle+0x4c0>\n  403ae9:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n  403aec:\t0f af 45 e8          \timul   -0x18(%rbp),%eax\n  403af0:\t48 63 d0             \tmovslq %eax,%rdx\n  403af3:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  403af6:\t0f af 45 e4          \timul   -0x1c(%rbp),%eax\n  403afa:\t48 98                \tcltq   \n  403afc:\t48 01 c2             \tadd    %rax,%rdx\n  403aff:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  403b03:\t48 01 c2             \tadd    %rax,%rdx\n  403b06:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  403b09:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n  403b10:\t00 \n  403b11:\t48 8b 45 20          \tmov    0x20(%rbp),%rax\n  403b15:\t48 01 c8             \tadd    %rcx,%rax\n  403b18:\tf3 0f 10 02          \tmovss  (%rdx),%xmm0\n  403b1c:\tf3 0f 11 00          \tmovss  %xmm0,(%rax)\n  403b20:\teb 2d                \tjmp    403b4f <vxReadRectangle+0x4ed>\n  403b22:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n  403b26:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n  403b2a:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  403b2d:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n  403b34:\t00 \n  403b35:\t48 8b 45 20          \tmov    0x20(%rbp),%rax\n  403b39:\t48 01 c2             \tadd    %rax,%rdx\n  403b3c:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n  403b40:\tf3 0f 10 00          \tmovss  (%rax),%xmm0\n  403b44:\tf3 0f 11 02          \tmovss  %xmm0,(%rdx)\n  403b48:\teb 05                \tjmp    403b4f <vxReadRectangle+0x4ed>\n  403b4a:\te8 41 e5 ff ff       \tcall   402090 <abort@plt>\n  403b4f:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n  403b53:\t83 45 f4 01          \taddl   $0x1,-0xc(%rbp)\n  403b57:\t8b 45 10             \tmov    0x10(%rbp),%eax\n  403b5a:\t39 45 f8             \tcmp    %eax,-0x8(%rbp)\n  403b5d:\t0f 8e d6 fd ff ff    \tjle    403939 <vxReadRectangle+0x2d7>\n  403b63:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n  403b67:\t8b 45 18             \tmov    0x18(%rbp),%eax\n  403b6a:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n  403b6d:\t0f 8e 8e fd ff ff    \tjle    403901 <vxReadRectangle+0x29f>\n  403b73:\teb 05                \tjmp    403b7a <vxReadRectangle+0x518>\n  403b75:\te8 16 e5 ff ff       \tcall   402090 <abort@plt>\n  403b7a:\t90                   \tnop\n  403b7b:\tc9                   \tleave  \n  403b7c:\tc3                   \tret    ", "code_s": "void vxReadRectangle(long <span class=\"supfact\">param_1</span>, int *<span class=\"supfact\">param_2</span>,\n                     int *<span class=\"supfact\">param_3</span>, uint <span class=\"supfact\">param_4</span>,\n                     int <span class=\"supfact\">param_5</span>, int <span class=\"supfact\">param_6</span>,\n                     int <span class=\"supfact\">param_7</span>, int <span class=\"supfact\">param_8</span>,\n                     long <span class=\"supfact\">param_9</span>) {\n  undefined8 <span class=\"supfact\">local_68</span>;\n  undefined8 <span class=\"supfact\">local_60</span>;\n  int <span class=\"supfact\">local_50</span>;\n  int <span class=\"supfact\">local_4c</span>;\n  undefined8 *<span class=\"supfact\">local_48</span>;\n  int <span class=\"supfact\">local_40</span>;\n  int <span class=\"supfact\">local_3c</span>;\n  int <span class=\"supfact\">local_38</span>;\n  int <span class=\"supfact\">local_34</span>;\n  long <span class=\"supfact\">local_30</span>;\n  int <span class=\"supfact\">local_24</span>;\n  int <span class=\"supfact\">local_20</span>;\n  int <span class=\"supfact\">local_1c</span>;\n  int <span class=\"supfact\">local_18</span>;\n  uint <span class=\"supfact\">local_14</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_18</span> = *<span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">param_2</span>[Number];\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_2</span>[Number];\n  <span class=\"supfact\">local_24</span> = <span class=\"supfact\">param_2</span>[Number];\n  <span class=\"supfact\">local_14</span> = Number;\n  <span class=\"supfact\">local_30</span> = <span class=\"supfact\">param_1</span>;\n  if ((*<span class=\"supfact\">param_3</span> == Number) ||\n      (*<span class=\"supfact\">param_3</span> == Number)) {\n    for (<span class=\"supfact\">local_c</span> = -<span class=\"supfact\">param_8</span>;\n         <span class=\"supfact\">local_c</span> &lt; = <span class=\"supfact\">param_8</span>;\n         <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n      <span class=\"supfact\">local_4c</span> =\n          <span class=\"supfact\">param_6</span> + <span class=\"supfact\">local_c</span>;\n      if (<span class=\"supfact\">local_4c</span> & lt; Number) {\n        <span class=\"supfact\">local_4c</span> = Number;\n      } else if (<span class=\"supfact\">local_1c</span> &lt; = <span class=\"supfact\">local_4c</span>) {\n        <span class=\"supfact\">local_4c</span> = <span class=\"supfact\">local_1c</span> + -Number;\n      }\n      for (<span class=\"supfact\">local_10</span> = -<span class=\"supfact\">param_7</span>;\n           <span class=\"supfact\">local_10</span> &lt; = <span class=\"supfact\">param_7</span>;\n           <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n        <span class=\"supfact\">local_50</span> =\n            <span class=\"supfact\">param_5</span> + <span class=\"supfact\">local_10</span>;\n        if (<span class=\"supfact\">local_50</span> & lt; Number) {\n          <span class=\"supfact\">local_50</span> = Number;\n        } else if (<span class=\"supfact\">local_18</span> &lt; = <span class=\"supfact\">local_50</span>) {\n          <span class=\"supfact\">local_50</span> = <span class=\"supfact\">local_18</span> + -Number;\n        }\n        if (<span class=\"supfact\">param_4</span> == Number) {\n          *(undefined *)(<span class=\"supfact\">param_9</span> +\n                         (ulong)<span class=\"supfact\">local_14</span>) =\n              *(undefined *)(<span class=\"supfact\">param_1</span> +\n                             (long)(<span class=\"supfact\">local_4c</span> *\n                                    <span class=\"supfact\">local_20</span>) +\n                             (long)(<span class=\"supfact\">local_50</span> *\n                                    <span class=\"supfact\">local_24</span>));\n        } else {\n          if (Number & lt; <span class=\"supfact\">param_4</span>) {\n          LAB_004038a1:\n            abort();\n          }\n          if (<span class=\"supfact\">param_4</span> != Number) {\n            if (Number & lt; <span class=\"supfact\">param_4</span>)\n              goto LAB_004038a1;\n            if (<span class=\"supfact\">param_4</span> != Number) {\n              if (Number & lt; <span class=\"supfact\">param_4</span>)\n                goto LAB_004038a1;\n              if (<span class=\"supfact\">param_4</span> != Number) {\n                if (Number & lt; <span class=\"supfact\">param_4</span>)\n                  goto LAB_004038a1;\n                if (<span class=\"supfact\">param_4</span> == Number) {\n                  *(undefined4 *)(<span class=\"supfact\">param_9</span> +\n                                  (ulong)<span class=\"supfact\">local_14</span> * Number) =\n                      *(undefined4 *)((long)(<span class=\"supfact\">local_4c</span> *\n                                             <span class=\"supfact\">local_20</span>) +\n                                      (long)(<span class=\"supfact\">local_50</span> *\n                                             <span class=\"supfact\">local_24</span>) +\n                                      <span class=\"supfact\">param_1</span>);\n                  goto LAB_004038a6;\n                }\n                if (<span class=\"supfact\">param_4</span> != Number)\n                  goto LAB_004038a1;\n              }\n              *(undefined4 *)(<span class=\"supfact\">param_9</span> +\n                              (ulong)<span class=\"supfact\">local_14</span> * Number) =\n                  *(undefined4 *)(<span class=\"supfact\">param_1</span> +\n                                  (long)(<span class=\"supfact\">local_4c</span> *\n                                         <span class=\"supfact\">local_20</span>) +\n                                  (long)(<span class=\"supfact\">local_50</span> *\n                                         <span class=\"supfact\">local_24</span>));\n              goto LAB_004038a6;\n            }\n          }\n          *(undefined2 *)(<span class=\"supfact\">param_9</span> +\n                          (ulong)<span class=\"supfact\">local_14</span> * Number) =\n              *(undefined2 *)(<span class=\"supfact\">param_1</span> +\n                              (long)(<span class=\"supfact\">local_4c</span> *\n                                     <span class=\"supfact\">local_20</span>) +\n                              (long)(<span class=\"supfact\">local_50</span> *\n                                     <span class=\"supfact\">local_24</span>));\n        }\n      LAB_004038a6:\n        <span class=\"supfact\">local_14</span> = <span class=\"supfact\">local_14</span> + Number;\n      }\n    }\n  } else {\n    if (*<span class=\"supfact\">param_3</span> != Number) {\n      abort();\n    }\n    <span class=\"supfact\">local_60</span> =\n        *(undefined8 *)(<span class=\"supfact\">param_3</span> + Number);\n    <span class=\"supfact\">local_68</span> =\n        *(undefined8 *)(<span class=\"supfact\">param_3</span> + Number);\n    for (<span class=\"supfact\">local_c</span> = -<span class=\"supfact\">param_8</span>;\n         <span class=\"supfact\">local_c</span> &lt; = <span class=\"supfact\">param_8</span>;\n         <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n      <span class=\"supfact\">local_34</span> =\n          <span class=\"supfact\">param_6</span> + <span class=\"supfact\">local_c</span>;\n      if ((<span class=\"supfact\">local_34</span> & lt; Number) ||\n          (<span class=\"supfact\">local_1c</span> &lt; = <span class=\"supfact\">local_34</span>)) {\n        <span class=\"supfact\">local_38</span> = Number;\n      } else {\n        <span class=\"supfact\">local_38</span> = Number;\n      }\n      for (<span class=\"supfact\">local_10</span> = -<span class=\"supfact\">param_7</span>;\n           <span class=\"supfact\">local_10</span> &lt; = <span class=\"supfact\">param_7</span>;\n           <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n        <span class=\"supfact\">local_3c</span> =\n            <span class=\"supfact\">param_5</span> + <span class=\"supfact\">local_10</span>;\n        if (((<span class=\"supfact\">local_38</span> == Number) & amp; &amp;\n             (-Number & lt; <span class=\"supfact\">local_3c</span>)) &\n                amp;\n            &amp; (<span class=\"supfact\">local_3c</span> & lt; <span class=\"supfact\">local_18</span>)) {\n          <span class=\"supfact\">local_40</span> = Number;\n        } else {\n          <span class=\"supfact\">local_40</span> = Number;\n        }\n        if (<span class=\"supfact\">param_4</span> == Number) {\n          if (<span class=\"supfact\">local_40</span> == Number) {\n            *(undefined *)(<span class=\"supfact\">param_9</span> +\n                           (ulong)<span class=\"supfact\">local_14</span>) =\n                *(undefined *)(<span class=\"supfact\">param_1</span> +\n                               (long)(<span class=\"supfact\">local_34</span> *\n                                      <span class=\"supfact\">local_20</span>) +\n                               (long)(<span class=\"supfact\">local_3c</span> *\n                                      <span class=\"supfact\">local_24</span>));\n          } else {\n            *(undefined *)((ulong)<span class=\"supfact\">local_14</span> +\n                           <span class=\"supfact\">param_9</span>) =\n                (undefined)<span class=\"supfact\">local_68</span>;\n          }\n        } else {\n          if (Number & lt; <span class=\"supfact\">param_4</span>) {\n          LAB_00403b4a:\n            abort();\n          }\n          if (<span class=\"supfact\">param_4</span> != Number) {\n            if (Number & lt; <span class=\"supfact\">param_4</span>)\n              goto LAB_00403b4a;\n            if (<span class=\"supfact\">param_4</span> != Number) {\n              if (Number & lt; <span class=\"supfact\">param_4</span>)\n                goto LAB_00403b4a;\n              if (<span class=\"supfact\">param_4</span> != Number) {\n                if (Number & lt; <span class=\"supfact\">param_4</span>)\n                  goto LAB_00403b4a;\n                if (<span class=\"supfact\">param_4</span> == Number) {\n                  if (<span class=\"supfact\">local_40</span> == Number) {\n                    *(undefined4 *)(<span class=\"supfact\">param_9</span> +\n                                    (ulong)<span class=\"supfact\">local_14</span> * Number) =\n                        *(undefined4 *)((long)(<span class=\"supfact\">local_34</span> *\n                                               <span class=\"supfact\">local_20</span>) +\n                                        (long)(<span class=\"supfact\">local_3c</span> *\n                                               <span class=\"supfact\">local_24</span>) +\n                                        <span class=\"supfact\">param_1</span>);\n                  } else {\n                    <span class=\"supfact\">local_48</span> = &amp;\n                    <span class=\"supfact\">local_68</span>;\n                    *(undefined4 *)((ulong)<span class=\"supfact\">local_14</span> * Number +\n                                    <span class=\"supfact\">param_9</span>) =\n                        (undefined4)<span class=\"supfact\">local_68</span>;\n                  }\n                  goto LAB_00403b4f;\n                }\n                if (<span class=\"supfact\">param_4</span> != Number)\n                  goto LAB_00403b4a;\n              }\n              if (<span class=\"supfact\">local_40</span> == Number) {\n                *(undefined4 *)(<span class=\"supfact\">param_9</span> +\n                                (ulong)<span class=\"supfact\">local_14</span> * Number) =\n                    *(undefined4 *)(<span class=\"supfact\">param_1</span> +\n                                    (long)(<span class=\"supfact\">local_34</span> *\n                                           <span class=\"supfact\">local_20</span>) +\n                                    (long)(<span class=\"supfact\">local_3c</span> *\n                                           <span class=\"supfact\">local_24</span>));\n              } else {\n                *(undefined4 *)((ulong)<span class=\"supfact\">local_14</span> * Number +\n                                <span class=\"supfact\">param_9</span>) =\n                    (undefined4)<span class=\"supfact\">local_68</span>;\n              }\n              goto LAB_00403b4f;\n            }\n          }\n          if (<span class=\"supfact\">local_40</span> == Number) {\n            *(undefined2 *)(<span class=\"supfact\">param_9</span> +\n                            (ulong)<span class=\"supfact\">local_14</span> * Number) =\n                *(undefined2 *)(<span class=\"supfact\">param_1</span> +\n                                (long)(<span class=\"supfact\">local_34</span> *\n                                       <span class=\"supfact\">local_20</span>) +\n                                (long)(<span class=\"supfact\">local_3c</span> *\n                                       <span class=\"supfact\">local_24</span>));\n          } else {\n            *(undefined2 *)((ulong)<span class=\"supfact\">local_14</span> * Number +\n                            <span class=\"supfact\">param_9</span>) =\n                (undefined2)<span class=\"supfact\">local_68</span>;\n          }\n        }\n      LAB_00403b4f:\n        <span class=\"supfact\">local_14</span> = <span class=\"supfact\">local_14</span> + Number;\n      }\n    }\n  }\n  return;\n}", "code_t": "void vxReadRectangle(void *<span class=\"supfact\">base</span>,\n                     vx_imagepatch_addressing_t *<span class=\"supfact\">addr</span>,\n                     vx_border_t *<span class=\"supfact\">borders</span>,\n                     vx_df_image <span class=\"supfact\">type</span>,\n                     vx_uint32 <span class=\"supfact\">center_x</span>,\n                     vx_uint32 <span class=\"supfact\">center_y</span>,\n                     vx_uint32 <span class=\"supfact\">radius_x</span>,\n                     vx_uint32 <span class=\"supfact\">radius_y</span>,\n                     void *<span class=\"supfact\">destination</span>) {\n  vx_uint32 <span class=\"supfact\">center_y</span> - local;\n  vx_uint32 <span class=\"supfact\">center_x</span> - local;\n  vx_df_image <span class=\"supfact\">type</span> - local;\n  vx_border_t *<span class=\"supfact\">borders</span> - local;\n  vx_imagepatch_addressing_t *<span class=\"supfact\">addr</span> - local;\n  void *<span class=\"supfact\">base</span> - local;\n  vx_pixel_value_t <span class=\"supfact\">cval</span>;\n  vx_int32 <span class=\"supfact\">x</span>;\n  vx_int32 <span class=\"supfact\">y</span>;\n  vx_uint8 *<span class=\"supfact\">p</span>;\n  int <span class=\"supfact\">ccase</span>;\n  vx_int32 <span class=\"supfact\">x_1</span>;\n  int <span class=\"supfact\">ccase_y</span>;\n  vx_int32 <span class=\"supfact\">y_1</span>;\n  vx_uint8 *<span class=\"supfact\">ptr</span>;\n  vx_int32 <span class=\"supfact\">stride_x</span>;\n  vx_int32 <span class=\"supfact\">stride_y</span>;\n  vx_int32 <span class=\"supfact\">height</span>;\n  vx_int32 <span class=\"supfact\">width</span>;\n  vx_uint32 <span class=\"supfact\">dest_index</span>;\n  vx_int32 <span class=\"supfact\">kx</span>;\n  vx_int32 <span class=\"supfact\">ky</span>;\n  <span class=\"supfact\">width</span> = <span class=\"supfact\">addr</span> - &gt;\n  dim_x;\n  <span class=\"supfact\">height</span> = <span class=\"supfact\">addr</span> - &gt;\n  dim_y;\n  <span class=\"supfact\">stride_y</span> = <span class=\"supfact\">addr</span> - &gt;\n  <span class=\"supfact\">stride_y</span>;\n  <span class=\"supfact\">stride_x</span> = <span class=\"supfact\">addr</span> - &gt;\n  <span class=\"supfact\">stride_x</span>;\n  <span class=\"supfact\">dest_index</span> = Number;\n  <span class=\"supfact\">ptr</span> = (vx_uint8 *)<span class=\"supfact\">base</span>;\n  if ((<span class=\"supfact\">borders</span> - &gt; mode == Number) ||\n      (<span class=\"supfact\">borders</span> - &gt; mode == Number)) {\n    for (<span class=\"supfact\">ky</span> = -<span class=\"supfact\">radius_y</span>; <span class=\"supfact\">ky</span> &lt;\n         = (int)<span class=\"supfact\">radius_y</span>;\n         <span class=\"supfact\">ky</span> = <span class=\"supfact\">ky</span> + Number) {\n      <span class=\"supfact\">y</span> = <span class=\"supfact\">center_y</span> + <span class=\"supfact\">ky</span>;\n      if (<span class=\"supfact\">y</span> & lt; Number) {\n        <span class=\"supfact\">y</span> = Number;\n      } else if (<span class=\"supfact\">height</span> &lt; = <span class=\"supfact\">y</span>) {\n        <span class=\"supfact\">y</span> = <span class=\"supfact\">height</span> - Number;\n      }\n      for (<span class=\"supfact\">kx</span> = -<span class=\"supfact\">radius_x</span>;\n           <span class=\"supfact\">kx</span> &lt; = (int)<span class=\"supfact\">radius_x</span>;\n           <span class=\"supfact\">kx</span> = <span class=\"supfact\">kx</span> + Number) {\n        <span class=\"supfact\">x</span> = <span class=\"supfact\">center_x</span> + <span class=\"supfact\">kx</span>;\n        if (<span class=\"supfact\">x</span> & lt; Number) {\n          <span class=\"supfact\">x</span> = Number;\n        } else if (<span class=\"supfact\">width</span> &lt; = <span class=\"supfact\">x</span>) {\n          <span class=\"supfact\">x</span> = <span class=\"supfact\">width</span> - Number;\n        }\n        if (<span class=\"supfact\">type</span> == Number) {\n          *(undefined *)((long)<span class=\"supfact\">destination</span> +\n                         (ulong)<span class=\"supfact\">dest_index</span>) =\n              *(undefined *)((long)<span class=\"supfact\">base</span> +\n                             (long)(<span class=\"supfact\">y</span> *\n                                    <span class=\"supfact\">stride_y</span>) +\n                             (long)(<span class=\"supfact\">x</span> *\n                                    <span class=\"supfact\">stride_x</span>));\n        } else {\n          if (Number & lt; <span class=\"supfact\">type</span>) {\n          LAB_004038a1:\n            abort();\n          }\n          if (<span class=\"supfact\">type</span> != Number) {\n            if (Number & lt; <span class=\"supfact\">type</span>)\n              goto LAB_004038a1;\n            if (<span class=\"supfact\">type</span> != Number) {\n              if (Number & lt; <span class=\"supfact\">type</span>)\n                goto LAB_004038a1;\n              if (<span class=\"supfact\">type</span> != Number) {\n                if (Number & lt; <span class=\"supfact\">type</span>)\n                  goto LAB_004038a1;\n                if (<span class=\"supfact\">type</span> == Number) {\n                  *(undefined4 *)((long)<span class=\"supfact\">destination</span> +\n                                  (ulong)<span class=\"supfact\">dest_index</span> * Number) =\n                      *(undefined4 *)((long)(<span class=\"supfact\">y</span> *\n                                             <span class=\"supfact\">stride_y</span>) +\n                                      (long)(<span class=\"supfact\">x</span> *\n                                             <span class=\"supfact\">stride_x</span>) +\n                                      (long)<span class=\"supfact\">base</span>);\n                  goto LAB_004038a6;\n                }\n                if (<span class=\"supfact\">type</span> != Number)\n                  goto LAB_004038a1;\n              }\n              *(undefined4 *)((long)<span class=\"supfact\">destination</span> +\n                              (ulong)<span class=\"supfact\">dest_index</span> * Number) =\n                  *(undefined4 *)((long)<span class=\"supfact\">base</span> +\n                                  (long)(<span class=\"supfact\">y</span> *\n                                         <span class=\"supfact\">stride_y</span>) +\n                                  (long)(<span class=\"supfact\">x</span> *\n                                         <span class=\"supfact\">stride_x</span>));\n              goto LAB_004038a6;\n            }\n          }\n          *(undefined2 *)((long)<span class=\"supfact\">destination</span> +\n                          (ulong)<span class=\"supfact\">dest_index</span> * Number) =\n              *(undefined2 *)((long)<span class=\"supfact\">base</span> +\n                              (long)(<span class=\"supfact\">y</span> *\n                                     <span class=\"supfact\">stride_y</span>) +\n                              (long)(<span class=\"supfact\">x</span> *\n                                     <span class=\"supfact\">stride_x</span>));\n        }\n      LAB_004038a6:\n        <span class=\"supfact\">dest_index</span> = <span class=\"supfact\">dest_index</span> + Number;\n      }\n    }\n  } else {\n    if (<span class=\"supfact\">borders</span> - &gt; mode != Number) {\n      abort();\n    }\n    <span class=\"supfact\">cval</span>._8_8_ =\n        *(undefined8 *)((long)&amp; <span class=\"supfact\">borders</span> - &gt;\n                        constant_value + Number);\n    <span class=\"supfact\">cval</span>._0_8_ = *(undefined8 *)&amp;\n    <span class=\"supfact\">borders</span> - &gt;\n    constant_value;\n    for (<span class=\"supfact\">ky</span> = -<span class=\"supfact\">radius_y</span>; <span class=\"supfact\">ky</span> &lt;\n         = (int)<span class=\"supfact\">radius_y</span>;\n         <span class=\"supfact\">ky</span> = <span class=\"supfact\">ky</span> + Number) {\n      <span class=\"supfact\">y_1</span> = <span class=\"supfact\">center_y</span> + <span class=\"supfact\">ky</span>;\n      if ((<span class=\"supfact\">y_1</span> & lt; Number) ||\n          (<span class=\"supfact\">height</span> &lt; = <span class=\"supfact\">y_1</span>)) {\n        <span class=\"supfact\">ccase_y</span> = Number;\n      } else {\n        <span class=\"supfact\">ccase_y</span> = Number;\n      }\n      for (<span class=\"supfact\">kx</span> = -<span class=\"supfact\">radius_x</span>;\n           <span class=\"supfact\">kx</span> &lt; = (int)<span class=\"supfact\">radius_x</span>;\n           <span class=\"supfact\">kx</span> = <span class=\"supfact\">kx</span> + Number) {\n        <span class=\"supfact\">x_1</span> = <span class=\"supfact\">center_x</span> + <span class=\"supfact\">kx</span>;\n        if (((<span class=\"supfact\">ccase_y</span> == Number) & amp; &amp;\n             (-Number & lt; <span class=\"supfact\">x_1</span>)) &\n                amp;\n            &amp; (<span class=\"supfact\">x_1</span> & lt; <span class=\"supfact\">width</span>)) {\n          <span class=\"supfact\">ccase</span> = Number;\n        } else {\n          <span class=\"supfact\">ccase</span> = Number;\n        }\n        if (<span class=\"supfact\">type</span> == Number) {\n          if (<span class=\"supfact\">ccase</span> == Number) {\n            *(undefined *)((long)<span class=\"supfact\">destination</span> +\n                           (ulong)<span class=\"supfact\">dest_index</span>) =\n                *(undefined *)((long)<span class=\"supfact\">base</span> +\n                               (long)(<span class=\"supfact\">y_1</span> *\n                                      <span class=\"supfact\">stride_y</span>) +\n                               (long)(<span class=\"supfact\">x_1</span> *\n                                      <span class=\"supfact\">stride_x</span>));\n          } else {\n            *(vx_uint8 *)((ulong)<span class=\"supfact\">dest_index</span> +\n                          (long)<span class=\"supfact\">destination</span>) =\n                <span class=\"supfact\">cval</span>.RGB[Number];\n          }\n        } else {\n          if (Number & lt; <span class=\"supfact\">type</span>) {\n          LAB_00403b4a:\n            abort();\n          }\n          if (<span class=\"supfact\">type</span> != Number) {\n            if (Number & lt; <span class=\"supfact\">type</span>)\n              goto LAB_00403b4a;\n            if (<span class=\"supfact\">type</span> != Number) {\n              if (Number & lt; <span class=\"supfact\">type</span>)\n                goto LAB_00403b4a;\n              if (<span class=\"supfact\">type</span> != Number) {\n                if (Number & lt; <span class=\"supfact\">type</span>)\n                  goto LAB_00403b4a;\n                if (<span class=\"supfact\">type</span> == Number) {\n                  if (<span class=\"supfact\">ccase</span> == Number) {\n                    *(undefined4 *)((long)<span class=\"supfact\">destination</span> +\n                                    (ulong)<span class=\"supfact\">dest_index</span> *\n                                        Number) =\n                        *(undefined4 *)((long)(<span class=\"supfact\">y_1</span> *\n                                               <span class=\"supfact\">stride_y</span>) +\n                                        (long)(<span class=\"supfact\">x_1</span> *\n                                               <span class=\"supfact\">stride_x</span>) +\n                                        (long)<span class=\"supfact\">base</span>);\n                  } else {\n                    <span class=\"supfact\">p</span> = (vx_uint8 *)&amp;\n                    <span class=\"supfact\">cval</span>;\n                    *(vx_uint8(*)[Number])((ulong)<span class=\"supfact\">dest_index</span> *\n                                               Number +\n                                           (long)<span class=\"supfact\">destination</span>) =\n                        <span class=\"supfact\">cval</span>.RGBX;\n                  }\n                  goto LAB_00403b4f;\n                }\n                if (<span class=\"supfact\">type</span> != Number)\n                  goto LAB_00403b4a;\n              }\n              if (<span class=\"supfact\">ccase</span> == Number) {\n                *(undefined4 *)((long)<span class=\"supfact\">destination</span> +\n                                (ulong)<span class=\"supfact\">dest_index</span> * Number) =\n                    *(undefined4 *)((long)<span class=\"supfact\">base</span> +\n                                    (long)(<span class=\"supfact\">y_1</span> *\n                                           <span class=\"supfact\">stride_y</span>) +\n                                    (long)(<span class=\"supfact\">x_1</span> *\n                                           <span class=\"supfact\">stride_x</span>));\n              } else {\n                *(vx_uint8(*)[Number])((ulong)<span class=\"supfact\">dest_index</span> *\n                                           Number +\n                                       (long)<span class=\"supfact\">destination</span>) =\n                    <span class=\"supfact\">cval</span>.RGBX;\n              }\n              goto LAB_00403b4f;\n            }\n          }\n          if (<span class=\"supfact\">ccase</span> == Number) {\n            *(undefined2 *)((long)<span class=\"supfact\">destination</span> +\n                            (ulong)<span class=\"supfact\">dest_index</span> * Number) =\n                *(undefined2 *)((long)<span class=\"supfact\">base</span> +\n                                (long)(<span class=\"supfact\">y_1</span> *\n                                       <span class=\"supfact\">stride_y</span>) +\n                                (long)(<span class=\"supfact\">x_1</span> *\n                                       <span class=\"supfact\">stride_x</span>));\n          } else {\n            *(vx_uint16 *)((ulong)<span class=\"supfact\">dest_index</span> * Number +\n                           (long)<span class=\"supfact\">destination</span>) =\n                <span class=\"supfact\">cval</span>.U16;\n          }\n        }\n      LAB_00403b4f:\n        <span class=\"supfact\">dest_index</span> = <span class=\"supfact\">dest_index</span> + Number;\n      }\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "ipp_attribute_t * *", "pred_name": "attr", "ref_name": "base", "ref_type": "void * *"}, {"name": "param_2", "type": "char * *", "pred_name": "value", "ref_name": "addr", "ref_type": "vx_imagepatch_addressing_t * *"}, {"name": "param_3", "type": "int * *", "pred_name": "__unk__", "ref_name": "borders", "ref_type": "vx_border_t * *"}, {"name": "param_4", "type": "int", "pred_name": "__unk__", "ref_name": "type", "ref_type": "vx_df_image"}, {"name": "param_5", "type": "int", "pred_name": "__unk__", "ref_name": "center_x", "ref_type": "vx_uint32"}, {"name": "param_6", "type": "int", "pred_name": "__unk__", "ref_name": "center_y", "ref_type": "vx_uint32"}, {"name": "param_7", "type": "int", "pred_name": "__unk__", "ref_name": "radius_x", "ref_type": "vx_uint32"}, {"name": "param_8", "type": "int", "pred_name": "__unk__", "ref_name": "radius_y", "ref_type": "vx_uint32"}, {"name": "param_9", "type": "int * *", "pred_name": "__unk__", "ref_name": "destination", "ref_type": "void * *"}, {"name": "local_68", "type": "int * *", "pred_name": "__unk__", "ref_name": "cval", "ref_type": "vx_pixel_value_t"}, {"name": "local_60", "type": "int * *", "pred_name": "__unk__", "ref_name": "", "ref_type": "disappear"}, {"name": "local_50", "type": "int", "pred_name": "__unk__", "ref_name": "x", "ref_type": "vx_int32"}, {"name": "local_4c", "type": "int", "pred_name": "__unk__", "ref_name": "y", "ref_type": "vx_int32"}, {"name": "local_48", "type": "int * *", "pred_name": "__unk__", "ref_name": "p", "ref_type": "vx_uint8 * *"}, {"name": "local_40", "type": "int", "pred_name": "__unk__", "ref_name": "ccase", "ref_type": "int"}, {"name": "local_3c", "type": "int", "pred_name": "__unk__", "ref_name": "x_1", "ref_type": "vx_int32"}, {"name": "local_38", "type": "int", "pred_name": "__unk__", "ref_name": "ccase_y", "ref_type": "int"}, {"name": "local_34", "type": "int", "pred_name": "__unk__", "ref_name": "y_1", "ref_type": "vx_int32"}, {"name": "local_30", "type": "int * *", "pred_name": "__unk__", "ref_name": "ptr", "ref_type": "vx_uint8 * *"}, {"name": "local_24", "type": "int", "pred_name": "__unk__", "ref_name": "stride_x", "ref_type": "vx_int32"}, {"name": "local_20", "type": "int", "pred_name": "__unk__", "ref_name": "stride_y", "ref_type": "vx_int32"}, {"name": "local_1c", "type": "int", "pred_name": "__unk__", "ref_name": "height", "ref_type": "vx_int32"}, {"name": "local_18", "type": "int", "pred_name": "__unk__", "ref_name": "width", "ref_type": "vx_int32"}, {"name": "local_14", "type": "int", "pred_name": "__unk__", "ref_name": "dest_index", "ref_type": "vx_uint32"}, {"name": "local_10", "type": "int", "pred_name": "__unk__", "ref_name": "kx", "ref_type": "vx_int32"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "ky", "ref_type": "vx_int32"}], "body_in_train": false}, {"repo_owner": "jcmcclurg", "repo_name": "serverpower", "path": "jcmcclurg/serverpower/100c03e35788b03d72c72eaa5a1c49db5a83504509af3087365bde249051baed", "path_in_repo": "jcmcclurg/serverpower/utilities/intel_pcm/pcm-core.x", "objdump": "", "code_s": "void FUN_00404a4a(void) {\n  long <span class=\"supfact\">unaff_RBX</span>;\n  ios_base *<span class=\"supfact\">unaff_RBP</span>;\n  basic_stringbuf &lt;\n  char, std char_traits &lt;\n  char &gt;\n  , std allocator &lt;\n  char &gt;\n  &gt;\n  *<span class=\"supfact\">unaff_R12</span>;\n  void *<span class=\"supfact\">unaff_retaddr</span>;\n  undefined *<span class=\"supfact\">in_stack_00000020</span>;\n  void *<span class=\"supfact\">in_stack_00000040</span>;\n  undefined8 <span class=\"supfact\">in_stack_00000060</span>;\n  std __cxx11 basic_stringbuf &lt;\n  char, std char_traits &lt;\n  char &gt;\n  , std allocator &lt;\n  char &gt;\n  &gt;\n  ~basic_stringbuf(<span class=\"supfact\">unaff_R12</span>);\n  *(undefined8 *)((long)&amp; stack0x00000060 +\n                              *(long *)(<span class=\"supfact\">unaff_RBX</span> + -Number)) =\n      std __cxx11 basic_istringstream & lt;\n  char, std char_traits &lt;\n  char &gt;\n  , std allocator &lt;\n  char &gt;\n  &gt;\n  VTT._16_8_;\n  std ios_base ~ios_base(<span class=\"supfact\">unaff_RBP</span>);\n  if (<span class=\"supfact\">in_stack_00000040</span> != <span class=\"supfact\">unaff_retaddr</span>) {\n    operator.delete(<span class=\"supfact\">in_stack_00000040</span>);\n  }\n  if (<span class=\"supfact\">in_stack_00000020</span> != &amp; stack0x00000030) {\n    operator.delete(<span class=\"supfact\">in_stack_00000020</span>);\n  }\n  _Unwind_Resume();\n}", "code_t": "void FUN_00404a4a(undefined8 param_1, int param_2) {\n  long <span class=\"supfact\">unaff_RBX</span>;\n  ios_base *<span class=\"supfact\">unaff_RBP</span>;\n  basic_stringbuf &lt;\n  char, _std char_traits &lt;\n  char &gt;\n  , _std allocator &lt;\n  char &gt;\n  _ &gt;\n  *<span class=\"supfact\">unaff_R12</span>;\n  void *<span class=\"supfact\">unaff_retaddr</span>;\n  undefined *<span class=\"supfact\">in_stack_00000020</span>;\n  void *<span class=\"supfact\">in_stack_00000040</span>;\n  undefined8 <span class=\"supfact\">in_stack_00000060</span>;\n  std __cxx11 basic_stringbuf &lt;\n  char, _std char_traits &lt;\n  char &gt;\n  , _std allocator &lt;\n  char &gt;\n  _ &gt;\n  ~basic_stringbuf(<span class=\"supfact\">unaff_R12</span>, param_2);\n  *(undefined8 *)((long)&amp; stack0x00000060 +\n                              *(long *)(<span class=\"supfact\">unaff_RBX</span> + -Number)) =\n      std __cxx11 basic_istringstream & lt;\n  char, std char_traits &lt;\n  char &gt;\n  , std allocator &lt;\n  char &gt;\n  &gt;\n  VTT._16_8_;\n  std ios_base ~ios_base(<span class=\"supfact\">unaff_RBP</span>);\n  if (<span class=\"supfact\">in_stack_00000040</span> != <span class=\"supfact\">unaff_retaddr</span>) {\n    operator.delete(<span class=\"supfact\">in_stack_00000040</span>);\n  }\n  if (<span class=\"supfact\">in_stack_00000020</span> != &amp; stack0x00000030) {\n    operator.delete(<span class=\"supfact\">in_stack_00000020</span>);\n  }\n  _Unwind_Resume();\n}", "var": [{"name": "unaff_RBX", "type": "void * *", "pred_name": "unaff_RBX", "ref_name": "unaff_RBX", "ref_type": "long"}, {"name": "unaff_RBP", "type": "long", "pred_name": "unaff_RBP", "ref_name": "unaff_RBP", "ref_type": "ios_base * *"}, {"name": "unaff_R12", "type": "void * *", "pred_name": "unaff_R12", "ref_name": "unaff_R12", "ref_type": "basic_stringbuf&lt;char,_std::char_traits&lt;char&gt;,_std::allocator&lt;char&gt;_&gt; * *"}, {"name": "unaff_retaddr", "type": "undefined * *", "pred_name": "unaff_retaddr", "ref_name": "unaff_retaddr", "ref_type": "void * *"}, {"name": "in_stack_00000020", "type": "undefined * *", "pred_name": "in_stack_00000020", "ref_name": "in_stack_00000020", "ref_type": "undefined * *"}, {"name": "in_stack_00000040", "type": "undefined8", "pred_name": "in_stack_00000040", "ref_name": "in_stack_00000040", "ref_type": "void * *"}, {"name": "in_stack_00000060", "type": "undefined * *", "pred_name": "in_stack_00000060", "ref_name": "in_stack_00000060", "ref_type": "undefined8"}], "body_in_train": false}, {"repo_owner": "jcmcclurg", "repo_name": "serverpower", "path": "jcmcclurg/serverpower/100c03e35788b03d72c72eaa5a1c49db5a83504509af3087365bde249051baed", "path_in_repo": "jcmcclurg/serverpower/utilities/intel_pcm/pcm-core.x", "objdump": "", "code_s": "void FUN_00404a4a(void) {\n  long <span class=\"supfact\">unaff_RBX</span>;\n  ios_base *<span class=\"supfact\">unaff_RBP</span>;\n  basic_stringbuf &lt;\n  char, std char_traits &lt;\n  char &gt;\n  , std allocator &lt;\n  char &gt;\n  &gt;\n  *<span class=\"supfact\">unaff_R12</span>;\n  void *<span class=\"supfact\">unaff_retaddr</span>;\n  undefined *<span class=\"supfact\">in_stack_00000020</span>;\n  void *<span class=\"supfact\">in_stack_00000040</span>;\n  undefined8 <span class=\"supfact\">in_stack_00000060</span>;\n  std __cxx11 basic_stringbuf &lt;\n  char, std char_traits &lt;\n  char &gt;\n  , std allocator &lt;\n  char &gt;\n  &gt;\n  ~basic_stringbuf(<span class=\"supfact\">unaff_R12</span>);\n  *(undefined8 *)((long)&amp; stack0x00000060 +\n                              *(long *)(<span class=\"supfact\">unaff_RBX</span> + -Number)) =\n      std __cxx11 basic_istringstream & lt;\n  char, std char_traits &lt;\n  char &gt;\n  , std allocator &lt;\n  char &gt;\n  &gt;\n  VTT._16_8_;\n  std ios_base ~ios_base(<span class=\"supfact\">unaff_RBP</span>);\n  if (<span class=\"supfact\">in_stack_00000040</span> != <span class=\"supfact\">unaff_retaddr</span>) {\n    operator.delete(<span class=\"supfact\">in_stack_00000040</span>);\n  }\n  if (<span class=\"supfact\">in_stack_00000020</span> != &amp; stack0x00000030) {\n    operator.delete(<span class=\"supfact\">in_stack_00000020</span>);\n  }\n  _Unwind_Resume();\n}", "code_t": "void FUN_00404a4a(undefined8 param_1, int param_2) {\n  long <span class=\"supfact\">unaff_RBX</span>;\n  ios_base *<span class=\"supfact\">unaff_RBP</span>;\n  basic_stringbuf &lt;\n  char, _std char_traits &lt;\n  char &gt;\n  , _std allocator &lt;\n  char &gt;\n  _ &gt;\n  *<span class=\"supfact\">unaff_R12</span>;\n  void *<span class=\"supfact\">unaff_retaddr</span>;\n  undefined *<span class=\"supfact\">in_stack_00000020</span>;\n  void *<span class=\"supfact\">in_stack_00000040</span>;\n  undefined8 <span class=\"supfact\">in_stack_00000060</span>;\n  std __cxx11 basic_stringbuf &lt;\n  char, _std char_traits &lt;\n  char &gt;\n  , _std allocator &lt;\n  char &gt;\n  _ &gt;\n  ~basic_stringbuf(<span class=\"supfact\">unaff_R12</span>, param_2);\n  *(undefined8 *)((long)&amp; stack0x00000060 +\n                              *(long *)(<span class=\"supfact\">unaff_RBX</span> + -Number)) =\n      std __cxx11 basic_istringstream & lt;\n  char, std char_traits &lt;\n  char &gt;\n  , std allocator &lt;\n  char &gt;\n  &gt;\n  VTT._16_8_;\n  std ios_base ~ios_base(<span class=\"supfact\">unaff_RBP</span>);\n  if (<span class=\"supfact\">in_stack_00000040</span> != <span class=\"supfact\">unaff_retaddr</span>) {\n    operator.delete(<span class=\"supfact\">in_stack_00000040</span>);\n  }\n  if (<span class=\"supfact\">in_stack_00000020</span> != &amp; stack0x00000030) {\n    operator.delete(<span class=\"supfact\">in_stack_00000020</span>);\n  }\n  _Unwind_Resume();\n}", "var": [{"name": "unaff_RBX", "type": "void * *", "pred_name": "unaff_RBX", "ref_name": "unaff_RBX", "ref_type": "long"}, {"name": "unaff_RBP", "type": "long", "pred_name": "unaff_RBP", "ref_name": "unaff_RBP", "ref_type": "ios_base * *"}, {"name": "unaff_R12", "type": "void * *", "pred_name": "unaff_R12", "ref_name": "unaff_R12", "ref_type": "basic_stringbuf&lt;char,_std::char_traits&lt;char&gt;,_std::allocator&lt;char&gt;_&gt; * *"}, {"name": "unaff_retaddr", "type": "undefined * *", "pred_name": "unaff_retaddr", "ref_name": "unaff_retaddr", "ref_type": "void * *"}, {"name": "in_stack_00000020", "type": "undefined * *", "pred_name": "in_stack_00000020", "ref_name": "in_stack_00000020", "ref_type": "undefined * *"}, {"name": "in_stack_00000040", "type": "undefined8", "pred_name": "in_stack_00000040", "ref_name": "in_stack_00000040", "ref_type": "void * *"}, {"name": "in_stack_00000060", "type": "undefined * *", "pred_name": "in_stack_00000060", "ref_name": "in_stack_00000060", "ref_type": "undefined8"}], "body_in_train": false}, {"repo_owner": "wufixx", "repo_name": "android_kernel_xiaomi_msm8953_vince", "path": "wufixx/android_kernel_xiaomi_msm8953_vince/e20e40c14979637892394d8d220a1ffb64a1912d5eb640ba7ecb67aef438b696", "path_in_repo": "wufixx/android_kernel_xiaomi_msm8953_vince/tools/lib/traceevent/libtraceevent.so", "objdump": "000000000001176a <trace_seq_destroy>:\n   1176a:\t55                   \tpush   %rbp\n   1176b:\t48 89 e5             \tmov    %rsp,%rbp\n   1176e:\t48 83 ec 20          \tsub    $0x20,%rsp\n   11772:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   11776:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n   1177b:\t0f 84 c5 00 00 00    \tje     11846 <trace_seq_destroy+0xdc>\n   11781:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   11785:\t48 8b 00             \tmov    (%rax),%rax\n   11788:\tba ef be ad de       \tmov    $0xdeadbeef,%edx\n   1178d:\t48 39 d0             \tcmp    %rdx,%rax\n   11790:\t0f 94 c0             \tsete   %al\n   11793:\t0f b6 c0             \tmovzbl %al,%eax\n   11796:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n   11799:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n   1179d:\t0f 95 c0             \tsetne  %al\n   117a0:\t0f b6 c0             \tmovzbl %al,%eax\n   117a3:\t48 85 c0             \ttest   %rax,%rax\n   117a6:\t74 5c                \tje     11804 <trace_seq_destroy+0x9a>\n   117a8:\t8b 05 e6 dc 00 00    \tmov    0xdce6(%rip),%eax        # 1f494 <__warned.4241>\n   117ae:\t85 c0                \ttest   %eax,%eax\n   117b0:\t0f 94 c0             \tsete   %al\n   117b3:\t0f b6 c0             \tmovzbl %al,%eax\n   117b6:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n   117b9:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n   117bd:\t0f 95 c0             \tsetne  %al\n   117c0:\t0f b6 c0             \tmovzbl %al,%eax\n   117c3:\t48 85 c0             \ttest   %rax,%rax\n   117c6:\t74 23                \tje     117eb <trace_seq_destroy+0x81>\n   117c8:\t48 8b 05 29 d8 00 00 \tmov    0xd829(%rip),%rax        # 1eff8 <stderr@GLIBC_2.2.5>\n   117cf:\t48 8b 00             \tmov    (%rax),%rax\n   117d2:\t48 89 c1             \tmov    %rax,%rcx\n   117d5:\tba 29 00 00 00       \tmov    $0x29,%edx\n   117da:\tbe 01 00 00 00       \tmov    $0x1,%esi\n   117df:\t48 8d 3d 5a 82 00 00 \tlea    0x825a(%rip),%rdi        # 19a40 <__func__.5437+0x148>\n   117e6:\te8 95 2d ff ff       \tcall   4580 <fwrite@plt>\n   117eb:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n   117ef:\t0f 95 c0             \tsetne  %al\n   117f2:\t0f b6 c0             \tmovzbl %al,%eax\n   117f5:\t48 85 c0             \ttest   %rax,%rax\n   117f8:\t74 0a                \tje     11804 <trace_seq_destroy+0x9a>\n   117fa:\tc7 05 90 dc 00 00 01 \tmovl   $0x1,0xdc90(%rip)        # 1f494 <__warned.4241>\n   11801:\t00 00 00 \n   11804:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n   11808:\t0f 95 c0             \tsetne  %al\n   1180b:\t0f b6 c0             \tmovzbl %al,%eax\n   1180e:\t48 85 c0             \ttest   %rax,%rax\n   11811:\t74 0b                \tje     1181e <trace_seq_destroy+0xb4>\n   11813:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   11817:\tc7 40 14 01 00 00 00 \tmovl   $0x1,0x14(%rax)\n   1181e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   11822:\t8b 40 14             \tmov    0x14(%rax),%eax\n   11825:\t85 c0                \ttest   %eax,%eax\n   11827:\t75 20                \tjne    11849 <trace_seq_destroy+0xdf>\n   11829:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1182d:\t48 8b 00             \tmov    (%rax),%rax\n   11830:\t48 89 c7             \tmov    %rax,%rdi\n   11833:\te8 38 28 ff ff       \tcall   4070 <free@plt>\n   11838:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1183c:\tb9 ef be ad de       \tmov    $0xdeadbeef,%ecx\n   11841:\t48 89 08             \tmov    %rcx,(%rax)\n   11844:\teb 04                \tjmp    1184a <trace_seq_destroy+0xe0>\n   11846:\t90                   \tnop\n   11847:\teb 01                \tjmp    1184a <trace_seq_destroy+0xe0>\n   11849:\t90                   \tnop\n   1184a:\tc9                   \tleave  \n   1184b:\tc3                   \tret    ", "code_s": "void trace_seq_destroy(void **<span class=\"supfact\">param_1</span>) {\n  void *pvVar1;\n  if (<span class=\"supfact\">param_1</span> != (void **)Number) {\n    pvVar1 = *<span class=\"supfact\">param_1</span>;\n    if ((pvVar1 == (void *)Number) & amp; &amp; (DAT_0011f494 == Number)) {\n      fwrite(String, Number, Number, *(FILE **)PTR_stderr_0011eff8);\n      DAT_0011f494 = Number;\n    }\n    if (pvVar1 == (void *)Number) {\n      *(undefined4 *)((long)<span class=\"supfact\">param_1</span> + Number) = Number;\n    }\n    if (*(int *)((long)<span class=\"supfact\">param_1</span> + Number) == Number) {\n      free(*<span class=\"supfact\">param_1</span>);\n      *<span class=\"supfact\">param_1</span> = (void *)Number;\n    }\n  }\n  return;\n}", "code_t": "void trace_seq_destroy(trace_seq *<span class=\"supfact\">s</span>) {\n  bool bVar1;\n  trace_seq *<span class=\"supfact\">s</span> - local;\n  int __ret_warn_on;\n  int __ret_warn_once;\n  if (<span class=\"supfact\">s</span> != (trace_seq *)Number) {\n    bVar1 = <span class=\"supfact\">s</span> - &gt;\n    buffer == (char *)Number;\n    if ((bVar1)&amp; &amp; (__warned Number == Number)) {\n      fwrite(String, Number, Number, *(FILE **)PTR_stderr_0011eff8);\n      __warned Number = Number;\n    }\n    if (bVar1) {\n      <span class=\"supfact\">s</span> - &gt;\n      state = TRACE_SEQ__BUFFER_POISONED;\n    }\n    if (<span class=\"supfact\">s</span> - &gt; state == TRACE_SEQ__GOOD) {\n      free(<span class=\"supfact\">s</span> - &gt; buffer);\n      <span class=\"supfact\">s</span> - &gt;\n      buffer = (char *)Number;\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "trace_seq * *", "pred_name": "s", "ref_name": "s", "ref_type": "trace_seq * *"}], "body_in_train": true}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000000b22c <qemu_fdatasync>:\n    b22c:\t55                   \tpush   %rbp\n    b22d:\t48 89 e5             \tmov    %rsp,%rbp\n    b230:\t48 83 ec 20          \tsub    $0x20,%rsp\n    b234:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n    b237:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    b23e:\t00 00 \n    b240:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    b244:\t31 c0                \txor    %eax,%eax\n    b246:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    b249:\t89 c7                \tmov    %eax,%edi\n    b24b:\te8 80 ce ff ff       \tcall   80d0 <fdatasync@plt>\n    b250:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    b254:\t64 48 33 14 25 28 00 \txor    %fs:0x28,%rdx\n    b25b:\t00 00 \n    b25d:\t74 05                \tje     b264 <qemu_fdatasync+0x38>\n    b25f:\te8 2c d0 ff ff       \tcall   8290 <__stack_chk_fail@plt>\n    b264:\tc9                   \tleave  \n    b265:\tc3                   \tret    ", "code_s": "void qemu_fdatasync(int <span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  fdatasync(<span class=\"supfact\">param_1</span>);\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "code_t": "int qemu_fdatasync(int <span class=\"supfact\">fd</span>) {\n  long lVar1;\n  int iVar2;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">fd</span> - local;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  iVar2 = fdatasync(<span class=\"supfact\">fd</span>);\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return iVar2;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "n", "ref_name": "fd", "ref_type": "int"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "sudipjai", "repo_name": "openvx", "path": "sudipjai/openvx/7b10b5540c6c565a0283e382d0e734b2dcd4ba1bda3a4e826e17c9dd4a2f8065", "path_in_repo": "sudipjai/openvx//out/LINUX/x86_64/release/vx_query", "objdump": "0000000000404840 <__libc_csu_init>:\n  404840:\t41 57                \tpush   %r15\n  404842:\t49 89 d7             \tmov    %rdx,%r15\n  404845:\t41 56                \tpush   %r14\n  404847:\t49 89 f6             \tmov    %rsi,%r14\n  40484a:\t41 55                \tpush   %r13\n  40484c:\t41 89 fd             \tmov    %edi,%r13d\n  40484f:\t41 54                \tpush   %r12\n  404851:\t4c 8d 25 28 25 00 00 \tlea    0x2528(%rip),%r12        # 406d80 <__frame_dummy_init_array_entry>\n  404858:\t55                   \tpush   %rbp\n  404859:\t48 8d 2d 28 25 00 00 \tlea    0x2528(%rip),%rbp        # 406d88 <__do_global_dtors_aux_fini_array_entry>\n  404860:\t53                   \tpush   %rbx\n  404861:\t4c 29 e5             \tsub    %r12,%rbp\n  404864:\t48 83 ec 08          \tsub    $0x8,%rsp\n  404868:\te8 93 d7 ff ff       \tcall   402000 <_init>\n  40486d:\t48 c1 fd 03          \tsar    $0x3,%rbp\n  404871:\t74 1b                \tje     40488e <__libc_csu_init+0x4e>\n  404873:\t31 db                \txor    %ebx,%ebx\n  404875:\t0f 1f 00             \tnopl   (%rax)\n  404878:\t4c 89 fa             \tmov    %r15,%rdx\n  40487b:\t4c 89 f6             \tmov    %r14,%rsi\n  40487e:\t44 89 ef             \tmov    %r13d,%edi\n  404881:\t41 ff 14 dc          \tcall   *(%r12,%rbx,8)\n  404885:\t48 83 c3 01          \tadd    $0x1,%rbx\n  404889:\t48 39 dd             \tcmp    %rbx,%rbp\n  40488c:\t75 ea                \tjne    404878 <__libc_csu_init+0x38>\n  40488e:\t48 83 c4 08          \tadd    $0x8,%rsp\n  404892:\t5b                   \tpop    %rbx\n  404893:\t5d                   \tpop    %rbp\n  404894:\t41 5c                \tpop    %r12\n  404896:\t41 5d                \tpop    %r13\n  404898:\t41 5e                \tpop    %r14\n  40489a:\t41 5f                \tpop    %r15\n  40489c:\tc3                   \tret    \n  40489d:\t0f 1f 00             \tnopl   (%rax)", "code_s": "void __libc_csu_init(undefined4 <span class=\"supfact\">param_1</span>,\n                     undefined8 <span class=\"supfact\">param_2</span>,\n                     undefined8 <span class=\"supfact\">param_3</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  _DT_INIT();\n  <span class=\"supfact\">lVar1</span> = Number;\n  do {\n    (*(code *)(&amp; __DT_INIT_ARRAY)[<span class=\"supfact\">lVar1</span>])(\n        <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n        <span class=\"supfact\">param_3</span>);\n    <span class=\"supfact\">lVar1</span> = <span class=\"supfact\">lVar1</span> + Number;\n  } while (<span class=\"supfact\">lVar1</span> != Number);\n  return;\n}", "code_t": "void __libc_csu_init(EVP_PKEY_CTX *param_1, undefined8 <span class=\"supfact\">param_2</span>,\n                     undefined8 <span class=\"supfact\">param_3</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  _init(param_1);\n  <span class=\"supfact\">lVar1</span> = Number;\n  do {\n    (*(code *)(&amp; __frame_dummy_init_array_entry)[<span class=\"supfact\">lVar1</span>])(\n        (ulong)param_1 & amp;\n        Number, <span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>);\n    <span class=\"supfact\">lVar1</span> = <span class=\"supfact\">lVar1</span> + Number;\n  } while (<span class=\"supfact\">lVar1</span> != Number);\n  return;\n}", "var": [{"name": "param_1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "param_2", "type": "undefined8", "pred_name": "param_2", "ref_name": "param_2", "ref_type": "undefined8"}, {"name": "param_3", "type": "undefined8", "pred_name": "param_3", "ref_name": "param_3", "ref_type": "undefined8"}, {"name": "lVar1", "type": "long", "pred_name": "lVar1", "ref_name": "lVar1", "ref_type": "long"}], "body_in_train": true}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000001b9a2 <qerror_report_err>:\n   1b9a2:\t55                   \tpush   %rbp\n   1b9a3:\t48 89 e5             \tmov    %rsp,%rbp\n   1b9a6:\t48 83 ec 30          \tsub    $0x30,%rsp\n   1b9aa:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n   1b9ae:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   1b9b5:\t00 00 \n   1b9b7:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   1b9bb:\t31 c0                \txor    %eax,%eax\n   1b9bd:\te8 af f5 ff ff       \tcall   1af71 <qerror_new>\n   1b9c2:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n   1b9c6:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b9ca:\t48 83 c0 18          \tadd    $0x18,%rax\n   1b9ce:\t48 89 c7             \tmov    %rax,%rdi\n   1b9d1:\te8 89 80 ff ff       \tcall   13a5f <loc_save>\n   1b9d6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n   1b9da:\t48 8b 00             \tmov    (%rax),%rax\n   1b9dd:\t48 89 c7             \tmov    %rax,%rdi\n   1b9e0:\te8 0e f4 ff ff       \tcall   1adf3 <qobject_incref>\n   1b9e5:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n   1b9e9:\t48 8b 10             \tmov    (%rax),%rdx\n   1b9ec:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1b9f0:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n   1b9f4:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n   1b9fb:\teb 52                \tjmp    1ba4f <qerror_report_err+0xad>\n   1b9fd:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n   1ba01:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n   1ba05:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n   1ba08:\t48 98                \tcltq   \n   1ba0a:\t48 c1 e0 04          \tshl    $0x4,%rax\n   1ba0e:\t48 89 c1             \tmov    %rax,%rcx\n   1ba11:\t48 8d 05 70 0b 01 00 \tlea    0x10b70(%rip),%rax        # 2c588 <qerror_table+0x8>\n   1ba18:\t48 8b 04 01          \tmov    (%rcx,%rax,1),%rax\n   1ba1c:\t48 89 d6             \tmov    %rdx,%rsi\n   1ba1f:\t48 89 c7             \tmov    %rax,%rdi\n   1ba22:\te8 59 ca fe ff       \tcall   8480 <strcmp@plt>\n   1ba27:\t85 c0                \ttest   %eax,%eax\n   1ba29:\t75 20                \tjne    1ba4b <qerror_report_err+0xa9>\n   1ba2b:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n   1ba2e:\t48 98                \tcltq   \n   1ba30:\t48 c1 e0 04          \tshl    $0x4,%rax\n   1ba34:\t48 89 c2             \tmov    %rax,%rdx\n   1ba37:\t48 8d 05 42 0b 01 00 \tlea    0x10b42(%rip),%rax        # 2c580 <qerror_table>\n   1ba3e:\t48 01 c2             \tadd    %rax,%rdx\n   1ba41:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1ba45:\t48 89 50 48          \tmov    %rdx,0x48(%rax)\n   1ba49:\teb 20                \tjmp    1ba6b <qerror_report_err+0xc9>\n   1ba4b:\t83 45 ec 01          \taddl   $0x1,-0x14(%rbp)\n   1ba4f:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n   1ba52:\t48 98                \tcltq   \n   1ba54:\t48 c1 e0 04          \tshl    $0x4,%rax\n   1ba58:\t48 89 c2             \tmov    %rax,%rdx\n   1ba5b:\t48 8d 05 26 0b 01 00 \tlea    0x10b26(%rip),%rax        # 2c588 <qerror_table+0x8>\n   1ba62:\t48 8b 04 02          \tmov    (%rdx,%rax,1),%rax\n   1ba66:\t48 85 c0             \ttest   %rax,%rax\n   1ba69:\t75 92                \tjne    1b9fd <qerror_report_err+0x5b>\n   1ba6b:\te8 f8 ef ff ff       \tcall   1aa68 <monitor_cur_is_qmp>\n   1ba70:\t85 c0                \ttest   %eax,%eax\n   1ba72:\t74 18                \tje     1ba8c <qerror_report_err+0xea>\n   1ba74:\t48 8b 05 05 19 01 00 \tmov    0x11905(%rip),%rax        # 2d380 <cur_mon>\n   1ba7b:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n   1ba7f:\t48 89 d6             \tmov    %rdx,%rsi\n   1ba82:\t48 89 c7             \tmov    %rax,%rdi\n   1ba85:\te8 10 f0 ff ff       \tcall   1aa9a <monitor_set_error>\n   1ba8a:\teb 18                \tjmp    1baa4 <qerror_report_err+0x102>\n   1ba8c:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1ba90:\t48 89 c7             \tmov    %rax,%rdi\n   1ba93:\te8 55 fd ff ff       \tcall   1b7ed <qerror_print>\n   1ba98:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1ba9c:\t48 89 c7             \tmov    %rax,%rdi\n   1ba9f:\te8 9c f3 ff ff       \tcall   1ae40 <qobject_decref>\n   1baa4:\t90                   \tnop\n   1baa5:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1baa9:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n   1bab0:\t00 00 \n   1bab2:\t74 05                \tje     1bab9 <qerror_report_err+0x117>\n   1bab4:\te8 d7 c7 fe ff       \tcall   8290 <__stack_chk_fail@plt>\n   1bab9:\tc9                   \tleave  \n   1baba:\tc3                   \tret    ", "code_s": "void qerror_report_err(undefined8 *<span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  long <span class=\"supfact\">lVar3</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">local_1c</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">lVar3</span> = qerror_new();\n  loc_save(<span class=\"supfact\">lVar3</span> + Number);\n  FUN_0011adf3(*<span class=\"supfact\">param_1</span>);\n  *(undefined8 *)(<span class=\"supfact\">lVar3</span> + Number) = *<span class=\"supfact\">param_1</span>;\n  <span class=\"supfact\">local_1c</span> = Number;\n  do { if ( ( &amp; PTR_s_ {\n      _ &#x27;\n      class &#x27; : _ &#x27;\n      BadBusForDevice &#x27;\n      , _ &#x27; d_0012c588 ) [ ( long ) <span class=\"supfact\">local_1c</span> * Number ] == ( undefined * ) Number ) {\n      LAB_0011ba6b:\n        <span class=\"supfact\">iVar2</span> = monitor_cur_is_qmp();\n        if (<span class=\"supfact\">iVar2</span> == Number) {\n          qerror_print(<span class=\"supfact\">lVar3</span>);\n          FUN_0011ae40(<span class=\"supfact\">lVar3</span>);\n        } else {\n          monitor_set_error(cur_mon, <span class=\"supfact\">lVar3</span>);\n        }\n        if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n          __stack_chk_fail();\n        }\n        return;\n      } <span class=\"supfact\">iVar2</span> = strcmp ( ( &amp; PTR_s_ {\n        _ &#x27;\n        class &#x27; : _ &#x27;\n        BadBusForDevice &#x27;\n        , _ &#x27; d_0012c588 ) [ ( long ) <span class=\"supfact\">local_1c</span> * Number ] , ( char * ) <span class=\"supfact\">param_1</span> [ Number ] ) ;\n        if (<span class=\"supfact\">iVar2</span> == Number) {\n          *(undefined ***)(<span class=\"supfact\">lVar3</span> + Number) = &amp;\n          PTR_s_Device_ &#x27;\n          % (device) & #x27;\n          _can &#x27;\n          t_go_on_a_0012c580 + (long)<span class=\"supfact\">local_1c</span> *Number;\n          goto LAB_0011ba6b;\n        }\n        <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number; } while ( true ) ; }", "code_t": "void qerror_report_err(Error *<span class=\"supfact\">err</span>) {\n  long lVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  QError *<span class=\"supfact\">qerror</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  Error *<span class=\"supfact\">err</span> - local;\n  int <span class=\"supfact\">i</span>;\n  QError *qerr;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">qerror</span> = qerror_new();\n  loc_save(&amp; <span class=\"supfact\">qerror</span> - &gt; loc);\n  qobject_incref(&amp; <span class=\"supfact\">err</span> - &gt; obj - &gt; base);\n  <span class=\"supfact\">qerror</span> - &gt;\n  error = <span class=\"supfact\">err</span> - &gt;\n  obj;\n  <span class=\"supfact\">i</span> = Number;\n  do {\n    if (qerror_table[<span class=\"supfact\">i</span>].error_fmt == (char *)Number) {\n    LAB_0011ba6b:\n      <span class=\"supfact\">iVar2</span> = monitor_cur_is_qmp();\n      if (<span class=\"supfact\">iVar2</span> == Number) {\n        qerror_print(<span class=\"supfact\">qerror</span>);\n        qobject_decref(&amp; <span class=\"supfact\">qerror</span> - &gt; base);\n      } else {\n        monitor_set_error(cur_mon, <span class=\"supfact\">qerror</span>);\n      }\n      if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n        __stack_chk_fail();\n      }\n      return;\n    }\n    <span class=\"supfact\">iVar2</span> = strcmp(qerror_table[<span class=\"supfact\">i</span>].error_fmt,\n                                   <span class=\"supfact\">err</span> - &gt;\n                                   fmt);\n    if (<span class=\"supfact\">iVar2</span> == Number) {\n      <span class=\"supfact\">qerror</span> - &gt;\n      entry = qerror_table + <span class=\"supfact\">i</span>;\n      goto LAB_0011ba6b;\n    }\n    <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n  } while (true);\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "err", "ref_type": "Error * *"}, {"name": "iVar2", "type": "int", "pred_name": "iVar2", "ref_name": "iVar2", "ref_type": "int"}, {"name": "lVar3", "type": "long", "pred_name": "lVar3", "ref_name": "qerror", "ref_type": "QError * *"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_1c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "wufixx", "repo_name": "android_kernel_xiaomi_msm8953_vince", "path": "wufixx/android_kernel_xiaomi_msm8953_vince/e20e40c14979637892394d8d220a1ffb64a1912d5eb640ba7ecb67aef438b696", "path_in_repo": "wufixx/android_kernel_xiaomi_msm8953_vince/tools/lib/traceevent/libtraceevent.so", "objdump": "000000000001169b <trace_seq_reset>:\n   1169b:\t55                   \tpush   %rbp\n   1169c:\t48 89 e5             \tmov    %rsp,%rbp\n   1169f:\t48 83 ec 20          \tsub    $0x20,%rsp\n   116a3:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   116a7:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n   116ac:\t0f 84 b5 00 00 00    \tje     11767 <trace_seq_reset+0xcc>\n   116b2:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   116b6:\t48 8b 00             \tmov    (%rax),%rax\n   116b9:\tba ef be ad de       \tmov    $0xdeadbeef,%edx\n   116be:\t48 39 d0             \tcmp    %rdx,%rax\n   116c1:\t0f 94 c0             \tsete   %al\n   116c4:\t0f b6 c0             \tmovzbl %al,%eax\n   116c7:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n   116ca:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n   116ce:\t0f 95 c0             \tsetne  %al\n   116d1:\t0f b6 c0             \tmovzbl %al,%eax\n   116d4:\t48 85 c0             \ttest   %rax,%rax\n   116d7:\t74 5c                \tje     11735 <trace_seq_reset+0x9a>\n   116d9:\t8b 05 b1 dd 00 00    \tmov    0xddb1(%rip),%eax        # 1f490 <__warned.4233>\n   116df:\t85 c0                \ttest   %eax,%eax\n   116e1:\t0f 94 c0             \tsete   %al\n   116e4:\t0f b6 c0             \tmovzbl %al,%eax\n   116e7:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n   116ea:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n   116ee:\t0f 95 c0             \tsetne  %al\n   116f1:\t0f b6 c0             \tmovzbl %al,%eax\n   116f4:\t48 85 c0             \ttest   %rax,%rax\n   116f7:\t74 23                \tje     1171c <trace_seq_reset+0x81>\n   116f9:\t48 8b 05 f8 d8 00 00 \tmov    0xd8f8(%rip),%rax        # 1eff8 <stderr@GLIBC_2.2.5>\n   11700:\t48 8b 00             \tmov    (%rax),%rax\n   11703:\t48 89 c1             \tmov    %rax,%rcx\n   11706:\tba 29 00 00 00       \tmov    $0x29,%edx\n   1170b:\tbe 01 00 00 00       \tmov    $0x1,%esi\n   11710:\t48 8d 3d 29 83 00 00 \tlea    0x8329(%rip),%rdi        # 19a40 <__func__.5437+0x148>\n   11717:\te8 64 2e ff ff       \tcall   4580 <fwrite@plt>\n   1171c:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n   11720:\t0f 95 c0             \tsetne  %al\n   11723:\t0f b6 c0             \tmovzbl %al,%eax\n   11726:\t48 85 c0             \ttest   %rax,%rax\n   11729:\t74 0a                \tje     11735 <trace_seq_reset+0x9a>\n   1172b:\tc7 05 5b dd 00 00 01 \tmovl   $0x1,0xdd5b(%rip)        # 1f490 <__warned.4233>\n   11732:\t00 00 00 \n   11735:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n   11739:\t0f 95 c0             \tsetne  %al\n   1173c:\t0f b6 c0             \tmovzbl %al,%eax\n   1173f:\t48 85 c0             \ttest   %rax,%rax\n   11742:\t74 0b                \tje     1174f <trace_seq_reset+0xb4>\n   11744:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   11748:\tc7 40 14 01 00 00 00 \tmovl   $0x1,0x14(%rax)\n   1174f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   11753:\tc7 40 0c 00 00 00 00 \tmovl   $0x0,0xc(%rax)\n   1175a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1175e:\tc7 40 10 00 00 00 00 \tmovl   $0x0,0x10(%rax)\n   11765:\teb 01                \tjmp    11768 <trace_seq_reset+0xcd>\n   11767:\t90                   \tnop\n   11768:\tc9                   \tleave  \n   11769:\tc3                   \tret    ", "code_s": "void trace_seq_reset(long *<span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  if (<span class=\"supfact\">param_1</span> != (long *)Number) {\n    lVar1 = *<span class=\"supfact\">param_1</span>;\n    if ((lVar1 == Number) & amp; &amp; (DAT_0011f490 == Number)) {\n      fwrite(String, Number, Number, *(FILE **)PTR_stderr_0011eff8);\n      DAT_0011f490 = Number;\n    }\n    if (lVar1 == Number) {\n      *(undefined4 *)((long)<span class=\"supfact\">param_1</span> + Number) = Number;\n    }\n    *(undefined4 *)((long)<span class=\"supfact\">param_1</span> + Number) = Number;\n    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  }\n  return;\n}", "code_t": "void trace_seq_reset(trace_seq *<span class=\"supfact\">s</span>) {\n  bool bVar1;\n  trace_seq *<span class=\"supfact\">s</span> - local;\n  int __ret_warn_on;\n  int __ret_warn_once;\n  if (<span class=\"supfact\">s</span> != (trace_seq *)Number) {\n    bVar1 = <span class=\"supfact\">s</span> - &gt;\n    buffer == (char *)Number;\n    if ((bVar1)&amp; &amp; (__warned Number == Number)) {\n      fwrite(String, Number, Number, *(FILE **)PTR_stderr_0011eff8);\n      __warned Number = Number;\n    }\n    if (bVar1) {\n      <span class=\"supfact\">s</span> - &gt;\n      state = TRACE_SEQ__BUFFER_POISONED;\n    }\n    <span class=\"supfact\">s</span> - &gt;\n    len = Number;\n    <span class=\"supfact\">s</span> - &gt;\n    readpos = Number;\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "trace_seq * *", "pred_name": "s", "ref_name": "s", "ref_type": "trace_seq * *"}], "body_in_train": true}, {"repo_owner": "vomlehn", "repo_name": "libpassfds", "path": "vomlehn/libpassfds/10cd32ce99e6de5bc0869f355a58a5fd124e83a88844060a3625911377c498bd", "path_in_repo": "vomlehn/libpassfds//libpassfds.so", "objdump": "0000000000001201 <recvfds>:\n    1201:\t55                   \tpush   %rbp\n    1202:\t48 89 e5             \tmov    %rsp,%rbp\n    1205:\t41 54                \tpush   %r12\n    1207:\t53                   \tpush   %rbx\n    1208:\t48 81 ec b0 00 00 00 \tsub    $0xb0,%rsp\n    120f:\t89 bd 5c ff ff ff    \tmov    %edi,-0xa4(%rbp)\n    1215:\t48 89 b5 50 ff ff ff \tmov    %rsi,-0xb0(%rbp)\n    121c:\t48 89 95 48 ff ff ff \tmov    %rdx,-0xb8(%rbp)\n    1223:\t48 89 e0             \tmov    %rsp,%rax\n    1226:\t49 89 c4             \tmov    %rax,%r12\n    1229:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    1230:\t48 c1 e0 02          \tshl    $0x2,%rax\n    1234:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    1238:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    123c:\t48 83 c0 07          \tadd    $0x7,%rax\n    1240:\t48 83 e0 f8          \tand    $0xfffffffffffffff8,%rax\n    1244:\t48 8d 58 10          \tlea    0x10(%rax),%rbx\n    1248:\t48 89 d8             \tmov    %rbx,%rax\n    124b:\t48 83 e8 01          \tsub    $0x1,%rax\n    124f:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    1253:\t49 89 da             \tmov    %rbx,%r10\n    1256:\t41 bb 00 00 00 00    \tmov    $0x0,%r11d\n    125c:\t49 89 d8             \tmov    %rbx,%r8\n    125f:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    1265:\tb8 10 00 00 00       \tmov    $0x10,%eax\n    126a:\t48 83 e8 01          \tsub    $0x1,%rax\n    126e:\t48 01 d8             \tadd    %rbx,%rax\n    1271:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n    1276:\tba 00 00 00 00       \tmov    $0x0,%edx\n    127b:\t48 f7 f1             \tdiv    %rcx\n    127e:\t48 6b c0 10          \timul   $0x10,%rax,%rax\n    1282:\t48 29 c4             \tsub    %rax,%rsp\n    1285:\t48 89 e0             \tmov    %rsp,%rax\n    1288:\t48 83 c0 00          \tadd    $0x0,%rax\n    128c:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    1290:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n    1294:\tba 38 00 00 00       \tmov    $0x38,%edx\n    1299:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    129e:\t48 89 c7             \tmov    %rax,%rdi\n    12a1:\te8 9a fd ff ff       \tcall   1040 <memset@plt>\n    12a6:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    12aa:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n    12ae:\t48 89 5d a8          \tmov    %rbx,-0x58(%rbp)\n    12b2:\t48 8d 85 6f ff ff ff \tlea    -0x91(%rbp),%rax\n    12b9:\t48 89 85 70 ff ff ff \tmov    %rax,-0x90(%rbp)\n    12c0:\t48 c7 85 78 ff ff ff \tmovq   $0x1,-0x88(%rbp)\n    12c7:\t01 00 00 00 \n    12cb:\t48 8d 85 70 ff ff ff \tlea    -0x90(%rbp),%rax\n    12d2:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n    12d6:\t48 c7 45 98 01 00 00 \tmovq   $0x1,-0x68(%rbp)\n    12dd:\t00 \n    12de:\t48 8d 4d 80          \tlea    -0x80(%rbp),%rcx\n    12e2:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n    12e8:\tba 38 00 00 00       \tmov    $0x38,%edx\n    12ed:\t48 89 ce             \tmov    %rcx,%rsi\n    12f0:\t89 c7                \tmov    %eax,%edi\n    12f2:\te8 59 fd ff ff       \tcall   1050 <recvmsg@plt>\n    12f7:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    12fb:\t48 83 7d e8 ff       \tcmpq   $0xffffffffffffffff,-0x18(%rbp)\n    1300:\t0f 84 94 00 00 00    \tje     139a <recvfds+0x199>\n    1306:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    130d:\t00 \n    130e:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1312:\t48 83 f8 0f          \tcmp    $0xf,%rax\n    1316:\t76 06                \tjbe    131e <recvfds+0x11d>\n    1318:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    131c:\teb 05                \tjmp    1323 <recvfds+0x122>\n    131e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1323:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    1327:\teb 6a                \tjmp    1393 <recvfds+0x192>\n    1329:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    132d:\t8b 40 08             \tmov    0x8(%rax),%eax\n    1330:\t83 f8 01             \tcmp    $0x1,%eax\n    1333:\t75 47                \tjne    137c <recvfds+0x17b>\n    1335:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1339:\t8b 40 0c             \tmov    0xc(%rax),%eax\n    133c:\t83 f8 01             \tcmp    $0x1,%eax\n    133f:\t75 3b                \tjne    137c <recvfds+0x17b>\n    1341:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1345:\t48 83 c0 10          \tadd    $0x10,%rax\n    1349:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    134d:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    1351:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n    1355:\t48 8b 85 50 ff ff ff \tmov    -0xb0(%rbp),%rax\n    135c:\t48 89 ce             \tmov    %rcx,%rsi\n    135f:\t48 89 c7             \tmov    %rax,%rdi\n    1362:\te8 a9 fc ff ff       \tcall   1010 <memcpy@plt>\n    1367:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    136b:\t48 8b 00             \tmov    (%rax),%rax\n    136e:\t48 83 e8 10          \tsub    $0x10,%rax\n    1372:\t48 c1 e8 02          \tshr    $0x2,%rax\n    1376:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    137a:\teb 1e                \tjmp    139a <recvfds+0x199>\n    137c:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    1380:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n    1384:\t48 89 d6             \tmov    %rdx,%rsi\n    1387:\t48 89 c7             \tmov    %rax,%rdi\n    138a:\te8 a1 fc ff ff       \tcall   1030 <__cmsg_nxthdr@plt>\n    138f:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    1393:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n    1398:\t75 8f                \tjne    1329 <recvfds+0x128>\n    139a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    139e:\t4c 89 e4             \tmov    %r12,%rsp\n    13a1:\t48 8d 65 f0          \tlea    -0x10(%rbp),%rsp\n    13a5:\t5b                   \tpop    %rbx\n    13a6:\t41 5c                \tpop    %r12\n    13a8:\t5d                   \tpop    %rbp\n    13a9:\tc3                   \tret    \n", "code_s": "ulong recvfds(int <span class=\"supfact\">param_1</span>, void *<span class=\"supfact\">param_2</span>,\n              long <span class=\"supfact\">param_3</span>) {\n  void *__dest;\n  int __fd;\n  size_t __n;\n  ulong uVar1;\n  ulong uVar2;\n  cmsghdr *pcVar3;\n  undefined8 <span class=\"supfact\">uStack_d0</span>;\n  cmsghdr <span class=\"supfact\">cStack_c8</span>;\n  void *<span class=\"supfact\">local_b8</span>;\n  int <span class=\"supfact\">local_ac</span>;\n  undefined <span class=\"supfact\">local_99</span>;\n  iovec <span class=\"supfact\">local_98</span>;\n  msghdr <span class=\"supfact\">local_88</span>;\n  cmsghdr *<span class=\"supfact\">local_48</span>;\n  cmsghdr *<span class=\"supfact\">local_40</span>;\n  long <span class=\"supfact\">local_38</span>;\n  size_t <span class=\"supfact\">local_30</span>;\n  cmsghdr *<span class=\"supfact\">local_28</span>;\n  ulong <span class=\"supfact\">local_20</span>;\n  <span class=\"supfact\">local_30</span> = <span class=\"supfact\">param_3</span> * Number;\n  uVar1 = <span class=\"supfact\">local_30</span> + Number & amp;\n  Number;\n  <span class=\"supfact\">local_38</span> = uVar1 + Number;\n  uVar2 = (uVar1 + Number) / Number;\n  <span class=\"supfact\">local_40</span> = &amp;\n  <span class=\"supfact\">cStack_c8</span> + -uVar2;\n  <span class=\"supfact\">cStack_c8</span>._8_8_ = <span class=\"supfact\">param_3</span>;\n  <span class=\"supfact\">local_b8</span> = <span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">local_ac</span> = <span class=\"supfact\">param_1</span>;\n  (&amp; <span class=\"supfact\">uStack_d0</span>)[uVar2 * -Number] = Number;\n  memset(&amp; <span class=\"supfact\">local_88</span>, Number, Number);\n  __fd = <span class=\"supfact\">local_ac</span>;\n  <span class=\"supfact\">local_88</span>.msg_control = <span class=\"supfact\">local_40</span>;\n  <span class=\"supfact\">local_98</span>.iov_base = &amp;\n  <span class=\"supfact\">local_99</span>;\n  <span class=\"supfact\">local_98</span>.iov_len = Number;\n  <span class=\"supfact\">local_88</span>.msg_iov = &amp;\n  <span class=\"supfact\">local_98</span>;\n  <span class=\"supfact\">local_88</span>.msg_iovlen = Number;\n  <span class=\"supfact\">local_88</span>.msg_controllen = uVar1 + Number;\n  (&amp; <span class=\"supfact\">uStack_d0</span>)[uVar2 * -Number] = Number;\n  <span class=\"supfact\">local_20</span> =\n      recvmsg(__fd, &amp; <span class=\"supfact\">local_88</span>, Number);\n  if (<span class=\"supfact\">local_20</span> != Number) {\n    <span class=\"supfact\">local_20</span> = Number;\n    <span class=\"supfact\">local_28</span> = (cmsghdr *)<span class=\"supfact\">local_88</span>.msg_control;\n    if (<span class=\"supfact\">local_88</span>.msg_controllen & lt; Number) {\n      <span class=\"supfact\">local_28</span> = (cmsghdr *)Number;\n    }\n    while (pcVar3 = <span class=\"supfact\">local_28</span>, __n = <span class=\"supfact\">local_30</span>,\n           __dest = <span class=\"supfact\">local_b8</span>,\n           <span class=\"supfact\">local_28</span> != (cmsghdr *)Number) {\n      if ((<span class=\"supfact\">local_28</span> - &gt; cmsg_level == Number) & amp; &amp;\n          (<span class=\"supfact\">local_28</span> - &gt; cmsg_type == Number)) {\n        pcVar3 = <span class=\"supfact\">local_28</span> + Number;\n        <span class=\"supfact\">local_48</span> = pcVar3;\n        (&amp; <span class=\"supfact\">uStack_d0</span>)[uVar2 * -Number] = Number;\n        memcpy(__dest, pcVar3, __n);\n        return <span class=\"supfact\">local_28</span> - &gt;\n        cmsg_len - Number &gt;\n        &gt;\n        Number;\n      }\n      (&amp; <span class=\"supfact\">uStack_d0</span>)[uVar2 * -Number] = Number;\n      <span class=\"supfact\">local_28</span> =\n          __cmsg_nxthdr(&amp; <span class=\"supfact\">local_88</span>, pcVar3);\n    }\n  }\n  return <span class=\"supfact\">local_20</span>;\n}", "code_t": "ssize_t recvfds(int <span class=\"supfact\">sockfd</span>, int *<span class=\"supfact\">fds</span>,\n                size_t <span class=\"supfact\">n</span>) {\n  int *__dest;\n  int __fd;\n  ulong uVar1;\n  ulong uVar2;\n  <span class=\"supfact\">cmsghdr</span> *__src;\n  undefined8 <span class=\"supfact\">uStack_d0</span>;\n  undefined <span class=\"supfact\">auStack_c8</span>[Number];\n  size_t <span class=\"supfact\">n</span> - local;\n  int *<span class=\"supfact\">fds</span> - local;\n  int <span class=\"supfact\">sockfd</span> - local;\n  char <span class=\"supfact\">dummy</span>[Number];\n  iovec <span class=\"supfact\">iov</span>[Number];\n  <span class=\"supfact\">msghdr</span> <span class=\"supfact\">msghdr</span>;\n  uchar *<span class=\"supfact\">msg_fds</span>;\n  char[Number] * <span class=\"supfact\">buf</span>;\n  size_t <span class=\"supfact\">payload_size</span>;\n  <span class=\"supfact\">cmsghdr</span> *<span class=\"supfact\">cmsghdr</span>;\n  ssize_t <span class=\"supfact\">rc</span>;\n  <span class=\"supfact\">payload_size</span> = <span class=\"supfact\">n</span> * Number;\n  uVar1 = <span class=\"supfact\">payload_size</span> + Number & amp;\n  Number;\n  uVar2 = (uVar1 + Number) / Number;\n  <span class=\"supfact\">buf</span> = <span class=\"supfact\">auStack_c8</span> + uVar2 * -Number;\n  <span class=\"supfact\">n</span> - local = <span class=\"supfact\">n</span>;\n  <span class=\"supfact\">fds</span> - local = <span class=\"supfact\">fds</span>;\n  <span class=\"supfact\">sockfd</span> - local = <span class=\"supfact\">sockfd</span>;\n  (&amp; <span class=\"supfact\">uStack_d0</span>)[uVar2 * -Number] = Number;\n  memset(&amp; <span class=\"supfact\">msghdr</span>, Number, Number);\n  __fd = <span class=\"supfact\">sockfd</span> - local;\n  <span class=\"supfact\">msghdr</span>.msg_control = <span class=\"supfact\">buf</span>;\n  <span class=\"supfact\">iov</span>[Number].iov_base = <span class=\"supfact\">dummy</span>;\n  <span class=\"supfact\">iov</span>[Number].iov_len = Number;\n  <span class=\"supfact\">msghdr</span>.msg_iov = <span class=\"supfact\">iov</span>;\n  <span class=\"supfact\">msghdr</span>.msg_iovlen = Number;\n  <span class=\"supfact\">msghdr</span>.msg_controllen = uVar1 + Number;\n  (&amp; <span class=\"supfact\">uStack_d0</span>)[uVar2 * -Number] = Number;\n  <span class=\"supfact\">rc</span> = recvmsg(__fd, (<span class=\"supfact\">msghdr</span> *)&amp;\n                               <span class=\"supfact\">msghdr</span>, Number);\n  if (<span class=\"supfact\">rc</span> != -Number) {\n    <span class=\"supfact\">rc</span> = Number;\n    <span class=\"supfact\">cmsghdr</span> =\n        (<span class=\"supfact\">cmsghdr</span> *)<span class=\"supfact\">msghdr</span>.msg_control;\n    if (<span class=\"supfact\">msghdr</span>.msg_controllen & lt; Number) {\n      <span class=\"supfact\">cmsghdr</span> = (<span class=\"supfact\">cmsghdr</span> *)Number;\n    }\n    for (; __dest = <span class=\"supfact\">fds</span> - local,\n           <span class=\"supfact\">cmsghdr</span> != (<span class=\"supfact\">cmsghdr</span> *)Number;\n         <span class=\"supfact\">cmsghdr</span> = (<span class=\"supfact\">cmsghdr</span> *)__cmsg_nxthdr(\n             (<span class=\"supfact\">msghdr</span> *)&amp;\n             <span class=\"supfact\">msghdr</span>,\n             (<span class=\"supfact\">cmsghdr</span> *)<span class=\"supfact\">cmsghdr</span>)) {\n      if ((<span class=\"supfact\">cmsghdr</span> - &gt; cmsg_level == Number) & amp; &amp;\n          (<span class=\"supfact\">cmsghdr</span> - &gt; cmsg_type == Number)) {\n        __src = <span class=\"supfact\">cmsghdr</span> + Number;\n        (&amp; <span class=\"supfact\">uStack_d0</span>)[uVar2 * -Number] = Number;\n        memcpy(__dest, __src, <span class=\"supfact\">payload_size</span>);\n        return <span class=\"supfact\">cmsghdr</span> - &gt;\n        cmsg_len - Number &gt;\n        &gt;\n        Number;\n      }\n      (&amp; <span class=\"supfact\">uStack_d0</span>)[uVar2 * -Number] = Number;\n    }\n  }\n  return <span class=\"supfact\">rc</span>;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "sockfd", "ref_type": "int"}, {"name": "param_2", "type": "void * *", "pred_name": "buf", "ref_name": "fds", "ref_type": "int * *"}, {"name": "param_3", "type": "size_t", "pred_name": "count", "ref_name": "n", "ref_type": "size_t"}, {"name": "uStack_d0", "type": "__unk__", "pred_name": "__unk__", "ref_name": "uStack_d0", "ref_type": "undefined8"}, {"name": "local_b8", "type": "__unk__", "pred_name": "__unk__", "ref_name": "fds-local", "ref_type": "int * *"}, {"name": "local_ac", "type": "int", "pred_name": "__unk__", "ref_name": "sockfd-local", "ref_type": "int"}, {"name": "local_99", "type": "disappear", "pred_name": "", "ref_name": "dummy", "ref_type": "char[1][1]"}, {"name": "local_98", "type": "__unk__", "pred_name": "__unk__", "ref_name": "iov", "ref_type": "iovec[1][1]"}, {"name": "local_88", "type": "__unk__", "pred_name": "__unk__", "ref_name": "msghdr", "ref_type": "struct msghdr { void * msg_name; socklen_t msg_namelen; iovec * msg_iov; size_t msg_iovlen; void * msg_control; size_t msg_controllen; int msg_flags; PADDING (8); }"}, {"name": "local_48", "type": "__unk__", "pred_name": "__unk__", "ref_name": "msg_fds", "ref_type": "uchar * *"}, {"name": "local_40", "type": "disappear", "pred_name": "", "ref_name": "buf", "ref_type": "char[0] * *"}, {"name": "local_38", "type": "__unk__", "pred_name": "__unk__", "ref_name": "", "ref_type": "disappear"}, {"name": "local_30", "type": "__unk__", "pred_name": "__unk__", "ref_name": "payload_size", "ref_type": "size_t"}, {"name": "local_28", "type": "__unk__", "pred_name": "__unk__", "ref_name": "cmsghdr", "ref_type": "cmsghdr * *"}, {"name": "local_20", "type": "__unk__", "pred_name": "__unk__", "ref_name": "rc", "ref_type": "ssize_t"}, {"name": "cStack_c8", "type": "disappear", "pred_name": "", "ref_name": "auStack_c8", "ref_type": "undefined[8][8]"}], "body_in_train": false}, {"repo_owner": "jmesmon", "repo_name": "numactl", "path": "jmesmon/numactl/2d7204d82378d0a3875b54015a7ff4c18475b25519a77d2104db0d0b044ff419", "path_in_repo": "jmesmon/numactl//libnuma.so.1", "objdump": "0000000000007256 <numa_parse_cpustring>:\n    7256:\t55                   \tpush   %rbp\n    7257:\t48 89 e5             \tmov    %rsp,%rbp\n    725a:\t48 83 ec 10          \tsub    $0x10,%rsp\n    725e:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    7262:\t48 8b 05 77 4d 00 00 \tmov    0x4d77(%rip),%rax        # bfe0 <numa_all_cpus_ptr@@libnuma_1.2-0x4b8>\n    7269:\t48 8b 10             \tmov    (%rax),%rdx\n    726c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    7270:\t48 89 d6             \tmov    %rdx,%rsi\n    7273:\t48 89 c7             \tmov    %rax,%rdi\n    7276:\te8 26 fd ff ff       \tcall   6fa1 <__numa_parse_cpustring>\n    727b:\tc9                   \tleave  \n    727c:\tc3                   \tret    ", "code_s": "void numa_parse_cpustring(undefined8 <span class=\"supfact\">param_1</span>) {\n  FUN_00106fa1(<span class=\"supfact\">param_1</span>,\n               *(undefined8 *)PTR_numa_all_cpus_ptr_0010bfe0);\n  return;\n}", "code_t": "bitmask *numa_parse_cpustring(char *<span class=\"supfact\">s</span>) {\n  bitmask *pbVar1;\n  char *<span class=\"supfact\">s</span> - local;\n  pbVar1 = __numa_parse_cpustring(<span class=\"supfact\">s</span>,\n                                  *(bitmask **)PTR_numa_all_cpus_ptr_0010bfe0);\n  return pbVar1;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "s", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "malvira", "repo_name": "erbr", "path": "malvira/erbr/2f8350b2482c685589c80daaa31735f028d7aa115ebd831f8cce34b92e2b972e", "path_in_repo": "malvira/erbr/contiki/examples/multi-threading/multi-threading.native", "objdump": "000000000040843f <list_add>:\n  40843f:\t55                   \tpush   %rbp\n  408440:\t48 89 e5             \tmov    %rsp,%rbp\n  408443:\t48 83 ec 20          \tsub    $0x20,%rsp\n  408447:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  40844b:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n  40844f:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n  408453:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  408457:\t48 89 d6             \tmov    %rdx,%rsi\n  40845a:\t48 89 c7             \tmov    %rax,%rdi\n  40845d:\te8 3b 01 00 00       \tcall   40859d <list_remove>\n  408462:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  408466:\t48 c7 00 00 00 00 00 \tmovq   $0x0,(%rax)\n  40846d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  408471:\t48 89 c7             \tmov    %rax,%rdi\n  408474:\te8 81 ff ff ff       \tcall   4083fa <list_tail>\n  408479:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  40847d:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n  408482:\t75 0d                \tjne    408491 <list_add+0x52>\n  408484:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  408488:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n  40848c:\t48 89 10             \tmov    %rdx,(%rax)\n  40848f:\teb 0b                \tjmp    40849c <list_add+0x5d>\n  408491:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  408495:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n  408499:\t48 89 10             \tmov    %rdx,(%rax)\n  40849c:\t90                   \tnop\n  40849d:\tc9                   \tleave  \n  40849e:\tc3                   \tret    ", "code_s": "void list_add(undefined8 *<span class=\"supfact\">param_1</span>,\n              undefined8 *<span class=\"supfact\">param_2</span>) {\n  undefined8 *<span class=\"supfact\">puVar1</span>;\n  list_remove(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n  *<span class=\"supfact\">param_2</span> = Number;\n  <span class=\"supfact\">puVar1</span> = (undefined8 *)list_tail(<span class=\"supfact\">param_1</span>);\n  if (<span class=\"supfact\">puVar1</span> == (undefined8 *)Number) {\n    *<span class=\"supfact\">param_1</span> = <span class=\"supfact\">param_2</span>;\n  } else {\n    *<span class=\"supfact\">puVar1</span> = <span class=\"supfact\">param_2</span>;\n  }\n  return;\n}", "code_t": "void list_add(list_t <span class=\"supfact\">list</span>, void *<span class=\"supfact\">item</span>) {\n  void **<span class=\"supfact\">ppvVar1</span>;\n  void *<span class=\"supfact\">item</span> - local;\n  list_t <span class=\"supfact\">list</span> - local;\n  <span class=\"supfact\">list</span> *l;\n  list_remove(<span class=\"supfact\">list</span>, <span class=\"supfact\">item</span>);\n  *(undefined8 *)<span class=\"supfact\">item</span> = Number;\n  <span class=\"supfact\">ppvVar1</span> = (void **)list_tail(<span class=\"supfact\">list</span>);\n  if (<span class=\"supfact\">ppvVar1</span> == (void **)Number) {\n    *<span class=\"supfact\">list</span> = <span class=\"supfact\">item</span>;\n  } else {\n    *<span class=\"supfact\">ppvVar1</span> = <span class=\"supfact\">item</span>;\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "list_t", "pred_name": "list", "ref_name": "list", "ref_type": "list_t"}, {"name": "param_2", "type": "void * *", "pred_name": "item", "ref_name": "item", "ref_type": "void * *"}, {"name": "puVar1", "type": "void * * *", "pred_name": "ppvVar1", "ref_name": "ppvVar1", "ref_type": "void * * *"}], "body_in_train": true}, {"repo_owner": "DennisKofflard", "repo_name": "Trident_i2c_controller", "path": "DennisKofflard/Trident_i2c_controller/7f3b1341443e0a8ff448c9a5c1a21c28b9aacb88b829d641d7994be27df60654", "path_in_repo": "DennisKofflard/Trident_i2c_controller/congatec_cgoslib/Lx/libcgos.so", "objdump": "0000000000004480 <CgosI2CCount>:\n    4480:\t55                   \tpush   %rbp\n    4481:\t48 89 e5             \tmov    %rsp,%rbp\n    4484:\t48 83 ec 10          \tsub    $0x10,%rsp\n    4488:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n    448b:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    448e:\t6a 00                \tpush   $0x0\n    4490:\t6a 00                \tpush   $0x0\n    4492:\t6a 00                \tpush   $0x0\n    4494:\t6a 00                \tpush   $0x0\n    4496:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    449c:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    44a2:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    44a7:\t89 c2                \tmov    %eax,%edx\n    44a9:\tbe 1f 00 00 00       \tmov    $0x1f,%esi\n    44ae:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    44b3:\te8 18 ed ff ff       \tcall   31d0 <CallDrvPlain@plt>\n    44b8:\t48 83 c4 20          \tadd    $0x20,%rsp\n    44bc:\tc9                   \tleave  \n    44bd:\tc3                   \tret    ", "code_s": "void CgosI2CCount(undefined4 <span class=\"supfact\">param_1</span>) {\n  CallDrvPlain(Number, Number, <span class=\"supfact\">param_1</span>, Number, Number, Number,\n               Number, Number, Number, Number);\n  return;\n}", "code_t": "uint CgosI2CCount(HCGOS <span class=\"supfact\">hCgos</span>) {\n  uint uVar1;\n  HCGOS <span class=\"supfact\">hCgos</span> - local;\n  uVar1 = CallDrvPlain(Number, Number, <span class=\"supfact\">hCgos</span>, Number, Number,\n                       Number, Number, Number, (uint *)Number, (uint *)Number);\n  return uVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "hCgos", "ref_type": "HCGOS"}], "body_in_train": false}, {"repo_owner": "ajamous", "repo_name": "DOTS", "path": "ajamous/DOTS/28c9e348f3a3b11bc4f8699bd26ee99298379f2886174405e6aa1da54ee51932", "path_in_repo": "ajamous/DOTS/SIP_Clients_pjsip-2.7.1/pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/clidemo", "objdump": "000000000041155d <gsm_encode>:\n  41155d:\t55                   \tpush   %rbp\n  41155e:\t48 89 e5             \tmov    %rsp,%rbp\n  411561:\t48 81 ec d0 00 00 00 \tsub    $0xd0,%rsp\n  411568:\t48 89 bd 48 ff ff ff \tmov    %rdi,-0xb8(%rbp)\n  41156f:\t48 89 b5 40 ff ff ff \tmov    %rsi,-0xc0(%rbp)\n  411576:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41157d:\t4c 8d 4d d0          \tlea    -0x30(%rbp),%r9\n  411581:\t4c 8d 45 c8          \tlea    -0x38(%rbp),%r8\n  411585:\t48 8d 4d d8          \tlea    -0x28(%rbp),%rcx\n  411589:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n  41158d:\t48 8b b5 40 ff ff ff \tmov    -0xc0(%rbp),%rsi\n  411594:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n  41159b:\t48 8d bd 50 ff ff ff \tlea    -0xb0(%rbp),%rdi\n  4115a2:\t57                   \tpush   %rdi\n  4115a3:\t48 8d 7d c0          \tlea    -0x40(%rbp),%rdi\n  4115a7:\t57                   \tpush   %rdi\n  4115a8:\t48 89 c7             \tmov    %rax,%rdi\n  4115ab:\te8 83 20 00 00       \tcall   413633 <Gsm_Coder>\n  4115b0:\t48 83 c4 10          \tadd    $0x10,%rsp\n  4115b4:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n  4115bb:\t0f b6 80 f0 02 00 00 \tmovzbl 0x2f0(%rax),%eax\n  4115c2:\t84 c0                \ttest   %al,%al\n  4115c4:\t0f 84 91 17 00 00    \tje     412d5b <gsm_encode+0x17fe>\n  4115ca:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n  4115d1:\t0f b6 80 f1 02 00 00 \tmovzbl 0x2f1(%rax),%eax\n  4115d8:\t84 c0                \ttest   %al,%al\n  4115da:\t0f 94 c0             \tsete   %al\n  4115dd:\t89 c2                \tmov    %eax,%edx\n  4115df:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n  4115e6:\t88 90 f1 02 00 00    \tmov    %dl,0x2f1(%rax)\n  4115ec:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n  4115f3:\t0f b6 80 f1 02 00 00 \tmovzbl 0x2f1(%rax),%eax\n  4115fa:\t84 c0                \ttest   %al,%al\n  4115fc:\t0f 84 a2 0b 00 00    \tje     4121a4 <gsm_encode+0xc47>\n  411602:\t66 c7 45 fc 00 00    \tmovw   $0x0,-0x4(%rbp)\n  411608:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41160c:\t66 c1 e8 06          \tshr    $0x6,%ax\n  411610:\t89 c2                \tmov    %eax,%edx\n  411612:\t0f b7 45 e0          \tmovzwl -0x20(%rbp),%eax\n  411616:\t98                   \tcwtl   \n  411617:\tc1 e0 0a             \tshl    $0xa,%eax\n  41161a:\t09 d0                \tor     %edx,%eax\n  41161c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411620:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411624:\t66 c1 e8 06          \tshr    $0x6,%ax\n  411628:\t89 c2                \tmov    %eax,%edx\n  41162a:\t0f b7 45 e2          \tmovzwl -0x1e(%rbp),%eax\n  41162e:\t98                   \tcwtl   \n  41162f:\tc1 e0 0a             \tshl    $0xa,%eax\n  411632:\t09 d0                \tor     %edx,%eax\n  411634:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411638:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41163c:\t66 c1 e8 04          \tshr    $0x4,%ax\n  411640:\t89 c1                \tmov    %eax,%ecx\n  411642:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411649:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  41164d:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411654:\t89 ca                \tmov    %ecx,%edx\n  411656:\t88 10                \tmov    %dl,(%rax)\n  411658:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41165c:\t66 c1 e8 05          \tshr    $0x5,%ax\n  411660:\t89 c2                \tmov    %eax,%edx\n  411662:\t0f b7 45 e4          \tmovzwl -0x1c(%rbp),%eax\n  411666:\t98                   \tcwtl   \n  411667:\tc1 e0 0b             \tshl    $0xb,%eax\n  41166a:\t09 d0                \tor     %edx,%eax\n  41166c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411670:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411674:\t66 c1 e8 07          \tshr    $0x7,%ax\n  411678:\t89 c1                \tmov    %eax,%ecx\n  41167a:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411681:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411685:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41168c:\t89 ca                \tmov    %ecx,%edx\n  41168e:\t88 10                \tmov    %dl,(%rax)\n  411690:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411694:\t66 c1 e8 05          \tshr    $0x5,%ax\n  411698:\t89 c2                \tmov    %eax,%edx\n  41169a:\t0f b7 45 e6          \tmovzwl -0x1a(%rbp),%eax\n  41169e:\t98                   \tcwtl   \n  41169f:\tc1 e0 0b             \tshl    $0xb,%eax\n  4116a2:\t09 d0                \tor     %edx,%eax\n  4116a4:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  4116a8:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4116ac:\t66 c1 e8 04          \tshr    $0x4,%ax\n  4116b0:\t89 c2                \tmov    %eax,%edx\n  4116b2:\t0f b7 45 e8          \tmovzwl -0x18(%rbp),%eax\n  4116b6:\t98                   \tcwtl   \n  4116b7:\tc1 e0 0c             \tshl    $0xc,%eax\n  4116ba:\t09 d0                \tor     %edx,%eax\n  4116bc:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  4116c0:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4116c4:\t66 c1 e8 06          \tshr    $0x6,%ax\n  4116c8:\t89 c1                \tmov    %eax,%ecx\n  4116ca:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4116d1:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4116d5:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4116dc:\t89 ca                \tmov    %ecx,%edx\n  4116de:\t88 10                \tmov    %dl,(%rax)\n  4116e0:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4116e4:\t66 c1 e8 04          \tshr    $0x4,%ax\n  4116e8:\t89 c2                \tmov    %eax,%edx\n  4116ea:\t0f b7 45 ea          \tmovzwl -0x16(%rbp),%eax\n  4116ee:\t98                   \tcwtl   \n  4116ef:\tc1 e0 0c             \tshl    $0xc,%eax\n  4116f2:\t09 d0                \tor     %edx,%eax\n  4116f4:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  4116f8:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4116fc:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411700:\t89 c2                \tmov    %eax,%edx\n  411702:\t0f b7 45 ec          \tmovzwl -0x14(%rbp),%eax\n  411706:\t98                   \tcwtl   \n  411707:\tc1 e0 0d             \tshl    $0xd,%eax\n  41170a:\t09 d0                \tor     %edx,%eax\n  41170c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411710:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411714:\t66 c1 e8 07          \tshr    $0x7,%ax\n  411718:\t89 c1                \tmov    %eax,%ecx\n  41171a:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411721:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411725:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41172c:\t89 ca                \tmov    %ecx,%edx\n  41172e:\t88 10                \tmov    %dl,(%rax)\n  411730:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411734:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411738:\t89 c2                \tmov    %eax,%edx\n  41173a:\t0f b7 45 ee          \tmovzwl -0x12(%rbp),%eax\n  41173e:\t98                   \tcwtl   \n  41173f:\tc1 e0 0d             \tshl    $0xd,%eax\n  411742:\t09 d0                \tor     %edx,%eax\n  411744:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411748:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41174c:\t66 c1 e8 07          \tshr    $0x7,%ax\n  411750:\t89 c2                \tmov    %eax,%edx\n  411752:\t0f b7 45 d8          \tmovzwl -0x28(%rbp),%eax\n  411756:\t98                   \tcwtl   \n  411757:\tc1 e0 09             \tshl    $0x9,%eax\n  41175a:\t09 d0                \tor     %edx,%eax\n  41175c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411760:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411764:\t66 c1 e8 05          \tshr    $0x5,%ax\n  411768:\t89 c1                \tmov    %eax,%ecx\n  41176a:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411771:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411775:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41177c:\t89 ca                \tmov    %ecx,%edx\n  41177e:\t88 10                \tmov    %dl,(%rax)\n  411780:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411784:\t66 c1 e8 02          \tshr    $0x2,%ax\n  411788:\t89 c2                \tmov    %eax,%edx\n  41178a:\t0f b7 45 c8          \tmovzwl -0x38(%rbp),%eax\n  41178e:\t98                   \tcwtl   \n  41178f:\tc1 e0 0e             \tshl    $0xe,%eax\n  411792:\t09 d0                \tor     %edx,%eax\n  411794:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411798:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41179c:\t66 c1 e8 02          \tshr    $0x2,%ax\n  4117a0:\t89 c2                \tmov    %eax,%edx\n  4117a2:\t0f b7 45 d0          \tmovzwl -0x30(%rbp),%eax\n  4117a6:\t98                   \tcwtl   \n  4117a7:\tc1 e0 0e             \tshl    $0xe,%eax\n  4117aa:\t09 d0                \tor     %edx,%eax\n  4117ac:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  4117b0:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4117b4:\t66 c1 e8 06          \tshr    $0x6,%ax\n  4117b8:\t89 c2                \tmov    %eax,%edx\n  4117ba:\t0f b7 45 c0          \tmovzwl -0x40(%rbp),%eax\n  4117be:\t98                   \tcwtl   \n  4117bf:\tc1 e0 0a             \tshl    $0xa,%eax\n  4117c2:\t09 d0                \tor     %edx,%eax\n  4117c4:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  4117c8:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4117cc:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4117d0:\t89 c1                \tmov    %eax,%ecx\n  4117d2:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4117d9:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4117dd:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4117e4:\t89 ca                \tmov    %ecx,%edx\n  4117e6:\t88 10                \tmov    %dl,(%rax)\n  4117e8:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4117ec:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4117f0:\t89 c2                \tmov    %eax,%edx\n  4117f2:\t0f b7 85 50 ff ff ff \tmovzwl -0xb0(%rbp),%eax\n  4117f9:\t98                   \tcwtl   \n  4117fa:\tc1 e0 0d             \tshl    $0xd,%eax\n  4117fd:\t09 d0                \tor     %edx,%eax\n  4117ff:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411803:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411807:\t66 c1 e8 08          \tshr    $0x8,%ax\n  41180b:\t89 c1                \tmov    %eax,%ecx\n  41180d:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411814:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411818:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41181f:\t89 ca                \tmov    %ecx,%edx\n  411821:\t88 10                \tmov    %dl,(%rax)\n  411823:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411827:\t66 c1 e8 03          \tshr    $0x3,%ax\n  41182b:\t89 c2                \tmov    %eax,%edx\n  41182d:\t0f b7 85 52 ff ff ff \tmovzwl -0xae(%rbp),%eax\n  411834:\t98                   \tcwtl   \n  411835:\tc1 e0 0d             \tshl    $0xd,%eax\n  411838:\t09 d0                \tor     %edx,%eax\n  41183a:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  41183e:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411842:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411846:\t89 c2                \tmov    %eax,%edx\n  411848:\t0f b7 85 54 ff ff ff \tmovzwl -0xac(%rbp),%eax\n  41184f:\t98                   \tcwtl   \n  411850:\tc1 e0 0d             \tshl    $0xd,%eax\n  411853:\t09 d0                \tor     %edx,%eax\n  411855:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411859:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41185d:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411861:\t89 c2                \tmov    %eax,%edx\n  411863:\t0f b7 85 56 ff ff ff \tmovzwl -0xaa(%rbp),%eax\n  41186a:\t98                   \tcwtl   \n  41186b:\tc1 e0 0d             \tshl    $0xd,%eax\n  41186e:\t09 d0                \tor     %edx,%eax\n  411870:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411874:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411878:\t66 c1 e8 07          \tshr    $0x7,%ax\n  41187c:\t89 c1                \tmov    %eax,%ecx\n  41187e:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411885:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411889:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411890:\t89 ca                \tmov    %ecx,%edx\n  411892:\t88 10                \tmov    %dl,(%rax)\n  411894:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411898:\t66 c1 e8 03          \tshr    $0x3,%ax\n  41189c:\t89 c2                \tmov    %eax,%edx\n  41189e:\t0f b7 85 58 ff ff ff \tmovzwl -0xa8(%rbp),%eax\n  4118a5:\t98                   \tcwtl   \n  4118a6:\tc1 e0 0d             \tshl    $0xd,%eax\n  4118a9:\t09 d0                \tor     %edx,%eax\n  4118ab:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  4118af:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4118b3:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4118b7:\t89 c2                \tmov    %eax,%edx\n  4118b9:\t0f b7 85 5a ff ff ff \tmovzwl -0xa6(%rbp),%eax\n  4118c0:\t98                   \tcwtl   \n  4118c1:\tc1 e0 0d             \tshl    $0xd,%eax\n  4118c4:\t09 d0                \tor     %edx,%eax\n  4118c6:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  4118ca:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4118ce:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4118d2:\t89 c2                \tmov    %eax,%edx\n  4118d4:\t0f b7 85 5c ff ff ff \tmovzwl -0xa4(%rbp),%eax\n  4118db:\t98                   \tcwtl   \n  4118dc:\tc1 e0 0d             \tshl    $0xd,%eax\n  4118df:\t09 d0                \tor     %edx,%eax\n  4118e1:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  4118e5:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4118e9:\t66 c1 e8 06          \tshr    $0x6,%ax\n  4118ed:\t89 c1                \tmov    %eax,%ecx\n  4118ef:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4118f6:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4118fa:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411901:\t89 ca                \tmov    %ecx,%edx\n  411903:\t88 10                \tmov    %dl,(%rax)\n  411905:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411909:\t66 c1 e8 03          \tshr    $0x3,%ax\n  41190d:\t89 c2                \tmov    %eax,%edx\n  41190f:\t0f b7 85 5e ff ff ff \tmovzwl -0xa2(%rbp),%eax\n  411916:\t98                   \tcwtl   \n  411917:\tc1 e0 0d             \tshl    $0xd,%eax\n  41191a:\t09 d0                \tor     %edx,%eax\n  41191c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411920:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411924:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411928:\t89 c2                \tmov    %eax,%edx\n  41192a:\t0f b7 85 60 ff ff ff \tmovzwl -0xa0(%rbp),%eax\n  411931:\t98                   \tcwtl   \n  411932:\tc1 e0 0d             \tshl    $0xd,%eax\n  411935:\t09 d0                \tor     %edx,%eax\n  411937:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  41193b:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41193f:\t66 c1 e8 08          \tshr    $0x8,%ax\n  411943:\t89 c1                \tmov    %eax,%ecx\n  411945:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  41194c:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411950:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411957:\t89 ca                \tmov    %ecx,%edx\n  411959:\t88 10                \tmov    %dl,(%rax)\n  41195b:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41195f:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411963:\t89 c2                \tmov    %eax,%edx\n  411965:\t0f b7 85 62 ff ff ff \tmovzwl -0x9e(%rbp),%eax\n  41196c:\t98                   \tcwtl   \n  41196d:\tc1 e0 0d             \tshl    $0xd,%eax\n  411970:\t09 d0                \tor     %edx,%eax\n  411972:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411976:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41197a:\t66 c1 e8 03          \tshr    $0x3,%ax\n  41197e:\t89 c2                \tmov    %eax,%edx\n  411980:\t0f b7 85 64 ff ff ff \tmovzwl -0x9c(%rbp),%eax\n  411987:\t98                   \tcwtl   \n  411988:\tc1 e0 0d             \tshl    $0xd,%eax\n  41198b:\t09 d0                \tor     %edx,%eax\n  41198d:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411991:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411995:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411999:\t89 c2                \tmov    %eax,%edx\n  41199b:\t0f b7 85 66 ff ff ff \tmovzwl -0x9a(%rbp),%eax\n  4119a2:\t98                   \tcwtl   \n  4119a3:\tc1 e0 0d             \tshl    $0xd,%eax\n  4119a6:\t09 d0                \tor     %edx,%eax\n  4119a8:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  4119ac:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4119b0:\t66 c1 e8 07          \tshr    $0x7,%ax\n  4119b4:\t89 c1                \tmov    %eax,%ecx\n  4119b6:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4119bd:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4119c1:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4119c8:\t89 ca                \tmov    %ecx,%edx\n  4119ca:\t88 10                \tmov    %dl,(%rax)\n  4119cc:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4119d0:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4119d4:\t89 c2                \tmov    %eax,%edx\n  4119d6:\t0f b7 85 68 ff ff ff \tmovzwl -0x98(%rbp),%eax\n  4119dd:\t98                   \tcwtl   \n  4119de:\tc1 e0 0d             \tshl    $0xd,%eax\n  4119e1:\t09 d0                \tor     %edx,%eax\n  4119e3:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  4119e7:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4119eb:\t66 c1 e8 07          \tshr    $0x7,%ax\n  4119ef:\t89 c2                \tmov    %eax,%edx\n  4119f1:\t0f b7 45 da          \tmovzwl -0x26(%rbp),%eax\n  4119f5:\t98                   \tcwtl   \n  4119f6:\tc1 e0 09             \tshl    $0x9,%eax\n  4119f9:\t09 d0                \tor     %edx,%eax\n  4119fb:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  4119ff:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411a03:\t66 c1 e8 05          \tshr    $0x5,%ax\n  411a07:\t89 c1                \tmov    %eax,%ecx\n  411a09:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411a10:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411a14:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411a1b:\t89 ca                \tmov    %ecx,%edx\n  411a1d:\t88 10                \tmov    %dl,(%rax)\n  411a1f:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411a23:\t66 c1 e8 02          \tshr    $0x2,%ax\n  411a27:\t89 c2                \tmov    %eax,%edx\n  411a29:\t0f b7 45 ca          \tmovzwl -0x36(%rbp),%eax\n  411a2d:\t98                   \tcwtl   \n  411a2e:\tc1 e0 0e             \tshl    $0xe,%eax\n  411a31:\t09 d0                \tor     %edx,%eax\n  411a33:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411a37:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411a3b:\t66 c1 e8 02          \tshr    $0x2,%ax\n  411a3f:\t89 c2                \tmov    %eax,%edx\n  411a41:\t0f b7 45 d2          \tmovzwl -0x2e(%rbp),%eax\n  411a45:\t98                   \tcwtl   \n  411a46:\tc1 e0 0e             \tshl    $0xe,%eax\n  411a49:\t09 d0                \tor     %edx,%eax\n  411a4b:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411a4f:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411a53:\t66 c1 e8 06          \tshr    $0x6,%ax\n  411a57:\t89 c2                \tmov    %eax,%edx\n  411a59:\t0f b7 45 c2          \tmovzwl -0x3e(%rbp),%eax\n  411a5d:\t98                   \tcwtl   \n  411a5e:\tc1 e0 0a             \tshl    $0xa,%eax\n  411a61:\t09 d0                \tor     %edx,%eax\n  411a63:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411a67:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411a6b:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411a6f:\t89 c1                \tmov    %eax,%ecx\n  411a71:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411a78:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411a7c:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411a83:\t89 ca                \tmov    %ecx,%edx\n  411a85:\t88 10                \tmov    %dl,(%rax)\n  411a87:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411a8b:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411a8f:\t89 c2                \tmov    %eax,%edx\n  411a91:\t0f b7 85 6a ff ff ff \tmovzwl -0x96(%rbp),%eax\n  411a98:\t98                   \tcwtl   \n  411a99:\tc1 e0 0d             \tshl    $0xd,%eax\n  411a9c:\t09 d0                \tor     %edx,%eax\n  411a9e:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411aa2:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411aa6:\t66 c1 e8 08          \tshr    $0x8,%ax\n  411aaa:\t89 c1                \tmov    %eax,%ecx\n  411aac:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411ab3:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411ab7:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411abe:\t89 ca                \tmov    %ecx,%edx\n  411ac0:\t88 10                \tmov    %dl,(%rax)\n  411ac2:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411ac6:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411aca:\t89 c2                \tmov    %eax,%edx\n  411acc:\t0f b7 85 6c ff ff ff \tmovzwl -0x94(%rbp),%eax\n  411ad3:\t98                   \tcwtl   \n  411ad4:\tc1 e0 0d             \tshl    $0xd,%eax\n  411ad7:\t09 d0                \tor     %edx,%eax\n  411ad9:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411add:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411ae1:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411ae5:\t89 c2                \tmov    %eax,%edx\n  411ae7:\t0f b7 85 6e ff ff ff \tmovzwl -0x92(%rbp),%eax\n  411aee:\t98                   \tcwtl   \n  411aef:\tc1 e0 0d             \tshl    $0xd,%eax\n  411af2:\t09 d0                \tor     %edx,%eax\n  411af4:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411af8:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411afc:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411b00:\t89 c2                \tmov    %eax,%edx\n  411b02:\t0f b7 85 70 ff ff ff \tmovzwl -0x90(%rbp),%eax\n  411b09:\t98                   \tcwtl   \n  411b0a:\tc1 e0 0d             \tshl    $0xd,%eax\n  411b0d:\t09 d0                \tor     %edx,%eax\n  411b0f:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411b13:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411b17:\t66 c1 e8 07          \tshr    $0x7,%ax\n  411b1b:\t89 c1                \tmov    %eax,%ecx\n  411b1d:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411b24:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411b28:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411b2f:\t89 ca                \tmov    %ecx,%edx\n  411b31:\t88 10                \tmov    %dl,(%rax)\n  411b33:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411b37:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411b3b:\t89 c2                \tmov    %eax,%edx\n  411b3d:\t0f b7 85 72 ff ff ff \tmovzwl -0x8e(%rbp),%eax\n  411b44:\t98                   \tcwtl   \n  411b45:\tc1 e0 0d             \tshl    $0xd,%eax\n  411b48:\t09 d0                \tor     %edx,%eax\n  411b4a:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411b4e:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411b52:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411b56:\t89 c2                \tmov    %eax,%edx\n  411b58:\t0f b7 85 74 ff ff ff \tmovzwl -0x8c(%rbp),%eax\n  411b5f:\t98                   \tcwtl   \n  411b60:\tc1 e0 0d             \tshl    $0xd,%eax\n  411b63:\t09 d0                \tor     %edx,%eax\n  411b65:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411b69:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411b6d:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411b71:\t89 c2                \tmov    %eax,%edx\n  411b73:\t0f b7 85 76 ff ff ff \tmovzwl -0x8a(%rbp),%eax\n  411b7a:\t98                   \tcwtl   \n  411b7b:\tc1 e0 0d             \tshl    $0xd,%eax\n  411b7e:\t09 d0                \tor     %edx,%eax\n  411b80:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411b84:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411b88:\t66 c1 e8 06          \tshr    $0x6,%ax\n  411b8c:\t89 c1                \tmov    %eax,%ecx\n  411b8e:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411b95:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411b99:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411ba0:\t89 ca                \tmov    %ecx,%edx\n  411ba2:\t88 10                \tmov    %dl,(%rax)\n  411ba4:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411ba8:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411bac:\t89 c2                \tmov    %eax,%edx\n  411bae:\t0f b7 85 78 ff ff ff \tmovzwl -0x88(%rbp),%eax\n  411bb5:\t98                   \tcwtl   \n  411bb6:\tc1 e0 0d             \tshl    $0xd,%eax\n  411bb9:\t09 d0                \tor     %edx,%eax\n  411bbb:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411bbf:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411bc3:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411bc7:\t89 c2                \tmov    %eax,%edx\n  411bc9:\t0f b7 85 7a ff ff ff \tmovzwl -0x86(%rbp),%eax\n  411bd0:\t98                   \tcwtl   \n  411bd1:\tc1 e0 0d             \tshl    $0xd,%eax\n  411bd4:\t09 d0                \tor     %edx,%eax\n  411bd6:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411bda:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411bde:\t66 c1 e8 08          \tshr    $0x8,%ax\n  411be2:\t89 c1                \tmov    %eax,%ecx\n  411be4:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411beb:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411bef:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411bf6:\t89 ca                \tmov    %ecx,%edx\n  411bf8:\t88 10                \tmov    %dl,(%rax)\n  411bfa:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411bfe:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411c02:\t89 c2                \tmov    %eax,%edx\n  411c04:\t0f b7 85 7c ff ff ff \tmovzwl -0x84(%rbp),%eax\n  411c0b:\t98                   \tcwtl   \n  411c0c:\tc1 e0 0d             \tshl    $0xd,%eax\n  411c0f:\t09 d0                \tor     %edx,%eax\n  411c11:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411c15:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411c19:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411c1d:\t89 c2                \tmov    %eax,%edx\n  411c1f:\t0f b7 85 7e ff ff ff \tmovzwl -0x82(%rbp),%eax\n  411c26:\t98                   \tcwtl   \n  411c27:\tc1 e0 0d             \tshl    $0xd,%eax\n  411c2a:\t09 d0                \tor     %edx,%eax\n  411c2c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411c30:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411c34:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411c38:\t89 c2                \tmov    %eax,%edx\n  411c3a:\t0f b7 45 80          \tmovzwl -0x80(%rbp),%eax\n  411c3e:\t98                   \tcwtl   \n  411c3f:\tc1 e0 0d             \tshl    $0xd,%eax\n  411c42:\t09 d0                \tor     %edx,%eax\n  411c44:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411c48:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411c4c:\t66 c1 e8 07          \tshr    $0x7,%ax\n  411c50:\t89 c1                \tmov    %eax,%ecx\n  411c52:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411c59:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411c5d:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411c64:\t89 ca                \tmov    %ecx,%edx\n  411c66:\t88 10                \tmov    %dl,(%rax)\n  411c68:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411c6c:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411c70:\t89 c2                \tmov    %eax,%edx\n  411c72:\t0f b7 45 82          \tmovzwl -0x7e(%rbp),%eax\n  411c76:\t98                   \tcwtl   \n  411c77:\tc1 e0 0d             \tshl    $0xd,%eax\n  411c7a:\t09 d0                \tor     %edx,%eax\n  411c7c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411c80:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411c84:\t66 c1 e8 07          \tshr    $0x7,%ax\n  411c88:\t89 c2                \tmov    %eax,%edx\n  411c8a:\t0f b7 45 dc          \tmovzwl -0x24(%rbp),%eax\n  411c8e:\t98                   \tcwtl   \n  411c8f:\tc1 e0 09             \tshl    $0x9,%eax\n  411c92:\t09 d0                \tor     %edx,%eax\n  411c94:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411c98:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411c9c:\t66 c1 e8 05          \tshr    $0x5,%ax\n  411ca0:\t89 c1                \tmov    %eax,%ecx\n  411ca2:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411ca9:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411cad:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411cb4:\t89 ca                \tmov    %ecx,%edx\n  411cb6:\t88 10                \tmov    %dl,(%rax)\n  411cb8:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411cbc:\t66 c1 e8 02          \tshr    $0x2,%ax\n  411cc0:\t89 c2                \tmov    %eax,%edx\n  411cc2:\t0f b7 45 cc          \tmovzwl -0x34(%rbp),%eax\n  411cc6:\t98                   \tcwtl   \n  411cc7:\tc1 e0 0e             \tshl    $0xe,%eax\n  411cca:\t09 d0                \tor     %edx,%eax\n  411ccc:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411cd0:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411cd4:\t66 c1 e8 02          \tshr    $0x2,%ax\n  411cd8:\t89 c2                \tmov    %eax,%edx\n  411cda:\t0f b7 45 d4          \tmovzwl -0x2c(%rbp),%eax\n  411cde:\t98                   \tcwtl   \n  411cdf:\tc1 e0 0e             \tshl    $0xe,%eax\n  411ce2:\t09 d0                \tor     %edx,%eax\n  411ce4:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411ce8:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411cec:\t66 c1 e8 06          \tshr    $0x6,%ax\n  411cf0:\t89 c2                \tmov    %eax,%edx\n  411cf2:\t0f b7 45 c4          \tmovzwl -0x3c(%rbp),%eax\n  411cf6:\t98                   \tcwtl   \n  411cf7:\tc1 e0 0a             \tshl    $0xa,%eax\n  411cfa:\t09 d0                \tor     %edx,%eax\n  411cfc:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411d00:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411d04:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411d08:\t89 c1                \tmov    %eax,%ecx\n  411d0a:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411d11:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411d15:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411d1c:\t89 ca                \tmov    %ecx,%edx\n  411d1e:\t88 10                \tmov    %dl,(%rax)\n  411d20:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411d24:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411d28:\t89 c2                \tmov    %eax,%edx\n  411d2a:\t0f b7 45 84          \tmovzwl -0x7c(%rbp),%eax\n  411d2e:\t98                   \tcwtl   \n  411d2f:\tc1 e0 0d             \tshl    $0xd,%eax\n  411d32:\t09 d0                \tor     %edx,%eax\n  411d34:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411d38:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411d3c:\t66 c1 e8 08          \tshr    $0x8,%ax\n  411d40:\t89 c1                \tmov    %eax,%ecx\n  411d42:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411d49:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411d4d:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411d54:\t89 ca                \tmov    %ecx,%edx\n  411d56:\t88 10                \tmov    %dl,(%rax)\n  411d58:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411d5c:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411d60:\t89 c2                \tmov    %eax,%edx\n  411d62:\t0f b7 45 86          \tmovzwl -0x7a(%rbp),%eax\n  411d66:\t98                   \tcwtl   \n  411d67:\tc1 e0 0d             \tshl    $0xd,%eax\n  411d6a:\t09 d0                \tor     %edx,%eax\n  411d6c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411d70:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411d74:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411d78:\t89 c2                \tmov    %eax,%edx\n  411d7a:\t0f b7 45 88          \tmovzwl -0x78(%rbp),%eax\n  411d7e:\t98                   \tcwtl   \n  411d7f:\tc1 e0 0d             \tshl    $0xd,%eax\n  411d82:\t09 d0                \tor     %edx,%eax\n  411d84:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411d88:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411d8c:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411d90:\t89 c2                \tmov    %eax,%edx\n  411d92:\t0f b7 45 8a          \tmovzwl -0x76(%rbp),%eax\n  411d96:\t98                   \tcwtl   \n  411d97:\tc1 e0 0d             \tshl    $0xd,%eax\n  411d9a:\t09 d0                \tor     %edx,%eax\n  411d9c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411da0:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411da4:\t66 c1 e8 07          \tshr    $0x7,%ax\n  411da8:\t89 c1                \tmov    %eax,%ecx\n  411daa:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411db1:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411db5:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411dbc:\t89 ca                \tmov    %ecx,%edx\n  411dbe:\t88 10                \tmov    %dl,(%rax)\n  411dc0:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411dc4:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411dc8:\t89 c2                \tmov    %eax,%edx\n  411dca:\t0f b7 45 8c          \tmovzwl -0x74(%rbp),%eax\n  411dce:\t98                   \tcwtl   \n  411dcf:\tc1 e0 0d             \tshl    $0xd,%eax\n  411dd2:\t09 d0                \tor     %edx,%eax\n  411dd4:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411dd8:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411ddc:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411de0:\t89 c2                \tmov    %eax,%edx\n  411de2:\t0f b7 45 8e          \tmovzwl -0x72(%rbp),%eax\n  411de6:\t98                   \tcwtl   \n  411de7:\tc1 e0 0d             \tshl    $0xd,%eax\n  411dea:\t09 d0                \tor     %edx,%eax\n  411dec:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411df0:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411df4:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411df8:\t89 c2                \tmov    %eax,%edx\n  411dfa:\t0f b7 45 90          \tmovzwl -0x70(%rbp),%eax\n  411dfe:\t98                   \tcwtl   \n  411dff:\tc1 e0 0d             \tshl    $0xd,%eax\n  411e02:\t09 d0                \tor     %edx,%eax\n  411e04:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411e08:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411e0c:\t66 c1 e8 06          \tshr    $0x6,%ax\n  411e10:\t89 c1                \tmov    %eax,%ecx\n  411e12:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411e19:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411e1d:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411e24:\t89 ca                \tmov    %ecx,%edx\n  411e26:\t88 10                \tmov    %dl,(%rax)\n  411e28:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411e2c:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411e30:\t89 c2                \tmov    %eax,%edx\n  411e32:\t0f b7 45 92          \tmovzwl -0x6e(%rbp),%eax\n  411e36:\t98                   \tcwtl   \n  411e37:\tc1 e0 0d             \tshl    $0xd,%eax\n  411e3a:\t09 d0                \tor     %edx,%eax\n  411e3c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411e40:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411e44:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411e48:\t89 c2                \tmov    %eax,%edx\n  411e4a:\t0f b7 45 94          \tmovzwl -0x6c(%rbp),%eax\n  411e4e:\t98                   \tcwtl   \n  411e4f:\tc1 e0 0d             \tshl    $0xd,%eax\n  411e52:\t09 d0                \tor     %edx,%eax\n  411e54:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411e58:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411e5c:\t66 c1 e8 08          \tshr    $0x8,%ax\n  411e60:\t89 c1                \tmov    %eax,%ecx\n  411e62:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411e69:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411e6d:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411e74:\t89 ca                \tmov    %ecx,%edx\n  411e76:\t88 10                \tmov    %dl,(%rax)\n  411e78:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411e7c:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411e80:\t89 c2                \tmov    %eax,%edx\n  411e82:\t0f b7 45 96          \tmovzwl -0x6a(%rbp),%eax\n  411e86:\t98                   \tcwtl   \n  411e87:\tc1 e0 0d             \tshl    $0xd,%eax\n  411e8a:\t09 d0                \tor     %edx,%eax\n  411e8c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411e90:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411e94:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411e98:\t89 c2                \tmov    %eax,%edx\n  411e9a:\t0f b7 45 98          \tmovzwl -0x68(%rbp),%eax\n  411e9e:\t98                   \tcwtl   \n  411e9f:\tc1 e0 0d             \tshl    $0xd,%eax\n  411ea2:\t09 d0                \tor     %edx,%eax\n  411ea4:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411ea8:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411eac:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411eb0:\t89 c2                \tmov    %eax,%edx\n  411eb2:\t0f b7 45 9a          \tmovzwl -0x66(%rbp),%eax\n  411eb6:\t98                   \tcwtl   \n  411eb7:\tc1 e0 0d             \tshl    $0xd,%eax\n  411eba:\t09 d0                \tor     %edx,%eax\n  411ebc:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411ec0:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411ec4:\t66 c1 e8 07          \tshr    $0x7,%ax\n  411ec8:\t89 c1                \tmov    %eax,%ecx\n  411eca:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411ed1:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411ed5:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411edc:\t89 ca                \tmov    %ecx,%edx\n  411ede:\t88 10                \tmov    %dl,(%rax)\n  411ee0:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411ee4:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411ee8:\t89 c2                \tmov    %eax,%edx\n  411eea:\t0f b7 45 9c          \tmovzwl -0x64(%rbp),%eax\n  411eee:\t98                   \tcwtl   \n  411eef:\tc1 e0 0d             \tshl    $0xd,%eax\n  411ef2:\t09 d0                \tor     %edx,%eax\n  411ef4:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411ef8:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411efc:\t66 c1 e8 07          \tshr    $0x7,%ax\n  411f00:\t89 c2                \tmov    %eax,%edx\n  411f02:\t0f b7 45 de          \tmovzwl -0x22(%rbp),%eax\n  411f06:\t98                   \tcwtl   \n  411f07:\tc1 e0 09             \tshl    $0x9,%eax\n  411f0a:\t09 d0                \tor     %edx,%eax\n  411f0c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411f10:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411f14:\t66 c1 e8 05          \tshr    $0x5,%ax\n  411f18:\t89 c1                \tmov    %eax,%ecx\n  411f1a:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411f21:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411f25:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411f2c:\t89 ca                \tmov    %ecx,%edx\n  411f2e:\t88 10                \tmov    %dl,(%rax)\n  411f30:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411f34:\t66 c1 e8 02          \tshr    $0x2,%ax\n  411f38:\t89 c2                \tmov    %eax,%edx\n  411f3a:\t0f b7 45 ce          \tmovzwl -0x32(%rbp),%eax\n  411f3e:\t98                   \tcwtl   \n  411f3f:\tc1 e0 0e             \tshl    $0xe,%eax\n  411f42:\t09 d0                \tor     %edx,%eax\n  411f44:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411f48:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411f4c:\t66 c1 e8 02          \tshr    $0x2,%ax\n  411f50:\t89 c2                \tmov    %eax,%edx\n  411f52:\t0f b7 45 d6          \tmovzwl -0x2a(%rbp),%eax\n  411f56:\t98                   \tcwtl   \n  411f57:\tc1 e0 0e             \tshl    $0xe,%eax\n  411f5a:\t09 d0                \tor     %edx,%eax\n  411f5c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411f60:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411f64:\t66 c1 e8 06          \tshr    $0x6,%ax\n  411f68:\t89 c2                \tmov    %eax,%edx\n  411f6a:\t0f b7 45 c6          \tmovzwl -0x3a(%rbp),%eax\n  411f6e:\t98                   \tcwtl   \n  411f6f:\tc1 e0 0a             \tshl    $0xa,%eax\n  411f72:\t09 d0                \tor     %edx,%eax\n  411f74:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411f78:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411f7c:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411f80:\t89 c1                \tmov    %eax,%ecx\n  411f82:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411f89:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411f8d:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411f94:\t89 ca                \tmov    %ecx,%edx\n  411f96:\t88 10                \tmov    %dl,(%rax)\n  411f98:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411f9c:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411fa0:\t89 c2                \tmov    %eax,%edx\n  411fa2:\t0f b7 45 9e          \tmovzwl -0x62(%rbp),%eax\n  411fa6:\t98                   \tcwtl   \n  411fa7:\tc1 e0 0d             \tshl    $0xd,%eax\n  411faa:\t09 d0                \tor     %edx,%eax\n  411fac:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411fb0:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411fb4:\t66 c1 e8 08          \tshr    $0x8,%ax\n  411fb8:\t89 c1                \tmov    %eax,%ecx\n  411fba:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  411fc1:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  411fc5:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  411fcc:\t89 ca                \tmov    %ecx,%edx\n  411fce:\t88 10                \tmov    %dl,(%rax)\n  411fd0:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411fd4:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411fd8:\t89 c2                \tmov    %eax,%edx\n  411fda:\t0f b7 45 a0          \tmovzwl -0x60(%rbp),%eax\n  411fde:\t98                   \tcwtl   \n  411fdf:\tc1 e0 0d             \tshl    $0xd,%eax\n  411fe2:\t09 d0                \tor     %edx,%eax\n  411fe4:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  411fe8:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  411fec:\t66 c1 e8 03          \tshr    $0x3,%ax\n  411ff0:\t89 c2                \tmov    %eax,%edx\n  411ff2:\t0f b7 45 a2          \tmovzwl -0x5e(%rbp),%eax\n  411ff6:\t98                   \tcwtl   \n  411ff7:\tc1 e0 0d             \tshl    $0xd,%eax\n  411ffa:\t09 d0                \tor     %edx,%eax\n  411ffc:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  412000:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  412004:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412008:\t89 c2                \tmov    %eax,%edx\n  41200a:\t0f b7 45 a4          \tmovzwl -0x5c(%rbp),%eax\n  41200e:\t98                   \tcwtl   \n  41200f:\tc1 e0 0d             \tshl    $0xd,%eax\n  412012:\t09 d0                \tor     %edx,%eax\n  412014:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  412018:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41201c:\t66 c1 e8 07          \tshr    $0x7,%ax\n  412020:\t89 c1                \tmov    %eax,%ecx\n  412022:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412029:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  41202d:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412034:\t89 ca                \tmov    %ecx,%edx\n  412036:\t88 10                \tmov    %dl,(%rax)\n  412038:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41203c:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412040:\t89 c2                \tmov    %eax,%edx\n  412042:\t0f b7 45 a6          \tmovzwl -0x5a(%rbp),%eax\n  412046:\t98                   \tcwtl   \n  412047:\tc1 e0 0d             \tshl    $0xd,%eax\n  41204a:\t09 d0                \tor     %edx,%eax\n  41204c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  412050:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  412054:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412058:\t89 c2                \tmov    %eax,%edx\n  41205a:\t0f b7 45 a8          \tmovzwl -0x58(%rbp),%eax\n  41205e:\t98                   \tcwtl   \n  41205f:\tc1 e0 0d             \tshl    $0xd,%eax\n  412062:\t09 d0                \tor     %edx,%eax\n  412064:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  412068:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41206c:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412070:\t89 c2                \tmov    %eax,%edx\n  412072:\t0f b7 45 aa          \tmovzwl -0x56(%rbp),%eax\n  412076:\t98                   \tcwtl   \n  412077:\tc1 e0 0d             \tshl    $0xd,%eax\n  41207a:\t09 d0                \tor     %edx,%eax\n  41207c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  412080:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  412084:\t66 c1 e8 06          \tshr    $0x6,%ax\n  412088:\t89 c1                \tmov    %eax,%ecx\n  41208a:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412091:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412095:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41209c:\t89 ca                \tmov    %ecx,%edx\n  41209e:\t88 10                \tmov    %dl,(%rax)\n  4120a0:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4120a4:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4120a8:\t89 c2                \tmov    %eax,%edx\n  4120aa:\t0f b7 45 ac          \tmovzwl -0x54(%rbp),%eax\n  4120ae:\t98                   \tcwtl   \n  4120af:\tc1 e0 0d             \tshl    $0xd,%eax\n  4120b2:\t09 d0                \tor     %edx,%eax\n  4120b4:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  4120b8:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4120bc:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4120c0:\t89 c2                \tmov    %eax,%edx\n  4120c2:\t0f b7 45 ae          \tmovzwl -0x52(%rbp),%eax\n  4120c6:\t98                   \tcwtl   \n  4120c7:\tc1 e0 0d             \tshl    $0xd,%eax\n  4120ca:\t09 d0                \tor     %edx,%eax\n  4120cc:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  4120d0:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4120d4:\t66 c1 e8 08          \tshr    $0x8,%ax\n  4120d8:\t89 c1                \tmov    %eax,%ecx\n  4120da:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4120e1:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4120e5:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4120ec:\t89 ca                \tmov    %ecx,%edx\n  4120ee:\t88 10                \tmov    %dl,(%rax)\n  4120f0:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  4120f4:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4120f8:\t89 c2                \tmov    %eax,%edx\n  4120fa:\t0f b7 45 b0          \tmovzwl -0x50(%rbp),%eax\n  4120fe:\t98                   \tcwtl   \n  4120ff:\tc1 e0 0d             \tshl    $0xd,%eax\n  412102:\t09 d0                \tor     %edx,%eax\n  412104:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  412108:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41210c:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412110:\t89 c2                \tmov    %eax,%edx\n  412112:\t0f b7 45 b2          \tmovzwl -0x4e(%rbp),%eax\n  412116:\t98                   \tcwtl   \n  412117:\tc1 e0 0d             \tshl    $0xd,%eax\n  41211a:\t09 d0                \tor     %edx,%eax\n  41211c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  412120:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  412124:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412128:\t89 c2                \tmov    %eax,%edx\n  41212a:\t0f b7 45 b4          \tmovzwl -0x4c(%rbp),%eax\n  41212e:\t98                   \tcwtl   \n  41212f:\tc1 e0 0d             \tshl    $0xd,%eax\n  412132:\t09 d0                \tor     %edx,%eax\n  412134:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  412138:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41213c:\t66 c1 e8 07          \tshr    $0x7,%ax\n  412140:\t89 c1                \tmov    %eax,%ecx\n  412142:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412149:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  41214d:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412154:\t89 ca                \tmov    %ecx,%edx\n  412156:\t88 10                \tmov    %dl,(%rax)\n  412158:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  41215c:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412160:\t89 c2                \tmov    %eax,%edx\n  412162:\t0f b7 45 b6          \tmovzwl -0x4a(%rbp),%eax\n  412166:\t98                   \tcwtl   \n  412167:\tc1 e0 0d             \tshl    $0xd,%eax\n  41216a:\t09 d0                \tor     %edx,%eax\n  41216c:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  412170:\t66 c1 6d fc 04       \tshrw   $0x4,-0x4(%rbp)\n  412175:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  412179:\t66 c1 e8 08          \tshr    $0x8,%ax\n  41217d:\t89 c2                \tmov    %eax,%edx\n  41217f:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412186:\t88 10                \tmov    %dl,(%rax)\n  412188:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  41218f:\t0f b6 10             \tmovzbl (%rax),%edx\n  412192:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n  412199:\t88 90 f2 02 00 00    \tmov    %dl,0x2f2(%rax)\n  41219f:\te9 91 13 00 00       \tjmp    413535 <gsm_encode+0x1fd8>\n  4121a4:\t66 c7 45 fe 00 00    \tmovw   $0x0,-0x2(%rbp)\n  4121aa:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4121ae:\t66 c1 e8 04          \tshr    $0x4,%ax\n  4121b2:\t89 c2                \tmov    %eax,%edx\n  4121b4:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n  4121bb:\t0f b6 80 f2 02 00 00 \tmovzbl 0x2f2(%rax),%eax\n  4121c2:\t0f b6 c0             \tmovzbl %al,%eax\n  4121c5:\tc1 e0 0c             \tshl    $0xc,%eax\n  4121c8:\t09 d0                \tor     %edx,%eax\n  4121ca:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4121ce:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4121d2:\t66 c1 e8 06          \tshr    $0x6,%ax\n  4121d6:\t89 c2                \tmov    %eax,%edx\n  4121d8:\t0f b7 45 e0          \tmovzwl -0x20(%rbp),%eax\n  4121dc:\t98                   \tcwtl   \n  4121dd:\tc1 e0 0a             \tshl    $0xa,%eax\n  4121e0:\t09 d0                \tor     %edx,%eax\n  4121e2:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4121e6:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4121ea:\t66 c1 e8 06          \tshr    $0x6,%ax\n  4121ee:\t89 c1                \tmov    %eax,%ecx\n  4121f0:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4121f7:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4121fb:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412202:\t89 ca                \tmov    %ecx,%edx\n  412204:\t88 10                \tmov    %dl,(%rax)\n  412206:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41220a:\t66 c1 e8 06          \tshr    $0x6,%ax\n  41220e:\t89 c2                \tmov    %eax,%edx\n  412210:\t0f b7 45 e2          \tmovzwl -0x1e(%rbp),%eax\n  412214:\t98                   \tcwtl   \n  412215:\tc1 e0 0a             \tshl    $0xa,%eax\n  412218:\t09 d0                \tor     %edx,%eax\n  41221a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41221e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412222:\t66 c1 e8 08          \tshr    $0x8,%ax\n  412226:\t89 c1                \tmov    %eax,%ecx\n  412228:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  41222f:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412233:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41223a:\t89 ca                \tmov    %ecx,%edx\n  41223c:\t88 10                \tmov    %dl,(%rax)\n  41223e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412242:\t66 c1 e8 05          \tshr    $0x5,%ax\n  412246:\t89 c2                \tmov    %eax,%edx\n  412248:\t0f b7 45 e4          \tmovzwl -0x1c(%rbp),%eax\n  41224c:\t98                   \tcwtl   \n  41224d:\tc1 e0 0b             \tshl    $0xb,%eax\n  412250:\t09 d0                \tor     %edx,%eax\n  412252:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412256:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41225a:\t66 c1 e8 05          \tshr    $0x5,%ax\n  41225e:\t89 c2                \tmov    %eax,%edx\n  412260:\t0f b7 45 e6          \tmovzwl -0x1a(%rbp),%eax\n  412264:\t98                   \tcwtl   \n  412265:\tc1 e0 0b             \tshl    $0xb,%eax\n  412268:\t09 d0                \tor     %edx,%eax\n  41226a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41226e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412272:\t66 c1 e8 06          \tshr    $0x6,%ax\n  412276:\t89 c1                \tmov    %eax,%ecx\n  412278:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  41227f:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412283:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41228a:\t89 ca                \tmov    %ecx,%edx\n  41228c:\t88 10                \tmov    %dl,(%rax)\n  41228e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412292:\t66 c1 e8 04          \tshr    $0x4,%ax\n  412296:\t89 c2                \tmov    %eax,%edx\n  412298:\t0f b7 45 e8          \tmovzwl -0x18(%rbp),%eax\n  41229c:\t98                   \tcwtl   \n  41229d:\tc1 e0 0c             \tshl    $0xc,%eax\n  4122a0:\t09 d0                \tor     %edx,%eax\n  4122a2:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4122a6:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4122aa:\t66 c1 e8 04          \tshr    $0x4,%ax\n  4122ae:\t89 c2                \tmov    %eax,%edx\n  4122b0:\t0f b7 45 ea          \tmovzwl -0x16(%rbp),%eax\n  4122b4:\t98                   \tcwtl   \n  4122b5:\tc1 e0 0c             \tshl    $0xc,%eax\n  4122b8:\t09 d0                \tor     %edx,%eax\n  4122ba:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4122be:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4122c2:\t66 c1 e8 06          \tshr    $0x6,%ax\n  4122c6:\t89 c1                \tmov    %eax,%ecx\n  4122c8:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4122cf:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4122d3:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4122da:\t89 ca                \tmov    %ecx,%edx\n  4122dc:\t88 10                \tmov    %dl,(%rax)\n  4122de:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4122e2:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4122e6:\t89 c2                \tmov    %eax,%edx\n  4122e8:\t0f b7 45 ec          \tmovzwl -0x14(%rbp),%eax\n  4122ec:\t98                   \tcwtl   \n  4122ed:\tc1 e0 0d             \tshl    $0xd,%eax\n  4122f0:\t09 d0                \tor     %edx,%eax\n  4122f2:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4122f6:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4122fa:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4122fe:\t89 c2                \tmov    %eax,%edx\n  412300:\t0f b7 45 ee          \tmovzwl -0x12(%rbp),%eax\n  412304:\t98                   \tcwtl   \n  412305:\tc1 e0 0d             \tshl    $0xd,%eax\n  412308:\t09 d0                \tor     %edx,%eax\n  41230a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41230e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412312:\t66 c1 e8 08          \tshr    $0x8,%ax\n  412316:\t89 c1                \tmov    %eax,%ecx\n  412318:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  41231f:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412323:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41232a:\t89 ca                \tmov    %ecx,%edx\n  41232c:\t88 10                \tmov    %dl,(%rax)\n  41232e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412332:\t66 c1 e8 07          \tshr    $0x7,%ax\n  412336:\t89 c2                \tmov    %eax,%edx\n  412338:\t0f b7 45 d8          \tmovzwl -0x28(%rbp),%eax\n  41233c:\t98                   \tcwtl   \n  41233d:\tc1 e0 09             \tshl    $0x9,%eax\n  412340:\t09 d0                \tor     %edx,%eax\n  412342:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412346:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41234a:\t66 c1 e8 02          \tshr    $0x2,%ax\n  41234e:\t89 c2                \tmov    %eax,%edx\n  412350:\t0f b7 45 c8          \tmovzwl -0x38(%rbp),%eax\n  412354:\t98                   \tcwtl   \n  412355:\tc1 e0 0e             \tshl    $0xe,%eax\n  412358:\t09 d0                \tor     %edx,%eax\n  41235a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41235e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412362:\t66 c1 e8 07          \tshr    $0x7,%ax\n  412366:\t89 c1                \tmov    %eax,%ecx\n  412368:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  41236f:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412373:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41237a:\t89 ca                \tmov    %ecx,%edx\n  41237c:\t88 10                \tmov    %dl,(%rax)\n  41237e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412382:\t66 c1 e8 02          \tshr    $0x2,%ax\n  412386:\t89 c2                \tmov    %eax,%edx\n  412388:\t0f b7 45 d0          \tmovzwl -0x30(%rbp),%eax\n  41238c:\t98                   \tcwtl   \n  41238d:\tc1 e0 0e             \tshl    $0xe,%eax\n  412390:\t09 d0                \tor     %edx,%eax\n  412392:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412396:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41239a:\t66 c1 e8 06          \tshr    $0x6,%ax\n  41239e:\t89 c2                \tmov    %eax,%edx\n  4123a0:\t0f b7 45 c0          \tmovzwl -0x40(%rbp),%eax\n  4123a4:\t98                   \tcwtl   \n  4123a5:\tc1 e0 0a             \tshl    $0xa,%eax\n  4123a8:\t09 d0                \tor     %edx,%eax\n  4123aa:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4123ae:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4123b2:\t66 c1 e8 07          \tshr    $0x7,%ax\n  4123b6:\t89 c1                \tmov    %eax,%ecx\n  4123b8:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4123bf:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4123c3:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4123ca:\t89 ca                \tmov    %ecx,%edx\n  4123cc:\t88 10                \tmov    %dl,(%rax)\n  4123ce:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4123d2:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4123d6:\t89 c2                \tmov    %eax,%edx\n  4123d8:\t0f b7 85 50 ff ff ff \tmovzwl -0xb0(%rbp),%eax\n  4123df:\t98                   \tcwtl   \n  4123e0:\tc1 e0 0d             \tshl    $0xd,%eax\n  4123e3:\t09 d0                \tor     %edx,%eax\n  4123e5:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4123e9:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4123ed:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4123f1:\t89 c2                \tmov    %eax,%edx\n  4123f3:\t0f b7 85 52 ff ff ff \tmovzwl -0xae(%rbp),%eax\n  4123fa:\t98                   \tcwtl   \n  4123fb:\tc1 e0 0d             \tshl    $0xd,%eax\n  4123fe:\t09 d0                \tor     %edx,%eax\n  412400:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412404:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412408:\t66 c1 e8 03          \tshr    $0x3,%ax\n  41240c:\t89 c2                \tmov    %eax,%edx\n  41240e:\t0f b7 85 54 ff ff ff \tmovzwl -0xac(%rbp),%eax\n  412415:\t98                   \tcwtl   \n  412416:\tc1 e0 0d             \tshl    $0xd,%eax\n  412419:\t09 d0                \tor     %edx,%eax\n  41241b:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41241f:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412423:\t66 c1 e8 06          \tshr    $0x6,%ax\n  412427:\t89 c1                \tmov    %eax,%ecx\n  412429:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412430:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412434:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41243b:\t89 ca                \tmov    %ecx,%edx\n  41243d:\t88 10                \tmov    %dl,(%rax)\n  41243f:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412443:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412447:\t89 c2                \tmov    %eax,%edx\n  412449:\t0f b7 85 56 ff ff ff \tmovzwl -0xaa(%rbp),%eax\n  412450:\t98                   \tcwtl   \n  412451:\tc1 e0 0d             \tshl    $0xd,%eax\n  412454:\t09 d0                \tor     %edx,%eax\n  412456:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41245a:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41245e:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412462:\t89 c2                \tmov    %eax,%edx\n  412464:\t0f b7 85 58 ff ff ff \tmovzwl -0xa8(%rbp),%eax\n  41246b:\t98                   \tcwtl   \n  41246c:\tc1 e0 0d             \tshl    $0xd,%eax\n  41246f:\t09 d0                \tor     %edx,%eax\n  412471:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412475:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412479:\t66 c1 e8 08          \tshr    $0x8,%ax\n  41247d:\t89 c1                \tmov    %eax,%ecx\n  41247f:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412486:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  41248a:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412491:\t89 ca                \tmov    %ecx,%edx\n  412493:\t88 10                \tmov    %dl,(%rax)\n  412495:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412499:\t66 c1 e8 03          \tshr    $0x3,%ax\n  41249d:\t89 c2                \tmov    %eax,%edx\n  41249f:\t0f b7 85 5a ff ff ff \tmovzwl -0xa6(%rbp),%eax\n  4124a6:\t98                   \tcwtl   \n  4124a7:\tc1 e0 0d             \tshl    $0xd,%eax\n  4124aa:\t09 d0                \tor     %edx,%eax\n  4124ac:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4124b0:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4124b4:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4124b8:\t89 c2                \tmov    %eax,%edx\n  4124ba:\t0f b7 85 5c ff ff ff \tmovzwl -0xa4(%rbp),%eax\n  4124c1:\t98                   \tcwtl   \n  4124c2:\tc1 e0 0d             \tshl    $0xd,%eax\n  4124c5:\t09 d0                \tor     %edx,%eax\n  4124c7:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4124cb:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4124cf:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4124d3:\t89 c2                \tmov    %eax,%edx\n  4124d5:\t0f b7 85 5e ff ff ff \tmovzwl -0xa2(%rbp),%eax\n  4124dc:\t98                   \tcwtl   \n  4124dd:\tc1 e0 0d             \tshl    $0xd,%eax\n  4124e0:\t09 d0                \tor     %edx,%eax\n  4124e2:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4124e6:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4124ea:\t66 c1 e8 07          \tshr    $0x7,%ax\n  4124ee:\t89 c1                \tmov    %eax,%ecx\n  4124f0:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4124f7:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4124fb:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412502:\t89 ca                \tmov    %ecx,%edx\n  412504:\t88 10                \tmov    %dl,(%rax)\n  412506:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41250a:\t66 c1 e8 03          \tshr    $0x3,%ax\n  41250e:\t89 c2                \tmov    %eax,%edx\n  412510:\t0f b7 85 60 ff ff ff \tmovzwl -0xa0(%rbp),%eax\n  412517:\t98                   \tcwtl   \n  412518:\tc1 e0 0d             \tshl    $0xd,%eax\n  41251b:\t09 d0                \tor     %edx,%eax\n  41251d:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412521:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412525:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412529:\t89 c2                \tmov    %eax,%edx\n  41252b:\t0f b7 85 62 ff ff ff \tmovzwl -0x9e(%rbp),%eax\n  412532:\t98                   \tcwtl   \n  412533:\tc1 e0 0d             \tshl    $0xd,%eax\n  412536:\t09 d0                \tor     %edx,%eax\n  412538:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41253c:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412540:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412544:\t89 c2                \tmov    %eax,%edx\n  412546:\t0f b7 85 64 ff ff ff \tmovzwl -0x9c(%rbp),%eax\n  41254d:\t98                   \tcwtl   \n  41254e:\tc1 e0 0d             \tshl    $0xd,%eax\n  412551:\t09 d0                \tor     %edx,%eax\n  412553:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412557:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41255b:\t66 c1 e8 06          \tshr    $0x6,%ax\n  41255f:\t89 c1                \tmov    %eax,%ecx\n  412561:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412568:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  41256c:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412573:\t89 ca                \tmov    %ecx,%edx\n  412575:\t88 10                \tmov    %dl,(%rax)\n  412577:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41257b:\t66 c1 e8 03          \tshr    $0x3,%ax\n  41257f:\t89 c2                \tmov    %eax,%edx\n  412581:\t0f b7 85 66 ff ff ff \tmovzwl -0x9a(%rbp),%eax\n  412588:\t98                   \tcwtl   \n  412589:\tc1 e0 0d             \tshl    $0xd,%eax\n  41258c:\t09 d0                \tor     %edx,%eax\n  41258e:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412592:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412596:\t66 c1 e8 03          \tshr    $0x3,%ax\n  41259a:\t89 c2                \tmov    %eax,%edx\n  41259c:\t0f b7 85 68 ff ff ff \tmovzwl -0x98(%rbp),%eax\n  4125a3:\t98                   \tcwtl   \n  4125a4:\tc1 e0 0d             \tshl    $0xd,%eax\n  4125a7:\t09 d0                \tor     %edx,%eax\n  4125a9:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4125ad:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4125b1:\t66 c1 e8 08          \tshr    $0x8,%ax\n  4125b5:\t89 c1                \tmov    %eax,%ecx\n  4125b7:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4125be:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4125c2:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4125c9:\t89 ca                \tmov    %ecx,%edx\n  4125cb:\t88 10                \tmov    %dl,(%rax)\n  4125cd:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4125d1:\t66 c1 e8 07          \tshr    $0x7,%ax\n  4125d5:\t89 c2                \tmov    %eax,%edx\n  4125d7:\t0f b7 45 da          \tmovzwl -0x26(%rbp),%eax\n  4125db:\t98                   \tcwtl   \n  4125dc:\tc1 e0 09             \tshl    $0x9,%eax\n  4125df:\t09 d0                \tor     %edx,%eax\n  4125e1:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4125e5:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4125e9:\t66 c1 e8 02          \tshr    $0x2,%ax\n  4125ed:\t89 c2                \tmov    %eax,%edx\n  4125ef:\t0f b7 45 ca          \tmovzwl -0x36(%rbp),%eax\n  4125f3:\t98                   \tcwtl   \n  4125f4:\tc1 e0 0e             \tshl    $0xe,%eax\n  4125f7:\t09 d0                \tor     %edx,%eax\n  4125f9:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4125fd:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412601:\t66 c1 e8 07          \tshr    $0x7,%ax\n  412605:\t89 c1                \tmov    %eax,%ecx\n  412607:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  41260e:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412612:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412619:\t89 ca                \tmov    %ecx,%edx\n  41261b:\t88 10                \tmov    %dl,(%rax)\n  41261d:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412621:\t66 c1 e8 02          \tshr    $0x2,%ax\n  412625:\t89 c2                \tmov    %eax,%edx\n  412627:\t0f b7 45 d2          \tmovzwl -0x2e(%rbp),%eax\n  41262b:\t98                   \tcwtl   \n  41262c:\tc1 e0 0e             \tshl    $0xe,%eax\n  41262f:\t09 d0                \tor     %edx,%eax\n  412631:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412635:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412639:\t66 c1 e8 06          \tshr    $0x6,%ax\n  41263d:\t89 c2                \tmov    %eax,%edx\n  41263f:\t0f b7 45 c2          \tmovzwl -0x3e(%rbp),%eax\n  412643:\t98                   \tcwtl   \n  412644:\tc1 e0 0a             \tshl    $0xa,%eax\n  412647:\t09 d0                \tor     %edx,%eax\n  412649:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41264d:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412651:\t66 c1 e8 07          \tshr    $0x7,%ax\n  412655:\t89 c1                \tmov    %eax,%ecx\n  412657:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  41265e:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412662:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412669:\t89 ca                \tmov    %ecx,%edx\n  41266b:\t88 10                \tmov    %dl,(%rax)\n  41266d:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412671:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412675:\t89 c2                \tmov    %eax,%edx\n  412677:\t0f b7 85 6a ff ff ff \tmovzwl -0x96(%rbp),%eax\n  41267e:\t98                   \tcwtl   \n  41267f:\tc1 e0 0d             \tshl    $0xd,%eax\n  412682:\t09 d0                \tor     %edx,%eax\n  412684:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412688:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41268c:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412690:\t89 c2                \tmov    %eax,%edx\n  412692:\t0f b7 85 6c ff ff ff \tmovzwl -0x94(%rbp),%eax\n  412699:\t98                   \tcwtl   \n  41269a:\tc1 e0 0d             \tshl    $0xd,%eax\n  41269d:\t09 d0                \tor     %edx,%eax\n  41269f:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4126a3:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4126a7:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4126ab:\t89 c2                \tmov    %eax,%edx\n  4126ad:\t0f b7 85 6e ff ff ff \tmovzwl -0x92(%rbp),%eax\n  4126b4:\t98                   \tcwtl   \n  4126b5:\tc1 e0 0d             \tshl    $0xd,%eax\n  4126b8:\t09 d0                \tor     %edx,%eax\n  4126ba:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4126be:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4126c2:\t66 c1 e8 06          \tshr    $0x6,%ax\n  4126c6:\t89 c1                \tmov    %eax,%ecx\n  4126c8:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4126cf:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4126d3:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4126da:\t89 ca                \tmov    %ecx,%edx\n  4126dc:\t88 10                \tmov    %dl,(%rax)\n  4126de:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4126e2:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4126e6:\t89 c2                \tmov    %eax,%edx\n  4126e8:\t0f b7 85 70 ff ff ff \tmovzwl -0x90(%rbp),%eax\n  4126ef:\t98                   \tcwtl   \n  4126f0:\tc1 e0 0d             \tshl    $0xd,%eax\n  4126f3:\t09 d0                \tor     %edx,%eax\n  4126f5:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4126f9:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4126fd:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412701:\t89 c2                \tmov    %eax,%edx\n  412703:\t0f b7 85 72 ff ff ff \tmovzwl -0x8e(%rbp),%eax\n  41270a:\t98                   \tcwtl   \n  41270b:\tc1 e0 0d             \tshl    $0xd,%eax\n  41270e:\t09 d0                \tor     %edx,%eax\n  412710:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412714:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412718:\t66 c1 e8 08          \tshr    $0x8,%ax\n  41271c:\t89 c1                \tmov    %eax,%ecx\n  41271e:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412725:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412729:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412730:\t89 ca                \tmov    %ecx,%edx\n  412732:\t88 10                \tmov    %dl,(%rax)\n  412734:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412738:\t66 c1 e8 03          \tshr    $0x3,%ax\n  41273c:\t89 c2                \tmov    %eax,%edx\n  41273e:\t0f b7 85 74 ff ff ff \tmovzwl -0x8c(%rbp),%eax\n  412745:\t98                   \tcwtl   \n  412746:\tc1 e0 0d             \tshl    $0xd,%eax\n  412749:\t09 d0                \tor     %edx,%eax\n  41274b:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41274f:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412753:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412757:\t89 c2                \tmov    %eax,%edx\n  412759:\t0f b7 85 76 ff ff ff \tmovzwl -0x8a(%rbp),%eax\n  412760:\t98                   \tcwtl   \n  412761:\tc1 e0 0d             \tshl    $0xd,%eax\n  412764:\t09 d0                \tor     %edx,%eax\n  412766:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41276a:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41276e:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412772:\t89 c2                \tmov    %eax,%edx\n  412774:\t0f b7 85 78 ff ff ff \tmovzwl -0x88(%rbp),%eax\n  41277b:\t98                   \tcwtl   \n  41277c:\tc1 e0 0d             \tshl    $0xd,%eax\n  41277f:\t09 d0                \tor     %edx,%eax\n  412781:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412785:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412789:\t66 c1 e8 07          \tshr    $0x7,%ax\n  41278d:\t89 c1                \tmov    %eax,%ecx\n  41278f:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412796:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  41279a:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4127a1:\t89 ca                \tmov    %ecx,%edx\n  4127a3:\t88 10                \tmov    %dl,(%rax)\n  4127a5:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4127a9:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4127ad:\t89 c2                \tmov    %eax,%edx\n  4127af:\t0f b7 85 7a ff ff ff \tmovzwl -0x86(%rbp),%eax\n  4127b6:\t98                   \tcwtl   \n  4127b7:\tc1 e0 0d             \tshl    $0xd,%eax\n  4127ba:\t09 d0                \tor     %edx,%eax\n  4127bc:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4127c0:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4127c4:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4127c8:\t89 c2                \tmov    %eax,%edx\n  4127ca:\t0f b7 85 7c ff ff ff \tmovzwl -0x84(%rbp),%eax\n  4127d1:\t98                   \tcwtl   \n  4127d2:\tc1 e0 0d             \tshl    $0xd,%eax\n  4127d5:\t09 d0                \tor     %edx,%eax\n  4127d7:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4127db:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4127df:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4127e3:\t89 c2                \tmov    %eax,%edx\n  4127e5:\t0f b7 85 7e ff ff ff \tmovzwl -0x82(%rbp),%eax\n  4127ec:\t98                   \tcwtl   \n  4127ed:\tc1 e0 0d             \tshl    $0xd,%eax\n  4127f0:\t09 d0                \tor     %edx,%eax\n  4127f2:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4127f6:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4127fa:\t66 c1 e8 06          \tshr    $0x6,%ax\n  4127fe:\t89 c1                \tmov    %eax,%ecx\n  412800:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412807:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  41280b:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412812:\t89 ca                \tmov    %ecx,%edx\n  412814:\t88 10                \tmov    %dl,(%rax)\n  412816:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41281a:\t66 c1 e8 03          \tshr    $0x3,%ax\n  41281e:\t89 c2                \tmov    %eax,%edx\n  412820:\t0f b7 45 80          \tmovzwl -0x80(%rbp),%eax\n  412824:\t98                   \tcwtl   \n  412825:\tc1 e0 0d             \tshl    $0xd,%eax\n  412828:\t09 d0                \tor     %edx,%eax\n  41282a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41282e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412832:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412836:\t89 c2                \tmov    %eax,%edx\n  412838:\t0f b7 45 82          \tmovzwl -0x7e(%rbp),%eax\n  41283c:\t98                   \tcwtl   \n  41283d:\tc1 e0 0d             \tshl    $0xd,%eax\n  412840:\t09 d0                \tor     %edx,%eax\n  412842:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412846:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41284a:\t66 c1 e8 08          \tshr    $0x8,%ax\n  41284e:\t89 c1                \tmov    %eax,%ecx\n  412850:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412857:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  41285b:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412862:\t89 ca                \tmov    %ecx,%edx\n  412864:\t88 10                \tmov    %dl,(%rax)\n  412866:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41286a:\t66 c1 e8 07          \tshr    $0x7,%ax\n  41286e:\t89 c2                \tmov    %eax,%edx\n  412870:\t0f b7 45 dc          \tmovzwl -0x24(%rbp),%eax\n  412874:\t98                   \tcwtl   \n  412875:\tc1 e0 09             \tshl    $0x9,%eax\n  412878:\t09 d0                \tor     %edx,%eax\n  41287a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41287e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412882:\t66 c1 e8 02          \tshr    $0x2,%ax\n  412886:\t89 c2                \tmov    %eax,%edx\n  412888:\t0f b7 45 cc          \tmovzwl -0x34(%rbp),%eax\n  41288c:\t98                   \tcwtl   \n  41288d:\tc1 e0 0e             \tshl    $0xe,%eax\n  412890:\t09 d0                \tor     %edx,%eax\n  412892:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412896:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41289a:\t66 c1 e8 07          \tshr    $0x7,%ax\n  41289e:\t89 c1                \tmov    %eax,%ecx\n  4128a0:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4128a7:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4128ab:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4128b2:\t89 ca                \tmov    %ecx,%edx\n  4128b4:\t88 10                \tmov    %dl,(%rax)\n  4128b6:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4128ba:\t66 c1 e8 02          \tshr    $0x2,%ax\n  4128be:\t89 c2                \tmov    %eax,%edx\n  4128c0:\t0f b7 45 d4          \tmovzwl -0x2c(%rbp),%eax\n  4128c4:\t98                   \tcwtl   \n  4128c5:\tc1 e0 0e             \tshl    $0xe,%eax\n  4128c8:\t09 d0                \tor     %edx,%eax\n  4128ca:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4128ce:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4128d2:\t66 c1 e8 06          \tshr    $0x6,%ax\n  4128d6:\t89 c2                \tmov    %eax,%edx\n  4128d8:\t0f b7 45 c4          \tmovzwl -0x3c(%rbp),%eax\n  4128dc:\t98                   \tcwtl   \n  4128dd:\tc1 e0 0a             \tshl    $0xa,%eax\n  4128e0:\t09 d0                \tor     %edx,%eax\n  4128e2:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4128e6:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4128ea:\t66 c1 e8 07          \tshr    $0x7,%ax\n  4128ee:\t89 c1                \tmov    %eax,%ecx\n  4128f0:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4128f7:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4128fb:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412902:\t89 ca                \tmov    %ecx,%edx\n  412904:\t88 10                \tmov    %dl,(%rax)\n  412906:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41290a:\t66 c1 e8 03          \tshr    $0x3,%ax\n  41290e:\t89 c2                \tmov    %eax,%edx\n  412910:\t0f b7 45 84          \tmovzwl -0x7c(%rbp),%eax\n  412914:\t98                   \tcwtl   \n  412915:\tc1 e0 0d             \tshl    $0xd,%eax\n  412918:\t09 d0                \tor     %edx,%eax\n  41291a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41291e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412922:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412926:\t89 c2                \tmov    %eax,%edx\n  412928:\t0f b7 45 86          \tmovzwl -0x7a(%rbp),%eax\n  41292c:\t98                   \tcwtl   \n  41292d:\tc1 e0 0d             \tshl    $0xd,%eax\n  412930:\t09 d0                \tor     %edx,%eax\n  412932:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412936:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41293a:\t66 c1 e8 03          \tshr    $0x3,%ax\n  41293e:\t89 c2                \tmov    %eax,%edx\n  412940:\t0f b7 45 88          \tmovzwl -0x78(%rbp),%eax\n  412944:\t98                   \tcwtl   \n  412945:\tc1 e0 0d             \tshl    $0xd,%eax\n  412948:\t09 d0                \tor     %edx,%eax\n  41294a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41294e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412952:\t66 c1 e8 06          \tshr    $0x6,%ax\n  412956:\t89 c1                \tmov    %eax,%ecx\n  412958:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  41295f:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412963:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41296a:\t89 ca                \tmov    %ecx,%edx\n  41296c:\t88 10                \tmov    %dl,(%rax)\n  41296e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412972:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412976:\t89 c2                \tmov    %eax,%edx\n  412978:\t0f b7 45 8a          \tmovzwl -0x76(%rbp),%eax\n  41297c:\t98                   \tcwtl   \n  41297d:\tc1 e0 0d             \tshl    $0xd,%eax\n  412980:\t09 d0                \tor     %edx,%eax\n  412982:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412986:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  41298a:\t66 c1 e8 03          \tshr    $0x3,%ax\n  41298e:\t89 c2                \tmov    %eax,%edx\n  412990:\t0f b7 45 8c          \tmovzwl -0x74(%rbp),%eax\n  412994:\t98                   \tcwtl   \n  412995:\tc1 e0 0d             \tshl    $0xd,%eax\n  412998:\t09 d0                \tor     %edx,%eax\n  41299a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  41299e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4129a2:\t66 c1 e8 08          \tshr    $0x8,%ax\n  4129a6:\t89 c1                \tmov    %eax,%ecx\n  4129a8:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4129af:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4129b3:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4129ba:\t89 ca                \tmov    %ecx,%edx\n  4129bc:\t88 10                \tmov    %dl,(%rax)\n  4129be:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4129c2:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4129c6:\t89 c2                \tmov    %eax,%edx\n  4129c8:\t0f b7 45 8e          \tmovzwl -0x72(%rbp),%eax\n  4129cc:\t98                   \tcwtl   \n  4129cd:\tc1 e0 0d             \tshl    $0xd,%eax\n  4129d0:\t09 d0                \tor     %edx,%eax\n  4129d2:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4129d6:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4129da:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4129de:\t89 c2                \tmov    %eax,%edx\n  4129e0:\t0f b7 45 90          \tmovzwl -0x70(%rbp),%eax\n  4129e4:\t98                   \tcwtl   \n  4129e5:\tc1 e0 0d             \tshl    $0xd,%eax\n  4129e8:\t09 d0                \tor     %edx,%eax\n  4129ea:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  4129ee:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  4129f2:\t66 c1 e8 03          \tshr    $0x3,%ax\n  4129f6:\t89 c2                \tmov    %eax,%edx\n  4129f8:\t0f b7 45 92          \tmovzwl -0x6e(%rbp),%eax\n  4129fc:\t98                   \tcwtl   \n  4129fd:\tc1 e0 0d             \tshl    $0xd,%eax\n  412a00:\t09 d0                \tor     %edx,%eax\n  412a02:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412a06:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412a0a:\t66 c1 e8 07          \tshr    $0x7,%ax\n  412a0e:\t89 c1                \tmov    %eax,%ecx\n  412a10:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412a17:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412a1b:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412a22:\t89 ca                \tmov    %ecx,%edx\n  412a24:\t88 10                \tmov    %dl,(%rax)\n  412a26:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412a2a:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412a2e:\t89 c2                \tmov    %eax,%edx\n  412a30:\t0f b7 45 94          \tmovzwl -0x6c(%rbp),%eax\n  412a34:\t98                   \tcwtl   \n  412a35:\tc1 e0 0d             \tshl    $0xd,%eax\n  412a38:\t09 d0                \tor     %edx,%eax\n  412a3a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412a3e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412a42:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412a46:\t89 c2                \tmov    %eax,%edx\n  412a48:\t0f b7 45 96          \tmovzwl -0x6a(%rbp),%eax\n  412a4c:\t98                   \tcwtl   \n  412a4d:\tc1 e0 0d             \tshl    $0xd,%eax\n  412a50:\t09 d0                \tor     %edx,%eax\n  412a52:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412a56:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412a5a:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412a5e:\t89 c2                \tmov    %eax,%edx\n  412a60:\t0f b7 45 98          \tmovzwl -0x68(%rbp),%eax\n  412a64:\t98                   \tcwtl   \n  412a65:\tc1 e0 0d             \tshl    $0xd,%eax\n  412a68:\t09 d0                \tor     %edx,%eax\n  412a6a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412a6e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412a72:\t66 c1 e8 06          \tshr    $0x6,%ax\n  412a76:\t89 c1                \tmov    %eax,%ecx\n  412a78:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412a7f:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412a83:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412a8a:\t89 ca                \tmov    %ecx,%edx\n  412a8c:\t88 10                \tmov    %dl,(%rax)\n  412a8e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412a92:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412a96:\t89 c2                \tmov    %eax,%edx\n  412a98:\t0f b7 45 9a          \tmovzwl -0x66(%rbp),%eax\n  412a9c:\t98                   \tcwtl   \n  412a9d:\tc1 e0 0d             \tshl    $0xd,%eax\n  412aa0:\t09 d0                \tor     %edx,%eax\n  412aa2:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412aa6:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412aaa:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412aae:\t89 c2                \tmov    %eax,%edx\n  412ab0:\t0f b7 45 9c          \tmovzwl -0x64(%rbp),%eax\n  412ab4:\t98                   \tcwtl   \n  412ab5:\tc1 e0 0d             \tshl    $0xd,%eax\n  412ab8:\t09 d0                \tor     %edx,%eax\n  412aba:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412abe:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412ac2:\t66 c1 e8 08          \tshr    $0x8,%ax\n  412ac6:\t89 c1                \tmov    %eax,%ecx\n  412ac8:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412acf:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412ad3:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412ada:\t89 ca                \tmov    %ecx,%edx\n  412adc:\t88 10                \tmov    %dl,(%rax)\n  412ade:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412ae2:\t66 c1 e8 07          \tshr    $0x7,%ax\n  412ae6:\t89 c2                \tmov    %eax,%edx\n  412ae8:\t0f b7 45 de          \tmovzwl -0x22(%rbp),%eax\n  412aec:\t98                   \tcwtl   \n  412aed:\tc1 e0 09             \tshl    $0x9,%eax\n  412af0:\t09 d0                \tor     %edx,%eax\n  412af2:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412af6:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412afa:\t66 c1 e8 02          \tshr    $0x2,%ax\n  412afe:\t89 c2                \tmov    %eax,%edx\n  412b00:\t0f b7 45 ce          \tmovzwl -0x32(%rbp),%eax\n  412b04:\t98                   \tcwtl   \n  412b05:\tc1 e0 0e             \tshl    $0xe,%eax\n  412b08:\t09 d0                \tor     %edx,%eax\n  412b0a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412b0e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412b12:\t66 c1 e8 07          \tshr    $0x7,%ax\n  412b16:\t89 c1                \tmov    %eax,%ecx\n  412b18:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412b1f:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412b23:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412b2a:\t89 ca                \tmov    %ecx,%edx\n  412b2c:\t88 10                \tmov    %dl,(%rax)\n  412b2e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412b32:\t66 c1 e8 02          \tshr    $0x2,%ax\n  412b36:\t89 c2                \tmov    %eax,%edx\n  412b38:\t0f b7 45 d6          \tmovzwl -0x2a(%rbp),%eax\n  412b3c:\t98                   \tcwtl   \n  412b3d:\tc1 e0 0e             \tshl    $0xe,%eax\n  412b40:\t09 d0                \tor     %edx,%eax\n  412b42:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412b46:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412b4a:\t66 c1 e8 06          \tshr    $0x6,%ax\n  412b4e:\t89 c2                \tmov    %eax,%edx\n  412b50:\t0f b7 45 c6          \tmovzwl -0x3a(%rbp),%eax\n  412b54:\t98                   \tcwtl   \n  412b55:\tc1 e0 0a             \tshl    $0xa,%eax\n  412b58:\t09 d0                \tor     %edx,%eax\n  412b5a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412b5e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412b62:\t66 c1 e8 07          \tshr    $0x7,%ax\n  412b66:\t89 c1                \tmov    %eax,%ecx\n  412b68:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412b6f:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412b73:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412b7a:\t89 ca                \tmov    %ecx,%edx\n  412b7c:\t88 10                \tmov    %dl,(%rax)\n  412b7e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412b82:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412b86:\t89 c2                \tmov    %eax,%edx\n  412b88:\t0f b7 45 9e          \tmovzwl -0x62(%rbp),%eax\n  412b8c:\t98                   \tcwtl   \n  412b8d:\tc1 e0 0d             \tshl    $0xd,%eax\n  412b90:\t09 d0                \tor     %edx,%eax\n  412b92:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412b96:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412b9a:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412b9e:\t89 c2                \tmov    %eax,%edx\n  412ba0:\t0f b7 45 a0          \tmovzwl -0x60(%rbp),%eax\n  412ba4:\t98                   \tcwtl   \n  412ba5:\tc1 e0 0d             \tshl    $0xd,%eax\n  412ba8:\t09 d0                \tor     %edx,%eax\n  412baa:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412bae:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412bb2:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412bb6:\t89 c2                \tmov    %eax,%edx\n  412bb8:\t0f b7 45 a2          \tmovzwl -0x5e(%rbp),%eax\n  412bbc:\t98                   \tcwtl   \n  412bbd:\tc1 e0 0d             \tshl    $0xd,%eax\n  412bc0:\t09 d0                \tor     %edx,%eax\n  412bc2:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412bc6:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412bca:\t66 c1 e8 06          \tshr    $0x6,%ax\n  412bce:\t89 c1                \tmov    %eax,%ecx\n  412bd0:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412bd7:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412bdb:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412be2:\t89 ca                \tmov    %ecx,%edx\n  412be4:\t88 10                \tmov    %dl,(%rax)\n  412be6:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412bea:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412bee:\t89 c2                \tmov    %eax,%edx\n  412bf0:\t0f b7 45 a4          \tmovzwl -0x5c(%rbp),%eax\n  412bf4:\t98                   \tcwtl   \n  412bf5:\tc1 e0 0d             \tshl    $0xd,%eax\n  412bf8:\t09 d0                \tor     %edx,%eax\n  412bfa:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412bfe:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412c02:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412c06:\t89 c2                \tmov    %eax,%edx\n  412c08:\t0f b7 45 a6          \tmovzwl -0x5a(%rbp),%eax\n  412c0c:\t98                   \tcwtl   \n  412c0d:\tc1 e0 0d             \tshl    $0xd,%eax\n  412c10:\t09 d0                \tor     %edx,%eax\n  412c12:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412c16:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412c1a:\t66 c1 e8 08          \tshr    $0x8,%ax\n  412c1e:\t89 c1                \tmov    %eax,%ecx\n  412c20:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412c27:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412c2b:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412c32:\t89 ca                \tmov    %ecx,%edx\n  412c34:\t88 10                \tmov    %dl,(%rax)\n  412c36:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412c3a:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412c3e:\t89 c2                \tmov    %eax,%edx\n  412c40:\t0f b7 45 a8          \tmovzwl -0x58(%rbp),%eax\n  412c44:\t98                   \tcwtl   \n  412c45:\tc1 e0 0d             \tshl    $0xd,%eax\n  412c48:\t09 d0                \tor     %edx,%eax\n  412c4a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412c4e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412c52:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412c56:\t89 c2                \tmov    %eax,%edx\n  412c58:\t0f b7 45 aa          \tmovzwl -0x56(%rbp),%eax\n  412c5c:\t98                   \tcwtl   \n  412c5d:\tc1 e0 0d             \tshl    $0xd,%eax\n  412c60:\t09 d0                \tor     %edx,%eax\n  412c62:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412c66:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412c6a:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412c6e:\t89 c2                \tmov    %eax,%edx\n  412c70:\t0f b7 45 ac          \tmovzwl -0x54(%rbp),%eax\n  412c74:\t98                   \tcwtl   \n  412c75:\tc1 e0 0d             \tshl    $0xd,%eax\n  412c78:\t09 d0                \tor     %edx,%eax\n  412c7a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412c7e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412c82:\t66 c1 e8 07          \tshr    $0x7,%ax\n  412c86:\t89 c1                \tmov    %eax,%ecx\n  412c88:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412c8f:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412c93:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412c9a:\t89 ca                \tmov    %ecx,%edx\n  412c9c:\t88 10                \tmov    %dl,(%rax)\n  412c9e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412ca2:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412ca6:\t89 c2                \tmov    %eax,%edx\n  412ca8:\t0f b7 45 ae          \tmovzwl -0x52(%rbp),%eax\n  412cac:\t98                   \tcwtl   \n  412cad:\tc1 e0 0d             \tshl    $0xd,%eax\n  412cb0:\t09 d0                \tor     %edx,%eax\n  412cb2:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412cb6:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412cba:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412cbe:\t89 c2                \tmov    %eax,%edx\n  412cc0:\t0f b7 45 b0          \tmovzwl -0x50(%rbp),%eax\n  412cc4:\t98                   \tcwtl   \n  412cc5:\tc1 e0 0d             \tshl    $0xd,%eax\n  412cc8:\t09 d0                \tor     %edx,%eax\n  412cca:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412cce:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412cd2:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412cd6:\t89 c2                \tmov    %eax,%edx\n  412cd8:\t0f b7 45 b2          \tmovzwl -0x4e(%rbp),%eax\n  412cdc:\t98                   \tcwtl   \n  412cdd:\tc1 e0 0d             \tshl    $0xd,%eax\n  412ce0:\t09 d0                \tor     %edx,%eax\n  412ce2:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412ce6:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412cea:\t66 c1 e8 06          \tshr    $0x6,%ax\n  412cee:\t89 c1                \tmov    %eax,%ecx\n  412cf0:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412cf7:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412cfb:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412d02:\t89 ca                \tmov    %ecx,%edx\n  412d04:\t88 10                \tmov    %dl,(%rax)\n  412d06:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412d0a:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412d0e:\t89 c2                \tmov    %eax,%edx\n  412d10:\t0f b7 45 b4          \tmovzwl -0x4c(%rbp),%eax\n  412d14:\t98                   \tcwtl   \n  412d15:\tc1 e0 0d             \tshl    $0xd,%eax\n  412d18:\t09 d0                \tor     %edx,%eax\n  412d1a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412d1e:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412d22:\t66 c1 e8 03          \tshr    $0x3,%ax\n  412d26:\t89 c2                \tmov    %eax,%edx\n  412d28:\t0f b7 45 b6          \tmovzwl -0x4a(%rbp),%eax\n  412d2c:\t98                   \tcwtl   \n  412d2d:\tc1 e0 0d             \tshl    $0xd,%eax\n  412d30:\t09 d0                \tor     %edx,%eax\n  412d32:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n  412d36:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n  412d3a:\t66 c1 e8 08          \tshr    $0x8,%ax\n  412d3e:\t89 c1                \tmov    %eax,%ecx\n  412d40:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412d47:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412d4b:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412d52:\t89 ca                \tmov    %ecx,%edx\n  412d54:\t88 10                \tmov    %dl,(%rax)\n  412d56:\te9 da 07 00 00       \tjmp    413535 <gsm_encode+0x1fd8>\n  412d5b:\t0f b7 45 e0          \tmovzwl -0x20(%rbp),%eax\n  412d5f:\t66 c1 f8 02          \tsar    $0x2,%ax\n  412d63:\t83 e0 0f             \tand    $0xf,%eax\n  412d66:\t83 c8 d0             \tor     $0xffffffd0,%eax\n  412d69:\t89 c1                \tmov    %eax,%ecx\n  412d6b:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412d72:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412d76:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412d7d:\t89 ca                \tmov    %ecx,%edx\n  412d7f:\t88 10                \tmov    %dl,(%rax)\n  412d81:\t0f b7 45 e0          \tmovzwl -0x20(%rbp),%eax\n  412d85:\t98                   \tcwtl   \n  412d86:\tc1 e0 06             \tshl    $0x6,%eax\n  412d89:\t89 c2                \tmov    %eax,%edx\n  412d8b:\t0f b7 45 e2          \tmovzwl -0x1e(%rbp),%eax\n  412d8f:\t83 e0 3f             \tand    $0x3f,%eax\n  412d92:\t89 d1                \tmov    %edx,%ecx\n  412d94:\t09 c1                \tor     %eax,%ecx\n  412d96:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412d9d:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412da1:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412da8:\t89 ca                \tmov    %ecx,%edx\n  412daa:\t88 10                \tmov    %dl,(%rax)\n  412dac:\t0f b7 45 e4          \tmovzwl -0x1c(%rbp),%eax\n  412db0:\t98                   \tcwtl   \n  412db1:\tc1 e0 03             \tshl    $0x3,%eax\n  412db4:\t89 c2                \tmov    %eax,%edx\n  412db6:\t0f b7 45 e6          \tmovzwl -0x1a(%rbp),%eax\n  412dba:\t66 c1 f8 02          \tsar    $0x2,%ax\n  412dbe:\t83 e0 07             \tand    $0x7,%eax\n  412dc1:\t89 d1                \tmov    %edx,%ecx\n  412dc3:\t09 c1                \tor     %eax,%ecx\n  412dc5:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412dcc:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412dd0:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412dd7:\t89 ca                \tmov    %ecx,%edx\n  412dd9:\t88 10                \tmov    %dl,(%rax)\n  412ddb:\t0f b7 45 e6          \tmovzwl -0x1a(%rbp),%eax\n  412ddf:\t98                   \tcwtl   \n  412de0:\tc1 e0 06             \tshl    $0x6,%eax\n  412de3:\t89 c2                \tmov    %eax,%edx\n  412de5:\t0f b7 45 e8          \tmovzwl -0x18(%rbp),%eax\n  412de9:\t98                   \tcwtl   \n  412dea:\tc1 e0 02             \tshl    $0x2,%eax\n  412ded:\t83 e0 3c             \tand    $0x3c,%eax\n  412df0:\t09 c2                \tor     %eax,%edx\n  412df2:\t0f b7 45 ea          \tmovzwl -0x16(%rbp),%eax\n  412df6:\t66 c1 f8 02          \tsar    $0x2,%ax\n  412dfa:\t83 e0 03             \tand    $0x3,%eax\n  412dfd:\t89 d1                \tmov    %edx,%ecx\n  412dff:\t09 c1                \tor     %eax,%ecx\n  412e01:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412e08:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412e0c:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412e13:\t89 ca                \tmov    %ecx,%edx\n  412e15:\t88 10                \tmov    %dl,(%rax)\n  412e17:\t0f b7 45 ea          \tmovzwl -0x16(%rbp),%eax\n  412e1b:\t98                   \tcwtl   \n  412e1c:\tc1 e0 06             \tshl    $0x6,%eax\n  412e1f:\t89 c2                \tmov    %eax,%edx\n  412e21:\t0f b7 45 ec          \tmovzwl -0x14(%rbp),%eax\n  412e25:\t98                   \tcwtl   \n  412e26:\tc1 e0 03             \tshl    $0x3,%eax\n  412e29:\t83 e0 38             \tand    $0x38,%eax\n  412e2c:\t09 c2                \tor     %eax,%edx\n  412e2e:\t0f b7 45 ee          \tmovzwl -0x12(%rbp),%eax\n  412e32:\t83 e0 07             \tand    $0x7,%eax\n  412e35:\t89 d1                \tmov    %edx,%ecx\n  412e37:\t09 c1                \tor     %eax,%ecx\n  412e39:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412e40:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412e44:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412e4b:\t89 ca                \tmov    %ecx,%edx\n  412e4d:\t88 10                \tmov    %dl,(%rax)\n  412e4f:\t0f b7 45 d8          \tmovzwl -0x28(%rbp),%eax\n  412e53:\t98                   \tcwtl   \n  412e54:\t01 c0                \tadd    %eax,%eax\n  412e56:\t89 c2                \tmov    %eax,%edx\n  412e58:\t0f b7 45 c8          \tmovzwl -0x38(%rbp),%eax\n  412e5c:\t66 d1 f8             \tsar    %ax\n  412e5f:\t83 e0 01             \tand    $0x1,%eax\n  412e62:\t89 d1                \tmov    %edx,%ecx\n  412e64:\t09 c1                \tor     %eax,%ecx\n  412e66:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412e6d:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412e71:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412e78:\t89 ca                \tmov    %ecx,%edx\n  412e7a:\t88 10                \tmov    %dl,(%rax)\n  412e7c:\t0f b7 45 c8          \tmovzwl -0x38(%rbp),%eax\n  412e80:\t98                   \tcwtl   \n  412e81:\tc1 e0 07             \tshl    $0x7,%eax\n  412e84:\t89 c2                \tmov    %eax,%edx\n  412e86:\t0f b7 45 d0          \tmovzwl -0x30(%rbp),%eax\n  412e8a:\t98                   \tcwtl   \n  412e8b:\tc1 e0 05             \tshl    $0x5,%eax\n  412e8e:\t83 e0 60             \tand    $0x60,%eax\n  412e91:\t09 c2                \tor     %eax,%edx\n  412e93:\t0f b7 45 c0          \tmovzwl -0x40(%rbp),%eax\n  412e97:\t66 d1 f8             \tsar    %ax\n  412e9a:\t83 e0 1f             \tand    $0x1f,%eax\n  412e9d:\t89 d1                \tmov    %edx,%ecx\n  412e9f:\t09 c1                \tor     %eax,%ecx\n  412ea1:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412ea8:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412eac:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412eb3:\t89 ca                \tmov    %ecx,%edx\n  412eb5:\t88 10                \tmov    %dl,(%rax)\n  412eb7:\t0f b7 45 c0          \tmovzwl -0x40(%rbp),%eax\n  412ebb:\t98                   \tcwtl   \n  412ebc:\tc1 e0 07             \tshl    $0x7,%eax\n  412ebf:\t89 c2                \tmov    %eax,%edx\n  412ec1:\t0f b7 85 50 ff ff ff \tmovzwl -0xb0(%rbp),%eax\n  412ec8:\t98                   \tcwtl   \n  412ec9:\tc1 e0 04             \tshl    $0x4,%eax\n  412ecc:\t83 e0 70             \tand    $0x70,%eax\n  412ecf:\t09 c2                \tor     %eax,%edx\n  412ed1:\t0f b7 85 52 ff ff ff \tmovzwl -0xae(%rbp),%eax\n  412ed8:\t98                   \tcwtl   \n  412ed9:\t01 c0                \tadd    %eax,%eax\n  412edb:\t83 e0 0e             \tand    $0xe,%eax\n  412ede:\t09 c2                \tor     %eax,%edx\n  412ee0:\t0f b7 85 54 ff ff ff \tmovzwl -0xac(%rbp),%eax\n  412ee7:\t66 c1 f8 02          \tsar    $0x2,%ax\n  412eeb:\t83 e0 01             \tand    $0x1,%eax\n  412eee:\t89 d1                \tmov    %edx,%ecx\n  412ef0:\t09 c1                \tor     %eax,%ecx\n  412ef2:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412ef9:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412efd:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412f04:\t89 ca                \tmov    %ecx,%edx\n  412f06:\t88 10                \tmov    %dl,(%rax)\n  412f08:\t0f b7 85 54 ff ff ff \tmovzwl -0xac(%rbp),%eax\n  412f0f:\t98                   \tcwtl   \n  412f10:\tc1 e0 06             \tshl    $0x6,%eax\n  412f13:\t89 c2                \tmov    %eax,%edx\n  412f15:\t0f b7 85 56 ff ff ff \tmovzwl -0xaa(%rbp),%eax\n  412f1c:\t98                   \tcwtl   \n  412f1d:\tc1 e0 03             \tshl    $0x3,%eax\n  412f20:\t83 e0 38             \tand    $0x38,%eax\n  412f23:\t09 c2                \tor     %eax,%edx\n  412f25:\t0f b7 85 58 ff ff ff \tmovzwl -0xa8(%rbp),%eax\n  412f2c:\t83 e0 07             \tand    $0x7,%eax\n  412f2f:\t89 d1                \tmov    %edx,%ecx\n  412f31:\t09 c1                \tor     %eax,%ecx\n  412f33:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412f3a:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412f3e:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412f45:\t89 ca                \tmov    %ecx,%edx\n  412f47:\t88 10                \tmov    %dl,(%rax)\n  412f49:\t0f b7 85 5a ff ff ff \tmovzwl -0xa6(%rbp),%eax\n  412f50:\t98                   \tcwtl   \n  412f51:\tc1 e0 05             \tshl    $0x5,%eax\n  412f54:\t89 c2                \tmov    %eax,%edx\n  412f56:\t0f b7 85 5c ff ff ff \tmovzwl -0xa4(%rbp),%eax\n  412f5d:\t98                   \tcwtl   \n  412f5e:\tc1 e0 02             \tshl    $0x2,%eax\n  412f61:\t83 e0 1c             \tand    $0x1c,%eax\n  412f64:\t09 c2                \tor     %eax,%edx\n  412f66:\t0f b7 85 5e ff ff ff \tmovzwl -0xa2(%rbp),%eax\n  412f6d:\t66 d1 f8             \tsar    %ax\n  412f70:\t83 e0 03             \tand    $0x3,%eax\n  412f73:\t89 d1                \tmov    %edx,%ecx\n  412f75:\t09 c1                \tor     %eax,%ecx\n  412f77:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412f7e:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412f82:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412f89:\t89 ca                \tmov    %ecx,%edx\n  412f8b:\t88 10                \tmov    %dl,(%rax)\n  412f8d:\t0f b7 85 5e ff ff ff \tmovzwl -0xa2(%rbp),%eax\n  412f94:\t98                   \tcwtl   \n  412f95:\tc1 e0 07             \tshl    $0x7,%eax\n  412f98:\t89 c2                \tmov    %eax,%edx\n  412f9a:\t0f b7 85 60 ff ff ff \tmovzwl -0xa0(%rbp),%eax\n  412fa1:\t98                   \tcwtl   \n  412fa2:\tc1 e0 04             \tshl    $0x4,%eax\n  412fa5:\t83 e0 70             \tand    $0x70,%eax\n  412fa8:\t09 c2                \tor     %eax,%edx\n  412faa:\t0f b7 85 62 ff ff ff \tmovzwl -0x9e(%rbp),%eax\n  412fb1:\t98                   \tcwtl   \n  412fb2:\t01 c0                \tadd    %eax,%eax\n  412fb4:\t83 e0 0e             \tand    $0xe,%eax\n  412fb7:\t09 c2                \tor     %eax,%edx\n  412fb9:\t0f b7 85 64 ff ff ff \tmovzwl -0x9c(%rbp),%eax\n  412fc0:\t66 c1 f8 02          \tsar    $0x2,%ax\n  412fc4:\t83 e0 01             \tand    $0x1,%eax\n  412fc7:\t89 d1                \tmov    %edx,%ecx\n  412fc9:\t09 c1                \tor     %eax,%ecx\n  412fcb:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  412fd2:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  412fd6:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  412fdd:\t89 ca                \tmov    %ecx,%edx\n  412fdf:\t88 10                \tmov    %dl,(%rax)\n  412fe1:\t0f b7 85 64 ff ff ff \tmovzwl -0x9c(%rbp),%eax\n  412fe8:\t98                   \tcwtl   \n  412fe9:\tc1 e0 06             \tshl    $0x6,%eax\n  412fec:\t89 c2                \tmov    %eax,%edx\n  412fee:\t0f b7 85 66 ff ff ff \tmovzwl -0x9a(%rbp),%eax\n  412ff5:\t98                   \tcwtl   \n  412ff6:\tc1 e0 03             \tshl    $0x3,%eax\n  412ff9:\t83 e0 38             \tand    $0x38,%eax\n  412ffc:\t09 c2                \tor     %eax,%edx\n  412ffe:\t0f b7 85 68 ff ff ff \tmovzwl -0x98(%rbp),%eax\n  413005:\t83 e0 07             \tand    $0x7,%eax\n  413008:\t89 d1                \tmov    %edx,%ecx\n  41300a:\t09 c1                \tor     %eax,%ecx\n  41300c:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  413013:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  413017:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41301e:\t89 ca                \tmov    %ecx,%edx\n  413020:\t88 10                \tmov    %dl,(%rax)\n  413022:\t0f b7 45 da          \tmovzwl -0x26(%rbp),%eax\n  413026:\t98                   \tcwtl   \n  413027:\t01 c0                \tadd    %eax,%eax\n  413029:\t89 c2                \tmov    %eax,%edx\n  41302b:\t0f b7 45 ca          \tmovzwl -0x36(%rbp),%eax\n  41302f:\t66 d1 f8             \tsar    %ax\n  413032:\t83 e0 01             \tand    $0x1,%eax\n  413035:\t89 d1                \tmov    %edx,%ecx\n  413037:\t09 c1                \tor     %eax,%ecx\n  413039:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  413040:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  413044:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41304b:\t89 ca                \tmov    %ecx,%edx\n  41304d:\t88 10                \tmov    %dl,(%rax)\n  41304f:\t0f b7 45 ca          \tmovzwl -0x36(%rbp),%eax\n  413053:\t98                   \tcwtl   \n  413054:\tc1 e0 07             \tshl    $0x7,%eax\n  413057:\t89 c2                \tmov    %eax,%edx\n  413059:\t0f b7 45 d2          \tmovzwl -0x2e(%rbp),%eax\n  41305d:\t98                   \tcwtl   \n  41305e:\tc1 e0 05             \tshl    $0x5,%eax\n  413061:\t83 e0 60             \tand    $0x60,%eax\n  413064:\t09 c2                \tor     %eax,%edx\n  413066:\t0f b7 45 c2          \tmovzwl -0x3e(%rbp),%eax\n  41306a:\t66 d1 f8             \tsar    %ax\n  41306d:\t83 e0 1f             \tand    $0x1f,%eax\n  413070:\t89 d1                \tmov    %edx,%ecx\n  413072:\t09 c1                \tor     %eax,%ecx\n  413074:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  41307b:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  41307f:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  413086:\t89 ca                \tmov    %ecx,%edx\n  413088:\t88 10                \tmov    %dl,(%rax)\n  41308a:\t0f b7 45 c2          \tmovzwl -0x3e(%rbp),%eax\n  41308e:\t98                   \tcwtl   \n  41308f:\tc1 e0 07             \tshl    $0x7,%eax\n  413092:\t89 c2                \tmov    %eax,%edx\n  413094:\t0f b7 85 6a ff ff ff \tmovzwl -0x96(%rbp),%eax\n  41309b:\t98                   \tcwtl   \n  41309c:\tc1 e0 04             \tshl    $0x4,%eax\n  41309f:\t83 e0 70             \tand    $0x70,%eax\n  4130a2:\t09 c2                \tor     %eax,%edx\n  4130a4:\t0f b7 85 6c ff ff ff \tmovzwl -0x94(%rbp),%eax\n  4130ab:\t98                   \tcwtl   \n  4130ac:\t01 c0                \tadd    %eax,%eax\n  4130ae:\t83 e0 0e             \tand    $0xe,%eax\n  4130b1:\t09 c2                \tor     %eax,%edx\n  4130b3:\t0f b7 85 6e ff ff ff \tmovzwl -0x92(%rbp),%eax\n  4130ba:\t66 c1 f8 02          \tsar    $0x2,%ax\n  4130be:\t83 e0 01             \tand    $0x1,%eax\n  4130c1:\t89 d1                \tmov    %edx,%ecx\n  4130c3:\t09 c1                \tor     %eax,%ecx\n  4130c5:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4130cc:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4130d0:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4130d7:\t89 ca                \tmov    %ecx,%edx\n  4130d9:\t88 10                \tmov    %dl,(%rax)\n  4130db:\t0f b7 85 6e ff ff ff \tmovzwl -0x92(%rbp),%eax\n  4130e2:\t98                   \tcwtl   \n  4130e3:\tc1 e0 06             \tshl    $0x6,%eax\n  4130e6:\t89 c2                \tmov    %eax,%edx\n  4130e8:\t0f b7 85 70 ff ff ff \tmovzwl -0x90(%rbp),%eax\n  4130ef:\t98                   \tcwtl   \n  4130f0:\tc1 e0 03             \tshl    $0x3,%eax\n  4130f3:\t83 e0 38             \tand    $0x38,%eax\n  4130f6:\t09 c2                \tor     %eax,%edx\n  4130f8:\t0f b7 85 72 ff ff ff \tmovzwl -0x8e(%rbp),%eax\n  4130ff:\t83 e0 07             \tand    $0x7,%eax\n  413102:\t89 d1                \tmov    %edx,%ecx\n  413104:\t09 c1                \tor     %eax,%ecx\n  413106:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  41310d:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  413111:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  413118:\t89 ca                \tmov    %ecx,%edx\n  41311a:\t88 10                \tmov    %dl,(%rax)\n  41311c:\t0f b7 85 74 ff ff ff \tmovzwl -0x8c(%rbp),%eax\n  413123:\t98                   \tcwtl   \n  413124:\tc1 e0 05             \tshl    $0x5,%eax\n  413127:\t89 c2                \tmov    %eax,%edx\n  413129:\t0f b7 85 76 ff ff ff \tmovzwl -0x8a(%rbp),%eax\n  413130:\t98                   \tcwtl   \n  413131:\tc1 e0 02             \tshl    $0x2,%eax\n  413134:\t83 e0 1c             \tand    $0x1c,%eax\n  413137:\t09 c2                \tor     %eax,%edx\n  413139:\t0f b7 85 78 ff ff ff \tmovzwl -0x88(%rbp),%eax\n  413140:\t66 d1 f8             \tsar    %ax\n  413143:\t83 e0 03             \tand    $0x3,%eax\n  413146:\t89 d1                \tmov    %edx,%ecx\n  413148:\t09 c1                \tor     %eax,%ecx\n  41314a:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  413151:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  413155:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41315c:\t89 ca                \tmov    %ecx,%edx\n  41315e:\t88 10                \tmov    %dl,(%rax)\n  413160:\t0f b7 85 78 ff ff ff \tmovzwl -0x88(%rbp),%eax\n  413167:\t98                   \tcwtl   \n  413168:\tc1 e0 07             \tshl    $0x7,%eax\n  41316b:\t89 c2                \tmov    %eax,%edx\n  41316d:\t0f b7 85 7a ff ff ff \tmovzwl -0x86(%rbp),%eax\n  413174:\t98                   \tcwtl   \n  413175:\tc1 e0 04             \tshl    $0x4,%eax\n  413178:\t83 e0 70             \tand    $0x70,%eax\n  41317b:\t09 c2                \tor     %eax,%edx\n  41317d:\t0f b7 85 7c ff ff ff \tmovzwl -0x84(%rbp),%eax\n  413184:\t98                   \tcwtl   \n  413185:\t01 c0                \tadd    %eax,%eax\n  413187:\t83 e0 0e             \tand    $0xe,%eax\n  41318a:\t09 c2                \tor     %eax,%edx\n  41318c:\t0f b7 85 7e ff ff ff \tmovzwl -0x82(%rbp),%eax\n  413193:\t66 c1 f8 02          \tsar    $0x2,%ax\n  413197:\t83 e0 01             \tand    $0x1,%eax\n  41319a:\t89 d1                \tmov    %edx,%ecx\n  41319c:\t09 c1                \tor     %eax,%ecx\n  41319e:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4131a5:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4131a9:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4131b0:\t89 ca                \tmov    %ecx,%edx\n  4131b2:\t88 10                \tmov    %dl,(%rax)\n  4131b4:\t0f b7 85 7e ff ff ff \tmovzwl -0x82(%rbp),%eax\n  4131bb:\t98                   \tcwtl   \n  4131bc:\tc1 e0 06             \tshl    $0x6,%eax\n  4131bf:\t89 c2                \tmov    %eax,%edx\n  4131c1:\t0f b7 45 80          \tmovzwl -0x80(%rbp),%eax\n  4131c5:\t98                   \tcwtl   \n  4131c6:\tc1 e0 03             \tshl    $0x3,%eax\n  4131c9:\t83 e0 38             \tand    $0x38,%eax\n  4131cc:\t09 c2                \tor     %eax,%edx\n  4131ce:\t0f b7 45 82          \tmovzwl -0x7e(%rbp),%eax\n  4131d2:\t83 e0 07             \tand    $0x7,%eax\n  4131d5:\t89 d1                \tmov    %edx,%ecx\n  4131d7:\t09 c1                \tor     %eax,%ecx\n  4131d9:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4131e0:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4131e4:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4131eb:\t89 ca                \tmov    %ecx,%edx\n  4131ed:\t88 10                \tmov    %dl,(%rax)\n  4131ef:\t0f b7 45 dc          \tmovzwl -0x24(%rbp),%eax\n  4131f3:\t98                   \tcwtl   \n  4131f4:\t01 c0                \tadd    %eax,%eax\n  4131f6:\t89 c2                \tmov    %eax,%edx\n  4131f8:\t0f b7 45 cc          \tmovzwl -0x34(%rbp),%eax\n  4131fc:\t66 d1 f8             \tsar    %ax\n  4131ff:\t83 e0 01             \tand    $0x1,%eax\n  413202:\t89 d1                \tmov    %edx,%ecx\n  413204:\t09 c1                \tor     %eax,%ecx\n  413206:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  41320d:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  413211:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  413218:\t89 ca                \tmov    %ecx,%edx\n  41321a:\t88 10                \tmov    %dl,(%rax)\n  41321c:\t0f b7 45 cc          \tmovzwl -0x34(%rbp),%eax\n  413220:\t98                   \tcwtl   \n  413221:\tc1 e0 07             \tshl    $0x7,%eax\n  413224:\t89 c2                \tmov    %eax,%edx\n  413226:\t0f b7 45 d4          \tmovzwl -0x2c(%rbp),%eax\n  41322a:\t98                   \tcwtl   \n  41322b:\tc1 e0 05             \tshl    $0x5,%eax\n  41322e:\t83 e0 60             \tand    $0x60,%eax\n  413231:\t09 c2                \tor     %eax,%edx\n  413233:\t0f b7 45 c4          \tmovzwl -0x3c(%rbp),%eax\n  413237:\t66 d1 f8             \tsar    %ax\n  41323a:\t83 e0 1f             \tand    $0x1f,%eax\n  41323d:\t89 d1                \tmov    %edx,%ecx\n  41323f:\t09 c1                \tor     %eax,%ecx\n  413241:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  413248:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  41324c:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  413253:\t89 ca                \tmov    %ecx,%edx\n  413255:\t88 10                \tmov    %dl,(%rax)\n  413257:\t0f b7 45 c4          \tmovzwl -0x3c(%rbp),%eax\n  41325b:\t98                   \tcwtl   \n  41325c:\tc1 e0 07             \tshl    $0x7,%eax\n  41325f:\t89 c2                \tmov    %eax,%edx\n  413261:\t0f b7 45 84          \tmovzwl -0x7c(%rbp),%eax\n  413265:\t98                   \tcwtl   \n  413266:\tc1 e0 04             \tshl    $0x4,%eax\n  413269:\t83 e0 70             \tand    $0x70,%eax\n  41326c:\t09 c2                \tor     %eax,%edx\n  41326e:\t0f b7 45 86          \tmovzwl -0x7a(%rbp),%eax\n  413272:\t98                   \tcwtl   \n  413273:\t01 c0                \tadd    %eax,%eax\n  413275:\t83 e0 0e             \tand    $0xe,%eax\n  413278:\t09 c2                \tor     %eax,%edx\n  41327a:\t0f b7 45 88          \tmovzwl -0x78(%rbp),%eax\n  41327e:\t66 c1 f8 02          \tsar    $0x2,%ax\n  413282:\t83 e0 01             \tand    $0x1,%eax\n  413285:\t89 d1                \tmov    %edx,%ecx\n  413287:\t09 c1                \tor     %eax,%ecx\n  413289:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  413290:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  413294:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41329b:\t89 ca                \tmov    %ecx,%edx\n  41329d:\t88 10                \tmov    %dl,(%rax)\n  41329f:\t0f b7 45 88          \tmovzwl -0x78(%rbp),%eax\n  4132a3:\t98                   \tcwtl   \n  4132a4:\tc1 e0 06             \tshl    $0x6,%eax\n  4132a7:\t89 c2                \tmov    %eax,%edx\n  4132a9:\t0f b7 45 8a          \tmovzwl -0x76(%rbp),%eax\n  4132ad:\t98                   \tcwtl   \n  4132ae:\tc1 e0 03             \tshl    $0x3,%eax\n  4132b1:\t83 e0 38             \tand    $0x38,%eax\n  4132b4:\t09 c2                \tor     %eax,%edx\n  4132b6:\t0f b7 45 8c          \tmovzwl -0x74(%rbp),%eax\n  4132ba:\t83 e0 07             \tand    $0x7,%eax\n  4132bd:\t89 d1                \tmov    %edx,%ecx\n  4132bf:\t09 c1                \tor     %eax,%ecx\n  4132c1:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4132c8:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4132cc:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4132d3:\t89 ca                \tmov    %ecx,%edx\n  4132d5:\t88 10                \tmov    %dl,(%rax)\n  4132d7:\t0f b7 45 8e          \tmovzwl -0x72(%rbp),%eax\n  4132db:\t98                   \tcwtl   \n  4132dc:\tc1 e0 05             \tshl    $0x5,%eax\n  4132df:\t89 c2                \tmov    %eax,%edx\n  4132e1:\t0f b7 45 90          \tmovzwl -0x70(%rbp),%eax\n  4132e5:\t98                   \tcwtl   \n  4132e6:\tc1 e0 02             \tshl    $0x2,%eax\n  4132e9:\t83 e0 1c             \tand    $0x1c,%eax\n  4132ec:\t09 c2                \tor     %eax,%edx\n  4132ee:\t0f b7 45 92          \tmovzwl -0x6e(%rbp),%eax\n  4132f2:\t66 d1 f8             \tsar    %ax\n  4132f5:\t83 e0 03             \tand    $0x3,%eax\n  4132f8:\t89 d1                \tmov    %edx,%ecx\n  4132fa:\t09 c1                \tor     %eax,%ecx\n  4132fc:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  413303:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  413307:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41330e:\t89 ca                \tmov    %ecx,%edx\n  413310:\t88 10                \tmov    %dl,(%rax)\n  413312:\t0f b7 45 92          \tmovzwl -0x6e(%rbp),%eax\n  413316:\t98                   \tcwtl   \n  413317:\tc1 e0 07             \tshl    $0x7,%eax\n  41331a:\t89 c2                \tmov    %eax,%edx\n  41331c:\t0f b7 45 94          \tmovzwl -0x6c(%rbp),%eax\n  413320:\t98                   \tcwtl   \n  413321:\tc1 e0 04             \tshl    $0x4,%eax\n  413324:\t83 e0 70             \tand    $0x70,%eax\n  413327:\t09 c2                \tor     %eax,%edx\n  413329:\t0f b7 45 96          \tmovzwl -0x6a(%rbp),%eax\n  41332d:\t98                   \tcwtl   \n  41332e:\t01 c0                \tadd    %eax,%eax\n  413330:\t83 e0 0e             \tand    $0xe,%eax\n  413333:\t09 c2                \tor     %eax,%edx\n  413335:\t0f b7 45 98          \tmovzwl -0x68(%rbp),%eax\n  413339:\t66 c1 f8 02          \tsar    $0x2,%ax\n  41333d:\t83 e0 01             \tand    $0x1,%eax\n  413340:\t89 d1                \tmov    %edx,%ecx\n  413342:\t09 c1                \tor     %eax,%ecx\n  413344:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  41334b:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  41334f:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  413356:\t89 ca                \tmov    %ecx,%edx\n  413358:\t88 10                \tmov    %dl,(%rax)\n  41335a:\t0f b7 45 98          \tmovzwl -0x68(%rbp),%eax\n  41335e:\t98                   \tcwtl   \n  41335f:\tc1 e0 06             \tshl    $0x6,%eax\n  413362:\t89 c2                \tmov    %eax,%edx\n  413364:\t0f b7 45 9a          \tmovzwl -0x66(%rbp),%eax\n  413368:\t98                   \tcwtl   \n  413369:\tc1 e0 03             \tshl    $0x3,%eax\n  41336c:\t83 e0 38             \tand    $0x38,%eax\n  41336f:\t09 c2                \tor     %eax,%edx\n  413371:\t0f b7 45 9c          \tmovzwl -0x64(%rbp),%eax\n  413375:\t83 e0 07             \tand    $0x7,%eax\n  413378:\t89 d1                \tmov    %edx,%ecx\n  41337a:\t09 c1                \tor     %eax,%ecx\n  41337c:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  413383:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  413387:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41338e:\t89 ca                \tmov    %ecx,%edx\n  413390:\t88 10                \tmov    %dl,(%rax)\n  413392:\t0f b7 45 de          \tmovzwl -0x22(%rbp),%eax\n  413396:\t98                   \tcwtl   \n  413397:\t01 c0                \tadd    %eax,%eax\n  413399:\t89 c2                \tmov    %eax,%edx\n  41339b:\t0f b7 45 ce          \tmovzwl -0x32(%rbp),%eax\n  41339f:\t66 d1 f8             \tsar    %ax\n  4133a2:\t83 e0 01             \tand    $0x1,%eax\n  4133a5:\t89 d1                \tmov    %edx,%ecx\n  4133a7:\t09 c1                \tor     %eax,%ecx\n  4133a9:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4133b0:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4133b4:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4133bb:\t89 ca                \tmov    %ecx,%edx\n  4133bd:\t88 10                \tmov    %dl,(%rax)\n  4133bf:\t0f b7 45 ce          \tmovzwl -0x32(%rbp),%eax\n  4133c3:\t98                   \tcwtl   \n  4133c4:\tc1 e0 07             \tshl    $0x7,%eax\n  4133c7:\t89 c2                \tmov    %eax,%edx\n  4133c9:\t0f b7 45 d6          \tmovzwl -0x2a(%rbp),%eax\n  4133cd:\t98                   \tcwtl   \n  4133ce:\tc1 e0 05             \tshl    $0x5,%eax\n  4133d1:\t83 e0 60             \tand    $0x60,%eax\n  4133d4:\t09 c2                \tor     %eax,%edx\n  4133d6:\t0f b7 45 c6          \tmovzwl -0x3a(%rbp),%eax\n  4133da:\t66 d1 f8             \tsar    %ax\n  4133dd:\t83 e0 1f             \tand    $0x1f,%eax\n  4133e0:\t89 d1                \tmov    %edx,%ecx\n  4133e2:\t09 c1                \tor     %eax,%ecx\n  4133e4:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4133eb:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4133ef:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4133f6:\t89 ca                \tmov    %ecx,%edx\n  4133f8:\t88 10                \tmov    %dl,(%rax)\n  4133fa:\t0f b7 45 c6          \tmovzwl -0x3a(%rbp),%eax\n  4133fe:\t98                   \tcwtl   \n  4133ff:\tc1 e0 07             \tshl    $0x7,%eax\n  413402:\t89 c2                \tmov    %eax,%edx\n  413404:\t0f b7 45 9e          \tmovzwl -0x62(%rbp),%eax\n  413408:\t98                   \tcwtl   \n  413409:\tc1 e0 04             \tshl    $0x4,%eax\n  41340c:\t83 e0 70             \tand    $0x70,%eax\n  41340f:\t09 c2                \tor     %eax,%edx\n  413411:\t0f b7 45 a0          \tmovzwl -0x60(%rbp),%eax\n  413415:\t98                   \tcwtl   \n  413416:\t01 c0                \tadd    %eax,%eax\n  413418:\t83 e0 0e             \tand    $0xe,%eax\n  41341b:\t09 c2                \tor     %eax,%edx\n  41341d:\t0f b7 45 a2          \tmovzwl -0x5e(%rbp),%eax\n  413421:\t66 c1 f8 02          \tsar    $0x2,%ax\n  413425:\t83 e0 01             \tand    $0x1,%eax\n  413428:\t89 d1                \tmov    %edx,%ecx\n  41342a:\t09 c1                \tor     %eax,%ecx\n  41342c:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  413433:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  413437:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  41343e:\t89 ca                \tmov    %ecx,%edx\n  413440:\t88 10                \tmov    %dl,(%rax)\n  413442:\t0f b7 45 a2          \tmovzwl -0x5e(%rbp),%eax\n  413446:\t98                   \tcwtl   \n  413447:\tc1 e0 06             \tshl    $0x6,%eax\n  41344a:\t89 c2                \tmov    %eax,%edx\n  41344c:\t0f b7 45 a4          \tmovzwl -0x5c(%rbp),%eax\n  413450:\t98                   \tcwtl   \n  413451:\tc1 e0 03             \tshl    $0x3,%eax\n  413454:\t83 e0 38             \tand    $0x38,%eax\n  413457:\t09 c2                \tor     %eax,%edx\n  413459:\t0f b7 45 a6          \tmovzwl -0x5a(%rbp),%eax\n  41345d:\t83 e0 07             \tand    $0x7,%eax\n  413460:\t89 d1                \tmov    %edx,%ecx\n  413462:\t09 c1                \tor     %eax,%ecx\n  413464:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  41346b:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  41346f:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  413476:\t89 ca                \tmov    %ecx,%edx\n  413478:\t88 10                \tmov    %dl,(%rax)\n  41347a:\t0f b7 45 a8          \tmovzwl -0x58(%rbp),%eax\n  41347e:\t98                   \tcwtl   \n  41347f:\tc1 e0 05             \tshl    $0x5,%eax\n  413482:\t89 c2                \tmov    %eax,%edx\n  413484:\t0f b7 45 aa          \tmovzwl -0x56(%rbp),%eax\n  413488:\t98                   \tcwtl   \n  413489:\tc1 e0 02             \tshl    $0x2,%eax\n  41348c:\t83 e0 1c             \tand    $0x1c,%eax\n  41348f:\t09 c2                \tor     %eax,%edx\n  413491:\t0f b7 45 ac          \tmovzwl -0x54(%rbp),%eax\n  413495:\t66 d1 f8             \tsar    %ax\n  413498:\t83 e0 03             \tand    $0x3,%eax\n  41349b:\t89 d1                \tmov    %edx,%ecx\n  41349d:\t09 c1                \tor     %eax,%ecx\n  41349f:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4134a6:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4134aa:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4134b1:\t89 ca                \tmov    %ecx,%edx\n  4134b3:\t88 10                \tmov    %dl,(%rax)\n  4134b5:\t0f b7 45 ac          \tmovzwl -0x54(%rbp),%eax\n  4134b9:\t98                   \tcwtl   \n  4134ba:\tc1 e0 07             \tshl    $0x7,%eax\n  4134bd:\t89 c2                \tmov    %eax,%edx\n  4134bf:\t0f b7 45 ae          \tmovzwl -0x52(%rbp),%eax\n  4134c3:\t98                   \tcwtl   \n  4134c4:\tc1 e0 04             \tshl    $0x4,%eax\n  4134c7:\t83 e0 70             \tand    $0x70,%eax\n  4134ca:\t09 c2                \tor     %eax,%edx\n  4134cc:\t0f b7 45 b0          \tmovzwl -0x50(%rbp),%eax\n  4134d0:\t98                   \tcwtl   \n  4134d1:\t01 c0                \tadd    %eax,%eax\n  4134d3:\t83 e0 0e             \tand    $0xe,%eax\n  4134d6:\t09 c2                \tor     %eax,%edx\n  4134d8:\t0f b7 45 b2          \tmovzwl -0x4e(%rbp),%eax\n  4134dc:\t66 c1 f8 02          \tsar    $0x2,%ax\n  4134e0:\t83 e0 01             \tand    $0x1,%eax\n  4134e3:\t89 d1                \tmov    %edx,%ecx\n  4134e5:\t09 c1                \tor     %eax,%ecx\n  4134e7:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  4134ee:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  4134f2:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  4134f9:\t89 ca                \tmov    %ecx,%edx\n  4134fb:\t88 10                \tmov    %dl,(%rax)\n  4134fd:\t0f b7 45 b2          \tmovzwl -0x4e(%rbp),%eax\n  413501:\t98                   \tcwtl   \n  413502:\tc1 e0 06             \tshl    $0x6,%eax\n  413505:\t89 c2                \tmov    %eax,%edx\n  413507:\t0f b7 45 b4          \tmovzwl -0x4c(%rbp),%eax\n  41350b:\t98                   \tcwtl   \n  41350c:\tc1 e0 03             \tshl    $0x3,%eax\n  41350f:\t83 e0 38             \tand    $0x38,%eax\n  413512:\t09 c2                \tor     %eax,%edx\n  413514:\t0f b7 45 b6          \tmovzwl -0x4a(%rbp),%eax\n  413518:\t83 e0 07             \tand    $0x7,%eax\n  41351b:\t89 d1                \tmov    %edx,%ecx\n  41351d:\t09 c1                \tor     %eax,%ecx\n  41351f:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n  413526:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n  41352a:\t48 89 95 38 ff ff ff \tmov    %rdx,-0xc8(%rbp)\n  413531:\t89 ca                \tmov    %ecx,%edx\n  413533:\t88 10                \tmov    %dl,(%rax)\n  413535:\t90                   \tnop\n  413536:\tc9                   \tleave  \n  413537:\tc3                   \tret    ", "code_s": "void gsm_encode(long <span class=\"supfact\">param_1</span>,\n                undefined8 <span class=\"supfact\">param_2</span>,\n                byte *<span class=\"supfact\">param_3</span>) {\n  ushort <span class=\"supfact\">uVar1</span>;\n  short <span class=\"supfact\">local_b8</span>;\n  short <span class=\"supfact\">local_b6</span>;\n  short <span class=\"supfact\">local_b4</span>;\n  short <span class=\"supfact\">local_b2</span>;\n  short <span class=\"supfact\">local_b0</span>;\n  short <span class=\"supfact\">local_ae</span>;\n  short <span class=\"supfact\">local_ac</span>;\n  short <span class=\"supfact\">local_aa</span>;\n  short <span class=\"supfact\">local_a8</span>;\n  short <span class=\"supfact\">local_a6</span>;\n  short <span class=\"supfact\">local_a4</span>;\n  short <span class=\"supfact\">local_a2</span>;\n  short <span class=\"supfact\">local_a0</span>;\n  short <span class=\"supfact\">local_9e</span>;\n  short <span class=\"supfact\">local_9c</span>;\n  short <span class=\"supfact\">local_9a</span>;\n  short <span class=\"supfact\">local_98</span>;\n  short <span class=\"supfact\">local_96</span>;\n  short <span class=\"supfact\">local_94</span>;\n  short <span class=\"supfact\">local_92</span>;\n  short <span class=\"supfact\">local_90</span>;\n  short <span class=\"supfact\">local_8e</span>;\n  short <span class=\"supfact\">local_8c</span>;\n  short <span class=\"supfact\">local_8a</span>;\n  short <span class=\"supfact\">local_88</span>;\n  short <span class=\"supfact\">local_86</span>;\n  short <span class=\"supfact\">local_84</span>;\n  short <span class=\"supfact\">local_82</span>;\n  short local_80;\n  short local_7e;\n  short local_7c;\n  short local_7a;\n  short local_78;\n  short local_76;\n  short local_74;\n  short local_72;\n  short local_70;\n  short local_6e;\n  short local_6c;\n  short local_6a;\n  short local_68;\n  short local_66;\n  short local_64;\n  short local_62;\n  short local_60;\n  short local_5e;\n  short local_5c;\n  short local_5a;\n  short local_58;\n  short local_56;\n  short local_54;\n  short local_52;\n  short local_48;\n  short local_46;\n  short local_44;\n  short local_42;\n  short local_40;\n  short local_3e;\n  short local_3c;\n  short local_3a;\n  short local_38;\n  short local_36;\n  short local_34;\n  short local_32;\n  short local_30;\n  short local_2e;\n  short local_2c;\n  short local_2a;\n  short local_28;\n  short local_26;\n  short local_24;\n  short local_22;\n  short local_20;\n  short local_1e;\n  short local_1c;\n  short local_1a;\n  Gsm_Coder(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>, &amp;\n            local_28, &amp; local_30, &amp; local_40, &amp; local_38, &amp;\n            local_48, &amp; <span class=\"supfact\">local_b8</span>);\n  if (*(char *)(<span class=\"supfact\">param_1</span> + Number) == String) {\n    *<span class=\"supfact\">param_3</span> = (byte)(local_28 & gt; &gt; Number) & amp;\n    Number | Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_28 & lt; &lt; Number) | (byte)local_26 & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] = (byte)((int)local_24 & lt; &lt; Number) |\n                                      (byte)(local_22 & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_22 & lt; &lt; Number) |\n        (byte)(((int)local_20 & amp; Number) & lt; &lt; Number) |\n        (byte)(local_1e & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_1e & lt; &lt; Number) |\n        (byte)(((int)local_1c & amp; Number) & lt; &lt; Number) |\n        (byte)local_1a & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (char)local_30 * String | (byte)(local_40 & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_40 & lt; &lt; Number) |\n        (byte)(((int)local_38 & amp; Number) & lt; &lt; Number) |\n        (byte)(local_48 & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_48 & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">local_b8</span> & amp; Number) & lt; &lt;\n               Number) |\n        (char)<span class=\"supfact\">local_b6</span> * String & amp;\n    Number | (byte)(<span class=\"supfact\">local_b4</span> & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)<span class=\"supfact\">local_b4</span> & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">local_b2</span> & amp; Number) & lt; &lt;\n               Number) |\n        (byte)<span class=\"supfact\">local_b0</span> & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)<span class=\"supfact\">local_ae</span> & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">local_ac</span> & amp; Number) & lt; &lt;\n               Number) |\n        (byte)(<span class=\"supfact\">local_aa</span> & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)<span class=\"supfact\">local_aa</span> & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">local_a8</span> & amp; Number) & lt; &lt;\n               Number) |\n        (char)<span class=\"supfact\">local_a6</span> * String & amp;\n    Number | (byte)(<span class=\"supfact\">local_a4</span> & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)<span class=\"supfact\">local_a4</span> & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">local_a2</span> & amp; Number) & lt; &lt;\n               Number) |\n        (byte)<span class=\"supfact\">local_a0</span> & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (char)local_2e * String | (byte)(local_3e & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_3e & lt; &lt; Number) |\n        (byte)(((int)local_36 & amp; Number) & lt; &lt; Number) |\n        (byte)(local_46 & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_46 & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">local_9e</span> & amp; Number) & lt; &lt;\n               Number) |\n        (char)<span class=\"supfact\">local_9c</span> * String & amp;\n    Number | (byte)(<span class=\"supfact\">local_9a</span> & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)<span class=\"supfact\">local_9a</span> & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">local_98</span> & amp; Number) & lt; &lt;\n               Number) |\n        (byte)<span class=\"supfact\">local_96</span> & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)<span class=\"supfact\">local_94</span> & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">local_92</span> & amp; Number) & lt; &lt;\n               Number) |\n        (byte)(<span class=\"supfact\">local_90</span> & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)<span class=\"supfact\">local_90</span> & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">local_8e</span> & amp; Number) & lt; &lt;\n               Number) |\n        (char)<span class=\"supfact\">local_8c</span> * String & amp;\n    Number | (byte)(<span class=\"supfact\">local_8a</span> & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)<span class=\"supfact\">local_8a</span> & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">local_88</span> & amp; Number) & lt; &lt;\n               Number) |\n        (byte)<span class=\"supfact\">local_86</span> & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (char)local_2c * String | (byte)(local_3c & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_3c & lt; &lt; Number) |\n        (byte)(((int)local_34 & amp; Number) & lt; &lt; Number) |\n        (byte)(local_44 & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_44 & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">local_84</span> & amp; Number) & lt; &lt;\n               Number) |\n        (char)<span class=\"supfact\">local_82</span> * String & amp;\n    Number | (byte)(local_80 & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_80 & lt; &lt; Number) |\n        (byte)(((int)local_7e & amp; Number) & lt; &lt; Number) |\n        (byte)local_7c & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_7a & lt; &lt; Number) |\n        (byte)(((int)local_78 & amp; Number) & lt; &lt; Number) |\n        (byte)(local_76 & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_76 & lt; &lt; Number) |\n        (byte)(((int)local_74 & amp; Number) & lt; &lt; Number) |\n        (char)local_72 * String & amp;\n    Number | (byte)(local_70 & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_70 & lt; &lt; Number) |\n        (byte)(((int)local_6e & amp; Number) & lt; &lt; Number) |\n        (byte)local_6c & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (char)local_2a * String | (byte)(local_3a & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_3a & lt; &lt; Number) |\n        (byte)(((int)local_32 & amp; Number) & lt; &lt; Number) |\n        (byte)(local_42 & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_42 & lt; &lt; Number) |\n        (byte)(((int)local_6a & amp; Number) & lt; &lt; Number) |\n        (char)local_68 * String & amp;\n    Number | (byte)(local_66 & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_66 & lt; &lt; Number) |\n        (byte)(((int)local_64 & amp; Number) & lt; &lt; Number) |\n        (byte)local_62 & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_60 & lt; &lt; Number) |\n        (byte)(((int)local_5e & amp; Number) & lt; &lt; Number) |\n        (byte)(local_5c & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_5c & lt; &lt; Number) |\n        (byte)(((int)local_5a & amp; Number) & lt; &lt; Number) |\n        (char)local_58 * String & amp;\n    Number | (byte)(local_56 & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">param_3</span>[Number] =\n        (byte)((int)local_56 & lt; &lt; Number) |\n        (byte)(((int)local_54 & amp; Number) & lt; &lt; Number) |\n        (byte)local_52 & amp;\n    Number;\n  } else {\n    *(bool *)(<span class=\"supfact\">param_1</span> + Number) =\n        *(char *)(<span class=\"supfact\">param_1</span> + Number) == String;\n    if (*(char *)(<span class=\"supfact\">param_1</span> + Number) == String) {\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_28 & lt; &lt; Number) |\n          (ushort)((ushort) * (byte *)(<span class=\"supfact\">param_1</span> + Number) & lt;\n                   &lt; Number) &\n              gt;\n      &gt;\n      Number;\n      *<span class=\"supfact\">param_3</span> =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)local_26 & lt; &lt; Number) & gt; &gt; Number) |\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)local_22 & lt; &lt; Number) |\n                              (ushort)((int)local_24 & lt; &lt; Number) & gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_1e & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_20 & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)local_1a & lt; &lt; Number) & gt; &gt; Number) |\n          (byte)((byte)((uint)((int)local_1c & lt; &lt; Number) & gt; &gt;\n                        Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)local_40 & lt; &lt; Number) |\n                              (ushort)((int)local_30 & lt; &lt; Number) & gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_48 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_38 & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">local_b4</span> & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_b6</span> & lt; &lt; Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">local_b8</span> & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">local_b0</span> & lt; &lt; Number) & gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">local_b2</span> & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">local_aa</span> & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_ac</span> & lt; &lt; Number) |\n                       (ushort)((int)<span class=\"supfact\">local_ae</span> & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">local_a4</span> & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_a6</span> & lt; &lt; Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">local_a8</span> & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">local_a0</span> & lt; &lt; Number) & gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">local_a2</span> & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)local_3e & lt; &lt; Number) |\n                              (ushort)((int)local_2e & lt; &lt; Number) & gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_46 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_36 & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">local_9a</span> & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_9c</span> & lt; &lt; Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">local_9e</span> & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">local_96</span> & lt; &lt; Number) & gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">local_98</span> & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">local_90</span> & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_92</span> & lt; &lt; Number) |\n                       (ushort)((int)<span class=\"supfact\">local_94</span> & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">local_8a</span> & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_8c</span> & lt; &lt; Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">local_8e</span> & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">local_86</span> & lt; &lt; Number) & gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">local_88</span> & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)local_3c & lt; &lt; Number) |\n                              (ushort)((int)local_2c & lt; &lt; Number) & gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_44 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_34 & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_80 & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_82</span> & lt; &lt; Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">local_84</span> & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)local_7c & lt; &lt; Number) & gt; &gt; Number) |\n          (byte)((byte)((uint)((int)local_7e & lt; &lt; Number) & gt; &gt;\n                        Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_76 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_78 & lt; &lt; Number) |\n                       (ushort)((int)local_7a & lt; &lt; Number) & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_70 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_72 & lt; &lt; Number) |\n                       (ushort)((ushort)((int)local_74 & lt; &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)local_6c & lt; &lt; Number) & gt; &gt; Number) |\n          (byte)((byte)((uint)((int)local_6e & lt; &lt; Number) & gt; &gt;\n                        Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)local_3a & lt; &lt; Number) |\n                              (ushort)((int)local_2a & lt; &lt; Number) & gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_42 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_32 & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_66 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_68 & lt; &lt; Number) |\n                       (ushort)((ushort)((int)local_6a & lt; &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)local_62 & lt; &lt; Number) & gt; &gt; Number) |\n          (byte)((byte)((uint)((int)local_64 & lt; &lt; Number) & gt; &gt;\n                        Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_5c & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_5e & lt; &lt; Number) |\n                       (ushort)((int)local_60 & lt; &lt; Number) & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_56 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_58 & lt; &lt; Number) |\n                       (ushort)((ushort)((int)local_5a & lt; &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)local_52 & lt; &lt; Number) & gt; &gt; Number) |\n          (byte)((byte)((uint)((int)local_54 & lt; &lt; Number) & gt; &gt;\n                        Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)local_26 & lt; &lt; Number) |\n                              (ushort)((int)local_28 & lt; &lt; Number) & gt;\n      &gt;\n      Number;\n      *<span class=\"supfact\">param_3</span> =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)local_24 & lt; &lt; Number) |\n                              <span class=\"supfact\">uVar1</span> & gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_20 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_22 & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_1c & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_1e & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_30 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_1a & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_48 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_38 & lt; &lt; Number) |\n                       (ushort)((ushort)((int)local_40 & lt; &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">local_b8</span> & lt; &lt; Number) & gt;\n                 &gt; Number) |\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">local_b2</span> & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_b4</span> & lt; &lt; Number) |\n                       (ushort)((int)<span class=\"supfact\">local_b6</span> & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">local_ac</span> & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_ae</span> & lt; &lt; Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">local_b0</span> & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">local_a8</span> & lt; &lt; Number) & gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">local_aa</span> & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">local_a2</span> & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_a4</span> & lt; &lt; Number) |\n                       (ushort)((int)<span class=\"supfact\">local_a6</span> & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_2e & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_a0</span> & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_46 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_36 & lt; &lt; Number) |\n                       (ushort)((ushort)((int)local_3e & lt; &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">local_9e</span> & lt; &lt; Number) & gt;\n                 &gt; Number) |\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">local_98</span> & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_9a</span> & lt; &lt; Number) |\n                       (ushort)((int)<span class=\"supfact\">local_9c</span> & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">local_92</span> & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_94</span> & lt; &lt; Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">local_96</span> & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">local_8e</span> & lt; &lt; Number) & gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">local_90</span> & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">local_88</span> & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_8a</span> & lt; &lt; Number) |\n                       (ushort)((int)<span class=\"supfact\">local_8c</span> & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_2c & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">local_86</span> & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_44 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_34 & lt; &lt; Number) |\n                       (ushort)((ushort)((int)local_3c & lt; &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">local_84</span> & lt; &lt; Number) & gt;\n                 &gt; Number) |\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_7e & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_80 & lt; &lt; Number) |\n                       (ushort)((int)<span class=\"supfact\">local_82</span> & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_78 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_7a & lt; &lt; Number) |\n                       (ushort)((ushort)((int)local_7c & lt; &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)local_74 & lt; &lt; Number) & gt; &gt; Number) |\n          (byte)((byte)((uint)((int)local_76 & lt; &lt; Number) & gt; &gt;\n                        Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_6e & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_70 & lt; &lt; Number) |\n                       (ushort)((int)local_72 & lt; &lt; Number) & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_2a & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_6c & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_42 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_32 & lt; &lt; Number) |\n                       (ushort)((ushort)((int)local_3a & lt; &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)local_6a & lt; &lt; Number) & gt; &gt; Number) |\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_64 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_66 & lt; &lt; Number) |\n                       (ushort)((int)local_68 & lt; &lt; Number) & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_5e & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_60 & lt; &lt; Number) |\n                       (ushort)((ushort)((int)local_62 & lt; &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((uint)((int)local_5a & lt; &lt; Number) & gt; &gt; Number) |\n          (byte)((byte)((uint)((int)local_5c & lt; &lt; Number) & gt; &gt;\n                        Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)local_54 & lt; &lt; Number) |\n          (ushort)((ushort)((int)local_56 & lt; &lt; Number) |\n                       (ushort)((int)local_58 & lt; &lt; Number) & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">param_3</span>[Number] =\n          (byte)((byte)((uint)((int)local_52 & lt; &lt; Number) & gt; &gt;\n                        Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n          gt;\n      &gt;\n      Number;\n      *(byte *)(<span class=\"supfact\">param_1</span> + Number) =\n          <span class=\"supfact\">param_3</span>[Number];\n    }\n  }\n  return;\n}", "code_t": "void gsm_encode(gsm <span class=\"supfact\">s</span>, gsm_signal *<span class=\"supfact\">source</span>,\n                gsm_byte *<span class=\"supfact\">c</span>) {\n  ushort <span class=\"supfact\">uVar1</span>;\n  gsm_byte *<span class=\"supfact\">c</span> - local;\n  gsm_signal *<span class=\"supfact\">source</span> - local;\n  gsm <span class=\"supfact\">s</span> - local;\n  word <span class=\"supfact\">xmc</span>[Number];\n  word <span class=\"supfact\">xmaxc</span>[Number];\n  word <span class=\"supfact\">bc</span>[Number];\n  word <span class=\"supfact\">Mc</span>[Number];\n  word <span class=\"supfact\">Nc</span>[Number];\n  word <span class=\"supfact\">LARc</span>[Number];\n  uword sr;\n  uword sr_1;\n  Gsm_Coder(<span class=\"supfact\">s</span>, <span class=\"supfact\">source</span>, <span class=\"supfact\">LARc</span>,\n            <span class=\"supfact\">Nc</span>, <span class=\"supfact\">bc</span>, <span class=\"supfact\">Mc</span>,\n            <span class=\"supfact\">xmaxc</span>, <span class=\"supfact\">xmc</span>);\n  if (<span class=\"supfact\">s</span> - &gt; wav_fmt == String) {\n    *<span class=\"supfact\">c</span> =\n        (byte)(<span class=\"supfact\">LARc</span>[Number] & gt; &gt; Number) & amp;\n    Number | Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) |\n        (byte)<span class=\"supfact\">LARc</span>[Number] & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) |\n        (byte)(<span class=\"supfact\">LARc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">LARc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)(<span class=\"supfact\">LARc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">LARc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)<span class=\"supfact\">LARc</span>[Number] & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (char)<span class=\"supfact\">Nc</span>[Number] * String |\n        (byte)(<span class=\"supfact\">bc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">bc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">Mc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)(<span class=\"supfact\">xmaxc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmaxc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (char)<span class=\"supfact\">xmc</span>[Number] * String & amp;\n    Number | (byte)(<span class=\"supfact\">xmc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)<span class=\"supfact\">xmc</span>[Number] & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)(<span class=\"supfact\">xmc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (char)<span class=\"supfact\">xmc</span>[Number] * String & amp;\n    Number | (byte)(<span class=\"supfact\">xmc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)<span class=\"supfact\">xmc</span>[Number] & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (char)<span class=\"supfact\">Nc</span>[Number] * String |\n        (byte)(<span class=\"supfact\">bc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">bc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">Mc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)(<span class=\"supfact\">xmaxc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmaxc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (char)<span class=\"supfact\">xmc</span>[Number] * String & amp;\n    Number | (byte)(<span class=\"supfact\">xmc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)<span class=\"supfact\">xmc</span>[Number] & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)(<span class=\"supfact\">xmc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (char)<span class=\"supfact\">xmc</span>[Number] * String & amp;\n    Number | (byte)(<span class=\"supfact\">xmc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)<span class=\"supfact\">xmc</span>[Number] & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (char)<span class=\"supfact\">Nc</span>[Number] * String |\n        (byte)(<span class=\"supfact\">bc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">bc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">Mc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)(<span class=\"supfact\">xmaxc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmaxc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (char)<span class=\"supfact\">xmc</span>[Number] * String & amp;\n    Number | (byte)(<span class=\"supfact\">xmc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)<span class=\"supfact\">xmc</span>[Number] & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)(<span class=\"supfact\">xmc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (char)<span class=\"supfact\">xmc</span>[Number] * String & amp;\n    Number | (byte)(<span class=\"supfact\">xmc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)<span class=\"supfact\">xmc</span>[Number] & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (char)<span class=\"supfact\">Nc</span>[Number] * String |\n        (byte)(<span class=\"supfact\">bc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">bc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">Mc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)(<span class=\"supfact\">xmaxc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmaxc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (char)<span class=\"supfact\">xmc</span>[Number] * String & amp;\n    Number | (byte)(<span class=\"supfact\">xmc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)<span class=\"supfact\">xmc</span>[Number] & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)(<span class=\"supfact\">xmc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (char)<span class=\"supfact\">xmc</span>[Number] * String & amp;\n    Number | (byte)(<span class=\"supfact\">xmc</span>[Number] & gt; &gt; Number) & amp;\n    Number;\n    <span class=\"supfact\">c</span>[Number] =\n        (byte)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n        (byte)(((int)<span class=\"supfact\">xmc</span>[Number] & amp; Number) & lt; &lt;\n               Number) |\n        (byte)<span class=\"supfact\">xmc</span>[Number] & amp;\n    Number;\n  } else {\n    <span class=\"supfact\">s</span> - &gt;\n    frame_index = <span class=\"supfact\">s</span> - &gt;\n    frame_index == String;\n    if (<span class=\"supfact\">s</span> - &gt; frame_index == String) {\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)<span class=\"supfact\">s</span> - &gt; frame_chain & lt; &lt;\n                   Number) &\n              gt;\n      &gt;\n      Number;\n      *<span class=\"supfact\">c</span> = (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) |\n          (ushort)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) & gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt;\n                            Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">bc</span>[Number] & lt; &lt; Number) |\n          (ushort)((int)<span class=\"supfact\">Nc</span>[Number] & lt; &lt; Number) & gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmaxc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">Mc</span>[Number] & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">bc</span>[Number] & lt; &lt; Number) |\n          (ushort)((int)<span class=\"supfact\">Nc</span>[Number] & lt; &lt; Number) & gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmaxc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">Mc</span>[Number] & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">bc</span>[Number] & lt; &lt; Number) |\n          (ushort)((int)<span class=\"supfact\">Nc</span>[Number] & lt; &lt; Number) & gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmaxc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">Mc</span>[Number] & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">bc</span>[Number] & lt; &lt; Number) |\n          (ushort)((int)<span class=\"supfact\">Nc</span>[Number] & lt; &lt; Number) & gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmaxc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">Mc</span>[Number] & lt; &lt; Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n    } else {\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) |\n          (ushort)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) & gt;\n      &gt;\n      Number;\n      *<span class=\"supfact\">c</span> = (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) |\n          <span class=\"supfact\">uVar1</span> & gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt;\n                            Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt;\n                            Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">Nc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">LARc</span>[Number] & lt; &lt;\n                            Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmaxc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">Mc</span>[Number] & lt; &lt; Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">bc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">Nc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmaxc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">Mc</span>[Number] & lt; &lt; Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">bc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">Nc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmaxc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">Mc</span>[Number] & lt; &lt; Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">bc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">Nc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       <span class=\"supfact\">uVar1</span> & gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmaxc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">Mc</span>[Number] & lt; &lt; Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">bc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt;\n                                         &lt; Number) |\n                                    <span class=\"supfact\">uVar1</span> & gt;\n                                &gt; Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) &\n                     gt;\n                 &gt; Number) |\n          (byte)((byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">uVar1</span> =\n          (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt; Number) |\n          (ushort)((ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                            Number) |\n                       (ushort)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                                Number) &\n                           gt;\n                   &gt; Number) &\n              gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">c</span>[Number] =\n          (gsm_byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number);\n      <span class=\"supfact\">c</span>[Number] =\n          (byte)((byte)((uint)((int)<span class=\"supfact\">xmc</span>[Number] & lt; &lt;\n                               Number) &\n                            gt;\n                        &gt; Number) |\n                 (byte)(<span class=\"supfact\">uVar1</span> & gt; &gt; Number)) &\n          gt;\n      &gt;\n      Number;\n      <span class=\"supfact\">s</span> - &gt;\n      frame_chain = <span class=\"supfact\">c</span>[Number];\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "gsm", "pred_name": "s", "ref_name": "s", "ref_type": "gsm"}, {"name": "param_2", "type": "__unk__", "pred_name": "source", "ref_name": "source", "ref_type": "gsm_signal * *"}, {"name": "param_3", "type": "__unk__", "pred_name": "c", "ref_name": "c", "ref_type": "gsm_byte * *"}, {"name": "uVar1", "type": "ushort", "pred_name": "uVar1", "ref_name": "uVar1", "ref_type": "ushort"}, {"name": "local_b8", "type": "__unk__", "pred_name": "__unk__", "ref_name": "xmc", "ref_type": "word[52][52]"}, {"name": "local_b6", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_b4", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_b2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_b0", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_ae", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_ac", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_aa", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_a8", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_a6", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_a4", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_a2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_a0", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_9e", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_9c", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_9a", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_98", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_96", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_94", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_92", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_90", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_8e", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_8c", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_8a", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_88", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_86", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_84", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_82", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000001d1c5 <qmp_guest_fsfreeze_thaw>:\n   1d1c5:\t55                   \tpush   %rbp\n   1d1c6:\t48 89 e5             \tmov    %rsp,%rbp\n   1d1c9:\t48 83 ec 40          \tsub    $0x40,%rsp\n   1d1cd:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n   1d1d1:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   1d1d8:\t00 00 \n   1d1da:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   1d1de:\t31 c0                \txor    %eax,%eax\n   1d1e0:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n   1d1e7:\tc6 45 db 00          \tmovb   $0x0,-0x25(%rbp)\n   1d1eb:\t48 8b 05 a6 01 01 00 \tmov    0x101a6(%rip),%rax        # 2d398 <guest_fsfreeze_state+0x8>\n   1d1f2:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   1d1f6:\teb 61                \tjmp    1d259 <qmp_guest_fsfreeze_thaw+0x94>\n   1d1f8:\tc6 45 db 01          \tmovb   $0x1,-0x25(%rbp)\n   1d1fc:\teb 53                \tjmp    1d251 <qmp_guest_fsfreeze_thaw+0x8c>\n   1d1fe:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n   1d201:\tbe 78 58 04 c0       \tmov    $0xc0045878,%esi\n   1d206:\t89 c7                \tmov    %eax,%edi\n   1d208:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   1d20d:\te8 be b1 fe ff       \tcall   83d0 <ioctl@plt>\n   1d212:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n   1d215:\t83 7d e4 00          \tcmpl   $0x0,-0x1c(%rbp)\n   1d219:\t79 28                \tjns    1d243 <qmp_guest_fsfreeze_thaw+0x7e>\n   1d21b:\te8 a0 ae fe ff       \tcall   80c0 <__errno_location@plt>\n   1d220:\t8b 00                \tmov    (%rax),%eax\n   1d222:\t83 f8 5f             \tcmp    $0x5f,%eax\n   1d225:\t74 1c                \tje     1d243 <qmp_guest_fsfreeze_thaw+0x7e>\n   1d227:\te8 94 ae fe ff       \tcall   80c0 <__errno_location@plt>\n   1d22c:\t8b 00                \tmov    (%rax),%eax\n   1d22e:\t83 f8 16             \tcmp    $0x16,%eax\n   1d231:\t74 10                \tje     1d243 <qmp_guest_fsfreeze_thaw+0x7e>\n   1d233:\tc6 45 db 01          \tmovb   $0x1,-0x25(%rbp)\n   1d237:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n   1d23a:\t89 c7                \tmov    %eax,%edi\n   1d23c:\te8 9f b1 fe ff       \tcall   83e0 <close@plt>\n   1d241:\teb 0e                \tjmp    1d251 <qmp_guest_fsfreeze_thaw+0x8c>\n   1d243:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n   1d246:\t89 c7                \tmov    %eax,%edi\n   1d248:\te8 93 b1 fe ff       \tcall   83e0 <close@plt>\n   1d24d:\t83 45 dc 01          \taddl   $0x1,-0x24(%rbp)\n   1d251:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1d255:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   1d259:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n   1d25e:\t74 37                \tje     1d297 <qmp_guest_fsfreeze_thaw+0xd2>\n   1d260:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1d264:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n   1d268:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n   1d26c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1d270:\t48 8b 00             \tmov    (%rax),%rax\n   1d273:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   1d278:\t48 89 c7             \tmov    %rax,%rdi\n   1d27b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   1d280:\te8 61 19 ff ff       \tcall   ebe6 <qemu_open>\n   1d285:\t89 45 e0             \tmov    %eax,-0x20(%rbp)\n   1d288:\t83 7d e0 ff          \tcmpl   $0xffffffff,-0x20(%rbp)\n   1d28c:\t0f 85 6c ff ff ff    \tjne    1d1fe <qmp_guest_fsfreeze_thaw+0x39>\n   1d292:\te9 61 ff ff ff       \tjmp    1d1f8 <qmp_guest_fsfreeze_thaw+0x33>\n   1d297:\t80 7d db 00          \tcmpb   $0x0,-0x25(%rbp)\n   1d29b:\t74 0c                \tje     1d2a9 <qmp_guest_fsfreeze_thaw+0xe4>\n   1d29d:\tc7 05 e9 00 01 00 02 \tmovl   $0x2,0x100e9(%rip)        # 2d390 <guest_fsfreeze_state>\n   1d2a4:\t00 00 00 \n   1d2a7:\teb 0a                \tjmp    1d2b3 <qmp_guest_fsfreeze_thaw+0xee>\n   1d2a9:\tc7 05 dd 00 01 00 00 \tmovl   $0x0,0x100dd(%rip)        # 2d390 <guest_fsfreeze_state>\n   1d2b0:\t00 00 00 \n   1d2b3:\te8 47 fa ff ff       \tcall   1ccff <enable_logging>\n   1d2b8:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n   1d2bb:\t48 98                \tcltq   \n   1d2bd:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n   1d2c1:\t64 48 33 14 25 28 00 \txor    %fs:0x28,%rdx\n   1d2c8:\t00 00 \n   1d2ca:\t74 05                \tje     1d2d1 <qmp_guest_fsfreeze_thaw+0x10c>\n   1d2cc:\te8 bf af fe ff       \tcall   8290 <__stack_chk_fail@plt>\n   1d2d1:\tc9                   \tleave  \n   1d2d2:\tc3                   \tret    ", "code_s": "long qmp_guest_fsfreeze_thaw(void) {\n  long lVar1;\n  undefined8 *puVar2;\n  bool bVar3;\n  int iVar4;\n  int __fd;\n  int *<span class=\"supfact\">piVar5</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">local_2c</span>;\n  undefined8 *<span class=\"supfact\">local_20</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_2c</span> = Number;\n  bVar3 = false;\n  <span class=\"supfact\">local_20</span> = DAT_0012d398;\n  while (<span class=\"supfact\">local_20</span> != (undefined8 *)Number) {\n    puVar2 = (undefined8 *)<span class=\"supfact\">local_20</span>[Number];\n    __fd = qemu_open(*<span class=\"supfact\">local_20</span>, Number);\n    <span class=\"supfact\">local_20</span> = puVar2;\n    if (__fd == -Number) {\n      bVar3 = true;\n    } else {\n      iVar4 = ioctl(__fd, Number);\n      if (((iVar4 & lt; Number) & amp; &amp;\n           (<span class=\"supfact\">piVar5</span> = __errno_location(),\n            *<span class=\"supfact\">piVar5</span> != Number)) &\n              amp;\n          &amp; (<span class=\"supfact\">piVar5</span> = __errno_location(),\n                 *<span class=\"supfact\">piVar5</span> != Number)) {\n        bVar3 = true;\n        close(__fd);\n      } else {\n        close(__fd);\n        <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">local_2c</span> + Number;\n      }\n    }\n  }\n  if (bVar3) {\n    guest_fsfreeze_state = Number;\n  } else {\n    guest_fsfreeze_state = Number;\n  }\n  FUN_0011ccff();\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return (long)<span class=\"supfact\">local_2c</span>;\n  }\n  __stack_chk_fail();\n}", "code_t": "int64_t qmp_guest_fsfreeze_thaw(Error **err) {\n  long lVar1;\n  GuestFsfreezeMount *pGVar2;\n  bool bVar3;\n  int iVar4;\n  int __fd;\n  int *<span class=\"supfact\">piVar5</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  Error **err - local;\n  _Bool has_error;\n  int <span class=\"supfact\">i</span>;\n  int fd;\n  int ret;\n  GuestFsfreezeMount *<span class=\"supfact\">mount</span>;\n  GuestFsfreezeMount *temp;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">i</span> = Number;\n  bVar3 = false;\n  <span class=\"supfact\">mount</span> = guest_fsfreeze_state.mount_list.tqh_first;\n  while (<span class=\"supfact\">mount</span> != (GuestFsfreezeMount *)Number) {\n    pGVar2 = (<span class=\"supfact\">mount</span> - &gt; next).tqe_next;\n    __fd = qemu_open(<span class=\"supfact\">mount</span> - &gt; dirname, Number);\n    <span class=\"supfact\">mount</span> = pGVar2;\n    if (__fd == -Number) {\n      bVar3 = true;\n    } else {\n      iVar4 = ioctl(__fd, Number);\n      if (((iVar4 & lt; Number) & amp; &amp;\n           (<span class=\"supfact\">piVar5</span> = __errno_location(),\n            *<span class=\"supfact\">piVar5</span> != Number)) &\n              amp;\n          &amp; (<span class=\"supfact\">piVar5</span> = __errno_location(),\n                 *<span class=\"supfact\">piVar5</span> != Number)) {\n        bVar3 = true;\n        close(__fd);\n      } else {\n        close(__fd);\n        <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n      }\n    }\n  }\n  if (bVar3) {\n    guest_fsfreeze_state.status = GUEST_FSFREEZE_STATUS_ERROR;\n  } else {\n    guest_fsfreeze_state.status = GUEST_FSFREEZE_STATUS_THAWED;\n  }\n  enable_logging();\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return (long)<span class=\"supfact\">i</span>;\n  }\n  __stack_chk_fail();\n}", "var": [{"name": "piVar5", "type": "disappear", "pred_name": "", "ref_name": "piVar5", "ref_type": "int * *"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_2c", "type": "int", "pred_name": "__unk__", "ref_name": "i", "ref_type": "int"}, {"name": "local_20", "type": "ulong", "pred_name": "__unk__", "ref_name": "mount", "ref_type": "GuestFsfreezeMount * *"}], "body_in_train": false}, {"repo_owner": "wufixx", "repo_name": "android_kernel_xiaomi_msm8953_vince", "path": "wufixx/android_kernel_xiaomi_msm8953_vince/e20e40c14979637892394d8d220a1ffb64a1912d5eb640ba7ecb67aef438b696", "path_in_repo": "wufixx/android_kernel_xiaomi_msm8953_vince/tools/lib/traceevent/libtraceevent.so", "objdump": "000000000001068e <pevent_alloc>:\n   1068e:\t55                   \tpush   %rbp\n   1068f:\t48 89 e5             \tmov    %rsp,%rbp\n   10692:\t48 83 ec 10          \tsub    $0x10,%rsp\n   10696:\tbe 10 01 00 00       \tmov    $0x110,%esi\n   1069b:\tbf 01 00 00 00       \tmov    $0x1,%edi\n   106a0:\te8 7b 3c ff ff       \tcall   4320 <calloc@plt>\n   106a5:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   106a9:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n   106ae:\t74 0a                \tje     106ba <pevent_alloc+0x2c>\n   106b0:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   106b4:\tc7 00 01 00 00 00    \tmovl   $0x1,(%rax)\n   106ba:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   106be:\tc9                   \tleave  \n   106bf:\tc3                   \tret    ", "code_s": "undefined4 *pevent_alloc(void) {\n  undefined4 *<span class=\"supfact\">puVar1</span>;\n  <span class=\"supfact\">puVar1</span> = (undefined4 *)calloc(Number, Number);\n  if (<span class=\"supfact\">puVar1</span> != (undefined4 *)Number) {\n    *<span class=\"supfact\">puVar1</span> = Number;\n  }\n  return <span class=\"supfact\">puVar1</span>;\n}", "code_t": "pevent *pevent_alloc(void) {\n  pevent *<span class=\"supfact\">ppVar1</span>;\n  pevent *pevent;\n  <span class=\"supfact\">ppVar1</span> = (pevent *)calloc(Number, Number);\n  if (<span class=\"supfact\">ppVar1</span> != (pevent *)Number) {\n    <span class=\"supfact\">ppVar1</span> - &gt;\n    ref_count = Number;\n  }\n  return <span class=\"supfact\">ppVar1</span>;\n}", "var": [{"name": "puVar1", "type": "pevent * *", "pred_name": "ppVar1", "ref_name": "ppVar1", "ref_type": "pevent * *"}], "body_in_train": true}, {"repo_owner": "jmesmon", "repo_name": "numactl", "path": "jmesmon/numactl/2d7204d82378d0a3875b54015a7ff4c18475b25519a77d2104db0d0b044ff419", "path_in_repo": "jmesmon/numactl//libnuma.so.1", "objdump": "000000000000548b <copy_bitmask_to_bitmask>:\n    548b:\t55                   \tpush   %rbp\n    548c:\t48 89 e5             \tmov    %rsp,%rbp\n    548f:\t48 83 ec 20          \tsub    $0x20,%rsp\n    5493:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    5497:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    549b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    549f:\t48 8b 10             \tmov    (%rax),%rdx\n    54a2:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    54a6:\t48 8b 00             \tmov    (%rax),%rax\n    54a9:\t48 39 c2             \tcmp    %rax,%rdx\n    54ac:\t72 36                \tjb     54e4 <copy_bitmask_to_bitmask+0x59>\n    54ae:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    54b2:\t48 8b 00             \tmov    (%rax),%rax\n    54b5:\t48 83 c0 3f          \tadd    $0x3f,%rax\n    54b9:\t48 83 e0 c0          \tand    $0xffffffffffffffc0,%rax\n    54bd:\t48 c1 e8 03          \tshr    $0x3,%rax\n    54c1:\t48 89 c2             \tmov    %rax,%rdx\n    54c4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    54c8:\t48 8b 48 08          \tmov    0x8(%rax),%rcx\n    54cc:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    54d0:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    54d4:\t48 89 ce             \tmov    %rcx,%rsi\n    54d7:\t48 89 c7             \tmov    %rax,%rdi\n    54da:\te8 61 de ff ff       \tcall   3340 <memcpy@plt>\n    54df:\te9 85 00 00 00       \tjmp    5569 <copy_bitmask_to_bitmask+0xde>\n    54e4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    54e8:\t48 8b 10             \tmov    (%rax),%rdx\n    54eb:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    54ef:\t48 8b 00             \tmov    (%rax),%rax\n    54f2:\t48 39 c2             \tcmp    %rax,%rdx\n    54f5:\t73 72                \tjae    5569 <copy_bitmask_to_bitmask+0xde>\n    54f7:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    54fb:\t48 8b 00             \tmov    (%rax),%rax\n    54fe:\t48 83 c0 3f          \tadd    $0x3f,%rax\n    5502:\t48 83 e0 c0          \tand    $0xffffffffffffffc0,%rax\n    5506:\t48 c1 e8 03          \tshr    $0x3,%rax\n    550a:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    550d:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    5510:\t48 63 d0             \tmovslq %eax,%rdx\n    5513:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    5517:\t48 8b 48 08          \tmov    0x8(%rax),%rcx\n    551b:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    551f:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    5523:\t48 89 ce             \tmov    %rcx,%rsi\n    5526:\t48 89 c7             \tmov    %rax,%rdi\n    5529:\te8 12 de ff ff       \tcall   3340 <memcpy@plt>\n    552e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    5532:\t48 8b 00             \tmov    (%rax),%rax\n    5535:\t48 83 c0 3f          \tadd    $0x3f,%rax\n    5539:\t48 83 e0 c0          \tand    $0xffffffffffffffc0,%rax\n    553d:\t48 c1 e8 03          \tshr    $0x3,%rax\n    5541:\t48 89 c2             \tmov    %rax,%rdx\n    5544:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    5547:\t48 98                \tcltq   \n    5549:\t48 29 c2             \tsub    %rax,%rdx\n    554c:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    5550:\t48 8b 48 08          \tmov    0x8(%rax),%rcx\n    5554:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    5557:\t48 98                \tcltq   \n    5559:\t48 01 c8             \tadd    %rcx,%rax\n    555c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    5561:\t48 89 c7             \tmov    %rax,%rdi\n    5564:\te8 97 dc ff ff       \tcall   3200 <memset@plt>\n    5569:\t90                   \tnop\n    556a:\tc9                   \tleave  \n    556b:\tc3                   \tret    ", "code_s": "void copy_bitmask_to_bitmask(ulong *<span class=\"supfact\">param_1</span>,\n                             ulong *<span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  if (*<span class=\"supfact\">param_1</span> & lt; *<span class=\"supfact\">param_2</span>) {\n    if (*<span class=\"supfact\">param_1</span> & lt; *<span class=\"supfact\">param_2</span>) {\n      <span class=\"supfact\">iVar1</span> =\n          (int)((*<span class=\"supfact\">param_1</span> + Number & amp; Number) & gt; &gt;\n                Number);\n      memcpy((void *)<span class=\"supfact\">param_2</span>[Number],\n             (void *)<span class=\"supfact\">param_1</span>[Number],\n             (long)<span class=\"supfact\">iVar1</span>);\n      memset((void *)((long)<span class=\"supfact\">iVar1</span> +\n                      <span class=\"supfact\">param_2</span>[Number]),\n             Number,\n             ((*<span class=\"supfact\">param_2</span> + Number & amp; Number) & gt; &gt;\n              Number) -\n                 (long)<span class=\"supfact\">iVar1</span>);\n    }\n  } else {\n    memcpy((void *)<span class=\"supfact\">param_2</span>[Number],\n           (void *)<span class=\"supfact\">param_1</span>[Number],\n           (*<span class=\"supfact\">param_2</span> + Number & amp; Number) & gt;\n           &gt; Number);\n  }\n  return;\n}", "code_t": "void copy_bitmask_to_bitmask(bitmask *<span class=\"supfact\">bmpfrom</span>,\n                             bitmask *<span class=\"supfact\">bmpto</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  bitmask *<span class=\"supfact\">bmpto</span> - local;\n  bitmask *<span class=\"supfact\">bmpfrom</span> - local;\n  int bytes;\n  if (<span class=\"supfact\">bmpfrom</span> - &gt; size & lt; <span class=\"supfact\">bmpto</span> - &gt;\n      size) {\n    if (<span class=\"supfact\">bmpfrom</span> - &gt; size & lt; <span class=\"supfact\">bmpto</span> - &gt;\n        size) {\n      <span class=\"supfact\">iVar1</span> =\n          (int)((<span class=\"supfact\">bmpfrom</span> - &gt; size + Number & amp; Number) &\n                    gt;\n                &gt; Number);\n      memcpy(<span class=\"supfact\">bmpto</span> - &gt; maskp, <span class=\"supfact\">bmpfrom</span> - &gt;\n             maskp, (long)<span class=\"supfact\">iVar1</span>);\n      memset((void *)((long)<span class=\"supfact\">iVar1</span> +\n                          (long)<span class=\"supfact\">bmpto</span> - &gt;\n                      maskp),\n             Number,\n             ((<span class=\"supfact\">bmpto</span> - &gt; size + Number & amp; Number) & gt;\n              &gt; Number) -\n                 (long)<span class=\"supfact\">iVar1</span>);\n    }\n  } else {\n    memcpy(<span class=\"supfact\">bmpto</span> - &gt; maskp, <span class=\"supfact\">bmpfrom</span> - &gt;\n           maskp,\n           (<span class=\"supfact\">bmpto</span> - &gt; size + Number & amp; Number) & gt;\n           &gt; Number);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "void * *", "pred_name": "__unk__", "ref_name": "bmpfrom", "ref_type": "bitmask * *"}, {"name": "param_2", "type": "size_t", "pred_name": "__unk__", "ref_name": "bmpto", "ref_type": "bitmask * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000001d1c5 <qmp_guest_fsfreeze_thaw>:\n   1d1c5:\t55                   \tpush   %rbp\n   1d1c6:\t48 89 e5             \tmov    %rsp,%rbp\n   1d1c9:\t48 83 ec 40          \tsub    $0x40,%rsp\n   1d1cd:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n   1d1d1:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   1d1d8:\t00 00 \n   1d1da:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   1d1de:\t31 c0                \txor    %eax,%eax\n   1d1e0:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n   1d1e7:\tc6 45 db 00          \tmovb   $0x0,-0x25(%rbp)\n   1d1eb:\t48 8b 05 a6 01 01 00 \tmov    0x101a6(%rip),%rax        # 2d398 <guest_fsfreeze_state+0x8>\n   1d1f2:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   1d1f6:\teb 61                \tjmp    1d259 <qmp_guest_fsfreeze_thaw+0x94>\n   1d1f8:\tc6 45 db 01          \tmovb   $0x1,-0x25(%rbp)\n   1d1fc:\teb 53                \tjmp    1d251 <qmp_guest_fsfreeze_thaw+0x8c>\n   1d1fe:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n   1d201:\tbe 78 58 04 c0       \tmov    $0xc0045878,%esi\n   1d206:\t89 c7                \tmov    %eax,%edi\n   1d208:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   1d20d:\te8 be b1 fe ff       \tcall   83d0 <ioctl@plt>\n   1d212:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n   1d215:\t83 7d e4 00          \tcmpl   $0x0,-0x1c(%rbp)\n   1d219:\t79 28                \tjns    1d243 <qmp_guest_fsfreeze_thaw+0x7e>\n   1d21b:\te8 a0 ae fe ff       \tcall   80c0 <__errno_location@plt>\n   1d220:\t8b 00                \tmov    (%rax),%eax\n   1d222:\t83 f8 5f             \tcmp    $0x5f,%eax\n   1d225:\t74 1c                \tje     1d243 <qmp_guest_fsfreeze_thaw+0x7e>\n   1d227:\te8 94 ae fe ff       \tcall   80c0 <__errno_location@plt>\n   1d22c:\t8b 00                \tmov    (%rax),%eax\n   1d22e:\t83 f8 16             \tcmp    $0x16,%eax\n   1d231:\t74 10                \tje     1d243 <qmp_guest_fsfreeze_thaw+0x7e>\n   1d233:\tc6 45 db 01          \tmovb   $0x1,-0x25(%rbp)\n   1d237:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n   1d23a:\t89 c7                \tmov    %eax,%edi\n   1d23c:\te8 9f b1 fe ff       \tcall   83e0 <close@plt>\n   1d241:\teb 0e                \tjmp    1d251 <qmp_guest_fsfreeze_thaw+0x8c>\n   1d243:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n   1d246:\t89 c7                \tmov    %eax,%edi\n   1d248:\te8 93 b1 fe ff       \tcall   83e0 <close@plt>\n   1d24d:\t83 45 dc 01          \taddl   $0x1,-0x24(%rbp)\n   1d251:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1d255:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   1d259:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n   1d25e:\t74 37                \tje     1d297 <qmp_guest_fsfreeze_thaw+0xd2>\n   1d260:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1d264:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n   1d268:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n   1d26c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1d270:\t48 8b 00             \tmov    (%rax),%rax\n   1d273:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   1d278:\t48 89 c7             \tmov    %rax,%rdi\n   1d27b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   1d280:\te8 61 19 ff ff       \tcall   ebe6 <qemu_open>\n   1d285:\t89 45 e0             \tmov    %eax,-0x20(%rbp)\n   1d288:\t83 7d e0 ff          \tcmpl   $0xffffffff,-0x20(%rbp)\n   1d28c:\t0f 85 6c ff ff ff    \tjne    1d1fe <qmp_guest_fsfreeze_thaw+0x39>\n   1d292:\te9 61 ff ff ff       \tjmp    1d1f8 <qmp_guest_fsfreeze_thaw+0x33>\n   1d297:\t80 7d db 00          \tcmpb   $0x0,-0x25(%rbp)\n   1d29b:\t74 0c                \tje     1d2a9 <qmp_guest_fsfreeze_thaw+0xe4>\n   1d29d:\tc7 05 e9 00 01 00 02 \tmovl   $0x2,0x100e9(%rip)        # 2d390 <guest_fsfreeze_state>\n   1d2a4:\t00 00 00 \n   1d2a7:\teb 0a                \tjmp    1d2b3 <qmp_guest_fsfreeze_thaw+0xee>\n   1d2a9:\tc7 05 dd 00 01 00 00 \tmovl   $0x0,0x100dd(%rip)        # 2d390 <guest_fsfreeze_state>\n   1d2b0:\t00 00 00 \n   1d2b3:\te8 47 fa ff ff       \tcall   1ccff <enable_logging>\n   1d2b8:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n   1d2bb:\t48 98                \tcltq   \n   1d2bd:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n   1d2c1:\t64 48 33 14 25 28 00 \txor    %fs:0x28,%rdx\n   1d2c8:\t00 00 \n   1d2ca:\t74 05                \tje     1d2d1 <qmp_guest_fsfreeze_thaw+0x10c>\n   1d2cc:\te8 bf af fe ff       \tcall   8290 <__stack_chk_fail@plt>\n   1d2d1:\tc9                   \tleave  \n   1d2d2:\tc3                   \tret    ", "code_s": "long qmp_guest_fsfreeze_thaw(void) {\n  long lVar1;\n  undefined8 *puVar2;\n  bool bVar3;\n  int iVar4;\n  int __fd;\n  int *<span class=\"supfact\">piVar5</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">local_2c</span>;\n  undefined8 *<span class=\"supfact\">local_20</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_2c</span> = Number;\n  bVar3 = false;\n  <span class=\"supfact\">local_20</span> = DAT_0012d398;\n  while (<span class=\"supfact\">local_20</span> != (undefined8 *)Number) {\n    puVar2 = (undefined8 *)<span class=\"supfact\">local_20</span>[Number];\n    __fd = qemu_open(*<span class=\"supfact\">local_20</span>, Number);\n    <span class=\"supfact\">local_20</span> = puVar2;\n    if (__fd == -Number) {\n      bVar3 = true;\n    } else {\n      iVar4 = ioctl(__fd, Number);\n      if (((iVar4 & lt; Number) & amp; &amp;\n           (<span class=\"supfact\">piVar5</span> = __errno_location(),\n            *<span class=\"supfact\">piVar5</span> != Number)) &\n              amp;\n          &amp; (<span class=\"supfact\">piVar5</span> = __errno_location(),\n                 *<span class=\"supfact\">piVar5</span> != Number)) {\n        bVar3 = true;\n        close(__fd);\n      } else {\n        close(__fd);\n        <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">local_2c</span> + Number;\n      }\n    }\n  }\n  if (bVar3) {\n    guest_fsfreeze_state = Number;\n  } else {\n    guest_fsfreeze_state = Number;\n  }\n  FUN_0011ccff();\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return (long)<span class=\"supfact\">local_2c</span>;\n  }\n  __stack_chk_fail();\n}", "code_t": "int64_t qmp_guest_fsfreeze_thaw(Error **err) {\n  long lVar1;\n  GuestFsfreezeMount *pGVar2;\n  bool bVar3;\n  int iVar4;\n  int __fd;\n  int *<span class=\"supfact\">piVar5</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  Error **err - local;\n  _Bool has_error;\n  int <span class=\"supfact\">i</span>;\n  int fd;\n  int ret;\n  GuestFsfreezeMount *<span class=\"supfact\">mount</span>;\n  GuestFsfreezeMount *temp;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">i</span> = Number;\n  bVar3 = false;\n  <span class=\"supfact\">mount</span> = guest_fsfreeze_state.mount_list.tqh_first;\n  while (<span class=\"supfact\">mount</span> != (GuestFsfreezeMount *)Number) {\n    pGVar2 = (<span class=\"supfact\">mount</span> - &gt; next).tqe_next;\n    __fd = qemu_open(<span class=\"supfact\">mount</span> - &gt; dirname, Number);\n    <span class=\"supfact\">mount</span> = pGVar2;\n    if (__fd == -Number) {\n      bVar3 = true;\n    } else {\n      iVar4 = ioctl(__fd, Number);\n      if (((iVar4 & lt; Number) & amp; &amp;\n           (<span class=\"supfact\">piVar5</span> = __errno_location(),\n            *<span class=\"supfact\">piVar5</span> != Number)) &\n              amp;\n          &amp; (<span class=\"supfact\">piVar5</span> = __errno_location(),\n                 *<span class=\"supfact\">piVar5</span> != Number)) {\n        bVar3 = true;\n        close(__fd);\n      } else {\n        close(__fd);\n        <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n      }\n    }\n  }\n  if (bVar3) {\n    guest_fsfreeze_state.status = GUEST_FSFREEZE_STATUS_ERROR;\n  } else {\n    guest_fsfreeze_state.status = GUEST_FSFREEZE_STATUS_THAWED;\n  }\n  enable_logging();\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return (long)<span class=\"supfact\">i</span>;\n  }\n  __stack_chk_fail();\n}", "var": [{"name": "piVar5", "type": "disappear", "pred_name": "", "ref_name": "piVar5", "ref_type": "int * *"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_2c", "type": "int", "pred_name": "__unk__", "ref_name": "i", "ref_type": "int"}, {"name": "local_20", "type": "ulong", "pred_name": "__unk__", "ref_name": "mount", "ref_type": "GuestFsfreezeMount * *"}], "body_in_train": false}, {"repo_owner": "malvira", "repo_name": "erbr", "path": "malvira/erbr/2f8350b2482c685589c80daaa31735f028d7aa115ebd831f8cce34b92e2b972e", "path_in_repo": "malvira/erbr/contiki/examples/multi-threading/multi-threading.native", "objdump": "0000000000408c33 <ringbuf_elements>:\n  408c33:\t55                   \tpush   %rbp\n  408c34:\t48 89 e5             \tmov    %rsp,%rbp\n  408c37:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  408c3b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  408c3f:\t0f b6 40 09          \tmovzbl 0x9(%rax),%eax\n  408c43:\t0f b6 d0             \tmovzbl %al,%edx\n  408c46:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  408c4a:\t0f b6 40 0a          \tmovzbl 0xa(%rax),%eax\n  408c4e:\t0f b6 c0             \tmovzbl %al,%eax\n  408c51:\t29 c2                \tsub    %eax,%edx\n  408c53:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  408c57:\t0f b6 40 08          \tmovzbl 0x8(%rax),%eax\n  408c5b:\t0f b6 c0             \tmovzbl %al,%eax\n  408c5e:\t21 d0                \tand    %edx,%eax\n  408c60:\t5d                   \tpop    %rbp\n  408c61:\tc3                   \tret    ", "code_s": "byte ringbuf_elements(long <span class=\"supfact\">param_1</span>) {\n  return *(byte *)(<span class=\"supfact\">param_1</span> + Number) & amp;\n  *(char *)(<span class=\"supfact\">param_1</span> + Number) -\n      *(char *)(<span class=\"supfact\">param_1</span> + Number);\n}", "code_t": "int ringbuf_elements(ringbuf *<span class=\"supfact\">r</span>) {\n  ringbuf *<span class=\"supfact\">r</span> - local;\n  return (uint)<span class=\"supfact\">r</span> - &gt;\n  mask &amp;\n  (uint) <span class=\"supfact\">r</span> - &gt;\n  put_ptr - (uint)<span class=\"supfact\">r</span> - &gt;\n  get_ptr;\n}", "var": [{"name": "param_1", "type": "ringbuf * *", "pred_name": "r", "ref_name": "r", "ref_type": "ringbuf * *"}], "body_in_train": true}, {"repo_owner": "DennisKofflard", "repo_name": "Trident_i2c_controller", "path": "DennisKofflard/Trident_i2c_controller/7f3b1341443e0a8ff448c9a5c1a21c28b9aacb88b829d641d7994be27df60654", "path_in_repo": "DennisKofflard/Trident_i2c_controller/congatec_cgoslib/Lx/libcgos.so", "objdump": "0000000000004ecb <CgosTemperatureGetInfo>:\n    4ecb:\t55                   \tpush   %rbp\n    4ecc:\t48 89 e5             \tmov    %rsp,%rbp\n    4ecf:\t48 83 ec 10          \tsub    $0x10,%rsp\n    4ed3:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n    4ed6:\t89 75 f8             \tmov    %esi,-0x8(%rbp)\n    4ed9:\t48 89 55 f0          \tmov    %rdx,-0x10(%rbp)\n    4edd:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    4ee0:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    4ee3:\t6a 00                \tpush   $0x0\n    4ee5:\tff 75 f0             \tpush   -0x10(%rbp)\n    4ee8:\t6a 00                \tpush   $0x0\n    4eea:\t6a 00                \tpush   $0x0\n    4eec:\t6a 00                \tpush   $0x0\n    4eee:\t6a 00                \tpush   $0x0\n    4ef0:\t6a 00                \tpush   $0x0\n    4ef2:\t6a 00                \tpush   $0x0\n    4ef4:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    4efa:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    4f00:\t89 d1                \tmov    %edx,%ecx\n    4f02:\t89 c2                \tmov    %eax,%edx\n    4f04:\tbe 40 00 00 00       \tmov    $0x40,%esi\n    4f09:\tbf 08 00 00 00       \tmov    $0x8,%edi\n    4f0e:\te8 8d e1 ff ff       \tcall   30a0 <CallDrvStruct@plt>\n    4f13:\t48 83 c4 40          \tadd    $0x40,%rsp\n    4f17:\tc9                   \tleave  \n    4f18:\tc3                   \tret    ", "code_s": "void CgosTemperatureGetInfo(undefined4 <span class=\"supfact\">param_1</span>,\n                            undefined4 <span class=\"supfact\">param_2</span>,\n                            undefined8 <span class=\"supfact\">param_3</span>) {\n  CallDrvStruct(Number, Number, <span class=\"supfact\">param_1</span>,\n                <span class=\"supfact\">param_2</span>, Number, Number, Number, Number, Number,\n                Number, Number, Number, <span class=\"supfact\">param_3</span>, Number);\n  return;\n}", "code_t": "uint CgosTemperatureGetInfo(HCGOS <span class=\"supfact\">hCgos</span>,\n                            uint <span class=\"supfact\">dwUnit</span>,\n                            CGOSTEMPERATUREINFO *<span class=\"supfact\">pInfo</span>) {\n  uint uVar1;\n  CGOSTEMPERATUREINFO *<span class=\"supfact\">pInfo</span> - local;\n  uint <span class=\"supfact\">dwUnit</span> - local;\n  HCGOS <span class=\"supfact\">hCgos</span> - local;\n  uVar1 = CallDrvStruct(Number, Number, <span class=\"supfact\">hCgos</span>,\n                        <span class=\"supfact\">dwUnit</span>, Number, Number, Number, Number,\n                        (uint *)Number, (uint *)Number, (void *)Number, Number,\n                        <span class=\"supfact\">pInfo</span>, Number);\n  return uVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "hCgos", "ref_type": "HCGOS"}, {"name": "param_2", "type": "int", "pred_name": "__unk__", "ref_name": "dwUnit", "ref_type": "uint"}, {"name": "param_3", "type": "uchar * *", "pred_name": "digest", "ref_name": "pInfo", "ref_type": "CGOSTEMPERATUREINFO * *"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000000fd81 <visit_start_handle>:\n    fd81:\t55                   \tpush   %rbp\n    fd82:\t48 89 e5             \tmov    %rsp,%rbp\n    fd85:\t48 83 ec 40          \tsub    $0x40,%rsp\n    fd89:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    fd8d:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    fd91:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    fd95:\t48 89 4d d0          \tmov    %rcx,-0x30(%rbp)\n    fd99:\t4c 89 45 c8          \tmov    %r8,-0x38(%rbp)\n    fd9d:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    fda4:\t00 00 \n    fda6:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    fdaa:\t31 c0                \txor    %eax,%eax\n    fdac:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    fdb0:\t48 89 c7             \tmov    %rax,%rdi\n    fdb3:\te8 7e c3 ff ff       \tcall   c136 <error_is_set>\n    fdb8:\t83 f0 01             \txor    $0x1,%eax\n    fdbb:\t84 c0                \ttest   %al,%al\n    fdbd:\t74 32                \tje     fdf1 <visit_start_handle+0x70>\n    fdbf:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    fdc3:\t48 8b 40 60          \tmov    0x60(%rax),%rax\n    fdc7:\t48 85 c0             \ttest   %rax,%rax\n    fdca:\t74 25                \tje     fdf1 <visit_start_handle+0x70>\n    fdcc:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    fdd0:\t4c 8b 48 60          \tmov    0x60(%rax),%r9\n    fdd4:\t48 8b 7d c8          \tmov    -0x38(%rbp),%rdi\n    fdd8:\t48 8b 4d d0          \tmov    -0x30(%rbp),%rcx\n    fddc:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    fde0:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n    fde4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    fde8:\t49 89 f8             \tmov    %rdi,%r8\n    fdeb:\t48 89 c7             \tmov    %rax,%rdi\n    fdee:\t41 ff d1             \tcall   *%r9\n    fdf1:\t90                   \tnop\n    fdf2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    fdf6:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    fdfd:\t00 00 \n    fdff:\t74 05                \tje     fe06 <visit_start_handle+0x85>\n    fe01:\te8 8a 84 ff ff       \tcall   8290 <__stack_chk_fail@plt>\n    fe06:\tc9                   \tleave  \n    fe07:\tc3                   \tret    ", "code_s": "void visit_start_handle(long <span class=\"supfact\">param_1</span>,\n                        undefined8 <span class=\"supfact\">param_2</span>,\n                        undefined8 <span class=\"supfact\">param_3</span>,\n                        undefined8 <span class=\"supfact\">param_4</span>,\n                        undefined8 <span class=\"supfact\">param_5</span>) {\n  long lVar1;\n  char <span class=\"supfact\">cVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">cVar2</span> = error_is_set(<span class=\"supfact\">param_5</span>);\n  if ((<span class=\"supfact\">cVar2</span> != String) & amp; &amp;\n      (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number)) {\n    (**(code **)(<span class=\"supfact\">param_1</span> + Number))(\n        <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n        <span class=\"supfact\">param_3</span>, <span class=\"supfact\">param_4</span>,\n        <span class=\"supfact\">param_5</span>);\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "code_t": "void visit_start_handle(Visitor *<span class=\"supfact\">v</span>, void **<span class=\"supfact\">obj</span>,\n                        char *<span class=\"supfact\">kind</span>, char *<span class=\"supfact\">name</span>,\n                        Error **<span class=\"supfact\">errp</span>) {\n  long lVar1;\n  _Bool <span class=\"supfact\">_Var2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  Error **<span class=\"supfact\">errp</span> - local;\n  char *<span class=\"supfact\">name</span> - local;\n  char *<span class=\"supfact\">kind</span> - local;\n  void **<span class=\"supfact\">obj</span> - local;\n  Visitor *<span class=\"supfact\">v</span> - local;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">_Var2</span> = error_is_set(<span class=\"supfact\">errp</span>);\n  if ((!<span class=\"supfact\">_Var2</span>) & amp; &amp;\n      (<span class=\"supfact\">v</span> - &gt;\n       start_handle !=\n       (_func_void_Visitor_ptr_void_ptr_ptr_char_ptr_char_ptr_Error_ptr_ptr *)\n           Number)) {\n    (*<span class=\"supfact\">v</span> - &gt;\n     start_handle)(<span class=\"supfact\">v</span>, <span class=\"supfact\">obj</span>, <span class=\"supfact\">kind</span>,\n                   <span class=\"supfact\">name</span>, <span class=\"supfact\">errp</span>);\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "v", "ref_type": "Visitor * *"}, {"name": "param_2", "type": "char * *", "pred_name": "name", "ref_name": "obj", "ref_type": "void * * *"}, {"name": "param_3", "type": "void * *", "pred_name": "key", "ref_name": "kind", "ref_type": "char * *"}, {"name": "param_4", "type": "size_t", "pred_name": "__unk__", "ref_name": "name", "ref_type": "char * *"}, {"name": "param_5", "type": "__unk__", "pred_name": "__unk__", "ref_name": "errp", "ref_type": "Error * * *"}, {"name": "cVar2", "type": "_Bool", "pred_name": "_Var2", "ref_name": "_Var2", "ref_type": "_Bool"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000000fd81 <visit_start_handle>:\n    fd81:\t55                   \tpush   %rbp\n    fd82:\t48 89 e5             \tmov    %rsp,%rbp\n    fd85:\t48 83 ec 40          \tsub    $0x40,%rsp\n    fd89:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    fd8d:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    fd91:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    fd95:\t48 89 4d d0          \tmov    %rcx,-0x30(%rbp)\n    fd99:\t4c 89 45 c8          \tmov    %r8,-0x38(%rbp)\n    fd9d:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    fda4:\t00 00 \n    fda6:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    fdaa:\t31 c0                \txor    %eax,%eax\n    fdac:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    fdb0:\t48 89 c7             \tmov    %rax,%rdi\n    fdb3:\te8 7e c3 ff ff       \tcall   c136 <error_is_set>\n    fdb8:\t83 f0 01             \txor    $0x1,%eax\n    fdbb:\t84 c0                \ttest   %al,%al\n    fdbd:\t74 32                \tje     fdf1 <visit_start_handle+0x70>\n    fdbf:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    fdc3:\t48 8b 40 60          \tmov    0x60(%rax),%rax\n    fdc7:\t48 85 c0             \ttest   %rax,%rax\n    fdca:\t74 25                \tje     fdf1 <visit_start_handle+0x70>\n    fdcc:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    fdd0:\t4c 8b 48 60          \tmov    0x60(%rax),%r9\n    fdd4:\t48 8b 7d c8          \tmov    -0x38(%rbp),%rdi\n    fdd8:\t48 8b 4d d0          \tmov    -0x30(%rbp),%rcx\n    fddc:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    fde0:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n    fde4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    fde8:\t49 89 f8             \tmov    %rdi,%r8\n    fdeb:\t48 89 c7             \tmov    %rax,%rdi\n    fdee:\t41 ff d1             \tcall   *%r9\n    fdf1:\t90                   \tnop\n    fdf2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    fdf6:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    fdfd:\t00 00 \n    fdff:\t74 05                \tje     fe06 <visit_start_handle+0x85>\n    fe01:\te8 8a 84 ff ff       \tcall   8290 <__stack_chk_fail@plt>\n    fe06:\tc9                   \tleave  \n    fe07:\tc3                   \tret    ", "code_s": "void visit_start_handle(long <span class=\"supfact\">param_1</span>,\n                        undefined8 <span class=\"supfact\">param_2</span>,\n                        undefined8 <span class=\"supfact\">param_3</span>,\n                        undefined8 <span class=\"supfact\">param_4</span>,\n                        undefined8 <span class=\"supfact\">param_5</span>) {\n  long lVar1;\n  char <span class=\"supfact\">cVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">cVar2</span> = error_is_set(<span class=\"supfact\">param_5</span>);\n  if ((<span class=\"supfact\">cVar2</span> != String) & amp; &amp;\n      (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number)) {\n    (**(code **)(<span class=\"supfact\">param_1</span> + Number))(\n        <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n        <span class=\"supfact\">param_3</span>, <span class=\"supfact\">param_4</span>,\n        <span class=\"supfact\">param_5</span>);\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "code_t": "void visit_start_handle(Visitor *<span class=\"supfact\">v</span>, void **<span class=\"supfact\">obj</span>,\n                        char *<span class=\"supfact\">kind</span>, char *<span class=\"supfact\">name</span>,\n                        Error **<span class=\"supfact\">errp</span>) {\n  long lVar1;\n  _Bool <span class=\"supfact\">_Var2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  Error **<span class=\"supfact\">errp</span> - local;\n  char *<span class=\"supfact\">name</span> - local;\n  char *<span class=\"supfact\">kind</span> - local;\n  void **<span class=\"supfact\">obj</span> - local;\n  Visitor *<span class=\"supfact\">v</span> - local;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">_Var2</span> = error_is_set(<span class=\"supfact\">errp</span>);\n  if ((!<span class=\"supfact\">_Var2</span>) & amp; &amp;\n      (<span class=\"supfact\">v</span> - &gt;\n       start_handle !=\n       (_func_void_Visitor_ptr_void_ptr_ptr_char_ptr_char_ptr_Error_ptr_ptr *)\n           Number)) {\n    (*<span class=\"supfact\">v</span> - &gt;\n     start_handle)(<span class=\"supfact\">v</span>, <span class=\"supfact\">obj</span>, <span class=\"supfact\">kind</span>,\n                   <span class=\"supfact\">name</span>, <span class=\"supfact\">errp</span>);\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "v", "ref_type": "Visitor * *"}, {"name": "param_2", "type": "char * *", "pred_name": "name", "ref_name": "obj", "ref_type": "void * * *"}, {"name": "param_3", "type": "void * *", "pred_name": "key", "ref_name": "kind", "ref_type": "char * *"}, {"name": "param_4", "type": "size_t", "pred_name": "__unk__", "ref_name": "name", "ref_type": "char * *"}, {"name": "param_5", "type": "__unk__", "pred_name": "__unk__", "ref_name": "errp", "ref_type": "Error * * *"}, {"name": "cVar2", "type": "_Bool", "pred_name": "_Var2", "ref_name": "_Var2", "ref_type": "_Bool"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "TheTypoMaster", "repo_name": "open1", "path": "TheTypoMaster/open1/c9a04eae5e42d9841c57eaaa6d9ff38b1c3b8d4c913935a3edbe734de7ee407f", "path_in_repo": "TheTypoMaster/open1/modules/db_virtual/db_virtual.so", "objdump": "00000000000033f3 <init_global>:\n    33f3:\t55                   \tpush   %rbp\n    33f4:\t48 89 e5             \tmov    %rsp,%rbp\n    33f7:\t41 55                \tpush   %r13\n    33f9:\t41 54                \tpush   %r12\n    33fb:\t53                   \tpush   %rbx\n    33fc:\t48 83 ec 28          \tsub    $0x28,%rsp\n    3400:\tc7 45 d4 ff ff ff ff \tmovl   $0xffffffff,-0x2c(%rbp)\n    3407:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n    340e:\te9 b9 02 00 00       \tjmp    36cc <init_global+0x2d9>\n    3413:\t48 8b 05 9e db 00 00 \tmov    0xdb9e(%rip),%rax        # 10fb8 <db_urls_list@@Base-0x508>\n    341a:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n    341d:\t48 63 d2             \tmovslq %edx,%rdx\n    3420:\t48 8b 04 d0          \tmov    (%rax,%rdx,8),%rax\n    3424:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    3428:\t48 8b 05 11 db 00 00 \tmov    0xdb11(%rip),%rax        # 10f40 <debug>\n    342f:\t48 8b 00             \tmov    (%rax),%rax\n    3432:\t8b 00                \tmov    (%rax),%eax\n    3434:\t83 f8 03             \tcmp    $0x3,%eax\n    3437:\t7e 6c                \tjle    34a5 <init_global+0xb2>\n    3439:\t48 8b 05 a8 da 00 00 \tmov    0xdaa8(%rip),%rax        # 10ee8 <log_stderr>\n    3440:\t8b 00                \tmov    (%rax),%eax\n    3442:\t85 c0                \ttest   %eax,%eax\n    3444:\t74 32                \tje     3478 <init_global+0x85>\n    3446:\te8 e5 ec ff ff       \tcall   2130 <dp_my_pid@plt>\n    344b:\t89 c3                \tmov    %eax,%ebx\n    344d:\te8 a3 ee ff ff       \tcall   22f5 <dp_time>\n    3452:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    3456:\t49 89 d0             \tmov    %rdx,%r8\n    3459:\t48 8d 0d 50 b4 00 00 \tlea    0xb450(%rip),%rcx        # e8b0 <__FUNCTION__.7978>\n    3460:\t89 da                \tmov    %ebx,%edx\n    3462:\t48 89 c6             \tmov    %rax,%rsi\n    3465:\t48 8d 3d 2c a5 00 00 \tlea    0xa52c(%rip),%rdi        # d998 <_fini+0xbd4>\n    346c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3471:\te8 aa ed ff ff       \tcall   2220 <dprint@plt>\n    3476:\teb 2d                \tjmp    34a5 <init_global+0xb2>\n    3478:\t48 8b 05 a1 da 00 00 \tmov    0xdaa1(%rip),%rax        # 10f20 <log_facility>\n    347f:\t8b 00                \tmov    (%rax),%eax\n    3481:\t83 c8 07             \tor     $0x7,%eax\n    3484:\t89 c7                \tmov    %eax,%edi\n    3486:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    348a:\t48 89 c1             \tmov    %rax,%rcx\n    348d:\t48 8d 15 1c b4 00 00 \tlea    0xb41c(%rip),%rdx        # e8b0 <__FUNCTION__.7978>\n    3494:\t48 8d 35 23 a5 00 00 \tlea    0xa523(%rip),%rsi        # d9be <_fini+0xbfa>\n    349b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    34a0:\te8 ab ec ff ff       \tcall   2150 <syslog@plt>\n    34a5:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n    34aa:\t0f 84 18 02 00 00    \tje     36c8 <init_global+0x2d5>\n    34b0:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    34b4:\t0f b6 00             \tmovzbl (%rax),%eax\n    34b7:\t84 c0                \ttest   %al,%al\n    34b9:\t0f 84 09 02 00 00    \tje     36c8 <init_global+0x2d5>\n    34bf:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    34c3:\t0f b6 00             \tmovzbl (%rax),%eax\n    34c6:\t3c 23                \tcmp    $0x23,%al\n    34c8:\t0f 84 fa 01 00 00    \tje     36c8 <init_global+0x2d5>\n    34ce:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    34d2:\tba 06 00 00 00       \tmov    $0x6,%edx\n    34d7:\t48 89 c6             \tmov    %rax,%rsi\n    34da:\t48 8d 3d fb a4 00 00 \tlea    0xa4fb(%rip),%rdi        # d9dc <_fini+0xc18>\n    34e1:\te8 6a eb ff ff       \tcall   2050 <strncmp@plt>\n    34e6:\t85 c0                \ttest   %eax,%eax\n    34e8:\t0f 85 cd 00 00 00    \tjne    35bb <init_global+0x1c8>\n    34ee:\t48 83 45 c8 07       \taddq   $0x7,-0x38(%rbp)\n    34f3:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    34f7:\tbe 20 00 00 00       \tmov    $0x20,%esi\n    34fc:\t48 89 c7             \tmov    %rax,%rdi\n    34ff:\te8 8c eb ff ff       \tcall   2090 <strchr@plt>\n    3504:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    3508:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    350c:\tc6 00 00             \tmovb   $0x0,(%rax)\n    350f:\t48 83 45 c0 01       \taddq   $0x1,-0x40(%rbp)\n    3514:\t48 8b 05 25 da 00 00 \tmov    0xda25(%rip),%rax        # 10f40 <debug>\n    351b:\t48 8b 00             \tmov    (%rax),%rax\n    351e:\t8b 00                \tmov    (%rax),%eax\n    3520:\t83 f8 03             \tcmp    $0x3,%eax\n    3523:\t7e 7a                \tjle    359f <init_global+0x1ac>\n    3525:\t48 8b 05 bc d9 00 00 \tmov    0xd9bc(%rip),%rax        # 10ee8 <log_stderr>\n    352c:\t8b 00                \tmov    (%rax),%eax\n    352e:\t85 c0                \ttest   %eax,%eax\n    3530:\t74 39                \tje     356b <init_global+0x178>\n    3532:\te8 f9 eb ff ff       \tcall   2130 <dp_my_pid@plt>\n    3537:\t89 c3                \tmov    %eax,%ebx\n    3539:\te8 b7 ed ff ff       \tcall   22f5 <dp_time>\n    353e:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n    3542:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    3546:\t49 89 c9             \tmov    %rcx,%r9\n    3549:\t49 89 d0             \tmov    %rdx,%r8\n    354c:\t48 8d 0d 5d b3 00 00 \tlea    0xb35d(%rip),%rcx        # e8b0 <__FUNCTION__.7978>\n    3553:\t89 da                \tmov    %ebx,%edx\n    3555:\t48 89 c6             \tmov    %rax,%rsi\n    3558:\t48 8d 3d 89 a4 00 00 \tlea    0xa489(%rip),%rdi        # d9e8 <_fini+0xc24>\n    355f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3564:\te8 b7 ec ff ff       \tcall   2220 <dprint@plt>\n    3569:\teb 34                \tjmp    359f <init_global+0x1ac>\n    356b:\t48 8b 05 ae d9 00 00 \tmov    0xd9ae(%rip),%rax        # 10f20 <log_facility>\n    3572:\t8b 00                \tmov    (%rax),%eax\n    3574:\t83 c8 07             \tor     $0x7,%eax\n    3577:\t89 c7                \tmov    %eax,%edi\n    3579:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    357d:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    3581:\t49 89 d0             \tmov    %rdx,%r8\n    3584:\t48 89 c1             \tmov    %rax,%rcx\n    3587:\t48 8d 15 22 b3 00 00 \tlea    0xb322(%rip),%rdx        # e8b0 <__FUNCTION__.7978>\n    358e:\t48 8d 35 93 a4 00 00 \tlea    0xa493(%rip),%rsi        # da28 <_fini+0xc64>\n    3595:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    359a:\te8 b1 eb ff ff       \tcall   2150 <syslog@plt>\n    359f:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    35a3:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    35a7:\t48 89 d6             \tmov    %rdx,%rsi\n    35aa:\t48 89 c7             \tmov    %rax,%rdi\n    35ad:\te8 be ea ff ff       \tcall   2070 <add_set@plt>\n    35b2:\t83 45 d4 01          \taddl   $0x1,-0x2c(%rbp)\n    35b6:\te9 0d 01 00 00       \tjmp    36c8 <init_global+0x2d5>\n    35bb:\t83 7d d4 ff          \tcmpl   $0xffffffff,-0x2c(%rbp)\n    35bf:\t75 79                \tjne    363a <init_global+0x247>\n    35c1:\t48 8b 05 78 d9 00 00 \tmov    0xd978(%rip),%rax        # 10f40 <debug>\n    35c8:\t48 8b 00             \tmov    (%rax),%rax\n    35cb:\t8b 00                \tmov    (%rax),%eax\n    35cd:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    35d0:\t7c 5e                \tjl     3630 <init_global+0x23d>\n    35d2:\t48 8b 05 0f d9 00 00 \tmov    0xd90f(%rip),%rax        # 10ee8 <log_stderr>\n    35d9:\t8b 00                \tmov    (%rax),%eax\n    35db:\t85 c0                \ttest   %eax,%eax\n    35dd:\t74 2b                \tje     360a <init_global+0x217>\n    35df:\te8 4c eb ff ff       \tcall   2130 <dp_my_pid@plt>\n    35e4:\t89 c3                \tmov    %eax,%ebx\n    35e6:\te8 0a ed ff ff       \tcall   22f5 <dp_time>\n    35eb:\t48 8d 0d be b2 00 00 \tlea    0xb2be(%rip),%rcx        # e8b0 <__FUNCTION__.7978>\n    35f2:\t89 da                \tmov    %ebx,%edx\n    35f4:\t48 89 c6             \tmov    %rax,%rsi\n    35f7:\t48 8d 3d 62 a4 00 00 \tlea    0xa462(%rip),%rdi        # da60 <_fini+0xc9c>\n    35fe:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3603:\te8 18 ec ff ff       \tcall   2220 <dprint@plt>\n    3608:\teb 26                \tjmp    3630 <init_global+0x23d>\n    360a:\t48 8b 05 0f d9 00 00 \tmov    0xd90f(%rip),%rax        # 10f20 <log_facility>\n    3611:\t8b 00                \tmov    (%rax),%eax\n    3613:\t83 c8 03             \tor     $0x3,%eax\n    3616:\t48 8d 15 93 b2 00 00 \tlea    0xb293(%rip),%rdx        # e8b0 <__FUNCTION__.7978>\n    361d:\t48 8d 35 94 a4 00 00 \tlea    0xa494(%rip),%rsi        # dab8 <_fini+0xcf4>\n    3624:\t89 c7                \tmov    %eax,%edi\n    3626:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    362b:\te8 20 eb ff ff       \tcall   2150 <syslog@plt>\n    3630:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    3635:\te9 ab 04 00 00       \tjmp    3ae5 <init_global+0x6f2>\n    363a:\t48 8b 05 ff d8 00 00 \tmov    0xd8ff(%rip),%rax        # 10f40 <debug>\n    3641:\t48 8b 00             \tmov    (%rax),%rax\n    3644:\t8b 00                \tmov    (%rax),%eax\n    3646:\t83 f8 03             \tcmp    $0x3,%eax\n    3649:\t7e 6c                \tjle    36b7 <init_global+0x2c4>\n    364b:\t48 8b 05 96 d8 00 00 \tmov    0xd896(%rip),%rax        # 10ee8 <log_stderr>\n    3652:\t8b 00                \tmov    (%rax),%eax\n    3654:\t85 c0                \ttest   %eax,%eax\n    3656:\t74 32                \tje     368a <init_global+0x297>\n    3658:\te8 d3 ea ff ff       \tcall   2130 <dp_my_pid@plt>\n    365d:\t89 c3                \tmov    %eax,%ebx\n    365f:\te8 91 ec ff ff       \tcall   22f5 <dp_time>\n    3664:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    3668:\t49 89 d0             \tmov    %rdx,%r8\n    366b:\t48 8d 0d 3e b2 00 00 \tlea    0xb23e(%rip),%rcx        # e8b0 <__FUNCTION__.7978>\n    3672:\t89 da                \tmov    %ebx,%edx\n    3674:\t48 89 c6             \tmov    %rax,%rsi\n    3677:\t48 8d 3d 8a a4 00 00 \tlea    0xa48a(%rip),%rdi        # db08 <_fini+0xd44>\n    367e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3683:\te8 98 eb ff ff       \tcall   2220 <dprint@plt>\n    3688:\teb 2d                \tjmp    36b7 <init_global+0x2c4>\n    368a:\t48 8b 05 8f d8 00 00 \tmov    0xd88f(%rip),%rax        # 10f20 <log_facility>\n    3691:\t8b 00                \tmov    (%rax),%eax\n    3693:\t83 c8 07             \tor     $0x7,%eax\n    3696:\t89 c7                \tmov    %eax,%edi\n    3698:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    369c:\t48 89 c1             \tmov    %rax,%rcx\n    369f:\t48 8d 15 0a b2 00 00 \tlea    0xb20a(%rip),%rdx        # e8b0 <__FUNCTION__.7978>\n    36a6:\t48 8d 35 7f a4 00 00 \tlea    0xa47f(%rip),%rsi        # db2c <_fini+0xd68>\n    36ad:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    36b2:\te8 99 ea ff ff       \tcall   2150 <syslog@plt>\n    36b7:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    36bb:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    36be:\t48 89 d6             \tmov    %rdx,%rsi\n    36c1:\t89 c7                \tmov    %eax,%edi\n    36c3:\te8 d8 ea ff ff       \tcall   21a0 <add_url@plt>\n    36c8:\t83 45 dc 01          \taddl   $0x1,-0x24(%rbp)\n    36cc:\t48 8b 05 45 d8 00 00 \tmov    0xd845(%rip),%rax        # 10f18 <db_urls_count@@Base-0x560>\n    36d3:\t8b 00                \tmov    (%rax),%eax\n    36d5:\t39 45 dc             \tcmp    %eax,-0x24(%rbp)\n    36d8:\t0f 8c 35 fd ff ff    \tjl     3413 <init_global+0x20>\n    36de:\t48 8b 05 53 d8 00 00 \tmov    0xd853(%rip),%rax        # 10f38 <global@@Base-0x530>\n    36e5:\t48 8b 00             \tmov    (%rax),%rax\n    36e8:\t48 85 c0             \ttest   %rax,%rax\n    36eb:\t75 79                \tjne    3766 <init_global+0x373>\n    36ed:\t48 8b 05 4c d8 00 00 \tmov    0xd84c(%rip),%rax        # 10f40 <debug>\n    36f4:\t48 8b 00             \tmov    (%rax),%rax\n    36f7:\t8b 00                \tmov    (%rax),%eax\n    36f9:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    36fc:\t7c 5e                \tjl     375c <init_global+0x369>\n    36fe:\t48 8b 05 e3 d7 00 00 \tmov    0xd7e3(%rip),%rax        # 10ee8 <log_stderr>\n    3705:\t8b 00                \tmov    (%rax),%eax\n    3707:\t85 c0                \ttest   %eax,%eax\n    3709:\t74 2b                \tje     3736 <init_global+0x343>\n    370b:\te8 20 ea ff ff       \tcall   2130 <dp_my_pid@plt>\n    3710:\t89 c3                \tmov    %eax,%ebx\n    3712:\te8 de eb ff ff       \tcall   22f5 <dp_time>\n    3717:\t48 8d 0d 92 b1 00 00 \tlea    0xb192(%rip),%rcx        # e8b0 <__FUNCTION__.7978>\n    371e:\t89 da                \tmov    %ebx,%edx\n    3720:\t48 89 c6             \tmov    %rax,%rsi\n    3723:\t48 8d 3d 1e a4 00 00 \tlea    0xa41e(%rip),%rdi        # db48 <_fini+0xd84>\n    372a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    372f:\te8 ec ea ff ff       \tcall   2220 <dprint@plt>\n    3734:\teb 26                \tjmp    375c <init_global+0x369>\n    3736:\t48 8b 05 e3 d7 00 00 \tmov    0xd7e3(%rip),%rax        # 10f20 <log_facility>\n    373d:\t8b 00                \tmov    (%rax),%eax\n    373f:\t83 c8 03             \tor     $0x3,%eax\n    3742:\t48 8d 15 67 b1 00 00 \tlea    0xb167(%rip),%rdx        # e8b0 <__FUNCTION__.7978>\n    3749:\t48 8d 35 50 a4 00 00 \tlea    0xa450(%rip),%rsi        # dba0 <_fini+0xddc>\n    3750:\t89 c7                \tmov    %eax,%edi\n    3752:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3757:\te8 f4 e9 ff ff       \tcall   2150 <syslog@plt>\n    375c:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    3761:\te9 7f 03 00 00       \tjmp    3ae5 <init_global+0x6f2>\n    3766:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n    376d:\te9 dc 02 00 00       \tjmp    3a4e <init_global+0x65b>\n    3772:\tc7 45 d8 00 00 00 00 \tmovl   $0x0,-0x28(%rbp)\n    3779:\te9 9c 02 00 00       \tjmp    3a1a <init_global+0x627>\n    377e:\t48 8b 05 b3 d7 00 00 \tmov    0xd7b3(%rip),%rax        # 10f38 <global@@Base-0x530>\n    3785:\t48 8b 00             \tmov    (%rax),%rax\n    3788:\t48 8b 08             \tmov    (%rax),%rcx\n    378b:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    378e:\t48 63 d0             \tmovslq %eax,%rdx\n    3791:\t48 89 d0             \tmov    %rdx,%rax\n    3794:\t48 c1 e0 02          \tshl    $0x2,%rax\n    3798:\t48 01 d0             \tadd    %rdx,%rax\n    379b:\t48 c1 e0 03          \tshl    $0x3,%rax\n    379f:\t48 01 c8             \tadd    %rcx,%rax\n    37a2:\t48 8b 48 18          \tmov    0x18(%rax),%rcx\n    37a6:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    37a9:\t48 63 d0             \tmovslq %eax,%rdx\n    37ac:\t48 89 d0             \tmov    %rdx,%rax\n    37af:\t48 c1 e0 03          \tshl    $0x3,%rax\n    37b3:\t48 01 d0             \tadd    %rdx,%rax\n    37b6:\t48 01 c0             \tadd    %rax,%rax\n    37b9:\t48 01 d0             \tadd    %rdx,%rax\n    37bc:\t48 c1 e0 03          \tshl    $0x3,%rax\n    37c0:\t48 01 c8             \tadd    %rcx,%rax\n    37c3:\tc7 40 10 00 00 00 00 \tmovl   $0x0,0x10(%rax)\n    37ca:\t48 8b 05 67 d7 00 00 \tmov    0xd767(%rip),%rax        # 10f38 <global@@Base-0x530>\n    37d1:\t48 8b 00             \tmov    (%rax),%rax\n    37d4:\t48 8b 08             \tmov    (%rax),%rcx\n    37d7:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    37da:\t48 63 d0             \tmovslq %eax,%rdx\n    37dd:\t48 89 d0             \tmov    %rdx,%rax\n    37e0:\t48 c1 e0 02          \tshl    $0x2,%rax\n    37e4:\t48 01 d0             \tadd    %rdx,%rax\n    37e7:\t48 c1 e0 03          \tshl    $0x3,%rax\n    37eb:\t48 01 c8             \tadd    %rcx,%rax\n    37ee:\t48 8b 48 18          \tmov    0x18(%rax),%rcx\n    37f2:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    37f5:\t48 63 d0             \tmovslq %eax,%rdx\n    37f8:\t48 89 d0             \tmov    %rdx,%rax\n    37fb:\t48 c1 e0 03          \tshl    $0x3,%rax\n    37ff:\t48 01 d0             \tadd    %rdx,%rax\n    3802:\t48 01 c0             \tadd    %rax,%rax\n    3805:\t48 01 d0             \tadd    %rdx,%rax\n    3808:\t48 c1 e0 03          \tshl    $0x3,%rax\n    380c:\t48 01 c8             \tadd    %rcx,%rax\n    380f:\t48 8d 48 10          \tlea    0x10(%rax),%rcx\n    3813:\t48 8b 05 1e d7 00 00 \tmov    0xd71e(%rip),%rax        # 10f38 <global@@Base-0x530>\n    381a:\t48 8b 00             \tmov    (%rax),%rax\n    381d:\t48 8b 30             \tmov    (%rax),%rsi\n    3820:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    3823:\t48 63 d0             \tmovslq %eax,%rdx\n    3826:\t48 89 d0             \tmov    %rdx,%rax\n    3829:\t48 c1 e0 02          \tshl    $0x2,%rax\n    382d:\t48 01 d0             \tadd    %rdx,%rax\n    3830:\t48 c1 e0 03          \tshl    $0x3,%rax\n    3834:\t48 01 f0             \tadd    %rsi,%rax\n    3837:\t48 8b 70 18          \tmov    0x18(%rax),%rsi\n    383b:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    383e:\t48 63 d0             \tmovslq %eax,%rdx\n    3841:\t48 89 d0             \tmov    %rdx,%rax\n    3844:\t48 c1 e0 03          \tshl    $0x3,%rax\n    3848:\t48 01 d0             \tadd    %rdx,%rax\n    384b:\t48 01 c0             \tadd    %rax,%rax\n    384e:\t48 01 d0             \tadd    %rdx,%rax\n    3851:\t48 c1 e0 03          \tshl    $0x3,%rax\n    3855:\t48 01 f0             \tadd    %rsi,%rax\n    3858:\t48 89 ce             \tmov    %rcx,%rsi\n    385b:\t48 89 c7             \tmov    %rax,%rdi\n    385e:\te8 5d e8 ff ff       \tcall   20c0 <db_bind_mod@plt>\n    3863:\t85 c0                \ttest   %eax,%eax\n    3865:\t0f 84 ab 01 00 00    \tje     3a16 <init_global+0x623>\n    386b:\t48 8b 05 ce d6 00 00 \tmov    0xd6ce(%rip),%rax        # 10f40 <debug>\n    3872:\t48 8b 00             \tmov    (%rax),%rax\n    3875:\t8b 00                \tmov    (%rax),%eax\n    3877:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    387a:\t0f 8c 5a 02 00 00    \tjl     3ada <init_global+0x6e7>\n    3880:\t48 8b 05 61 d6 00 00 \tmov    0xd661(%rip),%rax        # 10ee8 <log_stderr>\n    3887:\t8b 00                \tmov    (%rax),%eax\n    3889:\t85 c0                \ttest   %eax,%eax\n    388b:\t0f 84 c5 00 00 00    \tje     3956 <init_global+0x563>\n    3891:\t48 8b 05 a0 d6 00 00 \tmov    0xd6a0(%rip),%rax        # 10f38 <global@@Base-0x530>\n    3898:\t48 8b 00             \tmov    (%rax),%rax\n    389b:\t48 8b 08             \tmov    (%rax),%rcx\n    389e:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    38a1:\t48 63 d0             \tmovslq %eax,%rdx\n    38a4:\t48 89 d0             \tmov    %rdx,%rax\n    38a7:\t48 c1 e0 02          \tshl    $0x2,%rax\n    38ab:\t48 01 d0             \tadd    %rdx,%rax\n    38ae:\t48 c1 e0 03          \tshl    $0x3,%rax\n    38b2:\t48 01 c8             \tadd    %rcx,%rax\n    38b5:\t48 8b 48 18          \tmov    0x18(%rax),%rcx\n    38b9:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    38bc:\t48 63 d0             \tmovslq %eax,%rdx\n    38bf:\t48 89 d0             \tmov    %rdx,%rax\n    38c2:\t48 c1 e0 03          \tshl    $0x3,%rax\n    38c6:\t48 01 d0             \tadd    %rdx,%rax\n    38c9:\t48 01 c0             \tadd    %rax,%rax\n    38cc:\t48 01 d0             \tadd    %rdx,%rax\n    38cf:\t48 c1 e0 03          \tshl    $0x3,%rax\n    38d3:\t48 01 c8             \tadd    %rcx,%rax\n    38d6:\t4c 8b 28             \tmov    (%rax),%r13\n    38d9:\t48 8b 05 58 d6 00 00 \tmov    0xd658(%rip),%rax        # 10f38 <global@@Base-0x530>\n    38e0:\t48 8b 00             \tmov    (%rax),%rax\n    38e3:\t48 8b 08             \tmov    (%rax),%rcx\n    38e6:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    38e9:\t48 63 d0             \tmovslq %eax,%rdx\n    38ec:\t48 89 d0             \tmov    %rdx,%rax\n    38ef:\t48 c1 e0 02          \tshl    $0x2,%rax\n    38f3:\t48 01 d0             \tadd    %rdx,%rax\n    38f6:\t48 c1 e0 03          \tshl    $0x3,%rax\n    38fa:\t48 01 c8             \tadd    %rcx,%rax\n    38fd:\t48 8b 48 18          \tmov    0x18(%rax),%rcx\n    3901:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    3904:\t48 63 d0             \tmovslq %eax,%rdx\n    3907:\t48 89 d0             \tmov    %rdx,%rax\n    390a:\t48 c1 e0 03          \tshl    $0x3,%rax\n    390e:\t48 01 d0             \tadd    %rdx,%rax\n    3911:\t48 01 c0             \tadd    %rax,%rax\n    3914:\t48 01 d0             \tadd    %rdx,%rax\n    3917:\t48 c1 e0 03          \tshl    $0x3,%rax\n    391b:\t48 01 c8             \tadd    %rcx,%rax\n    391e:\t44 8b 60 08          \tmov    0x8(%rax),%r12d\n    3922:\te8 09 e8 ff ff       \tcall   2130 <dp_my_pid@plt>\n    3927:\t89 c3                \tmov    %eax,%ebx\n    3929:\te8 c7 e9 ff ff       \tcall   22f5 <dp_time>\n    392e:\t4d 89 e9             \tmov    %r13,%r9\n    3931:\t45 89 e0             \tmov    %r12d,%r8d\n    3934:\t48 8d 0d 75 af 00 00 \tlea    0xaf75(%rip),%rcx        # e8b0 <__FUNCTION__.7978>\n    393b:\t89 da                \tmov    %ebx,%edx\n    393d:\t48 89 c6             \tmov    %rax,%rsi\n    3940:\t48 8d 3d a9 a2 00 00 \tlea    0xa2a9(%rip),%rdi        # dbf0 <_fini+0xe2c>\n    3947:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    394c:\te8 cf e8 ff ff       \tcall   2220 <dprint@plt>\n    3951:\te9 84 01 00 00       \tjmp    3ada <init_global+0x6e7>\n    3956:\t48 8b 05 db d5 00 00 \tmov    0xd5db(%rip),%rax        # 10f38 <global@@Base-0x530>\n    395d:\t48 8b 00             \tmov    (%rax),%rax\n    3960:\t48 8b 08             \tmov    (%rax),%rcx\n    3963:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    3966:\t48 63 d0             \tmovslq %eax,%rdx\n    3969:\t48 89 d0             \tmov    %rdx,%rax\n    396c:\t48 c1 e0 02          \tshl    $0x2,%rax\n    3970:\t48 01 d0             \tadd    %rdx,%rax\n    3973:\t48 c1 e0 03          \tshl    $0x3,%rax\n    3977:\t48 01 c8             \tadd    %rcx,%rax\n    397a:\t48 8b 48 18          \tmov    0x18(%rax),%rcx\n    397e:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    3981:\t48 63 d0             \tmovslq %eax,%rdx\n    3984:\t48 89 d0             \tmov    %rdx,%rax\n    3987:\t48 c1 e0 03          \tshl    $0x3,%rax\n    398b:\t48 01 d0             \tadd    %rdx,%rax\n    398e:\t48 01 c0             \tadd    %rax,%rax\n    3991:\t48 01 d0             \tadd    %rdx,%rax\n    3994:\t48 c1 e0 03          \tshl    $0x3,%rax\n    3998:\t48 01 c8             \tadd    %rcx,%rax\n    399b:\t48 8b 30             \tmov    (%rax),%rsi\n    399e:\t48 8b 05 93 d5 00 00 \tmov    0xd593(%rip),%rax        # 10f38 <global@@Base-0x530>\n    39a5:\t48 8b 00             \tmov    (%rax),%rax\n    39a8:\t48 8b 08             \tmov    (%rax),%rcx\n    39ab:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    39ae:\t48 63 d0             \tmovslq %eax,%rdx\n    39b1:\t48 89 d0             \tmov    %rdx,%rax\n    39b4:\t48 c1 e0 02          \tshl    $0x2,%rax\n    39b8:\t48 01 d0             \tadd    %rdx,%rax\n    39bb:\t48 c1 e0 03          \tshl    $0x3,%rax\n    39bf:\t48 01 c8             \tadd    %rcx,%rax\n    39c2:\t48 8b 48 18          \tmov    0x18(%rax),%rcx\n    39c6:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    39c9:\t48 63 d0             \tmovslq %eax,%rdx\n    39cc:\t48 89 d0             \tmov    %rdx,%rax\n    39cf:\t48 c1 e0 03          \tshl    $0x3,%rax\n    39d3:\t48 01 d0             \tadd    %rdx,%rax\n    39d6:\t48 01 c0             \tadd    %rax,%rax\n    39d9:\t48 01 d0             \tadd    %rdx,%rax\n    39dc:\t48 c1 e0 03          \tshl    $0x3,%rax\n    39e0:\t48 01 c8             \tadd    %rcx,%rax\n    39e3:\t8b 40 08             \tmov    0x8(%rax),%eax\n    39e6:\t48 8b 15 33 d5 00 00 \tmov    0xd533(%rip),%rdx        # 10f20 <log_facility>\n    39ed:\t8b 12                \tmov    (%rdx),%edx\n    39ef:\t89 d7                \tmov    %edx,%edi\n    39f1:\t83 cf 03             \tor     $0x3,%edi\n    39f4:\t49 89 f0             \tmov    %rsi,%r8\n    39f7:\t89 c1                \tmov    %eax,%ecx\n    39f9:\t48 8d 15 b0 ae 00 00 \tlea    0xaeb0(%rip),%rdx        # e8b0 <__FUNCTION__.7978>\n    3a00:\t48 8d 35 21 a2 00 00 \tlea    0xa221(%rip),%rsi        # dc28 <_fini+0xe64>\n    3a07:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3a0c:\te8 3f e7 ff ff       \tcall   2150 <syslog@plt>\n    3a11:\te9 c4 00 00 00       \tjmp    3ada <init_global+0x6e7>\n    3a16:\t83 45 d8 01          \taddl   $0x1,-0x28(%rbp)\n    3a1a:\t48 8b 05 17 d5 00 00 \tmov    0xd517(%rip),%rax        # 10f38 <global@@Base-0x530>\n    3a21:\t48 8b 00             \tmov    (%rax),%rax\n    3a24:\t48 8b 08             \tmov    (%rax),%rcx\n    3a27:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    3a2a:\t48 63 d0             \tmovslq %eax,%rdx\n    3a2d:\t48 89 d0             \tmov    %rdx,%rax\n    3a30:\t48 c1 e0 02          \tshl    $0x2,%rax\n    3a34:\t48 01 d0             \tadd    %rdx,%rax\n    3a37:\t48 c1 e0 03          \tshl    $0x3,%rax\n    3a3b:\t48 01 c8             \tadd    %rcx,%rax\n    3a3e:\t8b 40 20             \tmov    0x20(%rax),%eax\n    3a41:\t39 45 d8             \tcmp    %eax,-0x28(%rbp)\n    3a44:\t0f 8c 34 fd ff ff    \tjl     377e <init_global+0x38b>\n    3a4a:\t83 45 dc 01          \taddl   $0x1,-0x24(%rbp)\n    3a4e:\t48 8b 05 e3 d4 00 00 \tmov    0xd4e3(%rip),%rax        # 10f38 <global@@Base-0x530>\n    3a55:\t48 8b 00             \tmov    (%rax),%rax\n    3a58:\t8b 40 08             \tmov    0x8(%rax),%eax\n    3a5b:\t39 45 dc             \tcmp    %eax,-0x24(%rbp)\n    3a5e:\t0f 8c 0e fd ff ff    \tjl     3772 <init_global+0x37f>\n    3a64:\t48 8b 05 d5 d4 00 00 \tmov    0xd4d5(%rip),%rax        # 10f40 <debug>\n    3a6b:\t48 8b 00             \tmov    (%rax),%rax\n    3a6e:\t8b 00                \tmov    (%rax),%eax\n    3a70:\t83 f8 03             \tcmp    $0x3,%eax\n    3a73:\t7e 5e                \tjle    3ad3 <init_global+0x6e0>\n    3a75:\t48 8b 05 6c d4 00 00 \tmov    0xd46c(%rip),%rax        # 10ee8 <log_stderr>\n    3a7c:\t8b 00                \tmov    (%rax),%eax\n    3a7e:\t85 c0                \ttest   %eax,%eax\n    3a80:\t74 2b                \tje     3aad <init_global+0x6ba>\n    3a82:\te8 a9 e6 ff ff       \tcall   2130 <dp_my_pid@plt>\n    3a87:\t89 c3                \tmov    %eax,%ebx\n    3a89:\te8 67 e8 ff ff       \tcall   22f5 <dp_time>\n    3a8e:\t48 8d 0d 1b ae 00 00 \tlea    0xae1b(%rip),%rcx        # e8b0 <__FUNCTION__.7978>\n    3a95:\t89 da                \tmov    %ebx,%edx\n    3a97:\t48 89 c6             \tmov    %rax,%rsi\n    3a9a:\t48 8d 3d b7 a1 00 00 \tlea    0xa1b7(%rip),%rdi        # dc58 <_fini+0xe94>\n    3aa1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3aa6:\te8 75 e7 ff ff       \tcall   2220 <dprint@plt>\n    3aab:\teb 26                \tjmp    3ad3 <init_global+0x6e0>\n    3aad:\t48 8b 05 6c d4 00 00 \tmov    0xd46c(%rip),%rax        # 10f20 <log_facility>\n    3ab4:\t8b 00                \tmov    (%rax),%eax\n    3ab6:\t83 c8 07             \tor     $0x7,%eax\n    3ab9:\t48 8d 15 f0 ad 00 00 \tlea    0xadf0(%rip),%rdx        # e8b0 <__FUNCTION__.7978>\n    3ac0:\t48 8d 35 b9 a1 00 00 \tlea    0xa1b9(%rip),%rsi        # dc80 <_fini+0xebc>\n    3ac7:\t89 c7                \tmov    %eax,%edi\n    3ac9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3ace:\te8 7d e6 ff ff       \tcall   2150 <syslog@plt>\n    3ad3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3ad8:\teb 0b                \tjmp    3ae5 <init_global+0x6f2>\n    3ada:\t90                   \tnop\n    3adb:\te8 c0 0e 00 00       \tcall   49a0 <destroy>\n    3ae0:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    3ae5:\t48 83 c4 28          \tadd    $0x28,%rsp\n    3ae9:\t5b                   \tpop    %rbx\n    3aea:\t41 5c                \tpop    %r12\n    3aec:\t41 5d                \tpop    %r13\n    3aee:\t5d                   \tpop    %rbp\n    3aef:\tc3                   \tret    ", "code_s": "undefined8 init_global(void) {\n  char *pcVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  char *pcVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  int <span class=\"supfact\">local_34</span>;\n  int <span class=\"supfact\">local_30</span>;\n  int <span class=\"supfact\">local_2c</span>;\n  <span class=\"supfact\">local_34</span> = -Number;\n  <span class=\"supfact\">local_2c</span> = Number;\n  do {\n    if (*(int *)PTR_db_urls_count_00110f18 &lt; = <span class=\"supfact\">local_2c</span>) {\n      if (*(long *)PTR_global_00110f38 == Number) {\n        if (-Number & lt; **(int **)PTR_debug_00110f40) {\n          if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n            syslog(*(uint *)PTR_log_facility_00110f20 | Number, String, String);\n          } else {\n            uVar2 = dp_my_pid();\n            uVar6 = FUN_001022f5();\n            dprint(String, uVar6, uVar2, String);\n          }\n        }\n        uVar6 = Number;\n      } else {\n        for (<span class=\"supfact\">local_2c</span> = Number; <span class=\"supfact\">local_2c</span> & lt;\n             *(int *)(*(long *)PTR_global_00110f38 + Number);\n             <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">local_2c</span> + Number) {\n          for (<span class=\"supfact\">local_30</span> = Number; <span class=\"supfact\">local_30</span> & lt;\n               *(int *)((long)<span class=\"supfact\">local_2c</span> * Number +\n                        **(long **)PTR_global_00110f38 + Number);\n               <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_30</span> + Number) {\n            *(undefined4 *)((long)<span class=\"supfact\">local_30</span> * Number +\n                            *(long *)((long)<span class=\"supfact\">local_2c</span> * Number +\n                                      **(long **)PTR_global_00110f38 + Number) +\n                            Number) = Number;\n            iVar3 = db_bind_mod(\n                (long)<span class=\"supfact\">local_30</span> * Number +\n                    *(long *)((long)<span class=\"supfact\">local_2c</span> * Number +\n                              **(long **)PTR_global_00110f38 + Number),\n                (long)<span class=\"supfact\">local_30</span> * Number +\n                    *(long *)((long)<span class=\"supfact\">local_2c</span> * Number +\n                              **(long **)PTR_global_00110f38 + Number) +\n                    Number);\n            if (iVar3 != Number) {\n              if (-Number & lt; **(int **)PTR_debug_00110f40) {\n                if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n                  syslog(\n                      *(uint *)PTR_log_facility_00110f20 | Number, String,\n                      String,\n                      (ulong) *\n                          (uint *)((long)<span class=\"supfact\">local_30</span> * Number +\n                                   *(long *)((long)<span class=\"supfact\">local_2c</span> *\n                                                 Number +\n                                             **(long **)PTR_global_00110f38 +\n                                             Number) +\n                                   Number),\n                      *(undefined8 *)((long)<span class=\"supfact\">local_30</span> * Number +\n                                      *(long *)((long)<span class=\"supfact\">local_2c</span> *\n                                                    Number +\n                                                **(long **)PTR_global_00110f38 +\n                                                Number)));\n                } else {\n                  uVar6 =\n                      *(undefined8 *)((long)<span class=\"supfact\">local_30</span> * Number +\n                                      *(long *)((long)<span class=\"supfact\">local_2c</span> *\n                                                    Number +\n                                                **(long **)PTR_global_00110f38 +\n                                                Number));\n                  uVar2 =\n                      *(undefined4 *)((long)<span class=\"supfact\">local_30</span> * Number +\n                                      *(long *)((long)<span class=\"supfact\">local_2c</span> *\n                                                    Number +\n                                                **(long **)PTR_global_00110f38 +\n                                                Number) +\n                                      Number);\n                  uVar4 = dp_my_pid();\n                  uVar7 = FUN_001022f5();\n                  dprint(String, uVar7, uVar4, String, uVar2, uVar6);\n                }\n              }\n              FUN_001049a0();\n              return Number;\n            }\n          }\n        }\n        if (Number & lt; **(int **)PTR_debug_00110f40) {\n          if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n            syslog(*(uint *)PTR_log_facility_00110f20 | Number, String, String);\n          } else {\n            uVar2 = dp_my_pid();\n            uVar6 = FUN_001022f5();\n            dprint(String, uVar6, uVar2, String);\n          }\n        }\n        uVar6 = Number;\n      }\n      return uVar6;\n    }\n    pcVar1 = *(char **)(PTR_db_urls_list_00110fb8 +\n                        (long)<span class=\"supfact\">local_2c</span> * Number);\n    if (Number & lt; **(int **)PTR_debug_00110f40) {\n      if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n        syslog(*(uint *)PTR_log_facility_00110f20 | Number, String, String,\n               pcVar1);\n      } else {\n        uVar2 = dp_my_pid();\n        uVar6 = FUN_001022f5();\n        dprint(String, uVar6, uVar2, String, pcVar1);\n      }\n    }\n    if (((pcVar1 != (char *)Number) & amp; &amp; (*pcVar1 != String)) & amp;\n        &amp; (*pcVar1 != String)) {\n      iVar3 = strncmp(String, pcVar1, Number);\n      if (iVar3 == Number) {\n        pcVar1 = pcVar1 + Number;\n        pcVar5 = strchr(pcVar1, Number);\n        *pcVar5 = String;\n        pcVar5 = pcVar5 + Number;\n        if (Number & lt; **(int **)PTR_debug_00110f40) {\n          if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n            syslog(*(uint *)PTR_log_facility_00110f20 | Number, String, String,\n                   pcVar1, pcVar5);\n          } else {\n            uVar2 = dp_my_pid();\n            uVar6 = FUN_001022f5();\n            dprint(String, uVar6, uVar2, String, pcVar1, pcVar5);\n          }\n        }\n        add_set(pcVar1, pcVar5);\n        <span class=\"supfact\">local_34</span> = <span class=\"supfact\">local_34</span> + Number;\n      } else {\n        if (<span class=\"supfact\">local_34</span> == -Number) {\n          if (-Number & lt; **(int **)PTR_debug_00110f40) {\n            if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n              syslog(*(uint *)PTR_log_facility_00110f20 | Number, String,\n                     String);\n            } else {\n              uVar2 = dp_my_pid();\n              uVar6 = FUN_001022f5();\n              dprint(String, uVar6, uVar2, String);\n            }\n          }\n          return Number;\n        }\n        if (Number & lt; **(int **)PTR_debug_00110f40) {\n          if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n            syslog(*(uint *)PTR_log_facility_00110f20 | Number, String, String,\n                   pcVar1);\n          } else {\n            uVar2 = dp_my_pid();\n            uVar6 = FUN_001022f5();\n            dprint(String, uVar6, uVar2, String, pcVar1);\n          }\n        }\n        add_url(<span class=\"supfact\">local_34</span>, pcVar1);\n      }\n    }\n    <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">local_2c</span> + Number;\n  } while (true);\n}", "code_t": "int init_global(void) {\n  undefined8 uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  char *pcVar5;\n  char *pcVar6;\n  char *pcVar7;\n  char *p;\n  char *s;\n  int <span class=\"supfact\">count</span>;\n  int <span class=\"supfact\">j</span>;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">count</span> = -Number;\n  <span class=\"supfact\">i</span> = Number;\n  do {\n    if (*(int *)PTR_db_urls_count_00110f18 &lt; = <span class=\"supfact\">i</span>) {\n      if (*(long *)PTR_global_00110f38 == Number) {\n        if (-Number & lt; **(int **)PTR_debug_00110f40) {\n          if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n            syslog(*(uint *)PTR_log_facility_00110f20 | Number, String, String);\n          } else {\n            uVar2 = dp_my_pid();\n            pcVar7 = dp_time();\n            dprint(String, pcVar7, uVar2, String);\n          }\n        }\n        iVar3 = -Number;\n      } else {\n        for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n             *(int *)(*(long *)PTR_global_00110f38 + Number);\n             <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n          for (<span class=\"supfact\">j</span> = Number; <span class=\"supfact\">j</span> & lt;\n               *(int *)((long)<span class=\"supfact\">i</span> * Number +\n                        **(long **)PTR_global_00110f38 + Number);\n               <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number) {\n            *(undefined4 *)((long)<span class=\"supfact\">j</span> * Number +\n                            *(long *)((long)<span class=\"supfact\">i</span> * Number +\n                                      **(long **)PTR_global_00110f38 + Number) +\n                            Number) = Number;\n            iVar3 = db_bind_mod(\n                (long)<span class=\"supfact\">j</span> * Number +\n                    *(long *)((long)<span class=\"supfact\">i</span> * Number +\n                              **(long **)PTR_global_00110f38 + Number),\n                (long)<span class=\"supfact\">j</span> * Number +\n                    *(long *)((long)<span class=\"supfact\">i</span> * Number +\n                              **(long **)PTR_global_00110f38 + Number) +\n                    Number);\n            if (iVar3 != Number) {\n              if (-Number & lt; **(int **)PTR_debug_00110f40) {\n                if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n                  syslog(\n                      *(uint *)PTR_log_facility_00110f20 | Number, String,\n                      String,\n                      (ulong) *\n                          (uint *)((long)<span class=\"supfact\">j</span> * Number +\n                                   *(long *)((long)<span class=\"supfact\">i</span> * Number +\n                                             **(long **)PTR_global_00110f38 +\n                                             Number) +\n                                   Number),\n                      *(undefined8 *)((long)<span class=\"supfact\">j</span> * Number +\n                                      *(long *)((long)<span class=\"supfact\">i</span> *\n                                                    Number +\n                                                **(long **)PTR_global_00110f38 +\n                                                Number)));\n                } else {\n                  uVar1 = *(\n                      undefined8 *)((long)<span class=\"supfact\">j</span> * Number +\n                                    *(long *)((long)<span class=\"supfact\">i</span> * Number +\n                                              **(long **)PTR_global_00110f38 +\n                                              Number));\n                  uVar2 = *(\n                      undefined4 *)((long)<span class=\"supfact\">j</span> * Number +\n                                    *(long *)((long)<span class=\"supfact\">i</span> * Number +\n                                              **(long **)PTR_global_00110f38 +\n                                              Number) +\n                                    Number);\n                  uVar4 = dp_my_pid();\n                  pcVar7 = dp_time();\n                  dprint(String, pcVar7, uVar4, String, uVar2, uVar1);\n                }\n              }\n              destroy();\n              return -Number;\n            }\n          }\n        }\n        if (Number & lt; **(int **)PTR_debug_00110f40) {\n          if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n            syslog(*(uint *)PTR_log_facility_00110f20 | Number, String, String);\n          } else {\n            uVar2 = dp_my_pid();\n            pcVar7 = dp_time();\n            dprint(String, pcVar7, uVar2, String);\n          }\n        }\n        iVar3 = Number;\n      }\n      return iVar3;\n    }\n    pcVar7 = *(char **)(PTR_db_urls_list_00110fb8 +\n                        (long)<span class=\"supfact\">i</span> * Number);\n    if (Number & lt; **(int **)PTR_debug_00110f40) {\n      if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n        syslog(*(uint *)PTR_log_facility_00110f20 | Number, String, String,\n               pcVar7);\n      } else {\n        uVar2 = dp_my_pid();\n        pcVar5 = dp_time();\n        dprint(String, pcVar5, uVar2, String, pcVar7);\n      }\n    }\n    if (((pcVar7 != (char *)Number) & amp; &amp; (*pcVar7 != String)) & amp;\n        &amp; (*pcVar7 != String)) {\n      iVar3 = strncmp(String, pcVar7, Number);\n      if (iVar3 == Number) {\n        pcVar7 = pcVar7 + Number;\n        pcVar5 = strchr(pcVar7, Number);\n        *pcVar5 = String;\n        pcVar5 = pcVar5 + Number;\n        if (Number & lt; **(int **)PTR_debug_00110f40) {\n          if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n            syslog(*(uint *)PTR_log_facility_00110f20 | Number, String, String,\n                   pcVar7, pcVar5);\n          } else {\n            uVar2 = dp_my_pid();\n            pcVar6 = dp_time();\n            dprint(String, pcVar6, uVar2, String, pcVar7, pcVar5);\n          }\n        }\n        add_set(pcVar7, pcVar5);\n        <span class=\"supfact\">count</span> = <span class=\"supfact\">count</span> + Number;\n      } else {\n        if (<span class=\"supfact\">count</span> == -Number) {\n          if (-Number & lt; **(int **)PTR_debug_00110f40) {\n            if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n              syslog(*(uint *)PTR_log_facility_00110f20 | Number, String,\n                     String);\n            } else {\n              uVar2 = dp_my_pid();\n              pcVar7 = dp_time();\n              dprint(String, pcVar7, uVar2, String);\n            }\n          }\n          return -Number;\n        }\n        if (Number & lt; **(int **)PTR_debug_00110f40) {\n          if (*(int *)PTR_log_stderr_00110ee8 == Number) {\n            syslog(*(uint *)PTR_log_facility_00110f20 | Number, String, String,\n                   pcVar7);\n          } else {\n            uVar2 = dp_my_pid();\n            pcVar5 = dp_time();\n            dprint(String, pcVar5, uVar2, String, pcVar7);\n          }\n        }\n        add_url(<span class=\"supfact\">count</span>, pcVar7);\n      }\n    }\n    <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n  } while (true);\n}", "var": [{"name": "local_34", "type": "int", "pred_name": "count", "ref_name": "count", "ref_type": "int"}, {"name": "local_30", "type": "int", "pred_name": "i", "ref_name": "j", "ref_type": "int"}, {"name": "local_2c", "type": "int", "pred_name": "j", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "malvira", "repo_name": "erbr", "path": "malvira/erbr/2f8350b2482c685589c80daaa31735f028d7aa115ebd831f8cce34b92e2b972e", "path_in_repo": "malvira/erbr/contiki/examples/multi-threading/multi-threading.native", "objdump": "00000000004067c1 <announcement_bump>:\n  4067c1:\t55                   \tpush   %rbp\n  4067c2:\t48 89 e5             \tmov    %rsp,%rbp\n  4067c5:\t48 83 ec 10          \tsub    $0x10,%rsp\n  4067c9:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  4067cd:\t48 8b 05 14 c0 00 00 \tmov    0xc014(%rip),%rax        # 4127e8 <observer_callback>\n  4067d4:\t48 85 c0             \ttest   %rax,%rax\n  4067d7:\t74 3e                \tje     406817 <announcement_bump+0x56>\n  4067d9:\t4c 8b 0d 08 c0 00 00 \tmov    0xc008(%rip),%r9        # 4127e8 <observer_callback>\n  4067e0:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4067e4:\t0f b7 40 0a          \tmovzwl 0xa(%rax),%eax\n  4067e8:\t0f b7 c8             \tmovzwl %ax,%ecx\n  4067eb:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4067ef:\t0f b7 40 0a          \tmovzwl 0xa(%rax),%eax\n  4067f3:\t0f b7 d0             \tmovzwl %ax,%edx\n  4067f6:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4067fa:\t0f b6 40 18          \tmovzbl 0x18(%rax),%eax\n  4067fe:\t0f b6 f0             \tmovzbl %al,%esi\n  406801:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  406805:\t0f b7 40 08          \tmovzwl 0x8(%rax),%eax\n  406809:\t0f b7 c0             \tmovzwl %ax,%eax\n  40680c:\t41 b8 01 00 00 00    \tmov    $0x1,%r8d\n  406812:\t89 c7                \tmov    %eax,%edi\n  406814:\t41 ff d1             \tcall   *%r9\n  406817:\t90                   \tnop\n  406818:\tc9                   \tleave  \n  406819:\tc3                   \tret    ", "code_s": "void announcement_bump(long <span class=\"supfact\">param_1</span>) {\n  if (DAT_004127e8 != (code *)Number) {\n    (*DAT_004127e8)(*(undefined2 *)(<span class=\"supfact\">param_1</span> + Number),\n                    *(undefined *)(<span class=\"supfact\">param_1</span> + Number),\n                    *(undefined2 *)(<span class=\"supfact\">param_1</span> + Number),\n                    *(undefined2 *)(<span class=\"supfact\">param_1</span> + Number), Number);\n  }\n  return;\n}", "code_t": "void announcement_bump(announcement *<span class=\"supfact\">a</span>) {\n  announcement *<span class=\"supfact\">a</span> - local;\n  if (observer_callback != (announcement_observer)Number) {\n    (*observer_callback)(<span class=\"supfact\">a</span> - &gt; id, <span class=\"supfact\">a</span> - &gt;\n                         has_value, <span class=\"supfact\">a</span> - &gt;\n                         value, <span class=\"supfact\">a</span> - &gt; value, String);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "announcement * *", "pred_name": "a", "ref_name": "a", "ref_type": "announcement * *"}], "body_in_train": false}, {"repo_owner": "jmesmon", "repo_name": "numactl", "path": "jmesmon/numactl/2d7204d82378d0a3875b54015a7ff4c18475b25519a77d2104db0d0b044ff419", "path_in_repo": "jmesmon/numactl//libnuma.so.1", "objdump": "000000000000540b <copy_bitmask_to_nodemask>:\n    540b:\t55                   \tpush   %rbp\n    540c:\t48 89 e5             \tmov    %rsp,%rbp\n    540f:\t48 83 ec 20          \tsub    $0x20,%rsp\n    5413:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    5417:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    541b:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    541f:\tba 10 00 00 00       \tmov    $0x10,%edx\n    5424:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    5429:\t48 89 c7             \tmov    %rax,%rdi\n    542c:\te8 cf dd ff ff       \tcall   3200 <memset@plt>\n    5431:\tc7 45 f8 80 00 00 00 \tmovl   $0x80,-0x8(%rbp)\n    5438:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    543f:\teb 32                \tjmp    5473 <copy_bitmask_to_nodemask+0x68>\n    5441:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    5444:\t3b 45 f8             \tcmp    -0x8(%rbp),%eax\n    5447:\t7d 3e                \tjge    5487 <copy_bitmask_to_nodemask+0x7c>\n    5449:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    544c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    5450:\t89 d6                \tmov    %edx,%esi\n    5452:\t48 89 c7             \tmov    %rax,%rdi\n    5455:\te8 d6 dd ff ff       \tcall   3230 <numa_bitmask_isbitset@plt>\n    545a:\t85 c0                \ttest   %eax,%eax\n    545c:\t74 11                \tje     546f <copy_bitmask_to_nodemask+0x64>\n    545e:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    5461:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    5465:\t89 d6                \tmov    %edx,%esi\n    5467:\t48 89 c7             \tmov    %rax,%rdi\n    546a:\te8 f6 e2 ff ff       \tcall   3765 <nodemask_set_compat>\n    546f:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    5473:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    5476:\t48 63 d0             \tmovslq %eax,%rdx\n    5479:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    547d:\t48 8b 00             \tmov    (%rax),%rax\n    5480:\t48 39 c2             \tcmp    %rax,%rdx\n    5483:\t72 bc                \tjb     5441 <copy_bitmask_to_nodemask+0x36>\n    5485:\teb 01                \tjmp    5488 <copy_bitmask_to_nodemask+0x7d>\n    5487:\t90                   \tnop\n    5488:\t90                   \tnop\n    5489:\tc9                   \tleave  \n    548a:\tc3                   \tret    ", "code_s": "void copy_bitmask_to_nodemask(ulong *<span class=\"supfact\">param_1</span>,\n                              void *<span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  int <span class=\"supfact\">local_c</span>;\n  memset(<span class=\"supfact\">param_2</span>, Number, Number);\n  for (<span class=\"supfact\">local_c</span> = Number;\n       ((ulong)(long)<span class=\"supfact\">local_c</span> & lt;\n        *<span class=\"supfact\">param_1</span> & amp; &amp;\n        (<span class=\"supfact\">local_c</span> & lt; Number));\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    <span class=\"supfact\">iVar1</span> =\n        numa_bitmask_isbitset(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_c</span>);\n    if (<span class=\"supfact\">iVar1</span> != Number) {\n      FUN_00103765(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">local_c</span>);\n    }\n  }\n  return;\n}", "code_t": "void copy_bitmask_to_nodemask(bitmask *<span class=\"supfact\">bmp</span>,\n                              nodemask_t *<span class=\"supfact\">nmp</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  nodemask_t *<span class=\"supfact\">nmp</span> - local;\n  bitmask *<span class=\"supfact\">bmp</span> - local;\n  int max;\n  int <span class=\"supfact\">i</span>;\n  memset(<span class=\"supfact\">nmp</span>, Number, Number);\n  for (<span class=\"supfact\">i</span> = Number;\n       ((ulong)(long)<span class=\"supfact\">i</span> & lt; <span class=\"supfact\">bmp</span> - &gt;\n        size & amp; &amp; (<span class=\"supfact\">i</span> & lt; Number));\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    <span class=\"supfact\">iVar1</span> =\n        numa_bitmask_isbitset(<span class=\"supfact\">bmp</span>, <span class=\"supfact\">i</span>);\n    if (<span class=\"supfact\">iVar1</span> != Number) {\n      nodemask_set_compat(<span class=\"supfact\">nmp</span>, <span class=\"supfact\">i</span>);\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "void * *", "pred_name": "start", "ref_name": "bmp", "ref_type": "bitmask * *"}, {"name": "param_2", "type": "size_t", "pred_name": "length", "ref_name": "nmp", "ref_type": "nodemask_t * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "ajamous", "repo_name": "DOTS", "path": "ajamous/DOTS/28c9e348f3a3b11bc4f8699bd26ee99298379f2886174405e6aa1da54ee51932", "path_in_repo": "ajamous/DOTS/SIP_Clients_pjsip-2.7.1/pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/clidemo", "objdump": "0000000000426400 <speex_std_low_mode_request_handler>:\n  426400:\t55                   \tpush   %rbp\n  426401:\t48 89 e5             \tmov    %rsp,%rbp\n  426404:\t48 83 ec 30          \tsub    $0x30,%rsp\n  426408:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  42640c:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n  426410:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n  426414:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  426418:\tbe 04 00 00 00       \tmov    $0x4,%esi\n  42641d:\t48 89 c7             \tmov    %rax,%rdi\n  426420:\te8 e5 2a ff ff       \tcall   418f0a <speex_bits_unpack_unsigned>\n  426425:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  426428:\t48 8d 55 fc          \tlea    -0x4(%rbp),%rdx\n  42642c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  426430:\tbe 08 00 00 00       \tmov    $0x8,%esi\n  426435:\t48 89 c7             \tmov    %rax,%rdi\n  426438:\te8 a8 fc ff ff       \tcall   4260e5 <speex_encoder_ctl>\n  42643d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  426442:\tc9                   \tleave  \n  426443:\tc3                   \tret    ", "code_s": "undefined8\nspeex_std_low_mode_request_handler(undefined8 <span class=\"supfact\">param_1</span>,\n                                   undefined8 param_2,\n                                   undefined8 <span class=\"supfact\">param_3</span>) {\n  undefined4 <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_c</span> =\n      speex_bits_unpack_unsigned(<span class=\"supfact\">param_1</span>, Number);\n  speex_encoder_ctl(<span class=\"supfact\">param_3</span>, Number, &amp;\n                    <span class=\"supfact\">local_c</span>);\n  return Number;\n}", "code_t": "int speex_std_low_mode_request_handler(SpeexBits *<span class=\"supfact\">bits</span>,\n                                       void *state,\n                                       void *<span class=\"supfact\">data</span>) {\n  void *<span class=\"supfact\">data</span> - local;\n  void *state - local;\n  SpeexBits *<span class=\"supfact\">bits</span> - local;\n  spx_int32_t <span class=\"supfact\">m</span>;\n  <span class=\"supfact\">m</span> = speex_bits_unpack_unsigned(<span class=\"supfact\">bits</span>, Number);\n  speex_encoder_ctl(<span class=\"supfact\">data</span>, Number, &amp; <span class=\"supfact\">m</span>);\n  return Number;\n}", "var": [{"name": "param_1", "type": "SpeexBits * *", "pred_name": "bits", "ref_name": "bits", "ref_type": "SpeexBits * *"}, {"name": "param_3", "type": "void * *", "pred_name": "data", "ref_name": "data", "ref_type": "void * *"}, {"name": "local_c", "type": "spx_int32_t", "pred_name": "m", "ref_name": "m", "ref_type": "spx_int32_t"}], "body_in_train": true}, {"repo_owner": "jmesmon", "repo_name": "numactl", "path": "jmesmon/numactl/2d7204d82378d0a3875b54015a7ff4c18475b25519a77d2104db0d0b044ff419", "path_in_repo": "jmesmon/numactl//libnuma.so.1", "objdump": "0000000000007440 <numa_sched_setaffinity>:\n    7440:\t55                   \tpush   %rbp\n    7441:\t48 89 e5             \tmov    %rsp,%rbp\n    7444:\t53                   \tpush   %rbx\n    7445:\t48 83 ec 18          \tsub    $0x18,%rsp\n    7449:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n    744c:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    7450:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    7454:\t48 8b 58 08          \tmov    0x8(%rax),%rbx\n    7458:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    745c:\t48 89 c7             \tmov    %rax,%rdi\n    745f:\te8 2c c0 ff ff       \tcall   3490 <numa_bitmask_nbytes@plt>\n    7464:\t89 c2                \tmov    %eax,%edx\n    7466:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    7469:\t48 89 d9             \tmov    %rbx,%rcx\n    746c:\t89 c6                \tmov    %eax,%esi\n    746e:\tbf cb 00 00 00       \tmov    $0xcb,%edi\n    7473:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7478:\te8 a3 be ff ff       \tcall   3320 <syscall@plt>\n    747d:\t48 83 c4 18          \tadd    $0x18,%rsp\n    7481:\t5b                   \tpop    %rbx\n    7482:\t5d                   \tpop    %rbp\n    7483:\tc3                   \tret    ", "code_s": "void numa_sched_setaffinity(uint <span class=\"supfact\">param_1</span>,\n                            long <span class=\"supfact\">param_2</span>) {\n  undefined8 uVar1;\n  uint <span class=\"supfact\">uVar2</span>;\n  uVar1 = *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number);\n  <span class=\"supfact\">uVar2</span> = numa_bitmask_nbytes(<span class=\"supfact\">param_2</span>);\n  syscall(Number, (ulong)<span class=\"supfact\">param_1</span>, (ulong)<span class=\"supfact\">uVar2</span>,\n          uVar1);\n  return;\n}", "code_t": "int numa_sched_setaffinity(pid_t <span class=\"supfact\">pid</span>,\n                           bitmask *<span class=\"supfact\">mask</span>) {\n  ulong *puVar1;\n  uint <span class=\"supfact\">uVar2</span>;\n  long lVar3;\n  bitmask *<span class=\"supfact\">mask</span> - local;\n  pid_t <span class=\"supfact\">pid</span> - local;\n  puVar1 = <span class=\"supfact\">mask</span> - &gt;\n  maskp;\n  <span class=\"supfact\">uVar2</span> = numa_bitmask_nbytes(<span class=\"supfact\">mask</span>);\n  lVar3 = syscall(Number, (ulong)(uint)<span class=\"supfact\">pid</span>,\n                  (ulong)<span class=\"supfact\">uVar2</span>, puVar1);\n  return (int)lVar3;\n}", "var": [{"name": "param_1", "type": "uint", "pred_name": "cpu", "ref_name": "pid", "ref_type": "pid_t"}, {"name": "param_2", "type": "ulong", "pred_name": "target_frequency", "ref_name": "mask", "ref_type": "bitmask * *"}, {"name": "uVar2", "type": "uint", "pred_name": "uVar2", "ref_name": "uVar2", "ref_type": "uint"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000001ee0e <qstring_append_chr>:\n   1ee0e:\t55                   \tpush   %rbp\n   1ee0f:\t48 89 e5             \tmov    %rsp,%rbp\n   1ee12:\t48 83 ec 20          \tsub    $0x20,%rsp\n   1ee16:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   1ee1a:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n   1ee1d:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   1ee24:\t00 00 \n   1ee26:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   1ee2a:\t31 c0                \txor    %eax,%eax\n   1ee2c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1ee30:\tbe 01 00 00 00       \tmov    $0x1,%esi\n   1ee35:\t48 89 c7             \tmov    %rax,%rdi\n   1ee38:\te8 13 fe ff ff       \tcall   1ec50 <capacity_increase>\n   1ee3d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1ee41:\t48 8b 70 10          \tmov    0x10(%rax),%rsi\n   1ee45:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1ee49:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n   1ee4d:\t48 8d 48 01          \tlea    0x1(%rax),%rcx\n   1ee51:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n   1ee55:\t48 89 4a 18          \tmov    %rcx,0x18(%rdx)\n   1ee59:\t48 01 f0             \tadd    %rsi,%rax\n   1ee5c:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n   1ee5f:\t88 10                \tmov    %dl,(%rax)\n   1ee61:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1ee65:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n   1ee69:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1ee6d:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n   1ee71:\t48 01 d0             \tadd    %rdx,%rax\n   1ee74:\tc6 00 00             \tmovb   $0x0,(%rax)\n   1ee77:\t90                   \tnop\n   1ee78:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1ee7c:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n   1ee83:\t00 00 \n   1ee85:\t74 05                \tje     1ee8c <qstring_append_chr+0x7e>\n   1ee87:\te8 04 94 fe ff       \tcall   8290 <__stack_chk_fail@plt>\n   1ee8c:\tc9                   \tleave  \n   1ee8d:\tc3                   \tret    ", "code_s": "void qstring_append_chr(long <span class=\"supfact\">param_1</span>,\n                        undefined <span class=\"supfact\">param_2</span>) {\n  long lVar1;\n  long lVar2;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  FUN_0011ec50(<span class=\"supfact\">param_1</span>, Number);\n  lVar2 = *(long *)(<span class=\"supfact\">param_1</span> + Number);\n  *(long *)(<span class=\"supfact\">param_1</span> + Number) = lVar2 + Number;\n  *(undefined *)(lVar2 + *(long *)(<span class=\"supfact\">param_1</span> + Number)) =\n      <span class=\"supfact\">param_2</span>;\n  *(undefined *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                 *(long *)(<span class=\"supfact\">param_1</span> + Number)) = Number;\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "code_t": "void qstring_append_chr(QString *<span class=\"supfact\">qstring</span>, int c) {\n  long lVar1;\n  size_t sVar2;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int c - local;\n  QString *<span class=\"supfact\">qstring</span> - local;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  capacity_increase(<span class=\"supfact\">qstring</span>, Number);\n  sVar2 = <span class=\"supfact\">qstring</span> - &gt;\n  length;\n  <span class=\"supfact\">qstring</span> - &gt;\n  length = sVar2 + Number;\n  <span class=\"supfact\">qstring</span> - &gt;\n  string[sVar2] = (char)c;\n  <span class=\"supfact\">qstring</span> - &gt;\n  string[<span class=\"supfact\">qstring</span> - &gt; length] = String;\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "long", "pred_name": "param_1", "ref_name": "qstring", "ref_type": "QString * *"}, {"name": "param_2", "type": "char", "pred_name": "param_2", "ref_name": "", "ref_type": "disappear"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "wufixx", "repo_name": "android_kernel_xiaomi_msm8953_vince", "path": "wufixx/android_kernel_xiaomi_msm8953_vince/e20e40c14979637892394d8d220a1ffb64a1912d5eb640ba7ecb67aef438b696", "path_in_repo": "wufixx/android_kernel_xiaomi_msm8953_vince/tools/lib/traceevent/libtraceevent.so", "objdump": "0000000000017598 <kbuffer_timestamp>:\n   17598:\t55                   \tpush   %rbp\n   17599:\t48 89 e5             \tmov    %rsp,%rbp\n   1759c:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n   175a0:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   175a4:\t48 8b 00             \tmov    (%rax),%rax\n   175a7:\t5d                   \tpop    %rbp\n   175a8:\tc3                   \tret    ", "code_s": "undefined8 kbuffer_timestamp(undefined8 *<span class=\"supfact\">param_1</span>) {\n  return *<span class=\"supfact\">param_1</span>;\n}", "code_t": "ulonglong kbuffer_timestamp(kbuffer *<span class=\"supfact\">kbuf</span>) {\n  kbuffer *<span class=\"supfact\">kbuf</span> - local;\n  return <span class=\"supfact\">kbuf</span> - &gt;\n  timestamp;\n}", "var": [{"name": "param_1", "type": "kbuffer * *", "pred_name": "kbuf", "ref_name": "kbuf", "ref_type": "kbuffer * *"}], "body_in_train": true}, {"repo_owner": "jmesmon", "repo_name": "numactl", "path": "jmesmon/numactl/2d7204d82378d0a3875b54015a7ff4c18475b25519a77d2104db0d0b044ff419", "path_in_repo": "jmesmon/numactl//libnuma.so.1", "objdump": "0000000000007440 <numa_sched_setaffinity>:\n    7440:\t55                   \tpush   %rbp\n    7441:\t48 89 e5             \tmov    %rsp,%rbp\n    7444:\t53                   \tpush   %rbx\n    7445:\t48 83 ec 18          \tsub    $0x18,%rsp\n    7449:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n    744c:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    7450:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    7454:\t48 8b 58 08          \tmov    0x8(%rax),%rbx\n    7458:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    745c:\t48 89 c7             \tmov    %rax,%rdi\n    745f:\te8 2c c0 ff ff       \tcall   3490 <numa_bitmask_nbytes@plt>\n    7464:\t89 c2                \tmov    %eax,%edx\n    7466:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    7469:\t48 89 d9             \tmov    %rbx,%rcx\n    746c:\t89 c6                \tmov    %eax,%esi\n    746e:\tbf cb 00 00 00       \tmov    $0xcb,%edi\n    7473:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7478:\te8 a3 be ff ff       \tcall   3320 <syscall@plt>\n    747d:\t48 83 c4 18          \tadd    $0x18,%rsp\n    7481:\t5b                   \tpop    %rbx\n    7482:\t5d                   \tpop    %rbp\n    7483:\tc3                   \tret    ", "code_s": "void numa_sched_setaffinity(uint <span class=\"supfact\">param_1</span>,\n                            long <span class=\"supfact\">param_2</span>) {\n  undefined8 uVar1;\n  uint <span class=\"supfact\">uVar2</span>;\n  uVar1 = *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number);\n  <span class=\"supfact\">uVar2</span> = numa_bitmask_nbytes(<span class=\"supfact\">param_2</span>);\n  syscall(Number, (ulong)<span class=\"supfact\">param_1</span>, (ulong)<span class=\"supfact\">uVar2</span>,\n          uVar1);\n  return;\n}", "code_t": "int numa_sched_setaffinity(pid_t <span class=\"supfact\">pid</span>,\n                           bitmask *<span class=\"supfact\">mask</span>) {\n  ulong *puVar1;\n  uint <span class=\"supfact\">uVar2</span>;\n  long lVar3;\n  bitmask *<span class=\"supfact\">mask</span> - local;\n  pid_t <span class=\"supfact\">pid</span> - local;\n  puVar1 = <span class=\"supfact\">mask</span> - &gt;\n  maskp;\n  <span class=\"supfact\">uVar2</span> = numa_bitmask_nbytes(<span class=\"supfact\">mask</span>);\n  lVar3 = syscall(Number, (ulong)(uint)<span class=\"supfact\">pid</span>,\n                  (ulong)<span class=\"supfact\">uVar2</span>, puVar1);\n  return (int)lVar3;\n}", "var": [{"name": "param_1", "type": "uint", "pred_name": "cpu", "ref_name": "pid", "ref_type": "pid_t"}, {"name": "param_2", "type": "ulong", "pred_name": "target_frequency", "ref_name": "mask", "ref_type": "bitmask * *"}, {"name": "uVar2", "type": "uint", "pred_name": "uVar2", "ref_name": "uVar2", "ref_type": "uint"}], "body_in_train": false}, {"repo_owner": "malvira", "repo_name": "erbr", "path": "malvira/erbr/2f8350b2482c685589c80daaa31735f028d7aa115ebd831f8cce34b92e2b972e", "path_in_repo": "malvira/erbr/contiki/examples/multi-threading/multi-threading.native", "objdump": "000000000040c098 <memb_free>:\n  40c098:\t55                   \tpush   %rbp\n  40c099:\t48 89 e5             \tmov    %rsp,%rbp\n  40c09c:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  40c0a0:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n  40c0a4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40c0a8:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  40c0ac:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  40c0b0:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n  40c0b7:\teb 60                \tjmp    40c119 <memb_free+0x81>\n  40c0b9:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  40c0bd:\t48 3b 45 e0          \tcmp    -0x20(%rbp),%rax\n  40c0c1:\t75 44                \tjne    40c107 <memb_free+0x6f>\n  40c0c3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40c0c7:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n  40c0cb:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40c0ce:\t48 98                \tcltq   \n  40c0d0:\t48 01 d0             \tadd    %rdx,%rax\n  40c0d3:\t0f b6 00             \tmovzbl (%rax),%eax\n  40c0d6:\t84 c0                \ttest   %al,%al\n  40c0d8:\t7e 18                \tjle    40c0f2 <memb_free+0x5a>\n  40c0da:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40c0de:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n  40c0e2:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40c0e5:\t48 98                \tcltq   \n  40c0e7:\t48 01 d0             \tadd    %rdx,%rax\n  40c0ea:\t0f b6 10             \tmovzbl (%rax),%edx\n  40c0ed:\t83 ea 01             \tsub    $0x1,%edx\n  40c0f0:\t88 10                \tmov    %dl,(%rax)\n  40c0f2:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40c0f6:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n  40c0fa:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  40c0fd:\t48 98                \tcltq   \n  40c0ff:\t48 01 d0             \tadd    %rdx,%rax\n  40c102:\t0f b6 00             \tmovzbl (%rax),%eax\n  40c105:\teb 27                \tjmp    40c12e <memb_free+0x96>\n  40c107:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40c10b:\t0f b7 00             \tmovzwl (%rax),%eax\n  40c10e:\t0f b7 c0             \tmovzwl %ax,%eax\n  40c111:\t48 01 45 f0          \tadd    %rax,-0x10(%rbp)\n  40c115:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n  40c119:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  40c11d:\t0f b7 40 02          \tmovzwl 0x2(%rax),%eax\n  40c121:\t0f b7 c0             \tmovzwl %ax,%eax\n  40c124:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n  40c127:\t7c 90                \tjl     40c0b9 <memb_free+0x21>\n  40c129:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n  40c12e:\t5d                   \tpop    %rbp\n  40c12f:\tc3                   \tret    ", "code_s": "ulong memb_free(ushort *<span class=\"supfact\">param_1</span>, long <span class=\"supfact\">param_2</span>) {\n  long <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_18</span> = *(long *)(<span class=\"supfact\">param_1</span> + Number);\n  <span class=\"supfact\">local_c</span> = Number;\n  while (true) {\n    if ((int)(uint)<span class=\"supfact\">param_1</span>[Number] &lt;\n        = <span class=\"supfact\">local_c</span>) {\n      return Number;\n    }\n    if (<span class=\"supfact\">local_18</span> == <span class=\"supfact\">param_2</span>)\n      break;\n    <span class=\"supfact\">local_18</span> =\n        <span class=\"supfact\">local_18</span> + (ulong)*<span class=\"supfact\">param_1</span>;\n    <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number;\n  }\n  if (String & lt; *(char *)((long)<span class=\"supfact\">local_c</span> +\n                             *(long *)(<span class=\"supfact\">param_1</span> + Number))) {\n    *(char *)((long)<span class=\"supfact\">local_c</span> +\n              *(long *)(<span class=\"supfact\">param_1</span> + Number)) =\n        *(char *)((long)<span class=\"supfact\">local_c</span> +\n                  *(long *)(<span class=\"supfact\">param_1</span> + Number)) +\n        -Number;\n  }\n  return (ulong) * (byte *)((long)<span class=\"supfact\">local_c</span> +\n                            *(long *)(<span class=\"supfact\">param_1</span> + Number));\n}", "code_t": "char memb_free(memb *<span class=\"supfact\">m</span>, void *<span class=\"supfact\">ptr</span>) {\n  void *<span class=\"supfact\">ptr</span> - local;\n  memb *<span class=\"supfact\">m</span> - local;\n  char *<span class=\"supfact\">ptr2</span>;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">ptr2</span> = (char *)<span class=\"supfact\">m</span> - &gt;\n  mem;\n  <span class=\"supfact\">i</span> = Number;\n  while (true) {\n    if ((int)(uint)<span class=\"supfact\">m</span> - &gt; num &lt; = <span class=\"supfact\">i</span>) {\n      return -Number;\n    }\n    if (<span class=\"supfact\">ptr2</span> == (char *)<span class=\"supfact\">ptr</span>)\n      break;\n    <span class=\"supfact\">ptr2</span> = <span class=\"supfact\">ptr2</span> + <span class=\"supfact\">m</span> - &gt;\n    size;\n    <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n  }\n  if (String & lt; <span class=\"supfact\">m</span> - &gt; count[<span class=\"supfact\">i</span>]) {\n    <span class=\"supfact\">m</span> - &gt;\n    count[<span class=\"supfact\">i</span>] = <span class=\"supfact\">m</span> - &gt;\n    count[<span class=\"supfact\">i</span>] + -Number;\n  }\n  return <span class=\"supfact\">m</span> - &gt;\n  count[<span class=\"supfact\">i</span>];\n}", "var": [{"name": "param_1", "type": "memb * *", "pred_name": "m", "ref_name": "m", "ref_type": "memb * *"}, {"name": "param_2", "type": "void * *", "pred_name": "ptr", "ref_name": "ptr", "ref_type": "void * *"}, {"name": "local_18", "type": "char * *", "pred_name": "ptr2", "ref_name": "ptr2", "ref_type": "char * *"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "0000000000012abd <qdict_entry_key>:\n   12abd:\t55                   \tpush   %rbp\n   12abe:\t48 89 e5             \tmov    %rsp,%rbp\n   12ac1:\t48 83 ec 20          \tsub    $0x20,%rsp\n   12ac5:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   12ac9:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   12ad0:\t00 00 \n   12ad2:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   12ad6:\t31 c0                \txor    %eax,%eax\n   12ad8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   12adc:\t48 8b 00             \tmov    (%rax),%rax\n   12adf:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n   12ae3:\t64 48 33 14 25 28 00 \txor    %fs:0x28,%rdx\n   12aea:\t00 00 \n   12aec:\t74 05                \tje     12af3 <qdict_entry_key+0x36>\n   12aee:\te8 9d 57 ff ff       \tcall   8290 <__stack_chk_fail@plt>\n   12af3:\tc9                   \tleave  \n   12af4:\tc3                   \tret    ", "code_s": "undefined8 qdict_entry_key(undefined8 *<span class=\"supfact\">param_1</span>) {\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  if (*(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number) !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return *<span class=\"supfact\">param_1</span>;\n}", "code_t": "char *qdict_entry_key(QDictEntry *<span class=\"supfact\">entry</span>) {\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  QDictEntry *<span class=\"supfact\">entry</span> - local;\n  if (*(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number) !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return <span class=\"supfact\">entry</span> - &gt;\n  key;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "entry", "ref_type": "QDictEntry * *"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "DennisKofflard", "repo_name": "Trident_i2c_controller", "path": "DennisKofflard/Trident_i2c_controller/7f3b1341443e0a8ff448c9a5c1a21c28b9aacb88b829d641d7994be27df60654", "path_in_repo": "DennisKofflard/Trident_i2c_controller/congatec_cgoslib/Lx/libcgos.so", "objdump": "000000000000420c <CgosStorageAreaBlockSize>:\n    420c:\t55                   \tpush   %rbp\n    420d:\t48 89 e5             \tmov    %rsp,%rbp\n    4210:\t48 83 ec 10          \tsub    $0x10,%rsp\n    4214:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n    4217:\t89 75 f8             \tmov    %esi,-0x8(%rbp)\n    421a:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    421d:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    4220:\t6a 00                \tpush   $0x0\n    4222:\t6a 00                \tpush   $0x0\n    4224:\t6a 00                \tpush   $0x0\n    4226:\t6a 00                \tpush   $0x0\n    4228:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    422e:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    4234:\t89 d1                \tmov    %edx,%ecx\n    4236:\t89 c2                \tmov    %eax,%edx\n    4238:\tbe 19 00 00 00       \tmov    $0x19,%esi\n    423d:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    4242:\te8 89 ef ff ff       \tcall   31d0 <CallDrvPlain@plt>\n    4247:\t48 83 c4 20          \tadd    $0x20,%rsp\n    424b:\tc9                   \tleave  \n    424c:\tc3                   \tret    ", "code_s": "void CgosStorageAreaBlockSize(undefined4 <span class=\"supfact\">param_1</span>,\n                              undefined4 <span class=\"supfact\">param_2</span>) {\n  CallDrvPlain(Number, Number, <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n               Number, Number, Number, Number, Number, Number);\n  return;\n}", "code_t": "uint CgosStorageAreaBlockSize(HCGOS <span class=\"supfact\">hCgos</span>,\n                              uint <span class=\"supfact\">dwUnit</span>) {\n  uint uVar1;\n  uint <span class=\"supfact\">dwUnit</span> - local;\n  HCGOS <span class=\"supfact\">hCgos</span> - local;\n  uVar1 = CallDrvPlain(Number, Number, <span class=\"supfact\">hCgos</span>,\n                       <span class=\"supfact\">dwUnit</span>, Number, Number, Number, Number,\n                       (uint *)Number, (uint *)Number);\n  return uVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "hCgos", "ref_type": "HCGOS"}, {"name": "param_2", "type": "int", "pred_name": "__unk__", "ref_name": "dwUnit", "ref_type": "uint"}], "body_in_train": false}, {"repo_owner": "DennisKofflard", "repo_name": "Trident_i2c_controller", "path": "DennisKofflard/Trident_i2c_controller/7f3b1341443e0a8ff448c9a5c1a21c28b9aacb88b829d641d7994be27df60654", "path_in_repo": "DennisKofflard/Trident_i2c_controller/congatec_cgoslib/Lx/libcgos.so", "objdump": "000000000000420c <CgosStorageAreaBlockSize>:\n    420c:\t55                   \tpush   %rbp\n    420d:\t48 89 e5             \tmov    %rsp,%rbp\n    4210:\t48 83 ec 10          \tsub    $0x10,%rsp\n    4214:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n    4217:\t89 75 f8             \tmov    %esi,-0x8(%rbp)\n    421a:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    421d:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    4220:\t6a 00                \tpush   $0x0\n    4222:\t6a 00                \tpush   $0x0\n    4224:\t6a 00                \tpush   $0x0\n    4226:\t6a 00                \tpush   $0x0\n    4228:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    422e:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    4234:\t89 d1                \tmov    %edx,%ecx\n    4236:\t89 c2                \tmov    %eax,%edx\n    4238:\tbe 19 00 00 00       \tmov    $0x19,%esi\n    423d:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    4242:\te8 89 ef ff ff       \tcall   31d0 <CallDrvPlain@plt>\n    4247:\t48 83 c4 20          \tadd    $0x20,%rsp\n    424b:\tc9                   \tleave  \n    424c:\tc3                   \tret    ", "code_s": "void CgosStorageAreaBlockSize(undefined4 <span class=\"supfact\">param_1</span>,\n                              undefined4 <span class=\"supfact\">param_2</span>) {\n  CallDrvPlain(Number, Number, <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n               Number, Number, Number, Number, Number, Number);\n  return;\n}", "code_t": "uint CgosStorageAreaBlockSize(HCGOS <span class=\"supfact\">hCgos</span>,\n                              uint <span class=\"supfact\">dwUnit</span>) {\n  uint uVar1;\n  uint <span class=\"supfact\">dwUnit</span> - local;\n  HCGOS <span class=\"supfact\">hCgos</span> - local;\n  uVar1 = CallDrvPlain(Number, Number, <span class=\"supfact\">hCgos</span>,\n                       <span class=\"supfact\">dwUnit</span>, Number, Number, Number, Number,\n                       (uint *)Number, (uint *)Number);\n  return uVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "hCgos", "ref_type": "HCGOS"}, {"name": "param_2", "type": "int", "pred_name": "__unk__", "ref_name": "dwUnit", "ref_type": "uint"}], "body_in_train": false}, {"repo_owner": "wufixx", "repo_name": "android_kernel_xiaomi_msm8953_vince", "path": "wufixx/android_kernel_xiaomi_msm8953_vince/e20e40c14979637892394d8d220a1ffb64a1912d5eb640ba7ecb67aef438b696", "path_in_repo": "wufixx/android_kernel_xiaomi_msm8953_vince/tools/lib/traceevent/libtraceevent.so", "objdump": "0000000000014abf <pevent_filter_remove_event>:\n   14abf:\t55                   \tpush   %rbp\n   14ac0:\t48 89 e5             \tmov    %rsp,%rbp\n   14ac3:\t48 83 ec 20          \tsub    $0x20,%rsp\n   14ac7:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   14acb:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n   14ace:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14ad2:\t8b 40 08             \tmov    0x8(%rax),%eax\n   14ad5:\t85 c0                \ttest   %eax,%eax\n   14ad7:\t75 0a                \tjne    14ae3 <pevent_filter_remove_event+0x24>\n   14ad9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   14ade:\te9 ce 00 00 00       \tjmp    14bb1 <pevent_filter_remove_event+0xf2>\n   14ae3:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n   14ae6:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14aea:\t89 d6                \tmov    %edx,%esi\n   14aec:\t48 89 c7             \tmov    %rax,%rdi\n   14aef:\te8 15 db ff ff       \tcall   12609 <find_filter_type>\n   14af4:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   14af8:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n   14afd:\t75 0a                \tjne    14b09 <pevent_filter_remove_event+0x4a>\n   14aff:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   14b04:\te9 a8 00 00 00       \tjmp    14bb1 <pevent_filter_remove_event+0xf2>\n   14b09:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   14b0d:\t48 89 c7             \tmov    %rax,%rdi\n   14b10:\te8 eb fe ff ff       \tcall   14a00 <free_filter_type>\n   14b15:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14b19:\t48 8b 48 10          \tmov    0x10(%rax),%rcx\n   14b1d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14b21:\t8b 40 08             \tmov    0x8(%rax),%eax\n   14b24:\t48 63 d0             \tmovslq %eax,%rdx\n   14b27:\t48 89 d0             \tmov    %rdx,%rax\n   14b2a:\t48 01 c0             \tadd    %rax,%rax\n   14b2d:\t48 01 d0             \tadd    %rdx,%rax\n   14b30:\t48 c1 e0 03          \tshl    $0x3,%rax\n   14b34:\t48 01 c8             \tadd    %rcx,%rax\n   14b37:\t48 89 c2             \tmov    %rax,%rdx\n   14b3a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   14b3e:\t48 29 c2             \tsub    %rax,%rdx\n   14b41:\t48 89 d0             \tmov    %rdx,%rax\n   14b44:\t48 83 e8 18          \tsub    $0x18,%rax\n   14b48:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n   14b4c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   14b50:\t48 8d 48 18          \tlea    0x18(%rax),%rcx\n   14b54:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n   14b58:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   14b5c:\t48 89 ce             \tmov    %rcx,%rsi\n   14b5f:\t48 89 c7             \tmov    %rax,%rdi\n   14b62:\te8 39 f9 fe ff       \tcall   44a0 <memmove@plt>\n   14b67:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14b6b:\t8b 40 08             \tmov    0x8(%rax),%eax\n   14b6e:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n   14b71:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14b75:\t89 50 08             \tmov    %edx,0x8(%rax)\n   14b78:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14b7c:\t48 8b 48 10          \tmov    0x10(%rax),%rcx\n   14b80:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14b84:\t8b 40 08             \tmov    0x8(%rax),%eax\n   14b87:\t48 63 d0             \tmovslq %eax,%rdx\n   14b8a:\t48 89 d0             \tmov    %rdx,%rax\n   14b8d:\t48 01 c0             \tadd    %rax,%rax\n   14b90:\t48 01 d0             \tadd    %rdx,%rax\n   14b93:\t48 c1 e0 03          \tshl    $0x3,%rax\n   14b97:\t48 01 c8             \tadd    %rcx,%rax\n   14b9a:\tba 18 00 00 00       \tmov    $0x18,%edx\n   14b9f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   14ba4:\t48 89 c7             \tmov    %rax,%rdi\n   14ba7:\te8 b4 f6 fe ff       \tcall   4260 <memset@plt>\n   14bac:\tb8 01 00 00 00       \tmov    $0x1,%eax\n   14bb1:\tc9                   \tleave  \n   14bb2:\tc3                   \tret    ", "code_s": "undefined8 pevent_filter_remove_event(long <span class=\"supfact\">param_1</span>,\n                                      undefined4 <span class=\"supfact\">param_2</span>) {\n  undefined8 uVar1;\n  void *__dest;\n  if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n    uVar1 = Number;\n  } else {\n    __dest =\n        (void *)FUN_00112609(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n    if (__dest == (void *)Number) {\n      uVar1 = Number;\n    } else {\n      FUN_00114a00(__dest);\n      memmove(__dest, (void *)((long)__dest + Number),\n              (((long)*(int *)(<span class=\"supfact\">param_1</span> + Number) * Number +\n                *(long *)(<span class=\"supfact\">param_1</span> + Number)) -\n               (long)__dest) -\n                  Number);\n      *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n          *(int *)(<span class=\"supfact\">param_1</span> + Number) + -Number;\n      memset(\n          (void *)((long)*(int *)(<span class=\"supfact\">param_1</span> + Number) * Number +\n                   *(long *)(<span class=\"supfact\">param_1</span> + Number)),\n          Number, Number);\n      uVar1 = Number;\n    }\n  }\n  return uVar1;\n}", "code_t": "int pevent_filter_remove_event(event_filter *<span class=\"supfact\">filter</span>,\n                               int <span class=\"supfact\">event_id</span>) {\n  int iVar1;\n  filter_type *filter_type_00;\n  int <span class=\"supfact\">event_id</span> - local;\n  event_filter *<span class=\"supfact\">filter</span> - local;\n  ulong len;\n  filter_type *filter_type;\n  if (<span class=\"supfact\">filter</span> - &gt; filters == Number) {\n    iVar1 = Number;\n  } else {\n    filter_type_00 =\n        find_filter_type(<span class=\"supfact\">filter</span>, <span class=\"supfact\">event_id</span>);\n    if (filter_type_00 == (filter_type *)Number) {\n      iVar1 = Number;\n    } else {\n      free_filter_type(filter_type_00);\n      memmove(filter_type_00, filter_type_00 + Number,\n              (long)<span class=\"supfact\">filter</span> - &gt;\n              event_filters +\n              ((long)<span class=\"supfact\">filter</span> - &gt;\n               filters * Number - (long)filter_type_00) +\n              -Number);\n      <span class=\"supfact\">filter</span> - &gt;\n      filters = <span class=\"supfact\">filter</span> - &gt;\n      filters + -Number;\n      memset(<span class=\"supfact\">filter</span> - &gt;\n             event_filters + <span class=\"supfact\">filter</span> - &gt;\n             filters, Number, Number);\n      iVar1 = Number;\n    }\n  }\n  return iVar1;\n}", "var": [{"name": "param_1", "type": "event_filter * *", "pred_name": "filter", "ref_name": "filter", "ref_type": "event_filter * *"}, {"name": "param_2", "type": "int", "pred_name": "event_id", "ref_name": "event_id", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "jmesmon", "repo_name": "numactl", "path": "jmesmon/numactl/2d7204d82378d0a3875b54015a7ff4c18475b25519a77d2104db0d0b044ff419", "path_in_repo": "jmesmon/numactl//libnuma.so.1", "objdump": "000000000000566d <numa_get_membind>:\n    566d:\t55                   \tpush   %rbp\n    566e:\t48 89 e5             \tmov    %rsp,%rbp\n    5671:\t48 83 ec 10          \tsub    $0x10,%rsp\n    5675:\te8 06 dc ff ff       \tcall   3280 <numa_allocate_nodemask@plt>\n    567a:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    567e:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    5682:\t48 8d 45 f4          \tlea    -0xc(%rbp),%rax\n    5686:\t48 89 d6             \tmov    %rdx,%rsi\n    5689:\t48 89 c7             \tmov    %rax,%rdi\n    568c:\te8 b1 e8 ff ff       \tcall   3f42 <getpol>\n    5691:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    5694:\t83 f8 02             \tcmp    $0x2,%eax\n    5697:\t74 19                \tje     56b2 <numa_get_membind+0x45>\n    5699:\t48 8b 05 08 69 00 00 \tmov    0x6908(%rip),%rax        # bfa8 <numa_all_nodes_ptr@@libnuma_1.2-0x4e0>\n    56a0:\t48 8b 00             \tmov    (%rax),%rax\n    56a3:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    56a7:\t48 89 d6             \tmov    %rdx,%rsi\n    56aa:\t48 89 c7             \tmov    %rax,%rdi\n    56ad:\te8 de de ff ff       \tcall   3590 <copy_bitmask_to_bitmask@plt>\n    56b2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    56b6:\tc9                   \tleave  \n    56b7:\tc3                   \tret    ", "code_s": "undefined8 numa_get_membind(void) {\n  int <span class=\"supfact\">local_14</span>;\n  undefined8 <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = numa_allocate_nodemask();\n  FUN_00103f42(&amp; <span class=\"supfact\">local_14</span>, <span class=\"supfact\">local_10</span>);\n  if (<span class=\"supfact\">local_14</span> != Number) {\n    copy_bitmask_to_bitmask(*(undefined8 *)PTR_numa_all_nodes_ptr_0010bfa8,\n                            <span class=\"supfact\">local_10</span>);\n  }\n  return <span class=\"supfact\">local_10</span>;\n}", "code_t": "bitmask *numa_get_membind(void) {\n  int <span class=\"supfact\">oldpolicy</span>;\n  bitmask *<span class=\"supfact\">bmp</span>;\n  <span class=\"supfact\">bmp</span> = numa_allocate_nodemask();\n  getpol(&amp; <span class=\"supfact\">oldpolicy</span>, <span class=\"supfact\">bmp</span>);\n  if (<span class=\"supfact\">oldpolicy</span> != Number) {\n    copy_bitmask_to_bitmask(*(bitmask **)PTR_numa_all_nodes_ptr_0010bfa8,\n                            <span class=\"supfact\">bmp</span>);\n  }\n  return <span class=\"supfact\">bmp</span>;\n}", "var": [{"name": "local_14", "type": "int", "pred_name": "i", "ref_name": "oldpolicy", "ref_type": "int"}, {"name": "local_10", "type": "__unk__", "pred_name": "__unk__", "ref_name": "bmp", "ref_type": "bitmask * *"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000001bfcc <ga_command_state_new>:\n   1bfcc:\t55                   \tpush   %rbp\n   1bfcd:\t48 89 e5             \tmov    %rsp,%rbp\n   1bfd0:\t48 83 ec 10          \tsub    $0x10,%rsp\n   1bfd4:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   1bfdb:\t00 00 \n   1bfdd:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   1bfe1:\t31 c0                \txor    %eax,%eax\n   1bfe3:\tbf 08 00 00 00       \tmov    $0x8,%edi\n   1bfe8:\te8 b3 c7 fe ff       \tcall   87a0 <g_malloc0@plt>\n   1bfed:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n   1bff1:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1bff5:\t48 c7 00 00 00 00 00 \tmovq   $0x0,(%rax)\n   1bffc:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1c000:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n   1c004:\t64 48 33 14 25 28 00 \txor    %fs:0x28,%rdx\n   1c00b:\t00 00 \n   1c00d:\t74 05                \tje     1c014 <ga_command_state_new+0x48>\n   1c00f:\te8 7c c2 fe ff       \tcall   8290 <__stack_chk_fail@plt>\n   1c014:\tc9                   \tleave  \n   1c015:\tc3                   \tret    ", "code_s": "undefined8 *ga_command_state_new(void) {\n  long lVar1;\n  undefined8 *<span class=\"supfact\">puVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">puVar2</span> = (undefined8 *)g_malloc0(Number);\n  *<span class=\"supfact\">puVar2</span> = Number;\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return <span class=\"supfact\">puVar2</span>;\n}", "code_t": "GACommandState *ga_command_state_new(void) {\n  long lVar1;\n  GACommandState *<span class=\"supfact\">pGVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  GACommandState *cs;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">pGVar2</span> = (GACommandState *)g_malloc0(Number);\n  <span class=\"supfact\">pGVar2</span> - &gt;\n  groups = (GSList *)Number;\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return <span class=\"supfact\">pGVar2</span>;\n}", "var": [{"name": "puVar2", "type": "undefined8 * *", "pred_name": "puVar2", "ref_name": "pGVar2", "ref_type": "GACommandState * *"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "DennisKofflard", "repo_name": "Trident_i2c_controller", "path": "DennisKofflard/Trident_i2c_controller/7f3b1341443e0a8ff448c9a5c1a21c28b9aacb88b829d641d7994be27df60654", "path_in_repo": "DennisKofflard/Trident_i2c_controller/congatec_cgoslib/Lx/libcgos.so", "objdump": "0000000000003fec <CgosVgaSetBacklight>:\n    3fec:\t55                   \tpush   %rbp\n    3fed:\t48 89 e5             \tmov    %rsp,%rbp\n    3ff0:\t48 83 ec 10          \tsub    $0x10,%rsp\n    3ff4:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n    3ff7:\t89 75 f8             \tmov    %esi,-0x8(%rbp)\n    3ffa:\t89 55 f4             \tmov    %edx,-0xc(%rbp)\n    3ffd:\t8b 4d f4             \tmov    -0xc(%rbp),%ecx\n    4000:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    4003:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    4006:\t6a 00                \tpush   $0x0\n    4008:\t6a 00                \tpush   $0x0\n    400a:\t6a 00                \tpush   $0x0\n    400c:\t6a 00                \tpush   $0x0\n    400e:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    4014:\t41 89 c8             \tmov    %ecx,%r8d\n    4017:\t89 d1                \tmov    %edx,%ecx\n    4019:\t89 c2                \tmov    %eax,%edx\n    401b:\tbe 12 00 00 00       \tmov    $0x12,%esi\n    4020:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    4025:\te8 a6 f1 ff ff       \tcall   31d0 <CallDrvPlain@plt>\n    402a:\t48 83 c4 20          \tadd    $0x20,%rsp\n    402e:\tc9                   \tleave  \n    402f:\tc3                   \tret    ", "code_s": "void CgosVgaSetBacklight(undefined4 <span class=\"supfact\">param_1</span>,\n                         undefined4 <span class=\"supfact\">param_2</span>,\n                         undefined4 <span class=\"supfact\">param_3</span>) {\n  CallDrvPlain(Number, Number, <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n               <span class=\"supfact\">param_3</span>, Number, Number, Number, Number, Number);\n  return;\n}", "code_t": "uint CgosVgaSetBacklight(HCGOS <span class=\"supfact\">hCgos</span>,\n                         uint <span class=\"supfact\">dwUnit</span>,\n                         uint <span class=\"supfact\">dwSetting</span>) {\n  uint uVar1;\n  uint <span class=\"supfact\">dwSetting</span> - local;\n  uint <span class=\"supfact\">dwUnit</span> - local;\n  HCGOS <span class=\"supfact\">hCgos</span> - local;\n  uVar1 = CallDrvPlain(Number, Number, <span class=\"supfact\">hCgos</span>,\n                       <span class=\"supfact\">dwUnit</span>, <span class=\"supfact\">dwSetting</span>,\n                       Number, Number, Number, (uint *)Number, (uint *)Number);\n  return uVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "__unk__", "ref_name": "hCgos", "ref_type": "HCGOS"}, {"name": "param_2", "type": "int", "pred_name": "__unk__", "ref_name": "dwUnit", "ref_type": "uint"}, {"name": "param_3", "type": "int", "pred_name": "__unk__", "ref_name": "dwSetting", "ref_type": "uint"}], "body_in_train": false}, {"repo_owner": "jprince14", "repo_name": "Disassembler", "path": "jprince14/Disassembler/5785b4c96741cd00270b0a3766b028d58cb5e97d83aa7934bdbded53baf9a117", "path_in_repo": "jprince14/Disassembler//Disassembler", "objdump": "", "code_s": "undefined4 FUN_00401ce9(void) {\n  undefined4 <span class=\"supfact\">uVar1</span>;\n  long <span class=\"supfact\">unaff_RBP</span>;\n  undefined8 <span class=\"supfact\">in_R9</span>;\n  undefined auVar2[Number];\n  auVar2 = FUN_00402e7e();\n  *(undefined(*)[Number])(<span class=\"supfact\">unaff_RBP</span> + -Number) = auVar2;\n  if (*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number) {\n    FUN_004037a1(&amp; DAT_004054de, Number,\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       <span class=\"supfact\">in_R9</span>,\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number));\n  } else if (*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number) {\n    FUN_004037a1(&amp; DAT_004054e2, Number,\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       <span class=\"supfact\">in_R9</span>,\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number));\n  } else if (*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number) {\n    FUN_004037a1(&amp; DAT_004054e5, Number,\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       <span class=\"supfact\">in_R9</span>,\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number));\n  } else if (*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number) {\n    FUN_004037a1(&amp; DAT_004054e9, Number,\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       <span class=\"supfact\">in_R9</span>,\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number));\n  } else if (*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number) {\n    FUN_004037a1(&amp; DAT_004054ed, Number,\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       <span class=\"supfact\">in_R9</span>,\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + Number));\n  } else {\n    *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number) = Number;\n  }\n  if (*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number) {\n    if ((*(byte *)(<span class=\"supfact\">unaff_RBP</span> + -Number) & amp; Number) ==\n        Number) {\n      FUN_00403c1f(*(undefined *)(<span class=\"supfact\">unaff_RBP</span> + -Number), &amp;\n                   DAT_004054f1,\n                   *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n    } else if ((*(byte *)(<span class=\"supfact\">unaff_RBP</span> + -Number) & amp; Number) ==\n               Number) {\n      FUN_00403dbd(*(undefined *)(<span class=\"supfact\">unaff_RBP</span> + -Number), &amp;\n                   DAT_004054f9,\n                   *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n    } else if ((*(byte *)(<span class=\"supfact\">unaff_RBP</span> + -Number) & amp; Number) ==\n               Number) {\n      FUN_00403dbd(*(undefined *)(<span class=\"supfact\">unaff_RBP</span> + -Number), &amp;\n                   DAT_0040550a,\n                   *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n    } else if ((*(byte *)(<span class=\"supfact\">unaff_RBP</span> + -Number) & amp; Number) ==\n               Number) {\n      FUN_00403dbd(*(undefined *)(<span class=\"supfact\">unaff_RBP</span> + -Number), &amp;\n                   DAT_00405501,\n                   *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n    } else if ((*(byte *)(<span class=\"supfact\">unaff_RBP</span> + -Number) & amp; Number) ==\n               Number) {\n      FUN_00403dbd(*(undefined *)(<span class=\"supfact\">unaff_RBP</span> + -Number), &amp;\n                   DAT_004054fd,\n                   *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n    } else {\n      <span class=\"supfact\">uVar1</span> =\n          FUN_004017c4(*(undefined *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                       *(undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n      *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number) =\n          <span class=\"supfact\">uVar1</span>;\n      if ((*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number) & amp; &amp;\n          (*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number)) {\n        fprintf(stderr, String, &amp;\n                DAT_00408160, (ulong)((DAT_0040818c + DAT_00408120) - Number));\n      }\n    }\n  }\n  DAT_00408120 = DAT_0040818c + DAT_00408120;\n  DAT_0040818c = Number;\n  return *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number);\n}", "code_t": "undefined4 FUN_00401ce9(void) {\n  modrmm inputmodrmm;\n  modrmm inputmodrmm_00;\n  modrmm inputmodrmm_01;\n  modrmm inputmodrmm_02;\n  errorcode <span class=\"supfact\">eVar1</span>;\n  long <span class=\"supfact\">unaff_RBP</span>;\n  modrmm mVar2;\n  registers unaff_retaddr;\n  undefined8 in_stack_fffffffffffffff8;\n  mVar2 =\n      getandparsemodrmm(*(filestruct *)(<span class=\"supfact\">unaff_RBP</span> + Number));\n  *(modrmm *)(<span class=\"supfact\">unaff_RBP</span> + -Number) = mVar2;\n  if (*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number) {\n    inputmodrmm.modrm_RM_Reg = unaff_retaddr;\n    inputmodrmm.modrm_MOD = (int)in_stack_fffffffffffffff8;\n    inputmodrmm.modrm_Reg =\n        (int)((ulong)in_stack_fffffffffffffff8 & gt; &gt; Number);\n    shared3partparse(*(filestruct *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                     String, opcode_rm32_imm32, inputmodrmm,\n                     (typeofrun) *\n                         (undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n  } else if (*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number) {\n    inputmodrmm_00.modrm_RM_Reg = unaff_retaddr;\n    inputmodrmm_00.modrm_MOD = (int)in_stack_fffffffffffffff8;\n    inputmodrmm_00.modrm_Reg =\n        (int)((ulong)in_stack_fffffffffffffff8 & gt; &gt; Number);\n    shared3partparse(*(filestruct *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                     String, opcode_rm32_imm32, inputmodrmm_00,\n                     (typeofrun) *\n                         (undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n  } else if (*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number) {\n    inputmodrmm_01.modrm_RM_Reg = unaff_retaddr;\n    inputmodrmm_01.modrm_MOD = (int)in_stack_fffffffffffffff8;\n    inputmodrmm_01.modrm_Reg =\n        (int)((ulong)in_stack_fffffffffffffff8 & gt; &gt; Number);\n    shared3partparse(*(filestruct *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                     String, opcode_rm32_imm32, inputmodrmm_01,\n                     (typeofrun) *\n                         (undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n  } else if (*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number) {\n    inputmodrmm_02.modrm_RM_Reg = unaff_retaddr;\n    inputmodrmm_02.modrm_MOD = (int)in_stack_fffffffffffffff8;\n    inputmodrmm_02.modrm_Reg =\n        (int)((ulong)in_stack_fffffffffffffff8 & gt; &gt; Number);\n    shared3partparse(*(filestruct *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                     String, opcode_rm32_imm32, inputmodrmm_02,\n                     (typeofrun) *\n                         (undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n  } else if (*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number) {\n    mVar2.modrm_RM_Reg = unaff_retaddr;\n    mVar2.modrm_MOD = (int)in_stack_fffffffffffffff8;\n    mVar2.modrm_Reg = (int)((ulong)in_stack_fffffffffffffff8 & gt; &gt; Number);\n    shared3partparse(*(filestruct *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                     String, opcode_rm32_imm32, mVar2,\n                     (typeofrun) *\n                         (undefined8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n  } else {\n    *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number) = Number;\n  }\n  if (*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number) {\n    if ((*(byte *)(<span class=\"supfact\">unaff_RBP</span> + -Number) & amp; Number) ==\n        Number) {\n      registerinopcode4bytes(\n          *(filestruct *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n          *(u8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number), String,\n          *(typeofrun *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n    } else if ((*(byte *)(<span class=\"supfact\">unaff_RBP</span> + -Number) & amp; Number) ==\n               Number) {\n      registerinopcode(*(filestruct *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                       *(u8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number), String,\n                       *(typeofrun *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n    } else if ((*(byte *)(<span class=\"supfact\">unaff_RBP</span> + -Number) & amp; Number) ==\n               Number) {\n      registerinopcode(*(filestruct *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                       *(u8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number), String,\n                       *(typeofrun *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n    } else if ((*(byte *)(<span class=\"supfact\">unaff_RBP</span> + -Number) & amp; Number) ==\n               Number) {\n      registerinopcode(*(filestruct *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                       *(u8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number), String,\n                       *(typeofrun *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n    } else if ((*(byte *)(<span class=\"supfact\">unaff_RBP</span> + -Number) & amp; Number) ==\n               Number) {\n      registerinopcode(*(filestruct *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                       *(u8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number), String,\n                       *(typeofrun *)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n    } else {\n      <span class=\"supfact\">eVar1</span> =\n          parsejCC(*(filestruct *)(<span class=\"supfact\">unaff_RBP</span> + Number),\n                   *(u8 *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                   *(typeofrun *)(<span class=\"supfact\">unaff_RBP</span> + -Number),\n                   *(Vector **)(<span class=\"supfact\">unaff_RBP</span> + -Number));\n      *(errorcode *)(<span class=\"supfact\">unaff_RBP</span> + -Number) =\n          <span class=\"supfact\">eVar1</span>;\n      if ((*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number) & amp; &amp;\n          (*(int *)(<span class=\"supfact\">unaff_RBP</span> + -Number) == Number)) {\n        fprintf(stderr, String, g_opcodes,\n                (ulong)((instructionbytecount + totalbytecount) - Number));\n      }\n    }\n  }\n  totalbytecount = instructionbytecount + totalbytecount;\n  instructionbytecount = Number;\n  return *(undefined4 *)(<span class=\"supfact\">unaff_RBP</span> + -Number);\n}", "var": [{"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "eVar1", "ref_type": "errorcode"}, {"name": "unaff_RBP", "type": "long", "pred_name": "unaff_RBP", "ref_name": "unaff_RBP", "ref_type": "long"}, {"name": "in_R9", "type": "undefined8", "pred_name": "in_R9", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "stiartsly", "repo_name": "vdht", "path": "stiartsly/vdht/c89a30bd6470aee763b903652d5691becbd717caca8cb1aaf0378505f74a13e4", "path_in_repo": "stiartsly/vdht/lsctl/libvdhtapi.so", "objdump": "00000000000040ee <_vlsctlc_pack_cmd_host_dump>:\n    40ee:\t55                   \tpush   %rbp\n    40ef:\t48 89 e5             \tmov    %rsp,%rbp\n    40f2:\t48 83 ec 30          \tsub    $0x30,%rsp\n    40f6:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    40fa:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    40fe:\t89 55 dc             \tmov    %edx,-0x24(%rbp)\n    4101:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    4108:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    410d:\t75 28                \tjne    4137 <_vlsctlc_pack_cmd_host_dump+0x49>\n    410f:\tba 93 01 00 00       \tmov    $0x193,%edx\n    4114:\t48 8d 35 35 43 00 00 \tlea    0x4335(%rip),%rsi        # 8450 <__FUNCTION__.4209>\n    411b:\t48 8d 3d de 3f 00 00 \tlea    0x3fde(%rip),%rdi        # 8100 <__FUNCTION__.3432+0x20>\n    4122:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4127:\te8 64 df ff ff       \tcall   2090 <printf@plt>\n    412c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4131:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n    4137:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n    413c:\t75 28                \tjne    4166 <_vlsctlc_pack_cmd_host_dump+0x78>\n    413e:\tba 94 01 00 00       \tmov    $0x194,%edx\n    4143:\t48 8d 35 06 43 00 00 \tlea    0x4306(%rip),%rsi        # 8450 <__FUNCTION__.4209>\n    414a:\t48 8d 3d af 3f 00 00 \tlea    0x3faf(%rip),%rdi        # 8100 <__FUNCTION__.3432+0x20>\n    4151:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4156:\te8 35 df ff ff       \tcall   2090 <printf@plt>\n    415b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4160:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n    4166:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n    416a:\t75 28                \tjne    4194 <_vlsctlc_pack_cmd_host_dump+0xa6>\n    416c:\tba 95 01 00 00       \tmov    $0x195,%edx\n    4171:\t48 8d 35 d8 42 00 00 \tlea    0x42d8(%rip),%rsi        # 8450 <__FUNCTION__.4209>\n    4178:\t48 8d 3d 81 3f 00 00 \tlea    0x3f81(%rip),%rdi        # 8100 <__FUNCTION__.3432+0x20>\n    417f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4184:\te8 07 df ff ff       \tcall   2090 <printf@plt>\n    4189:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    418e:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n    4194:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    4198:\t0f b7 40 02          \tmovzwl 0x2(%rax),%eax\n    419c:\t66 83 f8 13          \tcmp    $0x13,%ax\n    41a0:\t74 07                \tje     41a9 <_vlsctlc_pack_cmd_host_dump+0xbb>\n    41a2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    41a7:\teb 51                \tjmp    41fa <_vlsctlc_pack_cmd_host_dump+0x10c>\n    41a9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    41ad:\t0f b7 40 02          \tmovzwl 0x2(%rax),%eax\n    41b1:\t0f b7 c0             \tmovzwl %ax,%eax\n    41b4:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    41b7:\t48 63 ca             \tmovslq %edx,%rcx\n    41ba:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    41be:\t48 01 ca             \tadd    %rcx,%rdx\n    41c1:\t89 c6                \tmov    %eax,%esi\n    41c3:\t48 89 d7             \tmov    %rdx,%rdi\n    41c6:\te8 72 ed ff ff       \tcall   2f3d <set_uint16>\n    41cb:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    41ce:\t83 c0 02             \tadd    $0x2,%eax\n    41d1:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    41d4:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    41d7:\t48 63 d0             \tmovslq %eax,%rdx\n    41da:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    41de:\t48 01 d0             \tadd    %rdx,%rax\n    41e1:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    41e6:\t48 89 c7             \tmov    %rax,%rdi\n    41e9:\te8 4f ed ff ff       \tcall   2f3d <set_uint16>\n    41ee:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    41f1:\t83 c0 02             \tadd    $0x2,%eax\n    41f4:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    41f7:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    41fa:\tc9                   \tleave  \n    41fb:\tc3                   \tret    ", "code_s": "undefined4 _vlsctlc_pack_cmd_host_dump(long <span class=\"supfact\">param_1</span>,\n                                       long <span class=\"supfact\">param_2</span>,\n                                       int <span class=\"supfact\">param_3</span>) {\n  undefined4 <span class=\"supfact\">uVar1</span>;\n  if (<span class=\"supfact\">param_1</span> == Number) {\n    printf(String, String, Number);\n    uRam0000000000000000 = Number;\n  }\n  if (<span class=\"supfact\">param_2</span> == Number) {\n    printf(String, String, Number);\n    uRam0000000000000000 = Number;\n  }\n  if (<span class=\"supfact\">param_3</span> == Number) {\n    printf(String, String, Number);\n    uRam0000000000000000 = Number;\n  }\n  if (*(short *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n    FUN_00102f3d(<span class=\"supfact\">param_2</span>,\n                 *(undefined2 *)(<span class=\"supfact\">param_1</span> + Number));\n    FUN_00102f3d(<span class=\"supfact\">param_2</span> + Number, Number);\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar1</span> = Number;\n  }\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "int _vlsctlc_pack_cmd_host_dump(vlsctlc *<span class=\"supfact\">lsctlc</span>,\n                                void *<span class=\"supfact\">buf</span>,\n                                int <span class=\"supfact\">len</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  int <span class=\"supfact\">len</span> - local;\n  void *<span class=\"supfact\">buf</span> - local;\n  vlsctlc *<span class=\"supfact\">lsctlc</span> - local;\n  int tsz;\n  if (<span class=\"supfact\">lsctlc</span> == (vlsctlc *)Number) {\n    printf(String, String, Number);\n    uRam0000000000000000 = Number;\n  }\n  if (<span class=\"supfact\">buf</span> == (void *)Number) {\n    printf(String, String, Number);\n    uRam0000000000000000 = Number;\n  }\n  if (<span class=\"supfact\">len</span> == Number) {\n    printf(String, String, Number);\n    uRam0000000000000000 = Number;\n  }\n  if (<span class=\"supfact\">lsctlc</span> - &gt; bound_cmd == Number) {\n    set_uint16(<span class=\"supfact\">buf</span>, <span class=\"supfact\">lsctlc</span> - &gt; bound_cmd);\n    set_uint16((void *)((long)<span class=\"supfact\">buf</span> + Number), Number);\n    <span class=\"supfact\">iVar1</span> = Number;\n  } else {\n    <span class=\"supfact\">iVar1</span> = Number;\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "__unk__", "ref_name": "lsctlc", "ref_type": "vlsctlc * *"}, {"name": "param_2", "type": "char * *", "pred_name": "__unk__", "ref_name": "buf", "ref_type": "void * *"}, {"name": "param_3", "type": "int", "pred_name": "__unk__", "ref_name": "len", "ref_type": "int"}, {"name": "uVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "malvira", "repo_name": "erbr", "path": "malvira/erbr/2f8350b2482c685589c80daaa31735f028d7aa115ebd831f8cce34b92e2b972e", "path_in_repo": "malvira/erbr/contiki/examples/multi-threading/multi-threading.native", "objdump": "000000000040573f <etimer_reset>:\n  40573f:\t55                   \tpush   %rbp\n  405740:\t48 89 e5             \tmov    %rsp,%rbp\n  405743:\t48 83 ec 10          \tsub    $0x10,%rsp\n  405747:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  40574b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40574f:\t48 89 c7             \tmov    %rax,%rdi\n  405752:\te8 b7 2b 00 00       \tcall   40830e <timer_reset>\n  405757:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40575b:\t48 89 c7             \tmov    %rax,%rdi\n  40575e:\te8 1c ff ff ff       \tcall   40567f <add_timer>\n  405763:\t90                   \tnop\n  405764:\tc9                   \tleave  \n  405765:\tc3                   \tret    ", "code_s": "void etimer_reset(undefined8 <span class=\"supfact\">param_1</span>) {\n  timer_reset(<span class=\"supfact\">param_1</span>);\n  FUN_0040567f(<span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "void etimer_reset(etimer *<span class=\"supfact\">et</span>) {\n  etimer *<span class=\"supfact\">et</span> - local;\n  timer_reset(&amp; <span class=\"supfact\">et</span> - &gt; timer);\n  add_timer(<span class=\"supfact\">et</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "etimer * *", "pred_name": "et", "ref_name": "et", "ref_type": "etimer * *"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000000b1e9 <qemu_fls>:\n    b1e9:\t55                   \tpush   %rbp\n    b1ea:\t48 89 e5             \tmov    %rsp,%rbp\n    b1ed:\t48 83 ec 20          \tsub    $0x20,%rsp\n    b1f1:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n    b1f4:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    b1fb:\t00 00 \n    b1fd:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    b201:\t31 c0                \txor    %eax,%eax\n    b203:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    b206:\t89 c7                \tmov    %eax,%edi\n    b208:\te8 d4 fb ff ff       \tcall   ade1 <clz32>\n    b20d:\tba 20 00 00 00       \tmov    $0x20,%edx\n    b212:\t29 c2                \tsub    %eax,%edx\n    b214:\t89 d0                \tmov    %edx,%eax\n    b216:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    b21a:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n    b221:\t00 00 \n    b223:\t74 05                \tje     b22a <qemu_fls+0x41>\n    b225:\te8 66 d0 ff ff       \tcall   8290 <__stack_chk_fail@plt>\n    b22a:\tc9                   \tleave  \n    b22b:\tc3                   \tret    ", "code_s": "int qemu_fls(undefined4 <span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">iVar2</span> = FUN_0010ade1(<span class=\"supfact\">param_1</span>);\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return Number - <span class=\"supfact\">iVar2</span>;\n}", "code_t": "int qemu_fls(int <span class=\"supfact\">i</span>) {\n  long lVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">i</span> - local;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">iVar2</span> = clz32(<span class=\"supfact\">i</span>);\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return Number - <span class=\"supfact\">iVar2</span>;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "i", "ref_type": "int"}, {"name": "iVar2", "type": "int", "pred_name": "iVar2", "ref_name": "iVar2", "ref_type": "int"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "malvira", "repo_name": "erbr", "path": "malvira/erbr/2f8350b2482c685589c80daaa31735f028d7aa115ebd831f8cce34b92e2b972e", "path_in_repo": "malvira/erbr/contiki/examples/multi-threading/multi-threading.native", "objdump": "0000000000406b55 <broadcast_announcement_init>:\n  406b55:\t55                   \tpush   %rbp\n  406b56:\t48 89 e5             \tmov    %rsp,%rbp\n  406b59:\t48 83 ec 20          \tsub    $0x20,%rsp\n  406b5d:\t89 f8                \tmov    %edi,%eax\n  406b5f:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n  406b63:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n  406b67:\t48 89 4d e0          \tmov    %rcx,-0x20(%rbp)\n  406b6b:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  406b6f:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  406b73:\tba 00 d2 40 00       \tmov    $0x40d200,%edx\n  406b78:\t89 c6                \tmov    %eax,%esi\n  406b7a:\tbf 00 28 41 00       \tmov    $0x412800,%edi\n  406b7f:\te8 0a 01 00 00       \tcall   406c8e <broadcast_open>\n  406b84:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  406b88:\t48 89 05 21 bd 00 00 \tmov    %rax,0xbd21(%rip)        # 4128b0 <c+0xb0>\n  406b8f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  406b93:\t48 89 05 1e bd 00 00 \tmov    %rax,0xbd1e(%rip)        # 4128b8 <c+0xb8>\n  406b9a:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  406b9e:\t48 89 05 1b bd 00 00 \tmov    %rax,0xbd1b(%rip)        # 4128c0 <c+0xc0>\n  406ba5:\tbf 16 6b 40 00       \tmov    $0x406b16,%edi\n  406baa:\te8 a9 fc ff ff       \tcall   406858 <announcement_register_observer_callback>\n  406baf:\t90                   \tnop\n  406bb0:\tc9                   \tleave  \n  406bb1:\tc3                   \tret    ", "code_s": "void broadcast_announcement_init(undefined2 <span class=\"supfact\">param_1</span>,\n                                 undefined8 <span class=\"supfact\">param_2</span>,\n                                 undefined8 <span class=\"supfact\">param_3</span>,\n                                 undefined8 <span class=\"supfact\">param_4</span>) {\n  broadcast_open(&amp; DAT_00412800, <span class=\"supfact\">param_1</span>, &amp;\n                 PTR_FUN_0040d200);\n  DAT_004128b0 = <span class=\"supfact\">param_2</span>;\n  _DAT_004128b8 = <span class=\"supfact\">param_3</span>;\n  DAT_004128c0 = <span class=\"supfact\">param_4</span>;\n  announcement_register_observer_callback(FUN_00406b16);\n  return;\n}", "code_t": "void broadcast_announcement_init(uint16_t <span class=\"supfact\">channel</span>,\n                                 clock_time_t <span class=\"supfact\">initial</span>,\n                                 clock_time_t <span class=\"supfact\">min</span>,\n                                 clock_time_t <span class=\"supfact\">max</span>) {\n  clock_time_t <span class=\"supfact\">max</span> - local;\n  clock_time_t <span class=\"supfact\">min</span> - local;\n  clock_time_t <span class=\"supfact\">initial</span> - local;\n  uint16_t <span class=\"supfact\">channel</span> - local;\n  broadcast_open(&amp; c.c, <span class=\"supfact\">channel</span>, &amp; broadcast_callbacks);\n  c.initial_interval = <span class=\"supfact\">initial</span>;\n  c.min_interval = <span class=\"supfact\">min</span>;\n  c.max_interval = <span class=\"supfact\">max</span>;\n  announcement_register_observer_callback(new_announcement);\n  return;\n}", "var": [{"name": "param_1", "type": "uint16_t", "pred_name": "channel", "ref_name": "channel", "ref_type": "uint16_t"}, {"name": "param_2", "type": "clock_time_t", "pred_name": "initial", "ref_name": "initial", "ref_type": "clock_time_t"}, {"name": "param_3", "type": "clock_time_t", "pred_name": "min", "ref_name": "min", "ref_type": "clock_time_t"}, {"name": "param_4", "type": "clock_time_t", "pred_name": "max", "ref_name": "max", "ref_type": "clock_time_t"}], "body_in_train": false}, {"repo_owner": "MasahikoSawada", "repo_name": "postgresql", "path": "MasahikoSawada/postgresql/75c5131b73263cfc9c49f79542f041b1b393bbadca2a01e19a7077a5df2fca38", "path_in_repo": "MasahikoSawada/postgresql//src/backend/utils/mb/conversion_procs/utf8_and_iso8859/utf8_and_iso8859.so", "objdump": "000000000000118c <iso8859_to_utf8>:\n    118c:\t55                   \tpush   %rbp\n    118d:\t48 89 e5             \tmov    %rsp,%rbp\n    1190:\t53                   \tpush   %rbx\n    1191:\t48 83 ec 38          \tsub    $0x38,%rsp\n    1195:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    1199:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    119d:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    11a1:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n    11a4:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    11a8:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n    11ac:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    11b0:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    11b4:\t48 8b 40 50          \tmov    0x50(%rax),%rax\n    11b8:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    11bc:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    11c0:\t48 8b 40 60          \tmov    0x60(%rax),%rax\n    11c4:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n    11c7:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    11cb:\t48 8b 40 60          \tmov    0x60(%rax),%rax\n    11cf:\t89 c2                \tmov    %eax,%edx\n    11d1:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    11d5:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    11d9:\t89 c6                \tmov    %eax,%esi\n    11db:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    11df:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    11e3:\t41 b8 06 00 00 00    \tmov    $0x6,%r8d\n    11e9:\tb9 ff ff ff ff       \tmov    $0xffffffff,%ecx\n    11ee:\t89 c7                \tmov    %eax,%edi\n    11f0:\te8 6b fe ff ff       \tcall   1060 <check_encoding_conversion_args@plt>\n    11f5:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n    11fc:\teb 7c                \tjmp    127a <iso8859_to_utf8+0xee>\n    11fe:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    1201:\t48 63 d0             \tmovslq %eax,%rdx\n    1204:\t48 89 d0             \tmov    %rdx,%rax\n    1207:\t48 01 c0             \tadd    %rax,%rax\n    120a:\t48 01 d0             \tadd    %rdx,%rax\n    120d:\t48 c1 e0 03          \tshl    $0x3,%rax\n    1211:\t48 89 c2             \tmov    %rax,%rdx\n    1214:\t48 8d 05 e5 7a 00 00 \tlea    0x7ae5(%rip),%rax        # 8d00 <maps>\n    121b:\t8b 14 02             \tmov    (%rdx,%rax,1),%edx\n    121e:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n    1221:\t39 c2                \tcmp    %eax,%edx\n    1223:\t75 51                \tjne    1276 <iso8859_to_utf8+0xea>\n    1225:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    1228:\t48 63 d0             \tmovslq %eax,%rdx\n    122b:\t48 89 d0             \tmov    %rdx,%rax\n    122e:\t48 01 c0             \tadd    %rax,%rax\n    1231:\t48 01 d0             \tadd    %rdx,%rax\n    1234:\t48 c1 e0 03          \tshl    $0x3,%rax\n    1238:\t48 89 c2             \tmov    %rax,%rdx\n    123b:\t48 8d 05 c6 7a 00 00 \tlea    0x7ac6(%rip),%rax        # 8d08 <maps+0x8>\n    1242:\t48 8b 0c 02          \tmov    (%rdx,%rax,1),%rcx\n    1246:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    124a:\t8b 75 d4             \tmov    -0x2c(%rbp),%esi\n    124d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1251:\t8b 7d e8             \tmov    -0x18(%rbp),%edi\n    1254:\t57                   \tpush   %rdi\n    1255:\t6a 00                \tpush   $0x0\n    1257:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    125d:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    1263:\t48 89 c7             \tmov    %rax,%rdi\n    1266:\te8 05 fe ff ff       \tcall   1070 <LocalToUtf@plt>\n    126b:\t48 83 c4 10          \tadd    $0x10,%rsp\n    126f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1274:\teb 67                \tjmp    12dd <iso8859_to_utf8+0x151>\n    1276:\t83 45 ec 01          \taddl   $0x1,-0x14(%rbp)\n    127a:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    127d:\t83 f8 0c             \tcmp    $0xc,%eax\n    1280:\t0f 86 78 ff ff ff    \tjbe    11fe <iso8859_to_utf8+0x72>\n    1286:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    128c:\t48 8d 0d ed 5b 00 00 \tlea    0x5bed(%rip),%rcx        # 6e80 <__func__.5833>\n    1293:\tba 78 00 00 00       \tmov    $0x78,%edx\n    1298:\t48 8d 35 61 5b 00 00 \tlea    0x5b61(%rip),%rsi        # 6e00 <iso8859_16_to_unicode_tree_table+0x400>\n    129f:\tbf 14 00 00 00       \tmov    $0x14,%edi\n    12a4:\te8 87 fd ff ff       \tcall   1030 <errstart@plt>\n    12a9:\t84 c0                \ttest   %al,%al\n    12ab:\t74 30                \tje     12dd <iso8859_to_utf8+0x151>\n    12ad:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n    12b0:\t89 c6                \tmov    %eax,%esi\n    12b2:\t48 8d 3d 5f 5b 00 00 \tlea    0x5b5f(%rip),%rdi        # 6e18 <iso8859_16_to_unicode_tree_table+0x418>\n    12b9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    12be:\te8 7d fd ff ff       \tcall   1040 <errmsg@plt>\n    12c3:\t89 c3                \tmov    %eax,%ebx\n    12c5:\tbf 28 0a 00 00       \tmov    $0xa28,%edi\n    12ca:\te8 b1 fd ff ff       \tcall   1080 <errcode@plt>\n    12cf:\t89 de                \tmov    %ebx,%esi\n    12d1:\t89 c7                \tmov    %eax,%edi\n    12d3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    12d8:\te8 73 fd ff ff       \tcall   1050 <errfinish@plt>\n    12dd:\t48 8b 5d f8          \tmov    -0x8(%rbp),%rbx\n    12e1:\tc9                   \tleave  \n    12e2:\tc3                   \tret    ", "code_s": "undefined8 iso8859_to_utf8(long <span class=\"supfact\">param_1</span>) {\n  ulong uVar1;\n  undefined8 uVar2;\n  ulong uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined8 <span class=\"supfact\">uVar6</span>;\n  uint <span class=\"supfact\">local_1c</span>;\n  uVar1 = *(ulong *)(<span class=\"supfact\">param_1</span> + Number);\n  <span class=\"supfact\">uVar6</span> = *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n  uVar2 = *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n  uVar3 = *(ulong *)(<span class=\"supfact\">param_1</span> + Number);\n  check_encoding_conversion_args(\n      *(ulong *)(<span class=\"supfact\">param_1</span> + Number) & amp;\n      Number, *(ulong *)(<span class=\"supfact\">param_1</span> + Number) & amp;\n      Number, *(ulong *)(<span class=\"supfact\">param_1</span> + Number) & amp;\n      Number, Number, Number);\n  <span class=\"supfact\">local_1c</span> = Number;\n  while (true) {\n    if (Number & lt; <span class=\"supfact\">local_1c</span>) {\n      <span class=\"supfact\">uVar6</span> = errstart(Number, String, Number, String, Number);\n      if ((char)<span class=\"supfact\">uVar6</span> != String) {\n        uVar4 = errmsg(String, uVar1 & amp; Number);\n        uVar5 = errcode(Number);\n        <span class=\"supfact\">uVar6</span> = errfinish(uVar5, uVar4);\n      }\n      return <span class=\"supfact\">uVar6</span>;\n    }\n    if (*(int *)(&amp; DAT_00108d00 + (long)(int)<span class=\"supfact\">local_1c</span> *\n                                          Number) == (int)uVar1)\n      break;\n    <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number;\n  }\n  LocalToUtf(\n      <span class=\"supfact\">uVar6</span>, uVar3 & amp;\n      Number, uVar2,\n      (&amp;\n       PTR_PTR_DAT_00108d08)[(long)(int)<span class=\"supfact\">local_1c</span> * Number],\n      Number, Number, Number, uVar1 & amp;\n      Number);\n  return Number;\n}", "code_t": "Datum iso8859_to_utf8(FunctionCallInfo <span class=\"supfact\">fcinfo</span>) {\n  FmgrInfo *pFVar1;\n  FmgrInfo *pFVar2;\n  fmNodePtr pNVar3;\n  FmgrInfo *pFVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  Datum <span class=\"supfact\">DVar7</span>;\n  FunctionCallInfo <span class=\"supfact\">fcinfo</span> - local;\n  int len;\n  uchar *dest;\n  uchar *src;\n  int encoding;\n  int <span class=\"supfact\">i</span>;\n  pFVar1 = <span class=\"supfact\">fcinfo</span>[Number].flinfo;\n  pFVar2 = <span class=\"supfact\">fcinfo</span>[Number].flinfo;\n  pNVar3 = <span class=\"supfact\">fcinfo</span>[Number].resultinfo;\n  pFVar4 = <span class=\"supfact\">fcinfo</span>[Number].flinfo;\n  check_encoding_conversion_args(\n      (ulong)<span class=\"supfact\">fcinfo</span>[Number].flinfo & amp;\n      Number, (ulong)<span class=\"supfact\">fcinfo</span>[Number].resultinfo & amp;\n      Number, (ulong)<span class=\"supfact\">fcinfo</span>[Number].flinfo & amp;\n      Number, Number, Number);\n  <span class=\"supfact\">i</span> = Number;\n  while (true) {\n    if (Number & lt; (uint)<span class=\"supfact\">i</span>) {\n      <span class=\"supfact\">DVar7</span> = errstart(Number, String, Number, String, Number);\n      if ((char)<span class=\"supfact\">DVar7</span> != String) {\n        uVar5 = errmsg(String, (ulong)pFVar1 & amp; Number);\n        uVar6 = errcode(Number);\n        <span class=\"supfact\">DVar7</span> = errfinish(uVar6, uVar5);\n      }\n      return <span class=\"supfact\">DVar7</span>;\n    }\n    if (maps[<span class=\"supfact\">i</span>].encoding == (pg_enc)pFVar1)\n      break;\n    <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n  }\n  LocalToUtf(pFVar2, (ulong)pFVar4 & amp;\n             Number, pNVar3, maps[<span class=\"supfact\">i</span>].map1, Number, Number,\n             Number, (ulong)pFVar1 & amp;\n             Number);\n  return Number;\n}", "var": [{"name": "param_1", "type": "FunctionCallInfo", "pred_name": "fcinfo", "ref_name": "fcinfo", "ref_type": "FunctionCallInfo"}, {"name": "uVar6", "type": "disappear", "pred_name": "", "ref_name": "DVar7", "ref_type": "Datum"}, {"name": "local_1c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "0000000000013c0a <loc_set_file>:\n   13c0a:\t55                   \tpush   %rbp\n   13c0b:\t48 89 e5             \tmov    %rsp,%rbp\n   13c0e:\t48 83 ec 20          \tsub    $0x20,%rsp\n   13c12:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   13c16:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n   13c19:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   13c20:\t00 00 \n   13c22:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   13c26:\t31 c0                \txor    %eax,%eax\n   13c28:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n   13c2d:\t75 2d                \tjne    13c5c <loc_set_file+0x52>\n   13c2f:\t48 8b 05 2a 94 01 00 \tmov    0x1942a(%rip),%rax        # 2d060 <cur_loc>\n   13c36:\t8b 00                \tmov    (%rax),%eax\n   13c38:\t83 f8 02             \tcmp    $0x2,%eax\n   13c3b:\t74 1f                \tje     13c5c <loc_set_file+0x52>\n   13c3d:\t48 8d 0d 7c ef 00 00 \tlea    0xef7c(%rip),%rcx        # 22bc0 <__PRETTY_FUNCTION__.15576>\n   13c44:\tba 8d 00 00 00       \tmov    $0x8d,%edx\n   13c49:\t48 8d 35 c0 ee 00 00 \tlea    0xeec0(%rip),%rsi        # 22b10 <__PRETTY_FUNCTION__.14565+0x20>\n   13c50:\t48 8d 3d f1 ee 00 00 \tlea    0xeef1(%rip),%rdi        # 22b48 <__PRETTY_FUNCTION__.14565+0x58>\n   13c57:\te8 34 47 ff ff       \tcall   8390 <__assert_fail@plt>\n   13c5c:\t48 8b 05 fd 93 01 00 \tmov    0x193fd(%rip),%rax        # 2d060 <cur_loc>\n   13c63:\tc7 00 02 00 00 00    \tmovl   $0x2,(%rax)\n   13c69:\t48 8b 05 f0 93 01 00 \tmov    0x193f0(%rip),%rax        # 2d060 <cur_loc>\n   13c70:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n   13c73:\t89 50 04             \tmov    %edx,0x4(%rax)\n   13c76:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n   13c7b:\t74 0f                \tje     13c8c <loc_set_file+0x82>\n   13c7d:\t48 8b 05 dc 93 01 00 \tmov    0x193dc(%rip),%rax        # 2d060 <cur_loc>\n   13c84:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n   13c88:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n   13c8c:\t90                   \tnop\n   13c8d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   13c91:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n   13c98:\t00 00 \n   13c9a:\t74 05                \tje     13ca1 <loc_set_file+0x97>\n   13c9c:\te8 ef 45 ff ff       \tcall   8290 <__stack_chk_fail@plt>\n   13ca1:\tc9                   \tleave  \n   13ca2:\tc3                   \tret    ", "code_s": "void loc_set_file(long <span class=\"supfact\">param_1</span>,\n                  undefined4 <span class=\"supfact\">param_2</span>) {\n  long lVar1;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  if ((<span class=\"supfact\">param_1</span> == Number) & amp; &amp;\n      (*(int *)PTR_DAT_0012d060 != Number)) {\n    __assert_fail(String, String, Number, String);\n  }\n  *(undefined4 *)PTR_DAT_0012d060 = Number;\n  *(undefined4 *)(PTR_DAT_0012d060 + Number) = <span class=\"supfact\">param_2</span>;\n  if (<span class=\"supfact\">param_1</span> != Number) {\n    *(long *)(PTR_DAT_0012d060 + Number) = <span class=\"supfact\">param_1</span>;\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "code_t": "void loc_set_file(char *<span class=\"supfact\">fname</span>, int <span class=\"supfact\">lno</span>) {\n  long lVar1;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">lno</span> - local;\n  char *<span class=\"supfact\">fname</span> - local;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  if ((<span class=\"supfact\">fname</span> == (char *)Number) & amp; &amp;\n      (cur_loc - &gt; kind != MODULE_INIT_MACHINE)) {\n    __assert_fail(String, String, Number, String);\n  }\n  cur_loc - &gt;\n  kind = MODULE_INIT_MACHINE;\n  cur_loc - &gt;\n  num = <span class=\"supfact\">lno</span>;\n  if (<span class=\"supfact\">fname</span> != (char *)Number) {\n    cur_loc - &gt;\n    ptr = <span class=\"supfact\">fname</span>;\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "link_stats * *", "pred_name": "stats", "ref_name": "fname", "ref_type": "char * *"}, {"name": "param_2", "type": "disappear", "pred_name": "", "ref_name": "lno", "ref_type": "int"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "indicolite", "repo_name": "kcolnas", "path": "indicolite/kcolnas/063cfa2fef0cfbd9f08068e73d8d398c000eb329738ef91d6c9feb12c11d0efc", "path_in_repo": "indicolite/kcolnas/src/libsanlock_client.so.1.0", "objdump": "0000000000004756 <sanlock_request>:\n    4756:\t55                   \tpush   %rbp\n    4757:\t48 89 e5             \tmov    %rsp,%rbp\n    475a:\t48 83 ec 20          \tsub    $0x20,%rsp\n    475e:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n    4761:\t89 75 e8             \tmov    %esi,-0x18(%rbp)\n    4764:\t48 89 55 e0          \tmov    %rdx,-0x20(%rbp)\n    4768:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n    476d:\t75 0a                \tjne    4779 <sanlock_request+0x23>\n    476f:\tb8 ea ff ff ff       \tmov    $0xffffffea,%eax\n    4774:\te9 f5 00 00 00       \tjmp    486e <sanlock_request+0x118>\n    4779:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    477d:\t8b 40 7c             \tmov    0x7c(%rax),%eax\n    4780:\t69 c0 10 04 00 00    \timul   $0x410,%eax,%eax\n    4786:\t83 e8 80             \tsub    $0xffffff80,%eax\n    4789:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n    478c:\t48 8d 45 f4          \tlea    -0xc(%rbp),%rax\n    4790:\t48 89 c7             \tmov    %rax,%rdi\n    4793:\te8 2d db ff ff       \tcall   22c5 <connect_socket>\n    4798:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    479b:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    479f:\t79 08                \tjns    47a9 <sanlock_request+0x53>\n    47a1:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    47a4:\te9 c5 00 00 00       \tjmp    486e <sanlock_request+0x118>\n    47a9:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    47ac:\t8b 75 e8             \tmov    -0x18(%rbp),%esi\n    47af:\t8b 4d f8             \tmov    -0x8(%rbp),%ecx\n    47b2:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n    47b5:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    47bb:\t41 89 f0             \tmov    %esi,%r8d\n    47be:\tbe 0b 00 00 00       \tmov    $0xb,%esi\n    47c3:\t89 c7                \tmov    %eax,%edi\n    47c5:\te8 b6 db ff ff       \tcall   2380 <send_header>\n    47ca:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    47cd:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    47d1:\t0f 88 89 00 00 00    \tjs     4860 <sanlock_request+0x10a>\n    47d7:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    47da:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n    47de:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    47e3:\tba 80 00 00 00       \tmov    $0x80,%edx\n    47e8:\t89 c7                \tmov    %eax,%edi\n    47ea:\te8 39 dc ff ff       \tcall   2428 <send_data>\n    47ef:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    47f2:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    47f6:\t79 0e                \tjns    4806 <sanlock_request+0xb0>\n    47f8:\te8 63 d8 ff ff       \tcall   2060 <__errno_location@plt>\n    47fd:\t8b 00                \tmov    (%rax),%eax\n    47ff:\tf7 d8                \tneg    %eax\n    4801:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    4804:\teb 5b                \tjmp    4861 <sanlock_request+0x10b>\n    4806:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    480a:\t8b 40 7c             \tmov    0x7c(%rax),%eax\n    480d:\t89 c2                \tmov    %eax,%edx\n    480f:\t48 89 d0             \tmov    %rdx,%rax\n    4812:\t48 c1 e0 06          \tshl    $0x6,%rax\n    4816:\t48 01 d0             \tadd    %rdx,%rax\n    4819:\t48 c1 e0 04          \tshl    $0x4,%rax\n    481d:\t48 89 c2             \tmov    %rax,%rdx\n    4820:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    4824:\t48 8d b0 80 00 00 00 \tlea    0x80(%rax),%rsi\n    482b:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    482e:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    4833:\t89 c7                \tmov    %eax,%edi\n    4835:\te8 ee db ff ff       \tcall   2428 <send_data>\n    483a:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    483d:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    4841:\t79 0e                \tjns    4851 <sanlock_request+0xfb>\n    4843:\te8 18 d8 ff ff       \tcall   2060 <__errno_location@plt>\n    4848:\t8b 00                \tmov    (%rax),%eax\n    484a:\tf7 d8                \tneg    %eax\n    484c:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    484f:\teb 10                \tjmp    4861 <sanlock_request+0x10b>\n    4851:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    4854:\t89 c7                \tmov    %eax,%edi\n    4856:\te8 c9 dc ff ff       \tcall   2524 <recv_result>\n    485b:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    485e:\teb 01                \tjmp    4861 <sanlock_request+0x10b>\n    4860:\t90                   \tnop\n    4861:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    4864:\t89 c7                \tmov    %eax,%edi\n    4866:\te8 95 d8 ff ff       \tcall   2100 <close@plt>\n    486b:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    486e:\tc9                   \tleave  \n    486f:\tc3                   \tret    ", "code_s": "int sanlock_request(undefined4 <span class=\"supfact\">param_1</span>,\n                    undefined4 <span class=\"supfact\">param_2</span>,\n                    long <span class=\"supfact\">param_3</span>) {\n  int *<span class=\"supfact\">piVar1</span>;\n  int <span class=\"supfact\">local_14</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  if (<span class=\"supfact\">param_3</span> == Number) {\n    <span class=\"supfact\">local_c</span> = -Number;\n  } else {\n    <span class=\"supfact\">local_10</span> =\n        *(int *)(<span class=\"supfact\">param_3</span> + Number) * Number + Number;\n    <span class=\"supfact\">local_c</span> = FUN_001022c5(&amp; <span class=\"supfact\">local_14</span>);\n    if (-Number & lt; <span class=\"supfact\">local_c</span>) {\n      <span class=\"supfact\">local_c</span> = FUN_00102380(\n          <span class=\"supfact\">local_14</span>, Number, <span class=\"supfact\">param_1</span>,\n          <span class=\"supfact\">local_10</span>, <span class=\"supfact\">param_2</span>, Number);\n      if (-Number & lt; <span class=\"supfact\">local_c</span>) {\n        <span class=\"supfact\">local_c</span> = FUN_00102428(\n            <span class=\"supfact\">local_14</span>, <span class=\"supfact\">param_3</span>, Number, Number);\n        if (<span class=\"supfact\">local_c</span> & lt; Number) {\n          <span class=\"supfact\">piVar1</span> = __errno_location();\n          <span class=\"supfact\">local_c</span> = -*<span class=\"supfact\">piVar1</span>;\n        } else {\n          <span class=\"supfact\">local_c</span> = FUN_00102428(\n              <span class=\"supfact\">local_14</span>, <span class=\"supfact\">param_3</span> + Number,\n              (ulong) * (uint *)(<span class=\"supfact\">param_3</span> + Number) * Number,\n              Number);\n          if (<span class=\"supfact\">local_c</span> & lt; Number) {\n            <span class=\"supfact\">piVar1</span> = __errno_location();\n            <span class=\"supfact\">local_c</span> = -*<span class=\"supfact\">piVar1</span>;\n          } else {\n            <span class=\"supfact\">local_c</span> = FUN_00102524(<span class=\"supfact\">local_14</span>);\n          }\n        }\n      }\n      close(<span class=\"supfact\">local_14</span>);\n    }\n  }\n  return <span class=\"supfact\">local_c</span>;\n}", "code_t": "int sanlock_request(uint32_t <span class=\"supfact\">flags</span>,\n                    uint32_t <span class=\"supfact\">force_mode</span>,\n                    sanlk_resource *<span class=\"supfact\">res</span>) {\n  ssize_t sVar1;\n  int *piVar2;\n  sanlk_resource *<span class=\"supfact\">res</span> - local;\n  uint32_t <span class=\"supfact\">force_mode</span> - local;\n  uint32_t <span class=\"supfact\">flags</span> - local;\n  int <span class=\"supfact\">fd</span>;\n  int <span class=\"supfact\">datalen</span>;\n  int <span class=\"supfact\">rv</span>;\n  if (<span class=\"supfact\">res</span> == (sanlk_resource *)Number) {\n    <span class=\"supfact\">rv</span> = -Number;\n  } else {\n    <span class=\"supfact\">datalen</span> = <span class=\"supfact\">res</span> - &gt;\n    num_disks *Number + Number;\n    <span class=\"supfact\">rv</span> = connect_socket(&amp; <span class=\"supfact\">fd</span>);\n    if (-Number & lt; <span class=\"supfact\">rv</span>) {\n      <span class=\"supfact\">rv</span> = send_header(\n          <span class=\"supfact\">fd</span>, Number, <span class=\"supfact\">flags</span>,\n          <span class=\"supfact\">datalen</span>, <span class=\"supfact\">force_mode</span>, Number);\n      if (-Number & lt; <span class=\"supfact\">rv</span>) {\n        sVar1 =\n            send_data(<span class=\"supfact\">fd</span>, <span class=\"supfact\">res</span>, Number, Number);\n        <span class=\"supfact\">rv</span> = (int)sVar1;\n        if (<span class=\"supfact\">rv</span> & lt; Number) {\n          piVar2 = __errno_location();\n          <span class=\"supfact\">rv</span> = -*piVar2;\n        } else {\n          sVar1 = send_data(<span class=\"supfact\">fd</span>, <span class=\"supfact\">res</span> + Number,\n                            (ulong)<span class=\"supfact\">res</span> - &gt;\n                            num_disks * Number, Number);\n          <span class=\"supfact\">rv</span> = (int)sVar1;\n          if (<span class=\"supfact\">rv</span> & lt; Number) {\n            piVar2 = __errno_location();\n            <span class=\"supfact\">rv</span> = -*piVar2;\n          } else {\n            <span class=\"supfact\">rv</span> = recv_result(<span class=\"supfact\">fd</span>);\n          }\n        }\n      }\n      close(<span class=\"supfact\">fd</span>);\n    }\n  }\n  return <span class=\"supfact\">rv</span>;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "af", "ref_name": "flags", "ref_type": "uint32_t"}, {"name": "param_2", "type": "int", "pred_name": "len", "ref_name": "force_mode", "ref_type": "uint32_t"}, {"name": "param_3", "type": "void * *", "pred_name": "addr", "ref_name": "res", "ref_type": "sanlk_resource * *"}, {"name": "piVar1", "type": "int * *", "pred_name": "piVar1", "ref_name": "", "ref_type": "disappear"}, {"name": "local_14", "type": "int", "pred_name": "__unk__", "ref_name": "fd", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "err", "ref_name": "datalen", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "__unk__", "ref_name": "rv", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "jmesmon", "repo_name": "numactl", "path": "jmesmon/numactl/2d7204d82378d0a3875b54015a7ff4c18475b25519a77d2104db0d0b044ff419", "path_in_repo": "jmesmon/numactl//libnuma.so.1", "objdump": "0000000000006f7a <numa_parse_nodestring_all>:\n    6f7a:\t55                   \tpush   %rbp\n    6f7b:\t48 89 e5             \tmov    %rsp,%rbp\n    6f7e:\t48 83 ec 10          \tsub    $0x10,%rsp\n    6f82:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    6f86:\t48 8d 05 03 55 00 00 \tlea    0x5503(%rip),%rax        # c490 <numa_possible_nodes_ptr>\n    6f8d:\t48 8b 10             \tmov    (%rax),%rdx\n    6f90:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    6f94:\t48 89 d6             \tmov    %rdx,%rsi\n    6f97:\t48 89 c7             \tmov    %rax,%rdi\n    6f9a:\te8 81 fc ff ff       \tcall   6c20 <__numa_parse_nodestring>\n    6f9f:\tc9                   \tleave  \n    6fa0:\tc3                   \tret    ", "code_s": "void numa_parse_nodestring_all(undefined8 <span class=\"supfact\">param_1</span>) {\n  FUN_00106c20(<span class=\"supfact\">param_1</span>, DAT_0010c490);\n  return;\n}", "code_t": "bitmask *numa_parse_nodestring_all(char *<span class=\"supfact\">s</span>) {\n  bitmask *pbVar1;\n  char *<span class=\"supfact\">s</span> - local;\n  pbVar1 = __numa_parse_nodestring(<span class=\"supfact\">s</span>, numa_possible_nodes_ptr);\n  return pbVar1;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "s", "ref_name": "s", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000001b6e2 <qerror_format>:\n   1b6e2:\t55                   \tpush   %rbp\n   1b6e3:\t48 89 e5             \tmov    %rsp,%rbp\n   1b6e6:\t48 83 ec 30          \tsub    $0x30,%rsp\n   1b6ea:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n   1b6ee:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n   1b6f2:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   1b6f9:\t00 00 \n   1b6fb:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   1b6ff:\t31 c0                \txor    %eax,%eax\n   1b701:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n   1b708:\t00 \n   1b709:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n   1b710:\teb 4a                \tjmp    1b75c <qerror_format+0x7a>\n   1b712:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n   1b715:\t48 98                \tcltq   \n   1b717:\t48 c1 e0 04          \tshl    $0x4,%rax\n   1b71b:\t48 89 c2             \tmov    %rax,%rdx\n   1b71e:\t48 8d 05 63 0e 01 00 \tlea    0x10e63(%rip),%rax        # 2c588 <qerror_table+0x8>\n   1b725:\t48 8b 04 02          \tmov    (%rdx,%rax,1),%rax\n   1b729:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n   1b72d:\t48 89 d6             \tmov    %rdx,%rsi\n   1b730:\t48 89 c7             \tmov    %rax,%rdi\n   1b733:\te8 48 cd fe ff       \tcall   8480 <strcmp@plt>\n   1b738:\t85 c0                \ttest   %eax,%eax\n   1b73a:\t75 1c                \tjne    1b758 <qerror_format+0x76>\n   1b73c:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n   1b73f:\t48 98                \tcltq   \n   1b741:\t48 c1 e0 04          \tshl    $0x4,%rax\n   1b745:\t48 89 c2             \tmov    %rax,%rdx\n   1b748:\t48 8d 05 31 0e 01 00 \tlea    0x10e31(%rip),%rax        # 2c580 <qerror_table>\n   1b74f:\t48 01 d0             \tadd    %rdx,%rax\n   1b752:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n   1b756:\teb 20                \tjmp    1b778 <qerror_format+0x96>\n   1b758:\t83 45 ec 01          \taddl   $0x1,-0x14(%rbp)\n   1b75c:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n   1b75f:\t48 98                \tcltq   \n   1b761:\t48 c1 e0 04          \tshl    $0x4,%rax\n   1b765:\t48 89 c2             \tmov    %rax,%rdx\n   1b768:\t48 8d 05 19 0e 01 00 \tlea    0x10e19(%rip),%rax        # 2c588 <qerror_table+0x8>\n   1b76f:\t48 8b 04 02          \tmov    (%rdx,%rax,1),%rax\n   1b773:\t48 85 c0             \ttest   %rax,%rax\n   1b776:\t75 9a                \tjne    1b712 <qerror_format+0x30>\n   1b778:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n   1b77c:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n   1b780:\t48 89 d6             \tmov    %rdx,%rsi\n   1b783:\t48 89 c7             \tmov    %rax,%rdi\n   1b786:\te8 67 fe ff ff       \tcall   1b5f2 <qerror_format_desc>\n   1b78b:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n   1b78f:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n   1b796:\t00 00 \n   1b798:\t74 05                \tje     1b79f <qerror_format+0xbd>\n   1b79a:\te8 f1 ca fe ff       \tcall   8290 <__stack_chk_fail@plt>\n   1b79f:\tc9                   \tleave  \n   1b7a0:\tc3                   \tret    ", "code_s": "void qerror_format(char *<span class=\"supfact\">param_1</span>,\n                   undefined8 <span class=\"supfact\">param_2</span>) {\n  long lVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">local_1c</span>;\n  undefined **<span class=\"supfact\">local_18</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_18</span> = (undefined **)Number;\n  <span class=\"supfact\">local_1c</span> = Number;\n  do { if ( ( &amp; PTR_s_ {\n      _ &#x27;\n      class &#x27; : _ &#x27;\n      BadBusForDevice &#x27;\n      , _ &#x27; d_0012c588 ) [ ( long ) <span class=\"supfact\">local_1c</span> * Number ] == ( undefined * ) Number ) {\n      LAB_0011b778:\n        FUN_0011b5f2(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">local_18</span>);\n        if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n          __stack_chk_fail();\n        }\n        return;\n      } <span class=\"supfact\">iVar2</span> = strcmp ( ( &amp; PTR_s_ {\n        _ &#x27;\n        class &#x27; : _ &#x27;\n        BadBusForDevice &#x27;\n        , _ &#x27; d_0012c588 ) [ ( long ) <span class=\"supfact\">local_1c</span> * Number ] , <span class=\"supfact\">param_1</span> ) ;\n        if (<span class=\"supfact\">iVar2</span> == Number) {\n          <span class=\"supfact\">local_18</span> = &amp;\n          PTR_s_Device_ &#x27;\n          % (device) & #x27;\n          _can &#x27;\n          t_go_on_a_0012c580 + (long)<span class=\"supfact\">local_1c</span> *Number;\n          goto LAB_0011b778;\n        }\n        <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number; } while ( true ) ; }", "code_t": "QString *qerror_format(char *<span class=\"supfact\">fmt</span>,\n                       QDict *<span class=\"supfact\">error</span>) {\n  long lVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  QString *pQVar3;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  QDict *<span class=\"supfact\">error</span> - local;\n  char *<span class=\"supfact\">fmt</span> - local;\n  int <span class=\"supfact\">i</span>;\n  QErrorStringTable *<span class=\"supfact\">entry</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">entry</span> = (QErrorStringTable *)Number;\n  <span class=\"supfact\">i</span> = Number;\n  do {\n    if (qerror_table[<span class=\"supfact\">i</span>].error_fmt == (char *)Number) {\n    LAB_0011b778:\n      pQVar3 = qerror_format_desc(<span class=\"supfact\">error</span>, <span class=\"supfact\">entry</span>);\n      if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n        __stack_chk_fail();\n      }\n      return pQVar3;\n    }\n    <span class=\"supfact\">iVar2</span> =\n        strcmp(qerror_table[<span class=\"supfact\">i</span>].error_fmt, <span class=\"supfact\">fmt</span>);\n    if (<span class=\"supfact\">iVar2</span> == Number) {\n      <span class=\"supfact\">entry</span> = qerror_table + <span class=\"supfact\">i</span>;\n      goto LAB_0011b778;\n    }\n    <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n  } while (true);\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "fmt", "ref_type": "char * *"}, {"name": "param_2", "type": "__unk__", "pred_name": "__unk__", "ref_name": "error", "ref_type": "QDict * *"}, {"name": "iVar2", "type": "int", "pred_name": "iVar2", "ref_name": "iVar2", "ref_type": "int"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_1c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}, {"name": "local_18", "type": "__unk__", "pred_name": "__unk__", "ref_name": "entry", "ref_type": "QErrorStringTable * *"}], "body_in_train": false}, {"repo_owner": "DennisKofflard", "repo_name": "Trident_i2c_controller", "path": "DennisKofflard/Trident_i2c_controller/7f3b1341443e0a8ff448c9a5c1a21c28b9aacb88b829d641d7994be27df60654", "path_in_repo": "DennisKofflard/Trident_i2c_controller/congatec_cgoslib/Lx/libcgos.so", "objdump": "00000000000033fb <OsaMemFree>:\n    33fb:\t55                   \tpush   %rbp\n    33fc:\t48 89 e5             \tmov    %rsp,%rbp\n    33ff:\t48 83 ec 10          \tsub    $0x10,%rsp\n    3403:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    3407:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    340b:\t48 89 c7             \tmov    %rax,%rdi\n    340e:\te8 3d fc ff ff       \tcall   3050 <free@plt>\n    3413:\t90                   \tnop\n    3414:\tc9                   \tleave  \n    3415:\tc3                   \tret    ", "code_s": "void OsaMemFree(void *<span class=\"supfact\">param_1</span>) {\n  free(<span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "void OsaMemFree(void *<span class=\"supfact\">p</span>) {\n  void *<span class=\"supfact\">p</span> - local;\n  free(<span class=\"supfact\">p</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "void * *", "pred_name": "__unk__", "ref_name": "p", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000001b6e2 <qerror_format>:\n   1b6e2:\t55                   \tpush   %rbp\n   1b6e3:\t48 89 e5             \tmov    %rsp,%rbp\n   1b6e6:\t48 83 ec 30          \tsub    $0x30,%rsp\n   1b6ea:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n   1b6ee:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n   1b6f2:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   1b6f9:\t00 00 \n   1b6fb:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   1b6ff:\t31 c0                \txor    %eax,%eax\n   1b701:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n   1b708:\t00 \n   1b709:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n   1b710:\teb 4a                \tjmp    1b75c <qerror_format+0x7a>\n   1b712:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n   1b715:\t48 98                \tcltq   \n   1b717:\t48 c1 e0 04          \tshl    $0x4,%rax\n   1b71b:\t48 89 c2             \tmov    %rax,%rdx\n   1b71e:\t48 8d 05 63 0e 01 00 \tlea    0x10e63(%rip),%rax        # 2c588 <qerror_table+0x8>\n   1b725:\t48 8b 04 02          \tmov    (%rdx,%rax,1),%rax\n   1b729:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n   1b72d:\t48 89 d6             \tmov    %rdx,%rsi\n   1b730:\t48 89 c7             \tmov    %rax,%rdi\n   1b733:\te8 48 cd fe ff       \tcall   8480 <strcmp@plt>\n   1b738:\t85 c0                \ttest   %eax,%eax\n   1b73a:\t75 1c                \tjne    1b758 <qerror_format+0x76>\n   1b73c:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n   1b73f:\t48 98                \tcltq   \n   1b741:\t48 c1 e0 04          \tshl    $0x4,%rax\n   1b745:\t48 89 c2             \tmov    %rax,%rdx\n   1b748:\t48 8d 05 31 0e 01 00 \tlea    0x10e31(%rip),%rax        # 2c580 <qerror_table>\n   1b74f:\t48 01 d0             \tadd    %rdx,%rax\n   1b752:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n   1b756:\teb 20                \tjmp    1b778 <qerror_format+0x96>\n   1b758:\t83 45 ec 01          \taddl   $0x1,-0x14(%rbp)\n   1b75c:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n   1b75f:\t48 98                \tcltq   \n   1b761:\t48 c1 e0 04          \tshl    $0x4,%rax\n   1b765:\t48 89 c2             \tmov    %rax,%rdx\n   1b768:\t48 8d 05 19 0e 01 00 \tlea    0x10e19(%rip),%rax        # 2c588 <qerror_table+0x8>\n   1b76f:\t48 8b 04 02          \tmov    (%rdx,%rax,1),%rax\n   1b773:\t48 85 c0             \ttest   %rax,%rax\n   1b776:\t75 9a                \tjne    1b712 <qerror_format+0x30>\n   1b778:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n   1b77c:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n   1b780:\t48 89 d6             \tmov    %rdx,%rsi\n   1b783:\t48 89 c7             \tmov    %rax,%rdi\n   1b786:\te8 67 fe ff ff       \tcall   1b5f2 <qerror_format_desc>\n   1b78b:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n   1b78f:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n   1b796:\t00 00 \n   1b798:\t74 05                \tje     1b79f <qerror_format+0xbd>\n   1b79a:\te8 f1 ca fe ff       \tcall   8290 <__stack_chk_fail@plt>\n   1b79f:\tc9                   \tleave  \n   1b7a0:\tc3                   \tret    ", "code_s": "void qerror_format(char *<span class=\"supfact\">param_1</span>,\n                   undefined8 <span class=\"supfact\">param_2</span>) {\n  long lVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">local_1c</span>;\n  undefined **<span class=\"supfact\">local_18</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_18</span> = (undefined **)Number;\n  <span class=\"supfact\">local_1c</span> = Number;\n  do { if ( ( &amp; PTR_s_ {\n      _ &#x27;\n      class &#x27; : _ &#x27;\n      BadBusForDevice &#x27;\n      , _ &#x27; d_0012c588 ) [ ( long ) <span class=\"supfact\">local_1c</span> * Number ] == ( undefined * ) Number ) {\n      LAB_0011b778:\n        FUN_0011b5f2(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">local_18</span>);\n        if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n          __stack_chk_fail();\n        }\n        return;\n      } <span class=\"supfact\">iVar2</span> = strcmp ( ( &amp; PTR_s_ {\n        _ &#x27;\n        class &#x27; : _ &#x27;\n        BadBusForDevice &#x27;\n        , _ &#x27; d_0012c588 ) [ ( long ) <span class=\"supfact\">local_1c</span> * Number ] , <span class=\"supfact\">param_1</span> ) ;\n        if (<span class=\"supfact\">iVar2</span> == Number) {\n          <span class=\"supfact\">local_18</span> = &amp;\n          PTR_s_Device_ &#x27;\n          % (device) & #x27;\n          _can &#x27;\n          t_go_on_a_0012c580 + (long)<span class=\"supfact\">local_1c</span> *Number;\n          goto LAB_0011b778;\n        }\n        <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number; } while ( true ) ; }", "code_t": "QString *qerror_format(char *<span class=\"supfact\">fmt</span>,\n                       QDict *<span class=\"supfact\">error</span>) {\n  long lVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  QString *pQVar3;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  QDict *<span class=\"supfact\">error</span> - local;\n  char *<span class=\"supfact\">fmt</span> - local;\n  int <span class=\"supfact\">i</span>;\n  QErrorStringTable *<span class=\"supfact\">entry</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">entry</span> = (QErrorStringTable *)Number;\n  <span class=\"supfact\">i</span> = Number;\n  do {\n    if (qerror_table[<span class=\"supfact\">i</span>].error_fmt == (char *)Number) {\n    LAB_0011b778:\n      pQVar3 = qerror_format_desc(<span class=\"supfact\">error</span>, <span class=\"supfact\">entry</span>);\n      if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n        __stack_chk_fail();\n      }\n      return pQVar3;\n    }\n    <span class=\"supfact\">iVar2</span> =\n        strcmp(qerror_table[<span class=\"supfact\">i</span>].error_fmt, <span class=\"supfact\">fmt</span>);\n    if (<span class=\"supfact\">iVar2</span> == Number) {\n      <span class=\"supfact\">entry</span> = qerror_table + <span class=\"supfact\">i</span>;\n      goto LAB_0011b778;\n    }\n    <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n  } while (true);\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "fmt", "ref_type": "char * *"}, {"name": "param_2", "type": "__unk__", "pred_name": "__unk__", "ref_name": "error", "ref_type": "QDict * *"}, {"name": "iVar2", "type": "int", "pred_name": "iVar2", "ref_name": "iVar2", "ref_type": "int"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_1c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}, {"name": "local_18", "type": "__unk__", "pred_name": "__unk__", "ref_name": "entry", "ref_type": "QErrorStringTable * *"}], "body_in_train": false}, {"repo_owner": "echoline", "repo_name": "UnGUI", "path": "echoline/UnGUI/2c7bac68e57bf7a0ae1b8148a2917bfe015ef6527389a1229fe2db8ae0dd02dd", "path_in_repo": "echoline/UnGUI//ungui", "objdump": "00000000004050e0 <newdata>:\n  4050e0:\t55                   \tpush   %rbp\n  4050e1:\t48 89 e5             \tmov    %rsp,%rbp\n  4050e4:\t48 83 ec 30          \tsub    $0x30,%rsp\n  4050e8:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n  4050ec:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n  4050f0:\t48 8d 55 e8          \tlea    -0x18(%rbp),%rdx\n  4050f4:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n  4050f8:\t48 89 d6             \tmov    %rdx,%rsi\n  4050fb:\t48 89 c7             \tmov    %rax,%rdi\n  4050fe:\te8 9d 01 00 00       \tcall   4052a0 <new_data_window>\n  405103:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  405107:\te8 44 f6 ff ff       \tcall   404750 <gtk_window_get_type@plt>\n  40510c:\t48 89 c2             \tmov    %rax,%rdx\n  40510f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  405113:\t48 89 d6             \tmov    %rdx,%rsi\n  405116:\t48 89 c7             \tmov    %rax,%rdi\n  405119:\te8 f2 ef ff ff       \tcall   404110 <g_type_check_instance_cast@plt>\n  40511e:\tbe 68 80 40 00       \tmov    $0x408068,%esi\n  405123:\t48 89 c7             \tmov    %rax,%rdi\n  405126:\te8 95 f1 ff ff       \tcall   4042c0 <gtk_window_set_title@plt>\n  40512b:\t90                   \tnop\n  40512c:\tc9                   \tleave  \n  40512d:\tc3                   \tret    ", "code_s": "void newdata(void) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  undefined <span class=\"supfact\">local_20</span>[Number];\n  undefined <span class=\"supfact\">local_18</span>[Number];\n  undefined8 <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> =\n      new_data_window(<span class=\"supfact\">local_18</span>, <span class=\"supfact\">local_20</span>);\n  <span class=\"supfact\">uVar1</span> = gtk_window_get_type();\n  <span class=\"supfact\">uVar1</span> = g_type_check_instance_cast(<span class=\"supfact\">local_10</span>,\n                                                     <span class=\"supfact\">uVar1</span>);\n  gtk_window_set_title(<span class=\"supfact\">uVar1</span>, String);\n  return;\n}", "code_t": "void newdata(GtkWidget *button, gpointer __unused) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  gpointer __unused - local;\n  GtkWidget *button - local;\n  Object *<span class=\"supfact\">data</span>;\n  GtkTextBuffer *<span class=\"supfact\">buffer</span>;\n  GtkWidget *<span class=\"supfact\">window</span>;\n  <span class=\"supfact\">window</span> =\n      new_data_window(&amp; <span class=\"supfact\">buffer</span>, &amp; <span class=\"supfact\">data</span>);\n  <span class=\"supfact\">uVar1</span> = gtk_window_get_type();\n  <span class=\"supfact\">uVar1</span> =\n      g_type_check_instance_cast(<span class=\"supfact\">window</span>, <span class=\"supfact\">uVar1</span>);\n  gtk_window_set_title(<span class=\"supfact\">uVar1</span>, String);\n  return;\n}", "var": [{"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "uVar1", "ref_type": "undefined8"}, {"name": "local_20", "type": "__unk__", "pred_name": "__unk__", "ref_name": "data", "ref_type": "Object * *"}, {"name": "local_18", "type": "__unk__", "pred_name": "__unk__", "ref_name": "buffer", "ref_type": "GtkTextBuffer * *"}, {"name": "local_10", "type": "void * *", "pred_name": "__unk__", "ref_name": "window", "ref_type": "GtkWidget * *"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "00000000000092c0 <visit_type_GuestFileWriteList>:\n    92c0:\t55                   \tpush   %rbp\n    92c1:\t48 89 e5             \tmov    %rsp,%rbp\n    92c4:\t48 83 ec 40          \tsub    $0x40,%rsp\n    92c8:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    92cc:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n    92d0:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n    92d4:\t48 89 4d c0          \tmov    %rcx,-0x40(%rbp)\n    92d8:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    92df:\t00 00 \n    92e1:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    92e5:\t31 c0                \txor    %eax,%eax\n    92e7:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    92eb:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    92ef:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    92f3:\t48 8b 4d c8          \tmov    -0x38(%rbp),%rcx\n    92f7:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    92fb:\t48 89 ce             \tmov    %rcx,%rsi\n    92fe:\t48 89 c7             \tmov    %rax,%rdi\n    9301:\te8 55 6c 00 00       \tcall   ff5b <visit_start_list>\n    9306:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    930a:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n    930e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    9312:\t48 89 ce             \tmov    %rcx,%rsi\n    9315:\t48 89 c7             \tmov    %rax,%rdi\n    9318:\te8 a8 6c 00 00       \tcall   ffc5 <visit_next_list>\n    931d:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    9321:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    9325:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    9329:\t48 89 10             \tmov    %rdx,(%rax)\n    932c:\teb 3f                \tjmp    936d <visit_type_GuestFileWriteList+0xad>\n    932e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    9332:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    9336:\t48 8b 75 f0          \tmov    -0x10(%rbp),%rsi\n    933a:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    933e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    9342:\t48 89 d1             \tmov    %rdx,%rcx\n    9345:\tba 00 00 00 00       \tmov    $0x0,%edx\n    934a:\t48 89 c7             \tmov    %rax,%rdi\n    934d:\te8 75 fe ff ff       \tcall   91c7 <visit_type_GuestFileWrite>\n    9352:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    9356:\t48 8d 4d e0          \tlea    -0x20(%rbp),%rcx\n    935a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    935e:\t48 89 ce             \tmov    %rcx,%rsi\n    9361:\t48 89 c7             \tmov    %rax,%rdi\n    9364:\te8 5c 6c 00 00       \tcall   ffc5 <visit_next_list>\n    9369:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    936d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    9371:\t48 85 c0             \ttest   %rax,%rax\n    9374:\t75 b8                \tjne    932e <visit_type_GuestFileWriteList+0x6e>\n    9376:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    937a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    937e:\t48 89 d6             \tmov    %rdx,%rsi\n    9381:\t48 89 c7             \tmov    %rax,%rdi\n    9384:\te8 ac 6c 00 00       \tcall   10035 <visit_end_list>\n    9389:\t90                   \tnop\n    938a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    938e:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    9395:\t00 00 \n    9397:\t74 05                \tje     939e <visit_type_GuestFileWriteList+0xde>\n    9399:\te8 f2 ee ff ff       \tcall   8290 <__stack_chk_fail@plt>\n    939e:\tc9                   \tleave  \n    939f:\tc3                   \tret    ", "code_s": "void visit_type_GuestFileWriteList(undefined8 <span class=\"supfact\">param_1</span>,\n                                   long *<span class=\"supfact\">param_2</span>,\n                                   undefined8 <span class=\"supfact\">param_3</span>,\n                                   undefined8 <span class=\"supfact\">param_4</span>) {\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  long <span class=\"supfact\">local_28</span>;\n  long *<span class=\"supfact\">local_20</span>;\n  long <span class=\"supfact\">local_18</span>;\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_2</span>;\n  visit_start_list(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_3</span>,\n                   <span class=\"supfact\">param_4</span>);\n  <span class=\"supfact\">local_28</span> =\n      visit_next_list(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_20</span>,\n                      <span class=\"supfact\">param_4</span>);\n  *<span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_28</span>;\n  while (<span class=\"supfact\">local_28</span> != Number) {\n    <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_28</span>;\n    visit_type_GuestFileWrite(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_28</span>,\n                              Number, <span class=\"supfact\">param_4</span>);\n    <span class=\"supfact\">local_28</span> =\n        visit_next_list(<span class=\"supfact\">param_1</span>, &amp;\n                        <span class=\"supfact\">local_28</span>, <span class=\"supfact\">param_4</span>);\n  }\n  visit_end_list(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_4</span>);\n  if (<span class=\"supfact\">local_10</span> !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "code_t": "void visit_type_GuestFileWriteList(Visitor *<span class=\"supfact\">m</span>,\n                                   GuestFileWriteList **<span class=\"supfact\">obj</span>,\n                                   char *<span class=\"supfact\">name</span>,\n                                   Error **<span class=\"supfact\">errp</span>) {\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  Error **<span class=\"supfact\">errp</span> - local;\n  char *<span class=\"supfact\">name</span> - local;\n  GuestFileWriteList **<span class=\"supfact\">obj</span> - local;\n  Visitor *<span class=\"supfact\">m</span> - local;\n  GenericList *<span class=\"supfact\">i</span>;\n  GenericList **<span class=\"supfact\">head</span>;\n  GuestFileWriteList *<span class=\"supfact\">native_i</span>;\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">head</span> = (GenericList **)<span class=\"supfact\">obj</span>;\n  visit_start_list(<span class=\"supfact\">m</span>, <span class=\"supfact\">name</span>,\n                   <span class=\"supfact\">errp</span>);\n  <span class=\"supfact\">i</span> = visit_next_list(<span class=\"supfact\">m</span>, <span class=\"supfact\">head</span>,\n                                      <span class=\"supfact\">errp</span>);\n  *<span class=\"supfact\">head</span> = <span class=\"supfact\">i</span>;\n  while (<span class=\"supfact\">i</span> != (GenericList *)Number) {\n    <span class=\"supfact\">native_i</span> = (GuestFileWriteList *)<span class=\"supfact\">i</span>;\n    visit_type_GuestFileWrite(<span class=\"supfact\">m</span>,\n                              (GuestFileWrite **)<span class=\"supfact\">i</span>,\n                              (char *)Number, <span class=\"supfact\">errp</span>);\n    <span class=\"supfact\">i</span> = visit_next_list(\n        <span class=\"supfact\">m</span>, &amp; <span class=\"supfact\">i</span>, <span class=\"supfact\">errp</span>);\n  }\n  visit_end_list(<span class=\"supfact\">m</span>, <span class=\"supfact\">errp</span>);\n  if (<span class=\"supfact\">local_10</span> !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "long", "pred_name": "in_RDI", "ref_name": "m", "ref_type": "Visitor * *"}, {"name": "param_2", "type": "undefined8", "pred_name": "in_RSI", "ref_name": "obj", "ref_type": "GuestFileWriteList * * *"}, {"name": "param_3", "type": "long", "pred_name": "in_RDX", "ref_name": "name", "ref_type": "char * *"}, {"name": "param_4", "type": "undefined8", "pred_name": "in_RCX", "ref_name": "errp", "ref_type": "Error * * *"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_28", "type": "__unk__", "pred_name": "__unk__", "ref_name": "i", "ref_type": "GenericList * *"}, {"name": "local_20", "type": "disappear", "pred_name": "", "ref_name": "head", "ref_type": "GenericList * * *"}, {"name": "local_18", "type": "disappear", "pred_name": "", "ref_name": "native_i", "ref_type": "GuestFileWriteList * *"}, {"name": "local_10", "type": "disappear", "pred_name": "", "ref_name": "local_10", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "DennisKofflard", "repo_name": "Trident_i2c_controller", "path": "DennisKofflard/Trident_i2c_controller/7f3b1341443e0a8ff448c9a5c1a21c28b9aacb88b829d641d7994be27df60654", "path_in_repo": "DennisKofflard/Trident_i2c_controller/congatec_cgoslib/Lx/libcgos.so", "objdump": "0000000000004fe7 <CgosFanGetInfo>:\n    4fe7:\t55                   \tpush   %rbp\n    4fe8:\t48 89 e5             \tmov    %rsp,%rbp\n    4feb:\t48 83 ec 10          \tsub    $0x10,%rsp\n    4fef:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n    4ff2:\t89 75 f8             \tmov    %esi,-0x8(%rbp)\n    4ff5:\t48 89 55 f0          \tmov    %rdx,-0x10(%rbp)\n    4ff9:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    4ffc:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    4fff:\t6a 00                \tpush   $0x0\n    5001:\tff 75 f0             \tpush   -0x10(%rbp)\n    5004:\t6a 00                \tpush   $0x0\n    5006:\t6a 00                \tpush   $0x0\n    5008:\t6a 00                \tpush   $0x0\n    500a:\t6a 00                \tpush   $0x0\n    500c:\t6a 00                \tpush   $0x0\n    500e:\t6a 00                \tpush   $0x0\n    5010:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    5016:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    501c:\t89 d1                \tmov    %edx,%ecx\n    501e:\t89 c2                \tmov    %eax,%edx\n    5020:\tbe 44 00 00 00       \tmov    $0x44,%esi\n    5025:\tbf 08 00 00 00       \tmov    $0x8,%edi\n    502a:\te8 71 e0 ff ff       \tcall   30a0 <CallDrvStruct@plt>\n    502f:\t48 83 c4 40          \tadd    $0x40,%rsp\n    5033:\tc9                   \tleave  \n    5034:\tc3                   \tret    ", "code_s": "void CgosFanGetInfo(undefined4 <span class=\"supfact\">param_1</span>,\n                    undefined4 <span class=\"supfact\">param_2</span>,\n                    undefined8 <span class=\"supfact\">param_3</span>) {\n  CallDrvStruct(Number, Number, <span class=\"supfact\">param_1</span>,\n                <span class=\"supfact\">param_2</span>, Number, Number, Number, Number, Number,\n                Number, Number, Number, <span class=\"supfact\">param_3</span>, Number);\n  return;\n}", "code_t": "uint CgosFanGetInfo(HCGOS <span class=\"supfact\">hCgos</span>, uint <span class=\"supfact\">dwUnit</span>,\n                    CGOSFANINFO *<span class=\"supfact\">pInfo</span>) {\n  uint uVar1;\n  CGOSFANINFO *<span class=\"supfact\">pInfo</span> - local;\n  uint <span class=\"supfact\">dwUnit</span> - local;\n  HCGOS <span class=\"supfact\">hCgos</span> - local;\n  uVar1 = CallDrvStruct(Number, Number, <span class=\"supfact\">hCgos</span>,\n                        <span class=\"supfact\">dwUnit</span>, Number, Number, Number, Number,\n                        (uint *)Number, (uint *)Number, (void *)Number, Number,\n                        <span class=\"supfact\">pInfo</span>, Number);\n  return uVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "hCgos", "ref_type": "HCGOS"}, {"name": "param_2", "type": "int", "pred_name": "__unk__", "ref_name": "dwUnit", "ref_type": "uint"}, {"name": "param_3", "type": "uchar * *", "pred_name": "data", "ref_name": "pInfo", "ref_type": "CGOSFANINFO * *"}], "body_in_train": false}, {"repo_owner": "indicolite", "repo_name": "kcolnas", "path": "indicolite/kcolnas/063cfa2fef0cfbd9f08068e73d8d398c000eb329738ef91d6c9feb12c11d0efc", "path_in_repo": "indicolite/kcolnas/src/libsanlock_client.so.1.0", "objdump": "0000000000002668 <sanlock_add_lockspace_timeout>:\n    2668:\t55                   \tpush   %rbp\n    2669:\t48 89 e5             \tmov    %rsp,%rbp\n    266c:\t48 83 ec 10          \tsub    $0x10,%rsp\n    2670:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    2674:\t89 75 f4             \tmov    %esi,-0xc(%rbp)\n    2677:\t89 55 f0             \tmov    %edx,-0x10(%rbp)\n    267a:\t8b 4d f0             \tmov    -0x10(%rbp),%ecx\n    267d:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n    2680:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2684:\t48 89 c6             \tmov    %rax,%rsi\n    2687:\tbf 02 00 00 00       \tmov    $0x2,%edi\n    268c:\te8 06 ff ff ff       \tcall   2597 <cmd_lockspace>\n    2691:\tc9                   \tleave  \n    2692:\tc3                   \tret    ", "code_s": "void sanlock_add_lockspace_timeout(undefined8 <span class=\"supfact\">param_1</span>,\n                                   undefined4 <span class=\"supfact\">param_2</span>,\n                                   undefined4 <span class=\"supfact\">param_3</span>) {\n  FUN_00102597(Number, <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n               <span class=\"supfact\">param_3</span>);\n  return;\n}", "code_t": "int sanlock_add_lockspace_timeout(sanlk_lockspace *<span class=\"supfact\">ls</span>,\n                                  uint32_t <span class=\"supfact\">flags</span>,\n                                  uint32_t <span class=\"supfact\">io_timeout</span>) {\n  int iVar1;\n  uint32_t <span class=\"supfact\">io_timeout</span> - local;\n  uint32_t <span class=\"supfact\">flags</span> - local;\n  sanlk_lockspace *<span class=\"supfact\">ls</span> - local;\n  iVar1 = cmd_lockspace(Number, <span class=\"supfact\">ls</span>, <span class=\"supfact\">flags</span>,\n                        <span class=\"supfact\">io_timeout</span>);\n  return iVar1;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "s", "ref_name": "ls", "ref_type": "sanlk_lockspace * *"}, {"name": "param_2", "type": "int", "pred_name": "__unk__", "ref_name": "flags", "ref_type": "uint32_t"}, {"name": "param_3", "type": "int", "pred_name": "__unk__", "ref_name": "io_timeout", "ref_type": "uint32_t"}], "body_in_train": false}, {"repo_owner": "DennisKofflard", "repo_name": "Trident_i2c_controller", "path": "DennisKofflard/Trident_i2c_controller/7f3b1341443e0a8ff448c9a5c1a21c28b9aacb88b829d641d7994be27df60654", "path_in_repo": "DennisKofflard/Trident_i2c_controller/congatec_cgoslib/Lx/libcgos.so", "objdump": "00000000000049d8 <CgosIOGetDirectionCaps>:\n    49d8:\t55                   \tpush   %rbp\n    49d9:\t48 89 e5             \tmov    %rsp,%rbp\n    49dc:\t48 83 ec 20          \tsub    $0x20,%rsp\n    49e0:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n    49e3:\t89 75 f8             \tmov    %esi,-0x8(%rbp)\n    49e6:\t48 89 55 f0          \tmov    %rdx,-0x10(%rbp)\n    49ea:\t48 89 4d e8          \tmov    %rcx,-0x18(%rbp)\n    49ee:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    49f1:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    49f4:\tff 75 e8             \tpush   -0x18(%rbp)\n    49f7:\tff 75 f0             \tpush   -0x10(%rbp)\n    49fa:\t6a 00                \tpush   $0x0\n    49fc:\t6a 00                \tpush   $0x0\n    49fe:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    4a04:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    4a0a:\t89 d1                \tmov    %edx,%ecx\n    4a0c:\t89 c2                \tmov    %eax,%edx\n    4a0e:\tbe 2e 00 00 00       \tmov    $0x2e,%esi\n    4a13:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    4a18:\te8 b3 e7 ff ff       \tcall   31d0 <CallDrvPlain@plt>\n    4a1d:\t48 83 c4 20          \tadd    $0x20,%rsp\n    4a21:\tc9                   \tleave  \n    4a22:\tc3                   \tret    ", "code_s": "void CgosIOGetDirectionCaps(undefined4 <span class=\"supfact\">param_1</span>,\n                            undefined4 <span class=\"supfact\">param_2</span>,\n                            undefined8 <span class=\"supfact\">param_3</span>,\n                            undefined8 <span class=\"supfact\">param_4</span>) {\n  CallDrvPlain(Number, Number, <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n               Number, Number, Number, Number, <span class=\"supfact\">param_3</span>,\n               <span class=\"supfact\">param_4</span>);\n  return;\n}", "code_t": "uint CgosIOGetDirectionCaps(HCGOS <span class=\"supfact\">hCgos</span>,\n                            uint <span class=\"supfact\">dwUnit</span>,\n                            uint *<span class=\"supfact\">pdwInputs</span>,\n                            uint *<span class=\"supfact\">pdwOutputs</span>) {\n  uint uVar1;\n  uint *<span class=\"supfact\">pdwOutputs</span> - local;\n  uint *<span class=\"supfact\">pdwInputs</span> - local;\n  uint <span class=\"supfact\">dwUnit</span> - local;\n  HCGOS <span class=\"supfact\">hCgos</span> - local;\n  uVar1 = CallDrvPlain(Number, Number, <span class=\"supfact\">hCgos</span>,\n                       <span class=\"supfact\">dwUnit</span>, Number, Number, Number, Number,\n                       <span class=\"supfact\">pdwInputs</span>, <span class=\"supfact\">pdwOutputs</span>);\n  return uVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "hCgos", "ref_type": "HCGOS"}, {"name": "param_2", "type": "int", "pred_name": "fd", "ref_name": "dwUnit", "ref_type": "uint"}, {"name": "param_3", "type": "char * *", "pred_name": "name", "ref_name": "pdwInputs", "ref_type": "uint * *"}, {"name": "param_4", "type": "int * *", "pred_name": "__unk__", "ref_name": "pdwOutputs", "ref_type": "uint * *"}], "body_in_train": false}, {"repo_owner": "malvira", "repo_name": "erbr", "path": "malvira/erbr/2f8350b2482c685589c80daaa31735f028d7aa115ebd831f8cce34b92e2b972e", "path_in_repo": "malvira/erbr/contiki/examples/multi-threading/multi-threading.native", "objdump": "0000000000406701 <announcement_remove_value>:\n  406701:\t55                   \tpush   %rbp\n  406702:\t48 89 e5             \tmov    %rsp,%rbp\n  406705:\t48 83 ec 10          \tsub    $0x10,%rsp\n  406709:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  40670d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  406711:\tc6 40 18 00          \tmovb   $0x0,0x18(%rax)\n  406715:\t48 8b 05 cc c0 00 00 \tmov    0xc0cc(%rip),%rax        # 4127e8 <observer_callback>\n  40671c:\t48 85 c0             \ttest   %rax,%rax\n  40671f:\t74 2c                \tje     40674d <announcement_remove_value+0x4c>\n  406721:\t4c 8b 0d c0 c0 00 00 \tmov    0xc0c0(%rip),%r9        # 4127e8 <observer_callback>\n  406728:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40672c:\t0f b7 40 08          \tmovzwl 0x8(%rax),%eax\n  406730:\t0f b7 c0             \tmovzwl %ax,%eax\n  406733:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n  406739:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  40673e:\tba 00 00 00 00       \tmov    $0x0,%edx\n  406743:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  406748:\t89 c7                \tmov    %eax,%edi\n  40674a:\t41 ff d1             \tcall   *%r9\n  40674d:\t90                   \tnop\n  40674e:\tc9                   \tleave  \n  40674f:\tc3                   \tret    ", "code_s": "void announcement_remove_value(long <span class=\"supfact\">param_1</span>) {\n  *(undefined *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  if (DAT_004127e8 != (code *)Number) {\n    (*DAT_004127e8)(*(undefined2 *)(<span class=\"supfact\">param_1</span> + Number), Number,\n                    Number, Number, Number);\n  }\n  return;\n}", "code_t": "void announcement_remove_value(announcement *<span class=\"supfact\">a</span>) {\n  announcement *<span class=\"supfact\">a</span> - local;\n  <span class=\"supfact\">a</span> - &gt;\n  has_value = String;\n  if (observer_callback != (announcement_observer)Number) {\n    (*observer_callback)(<span class=\"supfact\">a</span> - &gt;\n                         id, String, Number, Number, String);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "announcement * *", "pred_name": "a", "ref_name": "a", "ref_type": "announcement * *"}], "body_in_train": false}, {"repo_owner": "grengojbo", "repo_name": "opensips", "path": "grengojbo/opensips/d1e23f84fe376e3de4ed7cc406c1dbffebd3a848cc8b658008303a4af07e4043", "path_in_repo": "grengojbo/opensips/modules/dispatcher/dispatcher.so", "objdump": "000000000000c445 <ds_next_dst>:\n    c445:\t55                   \tpush   %rbp\n    c446:\t48 89 e5             \tmov    %rsp,%rbp\n    c449:\t41 55                \tpush   %r13\n    c44b:\t41 54                \tpush   %r12\n    c44d:\t53                   \tpush   %rbx\n    c44e:\t48 83 ec 48          \tsub    $0x48,%rsp\n    c452:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n    c456:\t89 75 a4             \tmov    %esi,-0x5c(%rbp)\n    c459:\t48 8b 05 78 8a 00 00 \tmov    0x8a78(%rip),%rax        # 14ed8 <ds_flags@@Base-0xa3c>\n    c460:\t8b 00                \tmov    (%rax),%eax\n    c462:\t83 e0 02             \tand    $0x2,%eax\n    c465:\t85 c0                \ttest   %eax,%eax\n    c467:\t74 0d                \tje     c476 <ds_next_dst+0x31>\n    c469:\t48 8b 05 50 8a 00 00 \tmov    0x8a50(%rip),%rax        # 14ec0 <dst_avp_name@@Base-0xe90>\n    c470:\t8b 00                \tmov    (%rax),%eax\n    c472:\t85 c0                \ttest   %eax,%eax\n    c474:\t75 78                \tjne    c4ee <ds_next_dst+0xa9>\n    c476:\t48 8b 05 83 8a 00 00 \tmov    0x8a83(%rip),%rax        # 14f00 <debug>\n    c47d:\t48 8b 00             \tmov    (%rax),%rax\n    c480:\t8b 00                \tmov    (%rax),%eax\n    c482:\t85 c0                \ttest   %eax,%eax\n    c484:\t7e 5e                \tjle    c4e4 <ds_next_dst+0x9f>\n    c486:\t48 8b 05 fb 89 00 00 \tmov    0x89fb(%rip),%rax        # 14e88 <log_stderr>\n    c48d:\t8b 00                \tmov    (%rax),%eax\n    c48f:\t85 c0                \ttest   %eax,%eax\n    c491:\t74 2b                \tje     c4be <ds_next_dst+0x79>\n    c493:\te8 c8 7e ff ff       \tcall   4360 <dp_my_pid@plt>\n    c498:\t89 c3                \tmov    %eax,%ebx\n    c49a:\te8 66 a6 ff ff       \tcall   6b05 <dp_time>\n    c49f:\t48 8d 0d 32 62 00 00 \tlea    0x6232(%rip),%rcx        # 126d8 <__FUNCTION__.9612>\n    c4a6:\t89 da                \tmov    %ebx,%edx\n    c4a8:\t48 89 c6             \tmov    %rax,%rsi\n    c4ab:\t48 8d 3d 6e 57 00 00 \tlea    0x576e(%rip),%rdi        # 11c20 <__FUNCTION__.9242+0x1ae8>\n    c4b2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    c4b7:\te8 34 80 ff ff       \tcall   44f0 <dprint@plt>\n    c4bc:\teb 26                \tjmp    c4e4 <ds_next_dst+0x9f>\n    c4be:\t48 8b 05 0b 8a 00 00 \tmov    0x8a0b(%rip),%rax        # 14ed0 <log_facility>\n    c4c5:\t8b 00                \tmov    (%rax),%eax\n    c4c7:\t83 c8 04             \tor     $0x4,%eax\n    c4ca:\t48 8d 15 07 62 00 00 \tlea    0x6207(%rip),%rdx        # 126d8 <__FUNCTION__.9612>\n    c4d1:\t48 8d 35 88 57 00 00 \tlea    0x5788(%rip),%rsi        # 11c60 <__FUNCTION__.9242+0x1b28>\n    c4d8:\t89 c7                \tmov    %eax,%edi\n    c4da:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    c4df:\te8 cc 7e ff ff       \tcall   43b0 <syslog@plt>\n    c4e4:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    c4e9:\te9 02 02 00 00       \tjmp    c6f0 <ds_next_dst+0x2ab>\n    c4ee:\t48 8b 05 8b 8a 00 00 \tmov    0x8a8b(%rip),%rax        # 14f80 <dst_avp_type@@Base-0xf88>\n    c4f5:\t0f b7 00             \tmovzwl (%rax),%eax\n    c4f8:\t0f b7 f8             \tmovzwl %ax,%edi\n    c4fb:\t48 8b 05 be 89 00 00 \tmov    0x89be(%rip),%rax        # 14ec0 <dst_avp_name@@Base-0xe90>\n    c502:\t48 8b 10             \tmov    (%rax),%rdx\n    c505:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    c509:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    c50f:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    c514:\t48 89 d6             \tmov    %rdx,%rsi\n    c517:\t48 89 c2             \tmov    %rax,%rdx\n    c51a:\te8 91 7c ff ff       \tcall   41b0 <search_first_avp@plt>\n    c51f:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    c523:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n    c528:\t75 0a                \tjne    c534 <ds_next_dst+0xef>\n    c52a:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    c52f:\te9 bc 01 00 00       \tjmp    c6f0 <ds_next_dst+0x2ab>\n    c534:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n    c538:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c53c:\t48 89 d6             \tmov    %rdx,%rsi\n    c53f:\t48 89 c7             \tmov    %rax,%rdi\n    c542:\te8 d9 7e ff ff       \tcall   4420 <search_next_avp@plt>\n    c547:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    c54b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c54f:\t48 89 c7             \tmov    %rax,%rdi\n    c552:\te8 89 7c ff ff       \tcall   41e0 <destroy_avp@plt>\n    c557:\t48 8b 05 fa 89 00 00 \tmov    0x89fa(%rip),%rax        # 14f58 <attrs_avp_name@@Base-0xf28>\n    c55e:\t8b 00                \tmov    (%rax),%eax\n    c560:\t85 c0                \ttest   %eax,%eax\n    c562:\t74 48                \tje     c5ac <ds_next_dst+0x167>\n    c564:\t48 8b 05 25 89 00 00 \tmov    0x8925(%rip),%rax        # 14e90 <attrs_avp_type@@Base-0xeb0>\n    c56b:\t0f b7 00             \tmovzwl (%rax),%eax\n    c56e:\t0f b7 f8             \tmovzwl %ax,%edi\n    c571:\t48 8b 05 e0 89 00 00 \tmov    0x89e0(%rip),%rax        # 14f58 <attrs_avp_name@@Base-0xf28>\n    c578:\t48 8b 10             \tmov    (%rax),%rdx\n    c57b:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    c57f:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    c585:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    c58a:\t48 89 d6             \tmov    %rdx,%rsi\n    c58d:\t48 89 c2             \tmov    %rax,%rdx\n    c590:\te8 1b 7c ff ff       \tcall   41b0 <search_first_avp@plt>\n    c595:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    c599:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n    c59e:\t74 0c                \tje     c5ac <ds_next_dst+0x167>\n    c5a0:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c5a4:\t48 89 c7             \tmov    %rax,%rdi\n    c5a7:\te8 34 7c ff ff       \tcall   41e0 <destroy_avp@plt>\n    c5ac:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n    c5b1:\t74 12                \tje     c5c5 <ds_next_dst+0x180>\n    c5b3:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    c5b7:\t0f b7 40 02          \tmovzwl 0x2(%rax),%eax\n    c5bb:\t0f b7 c0             \tmovzwl %ax,%eax\n    c5be:\t83 e0 02             \tand    $0x2,%eax\n    c5c1:\t85 c0                \ttest   %eax,%eax\n    c5c3:\t75 0a                \tjne    c5cf <ds_next_dst+0x18a>\n    c5c5:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    c5ca:\te9 21 01 00 00       \tjmp    c6f0 <ds_next_dst+0x2ab>\n    c5cf:\t8b 55 a4             \tmov    -0x5c(%rbp),%edx\n    c5d2:\t48 8d 4d b0          \tlea    -0x50(%rbp),%rcx\n    c5d6:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    c5da:\t48 89 ce             \tmov    %rcx,%rsi\n    c5dd:\t48 89 c7             \tmov    %rax,%rdi\n    c5e0:\te8 8f e9 ff ff       \tcall   af74 <ds_update_dst>\n    c5e5:\t85 c0                \ttest   %eax,%eax\n    c5e7:\t74 79                \tje     c662 <ds_next_dst+0x21d>\n    c5e9:\t48 8b 05 10 89 00 00 \tmov    0x8910(%rip),%rax        # 14f00 <debug>\n    c5f0:\t48 8b 00             \tmov    (%rax),%rax\n    c5f3:\t8b 00                \tmov    (%rax),%eax\n    c5f5:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    c5f8:\t7c 5e                \tjl     c658 <ds_next_dst+0x213>\n    c5fa:\t48 8b 05 87 88 00 00 \tmov    0x8887(%rip),%rax        # 14e88 <log_stderr>\n    c601:\t8b 00                \tmov    (%rax),%eax\n    c603:\t85 c0                \ttest   %eax,%eax\n    c605:\t74 2b                \tje     c632 <ds_next_dst+0x1ed>\n    c607:\te8 54 7d ff ff       \tcall   4360 <dp_my_pid@plt>\n    c60c:\t89 c3                \tmov    %eax,%ebx\n    c60e:\te8 f2 a4 ff ff       \tcall   6b05 <dp_time>\n    c613:\t48 8d 0d be 60 00 00 \tlea    0x60be(%rip),%rcx        # 126d8 <__FUNCTION__.9612>\n    c61a:\t89 da                \tmov    %ebx,%edx\n    c61c:\t48 89 c6             \tmov    %rax,%rsi\n    c61f:\t48 8d 3d aa 54 00 00 \tlea    0x54aa(%rip),%rdi        # 11ad0 <__FUNCTION__.9242+0x1998>\n    c626:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    c62b:\te8 c0 7e ff ff       \tcall   44f0 <dprint@plt>\n    c630:\teb 26                \tjmp    c658 <ds_next_dst+0x213>\n    c632:\t48 8b 05 97 88 00 00 \tmov    0x8897(%rip),%rax        # 14ed0 <log_facility>\n    c639:\t8b 00                \tmov    (%rax),%eax\n    c63b:\t83 c8 03             \tor     $0x3,%eax\n    c63e:\t48 8d 15 93 60 00 00 \tlea    0x6093(%rip),%rdx        # 126d8 <__FUNCTION__.9612>\n    c645:\t48 8d 35 bc 54 00 00 \tlea    0x54bc(%rip),%rsi        # 11b08 <__FUNCTION__.9242+0x19d0>\n    c64c:\t89 c7                \tmov    %eax,%edi\n    c64e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    c653:\te8 58 7d ff ff       \tcall   43b0 <syslog@plt>\n    c658:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    c65d:\te9 8e 00 00 00       \tjmp    c6f0 <ds_next_dst+0x2ab>\n    c662:\t48 8b 05 97 88 00 00 \tmov    0x8897(%rip),%rax        # 14f00 <debug>\n    c669:\t48 8b 00             \tmov    (%rax),%rax\n    c66c:\t8b 00                \tmov    (%rax),%eax\n    c66e:\t83 f8 03             \tcmp    $0x3,%eax\n    c671:\t7e 78                \tjle    c6eb <ds_next_dst+0x2a6>\n    c673:\t48 8b 05 0e 88 00 00 \tmov    0x880e(%rip),%rax        # 14e88 <log_stderr>\n    c67a:\t8b 00                \tmov    (%rax),%eax\n    c67c:\t85 c0                \ttest   %eax,%eax\n    c67e:\t74 39                \tje     c6b9 <ds_next_dst+0x274>\n    c680:\t4c 8b 6d b0          \tmov    -0x50(%rbp),%r13\n    c684:\t44 8b 65 b8          \tmov    -0x48(%rbp),%r12d\n    c688:\te8 d3 7c ff ff       \tcall   4360 <dp_my_pid@plt>\n    c68d:\t89 c3                \tmov    %eax,%ebx\n    c68f:\te8 71 a4 ff ff       \tcall   6b05 <dp_time>\n    c694:\t4d 89 e9             \tmov    %r13,%r9\n    c697:\t45 89 e0             \tmov    %r12d,%r8d\n    c69a:\t48 8d 0d 37 60 00 00 \tlea    0x6037(%rip),%rcx        # 126d8 <__FUNCTION__.9612>\n    c6a1:\t89 da                \tmov    %ebx,%edx\n    c6a3:\t48 89 c6             \tmov    %rax,%rsi\n    c6a6:\t48 8d 3d eb 55 00 00 \tlea    0x55eb(%rip),%rdi        # 11c98 <__FUNCTION__.9242+0x1b60>\n    c6ad:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    c6b2:\te8 39 7e ff ff       \tcall   44f0 <dprint@plt>\n    c6b7:\teb 32                \tjmp    c6eb <ds_next_dst+0x2a6>\n    c6b9:\t48 8b 4d b0          \tmov    -0x50(%rbp),%rcx\n    c6bd:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n    c6c0:\t48 8b 15 09 88 00 00 \tmov    0x8809(%rip),%rdx        # 14ed0 <log_facility>\n    c6c7:\t8b 12                \tmov    (%rdx),%edx\n    c6c9:\t89 d7                \tmov    %edx,%edi\n    c6cb:\t83 cf 07             \tor     $0x7,%edi\n    c6ce:\t49 89 c8             \tmov    %rcx,%r8\n    c6d1:\t89 c1                \tmov    %eax,%ecx\n    c6d3:\t48 8d 15 fe 5f 00 00 \tlea    0x5ffe(%rip),%rdx        # 126d8 <__FUNCTION__.9612>\n    c6da:\t48 8d 35 e7 55 00 00 \tlea    0x55e7(%rip),%rsi        # 11cc8 <__FUNCTION__.9242+0x1b90>\n    c6e1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    c6e6:\te8 c5 7c ff ff       \tcall   43b0 <syslog@plt>\n    c6eb:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    c6f0:\t48 83 c4 48          \tadd    $0x48,%rsp\n    c6f4:\t5b                   \tpop    %rbx\n    c6f5:\t41 5c                \tpop    %r12\n    c6f7:\t41 5d                \tpop    %r13\n    c6f9:\t5d                   \tpop    %rbp\n    c6fa:\tc3                   \tret    ", "code_s": "undefined8 ds_next_dst(undefined8 <span class=\"supfact\">param_1</span>,\n                       undefined4 <span class=\"supfact\">param_2</span>) {\n  undefined4 uVar1;\n  int iVar2;\n  undefined8 <span class=\"supfact\">uVar3</span>;\n  undefined8 <span class=\"supfact\">local_58</span>;\n  uint <span class=\"supfact\">local_50</span>;\n  long <span class=\"supfact\">local_40</span>;\n  long <span class=\"supfact\">local_38</span>;\n  long <span class=\"supfact\">local_30</span>;\n  if (((*(uint *)PTR_ds_flags_00114ed8 & amp; Number) == Number) ||\n      (*(int *)PTR_dst_avp_name_00114ec0 == Number)) {\n    if (Number & lt; **(int **)PTR_debug_00114f00) {\n      if (*(int *)PTR_log_stderr_00114e88 == Number) {\n        syslog(*(uint *)PTR_log_facility_00114ed0 | Number, String, String);\n      } else {\n        uVar1 = dp_my_pid();\n        <span class=\"supfact\">uVar3</span> = FUN_00106b05();\n        dprint(String, <span class=\"supfact\">uVar3</span>, uVar1, String);\n      }\n    }\n    <span class=\"supfact\">uVar3</span> = Number;\n  } else {\n    <span class=\"supfact\">local_30</span> = search_first_avp(\n        *(undefined2 *)PTR_dst_avp_type_00114f80,\n        *(undefined8 *)PTR_dst_avp_name_00114ec0,\n        *(undefined8 *)(PTR_dst_avp_name_00114ec0 + Number), Number, Number);\n    if (<span class=\"supfact\">local_30</span> == Number) {\n      <span class=\"supfact\">uVar3</span> = Number;\n    } else {\n      <span class=\"supfact\">local_38</span> = search_next_avp(<span class=\"supfact\">local_30</span>, &amp;\n                                                 <span class=\"supfact\">local_58</span>);\n      destroy_avp(<span class=\"supfact\">local_30</span>);\n      if (*(int *)PTR_attrs_avp_name_00114f58 != Number) {\n        <span class=\"supfact\">local_40</span> = search_first_avp(\n            *(undefined2 *)PTR_attrs_avp_type_00114e90,\n            *(undefined8 *)PTR_attrs_avp_name_00114f58,\n            *(undefined8 *)(PTR_attrs_avp_name_00114f58 + Number), Number,\n            Number);\n        if (<span class=\"supfact\">local_40</span> != Number) {\n          destroy_avp(<span class=\"supfact\">local_40</span>);\n        }\n      }\n      if ((<span class=\"supfact\">local_38</span> == Number) ||\n          ((*(ushort *)(<span class=\"supfact\">local_38</span> + Number) & amp; Number) ==\n           Number)) {\n        <span class=\"supfact\">uVar3</span> = Number;\n      } else {\n        iVar2 = FUN_0010af74(<span class=\"supfact\">param_1</span>, &amp;\n                             <span class=\"supfact\">local_58</span>, <span class=\"supfact\">param_2</span>);\n        if (iVar2 == Number) {\n          if (Number & lt; **(int **)PTR_debug_00114f00) {\n            if (*(int *)PTR_log_stderr_00114e88 == Number) {\n              syslog(*(uint *)PTR_log_facility_00114ed0 | Number, String,\n                     String, (ulong)<span class=\"supfact\">local_50</span>,\n                     <span class=\"supfact\">local_58</span>);\n            } else {\n              uVar1 = dp_my_pid();\n              <span class=\"supfact\">uVar3</span> = FUN_00106b05();\n              dprint(String, <span class=\"supfact\">uVar3</span>, uVar1, String,\n                     <span class=\"supfact\">local_50</span>, <span class=\"supfact\">local_58</span>);\n            }\n          }\n          <span class=\"supfact\">uVar3</span> = Number;\n        } else {\n          if (-Number & lt; **(int **)PTR_debug_00114f00) {\n            if (*(int *)PTR_log_stderr_00114e88 == Number) {\n              syslog(*(uint *)PTR_log_facility_00114ed0 | Number, String,\n                     String);\n            } else {\n              uVar1 = dp_my_pid();\n              <span class=\"supfact\">uVar3</span> = FUN_00106b05();\n              dprint(String, <span class=\"supfact\">uVar3</span>, uVar1, String);\n            }\n          }\n          <span class=\"supfact\">uVar3</span> = Number;\n        }\n      }\n    }\n  }\n  return <span class=\"supfact\">uVar3</span>;\n}", "code_t": "int ds_next_dst(sip_msg *<span class=\"supfact\">msg</span>, int <span class=\"supfact\">mode</span>) {\n  undefined4 uVar1;\n  int iVar2;\n  char *<span class=\"supfact\">pcVar3</span>;\n  int <span class=\"supfact\">mode</span> - local;\n  sip_msg *<span class=\"supfact\">msg</span> - local;\n  int_str <span class=\"supfact\">avp_value</span>;\n  usr_avp *<span class=\"supfact\">attr_avp</span>;\n  usr_avp *<span class=\"supfact\">avp</span>;\n  usr_avp *<span class=\"supfact\">prev_avp</span>;\n  if (((*(uint *)PTR_ds_flags_00114ed8 & amp; Number) == Number) ||\n      (*(int *)PTR_dst_avp_name_00114ec0 == Number)) {\n    if (Number & lt; **(int **)PTR_debug_00114f00) {\n      if (*(int *)PTR_log_stderr_00114e88 == Number) {\n        syslog(*(uint *)PTR_log_facility_00114ed0 | Number, String, String);\n      } else {\n        uVar1 = dp_my_pid();\n        <span class=\"supfact\">pcVar3</span> = dp_time();\n        dprint(String, <span class=\"supfact\">pcVar3</span>, uVar1, String);\n      }\n    }\n    iVar2 = -Number;\n  } else {\n    <span class=\"supfact\">prev_avp</span> = (usr_avp *)search_first_avp(\n        *(undefined2 *)PTR_dst_avp_type_00114f80,\n        *(undefined8 *)PTR_dst_avp_name_00114ec0,\n        *(undefined8 *)(PTR_dst_avp_name_00114ec0 + Number), Number, Number);\n    if (<span class=\"supfact\">prev_avp</span> == (usr_avp *)Number) {\n      iVar2 = -Number;\n    } else {\n      <span class=\"supfact\">avp</span> = (usr_avp *)search_next_avp(\n          <span class=\"supfact\">prev_avp</span>, &amp; <span class=\"supfact\">avp_value</span>);\n      destroy_avp(<span class=\"supfact\">prev_avp</span>);\n      if (*(int *)PTR_attrs_avp_name_00114f58 != Number) {\n        <span class=\"supfact\">attr_avp</span> = (usr_avp *)search_first_avp(\n            *(undefined2 *)PTR_attrs_avp_type_00114e90,\n            *(undefined8 *)PTR_attrs_avp_name_00114f58,\n            *(undefined8 *)(PTR_attrs_avp_name_00114f58 + Number), Number,\n            Number);\n        if (<span class=\"supfact\">attr_avp</span> != (usr_avp *)Number) {\n          destroy_avp(<span class=\"supfact\">attr_avp</span>);\n        }\n      }\n      if ((<span class=\"supfact\">avp</span> == (usr_avp *)Number) ||\n          ((<span class=\"supfact\">avp</span> - &gt; flags & amp; Number) == Number)) {\n        iVar2 = -Number;\n      } else {\n        iVar2 =\n            ds_update_dst(<span class=\"supfact\">msg</span>, &amp;\n                          <span class=\"supfact\">avp_value</span>.s, <span class=\"supfact\">mode</span>);\n        if (iVar2 == Number) {\n          if (Number & lt; **(int **)PTR_debug_00114f00) {\n            if (*(int *)PTR_log_stderr_00114e88 == Number) {\n              syslog(*(uint *)PTR_log_facility_00114ed0 | Number, String,\n                     String, (ulong)(uint)<span class=\"supfact\">avp_value</span>.s.len,\n                     <span class=\"supfact\">avp_value</span>.s.s);\n            } else {\n              uVar1 = dp_my_pid();\n              <span class=\"supfact\">pcVar3</span> = dp_time();\n              dprint(String, <span class=\"supfact\">pcVar3</span>, uVar1, String,\n                     <span class=\"supfact\">avp_value</span>.s.len,\n                     <span class=\"supfact\">avp_value</span>.s.s);\n            }\n          }\n          iVar2 = Number;\n        } else {\n          if (-Number & lt; **(int **)PTR_debug_00114f00) {\n            if (*(int *)PTR_log_stderr_00114e88 == Number) {\n              syslog(*(uint *)PTR_log_facility_00114ed0 | Number, String,\n                     String);\n            } else {\n              uVar1 = dp_my_pid();\n              <span class=\"supfact\">pcVar3</span> = dp_time();\n              dprint(String, <span class=\"supfact\">pcVar3</span>, uVar1, String);\n            }\n          }\n          iVar2 = -Number;\n        }\n      }\n    }\n  }\n  return iVar2;\n}", "var": [{"name": "param_1", "type": "sip_msg * *", "pred_name": "_m", "ref_name": "msg", "ref_type": "sip_msg * *"}, {"name": "param_2", "type": "int", "pred_name": "__unk__", "ref_name": "mode", "ref_type": "int"}, {"name": "uVar3", "type": "char * *", "pred_name": "pcVar3", "ref_name": "pcVar3", "ref_type": "char * *"}, {"name": "local_58", "type": "__unk__", "pred_name": "__unk__", "ref_name": "avp_value", "ref_type": "union int_str { int n; str s; PADDING (14); }"}, {"name": "local_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_40", "type": "disappear", "pred_name": "", "ref_name": "attr_avp", "ref_type": "usr_avp * *"}, {"name": "local_38", "type": "disappear", "pred_name": "", "ref_name": "avp", "ref_type": "usr_avp * *"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "prev_avp", "ref_type": "usr_avp * *"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000000be83 <qemu_parse_fd>:\n    be83:\t55                   \tpush   %rbp\n    be84:\t48 89 e5             \tmov    %rsp,%rbp\n    be87:\t48 83 ec 30          \tsub    $0x30,%rsp\n    be8b:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    be8f:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    be96:\t00 00 \n    be98:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    be9c:\t31 c0                \txor    %eax,%eax\n    be9e:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    bea5:\t00 \n    bea6:\t48 8d 4d f0          \tlea    -0x10(%rbp),%rcx\n    beaa:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    beae:\tba 0a 00 00 00       \tmov    $0xa,%edx\n    beb3:\t48 89 ce             \tmov    %rcx,%rsi\n    beb6:\t48 89 c7             \tmov    %rax,%rdi\n    beb9:\te8 42 c6 ff ff       \tcall   8500 <strtol@plt>\n    bebe:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n    bec1:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    bec5:\t0f b6 00             \tmovzbl (%rax),%eax\n    bec8:\t84 c0                \ttest   %al,%al\n    beca:\t75 10                \tjne    bedc <qemu_parse_fd+0x59>\n    becc:\t83 7d ec 00          \tcmpl   $0x0,-0x14(%rbp)\n    bed0:\t75 11                \tjne    bee3 <qemu_parse_fd+0x60>\n    bed2:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    bed6:\t48 39 45 d8          \tcmp    %rax,-0x28(%rbp)\n    beda:\t75 07                \tjne    bee3 <qemu_parse_fd+0x60>\n    bedc:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    bee1:\teb 03                \tjmp    bee6 <qemu_parse_fd+0x63>\n    bee3:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    bee6:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    beea:\t64 48 33 14 25 28 00 \txor    %fs:0x28,%rdx\n    bef1:\t00 00 \n    bef3:\t74 05                \tje     befa <qemu_parse_fd+0x77>\n    bef5:\te8 96 c3 ff ff       \tcall   8290 <__stack_chk_fail@plt>\n    befa:\tc9                   \tleave  \n    befb:\tc3                   \tret    ", "code_s": "ulong qemu_parse_fd(char *<span class=\"supfact\">param_1</span>) {\n  ulong <span class=\"supfact\">uVar1</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  char *<span class=\"supfact\">local_18</span>;\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_18</span> = (char *)Number;\n  <span class=\"supfact\">uVar1</span> =\n      strtol(<span class=\"supfact\">param_1</span>, &amp; <span class=\"supfact\">local_18</span>, Number);\n  if ((*<span class=\"supfact\">local_18</span> == String) & amp; &amp;\n      (((int)<span class=\"supfact\">uVar1</span> != Number ||\n        (<span class=\"supfact\">param_1</span> != <span class=\"supfact\">local_18</span>)))) {\n    <span class=\"supfact\">uVar1</span> = <span class=\"supfact\">uVar1</span> & amp;\n    Number;\n  } else {\n    <span class=\"supfact\">uVar1</span> = Number;\n  }\n  if (<span class=\"supfact\">local_10</span> !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "int qemu_parse_fd(char *<span class=\"supfact\">param</span>) {\n  int iVar1;\n  long <span class=\"supfact\">lVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  char *<span class=\"supfact\">param</span> - local;\n  int fd;\n  char *<span class=\"supfact\">endptr</span>;\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">endptr</span> = (char *)Number;\n  <span class=\"supfact\">lVar2</span> =\n      strtol(<span class=\"supfact\">param</span>, &amp; <span class=\"supfact\">endptr</span>, Number);\n  iVar1 = (int)<span class=\"supfact\">lVar2</span>;\n  if ((*<span class=\"supfact\">endptr</span> != String) ||\n      ((iVar1 == Number & amp; &amp;\n        (<span class=\"supfact\">param</span> == <span class=\"supfact\">endptr</span>)))) {\n    iVar1 = -Number;\n  }\n  if (<span class=\"supfact\">local_10</span> ==\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return iVar1;\n  }\n  __stack_chk_fail();\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "__unk__", "ref_name": "param", "ref_type": "char * *"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "lVar2", "ref_type": "long"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_18", "type": "__unk__", "pred_name": "__unk__", "ref_name": "endptr", "ref_type": "char * *"}, {"name": "local_10", "type": "disappear", "pred_name": "", "ref_name": "local_10", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "malvira", "repo_name": "erbr", "path": "malvira/erbr/2f8350b2482c685589c80daaa31735f028d7aa115ebd831f8cce34b92e2b972e", "path_in_repo": "malvira/erbr/contiki/examples/multi-threading/multi-threading.native", "objdump": "0000000000407ff2 <process_poll>:\n  407ff2:\t55                   \tpush   %rbp\n  407ff3:\t48 89 e5             \tmov    %rsp,%rbp\n  407ff6:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  407ffa:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n  407fff:\t74 27                \tje     408028 <process_poll+0x36>\n  408001:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  408005:\t0f b6 40 1a          \tmovzbl 0x1a(%rax),%eax\n  408009:\t3c 01                \tcmp    $0x1,%al\n  40800b:\t74 0c                \tje     408019 <process_poll+0x27>\n  40800d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  408011:\t0f b6 40 1a          \tmovzbl 0x1a(%rax),%eax\n  408015:\t3c 02                \tcmp    $0x2,%al\n  408017:\t75 0f                \tjne    408028 <process_poll+0x36>\n  408019:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40801d:\tc6 40 1b 01          \tmovb   $0x1,0x1b(%rax)\n  408021:\tc6 05 d8 ab 00 00 01 \tmovb   $0x1,0xabd8(%rip)        # 412c00 <poll_requested>\n  408028:\t90                   \tnop\n  408029:\t5d                   \tpop    %rbp\n  40802a:\tc3                   \tret    ", "code_s": "void process_poll(long <span class=\"supfact\">param_1</span>) {\n  if ((<span class=\"supfact\">param_1</span> != Number) & amp; &amp;\n      ((*(char *)(<span class=\"supfact\">param_1</span> + Number) == String ||\n        (*(char *)(<span class=\"supfact\">param_1</span> + Number) == String)))) {\n    *(undefined *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n    DAT_00412c00 = Number;\n  }\n  return;\n}", "code_t": "void process_poll(process *<span class=\"supfact\">p</span>) {\n  process *<span class=\"supfact\">p</span> - local;\n  if ((<span class=\"supfact\">p</span> != (process *)Number) & amp; &amp;\n      ((<span class=\"supfact\">p</span> - &gt;\n        state == String || (<span class=\"supfact\">p</span> - &gt; state == String)))) {\n    <span class=\"supfact\">p</span> - &gt;\n    needspoll = String;\n    poll_requested = String;\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "process * *", "pred_name": "p", "ref_name": "p", "ref_type": "process * *"}], "body_in_train": false}, {"repo_owner": "patrick-ken", "repo_name": "MyNet_N900", "path": "patrick-ken/MyNet_N900/25c1f2012f51cb6206bf4a2ff42fba9ed5fd6fa32ebefa9f1bffebf4a5473f7f", "path_in_repo": "patrick-ken/MyNet_N900/elbox_WRGND15/progs.gpl/itunes_server/gdbm-1.8.3/.libs/libgdbm.so.3.0.0", "objdump": "0000000000002e85 <_gdbm_init_cache>:\n    2e85:\t55                   \tpush   %rbp\n    2e86:\t48 89 e5             \tmov    %rsp,%rbp\n    2e89:\t41 54                \tpush   %r12\n    2e8b:\t53                   \tpush   %rbx\n    2e8c:\t48 83 ec 10          \tsub    $0x10,%rsp\n    2e90:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    2e94:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n    2e97:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2e9b:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n    2e9f:\t48 85 c0             \ttest   %rax,%rax\n    2ea2:\t0f 85 ae 01 00 00    \tjne    3056 <_gdbm_init_cache+0x1d1>\n    2ea8:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n    2eab:\t48 63 d0             \tmovslq %eax,%rdx\n    2eae:\t48 89 d0             \tmov    %rdx,%rax\n    2eb1:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2eb5:\t48 29 d0             \tsub    %rdx,%rax\n    2eb8:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2ebc:\t48 89 c7             \tmov    %rax,%rdi\n    2ebf:\te8 fc f2 ff ff       \tcall   21c0 <malloc@plt>\n    2ec4:\t48 89 c2             \tmov    %rax,%rdx\n    2ec7:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2ecb:\t48 89 50 40          \tmov    %rdx,0x40(%rax)\n    2ecf:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2ed3:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n    2ed7:\t48 85 c0             \ttest   %rax,%rax\n    2eda:\t75 17                \tjne    2ef3 <_gdbm_init_cache+0x6e>\n    2edc:\t48 8b 05 fd 60 00 00 \tmov    0x60fd(%rip),%rax        # 8fe0 <gdbm_errno@@Base-0x1b8>\n    2ee3:\tc7 00 01 00 00 00    \tmovl   $0x1,(%rax)\n    2ee9:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    2eee:\te9 68 01 00 00       \tjmp    305b <_gdbm_init_cache+0x1d6>\n    2ef3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2ef7:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n    2efa:\t89 50 48             \tmov    %edx,0x48(%rax)\n    2efd:\tbb 00 00 00 00       \tmov    $0x0,%ebx\n    2f02:\te9 23 01 00 00       \tjmp    302a <_gdbm_init_cache+0x1a5>\n    2f07:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2f0b:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    2f0f:\t8b 40 18             \tmov    0x18(%rax),%eax\n    2f12:\t48 63 c8             \tmovslq %eax,%rcx\n    2f15:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2f19:\t48 8b 70 40          \tmov    0x40(%rax),%rsi\n    2f1d:\t48 63 d3             \tmovslq %ebx,%rdx\n    2f20:\t48 89 d0             \tmov    %rdx,%rax\n    2f23:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2f27:\t48 29 d0             \tsub    %rdx,%rax\n    2f2a:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2f2e:\t4c 8d 24 06          \tlea    (%rsi,%rax,1),%r12\n    2f32:\t48 89 cf             \tmov    %rcx,%rdi\n    2f35:\te8 86 f2 ff ff       \tcall   21c0 <malloc@plt>\n    2f3a:\t49 89 04 24          \tmov    %rax,(%r12)\n    2f3e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2f42:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    2f46:\t48 63 d3             \tmovslq %ebx,%rdx\n    2f49:\t48 89 d0             \tmov    %rdx,%rax\n    2f4c:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2f50:\t48 29 d0             \tsub    %rdx,%rax\n    2f53:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2f57:\t48 01 c8             \tadd    %rcx,%rax\n    2f5a:\t48 8b 00             \tmov    (%rax),%rax\n    2f5d:\t48 85 c0             \ttest   %rax,%rax\n    2f60:\t75 17                \tjne    2f79 <_gdbm_init_cache+0xf4>\n    2f62:\t48 8b 05 77 60 00 00 \tmov    0x6077(%rip),%rax        # 8fe0 <gdbm_errno@@Base-0x1b8>\n    2f69:\tc7 00 01 00 00 00    \tmovl   $0x1,(%rax)\n    2f6f:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    2f74:\te9 e2 00 00 00       \tjmp    305b <_gdbm_init_cache+0x1d6>\n    2f79:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2f7d:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    2f81:\t48 63 d3             \tmovslq %ebx,%rdx\n    2f84:\t48 89 d0             \tmov    %rdx,%rax\n    2f87:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2f8b:\t48 29 d0             \tsub    %rdx,%rax\n    2f8e:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2f92:\t48 01 c8             \tadd    %rcx,%rax\n    2f95:\t48 c7 40 08 00 00 00 \tmovq   $0x0,0x8(%rax)\n    2f9c:\t00 \n    2f9d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2fa1:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    2fa5:\t48 63 d3             \tmovslq %ebx,%rdx\n    2fa8:\t48 89 d0             \tmov    %rdx,%rax\n    2fab:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2faf:\t48 29 d0             \tsub    %rdx,%rax\n    2fb2:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2fb6:\t48 01 c8             \tadd    %rcx,%rax\n    2fb9:\tc6 40 10 00          \tmovb   $0x0,0x10(%rax)\n    2fbd:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2fc1:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    2fc5:\t48 63 d3             \tmovslq %ebx,%rdx\n    2fc8:\t48 89 d0             \tmov    %rdx,%rax\n    2fcb:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2fcf:\t48 29 d0             \tsub    %rdx,%rax\n    2fd2:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2fd6:\t48 01 c8             \tadd    %rcx,%rax\n    2fd9:\tc7 40 18 ff ff ff ff \tmovl   $0xffffffff,0x18(%rax)\n    2fe0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2fe4:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    2fe8:\t48 63 d3             \tmovslq %ebx,%rdx\n    2feb:\t48 89 d0             \tmov    %rdx,%rax\n    2fee:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2ff2:\t48 29 d0             \tsub    %rdx,%rax\n    2ff5:\t48 c1 e0 03          \tshl    $0x3,%rax\n    2ff9:\t48 01 c8             \tadd    %rcx,%rax\n    2ffc:\tc7 40 30 ff ff ff ff \tmovl   $0xffffffff,0x30(%rax)\n    3003:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3007:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    300b:\t48 63 d3             \tmovslq %ebx,%rdx\n    300e:\t48 89 d0             \tmov    %rdx,%rax\n    3011:\t48 c1 e0 03          \tshl    $0x3,%rax\n    3015:\t48 29 d0             \tsub    %rdx,%rax\n    3018:\t48 c1 e0 03          \tshl    $0x3,%rax\n    301c:\t48 01 c8             \tadd    %rcx,%rax\n    301f:\t48 c7 40 28 00 00 00 \tmovq   $0x0,0x28(%rax)\n    3026:\t00 \n    3027:\t83 c3 01             \tadd    $0x1,%ebx\n    302a:\t3b 5d e4             \tcmp    -0x1c(%rbp),%ebx\n    302d:\t0f 8c d4 fe ff ff    \tjl     2f07 <_gdbm_init_cache+0x82>\n    3033:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3037:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n    303b:\t48 8b 10             \tmov    (%rax),%rdx\n    303e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3042:\t48 89 50 50          \tmov    %rdx,0x50(%rax)\n    3046:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    304a:\t48 8b 50 40          \tmov    0x40(%rax),%rdx\n    304e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3052:\t48 89 50 60          \tmov    %rdx,0x60(%rax)\n    3056:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    305b:\t48 83 c4 10          \tadd    $0x10,%rsp\n    305f:\t5b                   \tpop    %rbx\n    3060:\t41 5c                \tpop    %r12\n    3062:\t5d                   \tpop    %rbp\n    3063:\tc3                   \tret    ", "code_s": "undefined8 _gdbm_init_cache(long <span class=\"supfact\">param_1</span>,\n                            int <span class=\"supfact\">param_2</span>) {\n  long lVar1;\n  void *<span class=\"supfact\">pvVar2</span>;\n  int <span class=\"supfact\">iVar3</span>;\n  if (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n    <span class=\"supfact\">pvVar2</span> = malloc((long)<span class=\"supfact\">param_2</span> * Number);\n    *(void **)(<span class=\"supfact\">param_1</span> + Number) = <span class=\"supfact\">pvVar2</span>;\n    if (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n      *(undefined4 *)PTR_gdbm_errno_00108fe0 = Number;\n      return Number;\n    }\n    *(int *)(<span class=\"supfact\">param_1</span> + Number) = <span class=\"supfact\">param_2</span>;\n    for (<span class=\"supfact\">iVar3</span> = Number; <span class=\"supfact\">iVar3</span> & lt;\n         <span class=\"supfact\">param_2</span>;\n         <span class=\"supfact\">iVar3</span> = <span class=\"supfact\">iVar3</span> + Number) {\n      lVar1 = *(long *)(<span class=\"supfact\">param_1</span> + Number);\n      <span class=\"supfact\">pvVar2</span> = malloc(\n          (long)*(int *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number));\n      *(void **)(lVar1 + (long)<span class=\"supfact\">iVar3</span> * Number) =\n          <span class=\"supfact\">pvVar2</span>;\n      if (*(long *)((long)<span class=\"supfact\">iVar3</span> * Number +\n                    *(long *)(<span class=\"supfact\">param_1</span> + Number)) == Number) {\n        *(undefined4 *)PTR_gdbm_errno_00108fe0 = Number;\n        return Number;\n      }\n      *(undefined8 *)((long)<span class=\"supfact\">iVar3</span> * Number +\n                      *(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) =\n          Number;\n      *(undefined *)((long)<span class=\"supfact\">iVar3</span> * Number +\n                     *(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) =\n          Number;\n      *(undefined4 *)((long)<span class=\"supfact\">iVar3</span> * Number +\n                      *(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) =\n          Number;\n      *(undefined4 *)((long)<span class=\"supfact\">iVar3</span> * Number +\n                      *(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) =\n          Number;\n      *(undefined8 *)((long)<span class=\"supfact\">iVar3</span> * Number +\n                      *(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) =\n          Number;\n    }\n    *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) =\n        **(undefined8 **)(<span class=\"supfact\">param_1</span> + Number);\n    *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) =\n        *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n  }\n  return Number;\n}", "code_t": "int _gdbm_init_cache(gdbm_file_info *<span class=\"supfact\">dbf</span>,\n                     int <span class=\"supfact\">size</span>) {\n  cache_elem *pcVar1;\n  hash_bucket *phVar2;\n  int index;\n  int iVar3;\n  int <span class=\"supfact\">size</span> - local;\n  gdbm_file_info *<span class=\"supfact\">dbf</span> - local;\n  if (<span class=\"supfact\">dbf</span> - &gt; bucket_cache == (cache_elem *)Number) {\n    pcVar1 = (cache_elem *)malloc((long)<span class=\"supfact\">size</span> * Number);\n    <span class=\"supfact\">dbf</span> - &gt;\n    bucket_cache = pcVar1;\n    if (<span class=\"supfact\">dbf</span> - &gt; bucket_cache == (cache_elem *)Number) {\n      *(undefined4 *)PTR_gdbm_errno_00108fe0 = Number;\n      return -Number;\n    }\n    <span class=\"supfact\">dbf</span> - &gt;\n    cache_size = <span class=\"supfact\">size</span>;\n    for (iVar3 = Number; iVar3 & lt; <span class=\"supfact\">size</span>;\n         iVar3 = iVar3 + Number) {\n      pcVar1 = <span class=\"supfact\">dbf</span> - &gt;\n      bucket_cache;\n      phVar2 = (hash_bucket *)malloc((long)<span class=\"supfact\">dbf</span> - &gt;\n                                     header - &gt; bucket_size);\n      pcVar1[iVar3].ca_bucket = phVar2;\n      if (<span class=\"supfact\">dbf</span> - &gt;\n          bucket_cache[iVar3].ca_bucket == (hash_bucket *)Number) {\n        *(undefined4 *)PTR_gdbm_errno_00108fe0 = Number;\n        return -Number;\n      }\n      <span class=\"supfact\">dbf</span> - &gt;\n      bucket_cache[iVar3].ca_adr = Number;\n      <span class=\"supfact\">dbf</span> - &gt;\n      bucket_cache[iVar3].ca_changed = String;\n      <span class=\"supfact\">dbf</span> - &gt;\n      bucket_cache[iVar3].ca_data.hash_val = -Number;\n      <span class=\"supfact\">dbf</span> - &gt;\n      bucket_cache[iVar3].ca_data.elem_loc = -Number;\n      <span class=\"supfact\">dbf</span> - &gt;\n      bucket_cache[iVar3].ca_data.dptr = (char *)Number;\n    }\n    <span class=\"supfact\">dbf</span> - &gt;\n    bucket = <span class=\"supfact\">dbf</span> - &gt;\n    bucket_cache - &gt;\n    ca_bucket;\n    <span class=\"supfact\">dbf</span> - &gt;\n    cache_entry = <span class=\"supfact\">dbf</span> - &gt;\n    bucket_cache;\n  }\n  return Number;\n}", "var": [{"name": "param_1", "type": "profile * *", "pred_name": "p", "ref_name": "dbf", "ref_type": "gdbm_file_info * *"}, {"name": "param_2", "type": "int", "pred_name": "n", "ref_name": "size", "ref_type": "int"}, {"name": "pvVar2", "type": "void * *", "pred_name": "pvVar2", "ref_name": "", "ref_type": "disappear"}, {"name": "iVar3", "type": "int", "pred_name": "iVar3", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "wangke-chen", "repo_name": "Malloc-Function", "path": "wangke-chen/Malloc-Function/3bf34aa63d8c2804a2e0ca89019b8c79942d6e1942f8f5935ccf3cdb940ddd5b", "path_in_repo": "wangke-chen/Malloc-Function/my_malloc_1/libmymalloc.so", "objdump": "000000000000143b <check_ptr>:\n    143b:\t55                   \tpush   %rbp\n    143c:\t48 89 e5             \tmov    %rsp,%rbp\n    143f:\t48 83 ec 20          \tsub    $0x20,%rsp\n    1443:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    1447:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    144b:\t48 83 e8 28          \tsub    $0x28,%rax\n    144f:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1453:\t48 8b 05 8e 2b 00 00 \tmov    0x2b8e(%rip),%rax        # 3fe8 <head@@Base-0x80>\n    145a:\t48 8b 00             \tmov    (%rax),%rax\n    145d:\t48 85 c0             \ttest   %rax,%rax\n    1460:\t74 20                \tje     1482 <check_ptr+0x47>\n    1462:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1467:\te8 d4 fb ff ff       \tcall   1040 <sbrk@plt>\n    146c:\t48 39 45 f8          \tcmp    %rax,-0x8(%rbp)\n    1470:\t77 10                \tja     1482 <check_ptr+0x47>\n    1472:\t48 8b 05 6f 2b 00 00 \tmov    0x2b6f(%rip),%rax        # 3fe8 <head@@Base-0x80>\n    1479:\t48 8b 00             \tmov    (%rax),%rax\n    147c:\t48 39 45 f8          \tcmp    %rax,-0x8(%rbp)\n    1480:\t73 07                \tjae    1489 <check_ptr+0x4e>\n    1482:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1487:\teb 12                \tjmp    149b <check_ptr+0x60>\n    1489:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    148d:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    1491:\t48 39 45 e8          \tcmp    %rax,-0x18(%rbp)\n    1495:\t0f 94 c0             \tsete   %al\n    1498:\t0f b6 c0             \tmovzbl %al,%eax\n    149b:\tc9                   \tleave  \n    149c:\tc3                   \tret    ", "code_s": "bool check_ptr(long <span class=\"supfact\">param_1</span>) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  if (((*(long *)PTR_head_00103fe8 != Number) & amp; &amp;\n       (<span class=\"supfact\">pvVar1</span> = sbrk(Number),\n        (void *)(<span class=\"supfact\">param_1</span> - Number) &lt;\n        = <span class=\"supfact\">pvVar1</span>)) &\n          amp;\n      &amp; (*(void **)PTR_head_00103fe8 &lt;\n             = (void *)(<span class=\"supfact\">param_1</span> - Number))) {\n    return <span class=\"supfact\">param_1</span> ==\n           *(long *)(<span class=\"supfact\">param_1</span> + -Number);\n  }\n  return false;\n}", "code_t": "int check_ptr(void *<span class=\"supfact\">ptr</span>) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  void *<span class=\"supfact\">ptr</span> - local;\n  m_block *m;\n  if (((*(long *)PTR_head_00103fe8 != Number) & amp; &amp;\n       (<span class=\"supfact\">pvVar1</span> = sbrk(Number),\n        (void *)((long)<span class=\"supfact\">ptr</span> - Number) &lt;\n        = <span class=\"supfact\">pvVar1</span>)) &\n          amp;\n      &amp; (*(void **)PTR_head_00103fe8 &lt;\n             = (void *)((long)<span class=\"supfact\">ptr</span> - Number))) {\n    return (uint)(<span class=\"supfact\">ptr</span> ==\n                  *(void **)((long)<span class=\"supfact\">ptr</span> + -Number));\n  }\n  return Number;\n}", "var": [{"name": "param_1", "type": "void * *", "pred_name": "ptr", "ref_name": "ptr", "ref_type": "void * *"}, {"name": "pvVar1", "type": "disappear", "pred_name": "", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "ajamous", "repo_name": "DOTS", "path": "ajamous/DOTS/28c9e348f3a3b11bc4f8699bd26ee99298379f2886174405e6aa1da54ee51932", "path_in_repo": "ajamous/DOTS/SIP_Clients_pjsip-2.7.1/pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/clidemo", "objdump": "00000000004187a0 <speex_bits_destroy>:\n  4187a0:\t55                   \tpush   %rbp\n  4187a1:\t48 89 e5             \tmov    %rsp,%rbp\n  4187a4:\t48 83 ec 10          \tsub    $0x10,%rsp\n  4187a8:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  4187ac:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4187b0:\t8b 40 14             \tmov    0x14(%rax),%eax\n  4187b3:\t85 c0                \ttest   %eax,%eax\n  4187b5:\t74 0f                \tje     4187c6 <speex_bits_destroy+0x26>\n  4187b7:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4187bb:\t48 8b 00             \tmov    (%rax),%rax\n  4187be:\t48 89 c7             \tmov    %rax,%rdi\n  4187c1:\te8 9d fe ff ff       \tcall   418663 <speex_free>\n  4187c6:\t90                   \tnop\n  4187c7:\tc9                   \tleave  \n  4187c8:\tc3                   \tret    ", "code_s": "void speex_bits_destroy(undefined8 *<span class=\"supfact\">param_1</span>) {\n  if (*(int *)((long)<span class=\"supfact\">param_1</span> + Number) != Number) {\n    FUN_00418663(*<span class=\"supfact\">param_1</span>);\n  }\n  return;\n}", "code_t": "void speex_bits_destroy(SpeexBits *<span class=\"supfact\">bits</span>) {\n  SpeexBits *<span class=\"supfact\">bits</span> - local;\n  if (<span class=\"supfact\">bits</span> - &gt; owner != Number) {\n    speex_free(<span class=\"supfact\">bits</span> - &gt; chars);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "SpeexBits * *", "pred_name": "bits", "ref_name": "bits", "ref_type": "SpeexBits * *"}], "body_in_train": false}, {"repo_owner": "wufixx", "repo_name": "android_kernel_xiaomi_msm8953_vince", "path": "wufixx/android_kernel_xiaomi_msm8953_vince/e20e40c14979637892394d8d220a1ffb64a1912d5eb640ba7ecb67aef438b696", "path_in_repo": "wufixx/android_kernel_xiaomi_msm8953_vince/tools/lib/traceevent/libtraceevent.so", "objdump": "0000000000005234 <pevent_print_funcs>:\n    5234:\t55                   \tpush   %rbp\n    5235:\t48 89 e5             \tmov    %rsp,%rbp\n    5238:\t48 83 ec 20          \tsub    $0x20,%rsp\n    523c:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    5240:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    5244:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n    5248:\t48 85 c0             \ttest   %rax,%rax\n    524b:\t75 0c                \tjne    5259 <pevent_print_funcs+0x25>\n    524d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    5251:\t48 89 c7             \tmov    %rax,%rdi\n    5254:\te8 2d fc ff ff       \tcall   4e86 <func_map_init>\n    5259:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    5260:\te9 c7 00 00 00       \tjmp    532c <pevent_print_funcs+0xf8>\n    5265:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    5269:\t48 8b 48 58          \tmov    0x58(%rax),%rcx\n    526d:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    5270:\t48 63 d0             \tmovslq %eax,%rdx\n    5273:\t48 89 d0             \tmov    %rdx,%rax\n    5276:\t48 01 c0             \tadd    %rax,%rax\n    5279:\t48 01 d0             \tadd    %rdx,%rax\n    527c:\t48 c1 e0 03          \tshl    $0x3,%rax\n    5280:\t48 01 c8             \tadd    %rcx,%rax\n    5283:\t48 8b 48 08          \tmov    0x8(%rax),%rcx\n    5287:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    528b:\t48 8b 70 58          \tmov    0x58(%rax),%rsi\n    528f:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    5292:\t48 63 d0             \tmovslq %eax,%rdx\n    5295:\t48 89 d0             \tmov    %rdx,%rax\n    5298:\t48 01 c0             \tadd    %rax,%rax\n    529b:\t48 01 d0             \tadd    %rdx,%rax\n    529e:\t48 c1 e0 03          \tshl    $0x3,%rax\n    52a2:\t48 01 f0             \tadd    %rsi,%rax\n    52a5:\t48 8b 00             \tmov    (%rax),%rax\n    52a8:\t48 89 ca             \tmov    %rcx,%rdx\n    52ab:\t48 89 c6             \tmov    %rax,%rsi\n    52ae:\t48 8d 3d 7b 2d 01 00 \tlea    0x12d7b(%rip),%rdi        # 18030 <_fini+0x920>\n    52b5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    52ba:\te8 41 ef ff ff       \tcall   4200 <printf@plt>\n    52bf:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    52c3:\t48 8b 48 58          \tmov    0x58(%rax),%rcx\n    52c7:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    52ca:\t48 63 d0             \tmovslq %eax,%rdx\n    52cd:\t48 89 d0             \tmov    %rdx,%rax\n    52d0:\t48 01 c0             \tadd    %rax,%rax\n    52d3:\t48 01 d0             \tadd    %rdx,%rax\n    52d6:\t48 c1 e0 03          \tshl    $0x3,%rax\n    52da:\t48 01 c8             \tadd    %rcx,%rax\n    52dd:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    52e1:\t48 85 c0             \ttest   %rax,%rax\n    52e4:\t74 38                \tje     531e <pevent_print_funcs+0xea>\n    52e6:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    52ea:\t48 8b 48 58          \tmov    0x58(%rax),%rcx\n    52ee:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    52f1:\t48 63 d0             \tmovslq %eax,%rdx\n    52f4:\t48 89 d0             \tmov    %rdx,%rax\n    52f7:\t48 01 c0             \tadd    %rax,%rax\n    52fa:\t48 01 d0             \tadd    %rdx,%rax\n    52fd:\t48 c1 e0 03          \tshl    $0x3,%rax\n    5301:\t48 01 c8             \tadd    %rcx,%rax\n    5304:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    5308:\t48 89 c6             \tmov    %rax,%rsi\n    530b:\t48 8d 3d 29 2d 01 00 \tlea    0x12d29(%rip),%rdi        # 1803b <_fini+0x92b>\n    5312:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5317:\te8 e4 ee ff ff       \tcall   4200 <printf@plt>\n    531c:\teb 0a                \tjmp    5328 <pevent_print_funcs+0xf4>\n    531e:\tbf 0a 00 00 00       \tmov    $0xa,%edi\n    5323:\te8 68 ed ff ff       \tcall   4090 <putchar@plt>\n    5328:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    532c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    5330:\t8b 40 68             \tmov    0x68(%rax),%eax\n    5333:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n    5336:\t0f 8c 29 ff ff ff    \tjl     5265 <pevent_print_funcs+0x31>\n    533c:\t90                   \tnop\n    533d:\t90                   \tnop\n    533e:\tc9                   \tleave  \n    533f:\tc3                   \tret    ", "code_s": "void pevent_print_funcs(long <span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">local_c</span>;\n  if (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n    FUN_00104e86(<span class=\"supfact\">param_1</span>);\n  }\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n       *(int *)(<span class=\"supfact\">param_1</span> + Number);\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    printf(String,\n           *(undefined8 *)((long)<span class=\"supfact\">local_c</span> * Number +\n                           *(long *)(<span class=\"supfact\">param_1</span> + Number)),\n           *(undefined8 *)((long)<span class=\"supfact\">local_c</span> * Number +\n                           *(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                           Number));\n    if (*(long *)((long)<span class=\"supfact\">local_c</span> * Number +\n                  *(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) ==\n        Number) {\n      putchar(Number);\n    } else {\n      printf(String,\n             *(undefined8 *)((long)<span class=\"supfact\">local_c</span> * Number +\n                             *(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                             Number));\n    }\n  }\n  return;\n}", "code_t": "void pevent_print_funcs(<span class=\"supfact\">pevent</span> *<span class=\"supfact\">pevent</span>) {\n  <span class=\"supfact\">pevent</span> *<span class=\"supfact\">pevent</span> - local;\n  int <span class=\"supfact\">i</span>;\n  if (<span class=\"supfact\">pevent</span> - &gt; func_map == (func_map *)Number) {\n    func_map_init(<span class=\"supfact\">pevent</span>);\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n       (int)<span class=\"supfact\">pevent</span> - &gt; func_count;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    printf(String, <span class=\"supfact\">pevent</span> - &gt;\n           func_map[<span class=\"supfact\">i</span>].addr, <span class=\"supfact\">pevent</span> - &gt;\n           func_map[<span class=\"supfact\">i</span>].func);\n    if (<span class=\"supfact\">pevent</span> - &gt;\n        func_map[<span class=\"supfact\">i</span>].mod == (char *)Number) {\n      putchar(Number);\n    } else {\n      printf(String, <span class=\"supfact\">pevent</span> - &gt;\n             func_map[<span class=\"supfact\">i</span>].mod);\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "pevent * *", "pred_name": "pevent", "ref_name": "pevent", "ref_type": "pevent * *"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "malvira", "repo_name": "erbr", "path": "malvira/erbr/2f8350b2482c685589c80daaa31735f028d7aa115ebd831f8cce34b92e2b972e", "path_in_repo": "malvira/erbr/contiki/examples/multi-threading/multi-threading.native", "objdump": "0000000000408332 <timer_restart>:\n  408332:\t55                   \tpush   %rbp\n  408333:\t48 89 e5             \tmov    %rsp,%rbp\n  408336:\t48 83 ec 10          \tsub    $0x10,%rsp\n  40833a:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  40833e:\te8 34 db ff ff       \tcall   405e77 <clock_time>\n  408343:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  408347:\t48 89 02             \tmov    %rax,(%rdx)\n  40834a:\t90                   \tnop\n  40834b:\tc9                   \tleave  \n  40834c:\tc3                   \tret    ", "code_s": "void timer_restart(undefined8 *<span class=\"supfact\">param_1</span>) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  <span class=\"supfact\">uVar1</span> = clock_time();\n  *<span class=\"supfact\">param_1</span> = <span class=\"supfact\">uVar1</span>;\n  return;\n}", "code_t": "void timer_restart(timer *<span class=\"supfact\">t</span>) {\n  clock_time_t <span class=\"supfact\">cVar1</span>;\n  timer *<span class=\"supfact\">t</span> - local;\n  <span class=\"supfact\">cVar1</span> = clock_time();\n  <span class=\"supfact\">t</span> - &gt;\n  start = <span class=\"supfact\">cVar1</span>;\n  return;\n}", "var": [{"name": "param_1", "type": "timer * *", "pred_name": "t", "ref_name": "t", "ref_type": "timer * *"}, {"name": "uVar1", "type": "clock_time_t", "pred_name": "cVar1", "ref_name": "cVar1", "ref_type": "clock_time_t"}], "body_in_train": true}, {"repo_owner": "cyrillos", "repo_name": "compel", "path": "cyrillos/compel/6c8b2026c0b8576ae0543f52306ee7f050ad71c8fe8e5eae46b6fbf8c539c4b5", "path_in_repo": "cyrillos/compel//src/lib/libcompel.so", "objdump": "00000000000056a5 <libcompel_send_fds>:\n    56a5:\t55                   \tpush   %rbp\n    56a6:\t48 89 e5             \tmov    %rsp,%rbp\n    56a9:\t48 83 ec 20          \tsub    $0x20,%rsp\n    56ad:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    56b1:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n    56b5:\t89 55 ec             \tmov    %edx,-0x14(%rbp)\n    56b8:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    56bc:\t48 89 c7             \tmov    %rax,%rdi\n    56bf:\te8 13 fc ff ff       \tcall   52d7 <ctl_sock>\n    56c4:\t89 c1                \tmov    %eax,%ecx\n    56c6:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n    56c9:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    56cd:\t48 89 c6             \tmov    %rax,%rsi\n    56d0:\t89 cf                \tmov    %ecx,%edi\n    56d2:\te8 09 ca ff ff       \tcall   20e0 <fds_send_via@plt>\n    56d7:\tc9                   \tleave  \n    56d8:\tc3                   \tret    ", "code_s": "void libcompel_send_fds(undefined8 <span class=\"supfact\">param_1</span>,\n                        undefined8 <span class=\"supfact\">param_2</span>,\n                        undefined4 <span class=\"supfact\">param_3</span>) {\n  undefined4 <span class=\"supfact\">uVar1</span>;\n  <span class=\"supfact\">uVar1</span> = FUN_001052d7(<span class=\"supfact\">param_1</span>);\n  fds_send_via(<span class=\"supfact\">uVar1</span>, <span class=\"supfact\">param_2</span>,\n               <span class=\"supfact\">param_3</span>);\n  return;\n}", "code_t": "int libcompel_send_fds(compel_exec_handle_t <span class=\"supfact\">h</span>,\n                       int *<span class=\"supfact\">fds</span>, int <span class=\"supfact\">nr</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  int <span class=\"supfact\">nr</span> - local;\n  int *<span class=\"supfact\">fds</span> - local;\n  compel_exec_handle_t <span class=\"supfact\">h</span> - local;\n  <span class=\"supfact\">iVar1</span> = ctl_sock((parasite_ctl_t *)<span class=\"supfact\">h</span>);\n  <span class=\"supfact\">iVar1</span> = fds_send_via(<span class=\"supfact\">iVar1</span>,\n                                       <span class=\"supfact\">fds</span>, <span class=\"supfact\">nr</span>);\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "param_1", "type": "sip_msg * *", "pred_name": "msg", "ref_name": "h", "ref_type": "compel_exec_handle_t"}, {"name": "param_2", "type": "pv_param_t * *", "pred_name": "param", "ref_name": "fds", "ref_type": "int * *"}, {"name": "param_3", "type": "int", "pred_name": "__unk__", "ref_name": "nr", "ref_type": "int"}, {"name": "uVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000001e672 <qlist_copy>:\n   1e672:\t55                   \tpush   %rbp\n   1e673:\t48 89 e5             \tmov    %rsp,%rbp\n   1e676:\t48 83 ec 20          \tsub    $0x20,%rsp\n   1e67a:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   1e67e:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   1e685:\t00 00 \n   1e687:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   1e68b:\t31 c0                \txor    %eax,%eax\n   1e68d:\te8 0e ff ff ff       \tcall   1e5a0 <qlist_new>\n   1e692:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n   1e696:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n   1e69a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1e69e:\t48 8d 35 70 ff ff ff \tlea    -0x90(%rip),%rsi        # 1e615 <qlist_copy_elem>\n   1e6a5:\t48 89 c7             \tmov    %rax,%rdi\n   1e6a8:\te8 a4 00 00 00       \tcall   1e751 <qlist_iter>\n   1e6ad:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1e6b1:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n   1e6b5:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n   1e6bc:\t00 00 \n   1e6be:\t74 05                \tje     1e6c5 <qlist_copy+0x53>\n   1e6c0:\te8 cb 9b fe ff       \tcall   8290 <__stack_chk_fail@plt>\n   1e6c5:\tc9                   \tleave  \n   1e6c6:\tc3                   \tret    ", "code_s": "undefined8 qlist_copy(undefined8 <span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  undefined8 <span class=\"supfact\">uVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">uVar2</span> = qlist_new();\n  qlist_iter(<span class=\"supfact\">param_1</span>, FUN_0011e615, <span class=\"supfact\">uVar2</span>);\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return <span class=\"supfact\">uVar2</span>;\n}", "code_t": "QList *qlist_copy(QList *<span class=\"supfact\">src</span>) {\n  long lVar1;\n  QList *<span class=\"supfact\">opaque</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  QList *<span class=\"supfact\">src</span> - local;\n  QList *dst;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">opaque</span> = qlist_new();\n  qlist_iter(<span class=\"supfact\">src</span>, qlist_copy_elem, <span class=\"supfact\">opaque</span>);\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return <span class=\"supfact\">opaque</span>;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "src", "ref_type": "QList * *"}, {"name": "uVar2", "type": "disappear", "pred_name": "", "ref_name": "opaque", "ref_type": "QList * *"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "DennisKofflard", "repo_name": "Trident_i2c_controller", "path": "DennisKofflard/Trident_i2c_controller/7f3b1341443e0a8ff448c9a5c1a21c28b9aacb88b829d641d7994be27df60654", "path_in_repo": "DennisKofflard/Trident_i2c_controller/congatec_cgoslib/Lx/libcgos.so", "objdump": "00000000000052ac <CgosCgbcSetControl>:\n    52ac:\t55                   \tpush   %rbp\n    52ad:\t48 89 e5             \tmov    %rsp,%rbp\n    52b0:\t48 83 ec 10          \tsub    $0x10,%rsp\n    52b4:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n    52b7:\t89 75 f8             \tmov    %esi,-0x8(%rbp)\n    52ba:\t89 55 f4             \tmov    %edx,-0xc(%rbp)\n    52bd:\t8b 4d f4             \tmov    -0xc(%rbp),%ecx\n    52c0:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    52c3:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    52c6:\t6a 00                \tpush   $0x0\n    52c8:\t6a 00                \tpush   $0x0\n    52ca:\t6a 00                \tpush   $0x0\n    52cc:\t6a 00                \tpush   $0x0\n    52ce:\t41 89 c9             \tmov    %ecx,%r9d\n    52d1:\t41 89 d0             \tmov    %edx,%r8d\n    52d4:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    52d9:\t89 c2                \tmov    %eax,%edx\n    52db:\tbe 4f 00 00 00       \tmov    $0x4f,%esi\n    52e0:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    52e5:\te8 e6 de ff ff       \tcall   31d0 <CallDrvPlain@plt>\n    52ea:\t48 83 c4 20          \tadd    $0x20,%rsp\n    52ee:\tc9                   \tleave  \n    52ef:\tc3                   \tret    ", "code_s": "void CgosCgbcSetControl(undefined4 <span class=\"supfact\">param_1</span>,\n                        undefined4 <span class=\"supfact\">param_2</span>,\n                        undefined4 <span class=\"supfact\">param_3</span>) {\n  CallDrvPlain(Number, Number, <span class=\"supfact\">param_1</span>, Number,\n               <span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>, Number, Number,\n               Number, Number);\n  return;\n}", "code_t": "uint CgosCgbcSetControl(HCGOS <span class=\"supfact\">hCgos</span>,\n                        uint <span class=\"supfact\">dwLine</span>,\n                        uint <span class=\"supfact\">dwSetting</span>) {\n  uint uVar1;\n  uint <span class=\"supfact\">dwSetting</span> - local;\n  uint <span class=\"supfact\">dwLine</span> - local;\n  HCGOS <span class=\"supfact\">hCgos</span> - local;\n  uVar1 = CallDrvPlain(Number, Number, <span class=\"supfact\">hCgos</span>, Number,\n                       <span class=\"supfact\">dwLine</span>, <span class=\"supfact\">dwSetting</span>,\n                       Number, Number, (uint *)Number, (uint *)Number);\n  return uVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "hCgos", "ref_type": "HCGOS"}, {"name": "param_2", "type": "int", "pred_name": "__unk__", "ref_name": "dwLine", "ref_type": "uint"}, {"name": "param_3", "type": "int", "pred_name": "__unk__", "ref_name": "dwSetting", "ref_type": "uint"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000001ecf4 <qstring_append>:\n   1ecf4:\t55                   \tpush   %rbp\n   1ecf5:\t48 89 e5             \tmov    %rsp,%rbp\n   1ecf8:\t48 83 ec 20          \tsub    $0x20,%rsp\n   1ecfc:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   1ed00:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n   1ed04:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   1ed0b:\t00 00 \n   1ed0d:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   1ed11:\t31 c0                \txor    %eax,%eax\n   1ed13:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1ed17:\t48 89 c7             \tmov    %rax,%rdi\n   1ed1a:\te8 41 95 fe ff       \tcall   8260 <strlen@plt>\n   1ed1f:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n   1ed23:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n   1ed27:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1ed2b:\t48 89 d6             \tmov    %rdx,%rsi\n   1ed2e:\t48 89 c7             \tmov    %rax,%rdi\n   1ed31:\te8 1a ff ff ff       \tcall   1ec50 <capacity_increase>\n   1ed36:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1ed3a:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n   1ed3e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1ed42:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n   1ed46:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n   1ed4a:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n   1ed4e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1ed52:\t48 89 c6             \tmov    %rax,%rsi\n   1ed55:\t48 89 cf             \tmov    %rcx,%rdi\n   1ed58:\te8 c3 97 fe ff       \tcall   8520 <memcpy@plt>\n   1ed5d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1ed61:\t48 8b 50 18          \tmov    0x18(%rax),%rdx\n   1ed65:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1ed69:\t48 01 c2             \tadd    %rax,%rdx\n   1ed6c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1ed70:\t48 89 50 18          \tmov    %rdx,0x18(%rax)\n   1ed74:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1ed78:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n   1ed7c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1ed80:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n   1ed84:\t48 01 d0             \tadd    %rdx,%rax\n   1ed87:\tc6 00 00             \tmovb   $0x0,(%rax)\n   1ed8a:\t90                   \tnop\n   1ed8b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1ed8f:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n   1ed96:\t00 00 \n   1ed98:\t74 05                \tje     1ed9f <qstring_append+0xab>\n   1ed9a:\te8 f1 94 fe ff       \tcall   8290 <__stack_chk_fail@plt>\n   1ed9f:\tc9                   \tleave  \n   1eda0:\tc3                   \tret    ", "code_s": "void qstring_append(long <span class=\"supfact\">param_1</span>,\n                    char *<span class=\"supfact\">param_2</span>) {\n  long lVar1;\n  size_t <span class=\"supfact\">__n</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">__n</span> = strlen(<span class=\"supfact\">param_2</span>);\n  FUN_0011ec50(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">__n</span>);\n  memcpy((void *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                  *(long *)(<span class=\"supfact\">param_1</span> + Number)),\n         <span class=\"supfact\">param_2</span>, <span class=\"supfact\">__n</span>);\n  *(size_t *)(<span class=\"supfact\">param_1</span> + Number) =\n      *(long *)(<span class=\"supfact\">param_1</span> + Number) + <span class=\"supfact\">__n</span>;\n  *(undefined *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                 *(long *)(<span class=\"supfact\">param_1</span> + Number)) = Number;\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "code_t": "void qstring_append(QString *<span class=\"supfact\">qstring</span>,\n                    char *<span class=\"supfact\">str</span>) {\n  long lVar1;\n  size_t <span class=\"supfact\">len_00</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  char *<span class=\"supfact\">str</span> - local;\n  QString *<span class=\"supfact\">qstring</span> - local;\n  size_t len;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">len_00</span> = strlen(<span class=\"supfact\">str</span>);\n  capacity_increase(<span class=\"supfact\">qstring</span>, <span class=\"supfact\">len_00</span>);\n  memcpy(<span class=\"supfact\">qstring</span> - &gt; string + <span class=\"supfact\">qstring</span> - &gt;\n         length, <span class=\"supfact\">str</span>, <span class=\"supfact\">len_00</span>);\n  <span class=\"supfact\">qstring</span> - &gt;\n  length = <span class=\"supfact\">qstring</span> - &gt;\n  length + <span class=\"supfact\">len_00</span>;\n  <span class=\"supfact\">qstring</span> - &gt;\n  string[<span class=\"supfact\">qstring</span> - &gt; length] = String;\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "long", "pred_name": "param_1", "ref_name": "qstring", "ref_type": "QString * *"}, {"name": "param_2", "type": "undefined8", "pred_name": "param_2", "ref_name": "str", "ref_type": "char * *"}, {"name": "__n", "type": "size_t", "pred_name": "__n", "ref_name": "len_00", "ref_type": "size_t"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "malvira", "repo_name": "erbr", "path": "malvira/erbr/2f8350b2482c685589c80daaa31735f028d7aa115ebd831f8cce34b92e2b972e", "path_in_repo": "malvira/erbr/contiki/examples/multi-threading/multi-threading.native", "objdump": "00000000004066dc <announcement_remove>:\n  4066dc:\t55                   \tpush   %rbp\n  4066dd:\t48 89 e5             \tmov    %rsp,%rbp\n  4066e0:\t48 83 ec 10          \tsub    $0x10,%rsp\n  4066e4:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  4066e8:\t48 8b 05 99 ba 00 00 \tmov    0xba99(%rip),%rax        # 412188 <announcements>\n  4066ef:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  4066f3:\t48 89 d6             \tmov    %rdx,%rsi\n  4066f6:\t48 89 c7             \tmov    %rax,%rdi\n  4066f9:\te8 9f 1e 00 00       \tcall   40859d <list_remove>\n  4066fe:\t90                   \tnop\n  4066ff:\tc9                   \tleave  \n  406700:\tc3                   \tret    ", "code_s": "void announcement_remove(undefined8 <span class=\"supfact\">param_1</span>) {\n  list_remove(PTR_DAT_00412188, <span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "void announcement_remove(announcement *<span class=\"supfact\">a</span>) {\n  announcement *<span class=\"supfact\">a</span> - local;\n  list_remove(announcements, <span class=\"supfact\">a</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "announcement * *", "pred_name": "a", "ref_name": "a", "ref_type": "announcement * *"}], "body_in_train": true}, {"repo_owner": "indicolite", "repo_name": "kcolnas", "path": "indicolite/kcolnas/063cfa2fef0cfbd9f08068e73d8d398c000eb329738ef91d6c9feb12c11d0efc", "path_in_repo": "indicolite/kcolnas/src/libsanlock_client.so.1.0", "objdump": "000000000000569c <sanlock_state_to_args>:\n    569c:\t55                   \tpush   %rbp\n    569d:\t48 89 e5             \tmov    %rsp,%rbp\n    56a0:\t53                   \tpush   %rbx\n    56a1:\t48 81 ec 98 11 00 00 \tsub    $0x1198,%rsp\n    56a8:\t48 89 bd 78 ee ff ff \tmov    %rdi,-0x1188(%rbp)\n    56af:\t48 89 b5 70 ee ff ff \tmov    %rsi,-0x1190(%rbp)\n    56b6:\t48 89 95 68 ee ff ff \tmov    %rdx,-0x1198(%rbp)\n    56bd:\tc7 45 ec 01 00 00 00 \tmovl   $0x1,-0x14(%rbp)\n    56c4:\tc7 45 e8 00 00 00 00 \tmovl   $0x0,-0x18(%rbp)\n    56cb:\tc7 45 e4 00 00 00 00 \tmovl   $0x0,-0x1c(%rbp)\n    56d2:\tc7 45 e0 00 00 00 00 \tmovl   $0x0,-0x20(%rbp)\n    56d9:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n    56e0:\teb 3c                \tjmp    571e <sanlock_state_to_args+0x82>\n    56e2:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    56e5:\t48 63 d0             \tmovslq %eax,%rdx\n    56e8:\t48 8b 85 78 ee ff ff \tmov    -0x1188(%rbp),%rax\n    56ef:\t48 01 d0             \tadd    %rdx,%rax\n    56f2:\t0f b6 00             \tmovzbl (%rax),%eax\n    56f5:\t3c 5c                \tcmp    $0x5c,%al\n    56f7:\t75 06                \tjne    56ff <sanlock_state_to_args+0x63>\n    56f9:\t83 45 dc 01          \taddl   $0x1,-0x24(%rbp)\n    56fd:\teb 1b                \tjmp    571a <sanlock_state_to_args+0x7e>\n    56ff:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    5702:\t48 63 d0             \tmovslq %eax,%rdx\n    5705:\t48 8b 85 78 ee ff ff \tmov    -0x1188(%rbp),%rax\n    570c:\t48 01 d0             \tadd    %rdx,%rax\n    570f:\t0f b6 00             \tmovzbl (%rax),%eax\n    5712:\t3c 20                \tcmp    $0x20,%al\n    5714:\t75 04                \tjne    571a <sanlock_state_to_args+0x7e>\n    5716:\t83 45 ec 01          \taddl   $0x1,-0x14(%rbp)\n    571a:\t83 45 dc 01          \taddl   $0x1,-0x24(%rbp)\n    571e:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    5721:\t48 63 d8             \tmovslq %eax,%rbx\n    5724:\t48 8b 85 78 ee ff ff \tmov    -0x1188(%rbp),%rax\n    572b:\t48 89 c7             \tmov    %rax,%rdi\n    572e:\te8 8d c9 ff ff       \tcall   20c0 <strlen@plt>\n    5733:\t48 39 c3             \tcmp    %rax,%rbx\n    5736:\t72 aa                \tjb     56e2 <sanlock_state_to_args+0x46>\n    5738:\t48 8b 85 70 ee ff ff \tmov    -0x1190(%rbp),%rax\n    573f:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n    5742:\t89 10                \tmov    %edx,(%rax)\n    5744:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    5747:\t48 98                \tcltq   \n    5749:\t48 c1 e0 03          \tshl    $0x3,%rax\n    574d:\t48 89 c7             \tmov    %rax,%rdi\n    5750:\te8 0b ca ff ff       \tcall   2160 <malloc@plt>\n    5755:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    5759:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n    575e:\t75 0a                \tjne    576a <sanlock_state_to_args+0xce>\n    5760:\tb8 f4 ff ff ff       \tmov    $0xfffffff4,%eax\n    5765:\te9 d0 02 00 00       \tjmp    5a3a <sanlock_state_to_args+0x39e>\n    576a:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    576d:\t48 98                \tcltq   \n    576f:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    5776:\t00 \n    5777:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    577b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    5780:\t48 89 c7             \tmov    %rax,%rdi\n    5783:\te8 68 c9 ff ff       \tcall   20f0 <memset@plt>\n    5788:\tc7 45 d8 00 00 00 00 \tmovl   $0x0,-0x28(%rbp)\n    578f:\t48 8d 85 80 ee ff ff \tlea    -0x1180(%rbp),%rax\n    5796:\tba 31 11 00 00       \tmov    $0x1131,%edx\n    579b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    57a0:\t48 89 c7             \tmov    %rax,%rdi\n    57a3:\te8 48 c9 ff ff       \tcall   20f0 <memset@plt>\n    57a8:\tc7 45 e0 00 00 00 00 \tmovl   $0x0,-0x20(%rbp)\n    57af:\t48 8b 85 78 ee ff ff \tmov    -0x1188(%rbp),%rax\n    57b6:\t48 89 c7             \tmov    %rax,%rdi\n    57b9:\te8 02 c9 ff ff       \tcall   20c0 <strlen@plt>\n    57be:\t89 45 cc             \tmov    %eax,-0x34(%rbp)\n    57c1:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n    57c8:\te9 dd 01 00 00       \tjmp    59aa <sanlock_state_to_args+0x30e>\n    57cd:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    57d0:\t3b 45 cc             \tcmp    -0x34(%rbp),%eax\n    57d3:\t7d 49                \tjge    581e <sanlock_state_to_args+0x182>\n    57d5:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    57d8:\t48 63 d0             \tmovslq %eax,%rdx\n    57db:\t48 8b 85 78 ee ff ff \tmov    -0x1188(%rbp),%rax\n    57e2:\t48 01 d0             \tadd    %rdx,%rax\n    57e5:\t0f b6 00             \tmovzbl (%rax),%eax\n    57e8:\t3c 5c                \tcmp    $0x5c,%al\n    57ea:\t75 32                \tjne    581e <sanlock_state_to_args+0x182>\n    57ec:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    57ef:\t48 63 d0             \tmovslq %eax,%rdx\n    57f2:\t48 8b 85 78 ee ff ff \tmov    -0x1188(%rbp),%rax\n    57f9:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n    57fd:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    5800:\t8d 50 01             \tlea    0x1(%rax),%edx\n    5803:\t89 55 d8             \tmov    %edx,-0x28(%rbp)\n    5806:\t0f b6 11             \tmovzbl (%rcx),%edx\n    5809:\t48 98                \tcltq   \n    580b:\t88 94 05 80 ee ff ff \tmov    %dl,-0x1180(%rbp,%rax,1)\n    5812:\tc7 45 e4 01 00 00 00 \tmovl   $0x1,-0x1c(%rbp)\n    5819:\te9 88 01 00 00       \tjmp    59a6 <sanlock_state_to_args+0x30a>\n    581e:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    5821:\t3b 45 cc             \tcmp    -0x34(%rbp),%eax\n    5824:\t7d 38                \tjge    585e <sanlock_state_to_args+0x1c2>\n    5826:\t83 7d e4 00          \tcmpl   $0x0,-0x1c(%rbp)\n    582a:\t74 32                \tje     585e <sanlock_state_to_args+0x1c2>\n    582c:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    582f:\t48 63 d0             \tmovslq %eax,%rdx\n    5832:\t48 8b 85 78 ee ff ff \tmov    -0x1188(%rbp),%rax\n    5839:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n    583d:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    5840:\t8d 50 01             \tlea    0x1(%rax),%edx\n    5843:\t89 55 d8             \tmov    %edx,-0x28(%rbp)\n    5846:\t0f b6 11             \tmovzbl (%rcx),%edx\n    5849:\t48 98                \tcltq   \n    584b:\t88 94 05 80 ee ff ff \tmov    %dl,-0x1180(%rbp,%rax,1)\n    5852:\tc7 45 e4 00 00 00 00 \tmovl   $0x0,-0x1c(%rbp)\n    5859:\te9 48 01 00 00       \tjmp    59a6 <sanlock_state_to_args+0x30a>\n    585e:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    5861:\t3b 45 cc             \tcmp    -0x34(%rbp),%eax\n    5864:\t7d 5b                \tjge    58c1 <sanlock_state_to_args+0x225>\n    5866:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    5869:\t48 63 d0             \tmovslq %eax,%rdx\n    586c:\t48 8b 85 78 ee ff ff \tmov    -0x1188(%rbp),%rax\n    5873:\t48 01 d0             \tadd    %rdx,%rax\n    5876:\t0f b6 00             \tmovzbl (%rax),%eax\n    5879:\t3c 20                \tcmp    $0x20,%al\n    587b:\t75 44                \tjne    58c1 <sanlock_state_to_args+0x225>\n    587d:\t83 7d e0 02          \tcmpl   $0x2,-0x20(%rbp)\n    5881:\t7f 3e                \tjg     58c1 <sanlock_state_to_args+0x225>\n    5883:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    5886:\t8d 50 01             \tlea    0x1(%rax),%edx\n    5889:\t89 55 d8             \tmov    %edx,-0x28(%rbp)\n    588c:\t48 98                \tcltq   \n    588e:\tc6 84 05 80 ee ff ff \tmovb   $0x5c,-0x1180(%rbp,%rax,1)\n    5895:\t5c \n    5896:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    5899:\t48 63 d0             \tmovslq %eax,%rdx\n    589c:\t48 8b 85 78 ee ff ff \tmov    -0x1188(%rbp),%rax\n    58a3:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n    58a7:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    58aa:\t8d 50 01             \tlea    0x1(%rax),%edx\n    58ad:\t89 55 d8             \tmov    %edx,-0x28(%rbp)\n    58b0:\t0f b6 11             \tmovzbl (%rcx),%edx\n    58b3:\t48 98                \tcltq   \n    58b5:\t88 94 05 80 ee ff ff \tmov    %dl,-0x1180(%rbp,%rax,1)\n    58bc:\te9 e5 00 00 00       \tjmp    59a6 <sanlock_state_to_args+0x30a>\n    58c1:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    58c4:\t3b 45 cc             \tcmp    -0x34(%rbp),%eax\n    58c7:\t7d 5d                \tjge    5926 <sanlock_state_to_args+0x28a>\n    58c9:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    58cc:\t48 63 d0             \tmovslq %eax,%rdx\n    58cf:\t48 8b 85 78 ee ff ff \tmov    -0x1188(%rbp),%rax\n    58d6:\t48 01 d0             \tadd    %rdx,%rax\n    58d9:\t0f b6 00             \tmovzbl (%rax),%eax\n    58dc:\t3c 20                \tcmp    $0x20,%al\n    58de:\t74 46                \tje     5926 <sanlock_state_to_args+0x28a>\n    58e0:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    58e3:\t48 63 d0             \tmovslq %eax,%rdx\n    58e6:\t48 8b 85 78 ee ff ff \tmov    -0x1188(%rbp),%rax\n    58ed:\t48 01 d0             \tadd    %rdx,%rax\n    58f0:\t0f b6 00             \tmovzbl (%rax),%eax\n    58f3:\t3c 3a                \tcmp    $0x3a,%al\n    58f5:\t75 04                \tjne    58fb <sanlock_state_to_args+0x25f>\n    58f7:\t83 45 e0 01          \taddl   $0x1,-0x20(%rbp)\n    58fb:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    58fe:\t48 63 d0             \tmovslq %eax,%rdx\n    5901:\t48 8b 85 78 ee ff ff \tmov    -0x1188(%rbp),%rax\n    5908:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n    590c:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    590f:\t8d 50 01             \tlea    0x1(%rax),%edx\n    5912:\t89 55 d8             \tmov    %edx,-0x28(%rbp)\n    5915:\t0f b6 11             \tmovzbl (%rcx),%edx\n    5918:\t48 98                \tcltq   \n    591a:\t88 94 05 80 ee ff ff \tmov    %dl,-0x1180(%rbp,%rax,1)\n    5921:\te9 80 00 00 00       \tjmp    59a6 <sanlock_state_to_args+0x30a>\n    5926:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n    592a:\t48 8d 85 80 ee ff ff \tlea    -0x1180(%rbp),%rax\n    5931:\t48 89 d6             \tmov    %rdx,%rsi\n    5934:\t48 89 c7             \tmov    %rax,%rdi\n    5937:\te8 a4 c8 ff ff       \tcall   21e0 <sanlock_str_to_res@plt>\n    593c:\t89 45 c8             \tmov    %eax,-0x38(%rbp)\n    593f:\t83 7d c8 00          \tcmpl   $0x0,-0x38(%rbp)\n    5943:\t0f 88 8e 00 00 00    \tjs     59d7 <sanlock_state_to_args+0x33b>\n    5949:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    594d:\t48 85 c0             \ttest   %rax,%rax\n    5950:\t0f 84 81 00 00 00    \tje     59d7 <sanlock_state_to_args+0x33b>\n    5956:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n    5959:\t3b 45 ec             \tcmp    -0x14(%rbp),%eax\n    595c:\t74 7c                \tje     59da <sanlock_state_to_args+0x33e>\n    595e:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n    5961:\t8d 50 01             \tlea    0x1(%rax),%edx\n    5964:\t89 55 e8             \tmov    %edx,-0x18(%rbp)\n    5967:\t48 98                \tcltq   \n    5969:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    5970:\t00 \n    5971:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    5975:\t48 01 c2             \tadd    %rax,%rdx\n    5978:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    597c:\t48 89 02             \tmov    %rax,(%rdx)\n    597f:\tc7 45 d8 00 00 00 00 \tmovl   $0x0,-0x28(%rbp)\n    5986:\t48 8d 85 80 ee ff ff \tlea    -0x1180(%rbp),%rax\n    598d:\tba 31 11 00 00       \tmov    $0x1131,%edx\n    5992:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    5997:\t48 89 c7             \tmov    %rax,%rdi\n    599a:\te8 51 c7 ff ff       \tcall   20f0 <memset@plt>\n    599f:\tc7 45 e0 00 00 00 00 \tmovl   $0x0,-0x20(%rbp)\n    59a6:\t83 45 dc 01          \taddl   $0x1,-0x24(%rbp)\n    59aa:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n    59ad:\t3b 45 dc             \tcmp    -0x24(%rbp),%eax\n    59b0:\t0f 8d 17 fe ff ff    \tjge    57cd <sanlock_state_to_args+0x131>\n    59b6:\t48 8b 85 70 ee ff ff \tmov    -0x1190(%rbp),%rax\n    59bd:\t8b 55 e8             \tmov    -0x18(%rbp),%edx\n    59c0:\t89 10                \tmov    %edx,(%rax)\n    59c2:\t48 8b 85 68 ee ff ff \tmov    -0x1198(%rbp),%rax\n    59c9:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    59cd:\t48 89 10             \tmov    %rdx,(%rax)\n    59d0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    59d5:\teb 63                \tjmp    5a3a <sanlock_state_to_args+0x39e>\n    59d7:\t90                   \tnop\n    59d8:\teb 01                \tjmp    59db <sanlock_state_to_args+0x33f>\n    59da:\t90                   \tnop\n    59db:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n    59e2:\teb 3f                \tjmp    5a23 <sanlock_state_to_args+0x387>\n    59e4:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    59e7:\t48 98                \tcltq   \n    59e9:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    59f0:\t00 \n    59f1:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    59f5:\t48 01 d0             \tadd    %rdx,%rax\n    59f8:\t48 8b 00             \tmov    (%rax),%rax\n    59fb:\t48 85 c0             \ttest   %rax,%rax\n    59fe:\t74 1f                \tje     5a1f <sanlock_state_to_args+0x383>\n    5a00:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    5a03:\t48 98                \tcltq   \n    5a05:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    5a0c:\t00 \n    5a0d:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    5a11:\t48 01 d0             \tadd    %rdx,%rax\n    5a14:\t48 8b 00             \tmov    (%rax),%rax\n    5a17:\t48 89 c7             \tmov    %rax,%rdi\n    5a1a:\te8 11 c6 ff ff       \tcall   2030 <free@plt>\n    5a1f:\t83 45 dc 01          \taddl   $0x1,-0x24(%rbp)\n    5a23:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    5a26:\t3b 45 ec             \tcmp    -0x14(%rbp),%eax\n    5a29:\t7c b9                \tjl     59e4 <sanlock_state_to_args+0x348>\n    5a2b:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    5a2f:\t48 89 c7             \tmov    %rax,%rdi\n    5a32:\te8 f9 c5 ff ff       \tcall   2030 <free@plt>\n    5a37:\t8b 45 c8             \tmov    -0x38(%rbp),%eax\n    5a3a:\t48 81 c4 98 11 00 00 \tadd    $0x1198,%rsp\n    5a41:\t5b                   \tpop    %rbx\n    5a42:\t5d                   \tpop    %rbp\n    5a43:\tc3                   \tret    ", "code_s": "int sanlock_state_to_args(char *<span class=\"supfact\">param_1</span>,\n                          int *<span class=\"supfact\">param_2</span>,\n                          void **<span class=\"supfact\">param_3</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  size_t <span class=\"supfact\">sVar2</span>;\n  ulong <span class=\"supfact\">uVar3</span>;\n  char <span class=\"supfact\">local_1188</span>[Number];\n  long <span class=\"supfact\">local_48</span>;\n  int <span class=\"supfact\">local_40</span>;\n  int <span class=\"supfact\">local_3c</span>;\n  void *<span class=\"supfact\">local_38</span>;\n  int <span class=\"supfact\">local_30</span>;\n  int <span class=\"supfact\">local_2c</span>;\n  int <span class=\"supfact\">local_28</span>;\n  int <span class=\"supfact\">local_24</span>;\n  int <span class=\"supfact\">local_20</span>;\n  int <span class=\"supfact\">local_1c</span>;\n  <span class=\"supfact\">local_1c</span> = Number;\n  <span class=\"supfact\">local_20</span> = Number;\n  <span class=\"supfact\">local_24</span> = Number;\n  <span class=\"supfact\">local_28</span> = Number;\n  for (<span class=\"supfact\">local_2c</span> = Number;\n       <span class=\"supfact\">uVar3</span> = (ulong)<span class=\"supfact\">local_2c</span>,\n      <span class=\"supfact\">sVar2</span> = strlen(<span class=\"supfact\">param_1</span>),\n      <span class=\"supfact\">uVar3</span> & lt;\n       <span class=\"supfact\">sVar2</span>;\n       <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">local_2c</span> + Number) {\n    if (<span class=\"supfact\">param_1</span>[<span class=\"supfact\">local_2c</span>] == String) {\n      <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">local_2c</span> + Number;\n    } else if (<span class=\"supfact\">param_1</span>[<span class=\"supfact\">local_2c</span>] == String) {\n      <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number;\n    }\n  }\n  *<span class=\"supfact\">param_2</span> = <span class=\"supfact\">local_1c</span>;\n  <span class=\"supfact\">local_38</span> =\n      malloc((long)<span class=\"supfact\">local_1c</span> & lt; &lt; Number);\n  if (<span class=\"supfact\">local_38</span> == (void *)Number) {\n    <span class=\"supfact\">iVar1</span> = -Number;\n  } else {\n    memset(<span class=\"supfact\">local_38</span>, Number,\n           (long)<span class=\"supfact\">local_1c</span> * Number);\n    <span class=\"supfact\">local_30</span> = Number;\n    memset(<span class=\"supfact\">local_1188</span>, Number, Number);\n    <span class=\"supfact\">local_28</span> = Number;\n    <span class=\"supfact\">sVar2</span> = strlen(<span class=\"supfact\">param_1</span>);\n    <span class=\"supfact\">local_3c</span> = (int)<span class=\"supfact\">sVar2</span>;\n    for (<span class=\"supfact\">local_2c</span> = Number; <span class=\"supfact\">local_2c</span> &lt;\n         = <span class=\"supfact\">local_3c</span>;\n         <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">local_2c</span> + Number) {\n      if ((<span class=\"supfact\">local_2c</span> & lt; <span class=\"supfact\">local_3c</span>) & amp; &amp;\n          (<span class=\"supfact\">param_1</span>[<span class=\"supfact\">local_2c</span>] == String)) {\n        <span class=\"supfact\">local_1188</span>[<span class=\"supfact\">local_30</span>] =\n            <span class=\"supfact\">param_1</span>[<span class=\"supfact\">local_2c</span>];\n        <span class=\"supfact\">local_24</span> = Number;\n        <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_30</span> + Number;\n      } else if ((<span class=\"supfact\">local_2c</span> & lt; <span class=\"supfact\">local_3c</span>) &\n                     amp;\n                 &amp; (<span class=\"supfact\">local_24</span> != Number)) {\n        <span class=\"supfact\">local_1188</span>[<span class=\"supfact\">local_30</span>] =\n            <span class=\"supfact\">param_1</span>[<span class=\"supfact\">local_2c</span>];\n        <span class=\"supfact\">local_24</span> = Number;\n        <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_30</span> + Number;\n      } else if (((<span class=\"supfact\">local_2c</span> & lt; <span class=\"supfact\">local_3c</span>) &\n                      amp;\n                  &amp; (<span class=\"supfact\">param_1</span>[<span class=\"supfact\">local_2c</span>] ==\n                         String)) &\n                     amp;\n                 &amp; (<span class=\"supfact\">local_28</span> & lt; Number)) {\n        <span class=\"supfact\">local_1188</span>[<span class=\"supfact\">local_30</span>] = String;\n        <span class=\"supfact\">local_1188</span>[<span class=\"supfact\">local_30</span> + Number] =\n            <span class=\"supfact\">param_1</span>[<span class=\"supfact\">local_2c</span>];\n        <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_30</span> + Number;\n      } else if ((<span class=\"supfact\">local_2c</span> & lt; <span class=\"supfact\">local_3c</span>) &\n                     amp;\n                 &amp; (<span class=\"supfact\">param_1</span>[<span class=\"supfact\">local_2c</span>] !=\n                        String)) {\n        if (<span class=\"supfact\">param_1</span>[<span class=\"supfact\">local_2c</span>] == String) {\n          <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_28</span> + Number;\n        }\n        <span class=\"supfact\">local_1188</span>[<span class=\"supfact\">local_30</span>] =\n            <span class=\"supfact\">param_1</span>[<span class=\"supfact\">local_2c</span>];\n        <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_30</span> + Number;\n      } else {\n        <span class=\"supfact\">local_40</span> = sanlock_str_to_res(\n            <span class=\"supfact\">local_1188</span>, &amp; <span class=\"supfact\">local_48</span>);\n        if ((<span class=\"supfact\">local_40</span> & lt; Number) ||\n            ((<span class=\"supfact\">local_48</span> == Number ||\n              (<span class=\"supfact\">local_20</span> == <span class=\"supfact\">local_1c</span>)))) {\n          for (<span class=\"supfact\">local_2c</span> = Number; <span class=\"supfact\">local_2c</span> & lt;\n               <span class=\"supfact\">local_1c</span>;\n               <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">local_2c</span> + Number) {\n            if (*(long *)((long)<span class=\"supfact\">local_38</span> +\n                          (long)<span class=\"supfact\">local_2c</span> * Number) != Number) {\n              free(*(void **)((long)<span class=\"supfact\">local_38</span> +\n                              (long)<span class=\"supfact\">local_2c</span> * Number));\n            }\n          }\n          free(<span class=\"supfact\">local_38</span>);\n          return <span class=\"supfact\">local_40</span>;\n        }\n        *(long *)((long)<span class=\"supfact\">local_20</span> * Number +\n                  (long)<span class=\"supfact\">local_38</span>) = <span class=\"supfact\">local_48</span>;\n        <span class=\"supfact\">local_30</span> = Number;\n        <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_20</span> + Number;\n        memset(<span class=\"supfact\">local_1188</span>, Number, Number);\n        <span class=\"supfact\">local_28</span> = Number;\n      }\n    }\n    *<span class=\"supfact\">param_2</span> = <span class=\"supfact\">local_20</span>;\n    *<span class=\"supfact\">param_3</span> = <span class=\"supfact\">local_38</span>;\n    <span class=\"supfact\">iVar1</span> = Number;\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int sanlock_state_to_args(char *<span class=\"supfact\">res_state</span>,\n                          int *<span class=\"supfact\">res_count</span>,\n                          sanlk_resource ***<span class=\"supfact\">res_args</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  size_t <span class=\"supfact\">sVar2</span>;\n  ulong <span class=\"supfact\">uVar3</span>;\n  sanlk_resource ***<span class=\"supfact\">res_args</span> - local;\n  int *<span class=\"supfact\">res_count</span> - local;\n  char *<span class=\"supfact\">res_state</span> - local;\n  char <span class=\"supfact\">str</span>[Number];\n  sanlk_resource *<span class=\"supfact\">res</span>;\n  int <span class=\"supfact\">rv</span>;\n  int <span class=\"supfact\">len</span>;\n  sanlk_resource **<span class=\"supfact\">args</span>;\n  int <span class=\"supfact\">j</span>;\n  int <span class=\"supfact\">i</span>;\n  int <span class=\"supfact\">sep_colons</span>;\n  int <span class=\"supfact\">escape</span>;\n  int <span class=\"supfact\">arg_count</span>;\n  int <span class=\"supfact\">count</span>;\n  <span class=\"supfact\">count</span> = Number;\n  <span class=\"supfact\">arg_count</span> = Number;\n  <span class=\"supfact\">escape</span> = Number;\n  <span class=\"supfact\">sep_colons</span> = Number;\n  for (<span class=\"supfact\">i</span> = Number;\n       <span class=\"supfact\">uVar3</span> = (ulong)<span class=\"supfact\">i</span>,\n      <span class=\"supfact\">sVar2</span> = strlen(<span class=\"supfact\">res_state</span>),\n      <span class=\"supfact\">uVar3</span> & lt;\n       <span class=\"supfact\">sVar2</span>; <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    if (<span class=\"supfact\">res_state</span>[<span class=\"supfact\">i</span>] == String) {\n      <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n    } else if (<span class=\"supfact\">res_state</span>[<span class=\"supfact\">i</span>] == String) {\n      <span class=\"supfact\">count</span> = <span class=\"supfact\">count</span> + Number;\n    }\n  }\n  *<span class=\"supfact\">res_count</span> = <span class=\"supfact\">count</span>;\n  <span class=\"supfact\">args</span> =\n      (sanlk_resource **)malloc((long)<span class=\"supfact\">count</span> & lt; &lt; Number);\n  if (<span class=\"supfact\">args</span> == (sanlk_resource **)Number) {\n    <span class=\"supfact\">iVar1</span> = -Number;\n  } else {\n    memset(<span class=\"supfact\">args</span>, Number, (long)<span class=\"supfact\">count</span> * Number);\n    <span class=\"supfact\">j</span> = Number;\n    memset(<span class=\"supfact\">str</span>, Number, Number);\n    <span class=\"supfact\">sep_colons</span> = Number;\n    <span class=\"supfact\">sVar2</span> = strlen(<span class=\"supfact\">res_state</span>);\n    <span class=\"supfact\">len</span> = (int)<span class=\"supfact\">sVar2</span>;\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> &lt;\n         = <span class=\"supfact\">len</span>;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      if ((<span class=\"supfact\">i</span> & lt; <span class=\"supfact\">len</span>) & amp; &amp;\n          (<span class=\"supfact\">res_state</span>[<span class=\"supfact\">i</span>] == String)) {\n        <span class=\"supfact\">str</span>[<span class=\"supfact\">j</span>] =\n            <span class=\"supfact\">res_state</span>[<span class=\"supfact\">i</span>];\n        <span class=\"supfact\">escape</span> = Number;\n        <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number;\n      } else if ((<span class=\"supfact\">i</span> & lt; <span class=\"supfact\">len</span>) & amp; &amp;\n                 (<span class=\"supfact\">escape</span> != Number)) {\n        <span class=\"supfact\">str</span>[<span class=\"supfact\">j</span>] =\n            <span class=\"supfact\">res_state</span>[<span class=\"supfact\">i</span>];\n        <span class=\"supfact\">escape</span> = Number;\n        <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number;\n      } else if (((<span class=\"supfact\">i</span> & lt; <span class=\"supfact\">len</span>) & amp; &amp;\n                  (<span class=\"supfact\">res_state</span>[<span class=\"supfact\">i</span>] == String)) &\n                     amp;\n                 &amp; (<span class=\"supfact\">sep_colons</span> & lt; Number)) {\n        <span class=\"supfact\">str</span>[<span class=\"supfact\">j</span>] = String;\n        <span class=\"supfact\">str</span>[<span class=\"supfact\">j</span> + Number] =\n            <span class=\"supfact\">res_state</span>[<span class=\"supfact\">i</span>];\n        <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number;\n      } else if ((<span class=\"supfact\">i</span> & lt; <span class=\"supfact\">len</span>) & amp; &amp;\n                 (<span class=\"supfact\">res_state</span>[<span class=\"supfact\">i</span>] != String)) {\n        if (<span class=\"supfact\">res_state</span>[<span class=\"supfact\">i</span>] == String) {\n          <span class=\"supfact\">sep_colons</span> = <span class=\"supfact\">sep_colons</span> + Number;\n        }\n        <span class=\"supfact\">str</span>[<span class=\"supfact\">j</span>] =\n            <span class=\"supfact\">res_state</span>[<span class=\"supfact\">i</span>];\n        <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number;\n      } else {\n        <span class=\"supfact\">rv</span> =\n            sanlock_str_to_res(<span class=\"supfact\">str</span>, &amp; <span class=\"supfact\">res</span>);\n        if ((<span class=\"supfact\">rv</span> & lt; Number) ||\n            ((<span class=\"supfact\">res</span> == (sanlk_resource *)Number ||\n              (<span class=\"supfact\">arg_count</span> == <span class=\"supfact\">count</span>)))) {\n          for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n               <span class=\"supfact\">count</span>;\n               <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n            if (<span class=\"supfact\">args</span>[<span class=\"supfact\">i</span>] !=\n                (sanlk_resource *)Number) {\n              free(<span class=\"supfact\">args</span>[<span class=\"supfact\">i</span>]);\n            }\n          }\n          free(<span class=\"supfact\">args</span>);\n          return <span class=\"supfact\">rv</span>;\n        }\n        <span class=\"supfact\">args</span>[<span class=\"supfact\">arg_count</span>] = <span class=\"supfact\">res</span>;\n        <span class=\"supfact\">j</span> = Number;\n        <span class=\"supfact\">arg_count</span> = <span class=\"supfact\">arg_count</span> + Number;\n        memset(<span class=\"supfact\">str</span>, Number, Number);\n        <span class=\"supfact\">sep_colons</span> = Number;\n      }\n    }\n    *<span class=\"supfact\">res_count</span> = <span class=\"supfact\">arg_count</span>;\n    *<span class=\"supfact\">res_args</span> = <span class=\"supfact\">args</span>;\n    <span class=\"supfact\">iVar1</span> = Number;\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "param_1", "type": "nls_t * *", "pred_name": "nls", "ref_name": "res_state", "ref_type": "char * *"}, {"name": "param_2", "type": "char * *", "pred_name": "__unk__", "ref_name": "res_count", "ref_type": "int * *"}, {"name": "param_3", "type": "char * *", "pred_name": "__unk__", "ref_name": "res_args", "ref_type": "sanlk_resource * * * *"}, {"name": "iVar1", "type": "disappear", "pred_name": "", "ref_name": "iVar1", "ref_type": "int"}, {"name": "sVar2", "type": "size_t", "pred_name": "sVar2", "ref_name": "sVar2", "ref_type": "size_t"}, {"name": "uVar3", "type": "disappear", "pred_name": "", "ref_name": "uVar3", "ref_type": "ulong"}, {"name": "local_1188", "type": "char[4096][4096]", "pred_name": "__unk__", "ref_name": "str", "ref_type": "char[4401][4401]"}, {"name": "local_48", "type": "char * *", "pred_name": "__unk__", "ref_name": "res", "ref_type": "sanlk_resource * *"}, {"name": "local_40", "type": "int", "pred_name": "__unk__", "ref_name": "rv", "ref_type": "int"}, {"name": "local_3c", "type": "int", "pred_name": "__unk__", "ref_name": "len", "ref_type": "int"}, {"name": "local_38", "type": "char * *", "pred_name": "p", "ref_name": "args", "ref_type": "sanlk_resource * * *"}, {"name": "local_30", "type": "int", "pred_name": "__unk__", "ref_name": "j", "ref_type": "int"}, {"name": "local_2c", "type": "int", "pred_name": "__unk__", "ref_name": "i", "ref_type": "int"}, {"name": "local_28", "type": "int", "pred_name": "__unk__", "ref_name": "sep_colons", "ref_type": "int"}, {"name": "local_24", "type": "int", "pred_name": "__unk__", "ref_name": "escape", "ref_type": "int"}, {"name": "local_20", "type": "int", "pred_name": "j", "ref_name": "arg_count", "ref_type": "int"}, {"name": "local_1c", "type": "int", "pred_name": "i", "ref_name": "count", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "malvira", "repo_name": "erbr", "path": "malvira/erbr/2f8350b2482c685589c80daaa31735f028d7aa115ebd831f8cce34b92e2b972e", "path_in_repo": "malvira/erbr/contiki/examples/multi-threading/multi-threading.native", "objdump": "0000000000405bdb <main>:\n  405bdb:\t55                   \tpush   %rbp\n  405bdc:\t48 89 e5             \tmov    %rsp,%rbp\n  405bdf:\t48 81 ec 40 01 00 00 \tsub    $0x140,%rsp\n  405be6:\t89 bd cc fe ff ff    \tmov    %edi,-0x134(%rbp)\n  405bec:\t48 89 b5 c0 fe ff ff \tmov    %rsi,-0x140(%rbp)\n  405bf3:\tbf a8 d0 40 00       \tmov    $0x40d0a8,%edi\n  405bf8:\te8 53 f4 ff ff       \tcall   405050 <puts@plt>\n  405bfd:\t8b 85 cc fe ff ff    \tmov    -0x134(%rbp),%eax\n  405c03:\t89 05 77 c7 00 00    \tmov    %eax,0xc777(%rip)        # 412380 <contiki_argc>\n  405c09:\t48 8b 85 c0 fe ff ff \tmov    -0x140(%rbp),%rax\n  405c10:\t48 89 05 31 dc 00 00 \tmov    %rax,0xdc31(%rip)        # 413848 <contiki_argv>\n  405c17:\te8 6d 20 00 00       \tcall   407c89 <process_init>\n  405c1c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  405c21:\tbf 00 21 41 00       \tmov    $0x412100,%edi\n  405c26:\te8 fb 1d 00 00       \tcall   407a26 <process_start>\n  405c2b:\te8 e9 2b 00 00       \tcall   408819 <ctimer_init>\n  405c30:\te8 c6 fe ff ff       \tcall   405afb <set_rime_addr>\n  405c35:\te8 e2 35 00 00       \tcall   40921c <queuebuf_init>\n  405c3a:\te8 23 30 00 00       \tcall   408c62 <netstack_init>\n  405c3f:\t48 8b 0d 9a 75 00 00 \tmov    0x759a(%rip),%rcx        # 40d1e0 <rime_driver>\n  405c46:\t48 8b 15 b3 76 00 00 \tmov    0x76b3(%rip),%rdx        # 40d300 <nullrdc_driver>\n  405c4d:\t48 8b 05 4c 76 00 00 \tmov    0x764c(%rip),%rax        # 40d2a0 <nullmac_driver>\n  405c54:\t48 89 c6             \tmov    %rax,%rsi\n  405c57:\tbf cb d0 40 00       \tmov    $0x40d0cb,%edi\n  405c5c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  405c61:\te8 0a f4 ff ff       \tcall   405070 <printf@plt>\n  405c66:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  405c6b:\tbf 80 22 41 00       \tmov    $0x412280,%edi\n  405c70:\te8 b1 1d 00 00       \tcall   407a26 <process_start>\n  405c75:\te8 3f 26 00 00       \tcall   4082b9 <serial_line_init>\n  405c7a:\tbf 30 d0 40 00       \tmov    $0x40d030,%edi\n  405c7f:\te8 c1 23 00 00       \tcall   408045 <autostart_start>\n  405c84:\t48 8b 05 15 c6 00 00 \tmov    0xc615(%rip),%rax        # 4122a0 <stdout@GLIBC_2.2.5>\n  405c8b:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  405c90:\tba 02 00 00 00       \tmov    $0x2,%edx\n  405c95:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  405c9a:\t48 89 c7             \tmov    %rax,%rdi\n  405c9d:\te8 8e f4 ff ff       \tcall   405130 <setvbuf@plt>\n  405ca2:\tbe 70 d0 40 00       \tmov    $0x40d070,%esi\n  405ca7:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  405cac:\te8 1a fd ff ff       \tcall   4059cb <select_set_callback>\n  405cb1:\te8 de 21 00 00       \tcall   407e94 <process_run>\n  405cb6:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  405cb9:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n  405cc0:\t00 \n  405cc1:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n  405cc5:\t74 07                \tje     405cce <main+0xf3>\n  405cc7:\tb8 01 00 00 00       \tmov    $0x1,%eax\n  405ccc:\teb 05                \tjmp    405cd3 <main+0xf8>\n  405cce:\tb8 e8 03 00 00       \tmov    $0x3e8,%eax\n  405cd3:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n  405cd7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  405cdc:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n  405ce1:\t48 8d 95 d0 fe ff ff \tlea    -0x130(%rbp),%rdx\n  405ce8:\t48 89 d7             \tmov    %rdx,%rdi\n  405ceb:\tfc                   \tcld    \n  405cec:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n  405cef:\t89 f8                \tmov    %edi,%eax\n  405cf1:\t89 ca                \tmov    %ecx,%edx\n  405cf3:\t89 55 f0             \tmov    %edx,-0x10(%rbp)\n  405cf6:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n  405cf9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  405cfe:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n  405d03:\t48 8d 95 50 ff ff ff \tlea    -0xb0(%rbp),%rdx\n  405d0a:\t48 89 d7             \tmov    %rdx,%rdi\n  405d0d:\tfc                   \tcld    \n  405d0e:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n  405d11:\t89 f8                \tmov    %edi,%eax\n  405d13:\t89 ca                \tmov    %ecx,%edx\n  405d15:\t89 55 e8             \tmov    %edx,-0x18(%rbp)\n  405d18:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n  405d1b:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n  405d22:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n  405d29:\teb 46                \tjmp    405d71 <main+0x196>\n  405d2b:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  405d2e:\t48 98                \tcltq   \n  405d30:\t48 8b 04 c5 a0 23 41 \tmov    0x4123a0(,%rax,8),%rax\n  405d37:\t00 \n  405d38:\t48 85 c0             \ttest   %rax,%rax\n  405d3b:\t74 30                \tje     405d6d <main+0x192>\n  405d3d:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  405d40:\t48 98                \tcltq   \n  405d42:\t48 8b 04 c5 a0 23 41 \tmov    0x4123a0(,%rax,8),%rax\n  405d49:\t00 \n  405d4a:\t48 8b 08             \tmov    (%rax),%rcx\n  405d4d:\t48 8d 95 50 ff ff ff \tlea    -0xb0(%rbp),%rdx\n  405d54:\t48 8d 85 d0 fe ff ff \tlea    -0x130(%rbp),%rax\n  405d5b:\t48 89 d6             \tmov    %rdx,%rsi\n  405d5e:\t48 89 c7             \tmov    %rax,%rdi\n  405d61:\tff d1                \tcall   *%rcx\n  405d63:\t85 c0                \ttest   %eax,%eax\n  405d65:\t74 06                \tje     405d6d <main+0x192>\n  405d67:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  405d6a:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  405d6d:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n  405d71:\t8b 05 69 c6 00 00    \tmov    0xc669(%rip),%eax        # 4123e0 <select_max>\n  405d77:\t39 45 f8             \tcmp    %eax,-0x8(%rbp)\n  405d7a:\t7e af                \tjle    405d2b <main+0x150>\n  405d7c:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  405d7f:\t8d 78 01             \tlea    0x1(%rax),%edi\n  405d82:\t48 8d 4d d0          \tlea    -0x30(%rbp),%rcx\n  405d86:\t48 8d 95 50 ff ff ff \tlea    -0xb0(%rbp),%rdx\n  405d8d:\t48 8d 85 d0 fe ff ff \tlea    -0x130(%rbp),%rax\n  405d94:\t49 89 c8             \tmov    %rcx,%r8\n  405d97:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  405d9c:\t48 89 c6             \tmov    %rax,%rsi\n  405d9f:\te8 6c f3 ff ff       \tcall   405110 <select@plt>\n  405da4:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  405da7:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n  405dab:\t79 0c                \tjns    405db9 <main+0x1de>\n  405dad:\tbf e5 d0 40 00       \tmov    $0x40d0e5,%edi\n  405db2:\te8 89 f3 ff ff       \tcall   405140 <perror@plt>\n  405db7:\teb 54                \tjmp    405e0d <main+0x232>\n  405db9:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n  405dbd:\t7e 4e                \tjle    405e0d <main+0x232>\n  405dbf:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n  405dc6:\teb 3d                \tjmp    405e05 <main+0x22a>\n  405dc8:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  405dcb:\t48 98                \tcltq   \n  405dcd:\t48 8b 04 c5 a0 23 41 \tmov    0x4123a0(,%rax,8),%rax\n  405dd4:\t00 \n  405dd5:\t48 85 c0             \ttest   %rax,%rax\n  405dd8:\t74 27                \tje     405e01 <main+0x226>\n  405dda:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  405ddd:\t48 98                \tcltq   \n  405ddf:\t48 8b 04 c5 a0 23 41 \tmov    0x4123a0(,%rax,8),%rax\n  405de6:\t00 \n  405de7:\t48 8b 48 08          \tmov    0x8(%rax),%rcx\n  405deb:\t48 8d 95 50 ff ff ff \tlea    -0xb0(%rbp),%rdx\n  405df2:\t48 8d 85 d0 fe ff ff \tlea    -0x130(%rbp),%rax\n  405df9:\t48 89 d6             \tmov    %rdx,%rsi\n  405dfc:\t48 89 c7             \tmov    %rax,%rdi\n  405dff:\tff d1                \tcall   *%rcx\n  405e01:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n  405e05:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  405e08:\t3b 45 fc             \tcmp    -0x4(%rbp),%eax\n  405e0b:\t7e bb                \tjle    405dc8 <main+0x1ed>\n  405e0d:\te8 5c f8 ff ff       \tcall   40566e <etimer_request_poll>\n  405e12:\te9 9a fe ff ff       \tjmp    405cb1 <main+0xd6>", "code_s": "void main(undefined4 <span class=\"supfact\">param_1</span>,\n          undefined8 <span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  long <span class=\"supfact\">lVar2</span>;\n  __fd_mask *<span class=\"supfact\">p_Var3</span>;\n  fd_set <span class=\"supfact\">local_138</span>;\n  fd_set <span class=\"supfact\">local_b8</span>;\n  timeval <span class=\"supfact\">local_38</span>;\n  undefined4 <span class=\"supfact\">local_24</span>;\n  undefined4 <span class=\"supfact\">local_20</span>;\n  undefined4 <span class=\"supfact\">local_1c</span>;\n  undefined4 <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_14</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  puts(String);\n  contiki_argc = <span class=\"supfact\">param_1</span>;\n  contiki_argv = <span class=\"supfact\">param_2</span>;\n  process_init();\n  process_start(etimer_process, Number);\n  ctimer_init();\n  FUN_00405afb();\n  queuebuf_init();\n  netstack_init();\n  printf(String, nullmac_driver, nullrdc_driver, rime_driver);\n  process_start(tcpip_process, Number);\n  serial_line_init();\n  autostart_start(autostart_processes);\n  setvbuf(stdout, (char *)Number, Number, Number);\n  select_set_callback(Number, &amp; PTR_FUN_0040d070);\n  do {\n    <span class=\"supfact\">local_14</span> = process_run();\n    <span class=\"supfact\">local_38</span>.tv_sec = Number;\n    if (<span class=\"supfact\">local_14</span> == Number) {\n      <span class=\"supfact\">local_38</span>.tv_usec = Number;\n    } else {\n      <span class=\"supfact\">local_38</span>.tv_usec = Number;\n    }\n    <span class=\"supfact\">lVar2</span> = Number;\n    <span class=\"supfact\">p_Var3</span> = <span class=\"supfact\">local_138</span>.fds_bits;\n    for (; <span class=\"supfact\">lVar2</span> != Number;\n         <span class=\"supfact\">lVar2</span> = <span class=\"supfact\">lVar2</span> + -Number) {\n      *<span class=\"supfact\">p_Var3</span> = Number;\n      <span class=\"supfact\">p_Var3</span> = <span class=\"supfact\">p_Var3</span> + Number;\n    }\n    <span class=\"supfact\">local_18</span> = Number;\n    <span class=\"supfact\">local_1c</span> = SUB84(<span class=\"supfact\">p_Var3</span>, Number);\n    <span class=\"supfact\">lVar2</span> = Number;\n    <span class=\"supfact\">p_Var3</span> = <span class=\"supfact\">local_b8</span>.fds_bits;\n    for (; <span class=\"supfact\">lVar2</span> != Number;\n         <span class=\"supfact\">lVar2</span> = <span class=\"supfact\">lVar2</span> + -Number) {\n      *<span class=\"supfact\">p_Var3</span> = Number;\n      <span class=\"supfact\">p_Var3</span> = <span class=\"supfact\">p_Var3</span> + Number;\n    }\n    <span class=\"supfact\">local_20</span> = Number;\n    <span class=\"supfact\">local_24</span> = SUB84(<span class=\"supfact\">p_Var3</span>, Number);\n    <span class=\"supfact\">local_c</span> = Number;\n    for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> &lt;\n         = DAT_004123e0;\n         <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n      if (*(long *)(&amp; DAT_004123a0 +\n                          (long)<span class=\"supfact\">local_10</span> * Number) != Number) {\n        <span class=\"supfact\">iVar1</span> = (***(\n            code ***)(&amp;\n                      DAT_004123a0 + (long)<span class=\"supfact\">local_10</span> * Number))(\n            &amp; <span class=\"supfact\">local_138</span>, &amp; <span class=\"supfact\">local_b8</span>);\n        if (<span class=\"supfact\">iVar1</span> != Number) {\n          <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_10</span>;\n        }\n      }\n    }\n    <span class=\"supfact\">local_14</span> = select(\n        <span class=\"supfact\">local_c</span> + Number, &amp; <span class=\"supfact\">local_138</span>, &amp;\n        <span class=\"supfact\">local_b8</span>, (fd_set *)Number, &amp;\n        <span class=\"supfact\">local_38</span>);\n    if (<span class=\"supfact\">local_14</span> & lt; Number) {\n      perror(String);\n    } else if (Number & lt; <span class=\"supfact\">local_14</span>) {\n      for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> &lt;\n           = <span class=\"supfact\">local_c</span>;\n           <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n        if (*(long *)(&amp; DAT_004123a0 + (long)<span class=\"supfact\">local_10</span> *\n                                               Number) != Number) {\n          (**(code **)(*(long *)(&amp;\n                                 DAT_004123a0 +\n                                 (long)<span class=\"supfact\">local_10</span> * Number) +\n                       Number))(&amp; <span class=\"supfact\">local_138</span>, &amp;\n                                <span class=\"supfact\">local_b8</span>);\n        }\n      }\n    }\n    etimer_request_poll();\n  } while (true);\n}", "code_t": "int main(int <span class=\"supfact\">argc</span>, char **<span class=\"supfact\">argv</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  long <span class=\"supfact\">lVar2</span>;\n  __fd_mask *<span class=\"supfact\">p_Var3</span>;\n  char **<span class=\"supfact\">argv</span> - local;\n  int <span class=\"supfact\">argc</span> - local;\n  fd_set <span class=\"supfact\">fdr</span>;\n  fd_set <span class=\"supfact\">fdw</span>;\n  timeval <span class=\"supfact\">tv</span>;\n  int <span class=\"supfact\">__d1_1</span>;\n  int <span class=\"supfact\">__d0_1</span>;\n  int <span class=\"supfact\">__d1</span>;\n  int <span class=\"supfact\">__d0</span>;\n  int <span class=\"supfact\">retval</span>;\n  int <span class=\"supfact\">i</span>;\n  int <span class=\"supfact\">maxfd</span>;\n  puts(String);\n  contiki_argc = <span class=\"supfact\">argc</span>;\n  contiki_argv = <span class=\"supfact\">argv</span>;\n  process_init();\n  process_start(&amp; etimer_process, (char *)Number);\n  ctimer_init();\n  set_rime_addr();\n  queuebuf_init();\n  netstack_init();\n  printf(String, nullmac_driver.name, nullrdc_driver.name, rime_driver.name);\n  process_start(&amp; tcpip_process, (char *)Number);\n  serial_line_init();\n  autostart_start((process **)autostart_processes);\n  setvbuf(stdout, (char *)Number, Number, Number);\n  select_set_callback(Number, &amp; stdin_fd);\n  do {\n    <span class=\"supfact\">iVar1</span> = process_run();\n    <span class=\"supfact\">tv</span>.tv_sec = Number;\n    if (<span class=\"supfact\">iVar1</span> == Number) {\n      <span class=\"supfact\">tv</span>.tv_usec = Number;\n    } else {\n      <span class=\"supfact\">tv</span>.tv_usec = Number;\n    }\n    <span class=\"supfact\">lVar2</span> = Number;\n    <span class=\"supfact\">p_Var3</span> = <span class=\"supfact\">fdr</span>.__fds_bits;\n    for (; <span class=\"supfact\">lVar2</span> != Number;\n         <span class=\"supfact\">lVar2</span> = <span class=\"supfact\">lVar2</span> + -Number) {\n      *<span class=\"supfact\">p_Var3</span> = Number;\n      <span class=\"supfact\">p_Var3</span> = <span class=\"supfact\">p_Var3</span> + Number;\n    }\n    <span class=\"supfact\">lVar2</span> = Number;\n    <span class=\"supfact\">p_Var3</span> = <span class=\"supfact\">fdw</span>.__fds_bits;\n    for (; <span class=\"supfact\">lVar2</span> != Number;\n         <span class=\"supfact\">lVar2</span> = <span class=\"supfact\">lVar2</span> + -Number) {\n      *<span class=\"supfact\">p_Var3</span> = Number;\n      <span class=\"supfact\">p_Var3</span> = <span class=\"supfact\">p_Var3</span> + Number;\n    }\n    <span class=\"supfact\">maxfd</span> = Number;\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> &lt; = select_max;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      if (select_callback[<span class=\"supfact\">i</span>] != (select_callback *)Number) {\n        <span class=\"supfact\">iVar1</span> =\n            (*select_callback[<span class=\"supfact\">i</span>] - &gt;\n             set_fd)(&amp; <span class=\"supfact\">fdr</span>, &amp; <span class=\"supfact\">fdw</span>);\n        if (<span class=\"supfact\">iVar1</span> != Number) {\n          <span class=\"supfact\">maxfd</span> = <span class=\"supfact\">i</span>;\n        }\n      }\n    }\n    <span class=\"supfact\">iVar1</span> =\n        select(<span class=\"supfact\">maxfd</span> + Number, (fd_set *)&amp;\n               <span class=\"supfact\">fdr</span>, (fd_set *)&amp;\n               <span class=\"supfact\">fdw</span>, (fd_set *)Number, (timeval *)&amp;\n               <span class=\"supfact\">tv</span>);\n    if (<span class=\"supfact\">iVar1</span> & lt; Number) {\n      perror(String);\n    } else if (Number & lt; <span class=\"supfact\">iVar1</span>) {\n      for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> &lt;\n           = <span class=\"supfact\">maxfd</span>;\n           <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n        if (select_callback[<span class=\"supfact\">i</span>] != (select_callback *)Number) {\n          (*select_callback[<span class=\"supfact\">i</span>] - &gt;\n           handle_fd)(&amp; <span class=\"supfact\">fdr</span>, &amp; <span class=\"supfact\">fdw</span>);\n        }\n      }\n    }\n    etimer_request_poll();\n  } while (true);\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "argc", "ref_name": "argc", "ref_type": "int"}, {"name": "param_2", "type": "char * * *", "pred_name": "argv", "ref_name": "argv", "ref_type": "char * * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "lVar2", "type": "long", "pred_name": "lVar2", "ref_name": "lVar2", "ref_type": "long"}, {"name": "p_Var3", "type": "__fd_mask * *", "pred_name": "p_Var3", "ref_name": "p_Var3", "ref_type": "__fd_mask * *"}, {"name": "local_138", "type": "struct fd_set { __fd_mask[16] __fds_bits; }", "pred_name": "fdr", "ref_name": "fdr", "ref_type": "struct fd_set { __fd_mask[16] __fds_bits; }"}, {"name": "local_b8", "type": "struct fd_set { __fd_mask[16] __fds_bits; }", "pred_name": "fdw", "ref_name": "fdw", "ref_type": "struct fd_set { __fd_mask[16] __fds_bits; }"}, {"name": "local_38", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "pred_name": "tv", "ref_name": "tv", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}, {"name": "local_24", "type": "int", "pred_name": "__d1_1", "ref_name": "__d1_1", "ref_type": "int"}, {"name": "local_20", "type": "int", "pred_name": "__d0_1", "ref_name": "__d0_1", "ref_type": "int"}, {"name": "local_1c", "type": "int", "pred_name": "__d1", "ref_name": "__d1", "ref_type": "int"}, {"name": "local_18", "type": "int", "pred_name": "__d0", "ref_name": "__d0", "ref_type": "int"}, {"name": "local_14", "type": "int", "pred_name": "retval", "ref_name": "retval", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "maxfd", "ref_name": "maxfd", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "sudipjai", "repo_name": "openvx", "path": "sudipjai/openvx/7b10b5540c6c565a0283e382d0e734b2dcd4ba1bda3a4e826e17c9dd4a2f8065", "path_in_repo": "sudipjai/openvx//out/LINUX/x86_64/release/vx_query", "objdump": "0000000000404436 <vxMatrixInverse>:\n  404436:\t55                   \tpush   %rbp\n  404437:\t48 89 e5             \tmov    %rsp,%rbp\n  40443a:\t41 57                \tpush   %r15\n  40443c:\t41 56                \tpush   %r14\n  40443e:\t41 55                \tpush   %r13\n  404440:\t41 54                \tpush   %r12\n  404442:\t53                   \tpush   %rbx\n  404443:\t48 81 ec f8 00 00 00 \tsub    $0xf8,%rsp\n  40444a:\t48 89 bd 68 ff ff ff \tmov    %rdi,-0x98(%rbp)\n  404451:\t48 89 b5 60 ff ff ff \tmov    %rsi,-0xa0(%rbp)\n  404458:\tc7 45 cc 00 00 00 00 \tmovl   $0x0,-0x34(%rbp)\n  40445f:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n  404463:\t48 8b bd 68 ff ff ff \tmov    -0x98(%rbp),%rdi\n  40446a:\tb9 08 00 00 00       \tmov    $0x8,%ecx\n  40446f:\t48 89 c2             \tmov    %rax,%rdx\n  404472:\tbe 02 0b 08 00       \tmov    $0x80b02,%esi\n  404477:\te8 c4 dc ff ff       \tcall   402140 <vxQueryMatrix@plt>\n  40447c:\t09 45 cc             \tor     %eax,-0x34(%rbp)\n  40447f:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n  404483:\t48 8b bd 68 ff ff ff \tmov    -0x98(%rbp),%rdi\n  40448a:\tb9 08 00 00 00       \tmov    $0x8,%ecx\n  40448f:\t48 89 c2             \tmov    %rax,%rdx\n  404492:\tbe 01 0b 08 00       \tmov    $0x80b01,%esi\n  404497:\te8 a4 dc ff ff       \tcall   402140 <vxQueryMatrix@plt>\n  40449c:\t09 45 cc             \tor     %eax,-0x34(%rbp)\n  40449f:\t48 8d 85 74 ff ff ff \tlea    -0x8c(%rbp),%rax\n  4044a6:\t48 8b bd 68 ff ff ff \tmov    -0x98(%rbp),%rdi\n  4044ad:\tb9 04 00 00 00       \tmov    $0x4,%ecx\n  4044b2:\t48 89 c2             \tmov    %rax,%rdx\n  4044b5:\tbe 00 0b 08 00       \tmov    $0x80b00,%esi\n  4044ba:\te8 81 dc ff ff       \tcall   402140 <vxQueryMatrix@plt>\n  4044bf:\t09 45 cc             \tor     %eax,-0x34(%rbp)\n  4044c2:\t48 8d 45 88          \tlea    -0x78(%rbp),%rax\n  4044c6:\t48 8b bd 60 ff ff ff \tmov    -0xa0(%rbp),%rdi\n  4044cd:\tb9 08 00 00 00       \tmov    $0x8,%ecx\n  4044d2:\t48 89 c2             \tmov    %rax,%rdx\n  4044d5:\tbe 02 0b 08 00       \tmov    $0x80b02,%esi\n  4044da:\te8 61 dc ff ff       \tcall   402140 <vxQueryMatrix@plt>\n  4044df:\t09 45 cc             \tor     %eax,-0x34(%rbp)\n  4044e2:\t48 8d 85 78 ff ff ff \tlea    -0x88(%rbp),%rax\n  4044e9:\t48 8b bd 60 ff ff ff \tmov    -0xa0(%rbp),%rdi\n  4044f0:\tb9 08 00 00 00       \tmov    $0x8,%ecx\n  4044f5:\t48 89 c2             \tmov    %rax,%rdx\n  4044f8:\tbe 01 0b 08 00       \tmov    $0x80b01,%esi\n  4044fd:\te8 3e dc ff ff       \tcall   402140 <vxQueryMatrix@plt>\n  404502:\t09 45 cc             \tor     %eax,-0x34(%rbp)\n  404505:\t48 8d 85 70 ff ff ff \tlea    -0x90(%rbp),%rax\n  40450c:\t48 8b bd 60 ff ff ff \tmov    -0xa0(%rbp),%rdi\n  404513:\tb9 04 00 00 00       \tmov    $0x4,%ecx\n  404518:\t48 89 c2             \tmov    %rax,%rdx\n  40451b:\tbe 00 0b 08 00       \tmov    $0x80b00,%esi\n  404520:\te8 1b dc ff ff       \tcall   402140 <vxQueryMatrix@plt>\n  404525:\t09 45 cc             \tor     %eax,-0x34(%rbp)\n  404528:\t83 7d cc 00          \tcmpl   $0x0,-0x34(%rbp)\n  40452c:\t74 08                \tje     404536 <vxMatrixInverse+0x100>\n  40452e:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  404531:\te9 f3 02 00 00       \tjmp    404829 <vxMatrixInverse+0x3f3>\n  404536:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n  40453a:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n  40453e:\t48 39 c2             \tcmp    %rax,%rdx\n  404541:\t75 1d                \tjne    404560 <vxMatrixInverse+0x12a>\n  404543:\t48 8b 55 80          \tmov    -0x80(%rbp),%rdx\n  404547:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n  40454e:\t48 39 c2             \tcmp    %rax,%rdx\n  404551:\t75 0d                \tjne    404560 <vxMatrixInverse+0x12a>\n  404553:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n  404557:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n  40455b:\t48 39 c2             \tcmp    %rax,%rdx\n  40455e:\t74 0a                \tje     40456a <vxMatrixInverse+0x134>\n  404560:\tb8 f1 ff ff ff       \tmov    $0xfffffff1,%eax\n  404565:\te9 bf 02 00 00       \tjmp    404829 <vxMatrixInverse+0x3f3>\n  40456a:\t8b 95 74 ff ff ff    \tmov    -0x8c(%rbp),%edx\n  404570:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n  404576:\t39 c2                \tcmp    %eax,%edx\n  404578:\t74 0a                \tje     404584 <vxMatrixInverse+0x14e>\n  40457a:\tb8 ef ff ff ff       \tmov    $0xffffffef,%eax\n  40457f:\te9 a5 02 00 00       \tjmp    404829 <vxMatrixInverse+0x3f3>\n  404584:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n  40458a:\t83 f8 0a             \tcmp    $0xa,%eax\n  40458d:\t0f 85 93 02 00 00    \tjne    404826 <vxMatrixInverse+0x3f0>\n  404593:\t48 89 e0             \tmov    %rsp,%rax\n  404596:\t48 89 c3             \tmov    %rax,%rbx\n  404599:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n  40459d:\t48 8b 7d 80          \tmov    -0x80(%rbp),%rdi\n  4045a1:\t48 89 f0             \tmov    %rsi,%rax\n  4045a4:\t48 83 e8 01          \tsub    $0x1,%rax\n  4045a8:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n  4045ac:\t48 89 b5 f0 fe ff ff \tmov    %rsi,-0x110(%rbp)\n  4045b3:\t48 c7 85 f8 fe ff ff \tmovq   $0x0,-0x108(%rbp)\n  4045ba:\t00 00 00 00 \n  4045be:\t48 89 f8             \tmov    %rdi,%rax\n  4045c1:\t48 83 e8 01          \tsub    $0x1,%rax\n  4045c5:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n  4045c9:\t49 89 f6             \tmov    %rsi,%r14\n  4045cc:\t41 bf 00 00 00 00    \tmov    $0x0,%r15d\n  4045d2:\t49 89 fc             \tmov    %rdi,%r12\n  4045d5:\t41 bd 00 00 00 00    \tmov    $0x0,%r13d\n  4045db:\t4c 89 fa             \tmov    %r15,%rdx\n  4045de:\t49 0f af d4          \timul   %r12,%rdx\n  4045e2:\t4c 89 e8             \tmov    %r13,%rax\n  4045e5:\t49 0f af c6          \timul   %r14,%rax\n  4045e9:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n  4045ed:\t4c 89 f0             \tmov    %r14,%rax\n  4045f0:\t49 f7 e4             \tmul    %r12\n  4045f3:\t48 01 d1             \tadd    %rdx,%rcx\n  4045f6:\t48 89 ca             \tmov    %rcx,%rdx\n  4045f9:\t48 89 b5 50 ff ff ff \tmov    %rsi,-0xb0(%rbp)\n  404600:\t48 c7 85 58 ff ff ff \tmovq   $0x0,-0xa8(%rbp)\n  404607:\t00 00 00 00 \n  40460b:\t48 89 bd 40 ff ff ff \tmov    %rdi,-0xc0(%rbp)\n  404612:\t48 c7 85 48 ff ff ff \tmovq   $0x0,-0xb8(%rbp)\n  404619:\t00 00 00 00 \n  40461d:\t4c 8b 95 50 ff ff ff \tmov    -0xb0(%rbp),%r10\n  404624:\t4c 8b 9d 58 ff ff ff \tmov    -0xa8(%rbp),%r11\n  40462b:\t4c 89 da             \tmov    %r11,%rdx\n  40462e:\t4c 8b b5 40 ff ff ff \tmov    -0xc0(%rbp),%r14\n  404635:\t4c 8b bd 48 ff ff ff \tmov    -0xb8(%rbp),%r15\n  40463c:\t49 0f af d6          \timul   %r14,%rdx\n  404640:\t4c 89 f8             \tmov    %r15,%rax\n  404643:\t49 0f af c2          \timul   %r10,%rax\n  404647:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n  40464b:\t4c 89 d0             \tmov    %r10,%rax\n  40464e:\t49 f7 e6             \tmul    %r14\n  404651:\t48 01 d1             \tadd    %rdx,%rcx\n  404654:\t48 89 ca             \tmov    %rcx,%rdx\n  404657:\t48 89 f0             \tmov    %rsi,%rax\n  40465a:\t48 0f af c7          \timul   %rdi,%rax\n  40465e:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n  404665:\t00 \n  404666:\tb8 10 00 00 00       \tmov    $0x10,%eax\n  40466b:\t48 83 e8 01          \tsub    $0x1,%rax\n  40466f:\t48 01 d0             \tadd    %rdx,%rax\n  404672:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n  404677:\tba 00 00 00 00       \tmov    $0x0,%edx\n  40467c:\t48 f7 f1             \tdiv    %rcx\n  40467f:\t48 6b c0 10          \timul   $0x10,%rax,%rax\n  404683:\t48 29 c4             \tsub    %rax,%rsp\n  404686:\t48 89 e0             \tmov    %rsp,%rax\n  404689:\t48 83 c0 03          \tadd    $0x3,%rax\n  40468d:\t48 c1 e8 02          \tshr    $0x2,%rax\n  404691:\t48 c1 e0 02          \tshl    $0x2,%rax\n  404695:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n  404699:\t48 8b 4d 88          \tmov    -0x78(%rbp),%rcx\n  40469d:\t48 8b b5 78 ff ff ff \tmov    -0x88(%rbp),%rsi\n  4046a4:\t48 89 c8             \tmov    %rcx,%rax\n  4046a7:\t48 83 e8 01          \tsub    $0x1,%rax\n  4046ab:\t48 89 45 a8          \tmov    %rax,-0x58(%rbp)\n  4046af:\t48 89 8d e0 fe ff ff \tmov    %rcx,-0x120(%rbp)\n  4046b6:\t48 c7 85 e8 fe ff ff \tmovq   $0x0,-0x118(%rbp)\n  4046bd:\t00 00 00 00 \n  4046c1:\t48 89 f0             \tmov    %rsi,%rax\n  4046c4:\t48 83 e8 01          \tsub    $0x1,%rax\n  4046c8:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n  4046cc:\t48 89 8d 30 ff ff ff \tmov    %rcx,-0xd0(%rbp)\n  4046d3:\t48 c7 85 38 ff ff ff \tmovq   $0x0,-0xc8(%rbp)\n  4046da:\t00 00 00 00 \n  4046de:\t48 89 b5 20 ff ff ff \tmov    %rsi,-0xe0(%rbp)\n  4046e5:\t48 c7 85 28 ff ff ff \tmovq   $0x0,-0xd8(%rbp)\n  4046ec:\t00 00 00 00 \n  4046f0:\t4c 8b b5 30 ff ff ff \tmov    -0xd0(%rbp),%r14\n  4046f7:\t4c 8b bd 38 ff ff ff \tmov    -0xc8(%rbp),%r15\n  4046fe:\t4c 89 fa             \tmov    %r15,%rdx\n  404701:\t4c 8b 85 20 ff ff ff \tmov    -0xe0(%rbp),%r8\n  404708:\t4c 8b 8d 28 ff ff ff \tmov    -0xd8(%rbp),%r9\n  40470f:\t49 0f af d0          \timul   %r8,%rdx\n  404713:\t4c 89 c8             \tmov    %r9,%rax\n  404716:\t49 0f af c6          \timul   %r14,%rax\n  40471a:\t48 8d 3c 02          \tlea    (%rdx,%rax,1),%rdi\n  40471e:\t4c 89 f0             \tmov    %r14,%rax\n  404721:\t49 f7 e0             \tmul    %r8\n  404724:\t48 01 d7             \tadd    %rdx,%rdi\n  404727:\t48 89 fa             \tmov    %rdi,%rdx\n  40472a:\t48 89 8d 10 ff ff ff \tmov    %rcx,-0xf0(%rbp)\n  404731:\t48 c7 85 18 ff ff ff \tmovq   $0x0,-0xe8(%rbp)\n  404738:\t00 00 00 00 \n  40473c:\t48 89 b5 00 ff ff ff \tmov    %rsi,-0x100(%rbp)\n  404743:\t48 c7 85 08 ff ff ff \tmovq   $0x0,-0xf8(%rbp)\n  40474a:\t00 00 00 00 \n  40474e:\t4c 8b 85 10 ff ff ff \tmov    -0xf0(%rbp),%r8\n  404755:\t4c 8b 8d 18 ff ff ff \tmov    -0xe8(%rbp),%r9\n  40475c:\t4c 89 ca             \tmov    %r9,%rdx\n  40475f:\t4c 8b 95 00 ff ff ff \tmov    -0x100(%rbp),%r10\n  404766:\t4c 8b 9d 08 ff ff ff \tmov    -0xf8(%rbp),%r11\n  40476d:\t49 0f af d2          \timul   %r10,%rdx\n  404771:\t4c 89 d8             \tmov    %r11,%rax\n  404774:\t49 0f af c0          \timul   %r8,%rax\n  404778:\t48 8d 3c 02          \tlea    (%rdx,%rax,1),%rdi\n  40477c:\t4c 89 c0             \tmov    %r8,%rax\n  40477f:\t49 f7 e2             \tmul    %r10\n  404782:\t48 01 d7             \tadd    %rdx,%rdi\n  404785:\t48 89 fa             \tmov    %rdi,%rdx\n  404788:\t48 89 c8             \tmov    %rcx,%rax\n  40478b:\t48 0f af c6          \timul   %rsi,%rax\n  40478f:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n  404796:\t00 \n  404797:\tb8 10 00 00 00       \tmov    $0x10,%eax\n  40479c:\t48 83 e8 01          \tsub    $0x1,%rax\n  4047a0:\t48 01 d0             \tadd    %rdx,%rax\n  4047a3:\tbe 10 00 00 00       \tmov    $0x10,%esi\n  4047a8:\tba 00 00 00 00       \tmov    $0x0,%edx\n  4047ad:\t48 f7 f6             \tdiv    %rsi\n  4047b0:\t48 6b c0 10          \timul   $0x10,%rax,%rax\n  4047b4:\t48 29 c4             \tsub    %rax,%rsp\n  4047b7:\t48 89 e0             \tmov    %rsp,%rax\n  4047ba:\t48 83 c0 03          \tadd    $0x3,%rax\n  4047be:\t48 c1 e8 02          \tshr    $0x2,%rax\n  4047c2:\t48 c1 e0 02          \tshl    $0x2,%rax\n  4047c6:\t48 89 45 98          \tmov    %rax,-0x68(%rbp)\n  4047ca:\t48 8b 75 b0          \tmov    -0x50(%rbp),%rsi\n  4047ce:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n  4047d5:\tb9 01 e0 00 00       \tmov    $0xe001,%ecx\n  4047da:\tba 01 10 01 00       \tmov    $0x11001,%edx\n  4047df:\t48 89 c7             \tmov    %rax,%rdi\n  4047e2:\te8 99 d9 ff ff       \tcall   402180 <vxCopyMatrix@plt>\n  4047e7:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n  4047eb:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n  4047ef:\t48 8b 4d 80          \tmov    -0x80(%rbp),%rcx\n  4047f3:\t89 ce                \tmov    %ecx,%esi\n  4047f5:\t48 8b 4d 90          \tmov    -0x70(%rbp),%rcx\n  4047f9:\t89 cf                \tmov    %ecx,%edi\n  4047fb:\t48 89 d1             \tmov    %rdx,%rcx\n  4047fe:\t48 89 c2             \tmov    %rax,%rdx\n  404801:\te8 f9 fa ff ff       \tcall   4042ff <vxh_matrix_inverse_f32>\n  404806:\t48 8b 75 98          \tmov    -0x68(%rbp),%rsi\n  40480a:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n  404811:\tb9 01 e0 00 00       \tmov    $0xe001,%ecx\n  404816:\tba 02 10 01 00       \tmov    $0x11002,%edx\n  40481b:\t48 89 c7             \tmov    %rax,%rdi\n  40481e:\te8 5d d9 ff ff       \tcall   402180 <vxCopyMatrix@plt>\n  404823:\t48 89 dc             \tmov    %rbx,%rsp\n  404826:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n  404829:\t48 8d 65 d8          \tlea    -0x28(%rbp),%rsp\n  40482d:\t5b                   \tpop    %rbx\n  40482e:\t41 5c                \tpop    %r12\n  404830:\t41 5d                \tpop    %r13\n  404832:\t41 5e                \tpop    %r14\n  404834:\t41 5f                \tpop    %r15\n  404836:\t5d                   \tpop    %rbp\n  404837:\tc3                   \tret    \n  404838:\t0f 1f 84 00 00 00 00 \tnopl   0x0(%rax,%rax,1)\n  40483f:\t00 ", "code_s": "uint vxMatrixInverse(undefined8 <span class=\"supfact\">param_1</span>,\n                     undefined8 <span class=\"supfact\">param_2</span>) {\n  undefined8 uVar1;\n  undefined *puVar2;\n  ulong *puVar3;\n  uint <span class=\"supfact\">uVar4</span>;\n  ulong uVar5;\n  ulong uVar6;\n  ulong <span class=\"supfact\">auStack_130</span>[Number];\n  undefined8 <span class=\"supfact\">local_110</span>;\n  ulong <span class=\"supfact\">local_108</span>;\n  undefined8 <span class=\"supfact\">local_100</span>;\n  ulong <span class=\"supfact\">local_f8</span>;\n  undefined8 <span class=\"supfact\">local_f0</span>;\n  ulong <span class=\"supfact\">local_e8</span>;\n  undefined8 <span class=\"supfact\">local_e0</span>;\n  ulong <span class=\"supfact\">local_d8</span>;\n  undefined8 <span class=\"supfact\">local_d0</span>;\n  ulong <span class=\"supfact\">local_c8</span>;\n  undefined8 <span class=\"supfact\">local_c0</span>;\n  ulong <span class=\"supfact\">local_b8</span>;\n  undefined8 <span class=\"supfact\">local_b0</span>;\n  undefined8 <span class=\"supfact\">local_a8</span>;\n  undefined8 <span class=\"supfact\">local_a0</span>;\n  int <span class=\"supfact\">local_98</span>;\n  int <span class=\"supfact\">local_94</span>;\n  ulong <span class=\"supfact\">local_90</span>;\n  ulong <span class=\"supfact\">local_88</span>;\n  ulong <span class=\"supfact\">local_80</span>;\n  ulong <span class=\"supfact\">local_78</span>;\n  ulong *<span class=\"supfact\">local_70</span>;\n  long <span class=\"supfact\">local_68</span>;\n  long <span class=\"supfact\">local_60</span>;\n  ulong *<span class=\"supfact\">local_58</span>;\n  long <span class=\"supfact\">local_50</span>;\n  long <span class=\"supfact\">local_48</span>;\n  uint <span class=\"supfact\">local_3c</span>;\n  <span class=\"supfact\">local_3c</span> = Number;\n  <span class=\"supfact\">auStack_130</span>[Number] = Number;\n  <span class=\"supfact\">local_a8</span> = <span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">local_a0</span> = <span class=\"supfact\">param_1</span>;\n  <span class=\"supfact\">uVar4</span> = vxQueryMatrix(<span class=\"supfact\">param_1</span>, Number, &amp;\n                                        <span class=\"supfact\">local_78</span>, Number);\n  <span class=\"supfact\">local_3c</span> = <span class=\"supfact\">local_3c</span> | <span class=\"supfact\">uVar4</span>;\n  <span class=\"supfact\">auStack_130</span>[Number] = Number;\n  <span class=\"supfact\">uVar4</span> = vxQueryMatrix(<span class=\"supfact\">local_a0</span>, Number, &amp;\n                                        <span class=\"supfact\">local_88</span>, Number);\n  <span class=\"supfact\">local_3c</span> = <span class=\"supfact\">local_3c</span> | <span class=\"supfact\">uVar4</span>;\n  <span class=\"supfact\">auStack_130</span>[Number] = Number;\n  <span class=\"supfact\">uVar4</span> = vxQueryMatrix(<span class=\"supfact\">local_a0</span>, Number, &amp;\n                                        <span class=\"supfact\">local_94</span>, Number);\n  <span class=\"supfact\">local_3c</span> = <span class=\"supfact\">local_3c</span> | <span class=\"supfact\">uVar4</span>;\n  <span class=\"supfact\">auStack_130</span>[Number] = Number;\n  <span class=\"supfact\">uVar4</span> = vxQueryMatrix(<span class=\"supfact\">local_a8</span>, Number, &amp;\n                                        <span class=\"supfact\">local_80</span>, Number);\n  <span class=\"supfact\">local_3c</span> = <span class=\"supfact\">local_3c</span> | <span class=\"supfact\">uVar4</span>;\n  <span class=\"supfact\">auStack_130</span>[Number] = Number;\n  <span class=\"supfact\">uVar4</span> = vxQueryMatrix(<span class=\"supfact\">local_a8</span>, Number, &amp;\n                                        <span class=\"supfact\">local_90</span>, Number);\n  <span class=\"supfact\">local_3c</span> = <span class=\"supfact\">local_3c</span> | <span class=\"supfact\">uVar4</span>;\n  <span class=\"supfact\">auStack_130</span>[Number] = Number;\n  <span class=\"supfact\">uVar4</span> = vxQueryMatrix(<span class=\"supfact\">local_a8</span>, Number, &amp;\n                                        <span class=\"supfact\">local_98</span>, Number);\n  uVar1 = <span class=\"supfact\">local_a0</span>;\n  <span class=\"supfact\">local_3c</span> = <span class=\"supfact\">local_3c</span> | <span class=\"supfact\">uVar4</span>;\n  if (<span class=\"supfact\">local_3c</span> == Number) {\n    if (((<span class=\"supfact\">local_78</span> == <span class=\"supfact\">local_80</span>) & amp; &amp;\n         (<span class=\"supfact\">local_88</span> == <span class=\"supfact\">local_90</span>)) &\n            amp;\n        &amp; (<span class=\"supfact\">local_78</span> == <span class=\"supfact\">local_88</span>)) {\n      if (<span class=\"supfact\">local_94</span> == <span class=\"supfact\">local_98</span>) {\n        if (<span class=\"supfact\">local_94</span> == Number) {\n          <span class=\"supfact\">local_48</span> = <span class=\"supfact\">local_78</span> - Number;\n          <span class=\"supfact\">auStack_130</span>[Number] = <span class=\"supfact\">local_78</span>;\n          <span class=\"supfact\">local_110</span> = Number;\n          <span class=\"supfact\">local_50</span> = <span class=\"supfact\">local_88</span> - Number;\n          <span class=\"supfact\">local_b8</span> = <span class=\"supfact\">local_78</span>;\n          <span class=\"supfact\">local_b0</span> = Number;\n          <span class=\"supfact\">local_c8</span> = <span class=\"supfact\">local_88</span>;\n          <span class=\"supfact\">local_c0</span> = Number;\n          uVar5 =\n              (<span class=\"supfact\">local_78</span> * <span class=\"supfact\">local_88</span> * Number +\n               Number) /\n              Number;\n          <span class=\"supfact\">local_60</span> = <span class=\"supfact\">local_80</span> - Number;\n          <span class=\"supfact\">auStack_130</span>[Number] = <span class=\"supfact\">local_80</span>;\n          <span class=\"supfact\">auStack_130</span>[Number] = Number;\n          <span class=\"supfact\">local_68</span> = <span class=\"supfact\">local_90</span> - Number;\n          <span class=\"supfact\">local_d8</span> = <span class=\"supfact\">local_80</span>;\n          <span class=\"supfact\">local_d0</span> = Number;\n          <span class=\"supfact\">local_e8</span> = <span class=\"supfact\">local_90</span>;\n          <span class=\"supfact\">local_e0</span> = Number;\n          <span class=\"supfact\">local_f8</span> = <span class=\"supfact\">local_80</span>;\n          <span class=\"supfact\">local_f0</span> = Number;\n          <span class=\"supfact\">local_108</span> = <span class=\"supfact\">local_90</span>;\n          <span class=\"supfact\">local_100</span> = Number;\n          uVar6 =\n              (<span class=\"supfact\">local_80</span> * <span class=\"supfact\">local_90</span> * Number +\n               Number) /\n              Number;\n          <span class=\"supfact\">local_70</span> = <span class=\"supfact\">auStack_130</span> +\n                                     uVar5 * -Number + uVar6 * -Number + Number;\n          <span class=\"supfact\">local_58</span> =\n              <span class=\"supfact\">auStack_130</span> + uVar5 * -Number + Number;\n          <span class=\"supfact\">auStack_130</span>[uVar5 * -Number + uVar6 * -Number] =\n              Number;\n          vxCopyMatrix(uVar1,\n                       <span class=\"supfact\">auStack_130</span> + uVar5 * -Number + Number,\n                       Number, Number, <span class=\"supfact\">local_80</span>, Number);\n          puVar3 = <span class=\"supfact\">local_58</span>;\n          puVar2 = (undefined *)<span class=\"supfact\">local_70</span>;\n          <span class=\"supfact\">auStack_130</span>[uVar5 * -Number + uVar6 * -Number] =\n              Number;\n          FUN_004042ff(<span class=\"supfact\">local_78</span> & amp;\n                       Number, <span class=\"supfact\">local_88</span> & amp;\n                       Number, puVar2, puVar3);\n          puVar2 = (undefined *)<span class=\"supfact\">local_70</span>;\n          uVar1 = <span class=\"supfact\">local_a8</span>;\n          <span class=\"supfact\">auStack_130</span>[uVar5 * -Number + uVar6 * -Number] =\n              Number;\n          vxCopyMatrix(uVar1, puVar2, Number, Number);\n        }\n      } else {\n        <span class=\"supfact\">local_3c</span> = Number;\n      }\n    } else {\n      <span class=\"supfact\">local_3c</span> = Number;\n    }\n  }\n  return <span class=\"supfact\">local_3c</span>;\n}", "code_t": "vx_status vxMatrixInverse(vx_matrix <span class=\"supfact\">input</span>,\n                          vx_matrix <span class=\"supfact\">output</span>) {\n  vx_matrix p_Var1;\n  vx_float32[Number][Number] * pvVar2;\n  vx_float32[Number][Number] * in_00;\n  uint <span class=\"supfact\">uVar3</span>;\n  ulong uVar4;\n  ulong uVar5;\n  vx_size <span class=\"supfact\">avStack_130</span>[Number];\n  undefined8 <span class=\"supfact\">local_110</span>;\n  vx_size <span class=\"supfact\">local_108</span>;\n  undefined8 <span class=\"supfact\">local_100</span>;\n  vx_size <span class=\"supfact\">local_f8</span>;\n  undefined8 <span class=\"supfact\">local_f0</span>;\n  vx_size <span class=\"supfact\">local_e8</span>;\n  undefined8 <span class=\"supfact\">local_e0</span>;\n  vx_size <span class=\"supfact\">local_d8</span>;\n  undefined8 <span class=\"supfact\">local_d0</span>;\n  vx_size <span class=\"supfact\">local_c8</span>;\n  undefined8 <span class=\"supfact\">local_c0</span>;\n  vx_size <span class=\"supfact\">local_b8</span>;\n  undefined8 <span class=\"supfact\">local_b0</span>;\n  vx_matrix <span class=\"supfact\">output</span> - local;\n  vx_matrix <span class=\"supfact\">input</span> - local;\n  vx_enum <span class=\"supfact\">to</span>;\n  vx_enum <span class=\"supfact\">ti</span>;\n  vx_size <span class=\"supfact\">ro</span>;\n  vx_size <span class=\"supfact\">ri</span>;\n  vx_size <span class=\"supfact\">co</span>;\n  vx_size <span class=\"supfact\">ci</span>;\n  vx_float32[Number][Number] * <span class=\"supfact\">ou</span>;\n  long <span class=\"supfact\">local_68</span>;\n  long <span class=\"supfact\">local_60</span>;\n  vx_float32[Number][Number] * <span class=\"supfact\">in</span>;\n  long <span class=\"supfact\">local_50</span>;\n  long <span class=\"supfact\">local_48</span>;\n  vx_status <span class=\"supfact\">status</span>;\n  <span class=\"supfact\">status</span> = Number;\n  <span class=\"supfact\">avStack_130</span>[Number] = Number;\n  <span class=\"supfact\">output</span> - local = <span class=\"supfact\">output</span>;\n  <span class=\"supfact\">input</span> - local = <span class=\"supfact\">input</span>;\n  <span class=\"supfact\">uVar3</span> = vxQueryMatrix(<span class=\"supfact\">input</span>, Number, &amp;\n                                        <span class=\"supfact\">ci</span>, Number);\n  <span class=\"supfact\">status</span> = <span class=\"supfact\">status</span> | <span class=\"supfact\">uVar3</span>;\n  <span class=\"supfact\">avStack_130</span>[Number] = Number;\n  <span class=\"supfact\">uVar3</span> = vxQueryMatrix(\n      <span class=\"supfact\">input</span> - local, Number, &amp; <span class=\"supfact\">ri</span>, Number);\n  <span class=\"supfact\">status</span> = <span class=\"supfact\">status</span> | <span class=\"supfact\">uVar3</span>;\n  <span class=\"supfact\">avStack_130</span>[Number] = Number;\n  <span class=\"supfact\">uVar3</span> = vxQueryMatrix(\n      <span class=\"supfact\">input</span> - local, Number, &amp; <span class=\"supfact\">ti</span>, Number);\n  <span class=\"supfact\">status</span> = <span class=\"supfact\">status</span> | <span class=\"supfact\">uVar3</span>;\n  <span class=\"supfact\">avStack_130</span>[Number] = Number;\n  <span class=\"supfact\">uVar3</span> = vxQueryMatrix(\n      <span class=\"supfact\">output</span> - local, Number, &amp; <span class=\"supfact\">co</span>, Number);\n  <span class=\"supfact\">status</span> = <span class=\"supfact\">status</span> | <span class=\"supfact\">uVar3</span>;\n  <span class=\"supfact\">avStack_130</span>[Number] = Number;\n  <span class=\"supfact\">uVar3</span> = vxQueryMatrix(\n      <span class=\"supfact\">output</span> - local, Number, &amp; <span class=\"supfact\">ro</span>, Number);\n  <span class=\"supfact\">status</span> = <span class=\"supfact\">status</span> | <span class=\"supfact\">uVar3</span>;\n  <span class=\"supfact\">avStack_130</span>[Number] = Number;\n  <span class=\"supfact\">uVar3</span> = vxQueryMatrix(\n      <span class=\"supfact\">output</span> - local, Number, &amp; <span class=\"supfact\">to</span>, Number);\n  p_Var1 = <span class=\"supfact\">input</span> - local;\n  <span class=\"supfact\">status</span> = <span class=\"supfact\">status</span> | <span class=\"supfact\">uVar3</span>;\n  if (<span class=\"supfact\">status</span> == Number) {\n    if (((<span class=\"supfact\">ci</span> == <span class=\"supfact\">co</span>) & amp; &amp;\n         (<span class=\"supfact\">ri</span> == <span class=\"supfact\">ro</span>)) &\n            amp;\n        &amp; (<span class=\"supfact\">ci</span> == <span class=\"supfact\">ri</span>)) {\n      if (<span class=\"supfact\">ti</span> == <span class=\"supfact\">to</span>) {\n        if (<span class=\"supfact\">ti</span> == Number) {\n          <span class=\"supfact\">local_48</span> = <span class=\"supfact\">ci</span> - Number;\n          <span class=\"supfact\">avStack_130</span>[Number] = <span class=\"supfact\">ci</span>;\n          <span class=\"supfact\">local_110</span> = Number;\n          <span class=\"supfact\">local_50</span> = <span class=\"supfact\">ri</span> - Number;\n          <span class=\"supfact\">local_b8</span> = <span class=\"supfact\">ci</span>;\n          <span class=\"supfact\">local_b0</span> = Number;\n          <span class=\"supfact\">local_c8</span> = <span class=\"supfact\">ri</span>;\n          <span class=\"supfact\">local_c0</span> = Number;\n          uVar4 = (<span class=\"supfact\">ci</span> * <span class=\"supfact\">ri</span> * Number + Number) /\n                  Number;\n          <span class=\"supfact\">local_60</span> = <span class=\"supfact\">co</span> - Number;\n          <span class=\"supfact\">avStack_130</span>[Number] = <span class=\"supfact\">co</span>;\n          <span class=\"supfact\">avStack_130</span>[Number] = Number;\n          <span class=\"supfact\">local_68</span> = <span class=\"supfact\">ro</span> - Number;\n          <span class=\"supfact\">local_d8</span> = <span class=\"supfact\">co</span>;\n          <span class=\"supfact\">local_d0</span> = Number;\n          <span class=\"supfact\">local_e8</span> = <span class=\"supfact\">ro</span>;\n          <span class=\"supfact\">local_e0</span> = Number;\n          <span class=\"supfact\">local_f8</span> = <span class=\"supfact\">co</span>;\n          <span class=\"supfact\">local_f0</span> = Number;\n          <span class=\"supfact\">local_108</span> = <span class=\"supfact\">ro</span>;\n          <span class=\"supfact\">local_100</span> = Number;\n          uVar5 = (<span class=\"supfact\">co</span> * <span class=\"supfact\">ro</span> * Number + Number) /\n                  Number;\n          <span class=\"supfact\">ou</span> =\n              (vx_float32[Number][Number] *)(<span class=\"supfact\">avStack_130</span> +\n                                             uVar4 * -Number + uVar5 * -Number +\n                                             Number);\n          <span class=\"supfact\">in</span> =\n              (vx_float32[Number][Number] *)(<span class=\"supfact\">avStack_130</span> +\n                                             uVar4 * -Number + Number);\n          <span class=\"supfact\">avStack_130</span>[uVar4 * -Number + uVar5 * -Number] =\n              Number;\n          vxCopyMatrix(p_Var1,\n                       <span class=\"supfact\">avStack_130</span> + uVar4 * -Number + Number,\n                       Number, Number, <span class=\"supfact\">co</span>, Number);\n          in_00 = <span class=\"supfact\">in</span>;\n          pvVar2 = <span class=\"supfact\">ou</span>;\n          <span class=\"supfact\">avStack_130</span>[uVar4 * -Number + uVar5 * -Number] =\n              Number;\n          vxh_matrix_inverse_f32((vx_uint32)<span class=\"supfact\">ci</span>,\n                                 (vx_uint32)<span class=\"supfact\">ri</span>, pvVar2, in_00);\n          pvVar2 = <span class=\"supfact\">ou</span>;\n          p_Var1 = <span class=\"supfact\">output</span> - local;\n          <span class=\"supfact\">avStack_130</span>[uVar4 * -Number + uVar5 * -Number] =\n              Number;\n          vxCopyMatrix(p_Var1, pvVar2, Number, Number);\n        }\n      } else {\n        <span class=\"supfact\">status</span> = Number;\n      }\n    } else {\n      <span class=\"supfact\">status</span> = Number;\n    }\n  }\n  return <span class=\"supfact\">status</span>;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "__unk__", "ref_name": "input", "ref_type": "vx_matrix"}, {"name": "param_2", "type": "__unk__", "pred_name": "__unk__", "ref_name": "output", "ref_type": "vx_matrix"}, {"name": "uVar4", "type": "disappear", "pred_name": "", "ref_name": "uVar3", "ref_type": "uint"}, {"name": "local_110", "type": "disappear", "pred_name": "", "ref_name": "local_110", "ref_type": "undefined8"}, {"name": "local_108", "type": "__unk__", "pred_name": "__unk__", "ref_name": "local_108", "ref_type": "vx_size"}, {"name": "local_100", "type": "disappear", "pred_name": "", "ref_name": "local_100", "ref_type": "undefined8"}, {"name": "local_f8", "type": "disappear", "pred_name": "", "ref_name": "local_f8", "ref_type": "vx_size"}, {"name": "local_f0", "type": "disappear", "pred_name": "", "ref_name": "local_f0", "ref_type": "undefined8"}, {"name": "local_e8", "type": "disappear", "pred_name": "", "ref_name": "local_e8", "ref_type": "vx_size"}, {"name": "local_e0", "type": "disappear", "pred_name": "", "ref_name": "local_e0", "ref_type": "undefined8"}, {"name": "local_d8", "type": "disappear", "pred_name": "", "ref_name": "local_d8", "ref_type": "vx_size"}, {"name": "local_d0", "type": "disappear", "pred_name": "", "ref_name": "local_d0", "ref_type": "undefined8"}, {"name": "local_c8", "type": "disappear", "pred_name": "", "ref_name": "local_c8", "ref_type": "vx_size"}, {"name": "local_c0", "type": "disappear", "pred_name": "", "ref_name": "local_c0", "ref_type": "undefined8"}, {"name": "local_b8", "type": "disappear", "pred_name": "", "ref_name": "local_b8", "ref_type": "vx_size"}, {"name": "local_b0", "type": "disappear", "pred_name": "", "ref_name": "local_b0", "ref_type": "undefined8"}, {"name": "local_a8", "type": "disappear", "pred_name": "", "ref_name": "output-local", "ref_type": "vx_matrix"}, {"name": "local_a0", "type": "disappear", "pred_name": "", "ref_name": "input-local", "ref_type": "vx_matrix"}, {"name": "local_98", "type": "disappear", "pred_name": "", "ref_name": "to", "ref_type": "vx_enum"}, {"name": "local_94", "type": "disappear", "pred_name": "", "ref_name": "ti", "ref_type": "vx_enum"}, {"name": "local_90", "type": "disappear", "pred_name": "", "ref_name": "ro", "ref_type": "vx_size"}, {"name": "local_88", "type": "disappear", "pred_name": "", "ref_name": "ri", "ref_type": "vx_size"}, {"name": "local_80", "type": "disappear", "pred_name": "", "ref_name": "co", "ref_type": "vx_size"}, {"name": "local_78", "type": "disappear", "pred_name": "", "ref_name": "ci", "ref_type": "vx_size"}, {"name": "local_70", "type": "disappear", "pred_name": "", "ref_name": "ou", "ref_type": "vx_float32[0][0] * *"}, {"name": "local_68", "type": "disappear", "pred_name": "", "ref_name": "local_68", "ref_type": "long"}, {"name": "local_60", "type": "disappear", "pred_name": "", "ref_name": "local_60", "ref_type": "long"}, {"name": "local_58", "type": "disappear", "pred_name": "", "ref_name": "in", "ref_type": "vx_float32[0][0] * *"}, {"name": "local_50", "type": "char * *", "pred_name": "__unk__", "ref_name": "local_50", "ref_type": "long"}, {"name": "local_48", "type": "char * *", "pred_name": "__unk__", "ref_name": "local_48", "ref_type": "long"}, {"name": "local_3c", "type": "int", "pred_name": "__unk__", "ref_name": "status", "ref_type": "vx_status"}, {"name": "auStack_130", "type": "__unk__", "pred_name": "__unk__", "ref_name": "avStack_130", "ref_type": "vx_size[4][4]"}], "body_in_train": false}, {"repo_owner": "ajamous", "repo_name": "DOTS", "path": "ajamous/DOTS/28c9e348f3a3b11bc4f8699bd26ee99298379f2886174405e6aa1da54ee51932", "path_in_repo": "ajamous/DOTS/SIP_Clients_pjsip-2.7.1/pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/clidemo", "objdump": "0000000000418408 <gsm_L_asl>:\n  418408:\t55                   \tpush   %rbp\n  418409:\t48 89 e5             \tmov    %rsp,%rbp\n  41840c:\t48 83 ec 10          \tsub    $0x10,%rsp\n  418410:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  418414:\t89 75 f4             \tmov    %esi,-0xc(%rbp)\n  418417:\t83 7d f4 1f          \tcmpl   $0x1f,-0xc(%rbp)\n  41841b:\t7e 07                \tjle    418424 <gsm_L_asl+0x1c>\n  41841d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  418422:\teb 43                \tjmp    418467 <gsm_L_asl+0x5f>\n  418424:\t83 7d f4 e1          \tcmpl   $0xffffffe1,-0xc(%rbp)\n  418428:\t7d 11                \tjge    41843b <gsm_L_asl+0x33>\n  41842a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  41842e:\t48 c1 e8 3f          \tshr    $0x3f,%rax\n  418432:\t0f b6 c0             \tmovzbl %al,%eax\n  418435:\tf7 d8                \tneg    %eax\n  418437:\t48 98                \tcltq   \n  418439:\teb 2c                \tjmp    418467 <gsm_L_asl+0x5f>\n  41843b:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n  41843f:\t79 17                \tjns    418458 <gsm_L_asl+0x50>\n  418441:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  418444:\tf7 d8                \tneg    %eax\n  418446:\t89 c2                \tmov    %eax,%edx\n  418448:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  41844c:\t89 d6                \tmov    %edx,%esi\n  41844e:\t48 89 c7             \tmov    %rax,%rdi\n  418451:\te8 71 00 00 00       \tcall   4184c7 <gsm_L_asr>\n  418456:\teb 0f                \tjmp    418467 <gsm_L_asl+0x5f>\n  418458:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  41845b:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  41845f:\t89 c1                \tmov    %eax,%ecx\n  418461:\t48 d3 e2             \tshl    %cl,%rdx\n  418464:\t48 89 d0             \tmov    %rdx,%rax\n  418467:\tc9                   \tleave  \n  418468:\tc3                   \tret    ", "code_s": "long gsm_L_asl(long <span class=\"supfact\">param_1</span>, int <span class=\"supfact\">param_2</span>) {\n  if (<span class=\"supfact\">param_2</span> & lt; Number) {\n    if (<span class=\"supfact\">param_2</span> & lt; - Number) {\n      <span class=\"supfact\">param_1</span> =\n          (long)(int)(<span class=\"supfact\">param_1</span> & gt; &gt; Number);\n    } else if (<span class=\"supfact\">param_2</span> & lt; Number) {\n      <span class=\"supfact\">param_1</span> =\n          gsm_L_asr(<span class=\"supfact\">param_1</span>, -<span class=\"supfact\">param_2</span>);\n    } else {\n      <span class=\"supfact\">param_1</span> = <span class=\"supfact\">param_1</span> & lt;\n      &lt;\n      ((byte)<span class=\"supfact\">param_2</span> & amp; Number);\n    }\n  } else {\n    <span class=\"supfact\">param_1</span> = Number;\n  }\n  return <span class=\"supfact\">param_1</span>;\n}", "code_t": "longword gsm_L_asl(longword <span class=\"supfact\">a</span>, int <span class=\"supfact\">n</span>) {\n  longword lVar1;\n  int <span class=\"supfact\">n</span> - local;\n  longword <span class=\"supfact\">a</span> - local;\n  if (<span class=\"supfact\">n</span> & lt; Number) {\n    if (<span class=\"supfact\">n</span> & lt; - Number) {\n      lVar1 = (longword)(int)(<span class=\"supfact\">a</span> & gt; &gt; Number);\n    } else if (<span class=\"supfact\">n</span> & lt; Number) {\n      lVar1 = gsm_L_asr(<span class=\"supfact\">a</span>, -<span class=\"supfact\">n</span>);\n    } else {\n      lVar1 = <span class=\"supfact\">a</span> & lt;\n      &lt;\n      ((byte)<span class=\"supfact\">n</span> & amp; Number);\n    }\n  } else {\n    lVar1 = Number;\n  }\n  return lVar1;\n}", "var": [{"name": "param_1", "type": "longword", "pred_name": "a", "ref_name": "a", "ref_type": "longword"}, {"name": "param_2", "type": "int", "pred_name": "n", "ref_name": "n", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "grengojbo", "repo_name": "opensips", "path": "grengojbo/opensips/d1e23f84fe376e3de4ed7cc406c1dbffebd3a848cc8b658008303a4af07e4043", "path_in_repo": "grengojbo/opensips/modules/dispatcher/dispatcher.so", "objdump": "00000000000098ba <destroy_list>:\n    98ba:\t55                   \tpush   %rbp\n    98bb:\t48 89 e5             \tmov    %rsp,%rbp\n    98be:\t48 83 ec 30          \tsub    $0x30,%rsp\n    98c2:\t89 7d dc             \tmov    %edi,-0x24(%rbp)\n    98c5:\t48 8b 05 1c b6 00 00 \tmov    0xb61c(%rip),%rax        # 14ee8 <ds_lists@@Base-0xb18>\n    98cc:\t48 8b 00             \tmov    (%rax),%rax\n    98cf:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n    98d2:\t48 63 d2             \tmovslq %edx,%rdx\n    98d5:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    98d9:\t48 01 d0             \tadd    %rdx,%rax\n    98dc:\t48 8b 00             \tmov    (%rax),%rax\n    98df:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    98e3:\te9 08 01 00 00       \tjmp    99f0 <destroy_list+0x136>\n    98e8:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    98ec:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    98f0:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    98f4:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    98f8:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    98fc:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    9900:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    9904:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    9908:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    990d:\t0f 84 a0 00 00 00    \tje     99b3 <destroy_list+0xf9>\n    9913:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    9917:\t48 8b 00             \tmov    (%rax),%rax\n    991a:\t48 85 c0             \ttest   %rax,%rax\n    991d:\t74 40                \tje     995f <destroy_list+0xa5>\n    991f:\t48 8b 05 e2 b5 00 00 \tmov    0xb5e2(%rip),%rax        # 14f08 <mem_lock>\n    9926:\t48 8b 00             \tmov    (%rax),%rax\n    9929:\t48 89 c7             \tmov    %rax,%rdi\n    992c:\te8 36 d2 ff ff       \tcall   6b67 <get_lock>\n    9931:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    9935:\t48 8b 10             \tmov    (%rax),%rdx\n    9938:\t48 8b 05 21 b6 00 00 \tmov    0xb621(%rip),%rax        # 14f60 <shm_block>\n    993f:\t48 8b 00             \tmov    (%rax),%rax\n    9942:\t48 89 d6             \tmov    %rdx,%rsi\n    9945:\t48 89 c7             \tmov    %rax,%rdi\n    9948:\te8 33 ab ff ff       \tcall   4480 <fm_free@plt>\n    994d:\t48 8b 05 b4 b5 00 00 \tmov    0xb5b4(%rip),%rax        # 14f08 <mem_lock>\n    9954:\t48 8b 00             \tmov    (%rax),%rax\n    9957:\t48 89 c7             \tmov    %rax,%rdi\n    995a:\te8 42 d2 ff ff       \tcall   6ba1 <release_lock>\n    995f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    9963:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n    9967:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    996b:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    9970:\t75 a1                \tjne    9913 <destroy_list+0x59>\n    9972:\t48 8b 05 8f b5 00 00 \tmov    0xb58f(%rip),%rax        # 14f08 <mem_lock>\n    9979:\t48 8b 00             \tmov    (%rax),%rax\n    997c:\t48 89 c7             \tmov    %rax,%rdi\n    997f:\te8 e3 d1 ff ff       \tcall   6b67 <get_lock>\n    9984:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    9988:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n    998c:\t48 8b 05 cd b5 00 00 \tmov    0xb5cd(%rip),%rax        # 14f60 <shm_block>\n    9993:\t48 8b 00             \tmov    (%rax),%rax\n    9996:\t48 89 d6             \tmov    %rdx,%rsi\n    9999:\t48 89 c7             \tmov    %rax,%rdi\n    999c:\te8 df aa ff ff       \tcall   4480 <fm_free@plt>\n    99a1:\t48 8b 05 60 b5 00 00 \tmov    0xb560(%rip),%rax        # 14f08 <mem_lock>\n    99a8:\t48 8b 00             \tmov    (%rax),%rax\n    99ab:\t48 89 c7             \tmov    %rax,%rdi\n    99ae:\te8 ee d1 ff ff       \tcall   6ba1 <release_lock>\n    99b3:\t48 8b 05 4e b5 00 00 \tmov    0xb54e(%rip),%rax        # 14f08 <mem_lock>\n    99ba:\t48 8b 00             \tmov    (%rax),%rax\n    99bd:\t48 89 c7             \tmov    %rax,%rdi\n    99c0:\te8 a2 d1 ff ff       \tcall   6b67 <get_lock>\n    99c5:\t48 8b 05 94 b5 00 00 \tmov    0xb594(%rip),%rax        # 14f60 <shm_block>\n    99cc:\t48 8b 00             \tmov    (%rax),%rax\n    99cf:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    99d3:\t48 89 d6             \tmov    %rdx,%rsi\n    99d6:\t48 89 c7             \tmov    %rax,%rdi\n    99d9:\te8 a2 aa ff ff       \tcall   4480 <fm_free@plt>\n    99de:\t48 8b 05 23 b5 00 00 \tmov    0xb523(%rip),%rax        # 14f08 <mem_lock>\n    99e5:\t48 8b 00             \tmov    (%rax),%rax\n    99e8:\t48 89 c7             \tmov    %rax,%rdi\n    99eb:\te8 b1 d1 ff ff       \tcall   6ba1 <release_lock>\n    99f0:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    99f5:\t0f 85 ed fe ff ff    \tjne    98e8 <destroy_list+0x2e>\n    99fb:\t48 8b 05 e6 b4 00 00 \tmov    0xb4e6(%rip),%rax        # 14ee8 <ds_lists@@Base-0xb18>\n    9a02:\t48 8b 00             \tmov    (%rax),%rax\n    9a05:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n    9a08:\t48 63 d2             \tmovslq %edx,%rdx\n    9a0b:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    9a0f:\t48 01 d0             \tadd    %rdx,%rax\n    9a12:\t48 c7 00 00 00 00 00 \tmovq   $0x0,(%rax)\n    9a19:\t90                   \tnop\n    9a1a:\tc9                   \tleave  \n    9a1b:\tc3                   \tret    ", "code_s": "void destroy_list(int <span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  long *<span class=\"supfact\">local_18</span>;\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = *(long *)(*(long *)PTR_ds_lists_00114ee8 +\n                                       (long)<span class=\"supfact\">param_1</span> * Number);\n  while (<span class=\"supfact\">local_10</span> != Number) {\n    lVar1 = *(long *)(<span class=\"supfact\">local_10</span> + Number);\n    <span class=\"supfact\">local_18</span> = *(long **)(<span class=\"supfact\">local_10</span> + Number);\n    if (<span class=\"supfact\">local_18</span> != (long *)Number) {\n      do {\n        if (*<span class=\"supfact\">local_18</span> != Number) {\n          FUN_00106b67(*(undefined8 *)PTR_mem_lock_00114f08);\n          fm_free(*(undefined8 *)PTR_shm_block_00114f60,\n                  *<span class=\"supfact\">local_18</span>);\n          FUN_00106ba1(*(undefined8 *)PTR_mem_lock_00114f08);\n        }\n        <span class=\"supfact\">local_18</span> = (long *)<span class=\"supfact\">local_18</span>[Number];\n      } while (<span class=\"supfact\">local_18</span> != (long *)Number);\n      FUN_00106b67(*(undefined8 *)PTR_mem_lock_00114f08);\n      fm_free(*(undefined8 *)PTR_shm_block_00114f60,\n              *(undefined8 *)(<span class=\"supfact\">local_10</span> + Number));\n      FUN_00106ba1(*(undefined8 *)PTR_mem_lock_00114f08);\n    }\n    FUN_00106b67(*(undefined8 *)PTR_mem_lock_00114f08);\n    fm_free(*(undefined8 *)PTR_shm_block_00114f60, <span class=\"supfact\">local_10</span>);\n    FUN_00106ba1(*(undefined8 *)PTR_mem_lock_00114f08);\n    <span class=\"supfact\">local_10</span> = lVar1;\n  }\n  *(undefined8 *)(*(long *)PTR_ds_lists_00114ee8 +\n                  (long)<span class=\"supfact\">param_1</span> * Number) = Number;\n  return;\n}", "code_t": "void destroy_list(int <span class=\"supfact\">list_id</span>) {\n  _ds_set *p_Var1;\n  int <span class=\"supfact\">list_id</span> - local;\n  ds_set_p sp_curr;\n  ds_dest_p <span class=\"supfact\">dest</span>;\n  ds_set_p <span class=\"supfact\">sp</span>;\n  <span class=\"supfact\">sp</span> = *(ds_set_p *)(*(long *)PTR_ds_lists_00114ee8 +\n                                     (long)<span class=\"supfact\">list_id</span> * Number);\n  while (<span class=\"supfact\">sp</span> != (ds_set_p)Number) {\n    p_Var1 = <span class=\"supfact\">sp</span> - &gt;\n    next;\n    <span class=\"supfact\">dest</span> = <span class=\"supfact\">sp</span> - &gt;\n    dlist;\n    if (<span class=\"supfact\">dest</span> != (ds_dest_p)Number) {\n      do {\n        if ((<span class=\"supfact\">dest</span> - &gt; uri).s != (char *)Number) {\n          get_lock(*(fl_lock_t **)PTR_mem_lock_00114f08);\n          fm_free(*(undefined8 *)PTR_shm_block_00114f60,\n                  (<span class=\"supfact\">dest</span> - &gt; uri).s);\n          release_lock(*(fl_lock_t **)PTR_mem_lock_00114f08);\n        }\n        <span class=\"supfact\">dest</span> = <span class=\"supfact\">dest</span> - &gt;\n        next;\n      } while (<span class=\"supfact\">dest</span> != (_ds_dest *)Number);\n      get_lock(*(fl_lock_t **)PTR_mem_lock_00114f08);\n      fm_free(*(undefined8 *)PTR_shm_block_00114f60, <span class=\"supfact\">sp</span> - &gt;\n              dlist);\n      release_lock(*(fl_lock_t **)PTR_mem_lock_00114f08);\n    }\n    get_lock(*(fl_lock_t **)PTR_mem_lock_00114f08);\n    fm_free(*(undefined8 *)PTR_shm_block_00114f60, <span class=\"supfact\">sp</span>);\n    release_lock(*(fl_lock_t **)PTR_mem_lock_00114f08);\n    <span class=\"supfact\">sp</span> = p_Var1;\n  }\n  *(undefined8 *)(*(long *)PTR_ds_lists_00114ee8 +\n                  (long)<span class=\"supfact\">list_id</span> * Number) = Number;\n  return;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "argc", "ref_name": "list_id", "ref_type": "int"}, {"name": "local_18", "type": "char * * *", "pred_name": "argv", "ref_name": "dest", "ref_type": "ds_dest_p"}, {"name": "local_10", "type": "__unk__", "pred_name": "__unk__", "ref_name": "sp", "ref_type": "ds_set_p"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "00000000000122ad <qmp_output_get_visitor>:\n   122ad:\t55                   \tpush   %rbp\n   122ae:\t48 89 e5             \tmov    %rsp,%rbp\n   122b1:\t48 83 ec 20          \tsub    $0x20,%rsp\n   122b5:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   122b9:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   122c0:\t00 00 \n   122c2:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   122c6:\t31 c0                \txor    %eax,%eax\n   122c8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   122cc:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n   122d0:\t64 48 33 14 25 28 00 \txor    %fs:0x28,%rdx\n   122d7:\t00 00 \n   122d9:\t74 05                \tje     122e0 <qmp_output_get_visitor+0x33>\n   122db:\te8 b0 5f ff ff       \tcall   8290 <__stack_chk_fail@plt>\n   122e0:\tc9                   \tleave  \n   122e1:\tc3                   \tret    ", "code_s": "undefined8 qmp_output_get_visitor(undefined8 <span class=\"supfact\">param_1</span>) {\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  if (*(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number) !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return <span class=\"supfact\">param_1</span>;\n}", "code_t": "Visitor *qmp_output_get_visitor(QmpOutputVisitor *<span class=\"supfact\">v</span>) {\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  QmpOutputVisitor *<span class=\"supfact\">v</span> - local;\n  if (*(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number) !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return &amp;\n  <span class=\"supfact\">v</span> - &gt;\n  visitor;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "v", "ref_type": "QmpOutputVisitor * *"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "wisfern", "repo_name": "ftplib", "path": "wisfern/ftplib/120c7c01c8a0aae43da663c920c3864b4039b4830e78d3276b50e784288a0c64", "path_in_repo": "wisfern/ftplib/src/libftp.so.4.0", "objdump": "00000000000046a3 <FtpSysType>:\n    46a3:\t55                   \tpush   %rbp\n    46a4:\t48 89 e5             \tmov    %rsp,%rbp\n    46a7:\t48 83 ec 40          \tsub    $0x40,%rsp\n    46ab:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    46af:\t89 75 d4             \tmov    %esi,-0x2c(%rbp)\n    46b2:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n    46b6:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    46b9:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    46bc:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    46c0:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    46c4:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    46c8:\t48 89 c2             \tmov    %rax,%rdx\n    46cb:\tbe 32 00 00 00       \tmov    $0x32,%esi\n    46d0:\t48 8d 3d 50 1b 00 00 \tlea    0x1b50(%rip),%rdi        # 6227 <_fini+0x113b>\n    46d7:\te8 f6 ec ff ff       \tcall   33d2 <FtpSendCmd>\n    46dc:\t85 c0                \ttest   %eax,%eax\n    46de:\t75 07                \tjne    46e7 <FtpSysType+0x44>\n    46e0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    46e5:\teb 56                \tjmp    473d <FtpSysType+0x9a>\n    46e7:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    46eb:\t48 05 84 00 00 00    \tadd    $0x84,%rax\n    46f1:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    46f5:\teb 1d                \tjmp    4714 <FtpSysType+0x71>\n    46f7:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    46fb:\t48 8d 42 01          \tlea    0x1(%rdx),%rax\n    46ff:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    4703:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    4707:\t48 8d 48 01          \tlea    0x1(%rax),%rcx\n    470b:\t48 89 4d f0          \tmov    %rcx,-0x10(%rbp)\n    470f:\t0f b6 12             \tmovzbl (%rdx),%edx\n    4712:\t88 10                \tmov    %dl,(%rax)\n    4714:\t83 6d fc 01          \tsubl   $0x1,-0x4(%rbp)\n    4718:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    471c:\t74 0b                \tje     4729 <FtpSysType+0x86>\n    471e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    4722:\t0f b6 00             \tmovzbl (%rax),%eax\n    4725:\t3c 20                \tcmp    $0x20,%al\n    4727:\t75 ce                \tjne    46f7 <FtpSysType+0x54>\n    4729:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    472d:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    4731:\t48 89 55 f0          \tmov    %rdx,-0x10(%rbp)\n    4735:\tc6 00 00             \tmovb   $0x0,(%rax)\n    4738:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    473d:\tc9                   \tleave  \n    473e:\tc3                   \tret    ", "code_s": "undefined8 FtpSysType(char *<span class=\"supfact\">param_1</span>,\n                      int <span class=\"supfact\">param_2</span>,\n                      long <span class=\"supfact\">param_3</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  undefined8 <span class=\"supfact\">uVar2</span>;\n  char *<span class=\"supfact\">local_20</span>;\n  char *<span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">iVar1</span> =\n      FUN_001033d2(&amp; DAT_00106227, Number, <span class=\"supfact\">param_3</span>);\n  if (<span class=\"supfact\">iVar1</span> == Number) {\n    <span class=\"supfact\">uVar2</span> = Number;\n  } else {\n    <span class=\"supfact\">local_20</span> = (char *)(<span class=\"supfact\">param_3</span> + Number);\n    <span class=\"supfact\">local_18</span> = <span class=\"supfact\">param_1</span>;\n    <span class=\"supfact\">local_c</span> = <span class=\"supfact\">param_2</span>;\n    while ((<span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + -Number,\n            <span class=\"supfact\">local_c</span> != Number & amp;\n            &amp; (*<span class=\"supfact\">local_20</span> != String))) {\n      *<span class=\"supfact\">local_18</span> = *<span class=\"supfact\">local_20</span>;\n      <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_20</span> + Number;\n      <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> + Number;\n    }\n    *<span class=\"supfact\">local_18</span> = String;\n    <span class=\"supfact\">uVar2</span> = Number;\n  }\n  return <span class=\"supfact\">uVar2</span>;\n}", "code_t": "int FtpSysType(char *<span class=\"supfact\">buf</span>, int <span class=\"supfact\">max</span>,\n               netbuf *<span class=\"supfact\">nControl</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  netbuf *<span class=\"supfact\">nControl</span> - local;\n  int <span class=\"supfact\">max</span> - local;\n  char *<span class=\"supfact\">buf</span> - local;\n  char *<span class=\"supfact\">s</span>;\n  char *<span class=\"supfact\">b</span>;\n  int <span class=\"supfact\">l</span>;\n  <span class=\"supfact\">iVar1</span> = FtpSendCmd(String, String, <span class=\"supfact\">nControl</span>);\n  if (<span class=\"supfact\">iVar1</span> == Number) {\n    <span class=\"supfact\">iVar1</span> = Number;\n  } else {\n    <span class=\"supfact\">s</span> = <span class=\"supfact\">nControl</span> - &gt;\n    response + Number;\n    <span class=\"supfact\">b</span> = <span class=\"supfact\">buf</span>;\n    <span class=\"supfact\">l</span> = <span class=\"supfact\">max</span>;\n    while ((<span class=\"supfact\">l</span> = <span class=\"supfact\">l</span> + -Number,\n            <span class=\"supfact\">l</span> != Number & amp;\n            &amp; (*<span class=\"supfact\">s</span> != String))) {\n      *<span class=\"supfact\">b</span> = *<span class=\"supfact\">s</span>;\n      <span class=\"supfact\">s</span> = <span class=\"supfact\">s</span> + Number;\n      <span class=\"supfact\">b</span> = <span class=\"supfact\">b</span> + Number;\n    }\n    *<span class=\"supfact\">b</span> = String;\n    <span class=\"supfact\">iVar1</span> = Number;\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "buf", "ref_type": "char * *"}, {"name": "param_2", "type": "int", "pred_name": "n", "ref_name": "max", "ref_type": "int"}, {"name": "param_3", "type": "void * *", "pred_name": "arg", "ref_name": "nControl", "ref_type": "netbuf * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "uVar2", "type": "char * *", "pred_name": "pcVar2", "ref_name": "", "ref_type": "disappear"}, {"name": "local_20", "type": "char * *", "pred_name": "__unk__", "ref_name": "s", "ref_type": "char * *"}, {"name": "local_18", "type": "char * *", "pred_name": "__unk__", "ref_name": "b", "ref_type": "char * *"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "l", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "grengojbo", "repo_name": "opensips", "path": "grengojbo/opensips/d1e23f84fe376e3de4ed7cc406c1dbffebd3a848cc8b658008303a4af07e4043", "path_in_repo": "grengojbo/opensips/modules/dispatcher/dispatcher.so", "objdump": "000000000000a275 <ds_hash_touri>:\n    a275:\t55                   \tpush   %rbp\n    a276:\t48 89 e5             \tmov    %rsp,%rbp\n    a279:\t53                   \tpush   %rbx\n    a27a:\t48 83 ec 48          \tsub    $0x48,%rsp\n    a27e:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n    a282:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n    a286:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n    a28b:\t74 07                \tje     a294 <ds_hash_touri+0x1f>\n    a28d:\t48 83 7d b0 00       \tcmpq   $0x0,-0x50(%rbp)\n    a292:\t75 79                \tjne    a30d <ds_hash_touri+0x98>\n    a294:\t48 8b 05 65 ac 00 00 \tmov    0xac65(%rip),%rax        # 14f00 <debug>\n    a29b:\t48 8b 00             \tmov    (%rax),%rax\n    a29e:\t8b 00                \tmov    (%rax),%eax\n    a2a0:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    a2a3:\t7c 5e                \tjl     a303 <ds_hash_touri+0x8e>\n    a2a5:\t48 8b 05 dc ab 00 00 \tmov    0xabdc(%rip),%rax        # 14e88 <log_stderr>\n    a2ac:\t8b 00                \tmov    (%rax),%eax\n    a2ae:\t85 c0                \ttest   %eax,%eax\n    a2b0:\t74 2b                \tje     a2dd <ds_hash_touri+0x68>\n    a2b2:\te8 a9 a0 ff ff       \tcall   4360 <dp_my_pid@plt>\n    a2b7:\t89 c3                \tmov    %eax,%ebx\n    a2b9:\te8 47 c8 ff ff       \tcall   6b05 <dp_time>\n    a2be:\t48 8d 0d 83 83 00 00 \tlea    0x8383(%rip),%rcx        # 12648 <__FUNCTION__.9513>\n    a2c5:\t89 da                \tmov    %ebx,%edx\n    a2c7:\t48 89 c6             \tmov    %rax,%rsi\n    a2ca:\t48 8d 3d 37 6d 00 00 \tlea    0x6d37(%rip),%rdi        # 11008 <__FUNCTION__.9242+0xed0>\n    a2d1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    a2d6:\te8 15 a2 ff ff       \tcall   44f0 <dprint@plt>\n    a2db:\teb 26                \tjmp    a303 <ds_hash_touri+0x8e>\n    a2dd:\t48 8b 05 ec ab 00 00 \tmov    0xabec(%rip),%rax        # 14ed0 <log_facility>\n    a2e4:\t8b 00                \tmov    (%rax),%eax\n    a2e6:\t83 c8 03             \tor     $0x3,%eax\n    a2e9:\t48 8d 15 58 83 00 00 \tlea    0x8358(%rip),%rdx        # 12648 <__FUNCTION__.9513>\n    a2f0:\t48 8d 35 41 6d 00 00 \tlea    0x6d41(%rip),%rsi        # 11038 <__FUNCTION__.9242+0xf00>\n    a2f7:\t89 c7                \tmov    %eax,%edi\n    a2f9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    a2fe:\te8 ad a0 ff ff       \tcall   43b0 <syslog@plt>\n    a303:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    a308:\te9 2e 01 00 00       \tjmp    a43b <ds_hash_touri+0x1c6>\n    a30d:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    a311:\t48 8b 80 88 00 00 00 \tmov    0x88(%rax),%rax\n    a318:\t48 85 c0             \ttest   %rax,%rax\n    a31b:\t0f 85 a1 00 00 00    \tjne    a3c2 <ds_hash_touri+0x14d>\n    a321:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    a325:\tba 00 00 00 00       \tmov    $0x0,%edx\n    a32a:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    a32f:\t48 89 c7             \tmov    %rax,%rdi\n    a332:\te8 e9 9e ff ff       \tcall   4220 <parse_headers@plt>\n    a337:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    a33a:\t74 10                \tje     a34c <ds_hash_touri+0xd7>\n    a33c:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    a340:\t48 8b 80 88 00 00 00 \tmov    0x88(%rax),%rax\n    a347:\t48 85 c0             \ttest   %rax,%rax\n    a34a:\t75 76                \tjne    a3c2 <ds_hash_touri+0x14d>\n    a34c:\t48 8b 05 ad ab 00 00 \tmov    0xabad(%rip),%rax        # 14f00 <debug>\n    a353:\t48 8b 00             \tmov    (%rax),%rax\n    a356:\t8b 00                \tmov    (%rax),%eax\n    a358:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    a35b:\t7c 5e                \tjl     a3bb <ds_hash_touri+0x146>\n    a35d:\t48 8b 05 24 ab 00 00 \tmov    0xab24(%rip),%rax        # 14e88 <log_stderr>\n    a364:\t8b 00                \tmov    (%rax),%eax\n    a366:\t85 c0                \ttest   %eax,%eax\n    a368:\t74 2b                \tje     a395 <ds_hash_touri+0x120>\n    a36a:\te8 f1 9f ff ff       \tcall   4360 <dp_my_pid@plt>\n    a36f:\t89 c3                \tmov    %eax,%ebx\n    a371:\te8 8f c7 ff ff       \tcall   6b05 <dp_time>\n    a376:\t48 8d 0d cb 82 00 00 \tlea    0x82cb(%rip),%rcx        # 12648 <__FUNCTION__.9513>\n    a37d:\t89 da                \tmov    %ebx,%edx\n    a37f:\t48 89 c6             \tmov    %rax,%rsi\n    a382:\t48 8d 3d a7 6d 00 00 \tlea    0x6da7(%rip),%rdi        # 11130 <__FUNCTION__.9242+0xff8>\n    a389:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    a38e:\te8 5d a1 ff ff       \tcall   44f0 <dprint@plt>\n    a393:\teb 26                \tjmp    a3bb <ds_hash_touri+0x146>\n    a395:\t48 8b 05 34 ab 00 00 \tmov    0xab34(%rip),%rax        # 14ed0 <log_facility>\n    a39c:\t8b 00                \tmov    (%rax),%eax\n    a39e:\t83 c8 03             \tor     $0x3,%eax\n    a3a1:\t48 8d 15 a0 82 00 00 \tlea    0x82a0(%rip),%rdx        # 12648 <__FUNCTION__.9513>\n    a3a8:\t48 8d 35 b9 6d 00 00 \tlea    0x6db9(%rip),%rsi        # 11168 <__FUNCTION__.9242+0x1030>\n    a3af:\t89 c7                \tmov    %eax,%edi\n    a3b1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    a3b6:\te8 f5 9f ff ff       \tcall   43b0 <syslog@plt>\n    a3bb:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    a3c0:\teb 79                \tjmp    a43b <ds_hash_touri+0x1c6>\n    a3c2:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    a3c6:\t48 8b 80 88 00 00 00 \tmov    0x88(%rax),%rax\n    a3cd:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    a3d1:\t48 8b 50 20          \tmov    0x20(%rax),%rdx\n    a3d5:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    a3d9:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    a3dd:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n    a3e1:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n    a3e5:\t48 89 c7             \tmov    %rax,%rdi\n    a3e8:\te8 70 ca ff ff       \tcall   6e5d <trim>\n    a3ed:\t48 8b 05 e4 aa 00 00 \tmov    0xaae4(%rip),%rax        # 14ed8 <ds_flags@@Base-0xa3c>\n    a3f4:\t8b 08                \tmov    (%rax),%ecx\n    a3f6:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n    a3fa:\t48 8d 75 c0          \tlea    -0x40(%rbp),%rsi\n    a3fe:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    a402:\t41 89 c8             \tmov    %ecx,%r8d\n    a405:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    a40a:\t48 89 c7             \tmov    %rax,%rdi\n    a40d:\te8 11 f8 ff ff       \tcall   9c23 <get_uri_hash_keys>\n    a412:\t85 c0                \ttest   %eax,%eax\n    a414:\t79 07                \tjns    a41d <ds_hash_touri+0x1a8>\n    a416:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    a41b:\teb 1e                \tjmp    a43b <ds_hash_touri+0x1c6>\n    a41d:\t48 8d 55 c0          \tlea    -0x40(%rbp),%rdx\n    a421:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    a425:\t48 89 d6             \tmov    %rdx,%rsi\n    a428:\t48 89 c7             \tmov    %rax,%rdi\n    a42b:\te8 40 9e ff ff       \tcall   4270 <ds_get_hash@plt>\n    a430:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n    a434:\t89 02                \tmov    %eax,(%rdx)\n    a436:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    a43b:\t48 83 c4 48          \tadd    $0x48,%rsp\n    a43f:\t5b                   \tpop    %rbx\n    a440:\t5d                   \tpop    %rbp\n    a441:\tc3                   \tret    ", "code_s": "undefined8 ds_hash_touri(long <span class=\"supfact\">param_1</span>,\n                         undefined4 *<span class=\"supfact\">param_2</span>) {\n  long lVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined8 <span class=\"supfact\">uVar4</span>;\n  undefined <span class=\"supfact\">local_48</span>[Number];\n  undefined <span class=\"supfact\">local_38</span>[Number];\n  undefined8 <span class=\"supfact\">local_28</span>;\n  undefined8 <span class=\"supfact\">local_20</span>;\n  if ((<span class=\"supfact\">param_1</span> == Number) ||\n      (<span class=\"supfact\">param_2</span> == (undefined4 *)Number)) {\n    if (-Number & lt; **(int **)PTR_debug_00114f00) {\n      if (*(int *)PTR_log_stderr_00114e88 == Number) {\n        syslog(*(uint *)PTR_log_facility_00114ed0 | Number, String, String);\n      } else {\n        uVar2 = dp_my_pid();\n        <span class=\"supfact\">uVar4</span> = FUN_00106b05();\n        dprint(String, <span class=\"supfact\">uVar4</span>, uVar2, String);\n      }\n    }\n    <span class=\"supfact\">uVar4</span> = Number;\n  } else {\n    if ((*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) & amp; &amp;\n        ((iVar3 = parse_headers(<span class=\"supfact\">param_1</span>, Number, Number),\n          iVar3 == -Number ||\n              (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number)))) {\n      if (-Number & lt; **(int **)PTR_debug_00114f00) {\n        if (*(int *)PTR_log_stderr_00114e88 == Number) {\n          syslog(*(uint *)PTR_log_facility_00114ed0 | Number, String, String);\n        } else {\n          uVar2 = dp_my_pid();\n          <span class=\"supfact\">uVar4</span> = FUN_00106b05();\n          dprint(String, <span class=\"supfact\">uVar4</span>, uVar2, String);\n        }\n      }\n      return Number;\n    }\n    lVar1 = *(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number);\n    <span class=\"supfact\">local_20</span> = *(undefined8 *)(lVar1 + Number);\n    <span class=\"supfact\">local_28</span> = *(undefined8 *)(lVar1 + Number);\n    FUN_00106e5d(&amp; <span class=\"supfact\">local_28</span>);\n    iVar3 = FUN_00109c23(\n        <span class=\"supfact\">local_38</span>, <span class=\"supfact\">local_48</span>, &amp;\n        <span class=\"supfact\">local_28</span>, Number, *(undefined4 *)PTR_ds_flags_00114ed8);\n    if (iVar3 & lt; Number) {\n      <span class=\"supfact\">uVar4</span> = Number;\n    } else {\n      uVar2 = ds_get_hash(<span class=\"supfact\">local_38</span>, <span class=\"supfact\">local_48</span>);\n      *<span class=\"supfact\">param_2</span> = uVar2;\n      <span class=\"supfact\">uVar4</span> = Number;\n    }\n  }\n  return <span class=\"supfact\">uVar4</span>;\n}", "code_t": "int ds_hash_touri(sip_msg *<span class=\"supfact\">msg</span>, uint *<span class=\"supfact\">hash</span>) {\n  void *pvVar1;\n  undefined4 uVar2;\n  int iVar3;\n  uint uVar4;\n  char *<span class=\"supfact\">pcVar5</span>;\n  uint *<span class=\"supfact\">hash</span> - local;\n  sip_msg *<span class=\"supfact\">msg</span> - local;\n  str <span class=\"supfact\">key2</span>;\n  str <span class=\"supfact\">key1</span>;\n  str <span class=\"supfact\">to</span>;\n  if ((<span class=\"supfact\">msg</span> == (sip_msg *)Number) ||\n      (<span class=\"supfact\">hash</span> == (uint *)Number)) {\n    if (-Number & lt; **(int **)PTR_debug_00114f00) {\n      if (*(int *)PTR_log_stderr_00114e88 == Number) {\n        syslog(*(uint *)PTR_log_facility_00114ed0 | Number, String, String);\n      } else {\n        uVar2 = dp_my_pid();\n        <span class=\"supfact\">pcVar5</span> = dp_time();\n        dprint(String, <span class=\"supfact\">pcVar5</span>, uVar2, String);\n      }\n    }\n    iVar3 = -Number;\n  } else {\n    if ((<span class=\"supfact\">msg</span> - &gt; <span class=\"supfact\">to</span> == (hdr_field *)Number) &\n            amp;\n        &amp;\n        ((iVar3 = parse_headers(<span class=\"supfact\">msg</span>, Number, Number),\n          iVar3 == -Number || (<span class=\"supfact\">msg</span> - &gt;\n                               <span class=\"supfact\">to</span> == (hdr_field *)Number)))) {\n      if (-Number & lt; **(int **)PTR_debug_00114f00) {\n        if (*(int *)PTR_log_stderr_00114e88 == Number) {\n          syslog(*(uint *)PTR_log_facility_00114ed0 | Number, String, String);\n        } else {\n          uVar2 = dp_my_pid();\n          <span class=\"supfact\">pcVar5</span> = dp_time();\n          dprint(String, <span class=\"supfact\">pcVar5</span>, uVar2, String);\n        }\n      }\n      return -Number;\n    }\n    pvVar1 = <span class=\"supfact\">msg</span> - &gt;\n    <span class=\"supfact\">to</span> - &gt;\n    parsed;\n    <span class=\"supfact\">to</span>._8_8_ = *(undefined8 *)((long)pvVar1 + Number);\n    <span class=\"supfact\">to</span>.s = *(char **)((long)pvVar1 + Number);\n    trim(&amp; <span class=\"supfact\">to</span>);\n    iVar3 = get_uri_hash_keys(\n        &amp; <span class=\"supfact\">key1</span>, &amp; <span class=\"supfact\">key2</span>, &amp;\n        <span class=\"supfact\">to</span>, (sip_uri *)Number, *(int *)PTR_ds_flags_00114ed8);\n    if (iVar3 & lt; Number) {\n      iVar3 = -Number;\n    } else {\n      uVar4 =\n          ds_get_hash(&amp; <span class=\"supfact\">key1</span>, &amp; <span class=\"supfact\">key2</span>);\n      *<span class=\"supfact\">hash</span> = uVar4;\n      iVar3 = Number;\n    }\n  }\n  return iVar3;\n}", "var": [{"name": "param_1", "type": "sip_msg * *", "pred_name": "_m", "ref_name": "msg", "ref_type": "sip_msg * *"}, {"name": "param_2", "type": "char * *", "pred_name": "__unk__", "ref_name": "hash", "ref_type": "uint * *"}, {"name": "uVar4", "type": "disappear", "pred_name": "", "ref_name": "pcVar5", "ref_type": "char * *"}, {"name": "local_48", "type": "char[16][16]", "pred_name": "__unk__", "ref_name": "key2", "ref_type": "str"}, {"name": "local_38", "type": "char[16][16]", "pred_name": "__unk__", "ref_name": "key1", "ref_type": "str"}, {"name": "local_28", "type": "char * *", "pred_name": "__unk__", "ref_name": "to", "ref_type": "str"}, {"name": "local_20", "type": "pv_spec_t * *", "pred_name": "sp", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "malvira", "repo_name": "erbr", "path": "malvira/erbr/2f8350b2482c685589c80daaa31735f028d7aa115ebd831f8cce34b92e2b972e", "path_in_repo": "malvira/erbr/contiki/examples/multi-threading/multi-threading.native", "objdump": "00000000004095d5 <tcpip_output>:\n  4095d5:\t55                   \tpush   %rbp\n  4095d6:\t48 89 e5             \tmov    %rsp,%rbp\n  4095d9:\t48 8b 05 48 a2 00 00 \tmov    0xa248(%rip),%rax        # 413828 <outputfunc>\n  4095e0:\t48 85 c0             \ttest   %rax,%rax\n  4095e3:\t74 0b                \tje     4095f0 <tcpip_output+0x1b>\n  4095e5:\t48 8b 05 3c a2 00 00 \tmov    0xa23c(%rip),%rax        # 413828 <outputfunc>\n  4095ec:\tff d0                \tcall   *%rax\n  4095ee:\teb 05                \tjmp    4095f5 <tcpip_output+0x20>\n  4095f0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4095f5:\t5d                   \tpop    %rbp\n  4095f6:\tc3                   \tret    ", "code_s": "undefined8 tcpip_output(void) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  if (DAT_00413828 == (code *)Number) {\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar1</span> = (*DAT_00413828)();\n  }\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "uint8_t tcpip_output(void) {\n  uint8_t uVar1;\n  if (outputfunc == (_func_uint8_t *)Number) {\n    uVar1 = String;\n  } else {\n    uVar1 = (*outputfunc)();\n  }\n  return uVar1;\n}", "var": [{"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000001bca0 <qobject_to_qfloat>:\n   1bca0:\t55                   \tpush   %rbp\n   1bca1:\t48 89 e5             \tmov    %rsp,%rbp\n   1bca4:\t48 83 ec 20          \tsub    $0x20,%rsp\n   1bca8:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   1bcac:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   1bcb3:\t00 00 \n   1bcb5:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   1bcb9:\t31 c0                \txor    %eax,%eax\n   1bcbb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1bcbf:\t48 89 c7             \tmov    %rax,%rdi\n   1bcc2:\te8 ce fe ff ff       \tcall   1bb95 <qobject_type>\n   1bcc7:\t83 f8 05             \tcmp    $0x5,%eax\n   1bcca:\t74 07                \tje     1bcd3 <qobject_to_qfloat+0x33>\n   1bccc:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   1bcd1:\teb 0d                \tjmp    1bce0 <qobject_to_qfloat+0x40>\n   1bcd3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1bcd7:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n   1bcdb:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1bcdf:\t90                   \tnop\n   1bce0:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n   1bce4:\t64 48 33 14 25 28 00 \txor    %fs:0x28,%rdx\n   1bceb:\t00 00 \n   1bced:\t74 05                \tje     1bcf4 <qobject_to_qfloat+0x54>\n   1bcef:\te8 9c c5 fe ff       \tcall   8290 <__stack_chk_fail@plt>\n   1bcf4:\tc9                   \tleave  \n   1bcf5:\tc3                   \tret    ", "code_s": "undefined8 qobject_to_qfloat(undefined8 <span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">iVar2</span> = FUN_0011bb95(<span class=\"supfact\">param_1</span>);\n  if (<span class=\"supfact\">iVar2</span> != Number) {\n    <span class=\"supfact\">param_1</span> = Number;\n  }\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">param_1</span>;\n  }\n  __stack_chk_fail();\n}", "code_t": "QFloat *qobject_to_qfloat(QObject *<span class=\"supfact\">obj</span>) {\n  long lVar1;\n  qtype_code <span class=\"supfact\">qVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  QObject *<span class=\"supfact\">obj</span> - local;\n  QObject *__mptr;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">qVar2</span> = qobject_type(<span class=\"supfact\">obj</span>);\n  if (<span class=\"supfact\">qVar2</span> != QTYPE_QFLOAT) {\n    <span class=\"supfact\">obj</span> = (QObject *)Number;\n  }\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return (QFloat *)<span class=\"supfact\">obj</span>;\n  }\n  __stack_chk_fail();\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "obj", "ref_type": "QObject * *"}, {"name": "iVar2", "type": "int", "pred_name": "iVar2", "ref_name": "qVar2", "ref_type": "qtype_code"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "DennisKofflard", "repo_name": "Trident_i2c_controller", "path": "DennisKofflard/Trident_i2c_controller/7f3b1341443e0a8ff448c9a5c1a21c28b9aacb88b829d641d7994be27df60654", "path_in_repo": "DennisKofflard/Trident_i2c_controller/congatec_cgoslib/Lx/libcgos.so", "objdump": "0000000000003e54 <CgosVgaCount>:\n    3e54:\t55                   \tpush   %rbp\n    3e55:\t48 89 e5             \tmov    %rsp,%rbp\n    3e58:\t48 83 ec 10          \tsub    $0x10,%rsp\n    3e5c:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n    3e5f:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    3e62:\t6a 00                \tpush   $0x0\n    3e64:\t6a 00                \tpush   $0x0\n    3e66:\t6a 00                \tpush   $0x0\n    3e68:\t6a 00                \tpush   $0x0\n    3e6a:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    3e70:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    3e76:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    3e7b:\t89 c2                \tmov    %eax,%edx\n    3e7d:\tbe 0c 00 00 00       \tmov    $0xc,%esi\n    3e82:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    3e87:\te8 44 f3 ff ff       \tcall   31d0 <CallDrvPlain@plt>\n    3e8c:\t48 83 c4 20          \tadd    $0x20,%rsp\n    3e90:\tc9                   \tleave  \n    3e91:\tc3                   \tret    ", "code_s": "void CgosVgaCount(undefined4 <span class=\"supfact\">param_1</span>) {\n  CallDrvPlain(Number, Number, <span class=\"supfact\">param_1</span>, Number, Number, Number,\n               Number, Number, Number, Number);\n  return;\n}", "code_t": "uint CgosVgaCount(HCGOS <span class=\"supfact\">hCgos</span>) {\n  uint uVar1;\n  HCGOS <span class=\"supfact\">hCgos</span> - local;\n  uVar1 = CallDrvPlain(Number, Number, <span class=\"supfact\">hCgos</span>, Number, Number,\n                       Number, Number, Number, (uint *)Number, (uint *)Number);\n  return uVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "hCgos", "ref_type": "HCGOS"}], "body_in_train": false}, {"repo_owner": "ajamous", "repo_name": "DOTS", "path": "ajamous/DOTS/28c9e348f3a3b11bc4f8699bd26ee99298379f2886174405e6aa1da54ee51932", "path_in_repo": "ajamous/DOTS/SIP_Clients_pjsip-2.7.1/pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/clidemo", "objdump": "0000000000418469 <gsm_asl>:\n  418469:\t55                   \tpush   %rbp\n  41846a:\t48 89 e5             \tmov    %rsp,%rbp\n  41846d:\t48 83 ec 10          \tsub    $0x10,%rsp\n  418471:\t89 f8                \tmov    %edi,%eax\n  418473:\t89 75 f8             \tmov    %esi,-0x8(%rbp)\n  418476:\t66 89 45 fc          \tmov    %ax,-0x4(%rbp)\n  41847a:\t83 7d f8 0f          \tcmpl   $0xf,-0x8(%rbp)\n  41847e:\t7e 07                \tjle    418487 <gsm_asl+0x1e>\n  418480:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  418485:\teb 3e                \tjmp    4184c5 <gsm_asl+0x5c>\n  418487:\t83 7d f8 f1          \tcmpl   $0xfffffff1,-0x8(%rbp)\n  41848b:\t7d 0f                \tjge    41849c <gsm_asl+0x33>\n  41848d:\t0f b7 45 fc          \tmovzwl -0x4(%rbp),%eax\n  418491:\t66 c1 e8 0f          \tshr    $0xf,%ax\n  418495:\t0f b6 c0             \tmovzbl %al,%eax\n  418498:\tf7 d8                \tneg    %eax\n  41849a:\teb 29                \tjmp    4184c5 <gsm_asl+0x5c>\n  41849c:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n  4184a0:\t79 16                \tjns    4184b8 <gsm_asl+0x4f>\n  4184a2:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  4184a5:\tf7 d8                \tneg    %eax\n  4184a7:\t89 c2                \tmov    %eax,%edx\n  4184a9:\t0f bf 45 fc          \tmovswl -0x4(%rbp),%eax\n  4184ad:\t89 d6                \tmov    %edx,%esi\n  4184af:\t89 c7                \tmov    %eax,%edi\n  4184b1:\te8 6a 00 00 00       \tcall   418520 <gsm_asr>\n  4184b6:\teb 0d                \tjmp    4184c5 <gsm_asl+0x5c>\n  4184b8:\t0f bf 55 fc          \tmovswl -0x4(%rbp),%edx\n  4184bc:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n  4184bf:\t89 c1                \tmov    %eax,%ecx\n  4184c1:\td3 e2                \tshl    %cl,%edx\n  4184c3:\t89 d0                \tmov    %edx,%eax\n  4184c5:\tc9                   \tleave  \n  4184c6:\tc3                   \tret    ", "code_s": "ulong gsm_asl(short <span class=\"supfact\">param_1</span>, int <span class=\"supfact\">param_2</span>) {\n  ulong <span class=\"supfact\">uVar1</span>;\n  if (<span class=\"supfact\">param_2</span> & lt; Number) {\n    if (<span class=\"supfact\">param_2</span> & lt; - Number) {\n      <span class=\"supfact\">uVar1</span> =\n          (ulong) -\n          (uint)(byte)((ushort)<span class=\"supfact\">param_1</span> & gt; &gt; Number);\n    } else if (<span class=\"supfact\">param_2</span> & lt; Number) {\n      <span class=\"supfact\">uVar1</span> =\n          gsm_asr((int)<span class=\"supfact\">param_1</span>, -<span class=\"supfact\">param_2</span>);\n    } else {\n      <span class=\"supfact\">uVar1</span> =\n          (ulong)(uint)((int)<span class=\"supfact\">param_1</span> & lt; &lt;\n                        ((byte)<span class=\"supfact\">param_2</span> & amp; Number));\n    }\n  } else {\n    <span class=\"supfact\">uVar1</span> = Number;\n  }\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "word gsm_asl(word <span class=\"supfact\">a</span>, int <span class=\"supfact\">n</span>) {\n  short sVar1;\n  int <span class=\"supfact\">n</span> - local;\n  word <span class=\"supfact\">a</span> - local;\n  if (<span class=\"supfact\">n</span> & lt; Number) {\n    if (<span class=\"supfact\">n</span> & lt; - Number) {\n      sVar1 = <span class=\"supfact\">a</span> & gt;\n      &gt;\n      Number;\n    } else if (<span class=\"supfact\">n</span> & lt; Number) {\n      sVar1 = gsm_asr(<span class=\"supfact\">a</span>, -<span class=\"supfact\">n</span>);\n    } else {\n      sVar1 = (short)((int)<span class=\"supfact\">a</span> & lt; &lt;\n                      ((byte)<span class=\"supfact\">n</span> & amp; Number));\n    }\n  } else {\n    sVar1 = Number;\n  }\n  return sVar1;\n}", "var": [{"name": "param_1", "type": "word", "pred_name": "a", "ref_name": "a", "ref_type": "word"}, {"name": "param_2", "type": "int", "pred_name": "n", "ref_name": "n", "ref_type": "int"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "wisfern", "repo_name": "ftplib", "path": "wisfern/ftplib/120c7c01c8a0aae43da663c920c3864b4039b4830e78d3276b50e784288a0c64", "path_in_repo": "wisfern/ftplib/src/libftp.so.4.0", "objdump": "00000000000031cb <FtpSetCallback>:\n    31cb:\t55                   \tpush   %rbp\n    31cc:\t48 89 e5             \tmov    %rsp,%rbp\n    31cf:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    31d3:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n    31d7:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    31db:\t48 8b 10             \tmov    (%rax),%rdx\n    31de:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    31e2:\t48 89 50 58          \tmov    %rdx,0x58(%rax)\n    31e6:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    31ea:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    31ee:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    31f2:\t48 89 50 60          \tmov    %rdx,0x60(%rax)\n    31f6:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    31fa:\t8b 40 14             \tmov    0x14(%rax),%eax\n    31fd:\t89 c0                \tmov    %eax,%eax\n    31ff:\t48 69 c0 d3 4d 62 10 \timul   $0x10624dd3,%rax,%rax\n    3206:\t48 c1 e8 20          \tshr    $0x20,%rax\n    320a:\tc1 e8 06             \tshr    $0x6,%eax\n    320d:\t89 c2                \tmov    %eax,%edx\n    320f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3213:\t48 89 50 48          \tmov    %rdx,0x48(%rax)\n    3217:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    321b:\t8b 50 14             \tmov    0x14(%rax),%edx\n    321e:\t89 d0                \tmov    %edx,%eax\n    3220:\t48 69 c0 d3 4d 62 10 \timul   $0x10624dd3,%rax,%rax\n    3227:\t48 c1 e8 20          \tshr    $0x20,%rax\n    322b:\tc1 e8 06             \tshr    $0x6,%eax\n    322e:\t69 c0 e8 03 00 00    \timul   $0x3e8,%eax,%eax\n    3234:\t29 c2                \tsub    %eax,%edx\n    3236:\t89 d0                \tmov    %edx,%eax\n    3238:\t69 c0 e8 03 00 00    \timul   $0x3e8,%eax,%eax\n    323e:\t89 c2                \tmov    %eax,%edx\n    3240:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3244:\t48 89 50 50          \tmov    %rdx,0x50(%rax)\n    3248:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    324c:\t8b 40 10             \tmov    0x10(%rax),%eax\n    324f:\t89 c2                \tmov    %eax,%edx\n    3251:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3255:\t48 89 50 70          \tmov    %rdx,0x70(%rax)\n    3259:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    325e:\t5d                   \tpop    %rbp\n    325f:\tc3                   \tret    ", "code_s": "undefined8 FtpSetCallback(undefined8 *<span class=\"supfact\">param_1</span>,\n                          long <span class=\"supfact\">param_2</span>) {\n  *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number) = *<span class=\"supfact\">param_1</span>;\n  *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number) =\n      <span class=\"supfact\">param_1</span>[Number];\n  *(ulong *)(<span class=\"supfact\">param_2</span> + Number) =\n      (ulong) * (uint *)((long)<span class=\"supfact\">param_1</span> + Number) / Number;\n  *(ulong *)(<span class=\"supfact\">param_2</span> + Number) =\n      (ulong)((*(uint *)((long)<span class=\"supfact\">param_1</span> + Number) % Number) *\n              Number);\n  *(ulong *)(<span class=\"supfact\">param_2</span> + Number) =\n      (ulong) * (uint *)(<span class=\"supfact\">param_1</span> + Number);\n  return Number;\n}", "code_t": "int FtpSetCallback(FtpCallbackOptions *<span class=\"supfact\">opt</span>,\n                   netbuf *<span class=\"supfact\">nControl</span>) {\n  netbuf *<span class=\"supfact\">nControl</span> - local;\n  FtpCallbackOptions *<span class=\"supfact\">opt</span> - local;\n  <span class=\"supfact\">nControl</span> - &gt;\n  idlecb = <span class=\"supfact\">opt</span> - &gt;\n  cbFunc;\n  <span class=\"supfact\">nControl</span> - &gt;\n  idlearg = <span class=\"supfact\">opt</span> - &gt;\n  cbArg;\n  (<span class=\"supfact\">nControl</span> - &gt; idletime).tv_sec =\n      (ulong)<span class=\"supfact\">opt</span> - &gt;\n  idleTime / Number;\n  (<span class=\"supfact\">nControl</span> - &gt; idletime).tv_usec =\n      (ulong)((<span class=\"supfact\">opt</span> - &gt; idleTime % Number) * Number);\n  <span class=\"supfact\">nControl</span> - &gt;\n  cbbytes = (ulong)<span class=\"supfact\">opt</span> - &gt;\n  bytesXferred;\n  return Number;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "opt", "ref_type": "FtpCallbackOptions * *"}, {"name": "param_2", "type": "__unk__", "pred_name": "__unk__", "ref_name": "nControl", "ref_type": "netbuf * *"}], "body_in_train": false}, {"repo_owner": "sycurelab", "repo_name": "DECAF", "path": "sycurelab/DECAF/0686688133d3c985d7a4f7426aab7c872f3295f3585dbef44b015ff7f401f71c", "path_in_repo": "sycurelab/DECAF/decaf/qemu-ga", "objdump": "000000000001c8de <qmp_guest_file_write>:\n   1c8de:\t55                   \tpush   %rbp\n   1c8df:\t48 89 e5             \tmov    %rsp,%rbp\n   1c8e2:\t48 83 ec 70          \tsub    $0x70,%rsp\n   1c8e6:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n   1c8ea:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n   1c8ee:\t89 d0                \tmov    %edx,%eax\n   1c8f0:\t48 89 4d a0          \tmov    %rcx,-0x60(%rbp)\n   1c8f4:\t4c 89 45 98          \tmov    %r8,-0x68(%rbp)\n   1c8f8:\t88 45 ac             \tmov    %al,-0x54(%rbp)\n   1c8fb:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   1c902:\t00 00 \n   1c904:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   1c908:\t31 c0                \txor    %eax,%eax\n   1c90a:\t48 c7 45 d8 00 00 00 \tmovq   $0x0,-0x28(%rbp)\n   1c911:\t00 \n   1c912:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n   1c916:\t48 89 c7             \tmov    %rax,%rdi\n   1c919:\te8 03 fb ff ff       \tcall   1c421 <guest_file_handle_find>\n   1c91e:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n   1c922:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n   1c927:\t75 29                \tjne    1c952 <qmp_guest_file_write+0x74>\n   1c929:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   1c92d:\t48 8d 15 79 92 00 00 \tlea    0x9279(%rip),%rdx        # 25bad <__func__.14451+0x26d>\n   1c934:\t48 8d 35 7d 92 00 00 \tlea    0x927d(%rip),%rsi        # 25bb8 <__func__.14451+0x278>\n   1c93b:\t48 89 c7             \tmov    %rax,%rdi\n   1c93e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   1c943:\te8 cd f6 fe ff       \tcall   c015 <error_set>\n   1c948:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   1c94d:\te9 35 01 00 00       \tjmp    1ca87 <qmp_guest_file_write+0x1a9>\n   1c952:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1c956:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n   1c95a:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   1c95e:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n   1c962:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n   1c966:\t48 89 d6             \tmov    %rdx,%rsi\n   1c969:\t48 89 c7             \tmov    %rax,%rdi\n   1c96c:\te8 ef b9 fe ff       \tcall   8360 <g_base64_decode@plt>\n   1c971:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n   1c975:\t0f b6 45 ac          \tmovzbl -0x54(%rbp),%eax\n   1c979:\t83 f0 01             \txor    $0x1,%eax\n   1c97c:\t84 c0                \ttest   %al,%al\n   1c97e:\t74 0a                \tje     1c98a <qmp_guest_file_write+0xac>\n   1c980:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n   1c984:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n   1c988:\teb 49                \tjmp    1c9d3 <qmp_guest_file_write+0xf5>\n   1c98a:\t48 83 7d a0 00       \tcmpq   $0x0,-0x60(%rbp)\n   1c98f:\t78 0d                \tjs     1c99e <qmp_guest_file_write+0xc0>\n   1c991:\t48 8b 55 a0          \tmov    -0x60(%rbp),%rdx\n   1c995:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n   1c999:\t48 39 c2             \tcmp    %rax,%rdx\n   1c99c:\t76 35                \tjbe    1c9d3 <qmp_guest_file_write+0xf5>\n   1c99e:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1c9a2:\t48 89 c7             \tmov    %rax,%rdi\n   1c9a5:\te8 66 b7 fe ff       \tcall   8110 <g_free@plt>\n   1c9aa:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   1c9ae:\t48 8d 15 45 92 00 00 \tlea    0x9245(%rip),%rdx        # 25bfa <__func__.14451+0x2ba>\n   1c9b5:\t48 8d 35 44 92 00 00 \tlea    0x9244(%rip),%rsi        # 25c00 <__func__.14451+0x2c0>\n   1c9bc:\t48 89 c7             \tmov    %rax,%rdi\n   1c9bf:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   1c9c4:\te8 4c f6 fe ff       \tcall   c015 <error_set>\n   1c9c9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   1c9ce:\te9 b4 00 00 00       \tjmp    1ca87 <qmp_guest_file_write+0x1a9>\n   1c9d3:\t48 8b 55 a0          \tmov    -0x60(%rbp),%rdx\n   1c9d7:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n   1c9db:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1c9df:\tbe 01 00 00 00       \tmov    $0x1,%esi\n   1c9e4:\t48 89 c7             \tmov    %rax,%rdi\n   1c9e7:\te8 54 be fe ff       \tcall   8840 <fwrite@plt>\n   1c9ec:\t89 45 cc             \tmov    %eax,-0x34(%rbp)\n   1c9ef:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1c9f3:\t48 89 c7             \tmov    %rax,%rdi\n   1c9f6:\te8 65 b7 fe ff       \tcall   8160 <ferror@plt>\n   1c9fb:\t85 c0                \ttest   %eax,%eax\n   1c9fd:\t74 39                \tje     1ca38 <qmp_guest_file_write+0x15a>\n   1c9ff:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n   1ca03:\t48 89 c6             \tmov    %rax,%rsi\n   1ca06:\t48 8d 3d 63 92 00 00 \tlea    0x9263(%rip),%rdi        # 25c70 <__func__.14451+0x330>\n   1ca0d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   1ca12:\te8 ff f5 ff ff       \tcall   1c016 <slog>\n   1ca17:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   1ca1b:\t48 8d 15 73 92 00 00 \tlea    0x9273(%rip),%rdx        # 25c95 <__func__.14451+0x355>\n   1ca22:\t48 8d 35 07 91 00 00 \tlea    0x9107(%rip),%rsi        # 25b30 <__func__.14451+0x1f0>\n   1ca29:\t48 89 c7             \tmov    %rax,%rdi\n   1ca2c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   1ca31:\te8 df f5 fe ff       \tcall   c015 <error_set>\n   1ca36:\teb 33                \tjmp    1ca6b <qmp_guest_file_write+0x18d>\n   1ca38:\tbf 10 00 00 00       \tmov    $0x10,%edi\n   1ca3d:\te8 5e bd fe ff       \tcall   87a0 <g_malloc0@plt>\n   1ca42:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n   1ca46:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n   1ca49:\t48 63 d0             \tmovslq %eax,%rdx\n   1ca4c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n   1ca50:\t48 89 10             \tmov    %rdx,(%rax)\n   1ca53:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1ca57:\t48 89 c7             \tmov    %rax,%rdi\n   1ca5a:\te8 71 ba fe ff       \tcall   84d0 <feof@plt>\n   1ca5f:\t85 c0                \ttest   %eax,%eax\n   1ca61:\t0f 95 c2             \tsetne  %dl\n   1ca64:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n   1ca68:\t88 50 08             \tmov    %dl,0x8(%rax)\n   1ca6b:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1ca6f:\t48 89 c7             \tmov    %rax,%rdi\n   1ca72:\te8 99 b6 fe ff       \tcall   8110 <g_free@plt>\n   1ca77:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1ca7b:\t48 89 c7             \tmov    %rax,%rdi\n   1ca7e:\te8 8d ba fe ff       \tcall   8510 <clearerr@plt>\n   1ca83:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n   1ca87:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n   1ca8b:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n   1ca92:\t00 00 \n   1ca94:\t74 05                \tje     1ca9b <qmp_guest_file_write+0x1bd>\n   1ca96:\te8 f5 b7 fe ff       \tcall   8290 <__stack_chk_fail@plt>\n   1ca9b:\tc9                   \tleave  \n   1ca9c:\tc3                   \tret    ", "code_s": "long *qmp_guest_file_write(undefined8 <span class=\"supfact\">param_1</span>,\n                           undefined8 <span class=\"supfact\">param_2</span>,\n                           char <span class=\"supfact\">param_3</span>,\n                           ulong <span class=\"supfact\">param_4</span>,\n                           undefined8 <span class=\"supfact\">param_5</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  long *plVar2;\n  size_t sVar3;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  ulong <span class=\"supfact\">local_68</span>;\n  ulong <span class=\"supfact\">local_38</span>;\n  long *<span class=\"supfact\">local_30</span>;\n  long <span class=\"supfact\">local_28</span>;\n  FILE *<span class=\"supfact\">local_20</span>;\n  void *<span class=\"supfact\">local_18</span>;\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_30</span> = (long *)Number;\n  <span class=\"supfact\">local_28</span> = FUN_0011c421(<span class=\"supfact\">param_1</span>);\n  if (<span class=\"supfact\">local_28</span> == Number) {\n    error_set(<span class=\"supfact\">param_5</span>, String, String);\n    plVar2 = (long *)Number;\n  } else {\n    <span class=\"supfact\">local_20</span> = *(FILE **)(<span class=\"supfact\">local_28</span> + Number);\n    <span class=\"supfact\">local_18</span> = (void *)g_base64_decode(\n        <span class=\"supfact\">param_2</span>, &amp; <span class=\"supfact\">local_38</span>);\n    if (<span class=\"supfact\">param_3</span> == String) {\n      if (((long)<span class=\"supfact\">param_4</span> & lt; Number) ||\n          (<span class=\"supfact\">local_68</span> = <span class=\"supfact\">param_4</span>,\n           <span class=\"supfact\">local_38</span> & lt;\n           <span class=\"supfact\">param_4</span>)) {\n        g_free(<span class=\"supfact\">local_18</span>);\n        error_set(<span class=\"supfact\">param_5</span>, String, String);\n        plVar2 = (long *)Number;\n        goto LAB_0011ca87;\n      }\n    } else {\n      <span class=\"supfact\">local_68</span> = <span class=\"supfact\">local_38</span>;\n    }\n    sVar3 = fwrite(<span class=\"supfact\">local_18</span>, Number, <span class=\"supfact\">local_68</span>,\n                   <span class=\"supfact\">local_20</span>);\n    <span class=\"supfact\">iVar1</span> = ferror(<span class=\"supfact\">local_20</span>);\n    if (<span class=\"supfact\">iVar1</span> == Number) {\n      <span class=\"supfact\">local_30</span> = (long *)g_malloc0(Number);\n      *<span class=\"supfact\">local_30</span> = (long)(int)sVar3;\n      <span class=\"supfact\">iVar1</span> = feof(<span class=\"supfact\">local_20</span>);\n      *(bool *)(<span class=\"supfact\">local_30</span> + Number) =\n          <span class=\"supfact\">iVar1</span> != Number;\n    } else {\n      FUN_0011c016(String, <span class=\"supfact\">param_1</span>);\n      error_set(<span class=\"supfact\">param_5</span>, String, String);\n    }\n    g_free(<span class=\"supfact\">local_18</span>);\n    clearerr(<span class=\"supfact\">local_20</span>);\n    plVar2 = <span class=\"supfact\">local_30</span>;\n  }\nLAB_0011ca87:\n  if (<span class=\"supfact\">local_10</span> !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return plVar2;\n}", "code_t": "GuestFileWrite *qmp_guest_file_write(int64_t <span class=\"supfact\">handle</span>,\n                                     char *<span class=\"supfact\">buf_b64</span>,\n                                     _Bool <span class=\"supfact\">has_count</span>,\n                                     int64_t <span class=\"supfact\">count</span>,\n                                     Error **<span class=\"supfact\">err</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  GuestFileWrite *pGVar2;\n  size_t sVar3;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  Error **<span class=\"supfact\">err</span> - local;\n  int64_t <span class=\"supfact\">count</span> - local;\n  _Bool <span class=\"supfact\">has_count</span> - local;\n  char *<span class=\"supfact\">buf_b64</span> - local;\n  int64_t <span class=\"supfact\">handle</span> - local;\n  int write_count;\n  gsize <span class=\"supfact\">buf_len</span>;\n  GuestFileWrite *<span class=\"supfact\">write_data</span>;\n  GuestFileHandle *<span class=\"supfact\">gfh</span>;\n  FILE *<span class=\"supfact\">fh</span>;\n  guchar *<span class=\"supfact\">buf</span>;\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">write_data</span> = (GuestFileWrite *)Number;\n  <span class=\"supfact\">gfh</span> = guest_file_handle_find(<span class=\"supfact\">handle</span>);\n  if (<span class=\"supfact\">gfh</span> == (GuestFileHandle *)Number) {\n    error_set(<span class=\"supfact\">err</span>, String, String);\n    pGVar2 = (GuestFileWrite *)Number;\n  } else {\n    <span class=\"supfact\">fh</span> = <span class=\"supfact\">gfh</span> - &gt;\n    <span class=\"supfact\">fh</span>;\n    <span class=\"supfact\">buf</span> = (guchar *)g_base64_decode(\n        <span class=\"supfact\">buf_b64</span>, &amp; <span class=\"supfact\">buf_len</span>);\n    if (<span class=\"supfact\">has_count</span>) {\n      if ((<span class=\"supfact\">count</span> & lt; Number) ||\n          (<span class=\"supfact\">count</span> - local = <span class=\"supfact\">count</span>,\n           <span class=\"supfact\">buf_len</span> & lt;\n           (ulong)<span class=\"supfact\">count</span>)) {\n        g_free(<span class=\"supfact\">buf</span>);\n        error_set(<span class=\"supfact\">err</span>, String, String);\n        pGVar2 = (GuestFileWrite *)Number;\n        goto LAB_0011ca87;\n      }\n    } else {\n      <span class=\"supfact\">count</span> - local = <span class=\"supfact\">buf_len</span>;\n    }\n    sVar3 = fwrite(<span class=\"supfact\">buf</span>, Number, <span class=\"supfact\">count</span> - local,\n                   (FILE *)<span class=\"supfact\">fh</span>);\n    <span class=\"supfact\">iVar1</span> = ferror((FILE *)<span class=\"supfact\">fh</span>);\n    if (<span class=\"supfact\">iVar1</span> == Number) {\n      <span class=\"supfact\">write_data</span> = (GuestFileWrite *)g_malloc0(Number);\n      <span class=\"supfact\">write_data</span> - &gt;\n      <span class=\"supfact\">count</span> = (long)(int)sVar3;\n      <span class=\"supfact\">iVar1</span> = feof((FILE *)<span class=\"supfact\">fh</span>);\n      <span class=\"supfact\">write_data</span> - &gt;\n      eof = <span class=\"supfact\">iVar1</span> != Number;\n    } else {\n      slog(String, <span class=\"supfact\">handle</span>);\n      error_set(<span class=\"supfact\">err</span>, String, String);\n    }\n    g_free(<span class=\"supfact\">buf</span>);\n    clearerr((FILE *)<span class=\"supfact\">fh</span>);\n    pGVar2 = <span class=\"supfact\">write_data</span>;\n  }\nLAB_0011ca87:\n  if (<span class=\"supfact\">local_10</span> !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return pGVar2;\n}", "var": [{"name": "param_1", "type": "FILE * * *", "pred_name": "param_1", "ref_name": "handle", "ref_type": "int64_t"}, {"name": "param_2", "type": "char * *", "pred_name": "param_2", "ref_name": "buf_b64", "ref_type": "char * *"}, {"name": "param_3", "type": "bool", "pred_name": "param_3", "ref_name": "has_count", "ref_type": "_Bool"}, {"name": "param_4", "type": "char * *", "pred_name": "param_4", "ref_name": "count", "ref_type": "int64_t"}, {"name": "param_5", "type": "void * *", "pred_name": "param_5", "ref_name": "err", "ref_type": "Error * * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_68", "type": "__unk__", "pred_name": "local_68", "ref_name": "count-local", "ref_type": "int64_t"}, {"name": "local_38", "type": "__unk__", "pred_name": "local_38", "ref_name": "buf_len", "ref_type": "gsize"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "write_data", "ref_type": "GuestFileWrite * *"}, {"name": "local_28", "type": "disappear", "pred_name": "", "ref_name": "gfh", "ref_type": "GuestFileHandle * *"}, {"name": "local_20", "type": "disappear", "pred_name": "", "ref_name": "fh", "ref_type": "FILE * *"}, {"name": "local_18", "type": "disappear", "pred_name": "", "ref_name": "buf", "ref_type": "guchar * *"}, {"name": "local_10", "type": "disappear", "pred_name": "", "ref_name": "local_10", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "wufixx", "repo_name": "android_kernel_xiaomi_msm8953_vince", "path": "wufixx/android_kernel_xiaomi_msm8953_vince/e20e40c14979637892394d8d220a1ffb64a1912d5eb640ba7ecb67aef438b696", "path_in_repo": "wufixx/android_kernel_xiaomi_msm8953_vince/tools/lib/traceevent/libtraceevent.so", "objdump": "0000000000014de4 <pevent_filter_copy>:\n   14de4:\t55                   \tpush   %rbp\n   14de5:\t48 89 e5             \tmov    %rsp,%rbp\n   14de8:\t48 83 ec 20          \tsub    $0x20,%rsp\n   14dec:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   14df0:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n   14df4:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n   14dfb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14dff:\t48 89 c7             \tmov    %rax,%rdi\n   14e02:\te8 b9 f6 fe ff       \tcall   44c0 <pevent_filter_reset@plt>\n   14e07:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n   14e0e:\teb 41                \tjmp    14e51 <pevent_filter_copy+0x6d>\n   14e10:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   14e14:\t48 8b 48 10          \tmov    0x10(%rax),%rcx\n   14e18:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n   14e1b:\t48 63 d0             \tmovslq %eax,%rdx\n   14e1e:\t48 89 d0             \tmov    %rdx,%rax\n   14e21:\t48 01 c0             \tadd    %rax,%rax\n   14e24:\t48 01 d0             \tadd    %rdx,%rax\n   14e27:\t48 c1 e0 03          \tshl    $0x3,%rax\n   14e2b:\t48 8d 14 01          \tlea    (%rcx,%rax,1),%rdx\n   14e2f:\t48 8b 4d e0          \tmov    -0x20(%rbp),%rcx\n   14e33:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14e37:\t48 89 ce             \tmov    %rcx,%rsi\n   14e3a:\t48 89 c7             \tmov    %rax,%rdi\n   14e3d:\te8 1c fe ff ff       \tcall   14c5e <copy_filter_type>\n   14e42:\t85 c0                \ttest   %eax,%eax\n   14e44:\t74 07                \tje     14e4d <pevent_filter_copy+0x69>\n   14e46:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n   14e4d:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n   14e51:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   14e55:\t8b 40 08             \tmov    0x8(%rax),%eax\n   14e58:\t39 45 f8             \tcmp    %eax,-0x8(%rbp)\n   14e5b:\t7c b3                \tjl     14e10 <pevent_filter_copy+0x2c>\n   14e5d:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n   14e60:\tc9                   \tleave  \n   14e61:\tc3                   \tret    ", "code_s": "undefined4 pevent_filter_copy(undefined8 <span class=\"supfact\">param_1</span>,\n                              long <span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  int <span class=\"supfact\">local_10</span>;\n  undefined4 <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_c</span> = Number;\n  pevent_filter_reset(<span class=\"supfact\">param_1</span>);\n  for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> & lt;\n       *(int *)(<span class=\"supfact\">param_2</span> + Number);\n       <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n    <span class=\"supfact\">iVar1</span> =\n        FUN_00114c5e(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n                     *(long *)(<span class=\"supfact\">param_2</span> + Number) +\n                         (long)<span class=\"supfact\">local_10</span> * Number);\n    if (<span class=\"supfact\">iVar1</span> != Number) {\n      <span class=\"supfact\">local_c</span> = Number;\n    }\n  }\n  return <span class=\"supfact\">local_c</span>;\n}", "code_t": "int pevent_filter_copy(event_filter *<span class=\"supfact\">dest</span>,\n                       event_filter *<span class=\"supfact\">source</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  event_filter *<span class=\"supfact\">source</span> - local;\n  event_filter *<span class=\"supfact\">dest</span> - local;\n  int <span class=\"supfact\">i</span>;\n  int <span class=\"supfact\">ret</span>;\n  <span class=\"supfact\">ret</span> = Number;\n  pevent_filter_reset(<span class=\"supfact\">dest</span>);\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n       <span class=\"supfact\">source</span> - &gt; filters;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    <span class=\"supfact\">iVar1</span> =\n        copy_filter_type(<span class=\"supfact\">dest</span>, <span class=\"supfact\">source</span>,\n                         <span class=\"supfact\">source</span> - &gt;\n                         event_filters + <span class=\"supfact\">i</span>);\n    if (<span class=\"supfact\">iVar1</span> != Number) {\n      <span class=\"supfact\">ret</span> = -Number;\n    }\n  }\n  return <span class=\"supfact\">ret</span>;\n}", "var": [{"name": "param_1", "type": "event_filter * *", "pred_name": "dest", "ref_name": "dest", "ref_type": "event_filter * *"}, {"name": "param_2", "type": "event_filter * *", "pred_name": "source", "ref_name": "source", "ref_type": "event_filter * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "ret", "ref_name": "ret", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "ajamous", "repo_name": "DOTS", "path": "ajamous/DOTS/28c9e348f3a3b11bc4f8699bd26ee99298379f2886174405e6aa1da54ee51932", "path_in_repo": "ajamous/DOTS/SIP_Clients_pjsip-2.7.1/pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/clidemo", "objdump": "00000000004191a3 <speex_bits_remaining>:\n  4191a3:\t55                   \tpush   %rbp\n  4191a4:\t48 89 e5             \tmov    %rsp,%rbp\n  4191a7:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  4191ab:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4191af:\t8b 40 18             \tmov    0x18(%rax),%eax\n  4191b2:\t85 c0                \ttest   %eax,%eax\n  4191b4:\t74 07                \tje     4191bd <speex_bits_remaining+0x1a>\n  4191b6:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n  4191bb:\teb 22                \tjmp    4191df <speex_bits_remaining+0x3c>\n  4191bd:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4191c1:\t8b 50 08             \tmov    0x8(%rax),%edx\n  4191c4:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4191c8:\t8b 40 0c             \tmov    0xc(%rax),%eax\n  4191cb:\t8d 0c c5 00 00 00 00 \tlea    0x0(,%rax,8),%ecx\n  4191d2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4191d6:\t8b 40 10             \tmov    0x10(%rax),%eax\n  4191d9:\t01 c8                \tadd    %ecx,%eax\n  4191db:\t29 c2                \tsub    %eax,%edx\n  4191dd:\t89 d0                \tmov    %edx,%eax\n  4191df:\t5d                   \tpop    %rbp\n  4191e0:\tc3                   \tret    ", "code_s": "int speex_bits_remaining(long <span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n    <span class=\"supfact\">iVar1</span> =\n        *(int *)(<span class=\"supfact\">param_1</span> + Number) -\n        (*(int *)(<span class=\"supfact\">param_1</span> + Number) +\n         *(int *)(<span class=\"supfact\">param_1</span> + Number) * Number);\n  } else {\n    <span class=\"supfact\">iVar1</span> = -Number;\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int speex_bits_remaining(SpeexBits *<span class=\"supfact\">bits</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  SpeexBits *<span class=\"supfact\">bits</span> - local;\n  if (<span class=\"supfact\">bits</span> - &gt; overflow == Number) {\n    <span class=\"supfact\">iVar1</span> = <span class=\"supfact\">bits</span> - &gt;\n    nbBits - (<span class=\"supfact\">bits</span> - &gt; bitPtr + <span class=\"supfact\">bits</span> - &gt;\n              charPtr * Number);\n  } else {\n    <span class=\"supfact\">iVar1</span> = -Number;\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "param_1", "type": "SpeexBits * *", "pred_name": "bits", "ref_name": "bits", "ref_type": "SpeexBits * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "ajamous", "repo_name": "DOTS", "path": "ajamous/DOTS/28c9e348f3a3b11bc4f8699bd26ee99298379f2886174405e6aa1da54ee51932", "path_in_repo": "ajamous/DOTS/SIP_Clients_pjsip-2.7.1/pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/clidemo", "objdump": "00000000004191a3 <speex_bits_remaining>:\n  4191a3:\t55                   \tpush   %rbp\n  4191a4:\t48 89 e5             \tmov    %rsp,%rbp\n  4191a7:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  4191ab:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4191af:\t8b 40 18             \tmov    0x18(%rax),%eax\n  4191b2:\t85 c0                \ttest   %eax,%eax\n  4191b4:\t74 07                \tje     4191bd <speex_bits_remaining+0x1a>\n  4191b6:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n  4191bb:\teb 22                \tjmp    4191df <speex_bits_remaining+0x3c>\n  4191bd:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4191c1:\t8b 50 08             \tmov    0x8(%rax),%edx\n  4191c4:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4191c8:\t8b 40 0c             \tmov    0xc(%rax),%eax\n  4191cb:\t8d 0c c5 00 00 00 00 \tlea    0x0(,%rax,8),%ecx\n  4191d2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4191d6:\t8b 40 10             \tmov    0x10(%rax),%eax\n  4191d9:\t01 c8                \tadd    %ecx,%eax\n  4191db:\t29 c2                \tsub    %eax,%edx\n  4191dd:\t89 d0                \tmov    %edx,%eax\n  4191df:\t5d                   \tpop    %rbp\n  4191e0:\tc3                   \tret    ", "code_s": "int speex_bits_remaining(long <span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n    <span class=\"supfact\">iVar1</span> =\n        *(int *)(<span class=\"supfact\">param_1</span> + Number) -\n        (*(int *)(<span class=\"supfact\">param_1</span> + Number) +\n         *(int *)(<span class=\"supfact\">param_1</span> + Number) * Number);\n  } else {\n    <span class=\"supfact\">iVar1</span> = -Number;\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int speex_bits_remaining(SpeexBits *<span class=\"supfact\">bits</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  SpeexBits *<span class=\"supfact\">bits</span> - local;\n  if (<span class=\"supfact\">bits</span> - &gt; overflow == Number) {\n    <span class=\"supfact\">iVar1</span> = <span class=\"supfact\">bits</span> - &gt;\n    nbBits - (<span class=\"supfact\">bits</span> - &gt; bitPtr + <span class=\"supfact\">bits</span> - &gt;\n              charPtr * Number);\n  } else {\n    <span class=\"supfact\">iVar1</span> = -Number;\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "param_1", "type": "SpeexBits * *", "pred_name": "bits", "ref_name": "bits", "ref_type": "SpeexBits * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "TheTypoMaster", "repo_name": "open1", "path": "TheTypoMaster/open1/c9a04eae5e42d9841c57eaaa6d9ff38b1c3b8d4c913935a3edbe734de7ee407f", "path_in_repo": "TheTypoMaster/open1/modules/db_virtual/db_virtual.so", "objdump": "000000000000632b <get_update_flags>:\n    632b:\t55                   \tpush   %rbp\n    632c:\t48 89 e5             \tmov    %rsp,%rbp\n    632f:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    6333:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    633a:\te9 c1 00 00 00       \tjmp    6400 <get_update_flags+0xd5>\n    633f:\t48 8b 05 f2 ab 00 00 \tmov    0xabf2(%rip),%rax        # 10f38 <global@@Base-0x530>\n    6346:\t48 8b 00             \tmov    (%rax),%rax\n    6349:\t48 8b 08             \tmov    (%rax),%rcx\n    634c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    6350:\t8b 00                \tmov    (%rax),%eax\n    6352:\t48 63 d0             \tmovslq %eax,%rdx\n    6355:\t48 89 d0             \tmov    %rdx,%rax\n    6358:\t48 c1 e0 02          \tshl    $0x2,%rax\n    635c:\t48 01 d0             \tadd    %rdx,%rax\n    635f:\t48 c1 e0 03          \tshl    $0x3,%rax\n    6363:\t48 01 c8             \tadd    %rcx,%rax\n    6366:\t48 8b 48 18          \tmov    0x18(%rax),%rcx\n    636a:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    636d:\t48 63 d0             \tmovslq %eax,%rdx\n    6370:\t48 89 d0             \tmov    %rdx,%rax\n    6373:\t48 c1 e0 03          \tshl    $0x3,%rax\n    6377:\t48 01 d0             \tadd    %rdx,%rax\n    637a:\t48 01 c0             \tadd    %rax,%rax\n    637d:\t48 01 d0             \tadd    %rdx,%rax\n    6380:\t48 c1 e0 03          \tshl    $0x3,%rax\n    6384:\t48 01 c8             \tadd    %rcx,%rax\n    6387:\t8b 80 90 00 00 00    \tmov    0x90(%rax),%eax\n    638d:\t83 e0 02             \tand    $0x2,%eax\n    6390:\t85 c0                \ttest   %eax,%eax\n    6392:\t74 35                \tje     63c9 <get_update_flags+0x9e>\n    6394:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    6398:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    639c:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    639f:\t48 63 d2             \tmovslq %edx,%rdx\n    63a2:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    63a6:\t48 01 d0             \tadd    %rdx,%rax\n    63a9:\t8b 50 08             \tmov    0x8(%rax),%edx\n    63ac:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    63b0:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    63b4:\t8b 4d fc             \tmov    -0x4(%rbp),%ecx\n    63b7:\t48 63 c9             \tmovslq %ecx,%rcx\n    63ba:\t48 c1 e1 04          \tshl    $0x4,%rcx\n    63be:\t48 01 c8             \tadd    %rcx,%rax\n    63c1:\t83 ca 02             \tor     $0x2,%edx\n    63c4:\t89 50 08             \tmov    %edx,0x8(%rax)\n    63c7:\teb 33                \tjmp    63fc <get_update_flags+0xd1>\n    63c9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    63cd:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    63d1:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    63d4:\t48 63 d2             \tmovslq %edx,%rdx\n    63d7:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    63db:\t48 01 d0             \tadd    %rdx,%rax\n    63de:\t8b 50 08             \tmov    0x8(%rax),%edx\n    63e1:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    63e5:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    63e9:\t8b 4d fc             \tmov    -0x4(%rbp),%ecx\n    63ec:\t48 63 c9             \tmovslq %ecx,%rcx\n    63ef:\t48 c1 e1 04          \tshl    $0x4,%rcx\n    63f3:\t48 01 c8             \tadd    %rcx,%rax\n    63f6:\t83 e2 fd             \tand    $0xfffffffd,%edx\n    63f9:\t89 50 08             \tmov    %edx,0x8(%rax)\n    63fc:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    6400:\t48 8b 05 31 ab 00 00 \tmov    0xab31(%rip),%rax        # 10f38 <global@@Base-0x530>\n    6407:\t48 8b 00             \tmov    (%rax),%rax\n    640a:\t48 8b 08             \tmov    (%rax),%rcx\n    640d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    6411:\t8b 00                \tmov    (%rax),%eax\n    6413:\t48 63 d0             \tmovslq %eax,%rdx\n    6416:\t48 89 d0             \tmov    %rdx,%rax\n    6419:\t48 c1 e0 02          \tshl    $0x2,%rax\n    641d:\t48 01 d0             \tadd    %rdx,%rax\n    6420:\t48 c1 e0 03          \tshl    $0x3,%rax\n    6424:\t48 01 c8             \tadd    %rcx,%rax\n    6427:\t8b 40 20             \tmov    0x20(%rax),%eax\n    642a:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n    642d:\t0f 8c 0c ff ff ff    \tjl     633f <get_update_flags+0x14>\n    6433:\t90                   \tnop\n    6434:\t90                   \tnop\n    6435:\t5d                   \tpop    %rbp\n    6436:\tc3                   \tret    ", "code_s": "void get_update_flags(int *<span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">local_c</span>;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n       *(int *)((long)*<span class=\"supfact\">param_1</span> * Number +\n                **(long **)PTR_global_00110f38 + Number);\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    if ((*(uint *)((long)<span class=\"supfact\">local_c</span> * Number +\n                   *(long *)((long)*<span class=\"supfact\">param_1</span> * Number +\n                             **(long **)PTR_global_00110f38 + Number) +\n                   Number) &\n             amp;\n         Number) == Number) {\n      *(uint *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                (long)<span class=\"supfact\">local_c</span> * Number + Number) =\n          *(uint *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                    (long)<span class=\"supfact\">local_c</span> * Number + Number) &\n          amp;\n      Number;\n    } else {\n      *(uint *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                (long)<span class=\"supfact\">local_c</span> * Number + Number) =\n          *(uint *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                    (long)<span class=\"supfact\">local_c</span> * Number + Number) |\n          Number;\n    }\n  }\n  return;\n}", "code_t": "void get_update_flags(handle_set_t *<span class=\"supfact\">private_handles</span>) {\n  handle_set_t *<span class=\"supfact\">private_handles</span> - local;\n  int <span class=\"supfact\">i</span>;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n       *(int *)((long)<span class=\"supfact\">private_handles</span> - &gt;\n                set_index * Number + **(long **)PTR_global_00110f38 + Number);\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    if ((*(uint *)((long)<span class=\"supfact\">i</span> * Number +\n                   *(long *)((long)<span class=\"supfact\">private_handles</span> - &gt;\n                             set_index * Number +\n                             **(long **)PTR_global_00110f38 + Number) +\n                   Number) &\n             amp;\n         Number) == Number) {\n      <span class=\"supfact\">private_handles</span> - &gt;\n      con_list[<span class=\"supfact\">i</span>].flags = <span class=\"supfact\">private_handles</span> - &gt;\n      con_list[<span class=\"supfact\">i</span>].flags &amp;\n      Number;\n    } else {\n      <span class=\"supfact\">private_handles</span> - &gt;\n      con_list[<span class=\"supfact\">i</span>].flags = <span class=\"supfact\">private_handles</span> - &gt;\n      con_list[<span class=\"supfact\">i</span>].flags | Number;\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "sip_msg * *", "pred_name": "_m", "ref_name": "private_handles", "ref_type": "handle_set_t * *"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "TheTypoMaster", "repo_name": "open1", "path": "TheTypoMaster/open1/c9a04eae5e42d9841c57eaaa6d9ff38b1c3b8d4c913935a3edbe734de7ee407f", "path_in_repo": "TheTypoMaster/open1/modules/db_virtual/db_virtual.so", "objdump": "000000000000632b <get_update_flags>:\n    632b:\t55                   \tpush   %rbp\n    632c:\t48 89 e5             \tmov    %rsp,%rbp\n    632f:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    6333:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    633a:\te9 c1 00 00 00       \tjmp    6400 <get_update_flags+0xd5>\n    633f:\t48 8b 05 f2 ab 00 00 \tmov    0xabf2(%rip),%rax        # 10f38 <global@@Base-0x530>\n    6346:\t48 8b 00             \tmov    (%rax),%rax\n    6349:\t48 8b 08             \tmov    (%rax),%rcx\n    634c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    6350:\t8b 00                \tmov    (%rax),%eax\n    6352:\t48 63 d0             \tmovslq %eax,%rdx\n    6355:\t48 89 d0             \tmov    %rdx,%rax\n    6358:\t48 c1 e0 02          \tshl    $0x2,%rax\n    635c:\t48 01 d0             \tadd    %rdx,%rax\n    635f:\t48 c1 e0 03          \tshl    $0x3,%rax\n    6363:\t48 01 c8             \tadd    %rcx,%rax\n    6366:\t48 8b 48 18          \tmov    0x18(%rax),%rcx\n    636a:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    636d:\t48 63 d0             \tmovslq %eax,%rdx\n    6370:\t48 89 d0             \tmov    %rdx,%rax\n    6373:\t48 c1 e0 03          \tshl    $0x3,%rax\n    6377:\t48 01 d0             \tadd    %rdx,%rax\n    637a:\t48 01 c0             \tadd    %rax,%rax\n    637d:\t48 01 d0             \tadd    %rdx,%rax\n    6380:\t48 c1 e0 03          \tshl    $0x3,%rax\n    6384:\t48 01 c8             \tadd    %rcx,%rax\n    6387:\t8b 80 90 00 00 00    \tmov    0x90(%rax),%eax\n    638d:\t83 e0 02             \tand    $0x2,%eax\n    6390:\t85 c0                \ttest   %eax,%eax\n    6392:\t74 35                \tje     63c9 <get_update_flags+0x9e>\n    6394:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    6398:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    639c:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    639f:\t48 63 d2             \tmovslq %edx,%rdx\n    63a2:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    63a6:\t48 01 d0             \tadd    %rdx,%rax\n    63a9:\t8b 50 08             \tmov    0x8(%rax),%edx\n    63ac:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    63b0:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    63b4:\t8b 4d fc             \tmov    -0x4(%rbp),%ecx\n    63b7:\t48 63 c9             \tmovslq %ecx,%rcx\n    63ba:\t48 c1 e1 04          \tshl    $0x4,%rcx\n    63be:\t48 01 c8             \tadd    %rcx,%rax\n    63c1:\t83 ca 02             \tor     $0x2,%edx\n    63c4:\t89 50 08             \tmov    %edx,0x8(%rax)\n    63c7:\teb 33                \tjmp    63fc <get_update_flags+0xd1>\n    63c9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    63cd:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    63d1:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    63d4:\t48 63 d2             \tmovslq %edx,%rdx\n    63d7:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    63db:\t48 01 d0             \tadd    %rdx,%rax\n    63de:\t8b 50 08             \tmov    0x8(%rax),%edx\n    63e1:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    63e5:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    63e9:\t8b 4d fc             \tmov    -0x4(%rbp),%ecx\n    63ec:\t48 63 c9             \tmovslq %ecx,%rcx\n    63ef:\t48 c1 e1 04          \tshl    $0x4,%rcx\n    63f3:\t48 01 c8             \tadd    %rcx,%rax\n    63f6:\t83 e2 fd             \tand    $0xfffffffd,%edx\n    63f9:\t89 50 08             \tmov    %edx,0x8(%rax)\n    63fc:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    6400:\t48 8b 05 31 ab 00 00 \tmov    0xab31(%rip),%rax        # 10f38 <global@@Base-0x530>\n    6407:\t48 8b 00             \tmov    (%rax),%rax\n    640a:\t48 8b 08             \tmov    (%rax),%rcx\n    640d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    6411:\t8b 00                \tmov    (%rax),%eax\n    6413:\t48 63 d0             \tmovslq %eax,%rdx\n    6416:\t48 89 d0             \tmov    %rdx,%rax\n    6419:\t48 c1 e0 02          \tshl    $0x2,%rax\n    641d:\t48 01 d0             \tadd    %rdx,%rax\n    6420:\t48 c1 e0 03          \tshl    $0x3,%rax\n    6424:\t48 01 c8             \tadd    %rcx,%rax\n    6427:\t8b 40 20             \tmov    0x20(%rax),%eax\n    642a:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n    642d:\t0f 8c 0c ff ff ff    \tjl     633f <get_update_flags+0x14>\n    6433:\t90                   \tnop\n    6434:\t90                   \tnop\n    6435:\t5d                   \tpop    %rbp\n    6436:\tc3                   \tret    ", "code_s": "void get_update_flags(int *<span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">local_c</span>;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n       *(int *)((long)*<span class=\"supfact\">param_1</span> * Number +\n                **(long **)PTR_global_00110f38 + Number);\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    if ((*(uint *)((long)<span class=\"supfact\">local_c</span> * Number +\n                   *(long *)((long)*<span class=\"supfact\">param_1</span> * Number +\n                             **(long **)PTR_global_00110f38 + Number) +\n                   Number) &\n             amp;\n         Number) == Number) {\n      *(uint *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                (long)<span class=\"supfact\">local_c</span> * Number + Number) =\n          *(uint *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                    (long)<span class=\"supfact\">local_c</span> * Number + Number) &\n          amp;\n      Number;\n    } else {\n      *(uint *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                (long)<span class=\"supfact\">local_c</span> * Number + Number) =\n          *(uint *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                    (long)<span class=\"supfact\">local_c</span> * Number + Number) |\n          Number;\n    }\n  }\n  return;\n}", "code_t": "void get_update_flags(handle_set_t *<span class=\"supfact\">private_handles</span>) {\n  handle_set_t *<span class=\"supfact\">private_handles</span> - local;\n  int <span class=\"supfact\">i</span>;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n       *(int *)((long)<span class=\"supfact\">private_handles</span> - &gt;\n                set_index * Number + **(long **)PTR_global_00110f38 + Number);\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    if ((*(uint *)((long)<span class=\"supfact\">i</span> * Number +\n                   *(long *)((long)<span class=\"supfact\">private_handles</span> - &gt;\n                             set_index * Number +\n                             **(long **)PTR_global_00110f38 + Number) +\n                   Number) &\n             amp;\n         Number) == Number) {\n      <span class=\"supfact\">private_handles</span> - &gt;\n      con_list[<span class=\"supfact\">i</span>].flags = <span class=\"supfact\">private_handles</span> - &gt;\n      con_list[<span class=\"supfact\">i</span>].flags &amp;\n      Number;\n    } else {\n      <span class=\"supfact\">private_handles</span> - &gt;\n      con_list[<span class=\"supfact\">i</span>].flags = <span class=\"supfact\">private_handles</span> - &gt;\n      con_list[<span class=\"supfact\">i</span>].flags | Number;\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "sip_msg * *", "pred_name": "_m", "ref_name": "private_handles", "ref_type": "handle_set_t * *"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "wangke-chen", "repo_name": "Malloc-Function", "path": "wangke-chen/Malloc-Function/3bf34aa63d8c2804a2e0ca89019b8c79942d6e1942f8f5935ccf3cdb940ddd5b", "path_in_repo": "wangke-chen/Malloc-Function/my_malloc_1/libmymalloc.so", "objdump": "00000000000011f4 <first_fit>:\n    11f4:\t55                   \tpush   %rbp\n    11f5:\t48 89 e5             \tmov    %rsp,%rbp\n    11f8:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    11fc:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n    1200:\teb 0c                \tjmp    120e <first_fit+0x1a>\n    1202:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1206:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    120a:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    120e:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1212:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    1216:\t48 85 c0             \ttest   %rax,%rax\n    1219:\t74 20                \tje     123b <first_fit+0x47>\n    121b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    121f:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    1223:\t48 8b 00             \tmov    (%rax),%rax\n    1226:\t48 39 45 f0          \tcmp    %rax,-0x10(%rbp)\n    122a:\t77 d6                \tja     1202 <first_fit+0xe>\n    122c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1230:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    1234:\t8b 40 18             \tmov    0x18(%rax),%eax\n    1237:\t85 c0                \ttest   %eax,%eax\n    1239:\t74 c7                \tje     1202 <first_fit+0xe>\n    123b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    123f:\t5d                   \tpop    %rbp\n    1240:\tc3                   \tret    ", "code_s": "long first_fit(long <span class=\"supfact\">param_1</span>, ulong <span class=\"supfact\">param_2</span>) {\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = <span class=\"supfact\">param_1</span>;\n  while ((*(long *)(<span class=\"supfact\">local_10</span> + Number) != Number & amp; &amp;\n          ((**(ulong **)(<span class=\"supfact\">local_10</span> + Number) & lt;\n            <span class=\"supfact\">param_2</span> ||\n            (*(int *)(*(long *)(<span class=\"supfact\">local_10</span> + Number) + Number) ==\n             Number))))) {\n    <span class=\"supfact\">local_10</span> = *(long *)(<span class=\"supfact\">local_10</span> + Number);\n  }\n  return <span class=\"supfact\">local_10</span>;\n}", "code_t": "m_block *first_fit(m_block *<span class=\"supfact\">curr</span>, size_t <span class=\"supfact\">size</span>) {\n  size_t <span class=\"supfact\">size</span> - local;\n  m_block *<span class=\"supfact\">curr</span> - local;\n  <span class=\"supfact\">curr</span> - local = <span class=\"supfact\">curr</span>;\n  while ((<span class=\"supfact\">curr</span> - local - &gt;\n          next != (m_block_tag *)Number & amp; &amp;\n          ((<span class=\"supfact\">curr</span> - local - &gt; next - &gt;\n            <span class=\"supfact\">size</span> & lt;\n            <span class=\"supfact\">size</span> || (<span class=\"supfact\">curr</span> - local - &gt;\n                                     next - &gt; free == Number))))) {\n    <span class=\"supfact\">curr</span> - local = <span class=\"supfact\">curr</span> - local - &gt;\n    next;\n  }\n  return <span class=\"supfact\">curr</span> - local;\n}", "var": [{"name": "param_1", "type": "postl_program_t * *", "pred_name": "prog", "ref_name": "curr", "ref_type": "m_block * *"}, {"name": "param_2", "type": "char * *", "pred_name": "name", "ref_name": "size", "ref_type": "size_t"}, {"name": "local_10", "type": "__unk__", "pred_name": "__unk__", "ref_name": "curr-local", "ref_type": "m_block * *"}], "body_in_train": false}, {"repo_owner": "avsm", "repo_name": "xen-unstable", "path": "avsm/xen-unstable/01deb0475b54aee115393c11b1594795b291d80c4f98f916586cb831818aed10", "path_in_repo": "avsm/xen-unstable/tools/libfsimage/ext2fs-lib/fsimage.so", "objdump": "00000000000014bf <ext2lib_pread>:\n    14bf:\t55                   \tpush   %rbp\n    14c0:\t48 89 e5             \tmov    %rsp,%rbp\n    14c3:\t48 83 ec 40          \tsub    $0x40,%rsp\n    14c7:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    14cb:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n    14cf:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n    14d3:\t48 89 4d c0          \tmov    %rcx,-0x40(%rbp)\n    14d7:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    14db:\t48 89 c7             \tmov    %rax,%rdi\n    14de:\te8 dd fb ff ff       \tcall   10c0 <fsip_file_data@plt>\n    14e3:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    14e7:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    14eb:\t48 8b 00             \tmov    (%rax),%rax\n    14ee:\t48 8d 55 e8          \tlea    -0x18(%rbp),%rdx\n    14f2:\t48 89 d1             \tmov    %rdx,%rcx\n    14f5:\tba 01 00 00 00       \tmov    $0x1,%edx\n    14fa:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    14ff:\t48 89 c7             \tmov    %rax,%rdi\n    1502:\te8 09 fc ff ff       \tcall   1110 <ext2fs_file_llseek@plt>\n    1507:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    150a:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    150e:\t74 17                \tje     1527 <ext2lib_pread+0x68>\n    1510:\te8 3b fb ff ff       \tcall   1050 <__errno_location@plt>\n    1515:\tc7 00 16 00 00 00    \tmovl   $0x16,(%rax)\n    151b:\t48 c7 c0 ff ff ff ff \tmov    $0xffffffffffffffff,%rax\n    1522:\te9 9b 00 00 00       \tjmp    15c2 <ext2lib_pread+0x103>\n    1527:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    152b:\t48 8b 00             \tmov    (%rax),%rax\n    152e:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n    1532:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    1537:\tba 00 00 00 00       \tmov    $0x0,%edx\n    153c:\t48 89 c7             \tmov    %rax,%rdi\n    153f:\te8 cc fb ff ff       \tcall   1110 <ext2fs_file_llseek@plt>\n    1544:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    1547:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    154b:\t74 14                \tje     1561 <ext2lib_pread+0xa2>\n    154d:\te8 fe fa ff ff       \tcall   1050 <__errno_location@plt>\n    1552:\tc7 00 16 00 00 00    \tmovl   $0x16,(%rax)\n    1558:\t48 c7 c0 ff ff ff ff \tmov    $0xffffffffffffffff,%rax\n    155f:\teb 61                \tjmp    15c2 <ext2lib_pread+0x103>\n    1561:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1565:\t89 c7                \tmov    %eax,%edi\n    1567:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    156b:\t48 8b 00             \tmov    (%rax),%rax\n    156e:\t48 8d 55 e4          \tlea    -0x1c(%rbp),%rdx\n    1572:\t48 8b 75 d0          \tmov    -0x30(%rbp),%rsi\n    1576:\t48 89 d1             \tmov    %rdx,%rcx\n    1579:\t89 fa                \tmov    %edi,%edx\n    157b:\t48 89 c7             \tmov    %rax,%rdi\n    157e:\te8 bd fa ff ff       \tcall   1040 <ext2fs_file_read@plt>\n    1583:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    1586:\t48 8b 75 e8          \tmov    -0x18(%rbp),%rsi\n    158a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    158e:\t48 8b 00             \tmov    (%rax),%rax\n    1591:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    1596:\tba 00 00 00 00       \tmov    $0x0,%edx\n    159b:\t48 89 c7             \tmov    %rax,%rdi\n    159e:\te8 6d fb ff ff       \tcall   1110 <ext2fs_file_llseek@plt>\n    15a3:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    15a7:\t74 14                \tje     15bd <ext2lib_pread+0xfe>\n    15a9:\te8 a2 fa ff ff       \tcall   1050 <__errno_location@plt>\n    15ae:\tc7 00 16 00 00 00    \tmovl   $0x16,(%rax)\n    15b4:\t48 c7 c0 ff ff ff ff \tmov    $0xffffffffffffffff,%rax\n    15bb:\teb 05                \tjmp    15c2 <ext2lib_pread+0x103>\n    15bd:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n    15c0:\t89 c0                \tmov    %eax,%eax\n    15c2:\tc9                   \tleave  \n    15c3:\tc3                   \tret    ", "code_s": "ulong ext2lib_pread(undefined8 <span class=\"supfact\">param_1</span>,\n                    undefined8 <span class=\"supfact\">param_2</span>,\n                    undefined4 <span class=\"supfact\">param_3</span>,\n                    undefined8 <span class=\"supfact\">param_4</span>) {\n  int *piVar1;\n  ulong uVar2;\n  uint <span class=\"supfact\">local_24</span>;\n  undefined8 <span class=\"supfact\">local_20</span>;\n  int <span class=\"supfact\">local_14</span>;\n  undefined8 *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> =\n      (undefined8 *)fsip_file_data(<span class=\"supfact\">param_1</span>);\n  <span class=\"supfact\">local_14</span> =\n      ext2fs_file_llseek(*<span class=\"supfact\">local_10</span>, Number, Number, &amp;\n                         <span class=\"supfact\">local_20</span>);\n  if (<span class=\"supfact\">local_14</span> == Number) {\n    <span class=\"supfact\">local_14</span> = ext2fs_file_llseek(\n        *<span class=\"supfact\">local_10</span>, <span class=\"supfact\">param_4</span>, Number, Number);\n    if (<span class=\"supfact\">local_14</span> == Number) {\n      <span class=\"supfact\">local_14</span> =\n          ext2fs_file_read(*<span class=\"supfact\">local_10</span>, <span class=\"supfact\">param_2</span>,\n                           <span class=\"supfact\">param_3</span>, &amp;\n                           <span class=\"supfact\">local_24</span>);\n      ext2fs_file_llseek(*<span class=\"supfact\">local_10</span>, <span class=\"supfact\">local_20</span>,\n                         Number, Number);\n      if (<span class=\"supfact\">local_14</span> == Number) {\n        uVar2 = (ulong)<span class=\"supfact\">local_24</span>;\n      } else {\n        piVar1 = __errno_location();\n        *piVar1 = Number;\n        uVar2 = Number;\n      }\n    } else {\n      piVar1 = __errno_location();\n      *piVar1 = Number;\n      uVar2 = Number;\n    }\n  } else {\n    piVar1 = __errno_location();\n    *piVar1 = Number;\n    uVar2 = Number;\n  }\n  return uVar2;\n}", "code_t": "ssize_t ext2lib_pread(fsi_file_t *<span class=\"supfact\">file</span>,\n                      void *<span class=\"supfact\">buf</span>, size_t nbytes,\n                      uint64_t <span class=\"supfact\">off</span>) {\n  int *piVar1;\n  ulong uVar2;\n  uint64_t <span class=\"supfact\">off</span> - local;\n  size_t nbytes - local;\n  void *<span class=\"supfact\">buf</span> - local;\n  fsi_file_t *<span class=\"supfact\">file</span> - local;\n  uint <span class=\"supfact\">n</span>;\n  __u64 <span class=\"supfact\">tmpoff</span>;\n  int <span class=\"supfact\">err</span>;\n  ext2_file_t *<span class=\"supfact\">f</span>;\n  <span class=\"supfact\">f</span> = (ext2_file_t *)fsip_file_data(<span class=\"supfact\">file</span>);\n  <span class=\"supfact\">err</span> = ext2fs_file_llseek(\n      *<span class=\"supfact\">f</span>, Number, Number, &amp; <span class=\"supfact\">tmpoff</span>);\n  if (<span class=\"supfact\">err</span> == Number) {\n    <span class=\"supfact\">err</span> = ext2fs_file_llseek(\n        *<span class=\"supfact\">f</span>, <span class=\"supfact\">off</span>, Number, Number);\n    if (<span class=\"supfact\">err</span> == Number) {\n      <span class=\"supfact\">err</span> = ext2fs_file_read(*<span class=\"supfact\">f</span>,\n                                             <span class=\"supfact\">buf</span>, nbytes & amp;\n                                             Number, &amp; <span class=\"supfact\">n</span>);\n      ext2fs_file_llseek(*<span class=\"supfact\">f</span>, <span class=\"supfact\">tmpoff</span>, Number,\n                         Number);\n      if (<span class=\"supfact\">err</span> == Number) {\n        uVar2 = (ulong)<span class=\"supfact\">n</span>;\n      } else {\n        piVar1 = __errno_location();\n        *piVar1 = Number;\n        uVar2 = Number;\n      }\n    } else {\n      piVar1 = __errno_location();\n      *piVar1 = Number;\n      uVar2 = Number;\n    }\n  } else {\n    piVar1 = __errno_location();\n    *piVar1 = Number;\n    uVar2 = Number;\n  }\n  return uVar2;\n}", "var": [{"name": "param_1", "type": "SM_PIPE_HANDLE", "pred_name": "h_pipe", "ref_name": "file", "ref_type": "fsi_file_t * *"}, {"name": "param_2", "type": "char * *", "pred_name": "data", "ref_name": "buf", "ref_type": "void * *"}, {"name": "param_3", "type": "int", "pred_name": "data_len", "ref_name": "", "ref_type": "disappear"}, {"name": "param_4", "type": "char * *", "pred_name": "out", "ref_name": "off", "ref_type": "uint64_t"}, {"name": "local_24", "type": "int", "pred_name": "__unk__", "ref_name": "n", "ref_type": "uint"}, {"name": "local_20", "type": "SM_KEY_HANDLE", "pred_name": "h_auth_key", "ref_name": "tmpoff", "ref_type": "__u64"}, {"name": "local_14", "type": "int", "pred_name": "out_len", "ref_name": "err", "ref_type": "int"}, {"name": "local_10", "type": "__unk__", "pred_name": "__unk__", "ref_name": "f", "ref_type": "ext2_file_t * *"}], "body_in_train": false}]