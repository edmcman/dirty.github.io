[{"repo_owner": "QuakeII", "repo_name": "Quake2", "path": "QuakeII/Quake2/63724c95ebe1eb63465c62ea259243120f51bafd1b9405350dd9d4283315976b", "path_in_repo": "QuakeII/Quake2/quake2-3.21/linux/debugi386/game/g_cmds.o", "objdump": "0000000000000a80 <Cmd_God_f>:\n     a80:\t55                   \tpush   %rbp\n     a81:\t48 89 e5             \tmov    %rsp,%rbp\n     a84:\t48 83 ec 20          \tsub    $0x20,%rsp\n     a88:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     a8c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # a93 <Cmd_God_f+0x13>\n     a93:\t48 8b 00             \tmov    (%rax),%rax\n     a96:\tf3 0f 10 40 20       \tmovss  0x20(%rax),%xmm0\n     a9b:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n     a9f:\t0f 2e c1             \tucomiss %xmm1,%xmm0\n     aa2:\t7a 09                \tjp     aad <Cmd_God_f+0x2d>\n     aa4:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n     aa8:\t0f 2e c1             \tucomiss %xmm1,%xmm0\n     aab:\t74 48                \tje     af5 <Cmd_God_f+0x75>\n     aad:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # ab4 <Cmd_God_f+0x34>\n     ab4:\t48 8b 00             \tmov    (%rax),%rax\n     ab7:\tf3 0f 10 40 20       \tmovss  0x20(%rax),%xmm0\n     abc:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n     ac0:\t0f 2e c1             \tucomiss %xmm1,%xmm0\n     ac3:\t7a 30                \tjp     af5 <Cmd_God_f+0x75>\n     ac5:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n     ac9:\t0f 2e c1             \tucomiss %xmm1,%xmm0\n     acc:\t75 27                \tjne    af5 <Cmd_God_f+0x75>\n     ace:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # ad5 <Cmd_God_f+0x55>\n     ad5:\t48 8b 48 10          \tmov    0x10(%rax),%rcx\n     ad9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     add:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # ae4 <Cmd_God_f+0x64>\n     ae4:\tbe 02 00 00 00       \tmov    $0x2,%esi\n     ae9:\t48 89 c7             \tmov    %rax,%rdi\n     aec:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     af1:\tff d1                \tcall   *%rcx\n     af3:\teb 64                \tjmp    b59 <Cmd_God_f+0xd9>\n     af5:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     af9:\t8b 80 1c 01 00 00    \tmov    0x11c(%rax),%eax\n     aff:\t83 f0 10             \txor    $0x10,%eax\n     b02:\t89 c2                \tmov    %eax,%edx\n     b04:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     b08:\t89 90 1c 01 00 00    \tmov    %edx,0x11c(%rax)\n     b0e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     b12:\t8b 80 1c 01 00 00    \tmov    0x11c(%rax),%eax\n     b18:\t83 e0 10             \tand    $0x10,%eax\n     b1b:\t85 c0                \ttest   %eax,%eax\n     b1d:\t75 0d                \tjne    b2c <Cmd_God_f+0xac>\n     b1f:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # b26 <Cmd_God_f+0xa6>\n     b26:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     b2a:\teb 0b                \tjmp    b37 <Cmd_God_f+0xb7>\n     b2c:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # b33 <Cmd_God_f+0xb3>\n     b33:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     b37:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # b3e <Cmd_God_f+0xbe>\n     b3e:\t48 8b 48 10          \tmov    0x10(%rax),%rcx\n     b42:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n     b46:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     b4a:\tbe 02 00 00 00       \tmov    $0x2,%esi\n     b4f:\t48 89 c7             \tmov    %rax,%rdi\n     b52:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     b57:\tff d1                \tcall   *%rcx\n     b59:\tc9                   \tleave  \n     b5a:\tc3                   \tret    ", "code_s": "void Cmd_God_f(long <span class=\"supfact\">param_1</span>) {\n  char *<span class=\"supfact\">local_10</span>;\n  if ((*(float *)(_deathmatch + Number) == Number) ||\n      (*(float *)(_sv_cheats + Number) != Number)) {\n    *(uint *)(<span class=\"supfact\">param_1</span> + Number) =\n        *(uint *)(<span class=\"supfact\">param_1</span> + Number) ^ Number;\n    if ((*(uint *)(<span class=\"supfact\">param_1</span> + Number) & Number) == Number) {\n      <span class=\"supfact\">local_10</span> = String;\n    } else {\n      <span class=\"supfact\">local_10</span> = String;\n    }\n    (*_atoi)(<span class=\"supfact\">param_1</span>, Number, <span class=\"supfact\">local_10</span>);\n  } else {\n    (*_atoi)(<span class=\"supfact\">param_1</span>, Number, String);\n  }\n  return;\n}", "code_t": "void Cmd_God_f(edict_t *<span class=\"supfact\">ent</span>) {\n  edict_t *<span class=\"supfact\">ent</span> - local;\n  char *<span class=\"supfact\">msg</span>;\n  if ((*(float *)(_deathmatch + Number) == Number) ||\n      (*(float *)(_sv_cheats + Number) != Number)) {\n    <span class=\"supfact\">ent</span>->flags = <span class=\"supfact\">ent</span>->flags ^ Number;\n    if ((<span class=\"supfact\">ent</span>->flags & Number) == Number) {\n      <span class=\"supfact\">msg</span> = String;\n    } else {\n      <span class=\"supfact\">msg</span> = String;\n    }\n    (*_atoi)(<span class=\"supfact\">ent</span>, Number, <span class=\"supfact\">msg</span>);\n  } else {\n    (*_atoi)(<span class=\"supfact\">ent</span>, Number, String);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "edict_t * *", "pred_name": "self", "ref_name": "ent", "ref_type": "edict_t * *"}, {"name": "local_10", "type": "edict_t * *", "pred_name": "__unk__", "ref_name": "msg", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "j4y4r", "repo_name": "j4ymame", "path": "j4y4r/j4ymame/12c32c0996e0d6daea2a0ffd588da41dc45a1b5c8d6a5400c7b10c9d1d38347d", "path_in_repo": "j4y4r/j4ymame//obj/j4ysdl/mame/drivers/itgamble.o", "objdump": "", "code_s": "void __thiscall itgamble_state\nitgamble_state(itgamble_state *<span class=\"supfact\">this</span>,\n               machine_config *<span class=\"supfact\">param_1</span>,\n               _func_device_t_ptr_machine_config_ptr_char_ptr_device_t_ptr_uint\n                   *<span class=\"supfact\">param_2</span>,\n               char *<span class=\"supfact\">param_3</span>) {\n  driver_device driver_device((driver_device *)<span class=\"supfact\">this</span>,\n                              <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n                              <span class=\"supfact\">param_3</span>);\n  *(undefined ***)<span class=\"supfact\">this</span> = &PTR_ ~itgamble_state_00103a28;\n  device_t required_device<cpu_device> required_device(\n      (required_device<cpu_device> *)(<span class=\"supfact\">this</span> + Number),\n      (device_t *)<span class=\"supfact\">this</span>, String);\n  return;\n}", "code_t": "void __thiscall itgamble_state\nitgamble_state(itgamble_state *<span class=\"supfact\">this</span>,\n               machine_config *<span class=\"supfact\">mconfig</span>,\n               device_type <span class=\"supfact\">type</span>, char *<span class=\"supfact\">tag</span>) {\n  char *<span class=\"supfact\">tag</span> - local;\n  device_type <span class=\"supfact\">type</span> - local;\n  machine_config *<span class=\"supfact\">mconfig</span> - local;\n  itgamble_state *<span class=\"supfact\">this</span> - local;\n  driver_device driver_device(\n      &<span class=\"supfact\">this</span>->super_driver_device,\n      (machine_config *)<span class=\"supfact\">mconfig</span>,\n      (_func_device_t_ptr_machine_config_ptr_char_ptr_device_t_ptr_uint *)\n          <span class=\"supfact\">type</span>,\n      <span class=\"supfact\">tag</span>);\n  *(undefined ***)<span class=\"supfact\">this</span> = &PTR_ ~itgamble_state_00103a28;\n  device_t required_device<cpu_device> required_device(\n      &<span class=\"supfact\">this</span>->m_maincpu, (device_t *)<span class=\"supfact\">this</span>,\n      String);\n  return;\n}", "var": [{"name": "this", "type": "mrflea_state * *", "pred_name": "this", "ref_name": "this", "ref_type": "itgamble_state * *"}, {"name": "param_1", "type": "machine_config * *", "pred_name": "mconfig", "ref_name": "mconfig", "ref_type": "machine_config * *"}, {"name": "param_2", "type": "device_type", "pred_name": "type", "ref_name": "type", "ref_type": "device_type"}, {"name": "param_3", "type": "char * *", "pred_name": "tag", "ref_name": "tag", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "svguna", "repo_name": "Contiki-DICE", "path": "svguna/Contiki-DICE/ef16d19d44c3ee9f5fbd1f87711a95dd155680fdf0eab7746a4bec8c8e8db0f4", "path_in_repo": "svguna/Contiki-DICE/examples/udp-receiver-ipv6/obj_minimal-net/uip6.o", "objdump": "00000000000001ee <uip_ipchksum>:\n     1ee:\t55                   \tpush   %rbp\n     1ef:\t48 89 e5             \tmov    %rsp,%rbp\n     1f2:\t48 83 ec 10          \tsub    $0x10,%rsp\n     1f6:\tba 28 00 00 00       \tmov    $0x28,%edx\n     1fb:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     200:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     205:\te8 f1 fe ff ff       \tcall   fb <chksum>\n     20a:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n     20e:\t66 83 7d fe 00       \tcmpw   $0x0,-0x2(%rbp)\n     213:\t74 0d                \tje     222 <uip_ipchksum+0x34>\n     215:\t0f b7 45 fe          \tmovzwl -0x2(%rbp),%eax\n     219:\t89 c7                \tmov    %eax,%edi\n     21b:\te8 00 00 00 00       \tcall   220 <uip_ipchksum+0x32>\n     220:\teb 05                \tjmp    227 <uip_ipchksum+0x39>\n     222:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n     227:\tc9                   \tleave  \n     228:\tc3                   \tret    ", "code_s": "uint16_t uip_ipchksum(void) {\n  uint16_t <span class=\"supfact\">uVar1</span>;\n  <span class=\"supfact\">uVar1</span> = FUN_001000fb(Number, Number, Number);\n  if (<span class=\"supfact\">uVar1</span> == Number) {\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar1</span> = htons(<span class=\"supfact\">uVar1</span>);\n  }\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "u16_t uip_ipchksum(void) {\n  u16_t __hostshort;\n  uint16_t uVar1;\n  u16_t sum;\n  __hostshort = chksum(Number, uip_buf + Number, Number);\n  if (__hostshort == Number) {\n    uVar1 = Number;\n  } else {\n    uVar1 = htons(__hostshort);\n  }\n  return uVar1;\n}", "var": [{"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "slazav", "repo_name": "pico_osc", "path": "slazav/pico_osc/2fd4162226c9a3da5246f139935a11968b87e79f3e292d31a50f48ea43b0f043", "path_in_repo": "slazav/pico_osc/sig_filter/testsig_2decay", "objdump": "", "code_s": "void FUN_00406607(void) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  char <span class=\"supfact\">param_11</span>;\n  <span class=\"supfact\">uVar1</span> = __cxa_allocate_exception(Number);\n  std __cxx11\n      basic_ostringstream<char, std char_traits<char>, std allocator<char>>\n      basic_ostringstream();\n  std operator<<((basic_ostream *)&stack0x00000090, String);\n  std operator<<((basic_ostream *)&stack0x00000090, String);\n  <span class=\"supfact\">param_11</span> = (char)*(undefined4 *)PTR_optopt_00429fb0;\n  std __ostream_insert<char, std char_traits<char>>(\n      (basic_ostream *)&stack0x00000090, &stack0x0000008f, Number);\n  FUN_0040ae20(<span class=\"supfact\">uVar1</span>, (basic_ostream *)&stack0x00000090);\n  std __cxx11 basic_ostringstream<\n      char, std char_traits<char>,\n      std allocator<\n          char>> ~basic_ostringstream((basic_ostringstream<char,\n                                                           std char_traits<\n                                                               char>,\n                                                           std allocator<char>>\n                                           *)(basic_ostream *)&stack0x00000090);\n  __cxa_throw(<span class=\"supfact\">uVar1</span>, &PTR_vtable_00429c90, FUN_00416530);\n}", "code_t": "void FUN_00406607(void) {\n  Err *<span class=\"supfact\">this</span>;\n  char <span class=\"supfact\">param_11</span>;\n  <span class=\"supfact\">this</span> = (Err *)__cxa_allocate_exception(Number);\n  std __cxx11\n      basic_ostringstream<char, std char_traits<char>, std allocator<char>>\n      basic_ostringstream();\n  std operator<<((basic_ostream *)(Err *)&stack0x00000090, String);\n  std operator<<((basic_ostream *)(Err *)&stack0x00000090, String);\n  <span class=\"supfact\">param_11</span> = (char)*(undefined4 *)PTR_optopt_00429fb0;\n  std __ostream_insert<char, std char_traits<char>>(\n      (basic_ostream *)(Err *)&stack0x00000090, &stack0x0000008f, Number);\n  Err Err(<span class=\"supfact\">this</span>, (Err *)&stack0x00000090);\n  std __cxx11 basic_ostringstream<\n      char, std char_traits<char>,\n      std allocator<\n          char>> ~basic_ostringstream((basic_ostringstream<char,\n                                                           std char_traits<\n                                                               char>,\n                                                           std allocator<char>>\n                                           *)(Err *)&stack0x00000090);\n  __cxa_throw(<span class=\"supfact\">this</span>, &Err typeinfo, Err ~Err);\n}", "var": [{"name": "uVar1", "type": "undefined8", "pred_name": "uVar1", "ref_name": "this", "ref_type": "Err * *"}, {"name": "param_11", "type": "struct allocator<char> { PADDING (0); PADDING (1); }", "pred_name": "param_11", "ref_name": "param_11", "ref_type": "char"}], "body_in_train": false}, {"repo_owner": "DougHamil", "repo_name": "OculusQ3", "path": "DougHamil/OculusQ3/5a8c948fb8208bee6a0dd1b9e37d4a10597cc4f0aacfd0c6461e8c4b4004882e", "path_in_repo": "DougHamil/OculusQ3//build/release-linux-x86_64/ded/be_ai_chat.o", "objdump": "00000000000017c6 <BotReplaceReplySynonyms>:\n    17c6:\t55                   \tpush   %rbp\n    17c7:\t53                   \tpush   %rbx\n    17c8:\t48 83 ec 48          \tsub    $0x48,%rsp\n    17cc:\t48 89 7c 24 08       \tmov    %rdi,0x8(%rsp)\n    17d1:\t48 89 34 24          \tmov    %rsi,(%rsp)\n    17d5:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    17da:\t48 89 44 24 38       \tmov    %rax,0x38(%rsp)\n    17df:\te9 ea 01 00 00       \tjmp    19ce <BotReplaceReplySynonyms+0x208>\n    17e4:\t48 83 44 24 38 01    \taddq   $0x1,0x38(%rsp)\n    17ea:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    17ef:\t0f b6 00             \tmovzbl (%rax),%eax\n    17f2:\t84 c0                \ttest   %al,%al\n    17f4:\t74 0c                \tje     1802 <BotReplaceReplySynonyms+0x3c>\n    17f6:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    17fb:\t0f b6 00             \tmovzbl (%rax),%eax\n    17fe:\t3c 20                \tcmp    $0x20,%al\n    1800:\t7e e2                \tjle    17e4 <BotReplaceReplySynonyms+0x1e>\n    1802:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    1807:\t0f b6 00             \tmovzbl (%rax),%eax\n    180a:\t84 c0                \ttest   %al,%al\n    180c:\t0f 84 ce 01 00 00    \tje     19e0 <BotReplaceReplySynonyms+0x21a>\n    1812:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1819 <BotReplaceReplySynonyms+0x53>\n    1819:\t48 89 44 24 30       \tmov    %rax,0x30(%rsp)\n    181e:\te9 70 01 00 00       \tjmp    1993 <BotReplaceReplySynonyms+0x1cd>\n    1823:\t48 8b 44 24 30       \tmov    0x30(%rsp),%rax\n    1828:\t48 8b 00             \tmov    (%rax),%rax\n    182b:\t48 23 04 24          \tand    (%rsp),%rax\n    182f:\t48 85 c0             \ttest   %rax,%rax\n    1832:\t0f 84 4c 01 00 00    \tje     1984 <BotReplaceReplySynonyms+0x1be>\n    1838:\t48 8b 44 24 30       \tmov    0x30(%rsp),%rax\n    183d:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    1841:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    1845:\t48 89 44 24 28       \tmov    %rax,0x28(%rsp)\n    184a:\te9 1f 01 00 00       \tjmp    196e <BotReplaceReplySynonyms+0x1a8>\n    184f:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    1854:\t48 8b 08             \tmov    (%rax),%rcx\n    1857:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    185c:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1861:\t48 89 ce             \tmov    %rcx,%rsi\n    1864:\t48 89 c7             \tmov    %rax,%rdi\n    1867:\te8 00 00 00 00       \tcall   186c <BotReplaceReplySynonyms+0xa6>\n    186c:\t48 89 44 24 20       \tmov    %rax,0x20(%rsp)\n    1871:\t48 83 7c 24 20 00    \tcmpq   $0x0,0x20(%rsp)\n    1877:\t0f 84 df 00 00 00    \tje     195c <BotReplaceReplySynonyms+0x196>\n    187d:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    1882:\t48 3b 44 24 38       \tcmp    0x38(%rsp),%rax\n    1887:\t0f 85 cf 00 00 00    \tjne    195c <BotReplaceReplySynonyms+0x196>\n    188d:\t48 8b 44 24 30       \tmov    0x30(%rsp),%rax\n    1892:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    1896:\t48 8b 00             \tmov    (%rax),%rax\n    1899:\t48 89 44 24 18       \tmov    %rax,0x18(%rsp)\n    189e:\t48 8b 4c 24 18       \tmov    0x18(%rsp),%rcx\n    18a3:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    18a8:\tba 00 00 00 00       \tmov    $0x0,%edx\n    18ad:\t48 89 ce             \tmov    %rcx,%rsi\n    18b0:\t48 89 c7             \tmov    %rax,%rdi\n    18b3:\te8 00 00 00 00       \tcall   18b8 <BotReplaceReplySynonyms+0xf2>\n    18b8:\t48 89 44 24 20       \tmov    %rax,0x20(%rsp)\n    18bd:\t48 83 7c 24 20 00    \tcmpq   $0x0,0x20(%rsp)\n    18c3:\t74 10                \tje     18d5 <BotReplaceReplySynonyms+0x10f>\n    18c5:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    18ca:\t48 3b 44 24 38       \tcmp    0x38(%rsp),%rax\n    18cf:\t0f 84 8a 00 00 00    \tje     195f <BotReplaceReplySynonyms+0x199>\n    18d5:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    18da:\t48 8b 00             \tmov    (%rax),%rax\n    18dd:\t48 89 c7             \tmov    %rax,%rdi\n    18e0:\te8 00 00 00 00       \tcall   18e5 <BotReplaceReplySynonyms+0x11f>\n    18e5:\t48 8b 54 24 38       \tmov    0x38(%rsp),%rdx\n    18ea:\t48 01 d0             \tadd    %rdx,%rax\n    18ed:\t48 89 c7             \tmov    %rax,%rdi\n    18f0:\te8 00 00 00 00       \tcall   18f5 <BotReplaceReplySynonyms+0x12f>\n    18f5:\t48 8d 68 01          \tlea    0x1(%rax),%rbp\n    18f9:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    18fe:\t48 8b 00             \tmov    (%rax),%rax\n    1901:\t48 89 c7             \tmov    %rax,%rdi\n    1904:\te8 00 00 00 00       \tcall   1909 <BotReplaceReplySynonyms+0x143>\n    1909:\t48 8b 54 24 38       \tmov    0x38(%rsp),%rdx\n    190e:\t48 8d 1c 10          \tlea    (%rax,%rdx,1),%rbx\n    1912:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    1917:\t48 89 c7             \tmov    %rax,%rdi\n    191a:\te8 00 00 00 00       \tcall   191f <BotReplaceReplySynonyms+0x159>\n    191f:\t48 8b 54 24 38       \tmov    0x38(%rsp),%rdx\n    1924:\t48 01 d0             \tadd    %rdx,%rax\n    1927:\t48 89 ea             \tmov    %rbp,%rdx\n    192a:\t48 89 de             \tmov    %rbx,%rsi\n    192d:\t48 89 c7             \tmov    %rax,%rdi\n    1930:\te8 00 00 00 00       \tcall   1935 <BotReplaceReplySynonyms+0x16f>\n    1935:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    193a:\t48 89 c7             \tmov    %rax,%rdi\n    193d:\te8 00 00 00 00       \tcall   1942 <BotReplaceReplySynonyms+0x17c>\n    1942:\t48 89 c2             \tmov    %rax,%rdx\n    1945:\t48 8b 4c 24 18       \tmov    0x18(%rsp),%rcx\n    194a:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    194f:\t48 89 ce             \tmov    %rcx,%rsi\n    1952:\t48 89 c7             \tmov    %rax,%rdi\n    1955:\te8 00 00 00 00       \tcall   195a <BotReplaceReplySynonyms+0x194>\n    195a:\teb 1e                \tjmp    197a <BotReplaceReplySynonyms+0x1b4>\n    195c:\t90                   \tnop\n    195d:\teb 01                \tjmp    1960 <BotReplaceReplySynonyms+0x19a>\n    195f:\t90                   \tnop\n    1960:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    1965:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    1969:\t48 89 44 24 28       \tmov    %rax,0x28(%rsp)\n    196e:\t48 83 7c 24 28 00    \tcmpq   $0x0,0x28(%rsp)\n    1974:\t0f 85 d5 fe ff ff    \tjne    184f <BotReplaceReplySynonyms+0x89>\n    197a:\t48 83 7c 24 28 00    \tcmpq   $0x0,0x28(%rsp)\n    1980:\t75 1f                \tjne    19a1 <BotReplaceReplySynonyms+0x1db>\n    1982:\teb 01                \tjmp    1985 <BotReplaceReplySynonyms+0x1bf>\n    1984:\t90                   \tnop\n    1985:\t48 8b 44 24 30       \tmov    0x30(%rsp),%rax\n    198a:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    198e:\t48 89 44 24 30       \tmov    %rax,0x30(%rsp)\n    1993:\t48 83 7c 24 30 00    \tcmpq   $0x0,0x30(%rsp)\n    1999:\t0f 85 84 fe ff ff    \tjne    1823 <BotReplaceReplySynonyms+0x5d>\n    199f:\teb 09                \tjmp    19aa <BotReplaceReplySynonyms+0x1e4>\n    19a1:\t90                   \tnop\n    19a2:\teb 06                \tjmp    19aa <BotReplaceReplySynonyms+0x1e4>\n    19a4:\t48 83 44 24 38 01    \taddq   $0x1,0x38(%rsp)\n    19aa:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    19af:\t0f b6 00             \tmovzbl (%rax),%eax\n    19b2:\t84 c0                \ttest   %al,%al\n    19b4:\t74 0c                \tje     19c2 <BotReplaceReplySynonyms+0x1fc>\n    19b6:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    19bb:\t0f b6 00             \tmovzbl (%rax),%eax\n    19be:\t3c 20                \tcmp    $0x20,%al\n    19c0:\t7f e2                \tjg     19a4 <BotReplaceReplySynonyms+0x1de>\n    19c2:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    19c7:\t0f b6 00             \tmovzbl (%rax),%eax\n    19ca:\t84 c0                \ttest   %al,%al\n    19cc:\t74 15                \tje     19e3 <BotReplaceReplySynonyms+0x21d>\n    19ce:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    19d3:\t0f b6 00             \tmovzbl (%rax),%eax\n    19d6:\t84 c0                \ttest   %al,%al\n    19d8:\t0f 85 0c fe ff ff    \tjne    17ea <BotReplaceReplySynonyms+0x24>\n    19de:\teb 04                \tjmp    19e4 <BotReplaceReplySynonyms+0x21e>\n    19e0:\t90                   \tnop\n    19e1:\teb 01                \tjmp    19e4 <BotReplaceReplySynonyms+0x21e>\n    19e3:\t90                   \tnop\n    19e4:\t90                   \tnop\n    19e5:\t48 83 c4 48          \tadd    $0x48,%rsp\n    19e9:\t5b                   \tpop    %rbx\n    19ea:\t5d                   \tpop    %rbp\n    19eb:\tc3                   \tret    ", "code_s": "void BotReplaceReplySynonyms(char *<span class=\"supfact\">param_1</span>,\n                             ulong <span class=\"supfact\">param_2</span>) {\n  char *pcVar1;\n  char *pcVar2;\n  size_t sVar3;\n  size_t sVar4;\n  size_t sVar5;\n  char **<span class=\"supfact\">local_30</span>;\n  ulong *<span class=\"supfact\">local_28</span>;\n  char *<span class=\"supfact\">local_20</span>;\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_1</span>;\n  do {\n    if (*<span class=\"supfact\">local_20</span> == String) {\n      return;\n    }\n    for (; (*<span class=\"supfact\">local_20</span> != String &&\n            (*<span class=\"supfact\">local_20</span> < String));\n         <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_20</span> + Number) {\n    }\n    if (*<span class=\"supfact\">local_20</span> == String) {\n      return;\n    }\n    for (<span class=\"supfact\">local_28</span> = synonyms;\n         <span class=\"supfact\">local_28</span> != (ulong *)Number;\n         <span class=\"supfact\">local_28</span> = (ulong *)<span class=\"supfact\">local_28</span>[Number]) {\n      if ((*<span class=\"supfact\">local_28</span> & <span class=\"supfact\">param_2</span>) != Number) {\n        for (<span class=\"supfact\">local_30</span> =\n                 *(char ***)(<span class=\"supfact\">local_28</span>[Number] + Number);\n             <span class=\"supfact\">local_30</span> != (char **)Number;\n             <span class=\"supfact\">local_30</span> =\n                 (char **)<span class=\"supfact\">local_30</span>[Number]) {\n          pcVar1 = (char *)StringContainsWord(\n              <span class=\"supfact\">local_20</span>, *<span class=\"supfact\">local_30</span>, Number);\n          if ((pcVar1 != (char *)Number) &&\n              (pcVar1 == <span class=\"supfact\">local_20</span>)) {\n            pcVar1 = *(char **)<span class=\"supfact\">local_28</span>[Number];\n            pcVar2 = (char *)StringContainsWord(<span class=\"supfact\">local_20</span>,\n                                                pcVar1, Number);\n            if ((pcVar2 == (char *)Number) ||\n                (pcVar2 != <span class=\"supfact\">local_20</span>)) {\n              sVar3 = strlen(*<span class=\"supfact\">local_30</span>);\n              sVar3 = strlen(<span class=\"supfact\">local_20</span> + sVar3);\n              sVar4 = strlen(*<span class=\"supfact\">local_30</span>);\n              sVar5 = strlen(pcVar1);\n              memmove(<span class=\"supfact\">local_20</span> + sVar5,\n                      <span class=\"supfact\">local_20</span> + sVar4, sVar3 + Number);\n              sVar3 = strlen(pcVar1);\n              memcpy(<span class=\"supfact\">local_20</span>, pcVar1, sVar3);\n              break;\n            }\n          }\n        }\n        if (<span class=\"supfact\">local_30</span> != (char **)Number)\n          break;\n      }\n    }\n    for (; (*<span class=\"supfact\">local_20</span> != String &&\n            (String < *<span class=\"supfact\">local_20</span>));\n         <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_20</span> + Number) {\n    }\n    if (*<span class=\"supfact\">local_20</span> == String) {\n      return;\n    }\n  } while (true);\n}", "code_t": "void BotReplaceReplySynonyms(char *<span class=\"supfact\">string</span>,\n                             ulong <span class=\"supfact\">context</span>) {\n  char *pcVar1;\n  char *pcVar2;\n  size_t sVar3;\n  size_t sVar4;\n  size_t sVar5;\n  ulong <span class=\"supfact\">context</span> - local;\n  char *<span class=\"supfact\">string</span> - local;\n  char *replacement;\n  char *str2;\n  bot_synonym_t *<span class=\"supfact\">synonym</span>;\n  bot_synonymlist_t *<span class=\"supfact\">syn</span>;\n  char *<span class=\"supfact\">str1</span>;\n  <span class=\"supfact\">str1</span> = <span class=\"supfact\">string</span>;\n  do {\n    if (*<span class=\"supfact\">str1</span> == String) {\n      return;\n    }\n    for (;\n         (*<span class=\"supfact\">str1</span> != String && (*<span class=\"supfact\">str1</span> < String));\n         <span class=\"supfact\">str1</span> = <span class=\"supfact\">str1</span> + Number) {\n    }\n    if (*<span class=\"supfact\">str1</span> == String) {\n      return;\n    }\n    for (<span class=\"supfact\">syn</span> = synonyms;\n         <span class=\"supfact\">syn</span> != (bot_synonymlist_t *)Number;\n         <span class=\"supfact\">syn</span> = <span class=\"supfact\">syn</span>->next) {\n      if ((<span class=\"supfact\">syn</span>-><span class=\"supfact\">context</span> &\n           <span class=\"supfact\">context</span>) != Number) {\n        for (<span class=\"supfact\">synonym</span> = <span class=\"supfact\">syn</span>->firstsynonym->next;\n             <span class=\"supfact\">synonym</span> != (bot_synonym_t *)Number;\n             <span class=\"supfact\">synonym</span> = <span class=\"supfact\">synonym</span>->next) {\n          pcVar1 = StringContainsWord(\n              <span class=\"supfact\">str1</span>,\n              <span class=\"supfact\">synonym</span>-><span class=\"supfact\">string</span>, Number);\n          if ((pcVar1 != (char *)Number) && (pcVar1 == <span class=\"supfact\">str1</span>)) {\n            pcVar1 = <span class=\"supfact\">syn</span>->firstsynonym-><span class=\"supfact\">string</span>;\n            pcVar2 = StringContainsWord(<span class=\"supfact\">str1</span>, pcVar1, Number);\n            if ((pcVar2 == (char *)Number) ||\n                (pcVar2 != <span class=\"supfact\">str1</span>)) {\n              sVar3 = strlen(<span class=\"supfact\">synonym</span>-><span class=\"supfact\">string</span>);\n              sVar3 = strlen(<span class=\"supfact\">str1</span> + sVar3);\n              sVar4 = strlen(<span class=\"supfact\">synonym</span>-><span class=\"supfact\">string</span>);\n              sVar5 = strlen(pcVar1);\n              memmove(<span class=\"supfact\">str1</span> + sVar5,\n                      <span class=\"supfact\">str1</span> + sVar4, sVar3 + Number);\n              sVar3 = strlen(pcVar1);\n              memcpy(<span class=\"supfact\">str1</span>, pcVar1, sVar3);\n              break;\n            }\n          }\n        }\n        if (<span class=\"supfact\">synonym</span> != (bot_synonym_t *)Number)\n          break;\n      }\n    }\n    for (;\n         (*<span class=\"supfact\">str1</span> != String && (String < *<span class=\"supfact\">str1</span>));\n         <span class=\"supfact\">str1</span> = <span class=\"supfact\">str1</span> + Number) {\n    }\n    if (*<span class=\"supfact\">str1</span> == String) {\n      return;\n    }\n  } while (true);\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "string", "ref_name": "string", "ref_type": "char * *"}, {"name": "param_2", "type": "ulong", "pred_name": "context", "ref_name": "context", "ref_type": "ulong"}, {"name": "local_30", "type": "bot_synonym_t * *", "pred_name": "synonym", "ref_name": "synonym", "ref_type": "bot_synonym_t * *"}, {"name": "local_28", "type": "bot_synonymlist_t * *", "pred_name": "syn", "ref_name": "syn", "ref_type": "bot_synonymlist_t * *"}, {"name": "local_20", "type": "char * *", "pred_name": "str1", "ref_name": "str1", "ref_type": "char * *"}], "body_in_train": true}, {"repo_owner": "ThrowTheSwitch", "repo_name": "DrSurlyCourse2Docker", "path": "ThrowTheSwitch/DrSurlyCourse2Docker/338159f117c5acc98dd24abffa7cd80501870cd5267dd17aa71cf6b6db9830f8", "path_in_repo": "ThrowTheSwitch/DrSurlyCourse2Docker/assets/qemu/qemu-stable-1.1/s390x-linux-user/helper.o", "objdump": "0000000000000121 <cpu_s390x_handle_mmu_fault>:\n 121:\t55                   \tpush   %rbp\n 122:\t48 89 e5             \tmov    %rsp,%rbp\n 125:\t48 83 ec 30          \tsub    $0x30,%rsp\n 129:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n 12d:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n 131:\t89 55 dc             \tmov    %edx,-0x24(%rbp)\n 134:\t89 4d d8             \tmov    %ecx,-0x28(%rbp)\n 137:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n 13e:\t00 00 \n 140:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 144:\t31 c0                \txor    %eax,%eax\n 146:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 14a:\tc7 80 20 88 00 00 05 \tmovl   $0x5,0x8820(%rax)\n 151:\t00 00 00 \n 154:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 158:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n 15c:\t48 89 90 80 01 00 00 \tmov    %rdx,0x180(%rax)\n 163:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 168:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n 16c:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n 173:\t00 00 \n 175:\t74 05                \tje     17c <cpu_s390x_handle_mmu_fault+0x5b>\n 177:\te8 00 00 00 00       \tcall   17c <cpu_s390x_handle_mmu_fault+0x5b>\n 17c:\tc9                   \tleave  \n 17d:\tc3                   \tret    ", "code_s": "undefined8 cpu_s390x_handle_mmu_fault(long <span class=\"supfact\">param_1</span>,\n                                      undefined8 <span class=\"supfact\">param_2</span>) {\n  long lVar1;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = <span class=\"supfact\">param_2</span>;\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return Number;\n}", "code_t": "int cpu_s390x_handle_mmu_fault(CPUS390XState *<span class=\"supfact\">env</span>,\n                               target_ulong <span class=\"supfact\">address</span>, int rw,\n                               int mmu_idx) {\n  long lVar1;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int mmu_idx - local;\n  int rw - local;\n  target_ulong <span class=\"supfact\">address</span> - local;\n  CPUS390XState *<span class=\"supfact\">env</span> - local;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">env</span>->exception_index = Number;\n  <span class=\"supfact\">env</span>->__excp_addr = <span class=\"supfact\">address</span>;\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return Number;\n}", "var": [{"name": "param_1", "type": "CPUMIPSState * *", "pred_name": "env", "ref_name": "env", "ref_type": "CPUS390XState * *"}, {"name": "param_2", "type": "target_ulong", "pred_name": "address", "ref_name": "address", "ref_type": "target_ulong"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "fasterthanlime", "repo_name": "coke-output-example", "path": "fasterthanlime/coke-output-example/a401c5ba2a1b480a6ef3c5daa64232b11c0fbdf1c215282bbba6e50a13d5a239", "path_in_repo": "fasterthanlime/coke-output-example/build/rock_tmp/sdk/lang/Iterators.o", "objdump": "00000000000003eb <lang_Iterators__Iterable_reduce>:\n 3eb:\t55                   \tpush   %rbp\n 3ec:\t48 89 e5             \tmov    %rsp,%rbp\n 3ef:\t48 83 ec 20          \tsub    $0x20,%rsp\n 3f3:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n 3f7:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n 3fb:\t48 89 55 e0          \tmov    %rdx,-0x20(%rbp)\n 3ff:\t48 89 4d e8          \tmov    %rcx,-0x18(%rbp)\n 403:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 407:\t48 8b 00             \tmov    (%rax),%rax\n 40a:\t4c 8b 40 70          \tmov    0x70(%rax),%r8\n 40e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 412:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n 416:\t48 8b 75 f0          \tmov    -0x10(%rbp),%rsi\n 41a:\t48 8b 7d f8          \tmov    -0x8(%rbp),%rdi\n 41e:\t48 89 d1             \tmov    %rdx,%rcx\n 421:\t48 89 c2             \tmov    %rax,%rdx\n 424:\t41 ff d0             \tcall   *%r8\n 427:\t90                   \tnop\n 428:\tc9                   \tleave  \n 429:\tc3                   \tret    ", "code_s": "void lang_Iterators__Iterable_reduce(long *<span class=\"supfact\">param_1</span>,\n                                     undefined8 <span class=\"supfact\">param_2</span>,\n                                     undefined8 <span class=\"supfact\">param_3</span>,\n                                     undefined8 <span class=\"supfact\">param_4</span>) {\n  (**(code **)(*<span class=\"supfact\">param_1</span> + Number))(\n      <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>,\n      <span class=\"supfact\">param_4</span>);\n  return;\n}", "code_t": "void __thiscall lang_Iterators__Iterable_reduce(\n    void *<span class=\"supfact\">this</span>, uint8_t *<span class=\"supfact\">__genericReturn22</span>,\n    lang_types__Closure f) {\n  undefined8 <span class=\"supfact\">in_RCX</span>;\n  undefined8 <span class=\"supfact\">in_RDX</span>;\n  lang_types__Closure f - local;\n  uint8_t *<span class=\"supfact\">__genericReturn22</span> - local;\n  lang_Iterators__Iterable *<span class=\"supfact\">this</span> - local;\n  (**(code **)(*<span class=\"supfact\">this</span> + Number))(\n      <span class=\"supfact\">this</span>, <span class=\"supfact\">__genericReturn22</span>,\n      <span class=\"supfact\">in_RDX</span>, <span class=\"supfact\">in_RCX</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "sidl_InvViolation", "pred_name": "self", "ref_name": "this", "ref_type": "void * *"}, {"name": "param_2", "type": "char * *", "pred_name": "name", "ref_name": "__genericReturn22", "ref_type": "uint8_t * *"}, {"name": "param_3", "type": "sidl_BaseInterface * *", "pred_name": "_ex", "ref_name": "in_RDX", "ref_type": "undefined8"}, {"name": "param_4", "type": "__unk__", "pred_name": "__unk__", "ref_name": "in_RCX", "ref_type": "undefined8"}], "body_in_train": false}, {"repo_owner": "Epsynus", "repo_name": "Tripping-nemesis", "path": "Epsynus/Tripping-nemesis/294546881b65e1379c63765df3f888ab9bf34782ee12580cfa26110f7e28abf2", "path_in_repo": "Epsynus/Tripping-nemesis/src/map/obj_sql/pc.o", "objdump": "0000000000014e89 <pc_readregistry_str>:\n   14e89:\t55                   \tpush   %rbp\n   14e8a:\t48 89 e5             \tmov    %rsp,%rbp\n   14e8d:\t48 83 ec 30          \tsub    $0x30,%rsp\n   14e91:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   14e95:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n   14e99:\t89 55 dc             \tmov    %edx,-0x24(%rbp)\n   14e9c:\t83 7d dc 03          \tcmpl   $0x3,-0x24(%rbp)\n   14ea0:\t74 14                \tje     14eb6 <pc_readregistry_str+0x2d>\n   14ea2:\t83 7d dc 03          \tcmpl   $0x3,-0x24(%rbp)\n   14ea6:\t7f 65                \tjg     14f0d <pc_readregistry_str+0x84>\n   14ea8:\t83 7d dc 01          \tcmpl   $0x1,-0x24(%rbp)\n   14eac:\t74 42                \tje     14ef0 <pc_readregistry_str+0x67>\n   14eae:\t83 7d dc 02          \tcmpl   $0x2,-0x24(%rbp)\n   14eb2:\t74 1f                \tje     14ed3 <pc_readregistry_str+0x4a>\n   14eb4:\teb 57                \tjmp    14f0d <pc_readregistry_str+0x84>\n   14eb6:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14eba:\t48 05 0c 83 00 00    \tadd    $0x830c,%rax\n   14ec0:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   14ec4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14ec8:\t8b 80 08 83 00 00    \tmov    0x8308(%rax),%eax\n   14ece:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n   14ed1:\teb 44                \tjmp    14f17 <pc_readregistry_str+0x8e>\n   14ed3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14ed7:\t48 05 10 ef 00 00    \tadd    $0xef10,%rax\n   14edd:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   14ee1:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14ee5:\t8b 80 0c ef 00 00    \tmov    0xef0c(%rax),%eax\n   14eeb:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n   14eee:\teb 27                \tjmp    14f17 <pc_readregistry_str+0x8e>\n   14ef0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14ef4:\t48 05 14 37 01 00    \tadd    $0x13714,%rax\n   14efa:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   14efe:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   14f02:\t8b 80 10 37 01 00    \tmov    0x13710(%rax),%eax\n   14f08:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n   14f0b:\teb 0a                \tjmp    14f17 <pc_readregistry_str+0x8e>\n   14f0d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   14f12:\te9 c1 00 00 00       \tjmp    14fd8 <pc_readregistry_str+0x14f>\n   14f17:\t83 7d f0 ff          \tcmpl   $0xffffffff,-0x10(%rbp)\n   14f1b:\t75 3e                \tjne    14f5b <pc_readregistry_str+0xd2>\n   14f1d:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n   14f20:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   14f24:\t48 89 c6             \tmov    %rax,%rsi\n   14f27:\tbf 00 00 00 00       \tmov    $0x0,%edi\n   14f2c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   14f31:\te8 00 00 00 00       \tcall   14f36 <pc_readregistry_str+0xad>\n   14f36:\t83 7d dc 03          \tcmpl   $0x3,-0x24(%rbp)\n   14f3a:\t74 05                \tje     14f41 <pc_readregistry_str+0xb8>\n   14f3c:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n   14f3f:\teb 05                \tjmp    14f46 <pc_readregistry_str+0xbd>\n   14f41:\tb8 04 00 00 00       \tmov    $0x4,%eax\n   14f46:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n   14f4a:\t89 c6                \tmov    %eax,%esi\n   14f4c:\t48 89 d7             \tmov    %rdx,%rdi\n   14f4f:\te8 00 00 00 00       \tcall   14f54 <pc_readregistry_str+0xcb>\n   14f54:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   14f59:\teb 7d                \tjmp    14fd8 <pc_readregistry_str+0x14f>\n   14f5b:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n   14f62:\teb 38                \tjmp    14f9c <pc_readregistry_str+0x113>\n   14f64:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n   14f67:\t48 63 d0             \tmovslq %eax,%rdx\n   14f6a:\t48 89 d0             \tmov    %rdx,%rax\n   14f6d:\t48 c1 e0 03          \tshl    $0x3,%rax\n   14f71:\t48 01 d0             \tadd    %rdx,%rax\n   14f74:\t48 c1 e0 05          \tshl    $0x5,%rax\n   14f78:\t48 89 c2             \tmov    %rax,%rdx\n   14f7b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   14f7f:\t48 01 d0             \tadd    %rdx,%rax\n   14f82:\t48 89 c2             \tmov    %rax,%rdx\n   14f85:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   14f89:\t48 89 c6             \tmov    %rax,%rsi\n   14f8c:\t48 89 d7             \tmov    %rdx,%rdi\n   14f8f:\te8 00 00 00 00       \tcall   14f94 <pc_readregistry_str+0x10b>\n   14f94:\t85 c0                \ttest   %eax,%eax\n   14f96:\t74 0e                \tje     14fa6 <pc_readregistry_str+0x11d>\n   14f98:\t83 45 f4 01          \taddl   $0x1,-0xc(%rbp)\n   14f9c:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n   14f9f:\t3b 45 f0             \tcmp    -0x10(%rbp),%eax\n   14fa2:\t7c c0                \tjl     14f64 <pc_readregistry_str+0xdb>\n   14fa4:\teb 01                \tjmp    14fa7 <pc_readregistry_str+0x11e>\n   14fa6:\t90                   \tnop\n   14fa7:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n   14faa:\t3b 45 f0             \tcmp    -0x10(%rbp),%eax\n   14fad:\t7d 24                \tjge    14fd3 <pc_readregistry_str+0x14a>\n   14faf:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n   14fb2:\t48 63 d0             \tmovslq %eax,%rdx\n   14fb5:\t48 89 d0             \tmov    %rdx,%rax\n   14fb8:\t48 c1 e0 03          \tshl    $0x3,%rax\n   14fbc:\t48 01 d0             \tadd    %rdx,%rax\n   14fbf:\t48 c1 e0 05          \tshl    $0x5,%rax\n   14fc3:\t48 89 c2             \tmov    %rax,%rdx\n   14fc6:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   14fca:\t48 01 d0             \tadd    %rdx,%rax\n   14fcd:\t48 83 c0 20          \tadd    $0x20,%rax\n   14fd1:\teb 05                \tjmp    14fd8 <pc_readregistry_str+0x14f>\n   14fd3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   14fd8:\tc9                   \tleave  \n   14fd9:\tc3                   \tret    ", "code_s": "long pc_readregistry_str(long <span class=\"supfact\">param_1</span>,\n                         char *<span class=\"supfact\">param_2</span>,\n                         int <span class=\"supfact\">param_3</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  long <span class=\"supfact\">lVar2</span>;\n  int <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_14</span>;\n  long <span class=\"supfact\">local_10</span>;\n  if (<span class=\"supfact\">param_3</span> == Number) {\n    <span class=\"supfact\">local_10</span> = <span class=\"supfact\">param_1</span> + Number;\n    <span class=\"supfact\">local_18</span> = *(int *)(<span class=\"supfact\">param_1</span> + Number);\n  } else {\n    if (Number < <span class=\"supfact\">param_3</span>) {\n      return Number;\n    }\n    if (<span class=\"supfact\">param_3</span> == Number) {\n      <span class=\"supfact\">local_10</span> = <span class=\"supfact\">param_1</span> + Number;\n      <span class=\"supfact\">local_18</span> = *(int *)(<span class=\"supfact\">param_1</span> + Number);\n    } else {\n      if (<span class=\"supfact\">param_3</span> != Number) {\n        return Number;\n      }\n      <span class=\"supfact\">local_10</span> = <span class=\"supfact\">param_1</span> + Number;\n      <span class=\"supfact\">local_18</span> = *(int *)(<span class=\"supfact\">param_1</span> + Number);\n    }\n  }\n  if (<span class=\"supfact\">local_18</span> == -Number) {\n    ShowError(String, <span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>);\n    if (<span class=\"supfact\">param_3</span> == Number) {\n      <span class=\"supfact\">param_3</span> = Number;\n    }\n    intif_request_registry(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_3</span>);\n    <span class=\"supfact\">lVar2</span> = Number;\n  } else {\n    <span class=\"supfact\">local_14</span> = Number;\n    while ((<span class=\"supfact\">local_14</span> < <span class=\"supfact\">local_18</span> &&\n            (<span class=\"supfact\">iVar1</span> =\n                 strcmp((char *)(<span class=\"supfact\">local_10</span> +\n                                 (long)<span class=\"supfact\">local_14</span> * Number),\n                        <span class=\"supfact\">param_2</span>),\n             <span class=\"supfact\">iVar1</span> != Number))) {\n      <span class=\"supfact\">local_14</span> = <span class=\"supfact\">local_14</span> + Number;\n    }\n    if (<span class=\"supfact\">local_14</span> < <span class=\"supfact\">local_18</span>) {\n      <span class=\"supfact\">lVar2</span> = <span class=\"supfact\">local_10</span> +\n                              (long)<span class=\"supfact\">local_14</span> * Number + Number;\n    } else {\n      <span class=\"supfact\">lVar2</span> = Number;\n    }\n  }\n  return <span class=\"supfact\">lVar2</span>;\n}", "code_t": "bool *pc_readregistry_str(map_session_data *<span class=\"supfact\">sd</span>,\n                          char *<span class=\"supfact\">reg</span>, int <span class=\"supfact\">type</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  bool *<span class=\"supfact\">pbVar2</span>;\n  int <span class=\"supfact\">type</span> - local;\n  char *<span class=\"supfact\">reg</span> - local;\n  map_session_data *<span class=\"supfact\">sd</span> - local;\n  int <span class=\"supfact\">max</span>;\n  int <span class=\"supfact\">i</span>;\n  global_reg *<span class=\"supfact\">sd_reg</span>;\n  if (<span class=\"supfact\">type</span> == Number) {\n    <span class=\"supfact\">sd_reg</span> = (<span class=\"supfact\">sd</span>->save_reg).global;\n    <span class=\"supfact\">max</span> = (<span class=\"supfact\">sd</span>->save_reg).global_num;\n  } else {\n    if (Number < <span class=\"supfact\">type</span>) {\n      return (bool *)Number;\n    }\n    if (<span class=\"supfact\">type</span> == Number) {\n      <span class=\"supfact\">sd_reg</span> = (<span class=\"supfact\">sd</span>->save_reg).account2;\n      <span class=\"supfact\">max</span> = (<span class=\"supfact\">sd</span>->save_reg).account2_num;\n    } else {\n      if (<span class=\"supfact\">type</span> != Number) {\n        return (bool *)Number;\n      }\n      <span class=\"supfact\">sd_reg</span> = (<span class=\"supfact\">sd</span>->save_reg).account;\n      <span class=\"supfact\">max</span> = (<span class=\"supfact\">sd</span>->save_reg).account_num;\n    }\n  }\n  if (<span class=\"supfact\">max</span> == -Number) {\n    ShowError(String, <span class=\"supfact\">reg</span>, <span class=\"supfact\">type</span>);\n    if (<span class=\"supfact\">type</span> == Number) {\n      <span class=\"supfact\">type</span> = Number;\n    }\n    intif_request_registry(<span class=\"supfact\">sd</span>, <span class=\"supfact\">type</span>);\n    <span class=\"supfact\">pbVar2</span> = (bool *)Number;\n  } else {\n    <span class=\"supfact\">i</span> = Number;\n    while ((<span class=\"supfact\">i</span> < <span class=\"supfact\">max</span> &&\n            (<span class=\"supfact\">iVar1</span> =\n                 strcmp(<span class=\"supfact\">sd_reg</span>[<span class=\"supfact\">i</span>].str,\n                        <span class=\"supfact\">reg</span>),\n             <span class=\"supfact\">iVar1</span> != Number))) {\n      <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n    }\n    if (<span class=\"supfact\">i</span> < <span class=\"supfact\">max</span>) {\n      <span class=\"supfact\">pbVar2</span> = <span class=\"supfact\">sd_reg</span>[<span class=\"supfact\">i</span>].value;\n    } else {\n      <span class=\"supfact\">pbVar2</span> = (bool *)Number;\n    }\n  }\n  return <span class=\"supfact\">pbVar2</span>;\n}", "var": [{"name": "param_1", "type": "map_session_data * *", "pred_name": "sd", "ref_name": "sd", "ref_type": "map_session_data * *"}, {"name": "param_2", "type": "char * *", "pred_name": "reg", "ref_name": "reg", "ref_type": "char * *"}, {"name": "param_3", "type": "int", "pred_name": "type", "ref_name": "type", "ref_type": "int"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "lVar2", "type": "long", "pred_name": "lVar2", "ref_name": "pbVar2", "ref_type": "bool * *"}, {"name": "local_18", "type": "int", "pred_name": "max", "ref_name": "max", "ref_type": "int"}, {"name": "local_14", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}, {"name": "local_10", "type": "__unk__", "pred_name": "__unk__", "ref_name": "sd_reg", "ref_type": "global_reg * *"}], "body_in_train": false}, {"repo_owner": "LiveMirror", "repo_name": "tbox", "path": "LiveMirror/tbox/b83e3bf145bca66eab41aeef351827f79dca6b51bf8990b3a6c23d14de214a3a", "path_in_repo": "LiveMirror/tbox//build/.xmake/xmake-master/core/src/tbox/src/tbox/string/string.o", "objdump": "00000000000000ed <tb_string_clear>:\n      ed:\t48 83 ec 28          \tsub    $0x28,%rsp\n      f1:\t48 89 7c 24 08       \tmov    %rdi,0x8(%rsp)\n      f6:\t48 83 7c 24 08 00    \tcmpq   $0x0,0x8(%rsp)\n      fc:\t74 31                \tje     12f <tb_string_clear+0x42>\n      fe:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     103:\t48 89 c7             \tmov    %rax,%rdi\n     106:\te8 00 00 00 00       \tcall   10b <tb_string_clear+0x1e>\n     10b:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     110:\t48 89 c7             \tmov    %rax,%rdi\n     113:\te8 00 00 00 00       \tcall   118 <tb_string_clear+0x2b>\n     118:\t48 89 44 24 18       \tmov    %rax,0x18(%rsp)\n     11d:\t48 83 7c 24 18 00    \tcmpq   $0x0,0x18(%rsp)\n     123:\t74 0b                \tje     130 <tb_string_clear+0x43>\n     125:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     12a:\tc6 00 00             \tmovb   $0x0,(%rax)\n     12d:\teb 01                \tjmp    130 <tb_string_clear+0x43>\n     12f:\t90                   \tnop\n     130:\t48 83 c4 28          \tadd    $0x28,%rsp\n     134:\tc3                   \tret    ", "code_s": "void tb_string_clear(long <span class=\"supfact\">param_1</span>) {\n  undefined *<span class=\"supfact\">puVar1</span>;\n  if (<span class=\"supfact\">param_1</span> != Number) {\n    tb_buffer_clear(<span class=\"supfact\">param_1</span>);\n    <span class=\"supfact\">puVar1</span> =\n        (undefined *)tb_buffer_data(<span class=\"supfact\">param_1</span>);\n    if (<span class=\"supfact\">puVar1</span> != (undefined *)Number) {\n      *<span class=\"supfact\">puVar1</span> = Number;\n    }\n  }\n  return;\n}", "code_t": "void tb_string_clear(tb_string_ref_t <span class=\"supfact\">string</span>) {\n  undefined *<span class=\"supfact\">puVar1</span>;\n  tb_string_ref_t <span class=\"supfact\">string</span> - local;\n  tb_char_t *p;\n  if (<span class=\"supfact\">string</span> != (tb_string_ref_t)Number) {\n    tb_buffer_clear(<span class=\"supfact\">string</span>);\n    <span class=\"supfact\">puVar1</span> =\n        (undefined *)tb_buffer_data(<span class=\"supfact\">string</span>);\n    if (<span class=\"supfact\">puVar1</span> != (undefined *)Number) {\n      *<span class=\"supfact\">puVar1</span> = Number;\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "buffer * *", "pred_name": "b", "ref_name": "string", "ref_type": "tb_string_ref_t"}, {"name": "puVar1", "type": "buffer * *", "pred_name": "pbVar1", "ref_name": "puVar1", "ref_type": "undefined * *"}], "body_in_train": false}, {"repo_owner": "clobber", "repo_name": "UME", "path": "clobber/UME/86a2a9e30a3d981974a4dc76bf5c0bbf081b965f8197996d6c62dd638ec34081", "path_in_repo": "clobber/UME/mame/obj/sdl64/mame/drivers/segac2.o", "objdump": "", "code_s": "void __thiscall segac2_state\nmachine_reset_segac2(segac2_state *<span class=\"supfact\">this</span>) {\n  uint <span class=\"supfact\">uVar1</span>;\n  running_machine *prVar2;\n  memory_region *pmVar3;\n  long lVar4;\n  undefined8 uVar5;\n  segac2_bg_pal_lookup._0_4_ = Number;\n  segac2_bg_pal_lookup._4_4_ = Number;\n  segac2_bg_pal_lookup._8_4_ = Number;\n  segac2_bg_pal_lookup._12_4_ = Number;\n  segac2_sp_pal_lookup._0_4_ = Number;\n  segac2_sp_pal_lookup._4_4_ = Number;\n  segac2_sp_pal_lookup._8_4_ = Number;\n  segac2_sp_pal_lookup._12_4_ = Number;\n  prVar2 =\n      (running_machine *)device_t machine((device_t *)<span class=\"supfact\">this</span>);\n  megadriv_reset_vdp(prVar2);\n  <span class=\"supfact\">this</span>[Number] = (segac2_state)Number;\n  pmVar3 = (memory_region *)device_t memregion((char *)<span class=\"supfact\">this</span>);\n  lVar4 = memory_region base(pmVar3);\n  if (lVar4 != Number) {\n    pmVar3 = (memory_region *)device_t memregion((char *)<span class=\"supfact\">this</span>);\n    <span class=\"supfact\">uVar1</span> = memory_region bytes(pmVar3);\n    <span class=\"supfact\">this</span>[Number] =\n        SUB41(<span class=\"supfact\">uVar1</span> >> Number, Number);\n  }\n  <span class=\"supfact\">this</span>[Number] = (segac2_state)Number;\n  <span class=\"supfact\">this</span>[Number] = (segac2_state)Number;\n  <span class=\"supfact\">this</span>[Number] = (segac2_state)Number;\n  <span class=\"supfact\">this</span>[Number] = (segac2_state)Number;\n  <span class=\"supfact\">this</span>[Number] = (segac2_state)Number;\n  <span class=\"supfact\">this</span>[Number] = (segac2_state)Number;\n  uVar5 = device_t machine((device_t *)<span class=\"supfact\">this</span>);\n  FUN_00100602(uVar5);\n  return;\n}", "code_t": "void __thiscall segac2_state\nmachine_reset_segac2(segac2_state *<span class=\"supfact\">this</span>) {\n  UINT32 <span class=\"supfact\">UVar1</span>;\n  running_machine *prVar2;\n  memory_region *pmVar3;\n  UINT8 *pUVar4;\n  segac2_state *<span class=\"supfact\">this</span> - local;\n  segac2_bg_pal_lookup[Number] = Number;\n  segac2_bg_pal_lookup[Number] = Number;\n  segac2_bg_pal_lookup[Number] = Number;\n  segac2_bg_pal_lookup[Number] = Number;\n  segac2_sp_pal_lookup[Number] = Number;\n  segac2_sp_pal_lookup[Number] = Number;\n  segac2_sp_pal_lookup[Number] = Number;\n  segac2_sp_pal_lookup[Number] = Number;\n  prVar2 = device_t machine((device_t *)<span class=\"supfact\">this</span>);\n  megadriv_reset_vdp((running_machine *)prVar2);\n  <span class=\"supfact\">this</span>->m_sound_banks = String;\n  pmVar3 = (memory_region *)device_t memregion((char *)<span class=\"supfact\">this</span>);\n  pUVar4 = memory_region base(pmVar3);\n  if (pUVar4 != (UINT8 *)Number) {\n    pmVar3 = (memory_region *)device_t memregion((char *)<span class=\"supfact\">this</span>);\n    <span class=\"supfact\">UVar1</span> = memory_region bytes(pmVar3);\n    <span class=\"supfact\">this</span>->m_sound_banks =\n        (UINT8)(<span class=\"supfact\">UVar1</span> >> Number);\n  }\n  <span class=\"supfact\">this</span>->m_prot_write_buf = String;\n  <span class=\"supfact\">this</span>->m_prot_read_buf = String;\n  <span class=\"supfact\">this</span>->m_segac2_alt_palette_mode = String;\n  <span class=\"supfact\">this</span>->m_palbank = String;\n  <span class=\"supfact\">this</span>->m_bg_palbase = String;\n  <span class=\"supfact\">this</span>->m_sp_palbase = String;\n  prVar2 = device_t machine((device_t *)<span class=\"supfact\">this</span>);\n  recompute_palette_tables(prVar2);\n  return;\n}", "var": [{"name": "this", "type": "__unk__", "pred_name": "this", "ref_name": "this", "ref_type": "segac2_state * *"}, {"name": "uVar1", "type": "gboolean", "pred_name": "gVar1", "ref_name": "UVar1", "ref_type": "UINT32"}], "body_in_train": false}, {"repo_owner": "zhenghuijie", "repo_name": "learngit", "path": "zhenghuijie/learngit/0e47c0a69f7e19d502c885020daf726fe4b202dede7dfc3dc2403c1c9deea1ae", "path_in_repo": "zhenghuijie/learngit/third_party/open_xl2tpd/avp.o", "objdump": "0000000000002c76 <chalresp_avp>:\n    2c76:\t55                   \tpush   %rbp\n    2c77:\t48 89 e5             \tmov    %rsp,%rbp\n    2c7a:\t48 83 ec 30          \tsub    $0x30,%rsp\n    2c7e:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    2c82:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    2c86:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    2c8a:\t89 4d d4             \tmov    %ecx,-0x2c(%rbp)\n    2c8d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    2c91:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    2c95:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2c99:\t8b 80 48 04 00 00    \tmov    0x448(%rax),%eax\n    2c9f:\t85 c0                \ttest   %eax,%eax\n    2ca1:\t0f 84 16 01 00 00    \tje     2dbd <chalresp_avp+0x147>\n    2ca7:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    2cab:\t8b 40 3c             \tmov    0x3c(%rax),%eax\n    2cae:\t83 e8 02             \tsub    $0x2,%eax\n    2cb1:\t83 f8 01             \tcmp    $0x1,%eax\n    2cb4:\t76 75                \tjbe    2d2b <chalresp_avp+0xb5>\n    2cb6:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n    2cbb:\t74 27                \tje     2ce4 <chalresp_avp+0x6e>\n    2cbd:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    2cc1:\t8b 40 38             \tmov    0x38(%rax),%eax\n    2cc4:\t85 c0                \ttest   %eax,%eax\n    2cc6:\t75 0b                \tjne    2cd3 <chalresp_avp+0x5d>\n    2cc8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2ccc:\t8b 40 68             \tmov    0x68(%rax),%eax\n    2ccf:\t85 c0                \ttest   %eax,%eax\n    2cd1:\t74 07                \tje     2cda <chalresp_avp+0x64>\n    2cd3:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    2cd8:\teb 05                \tjmp    2cdf <chalresp_avp+0x69>\n    2cda:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2cdf:\t83 e0 01             \tand    $0x1,%eax\n    2ce2:\teb 0c                \tjmp    2cf0 <chalresp_avp+0x7a>\n    2ce4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2ce8:\t8b 40 68             \tmov    0x68(%rax),%eax\n    2ceb:\t85 c0                \ttest   %eax,%eax\n    2ced:\t0f 95 c0             \tsetne  %al\n    2cf0:\t84 c0                \ttest   %al,%al\n    2cf2:\t74 2d                \tje     2d21 <chalresp_avp+0xab>\n    2cf4:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    2cf8:\t8b 40 3c             \tmov    0x3c(%rax),%eax\n    2cfb:\t48 98                \tcltq   \n    2cfd:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    2d04:\t00 \n    2d05:\t48 89 c1             \tmov    %rax,%rcx\n    2d08:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2d0d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2d12:\tbf 07 00 00 00       \tmov    $0x7,%edi\n    2d17:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2d1c:\te8 00 00 00 00       \tcall   2d21 <chalresp_avp+0xab>\n    2d21:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2d26:\te9 2b 01 00 00       \tjmp    2e56 <chalresp_avp+0x1e0>\n    2d2b:\t90                   \tnop\n    2d2c:\t83 7d d4 05          \tcmpl   $0x5,-0x2c(%rbp)\n    2d30:\t0f 8f 87 00 00 00    \tjg     2dbd <chalresp_avp+0x147>\n    2d36:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n    2d3b:\t74 27                \tje     2d64 <chalresp_avp+0xee>\n    2d3d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    2d41:\t8b 40 38             \tmov    0x38(%rax),%eax\n    2d44:\t85 c0                \ttest   %eax,%eax\n    2d46:\t75 0b                \tjne    2d53 <chalresp_avp+0xdd>\n    2d48:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2d4c:\t8b 40 68             \tmov    0x68(%rax),%eax\n    2d4f:\t85 c0                \ttest   %eax,%eax\n    2d51:\t74 07                \tje     2d5a <chalresp_avp+0xe4>\n    2d53:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    2d58:\teb 05                \tjmp    2d5f <chalresp_avp+0xe9>\n    2d5a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2d5f:\t83 e0 01             \tand    $0x1,%eax\n    2d62:\teb 0c                \tjmp    2d70 <chalresp_avp+0xfa>\n    2d64:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2d68:\t8b 40 68             \tmov    0x68(%rax),%eax\n    2d6b:\t85 c0                \ttest   %eax,%eax\n    2d6d:\t0f 95 c0             \tsetne  %al\n    2d70:\t84 c0                \ttest   %al,%al\n    2d72:\t74 1e                \tje     2d92 <chalresp_avp+0x11c>\n    2d74:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    2d77:\t89 c1                \tmov    %eax,%ecx\n    2d79:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2d7e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2d83:\tbf 07 00 00 00       \tmov    $0x7,%edi\n    2d88:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2d8d:\te8 00 00 00 00       \tcall   2d92 <chalresp_avp+0x11c>\n    2d92:\t8b 55 d4             \tmov    -0x2c(%rbp),%edx\n    2d95:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    2d99:\t41 b8 01 00 00 00    \tmov    $0x1,%r8d\n    2d9f:\t89 d1                \tmov    %edx,%ecx\n    2da1:\tba 06 00 00 00       \tmov    $0x6,%edx\n    2da6:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2dab:\t48 89 c7             \tmov    %rax,%rdi\n    2dae:\te8 00 00 00 00       \tcall   2db3 <chalresp_avp+0x13d>\n    2db3:\tb8 ea ff ff ff       \tmov    $0xffffffea,%eax\n    2db8:\te9 99 00 00 00       \tjmp    2e56 <chalresp_avp+0x1e0>\n    2dbd:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2dc1:\t0f b7 00             \tmovzwl (%rax),%eax\n    2dc4:\t0f b7 c0             \tmovzwl %ax,%eax\n    2dc7:\t25 ff 03 00 00       \tand    $0x3ff,%eax\n    2dcc:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    2dcf:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    2dd2:\t83 e8 06             \tsub    $0x6,%eax\n    2dd5:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    2dd8:\t83 7d f4 10          \tcmpl   $0x10,-0xc(%rbp)\n    2ddc:\t74 2b                \tje     2e09 <chalresp_avp+0x193>\n    2dde:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    2de1:\t41 b8 10 00 00 00    \tmov    $0x10,%r8d\n    2de7:\t89 c1                \tmov    %eax,%ecx\n    2de9:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2dee:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2df3:\tbf 07 00 00 00       \tmov    $0x7,%edi\n    2df8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2dfd:\te8 00 00 00 00       \tcall   2e02 <chalresp_avp+0x18c>\n    2e02:\tb8 ea ff ff ff       \tmov    $0xffffffea,%eax\n    2e07:\teb 4d                \tjmp    2e56 <chalresp_avp+0x1e0>\n    2e09:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2e0d:\t48 05 ac 03 00 00    \tadd    $0x3ac,%rax\n    2e13:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    2e17:\t48 83 c2 06          \tadd    $0x6,%rdx\n    2e1b:\t48 89 d1             \tmov    %rdx,%rcx\n    2e1e:\tba 10 00 00 00       \tmov    $0x10,%edx\n    2e23:\t48 89 c6             \tmov    %rax,%rsi\n    2e26:\t48 89 cf             \tmov    %rcx,%rdi\n    2e29:\te8 00 00 00 00       \tcall   2e2e <chalresp_avp+0x1b8>\n    2e2e:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2e34 <chalresp_avp+0x1be>\n    2e34:\t85 c0                \ttest   %eax,%eax\n    2e36:\t74 19                \tje     2e51 <chalresp_avp+0x1db>\n    2e38:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2e3d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2e42:\tbf 07 00 00 00       \tmov    $0x7,%edi\n    2e47:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2e4c:\te8 00 00 00 00       \tcall   2e51 <chalresp_avp+0x1db>\n    2e51:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2e56:\tc9                   \tleave  \n    2e57:\tc3                   \tret    ", "code_s": "undefined8 chalresp_avp(long <span class=\"supfact\">param_1</span>,\n                        long <span class=\"supfact\">param_2</span>,\n                        ushort *<span class=\"supfact\">param_3</span>,\n                        int <span class=\"supfact\">param_4</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  undefined8 <span class=\"supfact\">uVar2</span>;\n  bool <span class=\"supfact\">bVar3</span>;\n  if (*(int *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n    if (Number < *(int *)(<span class=\"supfact\">param_2</span> + Number) - Number) {\n      if (<span class=\"supfact\">param_2</span> == Number) {\n        <span class=\"supfact\">bVar3</span> =\n            *(int *)(<span class=\"supfact\">param_1</span> + Number) != Number;\n      } else if ((*(int *)(<span class=\"supfact\">param_2</span> + Number) == Number) &&\n                 (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number)) {\n        <span class=\"supfact\">bVar3</span> = false;\n      } else {\n        <span class=\"supfact\">bVar3</span> = true;\n      }\n      if (<span class=\"supfact\">bVar3</span>) {\n        l2tp_log(\n            Number, String, String,\n            *(undefined8 *)(msgtypes +\n                            (long)*(int *)(<span class=\"supfact\">param_2</span> + Number) *\n                                Number));\n      }\n      return Number;\n    }\n    if (<span class=\"supfact\">param_4</span> < Number) {\n      if (<span class=\"supfact\">param_2</span> == Number) {\n        <span class=\"supfact\">bVar3</span> =\n            *(int *)(<span class=\"supfact\">param_1</span> + Number) != Number;\n      } else if ((*(int *)(<span class=\"supfact\">param_2</span> + Number) == Number) &&\n                 (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number)) {\n        <span class=\"supfact\">bVar3</span> = false;\n      } else {\n        <span class=\"supfact\">bVar3</span> = true;\n      }\n      if (<span class=\"supfact\">bVar3</span>) {\n        l2tp_log(Number, String, String, <span class=\"supfact\">param_4</span>);\n      }\n      wrong_length(<span class=\"supfact\">param_2</span>, String, Number,\n                   <span class=\"supfact\">param_4</span>, Number);\n      return Number;\n    }\n  }\n  <span class=\"supfact\">iVar1</span> = (*<span class=\"supfact\">param_3</span> & Number) - Number;\n  if (<span class=\"supfact\">iVar1</span> == Number) {\n    bcopy(<span class=\"supfact\">param_3</span> + Number,\n          (void *)(<span class=\"supfact\">param_1</span> + Number), Number);\n    if (_DAT_00107210 != Number) {\n      l2tp_log(Number, String, String);\n    }\n    <span class=\"supfact\">uVar2</span> = Number;\n  } else {\n    l2tp_log(Number, String, String, <span class=\"supfact\">iVar1</span>, Number);\n    <span class=\"supfact\">uVar2</span> = Number;\n  }\n  return <span class=\"supfact\">uVar2</span>;\n}", "code_t": "int chalresp_avp(tunnel *<span class=\"supfact\">t</span>, call *<span class=\"supfact\">c</span>,\n                 void *<span class=\"supfact\">data</span>, int <span class=\"supfact\">datalen</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  bool <span class=\"supfact\">bVar2</span>;\n  int <span class=\"supfact\">datalen</span> - local;\n  void *<span class=\"supfact\">data</span> - local;\n  call *<span class=\"supfact\">c</span> - local;\n  tunnel *<span class=\"supfact\">t</span> - local;\n  int size;\n  unaligned_u16 *raw;\n  if (<span class=\"supfact\">t</span>->sanity != Number) {\n    if (Number < <span class=\"supfact\">c</span>->msgtype - Number) {\n      if (<span class=\"supfact\">c</span> == (call *)Number) {\n        <span class=\"supfact\">bVar2</span> = <span class=\"supfact\">t</span>->debug != Number;\n      } else if ((<span class=\"supfact\">c</span>->debug == Number) &&\n                 (<span class=\"supfact\">t</span>->debug == Number)) {\n        <span class=\"supfact\">bVar2</span> = false;\n      } else {\n        <span class=\"supfact\">bVar2</span> = true;\n      }\n      if (<span class=\"supfact\">bVar2</span>) {\n        l2tp_log(Number, String, String,\n                 *(undefined8 *)(msgtypes +\n                                 (long)<span class=\"supfact\">c</span>->msgtype * Number));\n      }\n      return Number;\n    }\n    if (<span class=\"supfact\">datalen</span> < Number) {\n      if (<span class=\"supfact\">c</span> == (call *)Number) {\n        <span class=\"supfact\">bVar2</span> = <span class=\"supfact\">t</span>->debug != Number;\n      } else if ((<span class=\"supfact\">c</span>->debug == Number) &&\n                 (<span class=\"supfact\">t</span>->debug == Number)) {\n        <span class=\"supfact\">bVar2</span> = false;\n      } else {\n        <span class=\"supfact\">bVar2</span> = true;\n      }\n      if (<span class=\"supfact\">bVar2</span>) {\n        l2tp_log(Number, String, String, <span class=\"supfact\">datalen</span>);\n      }\n      wrong_length(<span class=\"supfact\">c</span>, String, Number, <span class=\"supfact\">datalen</span>,\n                   Number);\n      return -Number;\n    }\n  }\n  <span class=\"supfact\">iVar1</span> = (*<span class=\"supfact\">data</span> & Number) - Number;\n  if (<span class=\"supfact\">iVar1</span> == Number) {\n    bcopy((void *)((long)<span class=\"supfact\">data</span> + Number),\n          (<span class=\"supfact\">t</span>->chal_them).reply, Number);\n    if (_DAT_00107210 != Number) {\n      l2tp_log(Number, String, String);\n    }\n    <span class=\"supfact\">iVar1</span> = Number;\n  } else {\n    l2tp_log(Number, String, String, <span class=\"supfact\">iVar1</span>, Number);\n    <span class=\"supfact\">iVar1</span> = -Number;\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "param_1", "type": "option * *", "pred_name": "opt", "ref_name": "t", "ref_type": "tunnel * *"}, {"name": "param_2", "type": "char * *", "pred_name": "arg", "ref_name": "c", "ref_type": "call * *"}, {"name": "param_3", "type": "sendip_data * *", "pred_name": "pack", "ref_name": "data", "ref_type": "void * *"}, {"name": "param_4", "type": "int", "pred_name": "field", "ref_name": "datalen", "ref_type": "int"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "uVar2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "bVar3", "type": "bool", "pred_name": "bVar2", "ref_name": "bVar2", "ref_type": "bool"}], "body_in_train": false}, {"repo_owner": "EffieChantzi", "repo_name": "UCSC-Genome-Browser", "path": "EffieChantzi/UCSC-Genome-Browser/081abb7a0a81241e7b3d0defb363bedc145150d63a498486a38538393f4dc404", "path_in_repo": "EffieChantzi/UCSC-Genome-Browser/kent/src/hg/encode3/validateManifest/validateManifest.o", "objdump": "00000000000006fc <getChromInfo>:\n     6fc:\t55                   \tpush   %rbp\n     6fd:\t48 89 e5             \tmov    %rsp,%rbp\n     700:\t48 81 ec 20 01 00 00 \tsub    $0x120,%rsp\n     707:\t48 89 bd e8 fe ff ff \tmov    %rdi,-0x118(%rbp)\n     70e:\t48 8b 85 e8 fe ff ff \tmov    -0x118(%rbp),%rax\n     715:\t48 89 c7             \tmov    %rax,%rdi\n     718:\te8 00 00 00 00       \tcall   71d <getChromInfo+0x21>\n     71d:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     721:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 728 <getChromInfo+0x2c>\n     728:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n     72c:\t48 8d 85 f0 fe ff ff \tlea    -0x110(%rbp),%rax\n     733:\t49 89 c8             \tmov    %rcx,%r8\n     736:\t48 89 d1             \tmov    %rdx,%rcx\n     739:\tba 00 00 00 00       \tmov    $0x0,%edx\n     73e:\tbe 00 01 00 00       \tmov    $0x100,%esi\n     743:\t48 89 c7             \tmov    %rax,%rdi\n     746:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     74b:\te8 00 00 00 00       \tcall   750 <getChromInfo+0x54>\n     750:\t48 8d 85 f0 fe ff ff \tlea    -0x110(%rbp),%rax\n     757:\t48 89 c7             \tmov    %rax,%rdi\n     75a:\te8 00 00 00 00       \tcall   75f <getChromInfo+0x63>\n     75f:\tc9                   \tleave  \n     760:\tc3                   \tret    ", "code_s": "void getChromInfo(undefined8 <span class=\"supfact\">param_1</span>) {\n  undefined <span class=\"supfact\">local_118</span>[Number];\n  undefined8 <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = getGenome(<span class=\"supfact\">param_1</span>);\n  safef(<span class=\"supfact\">local_118</span>, Number, String, encValData,\n        <span class=\"supfact\">local_10</span>);\n  cloneString(<span class=\"supfact\">local_118</span>);\n  return;\n}", "code_t": "char *getChromInfo(char *<span class=\"supfact\">fileName</span>) {\n  char *pcVar1;\n  char *<span class=\"supfact\">fileName</span> - local;\n  char <span class=\"supfact\">chromInfo</span>[Number];\n  char *<span class=\"supfact\">genome</span>;\n  pcVar1 = getGenome(<span class=\"supfact\">fileName</span>);\n  safef(<span class=\"supfact\">chromInfo</span>, Number, String, encValData, pcVar1);\n  pcVar1 = (char *)cloneString(<span class=\"supfact\">chromInfo</span>);\n  return pcVar1;\n}", "var": [{"name": "param_1", "type": "bot_state_t * *", "pred_name": "bs", "ref_name": "fileName", "ref_type": "char * *"}, {"name": "local_118", "type": "char[256][256]", "pred_name": "__unk__", "ref_name": "chromInfo", "ref_type": "char[256][256]"}, {"name": "local_10", "type": "char * *", "pred_name": "__unk__", "ref_name": "genome", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "zxombie", "repo_name": "contiki-arduino", "path": "zxombie/contiki-arduino/fc4847432c08a79f51c3fba88339d1a31295571bc57ae2909e5b9a844aad4f6b", "path_in_repo": "zxombie/contiki-arduino/examples/compile-platforms/minimal-net/obj_minimal-net/neighbor.o", "objdump": "0000000000000249 <neighbor_update_etx>:\n 249:\t55                   \tpush   %rbp\n 24a:\t48 89 e5             \tmov    %rsp,%rbp\n 24d:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n 251:\t89 f0                \tmov    %esi,%eax\n 253:\t88 45 f4             \tmov    %al,-0xc(%rbp)\n 256:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n 25b:\t74 4b                \tje     2a8 <neighbor_update_etx+0x5f>\n 25d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 261:\t0f b6 40 0e          \tmovzbl 0xe(%rax),%eax\n 265:\t0f b6 c0             \tmovzbl %al,%eax\n 268:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n 26c:\t48 98                \tcltq   \n 26e:\t0f b6 4d f4          \tmovzbl -0xc(%rbp),%ecx\n 272:\t88 4c 02 0f          \tmov    %cl,0xf(%rdx,%rax,1)\n 276:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 27a:\t0f b6 40 0e          \tmovzbl 0xe(%rax),%eax\n 27e:\t0f b6 c0             \tmovzbl %al,%eax\n 281:\t8d 50 01             \tlea    0x1(%rax),%edx\n 284:\t89 d0                \tmov    %edx,%eax\n 286:\tc1 f8 1f             \tsar    $0x1f,%eax\n 289:\tc1 e8 1d             \tshr    $0x1d,%eax\n 28c:\t01 c2                \tadd    %eax,%edx\n 28e:\t83 e2 07             \tand    $0x7,%edx\n 291:\t29 c2                \tsub    %eax,%edx\n 293:\t89 d0                \tmov    %edx,%eax\n 295:\t89 c2                \tmov    %eax,%edx\n 297:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 29b:\t88 50 0e             \tmov    %dl,0xe(%rax)\n 29e:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 2a2:\t66 c7 40 08 00 00    \tmovw   $0x0,0x8(%rax)\n 2a8:\t90                   \tnop\n 2a9:\t5d                   \tpop    %rbp\n 2aa:\tc3                   \tret    ", "code_s": "void neighbor_update_etx(long <span class=\"supfact\">param_1</span>,\n                         undefined <span class=\"supfact\">param_2</span>) {\n  if (<span class=\"supfact\">param_1</span> != Number) {\n    *(undefined *)(<span class=\"supfact\">param_1</span> + Number +\n                   (long)(int)(uint) *\n                       (byte *)(<span class=\"supfact\">param_1</span> + Number)) =\n        <span class=\"supfact\">param_2</span>;\n    *(byte *)(<span class=\"supfact\">param_1</span> + Number) =\n        *(char *)(<span class=\"supfact\">param_1</span> + Number) + Number & Number;\n    *(undefined2 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  }\n  return;\n}", "code_t": "void neighbor_update_etx(neighbor *<span class=\"supfact\">n</span>,\n                         uint8_t <span class=\"supfact\">etx</span>) {\n  uint8_t <span class=\"supfact\">etx</span> - local;\n  neighbor *<span class=\"supfact\">n</span> - local;\n  if (<span class=\"supfact\">n</span> != (neighbor *)Number) {\n    <span class=\"supfact\">n</span>->etxs[(int)(uint)<span class=\"supfact\">n</span>->etxptr] =\n        <span class=\"supfact\">etx</span>;\n    <span class=\"supfact\">n</span>->etxptr = <span class=\"supfact\">n</span>->etxptr + Number & Number;\n    <span class=\"supfact\">n</span>->time = Number;\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "neighbor * *", "pred_name": "n", "ref_name": "n", "ref_type": "neighbor * *"}, {"name": "param_2", "type": "uint8_t", "pred_name": "etx", "ref_name": "etx", "ref_type": "uint8_t"}], "body_in_train": true}, {"repo_owner": "OS2World", "repo_name": "LIB-MM-libvpx", "path": "OS2World/LIB-MM-libvpx/a7088cfebd81848840fd3c4b6142aa0c7e187a711be54a9f44ccdb6471c56511", "path_in_repo": "OS2World/LIB-MM-libvpx/src/third_party/googletest/src/make/gtest-all.o", "objdump": "", "code_s": "void std\n_Destroy<testing internal TraceInfo>(TraceInfo *<span class=\"supfact\">param_1</span>) {\n  testing internal TraceInfo ~TraceInfo(<span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "void std\n_Destroy<testing internal TraceInfo>(TraceInfo *<span class=\"supfact\">__pointer</span>) {\n  int in_ESI;\n  TraceInfo *<span class=\"supfact\">__pointer</span> - local;\n  testing internal TraceInfo ~TraceInfo(<span class=\"supfact\">__pointer</span>, in_ESI);\n  return;\n}", "var": [{"name": "param_1", "type": "TraceInfo * *", "pred_name": "__pointer", "ref_name": "__pointer", "ref_type": "TraceInfo * *"}], "body_in_train": true}, {"repo_owner": "aerospike", "repo_name": "aerospike-common", "path": "aerospike/aerospike-common/63a1af67d49a03d641695fc81552de9124cb0e19f425e66f76dc111c17c28243", "path_in_repo": "aerospike/aerospike-common//target/Linux-x86_64/lib/libaerospike-common.so", "objdump": "000000000000e01d <as_list_init>:\n    e01d:\t55                   \tpush   %rbp\n    e01e:\t48 89 e5             \tmov    %rsp,%rbp\n    e021:\t48 83 ec 10          \tsub    $0x10,%rsp\n    e025:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    e029:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n    e02d:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    e031:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    e035:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    e03a:\t48 89 c7             \tmov    %rax,%rdi\n    e03d:\te8 be bb ff ff       \tcall   9c00 <as_list_cons@plt>\n    e042:\tc9                   \tleave  \n    e043:\tc3                   \tret    ", "code_s": "void as_list_init(undefined8 <span class=\"supfact\">param_1</span>,\n                  undefined8 <span class=\"supfact\">param_2</span>) {\n  as_list_cons(<span class=\"supfact\">param_1</span>, Number, <span class=\"supfact\">param_2</span>);\n  return;\n}", "code_t": "as_list *as_list_init(as_list *<span class=\"supfact\">list</span>,\n                      as_list_hooks *<span class=\"supfact\">hooks</span>) {\n  as_list *paVar1;\n  as_list_hooks *<span class=\"supfact\">hooks</span> - local;\n  as_list *<span class=\"supfact\">list</span> - local;\n  paVar1 = as_list_cons(<span class=\"supfact\">list</span>, false, <span class=\"supfact\">hooks</span>);\n  return paVar1;\n}", "var": [{"name": "param_1", "type": "t_gobj * *", "pred_name": "z", "ref_name": "list", "ref_type": "as_list * *"}, {"name": "param_2", "type": "_glist * *", "pred_name": "glist", "ref_name": "hooks", "ref_type": "as_list_hooks * *"}], "body_in_train": false}, {"repo_owner": "CentOS", "repo_name": "sig-core-t_ltp", "path": "CentOS/sig-core-t_ltp/11ab79dfe2ac8b3481a4f84c9c7524f50f30c4d56be635fd9854eba63ee1581b", "path_in_repo": "CentOS/sig-core-t_ltp/testcases/kernel/syscalls/fcntl/fcntl24", "objdump": "", "code_s": "__pid_t getpid(void) {\n  __pid_t <span class=\"supfact\">_Var1</span>;\n  <span class=\"supfact\">_Var1</span> = (*(code *)PTR_getpid_00409088)();\n  return <span class=\"supfact\">_Var1</span>;\n}", "code_t": "__pid_t getpid(void) {\n  __pid_t <span class=\"supfact\">_Var1</span>;\n  <span class=\"supfact\">_Var1</span> = (*(code *)PTR_getpid_00409088)();\n  return <span class=\"supfact\">_Var1</span>;\n}", "var": [{"name": "_Var1", "type": "__pid_t", "pred_name": "_Var1", "ref_name": "_Var1", "ref_type": "__pid_t"}], "body_in_train": true}, {"repo_owner": "aq2-tng", "repo_name": "aq2-tng", "path": "aq2-tng/aq2-tng/43e681d087f9ed1a168a137a401ee222fa6ebcd715ca8f3aeedd4192e8155940", "path_in_repo": "aq2-tng/aq2-tng/source/gamex86_64.so", "objdump": "", "code_s": "double atof(char *__nptr) {\n  double <span class=\"supfact\">dVar1</span>;\n  <span class=\"supfact\">dVar1</span> = (double)(*(code *)PTR_atof_001b7238)();\n  return <span class=\"supfact\">dVar1</span>;\n}", "code_t": "double atof(char *__nptr) {\n  double <span class=\"supfact\">dVar1</span>;\n  <span class=\"supfact\">dVar1</span> = (double)(*(code *)PTR_atof_001b7238)();\n  return <span class=\"supfact\">dVar1</span>;\n}", "var": [{"name": "dVar1", "type": "double", "pred_name": "dVar1", "ref_name": "dVar1", "ref_type": "double"}], "body_in_train": false}, {"repo_owner": "krysmopompas", "repo_name": "OpenFrameworks-ng", "path": "krysmopompas/OpenFrameworks-ng/de36bc7eae88737dd1ca3a520e345a9004147d71e253192a8e7d66f6e65e74c1", "path_in_repo": "krysmopompas/OpenFrameworks-ng/extern/trees/poco/Net/obj/Linux/x86_64/debug_shared/HTTPDigestCredentials.o", "objdump": "", "code_s": "void __thiscall std _Rb_tree<\n    std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>,\n    std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                      std allocator<char>> const,\n             int>,\n    std _Select1st<\n        std pair<std __cxx11 basic_string<char, std char_traits<char>,\n                                          std allocator<char>> const,\n                 int>>,\n    std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                      std allocator<char>>>,\n    std allocator<std pair<\n        std __cxx11 basic_string<char, std char_traits<char>,\n                                 std allocator<char>> const,\n        int>>> ~_Rb_tree(_Rb_tree<std __cxx11\n                                      basic_string<char, std char_traits<char>,\n                                                   std allocator<char>>,\n                                  std pair<std __cxx11 basic_string<\n                                               char, std char_traits<char>,\n                                               std allocator<char>> const,\n                                           int>,\n                                  std _Select1st<\n                                      std pair<std __cxx11 basic_string<\n                                                   char, std char_traits<char>,\n                                                   std allocator<char>> const,\n                                               int>>,\n                                  std less<std __cxx11 basic_string<\n                                      char, std char_traits<char>,\n                                      std allocator<char>>>,\n                                  std allocator<\n                                      std pair<std __cxx11 basic_string<\n                                                   char, std char_traits<char>,\n                                                   std allocator<char>> const,\n                                               int>>> *<span class=\"supfact\">this</span>) {\n  _Rb_tree_node *<span class=\"supfact\">p_Var1</span>;\n  <span class=\"supfact\">p_Var1</span> = (_Rb_tree_node *)_M_begin(<span class=\"supfact\">this</span>);\n  _M_erase(<span class=\"supfact\">this</span>, <span class=\"supfact\">p_Var1</span>);\n  _Rb_tree_impl<\n      std less<std __cxx11 basic_string<char, std char_traits<char>,\n                                        std allocator<char>>>,\n      true> ~_Rb_tree_impl((_Rb_tree_impl<std\n                                              less<std __cxx11 basic_string<\n                                                  char, std char_traits<char>,\n                                                  std allocator<char>>>,\n                                          true> *)<span class=\"supfact\">this</span>);\n  return;\n}", "code_t": "void __thiscall std _Rb_tree<\n    std __cxx11\n        basic_string<char, _std char_traits<char>, _std allocator<char> _>,\n    _std pair<const_std __cxx11 basic_string<char, _std char_traits<char>,\n                                             _std allocator<char> _>,\n              _int>,\n    _std _Select1st<\n        std pair<const_std __cxx11 basic_string<char, _std char_traits<char>,\n                                                _std allocator<char> _>,\n                 _int>\n            _>,\n    _std less<std __cxx11 basic_string<char, _std char_traits<char>,\n                                       _std allocator<char> _>\n                  _>,\n    _std allocator<\n        std pair<const_std __cxx11 basic_string<char, _std char_traits<char>,\n                                                _std allocator<char> _>,\n                 _int>\n            _>\n        _> ~_Rb_tree(_Rb_tree<std __cxx11\n                                  basic_string<char, _std char_traits<char>,\n                                               _std allocator<char> _>,\n                              _std pair<const_std __cxx11 basic_string<\n                                            char, _std char_traits<char>,\n                                            _std allocator<char> _>,\n                                        _int>,\n                              _std _Select1st<\n                                  std pair<const_std __cxx11 basic_string<\n                                               char, _std char_traits<char>,\n                                               _std allocator<char> _>,\n                                           _int>\n                                      _>,\n                              _std less<std __cxx11 basic_string<\n                                  char, _std char_traits<char>,\n                                  _std allocator<char> _>\n                                            _>,\n                              _std allocator<\n                                  std pair<const_std __cxx11 basic_string<\n                                               char, _std char_traits<char>,\n                                               _std allocator<char> _>,\n                                           _int>\n                                      _>\n                                  _> *<span class=\"supfact\">this</span>,\n                     int __in_chrg) {\n  _Link_type <span class=\"supfact\">__x</span>;\n  _Rb_tree<\n      std __cxx11\n          basic_string<char, _std char_traits<char>, _std allocator<char> _>,\n      _std pair<const_std __cxx11 basic_string<char, _std char_traits<char>,\n                                               _std allocator<char> _>,\n                _int>,\n      _std _Select1st<\n          std pair<const_std __cxx11 basic_string<char, _std char_traits<char>,\n                                                  _std allocator<char> _>,\n                   _int>\n              _>,\n      _std less<std __cxx11 basic_string<char, _std char_traits<char>,\n                                         _std allocator<char> _>\n                    _>,\n      _std allocator<\n          std pair<const_std __cxx11 basic_string<char, _std char_traits<char>,\n                                                  _std allocator<char> _>,\n                   _int>\n              _>\n          _> *<span class=\"supfact\">this</span> -\n      local;\n  <span class=\"supfact\">__x</span> = _M_begin(<span class=\"supfact\">this</span>);\n  _M_erase(<span class=\"supfact\">this</span>, <span class=\"supfact\">__x</span>);\n  _Rb_tree_impl<std less<std __cxx11 basic_string<char, _std char_traits<char>,\n                                                  _std allocator<char> _>\n                             _>,\n                _true> ~_Rb_tree_impl(&<span class=\"supfact\">this</span>->_M_impl,\n                                      (int)<span class=\"supfact\">__x</span>);\n  return;\n}", "var": [{"name": "p_Var1", "type": "_Node_allocator * *", "pred_name": "__a", "ref_name": "__x", "ref_type": "_Link_type"}, {"name": "this", "type": "_Rb_tree<std::__cxx11::basic_string<char,_std::char_traits<char>,_std::allocator<char>_>,_std::pair<const_std::__cxx11::basic_string<char,_std::char_traits<char>,_std::allocator<char>_>,_std::__cxx11::basic_string<char,_std::char_traits<char>,_std::allocator<char>_>_>,_std::_Select1st<std::pair<const_std::__cxx11::basic_string<char,_std::char_traits<char>,_std::allocator<char>_>,_std::__cxx11::basic_string<char,_std::char_traits<char>,_std::allocator<char>_>_>_>,_std::less<std::__cxx11::basic_string<char,_std::char_traits<char>,_std::allocator<char>_>_>,_std::allocator<std::pair<const_std::__cxx11::basic_string<char,_std::char_traits<char>,_std::allocator<char>_>,_std::__cxx11::basic_string<char,_std::char_traits<char>,_std::allocator<char>_>_>_>_> * *", "pred_name": "this", "ref_name": "this", "ref_type": "_Rb_tree<std::__cxx11::basic_string<char,_std::char_traits<char>,_std::allocator<char>_>,_std::pair<const_std::__cxx11::basic_string<char,_std::char_traits<char>,_std::allocator<char>_>,_int>,_std::_Select1st<std::pair<const_std::__cxx11::basic_string<char,_std::char_traits<char>,_std::allocator<char>_>,_int>_>,_std::less<std::__cxx11::basic_string<char,_std::char_traits<char>,_std::allocator<char>_>_>,_std::allocator<std::pair<const_std::__cxx11::basic_string<char,_std::char_traits<char>,_std::allocator<char>_>,_int>_>_> * *"}], "body_in_train": true}, {"repo_owner": "izenecloud", "repo_name": "icma", "path": "izenecloud/icma/80653f800bf1886f7190aea2d6a36d9e85b83f0e9f1dd6ef7e1481359bef5848", "path_in_repo": "izenecloud/icma//source/src/analyzer.o", "objdump": "", "code_s": "void __thiscall std\n    allocator<double> ~allocator(allocator<double> *<span class=\"supfact\">this</span>) {\n  __gnu_cxx new_allocator<double> ~new_allocator(\n      (new_allocator<double> *)<span class=\"supfact\">this</span>);\n  return;\n}", "code_t": "void __thiscall std\n    allocator<double> ~allocator(allocator<double> *<span class=\"supfact\">this</span>,\n                                 int __in_chrg) {\n  allocator<double> *<span class=\"supfact\">this</span> - local;\n  __gnu_cxx new_allocator<double> ~new_allocator(\n      (new_allocator<double> *)<span class=\"supfact\">this</span>, __in_chrg);\n  return;\n}", "var": [{"name": "this", "type": "__unk__", "pred_name": "this", "ref_name": "this", "ref_type": "allocator<double> * *"}], "body_in_train": true}, {"repo_owner": "TimedSDN", "repo_name": "Yuma-Time", "path": "TimedSDN/Yuma-Time/6e4d353a9e8876fde195a83c32d7ee3db4d369a5ebd17a8537b3b08e05b9e2c6", "path_in_repo": "TimedSDN/Yuma-Time/netconf/test/sys-test/output/device-tests-merge.o", "objdump": "", "code_s": "void __thiscall YumaTest DTMerge ComplexExistingItems\nComplexExistingItems(ComplexExistingItems *<span class=\"supfact\">this</span>) {\n  YumaTest DeviceModuleFixture DeviceModuleFixture(\n      (DeviceModuleFixture *)<span class=\"supfact\">this</span>);\n  *(undefined ***)<span class=\"supfact\">this</span> = &PTR_ ~ComplexExistingItems_00105e68;\n  return;\n}", "code_t": "void __thiscall YumaTest DTMerge ComplexExistingItems\nComplexExistingItems(ComplexExistingItems *<span class=\"supfact\">this</span>) {\n  ComplexExistingItems *<span class=\"supfact\">this</span> - local;\n  YumaTest DeviceModuleFixture DeviceModuleFixture(\n      &<span class=\"supfact\">this</span>->super_DeviceModuleFixture);\n  *(undefined ***)<span class=\"supfact\">this</span> = &PTR_ ~ComplexExistingItems_00105e68;\n  return;\n}", "var": [{"name": "this", "type": "ExecDeathTest * *", "pred_name": "this", "ref_name": "this", "ref_type": "ComplexExistingItems * *"}], "body_in_train": false}, {"repo_owner": "hawkproject", "repo_name": "hawkproject", "path": "hawkproject/hawkproject/9c3a7fb0b1a2a337b45d1abe3932242a01ec9a60df3f0f11e1c524460e26b307", "path_in_repo": "hawkproject/hawkproject/HawkUtil/debug/objs/HawkMsgPump.o", "objdump": "", "code_s": "undefined8 __thiscall Hawk HawkMsgPump Send(HawkMsgPump *<span class=\"supfact\">this</span>,\n                                            HawkMsg *<span class=\"supfact\">param_1</span>) {\n  char <span class=\"supfact\">cVar1</span>;\n  long lVar2;\n  long *plVar3;\n  undefined8 uVar4;\n  HawkMsg *<span class=\"supfact\">local_38</span>;\n  HawkMsgPump *<span class=\"supfact\">local_30</span>;\n  undefined8 <span class=\"supfact\">local_28</span>;\n  undefined8 <span class=\"supfact\">local_20</span>;\n  undefined8 <span class=\"supfact\">local_18</span>;\n  undefined8 <span class=\"supfact\">local_10</span>;\n  if (<span class=\"supfact\">param_1</span> == (HawkMsg *)Number) {\n    uVar4 = Number;\n  } else {\n    <span class=\"supfact\">local_38</span> = <span class=\"supfact\">param_1</span>;\n    <span class=\"supfact\">local_30</span> = <span class=\"supfact\">this</span>;\n    <span class=\"supfact\">local_20</span> = std map<\n        int,\n        std map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                std less<Hawk HawkMsgListener *>,\n                std allocator<std pair<Hawk HawkMsgListener *const,\n                                       Hawk HawkMsgListener *>>>,\n        std less<int>,\n        std allocator<\n            std pair<int_const,\n                     std map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                             std less<Hawk HawkMsgListener *>,\n                             std allocator<std pair<Hawk HawkMsgListener *const,\n                                                    Hawk HawkMsgListener *>>>>>>\n        find(\n            (map<int,\n                 std map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                         std less<Hawk HawkMsgListener *>,\n                         std allocator<std pair<Hawk HawkMsgListener *const,\n                                                Hawk HawkMsgListener *>>>,\n                 std less<int>,\n                 std allocator<std pair<\n                     int_const,\n                     std map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                             std less<Hawk HawkMsgListener *>,\n                             std allocator<std pair<Hawk HawkMsgListener *const,\n                                                    Hawk HawkMsgListener *>>>>>>\n                 *)(<span class=\"supfact\">this</span> + Number),\n            (int *)(<span class=\"supfact\">param_1</span> + Number));\n    <span class=\"supfact\">local_18</span> = std map<\n        int,\n        std map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                std less<Hawk HawkMsgListener *>,\n                std allocator<std pair<Hawk HawkMsgListener *const,\n                                       Hawk HawkMsgListener *>>>,\n        std less<int>,\n        std allocator<\n            std pair<int_const,\n                     std map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                             std less<Hawk HawkMsgListener *>,\n                             std allocator<std pair<Hawk HawkMsgListener *const,\n                                                    Hawk HawkMsgListener *>>>>>>\n        end((map<int,\n                 std map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                         std less<Hawk HawkMsgListener *>,\n                         std allocator<std pair<Hawk HawkMsgListener *const,\n                                                Hawk HawkMsgListener *>>>,\n                 std less<int>,\n                 std allocator<std pair<\n                     int_const,\n                     std map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                             std less<Hawk HawkMsgListener *>,\n                             std allocator<std pair<Hawk HawkMsgListener *const,\n                                                    Hawk HawkMsgListener *>>>>>>\n                 *)(<span class=\"supfact\">local_30</span> + Number));\n    <span class=\"supfact\">cVar1</span> =\n        std operator!=((_Rb_tree_iterator *)&<span class=\"supfact\">local_20</span>,\n                       (_Rb_tree_iterator *)&<span class=\"supfact\">local_18</span>);\n    if (<span class=\"supfact\">cVar1</span> != String) {\n      lVar2 =\n          std _Rb_tree_iterator<std pair<\n              int_const,\n              std map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                      std less<Hawk HawkMsgListener *>,\n                      std allocator<std pair<Hawk HawkMsgListener *const,\n                                             Hawk HawkMsgListener *>>>>>\n          operator->(\n              (_Rb_tree_iterator<std pair<\n                   int_const,\n                   std map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                           std less<Hawk HawkMsgListener *>,\n                           std allocator<std pair<Hawk HawkMsgListener *const,\n                                                  Hawk HawkMsgListener *>>>>>\n                   *)&<span class=\"supfact\">local_20</span>);\n      <span class=\"supfact\">local_28</span> =\n          std map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                  std less<Hawk HawkMsgListener *>,\n                  std allocator<std pair<Hawk HawkMsgListener *const,\n                                         Hawk HawkMsgListener *>>>\n              begin((map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                         std less<Hawk HawkMsgListener *>,\n                         std allocator<std pair<Hawk HawkMsgListener *const,\n                                                Hawk HawkMsgListener *>>>\n                         *)(lVar2 + Number));\n      while (true) {\n        lVar2 =\n            std _Rb_tree_iterator<std pair<\n                int_const,\n                std map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                        std less<Hawk HawkMsgListener *>,\n                        std allocator<std pair<Hawk HawkMsgListener *const,\n                                               Hawk HawkMsgListener *>>>>>\n            operator->(\n                (_Rb_tree_iterator<std pair<\n                     int_const,\n                     std map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                             std less<Hawk HawkMsgListener *>,\n                             std allocator<std pair<Hawk HawkMsgListener *const,\n                                                    Hawk HawkMsgListener *>>>>>\n                     *)&<span class=\"supfact\">local_20</span>);\n        <span class=\"supfact\">local_10</span> =\n            std map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                    std less<Hawk HawkMsgListener *>,\n                    std allocator<std pair<Hawk HawkMsgListener *const,\n                                           Hawk HawkMsgListener *>>>\n                end((map<Hawk HawkMsgListener *, Hawk HawkMsgListener *,\n                         std less<Hawk HawkMsgListener *>,\n                         std allocator<std pair<Hawk HawkMsgListener *const,\n                                                Hawk HawkMsgListener *>>>\n                         *)(lVar2 + Number));\n        <span class=\"supfact\">cVar1</span> =\n            std operator!=((_Rb_tree_iterator *)&<span class=\"supfact\">local_28</span>,\n                           (_Rb_tree_iterator *)&<span class=\"supfact\">local_10</span>);\n        if (<span class=\"supfact\">cVar1</span> == String)\n          break;\n        lVar2 =\n            std _Rb_tree_iterator<\n                std pair<Hawk HawkMsgListener *const, Hawk HawkMsgListener *>>\n            operator->((_Rb_tree_iterator<std pair<Hawk HawkMsgListener *const,\n                                                   Hawk HawkMsgListener *>>\n                            *)&<span class=\"supfact\">local_28</span>);\n        (**(code **)(**(long **)(lVar2 + Number) + Number))(\n            *(long **)(lVar2 + Number), <span class=\"supfact\">local_38</span>);\n        std _Rb_tree_iterator<\n            std pair<Hawk HawkMsgListener *const, Hawk HawkMsgListener *>>\n        operator++(\n            (_Rb_tree_iterator<\n                std pair<Hawk HawkMsgListener *const, Hawk HawkMsgListener *>>\n                 *)&<span class=\"supfact\">local_28</span>,\n            Number);\n      }\n    }\n    plVar3 = (long *)Hawk HawkMsgManager GetInstance();\n    (**(code **)(*plVar3 + Number))(plVar3, &<span class=\"supfact\">local_38</span>);\n    uVar4 = Number;\n  }\n  return uVar4;\n}", "code_t": "Bool __thiscall Hawk HawkMsgPump Send(HawkMsgPump *<span class=\"supfact\">this</span>,\n                                      HawkMsg *<span class=\"supfact\">pMsg</span>) {\n  bool bVar1;\n  Bool BVar2;\n  pointer ppVar3;\n  pointer ppVar4;\n  long *plVar5;\n  HawkMsg *<span class=\"supfact\">pMsg</span> - local;\n  HawkMsgPump *<span class=\"supfact\">this</span> - local;\n  iterator <span class=\"supfact\">rl_it</span>;\n  iterator <span class=\"supfact\">ml_it</span>;\n  iterator <span class=\"supfact\">local_18</span>;\n  iterator <span class=\"supfact\">local_10</span>;\n  if (<span class=\"supfact\">pMsg</span> == (HawkMsg *)Number) {\n    BVar2 = false;\n  } else {\n    <span class=\"supfact\">pMsg</span> - local = <span class=\"supfact\">pMsg</span>;\n    <span class=\"supfact\">this</span> - local = <span class=\"supfact\">this</span>;\n    <span class=\"supfact\">ml_it</span> = std\n        map<int,\n            _std map<Hawk HawkMsgListener *, _Hawk HawkMsgListener *,\n                     _std less<Hawk HawkMsgListener *>,\n                     _std allocator<std pair<Hawk HawkMsgListener * _const,\n                                             _Hawk HawkMsgListener *>\n                                        _>\n                         _>,\n            _std less<int>,\n            _std allocator<std pair<\n                int_const,\n                _std map<Hawk HawkMsgListener *, _Hawk HawkMsgListener *,\n                         _std less<Hawk HawkMsgListener *>,\n                         _std allocator<std pair<Hawk HawkMsgListener * _const,\n                                                 _Hawk HawkMsgListener *>\n                                            _>\n                             _>\n                    _>\n                               _>\n                _>\n            find(&<span class=\"supfact\">this</span>->m_mListener,\n                 (key_type *)(<span class=\"supfact\">pMsg</span> + Number));\n    <span class=\"supfact\">local_18</span> = std\n        map<int,\n            _std map<Hawk HawkMsgListener *, _Hawk HawkMsgListener *,\n                     _std less<Hawk HawkMsgListener *>,\n                     _std allocator<std pair<Hawk HawkMsgListener * _const,\n                                             _Hawk HawkMsgListener *>\n                                        _>\n                         _>,\n            _std less<int>,\n            _std allocator<std pair<\n                int_const,\n                _std map<Hawk HawkMsgListener *, _Hawk HawkMsgListener *,\n                         _std less<Hawk HawkMsgListener *>,\n                         _std allocator<std pair<Hawk HawkMsgListener * _const,\n                                                 _Hawk HawkMsgListener *>\n                                            _>\n                             _>\n                    _>\n                               _>\n                _>\n            end(&<span class=\"supfact\">this</span> - local->m_mListener);\n    bVar1 = std operator!=(&<span class=\"supfact\">ml_it</span>, &<span class=\"supfact\">local_18</span>);\n    if (bVar1) {\n      ppVar3 = std _Rb_tree_iterator<std pair<\n          int_const,\n          _std map<Hawk HawkMsgListener *, _Hawk HawkMsgListener *,\n                   _std less<Hawk HawkMsgListener *>,\n                   _std allocator<std pair<Hawk HawkMsgListener * _const,\n                                           _Hawk HawkMsgListener *>\n                                      _>\n                       _>\n              _>\n                                         _>\n               operator->(&<span class=\"supfact\">ml_it</span>);\n      <span class=\"supfact\">rl_it</span> =\n          std map<Hawk HawkMsgListener *, _Hawk HawkMsgListener *,\n                  _std less<Hawk HawkMsgListener *>,\n                  _std allocator<std pair<Hawk HawkMsgListener * _const,\n                                          _Hawk HawkMsgListener *>\n                                     _>\n                      _>\n              begin(&ppVar3->second);\n      while (true) {\n        ppVar3 = std _Rb_tree_iterator<std pair<\n            int_const,\n            _std map<Hawk HawkMsgListener *, _Hawk HawkMsgListener *,\n                     _std less<Hawk HawkMsgListener *>,\n                     _std allocator<std pair<Hawk HawkMsgListener * _const,\n                                             _Hawk HawkMsgListener *>\n                                        _>\n                         _>\n                _>\n                                           _>\n                 operator->(&<span class=\"supfact\">ml_it</span>);\n        <span class=\"supfact\">local_10</span> =\n            std map<Hawk HawkMsgListener *, _Hawk HawkMsgListener *,\n                    _std less<Hawk HawkMsgListener *>,\n                    _std allocator<std pair<Hawk HawkMsgListener * _const,\n                                            _Hawk HawkMsgListener *>\n                                       _>\n                        _>\n                end(&ppVar3->second);\n        bVar1 =\n            std operator!=(&<span class=\"supfact\">rl_it</span>, &<span class=\"supfact\">local_10</span>);\n        if (!bVar1)\n          break;\n        ppVar4 =\n            std _Rb_tree_iterator<\n                std pair<Hawk HawkMsgListener * _const, _Hawk HawkMsgListener *>\n                    _>\n            operator->(&<span class=\"supfact\">rl_it</span>);\n        (**(code **)(*(long *)ppVar4->second + Number))(\n            ppVar4->second, <span class=\"supfact\">pMsg</span> - local);\n        std _Rb_tree_iterator<\n            std pair<Hawk HawkMsgListener * _const, _Hawk HawkMsgListener *> _>\n        operator++(&<span class=\"supfact\">rl_it</span>, Number);\n      }\n    }\n    plVar5 = (long *)Hawk HawkMsgManager GetInstance();\n    (**(code **)(*plVar5 + Number))(plVar5, &<span class=\"supfact\">pMsg</span> - local);\n    BVar2 = true;\n  }\n  return BVar2;\n}", "var": [{"name": "this", "type": "__unk__", "pred_name": "this", "ref_name": "this", "ref_type": "HawkMsgPump * *"}, {"name": "param_1", "type": "wchar_t * *", "pred_name": "s", "ref_name": "pMsg", "ref_type": "HawkMsg * *"}, {"name": "cVar1", "type": "bool", "pred_name": "bVar1", "ref_name": "", "ref_type": "disappear"}, {"name": "local_38", "type": "iterator", "pred_name": "local_38", "ref_name": "pMsg-local", "ref_type": "HawkMsg * *"}, {"name": "local_30", "type": "iterator", "pred_name": "local_30", "ref_name": "this-local", "ref_type": "HawkMsgPump * *"}, {"name": "local_28", "type": "iterator", "pred_name": "local_28", "ref_name": "rl_it", "ref_type": "iterator"}, {"name": "local_20", "type": "iterator[2][2]", "pred_name": "local_20", "ref_name": "ml_it", "ref_type": "iterator"}, {"name": "local_18", "type": "wchar_t * *", "pred_name": "local_18", "ref_name": "local_18", "ref_type": "iterator"}, {"name": "local_10", "type": "wchar_t * *", "pred_name": "local_10", "ref_name": "local_10", "ref_type": "iterator"}], "body_in_train": false}, {"repo_owner": "chrishaukap", "repo_name": "GameDev", "path": "chrishaukap/GameDev/1c4d234cba5e50a15813723a7c6c08a69a3010259406ec7ea8eb9682b50b79da", "path_in_repo": "chrishaukap/GameDev/lib_irrlicht/src/irrlicht-1.5/source/Irrlicht/CIrrMeshWriter.o", "objdump": "", "code_s": "void __thiscall irr core irrAllocator<wchar_t> ~irrAllocator(\n    irrAllocator<wchar_t> *<span class=\"supfact\">this</span>) {\n  *(undefined ***)<span class=\"supfact\">this</span> = &PTR_ ~irrAllocator_001033d0;\n  return;\n}", "code_t": "void __thiscall irr core irrAllocator<wchar_t> ~irrAllocator(\n    irrAllocator<wchar_t> *<span class=\"supfact\">this</span>, int __in_chrg) {\n  irrAllocator<wchar_t> *<span class=\"supfact\">this</span> - local;\n  <span class=\"supfact\">this</span>->_vptr.irrAllocator =\n      (_func_int_varargs **)&PTR_ ~irrAllocator_001033d0;\n  return;\n}", "var": [{"name": "this", "type": "irrAllocator<wchar_t> * *", "pred_name": "this", "ref_name": "this", "ref_type": "irrAllocator<wchar_t> * *"}], "body_in_train": true}, {"repo_owner": "Lyoko-Jeremie", "repo_name": "PictureViewer", "path": "Lyoko-Jeremie/PictureViewer/32634f022d7ca49350bf53a3347f95df233152e71544fc29cd513d5e0849514d", "path_in_repo": "Lyoko-Jeremie/PictureViewer/xz505/doc/examples/03_compress_custom", "objdump": "", "code_s": "size_t fread(void *__ptr, size_t __size, size_t __n, FILE *__stream) {\n  size_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_fread_00404030)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "size_t fread(void *__ptr, size_t __size, size_t __n, FILE *__stream) {\n  size_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_fread_00404030)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "size_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "size_t"}], "body_in_train": true}, {"repo_owner": "phyous", "repo_name": "ffmpeg", "path": "phyous/ffmpeg/cace8e97a61df493ac989f95915d214819f3e61a6ae119c3f6f200dad77802dd", "path_in_repo": "phyous/ffmpeg//libavutil/mathematics.o", "objdump": "00000000000002de <av_rescale>:\n 2de:\t48 83 ec 28          \tsub    $0x28,%rsp\n 2e2:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n 2e7:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n 2ec:\t48 89 54 24 08       \tmov    %rdx,0x8(%rsp)\n 2f1:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n 2f6:\t48 8b 74 24 10       \tmov    0x10(%rsp),%rsi\n 2fb:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n 300:\tb9 05 00 00 00       \tmov    $0x5,%ecx\n 305:\t48 89 c7             \tmov    %rax,%rdi\n 308:\te8 00 00 00 00       \tcall   30d <av_rescale+0x2f>\n 30d:\t48 83 c4 28          \tadd    $0x28,%rsp\n 311:\tc3                   \tret    ", "code_s": "void av_rescale(undefined8 <span class=\"supfact\">param_1</span>,\n                undefined8 <span class=\"supfact\">param_2</span>,\n                undefined8 <span class=\"supfact\">param_3</span>) {\n  av_rescale_rnd(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n                 <span class=\"supfact\">param_3</span>, Number);\n  return;\n}", "code_t": "int64_t av_rescale(int64_t <span class=\"supfact\">a</span>, int64_t <span class=\"supfact\">b</span>,\n                   int64_t <span class=\"supfact\">c</span>) {\n  int64_t iVar1;\n  int64_t <span class=\"supfact\">c</span> - local;\n  int64_t <span class=\"supfact\">b</span> - local;\n  int64_t <span class=\"supfact\">a</span> - local;\n  iVar1 = av_rescale_rnd(<span class=\"supfact\">a</span>, <span class=\"supfact\">b</span>,\n                         <span class=\"supfact\">c</span>, AV_ROUND_NEAR_INF);\n  return iVar1;\n}", "var": [{"name": "param_1", "type": "int64_t", "pred_name": "a", "ref_name": "a", "ref_type": "int64_t"}, {"name": "param_2", "type": "int64_t", "pred_name": "b", "ref_name": "b", "ref_type": "int64_t"}, {"name": "param_3", "type": "int64_t", "pred_name": "c", "ref_name": "c", "ref_type": "int64_t"}], "body_in_train": true}, {"repo_owner": "zcoinofficial", "repo_name": "cpuminer-dev", "path": "zcoinofficial/cpuminer-dev/44ebcc8d357255d148b52e6961c2a57906a7552cebc9c56d9d37a7bf79bc7777", "path_in_repo": "zcoinofficial/cpuminer-dev//compat/bos-jansson/value.o", "objdump": "000000000000174c <json_string_setn>:\n    174c:\t55                   \tpush   %rbp\n    174d:\t48 89 e5             \tmov    %rsp,%rbp\n    1750:\t48 83 ec 20          \tsub    $0x20,%rsp\n    1754:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    1758:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n    175c:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n    1760:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    1765:\t74 17                \tje     177e <json_string_setn+0x32>\n    1767:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    176b:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    176f:\t48 89 d6             \tmov    %rdx,%rsi\n    1772:\t48 89 c7             \tmov    %rax,%rdi\n    1775:\te8 00 00 00 00       \tcall   177a <json_string_setn+0x2e>\n    177a:\t85 c0                \ttest   %eax,%eax\n    177c:\t75 07                \tjne    1785 <json_string_setn+0x39>\n    177e:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    1783:\teb 17                \tjmp    179c <json_string_setn+0x50>\n    1785:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    1789:\t48 8b 4d f0          \tmov    -0x10(%rbp),%rcx\n    178d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1791:\t48 89 ce             \tmov    %rcx,%rsi\n    1794:\t48 89 c7             \tmov    %rax,%rdi\n    1797:\te8 00 00 00 00       \tcall   179c <json_string_setn+0x50>\n    179c:\tc9                   \tleave  \n    179d:\tc3                   \tret    ", "code_s": "undefined8 json_string_setn(undefined8 <span class=\"supfact\">param_1</span>,\n                            long <span class=\"supfact\">param_2</span>,\n                            undefined8 <span class=\"supfact\">param_3</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  undefined8 <span class=\"supfact\">uVar2</span>;\n  if ((<span class=\"supfact\">param_2</span> != Number) &&\n      (<span class=\"supfact\">iVar1</span> =\n           utf8_check_string(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>),\n       <span class=\"supfact\">iVar1</span> != Number)) {\n    <span class=\"supfact\">uVar2</span> = json_string_setn_nocheck(<span class=\"supfact\">param_1</span>,\n                                                     <span class=\"supfact\">param_2</span>,\n                                                     <span class=\"supfact\">param_3</span>);\n    return <span class=\"supfact\">uVar2</span>;\n  }\n  return Number;\n}", "code_t": "int json_string_setn(json_t *<span class=\"supfact\">json</span>, char *<span class=\"supfact\">value</span>,\n                     size_t <span class=\"supfact\">len</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  size_t <span class=\"supfact\">len</span> - local;\n  char *<span class=\"supfact\">value</span> - local;\n  json_t *<span class=\"supfact\">json</span> - local;\n  if ((<span class=\"supfact\">value</span> != (char *)Number) &&\n      (<span class=\"supfact\">iVar1</span> =\n           utf8_check_string(<span class=\"supfact\">value</span>, <span class=\"supfact\">len</span>),\n       <span class=\"supfact\">iVar1</span> != Number)) {\n    <span class=\"supfact\">iVar1</span> = json_string_setn_nocheck(\n        <span class=\"supfact\">json</span>, <span class=\"supfact\">value</span>, <span class=\"supfact\">len</span>);\n    return <span class=\"supfact\">iVar1</span>;\n  }\n  return -Number;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "key", "ref_name": "json", "ref_type": "json_t * *"}, {"name": "param_2", "type": "char * *", "pred_name": "value", "ref_name": "value", "ref_type": "char * *"}, {"name": "param_3", "type": "char * *", "pred_name": "comment", "ref_name": "len", "ref_type": "size_t"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "uVar2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "classicsong", "repo_name": "PMigrate-Xen", "path": "classicsong/PMigrate-Xen/97f1f5976a6b5bdaa592d76107578d3906ad3922a3a47a5303621207eb4a7628", "path_in_repo": "classicsong/PMigrate-Xen/xen-4.1.2/tools/libxen/src/xen_vm.o", "objdump": "0000000000003077 <xen_vm_set_pci_bus>:\n    3077:\t48 83 ec 48          \tsub    $0x48,%rsp\n    307b:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n    3080:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n    3085:\t48 89 54 24 08       \tmov    %rdx,0x8(%rsp)\n    308a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3091 <xen_vm_set_pci_bus+0x1a>\n    3091:\t48 89 44 24 20       \tmov    %rax,0x20(%rsp)\n    3096:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    309b:\t48 89 44 24 28       \tmov    %rax,0x28(%rsp)\n    30a0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 30a7 <xen_vm_set_pci_bus+0x30>\n    30a7:\t48 89 44 24 30       \tmov    %rax,0x30(%rsp)\n    30ac:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    30b1:\t48 89 44 24 38       \tmov    %rax,0x38(%rsp)\n    30b6:\t48 8d 54 24 20       \tlea    0x20(%rsp),%rdx\n    30bb:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    30c0:\t41 b9 00 00 00 00    \tmov    $0x0,%r9d\n    30c6:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    30cc:\tb9 02 00 00 00       \tmov    $0x2,%ecx\n    30d1:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 30d8 <xen_vm_set_pci_bus+0x61>\n    30d8:\t48 89 c7             \tmov    %rax,%rdi\n    30db:\te8 00 00 00 00       \tcall   30e0 <xen_vm_set_pci_bus+0x69>\n    30e0:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    30e5:\t0f b6 40 18          \tmovzbl 0x18(%rax),%eax\n    30e9:\t48 83 c4 48          \tadd    $0x48,%rsp\n    30ed:\tc3                   \tret    ", "code_s": "undefined xen_vm_set_pci_bus(long <span class=\"supfact\">param_1</span>,\n                             undefined8 <span class=\"supfact\">param_2</span>,\n                             undefined8 <span class=\"supfact\">param_3</span>) {\n  undefined *<span class=\"supfact\">local_28</span>;\n  undefined8 <span class=\"supfact\">local_20</span>;\n  undefined *<span class=\"supfact\">local_18</span>;\n  undefined8 <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_28</span> = &abstract_type_string;\n  <span class=\"supfact\">local_18</span> = &abstract_type_string;\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">local_10</span> = <span class=\"supfact\">param_3</span>;\n  xen_call_(<span class=\"supfact\">param_1</span>, String, &<span class=\"supfact\">local_28</span>, Number,\n            Number, Number);\n  return *(undefined *)(<span class=\"supfact\">param_1</span> + Number);\n}", "code_t": "_Bool xen_vm_set_pci_bus(xen_session *<span class=\"supfact\">session</span>,\n                         xen_vm <span class=\"supfact\">vm</span>,\n                         char *<span class=\"supfact\">pci_bus</span>) {\n  char *<span class=\"supfact\">pci_bus</span> - local;\n  xen_vm <span class=\"supfact\">vm</span> - local;\n  xen_session *<span class=\"supfact\">session</span> - local;\n  abstract_value <span class=\"supfact\">param_values</span>[Number];\n  <span class=\"supfact\">param_values</span>[Number].type =\n      (abstract_type *)&abstract_type_string;\n  <span class=\"supfact\">param_values</span>[Number].type =\n      (abstract_type *)&abstract_type_string;\n  <span class=\"supfact\">param_values</span>[Number].u =\n      (anon_union_8_8_25ed9f66_for_u)<span class=\"supfact\">vm</span>;\n  <span class=\"supfact\">param_values</span>[Number].u.string_val = <span class=\"supfact\">pci_bus</span>;\n  xen_call_(<span class=\"supfact\">session</span>, String, <span class=\"supfact\">param_values</span>,\n            Number, Number, Number);\n  return <span class=\"supfact\">session</span>->ok;\n}", "var": [{"name": "param_1", "type": "xen_session * *", "pred_name": "session", "ref_name": "session", "ref_type": "xen_session * *"}, {"name": "param_2", "type": "xen_vif", "pred_name": "vif", "ref_name": "vm", "ref_type": "xen_vm"}, {"name": "param_3", "type": "char * *", "pred_name": "device", "ref_name": "pci_bus", "ref_type": "char * *"}, {"name": "local_28", "type": "abstract_value[2][2]", "pred_name": "param_values", "ref_name": "param_values", "ref_type": "abstract_value[2][2]"}, {"name": "local_20", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_18", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_10", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "ajamous", "repo_name": "DOTS", "path": "ajamous/DOTS/02fba4a0581a552b345802287b6fc0c559f7f2264e5fec3d28cff15a0c22dd1e", "path_in_repo": "ajamous/DOTS/SIP_Server_kamailio-5.1.1/src/modules/rls/notify.o", "objdump": "0000000000002ef0 <send_full_notify>:\n    2ef0:\t55                   \tpush   %rbp\n    2ef1:\t48 89 e5             \tmov    %rsp,%rbp\n    2ef4:\t41 57                \tpush   %r15\n    2ef6:\t41 56                \tpush   %r14\n    2ef8:\t41 55                \tpush   %r13\n    2efa:\t41 54                \tpush   %r12\n    2efc:\t53                   \tpush   %rbx\n    2efd:\t48 81 ec 78 01 00 00 \tsub    $0x178,%rsp\n    2f04:\t48 89 bd 88 fe ff ff \tmov    %rdi,-0x178(%rbp)\n    2f0b:\t48 89 b5 80 fe ff ff \tmov    %rsi,-0x180(%rbp)\n    2f12:\t48 89 95 78 fe ff ff \tmov    %rdx,-0x188(%rbp)\n    2f19:\t89 8d 74 fe ff ff    \tmov    %ecx,-0x18c(%rbp)\n    2f1f:\t48 c7 85 58 ff ff ff \tmovq   $0x0,-0xa8(%rbp)\n    2f26:\t00 00 00 00 \n    2f2a:\t48 c7 85 50 ff ff ff \tmovq   $0x0,-0xb0(%rbp)\n    2f31:\t00 00 00 00 \n    2f35:\t48 c7 85 c8 fe ff ff \tmovq   $0x0,-0x138(%rbp)\n    2f3c:\t00 00 00 00 \n    2f40:\tc7 45 c0 00 00 00 00 \tmovl   $0x0,-0x40(%rbp)\n    2f47:\t48 c7 85 b0 fe ff ff \tmovq   $0x0,-0x150(%rbp)\n    2f4e:\t00 00 00 00 \n    2f52:\tc7 85 b8 fe ff ff 00 \tmovl   $0x0,-0x148(%rbp)\n    2f59:\t00 00 00 \n    2f5c:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n    2f63:\t00 \n    2f64:\t48 c7 85 a8 fe ff ff \tmovq   $0x0,-0x158(%rbp)\n    2f6b:\t00 00 00 00 \n    2f6f:\tc7 45 c4 00 00 00 00 \tmovl   $0x0,-0x3c(%rbp)\n    2f76:\t48 c7 05 00 00 00 00 \tmovq   $0x0,0x0(%rip)        # 2f81 <send_full_notify+0x91>\n    2f7d:\t00 00 00 00 \n    2f81:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2f88 <send_full_notify+0x98>\n    2f88:\t48 8b 80 a8 00 00 00 \tmov    0xa8(%rax),%rax\n    2f8f:\t48 85 c0             \ttest   %rax,%rax\n    2f92:\t74 10                \tje     2fa4 <send_full_notify+0xb4>\n    2f94:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2f9b <send_full_notify+0xab>\n    2f9b:\t48 8b 80 a8 00 00 00 \tmov    0xa8(%rax),%rax\n    2fa2:\teb 0b                \tjmp    2faf <send_full_notify+0xbf>\n    2fa4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2fab <send_full_notify+0xbb>\n    2fab:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n    2faf:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n    2fb3:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    2fb8:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 2fbf <send_full_notify+0xcf>\n    2fbf:\te8 00 00 00 00       \tcall   2fc4 <send_full_notify+0xd4>\n    2fc4:\t83 f8 02             \tcmp    $0x2,%eax\n    2fc7:\t0f 8e d5 02 00 00    \tjle    32a2 <send_full_notify+0x3b2>\n    2fcd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2fd4 <send_full_notify+0xe4>\n    2fd4:\t8b 00                \tmov    (%rax),%eax\n    2fd6:\t85 c0                \ttest   %eax,%eax\n    2fd8:\t0f 85 c4 02 00 00    \tjne    32a2 <send_full_notify+0x3b2>\n    2fde:\tc7 45 b4 03 00 00 00 \tmovl   $0x3,-0x4c(%rbp)\n    2fe5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2fec <send_full_notify+0xfc>\n    2fec:\t8b 00                \tmov    (%rax),%eax\n    2fee:\t8d 50 01             \tlea    0x1(%rax),%edx\n    2ff1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2ff8 <send_full_notify+0x108>\n    2ff8:\t89 10                \tmov    %edx,(%rax)\n    2ffa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3001 <send_full_notify+0x111>\n    3001:\t8b 00                \tmov    (%rax),%eax\n    3003:\t85 c0                \ttest   %eax,%eax\n    3005:\t0f 95 c0             \tsetne  %al\n    3008:\t0f b6 c0             \tmovzbl %al,%eax\n    300b:\t48 85 c0             \ttest   %rax,%rax\n    300e:\t0f 84 43 01 00 00    \tje     3157 <send_full_notify+0x267>\n    3014:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 301b <send_full_notify+0x12b>\n    301b:\t8b 00                \tmov    (%rax),%eax\n    301d:\t85 c0                \ttest   %eax,%eax\n    301f:\t0f 95 c0             \tsetne  %al\n    3022:\t0f b6 c0             \tmovzbl %al,%eax\n    3025:\t48 85 c0             \ttest   %rax,%rax\n    3028:\t74 0a                \tje     3034 <send_full_notify+0x144>\n    302a:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n    302d:\t89 c7                \tmov    %eax,%edi\n    302f:\te8 00 00 00 00       \tcall   3034 <send_full_notify+0x144>\n    3034:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 303b <send_full_notify+0x14b>\n    303b:\t48 8b 00             \tmov    (%rax),%rax\n    303e:\t48 85 c0             \ttest   %rax,%rax\n    3041:\t0f 95 c0             \tsetne  %al\n    3044:\t0f b6 c0             \tmovzbl %al,%eax\n    3047:\t48 85 c0             \ttest   %rax,%rax\n    304a:\t0f 84 81 00 00 00    \tje     30d1 <send_full_notify+0x1e1>\n    3050:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n    3053:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3056:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 305d <send_full_notify+0x16d>\n    305d:\t48 63 d2             \tmovslq %edx,%rdx\n    3060:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3064:\t48 01 d0             \tadd    %rdx,%rax\n    3067:\t48 8b 18             \tmov    (%rax),%rbx\n    306a:\te8 00 00 00 00       \tcall   306f <send_full_notify+0x17f>\n    306f:\t89 c6                \tmov    %eax,%esi\n    3071:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3078 <send_full_notify+0x188>\n    3078:\t44 8b 00             \tmov    (%rax),%r8d\n    307b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3082 <send_full_notify+0x192>\n    3082:\t48 8b 00             \tmov    (%rax),%rax\n    3085:\t48 8b 08             \tmov    (%rax),%rcx\n    3088:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 308f <send_full_notify+0x19f>\n    308f:\t48 8b 00             \tmov    (%rax),%rax\n    3092:\t8b 50 08             \tmov    0x8(%rax),%edx\n    3095:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 309c <send_full_notify+0x1ac>\n    309c:\t48 8b 00             \tmov    (%rax),%rax\n    309f:\t48 83 ec 08          \tsub    $0x8,%rsp\n    30a3:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 30aa <send_full_notify+0x1ba>\n    30aa:\t57                   \tpush   %rdi\n    30ab:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 30b2 <send_full_notify+0x1c2>\n    30b2:\t57                   \tpush   %rdi\n    30b3:\t53                   \tpush   %rbx\n    30b4:\t41 89 f1             \tmov    %esi,%r9d\n    30b7:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 30be <send_full_notify+0x1ce>\n    30be:\t48 89 c7             \tmov    %rax,%rdi\n    30c1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    30c6:\te8 00 00 00 00       \tcall   30cb <send_full_notify+0x1db>\n    30cb:\t48 83 c4 20          \tadd    $0x20,%rsp\n    30cf:\teb 62                \tjmp    3133 <send_full_notify+0x243>\n    30d1:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n    30d4:\t8d 50 05             \tlea    0x5(%rax),%edx\n    30d7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 30de <send_full_notify+0x1ee>\n    30de:\t48 63 d2             \tmovslq %edx,%rdx\n    30e1:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    30e5:\t48 01 d0             \tadd    %rdx,%rax\n    30e8:\t48 8b 18             \tmov    (%rax),%rbx\n    30eb:\te8 00 00 00 00       \tcall   30f0 <send_full_notify+0x200>\n    30f0:\t89 c1                \tmov    %eax,%ecx\n    30f2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 30f9 <send_full_notify+0x209>\n    30f9:\t8b 10                \tmov    (%rax),%edx\n    30fb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3102 <send_full_notify+0x212>\n    3102:\t48 8b 00             \tmov    (%rax),%rax\n    3105:\t48 83 ec 08          \tsub    $0x8,%rsp\n    3109:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3110 <send_full_notify+0x220>\n    3110:\t56                   \tpush   %rsi\n    3111:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 3118 <send_full_notify+0x228>\n    3118:\t49 89 d8             \tmov    %rbx,%r8\n    311b:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3122 <send_full_notify+0x232>\n    3122:\t48 89 c7             \tmov    %rax,%rdi\n    3125:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    312a:\te8 00 00 00 00       \tcall   312f <send_full_notify+0x23f>\n    312f:\t48 83 c4 10          \tadd    $0x10,%rsp\n    3133:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 313a <send_full_notify+0x24a>\n    313a:\t8b 00                \tmov    (%rax),%eax\n    313c:\t85 c0                \ttest   %eax,%eax\n    313e:\t0f 95 c0             \tsetne  %al\n    3141:\t0f b6 c0             \tmovzbl %al,%eax\n    3144:\t48 85 c0             \ttest   %rax,%rax\n    3147:\t0f 84 40 01 00 00    \tje     328d <send_full_notify+0x39d>\n    314d:\te8 00 00 00 00       \tcall   3152 <send_full_notify+0x262>\n    3152:\te9 36 01 00 00       \tjmp    328d <send_full_notify+0x39d>\n    3157:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 315e <send_full_notify+0x26e>\n    315e:\t48 8b 00             \tmov    (%rax),%rax\n    3161:\t48 85 c0             \ttest   %rax,%rax\n    3164:\t0f 95 c0             \tsetne  %al\n    3167:\t0f b6 c0             \tmovzbl %al,%eax\n    316a:\t48 85 c0             \ttest   %rax,%rax\n    316d:\t0f 84 a2 00 00 00    \tje     3215 <send_full_notify+0x325>\n    3173:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 317a <send_full_notify+0x28a>\n    317a:\t4c 8b 28             \tmov    (%rax),%r13\n    317d:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n    3180:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3183:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 318a <send_full_notify+0x29a>\n    318a:\t48 63 d2             \tmovslq %edx,%rdx\n    318d:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3191:\t48 01 d0             \tadd    %rdx,%rax\n    3194:\t4c 8b 38             \tmov    (%rax),%r15\n    3197:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 319e <send_full_notify+0x2ae>\n    319e:\t48 8b 00             \tmov    (%rax),%rax\n    31a1:\t4c 8b 20             \tmov    (%rax),%r12\n    31a4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 31ab <send_full_notify+0x2bb>\n    31ab:\t48 8b 00             \tmov    (%rax),%rax\n    31ae:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    31b1:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n    31b4:\t8d 50 05             \tlea    0x5(%rax),%edx\n    31b7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 31be <send_full_notify+0x2ce>\n    31be:\t48 63 d2             \tmovslq %edx,%rdx\n    31c1:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    31c5:\t48 01 d0             \tadd    %rdx,%rax\n    31c8:\t48 83 c0 08          \tadd    $0x8,%rax\n    31cc:\t44 8b 30             \tmov    (%rax),%r14d\n    31cf:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    31d4:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 31db <send_full_notify+0x2eb>\n    31db:\te8 00 00 00 00       \tcall   31e0 <send_full_notify+0x2f0>\n    31e0:\t44 09 f0             \tor     %r14d,%eax\n    31e3:\t48 83 ec 08          \tsub    $0x8,%rsp\n    31e7:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 31ee <send_full_notify+0x2fe>\n    31ee:\t52                   \tpush   %rdx\n    31ef:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 31f6 <send_full_notify+0x306>\n    31f6:\t4d 89 f8             \tmov    %r15,%r8\n    31f9:\t4c 89 e1             \tmov    %r12,%rcx\n    31fc:\t89 da                \tmov    %ebx,%edx\n    31fe:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3205 <send_full_notify+0x315>\n    3205:\t89 c7                \tmov    %eax,%edi\n    3207:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    320c:\t41 ff d5             \tcall   *%r13\n    320f:\t48 83 c4 10          \tadd    $0x10,%rsp\n    3213:\teb 78                \tjmp    328d <send_full_notify+0x39d>\n    3215:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 321c <send_full_notify+0x32c>\n    321c:\t4c 8b 20             \tmov    (%rax),%r12\n    321f:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n    3222:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3225:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 322c <send_full_notify+0x33c>\n    322c:\t48 63 d2             \tmovslq %edx,%rdx\n    322f:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3233:\t48 01 d0             \tadd    %rdx,%rax\n    3236:\t48 8b 18             \tmov    (%rax),%rbx\n    3239:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n    323c:\t8d 50 05             \tlea    0x5(%rax),%edx\n    323f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3246 <send_full_notify+0x356>\n    3246:\t48 63 d2             \tmovslq %edx,%rdx\n    3249:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    324d:\t48 01 d0             \tadd    %rdx,%rax\n    3250:\t48 83 c0 08          \tadd    $0x8,%rax\n    3254:\t44 8b 28             \tmov    (%rax),%r13d\n    3257:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    325c:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 3263 <send_full_notify+0x373>\n    3263:\te8 00 00 00 00       \tcall   3268 <send_full_notify+0x378>\n    3268:\t44 09 e8             \tor     %r13d,%eax\n    326b:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 3272 <send_full_notify+0x382>\n    3272:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 3279 <send_full_notify+0x389>\n    3279:\t48 89 da             \tmov    %rbx,%rdx\n    327c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3283 <send_full_notify+0x393>\n    3283:\t89 c7                \tmov    %eax,%edi\n    3285:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    328a:\t41 ff d4             \tcall   *%r12\n    328d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3294 <send_full_notify+0x3a4>\n    3294:\t8b 00                \tmov    (%rax),%eax\n    3296:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    3299:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 32a0 <send_full_notify+0x3b0>\n    32a0:\t89 10                \tmov    %edx,(%rax)\n    32a2:\t48 8d 95 b0 fe ff ff \tlea    -0x150(%rbp),%rdx\n    32a9:\t48 8b 85 88 fe ff ff \tmov    -0x178(%rbp),%rax\n    32b0:\t48 89 d6             \tmov    %rdx,%rsi\n    32b3:\t48 89 c7             \tmov    %rax,%rdi\n    32b6:\te8 5d ee ff ff       \tcall   2118 <CONSTR_RLSUBS_DID>\n    32bb:\t85 c0                \ttest   %eax,%eax\n    32bd:\t0f 89 0c 03 00 00    \tjns    35cf <send_full_notify+0x6df>\n    32c3:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    32c8:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 32cf <send_full_notify+0x3df>\n    32cf:\te8 00 00 00 00       \tcall   32d4 <send_full_notify+0x3e4>\n    32d4:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    32d7:\t0f 8c 3d 3a 00 00    \tjl     6d1a <send_full_notify+0x3e2a>\n    32dd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 32e4 <send_full_notify+0x3f4>\n    32e4:\t8b 00                \tmov    (%rax),%eax\n    32e6:\t85 c0                \ttest   %eax,%eax\n    32e8:\t0f 85 2c 3a 00 00    \tjne    6d1a <send_full_notify+0x3e2a>\n    32ee:\tc7 85 64 ff ff ff ff \tmovl   $0xffffffff,-0x9c(%rbp)\n    32f5:\tff ff ff \n    32f8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 32ff <send_full_notify+0x40f>\n    32ff:\t8b 00                \tmov    (%rax),%eax\n    3301:\t8d 50 01             \tlea    0x1(%rax),%edx\n    3304:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 330b <send_full_notify+0x41b>\n    330b:\t89 10                \tmov    %edx,(%rax)\n    330d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3314 <send_full_notify+0x424>\n    3314:\t8b 00                \tmov    (%rax),%eax\n    3316:\t85 c0                \ttest   %eax,%eax\n    3318:\t0f 95 c0             \tsetne  %al\n    331b:\t0f b6 c0             \tmovzbl %al,%eax\n    331e:\t48 85 c0             \ttest   %rax,%rax\n    3321:\t0f 84 4c 01 00 00    \tje     3473 <send_full_notify+0x583>\n    3327:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 332e <send_full_notify+0x43e>\n    332e:\t8b 00                \tmov    (%rax),%eax\n    3330:\t85 c0                \ttest   %eax,%eax\n    3332:\t0f 95 c0             \tsetne  %al\n    3335:\t0f b6 c0             \tmovzbl %al,%eax\n    3338:\t48 85 c0             \ttest   %rax,%rax\n    333b:\t74 0d                \tje     334a <send_full_notify+0x45a>\n    333d:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    3343:\t89 c7                \tmov    %eax,%edi\n    3345:\te8 00 00 00 00       \tcall   334a <send_full_notify+0x45a>\n    334a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3351 <send_full_notify+0x461>\n    3351:\t48 8b 00             \tmov    (%rax),%rax\n    3354:\t48 85 c0             \ttest   %rax,%rax\n    3357:\t0f 95 c0             \tsetne  %al\n    335a:\t0f b6 c0             \tmovzbl %al,%eax\n    335d:\t48 85 c0             \ttest   %rax,%rax\n    3360:\t0f 84 84 00 00 00    \tje     33ea <send_full_notify+0x4fa>\n    3366:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    336c:\t8d 50 05             \tlea    0x5(%rax),%edx\n    336f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3376 <send_full_notify+0x486>\n    3376:\t48 63 d2             \tmovslq %edx,%rdx\n    3379:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    337d:\t48 01 d0             \tadd    %rdx,%rax\n    3380:\t48 8b 18             \tmov    (%rax),%rbx\n    3383:\te8 00 00 00 00       \tcall   3388 <send_full_notify+0x498>\n    3388:\t89 c6                \tmov    %eax,%esi\n    338a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3391 <send_full_notify+0x4a1>\n    3391:\t44 8b 00             \tmov    (%rax),%r8d\n    3394:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 339b <send_full_notify+0x4ab>\n    339b:\t48 8b 00             \tmov    (%rax),%rax\n    339e:\t48 8b 08             \tmov    (%rax),%rcx\n    33a1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 33a8 <send_full_notify+0x4b8>\n    33a8:\t48 8b 00             \tmov    (%rax),%rax\n    33ab:\t8b 50 08             \tmov    0x8(%rax),%edx\n    33ae:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 33b5 <send_full_notify+0x4c5>\n    33b5:\t48 8b 00             \tmov    (%rax),%rax\n    33b8:\t48 83 ec 08          \tsub    $0x8,%rsp\n    33bc:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 33c3 <send_full_notify+0x4d3>\n    33c3:\t57                   \tpush   %rdi\n    33c4:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 33cb <send_full_notify+0x4db>\n    33cb:\t57                   \tpush   %rdi\n    33cc:\t53                   \tpush   %rbx\n    33cd:\t41 89 f1             \tmov    %esi,%r9d\n    33d0:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 33d7 <send_full_notify+0x4e7>\n    33d7:\t48 89 c7             \tmov    %rax,%rdi\n    33da:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    33df:\te8 00 00 00 00       \tcall   33e4 <send_full_notify+0x4f4>\n    33e4:\t48 83 c4 20          \tadd    $0x20,%rsp\n    33e8:\teb 65                \tjmp    344f <send_full_notify+0x55f>\n    33ea:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    33f0:\t8d 50 05             \tlea    0x5(%rax),%edx\n    33f3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 33fa <send_full_notify+0x50a>\n    33fa:\t48 63 d2             \tmovslq %edx,%rdx\n    33fd:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3401:\t48 01 d0             \tadd    %rdx,%rax\n    3404:\t48 8b 18             \tmov    (%rax),%rbx\n    3407:\te8 00 00 00 00       \tcall   340c <send_full_notify+0x51c>\n    340c:\t89 c1                \tmov    %eax,%ecx\n    340e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3415 <send_full_notify+0x525>\n    3415:\t8b 10                \tmov    (%rax),%edx\n    3417:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 341e <send_full_notify+0x52e>\n    341e:\t48 8b 00             \tmov    (%rax),%rax\n    3421:\t48 83 ec 08          \tsub    $0x8,%rsp\n    3425:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 342c <send_full_notify+0x53c>\n    342c:\t56                   \tpush   %rsi\n    342d:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 3434 <send_full_notify+0x544>\n    3434:\t49 89 d8             \tmov    %rbx,%r8\n    3437:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 343e <send_full_notify+0x54e>\n    343e:\t48 89 c7             \tmov    %rax,%rdi\n    3441:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3446:\te8 00 00 00 00       \tcall   344b <send_full_notify+0x55b>\n    344b:\t48 83 c4 10          \tadd    $0x10,%rsp\n    344f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3456 <send_full_notify+0x566>\n    3456:\t8b 00                \tmov    (%rax),%eax\n    3458:\t85 c0                \ttest   %eax,%eax\n    345a:\t0f 95 c0             \tsetne  %al\n    345d:\t0f b6 c0             \tmovzbl %al,%eax\n    3460:\t48 85 c0             \ttest   %rax,%rax\n    3463:\t0f 84 4c 01 00 00    \tje     35b5 <send_full_notify+0x6c5>\n    3469:\te8 00 00 00 00       \tcall   346e <send_full_notify+0x57e>\n    346e:\te9 42 01 00 00       \tjmp    35b5 <send_full_notify+0x6c5>\n    3473:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 347a <send_full_notify+0x58a>\n    347a:\t48 8b 00             \tmov    (%rax),%rax\n    347d:\t48 85 c0             \ttest   %rax,%rax\n    3480:\t0f 95 c0             \tsetne  %al\n    3483:\t0f b6 c0             \tmovzbl %al,%eax\n    3486:\t48 85 c0             \ttest   %rax,%rax\n    3489:\t0f 84 a8 00 00 00    \tje     3537 <send_full_notify+0x647>\n    348f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3496 <send_full_notify+0x5a6>\n    3496:\t4c 8b 28             \tmov    (%rax),%r13\n    3499:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    349f:\t8d 50 05             \tlea    0x5(%rax),%edx\n    34a2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 34a9 <send_full_notify+0x5b9>\n    34a9:\t48 63 d2             \tmovslq %edx,%rdx\n    34ac:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    34b0:\t48 01 d0             \tadd    %rdx,%rax\n    34b3:\t4c 8b 38             \tmov    (%rax),%r15\n    34b6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 34bd <send_full_notify+0x5cd>\n    34bd:\t48 8b 00             \tmov    (%rax),%rax\n    34c0:\t4c 8b 20             \tmov    (%rax),%r12\n    34c3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 34ca <send_full_notify+0x5da>\n    34ca:\t48 8b 00             \tmov    (%rax),%rax\n    34cd:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    34d0:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    34d6:\t8d 50 05             \tlea    0x5(%rax),%edx\n    34d9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 34e0 <send_full_notify+0x5f0>\n    34e0:\t48 63 d2             \tmovslq %edx,%rdx\n    34e3:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    34e7:\t48 01 d0             \tadd    %rdx,%rax\n    34ea:\t48 83 c0 08          \tadd    $0x8,%rax\n    34ee:\t44 8b 30             \tmov    (%rax),%r14d\n    34f1:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    34f6:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 34fd <send_full_notify+0x60d>\n    34fd:\te8 00 00 00 00       \tcall   3502 <send_full_notify+0x612>\n    3502:\t44 09 f0             \tor     %r14d,%eax\n    3505:\t48 83 ec 08          \tsub    $0x8,%rsp\n    3509:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 3510 <send_full_notify+0x620>\n    3510:\t52                   \tpush   %rdx\n    3511:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 3518 <send_full_notify+0x628>\n    3518:\t4d 89 f8             \tmov    %r15,%r8\n    351b:\t4c 89 e1             \tmov    %r12,%rcx\n    351e:\t89 da                \tmov    %ebx,%edx\n    3520:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3527 <send_full_notify+0x637>\n    3527:\t89 c7                \tmov    %eax,%edi\n    3529:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    352e:\t41 ff d5             \tcall   *%r13\n    3531:\t48 83 c4 10          \tadd    $0x10,%rsp\n    3535:\teb 7e                \tjmp    35b5 <send_full_notify+0x6c5>\n    3537:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 353e <send_full_notify+0x64e>\n    353e:\t4c 8b 20             \tmov    (%rax),%r12\n    3541:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    3547:\t8d 50 05             \tlea    0x5(%rax),%edx\n    354a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3551 <send_full_notify+0x661>\n    3551:\t48 63 d2             \tmovslq %edx,%rdx\n    3554:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3558:\t48 01 d0             \tadd    %rdx,%rax\n    355b:\t48 8b 18             \tmov    (%rax),%rbx\n    355e:\t8b 85 64 ff ff ff    \tmov    -0x9c(%rbp),%eax\n    3564:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3567:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 356e <send_full_notify+0x67e>\n    356e:\t48 63 d2             \tmovslq %edx,%rdx\n    3571:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3575:\t48 01 d0             \tadd    %rdx,%rax\n    3578:\t48 83 c0 08          \tadd    $0x8,%rax\n    357c:\t44 8b 28             \tmov    (%rax),%r13d\n    357f:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    3584:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 358b <send_full_notify+0x69b>\n    358b:\te8 00 00 00 00       \tcall   3590 <send_full_notify+0x6a0>\n    3590:\t44 09 e8             \tor     %r13d,%eax\n    3593:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 359a <send_full_notify+0x6aa>\n    359a:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 35a1 <send_full_notify+0x6b1>\n    35a1:\t48 89 da             \tmov    %rbx,%rdx\n    35a4:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 35ab <send_full_notify+0x6bb>\n    35ab:\t89 c7                \tmov    %eax,%edi\n    35ad:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    35b2:\t41 ff d4             \tcall   *%r12\n    35b5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 35bc <send_full_notify+0x6cc>\n    35bc:\t8b 00                \tmov    (%rax),%eax\n    35be:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    35c1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 35c8 <send_full_notify+0x6d8>\n    35c8:\t89 10                \tmov    %edx,(%rax)\n    35ca:\te9 4b 37 00 00       \tjmp    6d1a <send_full_notify+0x3e2a>\n    35cf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 35d6 <send_full_notify+0x6e6>\n    35d6:\t48 89 85 48 ff ff ff \tmov    %rax,-0xb8(%rbp)\n    35dd:\tc7 85 f0 fe ff ff 04 \tmovl   $0x4,-0x110(%rbp)\n    35e4:\t00 00 00 \n    35e7:\tc7 85 f4 fe ff ff 00 \tmovl   $0x0,-0x10c(%rbp)\n    35ee:\t00 00 00 \n    35f1:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    35f8:\t48 8b 95 b8 fe ff ff \tmov    -0x148(%rbp),%rdx\n    35ff:\t48 89 85 00 ff ff ff \tmov    %rax,-0x100(%rbp)\n    3606:\t48 89 95 08 ff ff ff \tmov    %rdx,-0xf8(%rbp)\n    360d:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    3610:\t8d 50 01             \tlea    0x1(%rax),%edx\n    3613:\t89 55 c0             \tmov    %edx,-0x40(%rbp)\n    3616:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 361d <send_full_notify+0x72d>\n    361d:\t89 02                \tmov    %eax,(%rdx)\n    361f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3626 <send_full_notify+0x736>\n    3626:\t8b 00                \tmov    (%rax),%eax\n    3628:\t48 98                \tcltq   \n    362a:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 3631 <send_full_notify+0x741>\n    3631:\t48 89 94 c5 10 ff ff \tmov    %rdx,-0xf0(%rbp,%rax,8)\n    3638:\tff \n    3639:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    363c:\t8d 50 01             \tlea    0x1(%rax),%edx\n    363f:\t89 55 c0             \tmov    %edx,-0x40(%rbp)\n    3642:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 3649 <send_full_notify+0x759>\n    3649:\t89 02                \tmov    %eax,(%rdx)\n    364b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3652 <send_full_notify+0x762>\n    3652:\t8b 00                \tmov    (%rax),%eax\n    3654:\t48 98                \tcltq   \n    3656:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 365d <send_full_notify+0x76d>\n    365d:\t48 89 94 c5 10 ff ff \tmov    %rdx,-0xf0(%rbp,%rax,8)\n    3664:\tff \n    3665:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    3668:\t8d 50 01             \tlea    0x1(%rax),%edx\n    366b:\t89 55 c0             \tmov    %edx,-0x40(%rbp)\n    366e:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 3675 <send_full_notify+0x785>\n    3675:\t89 02                \tmov    %eax,(%rdx)\n    3677:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 367e <send_full_notify+0x78e>\n    367e:\t8b 00                \tmov    (%rax),%eax\n    3680:\t48 98                \tcltq   \n    3682:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 3689 <send_full_notify+0x799>\n    3689:\t48 89 94 c5 10 ff ff \tmov    %rdx,-0xf0(%rbp,%rax,8)\n    3690:\tff \n    3691:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    3694:\t8d 50 01             \tlea    0x1(%rax),%edx\n    3697:\t89 55 c0             \tmov    %edx,-0x40(%rbp)\n    369a:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 36a1 <send_full_notify+0x7b1>\n    36a1:\t89 02                \tmov    %eax,(%rdx)\n    36a3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 36aa <send_full_notify+0x7ba>\n    36aa:\t8b 00                \tmov    (%rax),%eax\n    36ac:\t48 98                \tcltq   \n    36ae:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 36b5 <send_full_notify+0x7c5>\n    36b5:\t48 89 94 c5 10 ff ff \tmov    %rdx,-0xf0(%rbp,%rax,8)\n    36bc:\tff \n    36bd:\t8b 45 c0             \tmov    -0x40(%rbp),%eax\n    36c0:\t8d 50 01             \tlea    0x1(%rax),%edx\n    36c3:\t89 55 c0             \tmov    %edx,-0x40(%rbp)\n    36c6:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 36cd <send_full_notify+0x7dd>\n    36cd:\t89 02                \tmov    %eax,(%rdx)\n    36cf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 36d6 <send_full_notify+0x7e6>\n    36d6:\t8b 00                \tmov    (%rax),%eax\n    36d8:\t48 98                \tcltq   \n    36da:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 36e1 <send_full_notify+0x7f1>\n    36e1:\t48 89 94 c5 10 ff ff \tmov    %rdx,-0xf0(%rbp,%rax,8)\n    36e8:\tff \n    36e9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 36f0 <send_full_notify+0x800>\n    36f0:\t48 89 85 40 ff ff ff \tmov    %rax,-0xc0(%rbp)\n    36f7:\tc7 85 d0 fe ff ff 00 \tmovl   $0x0,-0x130(%rbp)\n    36fe:\t00 00 00 \n    3701:\tc7 85 d4 fe ff ff 00 \tmovl   $0x0,-0x12c(%rbp)\n    3708:\t00 00 00 \n    370b:\tc7 85 e0 fe ff ff ff \tmovl   $0xffffffff,-0x120(%rbp)\n    3712:\tff ff ff \n    3715:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 371c <send_full_notify+0x82c>\n    371c:\t48 8b 48 08          \tmov    0x8(%rax),%rcx\n    3720:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3727 <send_full_notify+0x837>\n    3727:\t48 8b 00             \tmov    (%rax),%rax\n    372a:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 3731 <send_full_notify+0x841>\n    3731:\t48 89 d6             \tmov    %rdx,%rsi\n    3734:\t48 89 c7             \tmov    %rax,%rdi\n    3737:\tff d1                \tcall   *%rcx\n    3739:\t85 c0                \ttest   %eax,%eax\n    373b:\t0f 89 0c 03 00 00    \tjns    3a4d <send_full_notify+0xb5d>\n    3741:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    3746:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 374d <send_full_notify+0x85d>\n    374d:\te8 00 00 00 00       \tcall   3752 <send_full_notify+0x862>\n    3752:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    3755:\t0f 8c c2 35 00 00    \tjl     6d1d <send_full_notify+0x3e2d>\n    375b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3762 <send_full_notify+0x872>\n    3762:\t8b 00                \tmov    (%rax),%eax\n    3764:\t85 c0                \ttest   %eax,%eax\n    3766:\t0f 85 b1 35 00 00    \tjne    6d1d <send_full_notify+0x3e2d>\n    376c:\tc7 85 68 ff ff ff ff \tmovl   $0xffffffff,-0x98(%rbp)\n    3773:\tff ff ff \n    3776:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 377d <send_full_notify+0x88d>\n    377d:\t8b 00                \tmov    (%rax),%eax\n    377f:\t8d 50 01             \tlea    0x1(%rax),%edx\n    3782:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3789 <send_full_notify+0x899>\n    3789:\t89 10                \tmov    %edx,(%rax)\n    378b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3792 <send_full_notify+0x8a2>\n    3792:\t8b 00                \tmov    (%rax),%eax\n    3794:\t85 c0                \ttest   %eax,%eax\n    3796:\t0f 95 c0             \tsetne  %al\n    3799:\t0f b6 c0             \tmovzbl %al,%eax\n    379c:\t48 85 c0             \ttest   %rax,%rax\n    379f:\t0f 84 4c 01 00 00    \tje     38f1 <send_full_notify+0xa01>\n    37a5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 37ac <send_full_notify+0x8bc>\n    37ac:\t8b 00                \tmov    (%rax),%eax\n    37ae:\t85 c0                \ttest   %eax,%eax\n    37b0:\t0f 95 c0             \tsetne  %al\n    37b3:\t0f b6 c0             \tmovzbl %al,%eax\n    37b6:\t48 85 c0             \ttest   %rax,%rax\n    37b9:\t74 0d                \tje     37c8 <send_full_notify+0x8d8>\n    37bb:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n    37c1:\t89 c7                \tmov    %eax,%edi\n    37c3:\te8 00 00 00 00       \tcall   37c8 <send_full_notify+0x8d8>\n    37c8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 37cf <send_full_notify+0x8df>\n    37cf:\t48 8b 00             \tmov    (%rax),%rax\n    37d2:\t48 85 c0             \ttest   %rax,%rax\n    37d5:\t0f 95 c0             \tsetne  %al\n    37d8:\t0f b6 c0             \tmovzbl %al,%eax\n    37db:\t48 85 c0             \ttest   %rax,%rax\n    37de:\t0f 84 84 00 00 00    \tje     3868 <send_full_notify+0x978>\n    37e4:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n    37ea:\t8d 50 05             \tlea    0x5(%rax),%edx\n    37ed:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 37f4 <send_full_notify+0x904>\n    37f4:\t48 63 d2             \tmovslq %edx,%rdx\n    37f7:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    37fb:\t48 01 d0             \tadd    %rdx,%rax\n    37fe:\t48 8b 18             \tmov    (%rax),%rbx\n    3801:\te8 00 00 00 00       \tcall   3806 <send_full_notify+0x916>\n    3806:\t89 c6                \tmov    %eax,%esi\n    3808:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 380f <send_full_notify+0x91f>\n    380f:\t44 8b 00             \tmov    (%rax),%r8d\n    3812:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3819 <send_full_notify+0x929>\n    3819:\t48 8b 00             \tmov    (%rax),%rax\n    381c:\t48 8b 08             \tmov    (%rax),%rcx\n    381f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3826 <send_full_notify+0x936>\n    3826:\t48 8b 00             \tmov    (%rax),%rax\n    3829:\t8b 50 08             \tmov    0x8(%rax),%edx\n    382c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3833 <send_full_notify+0x943>\n    3833:\t48 8b 00             \tmov    (%rax),%rax\n    3836:\t48 83 ec 08          \tsub    $0x8,%rsp\n    383a:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 3841 <send_full_notify+0x951>\n    3841:\t57                   \tpush   %rdi\n    3842:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 3849 <send_full_notify+0x959>\n    3849:\t57                   \tpush   %rdi\n    384a:\t53                   \tpush   %rbx\n    384b:\t41 89 f1             \tmov    %esi,%r9d\n    384e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3855 <send_full_notify+0x965>\n    3855:\t48 89 c7             \tmov    %rax,%rdi\n    3858:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    385d:\te8 00 00 00 00       \tcall   3862 <send_full_notify+0x972>\n    3862:\t48 83 c4 20          \tadd    $0x20,%rsp\n    3866:\teb 65                \tjmp    38cd <send_full_notify+0x9dd>\n    3868:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n    386e:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3871:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3878 <send_full_notify+0x988>\n    3878:\t48 63 d2             \tmovslq %edx,%rdx\n    387b:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    387f:\t48 01 d0             \tadd    %rdx,%rax\n    3882:\t48 8b 18             \tmov    (%rax),%rbx\n    3885:\te8 00 00 00 00       \tcall   388a <send_full_notify+0x99a>\n    388a:\t89 c1                \tmov    %eax,%ecx\n    388c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3893 <send_full_notify+0x9a3>\n    3893:\t8b 10                \tmov    (%rax),%edx\n    3895:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 389c <send_full_notify+0x9ac>\n    389c:\t48 8b 00             \tmov    (%rax),%rax\n    389f:\t48 83 ec 08          \tsub    $0x8,%rsp\n    38a3:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 38aa <send_full_notify+0x9ba>\n    38aa:\t56                   \tpush   %rsi\n    38ab:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 38b2 <send_full_notify+0x9c2>\n    38b2:\t49 89 d8             \tmov    %rbx,%r8\n    38b5:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 38bc <send_full_notify+0x9cc>\n    38bc:\t48 89 c7             \tmov    %rax,%rdi\n    38bf:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    38c4:\te8 00 00 00 00       \tcall   38c9 <send_full_notify+0x9d9>\n    38c9:\t48 83 c4 10          \tadd    $0x10,%rsp\n    38cd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 38d4 <send_full_notify+0x9e4>\n    38d4:\t8b 00                \tmov    (%rax),%eax\n    38d6:\t85 c0                \ttest   %eax,%eax\n    38d8:\t0f 95 c0             \tsetne  %al\n    38db:\t0f b6 c0             \tmovzbl %al,%eax\n    38de:\t48 85 c0             \ttest   %rax,%rax\n    38e1:\t0f 84 4c 01 00 00    \tje     3a33 <send_full_notify+0xb43>\n    38e7:\te8 00 00 00 00       \tcall   38ec <send_full_notify+0x9fc>\n    38ec:\te9 42 01 00 00       \tjmp    3a33 <send_full_notify+0xb43>\n    38f1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 38f8 <send_full_notify+0xa08>\n    38f8:\t48 8b 00             \tmov    (%rax),%rax\n    38fb:\t48 85 c0             \ttest   %rax,%rax\n    38fe:\t0f 95 c0             \tsetne  %al\n    3901:\t0f b6 c0             \tmovzbl %al,%eax\n    3904:\t48 85 c0             \ttest   %rax,%rax\n    3907:\t0f 84 a8 00 00 00    \tje     39b5 <send_full_notify+0xac5>\n    390d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3914 <send_full_notify+0xa24>\n    3914:\t4c 8b 28             \tmov    (%rax),%r13\n    3917:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n    391d:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3920:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3927 <send_full_notify+0xa37>\n    3927:\t48 63 d2             \tmovslq %edx,%rdx\n    392a:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    392e:\t48 01 d0             \tadd    %rdx,%rax\n    3931:\t4c 8b 38             \tmov    (%rax),%r15\n    3934:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 393b <send_full_notify+0xa4b>\n    393b:\t48 8b 00             \tmov    (%rax),%rax\n    393e:\t4c 8b 20             \tmov    (%rax),%r12\n    3941:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3948 <send_full_notify+0xa58>\n    3948:\t48 8b 00             \tmov    (%rax),%rax\n    394b:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    394e:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n    3954:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3957:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 395e <send_full_notify+0xa6e>\n    395e:\t48 63 d2             \tmovslq %edx,%rdx\n    3961:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3965:\t48 01 d0             \tadd    %rdx,%rax\n    3968:\t48 83 c0 08          \tadd    $0x8,%rax\n    396c:\t44 8b 30             \tmov    (%rax),%r14d\n    396f:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    3974:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 397b <send_full_notify+0xa8b>\n    397b:\te8 00 00 00 00       \tcall   3980 <send_full_notify+0xa90>\n    3980:\t44 09 f0             \tor     %r14d,%eax\n    3983:\t48 83 ec 08          \tsub    $0x8,%rsp\n    3987:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 398e <send_full_notify+0xa9e>\n    398e:\t52                   \tpush   %rdx\n    398f:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 3996 <send_full_notify+0xaa6>\n    3996:\t4d 89 f8             \tmov    %r15,%r8\n    3999:\t4c 89 e1             \tmov    %r12,%rcx\n    399c:\t89 da                \tmov    %ebx,%edx\n    399e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 39a5 <send_full_notify+0xab5>\n    39a5:\t89 c7                \tmov    %eax,%edi\n    39a7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    39ac:\t41 ff d5             \tcall   *%r13\n    39af:\t48 83 c4 10          \tadd    $0x10,%rsp\n    39b3:\teb 7e                \tjmp    3a33 <send_full_notify+0xb43>\n    39b5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 39bc <send_full_notify+0xacc>\n    39bc:\t4c 8b 20             \tmov    (%rax),%r12\n    39bf:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n    39c5:\t8d 50 05             \tlea    0x5(%rax),%edx\n    39c8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 39cf <send_full_notify+0xadf>\n    39cf:\t48 63 d2             \tmovslq %edx,%rdx\n    39d2:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    39d6:\t48 01 d0             \tadd    %rdx,%rax\n    39d9:\t48 8b 18             \tmov    (%rax),%rbx\n    39dc:\t8b 85 68 ff ff ff    \tmov    -0x98(%rbp),%eax\n    39e2:\t8d 50 05             \tlea    0x5(%rax),%edx\n    39e5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 39ec <send_full_notify+0xafc>\n    39ec:\t48 63 d2             \tmovslq %edx,%rdx\n    39ef:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    39f3:\t48 01 d0             \tadd    %rdx,%rax\n    39f6:\t48 83 c0 08          \tadd    $0x8,%rax\n    39fa:\t44 8b 28             \tmov    (%rax),%r13d\n    39fd:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    3a02:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 3a09 <send_full_notify+0xb19>\n    3a09:\te8 00 00 00 00       \tcall   3a0e <send_full_notify+0xb1e>\n    3a0e:\t44 09 e8             \tor     %r13d,%eax\n    3a11:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 3a18 <send_full_notify+0xb28>\n    3a18:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 3a1f <send_full_notify+0xb2f>\n    3a1f:\t48 89 da             \tmov    %rbx,%rdx\n    3a22:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3a29 <send_full_notify+0xb39>\n    3a29:\t89 c7                \tmov    %eax,%edi\n    3a2b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3a30:\t41 ff d4             \tcall   *%r12\n    3a33:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3a3a <send_full_notify+0xb4a>\n    3a3a:\t8b 00                \tmov    (%rax),%eax\n    3a3c:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    3a3f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3a46 <send_full_notify+0xb56>\n    3a46:\t89 10                \tmov    %edx,(%rax)\n    3a48:\te9 d0 32 00 00       \tjmp    6d1d <send_full_notify+0x3e2d>\n    3a4d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3a54 <send_full_notify+0xb64>\n    3a54:\t8b 00                \tmov    (%rax),%eax\n    3a56:\t83 f8 02             \tcmp    $0x2,%eax\n    3a59:\t0f 85 35 03 00 00    \tjne    3d94 <send_full_notify+0xea4>\n    3a5f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3a66 <send_full_notify+0xb76>\n    3a66:\t48 8b 80 90 00 00 00 \tmov    0x90(%rax),%rax\n    3a6d:\t48 85 c0             \ttest   %rax,%rax\n    3a70:\t0f 84 1e 03 00 00    \tje     3d94 <send_full_notify+0xea4>\n    3a76:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3a7d <send_full_notify+0xb8d>\n    3a7d:\t48 8b 90 90 00 00 00 \tmov    0x90(%rax),%rdx\n    3a84:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3a8b <send_full_notify+0xb9b>\n    3a8b:\t48 8b 00             \tmov    (%rax),%rax\n    3a8e:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    3a93:\t48 89 c7             \tmov    %rax,%rdi\n    3a96:\tff d2                \tcall   *%rdx\n    3a98:\t85 c0                \ttest   %eax,%eax\n    3a9a:\t0f 89 f4 02 00 00    \tjns    3d94 <send_full_notify+0xea4>\n    3aa0:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    3aa5:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 3aac <send_full_notify+0xbbc>\n    3aac:\te8 00 00 00 00       \tcall   3ab1 <send_full_notify+0xbc1>\n    3ab1:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    3ab4:\t0f 8c 66 32 00 00    \tjl     6d20 <send_full_notify+0x3e30>\n    3aba:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3ac1 <send_full_notify+0xbd1>\n    3ac1:\t8b 00                \tmov    (%rax),%eax\n    3ac3:\t85 c0                \ttest   %eax,%eax\n    3ac5:\t0f 85 55 32 00 00    \tjne    6d20 <send_full_notify+0x3e30>\n    3acb:\tc7 45 b0 ff ff ff ff \tmovl   $0xffffffff,-0x50(%rbp)\n    3ad2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3ad9 <send_full_notify+0xbe9>\n    3ad9:\t8b 00                \tmov    (%rax),%eax\n    3adb:\t8d 50 01             \tlea    0x1(%rax),%edx\n    3ade:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3ae5 <send_full_notify+0xbf5>\n    3ae5:\t89 10                \tmov    %edx,(%rax)\n    3ae7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3aee <send_full_notify+0xbfe>\n    3aee:\t8b 00                \tmov    (%rax),%eax\n    3af0:\t85 c0                \ttest   %eax,%eax\n    3af2:\t0f 95 c0             \tsetne  %al\n    3af5:\t0f b6 c0             \tmovzbl %al,%eax\n    3af8:\t48 85 c0             \ttest   %rax,%rax\n    3afb:\t0f 84 43 01 00 00    \tje     3c44 <send_full_notify+0xd54>\n    3b01:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3b08 <send_full_notify+0xc18>\n    3b08:\t8b 00                \tmov    (%rax),%eax\n    3b0a:\t85 c0                \ttest   %eax,%eax\n    3b0c:\t0f 95 c0             \tsetne  %al\n    3b0f:\t0f b6 c0             \tmovzbl %al,%eax\n    3b12:\t48 85 c0             \ttest   %rax,%rax\n    3b15:\t74 0a                \tje     3b21 <send_full_notify+0xc31>\n    3b17:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n    3b1a:\t89 c7                \tmov    %eax,%edi\n    3b1c:\te8 00 00 00 00       \tcall   3b21 <send_full_notify+0xc31>\n    3b21:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3b28 <send_full_notify+0xc38>\n    3b28:\t48 8b 00             \tmov    (%rax),%rax\n    3b2b:\t48 85 c0             \ttest   %rax,%rax\n    3b2e:\t0f 95 c0             \tsetne  %al\n    3b31:\t0f b6 c0             \tmovzbl %al,%eax\n    3b34:\t48 85 c0             \ttest   %rax,%rax\n    3b37:\t0f 84 81 00 00 00    \tje     3bbe <send_full_notify+0xcce>\n    3b3d:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n    3b40:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3b43:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3b4a <send_full_notify+0xc5a>\n    3b4a:\t48 63 d2             \tmovslq %edx,%rdx\n    3b4d:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3b51:\t48 01 d0             \tadd    %rdx,%rax\n    3b54:\t48 8b 18             \tmov    (%rax),%rbx\n    3b57:\te8 00 00 00 00       \tcall   3b5c <send_full_notify+0xc6c>\n    3b5c:\t89 c6                \tmov    %eax,%esi\n    3b5e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3b65 <send_full_notify+0xc75>\n    3b65:\t44 8b 00             \tmov    (%rax),%r8d\n    3b68:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3b6f <send_full_notify+0xc7f>\n    3b6f:\t48 8b 00             \tmov    (%rax),%rax\n    3b72:\t48 8b 08             \tmov    (%rax),%rcx\n    3b75:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3b7c <send_full_notify+0xc8c>\n    3b7c:\t48 8b 00             \tmov    (%rax),%rax\n    3b7f:\t8b 50 08             \tmov    0x8(%rax),%edx\n    3b82:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3b89 <send_full_notify+0xc99>\n    3b89:\t48 8b 00             \tmov    (%rax),%rax\n    3b8c:\t48 83 ec 08          \tsub    $0x8,%rsp\n    3b90:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 3b97 <send_full_notify+0xca7>\n    3b97:\t57                   \tpush   %rdi\n    3b98:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 3b9f <send_full_notify+0xcaf>\n    3b9f:\t57                   \tpush   %rdi\n    3ba0:\t53                   \tpush   %rbx\n    3ba1:\t41 89 f1             \tmov    %esi,%r9d\n    3ba4:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3bab <send_full_notify+0xcbb>\n    3bab:\t48 89 c7             \tmov    %rax,%rdi\n    3bae:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3bb3:\te8 00 00 00 00       \tcall   3bb8 <send_full_notify+0xcc8>\n    3bb8:\t48 83 c4 20          \tadd    $0x20,%rsp\n    3bbc:\teb 62                \tjmp    3c20 <send_full_notify+0xd30>\n    3bbe:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n    3bc1:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3bc4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3bcb <send_full_notify+0xcdb>\n    3bcb:\t48 63 d2             \tmovslq %edx,%rdx\n    3bce:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3bd2:\t48 01 d0             \tadd    %rdx,%rax\n    3bd5:\t48 8b 18             \tmov    (%rax),%rbx\n    3bd8:\te8 00 00 00 00       \tcall   3bdd <send_full_notify+0xced>\n    3bdd:\t89 c1                \tmov    %eax,%ecx\n    3bdf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3be6 <send_full_notify+0xcf6>\n    3be6:\t8b 10                \tmov    (%rax),%edx\n    3be8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3bef <send_full_notify+0xcff>\n    3bef:\t48 8b 00             \tmov    (%rax),%rax\n    3bf2:\t48 83 ec 08          \tsub    $0x8,%rsp\n    3bf6:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3bfd <send_full_notify+0xd0d>\n    3bfd:\t56                   \tpush   %rsi\n    3bfe:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 3c05 <send_full_notify+0xd15>\n    3c05:\t49 89 d8             \tmov    %rbx,%r8\n    3c08:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3c0f <send_full_notify+0xd1f>\n    3c0f:\t48 89 c7             \tmov    %rax,%rdi\n    3c12:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3c17:\te8 00 00 00 00       \tcall   3c1c <send_full_notify+0xd2c>\n    3c1c:\t48 83 c4 10          \tadd    $0x10,%rsp\n    3c20:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3c27 <send_full_notify+0xd37>\n    3c27:\t8b 00                \tmov    (%rax),%eax\n    3c29:\t85 c0                \ttest   %eax,%eax\n    3c2b:\t0f 95 c0             \tsetne  %al\n    3c2e:\t0f b6 c0             \tmovzbl %al,%eax\n    3c31:\t48 85 c0             \ttest   %rax,%rax\n    3c34:\t0f 84 40 01 00 00    \tje     3d7a <send_full_notify+0xe8a>\n    3c3a:\te8 00 00 00 00       \tcall   3c3f <send_full_notify+0xd4f>\n    3c3f:\te9 36 01 00 00       \tjmp    3d7a <send_full_notify+0xe8a>\n    3c44:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3c4b <send_full_notify+0xd5b>\n    3c4b:\t48 8b 00             \tmov    (%rax),%rax\n    3c4e:\t48 85 c0             \ttest   %rax,%rax\n    3c51:\t0f 95 c0             \tsetne  %al\n    3c54:\t0f b6 c0             \tmovzbl %al,%eax\n    3c57:\t48 85 c0             \ttest   %rax,%rax\n    3c5a:\t0f 84 a2 00 00 00    \tje     3d02 <send_full_notify+0xe12>\n    3c60:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3c67 <send_full_notify+0xd77>\n    3c67:\t4c 8b 28             \tmov    (%rax),%r13\n    3c6a:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n    3c6d:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3c70:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3c77 <send_full_notify+0xd87>\n    3c77:\t48 63 d2             \tmovslq %edx,%rdx\n    3c7a:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3c7e:\t48 01 d0             \tadd    %rdx,%rax\n    3c81:\t4c 8b 38             \tmov    (%rax),%r15\n    3c84:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3c8b <send_full_notify+0xd9b>\n    3c8b:\t48 8b 00             \tmov    (%rax),%rax\n    3c8e:\t4c 8b 20             \tmov    (%rax),%r12\n    3c91:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3c98 <send_full_notify+0xda8>\n    3c98:\t48 8b 00             \tmov    (%rax),%rax\n    3c9b:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    3c9e:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n    3ca1:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3ca4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3cab <send_full_notify+0xdbb>\n    3cab:\t48 63 d2             \tmovslq %edx,%rdx\n    3cae:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3cb2:\t48 01 d0             \tadd    %rdx,%rax\n    3cb5:\t48 83 c0 08          \tadd    $0x8,%rax\n    3cb9:\t44 8b 30             \tmov    (%rax),%r14d\n    3cbc:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    3cc1:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 3cc8 <send_full_notify+0xdd8>\n    3cc8:\te8 00 00 00 00       \tcall   3ccd <send_full_notify+0xddd>\n    3ccd:\t44 09 f0             \tor     %r14d,%eax\n    3cd0:\t48 83 ec 08          \tsub    $0x8,%rsp\n    3cd4:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 3cdb <send_full_notify+0xdeb>\n    3cdb:\t52                   \tpush   %rdx\n    3cdc:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 3ce3 <send_full_notify+0xdf3>\n    3ce3:\t4d 89 f8             \tmov    %r15,%r8\n    3ce6:\t4c 89 e1             \tmov    %r12,%rcx\n    3ce9:\t89 da                \tmov    %ebx,%edx\n    3ceb:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3cf2 <send_full_notify+0xe02>\n    3cf2:\t89 c7                \tmov    %eax,%edi\n    3cf4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3cf9:\t41 ff d5             \tcall   *%r13\n    3cfc:\t48 83 c4 10          \tadd    $0x10,%rsp\n    3d00:\teb 78                \tjmp    3d7a <send_full_notify+0xe8a>\n    3d02:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3d09 <send_full_notify+0xe19>\n    3d09:\t4c 8b 20             \tmov    (%rax),%r12\n    3d0c:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n    3d0f:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3d12:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3d19 <send_full_notify+0xe29>\n    3d19:\t48 63 d2             \tmovslq %edx,%rdx\n    3d1c:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3d20:\t48 01 d0             \tadd    %rdx,%rax\n    3d23:\t48 8b 18             \tmov    (%rax),%rbx\n    3d26:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n    3d29:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3d2c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3d33 <send_full_notify+0xe43>\n    3d33:\t48 63 d2             \tmovslq %edx,%rdx\n    3d36:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3d3a:\t48 01 d0             \tadd    %rdx,%rax\n    3d3d:\t48 83 c0 08          \tadd    $0x8,%rax\n    3d41:\t44 8b 28             \tmov    (%rax),%r13d\n    3d44:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    3d49:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 3d50 <send_full_notify+0xe60>\n    3d50:\te8 00 00 00 00       \tcall   3d55 <send_full_notify+0xe65>\n    3d55:\t44 09 e8             \tor     %r13d,%eax\n    3d58:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 3d5f <send_full_notify+0xe6f>\n    3d5f:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 3d66 <send_full_notify+0xe76>\n    3d66:\t48 89 da             \tmov    %rbx,%rdx\n    3d69:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3d70 <send_full_notify+0xe80>\n    3d70:\t89 c7                \tmov    %eax,%edi\n    3d72:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3d77:\t41 ff d4             \tcall   *%r12\n    3d7a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3d81 <send_full_notify+0xe91>\n    3d81:\t8b 00                \tmov    (%rax),%eax\n    3d83:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    3d86:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3d8d <send_full_notify+0xe9d>\n    3d8d:\t89 10                \tmov    %edx,(%rax)\n    3d8f:\te9 8c 2f 00 00       \tjmp    6d20 <send_full_notify+0x3e30>\n    3d94:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3d9b <send_full_notify+0xeab>\n    3d9b:\t48 8b 00             \tmov    (%rax),%rax\n    3d9e:\t48 8d bd 10 ff ff ff \tlea    -0xf0(%rbp),%rdi\n    3da5:\t48 8d 95 f0 fe ff ff \tlea    -0x110(%rbp),%rdx\n    3dac:\t48 8d b5 48 ff ff ff \tlea    -0xb8(%rbp),%rsi\n    3db3:\t48 83 ec 08          \tsub    $0x8,%rsp\n    3db7:\t48 8d 8d c8 fe ff ff \tlea    -0x138(%rbp),%rcx\n    3dbe:\t51                   \tpush   %rcx\n    3dbf:\t6a 00                \tpush   $0x0\n    3dc1:\t8b 4d c0             \tmov    -0x40(%rbp),%ecx\n    3dc4:\t51                   \tpush   %rcx\n    3dc5:\t4c 8b 55 b8          \tmov    -0x48(%rbp),%r10\n    3dc9:\t41 b9 01 00 00 00    \tmov    $0x1,%r9d\n    3dcf:\t49 89 f8             \tmov    %rdi,%r8\n    3dd2:\t48 89 d1             \tmov    %rdx,%rcx\n    3dd5:\tba 00 00 00 00       \tmov    $0x0,%edx\n    3dda:\t48 89 c7             \tmov    %rax,%rdi\n    3ddd:\t41 ff d2             \tcall   *%r10\n    3de0:\t48 83 c4 20          \tadd    $0x20,%rsp\n    3de4:\t85 c0                \ttest   %eax,%eax\n    3de6:\t0f 89 0c 03 00 00    \tjns    40f8 <send_full_notify+0x1208>\n    3dec:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    3df1:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 3df8 <send_full_notify+0xf08>\n    3df8:\te8 00 00 00 00       \tcall   3dfd <send_full_notify+0xf0d>\n    3dfd:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    3e00:\t0f 8c 1d 2f 00 00    \tjl     6d23 <send_full_notify+0x3e33>\n    3e06:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3e0d <send_full_notify+0xf1d>\n    3e0d:\t8b 00                \tmov    (%rax),%eax\n    3e0f:\t85 c0                \ttest   %eax,%eax\n    3e11:\t0f 85 0c 2f 00 00    \tjne    6d23 <send_full_notify+0x3e33>\n    3e17:\tc7 85 6c ff ff ff ff \tmovl   $0xffffffff,-0x94(%rbp)\n    3e1e:\tff ff ff \n    3e21:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3e28 <send_full_notify+0xf38>\n    3e28:\t8b 00                \tmov    (%rax),%eax\n    3e2a:\t8d 50 01             \tlea    0x1(%rax),%edx\n    3e2d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3e34 <send_full_notify+0xf44>\n    3e34:\t89 10                \tmov    %edx,(%rax)\n    3e36:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3e3d <send_full_notify+0xf4d>\n    3e3d:\t8b 00                \tmov    (%rax),%eax\n    3e3f:\t85 c0                \ttest   %eax,%eax\n    3e41:\t0f 95 c0             \tsetne  %al\n    3e44:\t0f b6 c0             \tmovzbl %al,%eax\n    3e47:\t48 85 c0             \ttest   %rax,%rax\n    3e4a:\t0f 84 4c 01 00 00    \tje     3f9c <send_full_notify+0x10ac>\n    3e50:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3e57 <send_full_notify+0xf67>\n    3e57:\t8b 00                \tmov    (%rax),%eax\n    3e59:\t85 c0                \ttest   %eax,%eax\n    3e5b:\t0f 95 c0             \tsetne  %al\n    3e5e:\t0f b6 c0             \tmovzbl %al,%eax\n    3e61:\t48 85 c0             \ttest   %rax,%rax\n    3e64:\t74 0d                \tje     3e73 <send_full_notify+0xf83>\n    3e66:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    3e6c:\t89 c7                \tmov    %eax,%edi\n    3e6e:\te8 00 00 00 00       \tcall   3e73 <send_full_notify+0xf83>\n    3e73:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3e7a <send_full_notify+0xf8a>\n    3e7a:\t48 8b 00             \tmov    (%rax),%rax\n    3e7d:\t48 85 c0             \ttest   %rax,%rax\n    3e80:\t0f 95 c0             \tsetne  %al\n    3e83:\t0f b6 c0             \tmovzbl %al,%eax\n    3e86:\t48 85 c0             \ttest   %rax,%rax\n    3e89:\t0f 84 84 00 00 00    \tje     3f13 <send_full_notify+0x1023>\n    3e8f:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    3e95:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3e98:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3e9f <send_full_notify+0xfaf>\n    3e9f:\t48 63 d2             \tmovslq %edx,%rdx\n    3ea2:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3ea6:\t48 01 d0             \tadd    %rdx,%rax\n    3ea9:\t48 8b 18             \tmov    (%rax),%rbx\n    3eac:\te8 00 00 00 00       \tcall   3eb1 <send_full_notify+0xfc1>\n    3eb1:\t89 c6                \tmov    %eax,%esi\n    3eb3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3eba <send_full_notify+0xfca>\n    3eba:\t44 8b 00             \tmov    (%rax),%r8d\n    3ebd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3ec4 <send_full_notify+0xfd4>\n    3ec4:\t48 8b 00             \tmov    (%rax),%rax\n    3ec7:\t48 8b 08             \tmov    (%rax),%rcx\n    3eca:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3ed1 <send_full_notify+0xfe1>\n    3ed1:\t48 8b 00             \tmov    (%rax),%rax\n    3ed4:\t8b 50 08             \tmov    0x8(%rax),%edx\n    3ed7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3ede <send_full_notify+0xfee>\n    3ede:\t48 8b 00             \tmov    (%rax),%rax\n    3ee1:\t48 83 ec 08          \tsub    $0x8,%rsp\n    3ee5:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 3eec <send_full_notify+0xffc>\n    3eec:\t57                   \tpush   %rdi\n    3eed:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 3ef4 <send_full_notify+0x1004>\n    3ef4:\t57                   \tpush   %rdi\n    3ef5:\t53                   \tpush   %rbx\n    3ef6:\t41 89 f1             \tmov    %esi,%r9d\n    3ef9:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3f00 <send_full_notify+0x1010>\n    3f00:\t48 89 c7             \tmov    %rax,%rdi\n    3f03:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3f08:\te8 00 00 00 00       \tcall   3f0d <send_full_notify+0x101d>\n    3f0d:\t48 83 c4 20          \tadd    $0x20,%rsp\n    3f11:\teb 65                \tjmp    3f78 <send_full_notify+0x1088>\n    3f13:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    3f19:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3f1c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3f23 <send_full_notify+0x1033>\n    3f23:\t48 63 d2             \tmovslq %edx,%rdx\n    3f26:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3f2a:\t48 01 d0             \tadd    %rdx,%rax\n    3f2d:\t48 8b 18             \tmov    (%rax),%rbx\n    3f30:\te8 00 00 00 00       \tcall   3f35 <send_full_notify+0x1045>\n    3f35:\t89 c1                \tmov    %eax,%ecx\n    3f37:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3f3e <send_full_notify+0x104e>\n    3f3e:\t8b 10                \tmov    (%rax),%edx\n    3f40:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3f47 <send_full_notify+0x1057>\n    3f47:\t48 8b 00             \tmov    (%rax),%rax\n    3f4a:\t48 83 ec 08          \tsub    $0x8,%rsp\n    3f4e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3f55 <send_full_notify+0x1065>\n    3f55:\t56                   \tpush   %rsi\n    3f56:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 3f5d <send_full_notify+0x106d>\n    3f5d:\t49 89 d8             \tmov    %rbx,%r8\n    3f60:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3f67 <send_full_notify+0x1077>\n    3f67:\t48 89 c7             \tmov    %rax,%rdi\n    3f6a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3f6f:\te8 00 00 00 00       \tcall   3f74 <send_full_notify+0x1084>\n    3f74:\t48 83 c4 10          \tadd    $0x10,%rsp\n    3f78:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3f7f <send_full_notify+0x108f>\n    3f7f:\t8b 00                \tmov    (%rax),%eax\n    3f81:\t85 c0                \ttest   %eax,%eax\n    3f83:\t0f 95 c0             \tsetne  %al\n    3f86:\t0f b6 c0             \tmovzbl %al,%eax\n    3f89:\t48 85 c0             \ttest   %rax,%rax\n    3f8c:\t0f 84 4c 01 00 00    \tje     40de <send_full_notify+0x11ee>\n    3f92:\te8 00 00 00 00       \tcall   3f97 <send_full_notify+0x10a7>\n    3f97:\te9 42 01 00 00       \tjmp    40de <send_full_notify+0x11ee>\n    3f9c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3fa3 <send_full_notify+0x10b3>\n    3fa3:\t48 8b 00             \tmov    (%rax),%rax\n    3fa6:\t48 85 c0             \ttest   %rax,%rax\n    3fa9:\t0f 95 c0             \tsetne  %al\n    3fac:\t0f b6 c0             \tmovzbl %al,%eax\n    3faf:\t48 85 c0             \ttest   %rax,%rax\n    3fb2:\t0f 84 a8 00 00 00    \tje     4060 <send_full_notify+0x1170>\n    3fb8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3fbf <send_full_notify+0x10cf>\n    3fbf:\t4c 8b 28             \tmov    (%rax),%r13\n    3fc2:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    3fc8:\t8d 50 05             \tlea    0x5(%rax),%edx\n    3fcb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3fd2 <send_full_notify+0x10e2>\n    3fd2:\t48 63 d2             \tmovslq %edx,%rdx\n    3fd5:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3fd9:\t48 01 d0             \tadd    %rdx,%rax\n    3fdc:\t4c 8b 38             \tmov    (%rax),%r15\n    3fdf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3fe6 <send_full_notify+0x10f6>\n    3fe6:\t48 8b 00             \tmov    (%rax),%rax\n    3fe9:\t4c 8b 20             \tmov    (%rax),%r12\n    3fec:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3ff3 <send_full_notify+0x1103>\n    3ff3:\t48 8b 00             \tmov    (%rax),%rax\n    3ff6:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    3ff9:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    3fff:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4002:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4009 <send_full_notify+0x1119>\n    4009:\t48 63 d2             \tmovslq %edx,%rdx\n    400c:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4010:\t48 01 d0             \tadd    %rdx,%rax\n    4013:\t48 83 c0 08          \tadd    $0x8,%rax\n    4017:\t44 8b 30             \tmov    (%rax),%r14d\n    401a:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    401f:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4026 <send_full_notify+0x1136>\n    4026:\te8 00 00 00 00       \tcall   402b <send_full_notify+0x113b>\n    402b:\t44 09 f0             \tor     %r14d,%eax\n    402e:\t48 83 ec 08          \tsub    $0x8,%rsp\n    4032:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 4039 <send_full_notify+0x1149>\n    4039:\t52                   \tpush   %rdx\n    403a:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 4041 <send_full_notify+0x1151>\n    4041:\t4d 89 f8             \tmov    %r15,%r8\n    4044:\t4c 89 e1             \tmov    %r12,%rcx\n    4047:\t89 da                \tmov    %ebx,%edx\n    4049:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4050 <send_full_notify+0x1160>\n    4050:\t89 c7                \tmov    %eax,%edi\n    4052:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4057:\t41 ff d5             \tcall   *%r13\n    405a:\t48 83 c4 10          \tadd    $0x10,%rsp\n    405e:\teb 7e                \tjmp    40de <send_full_notify+0x11ee>\n    4060:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4067 <send_full_notify+0x1177>\n    4067:\t4c 8b 20             \tmov    (%rax),%r12\n    406a:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    4070:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4073:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 407a <send_full_notify+0x118a>\n    407a:\t48 63 d2             \tmovslq %edx,%rdx\n    407d:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4081:\t48 01 d0             \tadd    %rdx,%rax\n    4084:\t48 8b 18             \tmov    (%rax),%rbx\n    4087:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    408d:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4090:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4097 <send_full_notify+0x11a7>\n    4097:\t48 63 d2             \tmovslq %edx,%rdx\n    409a:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    409e:\t48 01 d0             \tadd    %rdx,%rax\n    40a1:\t48 83 c0 08          \tadd    $0x8,%rax\n    40a5:\t44 8b 28             \tmov    (%rax),%r13d\n    40a8:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    40ad:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 40b4 <send_full_notify+0x11c4>\n    40b4:\te8 00 00 00 00       \tcall   40b9 <send_full_notify+0x11c9>\n    40b9:\t44 09 e8             \tor     %r13d,%eax\n    40bc:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 40c3 <send_full_notify+0x11d3>\n    40c3:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 40ca <send_full_notify+0x11da>\n    40ca:\t48 89 da             \tmov    %rbx,%rdx\n    40cd:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 40d4 <send_full_notify+0x11e4>\n    40d4:\t89 c7                \tmov    %eax,%edi\n    40d6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    40db:\t41 ff d4             \tcall   *%r12\n    40de:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 40e5 <send_full_notify+0x11f5>\n    40e5:\t8b 00                \tmov    (%rax),%eax\n    40e7:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    40ea:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 40f1 <send_full_notify+0x1201>\n    40f1:\t89 10                \tmov    %edx,(%rax)\n    40f3:\te9 2b 2c 00 00       \tjmp    6d23 <send_full_notify+0x3e33>\n    40f8:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n    40ff:\t48 85 c0             \ttest   %rax,%rax\n    4102:\t0f 85 0c 03 00 00    \tjne    4414 <send_full_notify+0x1524>\n    4108:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    410d:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4114 <send_full_notify+0x1224>\n    4114:\te8 00 00 00 00       \tcall   4119 <send_full_notify+0x1229>\n    4119:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    411c:\t0f 8c 04 2c 00 00    \tjl     6d26 <send_full_notify+0x3e36>\n    4122:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4129 <send_full_notify+0x1239>\n    4129:\t8b 00                \tmov    (%rax),%eax\n    412b:\t85 c0                \ttest   %eax,%eax\n    412d:\t0f 85 f3 2b 00 00    \tjne    6d26 <send_full_notify+0x3e36>\n    4133:\tc7 85 70 ff ff ff ff \tmovl   $0xffffffff,-0x90(%rbp)\n    413a:\tff ff ff \n    413d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4144 <send_full_notify+0x1254>\n    4144:\t8b 00                \tmov    (%rax),%eax\n    4146:\t8d 50 01             \tlea    0x1(%rax),%edx\n    4149:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4150 <send_full_notify+0x1260>\n    4150:\t89 10                \tmov    %edx,(%rax)\n    4152:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4159 <send_full_notify+0x1269>\n    4159:\t8b 00                \tmov    (%rax),%eax\n    415b:\t85 c0                \ttest   %eax,%eax\n    415d:\t0f 95 c0             \tsetne  %al\n    4160:\t0f b6 c0             \tmovzbl %al,%eax\n    4163:\t48 85 c0             \ttest   %rax,%rax\n    4166:\t0f 84 4c 01 00 00    \tje     42b8 <send_full_notify+0x13c8>\n    416c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4173 <send_full_notify+0x1283>\n    4173:\t8b 00                \tmov    (%rax),%eax\n    4175:\t85 c0                \ttest   %eax,%eax\n    4177:\t0f 95 c0             \tsetne  %al\n    417a:\t0f b6 c0             \tmovzbl %al,%eax\n    417d:\t48 85 c0             \ttest   %rax,%rax\n    4180:\t74 0d                \tje     418f <send_full_notify+0x129f>\n    4182:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n    4188:\t89 c7                \tmov    %eax,%edi\n    418a:\te8 00 00 00 00       \tcall   418f <send_full_notify+0x129f>\n    418f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4196 <send_full_notify+0x12a6>\n    4196:\t48 8b 00             \tmov    (%rax),%rax\n    4199:\t48 85 c0             \ttest   %rax,%rax\n    419c:\t0f 95 c0             \tsetne  %al\n    419f:\t0f b6 c0             \tmovzbl %al,%eax\n    41a2:\t48 85 c0             \ttest   %rax,%rax\n    41a5:\t0f 84 84 00 00 00    \tje     422f <send_full_notify+0x133f>\n    41ab:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n    41b1:\t8d 50 05             \tlea    0x5(%rax),%edx\n    41b4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 41bb <send_full_notify+0x12cb>\n    41bb:\t48 63 d2             \tmovslq %edx,%rdx\n    41be:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    41c2:\t48 01 d0             \tadd    %rdx,%rax\n    41c5:\t48 8b 18             \tmov    (%rax),%rbx\n    41c8:\te8 00 00 00 00       \tcall   41cd <send_full_notify+0x12dd>\n    41cd:\t89 c6                \tmov    %eax,%esi\n    41cf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 41d6 <send_full_notify+0x12e6>\n    41d6:\t44 8b 00             \tmov    (%rax),%r8d\n    41d9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 41e0 <send_full_notify+0x12f0>\n    41e0:\t48 8b 00             \tmov    (%rax),%rax\n    41e3:\t48 8b 08             \tmov    (%rax),%rcx\n    41e6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 41ed <send_full_notify+0x12fd>\n    41ed:\t48 8b 00             \tmov    (%rax),%rax\n    41f0:\t8b 50 08             \tmov    0x8(%rax),%edx\n    41f3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 41fa <send_full_notify+0x130a>\n    41fa:\t48 8b 00             \tmov    (%rax),%rax\n    41fd:\t48 83 ec 08          \tsub    $0x8,%rsp\n    4201:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4208 <send_full_notify+0x1318>\n    4208:\t57                   \tpush   %rdi\n    4209:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4210 <send_full_notify+0x1320>\n    4210:\t57                   \tpush   %rdi\n    4211:\t53                   \tpush   %rbx\n    4212:\t41 89 f1             \tmov    %esi,%r9d\n    4215:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 421c <send_full_notify+0x132c>\n    421c:\t48 89 c7             \tmov    %rax,%rdi\n    421f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4224:\te8 00 00 00 00       \tcall   4229 <send_full_notify+0x1339>\n    4229:\t48 83 c4 20          \tadd    $0x20,%rsp\n    422d:\teb 65                \tjmp    4294 <send_full_notify+0x13a4>\n    422f:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n    4235:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4238:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 423f <send_full_notify+0x134f>\n    423f:\t48 63 d2             \tmovslq %edx,%rdx\n    4242:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4246:\t48 01 d0             \tadd    %rdx,%rax\n    4249:\t48 8b 18             \tmov    (%rax),%rbx\n    424c:\te8 00 00 00 00       \tcall   4251 <send_full_notify+0x1361>\n    4251:\t89 c1                \tmov    %eax,%ecx\n    4253:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 425a <send_full_notify+0x136a>\n    425a:\t8b 10                \tmov    (%rax),%edx\n    425c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4263 <send_full_notify+0x1373>\n    4263:\t48 8b 00             \tmov    (%rax),%rax\n    4266:\t48 83 ec 08          \tsub    $0x8,%rsp\n    426a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4271 <send_full_notify+0x1381>\n    4271:\t56                   \tpush   %rsi\n    4272:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 4279 <send_full_notify+0x1389>\n    4279:\t49 89 d8             \tmov    %rbx,%r8\n    427c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4283 <send_full_notify+0x1393>\n    4283:\t48 89 c7             \tmov    %rax,%rdi\n    4286:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    428b:\te8 00 00 00 00       \tcall   4290 <send_full_notify+0x13a0>\n    4290:\t48 83 c4 10          \tadd    $0x10,%rsp\n    4294:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 429b <send_full_notify+0x13ab>\n    429b:\t8b 00                \tmov    (%rax),%eax\n    429d:\t85 c0                \ttest   %eax,%eax\n    429f:\t0f 95 c0             \tsetne  %al\n    42a2:\t0f b6 c0             \tmovzbl %al,%eax\n    42a5:\t48 85 c0             \ttest   %rax,%rax\n    42a8:\t0f 84 4c 01 00 00    \tje     43fa <send_full_notify+0x150a>\n    42ae:\te8 00 00 00 00       \tcall   42b3 <send_full_notify+0x13c3>\n    42b3:\te9 42 01 00 00       \tjmp    43fa <send_full_notify+0x150a>\n    42b8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 42bf <send_full_notify+0x13cf>\n    42bf:\t48 8b 00             \tmov    (%rax),%rax\n    42c2:\t48 85 c0             \ttest   %rax,%rax\n    42c5:\t0f 95 c0             \tsetne  %al\n    42c8:\t0f b6 c0             \tmovzbl %al,%eax\n    42cb:\t48 85 c0             \ttest   %rax,%rax\n    42ce:\t0f 84 a8 00 00 00    \tje     437c <send_full_notify+0x148c>\n    42d4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 42db <send_full_notify+0x13eb>\n    42db:\t4c 8b 28             \tmov    (%rax),%r13\n    42de:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n    42e4:\t8d 50 05             \tlea    0x5(%rax),%edx\n    42e7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 42ee <send_full_notify+0x13fe>\n    42ee:\t48 63 d2             \tmovslq %edx,%rdx\n    42f1:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    42f5:\t48 01 d0             \tadd    %rdx,%rax\n    42f8:\t4c 8b 38             \tmov    (%rax),%r15\n    42fb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4302 <send_full_notify+0x1412>\n    4302:\t48 8b 00             \tmov    (%rax),%rax\n    4305:\t4c 8b 20             \tmov    (%rax),%r12\n    4308:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 430f <send_full_notify+0x141f>\n    430f:\t48 8b 00             \tmov    (%rax),%rax\n    4312:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    4315:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n    431b:\t8d 50 05             \tlea    0x5(%rax),%edx\n    431e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4325 <send_full_notify+0x1435>\n    4325:\t48 63 d2             \tmovslq %edx,%rdx\n    4328:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    432c:\t48 01 d0             \tadd    %rdx,%rax\n    432f:\t48 83 c0 08          \tadd    $0x8,%rax\n    4333:\t44 8b 30             \tmov    (%rax),%r14d\n    4336:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    433b:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4342 <send_full_notify+0x1452>\n    4342:\te8 00 00 00 00       \tcall   4347 <send_full_notify+0x1457>\n    4347:\t44 09 f0             \tor     %r14d,%eax\n    434a:\t48 83 ec 08          \tsub    $0x8,%rsp\n    434e:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 4355 <send_full_notify+0x1465>\n    4355:\t52                   \tpush   %rdx\n    4356:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 435d <send_full_notify+0x146d>\n    435d:\t4d 89 f8             \tmov    %r15,%r8\n    4360:\t4c 89 e1             \tmov    %r12,%rcx\n    4363:\t89 da                \tmov    %ebx,%edx\n    4365:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 436c <send_full_notify+0x147c>\n    436c:\t89 c7                \tmov    %eax,%edi\n    436e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4373:\t41 ff d5             \tcall   *%r13\n    4376:\t48 83 c4 10          \tadd    $0x10,%rsp\n    437a:\teb 7e                \tjmp    43fa <send_full_notify+0x150a>\n    437c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4383 <send_full_notify+0x1493>\n    4383:\t4c 8b 20             \tmov    (%rax),%r12\n    4386:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n    438c:\t8d 50 05             \tlea    0x5(%rax),%edx\n    438f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4396 <send_full_notify+0x14a6>\n    4396:\t48 63 d2             \tmovslq %edx,%rdx\n    4399:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    439d:\t48 01 d0             \tadd    %rdx,%rax\n    43a0:\t48 8b 18             \tmov    (%rax),%rbx\n    43a3:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n    43a9:\t8d 50 05             \tlea    0x5(%rax),%edx\n    43ac:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 43b3 <send_full_notify+0x14c3>\n    43b3:\t48 63 d2             \tmovslq %edx,%rdx\n    43b6:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    43ba:\t48 01 d0             \tadd    %rdx,%rax\n    43bd:\t48 83 c0 08          \tadd    $0x8,%rax\n    43c1:\t44 8b 28             \tmov    (%rax),%r13d\n    43c4:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    43c9:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 43d0 <send_full_notify+0x14e0>\n    43d0:\te8 00 00 00 00       \tcall   43d5 <send_full_notify+0x14e5>\n    43d5:\t44 09 e8             \tor     %r13d,%eax\n    43d8:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 43df <send_full_notify+0x14ef>\n    43df:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 43e6 <send_full_notify+0x14f6>\n    43e6:\t48 89 da             \tmov    %rbx,%rdx\n    43e9:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 43f0 <send_full_notify+0x1500>\n    43f0:\t89 c7                \tmov    %eax,%edi\n    43f2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    43f7:\t41 ff d4             \tcall   *%r12\n    43fa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4401 <send_full_notify+0x1511>\n    4401:\t8b 00                \tmov    (%rax),%eax\n    4403:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    4406:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 440d <send_full_notify+0x151d>\n    440d:\t89 10                \tmov    %edx,(%rax)\n    440f:\te9 12 29 00 00       \tjmp    6d26 <send_full_notify+0x3e36>\n    4414:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n    441b:\t8b 40 20             \tmov    0x20(%rax),%eax\n    441e:\t85 c0                \ttest   %eax,%eax\n    4420:\t0f 8e 49 03 00 00    \tjle    476f <send_full_notify+0x187f>\n    4426:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 442d <send_full_notify+0x153d>\n    442d:\t4c 8b 50 58          \tmov    0x58(%rax),%r10\n    4431:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4438 <send_full_notify+0x1548>\n    4438:\t48 8b 00             \tmov    (%rax),%rax\n    443b:\t48 8d bd d0 fe ff ff \tlea    -0x130(%rbp),%rdi\n    4442:\t48 8d 8d 40 ff ff ff \tlea    -0xc0(%rbp),%rcx\n    4449:\t48 8d 95 f0 fe ff ff \tlea    -0x110(%rbp),%rdx\n    4450:\t48 8d b5 48 ff ff ff \tlea    -0xb8(%rbp),%rsi\n    4457:\t6a 01                \tpush   $0x1\n    4459:\t6a 01                \tpush   $0x1\n    445b:\t49 89 f9             \tmov    %rdi,%r9\n    445e:\t49 89 c8             \tmov    %rcx,%r8\n    4461:\t48 89 d1             \tmov    %rdx,%rcx\n    4464:\tba 00 00 00 00       \tmov    $0x0,%edx\n    4469:\t48 89 c7             \tmov    %rax,%rdi\n    446c:\t41 ff d2             \tcall   *%r10\n    446f:\t48 83 c4 10          \tadd    $0x10,%rsp\n    4473:\t85 c0                \ttest   %eax,%eax\n    4475:\t0f 89 f4 02 00 00    \tjns    476f <send_full_notify+0x187f>\n    447b:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    4480:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4487 <send_full_notify+0x1597>\n    4487:\te8 00 00 00 00       \tcall   448c <send_full_notify+0x159c>\n    448c:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    448f:\t0f 8c 94 28 00 00    \tjl     6d29 <send_full_notify+0x3e39>\n    4495:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 449c <send_full_notify+0x15ac>\n    449c:\t8b 00                \tmov    (%rax),%eax\n    449e:\t85 c0                \ttest   %eax,%eax\n    44a0:\t0f 85 83 28 00 00    \tjne    6d29 <send_full_notify+0x3e39>\n    44a6:\tc7 45 ac ff ff ff ff \tmovl   $0xffffffff,-0x54(%rbp)\n    44ad:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 44b4 <send_full_notify+0x15c4>\n    44b4:\t8b 00                \tmov    (%rax),%eax\n    44b6:\t8d 50 01             \tlea    0x1(%rax),%edx\n    44b9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 44c0 <send_full_notify+0x15d0>\n    44c0:\t89 10                \tmov    %edx,(%rax)\n    44c2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 44c9 <send_full_notify+0x15d9>\n    44c9:\t8b 00                \tmov    (%rax),%eax\n    44cb:\t85 c0                \ttest   %eax,%eax\n    44cd:\t0f 95 c0             \tsetne  %al\n    44d0:\t0f b6 c0             \tmovzbl %al,%eax\n    44d3:\t48 85 c0             \ttest   %rax,%rax\n    44d6:\t0f 84 43 01 00 00    \tje     461f <send_full_notify+0x172f>\n    44dc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 44e3 <send_full_notify+0x15f3>\n    44e3:\t8b 00                \tmov    (%rax),%eax\n    44e5:\t85 c0                \ttest   %eax,%eax\n    44e7:\t0f 95 c0             \tsetne  %al\n    44ea:\t0f b6 c0             \tmovzbl %al,%eax\n    44ed:\t48 85 c0             \ttest   %rax,%rax\n    44f0:\t74 0a                \tje     44fc <send_full_notify+0x160c>\n    44f2:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n    44f5:\t89 c7                \tmov    %eax,%edi\n    44f7:\te8 00 00 00 00       \tcall   44fc <send_full_notify+0x160c>\n    44fc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4503 <send_full_notify+0x1613>\n    4503:\t48 8b 00             \tmov    (%rax),%rax\n    4506:\t48 85 c0             \ttest   %rax,%rax\n    4509:\t0f 95 c0             \tsetne  %al\n    450c:\t0f b6 c0             \tmovzbl %al,%eax\n    450f:\t48 85 c0             \ttest   %rax,%rax\n    4512:\t0f 84 81 00 00 00    \tje     4599 <send_full_notify+0x16a9>\n    4518:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n    451b:\t8d 50 05             \tlea    0x5(%rax),%edx\n    451e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4525 <send_full_notify+0x1635>\n    4525:\t48 63 d2             \tmovslq %edx,%rdx\n    4528:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    452c:\t48 01 d0             \tadd    %rdx,%rax\n    452f:\t48 8b 18             \tmov    (%rax),%rbx\n    4532:\te8 00 00 00 00       \tcall   4537 <send_full_notify+0x1647>\n    4537:\t89 c6                \tmov    %eax,%esi\n    4539:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4540 <send_full_notify+0x1650>\n    4540:\t44 8b 00             \tmov    (%rax),%r8d\n    4543:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 454a <send_full_notify+0x165a>\n    454a:\t48 8b 00             \tmov    (%rax),%rax\n    454d:\t48 8b 08             \tmov    (%rax),%rcx\n    4550:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4557 <send_full_notify+0x1667>\n    4557:\t48 8b 00             \tmov    (%rax),%rax\n    455a:\t8b 50 08             \tmov    0x8(%rax),%edx\n    455d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4564 <send_full_notify+0x1674>\n    4564:\t48 8b 00             \tmov    (%rax),%rax\n    4567:\t48 83 ec 08          \tsub    $0x8,%rsp\n    456b:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4572 <send_full_notify+0x1682>\n    4572:\t57                   \tpush   %rdi\n    4573:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 457a <send_full_notify+0x168a>\n    457a:\t57                   \tpush   %rdi\n    457b:\t53                   \tpush   %rbx\n    457c:\t41 89 f1             \tmov    %esi,%r9d\n    457f:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4586 <send_full_notify+0x1696>\n    4586:\t48 89 c7             \tmov    %rax,%rdi\n    4589:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    458e:\te8 00 00 00 00       \tcall   4593 <send_full_notify+0x16a3>\n    4593:\t48 83 c4 20          \tadd    $0x20,%rsp\n    4597:\teb 62                \tjmp    45fb <send_full_notify+0x170b>\n    4599:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n    459c:\t8d 50 05             \tlea    0x5(%rax),%edx\n    459f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 45a6 <send_full_notify+0x16b6>\n    45a6:\t48 63 d2             \tmovslq %edx,%rdx\n    45a9:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    45ad:\t48 01 d0             \tadd    %rdx,%rax\n    45b0:\t48 8b 18             \tmov    (%rax),%rbx\n    45b3:\te8 00 00 00 00       \tcall   45b8 <send_full_notify+0x16c8>\n    45b8:\t89 c1                \tmov    %eax,%ecx\n    45ba:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 45c1 <send_full_notify+0x16d1>\n    45c1:\t8b 10                \tmov    (%rax),%edx\n    45c3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 45ca <send_full_notify+0x16da>\n    45ca:\t48 8b 00             \tmov    (%rax),%rax\n    45cd:\t48 83 ec 08          \tsub    $0x8,%rsp\n    45d1:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 45d8 <send_full_notify+0x16e8>\n    45d8:\t56                   \tpush   %rsi\n    45d9:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 45e0 <send_full_notify+0x16f0>\n    45e0:\t49 89 d8             \tmov    %rbx,%r8\n    45e3:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 45ea <send_full_notify+0x16fa>\n    45ea:\t48 89 c7             \tmov    %rax,%rdi\n    45ed:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    45f2:\te8 00 00 00 00       \tcall   45f7 <send_full_notify+0x1707>\n    45f7:\t48 83 c4 10          \tadd    $0x10,%rsp\n    45fb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4602 <send_full_notify+0x1712>\n    4602:\t8b 00                \tmov    (%rax),%eax\n    4604:\t85 c0                \ttest   %eax,%eax\n    4606:\t0f 95 c0             \tsetne  %al\n    4609:\t0f b6 c0             \tmovzbl %al,%eax\n    460c:\t48 85 c0             \ttest   %rax,%rax\n    460f:\t0f 84 40 01 00 00    \tje     4755 <send_full_notify+0x1865>\n    4615:\te8 00 00 00 00       \tcall   461a <send_full_notify+0x172a>\n    461a:\te9 36 01 00 00       \tjmp    4755 <send_full_notify+0x1865>\n    461f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4626 <send_full_notify+0x1736>\n    4626:\t48 8b 00             \tmov    (%rax),%rax\n    4629:\t48 85 c0             \ttest   %rax,%rax\n    462c:\t0f 95 c0             \tsetne  %al\n    462f:\t0f b6 c0             \tmovzbl %al,%eax\n    4632:\t48 85 c0             \ttest   %rax,%rax\n    4635:\t0f 84 a2 00 00 00    \tje     46dd <send_full_notify+0x17ed>\n    463b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4642 <send_full_notify+0x1752>\n    4642:\t4c 8b 28             \tmov    (%rax),%r13\n    4645:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n    4648:\t8d 50 05             \tlea    0x5(%rax),%edx\n    464b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4652 <send_full_notify+0x1762>\n    4652:\t48 63 d2             \tmovslq %edx,%rdx\n    4655:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4659:\t48 01 d0             \tadd    %rdx,%rax\n    465c:\t4c 8b 38             \tmov    (%rax),%r15\n    465f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4666 <send_full_notify+0x1776>\n    4666:\t48 8b 00             \tmov    (%rax),%rax\n    4669:\t4c 8b 20             \tmov    (%rax),%r12\n    466c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4673 <send_full_notify+0x1783>\n    4673:\t48 8b 00             \tmov    (%rax),%rax\n    4676:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    4679:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n    467c:\t8d 50 05             \tlea    0x5(%rax),%edx\n    467f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4686 <send_full_notify+0x1796>\n    4686:\t48 63 d2             \tmovslq %edx,%rdx\n    4689:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    468d:\t48 01 d0             \tadd    %rdx,%rax\n    4690:\t48 83 c0 08          \tadd    $0x8,%rax\n    4694:\t44 8b 30             \tmov    (%rax),%r14d\n    4697:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    469c:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 46a3 <send_full_notify+0x17b3>\n    46a3:\te8 00 00 00 00       \tcall   46a8 <send_full_notify+0x17b8>\n    46a8:\t44 09 f0             \tor     %r14d,%eax\n    46ab:\t48 83 ec 08          \tsub    $0x8,%rsp\n    46af:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 46b6 <send_full_notify+0x17c6>\n    46b6:\t52                   \tpush   %rdx\n    46b7:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 46be <send_full_notify+0x17ce>\n    46be:\t4d 89 f8             \tmov    %r15,%r8\n    46c1:\t4c 89 e1             \tmov    %r12,%rcx\n    46c4:\t89 da                \tmov    %ebx,%edx\n    46c6:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 46cd <send_full_notify+0x17dd>\n    46cd:\t89 c7                \tmov    %eax,%edi\n    46cf:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    46d4:\t41 ff d5             \tcall   *%r13\n    46d7:\t48 83 c4 10          \tadd    $0x10,%rsp\n    46db:\teb 78                \tjmp    4755 <send_full_notify+0x1865>\n    46dd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 46e4 <send_full_notify+0x17f4>\n    46e4:\t4c 8b 20             \tmov    (%rax),%r12\n    46e7:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n    46ea:\t8d 50 05             \tlea    0x5(%rax),%edx\n    46ed:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 46f4 <send_full_notify+0x1804>\n    46f4:\t48 63 d2             \tmovslq %edx,%rdx\n    46f7:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    46fb:\t48 01 d0             \tadd    %rdx,%rax\n    46fe:\t48 8b 18             \tmov    (%rax),%rbx\n    4701:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n    4704:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4707:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 470e <send_full_notify+0x181e>\n    470e:\t48 63 d2             \tmovslq %edx,%rdx\n    4711:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4715:\t48 01 d0             \tadd    %rdx,%rax\n    4718:\t48 83 c0 08          \tadd    $0x8,%rax\n    471c:\t44 8b 28             \tmov    (%rax),%r13d\n    471f:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    4724:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 472b <send_full_notify+0x183b>\n    472b:\te8 00 00 00 00       \tcall   4730 <send_full_notify+0x1840>\n    4730:\t44 09 e8             \tor     %r13d,%eax\n    4733:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 473a <send_full_notify+0x184a>\n    473a:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 4741 <send_full_notify+0x1851>\n    4741:\t48 89 da             \tmov    %rbx,%rdx\n    4744:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 474b <send_full_notify+0x185b>\n    474b:\t89 c7                \tmov    %eax,%edi\n    474d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4752:\t41 ff d4             \tcall   *%r12\n    4755:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 475c <send_full_notify+0x186c>\n    475c:\t8b 00                \tmov    (%rax),%eax\n    475e:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    4761:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4768 <send_full_notify+0x1878>\n    4768:\t89 10                \tmov    %edx,(%rax)\n    476a:\te9 ba 25 00 00       \tjmp    6d29 <send_full_notify+0x3e39>\n    476f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4776 <send_full_notify+0x1886>\n    4776:\t8b 00                \tmov    (%rax),%eax\n    4778:\t83 f8 02             \tcmp    $0x2,%eax\n    477b:\t0f 85 30 03 00 00    \tjne    4ab1 <send_full_notify+0x1bc1>\n    4781:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4788 <send_full_notify+0x1898>\n    4788:\t48 8b 80 98 00 00 00 \tmov    0x98(%rax),%rax\n    478f:\t48 85 c0             \ttest   %rax,%rax\n    4792:\t0f 84 19 03 00 00    \tje     4ab1 <send_full_notify+0x1bc1>\n    4798:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 479f <send_full_notify+0x18af>\n    479f:\t48 8b 90 98 00 00 00 \tmov    0x98(%rax),%rdx\n    47a6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 47ad <send_full_notify+0x18bd>\n    47ad:\t48 8b 00             \tmov    (%rax),%rax\n    47b0:\t48 89 c7             \tmov    %rax,%rdi\n    47b3:\tff d2                \tcall   *%rdx\n    47b5:\t85 c0                \ttest   %eax,%eax\n    47b7:\t0f 89 f4 02 00 00    \tjns    4ab1 <send_full_notify+0x1bc1>\n    47bd:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    47c2:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 47c9 <send_full_notify+0x18d9>\n    47c9:\te8 00 00 00 00       \tcall   47ce <send_full_notify+0x18de>\n    47ce:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    47d1:\t0f 8c 55 25 00 00    \tjl     6d2c <send_full_notify+0x3e3c>\n    47d7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 47de <send_full_notify+0x18ee>\n    47de:\t8b 00                \tmov    (%rax),%eax\n    47e0:\t85 c0                \ttest   %eax,%eax\n    47e2:\t0f 85 44 25 00 00    \tjne    6d2c <send_full_notify+0x3e3c>\n    47e8:\tc7 45 a8 ff ff ff ff \tmovl   $0xffffffff,-0x58(%rbp)\n    47ef:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 47f6 <send_full_notify+0x1906>\n    47f6:\t8b 00                \tmov    (%rax),%eax\n    47f8:\t8d 50 01             \tlea    0x1(%rax),%edx\n    47fb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4802 <send_full_notify+0x1912>\n    4802:\t89 10                \tmov    %edx,(%rax)\n    4804:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 480b <send_full_notify+0x191b>\n    480b:\t8b 00                \tmov    (%rax),%eax\n    480d:\t85 c0                \ttest   %eax,%eax\n    480f:\t0f 95 c0             \tsetne  %al\n    4812:\t0f b6 c0             \tmovzbl %al,%eax\n    4815:\t48 85 c0             \ttest   %rax,%rax\n    4818:\t0f 84 43 01 00 00    \tje     4961 <send_full_notify+0x1a71>\n    481e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4825 <send_full_notify+0x1935>\n    4825:\t8b 00                \tmov    (%rax),%eax\n    4827:\t85 c0                \ttest   %eax,%eax\n    4829:\t0f 95 c0             \tsetne  %al\n    482c:\t0f b6 c0             \tmovzbl %al,%eax\n    482f:\t48 85 c0             \ttest   %rax,%rax\n    4832:\t74 0a                \tje     483e <send_full_notify+0x194e>\n    4834:\t8b 45 a8             \tmov    -0x58(%rbp),%eax\n    4837:\t89 c7                \tmov    %eax,%edi\n    4839:\te8 00 00 00 00       \tcall   483e <send_full_notify+0x194e>\n    483e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4845 <send_full_notify+0x1955>\n    4845:\t48 8b 00             \tmov    (%rax),%rax\n    4848:\t48 85 c0             \ttest   %rax,%rax\n    484b:\t0f 95 c0             \tsetne  %al\n    484e:\t0f b6 c0             \tmovzbl %al,%eax\n    4851:\t48 85 c0             \ttest   %rax,%rax\n    4854:\t0f 84 81 00 00 00    \tje     48db <send_full_notify+0x19eb>\n    485a:\t8b 45 a8             \tmov    -0x58(%rbp),%eax\n    485d:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4860:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4867 <send_full_notify+0x1977>\n    4867:\t48 63 d2             \tmovslq %edx,%rdx\n    486a:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    486e:\t48 01 d0             \tadd    %rdx,%rax\n    4871:\t48 8b 18             \tmov    (%rax),%rbx\n    4874:\te8 00 00 00 00       \tcall   4879 <send_full_notify+0x1989>\n    4879:\t89 c6                \tmov    %eax,%esi\n    487b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4882 <send_full_notify+0x1992>\n    4882:\t44 8b 00             \tmov    (%rax),%r8d\n    4885:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 488c <send_full_notify+0x199c>\n    488c:\t48 8b 00             \tmov    (%rax),%rax\n    488f:\t48 8b 08             \tmov    (%rax),%rcx\n    4892:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4899 <send_full_notify+0x19a9>\n    4899:\t48 8b 00             \tmov    (%rax),%rax\n    489c:\t8b 50 08             \tmov    0x8(%rax),%edx\n    489f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 48a6 <send_full_notify+0x19b6>\n    48a6:\t48 8b 00             \tmov    (%rax),%rax\n    48a9:\t48 83 ec 08          \tsub    $0x8,%rsp\n    48ad:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 48b4 <send_full_notify+0x19c4>\n    48b4:\t57                   \tpush   %rdi\n    48b5:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 48bc <send_full_notify+0x19cc>\n    48bc:\t57                   \tpush   %rdi\n    48bd:\t53                   \tpush   %rbx\n    48be:\t41 89 f1             \tmov    %esi,%r9d\n    48c1:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 48c8 <send_full_notify+0x19d8>\n    48c8:\t48 89 c7             \tmov    %rax,%rdi\n    48cb:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    48d0:\te8 00 00 00 00       \tcall   48d5 <send_full_notify+0x19e5>\n    48d5:\t48 83 c4 20          \tadd    $0x20,%rsp\n    48d9:\teb 62                \tjmp    493d <send_full_notify+0x1a4d>\n    48db:\t8b 45 a8             \tmov    -0x58(%rbp),%eax\n    48de:\t8d 50 05             \tlea    0x5(%rax),%edx\n    48e1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 48e8 <send_full_notify+0x19f8>\n    48e8:\t48 63 d2             \tmovslq %edx,%rdx\n    48eb:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    48ef:\t48 01 d0             \tadd    %rdx,%rax\n    48f2:\t48 8b 18             \tmov    (%rax),%rbx\n    48f5:\te8 00 00 00 00       \tcall   48fa <send_full_notify+0x1a0a>\n    48fa:\t89 c1                \tmov    %eax,%ecx\n    48fc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4903 <send_full_notify+0x1a13>\n    4903:\t8b 10                \tmov    (%rax),%edx\n    4905:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 490c <send_full_notify+0x1a1c>\n    490c:\t48 8b 00             \tmov    (%rax),%rax\n    490f:\t48 83 ec 08          \tsub    $0x8,%rsp\n    4913:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 491a <send_full_notify+0x1a2a>\n    491a:\t56                   \tpush   %rsi\n    491b:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 4922 <send_full_notify+0x1a32>\n    4922:\t49 89 d8             \tmov    %rbx,%r8\n    4925:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 492c <send_full_notify+0x1a3c>\n    492c:\t48 89 c7             \tmov    %rax,%rdi\n    492f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4934:\te8 00 00 00 00       \tcall   4939 <send_full_notify+0x1a49>\n    4939:\t48 83 c4 10          \tadd    $0x10,%rsp\n    493d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4944 <send_full_notify+0x1a54>\n    4944:\t8b 00                \tmov    (%rax),%eax\n    4946:\t85 c0                \ttest   %eax,%eax\n    4948:\t0f 95 c0             \tsetne  %al\n    494b:\t0f b6 c0             \tmovzbl %al,%eax\n    494e:\t48 85 c0             \ttest   %rax,%rax\n    4951:\t0f 84 40 01 00 00    \tje     4a97 <send_full_notify+0x1ba7>\n    4957:\te8 00 00 00 00       \tcall   495c <send_full_notify+0x1a6c>\n    495c:\te9 36 01 00 00       \tjmp    4a97 <send_full_notify+0x1ba7>\n    4961:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4968 <send_full_notify+0x1a78>\n    4968:\t48 8b 00             \tmov    (%rax),%rax\n    496b:\t48 85 c0             \ttest   %rax,%rax\n    496e:\t0f 95 c0             \tsetne  %al\n    4971:\t0f b6 c0             \tmovzbl %al,%eax\n    4974:\t48 85 c0             \ttest   %rax,%rax\n    4977:\t0f 84 a2 00 00 00    \tje     4a1f <send_full_notify+0x1b2f>\n    497d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4984 <send_full_notify+0x1a94>\n    4984:\t4c 8b 28             \tmov    (%rax),%r13\n    4987:\t8b 45 a8             \tmov    -0x58(%rbp),%eax\n    498a:\t8d 50 05             \tlea    0x5(%rax),%edx\n    498d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4994 <send_full_notify+0x1aa4>\n    4994:\t48 63 d2             \tmovslq %edx,%rdx\n    4997:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    499b:\t48 01 d0             \tadd    %rdx,%rax\n    499e:\t4c 8b 38             \tmov    (%rax),%r15\n    49a1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 49a8 <send_full_notify+0x1ab8>\n    49a8:\t48 8b 00             \tmov    (%rax),%rax\n    49ab:\t4c 8b 20             \tmov    (%rax),%r12\n    49ae:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 49b5 <send_full_notify+0x1ac5>\n    49b5:\t48 8b 00             \tmov    (%rax),%rax\n    49b8:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    49bb:\t8b 45 a8             \tmov    -0x58(%rbp),%eax\n    49be:\t8d 50 05             \tlea    0x5(%rax),%edx\n    49c1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 49c8 <send_full_notify+0x1ad8>\n    49c8:\t48 63 d2             \tmovslq %edx,%rdx\n    49cb:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    49cf:\t48 01 d0             \tadd    %rdx,%rax\n    49d2:\t48 83 c0 08          \tadd    $0x8,%rax\n    49d6:\t44 8b 30             \tmov    (%rax),%r14d\n    49d9:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    49de:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 49e5 <send_full_notify+0x1af5>\n    49e5:\te8 00 00 00 00       \tcall   49ea <send_full_notify+0x1afa>\n    49ea:\t44 09 f0             \tor     %r14d,%eax\n    49ed:\t48 83 ec 08          \tsub    $0x8,%rsp\n    49f1:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 49f8 <send_full_notify+0x1b08>\n    49f8:\t52                   \tpush   %rdx\n    49f9:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 4a00 <send_full_notify+0x1b10>\n    4a00:\t4d 89 f8             \tmov    %r15,%r8\n    4a03:\t4c 89 e1             \tmov    %r12,%rcx\n    4a06:\t89 da                \tmov    %ebx,%edx\n    4a08:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4a0f <send_full_notify+0x1b1f>\n    4a0f:\t89 c7                \tmov    %eax,%edi\n    4a11:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4a16:\t41 ff d5             \tcall   *%r13\n    4a19:\t48 83 c4 10          \tadd    $0x10,%rsp\n    4a1d:\teb 78                \tjmp    4a97 <send_full_notify+0x1ba7>\n    4a1f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4a26 <send_full_notify+0x1b36>\n    4a26:\t4c 8b 20             \tmov    (%rax),%r12\n    4a29:\t8b 45 a8             \tmov    -0x58(%rbp),%eax\n    4a2c:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4a2f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4a36 <send_full_notify+0x1b46>\n    4a36:\t48 63 d2             \tmovslq %edx,%rdx\n    4a39:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4a3d:\t48 01 d0             \tadd    %rdx,%rax\n    4a40:\t48 8b 18             \tmov    (%rax),%rbx\n    4a43:\t8b 45 a8             \tmov    -0x58(%rbp),%eax\n    4a46:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4a49:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4a50 <send_full_notify+0x1b60>\n    4a50:\t48 63 d2             \tmovslq %edx,%rdx\n    4a53:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4a57:\t48 01 d0             \tadd    %rdx,%rax\n    4a5a:\t48 83 c0 08          \tadd    $0x8,%rax\n    4a5e:\t44 8b 28             \tmov    (%rax),%r13d\n    4a61:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    4a66:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4a6d <send_full_notify+0x1b7d>\n    4a6d:\te8 00 00 00 00       \tcall   4a72 <send_full_notify+0x1b82>\n    4a72:\t44 09 e8             \tor     %r13d,%eax\n    4a75:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 4a7c <send_full_notify+0x1b8c>\n    4a7c:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 4a83 <send_full_notify+0x1b93>\n    4a83:\t48 89 da             \tmov    %rbx,%rdx\n    4a86:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4a8d <send_full_notify+0x1b9d>\n    4a8d:\t89 c7                \tmov    %eax,%edi\n    4a8f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4a94:\t41 ff d4             \tcall   *%r12\n    4a97:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4a9e <send_full_notify+0x1bae>\n    4a9e:\t8b 00                \tmov    (%rax),%eax\n    4aa0:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    4aa3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4aaa <send_full_notify+0x1bba>\n    4aaa:\t89 10                \tmov    %edx,(%rax)\n    4aac:\te9 7b 22 00 00       \tjmp    6d2c <send_full_notify+0x3e3c>\n    4ab1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4ab8 <send_full_notify+0x1bc8>\n    4ab8:\t4c 8b 50 18          \tmov    0x18(%rax),%r10\n    4abc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4ac3 <send_full_notify+0x1bd3>\n    4ac3:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    4ac7:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 4ace <send_full_notify+0x1bde>\n    4ace:\t41 b8 b4 00 00 00    \tmov    $0xb4,%r8d\n    4ad4:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 4adb <send_full_notify+0x1beb>\n    4adb:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 4ae2 <send_full_notify+0x1bf2>\n    4ae2:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    4ae7:\t48 89 c7             \tmov    %rax,%rdi\n    4aea:\t41 ff d2             \tcall   *%r10\n    4aed:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 4af4 <send_full_notify+0x1c04>\n    4af4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4afb <send_full_notify+0x1c0b>\n    4afb:\t48 85 c0             \ttest   %rax,%rax\n    4afe:\t0f 85 22 03 00 00    \tjne    4e26 <send_full_notify+0x1f36>\n    4b04:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    4b09:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4b10 <send_full_notify+0x1c20>\n    4b10:\te8 00 00 00 00       \tcall   4b15 <send_full_notify+0x1c25>\n    4b15:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    4b18:\t0f 8c 11 22 00 00    \tjl     6d2f <send_full_notify+0x3e3f>\n    4b1e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4b25 <send_full_notify+0x1c35>\n    4b25:\t8b 00                \tmov    (%rax),%eax\n    4b27:\t85 c0                \ttest   %eax,%eax\n    4b29:\t0f 85 00 22 00 00    \tjne    6d2f <send_full_notify+0x3e3f>\n    4b2f:\tc7 85 74 ff ff ff ff \tmovl   $0xffffffff,-0x8c(%rbp)\n    4b36:\tff ff ff \n    4b39:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4b40 <send_full_notify+0x1c50>\n    4b40:\t8b 00                \tmov    (%rax),%eax\n    4b42:\t8d 50 01             \tlea    0x1(%rax),%edx\n    4b45:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4b4c <send_full_notify+0x1c5c>\n    4b4c:\t89 10                \tmov    %edx,(%rax)\n    4b4e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4b55 <send_full_notify+0x1c65>\n    4b55:\t8b 00                \tmov    (%rax),%eax\n    4b57:\t85 c0                \ttest   %eax,%eax\n    4b59:\t0f 95 c0             \tsetne  %al\n    4b5c:\t0f b6 c0             \tmovzbl %al,%eax\n    4b5f:\t48 85 c0             \ttest   %rax,%rax\n    4b62:\t0f 84 54 01 00 00    \tje     4cbc <send_full_notify+0x1dcc>\n    4b68:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4b6f <send_full_notify+0x1c7f>\n    4b6f:\t8b 00                \tmov    (%rax),%eax\n    4b71:\t85 c0                \ttest   %eax,%eax\n    4b73:\t0f 95 c0             \tsetne  %al\n    4b76:\t0f b6 c0             \tmovzbl %al,%eax\n    4b79:\t48 85 c0             \ttest   %rax,%rax\n    4b7c:\t74 0d                \tje     4b8b <send_full_notify+0x1c9b>\n    4b7e:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n    4b84:\t89 c7                \tmov    %eax,%edi\n    4b86:\te8 00 00 00 00       \tcall   4b8b <send_full_notify+0x1c9b>\n    4b8b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4b92 <send_full_notify+0x1ca2>\n    4b92:\t48 8b 00             \tmov    (%rax),%rax\n    4b95:\t48 85 c0             \ttest   %rax,%rax\n    4b98:\t0f 95 c0             \tsetne  %al\n    4b9b:\t0f b6 c0             \tmovzbl %al,%eax\n    4b9e:\t48 85 c0             \ttest   %rax,%rax\n    4ba1:\t0f 84 88 00 00 00    \tje     4c2f <send_full_notify+0x1d3f>\n    4ba7:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n    4bad:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4bb0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4bb7 <send_full_notify+0x1cc7>\n    4bb7:\t48 63 d2             \tmovslq %edx,%rdx\n    4bba:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4bbe:\t48 01 d0             \tadd    %rdx,%rax\n    4bc1:\t48 8b 18             \tmov    (%rax),%rbx\n    4bc4:\te8 00 00 00 00       \tcall   4bc9 <send_full_notify+0x1cd9>\n    4bc9:\t89 c6                \tmov    %eax,%esi\n    4bcb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4bd2 <send_full_notify+0x1ce2>\n    4bd2:\t44 8b 00             \tmov    (%rax),%r8d\n    4bd5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4bdc <send_full_notify+0x1cec>\n    4bdc:\t48 8b 00             \tmov    (%rax),%rax\n    4bdf:\t48 8b 08             \tmov    (%rax),%rcx\n    4be2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4be9 <send_full_notify+0x1cf9>\n    4be9:\t48 8b 00             \tmov    (%rax),%rax\n    4bec:\t8b 50 08             \tmov    0x8(%rax),%edx\n    4bef:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4bf6 <send_full_notify+0x1d06>\n    4bf6:\t48 8b 00             \tmov    (%rax),%rax\n    4bf9:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4c00 <send_full_notify+0x1d10>\n    4c00:\t57                   \tpush   %rdi\n    4c01:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4c08 <send_full_notify+0x1d18>\n    4c08:\t57                   \tpush   %rdi\n    4c09:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4c10 <send_full_notify+0x1d20>\n    4c10:\t57                   \tpush   %rdi\n    4c11:\t53                   \tpush   %rbx\n    4c12:\t41 89 f1             \tmov    %esi,%r9d\n    4c15:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4c1c <send_full_notify+0x1d2c>\n    4c1c:\t48 89 c7             \tmov    %rax,%rdi\n    4c1f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4c24:\te8 00 00 00 00       \tcall   4c29 <send_full_notify+0x1d39>\n    4c29:\t48 83 c4 20          \tadd    $0x20,%rsp\n    4c2d:\teb 69                \tjmp    4c98 <send_full_notify+0x1da8>\n    4c2f:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n    4c35:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4c38:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4c3f <send_full_notify+0x1d4f>\n    4c3f:\t48 63 d2             \tmovslq %edx,%rdx\n    4c42:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4c46:\t48 01 d0             \tadd    %rdx,%rax\n    4c49:\t48 8b 18             \tmov    (%rax),%rbx\n    4c4c:\te8 00 00 00 00       \tcall   4c51 <send_full_notify+0x1d61>\n    4c51:\t89 c1                \tmov    %eax,%ecx\n    4c53:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4c5a <send_full_notify+0x1d6a>\n    4c5a:\t8b 10                \tmov    (%rax),%edx\n    4c5c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4c63 <send_full_notify+0x1d73>\n    4c63:\t48 8b 00             \tmov    (%rax),%rax\n    4c66:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4c6d <send_full_notify+0x1d7d>\n    4c6d:\t56                   \tpush   %rsi\n    4c6e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4c75 <send_full_notify+0x1d85>\n    4c75:\t56                   \tpush   %rsi\n    4c76:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 4c7d <send_full_notify+0x1d8d>\n    4c7d:\t49 89 d8             \tmov    %rbx,%r8\n    4c80:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4c87 <send_full_notify+0x1d97>\n    4c87:\t48 89 c7             \tmov    %rax,%rdi\n    4c8a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4c8f:\te8 00 00 00 00       \tcall   4c94 <send_full_notify+0x1da4>\n    4c94:\t48 83 c4 10          \tadd    $0x10,%rsp\n    4c98:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4c9f <send_full_notify+0x1daf>\n    4c9f:\t8b 00                \tmov    (%rax),%eax\n    4ca1:\t85 c0                \ttest   %eax,%eax\n    4ca3:\t0f 95 c0             \tsetne  %al\n    4ca6:\t0f b6 c0             \tmovzbl %al,%eax\n    4ca9:\t48 85 c0             \ttest   %rax,%rax\n    4cac:\t0f 84 5a 01 00 00    \tje     4e0c <send_full_notify+0x1f1c>\n    4cb2:\te8 00 00 00 00       \tcall   4cb7 <send_full_notify+0x1dc7>\n    4cb7:\te9 50 01 00 00       \tjmp    4e0c <send_full_notify+0x1f1c>\n    4cbc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4cc3 <send_full_notify+0x1dd3>\n    4cc3:\t48 8b 00             \tmov    (%rax),%rax\n    4cc6:\t48 85 c0             \ttest   %rax,%rax\n    4cc9:\t0f 95 c0             \tsetne  %al\n    4ccc:\t0f b6 c0             \tmovzbl %al,%eax\n    4ccf:\t48 85 c0             \ttest   %rax,%rax\n    4cd2:\t0f 84 af 00 00 00    \tje     4d87 <send_full_notify+0x1e97>\n    4cd8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4cdf <send_full_notify+0x1def>\n    4cdf:\t4c 8b 28             \tmov    (%rax),%r13\n    4ce2:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n    4ce8:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4ceb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4cf2 <send_full_notify+0x1e02>\n    4cf2:\t48 63 d2             \tmovslq %edx,%rdx\n    4cf5:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4cf9:\t48 01 d0             \tadd    %rdx,%rax\n    4cfc:\t4c 8b 38             \tmov    (%rax),%r15\n    4cff:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4d06 <send_full_notify+0x1e16>\n    4d06:\t48 8b 00             \tmov    (%rax),%rax\n    4d09:\t4c 8b 20             \tmov    (%rax),%r12\n    4d0c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4d13 <send_full_notify+0x1e23>\n    4d13:\t48 8b 00             \tmov    (%rax),%rax\n    4d16:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    4d19:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n    4d1f:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4d22:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4d29 <send_full_notify+0x1e39>\n    4d29:\t48 63 d2             \tmovslq %edx,%rdx\n    4d2c:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4d30:\t48 01 d0             \tadd    %rdx,%rax\n    4d33:\t48 83 c0 08          \tadd    $0x8,%rax\n    4d37:\t44 8b 30             \tmov    (%rax),%r14d\n    4d3a:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    4d3f:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4d46 <send_full_notify+0x1e56>\n    4d46:\te8 00 00 00 00       \tcall   4d4b <send_full_notify+0x1e5b>\n    4d4b:\t44 09 f0             \tor     %r14d,%eax\n    4d4e:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 4d55 <send_full_notify+0x1e65>\n    4d55:\t52                   \tpush   %rdx\n    4d56:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 4d5d <send_full_notify+0x1e6d>\n    4d5d:\t52                   \tpush   %rdx\n    4d5e:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 4d65 <send_full_notify+0x1e75>\n    4d65:\t4d 89 f8             \tmov    %r15,%r8\n    4d68:\t4c 89 e1             \tmov    %r12,%rcx\n    4d6b:\t89 da                \tmov    %ebx,%edx\n    4d6d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4d74 <send_full_notify+0x1e84>\n    4d74:\t89 c7                \tmov    %eax,%edi\n    4d76:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4d7b:\t41 ff d5             \tcall   *%r13\n    4d7e:\t48 83 c4 10          \tadd    $0x10,%rsp\n    4d82:\te9 85 00 00 00       \tjmp    4e0c <send_full_notify+0x1f1c>\n    4d87:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4d8e <send_full_notify+0x1e9e>\n    4d8e:\t4c 8b 20             \tmov    (%rax),%r12\n    4d91:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n    4d97:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4d9a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4da1 <send_full_notify+0x1eb1>\n    4da1:\t48 63 d2             \tmovslq %edx,%rdx\n    4da4:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4da8:\t48 01 d0             \tadd    %rdx,%rax\n    4dab:\t48 8b 18             \tmov    (%rax),%rbx\n    4dae:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n    4db4:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4db7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4dbe <send_full_notify+0x1ece>\n    4dbe:\t48 63 d2             \tmovslq %edx,%rdx\n    4dc1:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4dc5:\t48 01 d0             \tadd    %rdx,%rax\n    4dc8:\t48 83 c0 08          \tadd    $0x8,%rax\n    4dcc:\t44 8b 28             \tmov    (%rax),%r13d\n    4dcf:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    4dd4:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4ddb <send_full_notify+0x1eeb>\n    4ddb:\te8 00 00 00 00       \tcall   4de0 <send_full_notify+0x1ef0>\n    4de0:\t44 09 e8             \tor     %r13d,%eax\n    4de3:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 4dea <send_full_notify+0x1efa>\n    4dea:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 4df1 <send_full_notify+0x1f01>\n    4df1:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 4df8 <send_full_notify+0x1f08>\n    4df8:\t48 89 da             \tmov    %rbx,%rdx\n    4dfb:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4e02 <send_full_notify+0x1f12>\n    4e02:\t89 c7                \tmov    %eax,%edi\n    4e04:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4e09:\t41 ff d4             \tcall   *%r12\n    4e0c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4e13 <send_full_notify+0x1f23>\n    4e13:\t8b 00                \tmov    (%rax),%eax\n    4e15:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    4e18:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4e1f <send_full_notify+0x1f2f>\n    4e1f:\t89 10                \tmov    %edx,(%rax)\n    4e21:\te9 09 1f 00 00       \tjmp    6d2f <send_full_notify+0x3e3f>\n    4e26:\tc7 05 00 00 00 00 00 \tmovl   $0x800,0x0(%rip)        # 4e30 <send_full_notify+0x1f40>\n    4e2d:\t08 00 00 \n    4e30:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4e37 <send_full_notify+0x1f47>\n    4e37:\t4c 8b 50 18          \tmov    0x18(%rax),%r10\n    4e3b:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 4e41 <send_full_notify+0x1f51>\n    4e41:\t48 63 f0             \tmovslq %eax,%rsi\n    4e44:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4e4b <send_full_notify+0x1f5b>\n    4e4b:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    4e4f:\t48 8b 1d 00 00 00 00 \tmov    0x0(%rip),%rbx        # 4e56 <send_full_notify+0x1f66>\n    4e56:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 4e5d <send_full_notify+0x1f6d>\n    4e5d:\t41 b8 bb 00 00 00    \tmov    $0xbb,%r8d\n    4e63:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 4e6a <send_full_notify+0x1f7a>\n    4e6a:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 4e71 <send_full_notify+0x1f81>\n    4e71:\t48 89 c7             \tmov    %rax,%rdi\n    4e74:\t41 ff d2             \tcall   *%r10\n    4e77:\t48 89 03             \tmov    %rax,(%rbx)\n    4e7a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4e81 <send_full_notify+0x1f91>\n    4e81:\t48 8b 00             \tmov    (%rax),%rax\n    4e84:\t48 85 c0             \ttest   %rax,%rax\n    4e87:\t0f 85 22 03 00 00    \tjne    51af <send_full_notify+0x22bf>\n    4e8d:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    4e92:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4e99 <send_full_notify+0x1fa9>\n    4e99:\te8 00 00 00 00       \tcall   4e9e <send_full_notify+0x1fae>\n    4e9e:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    4ea1:\t0f 8c 8b 1e 00 00    \tjl     6d32 <send_full_notify+0x3e42>\n    4ea7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4eae <send_full_notify+0x1fbe>\n    4eae:\t8b 00                \tmov    (%rax),%eax\n    4eb0:\t85 c0                \ttest   %eax,%eax\n    4eb2:\t0f 85 7a 1e 00 00    \tjne    6d32 <send_full_notify+0x3e42>\n    4eb8:\tc7 85 78 ff ff ff ff \tmovl   $0xffffffff,-0x88(%rbp)\n    4ebf:\tff ff ff \n    4ec2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4ec9 <send_full_notify+0x1fd9>\n    4ec9:\t8b 00                \tmov    (%rax),%eax\n    4ecb:\t8d 50 01             \tlea    0x1(%rax),%edx\n    4ece:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4ed5 <send_full_notify+0x1fe5>\n    4ed5:\t89 10                \tmov    %edx,(%rax)\n    4ed7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4ede <send_full_notify+0x1fee>\n    4ede:\t8b 00                \tmov    (%rax),%eax\n    4ee0:\t85 c0                \ttest   %eax,%eax\n    4ee2:\t0f 95 c0             \tsetne  %al\n    4ee5:\t0f b6 c0             \tmovzbl %al,%eax\n    4ee8:\t48 85 c0             \ttest   %rax,%rax\n    4eeb:\t0f 84 54 01 00 00    \tje     5045 <send_full_notify+0x2155>\n    4ef1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4ef8 <send_full_notify+0x2008>\n    4ef8:\t8b 00                \tmov    (%rax),%eax\n    4efa:\t85 c0                \ttest   %eax,%eax\n    4efc:\t0f 95 c0             \tsetne  %al\n    4eff:\t0f b6 c0             \tmovzbl %al,%eax\n    4f02:\t48 85 c0             \ttest   %rax,%rax\n    4f05:\t74 0d                \tje     4f14 <send_full_notify+0x2024>\n    4f07:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    4f0d:\t89 c7                \tmov    %eax,%edi\n    4f0f:\te8 00 00 00 00       \tcall   4f14 <send_full_notify+0x2024>\n    4f14:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4f1b <send_full_notify+0x202b>\n    4f1b:\t48 8b 00             \tmov    (%rax),%rax\n    4f1e:\t48 85 c0             \ttest   %rax,%rax\n    4f21:\t0f 95 c0             \tsetne  %al\n    4f24:\t0f b6 c0             \tmovzbl %al,%eax\n    4f27:\t48 85 c0             \ttest   %rax,%rax\n    4f2a:\t0f 84 88 00 00 00    \tje     4fb8 <send_full_notify+0x20c8>\n    4f30:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    4f36:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4f39:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4f40 <send_full_notify+0x2050>\n    4f40:\t48 63 d2             \tmovslq %edx,%rdx\n    4f43:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4f47:\t48 01 d0             \tadd    %rdx,%rax\n    4f4a:\t48 8b 18             \tmov    (%rax),%rbx\n    4f4d:\te8 00 00 00 00       \tcall   4f52 <send_full_notify+0x2062>\n    4f52:\t89 c6                \tmov    %eax,%esi\n    4f54:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4f5b <send_full_notify+0x206b>\n    4f5b:\t44 8b 00             \tmov    (%rax),%r8d\n    4f5e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4f65 <send_full_notify+0x2075>\n    4f65:\t48 8b 00             \tmov    (%rax),%rax\n    4f68:\t48 8b 08             \tmov    (%rax),%rcx\n    4f6b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4f72 <send_full_notify+0x2082>\n    4f72:\t48 8b 00             \tmov    (%rax),%rax\n    4f75:\t8b 50 08             \tmov    0x8(%rax),%edx\n    4f78:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4f7f <send_full_notify+0x208f>\n    4f7f:\t48 8b 00             \tmov    (%rax),%rax\n    4f82:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4f89 <send_full_notify+0x2099>\n    4f89:\t57                   \tpush   %rdi\n    4f8a:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4f91 <send_full_notify+0x20a1>\n    4f91:\t57                   \tpush   %rdi\n    4f92:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 4f99 <send_full_notify+0x20a9>\n    4f99:\t57                   \tpush   %rdi\n    4f9a:\t53                   \tpush   %rbx\n    4f9b:\t41 89 f1             \tmov    %esi,%r9d\n    4f9e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4fa5 <send_full_notify+0x20b5>\n    4fa5:\t48 89 c7             \tmov    %rax,%rdi\n    4fa8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4fad:\te8 00 00 00 00       \tcall   4fb2 <send_full_notify+0x20c2>\n    4fb2:\t48 83 c4 20          \tadd    $0x20,%rsp\n    4fb6:\teb 69                \tjmp    5021 <send_full_notify+0x2131>\n    4fb8:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    4fbe:\t8d 50 05             \tlea    0x5(%rax),%edx\n    4fc1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4fc8 <send_full_notify+0x20d8>\n    4fc8:\t48 63 d2             \tmovslq %edx,%rdx\n    4fcb:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    4fcf:\t48 01 d0             \tadd    %rdx,%rax\n    4fd2:\t48 8b 18             \tmov    (%rax),%rbx\n    4fd5:\te8 00 00 00 00       \tcall   4fda <send_full_notify+0x20ea>\n    4fda:\t89 c1                \tmov    %eax,%ecx\n    4fdc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4fe3 <send_full_notify+0x20f3>\n    4fe3:\t8b 10                \tmov    (%rax),%edx\n    4fe5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 4fec <send_full_notify+0x20fc>\n    4fec:\t48 8b 00             \tmov    (%rax),%rax\n    4fef:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4ff6 <send_full_notify+0x2106>\n    4ff6:\t56                   \tpush   %rsi\n    4ff7:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 4ffe <send_full_notify+0x210e>\n    4ffe:\t56                   \tpush   %rsi\n    4fff:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5006 <send_full_notify+0x2116>\n    5006:\t49 89 d8             \tmov    %rbx,%r8\n    5009:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5010 <send_full_notify+0x2120>\n    5010:\t48 89 c7             \tmov    %rax,%rdi\n    5013:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5018:\te8 00 00 00 00       \tcall   501d <send_full_notify+0x212d>\n    501d:\t48 83 c4 10          \tadd    $0x10,%rsp\n    5021:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5028 <send_full_notify+0x2138>\n    5028:\t8b 00                \tmov    (%rax),%eax\n    502a:\t85 c0                \ttest   %eax,%eax\n    502c:\t0f 95 c0             \tsetne  %al\n    502f:\t0f b6 c0             \tmovzbl %al,%eax\n    5032:\t48 85 c0             \ttest   %rax,%rax\n    5035:\t0f 84 5a 01 00 00    \tje     5195 <send_full_notify+0x22a5>\n    503b:\te8 00 00 00 00       \tcall   5040 <send_full_notify+0x2150>\n    5040:\te9 50 01 00 00       \tjmp    5195 <send_full_notify+0x22a5>\n    5045:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 504c <send_full_notify+0x215c>\n    504c:\t48 8b 00             \tmov    (%rax),%rax\n    504f:\t48 85 c0             \ttest   %rax,%rax\n    5052:\t0f 95 c0             \tsetne  %al\n    5055:\t0f b6 c0             \tmovzbl %al,%eax\n    5058:\t48 85 c0             \ttest   %rax,%rax\n    505b:\t0f 84 af 00 00 00    \tje     5110 <send_full_notify+0x2220>\n    5061:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5068 <send_full_notify+0x2178>\n    5068:\t4c 8b 28             \tmov    (%rax),%r13\n    506b:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    5071:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5074:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 507b <send_full_notify+0x218b>\n    507b:\t48 63 d2             \tmovslq %edx,%rdx\n    507e:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5082:\t48 01 d0             \tadd    %rdx,%rax\n    5085:\t4c 8b 38             \tmov    (%rax),%r15\n    5088:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 508f <send_full_notify+0x219f>\n    508f:\t48 8b 00             \tmov    (%rax),%rax\n    5092:\t4c 8b 20             \tmov    (%rax),%r12\n    5095:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 509c <send_full_notify+0x21ac>\n    509c:\t48 8b 00             \tmov    (%rax),%rax\n    509f:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    50a2:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    50a8:\t8d 50 05             \tlea    0x5(%rax),%edx\n    50ab:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 50b2 <send_full_notify+0x21c2>\n    50b2:\t48 63 d2             \tmovslq %edx,%rdx\n    50b5:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    50b9:\t48 01 d0             \tadd    %rdx,%rax\n    50bc:\t48 83 c0 08          \tadd    $0x8,%rax\n    50c0:\t44 8b 30             \tmov    (%rax),%r14d\n    50c3:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    50c8:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 50cf <send_full_notify+0x21df>\n    50cf:\te8 00 00 00 00       \tcall   50d4 <send_full_notify+0x21e4>\n    50d4:\t44 09 f0             \tor     %r14d,%eax\n    50d7:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 50de <send_full_notify+0x21ee>\n    50de:\t52                   \tpush   %rdx\n    50df:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 50e6 <send_full_notify+0x21f6>\n    50e6:\t52                   \tpush   %rdx\n    50e7:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 50ee <send_full_notify+0x21fe>\n    50ee:\t4d 89 f8             \tmov    %r15,%r8\n    50f1:\t4c 89 e1             \tmov    %r12,%rcx\n    50f4:\t89 da                \tmov    %ebx,%edx\n    50f6:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 50fd <send_full_notify+0x220d>\n    50fd:\t89 c7                \tmov    %eax,%edi\n    50ff:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5104:\t41 ff d5             \tcall   *%r13\n    5107:\t48 83 c4 10          \tadd    $0x10,%rsp\n    510b:\te9 85 00 00 00       \tjmp    5195 <send_full_notify+0x22a5>\n    5110:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5117 <send_full_notify+0x2227>\n    5117:\t4c 8b 20             \tmov    (%rax),%r12\n    511a:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    5120:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5123:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 512a <send_full_notify+0x223a>\n    512a:\t48 63 d2             \tmovslq %edx,%rdx\n    512d:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5131:\t48 01 d0             \tadd    %rdx,%rax\n    5134:\t48 8b 18             \tmov    (%rax),%rbx\n    5137:\t8b 85 78 ff ff ff    \tmov    -0x88(%rbp),%eax\n    513d:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5140:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5147 <send_full_notify+0x2257>\n    5147:\t48 63 d2             \tmovslq %edx,%rdx\n    514a:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    514e:\t48 01 d0             \tadd    %rdx,%rax\n    5151:\t48 83 c0 08          \tadd    $0x8,%rax\n    5155:\t44 8b 28             \tmov    (%rax),%r13d\n    5158:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    515d:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5164 <send_full_notify+0x2274>\n    5164:\te8 00 00 00 00       \tcall   5169 <send_full_notify+0x2279>\n    5169:\t44 09 e8             \tor     %r13d,%eax\n    516c:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5173 <send_full_notify+0x2283>\n    5173:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 517a <send_full_notify+0x228a>\n    517a:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 5181 <send_full_notify+0x2291>\n    5181:\t48 89 da             \tmov    %rbx,%rdx\n    5184:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 518b <send_full_notify+0x229b>\n    518b:\t89 c7                \tmov    %eax,%edi\n    518d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5192:\t41 ff d4             \tcall   *%r12\n    5195:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 519c <send_full_notify+0x22ac>\n    519c:\t8b 00                \tmov    (%rax),%eax\n    519e:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    51a1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 51a8 <send_full_notify+0x22b8>\n    51a8:\t89 10                \tmov    %edx,(%rax)\n    51aa:\te9 83 1b 00 00       \tjmp    6d32 <send_full_notify+0x3e42>\n    51af:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 51b6 <send_full_notify+0x22c6>\n    51b6:\tc7 40 08 00 00 00 00 \tmovl   $0x0,0x8(%rax)\n    51bd:\t48 8b 85 88 fe ff ff \tmov    -0x178(%rbp),%rax\n    51c4:\t8b 88 18 01 00 00    \tmov    0x118(%rax),%ecx\n    51ca:\t48 8b 95 78 fe ff ff \tmov    -0x188(%rbp),%rdx\n    51d1:\t48 8d b5 50 ff ff ff \tlea    -0xb0(%rbp),%rsi\n    51d8:\t48 8d 85 58 ff ff ff \tlea    -0xa8(%rbp),%rax\n    51df:\t41 b8 01 00 00 00    \tmov    $0x1,%r8d\n    51e5:\t48 89 c7             \tmov    %rax,%rdi\n    51e8:\te8 00 00 00 00       \tcall   51ed <send_full_notify+0x22fd>\n    51ed:\t89 85 a4 fe ff ff    \tmov    %eax,-0x15c(%rbp)\n    51f3:\t48 8b 95 50 ff ff ff \tmov    -0xb0(%rbp),%rdx\n    51fa:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    5201:\t48 89 d6             \tmov    %rdx,%rsi\n    5204:\t48 89 c7             \tmov    %rax,%rdi\n    5207:\te8 00 00 00 00       \tcall   520c <send_full_notify+0x231c>\n    520c:\t48 8d 85 a8 fe ff ff \tlea    -0x158(%rbp),%rax\n    5213:\t48 89 85 98 fe ff ff \tmov    %rax,-0x168(%rbp)\n    521a:\t48 8b 85 88 fe ff ff \tmov    -0x178(%rbp),%rax\n    5221:\t48 8b 48 60          \tmov    0x60(%rax),%rcx\n    5225:\t4c 8b 40 68          \tmov    0x68(%rax),%r8\n    5229:\t48 8b 85 88 fe ff ff \tmov    -0x178(%rbp),%rax\n    5230:\t48 8b 70 50          \tmov    0x50(%rax),%rsi\n    5234:\t48 8b 50 58          \tmov    0x58(%rax),%rdx\n    5238:\t48 8b 85 80 fe ff ff \tmov    -0x180(%rbp),%rax\n    523f:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5243:\t48 8d bd 98 fe ff ff \tlea    -0x168(%rbp),%rdi\n    524a:\t57                   \tpush   %rdi\n    524b:\t48 8b 3d 00 00 00 00 \tmov    0x0(%rip),%rdi        # 5252 <send_full_notify+0x2362>\n    5252:\t49 89 f9             \tmov    %rdi,%r9\n    5255:\t48 89 c7             \tmov    %rax,%rdi\n    5258:\te8 00 00 00 00       \tcall   525d <send_full_notify+0x236d>\n    525d:\t48 83 c4 10          \tadd    $0x10,%rsp\n    5261:\t85 c0                \ttest   %eax,%eax\n    5263:\t0f 89 0c 03 00 00    \tjns    5575 <send_full_notify+0x2685>\n    5269:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    526e:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5275 <send_full_notify+0x2385>\n    5275:\te8 00 00 00 00       \tcall   527a <send_full_notify+0x238a>\n    527a:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    527d:\t0f 8c b2 1a 00 00    \tjl     6d35 <send_full_notify+0x3e45>\n    5283:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 528a <send_full_notify+0x239a>\n    528a:\t8b 00                \tmov    (%rax),%eax\n    528c:\t85 c0                \ttest   %eax,%eax\n    528e:\t0f 85 a1 1a 00 00    \tjne    6d35 <send_full_notify+0x3e45>\n    5294:\tc7 85 7c ff ff ff ff \tmovl   $0xffffffff,-0x84(%rbp)\n    529b:\tff ff ff \n    529e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 52a5 <send_full_notify+0x23b5>\n    52a5:\t8b 00                \tmov    (%rax),%eax\n    52a7:\t8d 50 01             \tlea    0x1(%rax),%edx\n    52aa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 52b1 <send_full_notify+0x23c1>\n    52b1:\t89 10                \tmov    %edx,(%rax)\n    52b3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 52ba <send_full_notify+0x23ca>\n    52ba:\t8b 00                \tmov    (%rax),%eax\n    52bc:\t85 c0                \ttest   %eax,%eax\n    52be:\t0f 95 c0             \tsetne  %al\n    52c1:\t0f b6 c0             \tmovzbl %al,%eax\n    52c4:\t48 85 c0             \ttest   %rax,%rax\n    52c7:\t0f 84 4c 01 00 00    \tje     5419 <send_full_notify+0x2529>\n    52cd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 52d4 <send_full_notify+0x23e4>\n    52d4:\t8b 00                \tmov    (%rax),%eax\n    52d6:\t85 c0                \ttest   %eax,%eax\n    52d8:\t0f 95 c0             \tsetne  %al\n    52db:\t0f b6 c0             \tmovzbl %al,%eax\n    52de:\t48 85 c0             \ttest   %rax,%rax\n    52e1:\t74 0d                \tje     52f0 <send_full_notify+0x2400>\n    52e3:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    52e9:\t89 c7                \tmov    %eax,%edi\n    52eb:\te8 00 00 00 00       \tcall   52f0 <send_full_notify+0x2400>\n    52f0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 52f7 <send_full_notify+0x2407>\n    52f7:\t48 8b 00             \tmov    (%rax),%rax\n    52fa:\t48 85 c0             \ttest   %rax,%rax\n    52fd:\t0f 95 c0             \tsetne  %al\n    5300:\t0f b6 c0             \tmovzbl %al,%eax\n    5303:\t48 85 c0             \ttest   %rax,%rax\n    5306:\t0f 84 84 00 00 00    \tje     5390 <send_full_notify+0x24a0>\n    530c:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    5312:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5315:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 531c <send_full_notify+0x242c>\n    531c:\t48 63 d2             \tmovslq %edx,%rdx\n    531f:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5323:\t48 01 d0             \tadd    %rdx,%rax\n    5326:\t48 8b 18             \tmov    (%rax),%rbx\n    5329:\te8 00 00 00 00       \tcall   532e <send_full_notify+0x243e>\n    532e:\t89 c6                \tmov    %eax,%esi\n    5330:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5337 <send_full_notify+0x2447>\n    5337:\t44 8b 00             \tmov    (%rax),%r8d\n    533a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5341 <send_full_notify+0x2451>\n    5341:\t48 8b 00             \tmov    (%rax),%rax\n    5344:\t48 8b 08             \tmov    (%rax),%rcx\n    5347:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 534e <send_full_notify+0x245e>\n    534e:\t48 8b 00             \tmov    (%rax),%rax\n    5351:\t8b 50 08             \tmov    0x8(%rax),%edx\n    5354:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 535b <send_full_notify+0x246b>\n    535b:\t48 8b 00             \tmov    (%rax),%rax\n    535e:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5362:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5369 <send_full_notify+0x2479>\n    5369:\t57                   \tpush   %rdi\n    536a:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5371 <send_full_notify+0x2481>\n    5371:\t57                   \tpush   %rdi\n    5372:\t53                   \tpush   %rbx\n    5373:\t41 89 f1             \tmov    %esi,%r9d\n    5376:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 537d <send_full_notify+0x248d>\n    537d:\t48 89 c7             \tmov    %rax,%rdi\n    5380:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5385:\te8 00 00 00 00       \tcall   538a <send_full_notify+0x249a>\n    538a:\t48 83 c4 20          \tadd    $0x20,%rsp\n    538e:\teb 65                \tjmp    53f5 <send_full_notify+0x2505>\n    5390:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    5396:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5399:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 53a0 <send_full_notify+0x24b0>\n    53a0:\t48 63 d2             \tmovslq %edx,%rdx\n    53a3:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    53a7:\t48 01 d0             \tadd    %rdx,%rax\n    53aa:\t48 8b 18             \tmov    (%rax),%rbx\n    53ad:\te8 00 00 00 00       \tcall   53b2 <send_full_notify+0x24c2>\n    53b2:\t89 c1                \tmov    %eax,%ecx\n    53b4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 53bb <send_full_notify+0x24cb>\n    53bb:\t8b 10                \tmov    (%rax),%edx\n    53bd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 53c4 <send_full_notify+0x24d4>\n    53c4:\t48 8b 00             \tmov    (%rax),%rax\n    53c7:\t48 83 ec 08          \tsub    $0x8,%rsp\n    53cb:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 53d2 <send_full_notify+0x24e2>\n    53d2:\t56                   \tpush   %rsi\n    53d3:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 53da <send_full_notify+0x24ea>\n    53da:\t49 89 d8             \tmov    %rbx,%r8\n    53dd:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 53e4 <send_full_notify+0x24f4>\n    53e4:\t48 89 c7             \tmov    %rax,%rdi\n    53e7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    53ec:\te8 00 00 00 00       \tcall   53f1 <send_full_notify+0x2501>\n    53f1:\t48 83 c4 10          \tadd    $0x10,%rsp\n    53f5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 53fc <send_full_notify+0x250c>\n    53fc:\t8b 00                \tmov    (%rax),%eax\n    53fe:\t85 c0                \ttest   %eax,%eax\n    5400:\t0f 95 c0             \tsetne  %al\n    5403:\t0f b6 c0             \tmovzbl %al,%eax\n    5406:\t48 85 c0             \ttest   %rax,%rax\n    5409:\t0f 84 4c 01 00 00    \tje     555b <send_full_notify+0x266b>\n    540f:\te8 00 00 00 00       \tcall   5414 <send_full_notify+0x2524>\n    5414:\te9 42 01 00 00       \tjmp    555b <send_full_notify+0x266b>\n    5419:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5420 <send_full_notify+0x2530>\n    5420:\t48 8b 00             \tmov    (%rax),%rax\n    5423:\t48 85 c0             \ttest   %rax,%rax\n    5426:\t0f 95 c0             \tsetne  %al\n    5429:\t0f b6 c0             \tmovzbl %al,%eax\n    542c:\t48 85 c0             \ttest   %rax,%rax\n    542f:\t0f 84 a8 00 00 00    \tje     54dd <send_full_notify+0x25ed>\n    5435:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 543c <send_full_notify+0x254c>\n    543c:\t4c 8b 28             \tmov    (%rax),%r13\n    543f:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    5445:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5448:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 544f <send_full_notify+0x255f>\n    544f:\t48 63 d2             \tmovslq %edx,%rdx\n    5452:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5456:\t48 01 d0             \tadd    %rdx,%rax\n    5459:\t4c 8b 38             \tmov    (%rax),%r15\n    545c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5463 <send_full_notify+0x2573>\n    5463:\t48 8b 00             \tmov    (%rax),%rax\n    5466:\t4c 8b 20             \tmov    (%rax),%r12\n    5469:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5470 <send_full_notify+0x2580>\n    5470:\t48 8b 00             \tmov    (%rax),%rax\n    5473:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    5476:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    547c:\t8d 50 05             \tlea    0x5(%rax),%edx\n    547f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5486 <send_full_notify+0x2596>\n    5486:\t48 63 d2             \tmovslq %edx,%rdx\n    5489:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    548d:\t48 01 d0             \tadd    %rdx,%rax\n    5490:\t48 83 c0 08          \tadd    $0x8,%rax\n    5494:\t44 8b 30             \tmov    (%rax),%r14d\n    5497:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    549c:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 54a3 <send_full_notify+0x25b3>\n    54a3:\te8 00 00 00 00       \tcall   54a8 <send_full_notify+0x25b8>\n    54a8:\t44 09 f0             \tor     %r14d,%eax\n    54ab:\t48 83 ec 08          \tsub    $0x8,%rsp\n    54af:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 54b6 <send_full_notify+0x25c6>\n    54b6:\t52                   \tpush   %rdx\n    54b7:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 54be <send_full_notify+0x25ce>\n    54be:\t4d 89 f8             \tmov    %r15,%r8\n    54c1:\t4c 89 e1             \tmov    %r12,%rcx\n    54c4:\t89 da                \tmov    %ebx,%edx\n    54c6:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 54cd <send_full_notify+0x25dd>\n    54cd:\t89 c7                \tmov    %eax,%edi\n    54cf:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    54d4:\t41 ff d5             \tcall   *%r13\n    54d7:\t48 83 c4 10          \tadd    $0x10,%rsp\n    54db:\teb 7e                \tjmp    555b <send_full_notify+0x266b>\n    54dd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 54e4 <send_full_notify+0x25f4>\n    54e4:\t4c 8b 20             \tmov    (%rax),%r12\n    54e7:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    54ed:\t8d 50 05             \tlea    0x5(%rax),%edx\n    54f0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 54f7 <send_full_notify+0x2607>\n    54f7:\t48 63 d2             \tmovslq %edx,%rdx\n    54fa:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    54fe:\t48 01 d0             \tadd    %rdx,%rax\n    5501:\t48 8b 18             \tmov    (%rax),%rbx\n    5504:\t8b 85 7c ff ff ff    \tmov    -0x84(%rbp),%eax\n    550a:\t8d 50 05             \tlea    0x5(%rax),%edx\n    550d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5514 <send_full_notify+0x2624>\n    5514:\t48 63 d2             \tmovslq %edx,%rdx\n    5517:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    551b:\t48 01 d0             \tadd    %rdx,%rax\n    551e:\t48 83 c0 08          \tadd    $0x8,%rax\n    5522:\t44 8b 28             \tmov    (%rax),%r13d\n    5525:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    552a:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5531 <send_full_notify+0x2641>\n    5531:\te8 00 00 00 00       \tcall   5536 <send_full_notify+0x2646>\n    5536:\t44 09 e8             \tor     %r13d,%eax\n    5539:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 5540 <send_full_notify+0x2650>\n    5540:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 5547 <send_full_notify+0x2657>\n    5547:\t48 89 da             \tmov    %rbx,%rdx\n    554a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5551 <send_full_notify+0x2661>\n    5551:\t89 c7                \tmov    %eax,%edi\n    5553:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5558:\t41 ff d4             \tcall   *%r12\n    555b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5562 <send_full_notify+0x2672>\n    5562:\t8b 00                \tmov    (%rax),%eax\n    5564:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    5567:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 556e <send_full_notify+0x267e>\n    556e:\t89 10                \tmov    %edx,(%rax)\n    5570:\te9 c0 17 00 00       \tjmp    6d35 <send_full_notify+0x3e45>\n    5575:\tbf 18 00 00 00       \tmov    $0x18,%edi\n    557a:\te8 00 00 00 00       \tcall   557f <send_full_notify+0x268f>\n    557f:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n    5583:\te9 5d 0f 00 00       \tjmp    64e5 <send_full_notify+0x35f5>\n    5588:\t48 8b 85 a8 fe ff ff \tmov    -0x158(%rbp),%rax\n    558f:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n    5593:\t48 8b 8d c8 fe ff ff \tmov    -0x138(%rbp),%rcx\n    559a:\t48 8b b5 50 ff ff ff \tmov    -0xb0(%rbp),%rsi\n    55a1:\t48 8b 85 a8 fe ff ff \tmov    -0x158(%rbp),%rax\n    55a8:\t48 8b 00             \tmov    (%rax),%rax\n    55ab:\t48 8d bd a4 fe ff ff \tlea    -0x15c(%rbp),%rdi\n    55b2:\t48 8b 55 a0          \tmov    -0x60(%rbp),%rdx\n    55b6:\t49 89 f8             \tmov    %rdi,%r8\n    55b9:\t48 89 c7             \tmov    %rax,%rdi\n    55bc:\te8 00 00 00 00       \tcall   55c1 <send_full_notify+0x26d1>\n    55c1:\t85 c0                \ttest   %eax,%eax\n    55c3:\t0f 8e 7e 0e 00 00    \tjle    6447 <send_full_notify+0x3557>\n    55c9:\t83 7d c4 00          \tcmpl   $0x0,-0x3c(%rbp)\n    55cd:\t0f 85 fc 03 00 00    \tjne    59cf <send_full_notify+0x2adf>\n    55d3:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    55d8:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 55df <send_full_notify+0x26ef>\n    55df:\te8 00 00 00 00       \tcall   55e4 <send_full_notify+0x26f4>\n    55e4:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    55e7:\t0f 8c 46 03 00 00    \tjl     5933 <send_full_notify+0x2a43>\n    55ed:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 55f4 <send_full_notify+0x2704>\n    55f4:\t8b 00                \tmov    (%rax),%eax\n    55f6:\t85 c0                \ttest   %eax,%eax\n    55f8:\t0f 85 35 03 00 00    \tjne    5933 <send_full_notify+0x2a43>\n    55fe:\tc7 45 80 ff ff ff ff \tmovl   $0xffffffff,-0x80(%rbp)\n    5605:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 560c <send_full_notify+0x271c>\n    560c:\t8b 00                \tmov    (%rax),%eax\n    560e:\t8d 50 01             \tlea    0x1(%rax),%edx\n    5611:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5618 <send_full_notify+0x2728>\n    5618:\t89 10                \tmov    %edx,(%rax)\n    561a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5621 <send_full_notify+0x2731>\n    5621:\t8b 00                \tmov    (%rax),%eax\n    5623:\t85 c0                \ttest   %eax,%eax\n    5625:\t0f 95 c0             \tsetne  %al\n    5628:\t0f b6 c0             \tmovzbl %al,%eax\n    562b:\t48 85 c0             \ttest   %rax,%rax\n    562e:\t0f 84 6b 01 00 00    \tje     579f <send_full_notify+0x28af>\n    5634:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 563b <send_full_notify+0x274b>\n    563b:\t8b 00                \tmov    (%rax),%eax\n    563d:\t85 c0                \ttest   %eax,%eax\n    563f:\t0f 95 c0             \tsetne  %al\n    5642:\t0f b6 c0             \tmovzbl %al,%eax\n    5645:\t48 85 c0             \ttest   %rax,%rax\n    5648:\t74 0a                \tje     5654 <send_full_notify+0x2764>\n    564a:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    564d:\t89 c7                \tmov    %eax,%edi\n    564f:\te8 00 00 00 00       \tcall   5654 <send_full_notify+0x2764>\n    5654:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 565b <send_full_notify+0x276b>\n    565b:\t48 8b 00             \tmov    (%rax),%rax\n    565e:\t48 85 c0             \ttest   %rax,%rax\n    5661:\t0f 95 c0             \tsetne  %al\n    5664:\t0f b6 c0             \tmovzbl %al,%eax\n    5667:\t48 85 c0             \ttest   %rax,%rax\n    566a:\t0f 84 96 00 00 00    \tje     5706 <send_full_notify+0x2816>\n    5670:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5677 <send_full_notify+0x2787>\n    5677:\t44 8b 28             \tmov    (%rax),%r13d\n    567a:\t44 8b a5 a4 fe ff ff \tmov    -0x15c(%rbp),%r12d\n    5681:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    5684:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5687:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 568e <send_full_notify+0x279e>\n    568e:\t48 63 d2             \tmovslq %edx,%rdx\n    5691:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5695:\t48 01 d0             \tadd    %rdx,%rax\n    5698:\t48 8b 18             \tmov    (%rax),%rbx\n    569b:\te8 00 00 00 00       \tcall   56a0 <send_full_notify+0x27b0>\n    56a0:\t89 c6                \tmov    %eax,%esi\n    56a2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 56a9 <send_full_notify+0x27b9>\n    56a9:\t44 8b 00             \tmov    (%rax),%r8d\n    56ac:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 56b3 <send_full_notify+0x27c3>\n    56b3:\t48 8b 00             \tmov    (%rax),%rax\n    56b6:\t48 8b 08             \tmov    (%rax),%rcx\n    56b9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 56c0 <send_full_notify+0x27d0>\n    56c0:\t48 8b 00             \tmov    (%rax),%rax\n    56c3:\t8b 50 08             \tmov    0x8(%rax),%edx\n    56c6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 56cd <send_full_notify+0x27dd>\n    56cd:\t48 8b 00             \tmov    (%rax),%rax\n    56d0:\t48 83 ec 08          \tsub    $0x8,%rsp\n    56d4:\t41 55                \tpush   %r13\n    56d6:\t41 54                \tpush   %r12\n    56d8:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 56df <send_full_notify+0x27ef>\n    56df:\t57                   \tpush   %rdi\n    56e0:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 56e7 <send_full_notify+0x27f7>\n    56e7:\t57                   \tpush   %rdi\n    56e8:\t53                   \tpush   %rbx\n    56e9:\t41 89 f1             \tmov    %esi,%r9d\n    56ec:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 56f3 <send_full_notify+0x2803>\n    56f3:\t48 89 c7             \tmov    %rax,%rdi\n    56f6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    56fb:\te8 00 00 00 00       \tcall   5700 <send_full_notify+0x2810>\n    5700:\t48 83 c4 30          \tadd    $0x30,%rsp\n    5704:\teb 75                \tjmp    577b <send_full_notify+0x288b>\n    5706:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 570d <send_full_notify+0x281d>\n    570d:\t44 8b 20             \tmov    (%rax),%r12d\n    5710:\t8b 9d a4 fe ff ff    \tmov    -0x15c(%rbp),%ebx\n    5716:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    5719:\t8d 50 05             \tlea    0x5(%rax),%edx\n    571c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5723 <send_full_notify+0x2833>\n    5723:\t48 63 d2             \tmovslq %edx,%rdx\n    5726:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    572a:\t48 01 d0             \tadd    %rdx,%rax\n    572d:\t4c 8b 28             \tmov    (%rax),%r13\n    5730:\te8 00 00 00 00       \tcall   5735 <send_full_notify+0x2845>\n    5735:\t89 c1                \tmov    %eax,%ecx\n    5737:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 573e <send_full_notify+0x284e>\n    573e:\t8b 10                \tmov    (%rax),%edx\n    5740:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5747 <send_full_notify+0x2857>\n    5747:\t48 8b 00             \tmov    (%rax),%rax\n    574a:\t48 83 ec 08          \tsub    $0x8,%rsp\n    574e:\t41 54                \tpush   %r12\n    5750:\t53                   \tpush   %rbx\n    5751:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5758 <send_full_notify+0x2868>\n    5758:\t56                   \tpush   %rsi\n    5759:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5760 <send_full_notify+0x2870>\n    5760:\t4d 89 e8             \tmov    %r13,%r8\n    5763:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 576a <send_full_notify+0x287a>\n    576a:\t48 89 c7             \tmov    %rax,%rdi\n    576d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5772:\te8 00 00 00 00       \tcall   5777 <send_full_notify+0x2887>\n    5777:\t48 83 c4 20          \tadd    $0x20,%rsp\n    577b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5782 <send_full_notify+0x2892>\n    5782:\t8b 00                \tmov    (%rax),%eax\n    5784:\t85 c0                \ttest   %eax,%eax\n    5786:\t0f 95 c0             \tsetne  %al\n    5789:\t0f b6 c0             \tmovzbl %al,%eax\n    578c:\t48 85 c0             \ttest   %rax,%rax\n    578f:\t0f 84 89 01 00 00    \tje     591e <send_full_notify+0x2a2e>\n    5795:\te8 00 00 00 00       \tcall   579a <send_full_notify+0x28aa>\n    579a:\te9 7f 01 00 00       \tjmp    591e <send_full_notify+0x2a2e>\n    579f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 57a6 <send_full_notify+0x28b6>\n    57a6:\t48 8b 00             \tmov    (%rax),%rax\n    57a9:\t48 85 c0             \ttest   %rax,%rax\n    57ac:\t0f 95 c0             \tsetne  %al\n    57af:\t0f b6 c0             \tmovzbl %al,%eax\n    57b2:\t48 85 c0             \ttest   %rax,%rax\n    57b5:\t0f 84 cd 00 00 00    \tje     5888 <send_full_notify+0x2998>\n    57bb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 57c2 <send_full_notify+0x28d2>\n    57c2:\t4c 8b 28             \tmov    (%rax),%r13\n    57c5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 57cc <send_full_notify+0x28dc>\n    57cc:\t44 8b 38             \tmov    (%rax),%r15d\n    57cf:\t44 8b b5 a4 fe ff ff \tmov    -0x15c(%rbp),%r14d\n    57d6:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    57d9:\t8d 50 05             \tlea    0x5(%rax),%edx\n    57dc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 57e3 <send_full_notify+0x28f3>\n    57e3:\t48 63 d2             \tmovslq %edx,%rdx\n    57e6:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    57ea:\t48 01 d0             \tadd    %rdx,%rax\n    57ed:\t48 8b 00             \tmov    (%rax),%rax\n    57f0:\t48 89 85 68 fe ff ff \tmov    %rax,-0x198(%rbp)\n    57f7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 57fe <send_full_notify+0x290e>\n    57fe:\t48 8b 00             \tmov    (%rax),%rax\n    5801:\t4c 8b 20             \tmov    (%rax),%r12\n    5804:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 580b <send_full_notify+0x291b>\n    580b:\t48 8b 00             \tmov    (%rax),%rax\n    580e:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    5811:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    5814:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5817:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 581e <send_full_notify+0x292e>\n    581e:\t48 63 d2             \tmovslq %edx,%rdx\n    5821:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5825:\t48 01 d0             \tadd    %rdx,%rax\n    5828:\t48 83 c0 08          \tadd    $0x8,%rax\n    582c:\t8b 08                \tmov    (%rax),%ecx\n    582e:\t89 8d 70 fe ff ff    \tmov    %ecx,-0x190(%rbp)\n    5834:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    5839:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5840 <send_full_notify+0x2950>\n    5840:\te8 00 00 00 00       \tcall   5845 <send_full_notify+0x2955>\n    5845:\t0b 85 70 fe ff ff    \tor     -0x190(%rbp),%eax\n    584b:\t48 83 ec 08          \tsub    $0x8,%rsp\n    584f:\t41 57                \tpush   %r15\n    5851:\t41 56                \tpush   %r14\n    5853:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 585a <send_full_notify+0x296a>\n    585a:\t52                   \tpush   %rdx\n    585b:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5862 <send_full_notify+0x2972>\n    5862:\t4c 8b 85 68 fe ff ff \tmov    -0x198(%rbp),%r8\n    5869:\t4c 89 e1             \tmov    %r12,%rcx\n    586c:\t89 da                \tmov    %ebx,%edx\n    586e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5875 <send_full_notify+0x2985>\n    5875:\t89 c7                \tmov    %eax,%edi\n    5877:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    587c:\t41 ff d5             \tcall   *%r13\n    587f:\t48 83 c4 20          \tadd    $0x20,%rsp\n    5883:\te9 96 00 00 00       \tjmp    591e <send_full_notify+0x2a2e>\n    5888:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 588f <send_full_notify+0x299f>\n    588f:\t4c 8b 20             \tmov    (%rax),%r12\n    5892:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5899 <send_full_notify+0x29a9>\n    5899:\t44 8b 28             \tmov    (%rax),%r13d\n    589c:\t44 8b bd a4 fe ff ff \tmov    -0x15c(%rbp),%r15d\n    58a3:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    58a6:\t8d 50 05             \tlea    0x5(%rax),%edx\n    58a9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 58b0 <send_full_notify+0x29c0>\n    58b0:\t48 63 d2             \tmovslq %edx,%rdx\n    58b3:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    58b7:\t48 01 d0             \tadd    %rdx,%rax\n    58ba:\t48 8b 18             \tmov    (%rax),%rbx\n    58bd:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    58c0:\t8d 50 05             \tlea    0x5(%rax),%edx\n    58c3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 58ca <send_full_notify+0x29da>\n    58ca:\t48 63 d2             \tmovslq %edx,%rdx\n    58cd:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    58d1:\t48 01 d0             \tadd    %rdx,%rax\n    58d4:\t48 83 c0 08          \tadd    $0x8,%rax\n    58d8:\t44 8b 30             \tmov    (%rax),%r14d\n    58db:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    58e0:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 58e7 <send_full_notify+0x29f7>\n    58e7:\te8 00 00 00 00       \tcall   58ec <send_full_notify+0x29fc>\n    58ec:\t44 09 f0             \tor     %r14d,%eax\n    58ef:\t48 83 ec 08          \tsub    $0x8,%rsp\n    58f3:\t41 55                \tpush   %r13\n    58f5:\t45 89 f9             \tmov    %r15d,%r9d\n    58f8:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 58ff <send_full_notify+0x2a0f>\n    58ff:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 5906 <send_full_notify+0x2a16>\n    5906:\t48 89 da             \tmov    %rbx,%rdx\n    5909:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5910 <send_full_notify+0x2a20>\n    5910:\t89 c7                \tmov    %eax,%edi\n    5912:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5917:\t41 ff d4             \tcall   *%r12\n    591a:\t48 83 c4 10          \tadd    $0x10,%rsp\n    591e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5925 <send_full_notify+0x2a35>\n    5925:\t8b 00                \tmov    (%rax),%eax\n    5927:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    592a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5931 <send_full_notify+0x2a41>\n    5931:\t89 10                \tmov    %edx,(%rax)\n    5933:\t48 8b 85 a8 fe ff ff \tmov    -0x158(%rbp),%rax\n    593a:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    593e:\t48 89 85 a8 fe ff ff \tmov    %rax,-0x158(%rbp)\n    5945:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    5949:\t48 8b 00             \tmov    (%rax),%rax\n    594c:\t48 85 c0             \ttest   %rax,%rax\n    594f:\t74 3e                \tje     598f <send_full_notify+0x2a9f>\n    5951:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5958 <send_full_notify+0x2a68>\n    5958:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    595c:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    5960:\t48 8b 30             \tmov    (%rax),%rsi\n    5963:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 596a <send_full_notify+0x2a7a>\n    596a:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    596e:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5975 <send_full_notify+0x2a85>\n    5975:\t41 b8 de 00 00 00    \tmov    $0xde,%r8d\n    597b:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 5982 <send_full_notify+0x2a92>\n    5982:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 5989 <send_full_notify+0x2a99>\n    5989:\t48 89 c7             \tmov    %rax,%rdi\n    598c:\t41 ff d2             \tcall   *%r10\n    598f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5996 <send_full_notify+0x2aa6>\n    5996:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    599a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 59a1 <send_full_notify+0x2ab1>\n    59a1:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    59a5:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n    59a9:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 59b0 <send_full_notify+0x2ac0>\n    59b0:\t41 b8 df 00 00 00    \tmov    $0xdf,%r8d\n    59b6:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 59bd <send_full_notify+0x2acd>\n    59bd:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 59c4 <send_full_notify+0x2ad4>\n    59c4:\t48 89 c7             \tmov    %rax,%rdi\n    59c7:\t41 ff d2             \tcall   *%r10\n    59ca:\te9 16 0b 00 00       \tjmp    64e5 <send_full_notify+0x35f5>\n    59cf:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    59d4:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 59db <send_full_notify+0x2aeb>\n    59db:\te8 00 00 00 00       \tcall   59e0 <send_full_notify+0x2af0>\n    59e0:\t83 f8 02             \tcmp    $0x2,%eax\n    59e3:\t0f 8e 46 03 00 00    \tjle    5d2f <send_full_notify+0x2e3f>\n    59e9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 59f0 <send_full_notify+0x2b00>\n    59f0:\t8b 00                \tmov    (%rax),%eax\n    59f2:\t85 c0                \ttest   %eax,%eax\n    59f4:\t0f 85 35 03 00 00    \tjne    5d2f <send_full_notify+0x2e3f>\n    59fa:\tc7 45 8c 03 00 00 00 \tmovl   $0x3,-0x74(%rbp)\n    5a01:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5a08 <send_full_notify+0x2b18>\n    5a08:\t8b 00                \tmov    (%rax),%eax\n    5a0a:\t8d 50 01             \tlea    0x1(%rax),%edx\n    5a0d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5a14 <send_full_notify+0x2b24>\n    5a14:\t89 10                \tmov    %edx,(%rax)\n    5a16:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5a1d <send_full_notify+0x2b2d>\n    5a1d:\t8b 00                \tmov    (%rax),%eax\n    5a1f:\t85 c0                \ttest   %eax,%eax\n    5a21:\t0f 95 c0             \tsetne  %al\n    5a24:\t0f b6 c0             \tmovzbl %al,%eax\n    5a27:\t48 85 c0             \ttest   %rax,%rax\n    5a2a:\t0f 84 6b 01 00 00    \tje     5b9b <send_full_notify+0x2cab>\n    5a30:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5a37 <send_full_notify+0x2b47>\n    5a37:\t8b 00                \tmov    (%rax),%eax\n    5a39:\t85 c0                \ttest   %eax,%eax\n    5a3b:\t0f 95 c0             \tsetne  %al\n    5a3e:\t0f b6 c0             \tmovzbl %al,%eax\n    5a41:\t48 85 c0             \ttest   %rax,%rax\n    5a44:\t74 0a                \tje     5a50 <send_full_notify+0x2b60>\n    5a46:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    5a49:\t89 c7                \tmov    %eax,%edi\n    5a4b:\te8 00 00 00 00       \tcall   5a50 <send_full_notify+0x2b60>\n    5a50:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5a57 <send_full_notify+0x2b67>\n    5a57:\t48 8b 00             \tmov    (%rax),%rax\n    5a5a:\t48 85 c0             \ttest   %rax,%rax\n    5a5d:\t0f 95 c0             \tsetne  %al\n    5a60:\t0f b6 c0             \tmovzbl %al,%eax\n    5a63:\t48 85 c0             \ttest   %rax,%rax\n    5a66:\t0f 84 96 00 00 00    \tje     5b02 <send_full_notify+0x2c12>\n    5a6c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5a73 <send_full_notify+0x2b83>\n    5a73:\t44 8b 28             \tmov    (%rax),%r13d\n    5a76:\t44 8b a5 a4 fe ff ff \tmov    -0x15c(%rbp),%r12d\n    5a7d:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    5a80:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5a83:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5a8a <send_full_notify+0x2b9a>\n    5a8a:\t48 63 d2             \tmovslq %edx,%rdx\n    5a8d:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5a91:\t48 01 d0             \tadd    %rdx,%rax\n    5a94:\t48 8b 18             \tmov    (%rax),%rbx\n    5a97:\te8 00 00 00 00       \tcall   5a9c <send_full_notify+0x2bac>\n    5a9c:\t89 c6                \tmov    %eax,%esi\n    5a9e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5aa5 <send_full_notify+0x2bb5>\n    5aa5:\t44 8b 00             \tmov    (%rax),%r8d\n    5aa8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5aaf <send_full_notify+0x2bbf>\n    5aaf:\t48 8b 00             \tmov    (%rax),%rax\n    5ab2:\t48 8b 08             \tmov    (%rax),%rcx\n    5ab5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5abc <send_full_notify+0x2bcc>\n    5abc:\t48 8b 00             \tmov    (%rax),%rax\n    5abf:\t8b 50 08             \tmov    0x8(%rax),%edx\n    5ac2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5ac9 <send_full_notify+0x2bd9>\n    5ac9:\t48 8b 00             \tmov    (%rax),%rax\n    5acc:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5ad0:\t41 55                \tpush   %r13\n    5ad2:\t41 54                \tpush   %r12\n    5ad4:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5adb <send_full_notify+0x2beb>\n    5adb:\t57                   \tpush   %rdi\n    5adc:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5ae3 <send_full_notify+0x2bf3>\n    5ae3:\t57                   \tpush   %rdi\n    5ae4:\t53                   \tpush   %rbx\n    5ae5:\t41 89 f1             \tmov    %esi,%r9d\n    5ae8:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5aef <send_full_notify+0x2bff>\n    5aef:\t48 89 c7             \tmov    %rax,%rdi\n    5af2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5af7:\te8 00 00 00 00       \tcall   5afc <send_full_notify+0x2c0c>\n    5afc:\t48 83 c4 30          \tadd    $0x30,%rsp\n    5b00:\teb 75                \tjmp    5b77 <send_full_notify+0x2c87>\n    5b02:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5b09 <send_full_notify+0x2c19>\n    5b09:\t44 8b 20             \tmov    (%rax),%r12d\n    5b0c:\t8b 9d a4 fe ff ff    \tmov    -0x15c(%rbp),%ebx\n    5b12:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    5b15:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5b18:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5b1f <send_full_notify+0x2c2f>\n    5b1f:\t48 63 d2             \tmovslq %edx,%rdx\n    5b22:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5b26:\t48 01 d0             \tadd    %rdx,%rax\n    5b29:\t4c 8b 28             \tmov    (%rax),%r13\n    5b2c:\te8 00 00 00 00       \tcall   5b31 <send_full_notify+0x2c41>\n    5b31:\t89 c1                \tmov    %eax,%ecx\n    5b33:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5b3a <send_full_notify+0x2c4a>\n    5b3a:\t8b 10                \tmov    (%rax),%edx\n    5b3c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5b43 <send_full_notify+0x2c53>\n    5b43:\t48 8b 00             \tmov    (%rax),%rax\n    5b46:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5b4a:\t41 54                \tpush   %r12\n    5b4c:\t53                   \tpush   %rbx\n    5b4d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5b54 <send_full_notify+0x2c64>\n    5b54:\t56                   \tpush   %rsi\n    5b55:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5b5c <send_full_notify+0x2c6c>\n    5b5c:\t4d 89 e8             \tmov    %r13,%r8\n    5b5f:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5b66 <send_full_notify+0x2c76>\n    5b66:\t48 89 c7             \tmov    %rax,%rdi\n    5b69:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5b6e:\te8 00 00 00 00       \tcall   5b73 <send_full_notify+0x2c83>\n    5b73:\t48 83 c4 20          \tadd    $0x20,%rsp\n    5b77:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5b7e <send_full_notify+0x2c8e>\n    5b7e:\t8b 00                \tmov    (%rax),%eax\n    5b80:\t85 c0                \ttest   %eax,%eax\n    5b82:\t0f 95 c0             \tsetne  %al\n    5b85:\t0f b6 c0             \tmovzbl %al,%eax\n    5b88:\t48 85 c0             \ttest   %rax,%rax\n    5b8b:\t0f 84 89 01 00 00    \tje     5d1a <send_full_notify+0x2e2a>\n    5b91:\te8 00 00 00 00       \tcall   5b96 <send_full_notify+0x2ca6>\n    5b96:\te9 7f 01 00 00       \tjmp    5d1a <send_full_notify+0x2e2a>\n    5b9b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5ba2 <send_full_notify+0x2cb2>\n    5ba2:\t48 8b 00             \tmov    (%rax),%rax\n    5ba5:\t48 85 c0             \ttest   %rax,%rax\n    5ba8:\t0f 95 c0             \tsetne  %al\n    5bab:\t0f b6 c0             \tmovzbl %al,%eax\n    5bae:\t48 85 c0             \ttest   %rax,%rax\n    5bb1:\t0f 84 cd 00 00 00    \tje     5c84 <send_full_notify+0x2d94>\n    5bb7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5bbe <send_full_notify+0x2cce>\n    5bbe:\t4c 8b 28             \tmov    (%rax),%r13\n    5bc1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5bc8 <send_full_notify+0x2cd8>\n    5bc8:\t44 8b 38             \tmov    (%rax),%r15d\n    5bcb:\t44 8b b5 a4 fe ff ff \tmov    -0x15c(%rbp),%r14d\n    5bd2:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    5bd5:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5bd8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5bdf <send_full_notify+0x2cef>\n    5bdf:\t48 63 d2             \tmovslq %edx,%rdx\n    5be2:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5be6:\t48 01 d0             \tadd    %rdx,%rax\n    5be9:\t48 8b 00             \tmov    (%rax),%rax\n    5bec:\t48 89 85 68 fe ff ff \tmov    %rax,-0x198(%rbp)\n    5bf3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5bfa <send_full_notify+0x2d0a>\n    5bfa:\t48 8b 00             \tmov    (%rax),%rax\n    5bfd:\t4c 8b 20             \tmov    (%rax),%r12\n    5c00:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5c07 <send_full_notify+0x2d17>\n    5c07:\t48 8b 00             \tmov    (%rax),%rax\n    5c0a:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    5c0d:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    5c10:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5c13:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5c1a <send_full_notify+0x2d2a>\n    5c1a:\t48 63 d2             \tmovslq %edx,%rdx\n    5c1d:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5c21:\t48 01 d0             \tadd    %rdx,%rax\n    5c24:\t48 83 c0 08          \tadd    $0x8,%rax\n    5c28:\t8b 08                \tmov    (%rax),%ecx\n    5c2a:\t89 8d 70 fe ff ff    \tmov    %ecx,-0x190(%rbp)\n    5c30:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    5c35:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5c3c <send_full_notify+0x2d4c>\n    5c3c:\te8 00 00 00 00       \tcall   5c41 <send_full_notify+0x2d51>\n    5c41:\t0b 85 70 fe ff ff    \tor     -0x190(%rbp),%eax\n    5c47:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5c4b:\t41 57                \tpush   %r15\n    5c4d:\t41 56                \tpush   %r14\n    5c4f:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 5c56 <send_full_notify+0x2d66>\n    5c56:\t52                   \tpush   %rdx\n    5c57:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5c5e <send_full_notify+0x2d6e>\n    5c5e:\t4c 8b 85 68 fe ff ff \tmov    -0x198(%rbp),%r8\n    5c65:\t4c 89 e1             \tmov    %r12,%rcx\n    5c68:\t89 da                \tmov    %ebx,%edx\n    5c6a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5c71 <send_full_notify+0x2d81>\n    5c71:\t89 c7                \tmov    %eax,%edi\n    5c73:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5c78:\t41 ff d5             \tcall   *%r13\n    5c7b:\t48 83 c4 20          \tadd    $0x20,%rsp\n    5c7f:\te9 96 00 00 00       \tjmp    5d1a <send_full_notify+0x2e2a>\n    5c84:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5c8b <send_full_notify+0x2d9b>\n    5c8b:\t4c 8b 20             \tmov    (%rax),%r12\n    5c8e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5c95 <send_full_notify+0x2da5>\n    5c95:\t44 8b 28             \tmov    (%rax),%r13d\n    5c98:\t44 8b bd a4 fe ff ff \tmov    -0x15c(%rbp),%r15d\n    5c9f:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    5ca2:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5ca5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5cac <send_full_notify+0x2dbc>\n    5cac:\t48 63 d2             \tmovslq %edx,%rdx\n    5caf:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5cb3:\t48 01 d0             \tadd    %rdx,%rax\n    5cb6:\t48 8b 18             \tmov    (%rax),%rbx\n    5cb9:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    5cbc:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5cbf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5cc6 <send_full_notify+0x2dd6>\n    5cc6:\t48 63 d2             \tmovslq %edx,%rdx\n    5cc9:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5ccd:\t48 01 d0             \tadd    %rdx,%rax\n    5cd0:\t48 83 c0 08          \tadd    $0x8,%rax\n    5cd4:\t44 8b 30             \tmov    (%rax),%r14d\n    5cd7:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    5cdc:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5ce3 <send_full_notify+0x2df3>\n    5ce3:\te8 00 00 00 00       \tcall   5ce8 <send_full_notify+0x2df8>\n    5ce8:\t44 09 f0             \tor     %r14d,%eax\n    5ceb:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5cef:\t41 55                \tpush   %r13\n    5cf1:\t45 89 f9             \tmov    %r15d,%r9d\n    5cf4:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 5cfb <send_full_notify+0x2e0b>\n    5cfb:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 5d02 <send_full_notify+0x2e12>\n    5d02:\t48 89 da             \tmov    %rbx,%rdx\n    5d05:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5d0c <send_full_notify+0x2e1c>\n    5d0c:\t89 c7                \tmov    %eax,%edi\n    5d0e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5d13:\t41 ff d4             \tcall   *%r12\n    5d16:\t48 83 c4 10          \tadd    $0x10,%rsp\n    5d1a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5d21 <send_full_notify+0x2e31>\n    5d21:\t8b 00                \tmov    (%rax),%eax\n    5d23:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    5d26:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5d2d <send_full_notify+0x2e3d>\n    5d2d:\t89 10                \tmov    %edx,(%rax)\n    5d2f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5d36 <send_full_notify+0x2e46>\n    5d36:\t4c 8b 50 18          \tmov    0x18(%rax),%r10\n    5d3a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5d41 <send_full_notify+0x2e51>\n    5d41:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    5d45:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5d4c <send_full_notify+0x2e5c>\n    5d4c:\t41 b8 e7 00 00 00    \tmov    $0xe7,%r8d\n    5d52:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 5d59 <send_full_notify+0x2e69>\n    5d59:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 5d60 <send_full_notify+0x2e70>\n    5d60:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    5d65:\t48 89 c7             \tmov    %rax,%rdi\n    5d68:\t41 ff d2             \tcall   *%r10\n    5d6b:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    5d6f:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n    5d74:\t0f 85 07 03 00 00    \tjne    6081 <send_full_notify+0x3191>\n    5d7a:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    5d7f:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5d86 <send_full_notify+0x2e96>\n    5d86:\te8 00 00 00 00       \tcall   5d8b <send_full_notify+0x2e9b>\n    5d8b:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    5d8e:\t0f 8c a4 0f 00 00    \tjl     6d38 <send_full_notify+0x3e48>\n    5d94:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5d9b <send_full_notify+0x2eab>\n    5d9b:\t8b 00                \tmov    (%rax),%eax\n    5d9d:\t85 c0                \ttest   %eax,%eax\n    5d9f:\t0f 85 93 0f 00 00    \tjne    6d38 <send_full_notify+0x3e48>\n    5da5:\tc7 45 84 ff ff ff ff \tmovl   $0xffffffff,-0x7c(%rbp)\n    5dac:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5db3 <send_full_notify+0x2ec3>\n    5db3:\t8b 00                \tmov    (%rax),%eax\n    5db5:\t8d 50 01             \tlea    0x1(%rax),%edx\n    5db8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5dbf <send_full_notify+0x2ecf>\n    5dbf:\t89 10                \tmov    %edx,(%rax)\n    5dc1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5dc8 <send_full_notify+0x2ed8>\n    5dc8:\t8b 00                \tmov    (%rax),%eax\n    5dca:\t85 c0                \ttest   %eax,%eax\n    5dcc:\t0f 95 c0             \tsetne  %al\n    5dcf:\t0f b6 c0             \tmovzbl %al,%eax\n    5dd2:\t48 85 c0             \ttest   %rax,%rax\n    5dd5:\t0f 84 4b 01 00 00    \tje     5f26 <send_full_notify+0x3036>\n    5ddb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5de2 <send_full_notify+0x2ef2>\n    5de2:\t8b 00                \tmov    (%rax),%eax\n    5de4:\t85 c0                \ttest   %eax,%eax\n    5de6:\t0f 95 c0             \tsetne  %al\n    5de9:\t0f b6 c0             \tmovzbl %al,%eax\n    5dec:\t48 85 c0             \ttest   %rax,%rax\n    5def:\t74 0a                \tje     5dfb <send_full_notify+0x2f0b>\n    5df1:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    5df4:\t89 c7                \tmov    %eax,%edi\n    5df6:\te8 00 00 00 00       \tcall   5dfb <send_full_notify+0x2f0b>\n    5dfb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5e02 <send_full_notify+0x2f12>\n    5e02:\t48 8b 00             \tmov    (%rax),%rax\n    5e05:\t48 85 c0             \ttest   %rax,%rax\n    5e08:\t0f 95 c0             \tsetne  %al\n    5e0b:\t0f b6 c0             \tmovzbl %al,%eax\n    5e0e:\t48 85 c0             \ttest   %rax,%rax\n    5e11:\t0f 84 85 00 00 00    \tje     5e9c <send_full_notify+0x2fac>\n    5e17:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    5e1a:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5e1d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5e24 <send_full_notify+0x2f34>\n    5e24:\t48 63 d2             \tmovslq %edx,%rdx\n    5e27:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5e2b:\t48 01 d0             \tadd    %rdx,%rax\n    5e2e:\t48 8b 18             \tmov    (%rax),%rbx\n    5e31:\te8 00 00 00 00       \tcall   5e36 <send_full_notify+0x2f46>\n    5e36:\t89 c6                \tmov    %eax,%esi\n    5e38:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5e3f <send_full_notify+0x2f4f>\n    5e3f:\t44 8b 00             \tmov    (%rax),%r8d\n    5e42:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5e49 <send_full_notify+0x2f59>\n    5e49:\t48 8b 00             \tmov    (%rax),%rax\n    5e4c:\t48 8b 08             \tmov    (%rax),%rcx\n    5e4f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5e56 <send_full_notify+0x2f66>\n    5e56:\t48 8b 00             \tmov    (%rax),%rax\n    5e59:\t8b 50 08             \tmov    0x8(%rax),%edx\n    5e5c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5e63 <send_full_notify+0x2f73>\n    5e63:\t48 8b 00             \tmov    (%rax),%rax\n    5e66:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5e6d <send_full_notify+0x2f7d>\n    5e6d:\t57                   \tpush   %rdi\n    5e6e:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5e75 <send_full_notify+0x2f85>\n    5e75:\t57                   \tpush   %rdi\n    5e76:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5e7d <send_full_notify+0x2f8d>\n    5e7d:\t57                   \tpush   %rdi\n    5e7e:\t53                   \tpush   %rbx\n    5e7f:\t41 89 f1             \tmov    %esi,%r9d\n    5e82:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5e89 <send_full_notify+0x2f99>\n    5e89:\t48 89 c7             \tmov    %rax,%rdi\n    5e8c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5e91:\te8 00 00 00 00       \tcall   5e96 <send_full_notify+0x2fa6>\n    5e96:\t48 83 c4 20          \tadd    $0x20,%rsp\n    5e9a:\teb 66                \tjmp    5f02 <send_full_notify+0x3012>\n    5e9c:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    5e9f:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5ea2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5ea9 <send_full_notify+0x2fb9>\n    5ea9:\t48 63 d2             \tmovslq %edx,%rdx\n    5eac:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5eb0:\t48 01 d0             \tadd    %rdx,%rax\n    5eb3:\t48 8b 18             \tmov    (%rax),%rbx\n    5eb6:\te8 00 00 00 00       \tcall   5ebb <send_full_notify+0x2fcb>\n    5ebb:\t89 c1                \tmov    %eax,%ecx\n    5ebd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5ec4 <send_full_notify+0x2fd4>\n    5ec4:\t8b 10                \tmov    (%rax),%edx\n    5ec6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5ecd <send_full_notify+0x2fdd>\n    5ecd:\t48 8b 00             \tmov    (%rax),%rax\n    5ed0:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5ed7 <send_full_notify+0x2fe7>\n    5ed7:\t56                   \tpush   %rsi\n    5ed8:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5edf <send_full_notify+0x2fef>\n    5edf:\t56                   \tpush   %rsi\n    5ee0:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5ee7 <send_full_notify+0x2ff7>\n    5ee7:\t49 89 d8             \tmov    %rbx,%r8\n    5eea:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5ef1 <send_full_notify+0x3001>\n    5ef1:\t48 89 c7             \tmov    %rax,%rdi\n    5ef4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5ef9:\te8 00 00 00 00       \tcall   5efe <send_full_notify+0x300e>\n    5efe:\t48 83 c4 10          \tadd    $0x10,%rsp\n    5f02:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5f09 <send_full_notify+0x3019>\n    5f09:\t8b 00                \tmov    (%rax),%eax\n    5f0b:\t85 c0                \ttest   %eax,%eax\n    5f0d:\t0f 95 c0             \tsetne  %al\n    5f10:\t0f b6 c0             \tmovzbl %al,%eax\n    5f13:\t48 85 c0             \ttest   %rax,%rax\n    5f16:\t0f 84 4b 01 00 00    \tje     6067 <send_full_notify+0x3177>\n    5f1c:\te8 00 00 00 00       \tcall   5f21 <send_full_notify+0x3031>\n    5f21:\te9 41 01 00 00       \tjmp    6067 <send_full_notify+0x3177>\n    5f26:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5f2d <send_full_notify+0x303d>\n    5f2d:\t48 8b 00             \tmov    (%rax),%rax\n    5f30:\t48 85 c0             \ttest   %rax,%rax\n    5f33:\t0f 95 c0             \tsetne  %al\n    5f36:\t0f b6 c0             \tmovzbl %al,%eax\n    5f39:\t48 85 c0             \ttest   %rax,%rax\n    5f3c:\t0f 84 a6 00 00 00    \tje     5fe8 <send_full_notify+0x30f8>\n    5f42:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5f49 <send_full_notify+0x3059>\n    5f49:\t4c 8b 28             \tmov    (%rax),%r13\n    5f4c:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    5f4f:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5f52:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5f59 <send_full_notify+0x3069>\n    5f59:\t48 63 d2             \tmovslq %edx,%rdx\n    5f5c:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5f60:\t48 01 d0             \tadd    %rdx,%rax\n    5f63:\t4c 8b 38             \tmov    (%rax),%r15\n    5f66:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5f6d <send_full_notify+0x307d>\n    5f6d:\t48 8b 00             \tmov    (%rax),%rax\n    5f70:\t4c 8b 20             \tmov    (%rax),%r12\n    5f73:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5f7a <send_full_notify+0x308a>\n    5f7a:\t48 8b 00             \tmov    (%rax),%rax\n    5f7d:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    5f80:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    5f83:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5f86:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5f8d <send_full_notify+0x309d>\n    5f8d:\t48 63 d2             \tmovslq %edx,%rdx\n    5f90:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    5f94:\t48 01 d0             \tadd    %rdx,%rax\n    5f97:\t48 83 c0 08          \tadd    $0x8,%rax\n    5f9b:\t44 8b 30             \tmov    (%rax),%r14d\n    5f9e:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    5fa3:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 5faa <send_full_notify+0x30ba>\n    5faa:\te8 00 00 00 00       \tcall   5faf <send_full_notify+0x30bf>\n    5faf:\t44 09 f0             \tor     %r14d,%eax\n    5fb2:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 5fb9 <send_full_notify+0x30c9>\n    5fb9:\t52                   \tpush   %rdx\n    5fba:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 5fc1 <send_full_notify+0x30d1>\n    5fc1:\t52                   \tpush   %rdx\n    5fc2:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 5fc9 <send_full_notify+0x30d9>\n    5fc9:\t4d 89 f8             \tmov    %r15,%r8\n    5fcc:\t4c 89 e1             \tmov    %r12,%rcx\n    5fcf:\t89 da                \tmov    %ebx,%edx\n    5fd1:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 5fd8 <send_full_notify+0x30e8>\n    5fd8:\t89 c7                \tmov    %eax,%edi\n    5fda:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5fdf:\t41 ff d5             \tcall   *%r13\n    5fe2:\t48 83 c4 10          \tadd    $0x10,%rsp\n    5fe6:\teb 7f                \tjmp    6067 <send_full_notify+0x3177>\n    5fe8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5fef <send_full_notify+0x30ff>\n    5fef:\t4c 8b 20             \tmov    (%rax),%r12\n    5ff2:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    5ff5:\t8d 50 05             \tlea    0x5(%rax),%edx\n    5ff8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5fff <send_full_notify+0x310f>\n    5fff:\t48 63 d2             \tmovslq %edx,%rdx\n    6002:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6006:\t48 01 d0             \tadd    %rdx,%rax\n    6009:\t48 8b 18             \tmov    (%rax),%rbx\n    600c:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    600f:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6012:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6019 <send_full_notify+0x3129>\n    6019:\t48 63 d2             \tmovslq %edx,%rdx\n    601c:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6020:\t48 01 d0             \tadd    %rdx,%rax\n    6023:\t48 83 c0 08          \tadd    $0x8,%rax\n    6027:\t44 8b 28             \tmov    (%rax),%r13d\n    602a:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    602f:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6036 <send_full_notify+0x3146>\n    6036:\te8 00 00 00 00       \tcall   603b <send_full_notify+0x314b>\n    603b:\t44 09 e8             \tor     %r13d,%eax\n    603e:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6045 <send_full_notify+0x3155>\n    6045:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 604c <send_full_notify+0x315c>\n    604c:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6053 <send_full_notify+0x3163>\n    6053:\t48 89 da             \tmov    %rbx,%rdx\n    6056:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 605d <send_full_notify+0x316d>\n    605d:\t89 c7                \tmov    %eax,%edi\n    605f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6064:\t41 ff d4             \tcall   *%r12\n    6067:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 606e <send_full_notify+0x317e>\n    606e:\t8b 00                \tmov    (%rax),%eax\n    6070:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    6073:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 607a <send_full_notify+0x318a>\n    607a:\t89 10                \tmov    %edx,(%rax)\n    607c:\te9 b7 0c 00 00       \tjmp    6d38 <send_full_notify+0x3e48>\n    6081:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    6085:\t48 8d 50 08          \tlea    0x8(%rax),%rdx\n    6089:\t48 8b 75 c8          \tmov    -0x38(%rbp),%rsi\n    608d:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    6094:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    6099:\t48 89 c7             \tmov    %rax,%rdi\n    609c:\te8 00 00 00 00       \tcall   60a1 <send_full_notify+0x31b1>\n    60a1:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    60a8:\t48 89 c7             \tmov    %rax,%rdi\n    60ab:\te8 00 00 00 00       \tcall   60b0 <send_full_notify+0x31c0>\n    60b0:\t48 8b 0d 00 00 00 00 \tmov    0x0(%rip),%rcx        # 60b7 <send_full_notify+0x31c7>\n    60b7:\t44 8b 85 74 fe ff ff \tmov    -0x18c(%rbp),%r8d\n    60be:\t48 8b bd 88 fe ff ff \tmov    -0x178(%rbp),%rdi\n    60c5:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    60c9:\t48 8b 75 a0          \tmov    -0x60(%rbp),%rsi\n    60cd:\t48 8b 85 78 fe ff ff \tmov    -0x188(%rbp),%rax\n    60d4:\t45 89 c1             \tmov    %r8d,%r9d\n    60d7:\t49 89 f8             \tmov    %rdi,%r8\n    60da:\t48 89 c7             \tmov    %rax,%rdi\n    60dd:\te8 00 00 00 00       \tcall   60e2 <send_full_notify+0x31f2>\n    60e2:\t85 c0                \ttest   %eax,%eax\n    60e4:\t0f 89 f4 02 00 00    \tjns    63de <send_full_notify+0x34ee>\n    60ea:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    60ef:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 60f6 <send_full_notify+0x3206>\n    60f6:\te8 00 00 00 00       \tcall   60fb <send_full_notify+0x320b>\n    60fb:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    60fe:\t0f 8c 37 0c 00 00    \tjl     6d3b <send_full_notify+0x3e4b>\n    6104:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 610b <send_full_notify+0x321b>\n    610b:\t8b 00                \tmov    (%rax),%eax\n    610d:\t85 c0                \ttest   %eax,%eax\n    610f:\t0f 85 26 0c 00 00    \tjne    6d3b <send_full_notify+0x3e4b>\n    6115:\tc7 45 88 ff ff ff ff \tmovl   $0xffffffff,-0x78(%rbp)\n    611c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6123 <send_full_notify+0x3233>\n    6123:\t8b 00                \tmov    (%rax),%eax\n    6125:\t8d 50 01             \tlea    0x1(%rax),%edx\n    6128:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 612f <send_full_notify+0x323f>\n    612f:\t89 10                \tmov    %edx,(%rax)\n    6131:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6138 <send_full_notify+0x3248>\n    6138:\t8b 00                \tmov    (%rax),%eax\n    613a:\t85 c0                \ttest   %eax,%eax\n    613c:\t0f 95 c0             \tsetne  %al\n    613f:\t0f b6 c0             \tmovzbl %al,%eax\n    6142:\t48 85 c0             \ttest   %rax,%rax\n    6145:\t0f 84 43 01 00 00    \tje     628e <send_full_notify+0x339e>\n    614b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6152 <send_full_notify+0x3262>\n    6152:\t8b 00                \tmov    (%rax),%eax\n    6154:\t85 c0                \ttest   %eax,%eax\n    6156:\t0f 95 c0             \tsetne  %al\n    6159:\t0f b6 c0             \tmovzbl %al,%eax\n    615c:\t48 85 c0             \ttest   %rax,%rax\n    615f:\t74 0a                \tje     616b <send_full_notify+0x327b>\n    6161:\t8b 45 88             \tmov    -0x78(%rbp),%eax\n    6164:\t89 c7                \tmov    %eax,%edi\n    6166:\te8 00 00 00 00       \tcall   616b <send_full_notify+0x327b>\n    616b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6172 <send_full_notify+0x3282>\n    6172:\t48 8b 00             \tmov    (%rax),%rax\n    6175:\t48 85 c0             \ttest   %rax,%rax\n    6178:\t0f 95 c0             \tsetne  %al\n    617b:\t0f b6 c0             \tmovzbl %al,%eax\n    617e:\t48 85 c0             \ttest   %rax,%rax\n    6181:\t0f 84 81 00 00 00    \tje     6208 <send_full_notify+0x3318>\n    6187:\t8b 45 88             \tmov    -0x78(%rbp),%eax\n    618a:\t8d 50 05             \tlea    0x5(%rax),%edx\n    618d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6194 <send_full_notify+0x32a4>\n    6194:\t48 63 d2             \tmovslq %edx,%rdx\n    6197:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    619b:\t48 01 d0             \tadd    %rdx,%rax\n    619e:\t48 8b 18             \tmov    (%rax),%rbx\n    61a1:\te8 00 00 00 00       \tcall   61a6 <send_full_notify+0x32b6>\n    61a6:\t89 c6                \tmov    %eax,%esi\n    61a8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 61af <send_full_notify+0x32bf>\n    61af:\t44 8b 00             \tmov    (%rax),%r8d\n    61b2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 61b9 <send_full_notify+0x32c9>\n    61b9:\t48 8b 00             \tmov    (%rax),%rax\n    61bc:\t48 8b 08             \tmov    (%rax),%rcx\n    61bf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 61c6 <send_full_notify+0x32d6>\n    61c6:\t48 8b 00             \tmov    (%rax),%rax\n    61c9:\t8b 50 08             \tmov    0x8(%rax),%edx\n    61cc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 61d3 <send_full_notify+0x32e3>\n    61d3:\t48 8b 00             \tmov    (%rax),%rax\n    61d6:\t48 83 ec 08          \tsub    $0x8,%rsp\n    61da:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 61e1 <send_full_notify+0x32f1>\n    61e1:\t57                   \tpush   %rdi\n    61e2:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 61e9 <send_full_notify+0x32f9>\n    61e9:\t57                   \tpush   %rdi\n    61ea:\t53                   \tpush   %rbx\n    61eb:\t41 89 f1             \tmov    %esi,%r9d\n    61ee:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 61f5 <send_full_notify+0x3305>\n    61f5:\t48 89 c7             \tmov    %rax,%rdi\n    61f8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    61fd:\te8 00 00 00 00       \tcall   6202 <send_full_notify+0x3312>\n    6202:\t48 83 c4 20          \tadd    $0x20,%rsp\n    6206:\teb 62                \tjmp    626a <send_full_notify+0x337a>\n    6208:\t8b 45 88             \tmov    -0x78(%rbp),%eax\n    620b:\t8d 50 05             \tlea    0x5(%rax),%edx\n    620e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6215 <send_full_notify+0x3325>\n    6215:\t48 63 d2             \tmovslq %edx,%rdx\n    6218:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    621c:\t48 01 d0             \tadd    %rdx,%rax\n    621f:\t48 8b 18             \tmov    (%rax),%rbx\n    6222:\te8 00 00 00 00       \tcall   6227 <send_full_notify+0x3337>\n    6227:\t89 c1                \tmov    %eax,%ecx\n    6229:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6230 <send_full_notify+0x3340>\n    6230:\t8b 10                \tmov    (%rax),%edx\n    6232:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6239 <send_full_notify+0x3349>\n    6239:\t48 8b 00             \tmov    (%rax),%rax\n    623c:\t48 83 ec 08          \tsub    $0x8,%rsp\n    6240:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6247 <send_full_notify+0x3357>\n    6247:\t56                   \tpush   %rsi\n    6248:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 624f <send_full_notify+0x335f>\n    624f:\t49 89 d8             \tmov    %rbx,%r8\n    6252:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6259 <send_full_notify+0x3369>\n    6259:\t48 89 c7             \tmov    %rax,%rdi\n    625c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6261:\te8 00 00 00 00       \tcall   6266 <send_full_notify+0x3376>\n    6266:\t48 83 c4 10          \tadd    $0x10,%rsp\n    626a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6271 <send_full_notify+0x3381>\n    6271:\t8b 00                \tmov    (%rax),%eax\n    6273:\t85 c0                \ttest   %eax,%eax\n    6275:\t0f 95 c0             \tsetne  %al\n    6278:\t0f b6 c0             \tmovzbl %al,%eax\n    627b:\t48 85 c0             \ttest   %rax,%rax\n    627e:\t0f 84 40 01 00 00    \tje     63c4 <send_full_notify+0x34d4>\n    6284:\te8 00 00 00 00       \tcall   6289 <send_full_notify+0x3399>\n    6289:\te9 36 01 00 00       \tjmp    63c4 <send_full_notify+0x34d4>\n    628e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6295 <send_full_notify+0x33a5>\n    6295:\t48 8b 00             \tmov    (%rax),%rax\n    6298:\t48 85 c0             \ttest   %rax,%rax\n    629b:\t0f 95 c0             \tsetne  %al\n    629e:\t0f b6 c0             \tmovzbl %al,%eax\n    62a1:\t48 85 c0             \ttest   %rax,%rax\n    62a4:\t0f 84 a2 00 00 00    \tje     634c <send_full_notify+0x345c>\n    62aa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 62b1 <send_full_notify+0x33c1>\n    62b1:\t4c 8b 28             \tmov    (%rax),%r13\n    62b4:\t8b 45 88             \tmov    -0x78(%rbp),%eax\n    62b7:\t8d 50 05             \tlea    0x5(%rax),%edx\n    62ba:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 62c1 <send_full_notify+0x33d1>\n    62c1:\t48 63 d2             \tmovslq %edx,%rdx\n    62c4:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    62c8:\t48 01 d0             \tadd    %rdx,%rax\n    62cb:\t4c 8b 38             \tmov    (%rax),%r15\n    62ce:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 62d5 <send_full_notify+0x33e5>\n    62d5:\t48 8b 00             \tmov    (%rax),%rax\n    62d8:\t4c 8b 20             \tmov    (%rax),%r12\n    62db:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 62e2 <send_full_notify+0x33f2>\n    62e2:\t48 8b 00             \tmov    (%rax),%rax\n    62e5:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    62e8:\t8b 45 88             \tmov    -0x78(%rbp),%eax\n    62eb:\t8d 50 05             \tlea    0x5(%rax),%edx\n    62ee:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 62f5 <send_full_notify+0x3405>\n    62f5:\t48 63 d2             \tmovslq %edx,%rdx\n    62f8:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    62fc:\t48 01 d0             \tadd    %rdx,%rax\n    62ff:\t48 83 c0 08          \tadd    $0x8,%rax\n    6303:\t44 8b 30             \tmov    (%rax),%r14d\n    6306:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    630b:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6312 <send_full_notify+0x3422>\n    6312:\te8 00 00 00 00       \tcall   6317 <send_full_notify+0x3427>\n    6317:\t44 09 f0             \tor     %r14d,%eax\n    631a:\t48 83 ec 08          \tsub    $0x8,%rsp\n    631e:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6325 <send_full_notify+0x3435>\n    6325:\t52                   \tpush   %rdx\n    6326:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 632d <send_full_notify+0x343d>\n    632d:\t4d 89 f8             \tmov    %r15,%r8\n    6330:\t4c 89 e1             \tmov    %r12,%rcx\n    6333:\t89 da                \tmov    %ebx,%edx\n    6335:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 633c <send_full_notify+0x344c>\n    633c:\t89 c7                \tmov    %eax,%edi\n    633e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6343:\t41 ff d5             \tcall   *%r13\n    6346:\t48 83 c4 10          \tadd    $0x10,%rsp\n    634a:\teb 78                \tjmp    63c4 <send_full_notify+0x34d4>\n    634c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6353 <send_full_notify+0x3463>\n    6353:\t4c 8b 20             \tmov    (%rax),%r12\n    6356:\t8b 45 88             \tmov    -0x78(%rbp),%eax\n    6359:\t8d 50 05             \tlea    0x5(%rax),%edx\n    635c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6363 <send_full_notify+0x3473>\n    6363:\t48 63 d2             \tmovslq %edx,%rdx\n    6366:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    636a:\t48 01 d0             \tadd    %rdx,%rax\n    636d:\t48 8b 18             \tmov    (%rax),%rbx\n    6370:\t8b 45 88             \tmov    -0x78(%rbp),%eax\n    6373:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6376:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 637d <send_full_notify+0x348d>\n    637d:\t48 63 d2             \tmovslq %edx,%rdx\n    6380:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6384:\t48 01 d0             \tadd    %rdx,%rax\n    6387:\t48 83 c0 08          \tadd    $0x8,%rax\n    638b:\t44 8b 28             \tmov    (%rax),%r13d\n    638e:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    6393:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 639a <send_full_notify+0x34aa>\n    639a:\te8 00 00 00 00       \tcall   639f <send_full_notify+0x34af>\n    639f:\t44 09 e8             \tor     %r13d,%eax\n    63a2:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 63a9 <send_full_notify+0x34b9>\n    63a9:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 63b0 <send_full_notify+0x34c0>\n    63b0:\t48 89 da             \tmov    %rbx,%rdx\n    63b3:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 63ba <send_full_notify+0x34ca>\n    63ba:\t89 c7                \tmov    %eax,%edi\n    63bc:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    63c1:\t41 ff d4             \tcall   *%r12\n    63c4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 63cb <send_full_notify+0x34db>\n    63cb:\t8b 00                \tmov    (%rax),%eax\n    63cd:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    63d0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 63d7 <send_full_notify+0x34e7>\n    63d7:\t89 10                \tmov    %edx,(%rax)\n    63d9:\te9 5d 09 00 00       \tjmp    6d3b <send_full_notify+0x3e4b>\n    63de:\t48 8b 85 88 fe ff ff \tmov    -0x178(%rbp),%rax\n    63e5:\t8b 88 18 01 00 00    \tmov    0x118(%rax),%ecx\n    63eb:\t48 8b 95 78 fe ff ff \tmov    -0x188(%rbp),%rdx\n    63f2:\t48 8d b5 50 ff ff ff \tlea    -0xb0(%rbp),%rsi\n    63f9:\t48 8d 85 58 ff ff ff \tlea    -0xa8(%rbp),%rax\n    6400:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    6406:\t48 89 c7             \tmov    %rax,%rdi\n    6409:\te8 00 00 00 00       \tcall   640e <send_full_notify+0x351e>\n    640e:\t89 85 a4 fe ff ff    \tmov    %eax,-0x15c(%rbp)\n    6414:\t48 8b 95 50 ff ff ff \tmov    -0xb0(%rbp),%rdx\n    641b:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    6422:\t48 89 d6             \tmov    %rdx,%rsi\n    6425:\t48 89 c7             \tmov    %rax,%rdi\n    6428:\te8 00 00 00 00       \tcall   642d <send_full_notify+0x353d>\n    642d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6434 <send_full_notify+0x3544>\n    6434:\tc7 40 08 00 00 00 00 \tmovl   $0x0,0x8(%rax)\n    643b:\tc7 45 c4 00 00 00 00 \tmovl   $0x0,-0x3c(%rbp)\n    6442:\te9 9e 00 00 00       \tjmp    64e5 <send_full_notify+0x35f5>\n    6447:\tc7 45 c4 01 00 00 00 \tmovl   $0x1,-0x3c(%rbp)\n    644e:\t48 8b 85 a8 fe ff ff \tmov    -0x158(%rbp),%rax\n    6455:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    6459:\t48 89 85 a8 fe ff ff \tmov    %rax,-0x158(%rbp)\n    6460:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    6464:\t48 8b 00             \tmov    (%rax),%rax\n    6467:\t48 85 c0             \ttest   %rax,%rax\n    646a:\t74 3e                \tje     64aa <send_full_notify+0x35ba>\n    646c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6473 <send_full_notify+0x3583>\n    6473:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    6477:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    647b:\t48 8b 30             \tmov    (%rax),%rsi\n    647e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6485 <send_full_notify+0x3595>\n    6485:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    6489:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6490 <send_full_notify+0x35a0>\n    6490:\t41 b8 04 01 00 00    \tmov    $0x104,%r8d\n    6496:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 649d <send_full_notify+0x35ad>\n    649d:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 64a4 <send_full_notify+0x35b4>\n    64a4:\t48 89 c7             \tmov    %rax,%rdi\n    64a7:\t41 ff d2             \tcall   *%r10\n    64aa:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 64b1 <send_full_notify+0x35c1>\n    64b1:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    64b5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 64bc <send_full_notify+0x35cc>\n    64bc:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    64c0:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n    64c4:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 64cb <send_full_notify+0x35db>\n    64cb:\t41 b8 05 01 00 00    \tmov    $0x105,%r8d\n    64d1:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 64d8 <send_full_notify+0x35e8>\n    64d8:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 64df <send_full_notify+0x35ef>\n    64df:\t48 89 c7             \tmov    %rax,%rdi\n    64e2:\t41 ff d2             \tcall   *%r10\n    64e5:\t48 8b 85 a8 fe ff ff \tmov    -0x158(%rbp),%rax\n    64ec:\t48 85 c0             \ttest   %rax,%rax\n    64ef:\t0f 85 93 f0 ff ff    \tjne    5588 <send_full_notify+0x2698>\n    64f5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 64fc <send_full_notify+0x360c>\n    64fc:\t4c 8b 50 18          \tmov    0x18(%rax),%r10\n    6500:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6507 <send_full_notify+0x3617>\n    6507:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    650b:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6512 <send_full_notify+0x3622>\n    6512:\t41 b8 09 01 00 00    \tmov    $0x109,%r8d\n    6518:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 651f <send_full_notify+0x362f>\n    651f:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6526 <send_full_notify+0x3636>\n    6526:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    652b:\t48 89 c7             \tmov    %rax,%rdi\n    652e:\t41 ff d2             \tcall   *%r10\n    6531:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    6535:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n    653a:\t0f 85 07 03 00 00    \tjne    6847 <send_full_notify+0x3957>\n    6540:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    6545:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 654c <send_full_notify+0x365c>\n    654c:\te8 00 00 00 00       \tcall   6551 <send_full_notify+0x3661>\n    6551:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    6554:\t0f 8c e4 07 00 00    \tjl     6d3e <send_full_notify+0x3e4e>\n    655a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6561 <send_full_notify+0x3671>\n    6561:\t8b 00                \tmov    (%rax),%eax\n    6563:\t85 c0                \ttest   %eax,%eax\n    6565:\t0f 85 d3 07 00 00    \tjne    6d3e <send_full_notify+0x3e4e>\n    656b:\tc7 45 98 ff ff ff ff \tmovl   $0xffffffff,-0x68(%rbp)\n    6572:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6579 <send_full_notify+0x3689>\n    6579:\t8b 00                \tmov    (%rax),%eax\n    657b:\t8d 50 01             \tlea    0x1(%rax),%edx\n    657e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6585 <send_full_notify+0x3695>\n    6585:\t89 10                \tmov    %edx,(%rax)\n    6587:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 658e <send_full_notify+0x369e>\n    658e:\t8b 00                \tmov    (%rax),%eax\n    6590:\t85 c0                \ttest   %eax,%eax\n    6592:\t0f 95 c0             \tsetne  %al\n    6595:\t0f b6 c0             \tmovzbl %al,%eax\n    6598:\t48 85 c0             \ttest   %rax,%rax\n    659b:\t0f 84 4b 01 00 00    \tje     66ec <send_full_notify+0x37fc>\n    65a1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 65a8 <send_full_notify+0x36b8>\n    65a8:\t8b 00                \tmov    (%rax),%eax\n    65aa:\t85 c0                \ttest   %eax,%eax\n    65ac:\t0f 95 c0             \tsetne  %al\n    65af:\t0f b6 c0             \tmovzbl %al,%eax\n    65b2:\t48 85 c0             \ttest   %rax,%rax\n    65b5:\t74 0a                \tje     65c1 <send_full_notify+0x36d1>\n    65b7:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n    65ba:\t89 c7                \tmov    %eax,%edi\n    65bc:\te8 00 00 00 00       \tcall   65c1 <send_full_notify+0x36d1>\n    65c1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 65c8 <send_full_notify+0x36d8>\n    65c8:\t48 8b 00             \tmov    (%rax),%rax\n    65cb:\t48 85 c0             \ttest   %rax,%rax\n    65ce:\t0f 95 c0             \tsetne  %al\n    65d1:\t0f b6 c0             \tmovzbl %al,%eax\n    65d4:\t48 85 c0             \ttest   %rax,%rax\n    65d7:\t0f 84 85 00 00 00    \tje     6662 <send_full_notify+0x3772>\n    65dd:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n    65e0:\t8d 50 05             \tlea    0x5(%rax),%edx\n    65e3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 65ea <send_full_notify+0x36fa>\n    65ea:\t48 63 d2             \tmovslq %edx,%rdx\n    65ed:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    65f1:\t48 01 d0             \tadd    %rdx,%rax\n    65f4:\t48 8b 18             \tmov    (%rax),%rbx\n    65f7:\te8 00 00 00 00       \tcall   65fc <send_full_notify+0x370c>\n    65fc:\t89 c6                \tmov    %eax,%esi\n    65fe:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6605 <send_full_notify+0x3715>\n    6605:\t44 8b 00             \tmov    (%rax),%r8d\n    6608:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 660f <send_full_notify+0x371f>\n    660f:\t48 8b 00             \tmov    (%rax),%rax\n    6612:\t48 8b 08             \tmov    (%rax),%rcx\n    6615:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 661c <send_full_notify+0x372c>\n    661c:\t48 8b 00             \tmov    (%rax),%rax\n    661f:\t8b 50 08             \tmov    0x8(%rax),%edx\n    6622:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6629 <send_full_notify+0x3739>\n    6629:\t48 8b 00             \tmov    (%rax),%rax\n    662c:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6633 <send_full_notify+0x3743>\n    6633:\t57                   \tpush   %rdi\n    6634:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 663b <send_full_notify+0x374b>\n    663b:\t57                   \tpush   %rdi\n    663c:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6643 <send_full_notify+0x3753>\n    6643:\t57                   \tpush   %rdi\n    6644:\t53                   \tpush   %rbx\n    6645:\t41 89 f1             \tmov    %esi,%r9d\n    6648:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 664f <send_full_notify+0x375f>\n    664f:\t48 89 c7             \tmov    %rax,%rdi\n    6652:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6657:\te8 00 00 00 00       \tcall   665c <send_full_notify+0x376c>\n    665c:\t48 83 c4 20          \tadd    $0x20,%rsp\n    6660:\teb 66                \tjmp    66c8 <send_full_notify+0x37d8>\n    6662:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n    6665:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6668:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 666f <send_full_notify+0x377f>\n    666f:\t48 63 d2             \tmovslq %edx,%rdx\n    6672:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6676:\t48 01 d0             \tadd    %rdx,%rax\n    6679:\t48 8b 18             \tmov    (%rax),%rbx\n    667c:\te8 00 00 00 00       \tcall   6681 <send_full_notify+0x3791>\n    6681:\t89 c1                \tmov    %eax,%ecx\n    6683:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 668a <send_full_notify+0x379a>\n    668a:\t8b 10                \tmov    (%rax),%edx\n    668c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6693 <send_full_notify+0x37a3>\n    6693:\t48 8b 00             \tmov    (%rax),%rax\n    6696:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 669d <send_full_notify+0x37ad>\n    669d:\t56                   \tpush   %rsi\n    669e:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 66a5 <send_full_notify+0x37b5>\n    66a5:\t56                   \tpush   %rsi\n    66a6:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 66ad <send_full_notify+0x37bd>\n    66ad:\t49 89 d8             \tmov    %rbx,%r8\n    66b0:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 66b7 <send_full_notify+0x37c7>\n    66b7:\t48 89 c7             \tmov    %rax,%rdi\n    66ba:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    66bf:\te8 00 00 00 00       \tcall   66c4 <send_full_notify+0x37d4>\n    66c4:\t48 83 c4 10          \tadd    $0x10,%rsp\n    66c8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 66cf <send_full_notify+0x37df>\n    66cf:\t8b 00                \tmov    (%rax),%eax\n    66d1:\t85 c0                \ttest   %eax,%eax\n    66d3:\t0f 95 c0             \tsetne  %al\n    66d6:\t0f b6 c0             \tmovzbl %al,%eax\n    66d9:\t48 85 c0             \ttest   %rax,%rax\n    66dc:\t0f 84 4b 01 00 00    \tje     682d <send_full_notify+0x393d>\n    66e2:\te8 00 00 00 00       \tcall   66e7 <send_full_notify+0x37f7>\n    66e7:\te9 41 01 00 00       \tjmp    682d <send_full_notify+0x393d>\n    66ec:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 66f3 <send_full_notify+0x3803>\n    66f3:\t48 8b 00             \tmov    (%rax),%rax\n    66f6:\t48 85 c0             \ttest   %rax,%rax\n    66f9:\t0f 95 c0             \tsetne  %al\n    66fc:\t0f b6 c0             \tmovzbl %al,%eax\n    66ff:\t48 85 c0             \ttest   %rax,%rax\n    6702:\t0f 84 a6 00 00 00    \tje     67ae <send_full_notify+0x38be>\n    6708:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 670f <send_full_notify+0x381f>\n    670f:\t4c 8b 28             \tmov    (%rax),%r13\n    6712:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n    6715:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6718:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 671f <send_full_notify+0x382f>\n    671f:\t48 63 d2             \tmovslq %edx,%rdx\n    6722:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6726:\t48 01 d0             \tadd    %rdx,%rax\n    6729:\t4c 8b 38             \tmov    (%rax),%r15\n    672c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6733 <send_full_notify+0x3843>\n    6733:\t48 8b 00             \tmov    (%rax),%rax\n    6736:\t4c 8b 20             \tmov    (%rax),%r12\n    6739:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6740 <send_full_notify+0x3850>\n    6740:\t48 8b 00             \tmov    (%rax),%rax\n    6743:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    6746:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n    6749:\t8d 50 05             \tlea    0x5(%rax),%edx\n    674c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6753 <send_full_notify+0x3863>\n    6753:\t48 63 d2             \tmovslq %edx,%rdx\n    6756:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    675a:\t48 01 d0             \tadd    %rdx,%rax\n    675d:\t48 83 c0 08          \tadd    $0x8,%rax\n    6761:\t44 8b 30             \tmov    (%rax),%r14d\n    6764:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    6769:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6770 <send_full_notify+0x3880>\n    6770:\te8 00 00 00 00       \tcall   6775 <send_full_notify+0x3885>\n    6775:\t44 09 f0             \tor     %r14d,%eax\n    6778:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 677f <send_full_notify+0x388f>\n    677f:\t52                   \tpush   %rdx\n    6780:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6787 <send_full_notify+0x3897>\n    6787:\t52                   \tpush   %rdx\n    6788:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 678f <send_full_notify+0x389f>\n    678f:\t4d 89 f8             \tmov    %r15,%r8\n    6792:\t4c 89 e1             \tmov    %r12,%rcx\n    6795:\t89 da                \tmov    %ebx,%edx\n    6797:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 679e <send_full_notify+0x38ae>\n    679e:\t89 c7                \tmov    %eax,%edi\n    67a0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    67a5:\t41 ff d5             \tcall   *%r13\n    67a8:\t48 83 c4 10          \tadd    $0x10,%rsp\n    67ac:\teb 7f                \tjmp    682d <send_full_notify+0x393d>\n    67ae:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 67b5 <send_full_notify+0x38c5>\n    67b5:\t4c 8b 20             \tmov    (%rax),%r12\n    67b8:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n    67bb:\t8d 50 05             \tlea    0x5(%rax),%edx\n    67be:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 67c5 <send_full_notify+0x38d5>\n    67c5:\t48 63 d2             \tmovslq %edx,%rdx\n    67c8:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    67cc:\t48 01 d0             \tadd    %rdx,%rax\n    67cf:\t48 8b 18             \tmov    (%rax),%rbx\n    67d2:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n    67d5:\t8d 50 05             \tlea    0x5(%rax),%edx\n    67d8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 67df <send_full_notify+0x38ef>\n    67df:\t48 63 d2             \tmovslq %edx,%rdx\n    67e2:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    67e6:\t48 01 d0             \tadd    %rdx,%rax\n    67e9:\t48 83 c0 08          \tadd    $0x8,%rax\n    67ed:\t44 8b 28             \tmov    (%rax),%r13d\n    67f0:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    67f5:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 67fc <send_full_notify+0x390c>\n    67fc:\te8 00 00 00 00       \tcall   6801 <send_full_notify+0x3911>\n    6801:\t44 09 e8             \tor     %r13d,%eax\n    6804:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 680b <send_full_notify+0x391b>\n    680b:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 6812 <send_full_notify+0x3922>\n    6812:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6819 <send_full_notify+0x3929>\n    6819:\t48 89 da             \tmov    %rbx,%rdx\n    681c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6823 <send_full_notify+0x3933>\n    6823:\t89 c7                \tmov    %eax,%edi\n    6825:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    682a:\t41 ff d4             \tcall   *%r12\n    682d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6834 <send_full_notify+0x3944>\n    6834:\t8b 00                \tmov    (%rax),%eax\n    6836:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    6839:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6840 <send_full_notify+0x3950>\n    6840:\t89 10                \tmov    %edx,(%rax)\n    6842:\te9 f7 04 00 00       \tjmp    6d3e <send_full_notify+0x3e4e>\n    6847:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 684e <send_full_notify+0x395e>\n    684e:\t8b 00                \tmov    (%rax),%eax\n    6850:\t85 c0                \ttest   %eax,%eax\n    6852:\t0f 94 c0             \tsete   %al\n    6855:\t0f b6 d0             \tmovzbl %al,%edx\n    6858:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    685c:\t48 8d 78 08          \tlea    0x8(%rax),%rdi\n    6860:\t48 8b 75 c8          \tmov    -0x38(%rbp),%rsi\n    6864:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    686b:\t89 d1                \tmov    %edx,%ecx\n    686d:\t48 89 fa             \tmov    %rdi,%rdx\n    6870:\t48 89 c7             \tmov    %rax,%rdi\n    6873:\te8 00 00 00 00       \tcall   6878 <send_full_notify+0x3988>\n    6878:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    687f:\t48 89 c7             \tmov    %rax,%rdi\n    6882:\te8 00 00 00 00       \tcall   6887 <send_full_notify+0x3997>\n    6887:\t48 8b 0d 00 00 00 00 \tmov    0x0(%rip),%rcx        # 688e <send_full_notify+0x399e>\n    688e:\t44 8b 85 74 fe ff ff \tmov    -0x18c(%rbp),%r8d\n    6895:\t48 8b bd 88 fe ff ff \tmov    -0x178(%rbp),%rdi\n    689c:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    68a0:\t48 8b 75 a0          \tmov    -0x60(%rbp),%rsi\n    68a4:\t48 8b 85 78 fe ff ff \tmov    -0x188(%rbp),%rax\n    68ab:\t45 89 c1             \tmov    %r8d,%r9d\n    68ae:\t49 89 f8             \tmov    %rdi,%r8\n    68b1:\t48 89 c7             \tmov    %rax,%rdi\n    68b4:\te8 00 00 00 00       \tcall   68b9 <send_full_notify+0x39c9>\n    68b9:\t85 c0                \ttest   %eax,%eax\n    68bb:\t0f 89 f4 02 00 00    \tjns    6bb5 <send_full_notify+0x3cc5>\n    68c1:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    68c6:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 68cd <send_full_notify+0x39dd>\n    68cd:\te8 00 00 00 00       \tcall   68d2 <send_full_notify+0x39e2>\n    68d2:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    68d5:\t0f 8c 66 04 00 00    \tjl     6d41 <send_full_notify+0x3e51>\n    68db:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 68e2 <send_full_notify+0x39f2>\n    68e2:\t8b 00                \tmov    (%rax),%eax\n    68e4:\t85 c0                \ttest   %eax,%eax\n    68e6:\t0f 85 55 04 00 00    \tjne    6d41 <send_full_notify+0x3e51>\n    68ec:\tc7 45 9c ff ff ff ff \tmovl   $0xffffffff,-0x64(%rbp)\n    68f3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 68fa <send_full_notify+0x3a0a>\n    68fa:\t8b 00                \tmov    (%rax),%eax\n    68fc:\t8d 50 01             \tlea    0x1(%rax),%edx\n    68ff:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6906 <send_full_notify+0x3a16>\n    6906:\t89 10                \tmov    %edx,(%rax)\n    6908:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 690f <send_full_notify+0x3a1f>\n    690f:\t8b 00                \tmov    (%rax),%eax\n    6911:\t85 c0                \ttest   %eax,%eax\n    6913:\t0f 95 c0             \tsetne  %al\n    6916:\t0f b6 c0             \tmovzbl %al,%eax\n    6919:\t48 85 c0             \ttest   %rax,%rax\n    691c:\t0f 84 43 01 00 00    \tje     6a65 <send_full_notify+0x3b75>\n    6922:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6929 <send_full_notify+0x3a39>\n    6929:\t8b 00                \tmov    (%rax),%eax\n    692b:\t85 c0                \ttest   %eax,%eax\n    692d:\t0f 95 c0             \tsetne  %al\n    6930:\t0f b6 c0             \tmovzbl %al,%eax\n    6933:\t48 85 c0             \ttest   %rax,%rax\n    6936:\t74 0a                \tje     6942 <send_full_notify+0x3a52>\n    6938:\t8b 45 9c             \tmov    -0x64(%rbp),%eax\n    693b:\t89 c7                \tmov    %eax,%edi\n    693d:\te8 00 00 00 00       \tcall   6942 <send_full_notify+0x3a52>\n    6942:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6949 <send_full_notify+0x3a59>\n    6949:\t48 8b 00             \tmov    (%rax),%rax\n    694c:\t48 85 c0             \ttest   %rax,%rax\n    694f:\t0f 95 c0             \tsetne  %al\n    6952:\t0f b6 c0             \tmovzbl %al,%eax\n    6955:\t48 85 c0             \ttest   %rax,%rax\n    6958:\t0f 84 81 00 00 00    \tje     69df <send_full_notify+0x3aef>\n    695e:\t8b 45 9c             \tmov    -0x64(%rbp),%eax\n    6961:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6964:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 696b <send_full_notify+0x3a7b>\n    696b:\t48 63 d2             \tmovslq %edx,%rdx\n    696e:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6972:\t48 01 d0             \tadd    %rdx,%rax\n    6975:\t48 8b 18             \tmov    (%rax),%rbx\n    6978:\te8 00 00 00 00       \tcall   697d <send_full_notify+0x3a8d>\n    697d:\t89 c6                \tmov    %eax,%esi\n    697f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6986 <send_full_notify+0x3a96>\n    6986:\t44 8b 00             \tmov    (%rax),%r8d\n    6989:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6990 <send_full_notify+0x3aa0>\n    6990:\t48 8b 00             \tmov    (%rax),%rax\n    6993:\t48 8b 08             \tmov    (%rax),%rcx\n    6996:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 699d <send_full_notify+0x3aad>\n    699d:\t48 8b 00             \tmov    (%rax),%rax\n    69a0:\t8b 50 08             \tmov    0x8(%rax),%edx\n    69a3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 69aa <send_full_notify+0x3aba>\n    69aa:\t48 8b 00             \tmov    (%rax),%rax\n    69ad:\t48 83 ec 08          \tsub    $0x8,%rsp\n    69b1:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 69b8 <send_full_notify+0x3ac8>\n    69b8:\t57                   \tpush   %rdi\n    69b9:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 69c0 <send_full_notify+0x3ad0>\n    69c0:\t57                   \tpush   %rdi\n    69c1:\t53                   \tpush   %rbx\n    69c2:\t41 89 f1             \tmov    %esi,%r9d\n    69c5:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 69cc <send_full_notify+0x3adc>\n    69cc:\t48 89 c7             \tmov    %rax,%rdi\n    69cf:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    69d4:\te8 00 00 00 00       \tcall   69d9 <send_full_notify+0x3ae9>\n    69d9:\t48 83 c4 20          \tadd    $0x20,%rsp\n    69dd:\teb 62                \tjmp    6a41 <send_full_notify+0x3b51>\n    69df:\t8b 45 9c             \tmov    -0x64(%rbp),%eax\n    69e2:\t8d 50 05             \tlea    0x5(%rax),%edx\n    69e5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 69ec <send_full_notify+0x3afc>\n    69ec:\t48 63 d2             \tmovslq %edx,%rdx\n    69ef:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    69f3:\t48 01 d0             \tadd    %rdx,%rax\n    69f6:\t48 8b 18             \tmov    (%rax),%rbx\n    69f9:\te8 00 00 00 00       \tcall   69fe <send_full_notify+0x3b0e>\n    69fe:\t89 c1                \tmov    %eax,%ecx\n    6a00:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6a07 <send_full_notify+0x3b17>\n    6a07:\t8b 10                \tmov    (%rax),%edx\n    6a09:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6a10 <send_full_notify+0x3b20>\n    6a10:\t48 8b 00             \tmov    (%rax),%rax\n    6a13:\t48 83 ec 08          \tsub    $0x8,%rsp\n    6a17:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6a1e <send_full_notify+0x3b2e>\n    6a1e:\t56                   \tpush   %rsi\n    6a1f:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6a26 <send_full_notify+0x3b36>\n    6a26:\t49 89 d8             \tmov    %rbx,%r8\n    6a29:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6a30 <send_full_notify+0x3b40>\n    6a30:\t48 89 c7             \tmov    %rax,%rdi\n    6a33:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6a38:\te8 00 00 00 00       \tcall   6a3d <send_full_notify+0x3b4d>\n    6a3d:\t48 83 c4 10          \tadd    $0x10,%rsp\n    6a41:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6a48 <send_full_notify+0x3b58>\n    6a48:\t8b 00                \tmov    (%rax),%eax\n    6a4a:\t85 c0                \ttest   %eax,%eax\n    6a4c:\t0f 95 c0             \tsetne  %al\n    6a4f:\t0f b6 c0             \tmovzbl %al,%eax\n    6a52:\t48 85 c0             \ttest   %rax,%rax\n    6a55:\t0f 84 40 01 00 00    \tje     6b9b <send_full_notify+0x3cab>\n    6a5b:\te8 00 00 00 00       \tcall   6a60 <send_full_notify+0x3b70>\n    6a60:\te9 36 01 00 00       \tjmp    6b9b <send_full_notify+0x3cab>\n    6a65:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6a6c <send_full_notify+0x3b7c>\n    6a6c:\t48 8b 00             \tmov    (%rax),%rax\n    6a6f:\t48 85 c0             \ttest   %rax,%rax\n    6a72:\t0f 95 c0             \tsetne  %al\n    6a75:\t0f b6 c0             \tmovzbl %al,%eax\n    6a78:\t48 85 c0             \ttest   %rax,%rax\n    6a7b:\t0f 84 a2 00 00 00    \tje     6b23 <send_full_notify+0x3c33>\n    6a81:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6a88 <send_full_notify+0x3b98>\n    6a88:\t4c 8b 28             \tmov    (%rax),%r13\n    6a8b:\t8b 45 9c             \tmov    -0x64(%rbp),%eax\n    6a8e:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6a91:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6a98 <send_full_notify+0x3ba8>\n    6a98:\t48 63 d2             \tmovslq %edx,%rdx\n    6a9b:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6a9f:\t48 01 d0             \tadd    %rdx,%rax\n    6aa2:\t4c 8b 38             \tmov    (%rax),%r15\n    6aa5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6aac <send_full_notify+0x3bbc>\n    6aac:\t48 8b 00             \tmov    (%rax),%rax\n    6aaf:\t4c 8b 20             \tmov    (%rax),%r12\n    6ab2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6ab9 <send_full_notify+0x3bc9>\n    6ab9:\t48 8b 00             \tmov    (%rax),%rax\n    6abc:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    6abf:\t8b 45 9c             \tmov    -0x64(%rbp),%eax\n    6ac2:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6ac5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6acc <send_full_notify+0x3bdc>\n    6acc:\t48 63 d2             \tmovslq %edx,%rdx\n    6acf:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6ad3:\t48 01 d0             \tadd    %rdx,%rax\n    6ad6:\t48 83 c0 08          \tadd    $0x8,%rax\n    6ada:\t44 8b 30             \tmov    (%rax),%r14d\n    6add:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    6ae2:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6ae9 <send_full_notify+0x3bf9>\n    6ae9:\te8 00 00 00 00       \tcall   6aee <send_full_notify+0x3bfe>\n    6aee:\t44 09 f0             \tor     %r14d,%eax\n    6af1:\t48 83 ec 08          \tsub    $0x8,%rsp\n    6af5:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6afc <send_full_notify+0x3c0c>\n    6afc:\t52                   \tpush   %rdx\n    6afd:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6b04 <send_full_notify+0x3c14>\n    6b04:\t4d 89 f8             \tmov    %r15,%r8\n    6b07:\t4c 89 e1             \tmov    %r12,%rcx\n    6b0a:\t89 da                \tmov    %ebx,%edx\n    6b0c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6b13 <send_full_notify+0x3c23>\n    6b13:\t89 c7                \tmov    %eax,%edi\n    6b15:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6b1a:\t41 ff d5             \tcall   *%r13\n    6b1d:\t48 83 c4 10          \tadd    $0x10,%rsp\n    6b21:\teb 78                \tjmp    6b9b <send_full_notify+0x3cab>\n    6b23:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6b2a <send_full_notify+0x3c3a>\n    6b2a:\t4c 8b 20             \tmov    (%rax),%r12\n    6b2d:\t8b 45 9c             \tmov    -0x64(%rbp),%eax\n    6b30:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6b33:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6b3a <send_full_notify+0x3c4a>\n    6b3a:\t48 63 d2             \tmovslq %edx,%rdx\n    6b3d:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6b41:\t48 01 d0             \tadd    %rdx,%rax\n    6b44:\t48 8b 18             \tmov    (%rax),%rbx\n    6b47:\t8b 45 9c             \tmov    -0x64(%rbp),%eax\n    6b4a:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6b4d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6b54 <send_full_notify+0x3c64>\n    6b54:\t48 63 d2             \tmovslq %edx,%rdx\n    6b57:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6b5b:\t48 01 d0             \tadd    %rdx,%rax\n    6b5e:\t48 83 c0 08          \tadd    $0x8,%rax\n    6b62:\t44 8b 28             \tmov    (%rax),%r13d\n    6b65:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    6b6a:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6b71 <send_full_notify+0x3c81>\n    6b71:\te8 00 00 00 00       \tcall   6b76 <send_full_notify+0x3c86>\n    6b76:\t44 09 e8             \tor     %r13d,%eax\n    6b79:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 6b80 <send_full_notify+0x3c90>\n    6b80:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6b87 <send_full_notify+0x3c97>\n    6b87:\t48 89 da             \tmov    %rbx,%rdx\n    6b8a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6b91 <send_full_notify+0x3ca1>\n    6b91:\t89 c7                \tmov    %eax,%edi\n    6b93:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6b98:\t41 ff d4             \tcall   *%r12\n    6b9b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6ba2 <send_full_notify+0x3cb2>\n    6ba2:\t8b 00                \tmov    (%rax),%eax\n    6ba4:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    6ba7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6bae <send_full_notify+0x3cbe>\n    6bae:\t89 10                \tmov    %edx,(%rax)\n    6bb0:\te9 8c 01 00 00       \tjmp    6d41 <send_full_notify+0x3e51>\n    6bb5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6bbc <send_full_notify+0x3ccc>\n    6bbc:\t48 8b 10             \tmov    (%rax),%rdx\n    6bbf:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    6bc3:\t48 8b 00             \tmov    (%rax),%rax\n    6bc6:\t48 89 c7             \tmov    %rax,%rdi\n    6bc9:\tff d2                \tcall   *%rdx\n    6bcb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6bd2 <send_full_notify+0x3ce2>\n    6bd2:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    6bd6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6bdd <send_full_notify+0x3ced>\n    6bdd:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    6be1:\t48 8b 75 c8          \tmov    -0x38(%rbp),%rsi\n    6be5:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6bec <send_full_notify+0x3cfc>\n    6bec:\t41 b8 1a 01 00 00    \tmov    $0x11a,%r8d\n    6bf2:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6bf9 <send_full_notify+0x3d09>\n    6bf9:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6c00 <send_full_notify+0x3d10>\n    6c00:\t48 89 c7             \tmov    %rax,%rdi\n    6c03:\t41 ff d2             \tcall   *%r10\n    6c06:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c0d <send_full_notify+0x3d1d>\n    6c0d:\t48 85 c0             \ttest   %rax,%rax\n    6c10:\t0f 84 8e 00 00 00    \tje     6ca4 <send_full_notify+0x3db4>\n    6c16:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c1d <send_full_notify+0x3d2d>\n    6c1d:\t48 8b 00             \tmov    (%rax),%rax\n    6c20:\t48 85 c0             \ttest   %rax,%rax\n    6c23:\t74 41                \tje     6c66 <send_full_notify+0x3d76>\n    6c25:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c2c <send_full_notify+0x3d3c>\n    6c2c:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    6c30:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c37 <send_full_notify+0x3d47>\n    6c37:\t48 8b 30             \tmov    (%rax),%rsi\n    6c3a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c41 <send_full_notify+0x3d51>\n    6c41:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    6c45:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6c4c <send_full_notify+0x3d5c>\n    6c4c:\t41 b8 1f 01 00 00    \tmov    $0x11f,%r8d\n    6c52:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6c59 <send_full_notify+0x3d69>\n    6c59:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6c60 <send_full_notify+0x3d70>\n    6c60:\t48 89 c7             \tmov    %rax,%rdi\n    6c63:\t41 ff d2             \tcall   *%r10\n    6c66:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c6d <send_full_notify+0x3d7d>\n    6c6d:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    6c71:\t48 8b 35 00 00 00 00 \tmov    0x0(%rip),%rsi        # 6c78 <send_full_notify+0x3d88>\n    6c78:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6c7f <send_full_notify+0x3d8f>\n    6c7f:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    6c83:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6c8a <send_full_notify+0x3d9a>\n    6c8a:\t41 b8 20 01 00 00    \tmov    $0x120,%r8d\n    6c90:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6c97 <send_full_notify+0x3da7>\n    6c97:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6c9e <send_full_notify+0x3dae>\n    6c9e:\t48 89 c7             \tmov    %rax,%rdi\n    6ca1:\t41 ff d2             \tcall   *%r10\n    6ca4:\tc7 05 00 00 00 00 00 \tmovl   $0x0,0x0(%rip)        # 6cae <send_full_notify+0x3dbe>\n    6cab:\t00 00 00 \n    6cae:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6cb5 <send_full_notify+0x3dc5>\n    6cb5:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    6cb9:\t48 8b b5 b0 fe ff ff \tmov    -0x150(%rbp),%rsi\n    6cc0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6cc7 <send_full_notify+0x3dd7>\n    6cc7:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    6ccb:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6cd2 <send_full_notify+0x3de2>\n    6cd2:\t41 b8 23 01 00 00    \tmov    $0x123,%r8d\n    6cd8:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6cdf <send_full_notify+0x3def>\n    6cdf:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6ce6 <send_full_notify+0x3df6>\n    6ce6:\t48 89 c7             \tmov    %rax,%rdi\n    6ce9:\t41 ff d2             \tcall   *%r10\n    6cec:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6cf3 <send_full_notify+0x3e03>\n    6cf3:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    6cf7:\t48 8b 95 c8 fe ff ff \tmov    -0x138(%rbp),%rdx\n    6cfe:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6d05 <send_full_notify+0x3e15>\n    6d05:\t48 8b 00             \tmov    (%rax),%rax\n    6d08:\t48 89 d6             \tmov    %rdx,%rsi\n    6d0b:\t48 89 c7             \tmov    %rax,%rdi\n    6d0e:\tff d1                \tcall   *%rcx\n    6d10:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    6d15:\te9 08 05 00 00       \tjmp    7222 <send_full_notify+0x4332>\n    6d1a:\t90                   \tnop\n    6d1b:\teb 25                \tjmp    6d42 <send_full_notify+0x3e52>\n    6d1d:\t90                   \tnop\n    6d1e:\teb 22                \tjmp    6d42 <send_full_notify+0x3e52>\n    6d20:\t90                   \tnop\n    6d21:\teb 1f                \tjmp    6d42 <send_full_notify+0x3e52>\n    6d23:\t90                   \tnop\n    6d24:\teb 1c                \tjmp    6d42 <send_full_notify+0x3e52>\n    6d26:\t90                   \tnop\n    6d27:\teb 19                \tjmp    6d42 <send_full_notify+0x3e52>\n    6d29:\t90                   \tnop\n    6d2a:\teb 16                \tjmp    6d42 <send_full_notify+0x3e52>\n    6d2c:\t90                   \tnop\n    6d2d:\teb 13                \tjmp    6d42 <send_full_notify+0x3e52>\n    6d2f:\t90                   \tnop\n    6d30:\teb 10                \tjmp    6d42 <send_full_notify+0x3e52>\n    6d32:\t90                   \tnop\n    6d33:\teb 0d                \tjmp    6d42 <send_full_notify+0x3e52>\n    6d35:\t90                   \tnop\n    6d36:\teb 0a                \tjmp    6d42 <send_full_notify+0x3e52>\n    6d38:\t90                   \tnop\n    6d39:\teb 07                \tjmp    6d42 <send_full_notify+0x3e52>\n    6d3b:\t90                   \tnop\n    6d3c:\teb 04                \tjmp    6d42 <send_full_notify+0x3e52>\n    6d3e:\t90                   \tnop\n    6d3f:\teb 01                \tjmp    6d42 <send_full_notify+0x3e52>\n    6d41:\t90                   \tnop\n    6d42:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n    6d47:\t74 5d                \tje     6da6 <send_full_notify+0x3eb6>\n    6d49:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    6d4d:\t48 8b 00             \tmov    (%rax),%rax\n    6d50:\t48 85 c0             \ttest   %rax,%rax\n    6d53:\t74 16                \tje     6d6b <send_full_notify+0x3e7b>\n    6d55:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6d5c <send_full_notify+0x3e6c>\n    6d5c:\t48 8b 10             \tmov    (%rax),%rdx\n    6d5f:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    6d63:\t48 8b 00             \tmov    (%rax),%rax\n    6d66:\t48 89 c7             \tmov    %rax,%rdi\n    6d69:\tff d2                \tcall   *%rdx\n    6d6b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6d72 <send_full_notify+0x3e82>\n    6d72:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    6d76:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6d7d <send_full_notify+0x3e8d>\n    6d7d:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    6d81:\t48 8b 75 c8          \tmov    -0x38(%rbp),%rsi\n    6d85:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6d8c <send_full_notify+0x3e9c>\n    6d8c:\t41 b8 2c 01 00 00    \tmov    $0x12c,%r8d\n    6d92:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6d99 <send_full_notify+0x3ea9>\n    6d99:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6da0 <send_full_notify+0x3eb0>\n    6da0:\t48 89 c7             \tmov    %rax,%rdi\n    6da3:\t41 ff d2             \tcall   *%r10\n    6da6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6dad <send_full_notify+0x3ebd>\n    6dad:\t48 85 c0             \ttest   %rax,%rax\n    6db0:\t0f 84 8e 00 00 00    \tje     6e44 <send_full_notify+0x3f54>\n    6db6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6dbd <send_full_notify+0x3ecd>\n    6dbd:\t48 8b 00             \tmov    (%rax),%rax\n    6dc0:\t48 85 c0             \ttest   %rax,%rax\n    6dc3:\t74 41                \tje     6e06 <send_full_notify+0x3f16>\n    6dc5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6dcc <send_full_notify+0x3edc>\n    6dcc:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    6dd0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6dd7 <send_full_notify+0x3ee7>\n    6dd7:\t48 8b 30             \tmov    (%rax),%rsi\n    6dda:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6de1 <send_full_notify+0x3ef1>\n    6de1:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    6de5:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6dec <send_full_notify+0x3efc>\n    6dec:\t41 b8 31 01 00 00    \tmov    $0x131,%r8d\n    6df2:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6df9 <send_full_notify+0x3f09>\n    6df9:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6e00 <send_full_notify+0x3f10>\n    6e00:\t48 89 c7             \tmov    %rax,%rdi\n    6e03:\t41 ff d2             \tcall   *%r10\n    6e06:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6e0d <send_full_notify+0x3f1d>\n    6e0d:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    6e11:\t48 8b 35 00 00 00 00 \tmov    0x0(%rip),%rsi        # 6e18 <send_full_notify+0x3f28>\n    6e18:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6e1f <send_full_notify+0x3f2f>\n    6e1f:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    6e23:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6e2a <send_full_notify+0x3f3a>\n    6e2a:\t41 b8 32 01 00 00    \tmov    $0x132,%r8d\n    6e30:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6e37 <send_full_notify+0x3f47>\n    6e37:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6e3e <send_full_notify+0x3f4e>\n    6e3e:\t48 89 c7             \tmov    %rax,%rdi\n    6e41:\t41 ff d2             \tcall   *%r10\n    6e44:\tc7 05 00 00 00 00 00 \tmovl   $0x0,0x0(%rip)        # 6e4e <send_full_notify+0x3f5e>\n    6e4b:\t00 00 00 \n    6e4e:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n    6e55:\t48 85 c0             \ttest   %rax,%rax\n    6e58:\t74 24                \tje     6e7e <send_full_notify+0x3f8e>\n    6e5a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6e61 <send_full_notify+0x3f71>\n    6e61:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    6e65:\t48 8b 95 c8 fe ff ff \tmov    -0x138(%rbp),%rdx\n    6e6c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6e73 <send_full_notify+0x3f83>\n    6e73:\t48 8b 00             \tmov    (%rax),%rax\n    6e76:\t48 89 d6             \tmov    %rdx,%rsi\n    6e79:\t48 89 c7             \tmov    %rax,%rdi\n    6e7c:\tff d1                \tcall   *%rcx\n    6e7e:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    6e85:\t48 85 c0             \ttest   %rax,%rax\n    6e88:\t74 3e                \tje     6ec8 <send_full_notify+0x3fd8>\n    6e8a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6e91 <send_full_notify+0x3fa1>\n    6e91:\t4c 8b 50 38          \tmov    0x38(%rax),%r10\n    6e95:\t48 8b b5 b0 fe ff ff \tmov    -0x150(%rbp),%rsi\n    6e9c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6ea3 <send_full_notify+0x3fb3>\n    6ea3:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    6ea7:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 6eae <send_full_notify+0x3fbe>\n    6eae:\t41 b8 39 01 00 00    \tmov    $0x139,%r8d\n    6eb4:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 6ebb <send_full_notify+0x3fcb>\n    6ebb:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 6ec2 <send_full_notify+0x3fd2>\n    6ec2:\t48 89 c7             \tmov    %rax,%rdi\n    6ec5:\t41 ff d2             \tcall   *%r10\n    6ec8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6ecf <send_full_notify+0x3fdf>\n    6ecf:\t8b 00                \tmov    (%rax),%eax\n    6ed1:\t83 f8 02             \tcmp    $0x2,%eax\n    6ed4:\t0f 85 43 03 00 00    \tjne    721d <send_full_notify+0x432d>\n    6eda:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6ee1 <send_full_notify+0x3ff1>\n    6ee1:\t48 8b 80 a0 00 00 00 \tmov    0xa0(%rax),%rax\n    6ee8:\t48 85 c0             \ttest   %rax,%rax\n    6eeb:\t0f 84 2c 03 00 00    \tje     721d <send_full_notify+0x432d>\n    6ef1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6ef8 <send_full_notify+0x4008>\n    6ef8:\t48 8b 90 a0 00 00 00 \tmov    0xa0(%rax),%rdx\n    6eff:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6f06 <send_full_notify+0x4016>\n    6f06:\t48 8b 00             \tmov    (%rax),%rax\n    6f09:\t48 89 c7             \tmov    %rax,%rdi\n    6f0c:\tff d2                \tcall   *%rdx\n    6f0e:\t85 c0                \ttest   %eax,%eax\n    6f10:\t0f 89 07 03 00 00    \tjns    721d <send_full_notify+0x432d>\n    6f16:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    6f1b:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6f22 <send_full_notify+0x4032>\n    6f22:\te8 00 00 00 00       \tcall   6f27 <send_full_notify+0x4037>\n    6f27:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    6f2a:\t0f 8c ed 02 00 00    \tjl     721d <send_full_notify+0x432d>\n    6f30:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6f37 <send_full_notify+0x4047>\n    6f37:\t8b 00                \tmov    (%rax),%eax\n    6f39:\t85 c0                \ttest   %eax,%eax\n    6f3b:\t0f 85 dc 02 00 00    \tjne    721d <send_full_notify+0x432d>\n    6f41:\tc7 85 60 ff ff ff ff \tmovl   $0xffffffff,-0xa0(%rbp)\n    6f48:\tff ff ff \n    6f4b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6f52 <send_full_notify+0x4062>\n    6f52:\t8b 00                \tmov    (%rax),%eax\n    6f54:\t8d 50 01             \tlea    0x1(%rax),%edx\n    6f57:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6f5e <send_full_notify+0x406e>\n    6f5e:\t89 10                \tmov    %edx,(%rax)\n    6f60:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6f67 <send_full_notify+0x4077>\n    6f67:\t8b 00                \tmov    (%rax),%eax\n    6f69:\t85 c0                \ttest   %eax,%eax\n    6f6b:\t0f 95 c0             \tsetne  %al\n    6f6e:\t0f b6 c0             \tmovzbl %al,%eax\n    6f71:\t48 85 c0             \ttest   %rax,%rax\n    6f74:\t0f 84 4c 01 00 00    \tje     70c6 <send_full_notify+0x41d6>\n    6f7a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6f81 <send_full_notify+0x4091>\n    6f81:\t8b 00                \tmov    (%rax),%eax\n    6f83:\t85 c0                \ttest   %eax,%eax\n    6f85:\t0f 95 c0             \tsetne  %al\n    6f88:\t0f b6 c0             \tmovzbl %al,%eax\n    6f8b:\t48 85 c0             \ttest   %rax,%rax\n    6f8e:\t74 0d                \tje     6f9d <send_full_notify+0x40ad>\n    6f90:\t8b 85 60 ff ff ff    \tmov    -0xa0(%rbp),%eax\n    6f96:\t89 c7                \tmov    %eax,%edi\n    6f98:\te8 00 00 00 00       \tcall   6f9d <send_full_notify+0x40ad>\n    6f9d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6fa4 <send_full_notify+0x40b4>\n    6fa4:\t48 8b 00             \tmov    (%rax),%rax\n    6fa7:\t48 85 c0             \ttest   %rax,%rax\n    6faa:\t0f 95 c0             \tsetne  %al\n    6fad:\t0f b6 c0             \tmovzbl %al,%eax\n    6fb0:\t48 85 c0             \ttest   %rax,%rax\n    6fb3:\t0f 84 84 00 00 00    \tje     703d <send_full_notify+0x414d>\n    6fb9:\t8b 85 60 ff ff ff    \tmov    -0xa0(%rbp),%eax\n    6fbf:\t8d 50 05             \tlea    0x5(%rax),%edx\n    6fc2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6fc9 <send_full_notify+0x40d9>\n    6fc9:\t48 63 d2             \tmovslq %edx,%rdx\n    6fcc:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    6fd0:\t48 01 d0             \tadd    %rdx,%rax\n    6fd3:\t48 8b 18             \tmov    (%rax),%rbx\n    6fd6:\te8 00 00 00 00       \tcall   6fdb <send_full_notify+0x40eb>\n    6fdb:\t89 c6                \tmov    %eax,%esi\n    6fdd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6fe4 <send_full_notify+0x40f4>\n    6fe4:\t44 8b 00             \tmov    (%rax),%r8d\n    6fe7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6fee <send_full_notify+0x40fe>\n    6fee:\t48 8b 00             \tmov    (%rax),%rax\n    6ff1:\t48 8b 08             \tmov    (%rax),%rcx\n    6ff4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6ffb <send_full_notify+0x410b>\n    6ffb:\t48 8b 00             \tmov    (%rax),%rax\n    6ffe:\t8b 50 08             \tmov    0x8(%rax),%edx\n    7001:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7008 <send_full_notify+0x4118>\n    7008:\t48 8b 00             \tmov    (%rax),%rax\n    700b:\t48 83 ec 08          \tsub    $0x8,%rsp\n    700f:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 7016 <send_full_notify+0x4126>\n    7016:\t57                   \tpush   %rdi\n    7017:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 701e <send_full_notify+0x412e>\n    701e:\t57                   \tpush   %rdi\n    701f:\t53                   \tpush   %rbx\n    7020:\t41 89 f1             \tmov    %esi,%r9d\n    7023:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 702a <send_full_notify+0x413a>\n    702a:\t48 89 c7             \tmov    %rax,%rdi\n    702d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7032:\te8 00 00 00 00       \tcall   7037 <send_full_notify+0x4147>\n    7037:\t48 83 c4 20          \tadd    $0x20,%rsp\n    703b:\teb 65                \tjmp    70a2 <send_full_notify+0x41b2>\n    703d:\t8b 85 60 ff ff ff    \tmov    -0xa0(%rbp),%eax\n    7043:\t8d 50 05             \tlea    0x5(%rax),%edx\n    7046:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 704d <send_full_notify+0x415d>\n    704d:\t48 63 d2             \tmovslq %edx,%rdx\n    7050:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7054:\t48 01 d0             \tadd    %rdx,%rax\n    7057:\t48 8b 18             \tmov    (%rax),%rbx\n    705a:\te8 00 00 00 00       \tcall   705f <send_full_notify+0x416f>\n    705f:\t89 c1                \tmov    %eax,%ecx\n    7061:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7068 <send_full_notify+0x4178>\n    7068:\t8b 10                \tmov    (%rax),%edx\n    706a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7071 <send_full_notify+0x4181>\n    7071:\t48 8b 00             \tmov    (%rax),%rax\n    7074:\t48 83 ec 08          \tsub    $0x8,%rsp\n    7078:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 707f <send_full_notify+0x418f>\n    707f:\t56                   \tpush   %rsi\n    7080:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 7087 <send_full_notify+0x4197>\n    7087:\t49 89 d8             \tmov    %rbx,%r8\n    708a:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 7091 <send_full_notify+0x41a1>\n    7091:\t48 89 c7             \tmov    %rax,%rdi\n    7094:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7099:\te8 00 00 00 00       \tcall   709e <send_full_notify+0x41ae>\n    709e:\t48 83 c4 10          \tadd    $0x10,%rsp\n    70a2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70a9 <send_full_notify+0x41b9>\n    70a9:\t8b 00                \tmov    (%rax),%eax\n    70ab:\t85 c0                \ttest   %eax,%eax\n    70ad:\t0f 95 c0             \tsetne  %al\n    70b0:\t0f b6 c0             \tmovzbl %al,%eax\n    70b3:\t48 85 c0             \ttest   %rax,%rax\n    70b6:\t0f 84 4c 01 00 00    \tje     7208 <send_full_notify+0x4318>\n    70bc:\te8 00 00 00 00       \tcall   70c1 <send_full_notify+0x41d1>\n    70c1:\te9 42 01 00 00       \tjmp    7208 <send_full_notify+0x4318>\n    70c6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70cd <send_full_notify+0x41dd>\n    70cd:\t48 8b 00             \tmov    (%rax),%rax\n    70d0:\t48 85 c0             \ttest   %rax,%rax\n    70d3:\t0f 95 c0             \tsetne  %al\n    70d6:\t0f b6 c0             \tmovzbl %al,%eax\n    70d9:\t48 85 c0             \ttest   %rax,%rax\n    70dc:\t0f 84 a8 00 00 00    \tje     718a <send_full_notify+0x429a>\n    70e2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70e9 <send_full_notify+0x41f9>\n    70e9:\t4c 8b 28             \tmov    (%rax),%r13\n    70ec:\t8b 85 60 ff ff ff    \tmov    -0xa0(%rbp),%eax\n    70f2:\t8d 50 05             \tlea    0x5(%rax),%edx\n    70f5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70fc <send_full_notify+0x420c>\n    70fc:\t48 63 d2             \tmovslq %edx,%rdx\n    70ff:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    7103:\t48 01 d0             \tadd    %rdx,%rax\n    7106:\t4c 8b 38             \tmov    (%rax),%r15\n    7109:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7110 <send_full_notify+0x4220>\n    7110:\t48 8b 00             \tmov    (%rax),%rax\n    7113:\t4c 8b 20             \tmov    (%rax),%r12\n    7116:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 711d <send_full_notify+0x422d>\n    711d:\t48 8b 00             \tmov    (%rax),%rax\n    7120:\t8b 58 08             \tmov    0x8(%rax),%ebx\n    7123:\t8b 85 60 ff ff ff    \tmov    -0xa0(%rbp),%eax\n    7129:\t8d 50 05             \tlea    0x5(%rax),%edx\n    712c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7133 <send_full_notify+0x4243>\n    7133:\t48 63 d2             \tmovslq %edx,%rdx\n    7136:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    713a:\t48 01 d0             \tadd    %rdx,%rax\n    713d:\t48 83 c0 08          \tadd    $0x8,%rax\n    7141:\t44 8b 30             \tmov    (%rax),%r14d\n    7144:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    7149:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 7150 <send_full_notify+0x4260>\n    7150:\te8 00 00 00 00       \tcall   7155 <send_full_notify+0x4265>\n    7155:\t44 09 f0             \tor     %r14d,%eax\n    7158:\t48 83 ec 08          \tsub    $0x8,%rsp\n    715c:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 7163 <send_full_notify+0x4273>\n    7163:\t52                   \tpush   %rdx\n    7164:\t4c 8d 0d 00 00 00 00 \tlea    0x0(%rip),%r9        # 716b <send_full_notify+0x427b>\n    716b:\t4d 89 f8             \tmov    %r15,%r8\n    716e:\t4c 89 e1             \tmov    %r12,%rcx\n    7171:\t89 da                \tmov    %ebx,%edx\n    7173:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 717a <send_full_notify+0x428a>\n    717a:\t89 c7                \tmov    %eax,%edi\n    717c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7181:\t41 ff d5             \tcall   *%r13\n    7184:\t48 83 c4 10          \tadd    $0x10,%rsp\n    7188:\teb 7e                \tjmp    7208 <send_full_notify+0x4318>\n    718a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7191 <send_full_notify+0x42a1>\n    7191:\t4c 8b 20             \tmov    (%rax),%r12\n    7194:\t8b 85 60 ff ff ff    \tmov    -0xa0(%rbp),%eax\n    719a:\t8d 50 05             \tlea    0x5(%rax),%edx\n    719d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 71a4 <send_full_notify+0x42b4>\n    71a4:\t48 63 d2             \tmovslq %edx,%rdx\n    71a7:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    71ab:\t48 01 d0             \tadd    %rdx,%rax\n    71ae:\t48 8b 18             \tmov    (%rax),%rbx\n    71b1:\t8b 85 60 ff ff ff    \tmov    -0xa0(%rbp),%eax\n    71b7:\t8d 50 05             \tlea    0x5(%rax),%edx\n    71ba:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 71c1 <send_full_notify+0x42d1>\n    71c1:\t48 63 d2             \tmovslq %edx,%rdx\n    71c4:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    71c8:\t48 01 d0             \tadd    %rdx,%rax\n    71cb:\t48 83 c0 08          \tadd    $0x8,%rax\n    71cf:\t44 8b 28             \tmov    (%rax),%r13d\n    71d2:\tbe 03 00 00 00       \tmov    $0x3,%esi\n    71d7:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 71de <send_full_notify+0x42ee>\n    71de:\te8 00 00 00 00       \tcall   71e3 <send_full_notify+0x42f3>\n    71e3:\t44 09 e8             \tor     %r13d,%eax\n    71e6:\t4c 8d 05 00 00 00 00 \tlea    0x0(%rip),%r8        # 71ed <send_full_notify+0x42fd>\n    71ed:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 71f4 <send_full_notify+0x4304>\n    71f4:\t48 89 da             \tmov    %rbx,%rdx\n    71f7:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 71fe <send_full_notify+0x430e>\n    71fe:\t89 c7                \tmov    %eax,%edi\n    7200:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    7205:\t41 ff d4             \tcall   *%r12\n    7208:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 720f <send_full_notify+0x431f>\n    720f:\t8b 00                \tmov    (%rax),%eax\n    7211:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    7214:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 721b <send_full_notify+0x432b>\n    721b:\t89 10                \tmov    %edx,(%rax)\n    721d:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    7222:\t48 8d 65 d8          \tlea    -0x28(%rbp),%rsp\n    7226:\t5b                   \tpop    %rbx\n    7227:\t41 5c                \tpop    %r12\n    7229:\t41 5d                \tpop    %r13\n    722b:\t41 5e                \tpop    %r14\n    722d:\t41 5f                \tpop    %r15\n    722f:\t5d                   \tpop    %rbp\n    7230:\tc3                   \tret    ", "code_s": "undefined8 send_full_notify(long <span class=\"supfact\">param_1</span>,\n                            undefined8 <span class=\"supfact\">param_2</span>,\n                            undefined8 <span class=\"supfact\">param_3</span>,\n                            undefined4 <span class=\"supfact\">param_4</span>) {\n  undefined4 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  code *pcVar4;\n  code *pcVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  long lVar11;\n  long *plVar12;\n  ulong <span class=\"supfact\">uVar13</span>;\n  ulong <span class=\"supfact\">uVar14</span>;\n  long **<span class=\"supfact\">local_170</span>;\n  uint <span class=\"supfact\">local_164</span>;\n  long *<span class=\"supfact\">local_160</span>;\n  long <span class=\"supfact\">local_158</span>;\n  undefined4 <span class=\"supfact\">local_150</span>;\n  undefined4 <span class=\"supfact\">uStack_14c</span>;\n  long <span class=\"supfact\">local_140</span>;\n  undefined4 <span class=\"supfact\">local_138</span>;\n  undefined4 <span class=\"supfact\">local_134</span>;\n  undefined4 <span class=\"supfact\">local_128</span>;\n  undefined4 <span class=\"supfact\">local_118</span>;\n  undefined4 <span class=\"supfact\">local_114</span>;\n  long <span class=\"supfact\">local_108</span>;\n  undefined8 <span class=\"supfact\">local_100</span>;\n  undefined8 <span class=\"supfact\">local_f8</span>[Number];\n  undefined *<span class=\"supfact\">local_c8</span>;\n  undefined *<span class=\"supfact\">local_c0</span>;\n  undefined8 <span class=\"supfact\">local_b8</span>;\n  undefined8 <span class=\"supfact\">local_b0</span>;\n  int <span class=\"supfact\">local_a8</span>;\n  int <span class=\"supfact\">local_a4</span>;\n  int <span class=\"supfact\">local_a0</span>;\n  int <span class=\"supfact\">local_9c</span>;\n  int <span class=\"supfact\">local_98</span>;\n  int <span class=\"supfact\">local_94</span>;\n  int <span class=\"supfact\">local_90</span>;\n  int local_8c;\n  int local_88;\n  int local_84;\n  int local_80;\n  int local_7c;\n  long *local_78;\n  int local_70;\n  int local_6c;\n  undefined8 local_68;\n  int local_60;\n  int local_5c;\n  int local_58;\n  int local_54;\n  code *local_50;\n  int local_48;\n  int local_44;\n  long *local_40;\n  <span class=\"supfact\">local_b0</span> = Number;\n  <span class=\"supfact\">local_b8</span> = Number;\n  <span class=\"supfact\">local_140</span> = Number;\n  local_48 = Number;\n  <span class=\"supfact\">local_158</span> = Number;\n  <span class=\"supfact\">local_150</span> = Number;\n  local_40 = (long *)Number;\n  <span class=\"supfact\">local_160</span> = (long *)Number;\n  local_44 = Number;\n  DAT_00118a90 = (long *)Number;\n  local_50 = _str_auth_state_col;\n  if (_xmlNewChild != (code *)Number) {\n    local_50 = _xmlNewChild;\n  }\n  iVar7 = get_debug_level(&DAT_00118d20, Number);\n  uVar8 = _str_presence_state_col;\n  pcVar5 = _str_content_type_col;\n  pcVar4 = __km_log_func;\n  if ((Number < iVar7) && (_dprint_crit == Number)) {\n    local_54 = Number;\n    _dprint_crit = Number;\n    if (_log_stderr == Number) {\n      if (_log_prefix_val == (undefined8 *)Number) {\n        uVar10 = get_debug_facility(&DAT_00118d20, Number);\n        (*pcVar4)(uVar10 | uVar8, String, pcVar5, String, String);\n      } else {\n        uVar2 = *_log_prefix_val;\n        uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n        uVar10 = get_debug_facility(&DAT_00118d20, Number);\n        (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar2, pcVar5, String, String);\n      }\n    } else {\n      if (_log_color != Number) {\n        dprint_color(Number);\n      }\n      if (_log_prefix_val == (undefined8 *)Number) {\n        uVar2 = *(undefined8 *)(&log_level_info +\n                                (long)(local_54 + Number) * Number);\n        uVar8 = my_pid();\n        fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar8, uVar2,\n                String, String);\n      } else {\n        uVar2 = *(undefined8 *)(&log_level_info +\n                                (long)(local_54 + Number) * Number);\n        uVar8 = my_pid();\n        fprintf(_stderr, String, (ulong) * (uint *)(_log_prefix_val + Number),\n                *_log_prefix_val, (ulong)_process_no, (ulong)uVar8, uVar2,\n                String, String);\n      }\n      if (_log_color != Number) {\n        dprint_color_reset();\n      }\n    }\n    _dprint_crit = _dprint_crit + -Number;\n  }\n  iVar7 = FUN_00102118(<span class=\"supfact\">param_1</span>, &<span class=\"supfact\">local_158</span>);\n  if (iVar7 < Number) {\n    iVar7 = get_debug_level(&DAT_00118d20, Number);\n    uVar8 = __pkg_root;\n    uVar2 = _ut_buf_int2str;\n    pcVar4 = __km_log_func;\n    if ((-Number < iVar7) && (_dprint_crit == Number)) {\n      <span class=\"supfact\">local_a4</span> = -Number;\n      _dprint_crit = Number;\n      if (_log_stderr == Number) {\n        if (_log_prefix_val == (undefined8 *)Number) {\n          uVar10 = get_debug_facility(&DAT_00118d20, Number);\n          (*pcVar4)(uVar10 | uVar8, String, uVar2, String, String);\n        } else {\n          uVar3 = *_log_prefix_val;\n          uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n          uVar10 = get_debug_facility(&DAT_00118d20, Number);\n          (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3, uVar2, String,\n                    String);\n        }\n      } else {\n        if (_log_color != Number) {\n          dprint_color(Number);\n        }\n        if (_log_prefix_val == (undefined8 *)Number) {\n          uVar2 = *(undefined8 *)(&log_level_info +\n                                  (long)(<span class=\"supfact\">local_a4</span> + Number) *\n                                      Number);\n          uVar8 = my_pid();\n          fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar8, uVar2,\n                  String, String);\n        } else {\n          uVar2 = *(undefined8 *)(&log_level_info +\n                                  (long)(<span class=\"supfact\">local_a4</span> + Number) *\n                                      Number);\n          uVar8 = my_pid();\n          fprintf(_stderr, String, (ulong) * (uint *)(_log_prefix_val + Number),\n                  *_log_prefix_val, (ulong)_process_no, (ulong)uVar8, uVar2,\n                  String, String);\n        }\n        if (_log_color != Number) {\n          dprint_color_reset();\n        }\n      }\n      _dprint_crit = _dprint_crit + -Number;\n    }\n  } else {\n    <span class=\"supfact\">local_c0</span> = &str_rlsubs_did_col;\n    <span class=\"supfact\">local_118</span> = Number;\n    <span class=\"supfact\">local_114</span> = Number;\n    <span class=\"supfact\">local_100</span> =\n        CONCAT44(<span class=\"supfact\">uStack_14c</span>, <span class=\"supfact\">local_150</span>);\n    <span class=\"supfact\">local_108</span> = <span class=\"supfact\">local_158</span>;\n    resource_uri_col = local_48;\n    lVar11 = (long)local_48;\n    local_48 = local_48 + Number;\n    <span class=\"supfact\">local_f8</span>[lVar11] = &str_resource_uri_col;\n    content_type_col = local_48;\n    lVar11 = (long)local_48;\n    local_48 = local_48 + Number;\n    <span class=\"supfact\">local_f8</span>[lVar11] = &str_content_type_col;\n    pres_state_col = local_48;\n    lVar11 = (long)local_48;\n    local_48 = local_48 + Number;\n    <span class=\"supfact\">local_f8</span>[lVar11] = &str_presence_state_col;\n    auth_state_col = local_48;\n    lVar11 = (long)local_48;\n    local_48 = local_48 + Number;\n    <span class=\"supfact\">local_f8</span>[lVar11] = &str_auth_state_col;\n    reason_col = local_48;\n    lVar11 = (long)local_48;\n    local_48 = local_48 + Number;\n    <span class=\"supfact\">local_f8</span>[lVar11] = &str_reason_col;\n    <span class=\"supfact\">local_c8</span> = &str_updated_col;\n    <span class=\"supfact\">local_138</span> = Number;\n    <span class=\"supfact\">local_134</span> = Number;\n    <span class=\"supfact\">local_128</span> = Number;\n    iVar7 = (*_str_rlsubs_did_col)(_rlpres_db, &rlpres_table);\n    if (iVar7 < Number) {\n      iVar7 = get_debug_level(&DAT_00118d20, Number);\n      uVar8 = __pkg_root;\n      uVar2 = _ut_buf_int2str;\n      pcVar4 = __km_log_func;\n      if ((-Number < iVar7) && (_dprint_crit == Number)) {\n        <span class=\"supfact\">local_a0</span> = -Number;\n        _dprint_crit = Number;\n        if (_log_stderr == Number) {\n          if (_log_prefix_val == (undefined8 *)Number) {\n            uVar10 = get_debug_facility(&DAT_00118d20, Number);\n            (*pcVar4)(uVar10 | uVar8, String, uVar2, String, String);\n          } else {\n            uVar3 = *_log_prefix_val;\n            uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n            uVar10 = get_debug_facility(&DAT_00118d20, Number);\n            (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3, uVar2, String,\n                      String);\n          }\n        } else {\n          if (_log_color != Number) {\n            dprint_color(Number);\n          }\n          if (_log_prefix_val == (undefined8 *)Number) {\n            uVar2 = *(undefined8 *)(&log_level_info +\n                                    (long)(<span class=\"supfact\">local_a0</span> + Number) *\n                                        Number);\n            uVar8 = my_pid();\n            fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar8, uVar2,\n                    String, String);\n          } else {\n            uVar2 = *(undefined8 *)(&log_level_info +\n                                    (long)(<span class=\"supfact\">local_a0</span> + Number) *\n                                        Number);\n            uVar8 = my_pid();\n            fprintf(_stderr, String,\n                    (ulong) * (uint *)(_log_prefix_val + Number),\n                    *_log_prefix_val, (ulong)_process_no, (ulong)uVar8, uVar2,\n                    String, String);\n          }\n          if (_log_color != Number) {\n            dprint_color_reset();\n          }\n        }\n        _dprint_crit = _dprint_crit + -Number;\n      }\n    } else if (((_dbmode == Number) &&\n                (_pres_update_shtable != (code *)Number)) &&\n               (iVar7 = (*_pres_update_shtable)(_rlpres_db, Number),\n                iVar7 < Number)) {\n      iVar7 = get_debug_level(&DAT_00118d20, Number);\n      uVar8 = __pkg_root;\n      uVar2 = _ut_buf_int2str;\n      pcVar4 = __km_log_func;\n      if ((-Number < iVar7) && (_dprint_crit == Number)) {\n        local_58 = -Number;\n        _dprint_crit = Number;\n        if (_log_stderr == Number) {\n          if (_log_prefix_val == (undefined8 *)Number) {\n            uVar10 = get_debug_facility(&DAT_00118d20, Number);\n            (*pcVar4)(uVar10 | uVar8, String, uVar2, String, String);\n          } else {\n            uVar3 = *_log_prefix_val;\n            uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n            uVar10 = get_debug_facility(&DAT_00118d20, Number);\n            (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3, uVar2, String,\n                      String);\n          }\n        } else {\n          if (_log_color != Number) {\n            dprint_color(Number);\n          }\n          if (_log_prefix_val == (undefined8 *)Number) {\n            uVar2 = *(undefined8 *)(&log_level_info +\n                                    (long)(local_58 + Number) * Number);\n            uVar8 = my_pid();\n            fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar8, uVar2,\n                    String, String);\n          } else {\n            uVar2 = *(undefined8 *)(&log_level_info +\n                                    (long)(local_58 + Number) * Number);\n            uVar8 = my_pid();\n            fprintf(_stderr, String,\n                    (ulong) * (uint *)(_log_prefix_val + Number),\n                    *_log_prefix_val, (ulong)_process_no, (ulong)uVar8, uVar2,\n                    String, String);\n          }\n          if (_log_color != Number) {\n            dprint_color_reset();\n          }\n        }\n        _dprint_crit = _dprint_crit + -Number;\n      }\n    } else {\n      iVar7 = (*local_50)(_rlpres_db, &<span class=\"supfact\">local_c0</span>, Number,\n                          &<span class=\"supfact\">local_118</span>, <span class=\"supfact\">local_f8</span>,\n                          Number, local_48, Number, &<span class=\"supfact\">local_140</span>);\n      if (iVar7 < Number) {\n        iVar7 = get_debug_level(&DAT_00118d20, Number);\n        uVar8 = __pkg_root;\n        uVar2 = _ut_buf_int2str;\n        pcVar4 = __km_log_func;\n        if ((-Number < iVar7) && (_dprint_crit == Number)) {\n          <span class=\"supfact\">local_9c</span> = -Number;\n          _dprint_crit = Number;\n          if (_log_stderr == Number) {\n            if (_log_prefix_val == (undefined8 *)Number) {\n              uVar10 = get_debug_facility(&DAT_00118d20, Number);\n              (*pcVar4)(uVar10 | uVar8, String, uVar2, String, String);\n            } else {\n              uVar3 = *_log_prefix_val;\n              uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n              uVar10 = get_debug_facility(&DAT_00118d20, Number);\n              (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3, uVar2, String,\n                        String);\n            }\n          } else {\n            if (_log_color != Number) {\n              dprint_color(Number);\n            }\n            if (_log_prefix_val == (undefined8 *)Number) {\n              uVar2 =\n                  *(undefined8 *)(&log_level_info +\n                                  (long)(<span class=\"supfact\">local_9c</span> + Number) *\n                                      Number);\n              uVar8 = my_pid();\n              fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar8, uVar2,\n                      String, String);\n            } else {\n              uVar2 =\n                  *(undefined8 *)(&log_level_info +\n                                  (long)(<span class=\"supfact\">local_9c</span> + Number) *\n                                      Number);\n              uVar8 = my_pid();\n              fprintf(_stderr, String,\n                      (ulong) * (uint *)(_log_prefix_val + Number),\n                      *_log_prefix_val, (ulong)_process_no, (ulong)uVar8, uVar2,\n                      String, String);\n            }\n            if (_log_color != Number) {\n              dprint_color_reset();\n            }\n          }\n          _dprint_crit = _dprint_crit + -Number;\n        }\n      } else if (<span class=\"supfact\">local_140</span> == Number) {\n        iVar7 = get_debug_level(&DAT_00118d20, Number);\n        uVar8 = __pkg_root;\n        uVar2 = _ut_buf_int2str;\n        pcVar4 = __km_log_func;\n        if ((-Number < iVar7) && (_dprint_crit == Number)) {\n          <span class=\"supfact\">local_98</span> = -Number;\n          _dprint_crit = Number;\n          if (_log_stderr == Number) {\n            if (_log_prefix_val == (undefined8 *)Number) {\n              uVar10 = get_debug_facility(&DAT_00118d20, Number);\n              (*pcVar4)(uVar10 | uVar8, String, uVar2, String, String);\n            } else {\n              uVar3 = *_log_prefix_val;\n              uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n              uVar10 = get_debug_facility(&DAT_00118d20, Number);\n              (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3, uVar2, String,\n                        String);\n            }\n          } else {\n            if (_log_color != Number) {\n              dprint_color(Number);\n            }\n            if (_log_prefix_val == (undefined8 *)Number) {\n              uVar2 =\n                  *(undefined8 *)(&log_level_info +\n                                  (long)(<span class=\"supfact\">local_98</span> + Number) *\n                                      Number);\n              uVar8 = my_pid();\n              fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar8, uVar2,\n                      String, String);\n            } else {\n              uVar2 =\n                  *(undefined8 *)(&log_level_info +\n                                  (long)(<span class=\"supfact\">local_98</span> + Number) *\n                                      Number);\n              uVar8 = my_pid();\n              fprintf(_stderr, String,\n                      (ulong) * (uint *)(_log_prefix_val + Number),\n                      *_log_prefix_val, (ulong)_process_no, (ulong)uVar8, uVar2,\n                      String, String);\n            }\n            if (_log_color != Number) {\n              dprint_color_reset();\n            }\n          }\n          _dprint_crit = _dprint_crit + -Number;\n        }\n      } else if ((*(int *)(<span class=\"supfact\">local_140</span> + Number) < Number) ||\n                 (iVar7 = (*_xmlDocSetRootElement)(\n                      _rlpres_db, &<span class=\"supfact\">local_c0</span>, Number,\n                      &<span class=\"supfact\">local_118</span>, &<span class=\"supfact\">local_c8</span>,\n                      &<span class=\"supfact\">local_138</span>, Number, Number),\n                  -Number < iVar7)) {\n        if ((_dbmode == Number) &&\n            ((_rls_table != (code *)Number &&\n              (iVar7 = (*_rls_table)(_rlpres_db), iVar7 < Number)))) {\n          iVar7 = get_debug_level(&DAT_00118d20, Number);\n          uVar8 = __pkg_root;\n          uVar2 = _ut_buf_int2str;\n          pcVar4 = __km_log_func;\n          if ((-Number < iVar7) && (_dprint_crit == Number)) {\n            local_60 = -Number;\n            _dprint_crit = Number;\n            if (_log_stderr == Number) {\n              if (_log_prefix_val == (undefined8 *)Number) {\n                uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                (*pcVar4)(uVar10 | uVar8, String, uVar2, String, String);\n              } else {\n                uVar3 = *_log_prefix_val;\n                uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3, uVar2, String,\n                          String);\n              }\n            } else {\n              if (_log_color != Number) {\n                dprint_color(Number);\n              }\n              if (_log_prefix_val == (undefined8 *)Number) {\n                uVar2 = *(undefined8 *)(&log_level_info +\n                                        (long)(local_60 + Number) * Number);\n                uVar8 = my_pid();\n                fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar8,\n                        uVar2, String, String);\n              } else {\n                uVar2 = *(undefined8 *)(&log_level_info +\n                                        (long)(local_60 + Number) * Number);\n                uVar8 = my_pid();\n                fprintf(_stderr, String,\n                        (ulong) * (uint *)(_log_prefix_val + Number),\n                        *_log_prefix_val, (ulong)_process_no, (ulong)uVar8,\n                        uVar2, String, String);\n              }\n              if (_log_color != Number) {\n                dprint_color_reset();\n              }\n            }\n            _dprint_crit = _dprint_crit + -Number;\n          }\n        } else {\n          plVar12 = (long *)(*(code *)CONCAT44(uRam000000000011f094,\n                                               content_type_col))(\n              _sprintf, Number, String, String, Number, &DAT_00118d20);\n          DAT_00118a90 = plVar12;\n          if (plVar12 == (long *)Number) {\n            iVar7 = get_debug_level(&DAT_00118d20, Number);\n            uVar8 = __pkg_root;\n            uVar2 = _ut_buf_int2str;\n            pcVar4 = __km_log_func;\n            if ((-Number < iVar7) && (_dprint_crit == Number)) {\n              <span class=\"supfact\">local_94</span> = -Number;\n              _dprint_crit = Number;\n              if (_log_stderr == Number) {\n                if (_log_prefix_val == (undefined8 *)Number) {\n                  uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                  (*pcVar4)(uVar10 | uVar8, String, uVar2, String, String,\n                            &DAT_00119613);\n                } else {\n                  uVar3 = *_log_prefix_val;\n                  uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                  uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                  (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3, uVar2, String,\n                            String, &DAT_00119613);\n                }\n              } else {\n                if (_log_color != Number) {\n                  dprint_color(Number);\n                }\n                if (_log_prefix_val == (undefined8 *)Number) {\n                  uVar2 = *(\n                      undefined8 *)(&log_level_info +\n                                    (long)(<span class=\"supfact\">local_94</span> + Number) *\n                                        Number);\n                  uVar8 = my_pid();\n                  fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar8,\n                          uVar2, String, String, &DAT_00119613);\n                } else {\n                  uVar2 = *(\n                      undefined8 *)(&log_level_info +\n                                    (long)(<span class=\"supfact\">local_94</span> + Number) *\n                                        Number);\n                  uVar8 = my_pid();\n                  fprintf(_stderr, String,\n                          (ulong) * (uint *)(_log_prefix_val + Number),\n                          *_log_prefix_val, (ulong)_process_no, (ulong)uVar8,\n                          uVar2, String, String, &DAT_00119613);\n                }\n                if (_log_color != Number) {\n                  dprint_color_reset();\n                }\n              }\n              _dprint_crit = _dprint_crit + -Number;\n            }\n          } else {\n            DAT_00118a98 = Number;\n            lVar11 =\n                (*(code *)CONCAT44(uRam000000000011f094, content_type_col))(\n                    _sprintf, Number, String, String, Number, &DAT_00118d20);\n            *plVar12 = lVar11;\n            if (*DAT_00118a90 == Number) {\n              iVar7 = get_debug_level(&DAT_00118d20, Number);\n              uVar8 = __pkg_root;\n              uVar2 = _ut_buf_int2str;\n              pcVar4 = __km_log_func;\n              if ((-Number < iVar7) && (_dprint_crit == Number)) {\n                <span class=\"supfact\">local_90</span> = -Number;\n                _dprint_crit = Number;\n                if (_log_stderr == Number) {\n                  if (_log_prefix_val == (undefined8 *)Number) {\n                    uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                    (*pcVar4)(uVar10 | uVar8, String, uVar2, String, String,\n                              &DAT_00119613);\n                  } else {\n                    uVar3 = *_log_prefix_val;\n                    uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                    uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                    (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3, uVar2,\n                              String, String, &DAT_00119613);\n                  }\n                } else {\n                  if (_log_color != Number) {\n                    dprint_color(Number);\n                  }\n                  if (_log_prefix_val == (undefined8 *)Number) {\n                    uVar2 = *(undefined8 *)(&log_level_info +\n                                            (long)(<span class=\"supfact\">local_90</span> +\n                                                   Number) *\n                                                Number);\n                    uVar8 = my_pid();\n                    fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar8,\n                            uVar2, String, String, &DAT_00119613);\n                  } else {\n                    uVar2 = *(undefined8 *)(&log_level_info +\n                                            (long)(<span class=\"supfact\">local_90</span> +\n                                                   Number) *\n                                                Number);\n                    uVar8 = my_pid();\n                    fprintf(_stderr, String,\n                            (ulong) * (uint *)(_log_prefix_val + Number),\n                            *_log_prefix_val, (ulong)_process_no, (ulong)uVar8,\n                            uVar2, String, String, &DAT_00119613);\n                  }\n                  if (_log_color != Number) {\n                    dprint_color_reset();\n                  }\n                }\n                _dprint_crit = _dprint_crit + -Number;\n              }\n            } else {\n              *(undefined4 *)(DAT_00118a90 + Number) = Number;\n              <span class=\"supfact\">local_164</span> = create_empty_rlmi_doc(\n                  &<span class=\"supfact\">local_b0</span>, &<span class=\"supfact\">local_b8</span>,\n                  <span class=\"supfact\">param_3</span>,\n                  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number), Number);\n              xmlDocSetRootElement(<span class=\"supfact\">local_b0</span>,\n                                   <span class=\"supfact\">local_b8</span>);\n              <span class=\"supfact\">local_170</span> = &<span class=\"supfact\">local_160</span>;\n              iVar7 = process_list_and_exec(\n                  <span class=\"supfact\">param_2</span>,\n                  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n                  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n                  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n                  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n                  add_resource_to_list, &<span class=\"supfact\">local_170</span>);\n              if (iVar7 < Number) {\n                iVar7 = get_debug_level(&DAT_00118d20, Number);\n                uVar8 = __pkg_root;\n                uVar2 = _ut_buf_int2str;\n                pcVar4 = __km_log_func;\n                if ((-Number < iVar7) && (_dprint_crit == Number)) {\n                  local_8c = -Number;\n                  _dprint_crit = Number;\n                  if (_log_stderr == Number) {\n                    if (_log_prefix_val == (undefined8 *)Number) {\n                      uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                      (*pcVar4)(uVar10 | uVar8, String, uVar2, String, String);\n                    } else {\n                      uVar3 = *_log_prefix_val;\n                      uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                      uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                      (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3, uVar2,\n                                String, String);\n                    }\n                  } else {\n                    if (_log_color != Number) {\n                      dprint_color(Number);\n                    }\n                    if (_log_prefix_val == (undefined8 *)Number) {\n                      uVar2 =\n                          *(undefined8 *)(&log_level_info +\n                                          (long)(local_8c + Number) * Number);\n                      uVar8 = my_pid();\n                      fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar8,\n                              uVar2, String, String);\n                    } else {\n                      uVar2 =\n                          *(undefined8 *)(&log_level_info +\n                                          (long)(local_8c + Number) * Number);\n                      uVar8 = my_pid();\n                      fprintf(_stderr, String,\n                              (ulong) * (uint *)(_log_prefix_val + Number),\n                              *_log_prefix_val, (ulong)_process_no,\n                              (ulong)uVar8, uVar2, String, String);\n                    }\n                    if (_log_color != Number) {\n                      dprint_color_reset();\n                    }\n                  }\n                  _dprint_crit = _dprint_crit + -Number;\n                }\n              } else {\n                local_68 = generate_string(Number);\n                while (<span class=\"supfact\">local_160</span> != (long *)Number) {\n                  local_78 = <span class=\"supfact\">local_160</span>;\n                  iVar7 = add_resource(*<span class=\"supfact\">local_160</span>,\n                                       <span class=\"supfact\">local_b8</span>, local_68,\n                                       <span class=\"supfact\">local_140</span>,\n                                       &<span class=\"supfact\">local_164</span>);\n                  if (iVar7 < Number) {\n                    local_44 = Number;\n                    <span class=\"supfact\">local_160</span> =\n                        (long *)<span class=\"supfact\">local_160</span>[Number];\n                    if (*local_78 != Number) {\n                      (*_str_content_type_col)(_sprintf, *local_78, String,\n                                               String, Number, &DAT_00118d20);\n                    }\n                    (*_str_content_type_col)(_sprintf, local_78, String, String,\n                                             Number, &DAT_00118d20);\n                  } else if (local_44 == Number) {\n                    iVar7 = get_debug_level(&DAT_00118d20, Number);\n                    uVar6 = <span class=\"supfact\">local_164</span>;\n                    uVar10 = _rls_max_notify_body_len;\n                    uVar8 = __pkg_root;\n                    uVar2 = _ut_buf_int2str;\n                    pcVar4 = __km_log_func;\n                    if ((-Number < iVar7) && (_dprint_crit == Number)) {\n                      local_88 = -Number;\n                      _dprint_crit = Number;\n                      if (_log_stderr == Number) {\n                        if (_log_prefix_val == (undefined8 *)Number) {\n                          uVar9 = get_debug_facility(&DAT_00118d20, Number);\n                          (*pcVar4)(uVar9 | uVar8, String, uVar2, String,\n                                    String, uVar6, uVar10);\n                        } else {\n                          uVar3 = *_log_prefix_val;\n                          uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                          uVar9 = get_debug_facility(&DAT_00118d20, Number);\n                          (*pcVar4)(uVar9 | uVar8, String, uVar1, uVar3, uVar2,\n                                    String, String, uVar6, uVar10);\n                        }\n                      } else {\n                        if (_log_color != Number) {\n                          dprint_color(Number);\n                        }\n                        if (_log_prefix_val == (undefined8 *)Number) {\n                          <span class=\"supfact\">uVar14</span> =\n                              (ulong)_rls_max_notify_body_len;\n                          <span class=\"supfact\">uVar13</span> =\n                              (ulong)<span class=\"supfact\">local_164</span>;\n                          uVar2 = *(undefined8 *)(&log_level_info +\n                                                  (long)(local_88 + Number) *\n                                                      Number);\n                          uVar8 = my_pid();\n                          fprintf(_stderr, String, (ulong)_process_no,\n                                  (ulong)uVar8, uVar2, String, String,\n                                  <span class=\"supfact\">uVar13</span>,\n                                  <span class=\"supfact\">uVar14</span>);\n                        } else {\n                          <span class=\"supfact\">uVar14</span> =\n                              (ulong)_rls_max_notify_body_len;\n                          <span class=\"supfact\">uVar13</span> =\n                              (ulong)<span class=\"supfact\">local_164</span>;\n                          uVar2 = *(undefined8 *)(&log_level_info +\n                                                  (long)(local_88 + Number) *\n                                                      Number);\n                          uVar8 = my_pid();\n                          fprintf(_stderr, String,\n                                  (ulong) * (uint *)(_log_prefix_val + Number),\n                                  *_log_prefix_val, (ulong)_process_no,\n                                  (ulong)uVar8, uVar2, String, String,\n                                  <span class=\"supfact\">uVar13</span>,\n                                  <span class=\"supfact\">uVar14</span>);\n                        }\n                        if (_log_color != Number) {\n                          dprint_color_reset();\n                        }\n                      }\n                      _dprint_crit = _dprint_crit + -Number;\n                    }\n                    <span class=\"supfact\">local_160</span> =\n                        (long *)<span class=\"supfact\">local_160</span>[Number];\n                    if (*local_78 != Number) {\n                      (*_str_content_type_col)(_sprintf, *local_78, String,\n                                               String, Number, &DAT_00118d20);\n                    }\n                    (*_str_content_type_col)(_sprintf, local_78, String, String,\n                                             Number, &DAT_00118d20);\n                  } else {\n                    iVar7 = get_debug_level(&DAT_00118d20, Number);\n                    uVar6 = <span class=\"supfact\">local_164</span>;\n                    uVar10 = _rls_max_notify_body_len;\n                    uVar8 = _str_presence_state_col;\n                    pcVar5 = _str_content_type_col;\n                    pcVar4 = __km_log_func;\n                    if ((Number < iVar7) && (_dprint_crit == Number)) {\n                      local_7c = Number;\n                      _dprint_crit = Number;\n                      if (_log_stderr == Number) {\n                        if (_log_prefix_val == (undefined8 *)Number) {\n                          uVar9 = get_debug_facility(&DAT_00118d20, Number);\n                          (*pcVar4)(uVar9 | uVar8, String, pcVar5, String,\n                                    String, uVar6, uVar10);\n                        } else {\n                          uVar2 = *_log_prefix_val;\n                          uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                          uVar9 = get_debug_facility(&DAT_00118d20, Number);\n                          (*pcVar4)(uVar9 | uVar8, String, uVar1, uVar2, pcVar5,\n                                    String, String, uVar6, uVar10);\n                        }\n                      } else {\n                        if (_log_color != Number) {\n                          dprint_color(Number);\n                        }\n                        if (_log_prefix_val == (undefined8 *)Number) {\n                          <span class=\"supfact\">uVar14</span> =\n                              (ulong)_rls_max_notify_body_len;\n                          <span class=\"supfact\">uVar13</span> =\n                              (ulong)<span class=\"supfact\">local_164</span>;\n                          uVar2 = *(undefined8 *)(&log_level_info +\n                                                  (long)(local_7c + Number) *\n                                                      Number);\n                          uVar8 = my_pid();\n                          fprintf(_stderr, String, (ulong)_process_no,\n                                  (ulong)uVar8, uVar2, String, String,\n                                  <span class=\"supfact\">uVar13</span>,\n                                  <span class=\"supfact\">uVar14</span>);\n                        } else {\n                          <span class=\"supfact\">uVar14</span> =\n                              (ulong)_rls_max_notify_body_len;\n                          <span class=\"supfact\">uVar13</span> =\n                              (ulong)<span class=\"supfact\">local_164</span>;\n                          uVar2 = *(undefined8 *)(&log_level_info +\n                                                  (long)(local_7c + Number) *\n                                                      Number);\n                          uVar8 = my_pid();\n                          fprintf(_stderr, String,\n                                  (ulong) * (uint *)(_log_prefix_val + Number),\n                                  *_log_prefix_val, (ulong)_process_no,\n                                  (ulong)uVar8, uVar2, String, String,\n                                  <span class=\"supfact\">uVar13</span>,\n                                  <span class=\"supfact\">uVar14</span>);\n                        }\n                        if (_log_color != Number) {\n                          dprint_color_reset();\n                        }\n                      }\n                      _dprint_crit = _dprint_crit + -Number;\n                    }\n                    local_40 = (long *)(*(code *)CONCAT44(uRam000000000011f094,\n                                                          content_type_col))(\n                        _sprintf, Number, String, String, Number,\n                        &DAT_00118d20);\n                    if (local_40 == (long *)Number) {\n                      iVar7 = get_debug_level(&DAT_00118d20, Number);\n                      uVar8 = __pkg_root;\n                      uVar2 = _ut_buf_int2str;\n                      pcVar4 = __km_log_func;\n                      if ((-Number < iVar7) && (_dprint_crit == Number)) {\n                        local_84 = -Number;\n                        _dprint_crit = Number;\n                        if (_log_stderr == Number) {\n                          if (_log_prefix_val == (undefined8 *)Number) {\n                            uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                            (*pcVar4)(uVar10 | uVar8, String, uVar2, String,\n                                      String, &DAT_00119613);\n                          } else {\n                            uVar3 = *_log_prefix_val;\n                            uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                            uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                            (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3,\n                                      uVar2, String, String, &DAT_00119613);\n                          }\n                        } else {\n                          if (_log_color != Number) {\n                            dprint_color(Number);\n                          }\n                          if (_log_prefix_val == (undefined8 *)Number) {\n                            uVar2 = *(undefined8 *)(&log_level_info +\n                                                    (long)(local_84 + Number) *\n                                                        Number);\n                            uVar8 = my_pid();\n                            fprintf(_stderr, String, (ulong)_process_no,\n                                    (ulong)uVar8, uVar2, String, String,\n                                    &DAT_00119613);\n                          } else {\n                            uVar2 = *(undefined8 *)(&log_level_info +\n                                                    (long)(local_84 + Number) *\n                                                        Number);\n                            uVar8 = my_pid();\n                            fprintf(_stderr, String,\n                                    (ulong) *\n                                        (uint *)(_log_prefix_val + Number),\n                                    *_log_prefix_val, (ulong)_process_no,\n                                    (ulong)uVar8, uVar2, String, String,\n                                    &DAT_00119613);\n                          }\n                          if (_log_color != Number) {\n                            dprint_color_reset();\n                          }\n                        }\n                        _dprint_crit = _dprint_crit + -Number;\n                      }\n                      goto LAB_00106d42;\n                    }\n                    xmlDocDumpFormatMemory(<span class=\"supfact\">local_b0</span>, local_40,\n                                           local_40 + Number, Number);\n                    xmlFreeDoc(<span class=\"supfact\">local_b0</span>);\n                    iVar7 = agg_body_sendn_update(\n                        <span class=\"supfact\">param_3</span>, local_68, local_40,\n                        DAT_00118a90, <span class=\"supfact\">param_1</span>,\n                        <span class=\"supfact\">param_4</span>);\n                    if (iVar7 < Number) {\n                      iVar7 = get_debug_level(&DAT_00118d20, Number);\n                      uVar8 = __pkg_root;\n                      uVar2 = _ut_buf_int2str;\n                      pcVar4 = __km_log_func;\n                      if ((-Number < iVar7) && (_dprint_crit == Number)) {\n                        local_80 = -Number;\n                        _dprint_crit = Number;\n                        if (_log_stderr == Number) {\n                          if (_log_prefix_val == (undefined8 *)Number) {\n                            uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                            (*pcVar4)(uVar10 | uVar8, String, uVar2, String,\n                                      String);\n                          } else {\n                            uVar3 = *_log_prefix_val;\n                            uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                            uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                            (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3,\n                                      uVar2, String, String);\n                          }\n                        } else {\n                          if (_log_color != Number) {\n                            dprint_color(Number);\n                          }\n                          if (_log_prefix_val == (undefined8 *)Number) {\n                            uVar2 = *(undefined8 *)(&log_level_info +\n                                                    (long)(local_80 + Number) *\n                                                        Number);\n                            uVar8 = my_pid();\n                            fprintf(_stderr, String, (ulong)_process_no,\n                                    (ulong)uVar8, uVar2, String, String);\n                          } else {\n                            uVar2 = *(undefined8 *)(&log_level_info +\n                                                    (long)(local_80 + Number) *\n                                                        Number);\n                            uVar8 = my_pid();\n                            fprintf(_stderr, String,\n                                    (ulong) *\n                                        (uint *)(_log_prefix_val + Number),\n                                    *_log_prefix_val, (ulong)_process_no,\n                                    (ulong)uVar8, uVar2, String, String);\n                          }\n                          if (_log_color != Number) {\n                            dprint_color_reset();\n                          }\n                        }\n                        _dprint_crit = _dprint_crit + -Number;\n                      }\n                      goto LAB_00106d42;\n                    }\n                    <span class=\"supfact\">local_164</span> = create_empty_rlmi_doc(\n                        &<span class=\"supfact\">local_b0</span>, &<span class=\"supfact\">local_b8</span>,\n                        <span class=\"supfact\">param_3</span>,\n                        *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                        Number);\n                    xmlDocSetRootElement(<span class=\"supfact\">local_b0</span>,\n                                         <span class=\"supfact\">local_b8</span>);\n                    *(undefined4 *)(DAT_00118a90 + Number) = Number;\n                    local_44 = Number;\n                  }\n                }\n                local_40 = (long *)(*(code *)CONCAT44(uRam000000000011f094,\n                                                      content_type_col))(\n                    _sprintf, Number, String, String, Number, &DAT_00118d20);\n                if (local_40 == (long *)Number) {\n                  iVar7 = get_debug_level(&DAT_00118d20, Number);\n                  uVar8 = __pkg_root;\n                  uVar2 = _ut_buf_int2str;\n                  pcVar4 = __km_log_func;\n                  if ((-Number < iVar7) && (_dprint_crit == Number)) {\n                    local_70 = -Number;\n                    _dprint_crit = Number;\n                    if (_log_stderr == Number) {\n                      if (_log_prefix_val == (undefined8 *)Number) {\n                        uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                        (*pcVar4)(uVar10 | uVar8, String, uVar2, String, String,\n                                  &DAT_00119613);\n                      } else {\n                        uVar3 = *_log_prefix_val;\n                        uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                        uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                        (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3, uVar2,\n                                  String, String, &DAT_00119613);\n                      }\n                    } else {\n                      if (_log_color != Number) {\n                        dprint_color(Number);\n                      }\n                      if (_log_prefix_val == (undefined8 *)Number) {\n                        uVar2 =\n                            *(undefined8 *)(&log_level_info +\n                                            (long)(local_70 + Number) * Number);\n                        uVar8 = my_pid();\n                        fprintf(_stderr, String, (ulong)_process_no,\n                                (ulong)uVar8, uVar2, String, String,\n                                &DAT_00119613);\n                      } else {\n                        uVar2 =\n                            *(undefined8 *)(&log_level_info +\n                                            (long)(local_70 + Number) * Number);\n                        uVar8 = my_pid();\n                        fprintf(_stderr, String,\n                                (ulong) * (uint *)(_log_prefix_val + Number),\n                                *_log_prefix_val, (ulong)_process_no,\n                                (ulong)uVar8, uVar2, String, String,\n                                &DAT_00119613);\n                      }\n                      if (_log_color != Number) {\n                        dprint_color_reset();\n                      }\n                    }\n                    _dprint_crit = _dprint_crit + -Number;\n                  }\n                } else {\n                  xmlDocDumpFormatMemory(<span class=\"supfact\">local_b0</span>, local_40,\n                                         local_40 + Number,\n                                         _rls_max_notify_body_len == Number);\n                  xmlFreeDoc(<span class=\"supfact\">local_b0</span>);\n                  iVar7 = agg_body_sendn_update(\n                      <span class=\"supfact\">param_3</span>, local_68, local_40, DAT_00118a90,\n                      <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_4</span>);\n                  if (-Number < iVar7) {\n                    (*_xmlFree)(*local_40);\n                    (*_str_content_type_col)(_sprintf, local_40, String, String,\n                                             Number, &DAT_00118d20);\n                    if (DAT_00118a90 != (long *)Number) {\n                      if (*DAT_00118a90 != Number) {\n                        (*_str_content_type_col)(_sprintf, *DAT_00118a90,\n                                                 String, String, Number,\n                                                 &DAT_00118d20);\n                      }\n                      (*_str_content_type_col)(_sprintf, DAT_00118a90, String,\n                                               String, Number, &DAT_00118d20);\n                    }\n                    DAT_00118a98 = Number;\n                    (*_str_content_type_col)(_sprintf,\n                                             <span class=\"supfact\">local_158</span>, String,\n                                             String, Number, &DAT_00118d20);\n                    (*_rlpres_db)(_rlpres_db, <span class=\"supfact\">local_140</span>);\n                    return Number;\n                  }\n                  iVar7 = get_debug_level(&DAT_00118d20, Number);\n                  uVar8 = __pkg_root;\n                  uVar2 = _ut_buf_int2str;\n                  pcVar4 = __km_log_func;\n                  if ((-Number < iVar7) && (_dprint_crit == Number)) {\n                    local_6c = -Number;\n                    _dprint_crit = Number;\n                    if (_log_stderr == Number) {\n                      if (_log_prefix_val == (undefined8 *)Number) {\n                        uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                        (*pcVar4)(uVar10 | uVar8, String, uVar2, String,\n                                  String);\n                      } else {\n                        uVar3 = *_log_prefix_val;\n                        uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                        uVar10 = get_debug_facility(&DAT_00118d20, Number);\n                        (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3, uVar2,\n                                  String, String);\n                      }\n                    } else {\n                      if (_log_color != Number) {\n                        dprint_color(Number);\n                      }\n                      if (_log_prefix_val == (undefined8 *)Number) {\n                        uVar2 =\n                            *(undefined8 *)(&log_level_info +\n                                            (long)(local_6c + Number) * Number);\n                        uVar8 = my_pid();\n                        fprintf(_stderr, String, (ulong)_process_no,\n                                (ulong)uVar8, uVar2, String, String);\n                      } else {\n                        uVar2 =\n                            *(undefined8 *)(&log_level_info +\n                                            (long)(local_6c + Number) * Number);\n                        uVar8 = my_pid();\n                        fprintf(_stderr, String,\n                                (ulong) * (uint *)(_log_prefix_val + Number),\n                                *_log_prefix_val, (ulong)_process_no,\n                                (ulong)uVar8, uVar2, String, String);\n                      }\n                      if (_log_color != Number) {\n                        dprint_color_reset();\n                      }\n                    }\n                    _dprint_crit = _dprint_crit + -Number;\n                  }\n                }\n              }\n            }\n          }\n        }\n      } else {\n        iVar7 = get_debug_level(&DAT_00118d20, Number);\n        uVar8 = __pkg_root;\n        uVar2 = _ut_buf_int2str;\n        pcVar4 = __km_log_func;\n        if ((-Number < iVar7) && (_dprint_crit == Number)) {\n          local_5c = -Number;\n          _dprint_crit = Number;\n          if (_log_stderr == Number) {\n            if (_log_prefix_val == (undefined8 *)Number) {\n              uVar10 = get_debug_facility(&DAT_00118d20, Number);\n              (*pcVar4)(uVar10 | uVar8, String, uVar2, String, String);\n            } else {\n              uVar3 = *_log_prefix_val;\n              uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n              uVar10 = get_debug_facility(&DAT_00118d20, Number);\n              (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3, uVar2, String,\n                        String);\n            }\n          } else {\n            if (_log_color != Number) {\n              dprint_color(Number);\n            }\n            if (_log_prefix_val == (undefined8 *)Number) {\n              uVar2 = *(undefined8 *)(&log_level_info +\n                                      (long)(local_5c + Number) * Number);\n              uVar8 = my_pid();\n              fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar8, uVar2,\n                      String, String);\n            } else {\n              uVar2 = *(undefined8 *)(&log_level_info +\n                                      (long)(local_5c + Number) * Number);\n              uVar8 = my_pid();\n              fprintf(_stderr, String,\n                      (ulong) * (uint *)(_log_prefix_val + Number),\n                      *_log_prefix_val, (ulong)_process_no, (ulong)uVar8, uVar2,\n                      String, String);\n            }\n            if (_log_color != Number) {\n              dprint_color_reset();\n            }\n          }\n          _dprint_crit = _dprint_crit + -Number;\n        }\n      }\n    }\n  }\nLAB_00106d42:\n  if (local_40 != (long *)Number) {\n    if (*local_40 != Number) {\n      (*_xmlFree)(*local_40);\n    }\n    (*_str_content_type_col)(_sprintf, local_40, String, String, Number,\n                             &DAT_00118d20);\n  }\n  if (DAT_00118a90 != (long *)Number) {\n    if (*DAT_00118a90 != Number) {\n      (*_str_content_type_col)(_sprintf, *DAT_00118a90, String, String, Number,\n                               &DAT_00118d20);\n    }\n    (*_str_content_type_col)(_sprintf, DAT_00118a90, String, String, Number,\n                             &DAT_00118d20);\n  }\n  DAT_00118a98 = Number;\n  if (<span class=\"supfact\">local_140</span> != Number) {\n    (*_rlpres_db)(_rlpres_db, <span class=\"supfact\">local_140</span>);\n  }\n  if (<span class=\"supfact\">local_158</span> != Number) {\n    (*_str_content_type_col)(_sprintf, <span class=\"supfact\">local_158</span>, String,\n                             String, Number, &DAT_00118d20);\n  }\n  if ((((_dbmode == Number) && (_strncmp != (code *)Number)) &&\n       (iVar7 = (*_strncmp)(_rlpres_db), iVar7 < Number)) &&\n      ((iVar7 = get_debug_level(&DAT_00118d20, Number), uVar8 = __pkg_root,\n        uVar2 = _ut_buf_int2str, pcVar4 = __km_log_func,\n        -Number < iVar7 && (_dprint_crit == Number)))) {\n    <span class=\"supfact\">local_a8</span> = -Number;\n    _dprint_crit = Number;\n    if (_log_stderr == Number) {\n      if (_log_prefix_val == (undefined8 *)Number) {\n        uVar10 = get_debug_facility(&DAT_00118d20, Number);\n        (*pcVar4)(uVar10 | uVar8, String, uVar2, String, String);\n      } else {\n        uVar3 = *_log_prefix_val;\n        uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n        uVar10 = get_debug_facility(&DAT_00118d20, Number);\n        (*pcVar4)(uVar10 | uVar8, String, uVar1, uVar3, uVar2, String, String);\n      }\n    } else {\n      if (_log_color != Number) {\n        dprint_color(Number);\n      }\n      if (_log_prefix_val == (undefined8 *)Number) {\n        uVar2 =\n            *(undefined8 *)(&log_level_info +\n                            (long)(<span class=\"supfact\">local_a8</span> + Number) * Number);\n        uVar8 = my_pid();\n        fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar8, uVar2,\n                String, String);\n      } else {\n        uVar2 =\n            *(undefined8 *)(&log_level_info +\n                            (long)(<span class=\"supfact\">local_a8</span> + Number) * Number);\n        uVar8 = my_pid();\n        fprintf(_stderr, String, (ulong) * (uint *)(_log_prefix_val + Number),\n                *_log_prefix_val, (ulong)_process_no, (ulong)uVar8, uVar2,\n                String, String);\n      }\n      if (_log_color != Number) {\n        dprint_color_reset();\n      }\n    }\n    _dprint_crit = _dprint_crit + -Number;\n  }\n  return Number;\n}", "code_t": "int send_full_notify(subs_t *<span class=\"supfact\">subs</span>,\n                     xmlNodePtr <span class=\"supfact\">rl_node</span>,\n                     str *<span class=\"supfact\">rl_uri</span>,\n                     uint <span class=\"supfact\">hash_code</span>) {\n  undefined4 uVar1;\n  str username;\n  str domain;\n  code *pcVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint uVar7;\n  long lVar8;\n  str *psVar9;\n  char *pcVar10;\n  ulong <span class=\"supfact\">uVar11</span>;\n  ulong <span class=\"supfact\">uVar12</span>;\n  undefined8 uVar13;\n  char *in_stack_fffffffffffffe58;\n  undefined8 in_stack_fffffffffffffe60;\n  undefined8 uVar14;\n  code *pcVar15;\n  uint <span class=\"supfact\">hash_code</span> - local;\n  str *<span class=\"supfact\">rl_uri</span> - local;\n  xmlNodePtr <span class=\"supfact\">rl_node</span> - local;\n  subs_t *<span class=\"supfact\">subs</span> - local;\n  res_param_t <span class=\"supfact\">param</span>;\n  int <span class=\"supfact\">len_est</span>;\n  uri_link_t *<span class=\"supfact\">uri_list_head</span>;\n  str <span class=\"supfact\">rlsubs_did</span>;\n  db1_res_t *<span class=\"supfact\">result</span>;\n  db_val_t <span class=\"supfact\">update_vals</span>[Number];\n  db_val_t <span class=\"supfact\">query_vals</span>[Number];\n  db_key_t <span class=\"supfact\">result_cols</span>[Number];\n  db_key_t <span class=\"supfact\">update_cols</span>[Number];\n  db_key_t <span class=\"supfact\">query_cols</span>[Number];\n  xmlNodePtr <span class=\"supfact\">list_node</span>;\n  xmlDocPtr <span class=\"supfact\">rlmi_body</span>;\n  int <span class=\"supfact\">__llevel_17</span>;\n  int <span class=\"supfact\">__llevel_1</span>;\n  int <span class=\"supfact\">__llevel_2</span>;\n  int <span class=\"supfact\">__llevel_4</span>;\n  int <span class=\"supfact\">__llevel_5</span>;\n  int <span class=\"supfact\">__llevel_8</span>;\n  int <span class=\"supfact\">__llevel_9</span>;\n  int <span class=\"supfact\">__llevel_10</span>;\n  int <span class=\"supfact\">__llevel_11</span>;\n  int <span class=\"supfact\">__llevel_13</span>;\n  int <span class=\"supfact\">__llevel_14</span>;\n  int <span class=\"supfact\">__llevel_12</span>;\n  uri_link_t *<span class=\"supfact\">last</span>;\n  int <span class=\"supfact\">__llevel_15</span>;\n  int <span class=\"supfact\">__llevel_16</span>;\n  char *<span class=\"supfact\">boundary_string</span>;\n  int <span class=\"supfact\">__llevel_7</span>;\n  int <span class=\"supfact\">__llevel_6</span>;\n  int <span class=\"supfact\">__llevel_3</span>;\n  int <span class=\"supfact\">__llevel</span>;\n  db_query_f <span class=\"supfact\">query_fn</span>;\n  int <span class=\"supfact\">n_result_cols</span>;\n  int <span class=\"supfact\">resource_added</span>;\n  str *<span class=\"supfact\">rlmi_cont</span>;\n  <span class=\"supfact\">rlmi_body</span> = (xmlDocPtr)Number;\n  <span class=\"supfact\">list_node</span> = (xmlNodePtr)Number;\n  <span class=\"supfact\">result</span> = (db1_res_t *)Number;\n  <span class=\"supfact\">n_result_cols</span> = Number;\n  <span class=\"supfact\">rlsubs_did</span>.s = (char *)Number;\n  <span class=\"supfact\">rlsubs_did</span>.len = Number;\n  <span class=\"supfact\">rlmi_cont</span> = (str *)Number;\n  <span class=\"supfact\">uri_list_head</span> = (uri_link_t *)Number;\n  <span class=\"supfact\">resource_added</span> = Number;\n  multipart_body = (str *)Number;\n  <span class=\"supfact\">query_fn</span> = _str_auth_state_col;\n  if (_xmlNewChild != (db_query_f)Number) {\n    <span class=\"supfact\">query_fn</span> = _xmlNewChild;\n  }\n  iVar3 = get_debug_level(&DAT_00118d20, Number);\n  uVar4 = _str_presence_state_col;\n  pcVar15 = _str_content_type_col;\n  pcVar2 = __km_log_func;\n  if ((Number < iVar3) && (_dprint_crit == Number)) {\n    <span class=\"supfact\">__llevel</span> = Number;\n    _dprint_crit = Number;\n    if (_log_stderr == Number) {\n      if (_log_prefix_val == (undefined8 *)Number) {\n        uVar7 = get_debug_facility(&DAT_00118d20, Number);\n        (*pcVar2)(uVar7 | uVar4, String, pcVar15, String, String);\n      } else {\n        uVar13 = *_log_prefix_val;\n        uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n        uVar7 = get_debug_facility(&DAT_00118d20, Number);\n        (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar13, pcVar15, String,\n                  String);\n      }\n    } else {\n      if (_log_color != Number) {\n        dprint_color(Number);\n      }\n      if (_log_prefix_val == (undefined8 *)Number) {\n        uVar13 =\n            *(undefined8 *)(&log_level_info +\n                            (long)(<span class=\"supfact\">__llevel</span> + Number) * Number);\n        uVar4 = my_pid();\n        fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar4, uVar13,\n                String, String);\n      } else {\n        uVar13 =\n            *(undefined8 *)(&log_level_info +\n                            (long)(<span class=\"supfact\">__llevel</span> + Number) * Number);\n        uVar4 = my_pid();\n        fprintf(_stderr, String, (ulong) * (uint *)(_log_prefix_val + Number),\n                *_log_prefix_val, (ulong)_process_no, (ulong)uVar4, uVar13,\n                String, String);\n      }\n      if (_log_color != Number) {\n        dprint_color_reset();\n      }\n    }\n    _dprint_crit = _dprint_crit + -Number;\n  }\n  iVar3 = CONSTR_RLSUBS_DID(<span class=\"supfact\">subs</span>, &<span class=\"supfact\">rlsubs_did</span>);\n  if (iVar3 < Number) {\n    iVar3 = get_debug_level(&DAT_00118d20, Number);\n    uVar4 = __pkg_root;\n    uVar13 = _ut_buf_int2str;\n    pcVar2 = __km_log_func;\n    if ((-Number < iVar3) && (_dprint_crit == Number)) {\n      <span class=\"supfact\">__llevel_1</span> = -Number;\n      _dprint_crit = Number;\n      if (_log_stderr == Number) {\n        if (_log_prefix_val == (undefined8 *)Number) {\n          uVar7 = get_debug_facility(&DAT_00118d20, Number);\n          (*pcVar2)(uVar7 | uVar4, String, uVar13, String, String);\n        } else {\n          uVar14 = *_log_prefix_val;\n          uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n          uVar7 = get_debug_facility(&DAT_00118d20, Number);\n          (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14, uVar13, String,\n                    String);\n        }\n      } else {\n        if (_log_color != Number) {\n          dprint_color(Number);\n        }\n        if (_log_prefix_val == (undefined8 *)Number) {\n          uVar13 = *(undefined8 *)(&log_level_info +\n                                   (long)(<span class=\"supfact\">__llevel_1</span> + Number) *\n                                       Number);\n          uVar4 = my_pid();\n          fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar4, uVar13,\n                  String, String);\n        } else {\n          uVar13 = *(undefined8 *)(&log_level_info +\n                                   (long)(<span class=\"supfact\">__llevel_1</span> + Number) *\n                                       Number);\n          uVar4 = my_pid();\n          fprintf(_stderr, String, (ulong) * (uint *)(_log_prefix_val + Number),\n                  *_log_prefix_val, (ulong)_process_no, (ulong)uVar4, uVar13,\n                  String, String);\n        }\n        if (_log_color != Number) {\n          dprint_color_reset();\n        }\n      }\n      _dprint_crit = _dprint_crit + -Number;\n    }\n  } else {\n    <span class=\"supfact\">query_cols</span>[Number] = (db_key_t)&str_rlsubs_did_col;\n    <span class=\"supfact\">query_vals</span>[Number].type = DB1_STR;\n    <span class=\"supfact\">query_vals</span>[Number].nul = Number;\n    <span class=\"supfact\">query_vals</span>[Number].val._8_8_ = CONCAT44(\n        <span class=\"supfact\">rlsubs_did</span>._12_4_, <span class=\"supfact\">rlsubs_did</span>.len);\n    <span class=\"supfact\">query_vals</span>[Number].val.string_val =\n        <span class=\"supfact\">rlsubs_did</span>.s;\n    resource_uri_col = <span class=\"supfact\">n_result_cols</span>;\n    lVar8 = (long)<span class=\"supfact\">n_result_cols</span>;\n    <span class=\"supfact\">n_result_cols</span> = <span class=\"supfact\">n_result_cols</span> + Number;\n    <span class=\"supfact\">result_cols</span>[lVar8] = (db_key_t)&str_resource_uri_col;\n    content_type_col = <span class=\"supfact\">n_result_cols</span>;\n    lVar8 = (long)<span class=\"supfact\">n_result_cols</span>;\n    <span class=\"supfact\">n_result_cols</span> = <span class=\"supfact\">n_result_cols</span> + Number;\n    <span class=\"supfact\">result_cols</span>[lVar8] = (db_key_t)&str_content_type_col;\n    pres_state_col = <span class=\"supfact\">n_result_cols</span>;\n    lVar8 = (long)<span class=\"supfact\">n_result_cols</span>;\n    <span class=\"supfact\">n_result_cols</span> = <span class=\"supfact\">n_result_cols</span> + Number;\n    <span class=\"supfact\">result_cols</span>[lVar8] = (db_key_t)&str_presence_state_col;\n    auth_state_col = <span class=\"supfact\">n_result_cols</span>;\n    lVar8 = (long)<span class=\"supfact\">n_result_cols</span>;\n    <span class=\"supfact\">n_result_cols</span> = <span class=\"supfact\">n_result_cols</span> + Number;\n    <span class=\"supfact\">result_cols</span>[lVar8] = (db_key_t)&str_auth_state_col;\n    reason_col = <span class=\"supfact\">n_result_cols</span>;\n    lVar8 = (long)<span class=\"supfact\">n_result_cols</span>;\n    <span class=\"supfact\">n_result_cols</span> = <span class=\"supfact\">n_result_cols</span> + Number;\n    <span class=\"supfact\">result_cols</span>[lVar8] = (db_key_t)&str_reason_col;\n    <span class=\"supfact\">update_cols</span>[Number] = (db_key_t)&str_updated_col;\n    <span class=\"supfact\">update_vals</span>[Number].type = DB1_INT;\n    <span class=\"supfact\">update_vals</span>[Number].nul = Number;\n    <span class=\"supfact\">update_vals</span>[Number].val.int_val = -Number;\n    iVar3 = (*_str_rlsubs_did_col)(_rlpres_db, &rlpres_table);\n    if (iVar3 < Number) {\n      iVar3 = get_debug_level(&DAT_00118d20, Number);\n      uVar4 = __pkg_root;\n      uVar13 = _ut_buf_int2str;\n      pcVar2 = __km_log_func;\n      if ((-Number < iVar3) && (_dprint_crit == Number)) {\n        <span class=\"supfact\">__llevel_2</span> = -Number;\n        _dprint_crit = Number;\n        if (_log_stderr == Number) {\n          if (_log_prefix_val == (undefined8 *)Number) {\n            uVar7 = get_debug_facility(&DAT_00118d20, Number);\n            (*pcVar2)(uVar7 | uVar4, String, uVar13, String, String);\n          } else {\n            uVar14 = *_log_prefix_val;\n            uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n            uVar7 = get_debug_facility(&DAT_00118d20, Number);\n            (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14, uVar13, String,\n                      String);\n          }\n        } else {\n          if (_log_color != Number) {\n            dprint_color(Number);\n          }\n          if (_log_prefix_val == (undefined8 *)Number) {\n            uVar13 =\n                *(undefined8 *)(&log_level_info +\n                                (long)(<span class=\"supfact\">__llevel_2</span> + Number) *\n                                    Number);\n            uVar4 = my_pid();\n            fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar4, uVar13,\n                    String, String);\n          } else {\n            uVar13 =\n                *(undefined8 *)(&log_level_info +\n                                (long)(<span class=\"supfact\">__llevel_2</span> + Number) *\n                                    Number);\n            uVar4 = my_pid();\n            fprintf(_stderr, String,\n                    (ulong) * (uint *)(_log_prefix_val + Number),\n                    *_log_prefix_val, (ulong)_process_no, (ulong)uVar4, uVar13,\n                    String, String);\n          }\n          if (_log_color != Number) {\n            dprint_color_reset();\n          }\n        }\n        _dprint_crit = _dprint_crit + -Number;\n      }\n    } else if (((_dbmode == Number) &&\n                (_pres_update_shtable != (code *)Number)) &&\n               (iVar3 = (*_pres_update_shtable)(_rlpres_db, Number),\n                iVar3 < Number)) {\n      iVar3 = get_debug_level(&DAT_00118d20, Number);\n      uVar4 = __pkg_root;\n      uVar13 = _ut_buf_int2str;\n      pcVar2 = __km_log_func;\n      if ((-Number < iVar3) && (_dprint_crit == Number)) {\n        <span class=\"supfact\">__llevel_3</span> = -Number;\n        _dprint_crit = Number;\n        if (_log_stderr == Number) {\n          if (_log_prefix_val == (undefined8 *)Number) {\n            uVar7 = get_debug_facility(&DAT_00118d20, Number);\n            (*pcVar2)(uVar7 | uVar4, String, uVar13, String, String);\n          } else {\n            uVar14 = *_log_prefix_val;\n            uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n            uVar7 = get_debug_facility(&DAT_00118d20, Number);\n            (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14, uVar13, String,\n                      String);\n          }\n        } else {\n          if (_log_color != Number) {\n            dprint_color(Number);\n          }\n          if (_log_prefix_val == (undefined8 *)Number) {\n            uVar13 =\n                *(undefined8 *)(&log_level_info +\n                                (long)(<span class=\"supfact\">__llevel_3</span> + Number) *\n                                    Number);\n            uVar4 = my_pid();\n            fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar4, uVar13,\n                    String, String);\n          } else {\n            uVar13 =\n                *(undefined8 *)(&log_level_info +\n                                (long)(<span class=\"supfact\">__llevel_3</span> + Number) *\n                                    Number);\n            uVar4 = my_pid();\n            fprintf(_stderr, String,\n                    (ulong) * (uint *)(_log_prefix_val + Number),\n                    *_log_prefix_val, (ulong)_process_no, (ulong)uVar4, uVar13,\n                    String, String);\n          }\n          if (_log_color != Number) {\n            dprint_color_reset();\n          }\n        }\n        _dprint_crit = _dprint_crit + -Number;\n      }\n    } else {\n      iVar3 = (*<span class=\"supfact\">query_fn</span>)(\n          _rlpres_db, <span class=\"supfact\">query_cols</span>, (db_op_t *)Number,\n          <span class=\"supfact\">query_vals</span>, <span class=\"supfact\">result_cols</span>, Number,\n          <span class=\"supfact\">n_result_cols</span>, (db_key_t)Number,\n          &<span class=\"supfact\">result</span>);\n      if (iVar3 < Number) {\n        iVar3 = get_debug_level(&DAT_00118d20, Number);\n        uVar4 = __pkg_root;\n        uVar13 = _ut_buf_int2str;\n        pcVar2 = __km_log_func;\n        if ((-Number < iVar3) && (_dprint_crit == Number)) {\n          <span class=\"supfact\">__llevel_4</span> = -Number;\n          _dprint_crit = Number;\n          if (_log_stderr == Number) {\n            if (_log_prefix_val == (undefined8 *)Number) {\n              uVar7 = get_debug_facility(&DAT_00118d20, Number);\n              (*pcVar2)(uVar7 | uVar4, String, uVar13, String, String);\n            } else {\n              uVar14 = *_log_prefix_val;\n              uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n              uVar7 = get_debug_facility(&DAT_00118d20, Number);\n              (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14, uVar13, String,\n                        String);\n            }\n          } else {\n            if (_log_color != Number) {\n              dprint_color(Number);\n            }\n            if (_log_prefix_val == (undefined8 *)Number) {\n              uVar13 =\n                  *(undefined8 *)(&log_level_info +\n                                  (long)(<span class=\"supfact\">__llevel_4</span> + Number) *\n                                      Number);\n              uVar4 = my_pid();\n              fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar4, uVar13,\n                      String, String);\n            } else {\n              uVar13 =\n                  *(undefined8 *)(&log_level_info +\n                                  (long)(<span class=\"supfact\">__llevel_4</span> + Number) *\n                                      Number);\n              uVar4 = my_pid();\n              fprintf(_stderr, String,\n                      (ulong) * (uint *)(_log_prefix_val + Number),\n                      *_log_prefix_val, (ulong)_process_no, (ulong)uVar4,\n                      uVar13, String, String);\n            }\n            if (_log_color != Number) {\n              dprint_color_reset();\n            }\n          }\n          _dprint_crit = _dprint_crit + -Number;\n        }\n      } else if (<span class=\"supfact\">result</span> == (db1_res_t *)Number) {\n        iVar3 = get_debug_level(&DAT_00118d20, Number);\n        uVar4 = __pkg_root;\n        uVar13 = _ut_buf_int2str;\n        pcVar2 = __km_log_func;\n        if ((-Number < iVar3) && (_dprint_crit == Number)) {\n          <span class=\"supfact\">__llevel_5</span> = -Number;\n          _dprint_crit = Number;\n          if (_log_stderr == Number) {\n            if (_log_prefix_val == (undefined8 *)Number) {\n              uVar7 = get_debug_facility(&DAT_00118d20, Number);\n              (*pcVar2)(uVar7 | uVar4, String, uVar13, String, String);\n            } else {\n              uVar14 = *_log_prefix_val;\n              uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n              uVar7 = get_debug_facility(&DAT_00118d20, Number);\n              (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14, uVar13, String,\n                        String);\n            }\n          } else {\n            if (_log_color != Number) {\n              dprint_color(Number);\n            }\n            if (_log_prefix_val == (undefined8 *)Number) {\n              uVar13 =\n                  *(undefined8 *)(&log_level_info +\n                                  (long)(<span class=\"supfact\">__llevel_5</span> + Number) *\n                                      Number);\n              uVar4 = my_pid();\n              fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar4, uVar13,\n                      String, String);\n            } else {\n              uVar13 =\n                  *(undefined8 *)(&log_level_info +\n                                  (long)(<span class=\"supfact\">__llevel_5</span> + Number) *\n                                      Number);\n              uVar4 = my_pid();\n              fprintf(_stderr, String,\n                      (ulong) * (uint *)(_log_prefix_val + Number),\n                      *_log_prefix_val, (ulong)_process_no, (ulong)uVar4,\n                      uVar13, String, String);\n            }\n            if (_log_color != Number) {\n              dprint_color_reset();\n            }\n          }\n          _dprint_crit = _dprint_crit + -Number;\n        }\n      } else if ((<span class=\"supfact\">result</span>->n < Number) ||\n                 (iVar3 = (*_xmlDocSetRootElement)(\n                      _rlpres_db, <span class=\"supfact\">query_cols</span>, Number,\n                      <span class=\"supfact\">query_vals</span>, <span class=\"supfact\">update_cols</span>,\n                      <span class=\"supfact\">update_vals</span>, Number, Number),\n                  -Number < iVar3)) {\n        if ((_dbmode == Number) &&\n            ((_rls_table != (code *)Number &&\n              (iVar3 = (*_rls_table)(_rlpres_db), iVar3 < Number)))) {\n          iVar3 = get_debug_level(&DAT_00118d20, Number);\n          uVar4 = __pkg_root;\n          uVar13 = _ut_buf_int2str;\n          pcVar2 = __km_log_func;\n          if ((-Number < iVar3) && (_dprint_crit == Number)) {\n            <span class=\"supfact\">__llevel_7</span> = -Number;\n            _dprint_crit = Number;\n            if (_log_stderr == Number) {\n              if (_log_prefix_val == (undefined8 *)Number) {\n                uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                (*pcVar2)(uVar7 | uVar4, String, uVar13, String, String);\n              } else {\n                uVar14 = *_log_prefix_val;\n                uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14, uVar13, String,\n                          String);\n              }\n            } else {\n              if (_log_color != Number) {\n                dprint_color(Number);\n              }\n              if (_log_prefix_val == (undefined8 *)Number) {\n                uVar13 = *(\n                    undefined8 *)(&log_level_info +\n                                  (long)(<span class=\"supfact\">__llevel_7</span> + Number) *\n                                      Number);\n                uVar4 = my_pid();\n                fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar4,\n                        uVar13, String, String);\n              } else {\n                uVar13 = *(\n                    undefined8 *)(&log_level_info +\n                                  (long)(<span class=\"supfact\">__llevel_7</span> + Number) *\n                                      Number);\n                uVar4 = my_pid();\n                fprintf(_stderr, String,\n                        (ulong) * (uint *)(_log_prefix_val + Number),\n                        *_log_prefix_val, (ulong)_process_no, (ulong)uVar4,\n                        uVar13, String, String);\n              }\n              if (_log_color != Number) {\n                dprint_color_reset();\n              }\n            }\n            _dprint_crit = _dprint_crit + -Number;\n          }\n        } else {\n          psVar9 = (str *)(*(code *)CONCAT44(uRam000000000011f094,\n                                             content_type_col))(\n              _sprintf, Number, String, String, Number, &DAT_00118d20);\n          multipart_body = psVar9;\n          if (psVar9 == (str *)Number) {\n            iVar3 = get_debug_level(&DAT_00118d20, Number);\n            uVar4 = __pkg_root;\n            uVar13 = _ut_buf_int2str;\n            pcVar2 = __km_log_func;\n            if ((-Number < iVar3) && (_dprint_crit == Number)) {\n              <span class=\"supfact\">__llevel_8</span> = -Number;\n              _dprint_crit = Number;\n              if (_log_stderr == Number) {\n                if (_log_prefix_val == (undefined8 *)Number) {\n                  uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                  (*pcVar2)(uVar7 | uVar4, String, uVar13, String, String,\n                            &DAT_00119613);\n                } else {\n                  uVar14 = *_log_prefix_val;\n                  uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                  uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                  (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14, uVar13,\n                            String, String, &DAT_00119613);\n                }\n              } else {\n                if (_log_color != Number) {\n                  dprint_color(Number);\n                }\n                if (_log_prefix_val == (undefined8 *)Number) {\n                  uVar13 = *(undefined8 *)(&log_level_info +\n                                           (long)(<span class=\"supfact\">__llevel_8</span> +\n                                                  Number) *\n                                               Number);\n                  uVar4 = my_pid();\n                  fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar4,\n                          uVar13, String, String, &DAT_00119613);\n                } else {\n                  uVar13 = *(undefined8 *)(&log_level_info +\n                                           (long)(<span class=\"supfact\">__llevel_8</span> +\n                                                  Number) *\n                                               Number);\n                  uVar4 = my_pid();\n                  fprintf(_stderr, String,\n                          (ulong) * (uint *)(_log_prefix_val + Number),\n                          *_log_prefix_val, (ulong)_process_no, (ulong)uVar4,\n                          uVar13, String, String, &DAT_00119613);\n                }\n                if (_log_color != Number) {\n                  dprint_color_reset();\n                }\n              }\n              _dprint_crit = _dprint_crit + -Number;\n            }\n          } else {\n            multipart_body_size = Number;\n            pcVar10 = (char *)(*(code *)CONCAT44(uRam000000000011f094,\n                                                 content_type_col))(\n                _sprintf, Number, String, String, Number, &DAT_00118d20);\n            psVar9->s = pcVar10;\n            if (multipart_body->s == (char *)Number) {\n              iVar3 = get_debug_level(&DAT_00118d20, Number);\n              uVar4 = __pkg_root;\n              uVar13 = _ut_buf_int2str;\n              pcVar2 = __km_log_func;\n              if ((-Number < iVar3) && (_dprint_crit == Number)) {\n                <span class=\"supfact\">__llevel_9</span> = -Number;\n                _dprint_crit = Number;\n                if (_log_stderr == Number) {\n                  if (_log_prefix_val == (undefined8 *)Number) {\n                    uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                    (*pcVar2)(uVar7 | uVar4, String, uVar13, String, String,\n                              &DAT_00119613);\n                  } else {\n                    uVar14 = *_log_prefix_val;\n                    uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                    uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                    (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14, uVar13,\n                              String, String, &DAT_00119613);\n                  }\n                } else {\n                  if (_log_color != Number) {\n                    dprint_color(Number);\n                  }\n                  if (_log_prefix_val == (undefined8 *)Number) {\n                    uVar13 = *(undefined8 *)(&log_level_info +\n                                             (long)(<span class=\"supfact\">__llevel_9</span> +\n                                                    Number) *\n                                                 Number);\n                    uVar4 = my_pid();\n                    fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar4,\n                            uVar13, String, String, &DAT_00119613);\n                  } else {\n                    uVar13 = *(undefined8 *)(&log_level_info +\n                                             (long)(<span class=\"supfact\">__llevel_9</span> +\n                                                    Number) *\n                                                 Number);\n                    uVar4 = my_pid();\n                    fprintf(_stderr, String,\n                            (ulong) * (uint *)(_log_prefix_val + Number),\n                            *_log_prefix_val, (ulong)_process_no, (ulong)uVar4,\n                            uVar13, String, String, &DAT_00119613);\n                  }\n                  if (_log_color != Number) {\n                    dprint_color_reset();\n                  }\n                }\n                _dprint_crit = _dprint_crit + -Number;\n              }\n            } else {\n              multipart_body->len = Number;\n              <span class=\"supfact\">len_est</span> = create_empty_rlmi_doc(\n                  &<span class=\"supfact\">rlmi_body</span>, &<span class=\"supfact\">list_node</span>,\n                  <span class=\"supfact\">rl_uri</span>, <span class=\"supfact\">subs</span>->version,\n                  Number);\n              uVar13 = Number;\n              xmlDocSetRootElement(<span class=\"supfact\">rlmi_body</span>,\n                                   <span class=\"supfact\">list_node</span>);\n              <span class=\"supfact\">param</span>.next = &<span class=\"supfact\">uri_list_head</span>;\n              username._8_8_ = uVar13;\n              username.s = (char *)&<span class=\"supfact\">param</span>;\n              domain._8_8_ = in_stack_fffffffffffffe60;\n              domain.s = in_stack_fffffffffffffe58;\n              iVar3 = process_list_and_exec(\n                  <span class=\"supfact\">rl_node</span>, username, domain,\n                  (list_func_t)(<span class=\"supfact\">subs</span>->watcher_user).s,\n                  *(void **)&(<span class=\"supfact\">subs</span>->watcher_user).len);\n              if (iVar3 < Number) {\n                iVar3 = get_debug_level(&DAT_00118d20, Number);\n                uVar4 = __pkg_root;\n                uVar13 = _ut_buf_int2str;\n                pcVar2 = __km_log_func;\n                if ((-Number < iVar3) && (_dprint_crit == Number)) {\n                  <span class=\"supfact\">__llevel_10</span> = -Number;\n                  _dprint_crit = Number;\n                  if (_log_stderr == Number) {\n                    if (_log_prefix_val == (undefined8 *)Number) {\n                      uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                      (*pcVar2)(uVar7 | uVar4, String, uVar13, String, String);\n                    } else {\n                      uVar14 = *_log_prefix_val;\n                      uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                      uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                      (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14, uVar13,\n                                String, String);\n                    }\n                  } else {\n                    if (_log_color != Number) {\n                      dprint_color(Number);\n                    }\n                    if (_log_prefix_val == (undefined8 *)Number) {\n                      uVar13 =\n                          *(undefined8 *)(&log_level_info +\n                                          (long)(<span class=\"supfact\">__llevel_10</span> +\n                                                 Number) *\n                                              Number);\n                      uVar4 = my_pid();\n                      fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar4,\n                              uVar13, String, String);\n                    } else {\n                      uVar13 =\n                          *(undefined8 *)(&log_level_info +\n                                          (long)(<span class=\"supfact\">__llevel_10</span> +\n                                                 Number) *\n                                              Number);\n                      uVar4 = my_pid();\n                      fprintf(_stderr, String,\n                              (ulong) * (uint *)(_log_prefix_val + Number),\n                              *_log_prefix_val, (ulong)_process_no,\n                              (ulong)uVar4, uVar13, String, String);\n                    }\n                    if (_log_color != Number) {\n                      dprint_color_reset();\n                    }\n                  }\n                  _dprint_crit = _dprint_crit + -Number;\n                }\n              } else {\n                <span class=\"supfact\">boundary_string</span> = generate_string(Number);\n                while (<span class=\"supfact\">uri_list_head</span> != (uri_link_t *)Number) {\n                  <span class=\"supfact\">last</span> = <span class=\"supfact\">uri_list_head</span>;\n                  iVar3 = add_resource(<span class=\"supfact\">uri_list_head</span>->uri,\n                                       <span class=\"supfact\">list_node</span>,\n                                       <span class=\"supfact\">boundary_string</span>,\n                                       <span class=\"supfact\">result</span>,\n                                       &<span class=\"supfact\">len_est</span>);\n                  if (iVar3 < Number) {\n                    <span class=\"supfact\">resource_added</span> = Number;\n                    <span class=\"supfact\">uri_list_head</span> =\n                        <span class=\"supfact\">uri_list_head</span>->next;\n                    if (<span class=\"supfact\">last</span>->uri != (char *)Number) {\n                      (*_str_content_type_col)(\n                          _sprintf, <span class=\"supfact\">last</span>->uri, String, String,\n                          Number, &DAT_00118d20);\n                    }\n                    (*_str_content_type_col)(_sprintf, <span class=\"supfact\">last</span>,\n                                             String, String, Number,\n                                             &DAT_00118d20);\n                  } else if (<span class=\"supfact\">resource_added</span> == Number) {\n                    iVar5 = get_debug_level(&DAT_00118d20, Number);\n                    iVar3 = <span class=\"supfact\">len_est</span>;\n                    uVar7 = _rls_max_notify_body_len;\n                    uVar4 = __pkg_root;\n                    uVar13 = _ut_buf_int2str;\n                    pcVar2 = __km_log_func;\n                    if ((-Number < iVar5) && (_dprint_crit == Number)) {\n                      <span class=\"supfact\">__llevel_11</span> = -Number;\n                      _dprint_crit = Number;\n                      if (_log_stderr == Number) {\n                        if (_log_prefix_val == (undefined8 *)Number) {\n                          uVar6 = get_debug_facility(&DAT_00118d20, Number);\n                          (*pcVar2)(uVar6 | uVar4, String, uVar13, String,\n                                    String, iVar3, uVar7);\n                        } else {\n                          uVar13 = *_log_prefix_val;\n                          uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                          uVar14 = _ut_buf_int2str;\n                          uVar6 = get_debug_facility(&DAT_00118d20, Number);\n                          (*pcVar2)(uVar6 | uVar4, String, uVar1, uVar13,\n                                    uVar14, String, String, iVar3, uVar7);\n                        }\n                      } else {\n                        if (_log_color != Number) {\n                          dprint_color(Number);\n                        }\n                        if (_log_prefix_val == (undefined8 *)Number) {\n                          <span class=\"supfact\">uVar12</span> =\n                              (ulong)_rls_max_notify_body_len;\n                          <span class=\"supfact\">uVar11</span> =\n                              (ulong)(uint)<span class=\"supfact\">len_est</span>;\n                          uVar13 = *(\n                              undefined8 *)(&log_level_info +\n                                            (long)(<span class=\"supfact\">__llevel_11</span> +\n                                                   Number) *\n                                                Number);\n                          uVar4 = my_pid();\n                          fprintf(_stderr, String, (ulong)_process_no,\n                                  (ulong)uVar4, uVar13, String, String,\n                                  <span class=\"supfact\">uVar11</span>,\n                                  <span class=\"supfact\">uVar12</span>);\n                        } else {\n                          <span class=\"supfact\">uVar12</span> =\n                              (ulong)_rls_max_notify_body_len;\n                          <span class=\"supfact\">uVar11</span> =\n                              (ulong)(uint)<span class=\"supfact\">len_est</span>;\n                          uVar13 = *(\n                              undefined8 *)(&log_level_info +\n                                            (long)(<span class=\"supfact\">__llevel_11</span> +\n                                                   Number) *\n                                                Number);\n                          uVar4 = my_pid();\n                          fprintf(_stderr, String,\n                                  (ulong) * (uint *)(_log_prefix_val + Number),\n                                  *_log_prefix_val, (ulong)_process_no,\n                                  (ulong)uVar4, uVar13, String, String,\n                                  <span class=\"supfact\">uVar11</span>,\n                                  <span class=\"supfact\">uVar12</span>);\n                        }\n                        if (_log_color != Number) {\n                          dprint_color_reset();\n                        }\n                      }\n                      _dprint_crit = _dprint_crit + -Number;\n                    }\n                    <span class=\"supfact\">uri_list_head</span> =\n                        <span class=\"supfact\">uri_list_head</span>->next;\n                    if (<span class=\"supfact\">last</span>->uri != (char *)Number) {\n                      (*_str_content_type_col)(\n                          _sprintf, <span class=\"supfact\">last</span>->uri, String, String,\n                          Number, &DAT_00118d20);\n                    }\n                    (*_str_content_type_col)(_sprintf, <span class=\"supfact\">last</span>,\n                                             String, String, Number,\n                                             &DAT_00118d20);\n                  } else {\n                    iVar5 = get_debug_level(&DAT_00118d20, Number);\n                    iVar3 = <span class=\"supfact\">len_est</span>;\n                    uVar7 = _rls_max_notify_body_len;\n                    uVar4 = _str_presence_state_col;\n                    pcVar15 = _str_content_type_col;\n                    pcVar2 = __km_log_func;\n                    if ((Number < iVar5) && (_dprint_crit == Number)) {\n                      <span class=\"supfact\">__llevel_12</span> = Number;\n                      _dprint_crit = Number;\n                      if (_log_stderr == Number) {\n                        if (_log_prefix_val == (undefined8 *)Number) {\n                          uVar6 = get_debug_facility(&DAT_00118d20, Number);\n                          (*pcVar2)(uVar6 | uVar4, String, pcVar15, String,\n                                    String, iVar3, uVar7);\n                        } else {\n                          uVar13 = *_log_prefix_val;\n                          uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                          uVar6 = get_debug_facility(&DAT_00118d20, Number);\n                          (*pcVar2)(uVar6 | uVar4, String, uVar1, uVar13,\n                                    pcVar15, String, String, iVar3, uVar7);\n                        }\n                      } else {\n                        if (_log_color != Number) {\n                          dprint_color(Number);\n                        }\n                        if (_log_prefix_val == (undefined8 *)Number) {\n                          <span class=\"supfact\">uVar12</span> =\n                              (ulong)_rls_max_notify_body_len;\n                          <span class=\"supfact\">uVar11</span> =\n                              (ulong)(uint)<span class=\"supfact\">len_est</span>;\n                          uVar13 = *(\n                              undefined8 *)(&log_level_info +\n                                            (long)(<span class=\"supfact\">__llevel_12</span> +\n                                                   Number) *\n                                                Number);\n                          uVar4 = my_pid();\n                          fprintf(_stderr, String, (ulong)_process_no,\n                                  (ulong)uVar4, uVar13, String, String,\n                                  <span class=\"supfact\">uVar11</span>,\n                                  <span class=\"supfact\">uVar12</span>);\n                        } else {\n                          <span class=\"supfact\">uVar12</span> =\n                              (ulong)_rls_max_notify_body_len;\n                          <span class=\"supfact\">uVar11</span> =\n                              (ulong)(uint)<span class=\"supfact\">len_est</span>;\n                          uVar13 = *(\n                              undefined8 *)(&log_level_info +\n                                            (long)(<span class=\"supfact\">__llevel_12</span> +\n                                                   Number) *\n                                                Number);\n                          uVar4 = my_pid();\n                          fprintf(_stderr, String,\n                                  (ulong) * (uint *)(_log_prefix_val + Number),\n                                  *_log_prefix_val, (ulong)_process_no,\n                                  (ulong)uVar4, uVar13, String, String,\n                                  <span class=\"supfact\">uVar11</span>,\n                                  <span class=\"supfact\">uVar12</span>);\n                        }\n                        if (_log_color != Number) {\n                          dprint_color_reset();\n                        }\n                      }\n                      _dprint_crit = _dprint_crit + -Number;\n                    }\n                    <span class=\"supfact\">rlmi_cont</span> = (str *)(*(code *)CONCAT44(\n                        uRam000000000011f094, content_type_col))(\n                        _sprintf, Number, String, String, Number,\n                        &DAT_00118d20);\n                    if (<span class=\"supfact\">rlmi_cont</span> == (str *)Number) {\n                      iVar3 = get_debug_level(&DAT_00118d20, Number);\n                      uVar4 = __pkg_root;\n                      uVar13 = _ut_buf_int2str;\n                      pcVar2 = __km_log_func;\n                      if ((-Number < iVar3) && (_dprint_crit == Number)) {\n                        <span class=\"supfact\">__llevel_13</span> = -Number;\n                        _dprint_crit = Number;\n                        if (_log_stderr == Number) {\n                          if (_log_prefix_val == (undefined8 *)Number) {\n                            uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                            (*pcVar2)(uVar7 | uVar4, String, uVar13, String,\n                                      String, &DAT_00119613);\n                          } else {\n                            uVar14 = *_log_prefix_val;\n                            uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                            uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                            (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14,\n                                      uVar13, String, String, &DAT_00119613);\n                          }\n                        } else {\n                          if (_log_color != Number) {\n                            dprint_color(Number);\n                          }\n                          if (_log_prefix_val == (undefined8 *)Number) {\n                            uVar13 =\n                                *(undefined8\n                                      *)(&log_level_info +\n                                         (long)(<span class=\"supfact\">__llevel_13</span> +\n                                                Number) *\n                                             Number);\n                            uVar4 = my_pid();\n                            fprintf(_stderr, String, (ulong)_process_no,\n                                    (ulong)uVar4, uVar13, String, String,\n                                    &DAT_00119613);\n                          } else {\n                            uVar13 =\n                                *(undefined8\n                                      *)(&log_level_info +\n                                         (long)(<span class=\"supfact\">__llevel_13</span> +\n                                                Number) *\n                                             Number);\n                            uVar4 = my_pid();\n                            fprintf(_stderr, String,\n                                    (ulong) *\n                                        (uint *)(_log_prefix_val + Number),\n                                    *_log_prefix_val, (ulong)_process_no,\n                                    (ulong)uVar4, uVar13, String, String,\n                                    &DAT_00119613);\n                          }\n                          if (_log_color != Number) {\n                            dprint_color_reset();\n                          }\n                        }\n                        _dprint_crit = _dprint_crit + -Number;\n                      }\n                      goto error;\n                    }\n                    xmlDocDumpFormatMemory(\n                        <span class=\"supfact\">rlmi_body</span>, <span class=\"supfact\">rlmi_cont</span>,\n                        &<span class=\"supfact\">rlmi_cont</span>->len, Number);\n                    xmlFreeDoc(<span class=\"supfact\">rlmi_body</span>);\n                    iVar3 = agg_body_sendn_update(\n                        <span class=\"supfact\">rl_uri</span>, <span class=\"supfact\">boundary_string</span>,\n                        <span class=\"supfact\">rlmi_cont</span>, multipart_body,\n                        <span class=\"supfact\">subs</span>, <span class=\"supfact\">hash_code</span>);\n                    if (iVar3 < Number) {\n                      iVar3 = get_debug_level(&DAT_00118d20, Number);\n                      uVar4 = __pkg_root;\n                      uVar13 = _ut_buf_int2str;\n                      pcVar2 = __km_log_func;\n                      if ((-Number < iVar3) && (_dprint_crit == Number)) {\n                        <span class=\"supfact\">__llevel_14</span> = -Number;\n                        _dprint_crit = Number;\n                        if (_log_stderr == Number) {\n                          if (_log_prefix_val == (undefined8 *)Number) {\n                            uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                            (*pcVar2)(uVar7 | uVar4, String, uVar13, String,\n                                      String);\n                          } else {\n                            uVar14 = *_log_prefix_val;\n                            uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                            uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                            (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14,\n                                      uVar13, String, String);\n                          }\n                        } else {\n                          if (_log_color != Number) {\n                            dprint_color(Number);\n                          }\n                          if (_log_prefix_val == (undefined8 *)Number) {\n                            uVar13 =\n                                *(undefined8\n                                      *)(&log_level_info +\n                                         (long)(<span class=\"supfact\">__llevel_14</span> +\n                                                Number) *\n                                             Number);\n                            uVar4 = my_pid();\n                            fprintf(_stderr, String, (ulong)_process_no,\n                                    (ulong)uVar4, uVar13, String, String);\n                          } else {\n                            uVar13 =\n                                *(undefined8\n                                      *)(&log_level_info +\n                                         (long)(<span class=\"supfact\">__llevel_14</span> +\n                                                Number) *\n                                             Number);\n                            uVar4 = my_pid();\n                            fprintf(_stderr, String,\n                                    (ulong) *\n                                        (uint *)(_log_prefix_val + Number),\n                                    *_log_prefix_val, (ulong)_process_no,\n                                    (ulong)uVar4, uVar13, String, String);\n                          }\n                          if (_log_color != Number) {\n                            dprint_color_reset();\n                          }\n                        }\n                        _dprint_crit = _dprint_crit + -Number;\n                      }\n                      goto error;\n                    }\n                    <span class=\"supfact\">len_est</span> = create_empty_rlmi_doc(\n                        &<span class=\"supfact\">rlmi_body</span>, &<span class=\"supfact\">list_node</span>,\n                        <span class=\"supfact\">rl_uri</span>, <span class=\"supfact\">subs</span>->version,\n                        Number);\n                    xmlDocSetRootElement(<span class=\"supfact\">rlmi_body</span>,\n                                         <span class=\"supfact\">list_node</span>);\n                    multipart_body->len = Number;\n                    <span class=\"supfact\">resource_added</span> = Number;\n                  }\n                }\n                <span class=\"supfact\">rlmi_cont</span> = (str *)(*(code *)CONCAT44(\n                    uRam000000000011f094, content_type_col))(\n                    _sprintf, Number, String, String, Number, &DAT_00118d20);\n                if (<span class=\"supfact\">rlmi_cont</span> == (str *)Number) {\n                  iVar3 = get_debug_level(&DAT_00118d20, Number);\n                  uVar4 = __pkg_root;\n                  uVar13 = _ut_buf_int2str;\n                  pcVar2 = __km_log_func;\n                  if ((-Number < iVar3) && (_dprint_crit == Number)) {\n                    <span class=\"supfact\">__llevel_15</span> = -Number;\n                    _dprint_crit = Number;\n                    if (_log_stderr == Number) {\n                      if (_log_prefix_val == (undefined8 *)Number) {\n                        uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                        (*pcVar2)(uVar7 | uVar4, String, uVar13, String, String,\n                                  &DAT_00119613);\n                      } else {\n                        uVar14 = *_log_prefix_val;\n                        uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                        uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                        (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14, uVar13,\n                                  String, String, &DAT_00119613);\n                      }\n                    } else {\n                      if (_log_color != Number) {\n                        dprint_color(Number);\n                      }\n                      if (_log_prefix_val == (undefined8 *)Number) {\n                        uVar13 =\n                            *(undefined8 *)(&log_level_info +\n                                            (long)(<span class=\"supfact\">__llevel_15</span> +\n                                                   Number) *\n                                                Number);\n                        uVar4 = my_pid();\n                        fprintf(_stderr, String, (ulong)_process_no,\n                                (ulong)uVar4, uVar13, String, String,\n                                &DAT_00119613);\n                      } else {\n                        uVar13 =\n                            *(undefined8 *)(&log_level_info +\n                                            (long)(<span class=\"supfact\">__llevel_15</span> +\n                                                   Number) *\n                                                Number);\n                        uVar4 = my_pid();\n                        fprintf(_stderr, String,\n                                (ulong) * (uint *)(_log_prefix_val + Number),\n                                *_log_prefix_val, (ulong)_process_no,\n                                (ulong)uVar4, uVar13, String, String,\n                                &DAT_00119613);\n                      }\n                      if (_log_color != Number) {\n                        dprint_color_reset();\n                      }\n                    }\n                    _dprint_crit = _dprint_crit + -Number;\n                  }\n                } else {\n                  xmlDocDumpFormatMemory(<span class=\"supfact\">rlmi_body</span>,\n                                         <span class=\"supfact\">rlmi_cont</span>,\n                                         &<span class=\"supfact\">rlmi_cont</span>->len,\n                                         _rls_max_notify_body_len == Number);\n                  xmlFreeDoc(<span class=\"supfact\">rlmi_body</span>);\n                  iVar3 = agg_body_sendn_update(\n                      <span class=\"supfact\">rl_uri</span>, <span class=\"supfact\">boundary_string</span>,\n                      <span class=\"supfact\">rlmi_cont</span>, multipart_body,\n                      <span class=\"supfact\">subs</span>, <span class=\"supfact\">hash_code</span>);\n                  if (-Number < iVar3) {\n                    (*_xmlFree)(<span class=\"supfact\">rlmi_cont</span>->s);\n                    (*_str_content_type_col)(_sprintf,\n                                             <span class=\"supfact\">rlmi_cont</span>, String,\n                                             String, Number, &DAT_00118d20);\n                    if (multipart_body != (str *)Number) {\n                      if (multipart_body->s != (char *)Number) {\n                        (*_str_content_type_col)(_sprintf, multipart_body->s,\n                                                 String, String, Number,\n                                                 &DAT_00118d20);\n                      }\n                      (*_str_content_type_col)(_sprintf, multipart_body, String,\n                                               String, Number, &DAT_00118d20);\n                    }\n                    multipart_body_size = Number;\n                    (*_str_content_type_col)(\n                        _sprintf, <span class=\"supfact\">rlsubs_did</span>.s, String, String,\n                        Number, &DAT_00118d20);\n                    (*(code *)_rlpres_db)(_rlpres_db, <span class=\"supfact\">result</span>);\n                    return Number;\n                  }\n                  iVar3 = get_debug_level(&DAT_00118d20, Number);\n                  uVar4 = __pkg_root;\n                  uVar13 = _ut_buf_int2str;\n                  pcVar2 = __km_log_func;\n                  if ((-Number < iVar3) && (_dprint_crit == Number)) {\n                    <span class=\"supfact\">__llevel_16</span> = -Number;\n                    _dprint_crit = Number;\n                    if (_log_stderr == Number) {\n                      if (_log_prefix_val == (undefined8 *)Number) {\n                        uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                        (*pcVar2)(uVar7 | uVar4, String, uVar13, String,\n                                  String);\n                      } else {\n                        uVar14 = *_log_prefix_val;\n                        uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n                        uVar7 = get_debug_facility(&DAT_00118d20, Number);\n                        (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14, uVar13,\n                                  String, String);\n                      }\n                    } else {\n                      if (_log_color != Number) {\n                        dprint_color(Number);\n                      }\n                      if (_log_prefix_val == (undefined8 *)Number) {\n                        uVar13 =\n                            *(undefined8 *)(&log_level_info +\n                                            (long)(<span class=\"supfact\">__llevel_16</span> +\n                                                   Number) *\n                                                Number);\n                        uVar4 = my_pid();\n                        fprintf(_stderr, String, (ulong)_process_no,\n                                (ulong)uVar4, uVar13, String, String);\n                      } else {\n                        uVar13 =\n                            *(undefined8 *)(&log_level_info +\n                                            (long)(<span class=\"supfact\">__llevel_16</span> +\n                                                   Number) *\n                                                Number);\n                        uVar4 = my_pid();\n                        fprintf(_stderr, String,\n                                (ulong) * (uint *)(_log_prefix_val + Number),\n                                *_log_prefix_val, (ulong)_process_no,\n                                (ulong)uVar4, uVar13, String, String);\n                      }\n                      if (_log_color != Number) {\n                        dprint_color_reset();\n                      }\n                    }\n                    _dprint_crit = _dprint_crit + -Number;\n                  }\n                }\n              }\n            }\n          }\n        }\n      } else {\n        iVar3 = get_debug_level(&DAT_00118d20, Number);\n        uVar4 = __pkg_root;\n        uVar13 = _ut_buf_int2str;\n        pcVar2 = __km_log_func;\n        if ((-Number < iVar3) && (_dprint_crit == Number)) {\n          <span class=\"supfact\">__llevel_6</span> = -Number;\n          _dprint_crit = Number;\n          if (_log_stderr == Number) {\n            if (_log_prefix_val == (undefined8 *)Number) {\n              uVar7 = get_debug_facility(&DAT_00118d20, Number);\n              (*pcVar2)(uVar7 | uVar4, String, uVar13, String, String);\n            } else {\n              uVar14 = *_log_prefix_val;\n              uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n              uVar7 = get_debug_facility(&DAT_00118d20, Number);\n              (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14, uVar13, String,\n                        String);\n            }\n          } else {\n            if (_log_color != Number) {\n              dprint_color(Number);\n            }\n            if (_log_prefix_val == (undefined8 *)Number) {\n              uVar13 =\n                  *(undefined8 *)(&log_level_info +\n                                  (long)(<span class=\"supfact\">__llevel_6</span> + Number) *\n                                      Number);\n              uVar4 = my_pid();\n              fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar4, uVar13,\n                      String, String);\n            } else {\n              uVar13 =\n                  *(undefined8 *)(&log_level_info +\n                                  (long)(<span class=\"supfact\">__llevel_6</span> + Number) *\n                                      Number);\n              uVar4 = my_pid();\n              fprintf(_stderr, String,\n                      (ulong) * (uint *)(_log_prefix_val + Number),\n                      *_log_prefix_val, (ulong)_process_no, (ulong)uVar4,\n                      uVar13, String, String);\n            }\n            if (_log_color != Number) {\n              dprint_color_reset();\n            }\n          }\n          _dprint_crit = _dprint_crit + -Number;\n        }\n      }\n    }\n  }\nerror:\n  if (<span class=\"supfact\">rlmi_cont</span> != (str *)Number) {\n    if (<span class=\"supfact\">rlmi_cont</span>->s != (char *)Number) {\n      (*_xmlFree)(<span class=\"supfact\">rlmi_cont</span>->s);\n    }\n    (*_str_content_type_col)(_sprintf, <span class=\"supfact\">rlmi_cont</span>, String,\n                             String, Number, &DAT_00118d20);\n  }\n  if (multipart_body != (str *)Number) {\n    if (multipart_body->s != (char *)Number) {\n      (*_str_content_type_col)(_sprintf, multipart_body->s, String, String,\n                               Number, &DAT_00118d20);\n    }\n    (*_str_content_type_col)(_sprintf, multipart_body, String, String, Number,\n                             &DAT_00118d20);\n  }\n  multipart_body_size = Number;\n  if (<span class=\"supfact\">result</span> != (db1_res_t *)Number) {\n    (*(code *)_rlpres_db)(_rlpres_db, <span class=\"supfact\">result</span>);\n  }\n  if (<span class=\"supfact\">rlsubs_did</span>.s != (char *)Number) {\n    (*_str_content_type_col)(_sprintf, <span class=\"supfact\">rlsubs_did</span>.s, String,\n                             String, Number, &DAT_00118d20);\n  }\n  if ((((_dbmode == Number) && (_strncmp != (code *)Number)) &&\n       (iVar3 = (*_strncmp)(_rlpres_db), iVar3 < Number)) &&\n      ((iVar3 = get_debug_level(&DAT_00118d20, Number), uVar4 = __pkg_root,\n        uVar13 = _ut_buf_int2str, pcVar2 = __km_log_func,\n        -Number < iVar3 && (_dprint_crit == Number)))) {\n    <span class=\"supfact\">__llevel_17</span> = -Number;\n    _dprint_crit = Number;\n    if (_log_stderr == Number) {\n      if (_log_prefix_val == (undefined8 *)Number) {\n        uVar7 = get_debug_facility(&DAT_00118d20, Number);\n        (*pcVar2)(uVar7 | uVar4, String, uVar13, String, String);\n      } else {\n        uVar14 = *_log_prefix_val;\n        uVar1 = *(undefined4 *)(_log_prefix_val + Number);\n        uVar7 = get_debug_facility(&DAT_00118d20, Number);\n        (*pcVar2)(uVar7 | uVar4, String, uVar1, uVar14, uVar13, String, String);\n      }\n    } else {\n      if (_log_color != Number) {\n        dprint_color(Number);\n      }\n      if (_log_prefix_val == (undefined8 *)Number) {\n        uVar13 = *(undefined8 *)(&log_level_info +\n                                 (long)(<span class=\"supfact\">__llevel_17</span> + Number) *\n                                     Number);\n        uVar4 = my_pid();\n        fprintf(_stderr, String, (ulong)_process_no, (ulong)uVar4, uVar13,\n                String, String);\n      } else {\n        uVar13 = *(undefined8 *)(&log_level_info +\n                                 (long)(<span class=\"supfact\">__llevel_17</span> + Number) *\n                                     Number);\n        uVar4 = my_pid();\n        fprintf(_stderr, String, (ulong) * (uint *)(_log_prefix_val + Number),\n                *_log_prefix_val, (ulong)_process_no, (ulong)uVar4, uVar13,\n                String, String);\n      }\n      if (_log_color != Number) {\n        dprint_color_reset();\n      }\n    }\n    _dprint_crit = _dprint_crit + -Number;\n  }\n  return -Number;\n}", "var": [{"name": "param_1", "type": "dlg_cell * *", "pred_name": "dlg", "ref_name": "subs", "ref_type": "subs_t * *"}, {"name": "param_2", "type": "str * *", "pred_name": "hdrs", "ref_name": "rl_node", "ref_type": "xmlNodePtr"}, {"name": "param_3", "type": "str * *", "pred_name": "__unk__", "ref_name": "rl_uri", "ref_type": "str * *"}, {"name": "param_4", "type": "int", "pred_name": "side", "ref_name": "hash_code", "ref_type": "uint"}, {"name": "uVar13", "type": "disappear", "pred_name": "", "ref_name": "uVar11", "ref_type": "ulong"}, {"name": "uVar14", "type": "disappear", "pred_name": "", "ref_name": "uVar12", "ref_type": "ulong"}, {"name": "local_170", "type": "str * *", "pred_name": "__unk__", "ref_name": "param", "ref_type": "res_param_t"}, {"name": "local_164", "type": "int", "pred_name": "__unk__", "ref_name": "len_est", "ref_type": "int"}, {"name": "local_160", "type": "str * *", "pred_name": "__unk__", "ref_name": "uri_list_head", "ref_type": "uri_link_t * *"}, {"name": "local_158", "type": "str * *", "pred_name": "__unk__", "ref_name": "rlsubs_did", "ref_type": "str"}, {"name": "local_150", "type": "int", "pred_name": "__unk__", "ref_name": "", "ref_type": "disappear"}, {"name": "uStack_14c", "type": "int", "pred_name": "__unk__", "ref_name": "", "ref_type": "disappear"}, {"name": "local_140", "type": "str * *", "pred_name": "__unk__", "ref_name": "result", "ref_type": "db1_res_t * *"}, {"name": "local_138", "type": "int", "pred_name": "__unk__", "ref_name": "update_vals", "ref_type": "db_val_t[1][1]"}, {"name": "local_134", "type": "int", "pred_name": "__unk__", "ref_name": "", "ref_type": "disappear"}, {"name": "local_128", "type": "int", "pred_name": "__unk__", "ref_name": "", "ref_type": "disappear"}, {"name": "local_118", "type": "int", "pred_name": "__unk__", "ref_name": "query_vals", "ref_type": "db_val_t[1][1]"}, {"name": "local_114", "type": "int", "pred_name": "__unk__", "ref_name": "", "ref_type": "disappear"}, {"name": "local_108", "type": "str", "pred_name": "__unk__", "ref_name": "", "ref_type": "disappear"}, {"name": "local_100", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_f8", "type": "__unk__", "pred_name": "__unk__", "ref_name": "result_cols", "ref_type": "db_key_t[5][5]"}, {"name": "local_c8", "type": "str", "pred_name": "__unk__", "ref_name": "update_cols", "ref_type": "db_key_t[1][1]"}, {"name": "local_c0", "type": "str * *", "pred_name": "__unk__", "ref_name": "query_cols", "ref_type": "db_key_t[1][1]"}, {"name": "local_b8", "type": "str * *", "pred_name": "__unk__", "ref_name": "list_node", "ref_type": "xmlNodePtr"}, {"name": "local_b0", "type": "str * *", "pred_name": "__unk__", "ref_name": "rlmi_body", "ref_type": "xmlDocPtr"}, {"name": "local_a8", "type": "int", "pred_name": "__llevel", "ref_name": "__llevel_17", "ref_type": "int"}, {"name": "local_a4", "type": "int", "pred_name": "__llevel_1", "ref_name": "__llevel_1", "ref_type": "int"}, {"name": "local_a0", "type": "int", "pred_name": "__llevel_2", "ref_name": "__llevel_2", "ref_type": "int"}, {"name": "local_9c", "type": "int", "pred_name": "__llevel_5", "ref_name": "__llevel_4", "ref_type": "int"}, {"name": "local_98", "type": "int", "pred_name": "__llevel_6", "ref_name": "__llevel_5", "ref_type": "int"}, {"name": "local_94", "type": "int", "pred_name": "__llevel_7", "ref_name": "__llevel_8", "ref_type": "int"}, {"name": "local_90", "type": "int", "pred_name": "__llevel_8", "ref_name": "__llevel_9", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "rajivr", "repo_name": "libtock-c", "path": "rajivr/libtock-c/809a2aaa838f84348832342f25d232042f4d224958c0e4bd93d70af4a7e0c3e7", "path_in_repo": "rajivr/libtock-c/libc++/gcc-6.2.0-out/build-x86_64-linux-gnu/libiberty/hashtab.o", "objdump": "0000000000000a70 <htab_find_slot>:\n a70:\t41 55                \tpush   %r13\n a72:\t41 89 d5             \tmov    %edx,%r13d\n a75:\t41 54                \tpush   %r12\n a77:\t49 89 f4             \tmov    %rsi,%r12\n a7a:\t55                   \tpush   %rbp\n a7b:\t48 89 fd             \tmov    %rdi,%rbp\n a7e:\t48 89 f7             \tmov    %rsi,%rdi\n a81:\tff 55 00             \tcall   *0x0(%rbp)\n a84:\t44 89 e9             \tmov    %r13d,%ecx\n a87:\t4c 89 e6             \tmov    %r12,%rsi\n a8a:\t48 89 ef             \tmov    %rbp,%rdi\n a8d:\t89 c2                \tmov    %eax,%edx\n a8f:\t5d                   \tpop    %rbp\n a90:\t41 5c                \tpop    %r12\n a92:\t41 5d                \tpop    %r13\n a94:\te9 c7 fd ff ff       \tjmp    860 <htab_find_slot_with_hash>\n a99:\t0f 1f 80 00 00 00 00 \tnopl   0x0(%rax)", "code_s": "void htab_find_slot(code **<span class=\"supfact\">param_1</span>,\n                    undefined8 <span class=\"supfact\">param_2</span>,\n                    undefined4 <span class=\"supfact\">param_3</span>) {\n  undefined4 <span class=\"supfact\">uVar1</span>;\n  <span class=\"supfact\">uVar1</span> = (**<span class=\"supfact\">param_1</span>)(<span class=\"supfact\">param_2</span>);\n  htab_find_slot_with_hash(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n                           <span class=\"supfact\">uVar1</span>, <span class=\"supfact\">param_3</span>);\n  return;\n}", "code_t": "void **htab_find_slot(htab_t <span class=\"supfact\">htab</span>,\n                      void *<span class=\"supfact\">element</span>,\n                      insert_option <span class=\"supfact\">insert</span>) {\n  hashval_t <span class=\"supfact\">hash</span>;\n  void **ppvVar1;\n  <span class=\"supfact\">hash</span> =\n      (*<span class=\"supfact\">htab</span>->hash_f)(<span class=\"supfact\">element</span>);\n  ppvVar1 =\n      htab_find_slot_with_hash(<span class=\"supfact\">htab</span>, <span class=\"supfact\">element</span>,\n                               <span class=\"supfact\">hash</span>, <span class=\"supfact\">insert</span>);\n  return ppvVar1;\n}", "var": [{"name": "param_1", "type": "htab_t", "pred_name": "htab", "ref_name": "htab", "ref_type": "htab_t"}, {"name": "param_2", "type": "void * *", "pred_name": "element", "ref_name": "element", "ref_type": "void * *"}, {"name": "param_3", "type": "insert_option", "pred_name": "insert", "ref_name": "insert", "ref_type": "insert_option"}, {"name": "uVar1", "type": "hashval_t", "pred_name": "hash", "ref_name": "hash", "ref_type": "hashval_t"}], "body_in_train": true}, {"repo_owner": "neuza-git", "repo_name": "21-42", "path": "neuza-git/21-42/0d42755e1b670fbad8230703d0e32a8dff1b1292b02f2fd814de2f9c3113a674", "path_in_repo": "neuza-git/21-42/ftprintf/obj/ft_printf.o", "objdump": "00000000000001a0 <ft_free>:\n 1a0:\t55                   \tpush   %rbp\n 1a1:\t48 89 e5             \tmov    %rsp,%rbp\n 1a4:\t48 83 ec 20          \tsub    $0x20,%rsp\n 1a8:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n 1ac:\teb 2b                \tjmp    1d9 <ft_free+0x39>\n 1ae:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 1b2:\t48 8b 80 08 10 00 00 \tmov    0x1008(%rax),%rax\n 1b9:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 1bd:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 1c1:\t48 89 c7             \tmov    %rax,%rdi\n 1c4:\te8 00 00 00 00       \tcall   1c9 <ft_free+0x29>\n 1c9:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n 1d0:\t00 \n 1d1:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 1d5:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 1d9:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n 1de:\t75 ce                \tjne    1ae <ft_free+0xe>\n 1e0:\t90                   \tnop\n 1e1:\t90                   \tnop\n 1e2:\tc9                   \tleave  \n 1e3:\tc3                   \tret    ", "code_s": "void ft_free(void *<span class=\"supfact\">param_1</span>) {\n  void *pvVar1;\n  void *<span class=\"supfact\">local_20</span>;\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_1</span>;\n  while (<span class=\"supfact\">local_20</span> != (void *)Number) {\n    pvVar1 = *(void **)((long)<span class=\"supfact\">local_20</span> + Number);\n    free(<span class=\"supfact\">local_20</span>);\n    <span class=\"supfact\">local_20</span> = pvVar1;\n  }\n  return;\n}", "code_t": "void ft_free(t_fulist *<span class=\"supfact\">begin_lst</span>) {\n  s_fulist *psVar1;\n  t_fulist *<span class=\"supfact\">begin_lst</span> - local;\n  t_fulist *lst_nxt;\n  <span class=\"supfact\">begin_lst</span> - local = <span class=\"supfact\">begin_lst</span>;\n  while (<span class=\"supfact\">begin_lst</span> - local != (t_fulist *)Number) {\n    psVar1 = <span class=\"supfact\">begin_lst</span> - local->next;\n    free(<span class=\"supfact\">begin_lst</span> - local);\n    <span class=\"supfact\">begin_lst</span> - local = psVar1;\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "hwa_info * *", "pred_name": "__unk__", "ref_name": "begin_lst", "ref_type": "t_fulist * *"}, {"name": "local_20", "type": "hwa_info * *", "pred_name": "__unk__", "ref_name": "begin_lst-local", "ref_type": "t_fulist * *"}], "body_in_train": false}, {"repo_owner": "amarula", "repo_name": "linux-amarula", "path": "amarula/linux-amarula/1b75e04e8484156fee0f4de96b710b7304e4d18c66349efad22a5321527fd659", "path_in_repo": "amarula/linux-amarula/tools/power/cpupower/cpupower", "objdump": "", "code_s": "int sched_getcpu(void) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_sched_getcpu_00414288)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int sched_getcpu(void) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_sched_getcpu_00414288)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "robots", "repo_name": "qemu", "path": "robots/qemu/7835f18f98190bbc92c2732d35d1c04dd6a6496cf5867073ddd097a7952cf915", "path_in_repo": "robots/qemu//cris-linux-user/tcg/tcg.o", "objdump": "0000000000003b93 <tcg_prologue_init>:\n    3b93:\t55                   \tpush   %rbp\n    3b94:\t48 89 e5             \tmov    %rsp,%rbp\n    3b97:\t48 83 ec 20          \tsub    $0x20,%rsp\n    3b9b:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    3b9f:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    3ba6:\t00 00 \n    3ba8:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    3bac:\t31 c0                \txor    %eax,%eax\n    3bae:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3bb2:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 3bb9 <tcg_prologue_init+0x26>\n    3bb9:\t48 89 50 50          \tmov    %rdx,0x50(%rax)\n    3bbd:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3bc1:\t48 8b 50 50          \tmov    0x50(%rax),%rdx\n    3bc5:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3bc9:\t48 89 90 e0 00 00 00 \tmov    %rdx,0xe0(%rax)\n    3bd0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3bd4:\t48 89 c7             \tmov    %rax,%rdi\n    3bd7:\te8 d5 f9 ff ff       \tcall   35b1 <tcg_target_qemu_prologue>\n    3bdc:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3be0:\t48 8b 80 e0 00 00 00 \tmov    0xe0(%rax),%rax\n    3be7:\t48 89 c2             \tmov    %rax,%rdx\n    3bea:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3bee:\t48 8b 40 50          \tmov    0x50(%rax),%rax\n    3bf2:\t48 89 d6             \tmov    %rdx,%rsi\n    3bf5:\t48 89 c7             \tmov    %rax,%rdi\n    3bf8:\te8 03 c4 ff ff       \tcall   0 <flush_icache_range>\n    3bfd:\t90                   \tnop\n    3bfe:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    3c02:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    3c09:\t00 00 \n    3c0b:\t74 05                \tje     3c12 <tcg_prologue_init+0x7f>\n    3c0d:\te8 00 00 00 00       \tcall   3c12 <tcg_prologue_init+0x7f>\n    3c12:\tc9                   \tleave  \n    3c13:\tc3                   \tret    ", "code_s": "void tcg_prologue_init(long <span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  *(undefined **)(<span class=\"supfact\">param_1</span> + Number) = &code_gen_prologue;\n  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) =\n      *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n  FUN_001035b1(<span class=\"supfact\">param_1</span>);\n  FUN_00100000(*(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n               *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "code_t": "void tcg_prologue_init(TCGContext *<span class=\"supfact\">s</span>) {\n  long lVar1;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  TCGContext *<span class=\"supfact\">s</span> - local;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">s</span>->code_buf = &code_gen_prologue;\n  <span class=\"supfact\">s</span>->code_ptr = <span class=\"supfact\">s</span>->code_buf;\n  tcg_target_qemu_prologue(<span class=\"supfact\">s</span>);\n  flush_icache_range((ulong)<span class=\"supfact\">s</span>->code_buf,\n                     (ulong)<span class=\"supfact\">s</span>->code_ptr);\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "TCGContext * *", "pred_name": "s", "ref_name": "s", "ref_type": "TCGContext * *"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": true}, {"repo_owner": "bodiroga", "repo_name": "VEV", "path": "bodiroga/VEV/f986bc5802a8d4209c2de09bb09fe10ba6ae34b8b4505f397526b398828bda1a", "path_in_repo": "bodiroga/VEV/practica/Geometry/triangleMesh.o", "objdump": "00000000000019c9 <ApplyTrfmTMesh>:\n    19c9:\t55                   \tpush   %rbp\n    19ca:\t48 89 e5             \tmov    %rsp,%rbp\n    19cd:\t48 83 ec 30          \tsub    $0x30,%rsp\n    19d1:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    19d5:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n    19d9:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    19dd:\t48 89 c7             \tmov    %rax,%rdi\n    19e0:\te8 00 00 00 00       \tcall   19e5 <ApplyTrfmTMesh+0x1c>\n    19e5:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n    19e8:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    19ef:\teb 3d                \tjmp    1a2e <ApplyTrfmTMesh+0x65>\n    19f1:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    19f4:\t48 63 d0             \tmovslq %eax,%rdx\n    19f7:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    19fb:\t48 89 d6             \tmov    %rdx,%rsi\n    19fe:\t48 89 c7             \tmov    %rax,%rdi\n    1a01:\te8 00 00 00 00       \tcall   1a06 <ApplyTrfmTMesh+0x3d>\n    1a06:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    1a0a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1a0e:\t48 8d 48 08          \tlea    0x8(%rax),%rcx\n    1a12:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1a16:\t48 8d 50 04          \tlea    0x4(%rax),%rdx\n    1a1a:\t48 8b 75 e8          \tmov    -0x18(%rbp),%rsi\n    1a1e:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    1a22:\t48 89 c7             \tmov    %rax,%rdi\n    1a25:\te8 00 00 00 00       \tcall   1a2a <ApplyTrfmTMesh+0x61>\n    1a2a:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    1a2e:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    1a31:\t3b 45 f8             \tcmp    -0x8(%rbp),%eax\n    1a34:\t7c bb                \tjl     19f1 <ApplyTrfmTMesh+0x28>\n    1a36:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1a3a:\t48 89 c7             \tmov    %rax,%rdi\n    1a3d:\te8 00 00 00 00       \tcall   1a42 <ApplyTrfmTMesh+0x79>\n    1a42:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    1a45:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    1a4c:\teb 3d                \tjmp    1a8b <ApplyTrfmTMesh+0xc2>\n    1a4e:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    1a51:\t48 63 d0             \tmovslq %eax,%rdx\n    1a54:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1a58:\t48 89 d6             \tmov    %rdx,%rsi\n    1a5b:\t48 89 c7             \tmov    %rax,%rdi\n    1a5e:\te8 00 00 00 00       \tcall   1a63 <ApplyTrfmTMesh+0x9a>\n    1a63:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    1a67:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1a6b:\t48 8d 48 08          \tlea    0x8(%rax),%rcx\n    1a6f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1a73:\t48 8d 50 04          \tlea    0x4(%rax),%rdx\n    1a77:\t48 8b 75 e8          \tmov    -0x18(%rbp),%rsi\n    1a7b:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    1a7f:\t48 89 c7             \tmov    %rax,%rdi\n    1a82:\te8 00 00 00 00       \tcall   1a87 <ApplyTrfmTMesh+0xbe>\n    1a87:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    1a8b:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    1a8e:\t3b 45 f4             \tcmp    -0xc(%rbp),%eax\n    1a91:\t7c bb                \tjl     1a4e <ApplyTrfmTMesh+0x85>\n    1a93:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1a97:\t48 89 c7             \tmov    %rax,%rdi\n    1a9a:\te8 21 f7 ff ff       \tcall   11c0 <renormalizeN>\n    1a9f:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1aa3:\tc7 40 50 00 00 00 00 \tmovl   $0x0,0x50(%rax)\n    1aaa:\t90                   \tnop\n    1aab:\tc9                   \tleave  \n    1aac:\tc3                   \tret    ", "code_s": "void ApplyTrfmTMesh(long <span class=\"supfact\">param_1</span>,\n                    undefined8 <span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  long <span class=\"supfact\">lVar2</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">iVar1</span> = NumVerticesTMesh(<span class=\"supfact\">param_1</span>);\n  for (<span class=\"supfact\">local_c</span> = Number;\n       <span class=\"supfact\">local_c</span> < <span class=\"supfact\">iVar1</span>;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    <span class=\"supfact\">lVar2</span> =\n        GetVertexTMesh(<span class=\"supfact\">param_1</span>, (long)<span class=\"supfact\">local_c</span>);\n    Trfm3DTransformPoint(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">lVar2</span>,\n                         <span class=\"supfact\">lVar2</span> + Number,\n                         <span class=\"supfact\">lVar2</span> + Number);\n  }\n  <span class=\"supfact\">iVar1</span> = NumNormalsTMesh(<span class=\"supfact\">param_1</span>);\n  for (<span class=\"supfact\">local_c</span> = Number;\n       <span class=\"supfact\">local_c</span> < <span class=\"supfact\">iVar1</span>;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    <span class=\"supfact\">lVar2</span> =\n        GetNormalTMesh(<span class=\"supfact\">param_1</span>, (long)<span class=\"supfact\">local_c</span>);\n    TransformNormalTrfm3D(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">lVar2</span>,\n                          <span class=\"supfact\">lVar2</span> + Number,\n                          <span class=\"supfact\">lVar2</span> + Number);\n  }\n  FUN_001011c0(<span class=\"supfact\">param_1</span>);\n  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  return;\n}", "code_t": "void ApplyTrfmTMesh(TriangleMesh *<span class=\"supfact\">mesh</span>,\n                    trfm3D *<span class=\"supfact\">trfm</span>) {\n  size_t sVar1;\n  float *pfVar2;\n  trfm3D *<span class=\"supfact\">trfm</span> - local;\n  TriangleMesh *<span class=\"supfact\">mesh</span> - local;\n  float *v;\n  int normals_n;\n  int points_n;\n  int <span class=\"supfact\">i</span>;\n  sVar1 = NumVerticesTMesh(<span class=\"supfact\">mesh</span>);\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < (int)sVar1;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    pfVar2 = GetVertexTMesh(<span class=\"supfact\">mesh</span>, (long)<span class=\"supfact\">i</span>);\n    Trfm3DTransformPoint(<span class=\"supfact\">trfm</span>, pfVar2, pfVar2 + Number,\n                         pfVar2 + Number);\n  }\n  sVar1 = NumNormalsTMesh(<span class=\"supfact\">mesh</span>);\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < (int)sVar1;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    pfVar2 = GetNormalTMesh(<span class=\"supfact\">mesh</span>, (long)<span class=\"supfact\">i</span>);\n    TransformNormalTrfm3D(<span class=\"supfact\">trfm</span>, pfVar2, pfVar2 + Number,\n                          pfVar2 + Number);\n  }\n  renormalizeN(<span class=\"supfact\">mesh</span>);\n  <span class=\"supfact\">mesh</span>->vbo_uptodate = Number;\n  return;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "dt", "ref_name": "mesh", "ref_type": "TriangleMesh * *"}, {"name": "param_2", "type": "char * *", "pred_name": "__unk__", "ref_name": "trfm", "ref_type": "trfm3D * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "", "ref_type": "disappear"}, {"name": "lVar2", "type": "long", "pred_name": "lVar2", "ref_name": "", "ref_type": "disappear"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "a1phageek", "repo_name": "kyocera-kr1", "path": "a1phageek/kyocera-kr1/4cb1cfa4b2fbb6502636ec055064a460f16a08e1a373aa30ed72003953836539", "path_in_repo": "a1phageek/kyocera-kr1/KR1/user/samba/source/lib/util_sid.o", "objdump": "0000000000000061 <map_domain_sid_to_name>:\n      61:\t55                   \tpush   %rbp\n      62:\t48 89 e5             \tmov    %rsp,%rbp\n      65:\t48 81 ec a0 00 00 00 \tsub    $0xa0,%rsp\n      6c:\t48 89 bd 68 ff ff ff \tmov    %rdi,-0x98(%rbp)\n      73:\t48 89 b5 60 ff ff ff \tmov    %rsi,-0xa0(%rbp)\n      7a:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n      81:\t48 8b 95 68 ff ff ff \tmov    -0x98(%rbp),%rdx\n      88:\t48 8d 85 70 ff ff ff \tlea    -0x90(%rbp),%rax\n      8f:\t48 89 d6             \tmov    %rdx,%rsi\n      92:\t48 89 c7             \tmov    %rax,%rdi\n      95:\te8 00 00 00 00       \tcall   9a <map_domain_sid_to_name+0x39>\n      9a:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # a0 <map_domain_sid_to_name+0x3f>\n      a0:\t83 f8 04             \tcmp    $0x4,%eax\n      a3:\t7e 39                \tjle    de <map_domain_sid_to_name+0x7d>\n      a5:\tb9 67 00 00 00       \tmov    $0x67,%ecx\n      aa:\tba 00 00 00 00       \tmov    $0x0,%edx\n      af:\tbe 00 00 00 00       \tmov    $0x0,%esi\n      b4:\tbf 05 00 00 00       \tmov    $0x5,%edi\n      b9:\te8 00 00 00 00       \tcall   be <map_domain_sid_to_name+0x5d>\n      be:\t85 c0                \ttest   %eax,%eax\n      c0:\t74 1c                \tje     de <map_domain_sid_to_name+0x7d>\n      c2:\t48 8d 85 70 ff ff ff \tlea    -0x90(%rbp),%rax\n      c9:\t48 89 c6             \tmov    %rax,%rsi\n      cc:\tbf 00 00 00 00       \tmov    $0x0,%edi\n      d1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n      d6:\te8 00 00 00 00       \tcall   db <map_domain_sid_to_name+0x7a>\n      db:\t85 c0                \ttest   %eax,%eax\n      dd:\t90                   \tnop\n      de:\t48 83 bd 60 ff ff ff \tcmpq   $0x0,-0xa0(%rbp)\n      e5:\t00 \n      e6:\t0f 85 30 01 00 00    \tjne    21c <map_domain_sid_to_name+0x1bb>\n      ec:\tb8 00 00 00 00       \tmov    $0x0,%eax\n      f1:\te9 94 01 00 00       \tjmp    28a <map_domain_sid_to_name+0x229>\n      f6:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n      f9:\t48 63 d0             \tmovslq %eax,%rdx\n      fc:\t48 89 d0             \tmov    %rdx,%rax\n      ff:\t48 01 c0             \tadd    %rax,%rax\n     102:\t48 01 d0             \tadd    %rdx,%rax\n     105:\t48 c1 e0 03          \tshl    $0x3,%rax\n     109:\t48 05 00 00 00 00    \tadd    $0x0,%rax\n     10f:\t48 8b 10             \tmov    (%rax),%rdx\n     112:\t48 8d 85 70 ff ff ff \tlea    -0x90(%rbp),%rax\n     119:\t48 89 d6             \tmov    %rdx,%rsi\n     11c:\t48 89 c7             \tmov    %rax,%rdi\n     11f:\te8 00 00 00 00       \tcall   124 <map_domain_sid_to_name+0xc3>\n     124:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 12a <map_domain_sid_to_name+0xc9>\n     12a:\t83 f8 04             \tcmp    $0x4,%eax\n     12d:\t7e 39                \tjle    168 <map_domain_sid_to_name+0x107>\n     12f:\tb9 6e 00 00 00       \tmov    $0x6e,%ecx\n     134:\tba 00 00 00 00       \tmov    $0x0,%edx\n     139:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     13e:\tbf 05 00 00 00       \tmov    $0x5,%edi\n     143:\te8 00 00 00 00       \tcall   148 <map_domain_sid_to_name+0xe7>\n     148:\t85 c0                \ttest   %eax,%eax\n     14a:\t74 1c                \tje     168 <map_domain_sid_to_name+0x107>\n     14c:\t48 8d 85 70 ff ff ff \tlea    -0x90(%rbp),%rax\n     153:\t48 89 c6             \tmov    %rax,%rsi\n     156:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     15b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     160:\te8 00 00 00 00       \tcall   165 <map_domain_sid_to_name+0x104>\n     165:\t85 c0                \ttest   %eax,%eax\n     167:\t90                   \tnop\n     168:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     16b:\t48 63 d0             \tmovslq %eax,%rdx\n     16e:\t48 89 d0             \tmov    %rdx,%rax\n     171:\t48 01 c0             \tadd    %rax,%rax\n     174:\t48 01 d0             \tadd    %rdx,%rax\n     177:\t48 c1 e0 03          \tshl    $0x3,%rax\n     17b:\t48 05 00 00 00 00    \tadd    $0x0,%rax\n     181:\t48 8b 00             \tmov    (%rax),%rax\n     184:\t48 8b 95 68 ff ff ff \tmov    -0x98(%rbp),%rdx\n     18b:\t48 89 d6             \tmov    %rdx,%rsi\n     18e:\t48 89 c7             \tmov    %rax,%rdi\n     191:\te8 00 00 00 00       \tcall   196 <map_domain_sid_to_name+0x135>\n     196:\t85 c0                \ttest   %eax,%eax\n     198:\t74 7e                \tje     218 <map_domain_sid_to_name+0x1b7>\n     19a:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     19d:\t48 63 d0             \tmovslq %eax,%rdx\n     1a0:\t48 89 d0             \tmov    %rdx,%rax\n     1a3:\t48 01 c0             \tadd    %rax,%rax\n     1a6:\t48 01 d0             \tadd    %rdx,%rax\n     1a9:\t48 c1 e0 03          \tshl    $0x3,%rax\n     1ad:\t48 05 00 00 00 00    \tadd    $0x0,%rax\n     1b3:\t48 8b 08             \tmov    (%rax),%rcx\n     1b6:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n     1bd:\tba 7f 00 00 00       \tmov    $0x7f,%edx\n     1c2:\t48 89 ce             \tmov    %rcx,%rsi\n     1c5:\t48 89 c7             \tmov    %rax,%rdi\n     1c8:\te8 00 00 00 00       \tcall   1cd <map_domain_sid_to_name+0x16c>\n     1cd:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1d3 <map_domain_sid_to_name+0x172>\n     1d3:\t83 f8 04             \tcmp    $0x4,%eax\n     1d6:\t7e 39                \tjle    211 <map_domain_sid_to_name+0x1b0>\n     1d8:\tb9 71 00 00 00       \tmov    $0x71,%ecx\n     1dd:\tba 00 00 00 00       \tmov    $0x0,%edx\n     1e2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     1e7:\tbf 05 00 00 00       \tmov    $0x5,%edi\n     1ec:\te8 00 00 00 00       \tcall   1f1 <map_domain_sid_to_name+0x190>\n     1f1:\t85 c0                \ttest   %eax,%eax\n     1f3:\t74 1c                \tje     211 <map_domain_sid_to_name+0x1b0>\n     1f5:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n     1fc:\t48 89 c6             \tmov    %rax,%rsi\n     1ff:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     204:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     209:\te8 00 00 00 00       \tcall   20e <map_domain_sid_to_name+0x1ad>\n     20e:\t85 c0                \ttest   %eax,%eax\n     210:\t90                   \tnop\n     211:\tb8 01 00 00 00       \tmov    $0x1,%eax\n     216:\teb 72                \tjmp    28a <map_domain_sid_to_name+0x229>\n     218:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n     21c:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     21f:\t48 63 d0             \tmovslq %eax,%rdx\n     222:\t48 89 d0             \tmov    %rdx,%rax\n     225:\t48 01 c0             \tadd    %rax,%rax\n     228:\t48 01 d0             \tadd    %rdx,%rax\n     22b:\t48 c1 e0 03          \tshl    $0x3,%rax\n     22f:\t48 05 00 00 00 00    \tadd    $0x0,%rax\n     235:\t48 8b 00             \tmov    (%rax),%rax\n     238:\t48 85 c0             \ttest   %rax,%rax\n     23b:\t0f 85 b5 fe ff ff    \tjne    f6 <map_domain_sid_to_name+0x95>\n     241:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 247 <map_domain_sid_to_name+0x1e6>\n     247:\t83 f8 04             \tcmp    $0x4,%eax\n     24a:\t7e 39                \tjle    285 <map_domain_sid_to_name+0x224>\n     24c:\tb9 77 00 00 00       \tmov    $0x77,%ecx\n     251:\tba 00 00 00 00       \tmov    $0x0,%edx\n     256:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     25b:\tbf 05 00 00 00       \tmov    $0x5,%edi\n     260:\te8 00 00 00 00       \tcall   265 <map_domain_sid_to_name+0x204>\n     265:\t85 c0                \ttest   %eax,%eax\n     267:\t74 1c                \tje     285 <map_domain_sid_to_name+0x224>\n     269:\t48 8d 85 70 ff ff ff \tlea    -0x90(%rbp),%rax\n     270:\t48 89 c6             \tmov    %rax,%rsi\n     273:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     278:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     27d:\te8 00 00 00 00       \tcall   282 <map_domain_sid_to_name+0x221>\n     282:\t85 c0                \ttest   %eax,%eax\n     284:\t90                   \tnop\n     285:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     28a:\tc9                   \tleave  \n     28b:\tc3                   \tret    ", "code_s": "undefined8 map_domain_sid_to_name(undefined8 <span class=\"supfact\">param_1</span>,\n                                  long <span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  undefined <span class=\"supfact\">local_98</span>[Number];\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_c</span> = Number;\n  sid_to_string(<span class=\"supfact\">local_98</span>, <span class=\"supfact\">param_1</span>);\n  if ((Number < _DEBUGLEVEL) &&\n      (<span class=\"supfact\">iVar1</span> = dbghdr(Number, String, String, Number),\n       <span class=\"supfact\">iVar1</span> != Number)) {\n    dbgtext(String, <span class=\"supfact\">local_98</span>);\n  }\n  if (<span class=\"supfact\">param_2</span> != Number) {\n    while ((&PTR_global_sam_sid_00101160)[(long)<span class=\"supfact\">local_c</span> *\n                                          Number] != (undefined *)Number) {\n      sid_to_string(\n          <span class=\"supfact\">local_98</span>,\n          (&PTR_global_sam_sid_00101160)[(long)<span class=\"supfact\">local_c</span> *\n                                         Number]);\n      if ((Number < _DEBUGLEVEL) &&\n          (<span class=\"supfact\">iVar1</span> = dbghdr(Number, String, String, Number),\n           <span class=\"supfact\">iVar1</span> != Number)) {\n        dbgtext(String, <span class=\"supfact\">local_98</span>);\n      }\n      <span class=\"supfact\">iVar1</span> = sid_equal(\n          (&PTR_global_sam_sid_00101160)[(long)<span class=\"supfact\">local_c</span> *\n                                         Number],\n          <span class=\"supfact\">param_1</span>);\n      if (<span class=\"supfact\">iVar1</span> != Number) {\n        safe_strcpy(\n            <span class=\"supfact\">param_2</span>,\n            (&PTR_global_myname_00101168)[(long)<span class=\"supfact\">local_c</span> *\n                                          Number],\n            Number);\n        if ((Number < _DEBUGLEVEL) &&\n            (<span class=\"supfact\">iVar1</span> = dbghdr(Number, String, String, Number),\n             <span class=\"supfact\">iVar1</span> != Number)) {\n          dbgtext(String, <span class=\"supfact\">param_2</span>);\n        }\n        return Number;\n      }\n      <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number;\n    }\n    if ((Number < _DEBUGLEVEL) &&\n        (<span class=\"supfact\">iVar1</span> = dbghdr(Number, String, String, Number),\n         <span class=\"supfact\">iVar1</span> != Number)) {\n      dbgtext(String, <span class=\"supfact\">local_98</span>);\n    }\n  }\n  return Number;\n}", "code_t": "BOOL map_domain_sid_to_name(DOM_SID *<span class=\"supfact\">sid</span>,\n                            char *<span class=\"supfact\">nt_domain</span>) {\n  int iVar1;\n  BOOL BVar2;\n  char *<span class=\"supfact\">nt_domain</span> - local;\n  DOM_SID *<span class=\"supfact\">sid</span> - local;\n  fstring <span class=\"supfact\">sid_str</span>;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">i</span> = Number;\n  sid_to_string(<span class=\"supfact\">sid_str</span>, <span class=\"supfact\">sid</span>);\n  if ((Number < _DEBUGLEVEL) &&\n      (iVar1 = dbghdr(Number, String, String, Number), iVar1 != Number)) {\n    dbgtext(String, <span class=\"supfact\">sid_str</span>);\n  }\n  if (<span class=\"supfact\">nt_domain</span> != (char *)Number) {\n    while (sid_name_map[<span class=\"supfact\">i</span>].<span class=\"supfact\">sid</span> !=\n           (DOM_SID *)Number) {\n      sid_to_string(<span class=\"supfact\">sid_str</span>,\n                    sid_name_map[<span class=\"supfact\">i</span>].<span class=\"supfact\">sid</span>);\n      if ((Number < _DEBUGLEVEL) &&\n          (iVar1 = dbghdr(Number, String, String, Number), iVar1 != Number)) {\n        dbgtext(String, <span class=\"supfact\">sid_str</span>);\n      }\n      BVar2 = sid_equal(sid_name_map[<span class=\"supfact\">i</span>].<span class=\"supfact\">sid</span>,\n                        <span class=\"supfact\">sid</span>);\n      if (BVar2 != Number) {\n        safe_strcpy(<span class=\"supfact\">nt_domain</span>,\n                    sid_name_map[<span class=\"supfact\">i</span>].name, Number);\n        if ((Number < _DEBUGLEVEL) &&\n            (iVar1 = dbghdr(Number, String, String, Number), iVar1 != Number)) {\n          dbgtext(String, <span class=\"supfact\">nt_domain</span>);\n        }\n        return Number;\n      }\n      <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n    }\n    if ((Number < _DEBUGLEVEL) &&\n        (iVar1 = dbghdr(Number, String, String, Number), iVar1 != Number)) {\n      dbgtext(String, <span class=\"supfact\">sid_str</span>);\n    }\n  }\n  return Number;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "__unk__", "ref_name": "sid", "ref_type": "DOM_SID * *"}, {"name": "param_2", "type": "char * *", "pred_name": "__unk__", "ref_name": "nt_domain", "ref_type": "char * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "", "ref_type": "disappear"}, {"name": "local_98", "type": "fstring", "pred_name": "__unk__", "ref_name": "sid_str", "ref_type": "fstring"}, {"name": "local_c", "type": "int", "pred_name": "__unk__", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "hfotouhi", "repo_name": "FMOF", "path": "hfotouhi/FMOF/27a3eacde873f6ae4adb911a9721974f33798ad4c6b03d9a9749fe9cf5a825ad", "path_in_repo": "hfotouhi/FMOF/examples/telnet-server/obj_minimal-net/stbroadcast.o", "objdump": "0000000000000035 <stbroadcast_open>:\n  35:\t55                   \tpush   %rbp\n  36:\t48 89 e5             \tmov    %rsp,%rbp\n  39:\t48 83 ec 20          \tsub    $0x20,%rsp\n  3d:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  41:\t89 f0                \tmov    %esi,%eax\n  43:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n  47:\t66 89 45 f4          \tmov    %ax,-0xc(%rbp)\n  4b:\t0f b7 4d f4          \tmovzwl -0xc(%rbp),%ecx\n  4f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  53:\tba 00 00 00 00       \tmov    $0x0,%edx\n  58:\t89 ce                \tmov    %ecx,%esi\n  5a:\t48 89 c7             \tmov    %rax,%rdi\n  5d:\te8 00 00 00 00       \tcall   62 <stbroadcast_open+0x2d>\n  62:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  66:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  6a:\t48 89 50 78          \tmov    %rdx,0x78(%rax)\n  6e:\t90                   \tnop\n  6f:\tc9                   \tleave  \n  70:\tc3                   \tret    ", "code_s": "void stbroadcast_open(long <span class=\"supfact\">param_1</span>,\n                      undefined2 <span class=\"supfact\">param_2</span>,\n                      undefined8 <span class=\"supfact\">param_3</span>) {\n  broadcast_open(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n                 &PTR_FUN_001001d0);\n  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = <span class=\"supfact\">param_3</span>;\n  return;\n}", "code_t": "void stbroadcast_open(stbroadcast_conn *<span class=\"supfact\">c</span>,\n                      uint16_t <span class=\"supfact\">channel</span>,\n                      stbroadcast_callbacks *<span class=\"supfact\">u</span>) {\n  stbroadcast_callbacks *<span class=\"supfact\">u</span> - local;\n  uint16_t <span class=\"supfact\">channel</span> - local;\n  stbroadcast_conn *<span class=\"supfact\">c</span> - local;\n  broadcast_open(<span class=\"supfact\">c</span>, <span class=\"supfact\">channel</span>, &stbroadcast);\n  <span class=\"supfact\">c</span>-><span class=\"supfact\">u</span> = <span class=\"supfact\">u</span>;\n  return;\n}", "var": [{"name": "param_1", "type": "stbroadcast_conn * *", "pred_name": "c", "ref_name": "c", "ref_type": "stbroadcast_conn * *"}, {"name": "param_2", "type": "uint16_t", "pred_name": "channel", "ref_name": "channel", "ref_type": "uint16_t"}, {"name": "param_3", "type": "stbroadcast_callbacks * *", "pred_name": "u", "ref_name": "u", "ref_type": "stbroadcast_callbacks * *"}], "body_in_train": true}, {"repo_owner": "clobber", "repo_name": "UME", "path": "clobber/UME/910abc87f10f8e56a2c3a1fa8c72cc84fb84de743fbf29a73604d9c7a603779b", "path_in_repo": "clobber/UME/mame/obj/sdl64/mame/drivers/cosmic.o", "objdump": "", "code_s": "uint __thiscall delegate_base<unsigned_char, address_space &, unsigned_int,\n                              unsigned_char, _noparam, _noparam>\nis_mfp(delegate_base<unsigned_char, address_space &, unsigned_int,\n                     unsigned_char, _noparam, _noparam> *<span class=\"supfact\">this</span>) {\n  uint <span class=\"supfact\">uVar1</span>;\n  <span class=\"supfact\">uVar1</span> =\n      delegate_mfp isnull((delegate_mfp *)(<span class=\"supfact\">this</span> + Number));\n  return <span class=\"supfact\">uVar1</span> ^ Number;\n}", "code_t": "bool __thiscall delegate_base<unsigned_char, _address_space &, _unsigned_int,\n                              _unsigned_char, __noparam, __noparam>\nis_mfp(\n    delegate_base<unsigned_char, _address_space &, _unsigned_int,\n                  _unsigned_char, __noparam, __noparam> *<span class=\"supfact\">this</span>) {\n  bool bVar1;\n  delegate_base<unsigned_char, _address_space &, _unsigned_int, _unsigned_char,\n                __noparam, __noparam> *<span class=\"supfact\">this</span> -\n      local;\n  bVar1 = delegate_mfp isnull(&<span class=\"supfact\">this</span>->m_raw_mfp);\n  return !bVar1;\n}", "var": [{"name": "this", "type": "delegate_base<void,_int,__noparam,__noparam,__noparam,__noparam> * *", "pred_name": "this", "ref_name": "this", "ref_type": "delegate_base<void,_address_space&,_unsigned_int,_unsigned_char,_unsigned_char,__noparam> * *"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "mineralos", "repo_name": "soc_kernel", "path": "mineralos/soc_kernel/c26112ad4c2de4438c9848edba8d461bbbdeb1f429a25572df53e2b77407097f", "path_in_repo": "mineralos/soc_kernel/tools/testing/selftests/kcmp/kcmp_test", "objdump": "", "code_s": "int open(char *__file, int __oflag, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_open_00404070)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int open(char *__file, int __oflag, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_open_00404070)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "aq2-tng", "repo_name": "aq2-tng", "path": "aq2-tng/aq2-tng/43e681d087f9ed1a168a137a401ee222fa6ebcd715ca8f3aeedd4192e8155940", "path_in_repo": "aq2-tng/aq2-tng/source/gamex86_64.so", "objdump": "000000000002035d <Cmd_Roundtimeleft_f>:\n   2035d:\t55                   \tpush   %rbp\n   2035e:\t48 89 e5             \tmov    %rsp,%rbp\n   20361:\t48 83 ec 20          \tsub    $0x20,%rsp\n   20365:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   20369:\t48 8b 05 f0 6b 09 00 \tmov    0x96bf0(%rip),%rax        # b6f60 <teamplay@@Base-0x31b70>\n   20370:\t48 8b 00             \tmov    (%rax),%rax\n   20373:\tf3 0f 10 40 20       \tmovss  0x20(%rax),%xmm0\n   20378:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n   2037c:\t0f 2e c1             \tucomiss %xmm1,%xmm0\n   2037f:\t7a 33                \tjp     203b4 <Cmd_Roundtimeleft_f+0x57>\n   20381:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n   20385:\t0f 2e c1             \tucomiss %xmm1,%xmm0\n   20388:\t75 2a                \tjne    203b4 <Cmd_Roundtimeleft_f+0x57>\n   2038a:\t48 8b 05 ff 60 09 00 \tmov    0x960ff(%rip),%rax        # b6490 <gi@@Base-0x2b770>\n   20391:\t48 8b 48 10          \tmov    0x10(%rax),%rcx\n   20395:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   20399:\t48 8d 15 68 d2 07 00 \tlea    0x7d268(%rip),%rdx        # 9d608 <_fini+0xf00>\n   203a0:\tbe 02 00 00 00       \tmov    $0x2,%esi\n   203a5:\t48 89 c7             \tmov    %rax,%rdi\n   203a8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   203ad:\tff d1                \tcall   *%rcx\n   203af:\te9 f9 00 00 00       \tjmp    204ad <Cmd_Roundtimeleft_f+0x150>\n   203b4:\t48 8b 05 1d 61 09 00 \tmov    0x9611d(%rip),%rax        # b64d8 <gameSettings@@Base-0xa4cc>\n   203bb:\t8b 00                \tmov    (%rax),%eax\n   203bd:\t83 e0 08             \tand    $0x8,%eax\n   203c0:\t85 c0                \ttest   %eax,%eax\n   203c2:\t0f 84 e1 00 00 00    \tje     204a9 <Cmd_Roundtimeleft_f+0x14c>\n   203c8:\t48 8b 05 c9 65 09 00 \tmov    0x965c9(%rip),%rax        # b6998 <team_round_going@@Base-0x528c>\n   203cf:\t8b 00                \tmov    (%rax),%eax\n   203d1:\t85 c0                \ttest   %eax,%eax\n   203d3:\t0f 84 d0 00 00 00    \tje     204a9 <Cmd_Roundtimeleft_f+0x14c>\n   203d9:\t48 8b 05 a8 66 09 00 \tmov    0x966a8(%rip),%rax        # b6a88 <roundtimelimit@@Base-0x2b5e0>\n   203e0:\t48 8b 00             \tmov    (%rax),%rax\n   203e3:\tf3 0f 10 40 20       \tmovss  0x20(%rax),%xmm0\n   203e8:\tf3 0f 2c c0          \tcvttss2si %xmm0,%eax\n   203ec:\t85 c0                \ttest   %eax,%eax\n   203ee:\t0f 8e b8 00 00 00    \tjle    204ac <Cmd_Roundtimeleft_f+0x14f>\n   203f4:\t48 8b 05 8d 66 09 00 \tmov    0x9668d(%rip),%rax        # b6a88 <roundtimelimit@@Base-0x2b5e0>\n   203fb:\t48 8b 00             \tmov    (%rax),%rax\n   203fe:\tf3 0f 10 48 20       \tmovss  0x20(%rax),%xmm1\n   20403:\tf3 0f 10 05 15 d3 07 \tmovss  0x7d315(%rip),%xmm0        # 9d720 <_fini+0x1018>\n   2040a:\t00 \n   2040b:\tf3 0f 59 c1          \tmulss  %xmm1,%xmm0\n   2040f:\t48 8b 05 82 61 09 00 \tmov    0x96182(%rip),%rax        # b6598 <current_round_length@@Base-0x56a8>\n   20416:\t8b 00                \tmov    (%rax),%eax\n   20418:\t48 63 d0             \tmovslq %eax,%rdx\n   2041b:\t48 69 d2 67 66 66 66 \timul   $0x66666667,%rdx,%rdx\n   20422:\t48 c1 ea 20          \tshr    $0x20,%rdx\n   20426:\tc1 fa 02             \tsar    $0x2,%edx\n   20429:\tc1 f8 1f             \tsar    $0x1f,%eax\n   2042c:\t29 c2                \tsub    %eax,%edx\n   2042e:\t89 d0                \tmov    %edx,%eax\n   20430:\tf3 0f 2a c8          \tcvtsi2ss %eax,%xmm1\n   20434:\tf3 0f 5c c1          \tsubss  %xmm1,%xmm0\n   20438:\tf3 0f 2c c0          \tcvttss2si %xmm0,%eax\n   2043c:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n   2043f:\t48 8b 05 4a 60 09 00 \tmov    0x9604a(%rip),%rax        # b6490 <gi@@Base-0x2b770>\n   20446:\t4c 8b 48 10          \tmov    0x10(%rax),%r9\n   2044a:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n   2044d:\t48 63 d0             \tmovslq %eax,%rdx\n   20450:\t48 69 d2 89 88 88 88 \timul   $0xffffffff88888889,%rdx,%rdx\n   20457:\t48 c1 ea 20          \tshr    $0x20,%rdx\n   2045b:\t01 c2                \tadd    %eax,%edx\n   2045d:\t89 d1                \tmov    %edx,%ecx\n   2045f:\tc1 f9 05             \tsar    $0x5,%ecx\n   20462:\t99                   \tcltd   \n   20463:\t29 d1                \tsub    %edx,%ecx\n   20465:\t89 ca                \tmov    %ecx,%edx\n   20467:\t6b d2 3c             \timul   $0x3c,%edx,%edx\n   2046a:\t29 d0                \tsub    %edx,%eax\n   2046c:\t89 c2                \tmov    %eax,%edx\n   2046e:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n   20471:\t48 63 c8             \tmovslq %eax,%rcx\n   20474:\t48 69 c9 89 88 88 88 \timul   $0xffffffff88888889,%rcx,%rcx\n   2047b:\t48 c1 e9 20          \tshr    $0x20,%rcx\n   2047f:\t01 c1                \tadd    %eax,%ecx\n   20481:\tc1 f9 05             \tsar    $0x5,%ecx\n   20484:\tc1 f8 1f             \tsar    $0x1f,%eax\n   20487:\t29 c1                \tsub    %eax,%ecx\n   20489:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   2048d:\t41 89 d0             \tmov    %edx,%r8d\n   20490:\t48 8d 15 a1 d1 07 00 \tlea    0x7d1a1(%rip),%rdx        # 9d638 <_fini+0xf30>\n   20497:\tbe 02 00 00 00       \tmov    $0x2,%esi\n   2049c:\t48 89 c7             \tmov    %rax,%rdi\n   2049f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   204a4:\t41 ff d1             \tcall   *%r9\n   204a7:\teb 04                \tjmp    204ad <Cmd_Roundtimeleft_f+0x150>\n   204a9:\t90                   \tnop\n   204aa:\teb 01                \tjmp    204ad <Cmd_Roundtimeleft_f+0x150>\n   204ac:\t90                   \tnop\n   204ad:\tc9                   \tleave  \n   204ae:\tc3                   \tret    ", "code_s": "void Cmd_Roundtimeleft_f(undefined8 <span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  if (*(float *)(*(long *)PTR_teamplay_001b6f60 + Number) == Number) {\n    (**(code **)(PTR_gi_001b6490 + Number))(<span class=\"supfact\">param_1</span>, Number,\n                                            String);\n  } else if ((((*(uint *)PTR_gameSettings_001b64d8 & Number) != Number) &&\n              (*(int *)PTR_team_round_going_001b6998 != Number)) &&\n             (Number <\n              (int)*(float *)(*(long *)PTR_roundtimelimit_001b6a88 + Number))) {\n    <span class=\"supfact\">iVar1</span> =\n        (int)(DAT_0019d720 *\n                  *(float *)(*(long *)PTR_roundtimelimit_001b6a88 + Number) -\n              (float)(*(int *)PTR_current_round_length_001b6598 / Number));\n    (**(code **)(PTR_gi_001b6490 + Number))(\n        <span class=\"supfact\">param_1</span>, Number, String, <span class=\"supfact\">iVar1</span> / Number,\n        <span class=\"supfact\">iVar1</span> % Number);\n  }\n  return;\n}", "code_t": "void Cmd_Roundtimeleft_f(edict_t *<span class=\"supfact\">ent</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  edict_t *<span class=\"supfact\">ent</span> - local;\n  int remaining;\n  if (*(float *)(*(long *)PTR_teamplay_001b6f60 + Number) == Number) {\n    (**(code **)(PTR_gi_001b6490 + Number))(<span class=\"supfact\">ent</span>, Number,\n                                            String);\n  } else if ((((*(uint *)PTR_gameSettings_001b64d8 & Number) != Number) &&\n              (*(int *)PTR_team_round_going_001b6998 != Number)) &&\n             (Number <\n              (int)*(float *)(*(long *)PTR_roundtimelimit_001b6a88 + Number))) {\n    <span class=\"supfact\">iVar1</span> =\n        (int)(DAT_0019d720 *\n                  *(float *)(*(long *)PTR_roundtimelimit_001b6a88 + Number) -\n              (float)(*(int *)PTR_current_round_length_001b6598 / Number));\n    (**(code **)(PTR_gi_001b6490 + Number))(<span class=\"supfact\">ent</span>, Number, String,\n                                            <span class=\"supfact\">iVar1</span> / Number,\n                                            <span class=\"supfact\">iVar1</span> % Number);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "FunctionCallInfo", "pred_name": "fcinfo", "ref_name": "ent", "ref_type": "edict_t * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "0x90", "repo_name": "openwips-ng", "path": "0x90/openwips-ng/f32f82915263282b0316f4df7ae62aeb41f6035d4ee5cdb10595f081928ec945", "path_in_repo": "0x90/openwips-ng/sensor/Release/common/pcap.o", "objdump": "0000000000000106 <init_new_pcap_packet>:\n     106:\t55                   \tpush   %rbp\n     107:\t48 89 e5             \tmov    %rsp,%rbp\n     10a:\t48 83 ec 10          \tsub    $0x10,%rsp\n     10e:\tbf 38 00 00 00       \tmov    $0x38,%edi\n     113:\te8 00 00 00 00       \tcall   118 <init_new_pcap_packet+0x12>\n     118:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     11c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     120:\t48 c7 40 18 00 00 00 \tmovq   $0x0,0x18(%rax)\n     127:\t00 \n     128:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     12c:\t48 c7 40 30 00 00 00 \tmovq   $0x0,0x30(%rax)\n     133:\t00 \n     134:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     138:\t48 c7 40 28 00 00 00 \tmovq   $0x0,0x28(%rax)\n     13f:\t00 \n     140:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     144:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n     14a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     14e:\tc7 40 20 ff ff ff ff \tmovl   $0xffffffff,0x20(%rax)\n     155:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     159:\tc9                   \tleave  \n     15a:\tc3                   \tret    ", "code_s": "undefined4 *init_new_pcap_packet(void) {\n  undefined4 *<span class=\"supfact\">puVar1</span>;\n  <span class=\"supfact\">puVar1</span> = (undefined4 *)malloc(Number);\n  *(undefined8 *)(<span class=\"supfact\">puVar1</span> + Number) = Number;\n  *(undefined8 *)(<span class=\"supfact\">puVar1</span> + Number) = Number;\n  *(undefined8 *)(<span class=\"supfact\">puVar1</span> + Number) = Number;\n  *<span class=\"supfact\">puVar1</span> = Number;\n  <span class=\"supfact\">puVar1</span>[Number] = Number;\n  return <span class=\"supfact\">puVar1</span>;\n}", "code_t": "pcap_packet *init_new_pcap_packet(void) {\n  pcap_packet *<span class=\"supfact\">ppVar1</span>;\n  pcap_packet *ret;\n  <span class=\"supfact\">ppVar1</span> = (pcap_packet *)malloc(Number);\n  <span class=\"supfact\">ppVar1</span>->data = (uchar *)Number;\n  <span class=\"supfact\">ppVar1</span>->next = (pcap_packet *)Number;\n  <span class=\"supfact\">ppVar1</span>->info = (packet_info *)Number;\n  <span class=\"supfact\">ppVar1</span>->linktype = Number;\n  <span class=\"supfact\">ppVar1</span>->source = -Number;\n  return <span class=\"supfact\">ppVar1</span>;\n}", "var": [{"name": "puVar1", "type": "pcap_t * *", "pred_name": "ppVar1", "ref_name": "ppVar1", "ref_type": "pcap_packet * *"}], "body_in_train": false}, {"repo_owner": "xetxeberria", "repo_name": "VEV", "path": "xetxeberria/VEV/865a32b9bd0c3e5d08dd22bb0b3f32d64ebf5c230b3164a5459a26e9bedbdbd9", "path_in_repo": "xetxeberria/VEV//browser", "objdump": "", "code_s": "int fgetc(FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fgetc_0044c320)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int fgetc(FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fgetc_0044c320)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "NavroopKaur", "repo_name": "Notification-Junction", "path": "NavroopKaur/Notification-Junction/9ee7a93a39ec0839a3d9a7f2d348bf6ac7a521662a5a53de4142794a585ea056", "path_in_repo": "NavroopKaur/Notification-Junction//app_dcll.o", "objdump": "0000000000000000 <init_app>:\n       0:\t55                   \tpush   %rbp\n       1:\t48 89 e5             \tmov    %rsp,%rbp\n       4:\t48 83 ec 10          \tsub    $0x10,%rsp\n       8:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n       c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n      10:\t48 83 c0 10          \tadd    $0x10,%rax\n      14:\tbe 00 00 00 00       \tmov    $0x0,%esi\n      19:\t48 89 c7             \tmov    %rax,%rdi\n      1c:\te8 00 00 00 00       \tcall   21 <init_app+0x21>\n      21:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n      25:\t48 c7 00 00 00 00 00 \tmovq   $0x0,(%rax)\n      2c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n      30:\tc7 40 08 00 00 00 00 \tmovl   $0x0,0x8(%rax)\n      37:\t90                   \tnop\n      38:\tc9                   \tleave  \n      39:\tc3                   \tret    ", "code_s": "void init_app(undefined8 *<span class=\"supfact\">param_1</span>) {\n  pthread_rdwr_init_np(<span class=\"supfact\">param_1</span> + Number, Number);\n  *<span class=\"supfact\">param_1</span> = Number;\n  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  return;\n}", "code_t": "void init_app(app_dcll *<span class=\"supfact\">l</span>) {\n  app_dcll *<span class=\"supfact\">l</span> - local;\n  pthread_rdwr_init_np(&<span class=\"supfact\">l</span>->app_list_lock, Number);\n  <span class=\"supfact\">l</span>->head = (app_node *)Number;\n  <span class=\"supfact\">l</span>->count = Number;\n  return;\n}", "var": [{"name": "param_1", "type": "CPUPPCState * *", "pred_name": "env", "ref_name": "l", "ref_type": "app_dcll * *"}], "body_in_train": false}, {"repo_owner": "LittleWhite-tb", "repo_name": "forest-dvfs", "path": "LittleWhite-tb/forest-dvfs/5e938f8e0345ba70dc82e261a7bde9c407ac606dcf147f2a60dff4238a165b38", "path_in_repo": "LittleWhite-tb/forest-dvfs/libpfm-4.4.0/perf_examples/self_smpl_multi", "objdump": "", "code_s": "int pthread_barrier_wait(pthread_barrier_t *__barrier) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_barrier_wait_004c6208)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int pthread_barrier_wait(pthread_barrier_t *__barrier) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_barrier_wait_004c6208)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "postgrespro", "repo_name": "sqljson", "path": "postgrespro/sqljson/14ac6abe8af12701979e98eceeab75e9a98b876faae164779b06e79831c30462", "path_in_repo": "postgrespro/sqljson//src/backend/executor/spi.o", "objdump": "0000000000004837 <SPI_unregister_relation>:\n    4837:\t55                   \tpush   %rbp\n    4838:\t48 89 e5             \tmov    %rsp,%rbp\n    483b:\t48 83 ec 20          \tsub    $0x20,%rsp\n    483f:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    4843:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    4848:\t75 07                \tjne    4851 <SPI_unregister_relation+0x1a>\n    484a:\tb8 fa ff ff ff       \tmov    $0xfffffffa,%eax\n    484f:\teb 69                \tjmp    48ba <SPI_unregister_relation+0x83>\n    4851:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    4856:\te8 91 fa ff ff       \tcall   42ec <_SPI_begin_call>\n    485b:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    485e:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    4862:\t79 05                \tjns    4869 <SPI_unregister_relation+0x32>\n    4864:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    4867:\teb 51                \tjmp    48ba <SPI_unregister_relation+0x83>\n    4869:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    486d:\t48 89 c7             \tmov    %rax,%rdi\n    4870:\te8 c9 fe ff ff       \tcall   473e <_SPI_find_ENR_by_name>\n    4875:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    4879:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    487e:\t74 26                \tje     48a6 <SPI_unregister_relation+0x6f>\n    4880:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    4884:\t48 8b 10             \tmov    (%rax),%rdx\n    4887:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 488e <SPI_unregister_relation+0x57>\n    488e:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n    4892:\t48 89 d6             \tmov    %rdx,%rsi\n    4895:\t48 89 c7             \tmov    %rax,%rdi\n    4898:\te8 00 00 00 00       \tcall   489d <SPI_unregister_relation+0x66>\n    489d:\tc7 45 fc 10 00 00 00 \tmovl   $0x10,-0x4(%rbp)\n    48a4:\teb 07                \tjmp    48ad <SPI_unregister_relation+0x76>\n    48a6:\tc7 45 fc f3 ff ff ff \tmovl   $0xfffffff3,-0x4(%rbp)\n    48ad:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    48b2:\te8 7c fa ff ff       \tcall   4333 <_SPI_end_call>\n    48b7:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    48ba:\tc9                   \tleave  \n    48bb:\tc3                   \tret    ", "code_s": "int SPI_unregister_relation(long <span class=\"supfact\">param_1</span>) {\n  undefined8 *<span class=\"supfact\">puVar1</span>;\n  int <span class=\"supfact\">local_c</span>;\n  if (<span class=\"supfact\">param_1</span> == Number) {\n    <span class=\"supfact\">local_c</span> = -Number;\n  } else {\n    <span class=\"supfact\">local_c</span> = FUN_001042ec(Number);\n    if (-Number < <span class=\"supfact\">local_c</span>) {\n      <span class=\"supfact\">puVar1</span> =\n          (undefined8 *)FUN_0010473e(<span class=\"supfact\">param_1</span>);\n      if (<span class=\"supfact\">puVar1</span> == (undefined8 *)Number) {\n        <span class=\"supfact\">local_c</span> = -Number;\n      } else {\n        unregister_ENR(*(undefined8 *)(DAT_00104a60 + Number),\n                       *<span class=\"supfact\">puVar1</span>);\n        <span class=\"supfact\">local_c</span> = Number;\n      }\n      FUN_00104333(Number);\n    }\n  }\n  return <span class=\"supfact\">local_c</span>;\n}", "code_t": "int SPI_unregister_relation(char *<span class=\"supfact\">name</span>) {\n  EphemeralNamedRelation <span class=\"supfact\">pEVar1</span>;\n  char *<span class=\"supfact\">name</span> - local;\n  EphemeralNamedRelation match;\n  int <span class=\"supfact\">res</span>;\n  if (<span class=\"supfact\">name</span> == (char *)Number) {\n    <span class=\"supfact\">res</span> = -Number;\n  } else {\n    <span class=\"supfact\">res</span> = _SPI_begin_call(false);\n    if (-Number < <span class=\"supfact\">res</span>) {\n      <span class=\"supfact\">pEVar1</span> = _SPI_find_ENR_by_name(<span class=\"supfact\">name</span>);\n      if (<span class=\"supfact\">pEVar1</span> == (EphemeralNamedRelation)Number) {\n        <span class=\"supfact\">res</span> = -Number;\n      } else {\n        unregister_ENR(_SPI_current->queryEnv,\n                       (<span class=\"supfact\">pEVar1</span>->md).<span class=\"supfact\">name</span>);\n        <span class=\"supfact\">res</span> = Number;\n      }\n      _SPI_end_call(false);\n    }\n  }\n  return <span class=\"supfact\">res</span>;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "name", "ref_name": "name", "ref_type": "char * *"}, {"name": "puVar1", "type": "__unk__", "pred_name": "pEVar1", "ref_name": "pEVar1", "ref_type": "EphemeralNamedRelation"}, {"name": "local_c", "type": "int", "pred_name": "res", "ref_name": "res", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "ystk", "repo_name": "debian-uclibc", "path": "ystk/debian-uclibc/83e53d48feced9ae51cb44a70216eb4a435958e334a0df5d723d6e2d41c57e5e", "path_in_repo": "ystk/debian-uclibc//extra/config/mconf", "objdump": "", "code_s": "int toupper(int __c) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_toupper_00421080)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int toupper(int __c) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_toupper_00421080)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "JohnGood", "repo_name": "MontageDev", "path": "JohnGood/MontageDev/bdd3c0602c2c3043b1e3188b09b13da0f4b2e2a90964221ec1cceb71378faa7c", "path_in_repo": "JohnGood/MontageDev/lib/src/wcstools-3.8.1/libwcs/proj.o", "objdump": "00000000000048e2 <sflset>:\n    48e2:\t55                   \tpush   %rbp\n    48e3:\t48 89 e5             \tmov    %rsp,%rbp\n    48e6:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    48ea:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    48ee:\tc7 00 53 46 4c 00    \tmovl   $0x4c4653,(%rax)\n    48f4:\tba 2d 01 00 00       \tmov    $0x12d,%edx\n    48f9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    48fd:\t89 50 04             \tmov    %edx,0x4(%rax)\n    4900:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    4904:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n    4908:\tf2 0f 11 40 08       \tmovsd  %xmm0,0x8(%rax)\n    490d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    4911:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n    4915:\tf2 0f 11 40 10       \tmovsd  %xmm0,0x10(%rax)\n    491a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    491e:\tf2 0f 10 40 18       \tmovsd  0x18(%rax),%xmm0\n    4923:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n    4927:\t66 0f 2e c1          \tucomisd %xmm1,%xmm0\n    492b:\t7a 3f                \tjp     496c <sflset+0x8a>\n    492d:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n    4931:\t66 0f 2e c1          \tucomisd %xmm1,%xmm0\n    4935:\t75 35                \tjne    496c <sflset+0x8a>\n    4937:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    493b:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # 4943 <sflset+0x61>\n    4942:\t00 \n    4943:\tf2 0f 11 40 18       \tmovsd  %xmm0,0x18(%rax)\n    4948:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    494c:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # 4954 <sflset+0x72>\n    4953:\t00 \n    4954:\tf2 0f 11 40 70       \tmovsd  %xmm0,0x70(%rax)\n    4959:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    495d:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # 4965 <sflset+0x83>\n    4964:\t00 \n    4965:\tf2 0f 11 40 78       \tmovsd  %xmm0,0x78(%rax)\n    496a:\teb 48                \tjmp    49b4 <sflset+0xd2>\n    496c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    4970:\tf2 0f 10 48 18       \tmovsd  0x18(%rax),%xmm1\n    4975:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # 497d <sflset+0x9b>\n    497c:\t00 \n    497d:\tf2 0f 59 c1          \tmulsd  %xmm1,%xmm0\n    4981:\tf2 0f 10 0d 00 00 00 \tmovsd  0x0(%rip),%xmm1        # 4989 <sflset+0xa7>\n    4988:\t00 \n    4989:\tf2 0f 5e c1          \tdivsd  %xmm1,%xmm0\n    498d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    4991:\tf2 0f 11 40 70       \tmovsd  %xmm0,0x70(%rax)\n    4996:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    499a:\tf2 0f 10 48 70       \tmovsd  0x70(%rax),%xmm1\n    499f:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # 49a7 <sflset+0xc5>\n    49a6:\t00 \n    49a7:\tf2 0f 5e c1          \tdivsd  %xmm1,%xmm0\n    49ab:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    49af:\tf2 0f 11 40 78       \tmovsd  %xmm0,0x78(%rax)\n    49b4:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    49b8:\t48 c7 80 18 01 00 00 \tmovq   $0x0,0x118(%rax)\n    49bf:\t00 00 00 00 \n    49c3:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    49c7:\t48 c7 80 20 01 00 00 \tmovq   $0x0,0x120(%rax)\n    49ce:\t00 00 00 00 \n    49d2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    49d7:\t5d                   \tpop    %rbp\n    49d8:\tc3                   \tret    ", "code_s": "undefined8 sflset(undefined4 *<span class=\"supfact\">param_1</span>) {\n  *<span class=\"supfact\">param_1</span> = Number;\n  <span class=\"supfact\">param_1</span>[Number] = Number;\n  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  if (*(double *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n    *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = DAT_0010b610;\n    *(double *)(<span class=\"supfact\">param_1</span> + Number) = DAT_0010b618;\n    *(double *)(<span class=\"supfact\">param_1</span> + Number) = DAT_0010b618;\n  } else {\n    *(double *)(<span class=\"supfact\">param_1</span> + Number) =\n        (DAT_0010b688 * *(double *)(<span class=\"supfact\">param_1</span> + Number)) /\n        DAT_0010b650;\n    *(double *)(<span class=\"supfact\">param_1</span> + Number) =\n        DAT_0010b618 / *(double *)(<span class=\"supfact\">param_1</span> + Number);\n  }\n  *(code **)(<span class=\"supfact\">param_1</span> + Number) = sflfwd;\n  *(code **)(<span class=\"supfact\">param_1</span> + Number) = sflrev;\n  return Number;\n}", "code_t": "int sflset(prjprm *<span class=\"supfact\">prj</span>) {\n  prjprm *<span class=\"supfact\">prj</span> - local;\n  *(undefined4 *)<span class=\"supfact\">prj</span>->code = Number;\n  <span class=\"supfact\">prj</span>->flag = Number;\n  <span class=\"supfact\">prj</span>->phi0 = Number;\n  <span class=\"supfact\">prj</span>->theta0 = Number;\n  if (<span class=\"supfact\">prj</span>->r0 == Number) {\n    <span class=\"supfact\">prj</span>->r0 = DAT_0010b610;\n    <span class=\"supfact\">prj</span>->w[Number] = DAT_0010b618;\n    <span class=\"supfact\">prj</span>->w[Number] = DAT_0010b618;\n  } else {\n    <span class=\"supfact\">prj</span>->w[Number] =\n        (DAT_0010b688 * <span class=\"supfact\">prj</span>->r0) / DAT_0010b650;\n    <span class=\"supfact\">prj</span>->w[Number] =\n        DAT_0010b618 / <span class=\"supfact\">prj</span>->w[Number];\n  }\n  <span class=\"supfact\">prj</span>->prjfwd = sflfwd;\n  <span class=\"supfact\">prj</span>->prjrev = sflrev;\n  return Number;\n}", "var": [{"name": "param_1", "type": "work_unit * *", "pred_name": "w", "ref_name": "prj", "ref_type": "prjprm * *"}], "body_in_train": false}, {"repo_owner": "dr4g0nsr", "repo_name": "mplayer-skyviia-8860", "path": "dr4g0nsr/mplayer-skyviia-8860/3947b3ae5bd85bc91093807b725ea9046f59348ee1a9f51a244aa786f50580f0", "path_in_repo": "dr4g0nsr/mplayer-skyviia-8860/mplayer_android/libdvdnav/vm/vm.o", "objdump": "000000000000233f <vm_get_subp_attr>:\n    233f:\t55                   \tpush   %rbp\n    2340:\t48 89 e5             \tmov    %rsp,%rbp\n    2343:\t48 83 ec 20          \tsub    $0x20,%rsp\n    2347:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    234b:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n    234e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2352:\t8b 80 78 01 00 00    \tmov    0x178(%rax),%eax\n    2358:\t83 f8 08             \tcmp    $0x8,%eax\n    235b:\t74 57                \tje     23b4 <vm_get_subp_attr+0x75>\n    235d:\t83 f8 08             \tcmp    $0x8,%eax\n    2360:\t0f 87 92 00 00 00    \tja     23f8 <vm_get_subp_attr+0xb9>\n    2366:\t83 f8 04             \tcmp    $0x4,%eax\n    2369:\t74 6b                \tje     23d6 <vm_get_subp_attr+0x97>\n    236b:\t83 f8 04             \tcmp    $0x4,%eax\n    236e:\t0f 87 84 00 00 00    \tja     23f8 <vm_get_subp_attr+0xb9>\n    2374:\t83 f8 01             \tcmp    $0x1,%eax\n    2377:\t74 5d                \tje     23d6 <vm_get_subp_attr+0x97>\n    2379:\t83 f8 02             \tcmp    $0x2,%eax\n    237c:\t75 7a                \tjne    23f8 <vm_get_subp_attr+0xb9>\n    237e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2382:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    2386:\t48 8b 48 50          \tmov    0x50(%rax),%rcx\n    238a:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n    238d:\t48 63 d0             \tmovslq %eax,%rdx\n    2390:\t48 89 d0             \tmov    %rdx,%rax\n    2393:\t48 01 c0             \tadd    %rax,%rax\n    2396:\t48 01 d0             \tadd    %rdx,%rax\n    2399:\t48 01 c0             \tadd    %rax,%rax\n    239c:\t48 01 c8             \tadd    %rcx,%rax\n    239f:\t48 05 56 02 00 00    \tadd    $0x256,%rax\n    23a5:\t8b 10                \tmov    (%rax),%edx\n    23a7:\t89 55 fa             \tmov    %edx,-0x6(%rbp)\n    23aa:\t0f b7 40 04          \tmovzwl 0x4(%rax),%eax\n    23ae:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n    23b2:\teb 49                \tjmp    23fd <vm_get_subp_attr+0xbe>\n    23b4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    23b8:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    23bc:\t48 8b 40 50          \tmov    0x50(%rax),%rax\n    23c0:\t8b 90 56 01 00 00    \tmov    0x156(%rax),%edx\n    23c6:\t89 55 fa             \tmov    %edx,-0x6(%rbp)\n    23c9:\t0f b7 80 5a 01 00 00 \tmovzwl 0x15a(%rax),%eax\n    23d0:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n    23d4:\teb 27                \tjmp    23fd <vm_get_subp_attr+0xbe>\n    23d6:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    23da:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    23de:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    23e2:\t8b 90 56 01 00 00    \tmov    0x156(%rax),%edx\n    23e8:\t89 55 fa             \tmov    %edx,-0x6(%rbp)\n    23eb:\t0f b7 80 5a 01 00 00 \tmovzwl 0x15a(%rax),%eax\n    23f2:\t66 89 45 fe          \tmov    %ax,-0x2(%rbp)\n    23f6:\teb 05                \tjmp    23fd <vm_get_subp_attr+0xbe>\n    23f8:\te8 00 00 00 00       \tcall   23fd <vm_get_subp_attr+0xbe>\n    23fd:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2402:\t8b 55 fa             \tmov    -0x6(%rbp),%edx\n    2405:\t89 d1                \tmov    %edx,%ecx\n    2407:\t48 ba 00 00 00 00 ff \tmovabs $0xffffffff00000000,%rdx\n    240e:\tff ff ff \n    2411:\t48 21 d0             \tand    %rdx,%rax\n    2414:\t48 09 c8             \tor     %rcx,%rax\n    2417:\t0f b7 55 fe          \tmovzwl -0x2(%rbp),%edx\n    241b:\t0f b7 d2             \tmovzwl %dx,%edx\n    241e:\t48 c1 e2 20          \tshl    $0x20,%rdx\n    2422:\t48 b9 ff ff ff ff 00 \tmovabs $0xffff0000ffffffff,%rcx\n    2429:\t00 ff ff \n    242c:\t48 21 c8             \tand    %rcx,%rax\n    242f:\t48 09 d0             \tor     %rdx,%rax\n    2432:\tc9                   \tleave  \n    2433:\tc3                   \tret    ", "code_s": "ulong vm_get_subp_attr(long <span class=\"supfact\">param_1</span>,\n                       int <span class=\"supfact\">param_2</span>) {\n  uint uVar1;\n  long <span class=\"supfact\">lVar2</span>;\n  undefined4 <span class=\"supfact\">local_e</span>;\n  undefined2 <span class=\"supfact\">local_a</span>;\n  uVar1 = *(uint *)(<span class=\"supfact\">param_1</span> + Number);\n  if (uVar1 == Number) {\n    <span class=\"supfact\">lVar2</span> =\n        *(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number);\n    <span class=\"supfact\">local_e</span> = *(undefined4 *)(<span class=\"supfact\">lVar2</span> + Number);\n    <span class=\"supfact\">local_a</span> = *(undefined2 *)(<span class=\"supfact\">lVar2</span> + Number);\n  } else {\n    if (Number < uVar1)\n      goto LAB_001023f8;\n    if (uVar1 != Number) {\n      if (Number < uVar1) {\n      LAB_001023f8:\n        abort();\n      }\n      if (uVar1 != Number) {\n        if (uVar1 == Number) {\n          <span class=\"supfact\">lVar2</span> =\n              (long)<span class=\"supfact\">param_2</span> * Number +\n              *(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number);\n          <span class=\"supfact\">local_e</span> =\n              *(undefined4 *)(<span class=\"supfact\">lVar2</span> + Number);\n          <span class=\"supfact\">local_a</span> =\n              *(undefined2 *)(<span class=\"supfact\">lVar2</span> + Number);\n          goto LAB_001023fd;\n        }\n        goto LAB_001023f8;\n      }\n    }\n    <span class=\"supfact\">lVar2</span> =\n        *(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number);\n    <span class=\"supfact\">local_e</span> = *(undefined4 *)(<span class=\"supfact\">lVar2</span> + Number);\n    <span class=\"supfact\">local_a</span> = *(undefined2 *)(<span class=\"supfact\">lVar2</span> + Number);\n  }\nLAB_001023fd:\n  return (ulong)CONCAT24(<span class=\"supfact\">local_a</span>, <span class=\"supfact\">local_e</span>);\n}", "code_t": "subp_attr_t vm_get_subp_attr(vm_t *<span class=\"supfact\">vm</span>,\n                             int <span class=\"supfact\">streamN</span>) {\n  domain_t dVar1;\n  vtsi_mat_t *pvVar2;\n  vmgi_mat_t *pvVar3;\n  subp_attr_t *psVar4;\n  subp_attr_t <span class=\"supfact\">sVar5</span>;\n  int <span class=\"supfact\">streamN</span> - local;\n  vm_t *<span class=\"supfact\">vm</span> - local;\n  undefined4 <span class=\"supfact\">local_e</span>;\n  undefined2 <span class=\"supfact\">local_a</span>;\n  dVar1 = (<span class=\"supfact\">vm</span>->state).domain;\n  if (dVar1 == VTSM_DOMAIN) {\n    pvVar2 = <span class=\"supfact\">vm</span>->vtsi->vtsi_mat;\n    <span class=\"supfact\">local_e</span> = *(undefined4 *)&pvVar2->vtsm_subp_attr;\n    <span class=\"supfact\">local_a</span>._0_1_ = (pvVar2->vtsm_subp_attr).lang_extension;\n    <span class=\"supfact\">local_a</span>._1_1_ = (pvVar2->vtsm_subp_attr).code_extension;\n  } else {\n    if (VTSM_DOMAIN < dVar1)\n      goto LAB_001023f8;\n    if (dVar1 != VMGM_DOMAIN) {\n      if (VMGM_DOMAIN < dVar1) {\n      LAB_001023f8:\n        abort();\n      }\n      if (dVar1 != FP_DOMAIN) {\n        if (dVar1 == VTS_DOMAIN) {\n          pvVar2 = <span class=\"supfact\">vm</span>->vtsi->vtsi_mat;\n          <span class=\"supfact\">local_e</span> =\n              *(undefined4 *)(pvVar2->vts_subp_attr + <span class=\"supfact\">streamN</span>);\n          psVar4 = pvVar2->vts_subp_attr + <span class=\"supfact\">streamN</span>;\n          <span class=\"supfact\">local_a</span>._0_1_ = psVar4->lang_extension;\n          <span class=\"supfact\">local_a</span>._1_1_ = psVar4->code_extension;\n          goto LAB_001023fd;\n        }\n        goto LAB_001023f8;\n      }\n    }\n    pvVar3 = <span class=\"supfact\">vm</span>->vmgi->vmgi_mat;\n    <span class=\"supfact\">local_e</span> = *(undefined4 *)&pvVar3->vmgm_subp_attr;\n    <span class=\"supfact\">local_a</span>._0_1_ = (pvVar3->vmgm_subp_attr).lang_extension;\n    <span class=\"supfact\">local_a</span>._1_1_ = (pvVar3->vmgm_subp_attr).code_extension;\n  }\nLAB_001023fd:\n  <span class=\"supfact\">sVar5</span>.lang_extension = (undefined)<span class=\"supfact\">local_a</span>;\n  <span class=\"supfact\">sVar5</span>.code_extension = <span class=\"supfact\">local_a</span>._1_1_;\n  <span class=\"supfact\">sVar5</span>._0_4_ = <span class=\"supfact\">local_e</span>;\n  return <span class=\"supfact\">sVar5</span>;\n}", "var": [{"name": "param_1", "type": "void * *", "pred_name": "this", "ref_name": "vm", "ref_type": "vm_t * *"}, {"name": "param_2", "type": "uint", "pred_name": "pidx", "ref_name": "streamN", "ref_type": "int"}, {"name": "lVar2", "type": "long", "pred_name": "lVar2", "ref_name": "sVar5", "ref_type": "struct subp_attr_t { uchar:3 code_mode; uchar:3 zero1; uchar:2 type; uint8_t zero2; uint16_t lang_code; uint8_t lang_extension; uint8_t code_extension; }"}, {"name": "local_e", "type": "uint", "pred_name": "i", "ref_name": "local_e", "ref_type": "undefined4"}, {"name": "local_a", "type": "ushort", "pred_name": "bitmask", "ref_name": "local_a", "ref_type": "undefined2"}], "body_in_train": false}, {"repo_owner": "zague08", "repo_name": "ade7878", "path": "zague08/ade7878/1b30439301f7cb91dcb312719445808efa85a69a78a252f79bef6fbc1ef7eab6", "path_in_repo": "zague08/ade7878/projects/demos/bmac_slipstream/SLIPstream-client/slipstream.o", "objdump": "00000000000000f2 <slipstream_send>:\n  f2:\t55                   \tpush   %rbp\n  f3:\t48 89 e5             \tmov    %rsp,%rbp\n  f6:\t48 83 ec 20          \tsub    $0x20,%rsp\n  fa:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  fe:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n 101:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 107 <slipstream_send+0x15>\n 107:\t89 c1                \tmov    %eax,%ecx\n 109:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n 10c:\t48 63 d0             \tmovslq %eax,%rdx\n 10f:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 115 <slipstream_send+0x23>\n 115:\t48 8b 75 e8          \tmov    -0x18(%rbp),%rsi\n 119:\t41 89 c9             \tmov    %ecx,%r9d\n 11c:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n 122:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 127:\t89 c7                \tmov    %eax,%edi\n 129:\te8 00 00 00 00       \tcall   12e <slipstream_send+0x3c>\n 12e:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 131:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n 135:\t79 11                \tjns    148 <slipstream_send+0x56>\n 137:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 13c:\te8 00 00 00 00       \tcall   141 <slipstream_send+0x4f>\n 141:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 146:\teb 05                \tjmp    14d <slipstream_send+0x5b>\n 148:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 14d:\tc9                   \tleave  \n 14e:\tc3                   \tret    ", "code_s": "bool slipstream_send(void *<span class=\"supfact\">param_1</span>,\n                     int <span class=\"supfact\">param_2</span>) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  bool <span class=\"supfact\">bVar2</span>;\n  <span class=\"supfact\">sVar1</span> =\n      sendto(sock, <span class=\"supfact\">param_1</span>, (long)<span class=\"supfact\">param_2</span>,\n             Number, (sockaddr *)server, length);\n  <span class=\"supfact\">bVar2</span> = -Number < (int)<span class=\"supfact\">sVar1</span>;\n  if (!<span class=\"supfact\">bVar2</span>) {\n    perror(String);\n  }\n  return <span class=\"supfact\">bVar2</span>;\n}", "code_t": "int slipstream_send(char *<span class=\"supfact\">buf</span>, int <span class=\"supfact\">size</span>) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  bool <span class=\"supfact\">bVar2</span>;\n  int <span class=\"supfact\">size</span> - local;\n  char *<span class=\"supfact\">buf</span> - local;\n  int n;\n  <span class=\"supfact\">sVar1</span> =\n      sendto(sock, <span class=\"supfact\">buf</span>, (long)<span class=\"supfact\">size</span>, Number,\n             (sockaddr *)&server, length);\n  <span class=\"supfact\">bVar2</span> = -Number < (int)<span class=\"supfact\">sVar1</span>;\n  if (!<span class=\"supfact\">bVar2</span>) {\n    perror(String);\n  }\n  return (int)<span class=\"supfact\">bVar2</span>;\n}", "var": [{"name": "param_1", "type": "uchar * *", "pred_name": "buf", "ref_name": "buf", "ref_type": "char * *"}, {"name": "param_2", "type": "int", "pred_name": "size", "ref_name": "size", "ref_type": "int"}, {"name": "sVar1", "type": "ssize_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "ssize_t"}, {"name": "bVar2", "type": "bool", "pred_name": "bVar2", "ref_name": "bVar2", "ref_type": "bool"}], "body_in_train": true}, {"repo_owner": "msysgit", "repo_name": "msysgit", "path": "msysgit/msysgit/239626b0ff367d043cc5bbd3103faf7fb10c6bec83f4edb25f89624513912639", "path_in_repo": "msysgit/msysgit/git/git-upload-pack", "objdump": "", "code_s": "int unsetenv(char *__name) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_unsetenv_004fd500)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int unsetenv(char *__name) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_unsetenv_004fd500)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "sawyeraw3", "repo_name": "task_tracker", "path": "sawyeraw3/task_tracker/0c08abe5f48e0e46a4a80c339a32ba1fc93938650168b088a4aa1de8ab48aa77", "path_in_repo": "sawyeraw3/task_tracker/assets/node_modules/node-sass/src/libsass/src/.libs/sass2scss.o", "objdump": "", "code_s": "void FUN_001059ff(void) {\n  void **<span class=\"supfact\">unaff_R13</span>;\n  void *<span class=\"supfact\">param_11</span>;\n  void *<span class=\"supfact\">in_stack_00000060</span>;\n  void *<span class=\"supfact\">param_12</span>;\n  undefined *<span class=\"supfact\">param_13</span>;\n  if (<span class=\"supfact\">param_13</span> != &stack0x00000170) {\n    operator.delete(<span class=\"supfact\">param_13</span>);\n  }\n  if (<span class=\"supfact\">param_12</span> != <span class=\"supfact\">param_11</span>) {\n    operator.delete(<span class=\"supfact\">param_12</span>);\n  }\n  if (*<span class=\"supfact\">unaff_R13</span> != <span class=\"supfact\">in_stack_00000060</span>) {\n    operator.delete(*<span class=\"supfact\">unaff_R13</span>);\n  }\n  _Unwind_Resume();\n}", "code_t": "void FUN_001059ff(void) {\n  void **<span class=\"supfact\">unaff_R13</span>;\n  void *<span class=\"supfact\">param_11</span>;\n  void *<span class=\"supfact\">in_stack_00000060</span>;\n  void *<span class=\"supfact\">param_12</span>;\n  undefined *<span class=\"supfact\">param_13</span>;\n  if (<span class=\"supfact\">param_13</span> != &stack0x00000170) {\n    operator.delete(<span class=\"supfact\">param_13</span>);\n  }\n  if (<span class=\"supfact\">param_12</span> != <span class=\"supfact\">param_11</span>) {\n    operator.delete(<span class=\"supfact\">param_12</span>);\n  }\n  if (*<span class=\"supfact\">unaff_R13</span> != <span class=\"supfact\">in_stack_00000060</span>) {\n    operator.delete(*<span class=\"supfact\">unaff_R13</span>);\n  }\n  _Unwind_Resume();\n}", "var": [{"name": "unaff_R13", "type": "void * *", "pred_name": "unaff_R13", "ref_name": "unaff_R13", "ref_type": "void * * *"}, {"name": "param_11", "type": "void * *", "pred_name": "param_11", "ref_name": "param_11", "ref_type": "void * *"}, {"name": "in_stack_00000060", "type": "undefined * *", "pred_name": "in_stack_00000060", "ref_name": "in_stack_00000060", "ref_type": "void * *"}, {"name": "param_12", "type": "undefined * *", "pred_name": "param_12", "ref_name": "param_12", "ref_type": "void * *"}, {"name": "param_13", "type": "void * *", "pred_name": "param_13", "ref_name": "param_13", "ref_type": "undefined * *"}], "body_in_train": false}, {"repo_owner": "squat", "repo_name": "darkapi", "path": "squat/darkapi/784bbf72cbcc2c9fd81b75ac790665a7846bd0506170ee9bdc7b3f1d23307233", "path_in_repo": "squat/darkapi/vendor/darknet/obj/utils.o", "objdump": "00000000000003bb <random_index_order>:\n     3bb:\t55                   \tpush   %rbp\n     3bc:\t48 89 e5             \tmov    %rsp,%rbp\n     3bf:\t48 83 ec 30          \tsub    $0x30,%rsp\n     3c3:\t89 7d dc             \tmov    %edi,-0x24(%rbp)\n     3c6:\t89 75 d8             \tmov    %esi,-0x28(%rbp)\n     3c9:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n     3cc:\t2b 45 dc             \tsub    -0x24(%rbp),%eax\n     3cf:\t48 98                \tcltq   \n     3d1:\tbe 04 00 00 00       \tmov    $0x4,%esi\n     3d6:\t48 89 c7             \tmov    %rax,%rdi\n     3d9:\te8 00 00 00 00       \tcall   3de <random_index_order+0x23>\n     3de:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     3e2:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n     3e5:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n     3e8:\teb 1d                \tjmp    407 <random_index_order+0x4c>\n     3ea:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     3ed:\t48 98                \tcltq   \n     3ef:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n     3f6:\t00 \n     3f7:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     3fb:\t48 01 c2             \tadd    %rax,%rdx\n     3fe:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     401:\t89 02                \tmov    %eax,(%rdx)\n     403:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n     407:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     40a:\t3b 45 d8             \tcmp    -0x28(%rbp),%eax\n     40d:\t7c db                \tjl     3ea <random_index_order+0x2f>\n     40f:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n     412:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n     415:\teb 7b                \tjmp    492 <random_index_order+0xd7>\n     417:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     41a:\t48 98                \tcltq   \n     41c:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n     423:\t00 \n     424:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     428:\t48 01 d0             \tadd    %rdx,%rax\n     42b:\t8b 00                \tmov    (%rax),%eax\n     42d:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n     430:\te8 00 00 00 00       \tcall   435 <random_index_order+0x7a>\n     435:\t8b 55 d8             \tmov    -0x28(%rbp),%edx\n     438:\t89 d1                \tmov    %edx,%ecx\n     43a:\t2b 4d fc             \tsub    -0x4(%rbp),%ecx\n     43d:\t99                   \tcltd   \n     43e:\tf7 f9                \tidiv   %ecx\n     440:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     443:\t01 d0                \tadd    %edx,%eax\n     445:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n     448:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n     44b:\t48 98                \tcltq   \n     44d:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n     454:\t00 \n     455:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     459:\t48 01 d0             \tadd    %rdx,%rax\n     45c:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n     45f:\t48 63 d2             \tmovslq %edx,%rdx\n     462:\t48 8d 0c 95 00 00 00 \tlea    0x0(,%rdx,4),%rcx\n     469:\t00 \n     46a:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n     46e:\t48 01 ca             \tadd    %rcx,%rdx\n     471:\t8b 00                \tmov    (%rax),%eax\n     473:\t89 02                \tmov    %eax,(%rdx)\n     475:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n     478:\t48 98                \tcltq   \n     47a:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n     481:\t00 \n     482:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     486:\t48 01 c2             \tadd    %rax,%rdx\n     489:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n     48c:\t89 02                \tmov    %eax,(%rdx)\n     48e:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n     492:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n     495:\t83 e8 01             \tsub    $0x1,%eax\n     498:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n     49b:\t0f 8c 76 ff ff ff    \tjl     417 <random_index_order+0x5c>\n     4a1:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     4a5:\tc9                   \tleave  \n     4a6:\tc3                   \tret    ", "code_s": "void *random_index_order(int <span class=\"supfact\">param_1</span>,\n                         int <span class=\"supfact\">param_2</span>) {\n  undefined4 uVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  void *<span class=\"supfact\">pvVar3</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">pvVar3</span> =\n      calloc((long)(<span class=\"supfact\">param_2</span> - <span class=\"supfact\">param_1</span>), Number);\n  for (<span class=\"supfact\">local_c</span> = <span class=\"supfact\">param_1</span>;\n       <span class=\"supfact\">iVar2</span> = <span class=\"supfact\">param_1</span>,\n      <span class=\"supfact\">local_c</span> < <span class=\"supfact\">param_2</span>;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    *(int *)((long)<span class=\"supfact\">local_c</span> * Number +\n             (long)<span class=\"supfact\">pvVar3</span>) = <span class=\"supfact\">local_c</span>;\n  }\n  while (<span class=\"supfact\">local_c</span> = <span class=\"supfact\">iVar2</span>,\n         <span class=\"supfact\">local_c</span> < <span class=\"supfact\">param_2</span> + -Number) {\n    uVar1 = *(undefined4 *)((long)<span class=\"supfact\">pvVar3</span> +\n                            (long)<span class=\"supfact\">local_c</span> * Number);\n    <span class=\"supfact\">iVar2</span> = rand();\n    <span class=\"supfact\">iVar2</span> = <span class=\"supfact\">local_c</span> +\n                            <span class=\"supfact\">iVar2</span> % (<span class=\"supfact\">param_2</span> -\n                                                     <span class=\"supfact\">local_c</span>);\n    *(undefined4 *)((long)<span class=\"supfact\">pvVar3</span> +\n                    (long)<span class=\"supfact\">local_c</span> * Number) =\n        *(undefined4 *)((long)<span class=\"supfact\">pvVar3</span> +\n                        (long)<span class=\"supfact\">iVar2</span> * Number);\n    *(undefined4 *)((long)<span class=\"supfact\">iVar2</span> * Number +\n                    (long)<span class=\"supfact\">pvVar3</span>) = uVar1;\n    <span class=\"supfact\">iVar2</span> = <span class=\"supfact\">local_c</span> + Number;\n  }\n  return <span class=\"supfact\">pvVar3</span>;\n}", "code_t": "int *random_index_order(int <span class=\"supfact\">min</span>, int <span class=\"supfact\">max</span>) {\n  int iVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  int *<span class=\"supfact\">piVar3</span>;\n  int <span class=\"supfact\">max</span> - local;\n  int <span class=\"supfact\">min</span> - local;\n  int index;\n  int swap;\n  int *inds;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">piVar3</span> =\n      (int *)calloc((long)(<span class=\"supfact\">max</span> - <span class=\"supfact\">min</span>), Number);\n  for (<span class=\"supfact\">i</span> = <span class=\"supfact\">min</span>;\n       iVar1 = <span class=\"supfact\">min</span>, <span class=\"supfact\">i</span> < <span class=\"supfact\">max</span>;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    <span class=\"supfact\">piVar3</span>[<span class=\"supfact\">i</span>] = <span class=\"supfact\">i</span>;\n  }\n  while (<span class=\"supfact\">i</span> = iVar1,\n         <span class=\"supfact\">i</span> < <span class=\"supfact\">max</span> + -Number) {\n    iVar1 = <span class=\"supfact\">piVar3</span>[<span class=\"supfact\">i</span>];\n    <span class=\"supfact\">iVar2</span> = rand();\n    <span class=\"supfact\">iVar2</span> =\n        <span class=\"supfact\">i</span> +\n        <span class=\"supfact\">iVar2</span> % (<span class=\"supfact\">max</span> - <span class=\"supfact\">i</span>);\n    <span class=\"supfact\">piVar3</span>[<span class=\"supfact\">i</span>] =\n        <span class=\"supfact\">piVar3</span>[<span class=\"supfact\">iVar2</span>];\n    <span class=\"supfact\">piVar3</span>[<span class=\"supfact\">iVar2</span>] = iVar1;\n    iVar1 = <span class=\"supfact\">i</span> + Number;\n  }\n  return <span class=\"supfact\">piVar3</span>;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "min", "ref_name": "min", "ref_type": "int"}, {"name": "param_2", "type": "int", "pred_name": "max", "ref_name": "max", "ref_type": "int"}, {"name": "iVar2", "type": "int", "pred_name": "iVar2", "ref_name": "iVar2", "ref_type": "int"}, {"name": "pvVar3", "type": "int * *", "pred_name": "piVar3", "ref_name": "piVar3", "ref_type": "int * *"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "BackupTheBerlios", "repo_name": "vg4nbsd-svn", "path": "BackupTheBerlios/vg4nbsd-svn/2b20cd211349272a926b03926792bfd761a49142aed1cf20c71908ac26b735b6", "path_in_repo": "BackupTheBerlios/vg4nbsd-svn/tags/vg4nbsd-release-01/VEX/priv/host-arm/hdefs.o", "objdump": "00000000000007a9 <ppARMAMode1>:\n     7a9:\t55                   \tpush   %rbp\n     7aa:\t48 89 e5             \tmov    %rsp,%rbp\n     7ad:\t48 83 ec 10          \tsub    $0x10,%rsp\n     7b1:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n     7b5:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     7b9:\t8b 00                \tmov    (%rax),%eax\n     7bb:\t83 f8 06             \tcmp    $0x6,%eax\n     7be:\t77 11                \tja     7d1 <ppARMAMode1+0x28>\n     7c0:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     7c5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     7ca:\te8 00 00 00 00       \tcall   7cf <ppARMAMode1+0x26>\n     7cf:\teb 0a                \tjmp    7db <ppARMAMode1+0x32>\n     7d1:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     7d6:\te8 00 00 00 00       \tcall   7db <ppARMAMode1+0x32>\n     7db:\t90                   \tnop\n     7dc:\tc9                   \tleave  \n     7dd:\tc3                   \tret    ", "code_s": "void ppARMAMode1(uint *<span class=\"supfact\">param_1</span>) {\n  if (*<span class=\"supfact\">param_1</span> < Number) {\n    vex_printf(String);\n    return;\n  }\n  vpanic(String);\n}", "code_t": "void ppARMAMode1(ARMAMode1 *<span class=\"supfact\">am</span>) {\n  ARMAMode1 *<span class=\"supfact\">am</span> - local;\n  if (<span class=\"supfact\">am</span>->tag < Number) {\n    vex_printf(String);\n    return;\n  }\n  vpanic(String);\n}", "var": [{"name": "param_1", "type": "Aig_Man_t * *", "pred_name": "p", "ref_name": "am", "ref_type": "ARMAMode1 * *"}], "body_in_train": false}, {"repo_owner": "rubund", "repo_name": "gnucap-models", "path": "rubund/gnucap-models/ad1ad3f3e68161550e6e5218be87f88f7b92ea4f7b146532d096f78bc0ed754b", "path_in_repo": "rubund/gnucap-models/plugins/models-bsim/BSIMSOI4p3/b4soitrunc.o", "objdump": "0000000000000000 <B4SOItrunc>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t41 55                \tpush   %r13\n   6:\t41 54                \tpush   %r12\n   8:\t53                   \tpush   %rbx\n   9:\t48 83 ec 18          \tsub    $0x18,%rsp\n   d:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n  11:\t49 89 f5             \tmov    %rsi,%r13\n  14:\t48 89 55 d0          \tmov    %rdx,-0x30(%rbp)\n  18:\t4c 8b 65 d8          \tmov    -0x28(%rbp),%r12\n  1c:\teb 5a                \tjmp    78 <B4SOItrunc+0x78>\n  1e:\t49 8b 5c 24 10       \tmov    0x10(%r12),%rbx\n  23:\teb 49                \tjmp    6e <B4SOItrunc+0x6e>\n  25:\t8b 43 18             \tmov    0x18(%rbx),%eax\n  28:\t8d 48 0c             \tlea    0xc(%rax),%ecx\n  2b:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  2f:\t48 89 c2             \tmov    %rax,%rdx\n  32:\t4c 89 ee             \tmov    %r13,%rsi\n  35:\t89 cf                \tmov    %ecx,%edi\n  37:\te8 00 00 00 00       \tcall   3c <B4SOItrunc+0x3c>\n  3c:\t8b 43 18             \tmov    0x18(%rbx),%eax\n  3f:\t8d 48 0e             \tlea    0xe(%rax),%ecx\n  42:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  46:\t48 89 c2             \tmov    %rax,%rdx\n  49:\t4c 89 ee             \tmov    %r13,%rsi\n  4c:\t89 cf                \tmov    %ecx,%edi\n  4e:\te8 00 00 00 00       \tcall   53 <B4SOItrunc+0x53>\n  53:\t8b 43 18             \tmov    0x18(%rbx),%eax\n  56:\t8d 48 10             \tlea    0x10(%rax),%ecx\n  59:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n  5d:\t48 89 c2             \tmov    %rax,%rdx\n  60:\t4c 89 ee             \tmov    %r13,%rsi\n  63:\t89 cf                \tmov    %ecx,%edi\n  65:\te8 00 00 00 00       \tcall   6a <B4SOItrunc+0x6a>\n  6a:\t48 8b 5b 08          \tmov    0x8(%rbx),%rbx\n  6e:\t48 85 db             \ttest   %rbx,%rbx\n  71:\t75 b2                \tjne    25 <B4SOItrunc+0x25>\n  73:\t4d 8b 64 24 08       \tmov    0x8(%r12),%r12\n  78:\t4d 85 e4             \ttest   %r12,%r12\n  7b:\t75 a1                \tjne    1e <B4SOItrunc+0x1e>\n  7d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  82:\t48 83 c4 18          \tadd    $0x18,%rsp\n  86:\t5b                   \tpop    %rbx\n  87:\t41 5c                \tpop    %r12\n  89:\t41 5d                \tpop    %r13\n  8b:\t5d                   \tpop    %rbp\n  8c:\tc3                   \tret    \n", "code_s": "undefined8 B4SOItrunc(long <span class=\"supfact\">param_1</span>,\n                      undefined8 <span class=\"supfact\">param_2</span>,\n                      undefined8 <span class=\"supfact\">param_3</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  for (; <span class=\"supfact\">param_1</span> != Number;\n       <span class=\"supfact\">param_1</span> = *(long *)(<span class=\"supfact\">param_1</span> + Number)) {\n    for (<span class=\"supfact\">lVar1</span> = *(long *)(<span class=\"supfact\">param_1</span> + Number);\n         <span class=\"supfact\">lVar1</span> != Number;\n         <span class=\"supfact\">lVar1</span> = *(long *)(<span class=\"supfact\">lVar1</span> + Number)) {\n      CKTterr(*(int *)(<span class=\"supfact\">lVar1</span> + Number) + Number,\n              <span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>);\n      CKTterr(*(int *)(<span class=\"supfact\">lVar1</span> + Number) + Number,\n              <span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>);\n      CKTterr(*(int *)(<span class=\"supfact\">lVar1</span> + Number) + Number,\n              <span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>);\n    }\n  }\n  return Number;\n}", "code_t": "int B4SOItrunc(GENmodel *<span class=\"supfact\">inModel</span>,\n               CKTcircuit *<span class=\"supfact\">ckt</span>,\n               double *<span class=\"supfact\">timeStep</span>) {\n  B4SOIinstance *here;\n  GENinstance *pGVar1;\n  B4SOImodel *model;\n  double *<span class=\"supfact\">timeStep</span> - local;\n  GENmodel *<span class=\"supfact\">inModel</span> - local;\n  for (; <span class=\"supfact\">inModel</span> != (GENmodel *)Number;\n       <span class=\"supfact\">inModel</span> = <span class=\"supfact\">inModel</span>->GENnextModel) {\n    for (pGVar1 = <span class=\"supfact\">inModel</span>->GENinstances;\n         pGVar1 != (GENinstance *)Number; pGVar1 = pGVar1->GENnextInstance) {\n      CKTterr(pGVar1->GENstate + Number, <span class=\"supfact\">ckt</span>,\n              <span class=\"supfact\">timeStep</span>);\n      CKTterr(pGVar1->GENstate + Number, <span class=\"supfact\">ckt</span>,\n              <span class=\"supfact\">timeStep</span>);\n      CKTterr(pGVar1->GENstate + Number, <span class=\"supfact\">ckt</span>,\n              <span class=\"supfact\">timeStep</span>);\n    }\n  }\n  return Number;\n}", "var": [{"name": "param_1", "type": "GENmodel * *", "pred_name": "inModel", "ref_name": "inModel", "ref_type": "GENmodel * *"}, {"name": "param_2", "type": "CKTcircuit * *", "pred_name": "ckt", "ref_name": "ckt", "ref_type": "CKTcircuit * *"}, {"name": "param_3", "type": "double * *", "pred_name": "timeStep", "ref_name": "timeStep", "ref_type": "double * *"}, {"name": "lVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "ZVNexus", "repo_name": "android_kernel_google_bonito", "path": "ZVNexus/android_kernel_google_bonito/accf722cc0311fe28ed1a6d48c6d3b48f9fa9577e32f369365d6131728507b7f", "path_in_repo": "ZVNexus/android_kernel_google_bonito/tools/perf/util/bpf-loader.o", "objdump": "0000000000003e11 <bpf__setup_stdout>:\n    3e11:\t55                   \tpush   %rbp\n    3e12:\t48 89 e5             \tmov    %rsp,%rbp\n    3e15:\t48 83 ec 60          \tsub    $0x60,%rsp\n    3e19:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n    3e1d:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    3e24:\t00 00 \n    3e26:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    3e2a:\t31 c0                \txor    %eax,%eax\n    3e2c:\t48 c7 45 b8 00 00 00 \tmovq   $0x0,-0x48(%rbp)\n    3e33:\t00 \n    3e34:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n    3e3b:\t00 \n    3e3c:\tc6 45 b3 00          \tmovb   $0x0,-0x4d(%rbp)\n    3e40:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3e45:\te8 00 00 00 00       \tcall   3e4a <bpf__setup_stdout+0x39>\n    3e4a:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    3e4e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    3e52:\t48 89 c7             \tmov    %rax,%rdi\n    3e55:\te8 00 00 00 00       \tcall   3e5a <bpf__setup_stdout+0x49>\n    3e5a:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    3e5e:\te9 df 00 00 00       \tjmp    3f42 <bpf__setup_stdout+0x131>\n    3e63:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    3e67:\t48 89 c6             \tmov    %rax,%rsi\n    3e6a:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3e6f:\te8 00 00 00 00       \tcall   3e74 <bpf__setup_stdout+0x63>\n    3e74:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    3e78:\te9 a2 00 00 00       \tjmp    3f1f <bpf__setup_stdout+0x10e>\n    3e7d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    3e81:\t48 89 c7             \tmov    %rax,%rdi\n    3e84:\te8 00 00 00 00       \tcall   3e89 <bpf__setup_stdout+0x78>\n    3e89:\t48 85 c0             \ttest   %rax,%rax\n    3e8c:\t74 7a                \tje     3f08 <bpf__setup_stdout+0xf7>\n    3e8e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    3e92:\t48 89 c7             \tmov    %rax,%rdi\n    3e95:\te8 00 00 00 00       \tcall   3e9a <bpf__setup_stdout+0x89>\n    3e9a:\t48 89 c6             \tmov    %rax,%rsi\n    3e9d:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3ea2:\te8 00 00 00 00       \tcall   3ea7 <bpf__setup_stdout+0x96>\n    3ea7:\t85 c0                \ttest   %eax,%eax\n    3ea9:\t75 5d                \tjne    3f08 <bpf__setup_stdout+0xf7>\n    3eab:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    3eaf:\t48 89 c7             \tmov    %rax,%rdi\n    3eb2:\te8 00 00 00 00       \tcall   3eb7 <bpf__setup_stdout+0xa6>\n    3eb7:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    3ebb:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3ebf:\t48 89 c7             \tmov    %rax,%rdi\n    3ec2:\te8 a3 c1 ff ff       \tcall   6a <IS_ERR>\n    3ec7:\t84 c0                \ttest   %al,%al\n    3ec9:\t74 0a                \tje     3ed5 <bpf__setup_stdout+0xc4>\n    3ecb:\tb8 c1 f0 ff ff       \tmov    $0xfffff0c1,%eax\n    3ed0:\te9 93 02 00 00       \tjmp    4168 <bpf__setup_stdout+0x357>\n    3ed5:\t0f b6 45 b3          \tmovzbl -0x4d(%rbp),%eax\n    3ed9:\t83 f0 01             \txor    $0x1,%eax\n    3edc:\t84 c0                \ttest   %al,%al\n    3ede:\t74 12                \tje     3ef2 <bpf__setup_stdout+0xe1>\n    3ee0:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    3ee5:\t75 0b                \tjne    3ef2 <bpf__setup_stdout+0xe1>\n    3ee7:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    3eec:\t0f 94 c0             \tsete   %al\n    3eef:\t88 45 b3             \tmov    %al,-0x4d(%rbp)\n    3ef2:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n    3ef7:\t75 0f                \tjne    3f08 <bpf__setup_stdout+0xf7>\n    3ef9:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    3efe:\t74 08                \tje     3f08 <bpf__setup_stdout+0xf7>\n    3f00:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3f04:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n    3f08:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    3f0c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    3f10:\t48 89 d6             \tmov    %rdx,%rsi\n    3f13:\t48 89 c7             \tmov    %rax,%rdi\n    3f16:\te8 00 00 00 00       \tcall   3f1b <bpf__setup_stdout+0x10a>\n    3f1b:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    3f1f:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n    3f24:\t0f 85 53 ff ff ff    \tjne    3e7d <bpf__setup_stdout+0x6c>\n    3f2a:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    3f2e:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    3f32:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    3f36:\t48 89 c7             \tmov    %rax,%rdi\n    3f39:\te8 00 00 00 00       \tcall   3f3e <bpf__setup_stdout+0x12d>\n    3f3e:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    3f42:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n    3f47:\t0f 85 16 ff ff ff    \tjne    3e63 <bpf__setup_stdout+0x52>\n    3f4d:\t0f b6 45 b3          \tmovzbl -0x4d(%rbp),%eax\n    3f51:\t83 f0 01             \txor    $0x1,%eax\n    3f54:\t84 c0                \ttest   %al,%al\n    3f56:\t74 0a                \tje     3f62 <bpf__setup_stdout+0x151>\n    3f58:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3f5d:\te9 06 02 00 00       \tjmp    4168 <bpf__setup_stdout+0x357>\n    3f62:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n    3f67:\t75 55                \tjne    3fbe <bpf__setup_stdout+0x1ad>\n    3f69:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    3f6d:\tba 00 00 00 00       \tmov    $0x0,%edx\n    3f72:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    3f77:\t48 89 c7             \tmov    %rax,%rdi\n    3f7a:\te8 00 00 00 00       \tcall   3f7f <bpf__setup_stdout+0x16e>\n    3f7f:\t89 45 b4             \tmov    %eax,-0x4c(%rbp)\n    3f82:\t83 7d b4 00          \tcmpl   $0x0,-0x4c(%rbp)\n    3f86:\t74 26                \tje     3fae <bpf__setup_stdout+0x19d>\n    3f88:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 3f8e <bpf__setup_stdout+0x17d>\n    3f8e:\tba 00 00 00 00       \tmov    $0x0,%edx\n    3f93:\t89 c6                \tmov    %eax,%esi\n    3f95:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    3f9a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3f9f:\te8 00 00 00 00       \tcall   3fa4 <bpf__setup_stdout+0x193>\n    3fa4:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n    3fa7:\tf7 d8                \tneg    %eax\n    3fa9:\te9 ba 01 00 00       \tjmp    4168 <bpf__setup_stdout+0x357>\n    3fae:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    3fb2:\t48 89 c7             \tmov    %rax,%rdi\n    3fb5:\te8 27 c5 ff ff       \tcall   4e1 <perf_evlist__last>\n    3fba:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    3fbe:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3fc3:\te8 00 00 00 00       \tcall   3fc8 <bpf__setup_stdout+0x1b7>\n    3fc8:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    3fcc:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    3fd0:\t48 89 c7             \tmov    %rax,%rdi\n    3fd3:\te8 00 00 00 00       \tcall   3fd8 <bpf__setup_stdout+0x1c7>\n    3fd8:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    3fdc:\te9 77 01 00 00       \tjmp    4158 <bpf__setup_stdout+0x347>\n    3fe1:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    3fe5:\t48 89 c6             \tmov    %rax,%rsi\n    3fe8:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3fed:\te8 00 00 00 00       \tcall   3ff2 <bpf__setup_stdout+0x1e1>\n    3ff2:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    3ff6:\te9 3a 01 00 00       \tjmp    4135 <bpf__setup_stdout+0x324>\n    3ffb:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    3fff:\t48 89 c7             \tmov    %rax,%rdi\n    4002:\te8 00 00 00 00       \tcall   4007 <bpf__setup_stdout+0x1f6>\n    4007:\t48 85 c0             \ttest   %rax,%rax\n    400a:\t0f 84 0e 01 00 00    \tje     411e <bpf__setup_stdout+0x30d>\n    4010:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    4014:\t48 89 c7             \tmov    %rax,%rdi\n    4017:\te8 00 00 00 00       \tcall   401c <bpf__setup_stdout+0x20b>\n    401c:\t48 89 c6             \tmov    %rax,%rsi\n    401f:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    4024:\te8 00 00 00 00       \tcall   4029 <bpf__setup_stdout+0x218>\n    4029:\t85 c0                \ttest   %eax,%eax\n    402b:\t0f 85 ed 00 00 00    \tjne    411e <bpf__setup_stdout+0x30d>\n    4031:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    4035:\t48 89 c7             \tmov    %rax,%rdi\n    4038:\te8 00 00 00 00       \tcall   403d <bpf__setup_stdout+0x22c>\n    403d:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    4041:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    4045:\t48 89 c7             \tmov    %rax,%rdi\n    4048:\te8 1d c0 ff ff       \tcall   6a <IS_ERR>\n    404d:\t84 c0                \ttest   %al,%al\n    404f:\t74 0a                \tje     405b <bpf__setup_stdout+0x24a>\n    4051:\tb8 c1 f0 ff ff       \tmov    $0xfffff0c1,%eax\n    4056:\te9 0d 01 00 00       \tjmp    4168 <bpf__setup_stdout+0x357>\n    405b:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n    4060:\t0f 85 b7 00 00 00    \tjne    411d <bpf__setup_stdout+0x30c>\n    4066:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n    406b:\t74 5d                \tje     40ca <bpf__setup_stdout+0x2b9>\n    406d:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    4071:\t48 89 c7             \tmov    %rax,%rdi\n    4074:\te8 b2 e7 ff ff       \tcall   282b <bpf_map_priv__clone>\n    4079:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    407d:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n    4082:\t75 0a                \tjne    408e <bpf__setup_stdout+0x27d>\n    4084:\tb8 f4 ff ff ff       \tmov    $0xfffffff4,%eax\n    4089:\te9 da 00 00 00       \tjmp    4168 <bpf__setup_stdout+0x357>\n    408e:\t48 8b 4d e0          \tmov    -0x20(%rbp),%rcx\n    4092:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    4096:\tba 00 00 00 00       \tmov    $0x0,%edx\n    409b:\t48 89 ce             \tmov    %rcx,%rsi\n    409e:\t48 89 c7             \tmov    %rax,%rdi\n    40a1:\te8 00 00 00 00       \tcall   40a6 <bpf__setup_stdout+0x295>\n    40a6:\t89 45 b4             \tmov    %eax,-0x4c(%rbp)\n    40a9:\t83 7d b4 00          \tcmpl   $0x0,-0x4c(%rbp)\n    40ad:\t74 6f                \tje     411e <bpf__setup_stdout+0x30d>\n    40af:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    40b3:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    40b7:\t48 89 d6             \tmov    %rdx,%rsi\n    40ba:\t48 89 c7             \tmov    %rax,%rdi\n    40bd:\te8 85 e4 ff ff       \tcall   2547 <bpf_map_priv__clear>\n    40c2:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n    40c5:\te9 9e 00 00 00       \tjmp    4168 <bpf__setup_stdout+0x357>\n    40ca:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n    40cf:\t74 4d                \tje     411e <bpf__setup_stdout+0x30d>\n    40d1:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    40d5:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    40da:\t48 89 c7             \tmov    %rax,%rdi\n    40dd:\te8 5c e9 ff ff       \tcall   2a3e <bpf_map__add_newop>\n    40e2:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    40e6:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    40ea:\t48 89 c7             \tmov    %rax,%rdi\n    40ed:\te8 78 bf ff ff       \tcall   6a <IS_ERR>\n    40f2:\t84 c0                \ttest   %al,%al\n    40f4:\t74 0e                \tje     4104 <bpf__setup_stdout+0x2f3>\n    40f6:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    40fa:\t48 89 c7             \tmov    %rax,%rdi\n    40fd:\te8 33 bf ff ff       \tcall   35 <PTR_ERR>\n    4102:\teb 64                \tjmp    4168 <bpf__setup_stdout+0x357>\n    4104:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    4108:\tc7 40 10 01 00 00 00 \tmovl   $0x1,0x10(%rax)\n    410f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    4113:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    4117:\t48 89 50 28          \tmov    %rdx,0x28(%rax)\n    411b:\teb 01                \tjmp    411e <bpf__setup_stdout+0x30d>\n    411d:\t90                   \tnop\n    411e:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    4122:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    4126:\t48 89 d6             \tmov    %rdx,%rsi\n    4129:\t48 89 c7             \tmov    %rax,%rdi\n    412c:\te8 00 00 00 00       \tcall   4131 <bpf__setup_stdout+0x320>\n    4131:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    4135:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n    413a:\t0f 85 bb fe ff ff    \tjne    3ffb <bpf__setup_stdout+0x1ea>\n    4140:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    4144:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    4148:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    414c:\t48 89 c7             \tmov    %rax,%rdi\n    414f:\te8 00 00 00 00       \tcall   4154 <bpf__setup_stdout+0x343>\n    4154:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    4158:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n    415d:\t0f 85 7e fe ff ff    \tjne    3fe1 <bpf__setup_stdout+0x1d0>\n    4163:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4168:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    416c:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n    4173:\t00 00 \n    4175:\t74 05                \tje     417c <bpf__setup_stdout+0x36b>\n    4177:\te8 00 00 00 00       \tcall   417c <bpf__setup_stdout+0x36b>\n    417c:\tc9                   \tleave  \n    417d:\tc3                   \tret    ", "code_s": "ulong bpf__setup_stdout(undefined8 <span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  char <span class=\"supfact\">cVar2</span>;\n  int iVar3;\n  uint uVar4;\n  ulong uVar5;\n  long lVar6;\n  char *pcVar7;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  bool <span class=\"supfact\">bVar8</span>;\n  long <span class=\"supfact\">local_50</span>;\n  long <span class=\"supfact\">local_48</span>;\n  long <span class=\"supfact\">local_40</span>;\n  long <span class=\"supfact\">local_38</span>;\n  long <span class=\"supfact\">local_30</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_50</span> = Number;\n  <span class=\"supfact\">local_38</span> = Number;\n  <span class=\"supfact\">bVar8</span> = false;\n  <span class=\"supfact\">local_48</span> = bpf_object__next(Number);\n  <span class=\"supfact\">local_40</span> = bpf_object__next(<span class=\"supfact\">local_48</span>);\n  while (<span class=\"supfact\">local_48</span> != Number) {\n    for (<span class=\"supfact\">local_30</span> =\n             bpf_map__next(Number, <span class=\"supfact\">local_48</span>);\n         <span class=\"supfact\">local_30</span> != Number;\n         <span class=\"supfact\">local_30</span> = bpf_map__next(<span class=\"supfact\">local_30</span>,\n                                                  <span class=\"supfact\">local_48</span>)) {\n      lVar6 = bpf_map__name(<span class=\"supfact\">local_30</span>);\n      if (lVar6 != Number) {\n        pcVar7 = (char *)bpf_map__name(<span class=\"supfact\">local_30</span>);\n        iVar3 = strcmp(String, pcVar7);\n        if (iVar3 == Number) {\n          lVar6 = bpf_map__priv(<span class=\"supfact\">local_30</span>);\n          <span class=\"supfact\">cVar2</span> = FUN_0010006a(lVar6);\n          if (<span class=\"supfact\">cVar2</span> != String) {\n            uVar5 = Number;\n            goto LAB_00104168;\n          }\n          if ((!<span class=\"supfact\">bVar8</span>) && (lVar6 == Number)) {\n            <span class=\"supfact\">bVar8</span> = true;\n          }\n          if ((<span class=\"supfact\">local_50</span> == Number) && (lVar6 != Number)) {\n            <span class=\"supfact\">local_50</span> = lVar6;\n          }\n        }\n      }\n    }\n    <span class=\"supfact\">local_48</span> = <span class=\"supfact\">local_40</span>;\n    <span class=\"supfact\">local_40</span> = bpf_object__next(<span class=\"supfact\">local_40</span>);\n  }\n  if (<span class=\"supfact\">bVar8</span>) {\n    if (<span class=\"supfact\">local_50</span> == Number) {\n      iVar3 = parse_events(<span class=\"supfact\">param_1</span>, String, Number);\n      if (iVar3 != Number) {\n        eprintf(Number, _verbose, String);\n        uVar5 = (ulong)(uint)-iVar3;\n        goto LAB_00104168;\n      }\n      <span class=\"supfact\">local_38</span> = FUN_001004e1(<span class=\"supfact\">param_1</span>);\n    }\n    <span class=\"supfact\">local_48</span> = bpf_object__next(Number);\n    <span class=\"supfact\">local_40</span> = bpf_object__next(<span class=\"supfact\">local_48</span>);\n    while (<span class=\"supfact\">local_48</span> != Number) {\n      for (<span class=\"supfact\">local_30</span> =\n               bpf_map__next(Number, <span class=\"supfact\">local_48</span>);\n           <span class=\"supfact\">local_30</span> != Number;\n           <span class=\"supfact\">local_30</span> = bpf_map__next(<span class=\"supfact\">local_30</span>,\n                                                    <span class=\"supfact\">local_48</span>)) {\n        lVar6 = bpf_map__name(<span class=\"supfact\">local_30</span>);\n        if (lVar6 != Number) {\n          pcVar7 = (char *)bpf_map__name(<span class=\"supfact\">local_30</span>);\n          iVar3 = strcmp(String, pcVar7);\n          if (iVar3 == Number) {\n            lVar6 = bpf_map__priv(<span class=\"supfact\">local_30</span>);\n            <span class=\"supfact\">cVar2</span> = FUN_0010006a(lVar6);\n            if (<span class=\"supfact\">cVar2</span> != String) {\n              uVar5 = Number;\n              goto LAB_00104168;\n            }\n            if (lVar6 == Number) {\n              if (<span class=\"supfact\">local_50</span> == Number) {\n                if (<span class=\"supfact\">local_38</span> != Number) {\n                  lVar6 = FUN_00102a3e(<span class=\"supfact\">local_30</span>, Number);\n                  <span class=\"supfact\">cVar2</span> = FUN_0010006a(lVar6);\n                  if (<span class=\"supfact\">cVar2</span> != String) {\n                    uVar5 = FUN_00100035(lVar6);\n                    goto LAB_00104168;\n                  }\n                  *(undefined4 *)(lVar6 + Number) = Number;\n                  *(long *)(lVar6 + Number) = <span class=\"supfact\">local_38</span>;\n                }\n              } else {\n                lVar6 = FUN_0010282b(<span class=\"supfact\">local_50</span>);\n                if (lVar6 == Number) {\n                  uVar5 = Number;\n                  goto LAB_00104168;\n                }\n                uVar4 = bpf_map__set_priv(<span class=\"supfact\">local_30</span>, lVar6,\n                                          FUN_00102547);\n                if (uVar4 != Number) {\n                  FUN_00102547(<span class=\"supfact\">local_30</span>, lVar6);\n                  uVar5 = (ulong)uVar4;\n                  goto LAB_00104168;\n                }\n              }\n            }\n          }\n        }\n      }\n      <span class=\"supfact\">local_48</span> = <span class=\"supfact\">local_40</span>;\n      <span class=\"supfact\">local_40</span> = bpf_object__next(<span class=\"supfact\">local_40</span>);\n    }\n    uVar5 = Number;\n  } else {\n    uVar5 = Number;\n  }\nLAB_00104168:\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return uVar5;\n}", "code_t": "int bpf__setup_stdout(perf_evlist *<span class=\"supfact\">evlist</span>) {\n  long lVar1;\n  _Bool <span class=\"supfact\">_Var2</span>;\n  int iVar3;\n  long lVar4;\n  char *pcVar5;\n  void *ptr;\n  bpf_map_priv *pbVar6;\n  bpf_map_op *ptr_00;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  bool <span class=\"supfact\">bVar7</span>;\n  perf_evlist *<span class=\"supfact\">evlist</span> - local;\n  _Bool need_init;\n  int err;\n  bpf_map_priv *<span class=\"supfact\">tmpl_priv</span>;\n  bpf_object *<span class=\"supfact\">obj</span>;\n  bpf_object *<span class=\"supfact\">tmp</span>;\n  perf_evsel *<span class=\"supfact\">evsel</span>;\n  bpf_map *<span class=\"supfact\">map</span>;\n  bpf_map_priv *priv_1;\n  bpf_map_op *op;\n  bpf_map_priv *priv;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">tmpl_priv</span> = (bpf_map_priv *)Number;\n  <span class=\"supfact\">evsel</span> = (perf_evsel *)Number;\n  <span class=\"supfact\">bVar7</span> = false;\n  <span class=\"supfact\">obj</span> = (bpf_object *)bpf_object__next(Number);\n  <span class=\"supfact\">tmp</span> = (bpf_object *)bpf_object__next(<span class=\"supfact\">obj</span>);\n  while (<span class=\"supfact\">obj</span> != (bpf_object *)Number) {\n    for (<span class=\"supfact\">map</span> =\n             (bpf_map *)bpf_map__next(Number, <span class=\"supfact\">obj</span>);\n         <span class=\"supfact\">map</span> != (bpf_map *)Number;\n         <span class=\"supfact\">map</span> = (bpf_map *)bpf_map__next(<span class=\"supfact\">map</span>,\n                                                        <span class=\"supfact\">obj</span>)) {\n      lVar4 = bpf_map__name(<span class=\"supfact\">map</span>);\n      if (lVar4 != Number) {\n        pcVar5 = (char *)bpf_map__name(<span class=\"supfact\">map</span>);\n        iVar3 = strcmp(String, pcVar5);\n        if (iVar3 == Number) {\n          pbVar6 = (bpf_map_priv *)bpf_map__priv(<span class=\"supfact\">map</span>);\n          <span class=\"supfact\">_Var2</span> = IS_ERR(pbVar6);\n          if (<span class=\"supfact\">_Var2</span>) {\n            iVar3 = -Number;\n            goto LAB_00104168;\n          }\n          if ((!<span class=\"supfact\">bVar7</span>) && (pbVar6 == (bpf_map_priv *)Number)) {\n            <span class=\"supfact\">bVar7</span> = true;\n          }\n          if ((<span class=\"supfact\">tmpl_priv</span> == (bpf_map_priv *)Number) &&\n              (pbVar6 != (bpf_map_priv *)Number)) {\n            <span class=\"supfact\">tmpl_priv</span> = pbVar6;\n          }\n        }\n      }\n    }\n    <span class=\"supfact\">obj</span> = <span class=\"supfact\">tmp</span>;\n    <span class=\"supfact\">tmp</span> = (bpf_object *)bpf_object__next(<span class=\"supfact\">tmp</span>);\n  }\n  if (<span class=\"supfact\">bVar7</span>) {\n    if (<span class=\"supfact\">tmpl_priv</span> == (bpf_map_priv *)Number) {\n      iVar3 = parse_events(<span class=\"supfact\">evlist</span>, String, Number);\n      if (iVar3 != Number) {\n        eprintf(Number, _verbose, String);\n        iVar3 = -iVar3;\n        goto LAB_00104168;\n      }\n      <span class=\"supfact\">evsel</span> = perf_evlist__last(<span class=\"supfact\">evlist</span>);\n    }\n    <span class=\"supfact\">obj</span> = (bpf_object *)bpf_object__next(Number);\n    <span class=\"supfact\">tmp</span> = (bpf_object *)bpf_object__next(<span class=\"supfact\">obj</span>);\n    while (<span class=\"supfact\">obj</span> != (bpf_object *)Number) {\n      for (<span class=\"supfact\">map</span> =\n               (bpf_map *)bpf_map__next(Number, <span class=\"supfact\">obj</span>);\n           <span class=\"supfact\">map</span> != (bpf_map *)Number;\n           <span class=\"supfact\">map</span> = (bpf_map *)bpf_map__next(\n               <span class=\"supfact\">map</span>, <span class=\"supfact\">obj</span>)) {\n        lVar4 = bpf_map__name(<span class=\"supfact\">map</span>);\n        if (lVar4 != Number) {\n          pcVar5 = (char *)bpf_map__name(<span class=\"supfact\">map</span>);\n          iVar3 = strcmp(String, pcVar5);\n          if (iVar3 == Number) {\n            ptr = (void *)bpf_map__priv(<span class=\"supfact\">map</span>);\n            <span class=\"supfact\">_Var2</span> = IS_ERR(ptr);\n            if (<span class=\"supfact\">_Var2</span>) {\n              iVar3 = -Number;\n              goto LAB_00104168;\n            }\n            if (ptr == (void *)Number) {\n              if (<span class=\"supfact\">tmpl_priv</span> == (bpf_map_priv *)Number) {\n                if (<span class=\"supfact\">evsel</span> != (perf_evsel *)Number) {\n                  ptr_00 = bpf_map__add_newop(<span class=\"supfact\">map</span>,\n                                              (parse_events_term *)Number);\n                  <span class=\"supfact\">_Var2</span> = IS_ERR(ptr_00);\n                  if (<span class=\"supfact\">_Var2</span>) {\n                    lVar4 = PTR_ERR(ptr_00);\n                    iVar3 = (int)lVar4;\n                    goto LAB_00104168;\n                  }\n                  ptr_00->op_type = BPF_MAP_OP_SET_EVSEL;\n                  (ptr_00->v).<span class=\"supfact\">evsel</span> = <span class=\"supfact\">evsel</span>;\n                }\n              } else {\n                pbVar6 = bpf_map_priv__clone(<span class=\"supfact\">tmpl_priv</span>);\n                if (pbVar6 == (bpf_map_priv *)Number) {\n                  iVar3 = -Number;\n                  goto LAB_00104168;\n                }\n                iVar3 = bpf_map__set_priv(<span class=\"supfact\">map</span>, pbVar6,\n                                          bpf_map_priv__clear);\n                if (iVar3 != Number) {\n                  bpf_map_priv__clear(<span class=\"supfact\">map</span>, pbVar6);\n                  goto LAB_00104168;\n                }\n              }\n            }\n          }\n        }\n      }\n      <span class=\"supfact\">obj</span> = <span class=\"supfact\">tmp</span>;\n      <span class=\"supfact\">tmp</span> = (bpf_object *)bpf_object__next(<span class=\"supfact\">tmp</span>);\n    }\n    iVar3 = Number;\n  } else {\n    iVar3 = Number;\n  }\nLAB_00104168:\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return iVar3;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "cpu_model", "ref_name": "evlist", "ref_type": "perf_evlist * *"}, {"name": "cVar2", "type": "char", "pred_name": "cVar2", "ref_name": "_Var2", "ref_type": "_Bool"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "bVar8", "type": "bool", "pred_name": "bVar8", "ref_name": "bVar7", "ref_type": "bool"}, {"name": "local_50", "type": "__unk__", "pred_name": "__unk__", "ref_name": "tmpl_priv", "ref_type": "bpf_map_priv * *"}, {"name": "local_48", "type": "__unk__", "pred_name": "__unk__", "ref_name": "obj", "ref_type": "bpf_object * *"}, {"name": "local_40", "type": "__unk__", "pred_name": "__unk__", "ref_name": "tmp", "ref_type": "bpf_object * *"}, {"name": "local_38", "type": "__unk__", "pred_name": "__unk__", "ref_name": "evsel", "ref_type": "perf_evsel * *"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "map", "ref_type": "bpf_map * *"}], "body_in_train": false}, {"repo_owner": "gaozhiyu", "repo_name": "linux-4.20.4", "path": "gaozhiyu/linux-4.20.4/dacd109fcc150efbdafe2afbecef5a62d12a73e14df9dd413e49ffcfe95ebf48", "path_in_repo": "gaozhiyu/linux-4.20.4/tools/testing/selftests/bpf/libbpf-in.o", "objdump": "0000000000008249 <btf__free>:\n    8249:\t55                   \tpush   %rbp\n    824a:\t48 89 e5             \tmov    %rsp,%rbp\n    824d:\t48 83 ec 10          \tsub    $0x10,%rsp\n    8251:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    8255:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    825a:\t74 47                \tje     82a3 <btf__free+0x5a>\n    825c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    8260:\t8b 40 2c             \tmov    0x2c(%rax),%eax\n    8263:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    8266:\t74 0e                \tje     8276 <btf__free+0x2d>\n    8268:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    826c:\t8b 40 2c             \tmov    0x2c(%rax),%eax\n    826f:\t89 c7                \tmov    %eax,%edi\n    8271:\te8 00 00 00 00       \tcall   8276 <btf__free+0x2d>\n    8276:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    827a:\t48 8b 00             \tmov    (%rax),%rax\n    827d:\t48 89 c7             \tmov    %rax,%rdi\n    8280:\te8 00 00 00 00       \tcall   8285 <btf__free+0x3c>\n    8285:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    8289:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    828d:\t48 89 c7             \tmov    %rax,%rdi\n    8290:\te8 00 00 00 00       \tcall   8295 <btf__free+0x4c>\n    8295:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    8299:\t48 89 c7             \tmov    %rax,%rdi\n    829c:\te8 00 00 00 00       \tcall   82a1 <btf__free+0x58>\n    82a1:\teb 01                \tjmp    82a4 <btf__free+0x5b>\n    82a3:\t90                   \tnop\n    82a4:\tc9                   \tleave  \n    82a5:\tc3                   \tret    ", "code_s": "void btf__free(void **<span class=\"supfact\">param_1</span>) {\n  if (<span class=\"supfact\">param_1</span> != (void **)Number) {\n    if (*(int *)((long)<span class=\"supfact\">param_1</span> + Number) != -Number) {\n      close(*(int *)((long)<span class=\"supfact\">param_1</span> + Number));\n    }\n    free(*<span class=\"supfact\">param_1</span>);\n    free(<span class=\"supfact\">param_1</span>[Number]);\n    free(<span class=\"supfact\">param_1</span>);\n  }\n  return;\n}", "code_t": "void btf__free(<span class=\"supfact\">btf</span> *<span class=\"supfact\">btf</span>) {\n  <span class=\"supfact\">btf</span> *<span class=\"supfact\">btf</span> - local;\n  if (<span class=\"supfact\">btf</span> != (<span class=\"supfact\">btf</span> *)Number) {\n    if (<span class=\"supfact\">btf</span>->fd != -Number) {\n      close(<span class=\"supfact\">btf</span>->fd);\n    }\n    free((<span class=\"supfact\">btf</span>->field_0).data);\n    free(<span class=\"supfact\">btf</span>->types);\n    free(<span class=\"supfact\">btf</span>);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "distribute * *", "pred_name": "dist", "ref_name": "btf", "ref_type": "btf * *"}], "body_in_train": true}, {"repo_owner": "unicorn-engine", "repo_name": "unicorn", "path": "unicorn-engine/unicorn/0a9c26ae442fe49db725eb097fa267b2dbc64278f22b1dffae7d880b51f846f4", "path_in_repo": "unicorn-engine/unicorn/qemu/sparc64-softmmu/memory.o", "objdump": "0000000000003b5d <memory_region_get_ram_ptr_sparc64>:\n    3b5d:\t55                   \tpush   %rbp\n    3b5e:\t48 89 e5             \tmov    %rsp,%rbp\n    3b61:\t48 83 ec 10          \tsub    $0x10,%rsp\n    3b65:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    3b69:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    3b6d:\t48 8b 80 90 00 00 00 \tmov    0x90(%rax),%rax\n    3b74:\t48 85 c0             \ttest   %rax,%rax\n    3b77:\t74 23                \tje     3b9c <memory_region_get_ram_ptr_sparc64+0x3f>\n    3b79:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    3b7d:\t48 8b 80 90 00 00 00 \tmov    0x90(%rax),%rax\n    3b84:\t48 89 c7             \tmov    %rax,%rdi\n    3b87:\te8 00 00 00 00       \tcall   3b8c <memory_region_get_ram_ptr_sparc64+0x2f>\n    3b8c:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    3b90:\t48 8b 92 98 00 00 00 \tmov    0x98(%rdx),%rdx\n    3b97:\t48 01 d0             \tadd    %rdx,%rax\n    3b9a:\teb 55                \tjmp    3bf1 <memory_region_get_ram_ptr_sparc64+0x94>\n    3b9c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    3ba0:\t0f b6 80 81 00 00 00 \tmovzbl 0x81(%rax),%eax\n    3ba7:\t84 c0                \ttest   %al,%al\n    3ba9:\t75 1f                \tjne    3bca <memory_region_get_ram_ptr_sparc64+0x6d>\n    3bab:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 3bb2 <memory_region_get_ram_ptr_sparc64+0x55>\n    3bb2:\tba e0 04 00 00       \tmov    $0x4e0,%edx\n    3bb7:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 3bbe <memory_region_get_ram_ptr_sparc64+0x61>\n    3bbe:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 3bc5 <memory_region_get_ram_ptr_sparc64+0x68>\n    3bc5:\te8 00 00 00 00       \tcall   3bca <memory_region_get_ram_ptr_sparc64+0x6d>\n    3bca:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    3bce:\t48 8b 40 70          \tmov    0x70(%rax),%rax\n    3bd2:\t48 25 00 e0 ff ff    \tand    $0xffffffffffffe000,%rax\n    3bd8:\t48 89 c2             \tmov    %rax,%rdx\n    3bdb:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    3bdf:\t48 8b 80 d8 00 00 00 \tmov    0xd8(%rax),%rax\n    3be6:\t48 89 d6             \tmov    %rdx,%rsi\n    3be9:\t48 89 c7             \tmov    %rax,%rdi\n    3bec:\te8 00 00 00 00       \tcall   3bf1 <memory_region_get_ram_ptr_sparc64+0x94>\n    3bf1:\tc9                   \tleave  \n    3bf2:\tc3                   \tret    ", "code_s": "long memory_region_get_ram_ptr_sparc64(long <span class=\"supfact\">param_1</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  if (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n    if (*(char *)(<span class=\"supfact\">param_1</span> + Number) == String) {\n      __assert_fail(String, String, Number, String);\n    }\n    <span class=\"supfact\">lVar1</span> = qemu_get_ram_ptr_sparc64(\n        *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n        *(ulong *)(<span class=\"supfact\">param_1</span> + Number) & Number);\n  } else {\n    <span class=\"supfact\">lVar1</span> = memory_region_get_ram_ptr_sparc64(\n        *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n    <span class=\"supfact\">lVar1</span> =\n        <span class=\"supfact\">lVar1</span> + *(long *)(<span class=\"supfact\">param_1</span> + Number);\n  }\n  return <span class=\"supfact\">lVar1</span>;\n}", "code_t": "void *memory_region_get_ram_ptr_sparc64(MemoryRegion *<span class=\"supfact\">mr</span>) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  MemoryRegion *<span class=\"supfact\">mr</span> - local;\n  if (<span class=\"supfact\">mr</span>->alias == (MemoryRegion *)Number) {\n    if (<span class=\"supfact\">mr</span>->terminates == false) {\n      __assert_fail(String, String, Number, String);\n    }\n    <span class=\"supfact\">pvVar1</span> = (void *)qemu_get_ram_ptr_sparc64(\n        <span class=\"supfact\">mr</span>->uc, <span class=\"supfact\">mr</span>->ram_addr & Number);\n  } else {\n    <span class=\"supfact\">pvVar1</span> =\n        memory_region_get_ram_ptr_sparc64(<span class=\"supfact\">mr</span>->alias);\n    <span class=\"supfact\">pvVar1</span> = (void *)((long)<span class=\"supfact\">pvVar1</span> +\n                                      <span class=\"supfact\">mr</span>->alias_offset);\n  }\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "channel", "ref_name": "mr", "ref_type": "MemoryRegion * *"}, {"name": "lVar1", "type": "long", "pred_name": "lVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "coriolis", "repo_name": "vmxray", "path": "coriolis/vmxray/7d17e510d963c1afe0b57a4043f6df326d5654d57293c4f19424668b7230578e", "path_in_repo": "coriolis/vmxray/original_src/qemu-0.12.4/ppc64-linux-user/op_helper.o", "objdump": "0000000000009961 <helper_vspltisw>:\n    9961:\t55                   \tpush   %rbp\n    9962:\t48 89 e5             \tmov    %rsp,%rbp\n    9965:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    9969:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n    996c:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n    996f:\tc1 e0 03             \tshl    $0x3,%eax\n    9972:\tc0 f8 03             \tsar    $0x3,%al\n    9975:\t0f be c0             \tmovsbl %al,%eax\n    9978:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n    997b:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    9982:\teb 14                \tjmp    9998 <helper_vspltisw+0x37>\n    9984:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    9988:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    998b:\t48 63 d2             \tmovslq %edx,%rdx\n    998e:\t8b 4d f8             \tmov    -0x8(%rbp),%ecx\n    9991:\t89 0c 90             \tmov    %ecx,(%rax,%rdx,4)\n    9994:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    9998:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    999b:\t83 f8 03             \tcmp    $0x3,%eax\n    999e:\t76 e4                \tjbe    9984 <helper_vspltisw+0x23>\n    99a0:\t90                   \tnop\n    99a1:\t90                   \tnop\n    99a2:\t5d                   \tpop    %rbp\n    99a3:\tc3                   \tret    ", "code_s": "void helper_vspltisw(long <span class=\"supfact\">param_1</span>,\n                     int <span class=\"supfact\">param_2</span>) {\n  uint <span class=\"supfact\">local_c</span>;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    *(int *)(<span class=\"supfact\">param_1</span> +\n             (long)(int)<span class=\"supfact\">local_c</span> * Number) =\n        (int)(char)((char)(<span class=\"supfact\">param_2</span> << Number) >> Number);\n  }\n  return;\n}", "code_t": "void helper_vspltisw(ppc_avr_t *<span class=\"supfact\">r</span>,\n                     uint32_t <span class=\"supfact\">splat</span>) {\n  uint32_t <span class=\"supfact\">splat</span> - local;\n  ppc_avr_t *<span class=\"supfact\">r</span> - local;\n  int32_t x;\n  int <span class=\"supfact\">i</span>;\n  for (<span class=\"supfact\">i</span> = Number; (uint)<span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    *(int *)((long)<span class=\"supfact\">r</span> + (long)<span class=\"supfact\">i</span> * Number) =\n        (int)(char)((char)(<span class=\"supfact\">splat</span> << Number) >> Number);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "uchar * *", "pred_name": "val", "ref_name": "r", "ref_type": "ppc_avr_t * *"}, {"name": "param_2", "type": "int", "pred_name": "len", "ref_name": "splat", "ref_type": "uint32_t"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "Alex-Movchan", "repo_name": "ft_malloc", "path": "Alex-Movchan/ft_malloc/a004f103296b379edd6da9cc37e5f7693eb61d893ac45ab10c0efbe58dfeb67d", "path_in_repo": "Alex-Movchan/ft_malloc//tools.o", "objdump": "0000000000000000 <ft_strlen>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   8:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n   f:\t00 \n  10:\teb 05                \tjmp    17 <ft_strlen+0x17>\n  12:\t48 83 45 f8 01       \taddq   $0x1,-0x8(%rbp)\n  17:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  1b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  1f:\t48 01 d0             \tadd    %rdx,%rax\n  22:\t0f b6 00             \tmovzbl (%rax),%eax\n  25:\t84 c0                \ttest   %al,%al\n  27:\t75 e9                \tjne    12 <ft_strlen+0x12>\n  29:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  2d:\t5d                   \tpop    %rbp\n  2e:\tc3                   \tret    ", "code_s": "long ft_strlen(long <span class=\"supfact\">param_1</span>) {\n  long <span class=\"supfact\">local_10</span>;\n  for (<span class=\"supfact\">local_10</span> = Number;\n       *(char *)(<span class=\"supfact\">local_10</span> + <span class=\"supfact\">param_1</span>) != String;\n       <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n  }\n  return <span class=\"supfact\">local_10</span>;\n}", "code_t": "size_t ft_strlen(char *<span class=\"supfact\">s</span>) {\n  char *<span class=\"supfact\">s</span> - local;\n  size_t <span class=\"supfact\">i</span>;\n  for (<span class=\"supfact\">i</span> = Number;\n       <span class=\"supfact\">s</span>[<span class=\"supfact\">i</span>] != String;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n  }\n  return <span class=\"supfact\">i</span>;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "s", "ref_name": "s", "ref_type": "char * *"}, {"name": "local_10", "type": "size_t", "pred_name": "i", "ref_name": "i", "ref_type": "size_t"}], "body_in_train": true}, {"repo_owner": "webosose", "repo_name": "gst-libav", "path": "webosose/gst-libav/c7c39d9cc9f169072de8bc09a7fa0d974b9ed3e37314e65b26a2d02a48fb2def", "path_in_repo": "webosose/gst-libav/gst-libs/ext/libav/libavcodec/x86/hevcdsp_init.o", "objdump": "0000000000001b4d <ff_hevc_put_hevc_epel_h64_8_avx2>:\n    1b4d:\t48 83 ec 58          \tsub    $0x58,%rsp\n    1b51:\t48 89 7c 24 28       \tmov    %rdi,0x28(%rsp)\n    1b56:\t48 89 74 24 20       \tmov    %rsi,0x20(%rsp)\n    1b5b:\t48 89 54 24 18       \tmov    %rdx,0x18(%rsp)\n    1b60:\t89 4c 24 14          \tmov    %ecx,0x14(%rsp)\n    1b64:\t4c 89 44 24 08       \tmov    %r8,0x8(%rsp)\n    1b69:\t4c 89 0c 24          \tmov    %r9,(%rsp)\n    1b6d:\tc7 44 24 4c 00 00 00 \tmovl   $0x0,0x4c(%rsp)\n    1b74:\t00 \n    1b75:\teb 61                \tjmp    1bd8 <ff_hevc_put_hevc_epel_h64_8_avx2+0x8b>\n    1b77:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n    1b7b:\t48 63 d0             \tmovslq %eax,%rdx\n    1b7e:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    1b83:\t48 01 d0             \tadd    %rdx,%rax\n    1b86:\t48 89 44 24 40       \tmov    %rax,0x40(%rsp)\n    1b8b:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n    1b8f:\t48 98                \tcltq   \n    1b91:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    1b95:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    1b9a:\t48 01 d0             \tadd    %rdx,%rax\n    1b9d:\t48 89 44 24 38       \tmov    %rax,0x38(%rsp)\n    1ba2:\t4c 8b 0c 24          \tmov    (%rsp),%r9\n    1ba6:\t4c 8b 44 24 08       \tmov    0x8(%rsp),%r8\n    1bab:\t8b 4c 24 14          \tmov    0x14(%rsp),%ecx\n    1baf:\t48 8b 54 24 18       \tmov    0x18(%rsp),%rdx\n    1bb4:\t48 8b 74 24 40       \tmov    0x40(%rsp),%rsi\n    1bb9:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    1bbe:\t48 83 ec 08          \tsub    $0x8,%rsp\n    1bc2:\t8b 7c 24 68          \tmov    0x68(%rsp),%edi\n    1bc6:\t57                   \tpush   %rdi\n    1bc7:\t48 89 c7             \tmov    %rax,%rdi\n    1bca:\te8 00 00 00 00       \tcall   1bcf <ff_hevc_put_hevc_epel_h64_8_avx2+0x82>\n    1bcf:\t48 83 c4 10          \tadd    $0x10,%rsp\n    1bd3:\t83 44 24 4c 20       \taddl   $0x20,0x4c(%rsp)\n    1bd8:\t83 7c 24 4c 3f       \tcmpl   $0x3f,0x4c(%rsp)\n    1bdd:\t7e 98                \tjle    1b77 <ff_hevc_put_hevc_epel_h64_8_avx2+0x2a>\n    1bdf:\t90                   \tnop\n    1be0:\t90                   \tnop\n    1be1:\t48 83 c4 58          \tadd    $0x58,%rsp\n    1be5:\tc3                   \tret    ", "code_s": "void ff_hevc_put_hevc_epel_h64_8_avx2(long <span class=\"supfact\">param_1</span>,\n                                      long <span class=\"supfact\">param_2</span>,\n                                      undefined8 <span class=\"supfact\">param_3</span>,\n                                      undefined4 <span class=\"supfact\">param_4</span>,\n                                      undefined8 <span class=\"supfact\">param_5</span>,\n                                      undefined8 <span class=\"supfact\">param_6</span>,\n                                      undefined4 <span class=\"supfact\">param_7</span>) {\n  int <span class=\"supfact\">local_c</span>;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    ff_hevc_put_hevc_epel_h32_8_avx2(\n        <span class=\"supfact\">param_1</span> + (long)<span class=\"supfact\">local_c</span> * Number,\n        <span class=\"supfact\">param_2</span> + <span class=\"supfact\">local_c</span>,\n        <span class=\"supfact\">param_3</span>, <span class=\"supfact\">param_4</span>,\n        <span class=\"supfact\">param_5</span>, <span class=\"supfact\">param_6</span>,\n        <span class=\"supfact\">param_7</span>);\n  }\n  return;\n}", "code_t": "void ff_hevc_put_hevc_epel_h64_8_avx2(int16_t *<span class=\"supfact\">_dst</span>,\n                                      uint8_t *<span class=\"supfact\">_src</span>,\n                                      ptrdiff_t <span class=\"supfact\">_srcstride</span>,\n                                      int <span class=\"supfact\">height</span>,\n                                      intptr_t <span class=\"supfact\">mx</span>,\n                                      intptr_t <span class=\"supfact\">my</span>,\n                                      int <span class=\"supfact\">width</span>) {\n  intptr_t <span class=\"supfact\">my</span> - local;\n  intptr_t <span class=\"supfact\">mx</span> - local;\n  int <span class=\"supfact\">height</span> - local;\n  ptrdiff_t <span class=\"supfact\">_srcstride</span> - local;\n  uint8_t *<span class=\"supfact\">_src</span> - local;\n  int16_t *<span class=\"supfact\">_dst</span> - local;\n  int16_t *dst;\n  uint8_t *src;\n  int <span class=\"supfact\">i</span>;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    ff_hevc_put_hevc_epel_h32_8_avx2(<span class=\"supfact\">_dst</span> + <span class=\"supfact\">i</span>,\n                                     <span class=\"supfact\">_src</span> + <span class=\"supfact\">i</span>,\n                                     <span class=\"supfact\">_srcstride</span>,\n                                     <span class=\"supfact\">height</span>, <span class=\"supfact\">mx</span>,\n                                     <span class=\"supfact\">my</span>, <span class=\"supfact\">width</span>);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "int16_t * *", "pred_name": "_dst", "ref_name": "_dst", "ref_type": "int16_t * *"}, {"name": "param_2", "type": "uint8_t * *", "pred_name": "_src", "ref_name": "_src", "ref_type": "uint8_t * *"}, {"name": "param_3", "type": "ptrdiff_t", "pred_name": "_srcstride", "ref_name": "_srcstride", "ref_type": "ptrdiff_t"}, {"name": "param_4", "type": "int", "pred_name": "height", "ref_name": "height", "ref_type": "int"}, {"name": "param_5", "type": "intptr_t", "pred_name": "mx", "ref_name": "mx", "ref_type": "intptr_t"}, {"name": "param_6", "type": "intptr_t", "pred_name": "my", "ref_name": "my", "ref_type": "intptr_t"}, {"name": "param_7", "type": "int", "pred_name": "width", "ref_name": "width", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "Sponk", "repo_name": "NeoEditor", "path": "Sponk/NeoEditor/9cb49605218a5d3174c5e3481dc22abe978f77b8fa5ba16559847bea4713c85c", "path_in_repo": "Sponk/NeoEditor/3rdparty/fltk/test/tabs", "objdump": "", "code_s": "int memcmp(void *__s1, void *__s2, size_t __n) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_memcmp_0046d170)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int memcmp(void *__s1, void *__s2, size_t __n) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_memcmp_0046d170)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "ucscGenomeBrowser", "repo_name": "kent", "path": "ucscGenomeBrowser/kent/d5923e0ae5e74f93040546516a51e6e8ee7d1237b4b075d225d61c5938f451df", "path_in_repo": "ucscGenomeBrowser/kent/src/parasol/lib/broadData.o", "objdump": "0000000000000467 <bdMakeFileOpenMessage>:\n 467:\t55                   \tpush   %rbp\n 468:\t48 89 e5             \tmov    %rsp,%rbp\n 46b:\t48 83 ec 20          \tsub    $0x20,%rsp\n 46f:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n 473:\t89 75 f4             \tmov    %esi,-0xc(%rbp)\n 476:\t89 55 f0             \tmov    %edx,-0x10(%rbp)\n 479:\t89 4d ec             \tmov    %ecx,-0x14(%rbp)\n 47c:\t4c 89 45 e0          \tmov    %r8,-0x20(%rbp)\n 480:\t48 8b 7d e0          \tmov    -0x20(%rbp),%rdi\n 484:\t8b 75 ec             \tmov    -0x14(%rbp),%esi\n 487:\t8b 4d f0             \tmov    -0x10(%rbp),%ecx\n 48a:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n 48d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 491:\t49 89 f9             \tmov    %rdi,%r9\n 494:\t41 89 f0             \tmov    %esi,%r8d\n 497:\tbe 02 00 00 00       \tmov    $0x2,%esi\n 49c:\t48 89 c7             \tmov    %rax,%rdi\n 49f:\te8 32 ff ff ff       \tcall   3d6 <makeOpenCloseMessage>\n 4a4:\t90                   \tnop\n 4a5:\tc9                   \tleave  \n 4a6:\tc3                   \tret    ", "code_s": "void bdMakeFileOpenMessage(undefined8 <span class=\"supfact\">param_1</span>,\n                           undefined4 <span class=\"supfact\">param_2</span>,\n                           undefined4 <span class=\"supfact\">param_3</span>,\n                           undefined4 <span class=\"supfact\">param_4</span>,\n                           undefined8 <span class=\"supfact\">param_5</span>) {\n  FUN_001003d6(<span class=\"supfact\">param_1</span>, Number, <span class=\"supfact\">param_2</span>,\n               <span class=\"supfact\">param_3</span>, <span class=\"supfact\">param_4</span>,\n               <span class=\"supfact\">param_5</span>);\n  return;\n}", "code_t": "void bdMakeFileOpenMessage(bdMessage *<span class=\"supfact\">m</span>,\n                           uint <span class=\"supfact\">machine</span>,\n                           uint <span class=\"supfact\">messageId</span>,\n                           uint <span class=\"supfact\">fileId</span>,\n                           char *<span class=\"supfact\">fileName</span>) {\n  char *<span class=\"supfact\">fileName</span> - local;\n  uint <span class=\"supfact\">fileId</span> - local;\n  uint <span class=\"supfact\">messageId</span> - local;\n  uint <span class=\"supfact\">machine</span> - local;\n  bdMessage *<span class=\"supfact\">m</span> - local;\n  makeOpenCloseMessage(<span class=\"supfact\">m</span>, Number, <span class=\"supfact\">machine</span>,\n                       <span class=\"supfact\">messageId</span>, <span class=\"supfact\">fileId</span>,\n                       <span class=\"supfact\">fileName</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "bdMessage * *", "pred_name": "m", "ref_name": "m", "ref_type": "bdMessage * *"}, {"name": "param_2", "type": "uint", "pred_name": "machine", "ref_name": "machine", "ref_type": "uint"}, {"name": "param_3", "type": "uint", "pred_name": "messageId", "ref_name": "messageId", "ref_type": "uint"}, {"name": "param_4", "type": "uint", "pred_name": "fileId", "ref_name": "fileId", "ref_type": "uint"}, {"name": "param_5", "type": "char * *", "pred_name": "fileName", "ref_name": "fileName", "ref_type": "char * *"}], "body_in_train": true}, {"repo_owner": "tonychung00", "repo_name": "centos7kernel", "path": "tonychung00/centos7kernel/df9fcc2151140804e1192d4a12743a0ff1b838f42d9ac81d53ac973ea2c2b61b", "path_in_repo": "tonychung00/centos7kernel/linux-3.10/tools/lib/traceevent/event-parse.o", "objdump": "0000000000009ed3 <pevent_parse_event>:\n    9ed3:\t55                   \tpush   %rbp\n    9ed4:\t48 89 e5             \tmov    %rsp,%rbp\n    9ed7:\t48 83 ec 30          \tsub    $0x30,%rsp\n    9edb:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    9edf:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    9ee3:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    9ee7:\t48 89 4d d0          \tmov    %rcx,-0x30(%rbp)\n    9eeb:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    9ef2:\t00 \n    9ef3:\t48 8b 7d d0          \tmov    -0x30(%rbp),%rdi\n    9ef7:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n    9efb:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    9eff:\t48 8b 75 e8          \tmov    -0x18(%rbp),%rsi\n    9f03:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n    9f07:\t49 89 f8             \tmov    %rdi,%r8\n    9f0a:\t48 89 c7             \tmov    %rax,%rdi\n    9f0d:\te8 00 00 00 00       \tcall   9f12 <pevent_parse_event+0x3f>\n    9f12:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    9f15:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    9f19:\t48 85 c0             \ttest   %rax,%rax\n    9f1c:\t75 05                \tjne    9f23 <pevent_parse_event+0x50>\n    9f1e:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    9f21:\teb 35                \tjmp    9f58 <pevent_parse_event+0x85>\n    9f23:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    9f27:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    9f2b:\t48 89 d6             \tmov    %rdx,%rsi\n    9f2e:\t48 89 c7             \tmov    %rax,%rdi\n    9f31:\te8 45 70 ff ff       \tcall   f7b <add_event>\n    9f36:\t85 c0                \ttest   %eax,%eax\n    9f38:\t74 19                \tje     9f53 <pevent_parse_event+0x80>\n    9f3a:\tc7 45 fc 61 79 fe ff \tmovl   $0xfffe7961,-0x4(%rbp)\n    9f41:\t90                   \tnop\n    9f42:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    9f46:\t48 89 c7             \tmov    %rax,%rdi\n    9f49:\te8 00 00 00 00       \tcall   9f4e <pevent_parse_event+0x7b>\n    9f4e:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    9f51:\teb 05                \tjmp    9f58 <pevent_parse_event+0x85>\n    9f53:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9f58:\tc9                   \tleave  \n    9f59:\tc3                   \tret    ", "code_s": "undefined4 pevent_parse_event(undefined8 <span class=\"supfact\">param_1</span>,\n                              undefined8 <span class=\"supfact\">param_2</span>,\n                              undefined8 <span class=\"supfact\">param_3</span>,\n                              undefined8 <span class=\"supfact\">param_4</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  long <span class=\"supfact\">local_18</span>;\n  undefined4 <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_18</span> = Number;\n  <span class=\"supfact\">local_c</span> =\n      __pevent_parse_format(&<span class=\"supfact\">local_18</span>, <span class=\"supfact\">param_1</span>,\n                            <span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>,\n                            <span class=\"supfact\">param_4</span>);\n  if (<span class=\"supfact\">local_18</span> != Number) {\n    <span class=\"supfact\">iVar1</span> =\n        FUN_00100f7b(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_18</span>);\n    if (<span class=\"supfact\">iVar1</span> == Number) {\n      <span class=\"supfact\">local_c</span> = Number;\n    } else {\n      <span class=\"supfact\">local_c</span> = Number;\n      pevent_free_format(<span class=\"supfact\">local_18</span>);\n    }\n  }\n  return <span class=\"supfact\">local_c</span>;\n}", "code_t": "pevent_errno pevent_parse_event(<span class=\"supfact\">pevent</span> *<span class=\"supfact\">pevent</span>,\n                                char *<span class=\"supfact\">buf</span>,\n                                ulong <span class=\"supfact\">size</span>,\n                                char *<span class=\"supfact\">sys</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  char *<span class=\"supfact\">sys</span> - local;\n  ulong <span class=\"supfact\">size</span> - local;\n  char *<span class=\"supfact\">buf</span> - local;\n  <span class=\"supfact\">pevent</span> *<span class=\"supfact\">pevent</span> - local;\n  event_format *<span class=\"supfact\">event</span>;\n  int <span class=\"supfact\">ret</span>;\n  <span class=\"supfact\">event</span> = (event_format *)Number;\n  <span class=\"supfact\">ret</span> = __pevent_parse_format(\n      &<span class=\"supfact\">event</span>, <span class=\"supfact\">pevent</span>, <span class=\"supfact\">buf</span>,\n      <span class=\"supfact\">size</span>, <span class=\"supfact\">sys</span>);\n  if (<span class=\"supfact\">event</span> != (event_format *)Number) {\n    <span class=\"supfact\">iVar1</span> =\n        add_event(<span class=\"supfact\">pevent</span>, <span class=\"supfact\">event</span>);\n    if (<span class=\"supfact\">iVar1</span> == Number) {\n      <span class=\"supfact\">ret</span> = PEVENT_ERRNO__SUCCESS;\n    } else {\n      <span class=\"supfact\">ret</span> = -Number;\n      pevent_free_format(<span class=\"supfact\">event</span>);\n    }\n  }\n  return <span class=\"supfact\">ret</span>;\n}", "var": [{"name": "param_1", "type": "pevent * *", "pred_name": "pevent", "ref_name": "pevent", "ref_type": "pevent * *"}, {"name": "param_2", "type": "char * *", "pred_name": "buf", "ref_name": "buf", "ref_type": "char * *"}, {"name": "param_3", "type": "ulong", "pred_name": "size", "ref_name": "size", "ref_type": "ulong"}, {"name": "param_4", "type": "char * *", "pred_name": "sys", "ref_name": "sys", "ref_type": "char * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "local_18", "type": "event_format * *", "pred_name": "event", "ref_name": "event", "ref_type": "event_format * *"}, {"name": "local_c", "type": "int", "pred_name": "ret", "ref_name": "ret", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "marcoscunha", "repo_name": "reverse", "path": "marcoscunha/reverse/df1e6d6a5ae4cf868a1939103019f06685519669be28e99ee7bfb4b6ab1823ed", "path_in_repo": "marcoscunha/reverse/platform/hardware/rabbits/rabbits/qemu/sc_qemu/mipsel-linux-user/op_helper.o", "objdump": "00000000000053fd <helper_cmp_d_ole>:\n    53fd:\t55                   \tpush   %rbp\n    53fe:\t48 89 e5             \tmov    %rsp,%rbp\n    5401:\t48 83 ec 30          \tsub    $0x30,%rsp\n    5405:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    5409:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    540d:\t89 55 dc             \tmov    %edx,-0x24(%rbp)\n    5410:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    5417:\t00 00 \n    5419:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    541d:\t31 c0                \txor    %eax,%eax\n    541f:\t4c 89 f0             \tmov    %r14,%rax\n    5422:\t48 05 d8 01 00 00    \tadd    $0x1d8,%rax\n    5428:\t48 89 c6             \tmov    %rax,%rsi\n    542b:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    5430:\te8 00 00 00 00       \tcall   5435 <helper_cmp_d_ole+0x38>\n    5435:\t4c 89 f0             \tmov    %r14,%rax\n    5438:\t48 8d 90 d8 01 00 00 \tlea    0x1d8(%rax),%rdx\n    543f:\t48 8b 4d e0          \tmov    -0x20(%rbp),%rcx\n    5443:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    5447:\t48 89 ce             \tmov    %rcx,%rsi\n    544a:\t48 89 c7             \tmov    %rax,%rdi\n    544d:\te8 00 00 00 00       \tcall   5452 <helper_cmp_d_ole+0x55>\n    5452:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    5455:\te8 a6 c2 ff ff       \tcall   1700 <update_fcr31>\n    545a:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    545e:\t74 36                \tje     5496 <helper_cmp_d_ole+0x99>\n    5460:\t4c 89 f0             \tmov    %r14,%rax\n    5463:\t8b 80 e4 01 00 00    \tmov    0x1e4(%rax),%eax\n    5469:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n    546d:\t74 15                \tje     5484 <helper_cmp_d_ole+0x87>\n    546f:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n    5472:\t83 c2 18             \tadd    $0x18,%edx\n    5475:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    547a:\t89 d1                \tmov    %edx,%ecx\n    547c:\td3 e6                \tshl    %cl,%esi\n    547e:\t89 f2                \tmov    %esi,%edx\n    5480:\t89 d1                \tmov    %edx,%ecx\n    5482:\teb 05                \tjmp    5489 <helper_cmp_d_ole+0x8c>\n    5484:\tb9 00 00 80 00       \tmov    $0x800000,%ecx\n    5489:\t4c 89 f2             \tmov    %r14,%rdx\n    548c:\t09 c8                \tor     %ecx,%eax\n    548e:\t89 82 e4 01 00 00    \tmov    %eax,0x1e4(%rdx)\n    5494:\teb 36                \tjmp    54cc <helper_cmp_d_ole+0xcf>\n    5496:\t4c 89 f0             \tmov    %r14,%rax\n    5499:\t8b 80 e4 01 00 00    \tmov    0x1e4(%rax),%eax\n    549f:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n    54a3:\t74 17                \tje     54bc <helper_cmp_d_ole+0xbf>\n    54a5:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n    54a8:\t83 c2 18             \tadd    $0x18,%edx\n    54ab:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    54b0:\t89 d1                \tmov    %edx,%ecx\n    54b2:\td3 e6                \tshl    %cl,%esi\n    54b4:\t89 f2                \tmov    %esi,%edx\n    54b6:\tf7 d2                \tnot    %edx\n    54b8:\t89 d1                \tmov    %edx,%ecx\n    54ba:\teb 05                \tjmp    54c1 <helper_cmp_d_ole+0xc4>\n    54bc:\tb9 ff ff 7f ff       \tmov    $0xff7fffff,%ecx\n    54c1:\t4c 89 f2             \tmov    %r14,%rdx\n    54c4:\t21 c8                \tand    %ecx,%eax\n    54c6:\t89 82 e4 01 00 00    \tmov    %eax,0x1e4(%rdx)\n    54cc:\t90                   \tnop\n    54cd:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    54d1:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    54d8:\t00 00 \n    54da:\t74 05                \tje     54e1 <helper_cmp_d_ole+0xe4>\n    54dc:\te8 00 00 00 00       \tcall   54e1 <helper_cmp_d_ole+0xe4>\n    54e1:\tc9                   \tleave  \n    54e2:\tc3                   \tret    ", "code_s": "void helper_cmp_d_ole(undefined8 <span class=\"supfact\">param_1</span>,\n                      undefined8 <span class=\"supfact\">param_2</span>,\n                      int <span class=\"supfact\">param_3</span>) {\n  long lVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  uint <span class=\"supfact\">uVar3</span>;\n  long <span class=\"supfact\">unaff_R14</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  set_float_exception_flags(Number, <span class=\"supfact\">unaff_R14</span> + Number);\n  <span class=\"supfact\">iVar2</span> =\n      float64_le_quiet(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n                       <span class=\"supfact\">unaff_R14</span> + Number);\n  FUN_00101700();\n  if (<span class=\"supfact\">iVar2</span> == Number) {\n    if (<span class=\"supfact\">param_3</span> == Number) {\n      <span class=\"supfact\">uVar3</span> = Number;\n    } else {\n      <span class=\"supfact\">uVar3</span> =\n          ~(Number << ((char)<span class=\"supfact\">param_3</span> + Number & Number));\n    }\n    *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) =\n        *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) & <span class=\"supfact\">uVar3</span>;\n  } else {\n    if (<span class=\"supfact\">param_3</span> == Number) {\n      <span class=\"supfact\">uVar3</span> = Number;\n    } else {\n      <span class=\"supfact\">uVar3</span> =\n          Number << ((char)<span class=\"supfact\">param_3</span> + Number & Number);\n    }\n    *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) =\n        *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) | <span class=\"supfact\">uVar3</span>;\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "code_t": "void helper_cmp_d_ole(uint64_t <span class=\"supfact\">fdt0</span>,\n                      uint64_t <span class=\"supfact\">fdt1</span>, int <span class=\"supfact\">cc</span>) {\n  long lVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  uint <span class=\"supfact\">uVar3</span>;\n  long <span class=\"supfact\">unaff_R14</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">cc</span> - local;\n  uint64_t <span class=\"supfact\">fdt1</span> - local;\n  uint64_t <span class=\"supfact\">fdt0</span> - local;\n  int c;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  set_float_exception_flags(Number, <span class=\"supfact\">unaff_R14</span> + Number);\n  <span class=\"supfact\">iVar2</span> =\n      float64_le_quiet(<span class=\"supfact\">fdt0</span>, <span class=\"supfact\">fdt1</span>,\n                       <span class=\"supfact\">unaff_R14</span> + Number);\n  update_fcr31();\n  if (<span class=\"supfact\">iVar2</span> == Number) {\n    if (<span class=\"supfact\">cc</span> == Number) {\n      <span class=\"supfact\">uVar3</span> = Number;\n    } else {\n      <span class=\"supfact\">uVar3</span> =\n          ~(Number << ((char)<span class=\"supfact\">cc</span> + Number & Number));\n    }\n    *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) =\n        *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) & <span class=\"supfact\">uVar3</span>;\n  } else {\n    if (<span class=\"supfact\">cc</span> == Number) {\n      <span class=\"supfact\">uVar3</span> = Number;\n    } else {\n      <span class=\"supfact\">uVar3</span> = Number\n                              << ((char)<span class=\"supfact\">cc</span> + Number & Number);\n    }\n    *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) =\n        *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) | <span class=\"supfact\">uVar3</span>;\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "uint64_t", "pred_name": "fdt0", "ref_name": "fdt0", "ref_type": "uint64_t"}, {"name": "param_2", "type": "uint64_t", "pred_name": "fdt1", "ref_name": "fdt1", "ref_type": "uint64_t"}, {"name": "param_3", "type": "int", "pred_name": "cc", "ref_name": "cc", "ref_type": "int"}, {"name": "iVar2", "type": "int", "pred_name": "iVar2", "ref_name": "iVar2", "ref_type": "int"}, {"name": "uVar3", "type": "uint", "pred_name": "uVar3", "ref_name": "uVar3", "ref_type": "uint"}, {"name": "unaff_R14", "type": "long", "pred_name": "unaff_R14", "ref_name": "unaff_R14", "ref_type": "long"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "coriolis", "repo_name": "vmxray", "path": "coriolis/vmxray/7d17e510d963c1afe0b57a4043f6df326d5654d57293c4f19424668b7230578e", "path_in_repo": "coriolis/vmxray/original_src/qemu-0.12.4/ppc64-linux-user/op_helper.o", "objdump": "0000000000005f60 <helper_vcmpgtsh>:\n    5f60:\t55                   \tpush   %rbp\n    5f61:\t48 89 e5             \tmov    %rsp,%rbp\n    5f64:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    5f68:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n    5f6c:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n    5f70:\tc7 45 f0 ff ff ff ff \tmovl   $0xffffffff,-0x10(%rbp)\n    5f77:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n    5f7a:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    5f7d:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n    5f84:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n    5f8b:\teb 52                \tjmp    5fdf <helper_vcmpgtsh+0x7f>\n    5f8d:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    5f91:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n    5f94:\t48 63 d2             \tmovslq %edx,%rdx\n    5f97:\t0f b7 0c 50          \tmovzwl (%rax,%rdx,2),%ecx\n    5f9b:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    5f9f:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n    5fa2:\t48 63 d2             \tmovslq %edx,%rdx\n    5fa5:\t0f b7 04 50          \tmovzwl (%rax,%rdx,2),%eax\n    5fa9:\t66 39 c1             \tcmp    %ax,%cx\n    5fac:\t7e 05                \tjle    5fb3 <helper_vcmpgtsh+0x53>\n    5fae:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n    5fb1:\teb 05                \tjmp    5fb8 <helper_vcmpgtsh+0x58>\n    5fb3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5fb8:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n    5fbb:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    5fbe:\t89 c1                \tmov    %eax,%ecx\n    5fc0:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    5fc4:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n    5fc7:\t48 63 d2             \tmovslq %edx,%rdx\n    5fca:\t66 89 0c 50          \tmov    %cx,(%rax,%rdx,2)\n    5fce:\t90                   \tnop\n    5fcf:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    5fd2:\t21 45 fc             \tand    %eax,-0x4(%rbp)\n    5fd5:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    5fd8:\t09 45 f8             \tor     %eax,-0x8(%rbp)\n    5fdb:\t83 45 f4 01          \taddl   $0x1,-0xc(%rbp)\n    5fdf:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    5fe2:\t83 f8 07             \tcmp    $0x7,%eax\n    5fe5:\t76 a6                \tjbe    5f8d <helper_vcmpgtsh+0x2d>\n    5fe7:\t90                   \tnop\n    5fe8:\t90                   \tnop\n    5fe9:\t5d                   \tpop    %rbp\n    5fea:\tc3                   \tret    ", "code_s": "void helper_vcmpgtsh(long <span class=\"supfact\">param_1</span>, long <span class=\"supfact\">param_2</span>,\n                     long <span class=\"supfact\">param_3</span>) {\n  undefined2 <span class=\"supfact\">uVar1</span>;\n  uint <span class=\"supfact\">local_14</span>;\n  for (<span class=\"supfact\">local_14</span> = Number; <span class=\"supfact\">local_14</span> < Number;\n       <span class=\"supfact\">local_14</span> = <span class=\"supfact\">local_14</span> + Number) {\n    if (*(short *)(<span class=\"supfact\">param_3</span> +\n                   (long)(int)<span class=\"supfact\">local_14</span> * Number) <\n        *(short *)(<span class=\"supfact\">param_2</span> +\n                   (long)(int)<span class=\"supfact\">local_14</span> * Number)) {\n      <span class=\"supfact\">uVar1</span> = Number;\n    } else {\n      <span class=\"supfact\">uVar1</span> = Number;\n    }\n    *(undefined2 *)(<span class=\"supfact\">param_1</span> +\n                    (long)(int)<span class=\"supfact\">local_14</span> * Number) =\n        <span class=\"supfact\">uVar1</span>;\n  }\n  return;\n}", "code_t": "void helper_vcmpgtsh(ppc_avr_t *<span class=\"supfact\">r</span>, ppc_avr_t *<span class=\"supfact\">a</span>,\n                     ppc_avr_t *<span class=\"supfact\">b</span>) {\n  uint16_t <span class=\"supfact\">uVar1</span>;\n  ppc_avr_t *<span class=\"supfact\">b</span> - local;\n  ppc_avr_t *<span class=\"supfact\">a</span> - local;\n  ppc_avr_t *<span class=\"supfact\">r</span> - local;\n  uint32_t result;\n  uint32_t ones;\n  int <span class=\"supfact\">i</span>;\n  uint32_t none;\n  uint32_t all;\n  for (<span class=\"supfact\">i</span> = Number; (uint)<span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    if (<span class=\"supfact\">b</span>->s16[<span class=\"supfact\">i</span>] <\n        <span class=\"supfact\">a</span>->s16[<span class=\"supfact\">i</span>]) {\n      <span class=\"supfact\">uVar1</span> = Number;\n    } else {\n      <span class=\"supfact\">uVar1</span> = Number;\n    }\n    <span class=\"supfact\">r</span>->u16[<span class=\"supfact\">i</span>] = <span class=\"supfact\">uVar1</span>;\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "void * *", "pred_name": "d", "ref_name": "r", "ref_type": "ppc_avr_t * *"}, {"name": "param_2", "type": "void * *", "pred_name": "a", "ref_name": "a", "ref_type": "ppc_avr_t * *"}, {"name": "param_3", "type": "void * *", "pred_name": "b", "ref_name": "b", "ref_type": "ppc_avr_t * *"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "uVar1", "ref_type": "uint16_t"}, {"name": "local_14", "type": "int", "pred_name": "r", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "darklegion", "repo_name": "tremulous", "path": "darklegion/tremulous/324ed2579203d9f3a63d7c5064bc864223e7054ac1f258b4dd6f3f1e81e90a90", "path_in_repo": "darklegion/tremulous//build/release-linux-x86_64/base/cgame/ui_shared.o", "objdump": "0000000000010f97 <MenuParse_visible>:\n   10f97:\t55                   \tpush   %rbp\n   10f98:\t48 89 e5             \tmov    %rsp,%rbp\n   10f9b:\t48 83 ec 20          \tsub    $0x20,%rsp\n   10f9f:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   10fa3:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n   10fa6:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   10faa:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   10fae:\t48 8d 55 f4          \tlea    -0xc(%rbp),%rdx\n   10fb2:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n   10fb5:\t48 89 d6             \tmov    %rdx,%rsi\n   10fb8:\t89 c7                \tmov    %eax,%edi\n   10fba:\te8 00 00 00 00       \tcall   10fbf <MenuParse_visible+0x28>\n   10fbf:\t85 c0                \ttest   %eax,%eax\n   10fc1:\t75 07                \tjne    10fca <MenuParse_visible+0x33>\n   10fc3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   10fc8:\teb 1f                \tjmp    10fe9 <MenuParse_visible+0x52>\n   10fca:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n   10fcd:\t85 c0                \ttest   %eax,%eax\n   10fcf:\t74 13                \tje     10fe4 <MenuParse_visible+0x4d>\n   10fd1:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   10fd5:\t8b 40 58             \tmov    0x58(%rax),%eax\n   10fd8:\t83 c8 04             \tor     $0x4,%eax\n   10fdb:\t89 c2                \tmov    %eax,%edx\n   10fdd:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   10fe1:\t89 50 58             \tmov    %edx,0x58(%rax)\n   10fe4:\tb8 01 00 00 00       \tmov    $0x1,%eax\n   10fe9:\tc9                   \tleave  \n   10fea:\tc3                   \tret    ", "code_s": "undefined8 MenuParse_visible(long <span class=\"supfact\">param_1</span>,\n                             undefined4 <span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  undefined8 <span class=\"supfact\">uVar2</span>;\n  int <span class=\"supfact\">local_14</span>;\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = <span class=\"supfact\">param_1</span>;\n  <span class=\"supfact\">iVar1</span> =\n      PC_Int_Parse(<span class=\"supfact\">param_2</span>, &<span class=\"supfact\">local_14</span>);\n  if (<span class=\"supfact\">iVar1</span> == Number) {\n    <span class=\"supfact\">uVar2</span> = Number;\n  } else {\n    if (<span class=\"supfact\">local_14</span> != Number) {\n      *(uint *)(<span class=\"supfact\">local_10</span> + Number) =\n          *(uint *)(<span class=\"supfact\">local_10</span> + Number) | Number;\n    }\n    <span class=\"supfact\">uVar2</span> = Number;\n  }\n  return <span class=\"supfact\">uVar2</span>;\n}", "code_t": "qboolean MenuParse_visible(itemDef_t *<span class=\"supfact\">item</span>,\n                           int <span class=\"supfact\">handle</span>) {\n  qboolean <span class=\"supfact\">qVar1</span>;\n  int <span class=\"supfact\">handle</span> - local;\n  itemDef_t *<span class=\"supfact\">item</span> - local;\n  int <span class=\"supfact\">i</span>;\n  menuDef_t *<span class=\"supfact\">menu</span>;\n  <span class=\"supfact\">menu</span> = (menuDef_t *)<span class=\"supfact\">item</span>;\n  <span class=\"supfact\">qVar1</span> =\n      PC_Int_Parse(<span class=\"supfact\">handle</span>, &<span class=\"supfact\">i</span>);\n  if (<span class=\"supfact\">qVar1</span> == qfalse) {\n    <span class=\"supfact\">qVar1</span> = qfalse;\n  } else {\n    if (<span class=\"supfact\">i</span> != Number) {\n      (<span class=\"supfact\">menu</span>->window).flags =\n          (<span class=\"supfact\">menu</span>->window).flags | Number;\n    }\n    <span class=\"supfact\">qVar1</span> = qtrue;\n  }\n  return <span class=\"supfact\">qVar1</span>;\n}", "var": [{"name": "param_1", "type": "itemDef_t * *", "pred_name": "item", "ref_name": "item", "ref_type": "itemDef_t * *"}, {"name": "param_2", "type": "int", "pred_name": "handle", "ref_name": "handle", "ref_type": "int"}, {"name": "iVar1", "type": "qboolean", "pred_name": "qVar1", "ref_name": "qVar1", "ref_type": "qboolean"}, {"name": "uVar2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_14", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}, {"name": "local_10", "type": "menuDef_t * *", "pred_name": "menu", "ref_name": "menu", "ref_type": "menuDef_t * *"}], "body_in_train": false}, {"repo_owner": "iortcw", "repo_name": "iortcw", "path": "iortcw/iortcw/7b87d9fde8c09ac7c6799e22650b339af00d873828d67708be41e12f9c41dd1e", "path_in_repo": "iortcw/iortcw/MP/build/release-linux-x86_64/main/game/g_trigger.o", "objdump": "0000000000000112 <multi_trigger>:\n     112:\t55                   \tpush   %rbp\n     113:\t48 89 e5             \tmov    %rsp,%rbp\n     116:\t48 83 ec 30          \tsub    $0x30,%rsp\n     11a:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n     11e:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n     122:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     126:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n     12a:\t48 89 90 70 04 00 00 \tmov    %rdx,0x470(%rax)\n     131:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     135:\t8b 80 f4 03 00 00    \tmov    0x3f4(%rax),%eax\n     13b:\t85 c0                \ttest   %eax,%eax\n     13d:\t0f 85 19 01 00 00    \tjne    25c <multi_trigger+0x14a>\n     143:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     147:\t48 8b 90 70 04 00 00 \tmov    0x470(%rax),%rdx\n     14e:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     152:\t48 89 d6             \tmov    %rdx,%rsi\n     155:\t48 89 c7             \tmov    %rax,%rdi\n     158:\te8 00 00 00 00       \tcall   15d <multi_trigger+0x4b>\n     15d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     161:\tf3 0f 10 80 94 04 00 \tmovss  0x494(%rax),%xmm0\n     168:\t00 \n     169:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n     16d:\t0f 2f c1             \tcomiss %xmm1,%xmm0\n     170:\t0f 86 ac 00 00 00    \tjbe    222 <multi_trigger+0x110>\n     176:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     17a:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 181 <multi_trigger+0x6f>\n     181:\t48 89 90 f8 03 00 00 \tmov    %rdx,0x3f8(%rax)\n     188:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 18f <multi_trigger+0x7d>\n     18f:\t8b 40 28             \tmov    0x28(%rax),%eax\n     192:\tf2 0f 2a d8          \tcvtsi2sd %eax,%xmm3\n     196:\tf2 0f 11 5d e8       \tmovsd  %xmm3,-0x18(%rbp)\n     19b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     19f:\tf3 0f 10 80 94 04 00 \tmovss  0x494(%rax),%xmm0\n     1a6:\t00 \n     1a7:\tf3 0f 5a d0          \tcvtss2sd %xmm0,%xmm2\n     1ab:\tf2 0f 11 55 e0       \tmovsd  %xmm2,-0x20(%rbp)\n     1b0:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     1b4:\tf3 0f 10 80 98 04 00 \tmovss  0x498(%rax),%xmm0\n     1bb:\t00 \n     1bc:\tf3 0f 5a e0          \tcvtss2sd %xmm0,%xmm4\n     1c0:\tf2 0f 11 65 d8       \tmovsd  %xmm4,-0x28(%rbp)\n     1c5:\te8 00 00 00 00       \tcall   1ca <multi_trigger+0xb8>\n     1ca:\t25 ff 7f 00 00       \tand    $0x7fff,%eax\n     1cf:\tf3 0f 2a c0          \tcvtsi2ss %eax,%xmm0\n     1d3:\tf3 0f 10 0d 00 00 00 \tmovss  0x0(%rip),%xmm1        # 1db <multi_trigger+0xc9>\n     1da:\t00 \n     1db:\tf3 0f 5e c1          \tdivss  %xmm1,%xmm0\n     1df:\tf3 0f 5a c0          \tcvtss2sd %xmm0,%xmm0\n     1e3:\tf2 0f 10 0d 00 00 00 \tmovsd  0x0(%rip),%xmm1        # 1eb <multi_trigger+0xd9>\n     1ea:\t00 \n     1eb:\tf2 0f 5c c1          \tsubsd  %xmm1,%xmm0\n     1ef:\tf2 0f 58 c0          \taddsd  %xmm0,%xmm0\n     1f3:\tf2 0f 59 45 d8       \tmulsd  -0x28(%rbp),%xmm0\n     1f8:\tf2 0f 10 4d e0       \tmovsd  -0x20(%rbp),%xmm1\n     1fd:\tf2 0f 58 c8          \taddsd  %xmm0,%xmm1\n     201:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # 209 <multi_trigger+0xf7>\n     208:\t00 \n     209:\tf2 0f 59 c1          \tmulsd  %xmm1,%xmm0\n     20d:\tf2 0f 58 45 e8       \taddsd  -0x18(%rbp),%xmm0\n     212:\tf2 0f 2c d0          \tcvttsd2si %xmm0,%edx\n     216:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     21a:\t89 90 f4 03 00 00    \tmov    %edx,0x3f4(%rax)\n     220:\teb 3b                \tjmp    25d <multi_trigger+0x14b>\n     222:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     226:\t48 c7 80 10 04 00 00 \tmovq   $0x0,0x410(%rax)\n     22d:\t00 00 00 00 \n     231:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 238 <multi_trigger+0x126>\n     238:\t8b 40 28             \tmov    0x28(%rax),%eax\n     23b:\t8d 50 64             \tlea    0x64(%rax),%edx\n     23e:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     242:\t89 90 f4 03 00 00    \tmov    %edx,0x3f4(%rax)\n     248:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     24c:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 253 <multi_trigger+0x141>\n     253:\t48 89 90 f8 03 00 00 \tmov    %rdx,0x3f8(%rax)\n     25a:\teb 01                \tjmp    25d <multi_trigger+0x14b>\n     25c:\t90                   \tnop\n     25d:\tc9                   \tleave  \n     25e:\tc3                   \tret    ", "code_s": "void multi_trigger(long <span class=\"supfact\">param_1</span>,\n                   undefined8 <span class=\"supfact\">param_2</span>) {\n  float fVar1;\n  float fVar2;\n  uint <span class=\"supfact\">uVar3</span>;\n  double <span class=\"supfact\">dVar4</span>;\n  double <span class=\"supfact\">dVar5</span>;\n  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = <span class=\"supfact\">param_2</span>;\n  if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n    G_UseTargets(<span class=\"supfact\">param_1</span>,\n                 *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n    if (*(float *)(<span class=\"supfact\">param_1</span> + Number) <= Number) {\n      *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n      *(int *)(<span class=\"supfact\">param_1</span> + Number) = _trap_Trace + Number;\n      *(code **)(<span class=\"supfact\">param_1</span> + Number) = G_FreeEntity;\n    } else {\n      *(code **)(<span class=\"supfact\">param_1</span> + Number) = multi_wait;\n      <span class=\"supfact\">dVar5</span> = (double)_trap_Trace;\n      fVar1 = *(float *)(<span class=\"supfact\">param_1</span> + Number);\n      fVar2 = *(float *)(<span class=\"supfact\">param_1</span> + Number);\n      <span class=\"supfact\">uVar3</span> = rand();\n      <span class=\"supfact\">dVar4</span> =\n          (double)((float)(<span class=\"supfact\">uVar3</span> & Number) / DAT_0010257c) -\n          DAT_00102580;\n      *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n          (int)(DAT_00102588 * ((double)fVar1 + (<span class=\"supfact\">dVar4</span> +\n                                                 <span class=\"supfact\">dVar4</span>) *\n                                                    (double)fVar2) +\n                <span class=\"supfact\">dVar5</span>);\n    }\n  }\n  return;\n}", "code_t": "void multi_trigger(gentity_t *<span class=\"supfact\">ent</span>,\n                   gentity_t *<span class=\"supfact\">activator</span>) {\n  float fVar1;\n  float fVar2;\n  uint <span class=\"supfact\">uVar3</span>;\n  double <span class=\"supfact\">dVar4</span>;\n  double <span class=\"supfact\">dVar5</span>;\n  gentity_t *<span class=\"supfact\">activator</span> - local;\n  gentity_t *<span class=\"supfact\">ent</span> - local;\n  <span class=\"supfact\">ent</span>-><span class=\"supfact\">activator</span> = <span class=\"supfact\">activator</span>;\n  if (<span class=\"supfact\">ent</span>->nextthink == Number) {\n    G_UseTargets(<span class=\"supfact\">ent</span>,\n                 <span class=\"supfact\">ent</span>-><span class=\"supfact\">activator</span>);\n    if (<span class=\"supfact\">ent</span>->wait <= Number) {\n      <span class=\"supfact\">ent</span>->touch =\n          (_func_void_gentity_t_ptr_gentity_t_ptr_trace_t_ptr *)Number;\n      <span class=\"supfact\">ent</span>->nextthink = _trap_Trace + Number;\n      <span class=\"supfact\">ent</span>->think = G_FreeEntity;\n    } else {\n      <span class=\"supfact\">ent</span>->think = multi_wait;\n      <span class=\"supfact\">dVar5</span> = (double)_trap_Trace;\n      fVar1 = <span class=\"supfact\">ent</span>->wait;\n      fVar2 = <span class=\"supfact\">ent</span>->random;\n      <span class=\"supfact\">uVar3</span> = rand();\n      <span class=\"supfact\">dVar4</span> =\n          (double)((float)(<span class=\"supfact\">uVar3</span> & Number) / DAT_0010257c) -\n          DAT_00102580;\n      <span class=\"supfact\">ent</span>->nextthink =\n          (int)(DAT_00102588 * ((double)fVar1 + (<span class=\"supfact\">dVar4</span> +\n                                                 <span class=\"supfact\">dVar4</span>) *\n                                                    (double)fVar2) +\n                <span class=\"supfact\">dVar5</span>);\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "edict_t * *", "pred_name": "self", "ref_name": "ent", "ref_type": "gentity_t * *"}, {"name": "param_2", "type": "edict_t * *", "pred_name": "other", "ref_name": "activator", "ref_type": "gentity_t * *"}, {"name": "uVar3", "type": "disappear", "pred_name": "", "ref_name": "uVar3", "ref_type": "uint"}, {"name": "dVar4", "type": "double", "pred_name": "dVar4", "ref_name": "dVar4", "ref_type": "double"}, {"name": "dVar5", "type": "disappear", "pred_name": "", "ref_name": "dVar5", "ref_type": "double"}], "body_in_train": false}, {"repo_owner": "blacklion", "repo_name": "GEOM-Events", "path": "blacklion/GEOM-Events/2eaec29c62dd5fd19068374886790a505ac0b4dafe4bbf5da99157992ea81782", "path_in_repo": "blacklion/GEOM-Events/gnu/usr.bin/gdb/libgdb/gdbtypes.so", "objdump": "0000000000001f14 <lookup_typename>:\n    1f14:\t55                   \tpush   %rbp\n    1f15:\t48 89 e5             \tmov    %rsp,%rbp\n    1f18:\t48 83 ec 30          \tsub    $0x30,%rsp\n    1f1c:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    1f20:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    1f24:\t89 55 dc             \tmov    %edx,-0x24(%rbp)\n    1f27:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n    1f2b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1f2f:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    1f35:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    1f3a:\tba 01 00 00 00       \tmov    $0x1,%edx\n    1f3f:\t48 89 c7             \tmov    %rax,%rdi\n    1f42:\te8 00 00 00 00       \tcall   1f47 <lookup_typename+0x33>\n    1f47:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1f4b:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    1f50:\t74 12                \tje     1f64 <lookup_typename+0x50>\n    1f52:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1f56:\t0f b7 40 30          \tmovzwl 0x30(%rax),%eax\n    1f5a:\t66 25 c0 0f          \tand    $0xfc0,%ax\n    1f5e:\t66 3d 40 02          \tcmp    $0x240,%ax\n    1f62:\t74 49                \tje     1fad <lookup_typename+0x99>\n    1f64:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1f68:\t48 89 c7             \tmov    %rax,%rdi\n    1f6b:\te8 00 00 00 00       \tcall   1f70 <lookup_typename+0x5c>\n    1f70:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1f74:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    1f79:\t74 06                \tje     1f81 <lookup_typename+0x6d>\n    1f7b:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1f7f:\teb 34                \tjmp    1fb5 <lookup_typename+0xa1>\n    1f81:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    1f86:\t75 0d                \tjne    1f95 <lookup_typename+0x81>\n    1f88:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n    1f8c:\t74 07                \tje     1f95 <lookup_typename+0x81>\n    1f8e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1f93:\teb 20                \tjmp    1fb5 <lookup_typename+0xa1>\n    1f95:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1f99:\t48 89 c6             \tmov    %rax,%rsi\n    1f9c:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 1fa3 <lookup_typename+0x8f>\n    1fa3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1fa8:\te8 00 00 00 00       \tcall   1fad <lookup_typename+0x99>\n    1fad:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1fb1:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n    1fb5:\tc9                   \tleave  \n    1fb6:\tc3                   \tret    ", "code_s": "long lookup_typename(undefined8 <span class=\"supfact\">param_1</span>,\n                     undefined8 <span class=\"supfact\">param_2</span>,\n                     int <span class=\"supfact\">param_3</span>) {\n  long lVar1;\n  long lVar2;\n  lVar1 = lookup_symbol(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n                        Number, Number, Number);\n  if ((lVar1 == Number) || ((*(ushort *)(lVar1 + Number) & Number) != Number)) {\n    lVar2 = lookup_primitive_typename(<span class=\"supfact\">param_1</span>);\n    if (lVar2 != Number) {\n      return lVar2;\n    }\n    if (<span class=\"supfact\">param_3</span> != Number) {\n      return Number;\n    }\n    error(String, <span class=\"supfact\">param_1</span>);\n  }\n  return *(long *)(lVar1 + Number);\n}", "code_t": "type *lookup_typename(char *<span class=\"supfact\">name</span>,\n                      <span class=\"supfact\">block</span> *<span class=\"supfact\">block</span>,\n                      int <span class=\"supfact\">noerr</span>) {\n  long lVar1;\n  type *ptVar2;\n  int <span class=\"supfact\">noerr</span> - local;\n  <span class=\"supfact\">block</span> *<span class=\"supfact\">block</span> - local;\n  char *<span class=\"supfact\">name</span> - local;\n  type *tmp;\n  symbol *sym;\n  lVar1 = lookup_symbol(<span class=\"supfact\">name</span>, <span class=\"supfact\">block</span>, Number,\n                        Number, Number);\n  if ((lVar1 == Number) || ((*(ushort *)(lVar1 + Number) & Number) != Number)) {\n    ptVar2 = lookup_primitive_typename(<span class=\"supfact\">name</span>);\n    if (ptVar2 != (type *)Number) {\n      return ptVar2;\n    }\n    if (<span class=\"supfact\">noerr</span> != Number) {\n      return (type *)Number;\n    }\n    error(String, <span class=\"supfact\">name</span>);\n  }\n  return *(type **)(lVar1 + Number);\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "handle", "ref_name": "name", "ref_type": "char * *"}, {"name": "param_2", "type": "uchar * *", "pred_name": "buf", "ref_name": "block", "ref_type": "block * *"}, {"name": "param_3", "type": "int", "pred_name": "bytes", "ref_name": "noerr", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "yuroc5390", "repo_name": "fuzz_target", "path": "yuroc5390/fuzz_target/bb37b1f1f41843bd09dc72c94495cc96075bea3aed988e4c245620437d18bd48", "path_in_repo": "yuroc5390/fuzz_target/qemu_mode/qemu-2.10.0/hw/net/pcnet.o", "objdump": "000000000000441f <pcnet_ioport_readl>:\n    441f:\t55                   \tpush   %rbp\n    4420:\t48 89 e5             \tmov    %rsp,%rbp\n    4423:\t48 83 ec 20          \tsub    $0x20,%rsp\n    4427:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    442b:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n    442e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    4432:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    4436:\tc7 45 f4 ff ff ff ff \tmovl   $0xffffffff,-0xc(%rbp)\n    443d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    4441:\t48 89 c7             \tmov    %rax,%rdi\n    4444:\te8 ac f5 ff ff       \tcall   39f5 <pcnet_poll_timer>\n    4449:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    444d:\t0f b7 80 70 21 00 00 \tmovzwl 0x2170(%rax),%eax\n    4454:\t0f b7 c0             \tmovzwl %ax,%eax\n    4457:\t25 80 00 00 00       \tand    $0x80,%eax\n    445c:\t85 c0                \ttest   %eax,%eax\n    445e:\t0f 84 87 00 00 00    \tje     44eb <pcnet_ioport_readl+0xcc>\n    4464:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n    4467:\t83 e0 0f             \tand    $0xf,%eax\n    446a:\t83 f8 0c             \tcmp    $0xc,%eax\n    446d:\t74 5d                \tje     44cc <pcnet_ioport_readl+0xad>\n    446f:\t83 f8 0c             \tcmp    $0xc,%eax\n    4472:\t77 78                \tja     44ec <pcnet_ioport_readl+0xcd>\n    4474:\t83 f8 08             \tcmp    $0x8,%eax\n    4477:\t74 3e                \tje     44b7 <pcnet_ioport_readl+0x98>\n    4479:\t83 f8 08             \tcmp    $0x8,%eax\n    447c:\t77 6e                \tja     44ec <pcnet_ioport_readl+0xcd>\n    447e:\t85 c0                \ttest   %eax,%eax\n    4480:\t74 07                \tje     4489 <pcnet_ioport_readl+0x6a>\n    4482:\t83 f8 04             \tcmp    $0x4,%eax\n    4485:\t74 21                \tje     44a8 <pcnet_ioport_readl+0x89>\n    4487:\teb 63                \tjmp    44ec <pcnet_ioport_readl+0xcd>\n    4489:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    448d:\t8b 80 28 20 00 00    \tmov    0x2028(%rax),%eax\n    4493:\t89 c2                \tmov    %eax,%edx\n    4495:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    4499:\t89 d6                \tmov    %edx,%esi\n    449b:\t48 89 c7             \tmov    %rax,%rdi\n    449e:\te8 92 f9 ff ff       \tcall   3e35 <pcnet_csr_readw>\n    44a3:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    44a6:\teb 44                \tjmp    44ec <pcnet_ioport_readl+0xcd>\n    44a8:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    44ac:\t8b 80 28 20 00 00    \tmov    0x2028(%rax),%eax\n    44b2:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    44b5:\teb 35                \tjmp    44ec <pcnet_ioport_readl+0xcd>\n    44b7:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    44bb:\t48 89 c7             \tmov    %rax,%rdi\n    44be:\te8 0b cc ff ff       \tcall   10ce <pcnet_s_reset>\n    44c3:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n    44ca:\teb 20                \tjmp    44ec <pcnet_ioport_readl+0xcd>\n    44cc:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    44d0:\t8b 80 28 20 00 00    \tmov    0x2028(%rax),%eax\n    44d6:\t89 c2                \tmov    %eax,%edx\n    44d8:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    44dc:\t89 d6                \tmov    %edx,%esi\n    44de:\t48 89 c7             \tmov    %rax,%rdi\n    44e1:\te8 00 00 00 00       \tcall   44e6 <pcnet_ioport_readl+0xc7>\n    44e6:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    44e9:\teb 01                \tjmp    44ec <pcnet_ioport_readl+0xcd>\n    44eb:\t90                   \tnop\n    44ec:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    44f0:\t48 89 c7             \tmov    %rax,%rdi\n    44f3:\te8 f8 cd ff ff       \tcall   12f0 <pcnet_update_irq>\n    44f8:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    44fb:\tc9                   \tleave  \n    44fc:\tc3                   \tret    ", "code_s": "undefined4 pcnet_ioport_readl(long <span class=\"supfact\">param_1</span>,\n                              uint <span class=\"supfact\">param_2</span>) {\n  undefined4 <span class=\"supfact\">local_14</span>;\n  <span class=\"supfact\">local_14</span> = Number;\n  FUN_001039f5(<span class=\"supfact\">param_1</span>);\n  if ((*(ushort *)(<span class=\"supfact\">param_1</span> + Number) & Number) != Number) {\n    <span class=\"supfact\">param_2</span> = <span class=\"supfact\">param_2</span> & Number;\n    if (<span class=\"supfact\">param_2</span> == Number) {\n      <span class=\"supfact\">local_14</span> =\n          pcnet_bcr_readw(<span class=\"supfact\">param_1</span>,\n                          *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n    } else if (<span class=\"supfact\">param_2</span> < Number) {\n      if (<span class=\"supfact\">param_2</span> == Number) {\n        FUN_001010ce(<span class=\"supfact\">param_1</span>);\n        <span class=\"supfact\">local_14</span> = Number;\n      } else if (<span class=\"supfact\">param_2</span> < Number) {\n        if (<span class=\"supfact\">param_2</span> == Number) {\n          <span class=\"supfact\">local_14</span> =\n              FUN_00103e35(<span class=\"supfact\">param_1</span>,\n                           *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n        } else if (<span class=\"supfact\">param_2</span> == Number) {\n          <span class=\"supfact\">local_14</span> =\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n        }\n      }\n    }\n  }\n  FUN_001012f0(<span class=\"supfact\">param_1</span>);\n  return <span class=\"supfact\">local_14</span>;\n}", "code_t": "uint32_t pcnet_ioport_readl(void *<span class=\"supfact\">opaque</span>,\n                            uint32_t <span class=\"supfact\">addr</span>) {\n  uint uVar1;\n  uint32_t <span class=\"supfact\">addr</span> - local;\n  void *<span class=\"supfact\">opaque</span> - local;\n  uint32_t <span class=\"supfact\">val</span>;\n  PCNetState *s;\n  <span class=\"supfact\">val</span> = Number;\n  pcnet_poll_timer(<span class=\"supfact\">opaque</span>);\n  if ((*(ushort *)((long)<span class=\"supfact\">opaque</span> + Number) & Number) != Number) {\n    uVar1 = <span class=\"supfact\">addr</span> & Number;\n    if (uVar1 == Number) {\n      <span class=\"supfact\">val</span> =\n          pcnet_bcr_readw((PCNetState *)<span class=\"supfact\">opaque</span>,\n                          *(uint32_t *)((long)<span class=\"supfact\">opaque</span> + Number));\n    } else if (uVar1 < Number) {\n      if (uVar1 == Number) {\n        pcnet_s_reset((PCNetState *)<span class=\"supfact\">opaque</span>);\n        <span class=\"supfact\">val</span> = Number;\n      } else if (uVar1 < Number) {\n        if (uVar1 == Number) {\n          <span class=\"supfact\">val</span> = pcnet_csr_readw(\n              (PCNetState *)<span class=\"supfact\">opaque</span>,\n              *(uint32_t *)((long)<span class=\"supfact\">opaque</span> + Number));\n        } else if (uVar1 == Number) {\n          <span class=\"supfact\">val</span> =\n              *(uint32_t *)((long)<span class=\"supfact\">opaque</span> + Number);\n        }\n      }\n    }\n  }\n  pcnet_update_irq((PCNetState *)<span class=\"supfact\">opaque</span>);\n  return <span class=\"supfact\">val</span>;\n}", "var": [{"name": "param_1", "type": "void * *", "pred_name": "opaque", "ref_name": "opaque", "ref_type": "void * *"}, {"name": "param_2", "type": "uint32_t", "pred_name": "addr", "ref_name": "addr", "ref_type": "uint32_t"}, {"name": "local_14", "type": "uint32_t", "pred_name": "val", "ref_name": "val", "ref_type": "uint32_t"}], "body_in_train": false}, {"repo_owner": "BlueLibrary", "repo_name": "opengui", "path": "BlueLibrary/opengui/0f26497a93375d932177b0cdeb12015bd69b8cc2456dfe5ad0b9ebab826f1da5", "path_in_repo": "BlueLibrary/opengui/deps/tinyxml/tinyxml.o", "objdump": "", "code_s": "void __thiscall TiXmlAttributeSet\nRemove(TiXmlAttributeSet *<span class=\"supfact\">this</span>,\n       TiXmlAttribute *<span class=\"supfact\">param_1</span>) {\n  TiXmlAttribute *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> =\n      *(TiXmlAttribute **)(<span class=\"supfact\">this</span> + Number);\n  while (true) {\n    if (<span class=\"supfact\">local_10</span> == (TiXmlAttribute *)<span class=\"supfact\">this</span>) {\n      __assert_fail(String, String, Number, String);\n    }\n    if (<span class=\"supfact\">local_10</span> == <span class=\"supfact\">param_1</span>)\n      break;\n    <span class=\"supfact\">local_10</span> =\n        *(TiXmlAttribute **)(<span class=\"supfact\">local_10</span> + Number);\n  }\n  *(undefined8 *)(*(long *)(<span class=\"supfact\">local_10</span> + Number) + Number) =\n      *(undefined8 *)(<span class=\"supfact\">local_10</span> + Number);\n  *(undefined8 *)(*(long *)(<span class=\"supfact\">local_10</span> + Number) + Number) =\n      *(undefined8 *)(<span class=\"supfact\">local_10</span> + Number);\n  *(undefined8 *)(<span class=\"supfact\">local_10</span> + Number) = Number;\n  *(undefined8 *)(<span class=\"supfact\">local_10</span> + Number) = Number;\n  return;\n}", "code_t": "void __thiscall TiXmlAttributeSet\nRemove(TiXmlAttributeSet *<span class=\"supfact\">this</span>,\n       TiXmlAttribute *<span class=\"supfact\">removeMe</span>) {\n  TiXmlAttribute *<span class=\"supfact\">removeMe</span> - local;\n  TiXmlAttributeSet *<span class=\"supfact\">this</span> - local;\n  TiXmlAttribute *<span class=\"supfact\">node</span>;\n  <span class=\"supfact\">node</span> = *(TiXmlAttribute **)&<span class=\"supfact\">this</span>->field_0x68;\n  while (true) {\n    if ((TiXmlAttributeSet *)<span class=\"supfact\">node</span> == <span class=\"supfact\">this</span>) {\n      __assert_fail(String, String, Number, String);\n    }\n    if (<span class=\"supfact\">node</span> == <span class=\"supfact\">removeMe</span>)\n      break;\n    <span class=\"supfact\">node</span> = *(TiXmlAttribute **)(<span class=\"supfact\">node</span> + Number);\n  }\n  *(undefined8 *)(*(long *)(<span class=\"supfact\">node</span> + Number) + Number) =\n      *(undefined8 *)(<span class=\"supfact\">node</span> + Number);\n  *(undefined8 *)(*(long *)(<span class=\"supfact\">node</span> + Number) + Number) =\n      *(undefined8 *)(<span class=\"supfact\">node</span> + Number);\n  *(undefined8 *)(<span class=\"supfact\">node</span> + Number) = Number;\n  *(undefined8 *)(<span class=\"supfact\">node</span> + Number) = Number;\n  return;\n}", "var": [{"name": "this", "type": "TiXmlAttribute * *", "pred_name": "this", "ref_name": "this", "ref_type": "TiXmlAttributeSet * *"}, {"name": "param_1", "type": "double * *", "pred_name": "v", "ref_name": "removeMe", "ref_type": "TiXmlAttribute * *"}, {"name": "local_10", "type": "double", "pred_name": "r", "ref_name": "node", "ref_type": "TiXmlAttribute * *"}], "body_in_train": false}, {"repo_owner": "msysgit", "repo_name": "msysgit", "path": "msysgit/msysgit/239626b0ff367d043cc5bbd3103faf7fb10c6bec83f4edb25f89624513912639", "path_in_repo": "msysgit/msysgit/git/git-upload-pack", "objdump": "", "code_s": "int kill(__pid_t __pid, int __sig) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_kill_004fd318)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int kill(__pid_t __pid, int __sig) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_kill_004fd318)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "microcash-dev", "repo_name": "microcash", "path": "microcash-dev/microcash/71c1924d31e39de90928f53e839dfa0a7de3e6e2ebeed95a02f6c9ed1a8562c9", "path_in_repo": "microcash-dev/microcash/src/leveldb/db/version_edit.o", "objdump": "", "code_s": "void leveldb VersionEdit DebugString[abi:cxx11](void) {\n  char cVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong *puVar4;\n  long <span class=\"supfact\">lVar5</span>;\n  long <span class=\"supfact\">lVar6</span>;\n  ulong *<span class=\"supfact\">in_RSI</span>;\n  long *<span class=\"supfact\">in_RDI</span>;\n  ulong <span class=\"supfact\">uVar7</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  undefined *<span class=\"supfact\">local_68</span>;\n  undefined <span class=\"supfact\">local_58</span>[Number];\n  long <span class=\"supfact\">local_40</span>;\n  <span class=\"supfact\">local_40</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">in_RDI</span>[Number] = Number;\n  *<span class=\"supfact\">in_RDI</span> = (long)(<span class=\"supfact\">in_RDI</span> + Number);\n  *(undefined *)(<span class=\"supfact\">in_RDI</span> + Number) = Number;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n  <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n  uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n  if (*(char *)(<span class=\"supfact\">in_RSI</span> + Number) != String) {\n    if (Number < uVar2) {\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, *<span class=\"supfact\">in_RSI</span>);\n      <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n      uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n      cVar1 = *(char *)((long)<span class=\"supfact\">in_RSI</span> + Number);\n      goto joined_r0x00100824;\n    }\n    goto LAB_001009ba;\n  }\n  cVar1 = *(char *)((long)<span class=\"supfact\">in_RSI</span> + Number);\njoined_r0x00100824:\n  if (cVar1 == String) {\n    if (*(char *)((long)<span class=\"supfact\">in_RSI</span> + Number) != String)\n      goto LAB_00100870;\n  LAB_0010042d:\n    if (*(char *)((long)<span class=\"supfact\">in_RSI</span> + Number) == String)\n      goto LAB_00100437;\n  LAB_001008b6:\n    if (Number < uVar2) {\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n      leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                             <span class=\"supfact\">in_RSI</span>[Number]);\n      <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n      uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n      if (*(char *)((long)<span class=\"supfact\">in_RSI</span> + Number) == String) {\n      LAB_00100441:\n        if (<span class=\"supfact\">in_RSI</span>[Number] != <span class=\"supfact\">in_RSI</span>[Number]) {\n          uVar2 = Number;\n          do {\n            if (Number - <span class=\"supfact\">lVar5</span> < Number)\n              goto LAB_00100955;\n            std __cxx11\n                basic_string<char, std char_traits<char>, std allocator<char>>\n                    _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n            leveldb AppendNumberTo(\n                (basic_string *)<span class=\"supfact\">in_RDI</span>,\n                (long)*(int *)(<span class=\"supfact\">in_RSI</span>[Number] +\n                               uVar2 * Number));\n            if (<span class=\"supfact\">in_RDI</span>[Number] == Number)\n              goto LAB_00100949;\n            std __cxx11\n                basic_string<char, std char_traits<char>, std allocator<char>>\n                    _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n            leveldb InternalKey DebugString[abi:cxx11]();\n            std __cxx11\n                basic_string<char, std char_traits<char>, std allocator<char>>\n                    _M_append((char *)<span class=\"supfact\">in_RDI</span>,\n                              (ulong)<span class=\"supfact\">local_68</span>);\n            if (<span class=\"supfact\">local_68</span> != <span class=\"supfact\">local_58</span>) {\n              operator.delete(<span class=\"supfact\">local_68</span>);\n            }\n            uVar2 = uVar2 + Number;\n            <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n            uVar3 = ((long)(<span class=\"supfact\">in_RSI</span>[Number] -\n                            <span class=\"supfact\">in_RSI</span>[Number]) >>\n                     Number) *\n                    -Number;\n          } while (uVar2 <= uVar3 && uVar3 - uVar2 != Number);\n          uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n        }\n        puVar4 = (ulong *)<span class=\"supfact\">in_RSI</span>[Number];\n        if (puVar4 != <span class=\"supfact\">in_RSI</span> + Number) {\n        LAB_00100560:\n          if (Number - <span class=\"supfact\">lVar5</span> < Number) {\n            std __throw_length_error(String);\n          LAB_00100949:\n            std __throw_length_error(String);\n          LAB_00100955:\n            std __throw_length_error(String);\n          } else {\n            std __cxx11\n                basic_string<char, std char_traits<char>, std allocator<char>>\n                    _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n            leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                                   (long)*(int *)(puVar4 + Number));\n            if (<span class=\"supfact\">in_RDI</span>[Number] != Number)\n              goto code_r0x0010059b;\n          }\n          std __throw_length_error(String);\n          goto LAB_0010096d;\n        }\n        goto LAB_001005dd;\n      }\n    LAB_001008fc:\n      if (Number < uVar2) {\n        std __cxx11\n            basic_string<char, std char_traits<char>, std allocator<char>>\n                _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n        leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                               <span class=\"supfact\">in_RSI</span>[Number]);\n        <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n        uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n        goto LAB_00100441;\n      }\n      goto LAB_001009c6;\n    }\n    goto LAB_001009d2;\n  }\n  if (uVar2 < Number)\n    goto LAB_001009ea;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n  leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                         <span class=\"supfact\">in_RSI</span>[Number]);\n  <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n  uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n  if (*(char *)((long)<span class=\"supfact\">in_RSI</span> + Number) == String)\n    goto LAB_0010042d;\nLAB_00100870:\n  if (Number < uVar2) {\n    std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n        _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n    leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                           <span class=\"supfact\">in_RSI</span>[Number]);\n    <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n    uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n    if (*(char *)((long)<span class=\"supfact\">in_RSI</span> + Number) != String)\n      goto LAB_001008b6;\n  LAB_00100437:\n    if (*(char *)((long)<span class=\"supfact\">in_RSI</span> + Number) != String)\n      goto LAB_001008fc;\n    goto LAB_00100441;\n  }\n  goto LAB_001009de;\ncode_r0x0010059b:\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n  leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                         puVar4[Number]);\n  puVar4 = (ulong *)std _Rb_tree_increment((_Rb_tree_node_base *)puVar4);\n  <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n  if (puVar4 == <span class=\"supfact\">in_RSI</span> + Number)\n    goto code_r0x001005d0;\n  goto LAB_00100560;\nLAB_0010096d:\n  std __throw_length_error(String);\nLAB_00100979:\n  std __throw_length_error(String);\nLAB_00100985:\n  std __throw_length_error(String);\nLAB_00100991:\n  std __throw_length_error(String);\nLAB_0010099d:\n  std __throw_length_error(String);\n  goto LAB_001009a9;\ncode_r0x001005d0:\n  uVar2 = Number - <span class=\"supfact\">lVar5</span>;\nLAB_001005dd:\n  <span class=\"supfact\">uVar7</span> = Number;\n  uVar3 = <span class=\"supfact\">in_RSI</span>[Number];\n  if (uVar3 != <span class=\"supfact\">in_RSI</span>[Number]) {\n    do {\n      <span class=\"supfact\">lVar6</span> = uVar3 + <span class=\"supfact\">uVar7</span> * Number;\n      if (Number - <span class=\"supfact\">lVar5</span> < Number)\n        goto LAB_0010096d;\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n      leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                             (long)*(int *)(<span class=\"supfact\">in_RSI</span>[Number] +\n                                            <span class=\"supfact\">uVar7</span> * Number));\n      if (<span class=\"supfact\">in_RDI</span>[Number] == Number)\n        goto LAB_00100985;\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n      leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                             *(ulong *)(<span class=\"supfact\">lVar6</span> + Number));\n      if (<span class=\"supfact\">in_RDI</span>[Number] == Number)\n        goto LAB_00100979;\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n      leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                             *(ulong *)(<span class=\"supfact\">lVar6</span> + Number));\n      if (<span class=\"supfact\">in_RDI</span>[Number] == Number)\n        goto LAB_0010099d;\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n      leveldb InternalKey DebugString[abi:cxx11]();\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>,\n                    (ulong)<span class=\"supfact\">local_68</span>);\n      if (<span class=\"supfact\">local_68</span> != <span class=\"supfact\">local_58</span>) {\n        operator.delete(<span class=\"supfact\">local_68</span>);\n      }\n      if (Number - <span class=\"supfact\">in_RDI</span>[Number] < Number)\n        goto LAB_00100991;\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n      leveldb InternalKey DebugString[abi:cxx11]();\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>,\n                    (ulong)<span class=\"supfact\">local_68</span>);\n      if (<span class=\"supfact\">local_68</span> != <span class=\"supfact\">local_58</span>) {\n        operator.delete(<span class=\"supfact\">local_68</span>);\n      }\n      uVar3 = <span class=\"supfact\">in_RSI</span>[Number];\n      <span class=\"supfact\">uVar7</span> = <span class=\"supfact\">uVar7</span> + Number;\n      <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n    } while (\n        <span class=\"supfact\">uVar7</span> <\n        (ulong)(((long)(<span class=\"supfact\">in_RSI</span>[Number] - uVar3) >> Number) *\n                -Number));\n    uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n  }\n  if (Number < uVar2) {\n    std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n        _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n    if (<span class=\"supfact\">local_40</span> ==\n        *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n      return;\n    }\n  LAB_001009a9:\n    __stack_chk_fail();\n  }\n  std __throw_length_error(String);\nLAB_001009ba:\n  std __throw_length_error(String);\nLAB_001009c6:\n  std __throw_length_error(String);\nLAB_001009d2:\n  std __throw_length_error(String);\nLAB_001009de:\n  std __throw_length_error(String);\nLAB_001009ea:\n  std __throw_length_error(String);\n  FUN_0010169c();\n  return;\n}", "code_t": "void leveldb VersionEdit DebugString[abi:cxx11](void) {\n  char cVar1;\n  ulong uVar2;\n  ulong uVar3;\n  _Rb_tree_node_base *p_Var4;\n  long <span class=\"supfact\">lVar5</span>;\n  long <span class=\"supfact\">lVar6</span>;\n  ulong *<span class=\"supfact\">in_RSI</span>;\n  long *<span class=\"supfact\">in_RDI</span>;\n  ulong <span class=\"supfact\">uVar7</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  undefined *<span class=\"supfact\">local_68</span>;\n  undefined <span class=\"supfact\">local_58</span>[Number];\n  long <span class=\"supfact\">local_40</span>;\n  <span class=\"supfact\">local_40</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">in_RDI</span>[Number] = Number;\n  *<span class=\"supfact\">in_RDI</span> = (long)(<span class=\"supfact\">in_RDI</span> + Number);\n  *(undefined *)(<span class=\"supfact\">in_RDI</span> + Number) = Number;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n  <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n  uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n  if (*(char *)(<span class=\"supfact\">in_RSI</span> + Number) != String) {\n    if (Number < uVar2) {\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, *<span class=\"supfact\">in_RSI</span>);\n      <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n      uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n      cVar1 = *(char *)((long)<span class=\"supfact\">in_RSI</span> + Number);\n      goto joined_r0x00100824;\n    }\n    goto LAB_001009ba;\n  }\n  cVar1 = *(char *)((long)<span class=\"supfact\">in_RSI</span> + Number);\njoined_r0x00100824:\n  if (cVar1 == String) {\n    if (*(char *)((long)<span class=\"supfact\">in_RSI</span> + Number) != String)\n      goto LAB_00100870;\n  LAB_0010042d:\n    if (*(char *)((long)<span class=\"supfact\">in_RSI</span> + Number) == String)\n      goto LAB_00100437;\n  LAB_001008b6:\n    if (Number < uVar2) {\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n      leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                             <span class=\"supfact\">in_RSI</span>[Number]);\n      <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n      uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n      if (*(char *)((long)<span class=\"supfact\">in_RSI</span> + Number) == String) {\n      LAB_00100441:\n        if (<span class=\"supfact\">in_RSI</span>[Number] != <span class=\"supfact\">in_RSI</span>[Number]) {\n          uVar2 = Number;\n          do {\n            if (Number - <span class=\"supfact\">lVar5</span> < Number)\n              goto LAB_00100955;\n            std __cxx11\n                basic_string<char, std char_traits<char>, std allocator<char>>\n                    _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n            leveldb AppendNumberTo(\n                (basic_string *)<span class=\"supfact\">in_RDI</span>,\n                (long)*(int *)(<span class=\"supfact\">in_RSI</span>[Number] +\n                               uVar2 * Number));\n            if (<span class=\"supfact\">in_RDI</span>[Number] == Number)\n              goto LAB_00100949;\n            std __cxx11\n                basic_string<char, std char_traits<char>, std allocator<char>>\n                    _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n            leveldb InternalKey DebugString[abi:cxx11]();\n            std __cxx11\n                basic_string<char, std char_traits<char>, std allocator<char>>\n                    _M_append((char *)<span class=\"supfact\">in_RDI</span>,\n                              (ulong)<span class=\"supfact\">local_68</span>);\n            if (<span class=\"supfact\">local_68</span> != <span class=\"supfact\">local_58</span>) {\n              operator.delete(<span class=\"supfact\">local_68</span>);\n            }\n            uVar2 = uVar2 + Number;\n            <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n            uVar3 = ((long)(<span class=\"supfact\">in_RSI</span>[Number] -\n                            <span class=\"supfact\">in_RSI</span>[Number]) >>\n                     Number) *\n                    -Number;\n          } while (uVar2 <= uVar3 && uVar3 - uVar2 != Number);\n          uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n        }\n        p_Var4 = (_Rb_tree_node_base *)<span class=\"supfact\">in_RSI</span>[Number];\n        if (p_Var4 != (_Rb_tree_node_base *)(<span class=\"supfact\">in_RSI</span> + Number)) {\n        LAB_00100560:\n          if (Number - <span class=\"supfact\">lVar5</span> < Number) {\n            std __throw_length_error(String);\n          LAB_00100949:\n            std __throw_length_error(String);\n          LAB_00100955:\n            std __throw_length_error(String);\n          } else {\n            std __cxx11\n                basic_string<char, std char_traits<char>, std allocator<char>>\n                    _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n            leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                                   (long)(int)p_Var4[Number]._M_color);\n            if (<span class=\"supfact\">in_RDI</span>[Number] != Number)\n              goto code_r0x0010059b;\n          }\n          std __throw_length_error(String);\n          goto LAB_0010096d;\n        }\n        goto LAB_001005dd;\n      }\n    LAB_001008fc:\n      if (Number < uVar2) {\n        std __cxx11\n            basic_string<char, std char_traits<char>, std allocator<char>>\n                _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n        leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                               <span class=\"supfact\">in_RSI</span>[Number]);\n        <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n        uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n        goto LAB_00100441;\n      }\n      goto LAB_001009c6;\n    }\n    goto LAB_001009d2;\n  }\n  if (uVar2 < Number)\n    goto LAB_001009ea;\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n  leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                         <span class=\"supfact\">in_RSI</span>[Number]);\n  <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n  uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n  if (*(char *)((long)<span class=\"supfact\">in_RSI</span> + Number) == String)\n    goto LAB_0010042d;\nLAB_00100870:\n  if (Number < uVar2) {\n    std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n        _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n    leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                           <span class=\"supfact\">in_RSI</span>[Number]);\n    <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n    uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n    if (*(char *)((long)<span class=\"supfact\">in_RSI</span> + Number) != String)\n      goto LAB_001008b6;\n  LAB_00100437:\n    if (*(char *)((long)<span class=\"supfact\">in_RSI</span> + Number) != String)\n      goto LAB_001008fc;\n    goto LAB_00100441;\n  }\n  goto LAB_001009de;\ncode_r0x0010059b:\n  std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n      _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n  leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                         (ulong)p_Var4[Number]._M_parent);\n  p_Var4 = (_Rb_tree_node_base *)std _Rb_tree_increment(p_Var4);\n  <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n  if (p_Var4 == (_Rb_tree_node_base *)(<span class=\"supfact\">in_RSI</span> + Number))\n    goto code_r0x001005d0;\n  goto LAB_00100560;\nLAB_0010096d:\n  std __throw_length_error(String);\nLAB_00100979:\n  std __throw_length_error(String);\nLAB_00100985:\n  std __throw_length_error(String);\nLAB_00100991:\n  std __throw_length_error(String);\nLAB_0010099d:\n  std __throw_length_error(String);\n  goto LAB_001009a9;\ncode_r0x001005d0:\n  uVar2 = Number - <span class=\"supfact\">lVar5</span>;\nLAB_001005dd:\n  <span class=\"supfact\">uVar7</span> = Number;\n  uVar3 = <span class=\"supfact\">in_RSI</span>[Number];\n  if (uVar3 != <span class=\"supfact\">in_RSI</span>[Number]) {\n    do {\n      <span class=\"supfact\">lVar6</span> = uVar3 + <span class=\"supfact\">uVar7</span> * Number;\n      if (Number - <span class=\"supfact\">lVar5</span> < Number)\n        goto LAB_0010096d;\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n      leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                             (long)*(int *)(<span class=\"supfact\">in_RSI</span>[Number] +\n                                            <span class=\"supfact\">uVar7</span> * Number));\n      if (<span class=\"supfact\">in_RDI</span>[Number] == Number)\n        goto LAB_00100985;\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n      leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                             *(ulong *)(<span class=\"supfact\">lVar6</span> + Number));\n      if (<span class=\"supfact\">in_RDI</span>[Number] == Number)\n        goto LAB_00100979;\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n      leveldb AppendNumberTo((basic_string *)<span class=\"supfact\">in_RDI</span>,\n                             *(ulong *)(<span class=\"supfact\">lVar6</span> + Number));\n      if (<span class=\"supfact\">in_RDI</span>[Number] == Number)\n        goto LAB_0010099d;\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n      leveldb InternalKey DebugString[abi:cxx11]();\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>,\n                    (ulong)<span class=\"supfact\">local_68</span>);\n      if (<span class=\"supfact\">local_68</span> != <span class=\"supfact\">local_58</span>) {\n        operator.delete(<span class=\"supfact\">local_68</span>);\n      }\n      if (Number - <span class=\"supfact\">in_RDI</span>[Number] < Number)\n        goto LAB_00100991;\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n      leveldb InternalKey DebugString[abi:cxx11]();\n      std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n          _M_append((char *)<span class=\"supfact\">in_RDI</span>,\n                    (ulong)<span class=\"supfact\">local_68</span>);\n      if (<span class=\"supfact\">local_68</span> != <span class=\"supfact\">local_58</span>) {\n        operator.delete(<span class=\"supfact\">local_68</span>);\n      }\n      uVar3 = <span class=\"supfact\">in_RSI</span>[Number];\n      <span class=\"supfact\">uVar7</span> = <span class=\"supfact\">uVar7</span> + Number;\n      <span class=\"supfact\">lVar5</span> = <span class=\"supfact\">in_RDI</span>[Number];\n    } while (\n        <span class=\"supfact\">uVar7</span> <\n        (ulong)(((long)(<span class=\"supfact\">in_RSI</span>[Number] - uVar3) >> Number) *\n                -Number));\n    uVar2 = Number - <span class=\"supfact\">lVar5</span>;\n  }\n  if (Number < uVar2) {\n    std __cxx11 basic_string<char, std char_traits<char>, std allocator<char>>\n        _M_append((char *)<span class=\"supfact\">in_RDI</span>, Number);\n    if (<span class=\"supfact\">local_40</span> ==\n        *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n      return;\n    }\n  LAB_001009a9:\n    __stack_chk_fail();\n  }\n  std __throw_length_error(String);\nLAB_001009ba:\n  std __throw_length_error(String);\nLAB_001009c6:\n  std __throw_length_error(String);\nLAB_001009d2:\n  std __throw_length_error(String);\nLAB_001009de:\n  std __throw_length_error(String);\nLAB_001009ea:\n  std __throw_length_error(String);\n  DebugString[abi:cxx11]();\n  return;\n}", "var": [{"name": "lVar5", "type": "long", "pred_name": "lVar4", "ref_name": "lVar5", "ref_type": "long"}, {"name": "lVar6", "type": "long", "pred_name": "lVar5", "ref_name": "lVar6", "ref_type": "long"}, {"name": "in_RSI", "type": "long * *", "pred_name": "in_RSI", "ref_name": "in_RSI", "ref_type": "ulong * *"}, {"name": "in_RDI", "type": "long * *", "pred_name": "in_RDI", "ref_name": "in_RDI", "ref_type": "long * *"}, {"name": "uVar7", "type": "ulong", "pred_name": "local_a0", "ref_name": "uVar7", "ref_type": "ulong"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_68", "type": "ulong", "pred_name": "local_68", "ref_name": "local_68", "ref_type": "undefined * *"}, {"name": "local_58", "type": "undefined[24][24]", "pred_name": "local_58", "ref_name": "local_58", "ref_type": "undefined[24][24]"}, {"name": "local_40", "type": "long", "pred_name": "local_40", "ref_name": "local_40", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "darklegion", "repo_name": "tremulous", "path": "darklegion/tremulous/324ed2579203d9f3a63d7c5064bc864223e7054ac1f258b4dd6f3f1e81e90a90", "path_in_repo": "darklegion/tremulous//build/release-linux-x86_64/base/cgame/ui_shared.o", "objdump": "000000000000b99e <Controls_GetConfig>:\n    b99e:\t55                   \tpush   %rbp\n    b99f:\t48 89 e5             \tmov    %rsp,%rbp\n    b9a2:\t48 83 ec 10          \tsub    $0x10,%rsp\n    b9a6:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    b9ad:\teb 5e                \tjmp    ba0d <Controls_GetConfig+0x6f>\n    b9af:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    b9b2:\t48 98                \tcltq   \n    b9b4:\t48 c1 e0 05          \tshl    $0x5,%rax\n    b9b8:\t48 89 c2             \tmov    %rax,%rdx\n    b9bb:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # b9c2 <Controls_GetConfig+0x24>\n    b9c2:\t48 8b 04 02          \tmov    (%rdx,%rax,1),%rax\n    b9c6:\t48 8d 55 f4          \tlea    -0xc(%rbp),%rdx\n    b9ca:\t48 89 d6             \tmov    %rdx,%rsi\n    b9cd:\t48 89 c7             \tmov    %rax,%rdi\n    b9d0:\te8 f7 fe ff ff       \tcall   b8cc <Controls_GetKeyAssignment>\n    b9d5:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    b9d8:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    b9db:\t48 63 d2             \tmovslq %edx,%rdx\n    b9de:\t48 89 d1             \tmov    %rdx,%rcx\n    b9e1:\t48 c1 e1 05          \tshl    $0x5,%rcx\n    b9e5:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # b9ec <Controls_GetConfig+0x4e>\n    b9ec:\t89 04 11             \tmov    %eax,(%rcx,%rdx,1)\n    b9ef:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    b9f2:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    b9f5:\t48 63 d2             \tmovslq %edx,%rdx\n    b9f8:\t48 89 d1             \tmov    %rdx,%rcx\n    b9fb:\t48 c1 e1 05          \tshl    $0x5,%rcx\n    b9ff:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # ba06 <Controls_GetConfig+0x68>\n    ba06:\t89 04 11             \tmov    %eax,(%rcx,%rdx,1)\n    ba09:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    ba0d:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    ba10:\t48 98                \tcltq   \n    ba12:\tba 34 00 00 00       \tmov    $0x34,%edx\n    ba17:\t48 39 d0             \tcmp    %rdx,%rax\n    ba1a:\t72 93                \tjb     b9af <Controls_GetConfig+0x11>\n    ba1c:\t90                   \tnop\n    ba1d:\t90                   \tnop\n    ba1e:\tc9                   \tleave  \n    ba1f:\tc3                   \tret    ", "code_s": "void Controls_GetConfig(void) {\n  undefined4 <span class=\"supfact\">local_14</span>;\n  undefined4 <span class=\"supfact\">local_10</span>;\n  uint <span class=\"supfact\">local_c</span>;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    FUN_0010b8cc((&PTR_s_ +\n                  scores_001dbce0)[(long)(int)<span class=\"supfact\">local_c</span> * Number],\n                 &<span class=\"supfact\">local_14</span>);\n    *(undefined4 *)(&DAT_001dbcf4 + (long)(int)<span class=\"supfact\">local_c</span> *\n                                        Number) = <span class=\"supfact\">local_14</span>;\n    *(undefined4 *)(&DAT_001dbcf8 + (long)(int)<span class=\"supfact\">local_c</span> *\n                                        Number) = <span class=\"supfact\">local_10</span>;\n  }\n  return;\n}", "code_t": "void Controls_GetConfig(void) {\n  int <span class=\"supfact\">twokeys</span>[Number];\n  int <span class=\"supfact\">i</span>;\n  for (<span class=\"supfact\">i</span> = Number; (uint)<span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    Controls_GetKeyAssignment(g_bindings[<span class=\"supfact\">i</span>].command,\n                              <span class=\"supfact\">twokeys</span>);\n    g_bindings[<span class=\"supfact\">i</span>].bind1 = <span class=\"supfact\">twokeys</span>[Number];\n    g_bindings[<span class=\"supfact\">i</span>].bind2 = <span class=\"supfact\">twokeys</span>[Number];\n  }\n  return;\n}", "var": [{"name": "local_14", "type": "int", "pred_name": "len", "ref_name": "twokeys", "ref_type": "int[2][2]"}, {"name": "local_10", "type": "int", "pred_name": "j", "ref_name": "", "ref_type": "disappear"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "plopgrizzly", "repo_name": "mfi", "path": "plopgrizzly/mfi/4206f89fea9dd81ad7af8ea53aaf8f7f71a32abb4064d48c194141d4b9ed2d54", "path_in_repo": "plopgrizzly/mfi/libav-12.3/libavcodec/qpeldsp.o", "objdump": "0000000000008636 <ff_put_no_rnd_qpel16_mc31_old_c>:\n    8636:\t48 81 ec c8 04 00 00 \tsub    $0x4c8,%rsp\n    863d:\t48 89 7c 24 10       \tmov    %rdi,0x10(%rsp)\n    8642:\t48 89 74 24 08       \tmov    %rsi,0x8(%rsp)\n    8647:\t48 89 14 24          \tmov    %rdx,(%rsp)\n    864b:\t48 8b 04 24          \tmov    (%rsp),%rax\n    864f:\t89 c2                \tmov    %eax,%edx\n    8651:\t48 8b 74 24 08       \tmov    0x8(%rsp),%rsi\n    8656:\t48 8d 84 24 28 03 00 \tlea    0x328(%rsp),%rax\n    865d:\t00 \n    865e:\t41 b8 11 00 00 00    \tmov    $0x11,%r8d\n    8664:\t89 d1                \tmov    %edx,%ecx\n    8666:\tba 18 00 00 00       \tmov    $0x18,%edx\n    866b:\t48 89 c7             \tmov    %rax,%rdi\n    866e:\te8 fa 79 ff ff       \tcall   6d <copy_block17>\n    8673:\t48 8d b4 24 28 03 00 \tlea    0x328(%rsp),%rsi\n    867a:\t00 \n    867b:\t48 8d 84 24 18 02 00 \tlea    0x218(%rsp),%rax\n    8682:\t00 \n    8683:\t41 b8 11 00 00 00    \tmov    $0x11,%r8d\n    8689:\tb9 18 00 00 00       \tmov    $0x18,%ecx\n    868e:\tba 10 00 00 00       \tmov    $0x10,%edx\n    8693:\t48 89 c7             \tmov    %rax,%rdi\n    8696:\te8 38 d6 ff ff       \tcall   5cd3 <put_no_rnd_mpeg4_qpel16_h_lowpass>\n    869b:\t48 8d 84 24 28 03 00 \tlea    0x328(%rsp),%rax\n    86a2:\t00 \n    86a3:\t48 83 c0 01          \tadd    $0x1,%rax\n    86a7:\t48 8d bc 24 18 01 00 \tlea    0x118(%rsp),%rdi\n    86ae:\t00 \n    86af:\tb9 18 00 00 00       \tmov    $0x18,%ecx\n    86b4:\tba 10 00 00 00       \tmov    $0x10,%edx\n    86b9:\t48 89 c6             \tmov    %rax,%rsi\n    86bc:\te8 6b e2 ff ff       \tcall   692c <put_no_rnd_mpeg4_qpel16_v_lowpass>\n    86c1:\t48 8d b4 24 18 02 00 \tlea    0x218(%rsp),%rsi\n    86c8:\t00 \n    86c9:\t48 8d 44 24 18       \tlea    0x18(%rsp),%rax\n    86ce:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n    86d3:\tba 10 00 00 00       \tmov    $0x10,%edx\n    86d8:\t48 89 c7             \tmov    %rax,%rdi\n    86db:\te8 4c e2 ff ff       \tcall   692c <put_no_rnd_mpeg4_qpel16_v_lowpass>\n    86e0:\t48 8b 04 24          \tmov    (%rsp),%rax\n    86e4:\t41 89 c0             \tmov    %eax,%r8d\n    86e7:\t48 8d 84 24 28 03 00 \tlea    0x328(%rsp),%rax\n    86ee:\t00 \n    86ef:\t48 83 c0 01          \tadd    $0x1,%rax\n    86f3:\t48 8d 74 24 18       \tlea    0x18(%rsp),%rsi\n    86f8:\t48 8d 8c 24 18 01 00 \tlea    0x118(%rsp),%rcx\n    86ff:\t00 \n    8700:\t48 8d 94 24 18 02 00 \tlea    0x218(%rsp),%rdx\n    8707:\t00 \n    8708:\t48 8b 7c 24 10       \tmov    0x10(%rsp),%rdi\n    870d:\t6a 10                \tpush   $0x10\n    870f:\t6a 10                \tpush   $0x10\n    8711:\t6a 10                \tpush   $0x10\n    8713:\t6a 10                \tpush   $0x10\n    8715:\t6a 18                \tpush   $0x18\n    8717:\t45 89 c1             \tmov    %r8d,%r9d\n    871a:\t49 89 f0             \tmov    %rsi,%r8\n    871d:\t48 89 c6             \tmov    %rax,%rsi\n    8720:\te8 69 8a ff ff       \tcall   118e <put_no_rnd_pixels16_l4_8>\n    8725:\t48 83 c4 28          \tadd    $0x28,%rsp\n    8729:\t90                   \tnop\n    872a:\t48 81 c4 c8 04 00 00 \tadd    $0x4c8,%rsp\n    8731:\tc3                   \tret    ", "code_s": "void ff_put_no_rnd_qpel16_mc31_old_c(undefined8 <span class=\"supfact\">param_1</span>,\n                                     undefined8 <span class=\"supfact\">param_2</span>,\n                                     undefined4 <span class=\"supfact\">param_3</span>) {\n  undefined <span class=\"supfact\">local_4b0</span>[Number];\n  undefined <span class=\"supfact\">local_3b0</span>[Number];\n  undefined <span class=\"supfact\">local_2b0</span>[Number];\n  undefined <span class=\"supfact\">local_1a0</span>;\n  undefined <span class=\"supfact\">auStack_19f</span>[Number];\n  FUN_0010006d(&<span class=\"supfact\">local_1a0</span>, <span class=\"supfact\">param_2</span>, Number,\n               <span class=\"supfact\">param_3</span>, Number);\n  FUN_00105cd3(<span class=\"supfact\">local_2b0</span>, &<span class=\"supfact\">local_1a0</span>, Number,\n               Number, Number);\n  FUN_0010692c(<span class=\"supfact\">local_3b0</span>, <span class=\"supfact\">auStack_19f</span>, Number,\n               Number);\n  FUN_0010692c(<span class=\"supfact\">local_4b0</span>, <span class=\"supfact\">local_2b0</span>, Number,\n               Number);\n  FUN_0010118e(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">auStack_19f</span>,\n               <span class=\"supfact\">local_2b0</span>, <span class=\"supfact\">local_3b0</span>,\n               <span class=\"supfact\">local_4b0</span>, <span class=\"supfact\">param_3</span>, Number,\n               Number, Number, Number, Number);\n  return;\n}", "code_t": "void ff_put_no_rnd_qpel16_mc31_old_c(uint8_t *<span class=\"supfact\">dst</span>,\n                                     uint8_t *<span class=\"supfact\">src</span>,\n                                     ptrdiff_t stride) {\n  ptrdiff_t stride - local;\n  uint8_t *<span class=\"supfact\">src</span> - local;\n  uint8_t *<span class=\"supfact\">dst</span> - local;\n  uint8_t <span class=\"supfact\">halfHV</span>[Number];\n  uint8_t <span class=\"supfact\">halfV</span>[Number];\n  uint8_t <span class=\"supfact\">halfH</span>[Number];\n  uint8_t <span class=\"supfact\">full</span>[Number];\n  copy_block17(<span class=\"supfact\">full</span>, <span class=\"supfact\">src</span>, Number, (int)stride,\n               Number);\n  put_no_rnd_mpeg4_qpel16_h_lowpass(<span class=\"supfact\">halfH</span>, <span class=\"supfact\">full</span>,\n                                    Number, Number, Number);\n  put_no_rnd_mpeg4_qpel16_v_lowpass(\n      <span class=\"supfact\">halfV</span>, <span class=\"supfact\">full</span> + Number, Number, Number);\n  put_no_rnd_mpeg4_qpel16_v_lowpass(<span class=\"supfact\">halfHV</span>,\n                                    <span class=\"supfact\">halfH</span>, Number, Number);\n  put_no_rnd_pixels16_l4_8(<span class=\"supfact\">dst</span>, <span class=\"supfact\">full</span> + Number,\n                           <span class=\"supfact\">halfH</span>, <span class=\"supfact\">halfV</span>,\n                           <span class=\"supfact\">halfHV</span>, (int)stride, Number, Number,\n                           Number, Number, Number);\n  return;\n}", "var": [{"name": "param_1", "type": "uint8_t * *", "pred_name": "dst", "ref_name": "dst", "ref_type": "uint8_t * *"}, {"name": "param_2", "type": "uint8_t * *", "pred_name": "src", "ref_name": "src", "ref_type": "uint8_t * *"}, {"name": "param_3", "type": "int", "pred_name": "stride", "ref_name": "", "ref_type": "disappear"}, {"name": "local_4b0", "type": "uint8_t[256][256]", "pred_name": "halfHV", "ref_name": "halfHV", "ref_type": "uint8_t[256][256]"}, {"name": "local_3b0", "type": "uint8_t[256][256]", "pred_name": "halfV", "ref_name": "halfV", "ref_type": "uint8_t[256][256]"}, {"name": "local_2b0", "type": "uint8_t[272][272]", "pred_name": "halfH", "ref_name": "halfH", "ref_type": "uint8_t[272][272]"}, {"name": "local_1a0", "type": "uint8_t[408][408]", "pred_name": "full", "ref_name": "full", "ref_type": "uint8_t[408][408]"}, {"name": "auStack_19f", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "NicolasSenecal", "repo_name": "imac1_cg", "path": "NicolasSenecal/imac1_cg/c212901f48caf7814bef3b7009da2c80f4e8b324adfcc096f34c947241a71499", "path_in_repo": "NicolasSenecal/imac1_cg/raytracer/obj/colors.o", "objdump": "0000000000000000 <createColor>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\tf3 0f 11 45 dc       \tmovss  %xmm0,-0x24(%rbp)\n   9:\tf3 0f 11 4d d8       \tmovss  %xmm1,-0x28(%rbp)\n   e:\tf3 0f 11 55 d4       \tmovss  %xmm2,-0x2c(%rbp)\n  13:\tf3 0f 10 45 dc       \tmovss  -0x24(%rbp),%xmm0\n  18:\tf3 0f 11 45 e8       \tmovss  %xmm0,-0x18(%rbp)\n  1d:\tf3 0f 10 45 d8       \tmovss  -0x28(%rbp),%xmm0\n  22:\tf3 0f 11 45 ec       \tmovss  %xmm0,-0x14(%rbp)\n  27:\tf3 0f 10 45 d4       \tmovss  -0x2c(%rbp),%xmm0\n  2c:\tf3 0f 11 45 f0       \tmovss  %xmm0,-0x10(%rbp)\n  31:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  35:\t48 89 45 f4          \tmov    %rax,-0xc(%rbp)\n  39:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n  3c:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  3f:\t48 8b 45 f4          \tmov    -0xc(%rbp),%rax\n  43:\tf3 0f 10 45 fc       \tmovss  -0x4(%rbp),%xmm0\n  48:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n  4c:\t0f 28 c8             \tmovaps %xmm0,%xmm1\n  4f:\tf3 0f 7e 45 b8       \tmovq   -0x48(%rbp),%xmm0\n  54:\t5d                   \tpop    %rbp\n  55:\tc3                   \tret    ", "code_s": "undefined8 createColor(undefined4 <span class=\"supfact\">param_1</span>,\n                       undefined4 <span class=\"supfact\">param_2</span>) {\n  return CONCAT44(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_1</span>);\n}", "code_t": "Color3f createColor(float <span class=\"supfact\">r</span>, float <span class=\"supfact\">g</span>, float b) {\n  float in_EDX;\n  Color3f CVar1;\n  float b - local;\n  float <span class=\"supfact\">g</span> - local;\n  float <span class=\"supfact\">r</span> - local;\n  Color3f color;\n  CVar1.<span class=\"supfact\">g</span> = <span class=\"supfact\">g</span>;\n  CVar1.<span class=\"supfact\">r</span> = <span class=\"supfact\">r</span>;\n  CVar1.b = in_EDX;\n  return CVar1;\n}", "var": [{"name": "param_1", "type": "float", "pred_name": "x", "ref_name": "r", "ref_type": "float"}, {"name": "param_2", "type": "float", "pred_name": "y", "ref_name": "g", "ref_type": "float"}], "body_in_train": false}, {"repo_owner": "fasterthanlime", "repo_name": "coke-output-example", "path": "fasterthanlime/coke-output-example/a401c5ba2a1b480a6ef3c5daa64232b11c0fbdf1c215282bbba6e50a13d5a239", "path_in_repo": "fasterthanlime/coke-output-example/build/rock_tmp/sdk/lang/Iterators.o", "objdump": "00000000000008bd <lang_Iterators__BackIterator_init>:\n 8bd:\t55                   \tpush   %rbp\n 8be:\t48 89 e5             \tmov    %rsp,%rbp\n 8c1:\t48 83 ec 08          \tsub    $0x8,%rsp\n 8c5:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n 8c9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 8cd:\t48 89 c7             \tmov    %rax,%rdi\n 8d0:\te8 00 00 00 00       \tcall   8d5 <lang_Iterators__BackIterator_init+0x18>\n 8d5:\t90                   \tnop\n 8d6:\tc9                   \tleave  \n 8d7:\tc3                   \tret    ", "code_s": "void lang_Iterators__BackIterator_init(undefined8 <span class=\"supfact\">param_1</span>) {\n  lang_Iterators__Iterator_init(<span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "void __thiscall lang_Iterators__BackIterator_init(void *<span class=\"supfact\">this</span>) {\n  lang_Iterators__BackIterator *<span class=\"supfact\">this</span> - local;\n  lang_Iterators__Iterator_init(<span class=\"supfact\">this</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "sidl_InvViolation__array * *", "pred_name": "array", "ref_name": "this", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "ENCODE-DCC", "repo_name": "kentUtils", "path": "ENCODE-DCC/kentUtils/237953a2c24d861fad143785e96a39068fee532da7cde52a7f8054c16a25ec1e", "path_in_repo": "ENCODE-DCC/kentUtils//bin/toLower", "objdump": "", "code_s": "char *strcpy(char *__dest, char *__src) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strcpy_004451a8)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *strcpy(char *__dest, char *__src) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strcpy_004451a8)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": true}, {"code_s": "int *__errno_location(void) {\n  int *<span class=\"supfact\">piVar1</span>;\n  <span class=\"supfact\">piVar1</span> = (int *)(*(code *)PTR___errno_location_004a5348)();\n  return <span class=\"supfact\">piVar1</span>;\n}", "code_t": "int *__errno_location(void) {\n  int *<span class=\"supfact\">piVar1</span>;\n  <span class=\"supfact\">piVar1</span> = (int *)(*(code *)PTR___errno_location_004a5348)();\n  return <span class=\"supfact\">piVar1</span>;\n}", "var": [{"name": "piVar1", "type": "int * *", "pred_name": "piVar1", "ref_name": "piVar1", "ref_type": "int * *"}], "body_in_train": false}, {"repo_owner": "bartve-enovation", "repo_name": "hostap", "path": "bartve-enovation/hostap/415b4f28dd73e03065080385174e361519e1f5ebe109fbf5bb1c3871053783e7", "path_in_repo": "bartve-enovation/hostap/wpa_supplicant/dbus/dbus_new.o", "objdump": "0000000000000a96 <wpas_dbus_signal_eap_status>:\n     a96:\t55                   \tpush   %rbp\n     a97:\t48 89 e5             \tmov    %rsp,%rbp\n     a9a:\t48 83 c4 80          \tadd    $0xffffffffffffff80,%rsp\n     a9e:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n     aa2:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n     aa6:\t48 89 55 88          \tmov    %rdx,-0x78(%rbp)\n     aaa:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n     aae:\t48 8b 00             \tmov    (%rax),%rax\n     ab1:\t48 8b 40 70          \tmov    0x70(%rax),%rax\n     ab5:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     ab9:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n     abe:\t0f 84 99 00 00 00    \tje     b5d <wpas_dbus_signal_eap_status+0xc7>\n     ac4:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n     ac8:\t48 8b 80 b8 00 00 00 \tmov    0xb8(%rax),%rax\n     acf:\tba 00 00 00 00       \tmov    $0x0,%edx\n     ad4:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     ad9:\t48 89 c7             \tmov    %rax,%rdi\n     adc:\te8 00 00 00 00       \tcall   ae1 <wpas_dbus_signal_eap_status+0x4b>\n     ae1:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     ae5:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n     aea:\t74 74                \tje     b60 <wpas_dbus_signal_eap_status+0xca>\n     aec:\t48 8d 55 a0          \tlea    -0x60(%rbp),%rdx\n     af0:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     af4:\t48 89 d6             \tmov    %rdx,%rsi\n     af7:\t48 89 c7             \tmov    %rax,%rdi\n     afa:\te8 00 00 00 00       \tcall   aff <wpas_dbus_signal_eap_status+0x69>\n     aff:\t48 8d 55 90          \tlea    -0x70(%rbp),%rdx\n     b03:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n     b07:\tbe 73 00 00 00       \tmov    $0x73,%esi\n     b0c:\t48 89 c7             \tmov    %rax,%rdi\n     b0f:\te8 00 00 00 00       \tcall   b14 <wpas_dbus_signal_eap_status+0x7e>\n     b14:\t85 c0                \ttest   %eax,%eax\n     b16:\t74 36                \tje     b4e <wpas_dbus_signal_eap_status+0xb8>\n     b18:\t48 8d 55 88          \tlea    -0x78(%rbp),%rdx\n     b1c:\t48 8d 45 a0          \tlea    -0x60(%rbp),%rax\n     b20:\tbe 73 00 00 00       \tmov    $0x73,%esi\n     b25:\t48 89 c7             \tmov    %rax,%rdi\n     b28:\te8 00 00 00 00       \tcall   b2d <wpas_dbus_signal_eap_status+0x97>\n     b2d:\t85 c0                \ttest   %eax,%eax\n     b2f:\t74 1d                \tje     b4e <wpas_dbus_signal_eap_status+0xb8>\n     b31:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     b35:\t48 8b 00             \tmov    (%rax),%rax\n     b38:\t48 8b 4d f0          \tmov    -0x10(%rbp),%rcx\n     b3c:\tba 00 00 00 00       \tmov    $0x0,%edx\n     b41:\t48 89 ce             \tmov    %rcx,%rsi\n     b44:\t48 89 c7             \tmov    %rax,%rdi\n     b47:\te8 00 00 00 00       \tcall   b4c <wpas_dbus_signal_eap_status+0xb6>\n     b4c:\teb 01                \tjmp    b4f <wpas_dbus_signal_eap_status+0xb9>\n     b4e:\t90                   \tnop\n     b4f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     b53:\t48 89 c7             \tmov    %rax,%rdi\n     b56:\te8 00 00 00 00       \tcall   b5b <wpas_dbus_signal_eap_status+0xc5>\n     b5b:\teb 04                \tjmp    b61 <wpas_dbus_signal_eap_status+0xcb>\n     b5d:\t90                   \tnop\n     b5e:\teb 01                \tjmp    b61 <wpas_dbus_signal_eap_status+0xcb>\n     b60:\t90                   \tnop\n     b61:\tc9                   \tleave  \n     b62:\tc3                   \tret    ", "code_s": "void wpas_dbus_signal_eap_status(long *<span class=\"supfact\">param_1</span>,\n                                 undefined8 <span class=\"supfact\">param_2</span>,\n                                 undefined8 <span class=\"supfact\">param_3</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  undefined8 <span class=\"supfact\">local_80</span>;\n  undefined8 <span class=\"supfact\">local_78</span>;\n  long *<span class=\"supfact\">local_70</span>;\n  undefined <span class=\"supfact\">local_68</span>[Number];\n  long <span class=\"supfact\">local_18</span>;\n  undefined8 *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> =\n      *(undefined8 **)(*<span class=\"supfact\">param_1</span> + Number);\n  if ((<span class=\"supfact\">local_10</span> != (undefined8 *)Number) &&\n      (<span class=\"supfact\">local_80</span> = <span class=\"supfact\">param_3</span>,\n       <span class=\"supfact\">local_78</span> = <span class=\"supfact\">param_2</span>,\n       <span class=\"supfact\">local_70</span> = <span class=\"supfact\">param_1</span>,\n       <span class=\"supfact\">local_18</span> = dbus_message_new_signal(\n           <span class=\"supfact\">param_1</span>[Number], String, &DAT_00101ba8),\n       <span class=\"supfact\">local_18</span> != Number)) {\n    dbus_message_iter_init_append(<span class=\"supfact\">local_18</span>,\n                                  <span class=\"supfact\">local_68</span>);\n    <span class=\"supfact\">iVar1</span> = dbus_message_iter_append_basic(\n        <span class=\"supfact\">local_68</span>, Number, &<span class=\"supfact\">local_78</span>);\n    if ((<span class=\"supfact\">iVar1</span> != Number) &&\n        (<span class=\"supfact\">iVar1</span> = dbus_message_iter_append_basic(\n             <span class=\"supfact\">local_68</span>, Number, &<span class=\"supfact\">local_80</span>),\n         <span class=\"supfact\">iVar1</span> != Number)) {\n      dbus_connection_send(*<span class=\"supfact\">local_10</span>, <span class=\"supfact\">local_18</span>,\n                           Number);\n    }\n    dbus_message_unref(<span class=\"supfact\">local_18</span>);\n  }\n  return;\n}", "code_t": "void wpas_dbus_signal_eap_status(wpa_supplicant *<span class=\"supfact\">wpa_s</span>,\n                                 char *<span class=\"supfact\">status</span>,\n                                 char *<span class=\"supfact\">parameter</span>) {\n  wpas_dbus_priv *pwVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  long lVar3;\n  char *<span class=\"supfact\">parameter</span> - local;\n  char *<span class=\"supfact\">status</span> - local;\n  wpa_supplicant *<span class=\"supfact\">wpa_s</span> - local;\n  DBusMessageIter <span class=\"supfact\">iter</span>;\n  DBusMessage *<span class=\"supfact\">msg</span>;\n  wpas_dbus_priv *<span class=\"supfact\">iface</span>;\n  pwVar1 = <span class=\"supfact\">wpa_s</span>->global->dbus;\n  if ((pwVar1 != (wpas_dbus_priv *)Number) &&\n      (<span class=\"supfact\">parameter</span> - local = <span class=\"supfact\">parameter</span>,\n       <span class=\"supfact\">status</span> - local = <span class=\"supfact\">status</span>,\n       <span class=\"supfact\">wpa_s</span> - local = <span class=\"supfact\">wpa_s</span>,\n       lVar3 = dbus_message_new_signal(<span class=\"supfact\">wpa_s</span>->dbus_new_path,\n                                       String, &DAT_00101ba8),\n       lVar3 != Number)) {\n    dbus_message_iter_init_append(lVar3, &<span class=\"supfact\">iter</span>);\n    <span class=\"supfact\">iVar2</span> = dbus_message_iter_append_basic(\n        &<span class=\"supfact\">iter</span>, Number, &<span class=\"supfact\">status</span> - local);\n    if ((<span class=\"supfact\">iVar2</span> != Number) &&\n        (<span class=\"supfact\">iVar2</span> = dbus_message_iter_append_basic(\n             &<span class=\"supfact\">iter</span>, Number, &<span class=\"supfact\">parameter</span> - local),\n         <span class=\"supfact\">iVar2</span> != Number)) {\n      dbus_connection_send(pwVar1->con, lVar3, Number);\n    }\n    dbus_message_unref(lVar3);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "wpa_supplicant * *", "pred_name": "wpa_s", "ref_name": "wpa_s", "ref_type": "wpa_supplicant * *"}, {"name": "param_2", "type": "char * *", "pred_name": "status", "ref_name": "status", "ref_type": "char * *"}, {"name": "param_3", "type": "char * *", "pred_name": "parameter", "ref_name": "parameter", "ref_type": "char * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar2", "ref_name": "iVar2", "ref_type": "int"}, {"name": "local_80", "type": "char * *", "pred_name": "parameter-local", "ref_name": "parameter-local", "ref_type": "char * *"}, {"name": "local_78", "type": "char * *", "pred_name": "status-local", "ref_name": "status-local", "ref_type": "char * *"}, {"name": "local_70", "type": "wpa_supplicant * *", "pred_name": "wpa_s-local", "ref_name": "wpa_s-local", "ref_type": "wpa_supplicant * *"}, {"name": "local_68", "type": "struct DBusMessageIter { void * dummy1; void * dummy2; dbus_uint32_t dummy3; int dummy4; int dummy5; int dummy6; int dummy7; int dummy8; int dummy9; int dummy10; int dummy11; int pad1; void * pad2; void * pad3; }", "pred_name": "iter", "ref_name": "iter", "ref_type": "struct DBusMessageIter { void * dummy1; void * dummy2; dbus_uint32_t dummy3; int dummy4; int dummy5; int dummy6; int dummy7; int dummy8; int dummy9; int dummy10; int dummy11; int pad1; void * pad2; void * pad3; }"}, {"name": "local_18", "type": "DBusMessage * *", "pred_name": "msg", "ref_name": "msg", "ref_type": "DBusMessage * *"}, {"name": "local_10", "type": "wpas_dbus_priv * *", "pred_name": "iface", "ref_name": "iface", "ref_type": "wpas_dbus_priv * *"}], "body_in_train": true}, {"repo_owner": "squat", "repo_name": "darkapi", "path": "squat/darkapi/784bbf72cbcc2c9fd81b75ac790665a7846bd0506170ee9bdc7b3f1d23307233", "path_in_repo": "squat/darkapi/vendor/darknet/obj/utils.o", "objdump": "000000000000126c <write_all>:\n    126c:\t55                   \tpush   %rbp\n    126d:\t48 89 e5             \tmov    %rsp,%rbp\n    1270:\t48 83 ec 30          \tsub    $0x30,%rsp\n    1274:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n    1277:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    127b:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    127f:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n    1286:\t00 \n    1287:\teb 42                \tjmp    12cb <write_all+0x5f>\n    1289:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    128d:\t48 2b 45 f8          \tsub    -0x8(%rbp),%rax\n    1291:\t48 89 c2             \tmov    %rax,%rdx\n    1294:\t48 8b 4d e0          \tmov    -0x20(%rbp),%rcx\n    1298:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    129c:\t48 01 c1             \tadd    %rax,%rcx\n    129f:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    12a2:\t48 89 ce             \tmov    %rcx,%rsi\n    12a5:\t89 c7                \tmov    %eax,%edi\n    12a7:\te8 00 00 00 00       \tcall   12ac <write_all+0x40>\n    12ac:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    12b0:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    12b5:\t75 0c                \tjne    12c3 <write_all+0x57>\n    12b7:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 12be <write_all+0x52>\n    12be:\te8 00 00 00 00       \tcall   12c3 <write_all+0x57>\n    12c3:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    12c7:\t48 01 45 f8          \tadd    %rax,-0x8(%rbp)\n    12cb:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    12cf:\t48 3b 45 d8          \tcmp    -0x28(%rbp),%rax\n    12d3:\t72 b4                \tjb     1289 <write_all+0x1d>\n    12d5:\t90                   \tnop\n    12d6:\t90                   \tnop\n    12d7:\tc9                   \tleave  \n    12d8:\tc3                   \tret    ", "code_s": "void write_all(int <span class=\"supfact\">param_1</span>, long <span class=\"supfact\">param_2</span>,\n               ulong <span class=\"supfact\">param_3</span>) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  ulong <span class=\"supfact\">local_10</span>;\n  for (<span class=\"supfact\">local_10</span> = Number;\n       <span class=\"supfact\">local_10</span> < <span class=\"supfact\">param_3</span>;\n       <span class=\"supfact\">local_10</span> =\n           <span class=\"supfact\">local_10</span> + <span class=\"supfact\">sVar1</span>) {\n    <span class=\"supfact\">sVar1</span> =\n        write(<span class=\"supfact\">param_1</span>,\n              (void *)(<span class=\"supfact\">param_2</span> + <span class=\"supfact\">local_10</span>),\n              <span class=\"supfact\">param_3</span> - <span class=\"supfact\">local_10</span>);\n    if (<span class=\"supfact\">sVar1</span> == Number) {\n      error(String);\n    }\n  }\n  return;\n}", "code_t": "void write_all(int <span class=\"supfact\">fd</span>, char *<span class=\"supfact\">buffer</span>,\n               size_t <span class=\"supfact\">bytes</span>) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  size_t <span class=\"supfact\">bytes</span> - local;\n  char *<span class=\"supfact\">buffer</span> - local;\n  int <span class=\"supfact\">fd</span> - local;\n  size_t next;\n  size_t <span class=\"supfact\">n</span>;\n  for (<span class=\"supfact\">n</span> = Number; <span class=\"supfact\">n</span> < <span class=\"supfact\">bytes</span>;\n       <span class=\"supfact\">n</span> = <span class=\"supfact\">n</span> + <span class=\"supfact\">sVar1</span>) {\n    <span class=\"supfact\">sVar1</span> =\n        write(<span class=\"supfact\">fd</span>, <span class=\"supfact\">buffer</span> + <span class=\"supfact\">n</span>,\n              <span class=\"supfact\">bytes</span> - <span class=\"supfact\">n</span>);\n    if (<span class=\"supfact\">sVar1</span> == Number) {\n      error(String);\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "fd", "ref_type": "int"}, {"name": "param_2", "type": "char * *", "pred_name": "buf", "ref_name": "buffer", "ref_type": "char * *"}, {"name": "param_3", "type": "size_t", "pred_name": "count", "ref_name": "bytes", "ref_type": "size_t"}, {"name": "sVar1", "type": "ssize_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "ssize_t"}, {"name": "local_10", "type": "size_t", "pred_name": "__unk__", "ref_name": "n", "ref_type": "size_t"}], "body_in_train": true}, {"repo_owner": "HarborYuan", "repo_name": "Compiler", "path": "HarborYuan/Compiler/6abec4b323373de8d49113fc1e4b7bfdbbc006d5687c542505cab8a449880665", "path_in_repo": "HarborYuan/Compiler/task02/ast.o", "objdump": "00000000000000a3 <mkEpsilon>:\n  a3:\t55                   \tpush   %rbp\n  a4:\t48 89 e5             \tmov    %rsp,%rbp\n  a7:\t48 83 ec 10          \tsub    $0x10,%rsp\n  ab:\tbf 48 00 00 00       \tmov    $0x48,%edi\n  b0:\te8 00 00 00 00       \tcall   b5 <mkEpsilon+0x12>\n  b5:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  b9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  bd:\tc7 00 06 00 00 00    \tmovl   $0x6,(%rax)\n  c3:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  c7:\t48 c7 40 08 00 00 00 \tmovq   $0x0,0x8(%rax)\n  ce:\t00 \n  cf:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  d3:\t48 c7 40 10 00 00 00 \tmovq   $0x0,0x10(%rax)\n  da:\t00 \n  db:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  df:\tc9                   \tleave  \n  e0:\tc3                   \tret    ", "code_s": "undefined4 *mkEpsilon(void) {\n  undefined4 *<span class=\"supfact\">puVar1</span>;\n  <span class=\"supfact\">puVar1</span> = (undefined4 *)malloc(Number);\n  *<span class=\"supfact\">puVar1</span> = Number;\n  *(undefined8 *)(<span class=\"supfact\">puVar1</span> + Number) = Number;\n  *(undefined8 *)(<span class=\"supfact\">puVar1</span> + Number) = Number;\n  return <span class=\"supfact\">puVar1</span>;\n}", "code_t": "AST_PTR mkEpsilon(void) {\n  AST_PTR <span class=\"supfact\">pAVar1</span>;\n  AST_PTR tree_tmp;\n  <span class=\"supfact\">pAVar1</span> = (AST_PTR)malloc(Number);\n  <span class=\"supfact\">pAVar1</span>->op = Epsilon;\n  <span class=\"supfact\">pAVar1</span>->lchild = (ast *)Number;\n  <span class=\"supfact\">pAVar1</span>->rchild = (ast *)Number;\n  return <span class=\"supfact\">pAVar1</span>;\n}", "var": [{"name": "puVar1", "type": "FrameSpecList * *", "pred_name": "pdVar1", "ref_name": "pAVar1", "ref_type": "AST_PTR"}], "body_in_train": false}, {"repo_owner": "clobber", "repo_name": "UME", "path": "clobber/UME/86a2a9e30a3d981974a4dc76bf5c0bbf081b965f8197996d6c62dd638ec34081", "path_in_repo": "clobber/UME/mame/obj/sdl64/mame/drivers/segac2.o", "objdump": "", "code_s": "undefined8 __thiscall delegate_base<unsigned_char, address_space &,\n                                    unsigned_int, unsigned_char, _noparam,\n                                    _noparam>\nobject(delegate_base<unsigned_char, address_space &, unsigned_int,\n                     unsigned_char, _noparam, _noparam> *<span class=\"supfact\">this</span>) {\n  char <span class=\"supfact\">cVar1</span>;\n  undefined8 <span class=\"supfact\">uVar2</span>;\n  <span class=\"supfact\">cVar1</span> = is_mfp(<span class=\"supfact\">this</span>);\n  if (<span class=\"supfact\">cVar1</span> == String) {\n    <span class=\"supfact\">uVar2</span> = *(undefined8 *)(<span class=\"supfact\">this</span> + Number);\n  } else {\n    <span class=\"supfact\">uVar2</span> = delegate_mfp real_object(\n        (delegate_mfp *)(<span class=\"supfact\">this</span> + Number),\n        *(delegate_generic_class **)(<span class=\"supfact\">this</span> + Number));\n  }\n  return <span class=\"supfact\">uVar2</span>;\n}", "code_t": "delegate_generic_class\n    *__thiscall delegate_base<unsigned_char, _address_space &, _unsigned_int,\n                              _unsigned_char, __noparam, __noparam>\n    object(delegate_base<unsigned_char, _address_space &, _unsigned_int,\n                         _unsigned_char, __noparam, __noparam>\n               *<span class=\"supfact\">this</span>) {\n  bool <span class=\"supfact\">bVar1</span>;\n  delegate_generic_class *<span class=\"supfact\">pdVar2</span>;\n  delegate_base<unsigned_char, _address_space &, _unsigned_int, _unsigned_char,\n                __noparam, __noparam> *<span class=\"supfact\">this</span> -\n      local;\n  <span class=\"supfact\">bVar1</span> = is_mfp(<span class=\"supfact\">this</span>);\n  if (<span class=\"supfact\">bVar1</span>) {\n    <span class=\"supfact\">pdVar2</span> = delegate_mfp real_object(\n        &<span class=\"supfact\">this</span>->m_raw_mfp, <span class=\"supfact\">this</span>->m_object);\n  } else {\n    <span class=\"supfact\">pdVar2</span> = <span class=\"supfact\">this</span>->m_object;\n  }\n  return <span class=\"supfact\">pdVar2</span>;\n}", "var": [{"name": "this", "type": "delegate_base<unsigned_char,_address_space&,_unsigned_int,_unsigned_char,__noparam,__noparam> * *", "pred_name": "this", "ref_name": "this", "ref_type": "delegate_base<void,_address_space&,_unsigned_int,_short_unsigned_int,_short_unsigned_int,__noparam> * *"}, {"name": "cVar1", "type": "bool", "pred_name": "bVar1", "ref_name": "bVar1", "ref_type": "bool"}, {"name": "uVar2", "type": "delegate_generic_class * *", "pred_name": "pdVar2", "ref_name": "pdVar2", "ref_type": "delegate_generic_class * *"}], "body_in_train": true}, {"repo_owner": "tinydiego", "repo_name": "android_kernel_samsung_totoro", "path": "tinydiego/android_kernel_samsung_totoro/37d06a9f1b1076017701610112c13dd4ba293d396334e43c70c0b831d3f913d1", "path_in_repo": "tinydiego/android_kernel_samsung_totoro/GT-S5360_Kernel/common/tools/perf/util/header.o", "objdump": "0000000000002aa0 <perf_header__sample_type>:\n    2aa0:\t55                   \tpush   %rbp\n    2aa1:\t48 89 e5             \tmov    %rsp,%rbp\n    2aa4:\t48 83 ec 30          \tsub    $0x30,%rsp\n    2aa8:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    2aac:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    2ab3:\t00 00 \n    2ab5:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    2ab9:\t31 c0                \txor    %eax,%eax\n    2abb:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    2ac2:\t00 \n    2ac3:\tc7 45 e4 00 00 00 00 \tmovl   $0x0,-0x1c(%rbp)\n    2aca:\teb 52                \tjmp    2b1e <perf_header__sample_type+0x7e>\n    2acc:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    2ad0:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    2ad4:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n    2ad7:\t48 63 d2             \tmovslq %edx,%rdx\n    2ada:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    2ade:\t48 01 d0             \tadd    %rdx,%rax\n    2ae1:\t48 8b 00             \tmov    (%rax),%rax\n    2ae4:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    2ae8:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    2aed:\t75 0e                \tjne    2afd <perf_header__sample_type+0x5d>\n    2aef:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    2af3:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    2af7:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    2afb:\teb 1d                \tjmp    2b1a <perf_header__sample_type+0x7a>\n    2afd:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    2b01:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    2b05:\t48 39 45 e8          \tcmp    %rax,-0x18(%rbp)\n    2b09:\t74 0f                \tje     2b1a <perf_header__sample_type+0x7a>\n    2b0b:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    2b10:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2b15:\te8 00 00 00 00       \tcall   2b1a <perf_header__sample_type+0x7a>\n    2b1a:\t83 45 e4 01          \taddl   $0x1,-0x1c(%rbp)\n    2b1e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    2b22:\t8b 40 04             \tmov    0x4(%rax),%eax\n    2b25:\t39 45 e4             \tcmp    %eax,-0x1c(%rbp)\n    2b28:\t7c a2                \tjl     2acc <perf_header__sample_type+0x2c>\n    2b2a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2b2e:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    2b32:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n    2b39:\t00 00 \n    2b3b:\t74 05                \tje     2b42 <perf_header__sample_type+0xa2>\n    2b3d:\te8 00 00 00 00       \tcall   2b42 <perf_header__sample_type+0xa2>\n    2b42:\tc9                   \tleave  \n    2b43:\tc3                   \tret    ", "code_s": "long perf_header__sample_type(long <span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  long lVar2;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">local_24</span>;\n  long <span class=\"supfact\">local_20</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_20</span> = Number;\n  for (<span class=\"supfact\">local_24</span> = Number;\n       <span class=\"supfact\">local_24</span> < *(int *)(<span class=\"supfact\">param_1</span> + Number);\n       <span class=\"supfact\">local_24</span> = <span class=\"supfact\">local_24</span> + Number) {\n    lVar2 = *(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                      (long)<span class=\"supfact\">local_24</span> * Number);\n    if (<span class=\"supfact\">local_20</span> == Number) {\n      <span class=\"supfact\">local_20</span> = *(long *)(lVar2 + Number);\n    } else if (<span class=\"supfact\">local_20</span> != *(long *)(lVar2 + Number)) {\n      die(String);\n    }\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return <span class=\"supfact\">local_20</span>;\n}", "code_t": "u64 perf_header__sample_type(perf_header *<span class=\"supfact\">header</span>) {\n  long lVar1;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  perf_header *<span class=\"supfact\">header</span> - local;\n  int <span class=\"supfact\">i</span>;\n  u64 <span class=\"supfact\">type</span>;\n  perf_header_attr *attr;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">type</span> = Number;\n  for (<span class=\"supfact\">i</span> = Number;\n       <span class=\"supfact\">i</span> < <span class=\"supfact\">header</span>->attrs;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    if (<span class=\"supfact\">type</span> == Number) {\n      <span class=\"supfact\">type</span> =\n          (<span class=\"supfact\">header</span>->attr[<span class=\"supfact\">i</span>]->attr).sample_type;\n    } else if (<span class=\"supfact\">type</span> !=\n               (<span class=\"supfact\">header</span>->attr[<span class=\"supfact\">i</span>]->attr)\n                   .sample_type) {\n      die(String);\n    }\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return <span class=\"supfact\">type</span>;\n}", "var": [{"name": "param_1", "type": "perf_header * *", "pred_name": "header", "ref_name": "header", "ref_type": "perf_header * *"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_24", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}, {"name": "local_20", "type": "u64", "pred_name": "type", "ref_name": "type", "ref_type": "u64"}], "body_in_train": true}, {"repo_owner": "knizhnik", "repo_name": "postgresql", "path": "knizhnik/postgresql/86396f9bb8a0c668b6b5b7fdcbf0713893444cf390b301ecb569ff86734ae2c3", "path_in_repo": "knizhnik/postgresql//src/backend/storage/file/fd.o", "objdump": "000000000000013d <pg_fdatasync>:\n     13d:\t55                   \tpush   %rbp\n     13e:\t48 89 e5             \tmov    %rsp,%rbp\n     141:\t48 83 ec 10          \tsub    $0x10,%rsp\n     145:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n     148:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 14f <pg_fdatasync+0x12>\n     14f:\t84 c0                \ttest   %al,%al\n     151:\t74 0c                \tje     15f <pg_fdatasync+0x22>\n     153:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     156:\t89 c7                \tmov    %eax,%edi\n     158:\te8 00 00 00 00       \tcall   15d <pg_fdatasync+0x20>\n     15d:\teb 05                \tjmp    164 <pg_fdatasync+0x27>\n     15f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     164:\tc9                   \tleave  \n     165:\tc3                   \tret    ", "code_s": "int pg_fdatasync(int <span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  if (enableFsync == String) {\n    <span class=\"supfact\">iVar1</span> = Number;\n  } else {\n    <span class=\"supfact\">iVar1</span> = fdatasync(<span class=\"supfact\">param_1</span>);\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int pg_fdatasync(int <span class=\"supfact\">fd</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  int <span class=\"supfact\">fd</span> - local;\n  if (enableFsync == String) {\n    <span class=\"supfact\">iVar1</span> = Number;\n  } else {\n    <span class=\"supfact\">iVar1</span> = fdatasync(<span class=\"supfact\">fd</span>);\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "type", "ref_name": "fd", "ref_type": "int"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "CNCBASHER", "repo_name": "linuxcnc-1", "path": "CNCBASHER/linuxcnc-1/df17b1d09b29230f7a521ad7c831b2e6272cdbd861fe3fb195fb9c54054ca9b8", "path_in_repo": "CNCBASHER/linuxcnc-1/src/redis/redis/src/t_string.o", "objdump": "00000000000009bc <mgetCommand>:\n     9bc:\t55                   \tpush   %rbp\n     9bd:\t48 89 e5             \tmov    %rsp,%rbp\n     9c0:\t48 83 ec 20          \tsub    $0x20,%rsp\n     9c4:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     9c8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     9cc:\t8b 40 28             \tmov    0x28(%rax),%eax\n     9cf:\t83 e8 01             \tsub    $0x1,%eax\n     9d2:\t48 63 d0             \tmovslq %eax,%rdx\n     9d5:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     9d9:\t48 89 d6             \tmov    %rdx,%rsi\n     9dc:\t48 89 c7             \tmov    %rax,%rdi\n     9df:\te8 00 00 00 00       \tcall   9e4 <mgetCommand+0x28>\n     9e4:\tc7 45 fc 01 00 00 00 \tmovl   $0x1,-0x4(%rbp)\n     9eb:\te9 8b 00 00 00       \tjmp    a7b <mgetCommand+0xbf>\n     9f0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     9f4:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n     9f8:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n     9fb:\t48 63 d2             \tmovslq %edx,%rdx\n     9fe:\t48 c1 e2 03          \tshl    $0x3,%rdx\n     a02:\t48 01 d0             \tadd    %rdx,%rax\n     a05:\t48 8b 10             \tmov    (%rax),%rdx\n     a08:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     a0c:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     a10:\t48 89 d6             \tmov    %rdx,%rsi\n     a13:\t48 89 c7             \tmov    %rax,%rdi\n     a16:\te8 00 00 00 00       \tcall   a1b <mgetCommand+0x5f>\n     a1b:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     a1f:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n     a24:\t75 18                \tjne    a3e <mgetCommand+0x82>\n     a26:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # a2d <mgetCommand+0x71>\n     a2d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     a31:\t48 89 d6             \tmov    %rdx,%rsi\n     a34:\t48 89 c7             \tmov    %rax,%rdi\n     a37:\te8 00 00 00 00       \tcall   a3c <mgetCommand+0x80>\n     a3c:\teb 39                \tjmp    a77 <mgetCommand+0xbb>\n     a3e:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     a42:\t0f b6 00             \tmovzbl (%rax),%eax\n     a45:\t83 e0 0f             \tand    $0xf,%eax\n     a48:\t84 c0                \ttest   %al,%al\n     a4a:\t74 18                \tje     a64 <mgetCommand+0xa8>\n     a4c:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # a53 <mgetCommand+0x97>\n     a53:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     a57:\t48 89 d6             \tmov    %rdx,%rsi\n     a5a:\t48 89 c7             \tmov    %rax,%rdi\n     a5d:\te8 00 00 00 00       \tcall   a62 <mgetCommand+0xa6>\n     a62:\teb 13                \tjmp    a77 <mgetCommand+0xbb>\n     a64:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n     a68:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     a6c:\t48 89 d6             \tmov    %rdx,%rsi\n     a6f:\t48 89 c7             \tmov    %rax,%rdi\n     a72:\te8 00 00 00 00       \tcall   a77 <mgetCommand+0xbb>\n     a77:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n     a7b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     a7f:\t8b 40 28             \tmov    0x28(%rax),%eax\n     a82:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n     a85:\t0f 8c 65 ff ff ff    \tjl     9f0 <mgetCommand+0x34>\n     a8b:\t90                   \tnop\n     a8c:\t90                   \tnop\n     a8d:\tc9                   \tleave  \n     a8e:\tc3                   \tret    ", "code_s": "void mgetCommand(long <span class=\"supfact\">param_1</span>) {\n  byte *<span class=\"supfact\">pbVar1</span>;\n  int <span class=\"supfact\">local_c</span>;\n  addReplyMultiBulkLen(\n      <span class=\"supfact\">param_1</span>,\n      (long)(*(int *)(<span class=\"supfact\">param_1</span> + Number) + -Number));\n  for (<span class=\"supfact\">local_c</span> = Number;\n       <span class=\"supfact\">local_c</span> < *(int *)(<span class=\"supfact\">param_1</span> + Number);\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    <span class=\"supfact\">pbVar1</span> = (byte *)lookupKeyRead(\n        *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n        *(undefined8 *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                        (long)<span class=\"supfact\">local_c</span> * Number));\n    if (<span class=\"supfact\">pbVar1</span> == (byte *)Number) {\n      addReply(<span class=\"supfact\">param_1</span>, _sdsempty);\n    } else if ((*<span class=\"supfact\">pbVar1</span> & Number) == Number) {\n      addReplyBulk(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">pbVar1</span>);\n    } else {\n      addReply(<span class=\"supfact\">param_1</span>, _sdsempty);\n    }\n  }\n  return;\n}", "code_t": "void mgetCommand(redisClient *<span class=\"supfact\">c</span>) {\n  byte *<span class=\"supfact\">pbVar1</span>;\n  redisClient *<span class=\"supfact\">c</span> - local;\n  robj *o;\n  int <span class=\"supfact\">j</span>;\n  addReplyMultiBulkLen(<span class=\"supfact\">c</span>,\n                       (long)(<span class=\"supfact\">c</span>->argc + -Number));\n  for (<span class=\"supfact\">j</span> = Number; <span class=\"supfact\">j</span> < <span class=\"supfact\">c</span>->argc;\n       <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number) {\n    <span class=\"supfact\">pbVar1</span> = (byte *)lookupKeyRead(\n        <span class=\"supfact\">c</span>->db, <span class=\"supfact\">c</span>->argv[<span class=\"supfact\">j</span>]);\n    if (<span class=\"supfact\">pbVar1</span> == (byte *)Number) {\n      addReply(<span class=\"supfact\">c</span>, _sdsempty);\n    } else if ((*<span class=\"supfact\">pbVar1</span> & Number) == Number) {\n      addReplyBulk(<span class=\"supfact\">c</span>, <span class=\"supfact\">pbVar1</span>);\n    } else {\n      addReply(<span class=\"supfact\">c</span>, _sdsempty);\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "redisClient * *", "pred_name": "c", "ref_name": "c", "ref_type": "redisClient * *"}, {"name": "pbVar1", "type": "byte * *", "pred_name": "pbVar1", "ref_name": "pbVar1", "ref_type": "byte * *"}, {"name": "local_c", "type": "int", "pred_name": "j", "ref_name": "j", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "uwehermann", "repo_name": "easybox-904-lte-firmware", "path": "uwehermann/easybox-904-lte-firmware/39e5067c15c696527a3d10208450a05ee501c29702bb12ccbd70ab0310bdfc7e", "path_in_repo": "uwehermann/easybox-904-lte-firmware/package/ffmpeg/src/vhook/fish.so", "objdump": "0000000000001305 <Release>:\n    1305:\t48 83 ec 28          \tsub    $0x28,%rsp\n    1309:\t48 89 7c 24 08       \tmov    %rdi,0x8(%rsp)\n    130e:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1313:\t48 89 44 24 18       \tmov    %rax,0x18(%rsp)\n    1318:\t48 83 7c 24 08 00    \tcmpq   $0x0,0x8(%rsp)\n    131e:\t74 1e                \tje     133e <Release+0x39>\n    1320:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    1325:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n    1329:\t48 89 c7             \tmov    %rax,%rdi\n    132c:\te8 6f fe ff ff       \tcall   11a0 <sws_freeContext@plt>\n    1331:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1336:\t48 89 c7             \tmov    %rax,%rdi\n    1339:\te8 12 fe ff ff       \tcall   1150 <av_free@plt>\n    133e:\t90                   \tnop\n    133f:\t48 83 c4 28          \tadd    $0x28,%rsp\n    1343:\tc3                   \tret    ", "code_s": "void Release(long <span class=\"supfact\">param_1</span>) {\n  if (<span class=\"supfact\">param_1</span> != Number) {\n    sws_freeContext(*(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n    av_free(<span class=\"supfact\">param_1</span>);\n  }\n  return;\n}", "code_t": "void Release(void *<span class=\"supfact\">ctx</span>) {\n  void *<span class=\"supfact\">ctx</span> - local;\n  ContextInfo *ci;\n  if (<span class=\"supfact\">ctx</span> != (void *)Number) {\n    sws_freeContext(*(undefined8 *)((long)<span class=\"supfact\">ctx</span> + Number));\n    av_free(<span class=\"supfact\">ctx</span>);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "void * *", "pred_name": "ctx", "ref_name": "ctx", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "aq2-tng", "repo_name": "aq2-tng", "path": "aq2-tng/aq2-tng/43e681d087f9ed1a168a137a401ee222fa6ebcd715ca8f3aeedd4192e8155940", "path_in_repo": "aq2-tng/aq2-tng/source/gamex86_64.so", "objdump": "0000000000045886 <vCheckVote>:\n   45886:\t55                   \tpush   %rbp\n   45887:\t48 89 e5             \tmov    %rsp,%rbp\n   4588a:\t48 83 ec 10          \tsub    $0x10,%rsp\n   4588e:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n   45895:\t48 8b 05 a4 15 07 00 \tmov    0x715a4(%rip),%rax        # b6e40 <xvotelist@@Base-0x2180>\n   4589c:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n   458a0:\teb 4a                \tjmp    458ec <vCheckVote+0x66>\n   458a2:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   458a6:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n   458aa:\t48 85 c0             \ttest   %rax,%rax\n   458ad:\t74 34                \tje     458e3 <vCheckVote+0x5d>\n   458af:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   458b3:\t48 8b 00             \tmov    (%rax),%rax\n   458b6:\tf3 0f 10 40 20       \tmovss  0x20(%rax),%xmm0\n   458bb:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n   458bf:\t0f 2e c1             \tucomiss %xmm1,%xmm0\n   458c2:\t7a 09                \tjp     458cd <vCheckVote+0x47>\n   458c4:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n   458c8:\t0f 2e c1             \tucomiss %xmm1,%xmm0\n   458cb:\t74 16                \tje     458e3 <vCheckVote+0x5d>\n   458cd:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   458d1:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n   458d5:\tff d0                \tcall   *%rax\n   458d7:\t83 f8 01             \tcmp    $0x1,%eax\n   458da:\t75 07                \tjne    458e3 <vCheckVote+0x5d>\n   458dc:\tb8 01 00 00 00       \tmov    $0x1,%eax\n   458e1:\teb 18                \tjmp    458fb <vCheckVote+0x75>\n   458e3:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n   458e7:\t48 83 45 f0 58       \taddq   $0x58,-0x10(%rbp)\n   458ec:\tb8 06 00 00 00       \tmov    $0x6,%eax\n   458f1:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n   458f4:\t7c ac                \tjl     458a2 <vCheckVote+0x1c>\n   458f6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   458fb:\tc9                   \tleave  \n   458fc:\tc3                   \tret    ", "code_s": "undefined8 vCheckVote(void) {\n  int <span class=\"supfact\">iVar1</span>;\n  long *<span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_c</span> = Number;\n  <span class=\"supfact\">local_18</span> = (long *)PTR_xvotelist_001b6e40;\n  while (true) {\n    if (Number < <span class=\"supfact\">local_c</span>) {\n      return Number;\n    }\n    if (((<span class=\"supfact\">local_18</span>[Number] != Number) &&\n         (*(float *)(*<span class=\"supfact\">local_18</span> + Number) != Number)) &&\n        (<span class=\"supfact\">iVar1</span> = (*(code *)<span class=\"supfact\">local_18</span>[Number])(),\n         <span class=\"supfact\">iVar1</span> == Number))\n      break;\n    <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number;\n    <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> + Number;\n  }\n  return Number;\n}", "code_t": "qboolean vCheckVote(void) {\n  qboolean <span class=\"supfact\">qVar1</span>;\n  <span class=\"supfact\">qVar1</span> = (*(code *)PTR_vCheckVote_001b7990)();\n  return <span class=\"supfact\">qVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "qVar1", "ref_type": "qboolean"}, {"name": "local_18", "type": "__unk__", "pred_name": "__unk__", "ref_name": "xvote", "ref_type": "vote_t * *"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "Zcynical", "repo_name": "LMSolvers", "path": "Zcynical/LMSolvers/c941995b787e157298fcc8832ffbf44ef52e0204d886cbfd52b92e6552b96d25", "path_in_repo": "Zcynical/LMSolvers/clapack-3.2.1/F2CLIBS/libf2c/h_mod.o", "objdump": "0000000000000000 <h_mod>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n   8:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n   c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  10:\t0f b7 00             \tmovzwl (%rax),%eax\n  13:\t98                   \tcwtl   \n  14:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n  18:\t0f b7 12             \tmovzwl (%rdx),%edx\n  1b:\t0f bf ca             \tmovswl %dx,%ecx\n  1e:\t99                   \tcltd   \n  1f:\tf7 f9                \tidiv   %ecx\n  21:\t89 d0                \tmov    %edx,%eax\n  23:\t5d                   \tpop    %rbp\n  24:\tc3                   \tret    \n", "code_s": "ulong h_mod(short *<span class=\"supfact\">param_1</span>, short *<span class=\"supfact\">param_2</span>) {\n  return (long)(int)*<span class=\"supfact\">param_1</span> %\n             (long)(int)*<span class=\"supfact\">param_2</span> &\n         Number;\n}", "code_t": "shortint h_mod(short *<span class=\"supfact\">a</span>, short *<span class=\"supfact\">b</span>) {\n  short *<span class=\"supfact\">b</span> - local;\n  short *<span class=\"supfact\">a</span> - local;\n  return *<span class=\"supfact\">a</span> % *<span class=\"supfact\">b</span>;\n}", "var": [{"name": "param_1", "type": "int * *", "pred_name": "length", "ref_name": "a", "ref_type": "short * *"}, {"name": "param_2", "type": "int * *", "pred_name": "__unk__", "ref_name": "b", "ref_type": "short * *"}], "body_in_train": false}, {"repo_owner": "msysgit", "repo_name": "msysgit", "path": "msysgit/msysgit/239626b0ff367d043cc5bbd3103faf7fb10c6bec83f4edb25f89624513912639", "path_in_repo": "msysgit/msysgit/git/git-upload-pack", "objdump": "", "code_s": "int connect(int __fd, sockaddr *__addr, socklen_t __len) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_connect_004fd388)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int connect(int __fd, sockaddr *__addr, socklen_t __len) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_connect_004fd388)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "ENCODE-DCC", "repo_name": "kentUtils", "path": "ENCODE-DCC/kentUtils/237953a2c24d861fad143785e96a39068fee532da7cde52a7f8054c16a25ec1e", "path_in_repo": "ENCODE-DCC/kentUtils//bin/toLower", "objdump": "", "code_s": "longlong atoll(char *__nptr) {\n  longlong <span class=\"supfact\">lVar1</span>;\n  <span class=\"supfact\">lVar1</span> = (*(code *)PTR_atoll_004452f0)();\n  return <span class=\"supfact\">lVar1</span>;\n}", "code_t": "longlong atoll(char *__nptr) {\n  longlong <span class=\"supfact\">lVar1</span>;\n  <span class=\"supfact\">lVar1</span> = (*(code *)PTR_atoll_004452f0)();\n  return <span class=\"supfact\">lVar1</span>;\n}", "var": [{"name": "lVar1", "type": "longlong", "pred_name": "lVar1", "ref_name": "lVar1", "ref_type": "longlong"}], "body_in_train": true}, {"repo_owner": "m4rk", "repo_name": "MT9T001-linux-driver", "path": "m4rk/MT9T001-linux-driver/097f11703daa44ad433d1a4f0f4c26824e7deebc923ca554e6b646c5c1f80d90", "path_in_repo": "m4rk/MT9T001-linux-driver/snapgear-2.6-p42/user/ncurses/ncurses-5.6/test/demo_altkeys", "objdump": "", "code_s": "int access(char *__name, int __type) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_access_004461f0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int access(char *__name, int __type) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_access_004461f0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "sawyeraw3", "repo_name": "task_tracker", "path": "sawyeraw3/task_tracker/0c08abe5f48e0e46a4a80c339a32ba1fc93938650168b088a4aa1de8ab48aa77", "path_in_repo": "sawyeraw3/task_tracker/assets/node_modules/node-sass/src/libsass/src/.libs/sass2scss.o", "objdump": "", "code_s": "void FUN_00105d86(void) {\n  void **<span class=\"supfact\">unaff_R13</span>;\n  void *<span class=\"supfact\">param_8</span>;\n  void *<span class=\"supfact\">in_stack_00000060</span>;\n  void *<span class=\"supfact\">param_11</span>;\n  if (<span class=\"supfact\">param_11</span> != <span class=\"supfact\">param_8</span>) {\n    operator.delete(<span class=\"supfact\">param_11</span>);\n  }\n  if (*<span class=\"supfact\">unaff_R13</span> != <span class=\"supfact\">in_stack_00000060</span>) {\n    operator.delete(*<span class=\"supfact\">unaff_R13</span>);\n  }\n  _Unwind_Resume();\n}", "code_t": "void FUN_00105d86(void) {\n  void **<span class=\"supfact\">unaff_R13</span>;\n  void *<span class=\"supfact\">param_8</span>;\n  void *<span class=\"supfact\">in_stack_00000060</span>;\n  void *<span class=\"supfact\">param_11</span>;\n  if (<span class=\"supfact\">param_11</span> != <span class=\"supfact\">param_8</span>) {\n    operator.delete(<span class=\"supfact\">param_11</span>);\n  }\n  if (*<span class=\"supfact\">unaff_R13</span> != <span class=\"supfact\">in_stack_00000060</span>) {\n    operator.delete(*<span class=\"supfact\">unaff_R13</span>);\n  }\n  _Unwind_Resume();\n}", "var": [{"name": "unaff_R13", "type": "void * *", "pred_name": "unaff_R13", "ref_name": "unaff_R13", "ref_type": "void * * *"}, {"name": "param_8", "type": "void * *", "pred_name": "param_8", "ref_name": "param_8", "ref_type": "void * *"}, {"name": "in_stack_00000060", "type": "void * *", "pred_name": "in_stack_00000060", "ref_name": "in_stack_00000060", "ref_type": "void * *"}, {"name": "param_11", "type": "void * *", "pred_name": "param_11", "ref_name": "param_11", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "bodiroga", "repo_name": "VEV", "path": "bodiroga/VEV/f986bc5802a8d4209c2de09bb09fe10ba6ae34b8b4505f397526b398828bda1a", "path_in_repo": "bodiroga/VEV/practica/Geometry/triangleMesh.o", "objdump": "00000000000002ff <TriangNidxTMesh>:\n     2ff:\t55                   \tpush   %rbp\n     300:\t48 89 e5             \tmov    %rsp,%rbp\n     303:\t48 83 ec 10          \tsub    $0x10,%rsp\n     307:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n     30b:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n     30f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     313:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n     317:\t48 85 c0             \ttest   %rax,%rax\n     31a:\t75 07                \tjne    323 <TriangNidxTMesh+0x24>\n     31c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     321:\teb 20                \tjmp    343 <TriangNidxTMesh+0x44>\n     323:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n     327:\t48 89 d0             \tmov    %rdx,%rax\n     32a:\t48 01 c0             \tadd    %rax,%rax\n     32d:\t48 01 c2             \tadd    %rax,%rdx\n     330:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     334:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n     338:\t48 89 d6             \tmov    %rdx,%rsi\n     33b:\t48 89 c7             \tmov    %rax,%rdi\n     33e:\te8 00 00 00 00       \tcall   343 <TriangNidxTMesh+0x44>\n     343:\tc9                   \tleave  \n     344:\tc3                   \tret    ", "code_s": "undefined8 TriangNidxTMesh(long <span class=\"supfact\">param_1</span>,\n                           long <span class=\"supfact\">param_2</span>) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  if (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar1</span> =\n        atPtrVectorI(*(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n                     <span class=\"supfact\">param_2</span> * Number);\n  }\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "int *TriangNidxTMesh(TriangleMesh *<span class=\"supfact\">thisMesh</span>,\n                     size_t <span class=\"supfact\">idx</span>) {\n  int *<span class=\"supfact\">piVar1</span>;\n  size_t <span class=\"supfact\">idx</span> - local;\n  TriangleMesh *<span class=\"supfact\">thisMesh</span> - local;\n  if (<span class=\"supfact\">thisMesh</span>->nindices == (VectorI *)Number) {\n    <span class=\"supfact\">piVar1</span> = (int *)Number;\n  } else {\n    <span class=\"supfact\">piVar1</span> = (int *)atPtrVectorI(\n        <span class=\"supfact\">thisMesh</span>->nindices, <span class=\"supfact\">idx</span> * Number);\n  }\n  return <span class=\"supfact\">piVar1</span>;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "thisMesh", "ref_type": "TriangleMesh * *"}, {"name": "param_2", "type": "char * *", "pred_name": "__unk__", "ref_name": "idx", "ref_type": "size_t"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "piVar1", "ref_type": "int * *"}], "body_in_train": false}, {"repo_owner": "caojiaju-2017", "repo_name": "libXMedia", "path": "caojiaju-2017/libXMedia/fac02b31cf31934e3c3245c406d0b2fb928bbc7370df6e05ba1b10b0b68c15e3", "path_in_repo": "caojiaju-2017/libXMedia/ffmpeg-4.1.3/libavutil/eval.o", "objdump": "0000000000003314 <av_expr_eval>:\n    3314:\t48 81 ec 98 00 00 00 \tsub    $0x98,%rsp\n    331b:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n    3320:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n    3325:\t48 89 54 24 08       \tmov    %rdx,0x8(%rsp)\n    332a:\t48 8d 54 24 20       \tlea    0x20(%rsp),%rdx\n    332f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3334:\tb9 0d 00 00 00       \tmov    $0xd,%ecx\n    3339:\t48 89 d7             \tmov    %rdx,%rdi\n    333c:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n    333f:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3344:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    3348:\t48 89 84 24 80 00 00 \tmov    %rax,0x80(%rsp)\n    334f:\t00 \n    3350:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    3355:\t48 89 44 24 38       \tmov    %rax,0x38(%rsp)\n    335a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    335f:\t48 89 44 24 68       \tmov    %rax,0x68(%rsp)\n    3364:\t48 8b 54 24 18       \tmov    0x18(%rsp),%rdx\n    3369:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    336e:\t48 89 d6             \tmov    %rdx,%rsi\n    3371:\t48 89 c7             \tmov    %rax,%rdi\n    3374:\te8 09 d0 ff ff       \tcall   382 <eval_expr>\n    3379:\t48 81 c4 98 00 00 00 \tadd    $0x98,%rsp\n    3380:\tc3                   \tret    ", "code_s": "void av_expr_eval(long <span class=\"supfact\">param_1</span>,\n                  undefined8 <span class=\"supfact\">param_2</span>,\n                  undefined8 <span class=\"supfact\">param_3</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  undefined8 *puVar2;\n  undefined8 <span class=\"supfact\">local_78</span>[Number];\n  undefined8 <span class=\"supfact\">local_30</span>;\n  undefined8 <span class=\"supfact\">local_18</span>;\n  puVar2 = <span class=\"supfact\">local_78</span>;\n  for (<span class=\"supfact\">lVar1</span> = Number; <span class=\"supfact\">lVar1</span> != Number;\n       <span class=\"supfact\">lVar1</span> = <span class=\"supfact\">lVar1</span> + -Number) {\n    *puVar2 = Number;\n    puVar2 = puVar2 + Number;\n  }\n  <span class=\"supfact\">local_18</span> = *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n  <span class=\"supfact\">local_78</span>[Number] = <span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">local_30</span> = <span class=\"supfact\">param_3</span>;\n  FUN_00100382(<span class=\"supfact\">local_78</span>, <span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "double av_expr_eval(AVExpr *<span class=\"supfact\">e</span>,\n                    double *<span class=\"supfact\">const_values</span>,\n                    void *<span class=\"supfact\">opaque</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  Parser *pPVar2;\n  double dVar3;\n  void *<span class=\"supfact\">opaque</span> - local;\n  double *<span class=\"supfact\">const_values</span> - local;\n  AVExpr *<span class=\"supfact\">e</span> - local;\n  Parser <span class=\"supfact\">p</span>;\n  pPVar2 = &<span class=\"supfact\">p</span>;\n  for (<span class=\"supfact\">lVar1</span> = Number; <span class=\"supfact\">lVar1</span> != Number;\n       <span class=\"supfact\">lVar1</span> = <span class=\"supfact\">lVar1</span> + -Number) {\n    pPVar2->class = (AVClass *)Number;\n    pPVar2 = (Parser *)&pPVar2->stack_index;\n  }\n  <span class=\"supfact\">p</span>.var = <span class=\"supfact\">e</span>->var;\n  <span class=\"supfact\">p</span>.<span class=\"supfact\">const_values</span> = <span class=\"supfact\">const_values</span>;\n  <span class=\"supfact\">p</span>.<span class=\"supfact\">opaque</span> = <span class=\"supfact\">opaque</span>;\n  dVar3 = eval_expr(&<span class=\"supfact\">p</span>, <span class=\"supfact\">e</span>);\n  return dVar3;\n}", "var": [{"name": "param_1", "type": "AVExpr * *", "pred_name": "e", "ref_name": "e", "ref_type": "AVExpr * *"}, {"name": "param_2", "type": "double * *", "pred_name": "const_values", "ref_name": "const_values", "ref_type": "double * *"}, {"name": "param_3", "type": "void * *", "pred_name": "opaque", "ref_name": "opaque", "ref_type": "void * *"}, {"name": "lVar1", "type": "long", "pred_name": "lVar1", "ref_name": "lVar1", "ref_type": "long"}, {"name": "local_78", "type": "struct Parser { AVClass * class; int stack_index; char * s; double * const_values; char * * const_names; _func_double_void_ptr_double * * funcs1; char * * func1_names; _func_double_void_ptr_double_double * * funcs2; char * * func2_names; void * opaque; int log_offset; void * log_ctx; double * var; PADDING (8); }", "pred_name": "p", "ref_name": "p", "ref_type": "struct Parser { AVClass * class; int stack_index; char * s; double * const_values; char * * const_names; _func_double_void_ptr_double * * funcs1; char * * func1_names; _func_double_void_ptr_double_double * * funcs2; char * * func2_names; void * opaque; int log_offset; void * log_ctx; double * var; PADDING (8); }"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_18", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "OS2World", "repo_name": "LIB-MM-libvpx", "path": "OS2World/LIB-MM-libvpx/a7088cfebd81848840fd3c4b6142aa0c7e187a711be54a9f44ccdb6471c56511", "path_in_repo": "OS2World/LIB-MM-libvpx/src/third_party/googletest/src/make/gtest-all.o", "objdump": "", "code_s": "void __thiscall testing internal FilePath\nNormalize(FilePath *<span class=\"supfact\">this</span>) {\n  char <span class=\"supfact\">cVar1</span>;\n  long lVar2;\n  char *__s;\n  char *<span class=\"supfact\">local_18</span>;\n  char *<span class=\"supfact\">local_10</span>;\n  lVar2 = String c_str((String *)<span class=\"supfact\">this</span>);\n  if (lVar2 == Number) {\n    String operator=((String *)<span class=\"supfact\">this</span>, String);\n  } else {\n    <span class=\"supfact\">local_10</span> =\n        (char *)String c_str((String *)<span class=\"supfact\">this</span>);\n    lVar2 = String length((String *)<span class=\"supfact\">this</span>);\n    __s = (char *)operator.new[](lVar2 + Number);\n    lVar2 = String length((String *)<span class=\"supfact\">this</span>);\n    memset(__s, Number, lVar2 + Number);\n    <span class=\"supfact\">local_18</span> = __s;\n    while (*<span class=\"supfact\">local_10</span> != String) {\n      *<span class=\"supfact\">local_18</span> = *<span class=\"supfact\">local_10</span>;\n      <span class=\"supfact\">cVar1</span> = FUN_0010defd((int)*<span class=\"supfact\">local_10</span>);\n      if (<span class=\"supfact\">cVar1</span> == String) {\n        while (true) {\n          <span class=\"supfact\">cVar1</span> = FUN_0010defd((int)*<span class=\"supfact\">local_10</span>);\n          if (<span class=\"supfact\">cVar1</span> == String)\n            break;\n          <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number;\n        }\n      } else {\n        <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number;\n      }\n      <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> + Number;\n    }\n    *<span class=\"supfact\">local_18</span> = String;\n    String operator=((String *)<span class=\"supfact\">this</span>, __s);\n    if (__s != (char *)Number) {\n      operator.delete[](__s);\n    }\n  }\n  return;\n}", "code_t": "void __thiscall testing internal FilePath\nNormalize(FilePath *<span class=\"supfact\">this</span>) {\n  bool <span class=\"supfact\">bVar1</span>;\n  char *pcVar2;\n  size_t sVar3;\n  FilePath *<span class=\"supfact\">this</span> - local;\n  char *dest;\n  char *<span class=\"supfact\">dest_ptr</span>;\n  char *<span class=\"supfact\">src</span>;\n  pcVar2 = String c_str(&<span class=\"supfact\">this</span>->pathname_);\n  if (pcVar2 == (char *)Number) {\n    String operator=(&<span class=\"supfact\">this</span>->pathname_, String);\n  } else {\n    <span class=\"supfact\">src</span> = String c_str(&<span class=\"supfact\">this</span>->pathname_);\n    sVar3 = String length(&<span class=\"supfact\">this</span>->pathname_);\n    pcVar2 = (char *)operator.new[](sVar3 + Number);\n    sVar3 = String length(&<span class=\"supfact\">this</span>->pathname_);\n    memset(pcVar2, Number, sVar3 + Number);\n    <span class=\"supfact\">dest_ptr</span> = pcVar2;\n    while (*<span class=\"supfact\">src</span> != String) {\n      *<span class=\"supfact\">dest_ptr</span> = *<span class=\"supfact\">src</span>;\n      <span class=\"supfact\">bVar1</span> = IsPathSeparator(*<span class=\"supfact\">src</span>);\n      if (<span class=\"supfact\">bVar1</span>) {\n        while (true) {\n          <span class=\"supfact\">bVar1</span> = IsPathSeparator(*<span class=\"supfact\">src</span>);\n          if (!<span class=\"supfact\">bVar1</span>)\n            break;\n          <span class=\"supfact\">src</span> = <span class=\"supfact\">src</span> + Number;\n        }\n      } else {\n        <span class=\"supfact\">src</span> = <span class=\"supfact\">src</span> + Number;\n      }\n      <span class=\"supfact\">dest_ptr</span> = <span class=\"supfact\">dest_ptr</span> + Number;\n    }\n    *<span class=\"supfact\">dest_ptr</span> = String;\n    String operator=(&<span class=\"supfact\">this</span>->pathname_, pcVar2);\n    if (pcVar2 != (char *)Number) {\n      operator.delete[](pcVar2);\n    }\n  }\n  return;\n}", "var": [{"name": "this", "type": "FilePath * *", "pred_name": "this", "ref_name": "this", "ref_type": "FilePath * *"}, {"name": "cVar1", "type": "bool", "pred_name": "bVar1", "ref_name": "bVar1", "ref_type": "bool"}, {"name": "local_18", "type": "char * *", "pred_name": "s", "ref_name": "dest_ptr", "ref_type": "char * *"}, {"name": "local_10", "type": "char * *", "pred_name": "f", "ref_name": "src", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "coriolis", "repo_name": "vmxray", "path": "coriolis/vmxray/7d17e510d963c1afe0b57a4043f6df326d5654d57293c4f19424668b7230578e", "path_in_repo": "coriolis/vmxray/original_src/qemu-0.12.4/ppc64-linux-user/op_helper.o", "objdump": "000000000000b580 <helper_efdctsf>:\n    b580:\t55                   \tpush   %rbp\n    b581:\t48 89 e5             \tmov    %rsp,%rbp\n    b584:\t48 83 ec 20          \tsub    $0x20,%rsp\n    b588:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    b58c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    b590:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    b594:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    b598:\t48 89 c7             \tmov    %rax,%rdi\n    b59b:\te8 00 00 00 00       \tcall   b5a0 <helper_efdctsf+0x20>\n    b5a0:\t85 c0                \ttest   %eax,%eax\n    b5a2:\t0f 95 c0             \tsetne  %al\n    b5a5:\t0f b6 c0             \tmovzbl %al,%eax\n    b5a8:\t48 85 c0             \ttest   %rax,%rax\n    b5ab:\t74 07                \tje     b5b4 <helper_efdctsf+0x34>\n    b5ad:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    b5b2:\teb 59                \tjmp    b60d <helper_efdctsf+0x8d>\n    b5b4:\t4c 89 f0             \tmov    %r14,%rax\n    b5b7:\t48 05 5c 82 01 00    \tadd    $0x1825c,%rax\n    b5bd:\t48 89 c6             \tmov    %rax,%rsi\n    b5c0:\t48 bf 00 00 00 00 01 \tmovabs $0x100000000,%rdi\n    b5c7:\t00 00 00 \n    b5ca:\te8 00 00 00 00       \tcall   b5cf <helper_efdctsf+0x4f>\n    b5cf:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    b5d3:\t4c 89 f0             \tmov    %r14,%rax\n    b5d6:\t48 8d 90 5c 82 01 00 \tlea    0x1825c(%rax),%rdx\n    b5dd:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    b5e1:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    b5e5:\t48 89 ce             \tmov    %rcx,%rsi\n    b5e8:\t48 89 c7             \tmov    %rax,%rdi\n    b5eb:\te8 00 00 00 00       \tcall   b5f0 <helper_efdctsf+0x70>\n    b5f0:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    b5f4:\t4c 89 f0             \tmov    %r14,%rax\n    b5f7:\t48 8d 90 5c 82 01 00 \tlea    0x1825c(%rax),%rdx\n    b5fe:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    b602:\t48 89 d6             \tmov    %rdx,%rsi\n    b605:\t48 89 c7             \tmov    %rax,%rdi\n    b608:\te8 00 00 00 00       \tcall   b60d <helper_efdctsf+0x8d>\n    b60d:\tc9                   \tleave  \n    b60e:\tc3                   \tret    ", "code_s": "undefined8 helper_efdctsf(undefined8 <span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  undefined8 <span class=\"supfact\">uVar2</span>;\n  long <span class=\"supfact\">unaff_R14</span>;\n  <span class=\"supfact\">iVar1</span> = float64_is_nan(<span class=\"supfact\">param_1</span>);\n  if (<span class=\"supfact\">iVar1</span> == Number) {\n    <span class=\"supfact\">uVar2</span> =\n        uint64_to_float64(Number, <span class=\"supfact\">unaff_R14</span> + Number);\n    <span class=\"supfact\">uVar2</span> =\n        float64_mul(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">uVar2</span>,\n                    <span class=\"supfact\">unaff_R14</span> + Number);\n    <span class=\"supfact\">uVar2</span> = float64_to_int32(\n        <span class=\"supfact\">uVar2</span>, <span class=\"supfact\">unaff_R14</span> + Number);\n  } else {\n    <span class=\"supfact\">uVar2</span> = Number;\n  }\n  return <span class=\"supfact\">uVar2</span>;\n}", "code_t": "uint32_t helper_efdctsf(uint64_t <span class=\"supfact\">val</span>) {\n  int iVar1;\n  uint32_t uVar2;\n  undefined8 <span class=\"supfact\">uVar3</span>;\n  long <span class=\"supfact\">unaff_R14</span>;\n  uint64_t <span class=\"supfact\">val</span> - local;\n  CPU_DoubleU u;\n  float64 tmp;\n  iVar1 = float64_is_nan(<span class=\"supfact\">val</span>);\n  if (iVar1 == Number) {\n    <span class=\"supfact\">uVar3</span> =\n        uint64_to_float64(Number, <span class=\"supfact\">unaff_R14</span> + Number);\n    <span class=\"supfact\">uVar3</span> =\n        float64_mul(<span class=\"supfact\">val</span>, <span class=\"supfact\">uVar3</span>,\n                    <span class=\"supfact\">unaff_R14</span> + Number);\n    uVar2 = float64_to_int32(<span class=\"supfact\">uVar3</span>,\n                             <span class=\"supfact\">unaff_R14</span> + Number);\n  } else {\n    uVar2 = Number;\n  }\n  return uVar2;\n}", "var": [{"name": "param_1", "type": "uint64_t", "pred_name": "arg", "ref_name": "val", "ref_type": "uint64_t"}, {"name": "iVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "uVar2", "type": "undefined8", "pred_name": "uVar2", "ref_name": "uVar3", "ref_type": "undefined8"}, {"name": "unaff_R14", "type": "long", "pred_name": "unaff_R14", "ref_name": "unaff_R14", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "jlagneau", "repo_name": "micro-ls", "path": "jlagneau/micro-ls/8ba31d3d802412e050592cadba62c86bfc6779fd467fb926b298767b0422fbcf", "path_in_repo": "jlagneau/micro-ls//.obj/print_total.o", "objdump": "0000000000000000 <print_total>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 83 ec 20          \tsub    $0x20,%rsp\n   8:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  10:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  14:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n  1b:\teb 25                \tjmp    42 <print_total+0x42>\n  1d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  21:\t48 8b 00             \tmov    (%rax),%rax\n  24:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n  28:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n  2c:\t89 c2                \tmov    %eax,%edx\n  2e:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  31:\t01 d0                \tadd    %edx,%eax\n  33:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n  36:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  3a:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n  3e:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  42:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n  47:\t75 d4                \tjne    1d <print_total+0x1d>\n  49:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  4e:\te8 00 00 00 00       \tcall   53 <print_total+0x53>\n  53:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  56:\t89 c7                \tmov    %eax,%edi\n  58:\te8 00 00 00 00       \tcall   5d <print_total+0x5d>\n  5d:\tbf 0a 00 00 00       \tmov    $0xa,%edi\n  62:\te8 00 00 00 00       \tcall   67 <print_total+0x67>\n  67:\t90                   \tnop\n  68:\tc9                   \tleave  \n  69:\tc3                   \tret    \n", "code_s": "void print_total(long *<span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">local_14</span>;\n  long *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_14</span> = Number;\n  for (<span class=\"supfact\">local_10</span> = <span class=\"supfact\">param_1</span>;\n       <span class=\"supfact\">local_10</span> != (long *)Number;\n       <span class=\"supfact\">local_10</span> = (long *)<span class=\"supfact\">local_10</span>[Number]) {\n    <span class=\"supfact\">local_14</span> =\n        <span class=\"supfact\">local_14</span> +\n        (int)*(undefined8 *)(*(long *)(*<span class=\"supfact\">local_10</span> + Number) +\n                             Number);\n  }\n  ft_putstr(String);\n  ft_putnbr(<span class=\"supfact\">local_14</span>);\n  ft_putchar(Number);\n  return;\n}", "code_t": "void print_total(t_list *<span class=\"supfact\">files</span>) {\n  t_list *<span class=\"supfact\">files</span> - local;\n  int <span class=\"supfact\">total</span>;\n  t_list *<span class=\"supfact\">i</span>;\n  <span class=\"supfact\">total</span> = Number;\n  for (<span class=\"supfact\">i</span> = <span class=\"supfact\">files</span>;\n       <span class=\"supfact\">i</span> != (t_list *)Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span>->next) {\n    <span class=\"supfact\">total</span> =\n        <span class=\"supfact\">total</span> +\n        (int)*(\n            undefined8 *)(*(long *)((long)<span class=\"supfact\">i</span>->content + Number) +\n                          Number);\n  }\n  ft_putstr(String);\n  ft_putnbr(<span class=\"supfact\">total</span>);\n  ft_putchar(Number);\n  return;\n}", "var": [{"name": "param_1", "type": "t_list * *", "pred_name": "list", "ref_name": "files", "ref_type": "t_list * *"}, {"name": "local_14", "type": "int", "pred_name": "i", "ref_name": "total", "ref_type": "int"}, {"name": "local_10", "type": "t_list * *", "pred_name": "current", "ref_name": "i", "ref_type": "t_list * *"}], "body_in_train": false}, {"code_s": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_004a5128)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_004a5128)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "olafhering", "repo_name": "xen", "path": "olafhering/xen/0600c918ef1a6a2ae2700dc636e54a55523c24beaeea01588d54a2117bf5d7f0", "path_in_repo": "olafhering/xen/xen/arch/x86/mm/p2m-ept.o", "objdump": "0000000000003e13 <ept_p2m_init>:\n    3e13:\t55                   \tpush   %rbp\n    3e14:\t48 89 e5             \tmov    %rsp,%rbp\n    3e17:\t48 83 ec 20          \tsub    $0x20,%rsp\n    3e1b:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    3e1f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3e23:\t48 05 88 02 00 00    \tadd    $0x288,%rax\n    3e29:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    3e2d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3e31:\t48 8d 15 a4 e8 ff ff \tlea    -0x175c(%rip),%rdx        # 26dc <ept_set_entry>\n    3e38:\t48 89 90 98 00 00 00 \tmov    %rdx,0x98(%rax)\n    3e3f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3e43:\t48 8d 15 a5 f2 ff ff \tlea    -0xd5b(%rip),%rdx        # 30ef <ept_get_entry>\n    3e4a:\t48 89 90 a0 00 00 00 \tmov    %rdx,0xa0(%rax)\n    3e51:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3e55:\t48 8d 15 42 e0 ff ff \tlea    -0x1fbe(%rip),%rdx        # 1e9e <resolve_misconfig>\n    3e5c:\t48 89 90 a8 00 00 00 \tmov    %rdx,0xa8(%rax)\n    3e63:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3e67:\t48 8d 15 46 f8 ff ff \tlea    -0x7ba(%rip),%rdx        # 36b4 <ept_change_entry_type_global>\n    3e6e:\t48 89 90 c8 00 00 00 \tmov    %rdx,0xc8(%rax)\n    3e75:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3e79:\t48 8d 15 b1 f8 ff ff \tlea    -0x74f(%rip),%rdx        # 3731 <ept_change_entry_type_range>\n    3e80:\t48 89 90 d0 00 00 00 \tmov    %rdx,0xd0(%rax)\n    3e87:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3e8b:\t48 8d 15 42 fa ff ff \tlea    -0x5be(%rip),%rdx        # 38d4 <ept_memory_type_changed>\n    3e92:\t48 89 90 d8 00 00 00 \tmov    %rdx,0xd8(%rax)\n    3e99:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3e9d:\t48 c7 80 e8 00 00 00 \tmovq   $0x0,0xe8(%rax)\n    3ea4:\t00 00 00 00 \n    3ea8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3eac:\t48 8d 15 6e fc ff ff \tlea    -0x392(%rip),%rdx        # 3b21 <ept_tlb_flush>\n    3eb3:\t48 89 90 f0 00 00 00 \tmov    %rdx,0xf0(%rax)\n    3eba:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    3ebe:\t0f b6 10             \tmovzbl (%rax),%edx\n    3ec1:\t83 e2 f8             \tand    $0xfffffff8,%edx\n    3ec4:\t83 ca 06             \tor     $0x6,%edx\n    3ec7:\t88 10                \tmov    %dl,(%rax)\n    3ec9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    3ecd:\t0f b6 10             \tmovzbl (%rax),%edx\n    3ed0:\t83 e2 c7             \tand    $0xffffffc7,%edx\n    3ed3:\t83 ca 18             \tor     $0x18,%edx\n    3ed6:\t88 10                \tmov    %dl,(%rax)\n    3ed8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3edf <ept_p2m_init+0xcc>\n    3edf:\t8b 00                \tmov    (%rax),%eax\n    3ee1:\t25 00 00 02 00       \tand    $0x20000,%eax\n    3ee6:\t85 c0                \ttest   %eax,%eax\n    3ee8:\t74 36                \tje     3f20 <ept_p2m_init+0x10d>\n    3eea:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3eee:\t48 8d 15 4e fe ff ff \tlea    -0x1b2(%rip),%rdx        # 3d43 <ept_enable_hardware_log_dirty>\n    3ef5:\t48 89 90 b0 00 00 00 \tmov    %rdx,0xb0(%rax)\n    3efc:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3f00:\t48 8d 15 82 fe ff ff \tlea    -0x17e(%rip),%rdx        # 3d89 <ept_disable_hardware_log_dirty>\n    3f07:\t48 89 90 b8 00 00 00 \tmov    %rdx,0xb8(%rax)\n    3f0e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3f12:\t48 8d 15 b6 fe ff ff \tlea    -0x14a(%rip),%rdx        # 3dcf <ept_flush_pml_buffers>\n    3f19:\t48 89 90 c0 00 00 00 \tmov    %rdx,0xc0(%rax)\n    3f20:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    3f24:\t48 83 c0 08          \tadd    $0x8,%rax\n    3f28:\t48 89 c7             \tmov    %rax,%rdi\n    3f2b:\te8 93 c1 ff ff       \tcall   c3 <zalloc_cpumask_var>\n    3f30:\t83 f0 01             \txor    $0x1,%eax\n    3f33:\t84 c0                \ttest   %al,%al\n    3f35:\t74 07                \tje     3f3e <ept_p2m_init+0x12b>\n    3f37:\tb8 f4 ff ff ff       \tmov    $0xfffffff4,%eax\n    3f3c:\teb 15                \tjmp    3f53 <ept_p2m_init+0x140>\n    3f3e:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    3f42:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    3f46:\t48 89 c7             \tmov    %rax,%rdi\n    3f49:\te8 55 c1 ff ff       \tcall   a3 <cpumask_setall>\n    3f4e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3f53:\tc9                   \tleave  \n    3f54:\tc3                   \tret    ", "code_s": "undefined8 ept_p2m_init(long <span class=\"supfact\">param_1</span>) {\n  char <span class=\"supfact\">cVar1</span>;\n  byte *pbVar2;\n  undefined8 uVar3;\n  pbVar2 = (byte *)(<span class=\"supfact\">param_1</span> + Number);\n  *(code **)(<span class=\"supfact\">param_1</span> + Number) = FUN_001026dc;\n  *(code **)(<span class=\"supfact\">param_1</span> + Number) = FUN_001030ef;\n  *(code **)(<span class=\"supfact\">param_1</span> + Number) = FUN_00101e9e;\n  *(code **)(<span class=\"supfact\">param_1</span> + Number) = FUN_001036b4;\n  *(code **)(<span class=\"supfact\">param_1</span> + Number) = FUN_00103731;\n  *(code **)(<span class=\"supfact\">param_1</span> + Number) = FUN_001038d4;\n  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  *(code **)(<span class=\"supfact\">param_1</span> + Number) = FUN_00103b21;\n  *pbVar2 = *pbVar2 & Number | Number;\n  *pbVar2 = *pbVar2 & Number | Number;\n  if ((_vmx_secondary_exec_control & Number) != Number) {\n    *(code **)(<span class=\"supfact\">param_1</span> + Number) = FUN_00103d43;\n    *(code **)(<span class=\"supfact\">param_1</span> + Number) = FUN_00103d89;\n    *(code **)(<span class=\"supfact\">param_1</span> + Number) = FUN_00103dcf;\n  }\n  <span class=\"supfact\">cVar1</span> = FUN_001000c3(<span class=\"supfact\">param_1</span> + Number);\n  if (<span class=\"supfact\">cVar1</span> == String) {\n    FUN_001000a3(*(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n    uVar3 = Number;\n  } else {\n    uVar3 = Number;\n  }\n  return uVar3;\n}", "code_t": "int ept_p2m_init(p2m_domain *<span class=\"supfact\">p2m</span>) {\n  _Bool <span class=\"supfact\">_Var1</span>;\n  int iVar2;\n  anon_union_16_1_ba1d4489_for_p2m_domain_34 *paVar3;\n  p2m_domain *<span class=\"supfact\">p2m</span> - local;\n  ept_data *ept;\n  paVar3 = &<span class=\"supfact\">p2m</span>->field_34;\n  <span class=\"supfact\">p2m</span>->set_entry = ept_set_entry;\n  <span class=\"supfact\">p2m</span>->get_entry = ept_get_entry;\n  <span class=\"supfact\">p2m</span>->recalc = resolve_misconfig;\n  <span class=\"supfact\">p2m</span>->change_entry_type_global = ept_change_entry_type_global;\n  <span class=\"supfact\">p2m</span>->change_entry_type_range = ept_change_entry_type_range;\n  <span class=\"supfact\">p2m</span>->memory_type_changed = ept_memory_type_changed;\n  <span class=\"supfact\">p2m</span>->audit_p2m = (_func_long_p2m_domain_ptr *)Number;\n  <span class=\"supfact\">p2m</span>->tlb_flush = ept_tlb_flush;\n  *(byte *)paVar3 = *(byte *)paVar3 & Number | Number;\n  *(byte *)paVar3 = *(byte *)paVar3 & Number | Number;\n  if ((_vmx_secondary_exec_control & Number) != Number) {\n    <span class=\"supfact\">p2m</span>->enable_hardware_log_dirty =\n        ept_enable_hardware_log_dirty;\n    <span class=\"supfact\">p2m</span>->disable_hardware_log_dirty =\n        ept_disable_hardware_log_dirty;\n    <span class=\"supfact\">p2m</span>->flush_hardware_cached_dirty = ept_flush_pml_buffers;\n  }\n  <span class=\"supfact\">_Var1</span> =\n      zalloc_cpumask_var(&(<span class=\"supfact\">p2m</span>->field_34).ept.invalidate);\n  if (<span class=\"supfact\">_Var1</span>) {\n    cpumask_setall((<span class=\"supfact\">p2m</span>->field_34).ept.invalidate);\n    iVar2 = Number;\n  } else {\n    iVar2 = -Number;\n  }\n  return iVar2;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "p2m", "ref_type": "p2m_domain * *"}, {"name": "cVar1", "type": "disappear", "pred_name": "", "ref_name": "_Var1", "ref_type": "_Bool"}], "body_in_train": false}, {"repo_owner": "0x90", "repo_name": "openwips-ng", "path": "0x90/openwips-ng/f32f82915263282b0316f4df7ae62aeb41f6035d4ee5cdb10595f081928ec945", "path_in_repo": "0x90/openwips-ng/sensor/Release/common/pcap.o", "objdump": "0000000000002150 <get_packet_file_header>:\n    2150:\t55                   \tpush   %rbp\n    2151:\t48 89 e5             \tmov    %rsp,%rbp\n    2154:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    2158:\t89 75 d4             \tmov    %esi,-0x2c(%rbp)\n    215b:\tc7 45 e0 d4 c3 b2 a1 \tmovl   $0xa1b2c3d4,-0x20(%rbp)\n    2162:\t66 c7 45 e4 02 00    \tmovw   $0x2,-0x1c(%rbp)\n    2168:\t66 c7 45 e6 04 00    \tmovw   $0x4,-0x1a(%rbp)\n    216e:\tc7 45 e8 00 00 00 00 \tmovl   $0x0,-0x18(%rbp)\n    2175:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n    217c:\tc7 45 f0 ff ff 00 00 \tmovl   $0xffff,-0x10(%rbp)\n    2183:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    2186:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    2189:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n    218d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    2191:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    2195:\t48 89 01             \tmov    %rax,(%rcx)\n    2198:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n    219c:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    21a0:\t48 89 41 10          \tmov    %rax,0x10(%rcx)\n    21a4:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    21a8:\t5d                   \tpop    %rbp\n    21a9:\tc3                   \tret    ", "code_s": "undefined8 *get_packet_file_header(undefined8 *<span class=\"supfact\">param_1</span>,\n                                   undefined4 <span class=\"supfact\">param_2</span>) {\n  *<span class=\"supfact\">param_1</span> = Number;\n  <span class=\"supfact\">param_1</span>[Number] = Number;\n  <span class=\"supfact\">param_1</span>[Number] = CONCAT44(<span class=\"supfact\">param_2</span>, Number);\n  return <span class=\"supfact\">param_1</span>;\n}", "code_t": "pcap_file_header *\nget_packet_file_header(pcap_file_header *<span class=\"supfact\">__return_storage_ptr__</span>,\n                       bpf_u_int32 <span class=\"supfact\">linktype</span>) {\n  bpf_u_int32 <span class=\"supfact\">linktype</span> - local;\n  pcap_file_header pfh;\n  <span class=\"supfact\">__return_storage_ptr__</span>->magic = Number;\n  <span class=\"supfact\">__return_storage_ptr__</span>->version_major = Number;\n  <span class=\"supfact\">__return_storage_ptr__</span>->version_minor = Number;\n  <span class=\"supfact\">__return_storage_ptr__</span>->thiszone = Number;\n  <span class=\"supfact\">__return_storage_ptr__</span>->sigfigs = Number;\n  <span class=\"supfact\">__return_storage_ptr__</span>->snaplen =\n      (int)CONCAT44(<span class=\"supfact\">linktype</span>, Number);\n  <span class=\"supfact\">__return_storage_ptr__</span>-><span class=\"supfact\">linktype</span> =\n      (int)(CONCAT44(<span class=\"supfact\">linktype</span>, Number) >> Number);\n  return <span class=\"supfact\">__return_storage_ptr__</span>;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__return_storage_ptr__", "ref_name": "__return_storage_ptr__", "ref_type": "pcap_file_header * *"}, {"name": "param_2", "type": "int", "pred_name": "fd", "ref_name": "linktype", "ref_type": "bpf_u_int32"}], "body_in_train": false}, {"repo_owner": "mhjung93", "repo_name": "ReluplexTest", "path": "mhjung93/ReluplexTest/ec5ebe90e4aad0b557a1354956ebadce765927784db01a0d393f6176125882b1", "path_in_repo": "mhjung93/ReluplexTest/Reluplex/ReluplexCav2017-master/glpk-4.60/src/bflib/luf.o", "objdump": "00000000000020b7 <_glp_luf_vt_solve>:\n    20b7:\t55                   \tpush   %rbp\n    20b8:\t48 89 e5             \tmov    %rsp,%rbp\n    20bb:\t48 83 ec 10          \tsub    $0x10,%rsp\n    20bf:\t48 89 7d 88          \tmov    %rdi,-0x78(%rbp)\n    20c3:\t48 89 75 80          \tmov    %rsi,-0x80(%rbp)\n    20c7:\t48 89 95 78 ff ff ff \tmov    %rdx,-0x88(%rbp)\n    20ce:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    20d2:\t8b 00                \tmov    (%rax),%eax\n    20d4:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    20d7:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    20db:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    20df:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    20e3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    20e7:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n    20eb:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    20ef:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    20f3:\t48 8b 40 50          \tmov    0x50(%rax),%rax\n    20f7:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    20fb:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    20ff:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    2103:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    2107:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    210b:\t8b 40 18             \tmov    0x18(%rax),%eax\n    210e:\t89 45 cc             \tmov    %eax,-0x34(%rbp)\n    2111:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2115:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2119:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    211c:\t48 63 d2             \tmovslq %edx,%rdx\n    211f:\t48 c1 e2 02          \tshl    $0x2,%rdx\n    2123:\t48 83 ea 04          \tsub    $0x4,%rdx\n    2127:\t48 01 d0             \tadd    %rdx,%rax\n    212a:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    212e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2132:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    2136:\t8b 55 cc             \tmov    -0x34(%rbp),%edx\n    2139:\t48 63 d2             \tmovslq %edx,%rdx\n    213c:\t48 c1 e2 02          \tshl    $0x2,%rdx\n    2140:\t48 83 ea 04          \tsub    $0x4,%rdx\n    2144:\t48 01 d0             \tadd    %rdx,%rax\n    2147:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n    214b:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    214f:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n    2153:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n    2157:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    215b:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n    215f:\t48 89 45 a8          \tmov    %rax,-0x58(%rbp)\n    2163:\tc7 45 fc 01 00 00 00 \tmovl   $0x1,-0x4(%rbp)\n    216a:\te9 68 01 00 00       \tjmp    22d7 <_glp_luf_vt_solve+0x220>\n    216f:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    2172:\t48 98                \tcltq   \n    2174:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    217b:\t00 \n    217c:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    2180:\t48 01 d0             \tadd    %rdx,%rax\n    2183:\t8b 00                \tmov    (%rax),%eax\n    2185:\t89 45 a4             \tmov    %eax,-0x5c(%rbp)\n    2188:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    218b:\t48 98                \tcltq   \n    218d:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2194:\t00 \n    2195:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2199:\t48 01 d0             \tadd    %rdx,%rax\n    219c:\t8b 00                \tmov    (%rax),%eax\n    219e:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n    21a1:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n    21a4:\t48 98                \tcltq   \n    21a6:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    21ad:\t00 \n    21ae:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n    21b2:\t48 01 d0             \tadd    %rdx,%rax\n    21b5:\tf2 0f 10 00          \tmovsd  (%rax),%xmm0\n    21b9:\t8b 45 a4             \tmov    -0x5c(%rbp),%eax\n    21bc:\t48 98                \tcltq   \n    21be:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    21c5:\t00 \n    21c6:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    21ca:\t48 01 d0             \tadd    %rdx,%rax\n    21cd:\tf2 0f 10 08          \tmovsd  (%rax),%xmm1\n    21d1:\t8b 45 a4             \tmov    -0x5c(%rbp),%eax\n    21d4:\t48 98                \tcltq   \n    21d6:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    21dd:\t00 \n    21de:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    21e5:\t48 01 d0             \tadd    %rdx,%rax\n    21e8:\tf2 0f 5e c1          \tdivsd  %xmm1,%xmm0\n    21ec:\tf2 0f 11 00          \tmovsd  %xmm0,(%rax)\n    21f0:\tf2 0f 10 00          \tmovsd  (%rax),%xmm0\n    21f4:\tf2 0f 11 45 98       \tmovsd  %xmm0,-0x68(%rbp)\n    21f9:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n    21fd:\t66 0f 2e 45 98       \tucomisd -0x68(%rbp),%xmm0\n    2202:\t7a 0f                \tjp     2213 <_glp_luf_vt_solve+0x15c>\n    2204:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n    2208:\t66 0f 2e 45 98       \tucomisd -0x68(%rbp),%xmm0\n    220d:\t0f 84 c0 00 00 00    \tje     22d3 <_glp_luf_vt_solve+0x21c>\n    2213:\t8b 45 a4             \tmov    -0x5c(%rbp),%eax\n    2216:\t48 98                \tcltq   \n    2218:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    221f:\t00 \n    2220:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2224:\t48 01 d0             \tadd    %rdx,%rax\n    2227:\t8b 00                \tmov    (%rax),%eax\n    2229:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n    222c:\t8b 45 a4             \tmov    -0x5c(%rbp),%eax\n    222f:\t48 98                \tcltq   \n    2231:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2238:\t00 \n    2239:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    223d:\t48 01 d0             \tadd    %rdx,%rax\n    2240:\t8b 10                \tmov    (%rax),%edx\n    2242:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2245:\t01 d0                \tadd    %edx,%eax\n    2247:\t89 45 94             \tmov    %eax,-0x6c(%rbp)\n    224a:\teb 7b                \tjmp    22c7 <_glp_luf_vt_solve+0x210>\n    224c:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    224f:\t48 98                \tcltq   \n    2251:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2258:\t00 \n    2259:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    225d:\t48 01 d0             \tadd    %rdx,%rax\n    2260:\t8b 00                \tmov    (%rax),%eax\n    2262:\t48 98                \tcltq   \n    2264:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    226b:\t00 \n    226c:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n    2270:\t48 01 d0             \tadd    %rdx,%rax\n    2273:\tf2 0f 10 00          \tmovsd  (%rax),%xmm0\n    2277:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    227a:\t48 98                \tcltq   \n    227c:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    2283:\t00 \n    2284:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    2288:\t48 01 d0             \tadd    %rdx,%rax\n    228b:\tf2 0f 10 08          \tmovsd  (%rax),%xmm1\n    228f:\tf2 0f 59 4d 98       \tmulsd  -0x68(%rbp),%xmm1\n    2294:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2297:\t48 98                \tcltq   \n    2299:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    22a0:\t00 \n    22a1:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    22a5:\t48 01 d0             \tadd    %rdx,%rax\n    22a8:\t8b 00                \tmov    (%rax),%eax\n    22aa:\t48 98                \tcltq   \n    22ac:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    22b3:\t00 \n    22b4:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n    22b8:\t48 01 d0             \tadd    %rdx,%rax\n    22bb:\tf2 0f 5c c1          \tsubsd  %xmm1,%xmm0\n    22bf:\tf2 0f 11 00          \tmovsd  %xmm0,(%rax)\n    22c3:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n    22c7:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    22ca:\t3b 45 94             \tcmp    -0x6c(%rbp),%eax\n    22cd:\t0f 8c 79 ff ff ff    \tjl     224c <_glp_luf_vt_solve+0x195>\n    22d3:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    22d7:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    22da:\t3b 45 f4             \tcmp    -0xc(%rbp),%eax\n    22dd:\t0f 8e 8c fe ff ff    \tjle    216f <_glp_luf_vt_solve+0xb8>\n    22e3:\t90                   \tnop\n    22e4:\tc9                   \tleave  \n    22e5:\tc3                   \tret    ", "code_s": "void _glp_luf_vt_solve(int *<span class=\"supfact\">param_1</span>,\n                       long <span class=\"supfact\">param_2</span>,\n                       long <span class=\"supfact\">param_3</span>) {\n  double dVar1;\n  int iVar2;\n  int iVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  long lVar7;\n  long lVar8;\n  long lVar9;\n  long lVar10;\n  int <span class=\"supfact\">iVar11</span>;\n  double *<span class=\"supfact\">pdVar12</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  iVar2 = *<span class=\"supfact\">param_1</span>;\n  lVar4 = *(long *)(<span class=\"supfact\">param_1</span> + Number);\n  lVar5 = *(long *)(lVar4 + Number);\n  lVar6 = *(long *)(lVar4 + Number);\n  lVar7 = *(long *)(<span class=\"supfact\">param_1</span> + Number);\n  iVar3 = <span class=\"supfact\">param_1</span>[Number];\n  lVar8 = *(long *)(lVar4 + Number);\n  lVar4 = *(long *)(lVar4 + Number);\n  lVar9 = *(long *)(<span class=\"supfact\">param_1</span> + Number);\n  lVar10 = *(long *)(<span class=\"supfact\">param_1</span> + Number);\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> <= iVar2;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    <span class=\"supfact\">iVar11</span> =\n        *(int *)(lVar9 + (long)<span class=\"supfact\">local_c</span> * Number);\n    <span class=\"supfact\">pdVar12</span> = (double *)(<span class=\"supfact\">param_3</span> +\n                                         (long)<span class=\"supfact\">iVar11</span> * Number);\n    *<span class=\"supfact\">pdVar12</span> =\n        *(double *)(<span class=\"supfact\">param_2</span> +\n                    (long)*(int *)(lVar10 +\n                                   (long)<span class=\"supfact\">local_c</span> * Number) *\n                        Number)", "code_t": "void _glp_luf_vt_solve(LUF *<span class=\"supfact\">luf</span>, double *<span class=\"supfact\">b</span>,\n                       double *<span class=\"supfact\">x</span>) {\n  double dVar1;\n  int iVar2;\n  int iVar3;\n  SVA *pSVar4;\n  int *piVar5;\n  double *pdVar6;\n  double *pdVar7;\n  int *piVar8;\n  int *piVar9;\n  int *piVar10;\n  int *piVar11;\n  int <span class=\"supfact\">iVar12</span>;\n  double *<span class=\"supfact\">x</span> - local;\n  double *<span class=\"supfact\">b</span> - local;\n  LUF *<span class=\"supfact\">luf</span> - local;\n  int end;\n  double x_i;\n  int j;\n  int i;\n  int *qq_ind;\n  int *pp_inv;\n  int *vr_len;\n  int *vr_ptr;\n  int vr_ref;\n  double *vr_piv;\n  double *sv_val;\n  int *sv_ind;\n  SVA *sva;\n  int n;\n  int <span class=\"supfact\">ptr</span>;\n  int <span class=\"supfact\">k</span>;\n  iVar2 = <span class=\"supfact\">luf</span>->n;\n  pSVar4 = <span class=\"supfact\">luf</span>->sva;\n  piVar5 = pSVar4->ind;\n  pdVar6 = pSVar4->val;\n  pdVar7 = <span class=\"supfact\">luf</span>->vr_piv;\n  iVar3 = <span class=\"supfact\">luf</span>->vr_ref;\n  piVar8 = pSVar4-><span class=\"supfact\">ptr</span>;\n  piVar9 = pSVar4->len;\n  piVar10 = <span class=\"supfact\">luf</span>->pp_inv;\n  piVar11 = <span class=\"supfact\">luf</span>->qq_ind;\n  for (<span class=\"supfact\">k</span> = Number; <span class=\"supfact\">k</span> <= iVar2;\n       <span class=\"supfact\">k</span> = <span class=\"supfact\">k</span> + Number) {\n    <span class=\"supfact\">iVar12</span> = piVar10[<span class=\"supfact\">k</span>];\n    <span class=\"supfact\">x</span>[<span class=\"supfact\">iVar12</span>] =\n        <span class=\"supfact\">b</span>[piVar11[<span class=\"supfact\">k</span>]] /\n        pdVar7[<span class=\"supfact\">iVar12</span>];\n    dVar1 = <span class=\"supfact\">x</span>[<span class=\"supfact\">iVar12</span>];\n    if (dVar1 != Number) {\n      <span class=\"supfact\">ptr</span> =\n          piVar8[(long)iVar3 + (long)<span class=\"supfact\">iVar12</span> + -Number];\n      <span class=\"supfact\">iVar12</span> =\n          <span class=\"supfact\">ptr</span> +\n          piVar9[(long)iVar3 + (long)<span class=\"supfact\">iVar12</span> + -Number];\n      for (; <span class=\"supfact\">ptr</span> < <span class=\"supfact\">iVar12</span>;\n           <span class=\"supfact\">ptr</span> = <span class=\"supfact\">ptr</span> + Number) {\n        <span class=\"supfact\">b</span>[piVar5[<span class=\"supfact\">ptr</span>]] =\n            <span class=\"supfact\">b</span>[piVar5[<span class=\"supfact\">ptr</span>]] -\n            pdVar6[<span class=\"supfact\">ptr</span>] * dVar1;\n      }\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "CLASS * *", "pred_name": "class", "ref_name": "luf", "ref_type": "LUF * *"}, {"name": "param_2", "type": "GENERAL_DATA * *", "pred_name": "general_data", "ref_name": "b", "ref_type": "double * *"}, {"name": "param_3", "type": "ANALYSIS * *", "pred_name": "analysis", "ref_name": "x", "ref_type": "double * *"}, {"name": "iVar11", "type": "int", "pred_name": "iVar11", "ref_name": "iVar12", "ref_type": "int"}, {"name": "pdVar12", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_10", "type": "int", "pred_name": "ip", "ref_name": "ptr", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "ipart", "ref_name": "k", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "abgoyal", "repo_name": "TCL_E710", "path": "abgoyal/TCL_E710/9eebb28a2e1bda8be8147ec6e8aa00fb25b17d99f428ef4e522d0f1a9b4f8cc2", "path_in_repo": "abgoyal/TCL_E710/external/e2fsprogs/lib/ext2fs/bitmaps.o", "objdump": "0000000000000119 <ext2fs_mark_block_bitmap>:\n 119:\t55                   \tpush   %rbp\n 11a:\t48 89 e5             \tmov    %rsp,%rbp\n 11d:\t48 83 ec 10          \tsub    $0x10,%rsp\n 121:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n 125:\t89 75 f4             \tmov    %esi,-0xc(%rbp)\n 128:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n 12b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 12f:\t89 d6                \tmov    %edx,%esi\n 131:\t48 89 c7             \tmov    %rax,%rdi\n 134:\te8 00 00 00 00       \tcall   139 <ext2fs_mark_block_bitmap+0x20>\n 139:\tc9                   \tleave  \n 13a:\tc3                   \tret    ", "code_s": "void ext2fs_mark_block_bitmap(undefined8 <span class=\"supfact\">param_1</span>,\n                              undefined4 <span class=\"supfact\">param_2</span>) {\n  ext2fs_mark_generic_bitmap(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n  return;\n}", "code_t": "int ext2fs_mark_block_bitmap(ext2fs_block_bitmap <span class=\"supfact\">bitmap</span>,\n                             blk_t <span class=\"supfact\">block</span>) {\n  int iVar1;\n  blk_t <span class=\"supfact\">block</span> - local;\n  ext2fs_block_bitmap <span class=\"supfact\">bitmap</span> - local;\n  iVar1 =\n      ext2fs_mark_generic_bitmap(<span class=\"supfact\">bitmap</span>, <span class=\"supfact\">block</span>);\n  return iVar1;\n}", "var": [{"name": "param_1", "type": "ext2fs_block_bitmap", "pred_name": "bitmap", "ref_name": "bitmap", "ref_type": "ext2fs_block_bitmap"}, {"name": "param_2", "type": "blk_t", "pred_name": "block", "ref_name": "block", "ref_type": "blk_t"}], "body_in_train": true}, {"repo_owner": "bhaveshgoyal", "repo_name": "IPssrr", "path": "bhaveshgoyal/IPssrr/2a3f7c0bbd64c1890c9497d7dda3beeb2e763ef363021fd0cc0d101b3bf30df5", "path_in_repo": "bhaveshgoyal/IPssrr/libs/unpv13e/unixdomain/mycat", "objdump": "", "code_s": "long sysconf(int __name) {\n  long <span class=\"supfact\">lVar1</span>;\n  <span class=\"supfact\">lVar1</span> = (*(code *)PTR_sysconf_004071c8)();\n  return <span class=\"supfact\">lVar1</span>;\n}", "code_t": "long sysconf(int __name) {\n  long <span class=\"supfact\">lVar1</span>;\n  <span class=\"supfact\">lVar1</span> = (*(code *)PTR_sysconf_004071c8)();\n  return <span class=\"supfact\">lVar1</span>;\n}", "var": [{"name": "lVar1", "type": "long", "pred_name": "lVar1", "ref_name": "lVar1", "ref_type": "long"}], "body_in_train": false}]