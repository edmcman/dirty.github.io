[{"repo_owner": "wnagchenghku", "repo_name": "xen", "path": "wnagchenghku/xen/0c5d6ff4ec834b554d12396a98b305f58ff7c7ebe2bb66001a88078f054617f9", "path_in_repo": "wnagchenghku/xen/xen-4.6.5-frontend/xen/common/timer.o", "objdump": "0000000000000f41 <migrate_timer>:\n     f41:\t48 81 ec a8 00 00 00 \tsub    $0xa8,%rsp\n     f48:\t48 89 7c 24 08       \tmov    %rdi,0x8(%rsp)\n     f4d:\t89 74 24 04          \tmov    %esi,0x4(%rsp)\n     f51:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # f58 <migrate_timer+0x17>\n     f58:\t48 89 84 24 98 00 00 \tmov    %rax,0x98(%rsp)\n     f5f:\t00 \n     f60:\te8 fa f2 ff ff       \tcall   25f <get_cpu_info>\n     f65:\t48 8b 90 d8 00 00 00 \tmov    0xd8(%rax),%rdx\n     f6c:\t48 8b 84 24 98 00 00 \tmov    0x98(%rsp),%rax\n     f73:\t00 \n     f74:\t48 01 d0             \tadd    %rdx,%rax\n     f77:\t8b 10                \tmov    (%rax),%edx\n     f79:\t83 c2 01             \tadd    $0x1,%edx\n     f7c:\t89 10                \tmov    %edx,(%rax)\n     f7e:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     f83:\t48 83 c0 28          \tadd    $0x28,%rax\n     f87:\t48 89 c7             \tmov    %rax,%rdi\n     f8a:\te8 14 f4 ff ff       \tcall   3a3 <read_u16_atomic>\n     f8f:\t0f b7 c0             \tmovzwl %ax,%eax\n     f92:\t48 89 84 24 88 00 00 \tmov    %rax,0x88(%rsp)\n     f99:\t00 \n     f9a:\t90                   \tnop\n     f9b:\t48 8b 84 24 88 00 00 \tmov    0x88(%rsp),%rax\n     fa2:\t00 \n     fa3:\t0f b7 c0             \tmovzwl %ax,%eax\n     fa6:\t89 84 24 84 00 00 00 \tmov    %eax,0x84(%rsp)\n     fad:\t8b 84 24 84 00 00 00 \tmov    0x84(%rsp),%eax\n     fb4:\t3b 44 24 04          \tcmp    0x4(%rsp),%eax\n     fb8:\t74 0d                \tje     fc7 <migrate_timer+0x86>\n     fba:\t81 bc 24 84 00 00 00 \tcmpl   $0xffff,0x84(%rsp)\n     fc1:\tff ff 00 00 \n     fc5:\t75 2c                \tjne    ff3 <migrate_timer+0xb2>\n     fc7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # fce <migrate_timer+0x8d>\n     fce:\t48 89 44 24 18       \tmov    %rax,0x18(%rsp)\n     fd3:\te8 87 f2 ff ff       \tcall   25f <get_cpu_info>\n     fd8:\t48 8b 90 d8 00 00 00 \tmov    0xd8(%rax),%rdx\n     fdf:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     fe4:\t48 01 d0             \tadd    %rdx,%rax\n     fe7:\t8b 10                \tmov    (%rax),%edx\n     fe9:\t83 ea 01             \tsub    $0x1,%edx\n     fec:\t89 10                \tmov    %edx,(%rax)\n     fee:\te9 9e 02 00 00       \tjmp    1291 <migrate_timer+0x350>\n     ff3:\t8b 84 24 84 00 00 00 \tmov    0x84(%rsp),%eax\n     ffa:\t3b 44 24 04          \tcmp    0x4(%rsp),%eax\n     ffe:\t73 63                \tjae    1063 <migrate_timer+0x122>\n    1000:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 1007 <migrate_timer+0xc6>\n    1007:\t48 89 44 24 68       \tmov    %rax,0x68(%rsp)\n    100c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1013 <migrate_timer+0xd2>\n    1013:\t8b 94 24 84 00 00 00 \tmov    0x84(%rsp),%edx\n    101a:\t48 8b 14 d0          \tmov    (%rax,%rdx,8),%rdx\n    101e:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    1023:\t48 01 d0             \tadd    %rdx,%rax\n    1026:\t48 89 c7             \tmov    %rax,%rdi\n    1029:\te8 00 00 00 00       \tcall   102e <migrate_timer+0xed>\n    102e:\t48 89 84 24 90 00 00 \tmov    %rax,0x90(%rsp)\n    1035:\t00 \n    1036:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 103d <migrate_timer+0xfc>\n    103d:\t48 89 44 24 60       \tmov    %rax,0x60(%rsp)\n    1042:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1049 <migrate_timer+0x108>\n    1049:\t8b 54 24 04          \tmov    0x4(%rsp),%edx\n    104d:\t48 8b 14 d0          \tmov    (%rax,%rdx,8),%rdx\n    1051:\t48 8b 44 24 60       \tmov    0x60(%rsp),%rax\n    1056:\t48 01 d0             \tadd    %rdx,%rax\n    1059:\t48 89 c7             \tmov    %rax,%rdi\n    105c:\te8 00 00 00 00       \tcall   1061 <migrate_timer+0x120>\n    1061:\teb 61                \tjmp    10c4 <migrate_timer+0x183>\n    1063:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 106a <migrate_timer+0x129>\n    106a:\t48 89 44 24 78       \tmov    %rax,0x78(%rsp)\n    106f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1076 <migrate_timer+0x135>\n    1076:\t8b 54 24 04          \tmov    0x4(%rsp),%edx\n    107a:\t48 8b 14 d0          \tmov    (%rax,%rdx,8),%rdx\n    107e:\t48 8b 44 24 78       \tmov    0x78(%rsp),%rax\n    1083:\t48 01 d0             \tadd    %rdx,%rax\n    1086:\t48 89 c7             \tmov    %rax,%rdi\n    1089:\te8 00 00 00 00       \tcall   108e <migrate_timer+0x14d>\n    108e:\t48 89 84 24 90 00 00 \tmov    %rax,0x90(%rsp)\n    1095:\t00 \n    1096:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 109d <migrate_timer+0x15c>\n    109d:\t48 89 44 24 70       \tmov    %rax,0x70(%rsp)\n    10a2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 10a9 <migrate_timer+0x168>\n    10a9:\t8b 94 24 84 00 00 00 \tmov    0x84(%rsp),%edx\n    10b0:\t48 8b 14 d0          \tmov    (%rax,%rdx,8),%rdx\n    10b4:\t48 8b 44 24 70       \tmov    0x70(%rsp),%rax\n    10b9:\t48 01 d0             \tadd    %rdx,%rax\n    10bc:\t48 89 c7             \tmov    %rax,%rdi\n    10bf:\te8 00 00 00 00       \tcall   10c4 <migrate_timer+0x183>\n    10c4:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    10c9:\t0f b7 40 28          \tmovzwl 0x28(%rax),%eax\n    10cd:\t0f b7 c0             \tmovzwl %ax,%eax\n    10d0:\t39 84 24 84 00 00 00 \tcmp    %eax,0x84(%rsp)\n    10d7:\t0f 94 c0             \tsete   %al\n    10da:\t0f b6 c0             \tmovzbl %al,%eax\n    10dd:\t48 85 c0             \ttest   %rax,%rax\n    10e0:\t75 6c                \tjne    114e <migrate_timer+0x20d>\n    10e2:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 10e9 <migrate_timer+0x1a8>\n    10e9:\t48 89 44 24 58       \tmov    %rax,0x58(%rsp)\n    10ee:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 10f5 <migrate_timer+0x1b4>\n    10f5:\t8b 94 24 84 00 00 00 \tmov    0x84(%rsp),%edx\n    10fc:\t48 8b 14 d0          \tmov    (%rax,%rdx,8),%rdx\n    1100:\t48 8b 44 24 58       \tmov    0x58(%rsp),%rax\n    1105:\t48 01 d0             \tadd    %rdx,%rax\n    1108:\t48 89 c7             \tmov    %rax,%rdi\n    110b:\te8 00 00 00 00       \tcall   1110 <migrate_timer+0x1cf>\n    1110:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 1117 <migrate_timer+0x1d6>\n    1117:\t48 89 44 24 50       \tmov    %rax,0x50(%rsp)\n    111c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1123 <migrate_timer+0x1e2>\n    1123:\t8b 54 24 04          \tmov    0x4(%rsp),%edx\n    1127:\t48 8b 14 d0          \tmov    (%rax,%rdx,8),%rdx\n    112b:\t48 8b 44 24 50       \tmov    0x50(%rsp),%rax\n    1130:\t48 01 d0             \tadd    %rdx,%rax\n    1133:\t48 89 c2             \tmov    %rax,%rdx\n    1136:\t48 8b 84 24 90 00 00 \tmov    0x90(%rsp),%rax\n    113d:\t00 \n    113e:\t48 89 c6             \tmov    %rax,%rsi\n    1141:\t48 89 d7             \tmov    %rdx,%rdi\n    1144:\te8 00 00 00 00       \tcall   1149 <migrate_timer+0x208>\n    1149:\te9 30 fe ff ff       \tjmp    f7e <migrate_timer+0x3d>\n    114e:\t90                   \tnop\n    114f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1156 <migrate_timer+0x215>\n    1156:\t48 89 44 24 48       \tmov    %rax,0x48(%rsp)\n    115b:\te8 ff f0 ff ff       \tcall   25f <get_cpu_info>\n    1160:\t48 8b 90 d8 00 00 00 \tmov    0xd8(%rax),%rdx\n    1167:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n    116c:\t48 01 d0             \tadd    %rdx,%rax\n    116f:\t8b 10                \tmov    (%rax),%edx\n    1171:\t83 ea 01             \tsub    $0x1,%edx\n    1174:\t89 10                \tmov    %edx,(%rax)\n    1176:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    117b:\t48 89 c7             \tmov    %rax,%rdi\n    117e:\te8 0a fb ff ff       \tcall   c8d <active_timer>\n    1183:\t88 44 24 47          \tmov    %al,0x47(%rsp)\n    1187:\t80 7c 24 47 00       \tcmpb   $0x0,0x47(%rsp)\n    118c:\t74 0d                \tje     119b <migrate_timer+0x25a>\n    118e:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1193:\t48 89 c7             \tmov    %rax,%rdi\n    1196:\te8 e4 f8 ff ff       \tcall   a7f <deactivate_timer>\n    119b:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    11a0:\t48 83 c0 08          \tadd    $0x8,%rax\n    11a4:\t48 89 c7             \tmov    %rax,%rdi\n    11a7:\te8 8e f1 ff ff       \tcall   33a <list_del>\n    11ac:\t8b 44 24 04          \tmov    0x4(%rsp),%eax\n    11b0:\t66 89 44 24 44       \tmov    %ax,0x44(%rsp)\n    11b5:\t0f b7 44 24 44       \tmovzwl 0x44(%rsp),%eax\n    11ba:\t48 89 44 24 38       \tmov    %rax,0x38(%rsp)\n    11bf:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    11c4:\t0f b7 c0             \tmovzwl %ax,%eax\n    11c7:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n    11cc:\t48 83 c2 28          \tadd    $0x28,%rdx\n    11d0:\t89 c6                \tmov    %eax,%esi\n    11d2:\t48 89 d7             \tmov    %rdx,%rdi\n    11d5:\te8 e7 f1 ff ff       \tcall   3c1 <write_u16_atomic>\n    11da:\t90                   \tnop\n    11db:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 11e2 <migrate_timer+0x2a1>\n    11e2:\t48 89 44 24 30       \tmov    %rax,0x30(%rsp)\n    11e7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 11ee <migrate_timer+0x2ad>\n    11ee:\t8b 54 24 04          \tmov    0x4(%rsp),%edx\n    11f2:\t48 8b 14 d0          \tmov    (%rax,%rdx,8),%rdx\n    11f6:\t48 8b 44 24 30       \tmov    0x30(%rsp),%rax\n    11fb:\t48 01 d0             \tadd    %rdx,%rax\n    11fe:\t48 8d 50 20          \tlea    0x20(%rax),%rdx\n    1202:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1207:\t48 83 c0 08          \tadd    $0x8,%rax\n    120b:\t48 89 d6             \tmov    %rdx,%rsi\n    120e:\t48 89 c7             \tmov    %rax,%rdi\n    1211:\te8 ca f0 ff ff       \tcall   2e0 <list_add>\n    1216:\t80 7c 24 47 00       \tcmpb   $0x0,0x47(%rsp)\n    121b:\t74 0d                \tje     122a <migrate_timer+0x2e9>\n    121d:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1222:\t48 89 c7             \tmov    %rax,%rdi\n    1225:\te8 03 f8 ff ff       \tcall   a2d <activate_timer>\n    122a:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 1231 <migrate_timer+0x2f0>\n    1231:\t48 89 44 24 28       \tmov    %rax,0x28(%rsp)\n    1236:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 123d <migrate_timer+0x2fc>\n    123d:\t8b 94 24 84 00 00 00 \tmov    0x84(%rsp),%edx\n    1244:\t48 8b 14 d0          \tmov    (%rax,%rdx,8),%rdx\n    1248:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    124d:\t48 01 d0             \tadd    %rdx,%rax\n    1250:\t48 89 c7             \tmov    %rax,%rdi\n    1253:\te8 00 00 00 00       \tcall   1258 <migrate_timer+0x317>\n    1258:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 125f <migrate_timer+0x31e>\n    125f:\t48 89 44 24 20       \tmov    %rax,0x20(%rsp)\n    1264:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 126b <migrate_timer+0x32a>\n    126b:\t8b 54 24 04          \tmov    0x4(%rsp),%edx\n    126f:\t48 8b 14 d0          \tmov    (%rax,%rdx,8),%rdx\n    1273:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    1278:\t48 01 d0             \tadd    %rdx,%rax\n    127b:\t48 89 c2             \tmov    %rax,%rdx\n    127e:\t48 8b 84 24 90 00 00 \tmov    0x90(%rsp),%rax\n    1285:\t00 \n    1286:\t48 89 c6             \tmov    %rax,%rsi\n    1289:\t48 89 d7             \tmov    %rdx,%rdi\n    128c:\te8 00 00 00 00       \tcall   1291 <migrate_timer+0x350>\n    1291:\t48 81 c4 a8 00 00 00 \tadd    $0xa8,%rsp\n    1298:\tc3                   \tret    ", "code_s": "void migrate_timer(long param_1, uint <span class=\"supfact\">param_2</span>) {\n  uint uVar1;\n  char cVar2;\n  ushort <span class=\"supfact\">uVar3</span>;\n  long <span class=\"supfact\">lVar4</span>;\n  undefined8 <span class=\"supfact\">local_18</span>;\n  <span class=\"supfact\">lVar4</span> = FUN_0010025f();\n  *(int *)(&per_cpu____preempt_count +\n           *(long *)(<span class=\"supfact\">lVar4</span> + Number)) =\n      *(int *)(&per_cpu____preempt_count +\n               *(long *)(<span class=\"supfact\">lVar4</span> + Number)) +\n      Number;\n  while (true) {\n    <span class=\"supfact\">uVar3</span> = FUN_001003a3(param_1 + Number);\n    uVar1 = (uint)<span class=\"supfact\">uVar3</span>;\n    if ((uVar1 == <span class=\"supfact\">param_2</span>) || (uVar1 == Number)) {\n      <span class=\"supfact\">lVar4</span> = FUN_0010025f();\n      *(int *)(&per_cpu____preempt_count +\n               *(long *)(<span class=\"supfact\">lVar4</span> + Number)) =\n          *(int *)(&per_cpu____preempt_count +\n                   *(long *)(<span class=\"supfact\">lVar4</span> + Number)) +\n          -Number;\n      return;\n    }\n    if (uVar1 < <span class=\"supfact\">param_2</span>) {\n      <span class=\"supfact\">local_18</span> = _spin_lock_irqsave(\n          &DAT_00101d80 + *(long *)(&__per_cpu_offset + (ulong)uVar1 * Number));\n      _spin_lock(&DAT_00101d80 +\n                 *(long *)(&__per_cpu_offset +\n                           (ulong)<span class=\"supfact\">param_2</span> * Number));\n    } else {\n      <span class=\"supfact\">local_18</span> = _spin_lock_irqsave(\n          &DAT_00101d80 + *(long *)(&__per_cpu_offset +\n                                    (ulong)<span class=\"supfact\">param_2</span> * Number));\n      _spin_lock(&DAT_00101d80 +\n                 *(long *)(&__per_cpu_offset + (ulong)uVar1 * Number));\n    }\n    if (uVar1 == *(ushort *)(param_1 + Number))\n      break;\n    _spin_unlock(&DAT_00101d80 +\n                 *(long *)(&__per_cpu_offset + (ulong)uVar1 * Number));\n    _spin_unlock_irqrestore(\n        &DAT_00101d80 + *(long *)(&__per_cpu_offset +\n                                  (ulong)<span class=\"supfact\">param_2</span> * Number),\n        <span class=\"supfact\">local_18</span>);\n  }\n  <span class=\"supfact\">lVar4</span> = FUN_0010025f();\n  *(int *)(&per_cpu____preempt_count +\n           *(long *)(<span class=\"supfact\">lVar4</span> + Number)) =\n      *(int *)(&per_cpu____preempt_count +\n               *(long *)(<span class=\"supfact\">lVar4</span> + Number)) +\n      -Number;\n  cVar2 = FUN_00100c8d(param_1);\n  if (cVar2 != String) {\n    FUN_00100a7f(param_1);\n  }\n  FUN_0010033a(param_1 + Number);\n  FUN_001003c1(param_1 + Number, (short)<span class=\"supfact\">param_2</span>);\n  FUN_001002e0(param_1 + Number,\n               &DAT_00101da0 +\n                   *(long *)(&__per_cpu_offset +\n                             (ulong)<span class=\"supfact\">param_2</span> * Number));\n  if (cVar2 != String) {\n    FUN_00100a2d(param_1);\n  }\n  _spin_unlock(&DAT_00101d80 +\n               *(long *)(&__per_cpu_offset + (ulong)uVar1 * Number));\n  _spin_unlock_irqrestore(\n      &DAT_00101d80 + *(long *)(&__per_cpu_offset +\n                                (ulong)<span class=\"supfact\">param_2</span> * Number),\n      <span class=\"supfact\">local_18</span>);\n  return;\n}", "code_t": "void migrate_timer(<span class=\"supfact\">timer</span> *<span class=\"supfact\">timer</span>, uint new_cpu) {\n  uint uVar1;\n  bool_t bVar2;\n  uint16_t <span class=\"supfact\">uVar3</span>;\n  cpu_info *<span class=\"supfact\">pcVar4</span>;\n  uint new_cpu - local;\n  <span class=\"supfact\">timer</span> *<span class=\"supfact\">timer</span> - local;\n  ulong __ptr_1;\n  ulong __ptr_11;\n  ulong __ptr_10;\n  ulong __ptr_9;\n  ulong x__1;\n  uint16_t __x;\n  bool_t active;\n  ulong __ptr_8;\n  ulong __ptr_7;\n  ulong __ptr_6;\n  ulong __ptr_3;\n  ulong __ptr_2;\n  ulong __ptr_5;\n  ulong __ptr_4;\n  uint old_cpu;\n  ulong x_;\n  ulong <span class=\"supfact\">flags</span>;\n  ulong __ptr;\n  <span class=\"supfact\">pcVar4</span> = get_cpu_info();\n  *(int *)(&per_cpu____preempt_count + <span class=\"supfact\">pcVar4</span>->per_cpu_offset) =\n      *(int *)(&per_cpu____preempt_count +\n               <span class=\"supfact\">pcVar4</span>->per_cpu_offset) +\n      Number;\n  while (true) {\n    <span class=\"supfact\">uVar3</span> = read_u16_atomic(&<span class=\"supfact\">timer</span>->cpu);\n    uVar1 = (uint)<span class=\"supfact\">uVar3</span>;\n    if ((uVar1 == new_cpu) || (uVar1 == Number)) {\n      <span class=\"supfact\">pcVar4</span> = get_cpu_info();\n      *(int *)(&per_cpu____preempt_count +\n               <span class=\"supfact\">pcVar4</span>->per_cpu_offset) =\n          *(int *)(&per_cpu____preempt_count +\n                   <span class=\"supfact\">pcVar4</span>->per_cpu_offset) +\n          -Number;\n      return;\n    }\n    if (uVar1 < new_cpu) {\n      <span class=\"supfact\">flags</span> = _spin_lock_irqsave(\n          (long)&per_cpu__timers.lock.tickets +\n          *(long *)(&__per_cpu_offset + (ulong)uVar1 * Number));\n      _spin_lock((long)&per_cpu__timers.lock.tickets +\n                 *(long *)(&__per_cpu_offset + (ulong)new_cpu * Number));\n    } else {\n      <span class=\"supfact\">flags</span> = _spin_lock_irqsave(\n          (long)&per_cpu__timers.lock.tickets +\n          *(long *)(&__per_cpu_offset + (ulong)new_cpu * Number));\n      _spin_lock((long)&per_cpu__timers.lock.tickets +\n                 *(long *)(&__per_cpu_offset + (ulong)uVar1 * Number));\n    }\n    if (uVar1 == <span class=\"supfact\">timer</span>->cpu)\n      break;\n    _spin_unlock((long)&per_cpu__timers.lock.tickets +\n                 *(long *)(&__per_cpu_offset + (ulong)uVar1 * Number));\n    _spin_unlock_irqrestore(\n        (long)&per_cpu__timers.lock.tickets +\n            *(long *)(&__per_cpu_offset + (ulong)new_cpu * Number),\n        <span class=\"supfact\">flags</span>);\n  }\n  <span class=\"supfact\">pcVar4</span> = get_cpu_info();\n  *(int *)(&per_cpu____preempt_count + <span class=\"supfact\">pcVar4</span>->per_cpu_offset) =\n      *(int *)(&per_cpu____preempt_count +\n               <span class=\"supfact\">pcVar4</span>->per_cpu_offset) +\n      -Number;\n  bVar2 = active_timer(<span class=\"supfact\">timer</span>);\n  if (bVar2 != String) {\n    deactivate_timer(<span class=\"supfact\">timer</span>);\n  }\n  list_del(&(<span class=\"supfact\">timer</span>->field_1).inactive);\n  write_u16_atomic(&<span class=\"supfact\">timer</span>->cpu, (uint16_t)new_cpu);\n  list_add(\n      &(<span class=\"supfact\">timer</span>->field_1).inactive,\n      (list_head *)((long)&per_cpu__timers.inactive.next +\n                    *(long *)(&__per_cpu_offset + (ulong)new_cpu * Number)));\n  if (bVar2 != String) {\n    activate_timer(<span class=\"supfact\">timer</span>);\n  }\n  _spin_unlock((long)&per_cpu__timers.lock.tickets +\n               *(long *)(&__per_cpu_offset + (ulong)uVar1 * Number));\n  _spin_unlock_irqrestore(\n      (long)&per_cpu__timers.lock.tickets +\n          *(long *)(&__per_cpu_offset + (ulong)new_cpu * Number),\n      <span class=\"supfact\">flags</span>);\n  return;\n}", "var": [{"name": "param_2", "type": "uint", "pred_name": "__unk__", "ref_name": "timer", "ref_type": "timer * *"}, {"name": "uVar3", "type": "uint16_t", "pred_name": "uVar3", "ref_name": "uVar3", "ref_type": "uint16_t"}, {"name": "lVar4", "type": "cpu_info * *", "pred_name": "pcVar4", "ref_name": "pcVar4", "ref_type": "cpu_info * *"}, {"name": "local_18", "type": "ulong", "pred_name": "flags", "ref_name": "flags", "ref_type": "ulong"}], "body_in_train": false}, {"repo_owner": "lomithrani", "repo_name": "E-protect", "path": "lomithrani/E-protect/791e36c452e9219b4a738d0527015163a146d89c5a0760188c266896adf5be9b", "path_in_repo": "lomithrani/E-protect/SE/ContikiOS/contiki/examples/mb851/temperature/obj_native/collect.o", "objdump": "000000000000177c <collect_set_sink>:\n    177c:\t55                   \tpush   %rbp\n    177d:\t48 89 e5             \tmov    %rsp,%rbp\n    1780:\t48 83 ec 10          \tsub    $0x10,%rsp\n    1784:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    1788:\t89 75 f4             \tmov    %esi,-0xc(%rbp)\n    178b:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    178f:\t74 62                \tje     17f3 <collect_set_sink+0x77>\n    1791:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1795:\tc6 80 e3 01 00 00 01 \tmovb   $0x1,0x1e3(%rax)\n    179c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    17a0:\t66 c7 80 dc 01 00 00 \tmovw   $0x0,0x1dc(%rax)\n    17a7:\t00 00 \n    17a9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    17ad:\t48 89 c7             \tmov    %rax,%rdi\n    17b0:\te8 a6 e8 ff ff       \tcall   5b <bump_advertisement>\n    17b5:\teb 12                \tjmp    17c9 <collect_set_sink+0x4d>\n    17b7:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    17bb:\t48 05 f0 00 00 00    \tadd    $0xf0,%rax\n    17c1:\t48 89 c7             \tmov    %rax,%rdi\n    17c4:\te8 00 00 00 00       \tcall   17c9 <collect_set_sink+0x4d>\n    17c9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    17cd:\t48 05 f0 00 00 00    \tadd    $0xf0,%rax\n    17d3:\t48 89 c7             \tmov    %rax,%rdi\n    17d6:\te8 00 00 00 00       \tcall   17db <collect_set_sink+0x5f>\n    17db:\t85 c0                \ttest   %eax,%eax\n    17dd:\t7f d8                \tjg     17b7 <collect_set_sink+0x3b>\n    17df:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    17e3:\t48 05 a0 00 00 00    \tadd    $0xa0,%rax\n    17e9:\t48 89 c7             \tmov    %rax,%rdi\n    17ec:\te8 00 00 00 00       \tcall   17f1 <collect_set_sink+0x75>\n    17f1:\teb 0d                \tjmp    1800 <collect_set_sink+0x84>\n    17f3:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    17f7:\t66 c7 80 dc 01 00 00 \tmovw   $0x1ff,0x1dc(%rax)\n    17fe:\tff 01 \n    1800:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1804:\t0f b7 80 dc 01 00 00 \tmovzwl 0x1dc(%rax),%eax\n    180b:\t0f b7 c0             \tmovzwl %ax,%eax\n    180e:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    1812:\t48 83 c2 38          \tadd    $0x38,%rdx\n    1816:\t89 c6                \tmov    %eax,%esi\n    1818:\t48 89 d7             \tmov    %rdx,%rdi\n    181b:\te8 00 00 00 00       \tcall   1820 <collect_set_sink+0xa4>\n    1820:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1824:\t48 89 c7             \tmov    %rax,%rdi\n    1827:\te8 8c e9 ff ff       \tcall   1b8 <update_rtmetric>\n    182c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1830:\t48 89 c7             \tmov    %rax,%rdi\n    1833:\te8 23 e8 ff ff       \tcall   5b <bump_advertisement>\n    1838:\t90                   \tnop\n    1839:\tc9                   \tleave  \n    183a:\tc3                   \tret    ", "code_s": "void collect_set_sink(long param_1, int <span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  if (<span class=\"supfact\">param_2</span> == Number) {\n    *(undefined2 *)(param_1 + Number) = Number;\n  } else {\n    *(undefined *)(param_1 + Number) = Number;\n    *(undefined2 *)(param_1 + Number) = Number;\n    FUN_0010005b(param_1);\n    while (true) {\n      <span class=\"supfact\">iVar1</span> = packetqueue_len(param_1 + Number);\n      if (<span class=\"supfact\">iVar1</span> < Number)\n        break;\n      packetqueue_dequeue(param_1 + Number);\n    }\n    ctimer_stop(param_1 + Number);\n  }\n  announcement_set_value(param_1 + Number, *(undefined2 *)(param_1 + Number));\n  FUN_001001b8(param_1);\n  FUN_0010005b(param_1);\n  return;\n}", "code_t": "void collect_set_sink(collect_conn *tc, int <span class=\"supfact\">should_be_sink</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  int <span class=\"supfact\">should_be_sink</span> - local;\n  collect_conn *tc - local;\n  if (<span class=\"supfact\">should_be_sink</span> == Number) {\n    tc->rtmetric = Number;\n  } else {\n    tc->is_router = String;\n    tc->rtmetric = Number;\n    bump_advertisement(tc);\n    while (true) {\n      <span class=\"supfact\">iVar1</span> = packetqueue_len(&tc->send_queue);\n      if (<span class=\"supfact\">iVar1</span> < Number)\n        break;\n      packetqueue_dequeue(&tc->send_queue);\n    }\n    ctimer_stop(&tc->retransmission_timer);\n  }\n  announcement_set_value(&tc->announcement, tc->rtmetric);\n  update_rtmetric(tc);\n  bump_advertisement(tc);\n  return;\n}", "var": [{"name": "param_2", "type": "int", "pred_name": "should_be_sink", "ref_name": "should_be_sink", "ref_type": "int"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "sreejithcools", "repo_name": "opensourceworkspace", "path": "sreejithcools/opensourceworkspace/0b1d41075ceeb613d97ce137b564e5495bba34f37a7888eb5888d0167f5d5e21", "path_in_repo": "sreejithcools/opensourceworkspace/xuggle-xuggler-iStreamLife/captive/openssl/csrc/apps/apps.o", "objdump": "00000000000047d2 <policies_print>:\n    47d2:\t55                   \tpush   %rbp\n    47d3:\t48 89 e5             \tmov    %rsp,%rbp\n    47d6:\t48 83 ec 30          \tsub    $0x30,%rsp\n    47da:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    47de:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n    47e2:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    47e9:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n    47ee:\t75 1f                \tjne    480f <policies_print+0x3d>\n    47f0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 47f7 <policies_print+0x25>\n    47f7:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    47fc:\t48 89 c7             \tmov    %rax,%rdi\n    47ff:\te8 00 00 00 00       \tcall   4804 <policies_print+0x32>\n    4804:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    4808:\tc7 45 fc 01 00 00 00 \tmovl   $0x1,-0x4(%rbp)\n    480f:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    4813:\t48 89 c7             \tmov    %rax,%rdi\n    4816:\te8 00 00 00 00       \tcall   481b <policies_print+0x49>\n    481b:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    481f:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    4823:\t48 89 c7             \tmov    %rax,%rdi\n    4826:\te8 00 00 00 00       \tcall   482b <policies_print+0x59>\n    482b:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n    482e:\t83 7d ec 00          \tcmpl   $0x0,-0x14(%rbp)\n    4832:\t74 07                \tje     483b <policies_print+0x69>\n    4834:\tba 00 00 00 00       \tmov    $0x0,%edx\n    4839:\teb 05                \tjmp    4840 <policies_print+0x6e>\n    483b:\tba 00 00 00 00       \tmov    $0x0,%edx\n    4840:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    4844:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    4849:\t48 89 c7             \tmov    %rax,%rdi\n    484c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    4851:\te8 00 00 00 00       \tcall   4856 <policies_print+0x84>\n    4856:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    485a:\t48 89 c7             \tmov    %rax,%rdi\n    485d:\te8 00 00 00 00       \tcall   4862 <policies_print+0x90>\n    4862:\t48 89 c2             \tmov    %rax,%rdx\n    4865:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    4869:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    486e:\t48 89 c7             \tmov    %rax,%rdi\n    4871:\te8 b5 fe ff ff       \tcall   472b <nodes_print>\n    4876:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    487a:\t48 89 c7             \tmov    %rax,%rdi\n    487d:\te8 00 00 00 00       \tcall   4882 <policies_print+0xb0>\n    4882:\t48 89 c2             \tmov    %rax,%rdx\n    4885:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    4889:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    488e:\t48 89 c7             \tmov    %rax,%rdi\n    4891:\te8 95 fe ff ff       \tcall   472b <nodes_print>\n    4896:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    489a:\t74 0c                \tje     48a8 <policies_print+0xd6>\n    489c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    48a0:\t48 89 c7             \tmov    %rax,%rdi\n    48a3:\te8 00 00 00 00       \tcall   48a8 <policies_print+0xd6>\n    48a8:\t90                   \tnop\n    48a9:\tc9                   \tleave  \n    48aa:\tc3                   \tret    ", "code_s": "void policies_print(BIO *param_1, X509_STORE_CTX *<span class=\"supfact\">param_2</span>) {\n  int iVar1;\n  X509_POLICY_TREE *tree;\n  stack_st_X509_POLICY_NODE *psVar2;\n  char *<span class=\"supfact\">pcVar3</span>;\n  BIO *<span class=\"supfact\">local_30</span>;\n  <span class=\"supfact\">local_30</span> = param_1;\n  if (param_1 == (BIO *)Number) {\n    <span class=\"supfact\">local_30</span> = BIO_new_fp(_stderr, Number);\n  }\n  tree = X509_STORE_CTX_get0_policy_tree(<span class=\"supfact\">param_2</span>);\n  iVar1 = X509_STORE_CTX_get_explicit_policy(<span class=\"supfact\">param_2</span>);\n  if (iVar1 == Number) {\n    <span class=\"supfact\">pcVar3</span> = String;\n  } else {\n    <span class=\"supfact\">pcVar3</span> = String;\n  }\n  BIO_printf(<span class=\"supfact\">local_30</span>, String, <span class=\"supfact\">pcVar3</span>);\n  psVar2 = X509_policy_tree_get0_policies(tree);\n  FUN_0010472b(<span class=\"supfact\">local_30</span>, String, psVar2);\n  psVar2 = X509_policy_tree_get0_user_policies(tree);\n  FUN_0010472b(<span class=\"supfact\">local_30</span>, &DAT_001054f5, psVar2);\n  if (param_1 == (BIO *)Number) {\n    BIO_free(<span class=\"supfact\">local_30</span>);\n  }\n  return;\n}", "code_t": "void policies_print(BIO *out, X509_STORE_CTX *<span class=\"supfact\">ctx</span>) {\n  int iVar1;\n  X509_POLICY_TREE *tree_00;\n  stack_st_X509_POLICY_NODE *psVar2;\n  char *<span class=\"supfact\">pcVar3</span>;\n  X509_STORE_CTX *<span class=\"supfact\">ctx</span> - local;\n  BIO *out - local;\n  int explicit_policy;\n  X509_POLICY_TREE *tree;\n  int free_out;\n  out - local = out;\n  if (out == (BIO *)Number) {\n    out - local = (BIO *)BIO_new_fp(_stderr, Number);\n  }\n  tree_00 =\n      X509_STORE_CTX_get0_policy_tree((X509_STORE_CTX *)<span class=\"supfact\">ctx</span>);\n  iVar1 =\n      X509_STORE_CTX_get_explicit_policy((X509_STORE_CTX *)<span class=\"supfact\">ctx</span>);\n  if (iVar1 == Number) {\n    <span class=\"supfact\">pcVar3</span> = String;\n  } else {\n    <span class=\"supfact\">pcVar3</span> = String;\n  }\n  BIO_printf((BIO *)out - local, String, <span class=\"supfact\">pcVar3</span>);\n  psVar2 = X509_policy_tree_get0_policies(tree_00);\n  nodes_print(out - local, String, (stack_st_X509_POLICY_NODE *)psVar2);\n  psVar2 = X509_policy_tree_get0_user_policies(tree_00);\n  nodes_print(out - local, String, (stack_st_X509_POLICY_NODE *)psVar2);\n  if (out == (BIO *)Number) {\n    BIO_free((BIO *)out - local);\n  }\n  return;\n}", "var": [{"name": "param_2", "type": "X509_STORE_CTX * *", "pred_name": "ctx", "ref_name": "ctx", "ref_type": "X509_STORE_CTX * *"}, {"name": "pcVar3", "type": "disappear", "pred_name": "", "ref_name": "pcVar3", "ref_type": "char * *"}, {"name": "local_30", "type": "BIO * *", "pred_name": "out-local", "ref_name": "out-local", "ref_type": "BIO * *"}], "body_in_train": false}, {"repo_owner": "littledan", "repo_name": "libserver", "path": "littledan/libserver/22929d63a2a4db58fd0a3a4b77a5f8542bab1be8ea4fce359304b9618a7a786f", "path_in_repo": "littledan/libserver/libevent/evutil.o", "objdump": "000000000000178e <evutil_freeaddrinfo>:\n    178e:\t55                   \tpush   %rbp\n    178f:\t48 89 e5             \tmov    %rsp,%rbp\n    1792:\t48 83 ec 20          \tsub    $0x20,%rsp\n    1796:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    179a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    179e:\t8b 00                \tmov    (%rax),%eax\n    17a0:\t85 c0                \ttest   %eax,%eax\n    17a2:\t78 4b                \tjs     17ef <evutil_freeaddrinfo+0x61>\n    17a4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    17a8:\t48 89 c7             \tmov    %rax,%rdi\n    17ab:\te8 00 00 00 00       \tcall   17b0 <evutil_freeaddrinfo+0x22>\n    17b0:\teb 44                \tjmp    17f6 <evutil_freeaddrinfo+0x68>\n    17b2:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    17b6:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n    17ba:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    17be:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    17c2:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    17c6:\t48 85 c0             \ttest   %rax,%rax\n    17c9:\t74 10                \tje     17db <evutil_freeaddrinfo+0x4d>\n    17cb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    17cf:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    17d3:\t48 89 c7             \tmov    %rax,%rdi\n    17d6:\te8 00 00 00 00       \tcall   17db <evutil_freeaddrinfo+0x4d>\n    17db:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    17df:\t48 89 c7             \tmov    %rax,%rdi\n    17e2:\te8 00 00 00 00       \tcall   17e7 <evutil_freeaddrinfo+0x59>\n    17e7:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    17eb:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    17ef:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    17f4:\t75 bc                \tjne    17b2 <evutil_freeaddrinfo+0x24>\n    17f6:\tc9                   \tleave  \n    17f7:\tc3                   \tret    ", "code_s": "void evutil_freeaddrinfo(addrinfo *<span class=\"supfact\">param_1</span>) {\n  addrinfo *paVar1;\n  addrinfo *<span class=\"supfact\">local_20</span>;\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_1</span>;\n  if (<span class=\"supfact\">param_1</span>->ai_flags < Number) {\n    while (<span class=\"supfact\">local_20</span> != (addrinfo *)Number) {\n      paVar1 = <span class=\"supfact\">local_20</span>->ai_next;\n      if (<span class=\"supfact\">local_20</span>->ai_canonname != (char *)Number) {\n        event_mm_free_(<span class=\"supfact\">local_20</span>->ai_canonname);\n      }\n      event_mm_free_(<span class=\"supfact\">local_20</span>);\n      <span class=\"supfact\">local_20</span> = paVar1;\n    }\n  } else {\n    freeaddrinfo(<span class=\"supfact\">param_1</span>);\n  }\n  return;\n}", "code_t": "void evutil_freeaddrinfo(addrinfo *<span class=\"supfact\">ai</span>) {\n  addrinfo *paVar1;\n  addrinfo *<span class=\"supfact\">ai</span> - local;\n  addrinfo *next;\n  <span class=\"supfact\">ai</span> - local = <span class=\"supfact\">ai</span>;\n  if (<span class=\"supfact\">ai</span>->ai_flags < Number) {\n    while (<span class=\"supfact\">ai</span> - local != (addrinfo *)Number) {\n      paVar1 = <span class=\"supfact\">ai</span> - local->ai_next;\n      if (<span class=\"supfact\">ai</span> - local->ai_canonname != (char *)Number) {\n        event_mm_free_(<span class=\"supfact\">ai</span> - local->ai_canonname);\n      }\n      event_mm_free_(<span class=\"supfact\">ai</span> - local);\n      <span class=\"supfact\">ai</span> - local = paVar1;\n    }\n  } else {\n    freeaddrinfo((addrinfo *)<span class=\"supfact\">ai</span>);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "ai", "ref_type": "addrinfo * *"}, {"name": "local_20", "type": "__unk__", "pred_name": "__unk__", "ref_name": "ai-local", "ref_type": "addrinfo * *"}], "body_in_train": false}, {"repo_owner": "endoplasma", "repo_name": "tdma_demo", "path": "endoplasma/tdma_demo/250179743cbaf611024fa13cf21c7fc60371bb173439830cad5f4961f3ca1de8", "path_in_repo": "endoplasma/tdma_demo/contiki/projects/udpPlug/obj_native/rpl-dag.o", "objdump": "0000000000000b30 <rpl_free_dag>:\n     b30:\t55                   \tpush   %rbp\n     b31:\t48 89 e5             \tmov    %rsp,%rbp\n     b34:\t48 83 ec 10          \tsub    $0x10,%rsp\n     b38:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n     b3c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     b40:\t0f b6 40 16          \tmovzbl 0x16(%rax),%eax\n     b44:\t84 c0                \ttest   %al,%al\n     b46:\t74 4c                \tje     b94 <rpl_free_dag+0x64>\n     b48:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     b4c:\tc6 40 16 00          \tmovb   $0x0,0x16(%rax)\n     b50:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     b54:\t48 89 c7             \tmov    %rax,%rdi\n     b57:\te8 00 00 00 00       \tcall   b5c <rpl_free_dag+0x2c>\n     b5c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     b60:\t0f b6 40 55          \tmovzbl 0x55(%rax),%eax\n     b64:\t0f b6 c0             \tmovzbl %al,%eax\n     b67:\t83 e0 40             \tand    $0x40,%eax\n     b6a:\t85 c0                \ttest   %eax,%eax\n     b6c:\t74 15                \tje     b83 <rpl_free_dag+0x53>\n     b6e:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     b72:\t48 83 c0 40          \tadd    $0x40,%rax\n     b76:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     b7b:\t48 89 c7             \tmov    %rax,%rdi\n     b7e:\te8 20 fb ff ff       \tcall   6a3 <check_prefix>\n     b83:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     b87:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     b8c:\t48 89 c7             \tmov    %rax,%rdi\n     b8f:\te8 cc f4 ff ff       \tcall   60 <remove_parents>\n     b94:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     b98:\tc6 40 15 00          \tmovb   $0x0,0x15(%rax)\n     b9c:\t90                   \tnop\n     b9d:\tc9                   \tleave  \n     b9e:\tc3                   \tret    ", "code_s": "void rpl_free_dag(long <span class=\"supfact\">param_1</span>) {\n  if (*(char *)(<span class=\"supfact\">param_1</span> + Number) != String) {\n    *(undefined *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n    rpl_remove_routes(<span class=\"supfact\">param_1</span>);\n    if ((*(byte *)(<span class=\"supfact\">param_1</span> + Number) & Number) != Number) {\n      FUN_001006a3(<span class=\"supfact\">param_1</span> + Number, Number);\n    }\n    FUN_00100060(<span class=\"supfact\">param_1</span>, Number);\n  }\n  *(undefined *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  return;\n}", "code_t": "void rpl_free_dag(rpl_dag_t *<span class=\"supfact\">dag</span>) {\n  rpl_dag_t *<span class=\"supfact\">dag</span> - local;\n  if (<span class=\"supfact\">dag</span>->joined != String) {\n    <span class=\"supfact\">dag</span>->joined = String;\n    rpl_remove_routes(<span class=\"supfact\">dag</span>);\n    if (((<span class=\"supfact\">dag</span>->prefix_info).flags & Number) != Number) {\n      check_prefix(&<span class=\"supfact\">dag</span>->prefix_info, (rpl_prefix_t *)Number);\n    }\n    remove_parents(<span class=\"supfact\">dag</span>, Number);\n  }\n  <span class=\"supfact\">dag</span>->used = String;\n  return;\n}", "var": [{"name": "param_1", "type": "rpl_dag_t * *", "pred_name": "dag", "ref_name": "dag", "ref_type": "rpl_dag_t * *"}], "body_in_train": true}, {"repo_owner": "ystk", "repo_name": "debian-crash", "path": "ystk/debian-crash/93d22e4a057a3113a17af2cddc74b7f000e6e19cf2e4f0358681ff6090ed6fba", "path_in_repo": "ystk/debian-crash//gdb-7.0/libdecnumber/bid/decimal32.o", "objdump": "00000000000009cf <decimal32Canonical>:\n 9cf:\t55                   \tpush   %rbp\n 9d0:\t48 89 e5             \tmov    %rsp,%rbp\n 9d3:\t48 83 ec 40          \tsub    $0x40,%rsp\n 9d7:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n 9db:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n 9df:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n 9e3:\tbe 20 00 00 00       \tmov    $0x20,%esi\n 9e8:\t48 89 c7             \tmov    %rax,%rdi\n 9eb:\te8 00 00 00 00       \tcall   9f0 <decimal32Canonical+0x21>\n 9f0:\t48 8d 55 f0          \tlea    -0x10(%rbp),%rdx\n 9f4:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 9f8:\t48 89 d6             \tmov    %rdx,%rsi\n 9fb:\t48 89 c7             \tmov    %rax,%rdi\n 9fe:\te8 00 00 00 00       \tcall   a03 <decimal32Canonical+0x34>\n a03:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n a07:\t48 8d 4d f0          \tlea    -0x10(%rbp),%rcx\n a0b:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n a0f:\t48 89 ce             \tmov    %rcx,%rsi\n a12:\t48 89 c7             \tmov    %rax,%rdi\n a15:\te8 00 00 00 00       \tcall   a1a <decimal32Canonical+0x4b>\n a1a:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n a1e:\tc9                   \tleave  \n a1f:\tc3                   \tret    ", "code_s": "undefined8 decimal32Canonical(undefined8 param_1,\n                              undefined8 <span class=\"supfact\">param_2</span>) {\n  undefined <span class=\"supfact\">local_38</span>[Number];\n  undefined <span class=\"supfact\">local_18</span>[Number];\n  decContextDefault(<span class=\"supfact\">local_38</span>, Number);\n  __dpd32ToNumber(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">local_18</span>);\n  __dpd32FromNumber(param_1, <span class=\"supfact\">local_18</span>,\n                    <span class=\"supfact\">local_38</span>);\n  return param_1;\n}", "code_t": "decimal32 *decimal32Canonical(decimal32 *result,\n                              decimal32 *<span class=\"supfact\">d32</span>) {\n  decimal32 *<span class=\"supfact\">d32</span> - local;\n  decimal32 *result - local;\n  decContext <span class=\"supfact\">dc</span>;\n  decNumber <span class=\"supfact\">dn</span>;\n  decContextDefault(&<span class=\"supfact\">dc</span>, Number);\n  __dpd32ToNumber(<span class=\"supfact\">d32</span>, &<span class=\"supfact\">dn</span>);\n  __dpd32FromNumber(result, &<span class=\"supfact\">dn</span>, &<span class=\"supfact\">dc</span>);\n  return result;\n}", "var": [{"name": "param_2", "type": "__unk__", "pred_name": "__unk__", "ref_name": "d32", "ref_type": "decimal32 * *"}, {"name": "local_38", "type": "struct decContext { int32_t digits; int32_t emax; int32_t emin; rounding round; uint32_t traps; uint32_t status; uint8_t clamp; PADDING (3); }", "pred_name": "__unk__", "ref_name": "dc", "ref_type": "struct decContext { int32_t digits; int32_t emax; int32_t emin; rounding round; uint32_t traps; uint32_t status; uint8_t clamp; PADDING (3); }"}, {"name": "local_18", "type": "disappear", "pred_name": "", "ref_name": "dn", "ref_type": "struct decNumber { int32_t digits; int32_t exponent; uint8_t bits; uint16_t[3] lsu; PADDING (1); }"}], "body_in_train": false}, {"repo_owner": "jadan", "repo_name": "LCTHW", "path": "jadan/LCTHW/05e32841ba933e608d7635ea5bb8ecb2c4c8b6bb0c27df614279f8831e7083a3", "path_in_repo": "jadan/LCTHW//ex17", "objdump": "", "code_s": "int fflush(FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fflush_00404060)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int fflush(FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fflush_00404060)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "sohil318", "repo_name": "cse533", "path": "sohil318/cse533/23f5616a30777eee624f3f99702bbc90d9db41a8ed5db710ee97ab563ab5b5b3", "path_in_repo": "sohil318/cse533/Stevens/unpv13e/threads/example03", "objdump": "", "code_s": "int pthread_cond_signal(pthread_cond_t *__cond) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_cond_signal_00404060)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int pthread_cond_signal(pthread_cond_t *__cond) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_cond_signal_00404060)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "abgoyal", "repo_name": "TCL_A986", "path": "abgoyal/TCL_A986/28c23fa3e3c70c28c2424d93fd6eeeba720708377be6bea395743668e1cc570f", "path_in_repo": "abgoyal/TCL_A986/external/zlib/contrib/puff/puff", "objdump": "", "code_s": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_00405040)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_00405040)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": true}, {"repo_owner": "stayboogy", "repo_name": "stayboogy_gbr_roamer", "path": "stayboogy/stayboogy_gbr_roamer/9f1937ededa57b370840a5b54adc01c7b496014c0d339134fcc6473198f08f1a", "path_in_repo": "stayboogy/stayboogy_gbr_roamer/kernel/roamer/tools/perf/bench/sched-pipe.o", "objdump": "0000000000000000 <bench_sched_pipe>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 81 ec 90 00 00 00 \tsub    $0x90,%rsp\n   b:\t89 7d 8c             \tmov    %edi,-0x74(%rbp)\n   e:\t48 89 75 80          \tmov    %rsi,-0x80(%rbp)\n  12:\t48 89 95 78 ff ff ff \tmov    %rdx,-0x88(%rbp)\n  19:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n  20:\t00 00 \n  22:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  26:\t31 c0                \txor    %eax,%eax\n  28:\tc7 45 90 00 00 00 00 \tmovl   $0x0,-0x70(%rbp)\n  2f:\t48 c7 45 a8 00 00 00 \tmovq   $0x0,-0x58(%rbp)\n  36:\t00 \n  37:\t48 8b 75 80          \tmov    -0x80(%rbp),%rsi\n  3b:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n  3e:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n  44:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  49:\tba 00 00 00 00       \tmov    $0x0,%edx\n  4e:\t89 c7                \tmov    %eax,%edi\n  50:\te8 00 00 00 00       \tcall   55 <bench_sched_pipe+0x55>\n  55:\t89 45 8c             \tmov    %eax,-0x74(%rbp)\n  58:\t48 8d 45 e8          \tlea    -0x18(%rbp),%rax\n  5c:\t48 89 c7             \tmov    %rax,%rdi\n  5f:\te8 00 00 00 00       \tcall   64 <bench_sched_pipe+0x64>\n  64:\t85 c0                \ttest   %eax,%eax\n  66:\t74 19                \tje     81 <bench_sched_pipe+0x81>\n  68:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  6d:\tba 40 00 00 00       \tmov    $0x40,%edx\n  72:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  77:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  7c:\te8 00 00 00 00       \tcall   81 <bench_sched_pipe+0x81>\n  81:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n  85:\t48 89 c7             \tmov    %rax,%rdi\n  88:\te8 00 00 00 00       \tcall   8d <bench_sched_pipe+0x8d>\n  8d:\t85 c0                \ttest   %eax,%eax\n  8f:\t74 19                \tje     aa <bench_sched_pipe+0xaa>\n  91:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  96:\tba 41 00 00 00       \tmov    $0x41,%edx\n  9b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  a0:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  a5:\te8 00 00 00 00       \tcall   aa <bench_sched_pipe+0xaa>\n  aa:\te8 00 00 00 00       \tcall   af <bench_sched_pipe+0xaf>\n  af:\t89 45 9c             \tmov    %eax,-0x64(%rbp)\n  b2:\t83 7d 9c 00          \tcmpl   $0x0,-0x64(%rbp)\n  b6:\t79 19                \tjns    d1 <bench_sched_pipe+0xd1>\n  b8:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n  bd:\tba 44 00 00 00       \tmov    $0x44,%edx\n  c2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  c7:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  cc:\te8 00 00 00 00       \tcall   d1 <bench_sched_pipe+0xd1>\n  d1:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n  d5:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  da:\t48 89 c7             \tmov    %rax,%rdi\n  dd:\te8 00 00 00 00       \tcall   e2 <bench_sched_pipe+0xe2>\n  e2:\t83 7d 9c 00          \tcmpl   $0x0,-0x64(%rbp)\n  e6:\t75 4c                \tjne    134 <bench_sched_pipe+0x134>\n  e8:\tc7 45 98 00 00 00 00 \tmovl   $0x0,-0x68(%rbp)\n  ef:\teb 36                \tjmp    127 <bench_sched_pipe+0x127>\n  f1:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n  f4:\t48 8d 4d 90          \tlea    -0x70(%rbp),%rcx\n  f8:\tba 04 00 00 00       \tmov    $0x4,%edx\n  fd:\t48 89 ce             \tmov    %rcx,%rsi\n 100:\t89 c7                \tmov    %eax,%edi\n 102:\te8 00 00 00 00       \tcall   107 <bench_sched_pipe+0x107>\n 107:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n 10a:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n 10d:\t48 8d 4d 90          \tlea    -0x70(%rbp),%rcx\n 111:\tba 04 00 00 00       \tmov    $0x4,%edx\n 116:\t48 89 ce             \tmov    %rcx,%rsi\n 119:\t89 c7                \tmov    %eax,%edi\n 11b:\te8 00 00 00 00       \tcall   120 <bench_sched_pipe+0x120>\n 120:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n 123:\t83 45 98 01          \taddl   $0x1,-0x68(%rbp)\n 127:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 12d <bench_sched_pipe+0x12d>\n 12d:\t39 45 98             \tcmp    %eax,-0x68(%rbp)\n 130:\t7c bf                \tjl     f1 <bench_sched_pipe+0xf1>\n 132:\teb 4a                \tjmp    17e <bench_sched_pipe+0x17e>\n 134:\tc7 45 98 00 00 00 00 \tmovl   $0x0,-0x68(%rbp)\n 13b:\teb 36                \tjmp    173 <bench_sched_pipe+0x173>\n 13d:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 140:\t48 8d 4d 90          \tlea    -0x70(%rbp),%rcx\n 144:\tba 04 00 00 00       \tmov    $0x4,%edx\n 149:\t48 89 ce             \tmov    %rcx,%rsi\n 14c:\t89 c7                \tmov    %eax,%edi\n 14e:\te8 00 00 00 00       \tcall   153 <bench_sched_pipe+0x153>\n 153:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n 156:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n 159:\t48 8d 4d 90          \tlea    -0x70(%rbp),%rcx\n 15d:\tba 04 00 00 00       \tmov    $0x4,%edx\n 162:\t48 89 ce             \tmov    %rcx,%rsi\n 165:\t89 c7                \tmov    %eax,%edi\n 167:\te8 00 00 00 00       \tcall   16c <bench_sched_pipe+0x16c>\n 16c:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n 16f:\t83 45 98 01          \taddl   $0x1,-0x68(%rbp)\n 173:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 179 <bench_sched_pipe+0x179>\n 179:\t39 45 98             \tcmp    %eax,-0x68(%rbp)\n 17c:\t7c bf                \tjl     13d <bench_sched_pipe+0x13d>\n 17e:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n 182:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 187:\t48 89 c7             \tmov    %rax,%rdi\n 18a:\te8 00 00 00 00       \tcall   18f <bench_sched_pipe+0x18f>\n 18f:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n 193:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 197:\t48 29 c2             \tsub    %rax,%rdx\n 19a:\t48 89 d0             \tmov    %rdx,%rax\n 19d:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n 1a1:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n 1a5:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 1a9:\t48 29 c2             \tsub    %rax,%rdx\n 1ac:\t48 89 d0             \tmov    %rdx,%rax\n 1af:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n 1b3:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 1b7:\t48 85 c0             \ttest   %rax,%rax\n 1ba:\t79 1a                \tjns    1d6 <bench_sched_pipe+0x1d6>\n 1bc:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 1c0:\t48 83 e8 01          \tsub    $0x1,%rax\n 1c4:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n 1c8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 1cc:\t48 05 40 42 0f 00    \tadd    $0xf4240,%rax\n 1d2:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n 1d6:\t83 7d 9c 00          \tcmpl   $0x0,-0x64(%rbp)\n 1da:\t74 44                \tje     220 <bench_sched_pipe+0x220>\n 1dc:\t48 8d 4d 94          \tlea    -0x6c(%rbp),%rcx\n 1e0:\t8b 45 9c             \tmov    -0x64(%rbp),%eax\n 1e3:\tba 00 00 00 00       \tmov    $0x0,%edx\n 1e8:\t48 89 ce             \tmov    %rcx,%rsi\n 1eb:\t89 c7                \tmov    %eax,%edi\n 1ed:\te8 00 00 00 00       \tcall   1f2 <bench_sched_pipe+0x1f2>\n 1f2:\t89 45 a4             \tmov    %eax,-0x5c(%rbp)\n 1f5:\t8b 45 a4             \tmov    -0x5c(%rbp),%eax\n 1f8:\t3b 45 9c             \tcmp    -0x64(%rbp),%eax\n 1fb:\t75 0a                \tjne    207 <bench_sched_pipe+0x207>\n 1fd:\t8b 45 94             \tmov    -0x6c(%rbp),%eax\n 200:\t83 e0 7f             \tand    $0x7f,%eax\n 203:\t85 c0                \ttest   %eax,%eax\n 205:\t74 23                \tje     22a <bench_sched_pipe+0x22a>\n 207:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n 20c:\tba 59 00 00 00       \tmov    $0x59,%edx\n 211:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 216:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 21b:\te8 00 00 00 00       \tcall   220 <bench_sched_pipe+0x220>\n 220:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 225:\te8 00 00 00 00       \tcall   22a <bench_sched_pipe+0x22a>\n 22a:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 230 <bench_sched_pipe+0x230>\n 230:\t85 c0                \ttest   %eax,%eax\n 232:\t74 0e                \tje     242 <bench_sched_pipe+0x242>\n 234:\t83 f8 01             \tcmp    $0x1,%eax\n 237:\t0f 84 15 01 00 00    \tje     352 <bench_sched_pipe+0x352>\n 23d:\te9 50 01 00 00       \tjmp    392 <bench_sched_pipe+0x392>\n 242:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 248 <bench_sched_pipe+0x248>\n 248:\t89 c6                \tmov    %eax,%esi\n 24a:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 24f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 254:\te8 00 00 00 00       \tcall   259 <bench_sched_pipe+0x259>\n 259:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 25d:\t48 69 c0 40 42 0f 00 \timul   $0xf4240,%rax,%rax\n 264:\t48 89 45 a8          \tmov    %rax,-0x58(%rbp)\n 268:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 26c:\t48 01 45 a8          \tadd    %rax,-0x58(%rbp)\n 270:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n 274:\t48 ba cf f7 53 e3 a5 \tmovabs $0x20c49ba5e353f7cf,%rdx\n 27b:\t9b c4 20 \n 27e:\t48 89 c8             \tmov    %rcx,%rax\n 281:\t48 f7 ea             \timul   %rdx\n 284:\t48 c1 fa 07          \tsar    $0x7,%rdx\n 288:\t48 89 c8             \tmov    %rcx,%rax\n 28b:\t48 c1 f8 3f          \tsar    $0x3f,%rax\n 28f:\t48 29 c2             \tsub    %rax,%rdx\n 292:\t48 89 d0             \tmov    %rdx,%rax\n 295:\t48 89 c2             \tmov    %rax,%rdx\n 298:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 29c:\t48 89 d1             \tmov    %rdx,%rcx\n 29f:\t48 89 c2             \tmov    %rax,%rdx\n 2a2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 2a7:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 2ac:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 2b1:\te8 00 00 00 00       \tcall   2b6 <bench_sched_pipe+0x2b6>\n 2b6:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 2ba:\t48 85 c0             \ttest   %rax,%rax\n 2bd:\t78 07                \tjs     2c6 <bench_sched_pipe+0x2c6>\n 2bf:\tf2 48 0f 2a c0       \tcvtsi2sd %rax,%xmm0\n 2c4:\teb 15                \tjmp    2db <bench_sched_pipe+0x2db>\n 2c6:\t48 89 c2             \tmov    %rax,%rdx\n 2c9:\t48 d1 ea             \tshr    %rdx\n 2cc:\t83 e0 01             \tand    $0x1,%eax\n 2cf:\t48 09 c2             \tor     %rax,%rdx\n 2d2:\tf2 48 0f 2a c2       \tcvtsi2sd %rdx,%xmm0\n 2d7:\tf2 0f 58 c0          \taddsd  %xmm0,%xmm0\n 2db:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2e1 <bench_sched_pipe+0x2e1>\n 2e1:\tf2 0f 2a c8          \tcvtsi2sd %eax,%xmm1\n 2e5:\tf2 0f 5e c1          \tdivsd  %xmm1,%xmm0\n 2e9:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 2ee:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 2f3:\te8 00 00 00 00       \tcall   2f8 <bench_sched_pipe+0x2f8>\n 2f8:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2fe <bench_sched_pipe+0x2fe>\n 2fe:\tf2 0f 2a c8          \tcvtsi2sd %eax,%xmm1\n 302:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 306:\t48 85 c0             \ttest   %rax,%rax\n 309:\t78 07                \tjs     312 <bench_sched_pipe+0x312>\n 30b:\tf2 48 0f 2a c0       \tcvtsi2sd %rax,%xmm0\n 310:\teb 15                \tjmp    327 <bench_sched_pipe+0x327>\n 312:\t48 89 c2             \tmov    %rax,%rdx\n 315:\t48 d1 ea             \tshr    %rdx\n 318:\t83 e0 01             \tand    $0x1,%eax\n 31b:\t48 09 c2             \tor     %rax,%rdx\n 31e:\tf2 48 0f 2a c2       \tcvtsi2sd %rdx,%xmm0\n 323:\tf2 0f 58 c0          \taddsd  %xmm0,%xmm0\n 327:\tf2 0f 10 15 00 00 00 \tmovsd  0x0(%rip),%xmm2        # 32f <bench_sched_pipe+0x32f>\n 32e:\t00 \n 32f:\tf2 0f 5e c2          \tdivsd  %xmm2,%xmm0\n 333:\tf2 0f 5e c8          \tdivsd  %xmm0,%xmm1\n 337:\t66 0f 28 c1          \tmovapd %xmm1,%xmm0\n 33b:\tf2 0f 2c c0          \tcvttsd2si %xmm0,%eax\n 33f:\t89 c6                \tmov    %eax,%esi\n 341:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 346:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 34b:\te8 00 00 00 00       \tcall   350 <bench_sched_pipe+0x350>\n 350:\teb 69                \tjmp    3bb <bench_sched_pipe+0x3bb>\n 352:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n 356:\t48 ba cf f7 53 e3 a5 \tmovabs $0x20c49ba5e353f7cf,%rdx\n 35d:\t9b c4 20 \n 360:\t48 89 c8             \tmov    %rcx,%rax\n 363:\t48 f7 ea             \timul   %rdx\n 366:\t48 c1 fa 07          \tsar    $0x7,%rdx\n 36a:\t48 89 c8             \tmov    %rcx,%rax\n 36d:\t48 c1 f8 3f          \tsar    $0x3f,%rax\n 371:\t48 29 c2             \tsub    %rax,%rdx\n 374:\t48 89 d0             \tmov    %rdx,%rax\n 377:\t48 89 c2             \tmov    %rax,%rdx\n 37a:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n 37e:\t48 89 c6             \tmov    %rax,%rsi\n 381:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 386:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 38b:\te8 00 00 00 00       \tcall   390 <bench_sched_pipe+0x390>\n 390:\teb 29                \tjmp    3bb <bench_sched_pipe+0x3bb>\n 392:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # 398 <bench_sched_pipe+0x398>\n 398:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 39f <bench_sched_pipe+0x39f>\n 39f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 3a4:\t48 89 c7             \tmov    %rax,%rdi\n 3a7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 3ac:\te8 00 00 00 00       \tcall   3b1 <bench_sched_pipe+0x3b1>\n 3b1:\tbf 01 00 00 00       \tmov    $0x1,%edi\n 3b6:\te8 00 00 00 00       \tcall   3bb <bench_sched_pipe+0x3bb>\n 3bb:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 3c0:\t48 8b 75 f8          \tmov    -0x8(%rbp),%rsi\n 3c4:\t64 48 33 34 25 28 00 \txor    %fs:0x28,%rsi\n 3cb:\t00 00 \n 3cd:\t74 05                \tje     3d4 <bench_sched_pipe+0x3d4>\n 3cf:\te8 00 00 00 00       \tcall   3d4 <bench_sched_pipe+0x3d4>\n 3d4:\tc9                   \tleave  \n 3d5:\tc3                   \tret    \n", "code_s": "undefined8 bench_sched_pipe(undefined4 param_1,\n                            undefined8 <span class=\"supfact\">param_2</span>) {\n  int iVar1;\n  ssize_t <span class=\"supfact\">sVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  double <span class=\"supfact\">dVar3</span>;\n  undefined4 <span class=\"supfact\">local_78</span>;\n  uint <span class=\"supfact\">local_74</span>;\n  int <span class=\"supfact\">local_70</span>;\n  __pid_t <span class=\"supfact\">local_6c</span>;\n  undefined4 <span class=\"supfact\">local_68</span>;\n  __pid_t <span class=\"supfact\">local_64</span>;\n  ulong <span class=\"supfact\">local_60</span>;\n  timeval <span class=\"supfact\">local_58</span>;\n  timeval <span class=\"supfact\">local_48</span>;\n  long <span class=\"supfact\">local_38</span>;\n  long <span class=\"supfact\">local_30</span>;\n  int <span class=\"supfact\">local_20</span>;\n  int <span class=\"supfact\">local_1c</span>;\n  int <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_14</span>;\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_78</span> = Number;\n  <span class=\"supfact\">local_60</span> = Number;\n  parse_options(param_1, <span class=\"supfact\">param_2</span>, &DAT_00100400,\n                &PTR_s_perf_bench_sched_pipe_<options> _001004a0, Number);\n  iVar1 = pipe(&<span class=\"supfact\">local_20</span>);\n  if (iVar1 != Number) {\n    __assert_fail(String, String, Number, String);\n  }\n  iVar1 = pipe(&<span class=\"supfact\">local_18</span>);\n  if (iVar1 != Number) {\n    __assert_fail(String, String, Number, String);\n  }\n  <span class=\"supfact\">local_6c</span> = fork();\n  if (<span class=\"supfact\">local_6c</span> < Number) {\n    __assert_fail(String, String, Number, String);\n  }\n  gettimeofday(&<span class=\"supfact\">local_58</span>, (__timezone_ptr_t)Number);\n  if (<span class=\"supfact\">local_6c</span> == Number) {\n    for (<span class=\"supfact\">local_70</span> = Number;\n         <span class=\"supfact\">local_70</span> < (int)DAT_001003d8;\n         <span class=\"supfact\">local_70</span> = <span class=\"supfact\">local_70</span> + Number) {\n      <span class=\"supfact\">sVar2</span> =\n          read(<span class=\"supfact\">local_20</span>, &<span class=\"supfact\">local_78</span>, Number);\n      <span class=\"supfact\">local_68</span> = (undefined4)<span class=\"supfact\">sVar2</span>;\n      <span class=\"supfact\">sVar2</span> =\n          write(<span class=\"supfact\">local_14</span>, &<span class=\"supfact\">local_78</span>, Number);\n      <span class=\"supfact\">local_68</span> = (undefined4)<span class=\"supfact\">sVar2</span>;\n    }\n  } else {\n    for (<span class=\"supfact\">local_70</span> = Number;\n         <span class=\"supfact\">local_70</span> < (int)DAT_001003d8;\n         <span class=\"supfact\">local_70</span> = <span class=\"supfact\">local_70</span> + Number) {\n      <span class=\"supfact\">sVar2</span> =\n          write(<span class=\"supfact\">local_1c</span>, &<span class=\"supfact\">local_78</span>, Number);\n      <span class=\"supfact\">local_68</span> = (undefined4)<span class=\"supfact\">sVar2</span>;\n      <span class=\"supfact\">sVar2</span> =\n          read(<span class=\"supfact\">local_18</span>, &<span class=\"supfact\">local_78</span>, Number);\n      <span class=\"supfact\">local_68</span> = (undefined4)<span class=\"supfact\">sVar2</span>;\n    }\n  }\n  gettimeofday(&<span class=\"supfact\">local_48</span>, (__timezone_ptr_t)Number);\n  <span class=\"supfact\">local_38</span> =\n      <span class=\"supfact\">local_48</span>.tv_sec - <span class=\"supfact\">local_58</span>.tv_sec;\n  <span class=\"supfact\">local_30</span> =\n      <span class=\"supfact\">local_48</span>.tv_usec - <span class=\"supfact\">local_58</span>.tv_usec;\n  if (<span class=\"supfact\">local_30</span> < Number) {\n    <span class=\"supfact\">local_38</span> = <span class=\"supfact\">local_38</span> + -Number;\n    <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_30</span> + Number;\n  }\n  if (<span class=\"supfact\">local_6c</span> == Number) {\n    exit(Number);\n  }\n  <span class=\"supfact\">local_64</span> = waitpid(<span class=\"supfact\">local_6c</span>,\n                                     (int *)&<span class=\"supfact\">local_74</span>, Number);\n  if ((<span class=\"supfact\">local_64</span> != <span class=\"supfact\">local_6c</span>) ||\n      ((<span class=\"supfact\">local_74</span> & Number) != Number)) {\n    __assert_fail(String, String, Number, String);\n  }\n  if (_bench_format == Number) {\n    printf(String, (ulong)DAT_001003d8);\n    <span class=\"supfact\">local_60</span> =\n        <span class=\"supfact\">local_38</span> * Number + <span class=\"supfact\">local_30</span>;\n    printf(String, String, <span class=\"supfact\">local_38</span>,\n           <span class=\"supfact\">local_30</span> / Number);\n    if ((long)<span class=\"supfact\">local_60</span> < Number) {\n      <span class=\"supfact\">dVar3</span> =\n          (double)(<span class=\"supfact\">local_60</span> >> Number |\n                   (ulong)((uint)<span class=\"supfact\">local_60</span> & Number));\n      <span class=\"supfact\">dVar3</span> = <span class=\"supfact\">dVar3</span> + <span class=\"supfact\">dVar3</span>;\n    } else {\n      <span class=\"supfact\">dVar3</span> = (double)<span class=\"supfact\">local_60</span>;\n    }\n    printf(String, <span class=\"supfact\">dVar3</span> / (double)DAT_001003d8);\n    if ((long)<span class=\"supfact\">local_60</span> < Number) {\n      <span class=\"supfact\">dVar3</span> =\n          (double)(<span class=\"supfact\">local_60</span> >> Number |\n                   (ulong)((uint)<span class=\"supfact\">local_60</span> & Number));\n      <span class=\"supfact\">dVar3</span> = <span class=\"supfact\">dVar3</span> + <span class=\"supfact\">dVar3</span>;\n    } else {\n      <span class=\"supfact\">dVar3</span> = (double)<span class=\"supfact\">local_60</span>;\n    }\n    printf(String, (ulong)(uint)(int)((double)DAT_001003d8 /\n                                      (<span class=\"supfact\">dVar3</span> / DAT_001005c8)));\n  } else {\n    if (_bench_format != Number) {\n      fprintf(_stderr, String, (ulong)_bench_format);\n      exit(Number);\n    }\n    printf(String, <span class=\"supfact\">local_38</span>, <span class=\"supfact\">local_30</span> / Number);\n  }\n  if (<span class=\"supfact\">local_10</span> ==\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return Number;\n  }\n  __stack_chk_fail();\n}", "code_t": "int bench_sched_pipe(int argc, char **<span class=\"supfact\">argv</span>, char *prefix) {\n  long lVar1;\n  int iVar2;\n  ssize_t <span class=\"supfact\">sVar3</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  double <span class=\"supfact\">dVar4</span>;\n  char *prefix - local;\n  char **<span class=\"supfact\">argv</span> - local;\n  int argc - local;\n  int <span class=\"supfact\">m</span>;\n  int <span class=\"supfact\">wait_stat</span>;\n  int <span class=\"supfact\">i</span>;\n  pid_t <span class=\"supfact\">pid</span>;\n  int <span class=\"supfact\">ret</span>;\n  pid_t <span class=\"supfact\">retpid</span>;\n  ulonglong <span class=\"supfact\">result_usec</span>;\n  timeval <span class=\"supfact\">start</span>;\n  timeval <span class=\"supfact\">stop</span>;\n  timeval <span class=\"supfact\">diff</span>;\n  int <span class=\"supfact\">pipe_1</span>[Number];\n  int <span class=\"supfact\">pipe_2</span>[Number];\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">m</span> = Number;\n  <span class=\"supfact\">result_usec</span> = Number;\n  parse_options(argc, <span class=\"supfact\">argv</span>, options, bench_sched_pipe_usage,\n                Number);\n  iVar2 = pipe(<span class=\"supfact\">pipe_1</span>);\n  if (iVar2 != Number) {\n    __assert_fail(String, String, Number, String);\n  }\n  iVar2 = pipe(<span class=\"supfact\">pipe_2</span>);\n  if (iVar2 != Number) {\n    __assert_fail(String, String, Number, String);\n  }\n  <span class=\"supfact\">pid</span> = fork();\n  if (<span class=\"supfact\">pid</span> < Number) {\n    __assert_fail(String, String, Number, String);\n  }\n  gettimeofday((timeval *)&<span class=\"supfact\">start</span>, (__timezone_ptr_t)Number);\n  if (<span class=\"supfact\">pid</span> == Number) {\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < loops;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      <span class=\"supfact\">sVar3</span> =\n          read(<span class=\"supfact\">pipe_1</span>[Number], &<span class=\"supfact\">m</span>, Number);\n      <span class=\"supfact\">ret</span> = (int)<span class=\"supfact\">sVar3</span>;\n      <span class=\"supfact\">sVar3</span> =\n          write(<span class=\"supfact\">pipe_2</span>[Number], &<span class=\"supfact\">m</span>, Number);\n      <span class=\"supfact\">ret</span> = (int)<span class=\"supfact\">sVar3</span>;\n    }\n  } else {\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < loops;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      <span class=\"supfact\">sVar3</span> =\n          write(<span class=\"supfact\">pipe_1</span>[Number], &<span class=\"supfact\">m</span>, Number);\n      <span class=\"supfact\">ret</span> = (int)<span class=\"supfact\">sVar3</span>;\n      <span class=\"supfact\">sVar3</span> =\n          read(<span class=\"supfact\">pipe_2</span>[Number], &<span class=\"supfact\">m</span>, Number);\n      <span class=\"supfact\">ret</span> = (int)<span class=\"supfact\">sVar3</span>;\n    }\n  }\n  gettimeofday((timeval *)&<span class=\"supfact\">stop</span>, (__timezone_ptr_t)Number);\n  <span class=\"supfact\">diff</span>.tv_sec =\n      <span class=\"supfact\">stop</span>.tv_sec - <span class=\"supfact\">start</span>.tv_sec;\n  <span class=\"supfact\">diff</span>.tv_usec =\n      <span class=\"supfact\">stop</span>.tv_usec - <span class=\"supfact\">start</span>.tv_usec;\n  if (<span class=\"supfact\">diff</span>.tv_usec < Number) {\n    <span class=\"supfact\">diff</span>.tv_sec = <span class=\"supfact\">diff</span>.tv_sec + -Number;\n    <span class=\"supfact\">diff</span>.tv_usec = <span class=\"supfact\">diff</span>.tv_usec + Number;\n  }\n  if (<span class=\"supfact\">pid</span> == Number) {\n    exit(Number);\n  }\n  <span class=\"supfact\">retpid</span> =\n      waitpid(<span class=\"supfact\">pid</span>, &<span class=\"supfact\">wait_stat</span>, Number);\n  if ((<span class=\"supfact\">retpid</span> != <span class=\"supfact\">pid</span>) ||\n      ((<span class=\"supfact\">wait_stat</span> & Number) != Number)) {\n    __assert_fail(String, String, Number, String);\n  }\n  if (_bench_format == Number) {\n    printf(String, (ulong)(uint)loops);\n    <span class=\"supfact\">result_usec</span> =\n        <span class=\"supfact\">diff</span>.tv_sec * Number + <span class=\"supfact\">diff</span>.tv_usec;\n    printf(String, String, <span class=\"supfact\">diff</span>.tv_sec,\n           <span class=\"supfact\">diff</span>.tv_usec / Number);\n    if ((long)<span class=\"supfact\">result_usec</span> < Number) {\n      <span class=\"supfact\">dVar4</span> =\n          (double)(<span class=\"supfact\">result_usec</span> >> Number |\n                   (ulong)((uint)<span class=\"supfact\">result_usec</span> & Number));\n      <span class=\"supfact\">dVar4</span> = <span class=\"supfact\">dVar4</span> + <span class=\"supfact\">dVar4</span>;\n    } else {\n      <span class=\"supfact\">dVar4</span> = (double)<span class=\"supfact\">result_usec</span>;\n    }\n    printf(String, <span class=\"supfact\">dVar4</span> / (double)loops);\n    if ((long)<span class=\"supfact\">result_usec</span> < Number) {\n      <span class=\"supfact\">dVar4</span> =\n          (double)(<span class=\"supfact\">result_usec</span> >> Number |\n                   (ulong)((uint)<span class=\"supfact\">result_usec</span> & Number));\n      <span class=\"supfact\">dVar4</span> = <span class=\"supfact\">dVar4</span> + <span class=\"supfact\">dVar4</span>;\n    } else {\n      <span class=\"supfact\">dVar4</span> = (double)<span class=\"supfact\">result_usec</span>;\n    }\n    printf(String, (ulong)(uint)(int)((double)loops /\n                                      (<span class=\"supfact\">dVar4</span> / DAT_001005c8)));\n  } else {\n    if (_bench_format != Number) {\n      fprintf(_stderr, String, (ulong)_bench_format);\n      exit(Number);\n    }\n    printf(String, <span class=\"supfact\">diff</span>.tv_sec,\n           <span class=\"supfact\">diff</span>.tv_usec / Number);\n  }\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return Number;\n  }\n  __stack_chk_fail();\n}", "var": [{"name": "param_2", "type": "char * * *", "pred_name": "argv", "ref_name": "argv", "ref_type": "char * * *"}, {"name": "sVar2", "type": "ssize_t", "pred_name": "sVar3", "ref_name": "sVar3", "ref_type": "ssize_t"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "dVar3", "type": "double", "pred_name": "dVar4", "ref_name": "dVar4", "ref_type": "double"}, {"name": "local_78", "type": "int", "pred_name": "m", "ref_name": "m", "ref_type": "int"}, {"name": "local_74", "type": "int", "pred_name": "wait_stat", "ref_name": "wait_stat", "ref_type": "int"}, {"name": "local_70", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}, {"name": "local_6c", "type": "pid_t", "pred_name": "pid", "ref_name": "pid", "ref_type": "pid_t"}, {"name": "local_68", "type": "int", "pred_name": "ret", "ref_name": "ret", "ref_type": "int"}, {"name": "local_64", "type": "pid_t", "pred_name": "retpid", "ref_name": "retpid", "ref_type": "pid_t"}, {"name": "local_60", "type": "ulonglong", "pred_name": "result_usec", "ref_name": "result_usec", "ref_type": "ulonglong"}, {"name": "local_58", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "pred_name": "start", "ref_name": "start", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}, {"name": "local_48", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "pred_name": "stop", "ref_name": "stop", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}, {"name": "local_38", "type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }", "pred_name": "diff", "ref_name": "diff", "ref_type": "struct timeval { __time_t tv_sec; __suseconds_t tv_usec; }"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_20", "type": "int[2][2]", "pred_name": "pipe_1", "ref_name": "pipe_1", "ref_type": "int[2][2]"}, {"name": "local_1c", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_18", "type": "int[2][2]", "pred_name": "pipe_2", "ref_name": "pipe_2", "ref_type": "int[2][2]"}, {"name": "local_14", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_10", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "libretro", "repo_name": "libretro-tyrquake", "path": "libretro/libretro-tyrquake/a6ae2f7d04e47f6c97e70ca66b580410fd9c49aa87a614229899fd5a11fe6468", "path_in_repo": "libretro/libretro-tyrquake//build/qwgl/cvar.o", "objdump": "000000000000004a <Cvar_ArgCompletions>:\n  4a:\t55                   \tpush   %rbp\n  4b:\t48 89 e5             \tmov    %rsp,%rbp\n  4e:\t48 83 ec 20          \tsub    $0x20,%rsp\n  52:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  56:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n  5a:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n  61:\t00 \n  62:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  66:\t48 89 c7             \tmov    %rax,%rdi\n  69:\te8 00 00 00 00       \tcall   6e <Cvar_ArgCompletions+0x24>\n  6e:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  72:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n  77:\t74 22                \tje     9b <Cvar_ArgCompletions+0x51>\n  79:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  7d:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n  81:\t48 85 c0             \ttest   %rax,%rax\n  84:\t74 15                \tje     9b <Cvar_ArgCompletions+0x51>\n  86:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  8a:\t48 8b 50 58          \tmov    0x58(%rax),%rdx\n  8e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n  92:\t48 89 c7             \tmov    %rax,%rdi\n  95:\tff d2                \tcall   *%rdx\n  97:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  9b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  9f:\tc9                   \tleave  \n  a0:\tc3                   \tret    ", "code_s": "undefined8 Cvar_ArgCompletions(undefined8 param_1,\n                               undefined8 <span class=\"supfact\">param_2</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  undefined8 <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = Number;\n  <span class=\"supfact\">lVar1</span> = Cvar_FindVar(param_1);\n  if ((<span class=\"supfact\">lVar1</span> != Number) &&\n      (*(long *)(<span class=\"supfact\">lVar1</span> + Number) != Number)) {\n    <span class=\"supfact\">local_10</span> =\n        (**(code **)(<span class=\"supfact\">lVar1</span> + Number))(<span class=\"supfact\">param_2</span>);\n  }\n  return <span class=\"supfact\">local_10</span>;\n}", "code_t": "stree_root *Cvar_ArgCompletions(char *name, char *<span class=\"supfact\">buf</span>) {\n  cvar_t *<span class=\"supfact\">pcVar1</span>;\n  char *<span class=\"supfact\">buf</span> - local;\n  char *name - local;\n  cvar_t *cvar;\n  stree_root *<span class=\"supfact\">root</span>;\n  <span class=\"supfact\">root</span> = (stree_root *)Number;\n  <span class=\"supfact\">pcVar1</span> = Cvar_FindVar(name);\n  if ((<span class=\"supfact\">pcVar1</span> != (cvar_t *)Number) &&\n      (<span class=\"supfact\">pcVar1</span>->completion != (cvar_arg_f)Number)) {\n    <span class=\"supfact\">root</span> =\n        (*<span class=\"supfact\">pcVar1</span>->completion)(<span class=\"supfact\">buf</span>);\n  }\n  return <span class=\"supfact\">root</span>;\n}", "var": [{"name": "param_2", "type": "char * *", "pred_name": "name", "ref_name": "buf", "ref_type": "char * *"}, {"name": "lVar1", "type": "long", "pred_name": "lVar1", "ref_name": "pcVar1", "ref_type": "cvar_t * *"}, {"name": "local_10", "type": "__unk__", "pred_name": "p", "ref_name": "root", "ref_type": "stree_root * *"}], "body_in_train": false}, {"repo_owner": "mengqp", "repo_name": "ms61850", "path": "mengqp/ms61850/3efe37317ca4c06ef63f9ace4e832955add799c7e4dffa86d55ea6ef1d402d18", "path_in_repo": "mengqp/ms61850/libiec61850/build/src/hal/socket/linux/socket_linux.o", "objdump": "0000000000000000 <Handleset_new>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 83 ec 10          \tsub    $0x10,%rsp\n   8:\tbf 88 00 00 00       \tmov    $0x88,%edi\n   d:\te8 00 00 00 00       \tcall   12 <Handleset_new+0x12>\n  12:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  16:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n  1b:\t74 2d                \tje     4a <Handleset_new+0x4a>\n  1d:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n  21:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  26:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n  2b:\t48 89 d7             \tmov    %rdx,%rdi\n  2e:\tfc                   \tcld    \n  2f:\tf3 48 ab             \trep stos %rax,%es:(%rdi)\n  32:\t89 f8                \tmov    %edi,%eax\n  34:\t89 ca                \tmov    %ecx,%edx\n  36:\t89 55 f4             \tmov    %edx,-0xc(%rbp)\n  39:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n  3c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40:\tc7 80 80 00 00 00 ff \tmovl   $0xffffffff,0x80(%rax)\n  47:\tff ff ff \n  4a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4e:\tc9                   \tleave  \n  4f:\tc3                   \tret    ", "code_s": "undefined8 *Handleset_new(void) {\n  undefined8 *puVar1;\n  long <span class=\"supfact\">lVar2</span>;\n  undefined8 *<span class=\"supfact\">puVar3</span>;\n  puVar1 = (undefined8 *)Memory_malloc(Number);\n  if (puVar1 != (undefined8 *)Number) {\n    <span class=\"supfact\">puVar3</span> = puVar1;\n    for (<span class=\"supfact\">lVar2</span> = Number; <span class=\"supfact\">lVar2</span> != Number;\n         <span class=\"supfact\">lVar2</span> = <span class=\"supfact\">lVar2</span> + -Number) {\n      *<span class=\"supfact\">puVar3</span> = Number;\n      <span class=\"supfact\">puVar3</span> = <span class=\"supfact\">puVar3</span> + Number;\n    }\n    *(undefined4 *)(puVar1 + Number) = Number;\n  }\n  return puVar1;\n}", "code_t": "HandleSet Handleset_new(void) {\n  HandleSet psVar1;\n  long <span class=\"supfact\">lVar2</span>;\n  HandleSet <span class=\"supfact\">psVar3</span>;\n  int __d1;\n  int __d0;\n  HandleSet result;\n  psVar1 = (HandleSet)Memory_malloc(Number);\n  if (psVar1 != (HandleSet)Number) {\n    <span class=\"supfact\">psVar3</span> = psVar1;\n    for (<span class=\"supfact\">lVar2</span> = Number; <span class=\"supfact\">lVar2</span> != Number;\n         <span class=\"supfact\">lVar2</span> = <span class=\"supfact\">lVar2</span> + -Number) {\n      (<span class=\"supfact\">psVar3</span>->handles).__fds_bits[Number] = Number;\n      <span class=\"supfact\">psVar3</span> =\n          (HandleSet)((<span class=\"supfact\">psVar3</span>->handles).__fds_bits + Number);\n    }\n    psVar1->maxHandle = -Number;\n  }\n  return psVar1;\n}", "var": [{"name": "lVar2", "type": "long", "pred_name": "lVar2", "ref_name": "lVar2", "ref_type": "long"}, {"name": "puVar3", "type": "undefined8 * *", "pred_name": "puVar3", "ref_name": "psVar3", "ref_type": "HandleSet"}], "body_in_train": false}, {"repo_owner": "ErikPshat", "repo_name": "sign_np-hykem", "path": "ErikPshat/sign_np-hykem/e718ee2d111cff3ef342760f714ab2b1ae9cb48ee76a4c0e7b7c46c7cb72a75d", "path_in_repo": "ErikPshat/sign_np-hykem//libkirk/ec.o", "objdump": "0000000000000000 <hex_dump>:\n       0:\t55                   \tpush   %rbp\n       1:\t48 89 e5             \tmov    %rsp,%rbp\n       4:\t48 83 ec 30          \tsub    $0x30,%rsp\n       8:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n       c:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n      10:\t89 55 dc             \tmov    %edx,-0x24(%rbp)\n      13:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n      18:\t74 16                \tje     30 <hex_dump+0x30>\n      1a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      1e:\t48 89 c6             \tmov    %rax,%rsi\n      21:\tbf 00 00 00 00       \tmov    $0x0,%edi\n      26:\tb8 00 00 00 00       \tmov    $0x0,%eax\n      2b:\te8 00 00 00 00       \tcall   30 <hex_dump+0x30>\n      30:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n      37:\teb 46                \tjmp    7f <hex_dump+0x7f>\n      39:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n      3c:\t83 e0 1f             \tand    $0x1f,%eax\n      3f:\t85 c0                \ttest   %eax,%eax\n      41:\t75 14                \tjne    57 <hex_dump+0x57>\n      43:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n      46:\t89 c6                \tmov    %eax,%esi\n      48:\tbf 00 00 00 00       \tmov    $0x0,%edi\n      4d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n      52:\te8 00 00 00 00       \tcall   57 <hex_dump+0x57>\n      57:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n      5a:\t48 63 d0             \tmovslq %eax,%rdx\n      5d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n      61:\t48 01 d0             \tadd    %rdx,%rax\n      64:\t0f b6 00             \tmovzbl (%rax),%eax\n      67:\t0f b6 c0             \tmovzbl %al,%eax\n      6a:\t89 c6                \tmov    %eax,%esi\n      6c:\tbf 00 00 00 00       \tmov    $0x0,%edi\n      71:\tb8 00 00 00 00       \tmov    $0x0,%eax\n      76:\te8 00 00 00 00       \tcall   7b <hex_dump+0x7b>\n      7b:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n      7f:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n      82:\t3b 45 dc             \tcmp    -0x24(%rbp),%eax\n      85:\t7c b2                \tjl     39 <hex_dump+0x39>\n      87:\tbf 00 00 00 00       \tmov    $0x0,%edi\n      8c:\te8 00 00 00 00       \tcall   91 <hex_dump+0x91>\n      91:\t90                   \tnop\n      92:\tc9                   \tleave  \n      93:\tc3                   \tret    ", "code_s": "void hex_dump(long param_1, long <span class=\"supfact\">param_2</span>,\n              int <span class=\"supfact\">param_3</span>) {\n  uint <span class=\"supfact\">local_c</span>;\n  if (param_1 != Number) {\n    printf(String, param_1);\n  }\n  for (<span class=\"supfact\">local_c</span> = Number;\n       (int)<span class=\"supfact\">local_c</span> < <span class=\"supfact\">param_3</span>;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    if ((<span class=\"supfact\">local_c</span> & Number) == Number) {\n      printf(String, (ulong)<span class=\"supfact\">local_c</span>);\n    }\n    printf(String, (ulong) * (byte *)(<span class=\"supfact\">param_2</span> +\n                                      (int)<span class=\"supfact\">local_c</span>));\n  }\n  puts(String);\n  return;\n}", "code_t": "void hex_dump(char *str, u8 *<span class=\"supfact\">buf</span>, int <span class=\"supfact\">size</span>) {\n  int <span class=\"supfact\">size</span> - local;\n  u8 *<span class=\"supfact\">buf</span> - local;\n  char *str - local;\n  int <span class=\"supfact\">i</span>;\n  if (str != (char *)Number) {\n    printf(String, str);\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < <span class=\"supfact\">size</span>;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    if ((<span class=\"supfact\">i</span> & Number) == Number) {\n      printf(String, (ulong)(uint)<span class=\"supfact\">i</span>);\n    }\n    printf(String, (ulong)<span class=\"supfact\">buf</span>[<span class=\"supfact\">i</span>]);\n  }\n  puts(String);\n  return;\n}", "var": [{"name": "param_2", "type": "char * *", "pred_name": "buf", "ref_name": "buf", "ref_type": "u8 * *"}, {"name": "param_3", "type": "int", "pred_name": "len", "ref_name": "size", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "littledan", "repo_name": "libserver", "path": "littledan/libserver/22929d63a2a4db58fd0a3a4b77a5f8542bab1be8ea4fce359304b9618a7a786f", "path_in_repo": "littledan/libserver/libevent/evutil.o", "objdump": "0000000000000619 <evutil_socket_connect>:\n     619:\t55                   \tpush   %rbp\n     61a:\t48 89 e5             \tmov    %rsp,%rbp\n     61d:\t48 83 ec 30          \tsub    $0x30,%rsp\n     621:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     625:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n     629:\t89 55 dc             \tmov    %edx,-0x24(%rbp)\n     62c:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n     633:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     637:\t8b 00                \tmov    (%rax),%eax\n     639:\t85 c0                \ttest   %eax,%eax\n     63b:\t79 43                \tjns    680 <evutil_socket_connect+0x67>\n     63d:\tc7 45 fc 01 00 00 00 \tmovl   $0x1,-0x4(%rbp)\n     644:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     648:\t0f b7 00             \tmovzwl (%rax),%eax\n     64b:\t0f b7 c0             \tmovzwl %ax,%eax\n     64e:\tba 00 00 00 00       \tmov    $0x0,%edx\n     653:\tbe 01 00 00 00       \tmov    $0x1,%esi\n     658:\t89 c7                \tmov    %eax,%edi\n     65a:\te8 00 00 00 00       \tcall   65f <evutil_socket_connect+0x46>\n     65f:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n     663:\t89 02                \tmov    %eax,(%rdx)\n     665:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     669:\t8b 00                \tmov    (%rax),%eax\n     66b:\t85 c0                \ttest   %eax,%eax\n     66d:\t78 5d                \tjs     6cc <evutil_socket_connect+0xb3>\n     66f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     673:\t8b 00                \tmov    (%rax),%eax\n     675:\t89 c7                \tmov    %eax,%edi\n     677:\te8 00 00 00 00       \tcall   67c <evutil_socket_connect+0x63>\n     67c:\t85 c0                \ttest   %eax,%eax\n     67e:\t78 4f                \tjs     6cf <evutil_socket_connect+0xb6>\n     680:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n     683:\t48 8b 4d e0          \tmov    -0x20(%rbp),%rcx\n     687:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     68b:\t8b 00                \tmov    (%rax),%eax\n     68d:\t48 89 ce             \tmov    %rcx,%rsi\n     690:\t89 c7                \tmov    %eax,%edi\n     692:\te8 00 00 00 00       \tcall   697 <evutil_socket_connect+0x7e>\n     697:\t85 c0                \ttest   %eax,%eax\n     699:\t79 2a                \tjns    6c5 <evutil_socket_connect+0xac>\n     69b:\te8 00 00 00 00       \tcall   6a0 <evutil_socket_connect+0x87>\n     6a0:\t8b 00                \tmov    (%rax),%eax\n     6a2:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n     6a5:\t83 7d f8 04          \tcmpl   $0x4,-0x8(%rbp)\n     6a9:\t74 06                \tje     6b1 <evutil_socket_connect+0x98>\n     6ab:\t83 7d f8 73          \tcmpl   $0x73,-0x8(%rbp)\n     6af:\t75 07                \tjne    6b8 <evutil_socket_connect+0x9f>\n     6b1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     6b6:\teb 3d                \tjmp    6f5 <evutil_socket_connect+0xdc>\n     6b8:\t83 7d f8 6f          \tcmpl   $0x6f,-0x8(%rbp)\n     6bc:\t75 14                \tjne    6d2 <evutil_socket_connect+0xb9>\n     6be:\tb8 02 00 00 00       \tmov    $0x2,%eax\n     6c3:\teb 30                \tjmp    6f5 <evutil_socket_connect+0xdc>\n     6c5:\tb8 01 00 00 00       \tmov    $0x1,%eax\n     6ca:\teb 29                \tjmp    6f5 <evutil_socket_connect+0xdc>\n     6cc:\t90                   \tnop\n     6cd:\teb 04                \tjmp    6d3 <evutil_socket_connect+0xba>\n     6cf:\t90                   \tnop\n     6d0:\teb 01                \tjmp    6d3 <evutil_socket_connect+0xba>\n     6d2:\t90                   \tnop\n     6d3:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n     6d7:\t74 17                \tje     6f0 <evutil_socket_connect+0xd7>\n     6d9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     6dd:\t8b 00                \tmov    (%rax),%eax\n     6df:\t89 c7                \tmov    %eax,%edi\n     6e1:\te8 00 00 00 00       \tcall   6e6 <evutil_socket_connect+0xcd>\n     6e6:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     6ea:\tc7 00 ff ff ff ff    \tmovl   $0xffffffff,(%rax)\n     6f0:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n     6f5:\tc9                   \tleave  \n     6f6:\tc3                   \tret    ", "code_s": "undefined8 evutil_socket_connect(int *<span class=\"supfact\">param_1</span>,\n                                 sockaddr *param_2,\n                                 socklen_t <span class=\"supfact\">param_3</span>) {\n  bool bVar1;\n  int iVar2;\n  int *piVar3;\n  bVar1 = false;\n  if (*<span class=\"supfact\">param_1</span> < Number) {\n    bVar1 = true;\n    iVar2 = socket((uint)param_2->sa_family, Number, Number);\n    *<span class=\"supfact\">param_1</span> = iVar2;\n    if ((*<span class=\"supfact\">param_1</span> < Number) ||\n        (iVar2 = evutil_make_socket_nonblocking(*<span class=\"supfact\">param_1</span>),\n         iVar2 < Number))\n      goto LAB_001006d3;\n  }\n  iVar2 = connect(*<span class=\"supfact\">param_1</span>, param_2, <span class=\"supfact\">param_3</span>);\n  if (-Number < iVar2) {\n    return Number;\n  }\n  piVar3 = __errno_location();\n  iVar2 = *piVar3;\n  if ((iVar2 == Number) || (iVar2 == Number)) {\n    return Number;\n  }\n  if (iVar2 == Number) {\n    return Number;\n  }\nLAB_001006d3:\n  if (bVar1) {\n    evutil_closesocket(*<span class=\"supfact\">param_1</span>);\n    *<span class=\"supfact\">param_1</span> = -Number;\n  }\n  return Number;\n}", "code_t": "int evutil_socket_connect(int *<span class=\"supfact\">fd_ptr</span>, sockaddr *sa,\n                          int <span class=\"supfact\">socklen</span>) {\n  bool bVar1;\n  int iVar2;\n  int *piVar3;\n  int <span class=\"supfact\">socklen</span> - local;\n  sockaddr *sa - local;\n  int *<span class=\"supfact\">fd_ptr</span> - local;\n  int e;\n  int made_fd;\n  bVar1 = false;\n  if (*<span class=\"supfact\">fd_ptr</span> < Number) {\n    bVar1 = true;\n    iVar2 = socket((uint)sa->sa_family, Number, Number);\n    *<span class=\"supfact\">fd_ptr</span> = iVar2;\n    if ((*<span class=\"supfact\">fd_ptr</span> < Number) ||\n        (iVar2 = evutil_make_socket_nonblocking(*<span class=\"supfact\">fd_ptr</span>),\n         iVar2 < Number))\n      goto err;\n  }\n  iVar2 =\n      connect(*<span class=\"supfact\">fd_ptr</span>, (sockaddr *)sa, <span class=\"supfact\">socklen</span>);\n  if (-Number < iVar2) {\n    return Number;\n  }\n  piVar3 = __errno_location();\n  iVar2 = *piVar3;\n  if ((iVar2 == Number) || (iVar2 == Number)) {\n    return Number;\n  }\n  if (iVar2 == Number) {\n    return Number;\n  }\nerr:\n  if (bVar1) {\n    evutil_closesocket(*<span class=\"supfact\">fd_ptr</span>);\n    *<span class=\"supfact\">fd_ptr</span> = -Number;\n  }\n  return -Number;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "__unk__", "ref_name": "fd_ptr", "ref_type": "int * *"}, {"name": "param_3", "type": "disappear", "pred_name": "", "ref_name": "socklen", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "LingxiaoJIA", "repo_name": "qemu", "path": "LingxiaoJIA/qemu/2d7a5464769033efbf9d9baa7311d48368cb5901e8ab6851955e0f7d32ae9d9b", "path_in_repo": "LingxiaoJIA/qemu//async.o", "objdump": "00000000000000de <aio_bh_poll>:\n  de:\t55                   \tpush   %rbp\n  df:\t48 89 e5             \tmov    %rsp,%rbp\n  e2:\t48 83 ec 40          \tsub    $0x40,%rsp\n  e6:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n  ea:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n  f1:\t00 00 \n  f3:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  f7:\t31 c0                \txor    %eax,%eax\n  f9:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n  fd:\t8b 80 20 01 00 00    \tmov    0x120(%rax),%eax\n 103:\t8d 50 01             \tlea    0x1(%rax),%edx\n 106:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 10a:\t89 90 20 01 00 00    \tmov    %edx,0x120(%rax)\n 110:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n 117:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 11b:\t48 8b 80 18 01 00 00 \tmov    0x118(%rax),%rax\n 122:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 126:\te9 87 00 00 00       \tjmp    1b2 <aio_bh_poll+0xd4>\n 12b:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 12f:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n 133:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n 137:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 13b:\t0f b6 40 22          \tmovzbl 0x22(%rax),%eax\n 13f:\t83 f0 01             \txor    $0x1,%eax\n 142:\t84 c0                \ttest   %al,%al\n 144:\t74 64                \tje     1aa <aio_bh_poll+0xcc>\n 146:\tc6 45 da 00          \tmovb   $0x0,-0x26(%rbp)\n 14a:\t0f b6 45 da          \tmovzbl -0x26(%rbp),%eax\n 14e:\t0f b6 c0             \tmovzbl %al,%eax\n 151:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n 155:\t48 83 c2 20          \tadd    $0x20,%rdx\n 159:\t86 02                \txchg   %al,(%rdx)\n 15b:\t88 45 db             \tmov    %al,-0x25(%rbp)\n 15e:\t0f b6 45 db          \tmovzbl -0x25(%rbp),%eax\n 162:\t84 c0                \ttest   %al,%al\n 164:\t74 44                \tje     1aa <aio_bh_poll+0xcc>\n 166:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 16a:\t0f b6 40 21          \tmovzbl 0x21(%rax),%eax\n 16e:\t83 f0 01             \txor    $0x1,%eax\n 171:\t84 c0                \ttest   %al,%al\n 173:\t74 18                \tje     18d <aio_bh_poll+0xaf>\n 175:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 179:\t48 8b 80 30 01 00 00 \tmov    0x130(%rax),%rax\n 180:\t48 39 45 e0          \tcmp    %rax,-0x20(%rbp)\n 184:\t74 07                \tje     18d <aio_bh_poll+0xaf>\n 186:\tc7 45 dc 01 00 00 00 \tmovl   $0x1,-0x24(%rbp)\n 18d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 191:\tc6 40 21 00          \tmovb   $0x0,0x21(%rax)\n 195:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 199:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 19d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 1a1:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n 1a5:\t48 89 c7             \tmov    %rax,%rdi\n 1a8:\tff d2                \tcall   *%rdx\n 1aa:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 1ae:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 1b2:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n 1b7:\t0f 85 6e ff ff ff    \tjne    12b <aio_bh_poll+0x4d>\n 1bd:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 1c1:\t8b 80 20 01 00 00    \tmov    0x120(%rax),%eax\n 1c7:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n 1ca:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 1ce:\t89 90 20 01 00 00    \tmov    %edx,0x120(%rax)\n 1d4:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 1d8:\t8b 80 20 01 00 00    \tmov    0x120(%rax),%eax\n 1de:\t85 c0                \ttest   %eax,%eax\n 1e0:\t0f 85 80 00 00 00    \tjne    266 <aio_bh_poll+0x188>\n 1e6:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 1ea:\t48 05 f0 00 00 00    \tadd    $0xf0,%rax\n 1f0:\t48 89 c7             \tmov    %rax,%rdi\n 1f3:\te8 00 00 00 00       \tcall   1f8 <aio_bh_poll+0x11a>\n 1f8:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 1fc:\t48 05 18 01 00 00    \tadd    $0x118,%rax\n 202:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 206:\teb 40                \tjmp    248 <aio_bh_poll+0x16a>\n 208:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 20c:\t48 8b 00             \tmov    (%rax),%rax\n 20f:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 213:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 217:\t0f b6 40 22          \tmovzbl 0x22(%rax),%eax\n 21b:\t84 c0                \ttest   %al,%al\n 21d:\t74 1d                \tje     23c <aio_bh_poll+0x15e>\n 21f:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 223:\t48 8b 50 18          \tmov    0x18(%rax),%rdx\n 227:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 22b:\t48 89 10             \tmov    %rdx,(%rax)\n 22e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 232:\t48 89 c7             \tmov    %rax,%rdi\n 235:\te8 00 00 00 00       \tcall   23a <aio_bh_poll+0x15c>\n 23a:\teb 0c                \tjmp    248 <aio_bh_poll+0x16a>\n 23c:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 240:\t48 83 c0 18          \tadd    $0x18,%rax\n 244:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n 248:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 24c:\t48 8b 00             \tmov    (%rax),%rax\n 24f:\t48 85 c0             \ttest   %rax,%rax\n 252:\t75 b4                \tjne    208 <aio_bh_poll+0x12a>\n 254:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 258:\t48 05 f0 00 00 00    \tadd    $0xf0,%rax\n 25e:\t48 89 c7             \tmov    %rax,%rdi\n 261:\te8 00 00 00 00       \tcall   266 <aio_bh_poll+0x188>\n 266:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n 269:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n 26d:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n 274:\t00 00 \n 276:\t74 05                \tje     27d <aio_bh_poll+0x19f>\n 278:\te8 00 00 00 00       \tcall   27d <aio_bh_poll+0x19f>\n 27d:\tc9                   \tleave  \n 27e:\tc3                   \tret    ", "code_s": "undefined4 aio_bh_poll(long <span class=\"supfact\">param_1</span>) {\n  char cVar1;\n  long lVar2;\n  long lVar3;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  undefined4 <span class=\"supfact\">local_2c</span>;\n  long <span class=\"supfact\">local_28</span>;\n  long *<span class=\"supfact\">local_20</span>;\n  lVar2 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n      *(int *)(<span class=\"supfact\">param_1</span> + Number) + Number;\n  <span class=\"supfact\">local_2c</span> = Number;\n  lVar3 = *(long *)(<span class=\"supfact\">param_1</span> + Number);\n  while (<span class=\"supfact\">local_28</span> = lVar3, <span class=\"supfact\">local_28</span> != Number) {\n    lVar3 = *(long *)(<span class=\"supfact\">local_28</span> + Number);\n    if (*(char *)(<span class=\"supfact\">local_28</span> + Number) != String) {\n      LOCK();\n      cVar1 = *(char *)(<span class=\"supfact\">local_28</span> + Number);\n      *(char *)(<span class=\"supfact\">local_28</span> + Number) = String;\n      UNLOCK();\n      if (cVar1 != String) {\n        if ((*(char *)(<span class=\"supfact\">local_28</span> + Number) != String) &&\n            (<span class=\"supfact\">local_28</span> !=\n             *(long *)(<span class=\"supfact\">param_1</span> + Number))) {\n          <span class=\"supfact\">local_2c</span> = Number;\n        }\n        *(undefined *)(<span class=\"supfact\">local_28</span> + Number) = Number;\n        (**(code **)(<span class=\"supfact\">local_28</span> + Number))(\n            *(undefined8 *)(<span class=\"supfact\">local_28</span> + Number));\n      }\n    }\n  }\n  *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n      *(int *)(<span class=\"supfact\">param_1</span> + Number) + -Number;\n  if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n    qemu_mutex_lock(<span class=\"supfact\">param_1</span> + Number);\n    <span class=\"supfact\">local_20</span> = (long *)(<span class=\"supfact\">param_1</span> + Number);\n    while (*<span class=\"supfact\">local_20</span> != Number) {\n      lVar3 = *<span class=\"supfact\">local_20</span>;\n      if (*(char *)(lVar3 + Number) == String) {\n        <span class=\"supfact\">local_20</span> = (long *)(lVar3 + Number);\n      } else {\n        *<span class=\"supfact\">local_20</span> = *(long *)(lVar3 + Number);\n        g_free(lVar3);\n      }\n    }\n    qemu_mutex_unlock(<span class=\"supfact\">param_1</span> + Number);\n  }\n  if (lVar2 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">local_2c</span>;\n  }\n  __stack_chk_fail();\n}", "code_t": "int aio_bh_poll(AioContext *<span class=\"supfact\">ctx</span>) {\n  _Bool _Var1;\n  long lVar2;\n  QEMUBH *pQVar3;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  AioContext *<span class=\"supfact\">ctx</span> - local;\n  _Bool _new;\n  _Bool _old;\n  int <span class=\"supfact\">ret</span>;\n  QEMUBH *<span class=\"supfact\">bh</span>;\n  QEMUBH **<span class=\"supfact\">bhp</span>;\n  QEMUBH *next;\n  lVar2 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">ctx</span>->walking_bh = <span class=\"supfact\">ctx</span>->walking_bh + Number;\n  <span class=\"supfact\">ret</span> = Number;\n  pQVar3 = <span class=\"supfact\">ctx</span>->first_bh;\n  while (<span class=\"supfact\">bh</span> = pQVar3, <span class=\"supfact\">bh</span> != (QEMUBH *)Number) {\n    pQVar3 = <span class=\"supfact\">bh</span>->next;\n    if (<span class=\"supfact\">bh</span>->deleted != true) {\n      LOCK();\n      _Var1 = <span class=\"supfact\">bh</span>->scheduled;\n      <span class=\"supfact\">bh</span>->scheduled = false;\n      UNLOCK();\n      if (_Var1 != false) {\n        if ((<span class=\"supfact\">bh</span>->idle != true) &&\n            (<span class=\"supfact\">bh</span> != <span class=\"supfact\">ctx</span>->notify_dummy_bh)) {\n          <span class=\"supfact\">ret</span> = Number;\n        }\n        <span class=\"supfact\">bh</span>->idle = false;\n        (*<span class=\"supfact\">bh</span>->cb)(<span class=\"supfact\">bh</span>->opaque);\n      }\n    }\n  }\n  <span class=\"supfact\">ctx</span>->walking_bh = <span class=\"supfact\">ctx</span>->walking_bh + -Number;\n  if (<span class=\"supfact\">ctx</span>->walking_bh == Number) {\n    qemu_mutex_lock(&<span class=\"supfact\">ctx</span>->bh_lock);\n    <span class=\"supfact\">bhp</span> = &<span class=\"supfact\">ctx</span>->first_bh;\n    while (*<span class=\"supfact\">bhp</span> != (QEMUBH *)Number) {\n      pQVar3 = *<span class=\"supfact\">bhp</span>;\n      if (pQVar3->deleted == false) {\n        <span class=\"supfact\">bhp</span> = &pQVar3->next;\n      } else {\n        *<span class=\"supfact\">bhp</span> = pQVar3->next;\n        g_free(pQVar3);\n      }\n    }\n    qemu_mutex_unlock(&<span class=\"supfact\">ctx</span>->bh_lock);\n  }\n  if (lVar2 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">ret</span>;\n  }\n  __stack_chk_fail();\n}", "var": [{"name": "param_1", "type": "u64", "pred_name": "type", "ref_name": "ctx", "ref_type": "AioContext * *"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_2c", "type": "int", "pred_name": "ret", "ref_name": "ret", "ref_type": "int"}, {"name": "local_28", "type": "rb_node * *", "pred_name": "nd", "ref_name": "bh", "ref_type": "QEMUBH * *"}, {"name": "local_20", "type": "symbol * *", "pred_name": "sym", "ref_name": "bhp", "ref_type": "QEMUBH * * *"}], "body_in_train": false}, {"repo_owner": "bpillon", "repo_name": "android-ffmpeg-wrapper", "path": "bpillon/android-ffmpeg-wrapper/ba1cff2608504ca3b34e6f7884c235aab00d828df51cb6f4520ff842ce1e8ea9", "path_in_repo": "bpillon/android-ffmpeg-wrapper/jni/ffmpeg/libavcodec/h264idct.o", "objdump": "0000000000009308 <ff_h264_chroma422_dc_dequant_idct_12_c>:\n    9308:\t48 89 7c 24 a8       \tmov    %rdi,-0x58(%rsp)\n    930d:\t89 74 24 a4          \tmov    %esi,-0x5c(%rsp)\n    9311:\tc7 44 24 f8 20 00 00 \tmovl   $0x20,-0x8(%rsp)\n    9318:\t00 \n    9319:\tc7 44 24 f4 10 00 00 \tmovl   $0x10,-0xc(%rsp)\n    9320:\t00 \n    9321:\t48 8b 44 24 a8       \tmov    -0x58(%rsp),%rax\n    9326:\t48 89 44 24 e8       \tmov    %rax,-0x18(%rsp)\n    932b:\tc7 44 24 fc 00 00 00 \tmovl   $0x0,-0x4(%rsp)\n    9332:\t00 \n    9333:\te9 aa 00 00 00       \tjmp    93e2 <ff_h264_chroma422_dc_dequant_idct_12_c+0xda>\n    9338:\t8b 44 24 f8          \tmov    -0x8(%rsp),%eax\n    933c:\t0f af 44 24 fc       \timul   -0x4(%rsp),%eax\n    9341:\t48 98                \tcltq   \n    9343:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    934a:\t00 \n    934b:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    9350:\t48 01 d0             \tadd    %rdx,%rax\n    9353:\t8b 10                \tmov    (%rax),%edx\n    9355:\t8b 44 24 f8          \tmov    -0x8(%rsp),%eax\n    9359:\t0f af 44 24 fc       \timul   -0x4(%rsp),%eax\n    935e:\t89 c1                \tmov    %eax,%ecx\n    9360:\t8b 44 24 f4          \tmov    -0xc(%rsp),%eax\n    9364:\t01 c8                \tadd    %ecx,%eax\n    9366:\t48 98                \tcltq   \n    9368:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    936f:\t00 \n    9370:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    9375:\t48 01 c8             \tadd    %rcx,%rax\n    9378:\t8b 00                \tmov    (%rax),%eax\n    937a:\t8b 4c 24 fc          \tmov    -0x4(%rsp),%ecx\n    937e:\t01 c9                \tadd    %ecx,%ecx\n    9380:\t01 c2                \tadd    %eax,%edx\n    9382:\t48 63 c1             \tmovslq %ecx,%rax\n    9385:\t89 54 84 b0          \tmov    %edx,-0x50(%rsp,%rax,4)\n    9389:\t8b 44 24 f8          \tmov    -0x8(%rsp),%eax\n    938d:\t0f af 44 24 fc       \timul   -0x4(%rsp),%eax\n    9392:\t48 98                \tcltq   \n    9394:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    939b:\t00 \n    939c:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    93a1:\t48 01 d0             \tadd    %rdx,%rax\n    93a4:\t8b 10                \tmov    (%rax),%edx\n    93a6:\t8b 44 24 f8          \tmov    -0x8(%rsp),%eax\n    93aa:\t0f af 44 24 fc       \timul   -0x4(%rsp),%eax\n    93af:\t89 c1                \tmov    %eax,%ecx\n    93b1:\t8b 44 24 f4          \tmov    -0xc(%rsp),%eax\n    93b5:\t01 c8                \tadd    %ecx,%eax\n    93b7:\t48 98                \tcltq   \n    93b9:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    93c0:\t00 \n    93c1:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    93c6:\t48 01 c8             \tadd    %rcx,%rax\n    93c9:\t8b 00                \tmov    (%rax),%eax\n    93cb:\t8b 4c 24 fc          \tmov    -0x4(%rsp),%ecx\n    93cf:\t01 c9                \tadd    %ecx,%ecx\n    93d1:\t83 c1 01             \tadd    $0x1,%ecx\n    93d4:\t29 c2                \tsub    %eax,%edx\n    93d6:\t48 63 c1             \tmovslq %ecx,%rax\n    93d9:\t89 54 84 b0          \tmov    %edx,-0x50(%rsp,%rax,4)\n    93dd:\t83 44 24 fc 01       \taddl   $0x1,-0x4(%rsp)\n    93e2:\t83 7c 24 fc 03       \tcmpl   $0x3,-0x4(%rsp)\n    93e7:\t0f 8e 4b ff ff ff    \tjle    9338 <ff_h264_chroma422_dc_dequant_idct_12_c+0x30>\n    93ed:\tc7 44 24 fc 00 00 00 \tmovl   $0x0,-0x4(%rsp)\n    93f4:\t00 \n    93f5:\te9 72 01 00 00       \tjmp    956c <ff_h264_chroma422_dc_dequant_idct_12_c+0x264>\n    93fa:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    93fe:\t48 98                \tcltq   \n    9400:\t0f b6 80 00 00 00 00 \tmovzbl 0x0(%rax),%eax\n    9407:\t0f b6 c0             \tmovzbl %al,%eax\n    940a:\t89 44 24 e4          \tmov    %eax,-0x1c(%rsp)\n    940e:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    9412:\t48 98                \tcltq   \n    9414:\t8b 54 84 b0          \tmov    -0x50(%rsp,%rax,4),%edx\n    9418:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    941c:\t83 c0 04             \tadd    $0x4,%eax\n    941f:\t48 98                \tcltq   \n    9421:\t8b 44 84 b0          \tmov    -0x50(%rsp,%rax,4),%eax\n    9425:\t01 d0                \tadd    %edx,%eax\n    9427:\t89 44 24 e0          \tmov    %eax,-0x20(%rsp)\n    942b:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    942f:\t48 98                \tcltq   \n    9431:\t8b 54 84 b0          \tmov    -0x50(%rsp,%rax,4),%edx\n    9435:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    9439:\t83 c0 04             \tadd    $0x4,%eax\n    943c:\t48 98                \tcltq   \n    943e:\t8b 44 84 b0          \tmov    -0x50(%rsp,%rax,4),%eax\n    9442:\t29 c2                \tsub    %eax,%edx\n    9444:\t89 d0                \tmov    %edx,%eax\n    9446:\t89 44 24 dc          \tmov    %eax,-0x24(%rsp)\n    944a:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    944e:\t83 c0 02             \tadd    $0x2,%eax\n    9451:\t48 98                \tcltq   \n    9453:\t8b 54 84 b0          \tmov    -0x50(%rsp,%rax,4),%edx\n    9457:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    945b:\t83 c0 06             \tadd    $0x6,%eax\n    945e:\t48 98                \tcltq   \n    9460:\t8b 44 84 b0          \tmov    -0x50(%rsp,%rax,4),%eax\n    9464:\t29 c2                \tsub    %eax,%edx\n    9466:\t89 d0                \tmov    %edx,%eax\n    9468:\t89 44 24 d8          \tmov    %eax,-0x28(%rsp)\n    946c:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    9470:\t83 c0 02             \tadd    $0x2,%eax\n    9473:\t48 98                \tcltq   \n    9475:\t8b 54 84 b0          \tmov    -0x50(%rsp,%rax,4),%edx\n    9479:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    947d:\t83 c0 06             \tadd    $0x6,%eax\n    9480:\t48 98                \tcltq   \n    9482:\t8b 44 84 b0          \tmov    -0x50(%rsp,%rax,4),%eax\n    9486:\t01 d0                \tadd    %edx,%eax\n    9488:\t89 44 24 d4          \tmov    %eax,-0x2c(%rsp)\n    948c:\t8b 54 24 e0          \tmov    -0x20(%rsp),%edx\n    9490:\t8b 44 24 d4          \tmov    -0x2c(%rsp),%eax\n    9494:\t01 d0                \tadd    %edx,%eax\n    9496:\t0f af 44 24 a4       \timul   -0x5c(%rsp),%eax\n    949b:\t8d 90 80 00 00 00    \tlea    0x80(%rax),%edx\n    94a1:\t8b 44 24 e4          \tmov    -0x1c(%rsp),%eax\n    94a5:\t48 98                \tcltq   \n    94a7:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    94ae:\t00 \n    94af:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    94b4:\t48 01 c8             \tadd    %rcx,%rax\n    94b7:\tc1 fa 08             \tsar    $0x8,%edx\n    94ba:\t89 10                \tmov    %edx,(%rax)\n    94bc:\t8b 54 24 dc          \tmov    -0x24(%rsp),%edx\n    94c0:\t8b 44 24 d8          \tmov    -0x28(%rsp),%eax\n    94c4:\t01 d0                \tadd    %edx,%eax\n    94c6:\t0f af 44 24 a4       \timul   -0x5c(%rsp),%eax\n    94cb:\t8d 88 80 00 00 00    \tlea    0x80(%rax),%ecx\n    94d1:\t8b 54 24 f8          \tmov    -0x8(%rsp),%edx\n    94d5:\t8b 44 24 e4          \tmov    -0x1c(%rsp),%eax\n    94d9:\t01 d0                \tadd    %edx,%eax\n    94db:\t48 98                \tcltq   \n    94dd:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    94e4:\t00 \n    94e5:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    94ea:\t48 01 d0             \tadd    %rdx,%rax\n    94ed:\tc1 f9 08             \tsar    $0x8,%ecx\n    94f0:\t89 ca                \tmov    %ecx,%edx\n    94f2:\t89 10                \tmov    %edx,(%rax)\n    94f4:\t8b 44 24 dc          \tmov    -0x24(%rsp),%eax\n    94f8:\t2b 44 24 d8          \tsub    -0x28(%rsp),%eax\n    94fc:\t0f af 44 24 a4       \timul   -0x5c(%rsp),%eax\n    9501:\t8d 90 80 00 00 00    \tlea    0x80(%rax),%edx\n    9507:\t8b 44 24 f8          \tmov    -0x8(%rsp),%eax\n    950b:\t8d 0c 00             \tlea    (%rax,%rax,1),%ecx\n    950e:\t8b 44 24 e4          \tmov    -0x1c(%rsp),%eax\n    9512:\t01 c8                \tadd    %ecx,%eax\n    9514:\t48 98                \tcltq   \n    9516:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    951d:\t00 \n    951e:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    9523:\t48 01 c8             \tadd    %rcx,%rax\n    9526:\tc1 fa 08             \tsar    $0x8,%edx\n    9529:\t89 10                \tmov    %edx,(%rax)\n    952b:\t8b 44 24 e0          \tmov    -0x20(%rsp),%eax\n    952f:\t2b 44 24 d4          \tsub    -0x2c(%rsp),%eax\n    9533:\t0f af 44 24 a4       \timul   -0x5c(%rsp),%eax\n    9538:\t8d 88 80 00 00 00    \tlea    0x80(%rax),%ecx\n    953e:\t8b 54 24 f8          \tmov    -0x8(%rsp),%edx\n    9542:\t89 d0                \tmov    %edx,%eax\n    9544:\t01 c0                \tadd    %eax,%eax\n    9546:\t01 c2                \tadd    %eax,%edx\n    9548:\t8b 44 24 e4          \tmov    -0x1c(%rsp),%eax\n    954c:\t01 d0                \tadd    %edx,%eax\n    954e:\t48 98                \tcltq   \n    9550:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9557:\t00 \n    9558:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    955d:\t48 01 d0             \tadd    %rdx,%rax\n    9560:\tc1 f9 08             \tsar    $0x8,%ecx\n    9563:\t89 ca                \tmov    %ecx,%edx\n    9565:\t89 10                \tmov    %edx,(%rax)\n    9567:\t83 44 24 fc 01       \taddl   $0x1,-0x4(%rsp)\n    956c:\t83 7c 24 fc 01       \tcmpl   $0x1,-0x4(%rsp)\n    9571:\t0f 8e 83 fe ff ff    \tjle    93fa <ff_h264_chroma422_dc_dequant_idct_12_c+0xf2>\n    9577:\t90                   \tnop\n    9578:\t90                   \tnop\n    9579:\tc3                   \tret    ", "code_s": "void ff_h264_chroma422_dc_dequant_idct_12_c(long param_1,\n                                            int <span class=\"supfact\">param_2</span>) {\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  uint <span class=\"supfact\">uVar9</span>;\n  int <span class=\"supfact\">aiStack_50</span>[Number];\n  long <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_c</span>;\n  int <span class=\"supfact\">local_8</span>;\n  int <span class=\"supfact\">local_4</span>;\n  <span class=\"supfact\">local_8</span> = Number;\n  <span class=\"supfact\">local_c</span> = Number;\n  <span class=\"supfact\">local_18</span> = param_1;\n  for (<span class=\"supfact\">local_4</span> = Number; <span class=\"supfact\">local_4</span> < Number;\n       <span class=\"supfact\">local_4</span> = <span class=\"supfact\">local_4</span> + Number) {\n    <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> * Number] =\n        *(int *)(<span class=\"supfact\">local_18</span> +\n                 (long)(<span class=\"supfact\">local_8</span> * <span class=\"supfact\">local_4</span>) *\n                     Number) +\n        *(int *)(<span class=\"supfact\">local_18</span> +\n                 (long)(<span class=\"supfact\">local_c</span> +\n                        <span class=\"supfact\">local_8</span> * <span class=\"supfact\">local_4</span>) *\n                     Number);\n    <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> * Number + Number] =\n        *(int *)(<span class=\"supfact\">local_18</span> +\n                 (long)(<span class=\"supfact\">local_8</span> * <span class=\"supfact\">local_4</span>) *\n                     Number) -\n        *(int *)(<span class=\"supfact\">local_18</span> +\n                 (long)(<span class=\"supfact\">local_c</span> +\n                        <span class=\"supfact\">local_8</span> * <span class=\"supfact\">local_4</span>) *\n                     Number);\n  }\n  for (<span class=\"supfact\">local_4</span> = Number; <span class=\"supfact\">local_4</span> < Number;\n       <span class=\"supfact\">local_4</span> = <span class=\"supfact\">local_4</span> + Number) {\n    <span class=\"supfact\">uVar9</span> =\n        (uint)(byte)(&DAT_0010bd89)[<span class=\"supfact\">local_4</span>];\n    iVar1 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span>];\n    iVar2 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> + Number];\n    iVar3 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span>];\n    iVar4 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> + Number];\n    iVar5 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> + Number];\n    iVar6 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> + Number];\n    iVar7 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> + Number];\n    iVar8 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> + Number];\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)<span class=\"supfact\">uVar9</span> * Number) =\n        (iVar8 + iVar7 + iVar2 + iVar1) * <span class=\"supfact\">param_2</span> + Number >>\n        Number;\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)(<span class=\"supfact\">uVar9</span> + <span class=\"supfact\">local_8</span>) *\n                 Number) =\n        ((iVar5 - iVar6) + (iVar3 - iVar4)) * <span class=\"supfact\">param_2</span> +\n            Number >>\n        Number;\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)(<span class=\"supfact\">uVar9</span> +\n                         <span class=\"supfact\">local_8</span> * Number) *\n                 Number) =\n        ((iVar3 - iVar4) - (iVar5 - iVar6)) * <span class=\"supfact\">param_2</span> +\n            Number >>\n        Number;\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)(<span class=\"supfact\">uVar9</span> +\n                         <span class=\"supfact\">local_8</span> * Number) *\n                 Number) =\n        ((iVar2 + iVar1) - (iVar8 + iVar7)) * <span class=\"supfact\">param_2</span> +\n            Number >>\n        Number;\n  }\n  return;\n}", "code_t": "void ff_h264_chroma422_dc_dequant_idct_12_c(int16_t *_block,\n                                            int <span class=\"supfact\">qmul</span>) {\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  uint <span class=\"supfact\">uVar9</span>;\n  int <span class=\"supfact\">qmul</span> - local;\n  int16_t *_block - local;\n  int <span class=\"supfact\">temp</span>[Number];\n  int z3;\n  int z2;\n  int z1;\n  int z0;\n  int offset;\n  int32_t *<span class=\"supfact\">block</span>;\n  int <span class=\"supfact\">xStride</span>;\n  int <span class=\"supfact\">stride</span>;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">stride</span> = Number;\n  <span class=\"supfact\">xStride</span> = Number;\n  <span class=\"supfact\">block</span> = (int32_t *)_block;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> * Number] =\n        <span class=\"supfact\">block</span>[<span class=\"supfact\">stride</span> * <span class=\"supfact\">i</span>] +\n        <span class=\"supfact\">block</span>[<span class=\"supfact\">xStride</span> +\n                              <span class=\"supfact\">stride</span> * <span class=\"supfact\">i</span>];\n    <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> * Number + Number] =\n        <span class=\"supfact\">block</span>[<span class=\"supfact\">stride</span> * <span class=\"supfact\">i</span>] -\n        <span class=\"supfact\">block</span>[<span class=\"supfact\">xStride</span> +\n                              <span class=\"supfact\">stride</span> * <span class=\"supfact\">i</span>];\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    <span class=\"supfact\">uVar9</span> = (uint)String[<span class=\"supfact\">i</span>];\n    iVar1 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span>];\n    iVar2 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar3 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span>];\n    iVar4 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar5 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar6 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar7 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar8 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    <span class=\"supfact\">block</span>[(int)<span class=\"supfact\">uVar9</span>] =\n        (iVar8 + iVar7 + iVar2 + iVar1) * <span class=\"supfact\">qmul</span> + Number >>\n        Number;\n    <span class=\"supfact\">block</span>[(int)(<span class=\"supfact\">uVar9</span> +\n                                <span class=\"supfact\">stride</span>)] =\n        ((iVar5 - iVar6) + (iVar3 - iVar4)) * <span class=\"supfact\">qmul</span> + Number >>\n        Number;\n    <span class=\"supfact\">block</span>[(int)(<span class=\"supfact\">uVar9</span> +\n                                <span class=\"supfact\">stride</span> * Number)] =\n        ((iVar3 - iVar4) - (iVar5 - iVar6)) * <span class=\"supfact\">qmul</span> + Number >>\n        Number;\n    <span class=\"supfact\">block</span>[(int)(<span class=\"supfact\">uVar9</span> +\n                                <span class=\"supfact\">stride</span> * Number)] =\n        ((iVar2 + iVar1) - (iVar8 + iVar7)) * <span class=\"supfact\">qmul</span> + Number >>\n        Number;\n  }\n  return;\n}", "var": [{"name": "param_2", "type": "int", "pred_name": "qmul", "ref_name": "qmul", "ref_type": "int"}, {"name": "uVar9", "type": "uint", "pred_name": "uVar9", "ref_name": "uVar9", "ref_type": "uint"}, {"name": "aiStack_50", "type": "int[8][8]", "pred_name": "temp", "ref_name": "temp", "ref_type": "int[8][8]"}, {"name": "local_18", "type": "int32_t * *", "pred_name": "block", "ref_name": "block", "ref_type": "int32_t * *"}, {"name": "local_c", "type": "int", "pred_name": "xStride", "ref_name": "xStride", "ref_type": "int"}, {"name": "local_8", "type": "int", "pred_name": "stride", "ref_name": "stride", "ref_type": "int"}, {"name": "local_4", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "HusterWan", "repo_name": "qemu-1.7.2-stable", "path": "HusterWan/qemu-1.7.2-stable/2bd63672e1bcd37f4d24115e10c93b19be9085c1bc8c8814e669872a622954b0", "path_in_repo": "HusterWan/qemu-1.7.2-stable//block/qcow2-refcount.o", "objdump": "000000000000255e <qcow2_update_snapshot_refcount>:\n    255e:\t55                   \tpush   %rbp\n    255f:\t48 89 e5             \tmov    %rsp,%rbp\n    2562:\t53                   \tpush   %rbx\n    2563:\t48 81 ec 98 00 00 00 \tsub    $0x98,%rsp\n    256a:\t48 89 bd 78 ff ff ff \tmov    %rdi,-0x88(%rbp)\n    2571:\t48 89 b5 70 ff ff ff \tmov    %rsi,-0x90(%rbp)\n    2578:\t89 95 6c ff ff ff    \tmov    %edx,-0x94(%rbp)\n    257e:\t89 8d 68 ff ff ff    \tmov    %ecx,-0x98(%rbp)\n    2584:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    258b:\t00 00 \n    258d:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    2591:\t31 c0                \txor    %eax,%eax\n    2593:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    259a:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n    259e:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    25a2:\tc7 45 88 00 00 00 00 \tmovl   $0x0,-0x78(%rbp)\n    25a9:\t48 c7 45 98 00 00 00 \tmovq   $0x0,-0x68(%rbp)\n    25b0:\t00 \n    25b1:\t48 c7 45 a0 00 00 00 \tmovq   $0x0,-0x60(%rbp)\n    25b8:\t00 \n    25b9:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    25bf:\t48 98                \tcltq   \n    25c1:\t48 c1 e0 03          \tshl    $0x3,%rax\n    25c5:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    25c9:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    25cd:\tc6 80 20 03 00 00 01 \tmovb   $0x1,0x320(%rax)\n    25d4:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    25d8:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n    25dc:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n    25e3:\t48 39 c2             \tcmp    %rax,%rdx\n    25e6:\t0f 84 8f 00 00 00    \tje     267b <qcow2_update_snapshot_refcount+0x11d>\n    25ec:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    25f0:\tbe 00 02 00 00       \tmov    $0x200,%esi\n    25f5:\t48 89 c7             \tmov    %rax,%rdi\n    25f8:\te8 5a df ff ff       \tcall   557 <align_offset>\n    25fd:\t48 89 c7             \tmov    %rax,%rdi\n    2600:\te8 00 00 00 00       \tcall   2605 <qcow2_update_snapshot_refcount+0xa7>\n    2605:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n    2609:\t48 c7 45 b8 01 00 00 \tmovq   $0x1,-0x48(%rbp)\n    2610:\t00 \n    2611:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2615:\t89 c1                \tmov    %eax,%ecx\n    2617:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    261e:\t48 8b 80 68 08 00 00 \tmov    0x868(%rax),%rax\n    2625:\t48 8b 55 a0          \tmov    -0x60(%rbp),%rdx\n    2629:\t48 8b b5 70 ff ff ff \tmov    -0x90(%rbp),%rsi\n    2630:\t48 89 c7             \tmov    %rax,%rdi\n    2633:\te8 00 00 00 00       \tcall   2638 <qcow2_update_snapshot_refcount+0xda>\n    2638:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    263b:\t83 7d 90 00          \tcmpl   $0x0,-0x70(%rbp)\n    263f:\t0f 88 23 04 00 00    \tjs     2a68 <qcow2_update_snapshot_refcount+0x50a>\n    2645:\tc7 45 80 00 00 00 00 \tmovl   $0x0,-0x80(%rbp)\n    264c:\teb 20                \tjmp    266e <qcow2_update_snapshot_refcount+0x110>\n    264e:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2651:\t48 98                \tcltq   \n    2653:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    265a:\t00 \n    265b:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    265f:\t48 01 d0             \tadd    %rdx,%rax\n    2662:\t48 89 c7             \tmov    %rax,%rdi\n    2665:\te8 68 dc ff ff       \tcall   2d2 <be64_to_cpus>\n    266a:\t83 45 80 01          \taddl   $0x1,-0x80(%rbp)\n    266e:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2671:\t3b 85 6c ff ff ff    \tcmp    -0x94(%rbp),%eax\n    2677:\t7c d5                \tjl     264e <qcow2_update_snapshot_refcount+0xf0>\n    2679:\teb 42                \tjmp    26bd <qcow2_update_snapshot_refcount+0x15f>\n    267b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    267f:\t8b 40 14             \tmov    0x14(%rax),%eax\n    2682:\t39 85 6c ff ff ff    \tcmp    %eax,-0x94(%rbp)\n    2688:\t74 1f                \tje     26a9 <qcow2_update_snapshot_refcount+0x14b>\n    268a:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 2691 <qcow2_update_snapshot_refcount+0x133>\n    2691:\tba 61 03 00 00       \tmov    $0x361,%edx\n    2696:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 269d <qcow2_update_snapshot_refcount+0x13f>\n    269d:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 26a4 <qcow2_update_snapshot_refcount+0x146>\n    26a4:\te8 00 00 00 00       \tcall   26a9 <qcow2_update_snapshot_refcount+0x14b>\n    26a9:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    26ad:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n    26b1:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n    26b5:\t48 c7 45 b8 00 00 00 \tmovq   $0x0,-0x48(%rbp)\n    26bc:\t00 \n    26bd:\tc7 45 80 00 00 00 00 \tmovl   $0x0,-0x80(%rbp)\n    26c4:\te9 7c 03 00 00       \tjmp    2a45 <qcow2_update_snapshot_refcount+0x4e7>\n    26c9:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    26cc:\t48 98                \tcltq   \n    26ce:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    26d5:\t00 \n    26d6:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    26da:\t48 01 d0             \tadd    %rdx,%rax\n    26dd:\t48 8b 00             \tmov    (%rax),%rax\n    26e0:\t48 89 45 a8          \tmov    %rax,-0x58(%rbp)\n    26e4:\t48 83 7d a8 00       \tcmpq   $0x0,-0x58(%rbp)\n    26e9:\t0f 84 52 03 00 00    \tje     2a41 <qcow2_update_snapshot_refcount+0x4e3>\n    26ef:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    26f3:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    26f7:\t48 b8 00 ff ff ff ff \tmovabs $0xffffffffffff00,%rax\n    26fe:\tff ff 00 \n    2701:\t48 21 45 a8          \tand    %rax,-0x58(%rbp)\n    2705:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2709:\t48 8b 70 40          \tmov    0x40(%rax),%rsi\n    270d:\t48 8d 4d 98          \tlea    -0x68(%rbp),%rcx\n    2711:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    2715:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    271c:\t48 89 c7             \tmov    %rax,%rdi\n    271f:\te8 00 00 00 00       \tcall   2724 <qcow2_update_snapshot_refcount+0x1c6>\n    2724:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    2727:\t83 7d 90 00          \tcmpl   $0x0,-0x70(%rbp)\n    272b:\t0f 88 3a 03 00 00    \tjs     2a6b <qcow2_update_snapshot_refcount+0x50d>\n    2731:\tc7 45 84 00 00 00 00 \tmovl   $0x0,-0x7c(%rbp)\n    2738:\te9 14 02 00 00       \tjmp    2951 <qcow2_update_snapshot_refcount+0x3f3>\n    273d:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2741:\t8b 55 84             \tmov    -0x7c(%rbp),%edx\n    2744:\t48 63 d2             \tmovslq %edx,%rdx\n    2747:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    274b:\t48 01 d0             \tadd    %rdx,%rax\n    274e:\t48 8b 00             \tmov    (%rax),%rax\n    2751:\t48 89 c7             \tmov    %rax,%rdi\n    2754:\te8 ff da ff ff       \tcall   258 <be64_to_cpu>\n    2759:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n    275d:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    2761:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    2765:\t48 b8 ff ff ff ff ff \tmovabs $0x7fffffffffffffff,%rax\n    276c:\tff ff 7f \n    276f:\t48 21 45 b0          \tand    %rax,-0x50(%rbp)\n    2773:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    2777:\t48 89 c7             \tmov    %rax,%rdi\n    277a:\te8 2f de ff ff       \tcall   5ae <qcow2_get_cluster_type>\n    277f:\t83 f8 03             \tcmp    $0x3,%eax\n    2782:\t0f 84 ac 00 00 00    \tje     2834 <qcow2_update_snapshot_refcount+0x2d6>\n    2788:\t83 f8 03             \tcmp    $0x3,%eax\n    278b:\t0f 8f 35 01 00 00    \tjg     28c6 <qcow2_update_snapshot_refcount+0x368>\n    2791:\t83 f8 02             \tcmp    $0x2,%eax\n    2794:\t74 1f                \tje     27b5 <qcow2_update_snapshot_refcount+0x257>\n    2796:\t83 f8 02             \tcmp    $0x2,%eax\n    2799:\t0f 8f 27 01 00 00    \tjg     28c6 <qcow2_update_snapshot_refcount+0x368>\n    279f:\t85 c0                \ttest   %eax,%eax\n    27a1:\t0f 84 16 01 00 00    \tje     28bd <qcow2_update_snapshot_refcount+0x35f>\n    27a7:\t83 f8 01             \tcmp    $0x1,%eax\n    27aa:\t0f 84 84 00 00 00    \tje     2834 <qcow2_update_snapshot_refcount+0x2d6>\n    27b0:\te9 11 01 00 00       \tjmp    28c6 <qcow2_update_snapshot_refcount+0x368>\n    27b5:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    27b9:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n    27bc:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n    27c0:\t89 c1                \tmov    %eax,%ecx\n    27c2:\t48 d3 ea             \tshr    %cl,%rdx\n    27c5:\t48 89 d0             \tmov    %rdx,%rax\n    27c8:\t89 c2                \tmov    %eax,%edx\n    27ca:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    27ce:\t8b 40 20             \tmov    0x20(%rax),%eax\n    27d1:\t21 d0                \tand    %edx,%eax\n    27d3:\t83 c0 01             \tadd    $0x1,%eax\n    27d6:\t89 45 94             \tmov    %eax,-0x6c(%rbp)\n    27d9:\t83 bd 68 ff ff ff 00 \tcmpl   $0x0,-0x98(%rbp)\n    27e0:\t74 46                \tje     2828 <qcow2_update_snapshot_refcount+0x2ca>\n    27e2:\t8b 45 94             \tmov    -0x6c(%rbp),%eax\n    27e5:\tc1 e0 09             \tshl    $0x9,%eax\n    27e8:\t48 63 d0             \tmovslq %eax,%rdx\n    27eb:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    27ef:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n    27f3:\t48 23 45 b0          \tand    -0x50(%rbp),%rax\n    27f7:\t48 25 00 fe ff ff    \tand    $0xfffffffffffffe00,%rax\n    27fd:\t48 89 c6             \tmov    %rax,%rsi\n    2800:\t8b 8d 68 ff ff ff    \tmov    -0x98(%rbp),%ecx\n    2806:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    280d:\t41 b8 03 00 00 00    \tmov    $0x3,%r8d\n    2813:\t48 89 c7             \tmov    %rax,%rdi\n    2816:\te8 49 f2 ff ff       \tcall   1a64 <update_refcount>\n    281b:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    281e:\t83 7d 90 00          \tcmpl   $0x0,-0x70(%rbp)\n    2822:\t0f 88 46 02 00 00    \tjs     2a6e <qcow2_update_snapshot_refcount+0x510>\n    2828:\tc7 45 8c 02 00 00 00 \tmovl   $0x2,-0x74(%rbp)\n    282f:\te9 98 00 00 00       \tjmp    28cc <qcow2_update_snapshot_refcount+0x36e>\n    2834:\t48 b8 00 ff ff ff ff \tmovabs $0xffffffffffff00,%rax\n    283b:\tff ff 00 \n    283e:\t48 23 45 b0          \tand    -0x50(%rbp),%rax\n    2842:\t48 89 c2             \tmov    %rax,%rdx\n    2845:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2849:\t8b 00                \tmov    (%rax),%eax\n    284b:\t89 c1                \tmov    %eax,%ecx\n    284d:\t48 d3 ea             \tshr    %cl,%rdx\n    2850:\t48 89 d0             \tmov    %rdx,%rax\n    2853:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    2857:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n    285c:\t75 09                \tjne    2867 <qcow2_update_snapshot_refcount+0x309>\n    285e:\tc7 45 8c 00 00 00 00 \tmovl   $0x0,-0x74(%rbp)\n    2865:\teb 65                \tjmp    28cc <qcow2_update_snapshot_refcount+0x36e>\n    2867:\t83 bd 68 ff ff ff 00 \tcmpl   $0x0,-0x98(%rbp)\n    286e:\t74 23                \tje     2893 <qcow2_update_snapshot_refcount+0x335>\n    2870:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n    2874:\t8b 95 68 ff ff ff    \tmov    -0x98(%rbp),%edx\n    287a:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    2881:\tb9 03 00 00 00       \tmov    $0x3,%ecx\n    2886:\t48 89 c7             \tmov    %rax,%rdi\n    2889:\te8 00 00 00 00       \tcall   288e <qcow2_update_snapshot_refcount+0x330>\n    288e:\t89 45 8c             \tmov    %eax,-0x74(%rbp)\n    2891:\teb 19                \tjmp    28ac <qcow2_update_snapshot_refcount+0x34e>\n    2893:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    2897:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    289e:\t48 89 d6             \tmov    %rdx,%rsi\n    28a1:\t48 89 c7             \tmov    %rax,%rdi\n    28a4:\te8 52 e0 ff ff       \tcall   8fb <get_refcount>\n    28a9:\t89 45 8c             \tmov    %eax,-0x74(%rbp)\n    28ac:\t83 7d 8c 00          \tcmpl   $0x0,-0x74(%rbp)\n    28b0:\t79 19                \tjns    28cb <qcow2_update_snapshot_refcount+0x36d>\n    28b2:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    28b5:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    28b8:\te9 b5 01 00 00       \tjmp    2a72 <qcow2_update_snapshot_refcount+0x514>\n    28bd:\tc7 45 8c 00 00 00 00 \tmovl   $0x0,-0x74(%rbp)\n    28c4:\teb 06                \tjmp    28cc <qcow2_update_snapshot_refcount+0x36e>\n    28c6:\te8 00 00 00 00       \tcall   28cb <qcow2_update_snapshot_refcount+0x36d>\n    28cb:\t90                   \tnop\n    28cc:\t83 7d 8c 01          \tcmpl   $0x1,-0x74(%rbp)\n    28d0:\t75 0e                \tjne    28e0 <qcow2_update_snapshot_refcount+0x382>\n    28d2:\t48 b8 00 00 00 00 00 \tmovabs $0x8000000000000000,%rax\n    28d9:\t00 00 80 \n    28dc:\t48 09 45 b0          \tor     %rax,-0x50(%rbp)\n    28e0:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    28e4:\t48 39 45 b0          \tcmp    %rax,-0x50(%rbp)\n    28e8:\t74 63                \tje     294d <qcow2_update_snapshot_refcount+0x3ef>\n    28ea:\t83 bd 68 ff ff ff 00 \tcmpl   $0x0,-0x98(%rbp)\n    28f1:\t7e 22                \tjle    2915 <qcow2_update_snapshot_refcount+0x3b7>\n    28f3:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    28f7:\t48 8b 50 48          \tmov    0x48(%rax),%rdx\n    28fb:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    28ff:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    2903:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    290a:\t48 89 ce             \tmov    %rcx,%rsi\n    290d:\t48 89 c7             \tmov    %rax,%rdi\n    2910:\te8 00 00 00 00       \tcall   2915 <qcow2_update_snapshot_refcount+0x3b7>\n    2915:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2919:\t8b 55 84             \tmov    -0x7c(%rbp),%edx\n    291c:\t48 63 d2             \tmovslq %edx,%rdx\n    291f:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    2923:\t48 8d 1c 10          \tlea    (%rax,%rdx,1),%rbx\n    2927:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    292b:\t48 89 c7             \tmov    %rax,%rdi\n    292e:\te8 62 d9 ff ff       \tcall   295 <cpu_to_be64>\n    2933:\t48 89 03             \tmov    %rax,(%rbx)\n    2936:\t48 8b 55 98          \tmov    -0x68(%rbp),%rdx\n    293a:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    293e:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n    2942:\t48 89 d6             \tmov    %rdx,%rsi\n    2945:\t48 89 c7             \tmov    %rax,%rdi\n    2948:\te8 00 00 00 00       \tcall   294d <qcow2_update_snapshot_refcount+0x3ef>\n    294d:\t83 45 84 01          \taddl   $0x1,-0x7c(%rbp)\n    2951:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2955:\t8b 40 10             \tmov    0x10(%rax),%eax\n    2958:\t39 45 84             \tcmp    %eax,-0x7c(%rbp)\n    295b:\t0f 8c dc fd ff ff    \tjl     273d <qcow2_update_snapshot_refcount+0x1df>\n    2961:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2965:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    2969:\t48 8d 55 98          \tlea    -0x68(%rbp),%rdx\n    296d:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    2974:\t48 89 ce             \tmov    %rcx,%rsi\n    2977:\t48 89 c7             \tmov    %rax,%rdi\n    297a:\te8 00 00 00 00       \tcall   297f <qcow2_update_snapshot_refcount+0x421>\n    297f:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    2982:\t83 7d 90 00          \tcmpl   $0x0,-0x70(%rbp)\n    2986:\t0f 88 e5 00 00 00    \tjs     2a71 <qcow2_update_snapshot_refcount+0x513>\n    298c:\t83 bd 68 ff ff ff 00 \tcmpl   $0x0,-0x98(%rbp)\n    2993:\t74 34                \tje     29c9 <qcow2_update_snapshot_refcount+0x46b>\n    2995:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2999:\t8b 00                \tmov    (%rax),%eax\n    299b:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    299f:\t89 c1                \tmov    %eax,%ecx\n    29a1:\t48 d3 ea             \tshr    %cl,%rdx\n    29a4:\t48 89 d0             \tmov    %rdx,%rax\n    29a7:\t48 89 c6             \tmov    %rax,%rsi\n    29aa:\t8b 95 68 ff ff ff    \tmov    -0x98(%rbp),%edx\n    29b0:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    29b7:\tb9 03 00 00 00       \tmov    $0x3,%ecx\n    29bc:\t48 89 c7             \tmov    %rax,%rdi\n    29bf:\te8 00 00 00 00       \tcall   29c4 <qcow2_update_snapshot_refcount+0x466>\n    29c4:\t89 45 8c             \tmov    %eax,-0x74(%rbp)\n    29c7:\teb 2a                \tjmp    29f3 <qcow2_update_snapshot_refcount+0x495>\n    29c9:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    29cd:\t8b 00                \tmov    (%rax),%eax\n    29cf:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    29d3:\t89 c1                \tmov    %eax,%ecx\n    29d5:\t48 d3 ea             \tshr    %cl,%rdx\n    29d8:\t48 89 d0             \tmov    %rdx,%rax\n    29db:\t48 89 c2             \tmov    %rax,%rdx\n    29de:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    29e5:\t48 89 d6             \tmov    %rdx,%rsi\n    29e8:\t48 89 c7             \tmov    %rax,%rdi\n    29eb:\te8 0b df ff ff       \tcall   8fb <get_refcount>\n    29f0:\t89 45 8c             \tmov    %eax,-0x74(%rbp)\n    29f3:\t83 7d 8c 00          \tcmpl   $0x0,-0x74(%rbp)\n    29f7:\t79 08                \tjns    2a01 <qcow2_update_snapshot_refcount+0x4a3>\n    29f9:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    29fc:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    29ff:\teb 71                \tjmp    2a72 <qcow2_update_snapshot_refcount+0x514>\n    2a01:\t83 7d 8c 01          \tcmpl   $0x1,-0x74(%rbp)\n    2a05:\t75 0e                \tjne    2a15 <qcow2_update_snapshot_refcount+0x4b7>\n    2a07:\t48 b8 00 00 00 00 00 \tmovabs $0x8000000000000000,%rax\n    2a0e:\t00 00 80 \n    2a11:\t48 09 45 a8          \tor     %rax,-0x58(%rbp)\n    2a15:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    2a19:\t48 39 45 a8          \tcmp    %rax,-0x58(%rbp)\n    2a1d:\t74 22                \tje     2a41 <qcow2_update_snapshot_refcount+0x4e3>\n    2a1f:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2a22:\t48 98                \tcltq   \n    2a24:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    2a2b:\t00 \n    2a2c:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    2a30:\t48 01 c2             \tadd    %rax,%rdx\n    2a33:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2a37:\t48 89 02             \tmov    %rax,(%rdx)\n    2a3a:\tc7 45 88 01 00 00 00 \tmovl   $0x1,-0x78(%rbp)\n    2a41:\t83 45 80 01          \taddl   $0x1,-0x80(%rbp)\n    2a45:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2a48:\t3b 85 6c ff ff ff    \tcmp    -0x94(%rbp),%eax\n    2a4e:\t0f 8c 75 fc ff ff    \tjl     26c9 <qcow2_update_snapshot_refcount+0x16b>\n    2a54:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    2a5b:\t48 89 c7             \tmov    %rax,%rdi\n    2a5e:\te8 00 00 00 00       \tcall   2a63 <qcow2_update_snapshot_refcount+0x505>\n    2a63:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    2a66:\teb 0a                \tjmp    2a72 <qcow2_update_snapshot_refcount+0x514>\n    2a68:\t90                   \tnop\n    2a69:\teb 07                \tjmp    2a72 <qcow2_update_snapshot_refcount+0x514>\n    2a6b:\t90                   \tnop\n    2a6c:\teb 04                \tjmp    2a72 <qcow2_update_snapshot_refcount+0x514>\n    2a6e:\t90                   \tnop\n    2a6f:\teb 01                \tjmp    2a72 <qcow2_update_snapshot_refcount+0x514>\n    2a71:\t90                   \tnop\n    2a72:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2a76:\t48 85 c0             \ttest   %rax,%rax\n    2a79:\t74 1e                \tje     2a99 <qcow2_update_snapshot_refcount+0x53b>\n    2a7b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2a7f:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    2a83:\t48 8d 55 98          \tlea    -0x68(%rbp),%rdx\n    2a87:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    2a8e:\t48 89 ce             \tmov    %rcx,%rsi\n    2a91:\t48 89 c7             \tmov    %rax,%rdi\n    2a94:\te8 00 00 00 00       \tcall   2a99 <qcow2_update_snapshot_refcount+0x53b>\n    2a99:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2a9d:\tc6 80 20 03 00 00 00 \tmovb   $0x0,0x320(%rax)\n    2aa4:\t8b 55 90             \tmov    -0x70(%rbp),%edx\n    2aa7:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    2aae:\t89 d6                \tmov    %edx,%esi\n    2ab0:\t48 89 c7             \tmov    %rax,%rdi\n    2ab3:\te8 00 00 00 00       \tcall   2ab8 <qcow2_update_snapshot_refcount+0x55a>\n    2ab8:\t83 7d 90 00          \tcmpl   $0x0,-0x70(%rbp)\n    2abc:\t0f 85 a9 00 00 00    \tjne    2b6b <qcow2_update_snapshot_refcount+0x60d>\n    2ac2:\t83 bd 68 ff ff ff 00 \tcmpl   $0x0,-0x98(%rbp)\n    2ac9:\t0f 88 9c 00 00 00    \tjs     2b6b <qcow2_update_snapshot_refcount+0x60d>\n    2acf:\t83 7d 88 00          \tcmpl   $0x0,-0x78(%rbp)\n    2ad3:\t0f 84 92 00 00 00    \tje     2b6b <qcow2_update_snapshot_refcount+0x60d>\n    2ad9:\tc7 45 80 00 00 00 00 \tmovl   $0x0,-0x80(%rbp)\n    2ae0:\teb 20                \tjmp    2b02 <qcow2_update_snapshot_refcount+0x5a4>\n    2ae2:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2ae5:\t48 98                \tcltq   \n    2ae7:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    2aee:\t00 \n    2aef:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    2af3:\t48 01 d0             \tadd    %rdx,%rax\n    2af6:\t48 89 c7             \tmov    %rax,%rdi\n    2af9:\te8 1c d8 ff ff       \tcall   31a <cpu_to_be64s>\n    2afe:\t83 45 80 01          \taddl   $0x1,-0x80(%rbp)\n    2b02:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2b05:\t3b 85 6c ff ff ff    \tcmp    -0x94(%rbp),%eax\n    2b0b:\t7c d5                \tjl     2ae2 <qcow2_update_snapshot_refcount+0x584>\n    2b0d:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2b11:\t89 c1                \tmov    %eax,%ecx\n    2b13:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    2b1a:\t48 8b 80 68 08 00 00 \tmov    0x868(%rax),%rax\n    2b21:\t48 8b 55 a0          \tmov    -0x60(%rbp),%rdx\n    2b25:\t48 8b b5 70 ff ff ff \tmov    -0x90(%rbp),%rsi\n    2b2c:\t48 89 c7             \tmov    %rax,%rdi\n    2b2f:\te8 00 00 00 00       \tcall   2b34 <qcow2_update_snapshot_refcount+0x5d6>\n    2b34:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    2b37:\tc7 45 80 00 00 00 00 \tmovl   $0x0,-0x80(%rbp)\n    2b3e:\teb 20                \tjmp    2b60 <qcow2_update_snapshot_refcount+0x602>\n    2b40:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2b43:\t48 98                \tcltq   \n    2b45:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    2b4c:\t00 \n    2b4d:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    2b51:\t48 01 d0             \tadd    %rdx,%rax\n    2b54:\t48 89 c7             \tmov    %rax,%rdi\n    2b57:\te8 76 d7 ff ff       \tcall   2d2 <be64_to_cpus>\n    2b5c:\t83 45 80 01          \taddl   $0x1,-0x80(%rbp)\n    2b60:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2b63:\t3b 85 6c ff ff ff    \tcmp    -0x94(%rbp),%eax\n    2b69:\t7c d5                \tjl     2b40 <qcow2_update_snapshot_refcount+0x5e2>\n    2b6b:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n    2b70:\t74 0c                \tje     2b7e <qcow2_update_snapshot_refcount+0x620>\n    2b72:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    2b76:\t48 89 c7             \tmov    %rax,%rdi\n    2b79:\te8 00 00 00 00       \tcall   2b7e <qcow2_update_snapshot_refcount+0x620>\n    2b7e:\t8b 45 90             \tmov    -0x70(%rbp),%eax\n    2b81:\t48 8b 5d e8          \tmov    -0x18(%rbp),%rbx\n    2b85:\t64 48 33 1c 25 28 00 \txor    %fs:0x28,%rbx\n    2b8c:\t00 00 \n    2b8e:\t74 05                \tje     2b95 <qcow2_update_snapshot_refcount+0x637>\n    2b90:\te8 00 00 00 00       \tcall   2b95 <qcow2_update_snapshot_refcount+0x637>\n    2b95:\t48 81 c4 98 00 00 00 \tadd    $0x98,%rsp\n    2b9c:\t5b                   \tpop    %rbx\n    2b9d:\t5d                   \tpop    %rbp\n    2b9e:\tc3                   \tret    ", "code_s": "int qcow2_update_snapshot_refcount(long param_1, long <span class=\"supfact\">param_2</span>,\n                                   int param_3, int <span class=\"supfact\">param_4</span>) {\n  undefined8 *puVar1;\n  ulong uVar2;\n  bool bVar3;\n  int iVar4;\n  undefined8 uVar5;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">local_88</span>;\n  int <span class=\"supfact\">local_84</span>;\n  int <span class=\"supfact\">local_7c</span>;\n  int <span class=\"supfact\">local_78</span>;\n  long <span class=\"supfact\">local_70</span>;\n  long <span class=\"supfact\">local_68</span>;\n  ulong <span class=\"supfact\">local_60</span>;\n  ulong <span class=\"supfact\">local_58</span>;\n  long <span class=\"supfact\">local_50</span>;\n  undefined4 *<span class=\"supfact\">local_48</span>;\n  ulong <span class=\"supfact\">local_40</span>;\n  ulong <span class=\"supfact\">local_38</span>;\n  ulong <span class=\"supfact\">local_30</span>;\n  ulong <span class=\"supfact\">local_28</span>;\n  long <span class=\"supfact\">local_20</span>;\n  <span class=\"supfact\">local_20</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_48</span> = *(undefined4 **)(param_1 + Number);\n  bVar3 = false;\n  <span class=\"supfact\">local_70</span> = Number;\n  <span class=\"supfact\">local_68</span> = Number;\n  <span class=\"supfact\">local_40</span> = (long)param_3 << Number;\n  *(undefined *)(<span class=\"supfact\">local_48</span> + Number) = Number;\n  if (*(long *)(<span class=\"supfact\">local_48</span> + Number) == <span class=\"supfact\">param_2</span>) {\n    if (param_3 != <span class=\"supfact\">local_48</span>[Number]) {\n      __assert_fail(String, String, Number, String);\n    }\n    <span class=\"supfact\">local_68</span> = *(long *)(<span class=\"supfact\">local_48</span> + Number);\n    <span class=\"supfact\">local_50</span> = Number;\n  } else {\n    uVar5 = FUN_00100557(<span class=\"supfact\">local_40</span>, Number);\n    <span class=\"supfact\">local_68</span> = g_malloc0(uVar5);\n    <span class=\"supfact\">local_50</span> = Number;\n    <span class=\"supfact\">local_78</span> =\n        bdrv_pread(*(undefined8 *)(param_1 + Number), <span class=\"supfact\">param_2</span>,\n                   <span class=\"supfact\">local_68</span>, <span class=\"supfact\">local_40</span> & Number);\n    if (<span class=\"supfact\">local_78</span> < Number)\n      goto LAB_00102a72;\n    for (<span class=\"supfact\">local_88</span> = Number; <span class=\"supfact\">local_88</span> < param_3;\n         <span class=\"supfact\">local_88</span> = <span class=\"supfact\">local_88</span> + Number) {\n      FUN_001002d2(<span class=\"supfact\">local_68</span> +\n                   (long)<span class=\"supfact\">local_88</span> * Number);\n    }\n  }\n  for (<span class=\"supfact\">local_88</span> = Number; <span class=\"supfact\">local_88</span> < param_3;\n       <span class=\"supfact\">local_88</span> = <span class=\"supfact\">local_88</span> + Number) {\n    uVar2 = *(ulong *)(<span class=\"supfact\">local_68</span> +\n                       (long)<span class=\"supfact\">local_88</span> * Number);\n    <span class=\"supfact\">local_60</span> = uVar2;\n    if (uVar2 != Number) {\n      <span class=\"supfact\">local_60</span> = uVar2 & Number;\n      <span class=\"supfact\">local_38</span> = uVar2;\n      <span class=\"supfact\">local_78</span> = qcow2_cache_get(\n          param_1, *(undefined8 *)(<span class=\"supfact\">local_48</span> + Number),\n          <span class=\"supfact\">local_60</span>, &<span class=\"supfact\">local_70</span>);\n      if (<span class=\"supfact\">local_78</span> < Number)\n        goto LAB_00102a72;\n      for (<span class=\"supfact\">local_84</span> = Number;\n           <span class=\"supfact\">local_84</span> < (int)<span class=\"supfact\">local_48</span>[Number];\n           <span class=\"supfact\">local_84</span> = <span class=\"supfact\">local_84</span> + Number) {\n        <span class=\"supfact\">local_30</span> = FUN_00100258(\n            *(undefined8 *)(<span class=\"supfact\">local_70</span> +\n                            (long)<span class=\"supfact\">local_84</span> * Number));\n        <span class=\"supfact\">local_58</span> = <span class=\"supfact\">local_30</span> & Number;\n        iVar4 = FUN_001005ae(<span class=\"supfact\">local_58</span>);\n        if (iVar4 == Number) {\n        LAB_00102834:\n          <span class=\"supfact\">local_28</span> = (<span class=\"supfact\">local_58</span> & Number) >>\n                                     ((byte)*<span class=\"supfact\">local_48</span> & Number);\n          if (<span class=\"supfact\">local_28</span> == Number) {\n            <span class=\"supfact\">local_7c</span> = Number;\n          } else {\n            if (<span class=\"supfact\">param_4</span> == Number) {\n              <span class=\"supfact\">local_7c</span> =\n                  FUN_001008fb(param_1, <span class=\"supfact\">local_28</span>);\n            } else {\n              <span class=\"supfact\">local_7c</span> = qcow2_update_cluster_refcount(\n                  param_1, <span class=\"supfact\">local_28</span>, <span class=\"supfact\">param_4</span>,\n                  Number);\n            }\n            if (<span class=\"supfact\">local_7c</span> < Number) {\n              <span class=\"supfact\">local_78</span> = <span class=\"supfact\">local_7c</span>;\n              goto LAB_00102a72;\n            }\n          }\n        } else {\n          if (Number < iVar4) {\n          LAB_001028c6:\n            abort();\n          }\n          if (iVar4 == Number) {\n            if ((<span class=\"supfact\">param_4</span> != Number) &&\n                (<span class=\"supfact\">local_78</span> = FUN_00101a64(\n                     param_1,\n                     *(ulong *)(<span class=\"supfact\">local_48</span> + Number) &\n                         <span class=\"supfact\">local_58</span> & Number,\n                     (long)(int)(((<span class=\"supfact\">local_48</span>[Number] &\n                                   (uint)(<span class=\"supfact\">local_58</span> >>\n                                          ((byte)<span class=\"supfact\">local_48</span>\n                                               [Number] &\n                                           Number))) +\n                                  Number) *\n                                 Number),\n                     <span class=\"supfact\">param_4</span>, Number),\n                 <span class=\"supfact\">local_78</span> < Number))\n              goto LAB_00102a72;\n            <span class=\"supfact\">local_7c</span> = Number;\n          } else {\n            if (Number < iVar4)\n              goto LAB_001028c6;\n            if (iVar4 != Number) {\n              if (iVar4 != Number)\n                goto LAB_001028c6;\n              goto LAB_00102834;\n            }\n            <span class=\"supfact\">local_7c</span> = Number;\n          }\n        }\n        if (<span class=\"supfact\">local_7c</span> == Number) {\n          <span class=\"supfact\">local_58</span> = <span class=\"supfact\">local_58</span> | Number;\n        }\n        if (<span class=\"supfact\">local_58</span> != <span class=\"supfact\">local_30</span>) {\n          if (Number < <span class=\"supfact\">param_4</span>) {\n            qcow2_cache_set_dependency(\n                param_1, *(undefined8 *)(<span class=\"supfact\">local_48</span> + Number),\n                *(undefined8 *)(<span class=\"supfact\">local_48</span> + Number));\n          }\n          puVar1 = (undefined8 *)(<span class=\"supfact\">local_70</span> +\n                                  (long)<span class=\"supfact\">local_84</span> * Number);\n          uVar5 = FUN_00100295(<span class=\"supfact\">local_58</span>);\n          *puVar1 = uVar5;\n          qcow2_cache_entry_mark_dirty(\n              *(undefined8 *)(<span class=\"supfact\">local_48</span> + Number),\n              <span class=\"supfact\">local_70</span>);\n        }\n      }\n      <span class=\"supfact\">local_78</span> = qcow2_cache_put(\n          param_1, *(undefined8 *)(<span class=\"supfact\">local_48</span> + Number),\n          &<span class=\"supfact\">local_70</span>);\n      if (<span class=\"supfact\">local_78</span> < Number)\n        goto LAB_00102a72;\n      if (<span class=\"supfact\">param_4</span> == Number) {\n        <span class=\"supfact\">local_7c</span> = FUN_001008fb(\n            param_1, <span class=\"supfact\">local_60</span> >>\n                         ((byte)*<span class=\"supfact\">local_48</span> & Number));\n      } else {\n        <span class=\"supfact\">local_7c</span> = qcow2_update_cluster_refcount(\n            param_1,\n            <span class=\"supfact\">local_60</span> >>\n                ((byte)*<span class=\"supfact\">local_48</span> & Number),\n            <span class=\"supfact\">param_4</span>, Number);\n      }\n      if (<span class=\"supfact\">local_7c</span> < Number) {\n        <span class=\"supfact\">local_78</span> = <span class=\"supfact\">local_7c</span>;\n        goto LAB_00102a72;\n      }\n      if (<span class=\"supfact\">local_7c</span> == Number) {\n        <span class=\"supfact\">local_60</span> = <span class=\"supfact\">local_60</span> | Number;\n      }\n      if (<span class=\"supfact\">local_60</span> != <span class=\"supfact\">local_38</span>) {\n        *(ulong *)((long)<span class=\"supfact\">local_88</span> * Number +\n                   <span class=\"supfact\">local_68</span>) = <span class=\"supfact\">local_60</span>;\n        bVar3 = true;\n      }\n    }\n  }\n  <span class=\"supfact\">local_78</span> = bdrv_flush(param_1);\nLAB_00102a72:\n  if (<span class=\"supfact\">local_70</span> != Number) {\n    qcow2_cache_put(param_1, *(undefined8 *)(<span class=\"supfact\">local_48</span> + Number),\n                    &<span class=\"supfact\">local_70</span>);\n  }\n  *(undefined *)(<span class=\"supfact\">local_48</span> + Number) = Number;\n  qcow2_process_discards(param_1, <span class=\"supfact\">local_78</span>);\n  if (((<span class=\"supfact\">local_78</span> == Number) &&\n       (-Number < <span class=\"supfact\">param_4</span>)) &&\n      (bVar3)) {\n    for (<span class=\"supfact\">local_88</span> = Number; <span class=\"supfact\">local_88</span> < param_3;\n         <span class=\"supfact\">local_88</span> = <span class=\"supfact\">local_88</span> + Number) {\n      FUN_0010031a(<span class=\"supfact\">local_68</span> +\n                   (long)<span class=\"supfact\">local_88</span> * Number);\n    }\n    <span class=\"supfact\">local_78</span> = bdrv_pwrite_sync(\n        *(undefined8 *)(param_1 + Number), <span class=\"supfact\">param_2</span>,\n        <span class=\"supfact\">local_68</span>, <span class=\"supfact\">local_40</span> & Number);\n    for (<span class=\"supfact\">local_88</span> = Number; <span class=\"supfact\">local_88</span> < param_3;\n         <span class=\"supfact\">local_88</span> = <span class=\"supfact\">local_88</span> + Number) {\n      FUN_001002d2(<span class=\"supfact\">local_68</span> +\n                   (long)<span class=\"supfact\">local_88</span> * Number);\n    }\n  }\n  if (<span class=\"supfact\">local_50</span> != Number) {\n    g_free(<span class=\"supfact\">local_68</span>);\n  }\n  if (<span class=\"supfact\">local_20</span> ==\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">local_78</span>;\n  }\n  __stack_chk_fail();\n}", "code_t": "int qcow2_update_snapshot_refcount(BlockDriverState *bs,\n                                   int64_t <span class=\"supfact\">l1_table_offset</span>,\n                                   int l1_size, int addend) {\n  uint64_t *puVar1;\n  ulong uVar2;\n  bool bVar3;\n  int iVar4;\n  int64_t iVar5;\n  uint64_t uVar6;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int addend - local;\n  int l1_size - local;\n  int64_t <span class=\"supfact\">l1_table_offset</span> - local;\n  BlockDriverState *bs - local;\n  int <span class=\"supfact\">i</span>;\n  int <span class=\"supfact\">j</span>;\n  int l1_modified;\n  int <span class=\"supfact\">refcount</span>;\n  int <span class=\"supfact\">ret</span>;\n  int nb_csectors;\n  uint64_t *<span class=\"supfact\">l2_table</span>;\n  uint64_t *<span class=\"supfact\">l1_table</span>;\n  uint64_t <span class=\"supfact\">l2_offset</span>;\n  uint64_t <span class=\"supfact\">offset</span>;\n  uint64_t <span class=\"supfact\">l1_allocated</span>;\n  BDRVQcowState *<span class=\"supfact\">s</span>;\n  uint64_t <span class=\"supfact\">l1_size2</span>;\n  int64_t <span class=\"supfact\">old_l2_offset</span>;\n  int64_t <span class=\"supfact\">old_offset</span>;\n  uint64_t <span class=\"supfact\">cluster_index</span>;\n  long <span class=\"supfact\">local_20</span>;\n  <span class=\"supfact\">local_20</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">s</span> = (BDRVQcowState *)bs->opaque;\n  bVar3 = false;\n  <span class=\"supfact\">l2_table</span> = (uint64_t *)Number;\n  <span class=\"supfact\">l1_table</span> = (uint64_t *)Number;\n  <span class=\"supfact\">l1_size2</span> = (long)l1_size << Number;\n  <span class=\"supfact\">s</span>->cache_discards = true;\n  if (<span class=\"supfact\">s</span>-><span class=\"supfact\">l1_table_offset</span> ==\n      <span class=\"supfact\">l1_table_offset</span>) {\n    if (l1_size != <span class=\"supfact\">s</span>->l1_size) {\n      __assert_fail(String, String, Number, String);\n    }\n    <span class=\"supfact\">l1_table</span> = <span class=\"supfact\">s</span>-><span class=\"supfact\">l1_table</span>;\n    <span class=\"supfact\">l1_allocated</span> = Number;\n  } else {\n    iVar5 = align_offset(<span class=\"supfact\">l1_size2</span>, Number);\n    <span class=\"supfact\">l1_table</span> = (uint64_t *)g_malloc0(iVar5);\n    <span class=\"supfact\">l1_allocated</span> = Number;\n    <span class=\"supfact\">ret</span> =\n        bdrv_pread(bs->file, <span class=\"supfact\">l1_table_offset</span>,\n                   <span class=\"supfact\">l1_table</span>, <span class=\"supfact\">l1_size2</span> & Number);\n    if (<span class=\"supfact\">ret</span> < Number)\n      goto fail;\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < l1_size;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      be64_to_cpus(<span class=\"supfact\">l1_table</span> + <span class=\"supfact\">i</span>);\n    }\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < l1_size;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    uVar2 = <span class=\"supfact\">l1_table</span>[<span class=\"supfact\">i</span>];\n    <span class=\"supfact\">l2_offset</span> = uVar2;\n    if (uVar2 != Number) {\n      <span class=\"supfact\">l2_offset</span> = uVar2 & Number;\n      <span class=\"supfact\">old_l2_offset</span> = uVar2;\n      <span class=\"supfact\">ret</span> =\n          qcow2_cache_get(bs, <span class=\"supfact\">s</span>->l2_table_cache,\n                          <span class=\"supfact\">l2_offset</span>, &<span class=\"supfact\">l2_table</span>);\n      if (<span class=\"supfact\">ret</span> < Number)\n        goto fail;\n      for (<span class=\"supfact\">j</span> = Number;\n           <span class=\"supfact\">j</span> < <span class=\"supfact\">s</span>->l2_size;\n           <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number) {\n        <span class=\"supfact\">old_offset</span> =\n            be64_to_cpu(<span class=\"supfact\">l2_table</span>[<span class=\"supfact\">j</span>]);\n        <span class=\"supfact\">offset</span> = <span class=\"supfact\">old_offset</span> & Number;\n        iVar4 = qcow2_get_cluster_type(<span class=\"supfact\">offset</span>);\n        if (iVar4 == Number) {\n        LAB_00102834:\n          <span class=\"supfact\">cluster_index</span> =\n              (<span class=\"supfact\">offset</span> & Number) >>\n              ((byte)<span class=\"supfact\">s</span>->cluster_bits & Number);\n          if (<span class=\"supfact\">cluster_index</span> == Number) {\n            <span class=\"supfact\">refcount</span> = Number;\n          } else {\n            if (addend == Number) {\n              <span class=\"supfact\">refcount</span> =\n                  get_refcount(bs, <span class=\"supfact\">cluster_index</span>);\n            } else {\n              <span class=\"supfact\">refcount</span> = qcow2_update_cluster_refcount(\n                  bs, <span class=\"supfact\">cluster_index</span>, addend,\n                  QCOW2_DISCARD_SNAPSHOT);\n            }\n            if (<span class=\"supfact\">refcount</span> < Number) {\n              <span class=\"supfact\">ret</span> = <span class=\"supfact\">refcount</span>;\n              goto fail;\n            }\n          }\n        } else {\n          if (Number < iVar4) {\n          LAB_001028c6:\n            abort();\n          }\n          if (iVar4 == Number) {\n            if ((addend != Number) &&\n                (<span class=\"supfact\">ret</span> = update_refcount(\n                     bs,\n                     <span class=\"supfact\">s</span>->cluster_offset_mask &\n                         <span class=\"supfact\">offset</span> & Number,\n                     (long)(int)(((<span class=\"supfact\">s</span>->csize_mask &\n                                   (uint)(<span class=\"supfact\">offset</span> >>\n                                          ((byte)\n                                               <span class=\"supfact\">s</span>->csize_shift &\n                                           Number))) +\n                                  Number) *\n                                 Number),\n                     addend, QCOW2_DISCARD_SNAPSHOT),\n                 <span class=\"supfact\">ret</span> < Number))\n              goto fail;\n            <span class=\"supfact\">refcount</span> = Number;\n          } else {\n            if (Number < iVar4)\n              goto LAB_001028c6;\n            if (iVar4 != Number) {\n              if (iVar4 != Number)\n                goto LAB_001028c6;\n              goto LAB_00102834;\n            }\n            <span class=\"supfact\">refcount</span> = Number;\n          }\n        }\n        if (<span class=\"supfact\">refcount</span> == Number) {\n          <span class=\"supfact\">offset</span> = <span class=\"supfact\">offset</span> | Number;\n        }\n        if (<span class=\"supfact\">offset</span> != <span class=\"supfact\">old_offset</span>) {\n          if (Number < addend) {\n            qcow2_cache_set_dependency(bs, <span class=\"supfact\">s</span>->l2_table_cache,\n                                       <span class=\"supfact\">s</span>->refcount_block_cache);\n          }\n          puVar1 = <span class=\"supfact\">l2_table</span> + <span class=\"supfact\">j</span>;\n          uVar6 = cpu_to_be64(<span class=\"supfact\">offset</span>);\n          *puVar1 = uVar6;\n          qcow2_cache_entry_mark_dirty(<span class=\"supfact\">s</span>->l2_table_cache,\n                                       <span class=\"supfact\">l2_table</span>);\n        }\n      }\n      <span class=\"supfact\">ret</span> = qcow2_cache_put(\n          bs, <span class=\"supfact\">s</span>->l2_table_cache, &<span class=\"supfact\">l2_table</span>);\n      if (<span class=\"supfact\">ret</span> < Number)\n        goto fail;\n      if (addend == Number) {\n        <span class=\"supfact\">refcount</span> = get_refcount(\n            bs, <span class=\"supfact\">l2_offset</span> >>\n                    ((byte)<span class=\"supfact\">s</span>->cluster_bits & Number));\n      } else {\n        <span class=\"supfact\">refcount</span> = qcow2_update_cluster_refcount(\n            bs,\n            <span class=\"supfact\">l2_offset</span> >>\n                ((byte)<span class=\"supfact\">s</span>->cluster_bits & Number),\n            addend, QCOW2_DISCARD_SNAPSHOT);\n      }\n      if (<span class=\"supfact\">refcount</span> < Number) {\n        <span class=\"supfact\">ret</span> = <span class=\"supfact\">refcount</span>;\n        goto fail;\n      }\n      if (<span class=\"supfact\">refcount</span> == Number) {\n        <span class=\"supfact\">l2_offset</span> = <span class=\"supfact\">l2_offset</span> | Number;\n      }\n      if (<span class=\"supfact\">l2_offset</span> != <span class=\"supfact\">old_l2_offset</span>) {\n        <span class=\"supfact\">l1_table</span>[<span class=\"supfact\">i</span>] = <span class=\"supfact\">l2_offset</span>;\n        bVar3 = true;\n      }\n    }\n  }\n  <span class=\"supfact\">ret</span> = bdrv_flush(bs);\nfail:\n  if (<span class=\"supfact\">l2_table</span> != (uint64_t *)Number) {\n    qcow2_cache_put(bs, <span class=\"supfact\">s</span>->l2_table_cache,\n                    &<span class=\"supfact\">l2_table</span>);\n  }\n  <span class=\"supfact\">s</span>->cache_discards = false;\n  qcow2_process_discards(bs, <span class=\"supfact\">ret</span>);\n  if (((<span class=\"supfact\">ret</span> == Number) && (-Number < addend)) && (bVar3)) {\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < l1_size;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      cpu_to_be64s(<span class=\"supfact\">l1_table</span> + <span class=\"supfact\">i</span>);\n    }\n    <span class=\"supfact\">ret</span> = bdrv_pwrite_sync(\n        bs->file, <span class=\"supfact\">l1_table_offset</span>, <span class=\"supfact\">l1_table</span>,\n        <span class=\"supfact\">l1_size2</span> & Number);\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < l1_size;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      be64_to_cpus(<span class=\"supfact\">l1_table</span> + <span class=\"supfact\">i</span>);\n    }\n  }\n  if (<span class=\"supfact\">l1_allocated</span> != Number) {\n    g_free(<span class=\"supfact\">l1_table</span>);\n  }\n  if (<span class=\"supfact\">local_20</span> ==\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">ret</span>;\n  }\n  __stack_chk_fail();\n}", "var": [{"name": "param_2", "type": "int64_t", "pred_name": "__unk__", "ref_name": "l1_table_offset", "ref_type": "int64_t"}, {"name": "param_4", "type": "int", "pred_name": "addend", "ref_name": "", "ref_type": "disappear"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_88", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}, {"name": "local_84", "type": "int", "pred_name": "j", "ref_name": "j", "ref_type": "int"}, {"name": "local_7c", "type": "int", "pred_name": "ret", "ref_name": "refcount", "ref_type": "int"}, {"name": "local_78", "type": "int", "pred_name": "__unk__", "ref_name": "ret", "ref_type": "int"}, {"name": "local_70", "type": "uint64_t * *", "pred_name": "l1_table", "ref_name": "l2_table", "ref_type": "uint64_t * *"}, {"name": "local_68", "type": "uint64_t", "pred_name": "__unk__", "ref_name": "l1_table", "ref_type": "uint64_t * *"}, {"name": "local_60", "type": "uint64_t * *", "pred_name": "l1_table", "ref_name": "l2_offset", "ref_type": "uint64_t"}, {"name": "local_58", "type": "uint64_t", "pred_name": "l2_offset", "ref_name": "offset", "ref_type": "uint64_t"}, {"name": "local_50", "type": "uint64_t", "pred_name": "offset", "ref_name": "l1_allocated", "ref_type": "uint64_t"}, {"name": "local_48", "type": "uint64_t", "pred_name": "__unk__", "ref_name": "s", "ref_type": "BDRVQcowState * *"}, {"name": "local_40", "type": "BDRVQcowState * *", "pred_name": "s", "ref_name": "l1_size2", "ref_type": "uint64_t"}, {"name": "local_38", "type": "uint64_t", "pred_name": "__unk__", "ref_name": "old_l2_offset", "ref_type": "int64_t"}, {"name": "local_30", "type": "int64_t", "pred_name": "__unk__", "ref_name": "old_offset", "ref_type": "int64_t"}, {"name": "local_28", "type": "int64_t", "pred_name": "__unk__", "ref_name": "cluster_index", "ref_type": "uint64_t"}, {"name": "local_20", "type": "long", "pred_name": "local_20", "ref_name": "local_20", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "LingxiaoJIA", "repo_name": "qemu", "path": "LingxiaoJIA/qemu/2d7a5464769033efbf9d9baa7311d48368cb5901e8ab6851955e0f7d32ae9d9b", "path_in_repo": "LingxiaoJIA/qemu//async.o", "objdump": "000000000000097e <aio_context_release>:\n 97e:\t55                   \tpush   %rbp\n 97f:\t48 89 e5             \tmov    %rsp,%rbp\n 982:\t48 83 ec 10          \tsub    $0x10,%rsp\n 986:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n 98a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 98e:\t48 83 c0 60          \tadd    $0x60,%rax\n 992:\t48 89 c7             \tmov    %rax,%rdi\n 995:\te8 00 00 00 00       \tcall   99a <aio_context_release+0x1c>\n 99a:\t90                   \tnop\n 99b:\tc9                   \tleave  \n 99c:\tc3                   \tret    \n", "code_s": "void aio_context_release(long <span class=\"supfact\">param_1</span>) {\n  rfifolock_unlock(<span class=\"supfact\">param_1</span> + Number);\n  return;\n}", "code_t": "void aio_context_release(AioContext *<span class=\"supfact\">ctx</span>) {\n  AioContext *<span class=\"supfact\">ctx</span> - local;\n  rfifolock_unlock(&<span class=\"supfact\">ctx</span>->lock);\n  return;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "ctx", "ref_type": "AioContext * *"}], "body_in_train": false}, {"repo_owner": "HusterWan", "repo_name": "qemu-1.7.2-stable", "path": "HusterWan/qemu-1.7.2-stable/2bd63672e1bcd37f4d24115e10c93b19be9085c1bc8c8814e669872a622954b0", "path_in_repo": "HusterWan/qemu-1.7.2-stable//block/qcow2-refcount.o", "objdump": "000000000000255e <qcow2_update_snapshot_refcount>:\n    255e:\t55                   \tpush   %rbp\n    255f:\t48 89 e5             \tmov    %rsp,%rbp\n    2562:\t53                   \tpush   %rbx\n    2563:\t48 81 ec 98 00 00 00 \tsub    $0x98,%rsp\n    256a:\t48 89 bd 78 ff ff ff \tmov    %rdi,-0x88(%rbp)\n    2571:\t48 89 b5 70 ff ff ff \tmov    %rsi,-0x90(%rbp)\n    2578:\t89 95 6c ff ff ff    \tmov    %edx,-0x94(%rbp)\n    257e:\t89 8d 68 ff ff ff    \tmov    %ecx,-0x98(%rbp)\n    2584:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    258b:\t00 00 \n    258d:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    2591:\t31 c0                \txor    %eax,%eax\n    2593:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    259a:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n    259e:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    25a2:\tc7 45 88 00 00 00 00 \tmovl   $0x0,-0x78(%rbp)\n    25a9:\t48 c7 45 98 00 00 00 \tmovq   $0x0,-0x68(%rbp)\n    25b0:\t00 \n    25b1:\t48 c7 45 a0 00 00 00 \tmovq   $0x0,-0x60(%rbp)\n    25b8:\t00 \n    25b9:\t8b 85 6c ff ff ff    \tmov    -0x94(%rbp),%eax\n    25bf:\t48 98                \tcltq   \n    25c1:\t48 c1 e0 03          \tshl    $0x3,%rax\n    25c5:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    25c9:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    25cd:\tc6 80 20 03 00 00 01 \tmovb   $0x1,0x320(%rax)\n    25d4:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    25d8:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n    25dc:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n    25e3:\t48 39 c2             \tcmp    %rax,%rdx\n    25e6:\t0f 84 8f 00 00 00    \tje     267b <qcow2_update_snapshot_refcount+0x11d>\n    25ec:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    25f0:\tbe 00 02 00 00       \tmov    $0x200,%esi\n    25f5:\t48 89 c7             \tmov    %rax,%rdi\n    25f8:\te8 5a df ff ff       \tcall   557 <align_offset>\n    25fd:\t48 89 c7             \tmov    %rax,%rdi\n    2600:\te8 00 00 00 00       \tcall   2605 <qcow2_update_snapshot_refcount+0xa7>\n    2605:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n    2609:\t48 c7 45 b8 01 00 00 \tmovq   $0x1,-0x48(%rbp)\n    2610:\t00 \n    2611:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2615:\t89 c1                \tmov    %eax,%ecx\n    2617:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    261e:\t48 8b 80 68 08 00 00 \tmov    0x868(%rax),%rax\n    2625:\t48 8b 55 a0          \tmov    -0x60(%rbp),%rdx\n    2629:\t48 8b b5 70 ff ff ff \tmov    -0x90(%rbp),%rsi\n    2630:\t48 89 c7             \tmov    %rax,%rdi\n    2633:\te8 00 00 00 00       \tcall   2638 <qcow2_update_snapshot_refcount+0xda>\n    2638:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    263b:\t83 7d 90 00          \tcmpl   $0x0,-0x70(%rbp)\n    263f:\t0f 88 23 04 00 00    \tjs     2a68 <qcow2_update_snapshot_refcount+0x50a>\n    2645:\tc7 45 80 00 00 00 00 \tmovl   $0x0,-0x80(%rbp)\n    264c:\teb 20                \tjmp    266e <qcow2_update_snapshot_refcount+0x110>\n    264e:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2651:\t48 98                \tcltq   \n    2653:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    265a:\t00 \n    265b:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    265f:\t48 01 d0             \tadd    %rdx,%rax\n    2662:\t48 89 c7             \tmov    %rax,%rdi\n    2665:\te8 68 dc ff ff       \tcall   2d2 <be64_to_cpus>\n    266a:\t83 45 80 01          \taddl   $0x1,-0x80(%rbp)\n    266e:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2671:\t3b 85 6c ff ff ff    \tcmp    -0x94(%rbp),%eax\n    2677:\t7c d5                \tjl     264e <qcow2_update_snapshot_refcount+0xf0>\n    2679:\teb 42                \tjmp    26bd <qcow2_update_snapshot_refcount+0x15f>\n    267b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    267f:\t8b 40 14             \tmov    0x14(%rax),%eax\n    2682:\t39 85 6c ff ff ff    \tcmp    %eax,-0x94(%rbp)\n    2688:\t74 1f                \tje     26a9 <qcow2_update_snapshot_refcount+0x14b>\n    268a:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 2691 <qcow2_update_snapshot_refcount+0x133>\n    2691:\tba 61 03 00 00       \tmov    $0x361,%edx\n    2696:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 269d <qcow2_update_snapshot_refcount+0x13f>\n    269d:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 26a4 <qcow2_update_snapshot_refcount+0x146>\n    26a4:\te8 00 00 00 00       \tcall   26a9 <qcow2_update_snapshot_refcount+0x14b>\n    26a9:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    26ad:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n    26b1:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n    26b5:\t48 c7 45 b8 00 00 00 \tmovq   $0x0,-0x48(%rbp)\n    26bc:\t00 \n    26bd:\tc7 45 80 00 00 00 00 \tmovl   $0x0,-0x80(%rbp)\n    26c4:\te9 7c 03 00 00       \tjmp    2a45 <qcow2_update_snapshot_refcount+0x4e7>\n    26c9:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    26cc:\t48 98                \tcltq   \n    26ce:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    26d5:\t00 \n    26d6:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    26da:\t48 01 d0             \tadd    %rdx,%rax\n    26dd:\t48 8b 00             \tmov    (%rax),%rax\n    26e0:\t48 89 45 a8          \tmov    %rax,-0x58(%rbp)\n    26e4:\t48 83 7d a8 00       \tcmpq   $0x0,-0x58(%rbp)\n    26e9:\t0f 84 52 03 00 00    \tje     2a41 <qcow2_update_snapshot_refcount+0x4e3>\n    26ef:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    26f3:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    26f7:\t48 b8 00 ff ff ff ff \tmovabs $0xffffffffffff00,%rax\n    26fe:\tff ff 00 \n    2701:\t48 21 45 a8          \tand    %rax,-0x58(%rbp)\n    2705:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2709:\t48 8b 70 40          \tmov    0x40(%rax),%rsi\n    270d:\t48 8d 4d 98          \tlea    -0x68(%rbp),%rcx\n    2711:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    2715:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    271c:\t48 89 c7             \tmov    %rax,%rdi\n    271f:\te8 00 00 00 00       \tcall   2724 <qcow2_update_snapshot_refcount+0x1c6>\n    2724:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    2727:\t83 7d 90 00          \tcmpl   $0x0,-0x70(%rbp)\n    272b:\t0f 88 3a 03 00 00    \tjs     2a6b <qcow2_update_snapshot_refcount+0x50d>\n    2731:\tc7 45 84 00 00 00 00 \tmovl   $0x0,-0x7c(%rbp)\n    2738:\te9 14 02 00 00       \tjmp    2951 <qcow2_update_snapshot_refcount+0x3f3>\n    273d:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2741:\t8b 55 84             \tmov    -0x7c(%rbp),%edx\n    2744:\t48 63 d2             \tmovslq %edx,%rdx\n    2747:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    274b:\t48 01 d0             \tadd    %rdx,%rax\n    274e:\t48 8b 00             \tmov    (%rax),%rax\n    2751:\t48 89 c7             \tmov    %rax,%rdi\n    2754:\te8 ff da ff ff       \tcall   258 <be64_to_cpu>\n    2759:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n    275d:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    2761:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    2765:\t48 b8 ff ff ff ff ff \tmovabs $0x7fffffffffffffff,%rax\n    276c:\tff ff 7f \n    276f:\t48 21 45 b0          \tand    %rax,-0x50(%rbp)\n    2773:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    2777:\t48 89 c7             \tmov    %rax,%rdi\n    277a:\te8 2f de ff ff       \tcall   5ae <qcow2_get_cluster_type>\n    277f:\t83 f8 03             \tcmp    $0x3,%eax\n    2782:\t0f 84 ac 00 00 00    \tje     2834 <qcow2_update_snapshot_refcount+0x2d6>\n    2788:\t83 f8 03             \tcmp    $0x3,%eax\n    278b:\t0f 8f 35 01 00 00    \tjg     28c6 <qcow2_update_snapshot_refcount+0x368>\n    2791:\t83 f8 02             \tcmp    $0x2,%eax\n    2794:\t74 1f                \tje     27b5 <qcow2_update_snapshot_refcount+0x257>\n    2796:\t83 f8 02             \tcmp    $0x2,%eax\n    2799:\t0f 8f 27 01 00 00    \tjg     28c6 <qcow2_update_snapshot_refcount+0x368>\n    279f:\t85 c0                \ttest   %eax,%eax\n    27a1:\t0f 84 16 01 00 00    \tje     28bd <qcow2_update_snapshot_refcount+0x35f>\n    27a7:\t83 f8 01             \tcmp    $0x1,%eax\n    27aa:\t0f 84 84 00 00 00    \tje     2834 <qcow2_update_snapshot_refcount+0x2d6>\n    27b0:\te9 11 01 00 00       \tjmp    28c6 <qcow2_update_snapshot_refcount+0x368>\n    27b5:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    27b9:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n    27bc:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n    27c0:\t89 c1                \tmov    %eax,%ecx\n    27c2:\t48 d3 ea             \tshr    %cl,%rdx\n    27c5:\t48 89 d0             \tmov    %rdx,%rax\n    27c8:\t89 c2                \tmov    %eax,%edx\n    27ca:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    27ce:\t8b 40 20             \tmov    0x20(%rax),%eax\n    27d1:\t21 d0                \tand    %edx,%eax\n    27d3:\t83 c0 01             \tadd    $0x1,%eax\n    27d6:\t89 45 94             \tmov    %eax,-0x6c(%rbp)\n    27d9:\t83 bd 68 ff ff ff 00 \tcmpl   $0x0,-0x98(%rbp)\n    27e0:\t74 46                \tje     2828 <qcow2_update_snapshot_refcount+0x2ca>\n    27e2:\t8b 45 94             \tmov    -0x6c(%rbp),%eax\n    27e5:\tc1 e0 09             \tshl    $0x9,%eax\n    27e8:\t48 63 d0             \tmovslq %eax,%rdx\n    27eb:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    27ef:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n    27f3:\t48 23 45 b0          \tand    -0x50(%rbp),%rax\n    27f7:\t48 25 00 fe ff ff    \tand    $0xfffffffffffffe00,%rax\n    27fd:\t48 89 c6             \tmov    %rax,%rsi\n    2800:\t8b 8d 68 ff ff ff    \tmov    -0x98(%rbp),%ecx\n    2806:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    280d:\t41 b8 03 00 00 00    \tmov    $0x3,%r8d\n    2813:\t48 89 c7             \tmov    %rax,%rdi\n    2816:\te8 49 f2 ff ff       \tcall   1a64 <update_refcount>\n    281b:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    281e:\t83 7d 90 00          \tcmpl   $0x0,-0x70(%rbp)\n    2822:\t0f 88 46 02 00 00    \tjs     2a6e <qcow2_update_snapshot_refcount+0x510>\n    2828:\tc7 45 8c 02 00 00 00 \tmovl   $0x2,-0x74(%rbp)\n    282f:\te9 98 00 00 00       \tjmp    28cc <qcow2_update_snapshot_refcount+0x36e>\n    2834:\t48 b8 00 ff ff ff ff \tmovabs $0xffffffffffff00,%rax\n    283b:\tff ff 00 \n    283e:\t48 23 45 b0          \tand    -0x50(%rbp),%rax\n    2842:\t48 89 c2             \tmov    %rax,%rdx\n    2845:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2849:\t8b 00                \tmov    (%rax),%eax\n    284b:\t89 c1                \tmov    %eax,%ecx\n    284d:\t48 d3 ea             \tshr    %cl,%rdx\n    2850:\t48 89 d0             \tmov    %rdx,%rax\n    2853:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    2857:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n    285c:\t75 09                \tjne    2867 <qcow2_update_snapshot_refcount+0x309>\n    285e:\tc7 45 8c 00 00 00 00 \tmovl   $0x0,-0x74(%rbp)\n    2865:\teb 65                \tjmp    28cc <qcow2_update_snapshot_refcount+0x36e>\n    2867:\t83 bd 68 ff ff ff 00 \tcmpl   $0x0,-0x98(%rbp)\n    286e:\t74 23                \tje     2893 <qcow2_update_snapshot_refcount+0x335>\n    2870:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n    2874:\t8b 95 68 ff ff ff    \tmov    -0x98(%rbp),%edx\n    287a:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    2881:\tb9 03 00 00 00       \tmov    $0x3,%ecx\n    2886:\t48 89 c7             \tmov    %rax,%rdi\n    2889:\te8 00 00 00 00       \tcall   288e <qcow2_update_snapshot_refcount+0x330>\n    288e:\t89 45 8c             \tmov    %eax,-0x74(%rbp)\n    2891:\teb 19                \tjmp    28ac <qcow2_update_snapshot_refcount+0x34e>\n    2893:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    2897:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    289e:\t48 89 d6             \tmov    %rdx,%rsi\n    28a1:\t48 89 c7             \tmov    %rax,%rdi\n    28a4:\te8 52 e0 ff ff       \tcall   8fb <get_refcount>\n    28a9:\t89 45 8c             \tmov    %eax,-0x74(%rbp)\n    28ac:\t83 7d 8c 00          \tcmpl   $0x0,-0x74(%rbp)\n    28b0:\t79 19                \tjns    28cb <qcow2_update_snapshot_refcount+0x36d>\n    28b2:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    28b5:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    28b8:\te9 b5 01 00 00       \tjmp    2a72 <qcow2_update_snapshot_refcount+0x514>\n    28bd:\tc7 45 8c 00 00 00 00 \tmovl   $0x0,-0x74(%rbp)\n    28c4:\teb 06                \tjmp    28cc <qcow2_update_snapshot_refcount+0x36e>\n    28c6:\te8 00 00 00 00       \tcall   28cb <qcow2_update_snapshot_refcount+0x36d>\n    28cb:\t90                   \tnop\n    28cc:\t83 7d 8c 01          \tcmpl   $0x1,-0x74(%rbp)\n    28d0:\t75 0e                \tjne    28e0 <qcow2_update_snapshot_refcount+0x382>\n    28d2:\t48 b8 00 00 00 00 00 \tmovabs $0x8000000000000000,%rax\n    28d9:\t00 00 80 \n    28dc:\t48 09 45 b0          \tor     %rax,-0x50(%rbp)\n    28e0:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    28e4:\t48 39 45 b0          \tcmp    %rax,-0x50(%rbp)\n    28e8:\t74 63                \tje     294d <qcow2_update_snapshot_refcount+0x3ef>\n    28ea:\t83 bd 68 ff ff ff 00 \tcmpl   $0x0,-0x98(%rbp)\n    28f1:\t7e 22                \tjle    2915 <qcow2_update_snapshot_refcount+0x3b7>\n    28f3:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    28f7:\t48 8b 50 48          \tmov    0x48(%rax),%rdx\n    28fb:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    28ff:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    2903:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    290a:\t48 89 ce             \tmov    %rcx,%rsi\n    290d:\t48 89 c7             \tmov    %rax,%rdi\n    2910:\te8 00 00 00 00       \tcall   2915 <qcow2_update_snapshot_refcount+0x3b7>\n    2915:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2919:\t8b 55 84             \tmov    -0x7c(%rbp),%edx\n    291c:\t48 63 d2             \tmovslq %edx,%rdx\n    291f:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    2923:\t48 8d 1c 10          \tlea    (%rax,%rdx,1),%rbx\n    2927:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    292b:\t48 89 c7             \tmov    %rax,%rdi\n    292e:\te8 62 d9 ff ff       \tcall   295 <cpu_to_be64>\n    2933:\t48 89 03             \tmov    %rax,(%rbx)\n    2936:\t48 8b 55 98          \tmov    -0x68(%rbp),%rdx\n    293a:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    293e:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n    2942:\t48 89 d6             \tmov    %rdx,%rsi\n    2945:\t48 89 c7             \tmov    %rax,%rdi\n    2948:\te8 00 00 00 00       \tcall   294d <qcow2_update_snapshot_refcount+0x3ef>\n    294d:\t83 45 84 01          \taddl   $0x1,-0x7c(%rbp)\n    2951:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2955:\t8b 40 10             \tmov    0x10(%rax),%eax\n    2958:\t39 45 84             \tcmp    %eax,-0x7c(%rbp)\n    295b:\t0f 8c dc fd ff ff    \tjl     273d <qcow2_update_snapshot_refcount+0x1df>\n    2961:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2965:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    2969:\t48 8d 55 98          \tlea    -0x68(%rbp),%rdx\n    296d:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    2974:\t48 89 ce             \tmov    %rcx,%rsi\n    2977:\t48 89 c7             \tmov    %rax,%rdi\n    297a:\te8 00 00 00 00       \tcall   297f <qcow2_update_snapshot_refcount+0x421>\n    297f:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    2982:\t83 7d 90 00          \tcmpl   $0x0,-0x70(%rbp)\n    2986:\t0f 88 e5 00 00 00    \tjs     2a71 <qcow2_update_snapshot_refcount+0x513>\n    298c:\t83 bd 68 ff ff ff 00 \tcmpl   $0x0,-0x98(%rbp)\n    2993:\t74 34                \tje     29c9 <qcow2_update_snapshot_refcount+0x46b>\n    2995:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2999:\t8b 00                \tmov    (%rax),%eax\n    299b:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    299f:\t89 c1                \tmov    %eax,%ecx\n    29a1:\t48 d3 ea             \tshr    %cl,%rdx\n    29a4:\t48 89 d0             \tmov    %rdx,%rax\n    29a7:\t48 89 c6             \tmov    %rax,%rsi\n    29aa:\t8b 95 68 ff ff ff    \tmov    -0x98(%rbp),%edx\n    29b0:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    29b7:\tb9 03 00 00 00       \tmov    $0x3,%ecx\n    29bc:\t48 89 c7             \tmov    %rax,%rdi\n    29bf:\te8 00 00 00 00       \tcall   29c4 <qcow2_update_snapshot_refcount+0x466>\n    29c4:\t89 45 8c             \tmov    %eax,-0x74(%rbp)\n    29c7:\teb 2a                \tjmp    29f3 <qcow2_update_snapshot_refcount+0x495>\n    29c9:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    29cd:\t8b 00                \tmov    (%rax),%eax\n    29cf:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    29d3:\t89 c1                \tmov    %eax,%ecx\n    29d5:\t48 d3 ea             \tshr    %cl,%rdx\n    29d8:\t48 89 d0             \tmov    %rdx,%rax\n    29db:\t48 89 c2             \tmov    %rax,%rdx\n    29de:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    29e5:\t48 89 d6             \tmov    %rdx,%rsi\n    29e8:\t48 89 c7             \tmov    %rax,%rdi\n    29eb:\te8 0b df ff ff       \tcall   8fb <get_refcount>\n    29f0:\t89 45 8c             \tmov    %eax,-0x74(%rbp)\n    29f3:\t83 7d 8c 00          \tcmpl   $0x0,-0x74(%rbp)\n    29f7:\t79 08                \tjns    2a01 <qcow2_update_snapshot_refcount+0x4a3>\n    29f9:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    29fc:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    29ff:\teb 71                \tjmp    2a72 <qcow2_update_snapshot_refcount+0x514>\n    2a01:\t83 7d 8c 01          \tcmpl   $0x1,-0x74(%rbp)\n    2a05:\t75 0e                \tjne    2a15 <qcow2_update_snapshot_refcount+0x4b7>\n    2a07:\t48 b8 00 00 00 00 00 \tmovabs $0x8000000000000000,%rax\n    2a0e:\t00 00 80 \n    2a11:\t48 09 45 a8          \tor     %rax,-0x58(%rbp)\n    2a15:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    2a19:\t48 39 45 a8          \tcmp    %rax,-0x58(%rbp)\n    2a1d:\t74 22                \tje     2a41 <qcow2_update_snapshot_refcount+0x4e3>\n    2a1f:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2a22:\t48 98                \tcltq   \n    2a24:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    2a2b:\t00 \n    2a2c:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    2a30:\t48 01 c2             \tadd    %rax,%rdx\n    2a33:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    2a37:\t48 89 02             \tmov    %rax,(%rdx)\n    2a3a:\tc7 45 88 01 00 00 00 \tmovl   $0x1,-0x78(%rbp)\n    2a41:\t83 45 80 01          \taddl   $0x1,-0x80(%rbp)\n    2a45:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2a48:\t3b 85 6c ff ff ff    \tcmp    -0x94(%rbp),%eax\n    2a4e:\t0f 8c 75 fc ff ff    \tjl     26c9 <qcow2_update_snapshot_refcount+0x16b>\n    2a54:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    2a5b:\t48 89 c7             \tmov    %rax,%rdi\n    2a5e:\te8 00 00 00 00       \tcall   2a63 <qcow2_update_snapshot_refcount+0x505>\n    2a63:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    2a66:\teb 0a                \tjmp    2a72 <qcow2_update_snapshot_refcount+0x514>\n    2a68:\t90                   \tnop\n    2a69:\teb 07                \tjmp    2a72 <qcow2_update_snapshot_refcount+0x514>\n    2a6b:\t90                   \tnop\n    2a6c:\teb 04                \tjmp    2a72 <qcow2_update_snapshot_refcount+0x514>\n    2a6e:\t90                   \tnop\n    2a6f:\teb 01                \tjmp    2a72 <qcow2_update_snapshot_refcount+0x514>\n    2a71:\t90                   \tnop\n    2a72:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n    2a76:\t48 85 c0             \ttest   %rax,%rax\n    2a79:\t74 1e                \tje     2a99 <qcow2_update_snapshot_refcount+0x53b>\n    2a7b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2a7f:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    2a83:\t48 8d 55 98          \tlea    -0x68(%rbp),%rdx\n    2a87:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    2a8e:\t48 89 ce             \tmov    %rcx,%rsi\n    2a91:\t48 89 c7             \tmov    %rax,%rdi\n    2a94:\te8 00 00 00 00       \tcall   2a99 <qcow2_update_snapshot_refcount+0x53b>\n    2a99:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2a9d:\tc6 80 20 03 00 00 00 \tmovb   $0x0,0x320(%rax)\n    2aa4:\t8b 55 90             \tmov    -0x70(%rbp),%edx\n    2aa7:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    2aae:\t89 d6                \tmov    %edx,%esi\n    2ab0:\t48 89 c7             \tmov    %rax,%rdi\n    2ab3:\te8 00 00 00 00       \tcall   2ab8 <qcow2_update_snapshot_refcount+0x55a>\n    2ab8:\t83 7d 90 00          \tcmpl   $0x0,-0x70(%rbp)\n    2abc:\t0f 85 a9 00 00 00    \tjne    2b6b <qcow2_update_snapshot_refcount+0x60d>\n    2ac2:\t83 bd 68 ff ff ff 00 \tcmpl   $0x0,-0x98(%rbp)\n    2ac9:\t0f 88 9c 00 00 00    \tjs     2b6b <qcow2_update_snapshot_refcount+0x60d>\n    2acf:\t83 7d 88 00          \tcmpl   $0x0,-0x78(%rbp)\n    2ad3:\t0f 84 92 00 00 00    \tje     2b6b <qcow2_update_snapshot_refcount+0x60d>\n    2ad9:\tc7 45 80 00 00 00 00 \tmovl   $0x0,-0x80(%rbp)\n    2ae0:\teb 20                \tjmp    2b02 <qcow2_update_snapshot_refcount+0x5a4>\n    2ae2:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2ae5:\t48 98                \tcltq   \n    2ae7:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    2aee:\t00 \n    2aef:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    2af3:\t48 01 d0             \tadd    %rdx,%rax\n    2af6:\t48 89 c7             \tmov    %rax,%rdi\n    2af9:\te8 1c d8 ff ff       \tcall   31a <cpu_to_be64s>\n    2afe:\t83 45 80 01          \taddl   $0x1,-0x80(%rbp)\n    2b02:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2b05:\t3b 85 6c ff ff ff    \tcmp    -0x94(%rbp),%eax\n    2b0b:\t7c d5                \tjl     2ae2 <qcow2_update_snapshot_refcount+0x584>\n    2b0d:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2b11:\t89 c1                \tmov    %eax,%ecx\n    2b13:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    2b1a:\t48 8b 80 68 08 00 00 \tmov    0x868(%rax),%rax\n    2b21:\t48 8b 55 a0          \tmov    -0x60(%rbp),%rdx\n    2b25:\t48 8b b5 70 ff ff ff \tmov    -0x90(%rbp),%rsi\n    2b2c:\t48 89 c7             \tmov    %rax,%rdi\n    2b2f:\te8 00 00 00 00       \tcall   2b34 <qcow2_update_snapshot_refcount+0x5d6>\n    2b34:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n    2b37:\tc7 45 80 00 00 00 00 \tmovl   $0x0,-0x80(%rbp)\n    2b3e:\teb 20                \tjmp    2b60 <qcow2_update_snapshot_refcount+0x602>\n    2b40:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2b43:\t48 98                \tcltq   \n    2b45:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    2b4c:\t00 \n    2b4d:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    2b51:\t48 01 d0             \tadd    %rdx,%rax\n    2b54:\t48 89 c7             \tmov    %rax,%rdi\n    2b57:\te8 76 d7 ff ff       \tcall   2d2 <be64_to_cpus>\n    2b5c:\t83 45 80 01          \taddl   $0x1,-0x80(%rbp)\n    2b60:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2b63:\t3b 85 6c ff ff ff    \tcmp    -0x94(%rbp),%eax\n    2b69:\t7c d5                \tjl     2b40 <qcow2_update_snapshot_refcount+0x5e2>\n    2b6b:\t48 83 7d b8 00       \tcmpq   $0x0,-0x48(%rbp)\n    2b70:\t74 0c                \tje     2b7e <qcow2_update_snapshot_refcount+0x620>\n    2b72:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    2b76:\t48 89 c7             \tmov    %rax,%rdi\n    2b79:\te8 00 00 00 00       \tcall   2b7e <qcow2_update_snapshot_refcount+0x620>\n    2b7e:\t8b 45 90             \tmov    -0x70(%rbp),%eax\n    2b81:\t48 8b 5d e8          \tmov    -0x18(%rbp),%rbx\n    2b85:\t64 48 33 1c 25 28 00 \txor    %fs:0x28,%rbx\n    2b8c:\t00 00 \n    2b8e:\t74 05                \tje     2b95 <qcow2_update_snapshot_refcount+0x637>\n    2b90:\te8 00 00 00 00       \tcall   2b95 <qcow2_update_snapshot_refcount+0x637>\n    2b95:\t48 81 c4 98 00 00 00 \tadd    $0x98,%rsp\n    2b9c:\t5b                   \tpop    %rbx\n    2b9d:\t5d                   \tpop    %rbp\n    2b9e:\tc3                   \tret    ", "code_s": "int qcow2_update_snapshot_refcount(long param_1, long <span class=\"supfact\">param_2</span>,\n                                   int param_3, int <span class=\"supfact\">param_4</span>) {\n  undefined8 *puVar1;\n  ulong uVar2;\n  bool bVar3;\n  int iVar4;\n  undefined8 uVar5;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">local_88</span>;\n  int <span class=\"supfact\">local_84</span>;\n  int <span class=\"supfact\">local_7c</span>;\n  int <span class=\"supfact\">local_78</span>;\n  long <span class=\"supfact\">local_70</span>;\n  long <span class=\"supfact\">local_68</span>;\n  ulong <span class=\"supfact\">local_60</span>;\n  ulong <span class=\"supfact\">local_58</span>;\n  long <span class=\"supfact\">local_50</span>;\n  undefined4 *<span class=\"supfact\">local_48</span>;\n  ulong <span class=\"supfact\">local_40</span>;\n  ulong <span class=\"supfact\">local_38</span>;\n  ulong <span class=\"supfact\">local_30</span>;\n  ulong <span class=\"supfact\">local_28</span>;\n  long <span class=\"supfact\">local_20</span>;\n  <span class=\"supfact\">local_20</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_48</span> = *(undefined4 **)(param_1 + Number);\n  bVar3 = false;\n  <span class=\"supfact\">local_70</span> = Number;\n  <span class=\"supfact\">local_68</span> = Number;\n  <span class=\"supfact\">local_40</span> = (long)param_3 << Number;\n  *(undefined *)(<span class=\"supfact\">local_48</span> + Number) = Number;\n  if (*(long *)(<span class=\"supfact\">local_48</span> + Number) == <span class=\"supfact\">param_2</span>) {\n    if (param_3 != <span class=\"supfact\">local_48</span>[Number]) {\n      __assert_fail(String, String, Number, String);\n    }\n    <span class=\"supfact\">local_68</span> = *(long *)(<span class=\"supfact\">local_48</span> + Number);\n    <span class=\"supfact\">local_50</span> = Number;\n  } else {\n    uVar5 = FUN_00100557(<span class=\"supfact\">local_40</span>, Number);\n    <span class=\"supfact\">local_68</span> = g_malloc0(uVar5);\n    <span class=\"supfact\">local_50</span> = Number;\n    <span class=\"supfact\">local_78</span> =\n        bdrv_pread(*(undefined8 *)(param_1 + Number), <span class=\"supfact\">param_2</span>,\n                   <span class=\"supfact\">local_68</span>, <span class=\"supfact\">local_40</span> & Number);\n    if (<span class=\"supfact\">local_78</span> < Number)\n      goto LAB_00102a72;\n    for (<span class=\"supfact\">local_88</span> = Number; <span class=\"supfact\">local_88</span> < param_3;\n         <span class=\"supfact\">local_88</span> = <span class=\"supfact\">local_88</span> + Number) {\n      FUN_001002d2(<span class=\"supfact\">local_68</span> +\n                   (long)<span class=\"supfact\">local_88</span> * Number);\n    }\n  }\n  for (<span class=\"supfact\">local_88</span> = Number; <span class=\"supfact\">local_88</span> < param_3;\n       <span class=\"supfact\">local_88</span> = <span class=\"supfact\">local_88</span> + Number) {\n    uVar2 = *(ulong *)(<span class=\"supfact\">local_68</span> +\n                       (long)<span class=\"supfact\">local_88</span> * Number);\n    <span class=\"supfact\">local_60</span> = uVar2;\n    if (uVar2 != Number) {\n      <span class=\"supfact\">local_60</span> = uVar2 & Number;\n      <span class=\"supfact\">local_38</span> = uVar2;\n      <span class=\"supfact\">local_78</span> = qcow2_cache_get(\n          param_1, *(undefined8 *)(<span class=\"supfact\">local_48</span> + Number),\n          <span class=\"supfact\">local_60</span>, &<span class=\"supfact\">local_70</span>);\n      if (<span class=\"supfact\">local_78</span> < Number)\n        goto LAB_00102a72;\n      for (<span class=\"supfact\">local_84</span> = Number;\n           <span class=\"supfact\">local_84</span> < (int)<span class=\"supfact\">local_48</span>[Number];\n           <span class=\"supfact\">local_84</span> = <span class=\"supfact\">local_84</span> + Number) {\n        <span class=\"supfact\">local_30</span> = FUN_00100258(\n            *(undefined8 *)(<span class=\"supfact\">local_70</span> +\n                            (long)<span class=\"supfact\">local_84</span> * Number));\n        <span class=\"supfact\">local_58</span> = <span class=\"supfact\">local_30</span> & Number;\n        iVar4 = FUN_001005ae(<span class=\"supfact\">local_58</span>);\n        if (iVar4 == Number) {\n        LAB_00102834:\n          <span class=\"supfact\">local_28</span> = (<span class=\"supfact\">local_58</span> & Number) >>\n                                     ((byte)*<span class=\"supfact\">local_48</span> & Number);\n          if (<span class=\"supfact\">local_28</span> == Number) {\n            <span class=\"supfact\">local_7c</span> = Number;\n          } else {\n            if (<span class=\"supfact\">param_4</span> == Number) {\n              <span class=\"supfact\">local_7c</span> =\n                  FUN_001008fb(param_1, <span class=\"supfact\">local_28</span>);\n            } else {\n              <span class=\"supfact\">local_7c</span> = qcow2_update_cluster_refcount(\n                  param_1, <span class=\"supfact\">local_28</span>, <span class=\"supfact\">param_4</span>,\n                  Number);\n            }\n            if (<span class=\"supfact\">local_7c</span> < Number) {\n              <span class=\"supfact\">local_78</span> = <span class=\"supfact\">local_7c</span>;\n              goto LAB_00102a72;\n            }\n          }\n        } else {\n          if (Number < iVar4) {\n          LAB_001028c6:\n            abort();\n          }\n          if (iVar4 == Number) {\n            if ((<span class=\"supfact\">param_4</span> != Number) &&\n                (<span class=\"supfact\">local_78</span> = FUN_00101a64(\n                     param_1,\n                     *(ulong *)(<span class=\"supfact\">local_48</span> + Number) &\n                         <span class=\"supfact\">local_58</span> & Number,\n                     (long)(int)(((<span class=\"supfact\">local_48</span>[Number] &\n                                   (uint)(<span class=\"supfact\">local_58</span> >>\n                                          ((byte)<span class=\"supfact\">local_48</span>\n                                               [Number] &\n                                           Number))) +\n                                  Number) *\n                                 Number),\n                     <span class=\"supfact\">param_4</span>, Number),\n                 <span class=\"supfact\">local_78</span> < Number))\n              goto LAB_00102a72;\n            <span class=\"supfact\">local_7c</span> = Number;\n          } else {\n            if (Number < iVar4)\n              goto LAB_001028c6;\n            if (iVar4 != Number) {\n              if (iVar4 != Number)\n                goto LAB_001028c6;\n              goto LAB_00102834;\n            }\n            <span class=\"supfact\">local_7c</span> = Number;\n          }\n        }\n        if (<span class=\"supfact\">local_7c</span> == Number) {\n          <span class=\"supfact\">local_58</span> = <span class=\"supfact\">local_58</span> | Number;\n        }\n        if (<span class=\"supfact\">local_58</span> != <span class=\"supfact\">local_30</span>) {\n          if (Number < <span class=\"supfact\">param_4</span>) {\n            qcow2_cache_set_dependency(\n                param_1, *(undefined8 *)(<span class=\"supfact\">local_48</span> + Number),\n                *(undefined8 *)(<span class=\"supfact\">local_48</span> + Number));\n          }\n          puVar1 = (undefined8 *)(<span class=\"supfact\">local_70</span> +\n                                  (long)<span class=\"supfact\">local_84</span> * Number);\n          uVar5 = FUN_00100295(<span class=\"supfact\">local_58</span>);\n          *puVar1 = uVar5;\n          qcow2_cache_entry_mark_dirty(\n              *(undefined8 *)(<span class=\"supfact\">local_48</span> + Number),\n              <span class=\"supfact\">local_70</span>);\n        }\n      }\n      <span class=\"supfact\">local_78</span> = qcow2_cache_put(\n          param_1, *(undefined8 *)(<span class=\"supfact\">local_48</span> + Number),\n          &<span class=\"supfact\">local_70</span>);\n      if (<span class=\"supfact\">local_78</span> < Number)\n        goto LAB_00102a72;\n      if (<span class=\"supfact\">param_4</span> == Number) {\n        <span class=\"supfact\">local_7c</span> = FUN_001008fb(\n            param_1, <span class=\"supfact\">local_60</span> >>\n                         ((byte)*<span class=\"supfact\">local_48</span> & Number));\n      } else {\n        <span class=\"supfact\">local_7c</span> = qcow2_update_cluster_refcount(\n            param_1,\n            <span class=\"supfact\">local_60</span> >>\n                ((byte)*<span class=\"supfact\">local_48</span> & Number),\n            <span class=\"supfact\">param_4</span>, Number);\n      }\n      if (<span class=\"supfact\">local_7c</span> < Number) {\n        <span class=\"supfact\">local_78</span> = <span class=\"supfact\">local_7c</span>;\n        goto LAB_00102a72;\n      }\n      if (<span class=\"supfact\">local_7c</span> == Number) {\n        <span class=\"supfact\">local_60</span> = <span class=\"supfact\">local_60</span> | Number;\n      }\n      if (<span class=\"supfact\">local_60</span> != <span class=\"supfact\">local_38</span>) {\n        *(ulong *)((long)<span class=\"supfact\">local_88</span> * Number +\n                   <span class=\"supfact\">local_68</span>) = <span class=\"supfact\">local_60</span>;\n        bVar3 = true;\n      }\n    }\n  }\n  <span class=\"supfact\">local_78</span> = bdrv_flush(param_1);\nLAB_00102a72:\n  if (<span class=\"supfact\">local_70</span> != Number) {\n    qcow2_cache_put(param_1, *(undefined8 *)(<span class=\"supfact\">local_48</span> + Number),\n                    &<span class=\"supfact\">local_70</span>);\n  }\n  *(undefined *)(<span class=\"supfact\">local_48</span> + Number) = Number;\n  qcow2_process_discards(param_1, <span class=\"supfact\">local_78</span>);\n  if (((<span class=\"supfact\">local_78</span> == Number) &&\n       (-Number < <span class=\"supfact\">param_4</span>)) &&\n      (bVar3)) {\n    for (<span class=\"supfact\">local_88</span> = Number; <span class=\"supfact\">local_88</span> < param_3;\n         <span class=\"supfact\">local_88</span> = <span class=\"supfact\">local_88</span> + Number) {\n      FUN_0010031a(<span class=\"supfact\">local_68</span> +\n                   (long)<span class=\"supfact\">local_88</span> * Number);\n    }\n    <span class=\"supfact\">local_78</span> = bdrv_pwrite_sync(\n        *(undefined8 *)(param_1 + Number), <span class=\"supfact\">param_2</span>,\n        <span class=\"supfact\">local_68</span>, <span class=\"supfact\">local_40</span> & Number);\n    for (<span class=\"supfact\">local_88</span> = Number; <span class=\"supfact\">local_88</span> < param_3;\n         <span class=\"supfact\">local_88</span> = <span class=\"supfact\">local_88</span> + Number) {\n      FUN_001002d2(<span class=\"supfact\">local_68</span> +\n                   (long)<span class=\"supfact\">local_88</span> * Number);\n    }\n  }\n  if (<span class=\"supfact\">local_50</span> != Number) {\n    g_free(<span class=\"supfact\">local_68</span>);\n  }\n  if (<span class=\"supfact\">local_20</span> ==\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">local_78</span>;\n  }\n  __stack_chk_fail();\n}", "code_t": "int qcow2_update_snapshot_refcount(BlockDriverState *bs,\n                                   int64_t <span class=\"supfact\">l1_table_offset</span>,\n                                   int l1_size, int addend) {\n  uint64_t *puVar1;\n  ulong uVar2;\n  bool bVar3;\n  int iVar4;\n  int64_t iVar5;\n  uint64_t uVar6;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int addend - local;\n  int l1_size - local;\n  int64_t <span class=\"supfact\">l1_table_offset</span> - local;\n  BlockDriverState *bs - local;\n  int <span class=\"supfact\">i</span>;\n  int <span class=\"supfact\">j</span>;\n  int l1_modified;\n  int <span class=\"supfact\">refcount</span>;\n  int <span class=\"supfact\">ret</span>;\n  int nb_csectors;\n  uint64_t *<span class=\"supfact\">l2_table</span>;\n  uint64_t *<span class=\"supfact\">l1_table</span>;\n  uint64_t <span class=\"supfact\">l2_offset</span>;\n  uint64_t <span class=\"supfact\">offset</span>;\n  uint64_t <span class=\"supfact\">l1_allocated</span>;\n  BDRVQcowState *<span class=\"supfact\">s</span>;\n  uint64_t <span class=\"supfact\">l1_size2</span>;\n  int64_t <span class=\"supfact\">old_l2_offset</span>;\n  int64_t <span class=\"supfact\">old_offset</span>;\n  uint64_t <span class=\"supfact\">cluster_index</span>;\n  long <span class=\"supfact\">local_20</span>;\n  <span class=\"supfact\">local_20</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">s</span> = (BDRVQcowState *)bs->opaque;\n  bVar3 = false;\n  <span class=\"supfact\">l2_table</span> = (uint64_t *)Number;\n  <span class=\"supfact\">l1_table</span> = (uint64_t *)Number;\n  <span class=\"supfact\">l1_size2</span> = (long)l1_size << Number;\n  <span class=\"supfact\">s</span>->cache_discards = true;\n  if (<span class=\"supfact\">s</span>-><span class=\"supfact\">l1_table_offset</span> ==\n      <span class=\"supfact\">l1_table_offset</span>) {\n    if (l1_size != <span class=\"supfact\">s</span>->l1_size) {\n      __assert_fail(String, String, Number, String);\n    }\n    <span class=\"supfact\">l1_table</span> = <span class=\"supfact\">s</span>-><span class=\"supfact\">l1_table</span>;\n    <span class=\"supfact\">l1_allocated</span> = Number;\n  } else {\n    iVar5 = align_offset(<span class=\"supfact\">l1_size2</span>, Number);\n    <span class=\"supfact\">l1_table</span> = (uint64_t *)g_malloc0(iVar5);\n    <span class=\"supfact\">l1_allocated</span> = Number;\n    <span class=\"supfact\">ret</span> =\n        bdrv_pread(bs->file, <span class=\"supfact\">l1_table_offset</span>,\n                   <span class=\"supfact\">l1_table</span>, <span class=\"supfact\">l1_size2</span> & Number);\n    if (<span class=\"supfact\">ret</span> < Number)\n      goto fail;\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < l1_size;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      be64_to_cpus(<span class=\"supfact\">l1_table</span> + <span class=\"supfact\">i</span>);\n    }\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < l1_size;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    uVar2 = <span class=\"supfact\">l1_table</span>[<span class=\"supfact\">i</span>];\n    <span class=\"supfact\">l2_offset</span> = uVar2;\n    if (uVar2 != Number) {\n      <span class=\"supfact\">l2_offset</span> = uVar2 & Number;\n      <span class=\"supfact\">old_l2_offset</span> = uVar2;\n      <span class=\"supfact\">ret</span> =\n          qcow2_cache_get(bs, <span class=\"supfact\">s</span>->l2_table_cache,\n                          <span class=\"supfact\">l2_offset</span>, &<span class=\"supfact\">l2_table</span>);\n      if (<span class=\"supfact\">ret</span> < Number)\n        goto fail;\n      for (<span class=\"supfact\">j</span> = Number;\n           <span class=\"supfact\">j</span> < <span class=\"supfact\">s</span>->l2_size;\n           <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number) {\n        <span class=\"supfact\">old_offset</span> =\n            be64_to_cpu(<span class=\"supfact\">l2_table</span>[<span class=\"supfact\">j</span>]);\n        <span class=\"supfact\">offset</span> = <span class=\"supfact\">old_offset</span> & Number;\n        iVar4 = qcow2_get_cluster_type(<span class=\"supfact\">offset</span>);\n        if (iVar4 == Number) {\n        LAB_00102834:\n          <span class=\"supfact\">cluster_index</span> =\n              (<span class=\"supfact\">offset</span> & Number) >>\n              ((byte)<span class=\"supfact\">s</span>->cluster_bits & Number);\n          if (<span class=\"supfact\">cluster_index</span> == Number) {\n            <span class=\"supfact\">refcount</span> = Number;\n          } else {\n            if (addend == Number) {\n              <span class=\"supfact\">refcount</span> =\n                  get_refcount(bs, <span class=\"supfact\">cluster_index</span>);\n            } else {\n              <span class=\"supfact\">refcount</span> = qcow2_update_cluster_refcount(\n                  bs, <span class=\"supfact\">cluster_index</span>, addend,\n                  QCOW2_DISCARD_SNAPSHOT);\n            }\n            if (<span class=\"supfact\">refcount</span> < Number) {\n              <span class=\"supfact\">ret</span> = <span class=\"supfact\">refcount</span>;\n              goto fail;\n            }\n          }\n        } else {\n          if (Number < iVar4) {\n          LAB_001028c6:\n            abort();\n          }\n          if (iVar4 == Number) {\n            if ((addend != Number) &&\n                (<span class=\"supfact\">ret</span> = update_refcount(\n                     bs,\n                     <span class=\"supfact\">s</span>->cluster_offset_mask &\n                         <span class=\"supfact\">offset</span> & Number,\n                     (long)(int)(((<span class=\"supfact\">s</span>->csize_mask &\n                                   (uint)(<span class=\"supfact\">offset</span> >>\n                                          ((byte)\n                                               <span class=\"supfact\">s</span>->csize_shift &\n                                           Number))) +\n                                  Number) *\n                                 Number),\n                     addend, QCOW2_DISCARD_SNAPSHOT),\n                 <span class=\"supfact\">ret</span> < Number))\n              goto fail;\n            <span class=\"supfact\">refcount</span> = Number;\n          } else {\n            if (Number < iVar4)\n              goto LAB_001028c6;\n            if (iVar4 != Number) {\n              if (iVar4 != Number)\n                goto LAB_001028c6;\n              goto LAB_00102834;\n            }\n            <span class=\"supfact\">refcount</span> = Number;\n          }\n        }\n        if (<span class=\"supfact\">refcount</span> == Number) {\n          <span class=\"supfact\">offset</span> = <span class=\"supfact\">offset</span> | Number;\n        }\n        if (<span class=\"supfact\">offset</span> != <span class=\"supfact\">old_offset</span>) {\n          if (Number < addend) {\n            qcow2_cache_set_dependency(bs, <span class=\"supfact\">s</span>->l2_table_cache,\n                                       <span class=\"supfact\">s</span>->refcount_block_cache);\n          }\n          puVar1 = <span class=\"supfact\">l2_table</span> + <span class=\"supfact\">j</span>;\n          uVar6 = cpu_to_be64(<span class=\"supfact\">offset</span>);\n          *puVar1 = uVar6;\n          qcow2_cache_entry_mark_dirty(<span class=\"supfact\">s</span>->l2_table_cache,\n                                       <span class=\"supfact\">l2_table</span>);\n        }\n      }\n      <span class=\"supfact\">ret</span> = qcow2_cache_put(\n          bs, <span class=\"supfact\">s</span>->l2_table_cache, &<span class=\"supfact\">l2_table</span>);\n      if (<span class=\"supfact\">ret</span> < Number)\n        goto fail;\n      if (addend == Number) {\n        <span class=\"supfact\">refcount</span> = get_refcount(\n            bs, <span class=\"supfact\">l2_offset</span> >>\n                    ((byte)<span class=\"supfact\">s</span>->cluster_bits & Number));\n      } else {\n        <span class=\"supfact\">refcount</span> = qcow2_update_cluster_refcount(\n            bs,\n            <span class=\"supfact\">l2_offset</span> >>\n                ((byte)<span class=\"supfact\">s</span>->cluster_bits & Number),\n            addend, QCOW2_DISCARD_SNAPSHOT);\n      }\n      if (<span class=\"supfact\">refcount</span> < Number) {\n        <span class=\"supfact\">ret</span> = <span class=\"supfact\">refcount</span>;\n        goto fail;\n      }\n      if (<span class=\"supfact\">refcount</span> == Number) {\n        <span class=\"supfact\">l2_offset</span> = <span class=\"supfact\">l2_offset</span> | Number;\n      }\n      if (<span class=\"supfact\">l2_offset</span> != <span class=\"supfact\">old_l2_offset</span>) {\n        <span class=\"supfact\">l1_table</span>[<span class=\"supfact\">i</span>] = <span class=\"supfact\">l2_offset</span>;\n        bVar3 = true;\n      }\n    }\n  }\n  <span class=\"supfact\">ret</span> = bdrv_flush(bs);\nfail:\n  if (<span class=\"supfact\">l2_table</span> != (uint64_t *)Number) {\n    qcow2_cache_put(bs, <span class=\"supfact\">s</span>->l2_table_cache,\n                    &<span class=\"supfact\">l2_table</span>);\n  }\n  <span class=\"supfact\">s</span>->cache_discards = false;\n  qcow2_process_discards(bs, <span class=\"supfact\">ret</span>);\n  if (((<span class=\"supfact\">ret</span> == Number) && (-Number < addend)) && (bVar3)) {\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < l1_size;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      cpu_to_be64s(<span class=\"supfact\">l1_table</span> + <span class=\"supfact\">i</span>);\n    }\n    <span class=\"supfact\">ret</span> = bdrv_pwrite_sync(\n        bs->file, <span class=\"supfact\">l1_table_offset</span>, <span class=\"supfact\">l1_table</span>,\n        <span class=\"supfact\">l1_size2</span> & Number);\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < l1_size;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      be64_to_cpus(<span class=\"supfact\">l1_table</span> + <span class=\"supfact\">i</span>);\n    }\n  }\n  if (<span class=\"supfact\">l1_allocated</span> != Number) {\n    g_free(<span class=\"supfact\">l1_table</span>);\n  }\n  if (<span class=\"supfact\">local_20</span> ==\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">ret</span>;\n  }\n  __stack_chk_fail();\n}", "var": [{"name": "param_2", "type": "int64_t", "pred_name": "__unk__", "ref_name": "l1_table_offset", "ref_type": "int64_t"}, {"name": "param_4", "type": "int", "pred_name": "addend", "ref_name": "", "ref_type": "disappear"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_88", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}, {"name": "local_84", "type": "int", "pred_name": "j", "ref_name": "j", "ref_type": "int"}, {"name": "local_7c", "type": "int", "pred_name": "ret", "ref_name": "refcount", "ref_type": "int"}, {"name": "local_78", "type": "int", "pred_name": "__unk__", "ref_name": "ret", "ref_type": "int"}, {"name": "local_70", "type": "uint64_t * *", "pred_name": "l1_table", "ref_name": "l2_table", "ref_type": "uint64_t * *"}, {"name": "local_68", "type": "uint64_t", "pred_name": "__unk__", "ref_name": "l1_table", "ref_type": "uint64_t * *"}, {"name": "local_60", "type": "uint64_t * *", "pred_name": "l1_table", "ref_name": "l2_offset", "ref_type": "uint64_t"}, {"name": "local_58", "type": "uint64_t", "pred_name": "l2_offset", "ref_name": "offset", "ref_type": "uint64_t"}, {"name": "local_50", "type": "uint64_t", "pred_name": "offset", "ref_name": "l1_allocated", "ref_type": "uint64_t"}, {"name": "local_48", "type": "uint64_t", "pred_name": "__unk__", "ref_name": "s", "ref_type": "BDRVQcowState * *"}, {"name": "local_40", "type": "BDRVQcowState * *", "pred_name": "s", "ref_name": "l1_size2", "ref_type": "uint64_t"}, {"name": "local_38", "type": "uint64_t", "pred_name": "__unk__", "ref_name": "old_l2_offset", "ref_type": "int64_t"}, {"name": "local_30", "type": "int64_t", "pred_name": "__unk__", "ref_name": "old_offset", "ref_type": "int64_t"}, {"name": "local_28", "type": "int64_t", "pred_name": "__unk__", "ref_name": "cluster_index", "ref_type": "uint64_t"}, {"name": "local_20", "type": "long", "pred_name": "local_20", "ref_name": "local_20", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "openamedia", "repo_name": "ffmpeg-android", "path": "openamedia/ffmpeg-android/0da3724bcc027775e1ce96fc6a0712e25f89da43f4b9b9b72f27dec35d583815", "path_in_repo": "openamedia/ffmpeg-android//libswresample/swresample.o", "objdump": "0000000000002a80 <swr_convert>:\n    2a80:\t48 81 ec 78 01 00 00 \tsub    $0x178,%rsp\n    2a87:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n    2a8c:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n    2a91:\t89 54 24 0c          \tmov    %edx,0xc(%rsp)\n    2a95:\t48 89 0c 24          \tmov    %rcx,(%rsp)\n    2a99:\t44 89 44 24 08       \tmov    %r8d,0x8(%rsp)\n    2a9e:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2aa3:\t48 05 80 17 00 00    \tadd    $0x1780,%rax\n    2aa9:\t48 89 84 24 60 01 00 \tmov    %rax,0x160(%rsp)\n    2ab0:\t00 \n    2ab1:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2ab6:\t48 05 00 1c 00 00    \tadd    $0x1c00,%rax\n    2abc:\t48 89 84 24 58 01 00 \tmov    %rax,0x158(%rsp)\n    2ac3:\t00 \n    2ac4:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2ac9:\t48 89 c7             \tmov    %rax,%rdi\n    2acc:\te8 00 00 00 00       \tcall   2ad1 <swr_convert+0x51>\n    2ad1:\t85 c0                \ttest   %eax,%eax\n    2ad3:\t0f 85 61 01 00 00    \tjne    2c3a <swr_convert+0x1ba>\n    2ad9:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2ade:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2ae3:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    2ae8:\t48 89 c7             \tmov    %rax,%rdi\n    2aeb:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2af0:\te8 00 00 00 00       \tcall   2af5 <swr_convert+0x75>\n    2af5:\tb8 ea ff ff ff       \tmov    $0xffffffea,%eax\n    2afa:\te9 6f 06 00 00       \tjmp    316e <swr_convert+0x6ee>\n    2aff:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2b04:\t8b 80 a0 20 00 00    \tmov    0x20a0(%rax),%eax\n    2b0a:\tba 00 40 00 00       \tmov    $0x4000,%edx\n    2b0f:\t3d 00 40 00 00       \tcmp    $0x4000,%eax\n    2b14:\t0f 4f c2             \tcmovg  %edx,%eax\n    2b17:\t48 8b 54 24 18       \tmov    0x18(%rsp),%rdx\n    2b1c:\t48 81 c2 60 1f 00 00 \tadd    $0x1f60,%rdx\n    2b23:\t89 c6                \tmov    %eax,%esi\n    2b25:\t48 89 d7             \tmov    %rdx,%rdi\n    2b28:\te8 00 00 00 00       \tcall   2b2d <swr_convert+0xad>\n    2b2d:\t89 84 24 48 01 00 00 \tmov    %eax,0x148(%rsp)\n    2b34:\t83 bc 24 48 01 00 00 \tcmpl   $0x0,0x148(%rsp)\n    2b3b:\t00 \n    2b3c:\t79 0c                \tjns    2b4a <swr_convert+0xca>\n    2b3e:\t8b 84 24 48 01 00 00 \tmov    0x148(%rsp),%eax\n    2b45:\te9 24 06 00 00       \tjmp    316e <swr_convert+0x6ee>\n    2b4a:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2b4f:\t48 8d 90 60 1f 00 00 \tlea    0x1f60(%rax),%rdx\n    2b56:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    2b5b:\t48 89 c6             \tmov    %rax,%rsi\n    2b5e:\t48 89 d7             \tmov    %rdx,%rdi\n    2b61:\te8 96 eb ff ff       \tcall   16fc <reversefill_audiodata>\n    2b66:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2b6b:\t8b 80 a0 20 00 00    \tmov    0x20a0(%rax),%eax\n    2b71:\tf7 d8                \tneg    %eax\n    2b73:\t89 c2                \tmov    %eax,%edx\n    2b75:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2b7a:\t89 90 a0 20 00 00    \tmov    %edx,0x20a0(%rax)\n    2b80:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2b85:\t8b 80 a0 20 00 00    \tmov    0x20a0(%rax),%eax\n    2b8b:\t3d 00 c0 ff ff       \tcmp    $0xffffc000,%eax\n    2b90:\t7c 11                \tjl     2ba3 <swr_convert+0x123>\n    2b92:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2b97:\t8b 80 a0 20 00 00    \tmov    0x20a0(%rax),%eax\n    2b9d:\tf7 d8                \tneg    %eax\n    2b9f:\t89 c2                \tmov    %eax,%edx\n    2ba1:\teb 05                \tjmp    2ba8 <swr_convert+0x128>\n    2ba3:\tba 00 40 00 00       \tmov    $0x4000,%edx\n    2ba8:\t8b 7c 24 08          \tmov    0x8(%rsp),%edi\n    2bac:\t48 8b 0c 24          \tmov    (%rsp),%rcx\n    2bb0:\t48 8d 74 24 20       \tlea    0x20(%rsp),%rsi\n    2bb5:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2bba:\t41 89 f8             \tmov    %edi,%r8d\n    2bbd:\t48 89 c7             \tmov    %rax,%rdi\n    2bc0:\te8 00 00 00 00       \tcall   2bc5 <swr_convert+0x145>\n    2bc5:\t89 84 24 48 01 00 00 \tmov    %eax,0x148(%rsp)\n    2bcc:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2bd1:\t8b 80 a0 20 00 00    \tmov    0x20a0(%rax),%eax\n    2bd7:\tf7 d8                \tneg    %eax\n    2bd9:\t89 c2                \tmov    %eax,%edx\n    2bdb:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2be0:\t89 90 a0 20 00 00    \tmov    %edx,0x20a0(%rax)\n    2be6:\tc7 44 24 08 00 00 00 \tmovl   $0x0,0x8(%rsp)\n    2bed:\t00 \n    2bee:\t83 bc 24 48 01 00 00 \tcmpl   $0x0,0x148(%rsp)\n    2bf5:\t00 \n    2bf6:\t7e 21                \tjle    2c19 <swr_convert+0x199>\n    2bf8:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2bfd:\t8b 80 a0 20 00 00    \tmov    0x20a0(%rax),%eax\n    2c03:\t2b 84 24 48 01 00 00 \tsub    0x148(%rsp),%eax\n    2c0a:\t89 c2                \tmov    %eax,%edx\n    2c0c:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2c11:\t89 90 a0 20 00 00    \tmov    %edx,0x20a0(%rax)\n    2c17:\teb 21                \tjmp    2c3a <swr_convert+0x1ba>\n    2c19:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2c1e:\t8b 80 a0 20 00 00    \tmov    0x20a0(%rax),%eax\n    2c24:\t85 c0                \ttest   %eax,%eax\n    2c26:\t75 08                \tjne    2c30 <swr_convert+0x1b0>\n    2c28:\t48 83 7c 24 10 00    \tcmpq   $0x0,0x10(%rsp)\n    2c2e:\t75 0a                \tjne    2c3a <swr_convert+0x1ba>\n    2c30:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2c35:\te9 34 05 00 00       \tjmp    316e <swr_convert+0x6ee>\n    2c3a:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2c3f:\t8b 80 a0 20 00 00    \tmov    0x20a0(%rax),%eax\n    2c45:\t85 c0                \ttest   %eax,%eax\n    2c47:\t0f 8f b2 fe ff ff    \tjg     2aff <swr_convert+0x7f>\n    2c4d:\t48 83 3c 24 00       \tcmpq   $0x0,(%rsp)\n    2c52:\t75 73                \tjne    2cc7 <swr_convert+0x247>\n    2c54:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2c59:\t48 8b 80 c0 20 00 00 \tmov    0x20c0(%rax),%rax\n    2c60:\t48 85 c0             \ttest   %rax,%rax\n    2c63:\t74 49                \tje     2cae <swr_convert+0x22e>\n    2c65:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2c6a:\t8b 80 8c 20 00 00    \tmov    0x208c(%rax),%eax\n    2c70:\t85 c0                \ttest   %eax,%eax\n    2c72:\t75 1a                \tjne    2c8e <swr_convert+0x20e>\n    2c74:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2c79:\t48 8b 80 c8 20 00 00 \tmov    0x20c8(%rax),%rax\n    2c80:\t48 8b 50 18          \tmov    0x18(%rax),%rdx\n    2c84:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2c89:\t48 89 c7             \tmov    %rax,%rdi\n    2c8c:\tff d2                \tcall   *%rdx\n    2c8e:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2c93:\tc7 80 88 20 00 00 00 \tmovl   $0x0,0x2088(%rax)\n    2c9a:\t00 00 00 \n    2c9d:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2ca2:\tc7 80 8c 20 00 00 01 \tmovl   $0x1,0x208c(%rax)\n    2ca9:\t00 00 00 \n    2cac:\teb 30                \tjmp    2cde <swr_convert+0x25e>\n    2cae:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2cb3:\t8b 80 84 20 00 00    \tmov    0x2084(%rax),%eax\n    2cb9:\t85 c0                \ttest   %eax,%eax\n    2cbb:\t75 21                \tjne    2cde <swr_convert+0x25e>\n    2cbd:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2cc2:\te9 a7 04 00 00       \tjmp    316e <swr_convert+0x6ee>\n    2cc7:\t48 8b 14 24          \tmov    (%rsp),%rdx\n    2ccb:\t48 8b 84 24 60 01 00 \tmov    0x160(%rsp),%rax\n    2cd2:\t00 \n    2cd3:\t48 89 d6             \tmov    %rdx,%rsi\n    2cd6:\t48 89 c7             \tmov    %rax,%rdi\n    2cd9:\te8 42 e9 ff ff       \tcall   1620 <fill_audiodata>\n    2cde:\t48 8b 54 24 10       \tmov    0x10(%rsp),%rdx\n    2ce3:\t48 8b 84 24 58 01 00 \tmov    0x158(%rsp),%rax\n    2cea:\t00 \n    2ceb:\t48 89 d6             \tmov    %rdx,%rsi\n    2cee:\t48 89 c7             \tmov    %rax,%rdi\n    2cf1:\te8 2a e9 ff ff       \tcall   1620 <fill_audiodata>\n    2cf6:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2cfb:\t48 8b 80 c0 20 00 00 \tmov    0x20c0(%rax),%rax\n    2d02:\t48 85 c0             \ttest   %rax,%rax\n    2d05:\t0f 84 87 00 00 00    \tje     2d92 <swr_convert+0x312>\n    2d0b:\t8b 7c 24 08          \tmov    0x8(%rsp),%edi\n    2d0f:\t48 8b 8c 24 60 01 00 \tmov    0x160(%rsp),%rcx\n    2d16:\t00 \n    2d17:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    2d1b:\t48 8b b4 24 58 01 00 \tmov    0x158(%rsp),%rsi\n    2d22:\t00 \n    2d23:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2d28:\t41 89 f8             \tmov    %edi,%r8d\n    2d2b:\t48 89 c7             \tmov    %rax,%rdi\n    2d2e:\te8 c1 f0 ff ff       \tcall   1df4 <swr_convert_internal>\n    2d33:\t89 84 24 4c 01 00 00 \tmov    %eax,0x14c(%rsp)\n    2d3a:\t83 bc 24 4c 01 00 00 \tcmpl   $0x0,0x14c(%rsp)\n    2d41:\t00 \n    2d42:\t7e 42                \tjle    2d86 <swr_convert+0x306>\n    2d44:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2d49:\t8b 80 a0 20 00 00    \tmov    0x20a0(%rax),%eax\n    2d4f:\t85 c0                \ttest   %eax,%eax\n    2d51:\t75 33                \tjne    2d86 <swr_convert+0x306>\n    2d53:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2d58:\t48 8b 90 90 20 00 00 \tmov    0x2090(%rax),%rdx\n    2d5f:\t8b 84 24 4c 01 00 00 \tmov    0x14c(%rsp),%eax\n    2d66:\t48 63 c8             \tmovslq %eax,%rcx\n    2d69:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2d6e:\t8b 40 38             \tmov    0x38(%rax),%eax\n    2d71:\t48 98                \tcltq   \n    2d73:\t48 0f af c1          \timul   %rcx,%rax\n    2d77:\t48 01 c2             \tadd    %rax,%rdx\n    2d7a:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2d7f:\t48 89 90 90 20 00 00 \tmov    %rdx,0x2090(%rax)\n    2d86:\t8b 84 24 4c 01 00 00 \tmov    0x14c(%rsp),%eax\n    2d8d:\te9 dc 03 00 00       \tjmp    316e <swr_convert+0x6ee>\n    2d92:\t48 8b 94 24 60 01 00 \tmov    0x160(%rsp),%rdx\n    2d99:\t00 \n    2d9a:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    2d9f:\t48 89 d6             \tmov    %rdx,%rsi\n    2da2:\tba 24 00 00 00       \tmov    $0x24,%edx\n    2da7:\t48 89 c7             \tmov    %rax,%rdi\n    2daa:\t48 89 d1             \tmov    %rdx,%rcx\n    2dad:\tf3 48 a5             \trep movsq %ds:(%rsi),%es:(%rdi)\n    2db0:\tc7 84 24 6c 01 00 00 \tmovl   $0x0,0x16c(%rsp)\n    2db7:\t00 00 00 00 \n    2dbb:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2dc0:\t8b 80 84 20 00 00    \tmov    0x2084(%rax),%eax\n    2dc6:\t39 44 24 0c          \tcmp    %eax,0xc(%rsp)\n    2dca:\t0f 4e 44 24 0c       \tcmovle 0xc(%rsp),%eax\n    2dcf:\t89 84 24 54 01 00 00 \tmov    %eax,0x154(%rsp)\n    2dd6:\t83 bc 24 54 01 00 00 \tcmpl   $0x0,0x154(%rsp)\n    2ddd:\t00 \n    2dde:\t0f 84 06 01 00 00    \tje     2eea <swr_convert+0x46a>\n    2de4:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2de9:\t8b 90 80 20 00 00    \tmov    0x2080(%rax),%edx\n    2def:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2df4:\t48 8d 88 20 1d 00 00 \tlea    0x1d20(%rax),%rcx\n    2dfb:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    2e00:\t48 89 ce             \tmov    %rcx,%rsi\n    2e03:\t48 89 c7             \tmov    %rax,%rdi\n    2e06:\te8 68 e9 ff ff       \tcall   1773 <buf_set>\n    2e0b:\t8b bc 24 54 01 00 00 \tmov    0x154(%rsp),%edi\n    2e12:\t48 8d 4c 24 20       \tlea    0x20(%rsp),%rcx\n    2e17:\t8b 94 24 54 01 00 00 \tmov    0x154(%rsp),%edx\n    2e1e:\t48 8b b4 24 58 01 00 \tmov    0x158(%rsp),%rsi\n    2e25:\t00 \n    2e26:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2e2b:\t41 89 f8             \tmov    %edi,%r8d\n    2e2e:\t48 89 c7             \tmov    %rax,%rdi\n    2e31:\te8 be ef ff ff       \tcall   1df4 <swr_convert_internal>\n    2e36:\t89 84 24 50 01 00 00 \tmov    %eax,0x150(%rsp)\n    2e3d:\t83 bc 24 50 01 00 00 \tcmpl   $0x0,0x150(%rsp)\n    2e44:\t00 \n    2e45:\t79 0c                \tjns    2e53 <swr_convert+0x3d3>\n    2e47:\t8b 84 24 50 01 00 00 \tmov    0x150(%rsp),%eax\n    2e4e:\te9 1b 03 00 00       \tjmp    316e <swr_convert+0x6ee>\n    2e53:\t8b 84 24 50 01 00 00 \tmov    0x150(%rsp),%eax\n    2e5a:\t89 84 24 6c 01 00 00 \tmov    %eax,0x16c(%rsp)\n    2e61:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2e66:\t8b 80 84 20 00 00    \tmov    0x2084(%rax),%eax\n    2e6c:\t2b 84 24 50 01 00 00 \tsub    0x150(%rsp),%eax\n    2e73:\t89 c2                \tmov    %eax,%edx\n    2e75:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2e7a:\t89 90 84 20 00 00    \tmov    %edx,0x2084(%rax)\n    2e80:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2e85:\t8b 90 80 20 00 00    \tmov    0x2080(%rax),%edx\n    2e8b:\t8b 84 24 50 01 00 00 \tmov    0x150(%rsp),%eax\n    2e92:\t01 c2                \tadd    %eax,%edx\n    2e94:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2e99:\t89 90 80 20 00 00    \tmov    %edx,0x2080(%rax)\n    2e9f:\t8b 94 24 50 01 00 00 \tmov    0x150(%rsp),%edx\n    2ea6:\t48 8b 8c 24 58 01 00 \tmov    0x158(%rsp),%rcx\n    2ead:\t00 \n    2eae:\t48 8b 84 24 58 01 00 \tmov    0x158(%rsp),%rax\n    2eb5:\t00 \n    2eb6:\t48 89 ce             \tmov    %rcx,%rsi\n    2eb9:\t48 89 c7             \tmov    %rax,%rdi\n    2ebc:\te8 b2 e8 ff ff       \tcall   1773 <buf_set>\n    2ec1:\t8b 84 24 50 01 00 00 \tmov    0x150(%rsp),%eax\n    2ec8:\t29 44 24 0c          \tsub    %eax,0xc(%rsp)\n    2ecc:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2ed1:\t8b 80 84 20 00 00    \tmov    0x2084(%rax),%eax\n    2ed7:\t85 c0                \ttest   %eax,%eax\n    2ed9:\t75 0f                \tjne    2eea <swr_convert+0x46a>\n    2edb:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2ee0:\tc7 80 80 20 00 00 00 \tmovl   $0x0,0x2080(%rax)\n    2ee7:\t00 00 00 \n    2eea:\t83 7c 24 08 00       \tcmpl   $0x0,0x8(%rsp)\n    2eef:\t0f 84 26 02 00 00    \tje     311b <swr_convert+0x69b>\n    2ef5:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2efa:\t8b 90 80 20 00 00    \tmov    0x2080(%rax),%edx\n    2f00:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2f05:\t8b 80 84 20 00 00    \tmov    0x2084(%rax),%eax\n    2f0b:\t01 c2                \tadd    %eax,%edx\n    2f0d:\t8b 44 24 08          \tmov    0x8(%rsp),%eax\n    2f11:\t01 d0                \tadd    %edx,%eax\n    2f13:\t2b 44 24 0c          \tsub    0xc(%rsp),%eax\n    2f17:\t89 84 24 54 01 00 00 \tmov    %eax,0x154(%rsp)\n    2f1e:\t8b 44 24 08          \tmov    0x8(%rsp),%eax\n    2f22:\t3b 44 24 0c          \tcmp    0xc(%rsp),%eax\n    2f26:\t0f 8e d7 00 00 00    \tjle    3003 <swr_convert+0x583>\n    2f2c:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2f31:\t8b 80 30 1e 00 00    \tmov    0x1e30(%rax),%eax\n    2f37:\t39 84 24 54 01 00 00 \tcmp    %eax,0x154(%rsp)\n    2f3e:\t0f 8e 85 00 00 00    \tjle    2fc9 <swr_convert+0x549>\n    2f44:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2f49:\t8b 90 84 20 00 00    \tmov    0x2084(%rax),%edx\n    2f4f:\t8b 44 24 08          \tmov    0x8(%rsp),%eax\n    2f53:\t01 d0                \tadd    %edx,%eax\n    2f55:\t2b 44 24 0c          \tsub    0xc(%rsp),%eax\n    2f59:\t89 c2                \tmov    %eax,%edx\n    2f5b:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2f60:\t8b 80 80 20 00 00    \tmov    0x2080(%rax),%eax\n    2f66:\t39 c2                \tcmp    %eax,%edx\n    2f68:\t7f 5f                \tjg     2fc9 <swr_convert+0x549>\n    2f6a:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2f6f:\t8b 90 80 20 00 00    \tmov    0x2080(%rax),%edx\n    2f75:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2f7a:\t48 8d 88 20 1d 00 00 \tlea    0x1d20(%rax),%rcx\n    2f81:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    2f86:\t48 89 ce             \tmov    %rcx,%rsi\n    2f89:\t48 89 c7             \tmov    %rax,%rdi\n    2f8c:\te8 e2 e7 ff ff       \tcall   1773 <buf_set>\n    2f91:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2f96:\t8b 90 84 20 00 00    \tmov    0x2084(%rax),%edx\n    2f9c:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2fa1:\t48 8d 88 20 1d 00 00 \tlea    0x1d20(%rax),%rcx\n    2fa8:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    2fad:\t48 89 c6             \tmov    %rax,%rsi\n    2fb0:\t48 89 cf             \tmov    %rcx,%rdi\n    2fb3:\te8 c8 e4 ff ff       \tcall   1480 <copy>\n    2fb8:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2fbd:\tc7 80 80 20 00 00 00 \tmovl   $0x0,0x2080(%rax)\n    2fc4:\t00 00 00 \n    2fc7:\teb 3a                \tjmp    3003 <swr_convert+0x583>\n    2fc9:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2fce:\t48 8d 90 20 1d 00 00 \tlea    0x1d20(%rax),%rdx\n    2fd5:\t8b 84 24 54 01 00 00 \tmov    0x154(%rsp),%eax\n    2fdc:\t89 c6                \tmov    %eax,%esi\n    2fde:\t48 89 d7             \tmov    %rdx,%rdi\n    2fe1:\te8 00 00 00 00       \tcall   2fe6 <swr_convert+0x566>\n    2fe6:\t89 84 24 50 01 00 00 \tmov    %eax,0x150(%rsp)\n    2fed:\t83 bc 24 50 01 00 00 \tcmpl   $0x0,0x150(%rsp)\n    2ff4:\t00 \n    2ff5:\t79 0c                \tjns    3003 <swr_convert+0x583>\n    2ff7:\t8b 84 24 50 01 00 00 \tmov    0x150(%rsp),%eax\n    2ffe:\te9 6b 01 00 00       \tjmp    316e <swr_convert+0x6ee>\n    3003:\t83 7c 24 0c 00       \tcmpl   $0x0,0xc(%rsp)\n    3008:\t0f 84 9a 00 00 00    \tje     30a8 <swr_convert+0x628>\n    300e:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    3012:\t39 44 24 08          \tcmp    %eax,0x8(%rsp)\n    3016:\t0f 4e 44 24 08       \tcmovle 0x8(%rsp),%eax\n    301b:\t89 84 24 54 01 00 00 \tmov    %eax,0x154(%rsp)\n    3022:\t8b bc 24 54 01 00 00 \tmov    0x154(%rsp),%edi\n    3029:\t48 8b 8c 24 60 01 00 \tmov    0x160(%rsp),%rcx\n    3030:\t00 \n    3031:\t8b 94 24 54 01 00 00 \tmov    0x154(%rsp),%edx\n    3038:\t48 8b b4 24 58 01 00 \tmov    0x158(%rsp),%rsi\n    303f:\t00 \n    3040:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3045:\t41 89 f8             \tmov    %edi,%r8d\n    3048:\t48 89 c7             \tmov    %rax,%rdi\n    304b:\te8 a4 ed ff ff       \tcall   1df4 <swr_convert_internal>\n    3050:\t89 84 24 50 01 00 00 \tmov    %eax,0x150(%rsp)\n    3057:\t83 bc 24 50 01 00 00 \tcmpl   $0x0,0x150(%rsp)\n    305e:\t00 \n    305f:\t79 0c                \tjns    306d <swr_convert+0x5ed>\n    3061:\t8b 84 24 50 01 00 00 \tmov    0x150(%rsp),%eax\n    3068:\te9 01 01 00 00       \tjmp    316e <swr_convert+0x6ee>\n    306d:\t8b 94 24 50 01 00 00 \tmov    0x150(%rsp),%edx\n    3074:\t48 8b 8c 24 60 01 00 \tmov    0x160(%rsp),%rcx\n    307b:\t00 \n    307c:\t48 8b 84 24 60 01 00 \tmov    0x160(%rsp),%rax\n    3083:\t00 \n    3084:\t48 89 ce             \tmov    %rcx,%rsi\n    3087:\t48 89 c7             \tmov    %rax,%rdi\n    308a:\te8 e4 e6 ff ff       \tcall   1773 <buf_set>\n    308f:\t8b 84 24 50 01 00 00 \tmov    0x150(%rsp),%eax\n    3096:\t29 44 24 08          \tsub    %eax,0x8(%rsp)\n    309a:\t8b 84 24 50 01 00 00 \tmov    0x150(%rsp),%eax\n    30a1:\t01 84 24 6c 01 00 00 \tadd    %eax,0x16c(%rsp)\n    30a8:\t83 7c 24 08 00       \tcmpl   $0x0,0x8(%rsp)\n    30ad:\t74 6c                \tje     311b <swr_convert+0x69b>\n    30af:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    30b4:\t8b 90 80 20 00 00    \tmov    0x2080(%rax),%edx\n    30ba:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    30bf:\t8b 80 84 20 00 00    \tmov    0x2084(%rax),%eax\n    30c5:\t01 c2                \tadd    %eax,%edx\n    30c7:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    30cc:\t48 8d 88 20 1d 00 00 \tlea    0x1d20(%rax),%rcx\n    30d3:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    30d8:\t48 89 ce             \tmov    %rcx,%rsi\n    30db:\t48 89 c7             \tmov    %rax,%rdi\n    30de:\te8 90 e6 ff ff       \tcall   1773 <buf_set>\n    30e3:\t8b 54 24 08          \tmov    0x8(%rsp),%edx\n    30e7:\t48 8b 8c 24 60 01 00 \tmov    0x160(%rsp),%rcx\n    30ee:\t00 \n    30ef:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    30f4:\t48 89 ce             \tmov    %rcx,%rsi\n    30f7:\t48 89 c7             \tmov    %rax,%rdi\n    30fa:\te8 81 e3 ff ff       \tcall   1480 <copy>\n    30ff:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3104:\t8b 90 84 20 00 00    \tmov    0x2084(%rax),%edx\n    310a:\t8b 44 24 08          \tmov    0x8(%rsp),%eax\n    310e:\t01 c2                \tadd    %eax,%edx\n    3110:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3115:\t89 90 84 20 00 00    \tmov    %edx,0x2084(%rax)\n    311b:\t83 bc 24 6c 01 00 00 \tcmpl   $0x0,0x16c(%rsp)\n    3122:\t00 \n    3123:\t7e 42                \tjle    3167 <swr_convert+0x6e7>\n    3125:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    312a:\t8b 80 a0 20 00 00    \tmov    0x20a0(%rax),%eax\n    3130:\t85 c0                \ttest   %eax,%eax\n    3132:\t75 33                \tjne    3167 <swr_convert+0x6e7>\n    3134:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3139:\t48 8b 90 90 20 00 00 \tmov    0x2090(%rax),%rdx\n    3140:\t8b 84 24 6c 01 00 00 \tmov    0x16c(%rsp),%eax\n    3147:\t48 63 c8             \tmovslq %eax,%rcx\n    314a:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    314f:\t8b 40 38             \tmov    0x38(%rax),%eax\n    3152:\t48 98                \tcltq   \n    3154:\t48 0f af c1          \timul   %rcx,%rax\n    3158:\t48 01 c2             \tadd    %rax,%rdx\n    315b:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3160:\t48 89 90 90 20 00 00 \tmov    %rdx,0x2090(%rax)\n    3167:\t8b 84 24 6c 01 00 00 \tmov    0x16c(%rsp),%eax\n    316e:\t48 81 c4 78 01 00 00 \tadd    $0x178,%rsp\n    3175:\tc3                   \tret    ", "code_s": "int swr_convert(long <span class=\"supfact\">param_1</span>, long param_2,\n                int <span class=\"supfact\">param_3</span>, long param_4,\n                int <span class=\"supfact\">param_5</span>) {\n  int iVar1;\n  long lVar2;\n  undefined8 *puVar3;\n  undefined8 *puVar4;\n  byte <span class=\"supfact\">bVar5</span>;\n  int <span class=\"supfact\">local_170</span>;\n  int <span class=\"supfact\">local_16c</span>;\n  undefined8 <span class=\"supfact\">local_158</span>[Number];\n  int <span class=\"supfact\">local_30</span>;\n  int <span class=\"supfact\">local_28</span>;\n  int <span class=\"supfact\">local_24</span>;\n  long <span class=\"supfact\">local_20</span>;\n  undefined8 *<span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">bVar5</span> = Number;\n  <span class=\"supfact\">local_18</span> = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_1</span> + Number;\n  iVar1 = swr_is_initialized(<span class=\"supfact\">param_1</span>);\n  <span class=\"supfact\">local_170</span> = <span class=\"supfact\">param_5</span>;\n  if (iVar1 == Number) {\n    av_log(<span class=\"supfact\">param_1</span>, Number, String);\n    iVar1 = -Number;\n  } else {\n    do {\n      while (true) {\n        if (*(int *)(<span class=\"supfact\">param_1</span> + Number) < Number) {\n          if (param_4 == Number) {\n            if (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n              if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n                return Number;\n              }\n            } else {\n              if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n                (**(code **)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                             Number))(<span class=\"supfact\">param_1</span>);\n              }\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n            }\n          } else {\n            FUN_00101620(<span class=\"supfact\">local_18</span>, param_4);\n          }\n          FUN_00101620(<span class=\"supfact\">local_20</span>, param_2);\n          if (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n            iVar1 =\n                FUN_00101df4(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_20</span>,\n                             <span class=\"supfact\">param_3</span>, <span class=\"supfact\">local_18</span>,\n                             <span class=\"supfact\">local_170</span>);\n            if (iVar1 < Number) {\n              return iVar1;\n            }\n            if (*(int *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n              return iVar1;\n            }\n            *(long *)(<span class=\"supfact\">param_1</span> + Number) =\n                *(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                (long)*(int *)(<span class=\"supfact\">param_1</span> + Number) * (long)iVar1;\n            return iVar1;\n          }\n          puVar3 = <span class=\"supfact\">local_18</span>;\n          puVar4 = <span class=\"supfact\">local_158</span>;\n          for (lVar2 = Number; lVar2 != Number; lVar2 = lVar2 + -Number) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + (ulong)<span class=\"supfact\">bVar5</span> * -Number + Number;\n            puVar4 = puVar4 + (ulong)<span class=\"supfact\">bVar5</span> * -Number + Number;\n          }\n          <span class=\"supfact\">local_c</span> = Number;\n          <span class=\"supfact\">local_24</span> = *(int *)(<span class=\"supfact\">param_1</span> + Number);\n          if (<span class=\"supfact\">param_3</span> <=\n              *(int *)(<span class=\"supfact\">param_1</span> + Number)) {\n            <span class=\"supfact\">local_24</span> = <span class=\"supfact\">param_3</span>;\n          }\n          <span class=\"supfact\">local_16c</span> = <span class=\"supfact\">param_3</span>;\n          if (<span class=\"supfact\">local_24</span> != Number) {\n            FUN_00101773(<span class=\"supfact\">local_158</span>,\n                         <span class=\"supfact\">param_1</span> + Number,\n                         *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n            <span class=\"supfact\">local_28</span> = FUN_00101df4(\n                <span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_20</span>,\n                <span class=\"supfact\">local_24</span>, <span class=\"supfact\">local_158</span>,\n                <span class=\"supfact\">local_24</span>);\n            if (<span class=\"supfact\">local_28</span> < Number) {\n              return <span class=\"supfact\">local_28</span>;\n            }\n            *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n                *(int *)(<span class=\"supfact\">param_1</span> + Number) -\n                <span class=\"supfact\">local_28</span>;\n            *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n                *(int *)(<span class=\"supfact\">param_1</span> + Number) +\n                <span class=\"supfact\">local_28</span>;\n            <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_28</span>;\n            FUN_00101773(<span class=\"supfact\">local_20</span>, <span class=\"supfact\">local_20</span>,\n                         <span class=\"supfact\">local_28</span>);\n            <span class=\"supfact\">local_16c</span> =\n                <span class=\"supfact\">param_3</span> - <span class=\"supfact\">local_28</span>;\n            if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n            }\n          }\n          if (<span class=\"supfact\">local_170</span> != Number) {\n            <span class=\"supfact\">local_24</span> =\n                (<span class=\"supfact\">local_170</span> +\n                 *(int *)(<span class=\"supfact\">param_1</span> + Number) +\n                 *(int *)(<span class=\"supfact\">param_1</span> + Number)) -\n                <span class=\"supfact\">local_16c</span>;\n            if (<span class=\"supfact\">local_16c</span> < <span class=\"supfact\">local_170</span>) {\n              if ((*(int *)(<span class=\"supfact\">param_1</span> + Number) <\n                   <span class=\"supfact\">local_24</span>) &&\n                  ((<span class=\"supfact\">local_170</span> +\n                    *(int *)(<span class=\"supfact\">param_1</span> + Number)) -\n                       <span class=\"supfact\">local_16c</span> <=\n                   *(int *)(<span class=\"supfact\">param_1</span> + Number))) {\n                FUN_00101773(<span class=\"supfact\">local_158</span>,\n                             <span class=\"supfact\">param_1</span> + Number,\n                             *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n                FUN_00101480(<span class=\"supfact\">param_1</span> + Number,\n                             <span class=\"supfact\">local_158</span>,\n                             *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n                *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n              } else {\n                <span class=\"supfact\">local_28</span> = swri_realloc_audio(\n                    <span class=\"supfact\">param_1</span> + Number, <span class=\"supfact\">local_24</span>);\n                if (<span class=\"supfact\">local_28</span> < Number) {\n                  return <span class=\"supfact\">local_28</span>;\n                }\n              }\n            }\n            if (<span class=\"supfact\">local_16c</span> != Number) {\n              if (<span class=\"supfact\">local_170</span> <= <span class=\"supfact\">local_16c</span>) {\n                <span class=\"supfact\">local_16c</span> = <span class=\"supfact\">local_170</span>;\n              }\n              <span class=\"supfact\">local_24</span> = <span class=\"supfact\">local_16c</span>;\n              <span class=\"supfact\">local_28</span> = FUN_00101df4(\n                  <span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_20</span>,\n                  <span class=\"supfact\">local_16c</span>, <span class=\"supfact\">local_18</span>,\n                  <span class=\"supfact\">local_16c</span>);\n              if (<span class=\"supfact\">local_28</span> < Number) {\n                return <span class=\"supfact\">local_28</span>;\n              }\n              FUN_00101773(<span class=\"supfact\">local_18</span>, <span class=\"supfact\">local_18</span>,\n                           <span class=\"supfact\">local_28</span>);\n              <span class=\"supfact\">local_170</span> =\n                  <span class=\"supfact\">local_170</span> - <span class=\"supfact\">local_28</span>;\n              <span class=\"supfact\">local_c</span> =\n                  <span class=\"supfact\">local_c</span> + <span class=\"supfact\">local_28</span>;\n            }\n            if (<span class=\"supfact\">local_170</span> != Number) {\n              FUN_00101773(<span class=\"supfact\">local_158</span>,\n                           <span class=\"supfact\">param_1</span> + Number,\n                           *(int *)(<span class=\"supfact\">param_1</span> + Number) +\n                               *(int *)(<span class=\"supfact\">param_1</span> + Number));\n              FUN_00101480(<span class=\"supfact\">local_158</span>, <span class=\"supfact\">local_18</span>,\n                           <span class=\"supfact\">local_170</span>);\n              *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n                  *(int *)(<span class=\"supfact\">param_1</span> + Number) +\n                  <span class=\"supfact\">local_170</span>;\n            }\n          }\n          if (<span class=\"supfact\">local_c</span> < Number) {\n            return <span class=\"supfact\">local_c</span>;\n          }\n          if (*(int *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n            return <span class=\"supfact\">local_c</span>;\n          }\n          *(long *)(<span class=\"supfact\">param_1</span> + Number) =\n              *(long *)(<span class=\"supfact\">param_1</span> + Number) +\n              (long)*(int *)(<span class=\"supfact\">param_1</span> + Number) *\n                  (long)<span class=\"supfact\">local_c</span>;\n          return <span class=\"supfact\">local_c</span>;\n        }\n        iVar1 = *(int *)(<span class=\"supfact\">param_1</span> + Number);\n        if (Number < iVar1) {\n          iVar1 = Number;\n        }\n        <span class=\"supfact\">local_30</span> =\n            swri_realloc_audio(<span class=\"supfact\">param_1</span> + Number, iVar1);\n        if (<span class=\"supfact\">local_30</span> < Number) {\n          return <span class=\"supfact\">local_30</span>;\n        }\n        FUN_001016fc(<span class=\"supfact\">param_1</span> + Number,\n                     <span class=\"supfact\">local_158</span>);\n        *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n            -*(int *)(<span class=\"supfact\">param_1</span> + Number);\n        if (*(int *)(<span class=\"supfact\">param_1</span> + Number) < -Number) {\n          iVar1 = Number;\n        } else {\n          iVar1 = -*(int *)(<span class=\"supfact\">param_1</span> + Number);\n        }\n        <span class=\"supfact\">local_30</span> =\n            swr_convert(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_158</span>,\n                        iVar1, param_4, <span class=\"supfact\">local_170</span>);\n        *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n            -*(int *)(<span class=\"supfact\">param_1</span> + Number);\n        <span class=\"supfact\">local_170</span> = Number;\n        if (<span class=\"supfact\">local_30</span> < Number)\n          break;\n        *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n            *(int *)(<span class=\"supfact\">param_1</span> + Number) -\n            <span class=\"supfact\">local_30</span>;\n      }\n    } while ((*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) &&\n             (param_2 != Number));\n    iVar1 = Number;\n  }\n  return iVar1;\n}", "code_t": "int swr_convert(SwrContext *<span class=\"supfact\">s</span>, uint8_t **out_arg,\n                int <span class=\"supfact\">out_count</span>, uint8_t **in_arg,\n                int <span class=\"supfact\">in_count</span>) {\n  int iVar1;\n  long lVar2;\n  AudioData *pAVar3;\n  uint8_t **ppuVar4;\n  byte <span class=\"supfact\">bVar5</span>;\n  uint8_t **in_arg - local;\n  int <span class=\"supfact\">in_count</span> - local;\n  int <span class=\"supfact\">out_count</span> - local;\n  uint8_t **out_arg - local;\n  SwrContext *<span class=\"supfact\">s</span> - local;\n  uint8_t *<span class=\"supfact\">tmp_arg</span>[Number];\n  int <span class=\"supfact\">ret</span>;\n  int ret_1;\n  int <span class=\"supfact\">ret_2</span>;\n  int <span class=\"supfact\">size</span>;\n  AudioData *<span class=\"supfact\">out</span>;\n  AudioData *<span class=\"supfact\">in</span>;\n  int <span class=\"supfact\">ret2</span>;\n  <span class=\"supfact\">bVar5</span> = Number;\n  <span class=\"supfact\">in</span> = &<span class=\"supfact\">s</span>-><span class=\"supfact\">in</span>;\n  <span class=\"supfact\">out</span> = &<span class=\"supfact\">s</span>-><span class=\"supfact\">out</span>;\n  iVar1 = swr_is_initialized(<span class=\"supfact\">s</span>);\n  <span class=\"supfact\">in_count</span> - local = <span class=\"supfact\">in_count</span>;\n  if (iVar1 == Number) {\n    av_log(<span class=\"supfact\">s</span>, Number, String);\n    iVar1 = -Number;\n  } else {\n    do {\n      while (true) {\n        if (<span class=\"supfact\">s</span>->drop_output < Number) {\n          if (in_arg == (uint8_t **)Number) {\n            if (<span class=\"supfact\">s</span>->resample == (ResampleContext *)Number) {\n              if (<span class=\"supfact\">s</span>->in_buffer_count == Number) {\n                return Number;\n              }\n            } else {\n              if (<span class=\"supfact\">s</span>->flushed == Number) {\n                (*<span class=\"supfact\">s</span>->resampler->flush)(<span class=\"supfact\">s</span>);\n              }\n              <span class=\"supfact\">s</span>->resample_in_constraint = Number;\n              <span class=\"supfact\">s</span>->flushed = Number;\n            }\n          } else {\n            fill_audiodata(<span class=\"supfact\">in</span>, in_arg);\n          }\n          fill_audiodata(<span class=\"supfact\">out</span>, out_arg);\n          if (<span class=\"supfact\">s</span>->resample != (ResampleContext *)Number) {\n            iVar1 = swr_convert_internal(<span class=\"supfact\">s</span>, <span class=\"supfact\">out</span>,\n                                         <span class=\"supfact\">out_count</span>,\n                                         <span class=\"supfact\">in</span>,\n                                         <span class=\"supfact\">in_count</span> - local);\n            if (iVar1 < Number) {\n              return iVar1;\n            }\n            if (<span class=\"supfact\">s</span>->drop_output != Number) {\n              return iVar1;\n            }\n            <span class=\"supfact\">s</span>->outpts =\n                <span class=\"supfact\">s</span>->outpts +\n                (long)<span class=\"supfact\">s</span>->in_sample_rate * (long)iVar1;\n            return iVar1;\n          }\n          pAVar3 = <span class=\"supfact\">in</span>;\n          ppuVar4 = <span class=\"supfact\">tmp_arg</span>;\n          for (lVar2 = Number; lVar2 != Number; lVar2 = lVar2 + -Number) {\n            *ppuVar4 = pAVar3->ch[Number];\n            pAVar3 =\n                (AudioData *)((long)pAVar3 +\n                              (ulong)<span class=\"supfact\">bVar5</span> * -Number + Number);\n            ppuVar4 = ppuVar4 + (ulong)<span class=\"supfact\">bVar5</span> * -Number + Number;\n          }\n          <span class=\"supfact\">ret2</span> = Number;\n          iVar1 = <span class=\"supfact\">s</span>->in_buffer_count;\n          if (<span class=\"supfact\">out_count</span> <= <span class=\"supfact\">s</span>->in_buffer_count) {\n            iVar1 = <span class=\"supfact\">out_count</span>;\n          }\n          <span class=\"supfact\">out_count</span> - local = <span class=\"supfact\">out_count</span>;\n          if (iVar1 != Number) {\n            buf_set((AudioData *)<span class=\"supfact\">tmp_arg</span>,\n                    &<span class=\"supfact\">s</span>->in_buffer,\n                    <span class=\"supfact\">s</span>->in_buffer_index);\n            <span class=\"supfact\">ret2</span> = swr_convert_internal(\n                <span class=\"supfact\">s</span>, <span class=\"supfact\">out</span>, iVar1,\n                (AudioData *)<span class=\"supfact\">tmp_arg</span>, iVar1);\n            if (<span class=\"supfact\">ret2</span> < Number) {\n              return <span class=\"supfact\">ret2</span>;\n            }\n            <span class=\"supfact\">s</span>->in_buffer_count =\n                <span class=\"supfact\">s</span>->in_buffer_count - <span class=\"supfact\">ret2</span>;\n            <span class=\"supfact\">s</span>->in_buffer_index =\n                <span class=\"supfact\">s</span>->in_buffer_index + <span class=\"supfact\">ret2</span>;\n            buf_set(<span class=\"supfact\">out</span>, <span class=\"supfact\">out</span>,\n                    <span class=\"supfact\">ret2</span>);\n            <span class=\"supfact\">out_count</span> - local =\n                <span class=\"supfact\">out_count</span> - <span class=\"supfact\">ret2</span>;\n            if (<span class=\"supfact\">s</span>->in_buffer_count == Number) {\n              <span class=\"supfact\">s</span>->in_buffer_index = Number;\n            }\n          }\n          if (<span class=\"supfact\">in_count</span> - local != Number) {\n            iVar1 = (<span class=\"supfact\">in_count</span> - local +\n                     <span class=\"supfact\">s</span>->in_buffer_index +\n                     <span class=\"supfact\">s</span>->in_buffer_count) -\n                    <span class=\"supfact\">out_count</span> - local;\n            if (<span class=\"supfact\">out_count</span> - local <\n                <span class=\"supfact\">in_count</span> - local) {\n              if (((<span class=\"supfact\">s</span>->in_buffer).count < iVar1) &&\n                  ((<span class=\"supfact\">in_count</span> - local +\n                    <span class=\"supfact\">s</span>->in_buffer_count) -\n                       <span class=\"supfact\">out_count</span> - local <=\n                   <span class=\"supfact\">s</span>->in_buffer_index)) {\n                buf_set((AudioData *)<span class=\"supfact\">tmp_arg</span>,\n                        &<span class=\"supfact\">s</span>->in_buffer,\n                        <span class=\"supfact\">s</span>->in_buffer_index);\n                copy((EVP_PKEY_CTX *)&<span class=\"supfact\">s</span>->in_buffer,\n                     (EVP_PKEY_CTX *)<span class=\"supfact\">tmp_arg</span>);\n                <span class=\"supfact\">s</span>->in_buffer_index = Number;\n              } else {\n                iVar1 =\n                    swri_realloc_audio(&<span class=\"supfact\">s</span>->in_buffer, iVar1);\n                if (iVar1 < Number) {\n                  return iVar1;\n                }\n              }\n            }\n            if (<span class=\"supfact\">out_count</span> - local != Number) {\n              if (<span class=\"supfact\">in_count</span> - local <=\n                  <span class=\"supfact\">out_count</span> - local) {\n                <span class=\"supfact\">out_count</span> - local =\n                    <span class=\"supfact\">in_count</span> - local;\n              }\n              iVar1 = swr_convert_internal(\n                  <span class=\"supfact\">s</span>, <span class=\"supfact\">out</span>,\n                  <span class=\"supfact\">out_count</span> - local, <span class=\"supfact\">in</span>,\n                  <span class=\"supfact\">out_count</span> - local);\n              if (iVar1 < Number) {\n                return iVar1;\n              }\n              buf_set(<span class=\"supfact\">in</span>, <span class=\"supfact\">in</span>, iVar1);\n              <span class=\"supfact\">in_count</span> - local =\n                  <span class=\"supfact\">in_count</span> - local - iVar1;\n              <span class=\"supfact\">ret2</span> = <span class=\"supfact\">ret2</span> + iVar1;\n            }\n            if (<span class=\"supfact\">in_count</span> - local != Number) {\n              buf_set((AudioData *)<span class=\"supfact\">tmp_arg</span>,\n                      &<span class=\"supfact\">s</span>->in_buffer,\n                      <span class=\"supfact\">s</span>->in_buffer_index +\n                          <span class=\"supfact\">s</span>->in_buffer_count);\n              copy((EVP_PKEY_CTX *)<span class=\"supfact\">tmp_arg</span>,\n                   (EVP_PKEY_CTX *)<span class=\"supfact\">in</span>);\n              <span class=\"supfact\">s</span>->in_buffer_count =\n                  <span class=\"supfact\">s</span>->in_buffer_count +\n                  <span class=\"supfact\">in_count</span> - local;\n            }\n          }\n          if (<span class=\"supfact\">ret2</span> < Number) {\n            return <span class=\"supfact\">ret2</span>;\n          }\n          if (<span class=\"supfact\">s</span>->drop_output != Number) {\n            return <span class=\"supfact\">ret2</span>;\n          }\n          <span class=\"supfact\">s</span>->outpts = <span class=\"supfact\">s</span>->outpts +\n                                      (long)<span class=\"supfact\">s</span>->in_sample_rate *\n                                          (long)<span class=\"supfact\">ret2</span>;\n          return <span class=\"supfact\">ret2</span>;\n        }\n        iVar1 = <span class=\"supfact\">s</span>->drop_output;\n        if (Number < iVar1) {\n          iVar1 = Number;\n        }\n        iVar1 = swri_realloc_audio(&<span class=\"supfact\">s</span>->drop_temp, iVar1);\n        if (iVar1 < Number) {\n          return iVar1;\n        }\n        reversefill_audiodata(&<span class=\"supfact\">s</span>->drop_temp,\n                              <span class=\"supfact\">tmp_arg</span>);\n        <span class=\"supfact\">s</span>->drop_output = -<span class=\"supfact\">s</span>->drop_output;\n        if (<span class=\"supfact\">s</span>->drop_output < -Number) {\n          iVar1 = Number;\n        } else {\n          iVar1 = -<span class=\"supfact\">s</span>->drop_output;\n        }\n        iVar1 = swr_convert(<span class=\"supfact\">s</span>, <span class=\"supfact\">tmp_arg</span>, iVar1,\n                            in_arg, <span class=\"supfact\">in_count</span> - local);\n        <span class=\"supfact\">s</span>->drop_output = -<span class=\"supfact\">s</span>->drop_output;\n        <span class=\"supfact\">in_count</span> - local = Number;\n        if (iVar1 < Number)\n          break;\n        <span class=\"supfact\">s</span>->drop_output = <span class=\"supfact\">s</span>->drop_output - iVar1;\n      }\n    } while ((<span class=\"supfact\">s</span>->drop_output == Number) &&\n             (out_arg != (uint8_t **)Number));\n    iVar1 = Number;\n  }\n  return iVar1;\n}", "var": [{"name": "param_1", "type": "SwrContext * *", "pred_name": "s", "ref_name": "s", "ref_type": "SwrContext * *"}, {"name": "param_3", "type": "int", "pred_name": "out_count", "ref_name": "out_count", "ref_type": "int"}, {"name": "param_5", "type": "int", "pred_name": "in_count", "ref_name": "in_count", "ref_type": "int"}, {"name": "bVar5", "type": "byte", "pred_name": "bVar5", "ref_name": "bVar5", "ref_type": "byte"}, {"name": "local_170", "type": "int", "pred_name": "__unk__", "ref_name": "in_count-local", "ref_type": "int"}, {"name": "local_16c", "type": "int", "pred_name": "out_count-local", "ref_name": "out_count-local", "ref_type": "int"}, {"name": "local_158", "type": "uint8_t *[32][32]", "pred_name": "tmp_arg", "ref_name": "tmp_arg", "ref_type": "uint8_t *[32][32]"}, {"name": "local_30", "type": "int", "pred_name": "ret", "ref_name": "ret", "ref_type": "int"}, {"name": "local_28", "type": "int", "pred_name": "ret_2", "ref_name": "ret_2", "ref_type": "int"}, {"name": "local_24", "type": "int", "pred_name": "size", "ref_name": "size", "ref_type": "int"}, {"name": "local_20", "type": "AudioData * *", "pred_name": "out", "ref_name": "out", "ref_type": "AudioData * *"}, {"name": "local_18", "type": "AudioData * *", "pred_name": "in", "ref_name": "in", "ref_type": "AudioData * *"}, {"name": "local_c", "type": "int", "pred_name": "ret2", "ref_name": "ret2", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "cs186-fa12", "repo_name": "fa12", "path": "cs186-fa12/fa12/a786e1b495f9801b456e23bfa45686ca2dc9c63a961f83e69d82ebaeaa913999", "path_in_repo": "cs186-fa12/fa12/hw5/postgres-8.4.2/src/backend/storage/ipc/ipc.o", "objdump": "0000000000000129 <shmem_exit>:\n 129:\t55                   \tpush   %rbp\n 12a:\t48 89 e5             \tmov    %rsp,%rbp\n 12d:\t48 83 ec 10          \tsub    $0x10,%rsp\n 131:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n 134:\tba 00 00 00 00       \tmov    $0x0,%edx\n 139:\tbe c5 00 00 00       \tmov    $0xc5,%esi\n 13e:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 143:\te8 00 00 00 00       \tcall   148 <shmem_exit+0x1f>\n 148:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # 14e <shmem_exit+0x25>\n 14e:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 151:\t89 d1                \tmov    %edx,%ecx\n 153:\t89 c2                \tmov    %eax,%edx\n 155:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 15a:\tbf 0c 00 00 00       \tmov    $0xc,%edi\n 15f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 164:\te8 00 00 00 00       \tcall   169 <shmem_exit+0x40>\n 169:\teb 34                \tjmp    19f <shmem_exit+0x76>\n 16b:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 171 <shmem_exit+0x48>\n 171:\t48 98                \tcltq   \n 173:\t48 c1 e0 04          \tshl    $0x4,%rax\n 177:\t48 05 00 00 00 00    \tadd    $0x0,%rax\n 17d:\t48 8b 08             \tmov    (%rax),%rcx\n 180:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 186 <shmem_exit+0x5d>\n 186:\t48 98                \tcltq   \n 188:\t48 c1 e0 04          \tshl    $0x4,%rax\n 18c:\t48 05 00 00 00 00    \tadd    $0x0,%rax\n 192:\t48 8b 10             \tmov    (%rax),%rdx\n 195:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 198:\t48 89 d6             \tmov    %rdx,%rsi\n 19b:\t89 c7                \tmov    %eax,%edi\n 19d:\tff d1                \tcall   *%rcx\n 19f:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1a5 <shmem_exit+0x7c>\n 1a5:\t83 e8 01             \tsub    $0x1,%eax\n 1a8:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 1ae <shmem_exit+0x85>\n 1ae:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 1b4 <shmem_exit+0x8b>\n 1b4:\t85 c0                \ttest   %eax,%eax\n 1b6:\t79 b3                \tjns    16b <shmem_exit+0x42>\n 1b8:\tc7 05 00 00 00 00 00 \tmovl   $0x0,0x0(%rip)        # 1c2 <shmem_exit+0x99>\n 1bf:\t00 00 00 \n 1c2:\t90                   \tnop\n 1c3:\tc9                   \tleave  \n 1c4:\tc3                   \tret    ", "code_s": "void shmem_exit(undefined4 <span class=\"supfact\">param_1</span>) {\n  elog_start(String, Number, String);\n  elog_finish(Number, String, <span class=\"supfact\">param_1</span>, DAT_001006a4);\n  while (DAT_001006a4 = DAT_001006a4 + -Number, -Number < DAT_001006a4) {\n    (**(code **)(&DAT_00100560 + (long)DAT_001006a4 * Number))(\n        <span class=\"supfact\">param_1</span>,\n        *(undefined8 *)(&DAT_00100568 + (long)DAT_001006a4 * Number));\n  }\n  DAT_001006a4 = Number;\n  return;\n}", "code_t": "void shmem_exit(int <span class=\"supfact\">code</span>) {\n  int <span class=\"supfact\">code</span> - local;\n  elog_start(String, Number, String);\n  elog_finish(Number, String, <span class=\"supfact\">code</span>, on_shmem_exit_index);\n  while (on_shmem_exit_index = on_shmem_exit_index + -Number,\n         -Number < on_shmem_exit_index) {\n    (*on_shmem_exit_list[on_shmem_exit_index].function)(\n        <span class=\"supfact\">code</span>, on_shmem_exit_list[on_shmem_exit_index].arg);\n  }\n  on_shmem_exit_index = Number;\n  return;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "code", "ref_name": "code", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "bpillon", "repo_name": "android-ffmpeg-wrapper", "path": "bpillon/android-ffmpeg-wrapper/ba1cff2608504ca3b34e6f7884c235aab00d828df51cb6f4520ff842ce1e8ea9", "path_in_repo": "bpillon/android-ffmpeg-wrapper/jni/ffmpeg/libavcodec/h264idct.o", "objdump": "000000000000ac83 <ff_h264_idct_dc_add_14_c>:\n    ac83:\t48 89 7c 24 c8       \tmov    %rdi,-0x38(%rsp)\n    ac88:\t48 89 74 24 c0       \tmov    %rsi,-0x40(%rsp)\n    ac8d:\t89 54 24 bc          \tmov    %edx,-0x44(%rsp)\n    ac91:\t48 8b 44 24 c8       \tmov    -0x38(%rsp),%rax\n    ac96:\t48 89 44 24 f0       \tmov    %rax,-0x10(%rsp)\n    ac9b:\t48 8b 44 24 c0       \tmov    -0x40(%rsp),%rax\n    aca0:\t48 89 44 24 e8       \tmov    %rax,-0x18(%rsp)\n    aca5:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    acaa:\t8b 00                \tmov    (%rax),%eax\n    acac:\t83 c0 20             \tadd    $0x20,%eax\n    acaf:\tc1 f8 06             \tsar    $0x6,%eax\n    acb2:\t89 44 24 e4          \tmov    %eax,-0x1c(%rsp)\n    acb6:\t8b 44 24 bc          \tmov    -0x44(%rsp),%eax\n    acba:\t48 98                \tcltq   \n    acbc:\t48 d1 e8             \tshr    %rax\n    acbf:\t89 44 24 bc          \tmov    %eax,-0x44(%rsp)\n    acc3:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    acc8:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n    acce:\tc7 44 24 f8 00 00 00 \tmovl   $0x0,-0x8(%rsp)\n    acd5:\t00 \n    acd6:\te9 a7 00 00 00       \tjmp    ad82 <ff_h264_idct_dc_add_14_c+0xff>\n    acdb:\tc7 44 24 fc 00 00 00 \tmovl   $0x0,-0x4(%rsp)\n    ace2:\t00 \n    ace3:\teb 7f                \tjmp    ad64 <ff_h264_idct_dc_add_14_c+0xe1>\n    ace5:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    ace9:\t48 98                \tcltq   \n    aceb:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    acef:\t48 8b 44 24 f0       \tmov    -0x10(%rsp),%rax\n    acf4:\t48 01 d0             \tadd    %rdx,%rax\n    acf7:\t0f b7 00             \tmovzwl (%rax),%eax\n    acfa:\t0f b7 d0             \tmovzwl %ax,%edx\n    acfd:\t8b 44 24 e4          \tmov    -0x1c(%rsp),%eax\n    ad01:\t01 d0                \tadd    %edx,%eax\n    ad03:\t89 44 24 e0          \tmov    %eax,-0x20(%rsp)\n    ad07:\tc7 44 24 dc 0e 00 00 \tmovl   $0xe,-0x24(%rsp)\n    ad0e:\t00 \n    ad0f:\t8b 44 24 dc          \tmov    -0x24(%rsp),%eax\n    ad13:\tba 01 00 00 00       \tmov    $0x1,%edx\n    ad18:\t89 c1                \tmov    %eax,%ecx\n    ad1a:\td3 e2                \tshl    %cl,%edx\n    ad1c:\t89 d0                \tmov    %edx,%eax\n    ad1e:\tf7 d8                \tneg    %eax\n    ad20:\t23 44 24 e0          \tand    -0x20(%rsp),%eax\n    ad24:\t85 c0                \ttest   %eax,%eax\n    ad26:\t74 1d                \tje     ad45 <ff_h264_idct_dc_add_14_c+0xc2>\n    ad28:\t8b 44 24 e0          \tmov    -0x20(%rsp),%eax\n    ad2c:\tf7 d8                \tneg    %eax\n    ad2e:\t99                   \tcltd   \n    ad2f:\t8b 44 24 dc          \tmov    -0x24(%rsp),%eax\n    ad33:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    ad38:\t89 c1                \tmov    %eax,%ecx\n    ad3a:\td3 e6                \tshl    %cl,%esi\n    ad3c:\t89 f0                \tmov    %esi,%eax\n    ad3e:\t83 e8 01             \tsub    $0x1,%eax\n    ad41:\t21 d0                \tand    %edx,%eax\n    ad43:\teb 04                \tjmp    ad49 <ff_h264_idct_dc_add_14_c+0xc6>\n    ad45:\t8b 44 24 e0          \tmov    -0x20(%rsp),%eax\n    ad49:\t8b 54 24 fc          \tmov    -0x4(%rsp),%edx\n    ad4d:\t48 63 d2             \tmovslq %edx,%rdx\n    ad50:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    ad54:\t48 8b 54 24 f0       \tmov    -0x10(%rsp),%rdx\n    ad59:\t48 01 ca             \tadd    %rcx,%rdx\n    ad5c:\t66 89 02             \tmov    %ax,(%rdx)\n    ad5f:\t83 44 24 fc 01       \taddl   $0x1,-0x4(%rsp)\n    ad64:\t83 7c 24 fc 03       \tcmpl   $0x3,-0x4(%rsp)\n    ad69:\t0f 8e 76 ff ff ff    \tjle    ace5 <ff_h264_idct_dc_add_14_c+0x62>\n    ad6f:\t8b 44 24 bc          \tmov    -0x44(%rsp),%eax\n    ad73:\t48 98                \tcltq   \n    ad75:\t48 01 c0             \tadd    %rax,%rax\n    ad78:\t48 01 44 24 f0       \tadd    %rax,-0x10(%rsp)\n    ad7d:\t83 44 24 f8 01       \taddl   $0x1,-0x8(%rsp)\n    ad82:\t83 7c 24 f8 03       \tcmpl   $0x3,-0x8(%rsp)\n    ad87:\t0f 8e 4e ff ff ff    \tjle    acdb <ff_h264_idct_dc_add_14_c+0x58>\n    ad8d:\t90                   \tnop\n    ad8e:\t90                   \tnop\n    ad8f:\tc3                   \tret    ", "code_s": "void ff_h264_idct_dc_add_14_c(long param_1, int *<span class=\"supfact\">param_2</span>,\n                              int <span class=\"supfact\">param_3</span>) {\n  int iVar1;\n  ushort <span class=\"supfact\">uVar2</span>;\n  uint uVar3;\n  long <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_8</span>;\n  int <span class=\"supfact\">local_4</span>;\n  iVar1 = *<span class=\"supfact\">param_2</span>;\n  *<span class=\"supfact\">param_2</span> = Number;\n  <span class=\"supfact\">local_10</span> = param_1;\n  for (<span class=\"supfact\">local_8</span> = Number; <span class=\"supfact\">local_8</span> < Number;\n       <span class=\"supfact\">local_8</span> = <span class=\"supfact\">local_8</span> + Number) {\n    for (<span class=\"supfact\">local_4</span> = Number; <span class=\"supfact\">local_4</span> < Number;\n         <span class=\"supfact\">local_4</span> = <span class=\"supfact\">local_4</span> + Number) {\n      uVar3 = (iVar1 + Number >> Number) +\n              (uint) * (ushort *)(<span class=\"supfact\">local_10</span> +\n                                  (long)<span class=\"supfact\">local_4</span> * Number);\n      if ((uVar3 & Number) == Number) {\n        <span class=\"supfact\">uVar2</span> = (ushort)uVar3;\n      } else {\n        <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar3 >> Number) & Number;\n      }\n      *(ushort *)(<span class=\"supfact\">local_10</span> +\n                  (long)<span class=\"supfact\">local_4</span> * Number) =\n          <span class=\"supfact\">uVar2</span>;\n    }\n    <span class=\"supfact\">local_10</span> =\n        <span class=\"supfact\">local_10</span> +\n        (long)(int)((ulong)(long)<span class=\"supfact\">param_3</span> >> Number) * Number;\n  }\n  return;\n}", "code_t": "void ff_h264_idct_dc_add_14_c(uint8_t *_dst, int16_t *<span class=\"supfact\">_block</span>,\n                              int <span class=\"supfact\">stride</span>) {\n  int iVar1;\n  ushort <span class=\"supfact\">uVar2</span>;\n  uint uVar3;\n  int <span class=\"supfact\">stride</span> - local;\n  int16_t *<span class=\"supfact\">_block</span> - local;\n  uint8_t *_dst - local;\n  int dc;\n  int32_t *block;\n  uint16_t *<span class=\"supfact\">dst</span>;\n  int <span class=\"supfact\">j</span>;\n  int <span class=\"supfact\">i</span>;\n  iVar1 = *(int *)<span class=\"supfact\">_block</span>;\n  *(undefined4 *)<span class=\"supfact\">_block</span> = Number;\n  <span class=\"supfact\">dst</span> = (uint16_t *)_dst;\n  for (<span class=\"supfact\">j</span> = Number; <span class=\"supfact\">j</span> < Number;\n       <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number) {\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      uVar3 = (iVar1 + Number >> Number) +\n              (uint)<span class=\"supfact\">dst</span>[<span class=\"supfact\">i</span>];\n      if ((uVar3 & Number) == Number) {\n        <span class=\"supfact\">uVar2</span> = (ushort)uVar3;\n      } else {\n        <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar3 >> Number) & Number;\n      }\n      <span class=\"supfact\">dst</span>[<span class=\"supfact\">i</span>] = <span class=\"supfact\">uVar2</span>;\n    }\n    <span class=\"supfact\">dst</span> = <span class=\"supfact\">dst</span> +\n                          (int)((ulong)(long)<span class=\"supfact\">stride</span> >> Number);\n  }\n  return;\n}", "var": [{"name": "param_2", "type": "DCTELEM * *", "pred_name": "block", "ref_name": "_block", "ref_type": "int16_t * *"}, {"name": "param_3", "type": "int", "pred_name": "stride", "ref_name": "stride", "ref_type": "int"}, {"name": "uVar2", "type": "ushort", "pred_name": "uVar2", "ref_name": "uVar2", "ref_type": "ushort"}, {"name": "local_10", "type": "uint16_t * *", "pred_name": "dst", "ref_name": "dst", "ref_type": "uint16_t * *"}, {"name": "local_8", "type": "int", "pred_name": "j", "ref_name": "j", "ref_type": "int"}, {"name": "local_4", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "jeffmiralles", "repo_name": "cthehardway", "path": "jeffmiralles/cthehardway/302971084760b7b422ce45009458bffb9b62ff1e47ed8b8d335e994b44d8f9ad", "path_in_repo": "jeffmiralles/cthehardway/exercise 43/src/lcthw/stats.o", "objdump": "000000000000029d <Stats_dump>:\n 29d:\t55                   \tpush   %rbp\n 29e:\t48 89 e5             \tmov    %rsp,%rbp\n 2a1:\t48 83 ec 10          \tsub    $0x10,%rsp\n 2a5:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n 2a9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 2ad:\t48 89 c7             \tmov    %rax,%rdi\n 2b0:\te8 00 00 00 00       \tcall   2b5 <Stats_dump+0x18>\n 2b5:\tf2 0f 11 45 f0       \tmovsd  %xmm0,-0x10(%rbp)\n 2ba:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 2be:\t48 89 c7             \tmov    %rax,%rdi\n 2c1:\te8 00 00 00 00       \tcall   2c6 <Stats_dump+0x29>\n 2c6:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 2ca:\tf2 0f 10 58 20       \tmovsd  0x20(%rax),%xmm3\n 2cf:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 2d3:\tf2 0f 10 50 18       \tmovsd  0x18(%rax),%xmm2\n 2d8:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 2dc:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n 2e0:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 2e4:\tf2 0f 10 48 08       \tmovsd  0x8(%rax),%xmm1\n 2e9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 2ed:\t48 8b 08             \tmov    (%rax),%rcx\n 2f0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2f7 <Stats_dump+0x5a>\n 2f7:\t48 8b 00             \tmov    (%rax),%rax\n 2fa:\tf2 0f 10 6d f0       \tmovsd  -0x10(%rbp),%xmm5\n 2ff:\t66 0f 28 e0          \tmovapd %xmm0,%xmm4\n 303:\t66 48 0f 6e c1       \tmovq   %rcx,%xmm0\n 308:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 30f <Stats_dump+0x72>\n 30f:\t48 89 c7             \tmov    %rax,%rdi\n 312:\tb8 06 00 00 00       \tmov    $0x6,%eax\n 317:\te8 00 00 00 00       \tcall   31c <Stats_dump+0x7f>\n 31c:\t90                   \tnop\n 31d:\tc9                   \tleave  \n 31e:\tc3                   \tret    \n", "code_s": "void Stats_dump(undefined8 *<span class=\"supfact\">param_1</span>) {\n  undefined8 uVar1;\n  undefined8 uVar2;\n  uVar1 = Stats_stddev(<span class=\"supfact\">param_1</span>);\n  uVar2 = Stats_mean(<span class=\"supfact\">param_1</span>);\n  fprintf(_stderr, String, *<span class=\"supfact\">param_1</span>,\n          <span class=\"supfact\">param_1</span>[Number], <span class=\"supfact\">param_1</span>[Number],\n          <span class=\"supfact\">param_1</span>[Number], uVar2, uVar1,\n          <span class=\"supfact\">param_1</span>[Number]);\n  return;\n}", "code_t": "void Stats_dump(Stats *<span class=\"supfact\">st</span>) {\n  double dVar1;\n  double dVar2;\n  Stats *<span class=\"supfact\">st</span> - local;\n  dVar1 = Stats_stddev(<span class=\"supfact\">st</span>);\n  dVar2 = Stats_mean(<span class=\"supfact\">st</span>);\n  fprintf(_stderr, String, <span class=\"supfact\">st</span>->sum, <span class=\"supfact\">st</span>->sumsq,\n          <span class=\"supfact\">st</span>->min, <span class=\"supfact\">st</span>->max, dVar2, dVar1,\n          <span class=\"supfact\">st</span>->n);\n  return;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "st", "ref_type": "Stats * *"}], "body_in_train": false}, {"repo_owner": "BGCX067", "repo_name": "eyoung-event-description-language-svn-to-git", "path": "BGCX067/eyoung-event-description-language-svn-to-git/e13e59dd178ab6a6520d19ecf20b346d476fb7f9017bc4cf115e55cf9500a8c4", "path_in_repo": "BGCX067/eyoung-event-description-language-svn-to-git/trunk/decoder/demo/test", "objdump": "", "code_s": "int fputc(int __c, FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fputc_00408050)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int fputc(int __c, FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fputc_00408050)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "endoplasma", "repo_name": "tdma_demo", "path": "endoplasma/tdma_demo/250179743cbaf611024fa13cf21c7fc60371bb173439830cad5f4961f3ca1de8", "path_in_repo": "endoplasma/tdma_demo/contiki/projects/udpPlug/obj_native/rpl-dag.o", "objdump": "0000000000000372 <rpl_set_root>:\n     372:\t55                   \tpush   %rbp\n     373:\t48 89 e5             \tmov    %rsp,%rbp\n     376:\t48 83 ec 30          \tsub    $0x30,%rsp\n     37a:\t89 f8                \tmov    %edi,%eax\n     37c:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n     380:\t88 45 dc             \tmov    %al,-0x24(%rbp)\n     383:\tc6 45 ff f0          \tmovb   $0xf0,-0x1(%rbp)\n     387:\t0f b6 45 dc          \tmovzbl -0x24(%rbp),%eax\n     38b:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n     38f:\t48 89 d6             \tmov    %rdx,%rsi\n     392:\t89 c7                \tmov    %eax,%edi\n     394:\te8 36 ff ff ff       \tcall   2cf <get_dag>\n     399:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     39d:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n     3a2:\t74 4b                \tje     3ef <rpl_set_root+0x7d>\n     3a4:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     3a8:\t0f b6 40 12          \tmovzbl 0x12(%rax),%eax\n     3ac:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n     3af:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n     3b3:\t84 c0                \ttest   %al,%al\n     3b5:\t79 06                \tjns    3bd <rpl_set_root+0x4b>\n     3b7:\t80 45 ff 01          \taddb   $0x1,-0x1(%rbp)\n     3bb:\teb 04                \tjmp    3c1 <rpl_set_root+0x4f>\n     3bd:\t80 45 ff 01          \taddb   $0x1,-0x1(%rbp)\n     3c1:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     3c5:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     3c9:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     3cd:\t48 39 45 f0          \tcmp    %rax,-0x10(%rbp)\n     3d1:\t75 10                \tjne    3e3 <rpl_set_root+0x71>\n     3d3:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     3d7:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     3db:\t48 c7 40 10 00 00 00 \tmovq   $0x0,0x10(%rax)\n     3e2:\t00 \n     3e3:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     3e7:\t48 89 c7             \tmov    %rax,%rdi\n     3ea:\te8 00 00 00 00       \tcall   3ef <rpl_set_root+0x7d>\n     3ef:\t0f b6 45 dc          \tmovzbl -0x24(%rbp),%eax\n     3f3:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n     3f7:\t48 89 d6             \tmov    %rdx,%rsi\n     3fa:\t89 c7                \tmov    %eax,%edi\n     3fc:\te8 00 00 00 00       \tcall   401 <rpl_set_root+0x8f>\n     401:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     405:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n     40a:\t75 0a                \tjne    416 <rpl_set_root+0xa4>\n     40c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     411:\te9 4f 01 00 00       \tjmp    565 <rpl_set_root+0x1f3>\n     416:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     41a:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     41e:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     422:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     426:\t0f b6 55 ff          \tmovzbl -0x1(%rbp),%edx\n     42a:\t88 50 12             \tmov    %dl,0x12(%rax)\n     42d:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     431:\tc6 40 16 01          \tmovb   $0x1,0x16(%rax)\n     435:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     439:\tc6 40 13 00          \tmovb   $0x0,0x13(%rax)\n     43d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     441:\tc6 80 d3 00 00 00 02 \tmovb   $0x2,0xd3(%rax)\n     448:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     44c:\t48 c7 40 08 00 00 00 \tmovq   $0x0,0x8(%rax)\n     453:\t00 \n     454:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     458:\t48 c7 40 18 00 00 00 \tmovq   $0x0,0x18(%rax)\n     45f:\t00 \n     460:\t48 8b 4d f0          \tmov    -0x10(%rbp),%rcx\n     464:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     468:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n     46c:\t48 8b 00             \tmov    (%rax),%rax\n     46f:\t48 89 01             \tmov    %rax,(%rcx)\n     472:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n     476:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     47a:\tc6 80 d4 00 00 00 08 \tmovb   $0x8,0xd4(%rax)\n     481:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     485:\tc6 80 d5 00 00 00 0c \tmovb   $0xc,0xd5(%rax)\n     48c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     490:\tc6 80 d8 00 00 00 14 \tmovb   $0x14,0xd8(%rax)\n     497:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     49b:\tc6 80 d6 00 00 00 0a \tmovb   $0xa,0xd6(%rax)\n     4a2:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4a6:\t66 c7 80 dc 00 00 00 \tmovw   $0x700,0xdc(%rax)\n     4ad:\t00 07 \n     4af:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4b3:\t66 c7 80 de 00 00 00 \tmovw   $0x100,0xde(%rax)\n     4ba:\t00 01 \n     4bc:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4c0:\tc6 80 d7 00 00 00 ff \tmovb   $0xff,0xd7(%rax)\n     4c7:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4cb:\t66 c7 80 e0 00 00 00 \tmovw   $0xffff,0xe0(%rax)\n     4d2:\tff ff \n     4d4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4d8:\t0f b7 90 de 00 00 00 \tmovzwl 0xde(%rax),%edx\n     4df:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     4e3:\t66 89 50 20          \tmov    %dx,0x20(%rax)\n     4e7:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4eb:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     4ef:\t48 39 45 f0          \tcmp    %rax,-0x10(%rbp)\n     4f3:\t74 29                \tje     51e <rpl_set_root+0x1ac>\n     4f5:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     4f9:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     4fd:\t48 85 c0             \ttest   %rax,%rax\n     500:\t74 1c                \tje     51e <rpl_set_root+0x1ac>\n     502:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     506:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     50a:\t48 89 c7             \tmov    %rax,%rdi\n     50d:\te8 00 00 00 00       \tcall   512 <rpl_set_root+0x1a0>\n     512:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     516:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     51a:\tc6 40 16 00          \tmovb   $0x0,0x16(%rax)\n     51e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     522:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n     526:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n     52a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     52e:\tc6 80 d2 00 00 00 f0 \tmovb   $0xf0,0xd2(%rax)\n     535:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     539:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     53d:\t48 8b 50 28          \tmov    0x28(%rax),%rdx\n     541:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     545:\t48 89 c7             \tmov    %rax,%rdi\n     548:\tff d2                \tcall   *%rdx\n     54a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     54e:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 555 <rpl_set_root+0x1e3>\n     555:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     559:\t48 89 c7             \tmov    %rax,%rdi\n     55c:\te8 00 00 00 00       \tcall   561 <rpl_set_root+0x1ef>\n     561:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     565:\tc9                   \tleave  \n     566:\tc3                   \tret    ", "code_s": "undefined8 *rpl_set_root(undefined <span class=\"supfact\">param_1</span>,\n                         undefined8 *<span class=\"supfact\">param_2</span>) {\n  undefined8 uVar1;\n  long lVar2;\n  undefined8 *puVar3;\n  char <span class=\"supfact\">local_9</span>;\n  <span class=\"supfact\">local_9</span> = -Number;\n  lVar2 = FUN_001002cf(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n  if (lVar2 != Number) {\n    <span class=\"supfact\">local_9</span> = *(char *)(lVar2 + Number) + String;\n    if (lVar2 == *(long *)(*(long *)(lVar2 + Number) + Number)) {\n      *(undefined8 *)(*(long *)(lVar2 + Number) + Number) = Number;\n    }\n    rpl_free_dag(lVar2);\n  }\n  puVar3 = (undefined8 *)rpl_alloc_dag(<span class=\"supfact\">param_1</span>,\n                                       <span class=\"supfact\">param_2</span>);\n  if (puVar3 == (undefined8 *)Number) {\n    puVar3 = (undefined8 *)Number;\n  } else {\n    lVar2 = puVar3[Number];\n    *(char *)((long)puVar3 + Number) = <span class=\"supfact\">local_9</span>;\n    *(undefined *)((long)puVar3 + Number) = Number;\n    *(undefined *)((long)puVar3 + Number) = Number;\n    *(undefined *)(lVar2 + Number) = Number;\n    *(undefined **)(lVar2 + Number) = &rpl_of_etx;\n    puVar3[Number] = Number;\n    uVar1 = <span class=\"supfact\">param_2</span>[Number];\n    *puVar3 = *<span class=\"supfact\">param_2</span>;\n    puVar3[Number] = uVar1;\n    *(undefined *)(lVar2 + Number) = Number;\n    *(undefined *)(lVar2 + Number) = Number;\n    *(undefined *)(lVar2 + Number) = Number;\n    *(undefined *)(lVar2 + Number) = Number;\n    *(undefined2 *)(lVar2 + Number) = Number;\n    *(undefined2 *)(lVar2 + Number) = Number;\n    *(undefined *)(lVar2 + Number) = Number;\n    *(undefined2 *)(lVar2 + Number) = Number;\n    *(undefined2 *)(puVar3 + Number) = *(undefined2 *)(lVar2 + Number);\n    if ((puVar3 != *(undefined8 **)(lVar2 + Number)) &&\n        (*(long *)(lVar2 + Number) != Number)) {\n      rpl_remove_routes(*(undefined8 *)(lVar2 + Number));\n      *(undefined *)(*(long *)(lVar2 + Number) + Number) = Number;\n    }\n    *(undefined8 **)(lVar2 + Number) = puVar3;\n    *(undefined *)(lVar2 + Number) = Number;\n    (**(code **)(*(long *)(lVar2 + Number) + Number))(lVar2);\n    default_instance = lVar2;\n    rpl_reset_dio_timer(lVar2);\n  }\n  return puVar3;\n}", "code_t": "rpl_dag_t *rpl_set_root(uint8_t <span class=\"supfact\">instance_id</span>,\n                        uip_ipaddr_t *<span class=\"supfact\">dag_id</span>) {\n  rpl_instance *prVar1;\n  undefined8 uVar2;\n  rpl_dag_t *prVar3;\n  uip_ipaddr_t *<span class=\"supfact\">dag_id</span> - local;\n  uint8_t <span class=\"supfact\">instance_id</span> - local;\n  rpl_instance_t *instance;\n  rpl_dag_t *dag;\n  uint8_t <span class=\"supfact\">version</span>;\n  <span class=\"supfact\">version</span> = Number;\n  prVar3 = get_dag(<span class=\"supfact\">instance_id</span>, <span class=\"supfact\">dag_id</span>);\n  if (prVar3 != (rpl_dag_t *)Number) {\n    <span class=\"supfact\">version</span> = prVar3-><span class=\"supfact\">version</span> + String;\n    if (prVar3 == prVar3->instance->current_dag) {\n      prVar3->instance->current_dag = (rpl_dag_t *)Number;\n    }\n    rpl_free_dag(prVar3);\n  }\n  prVar3 = rpl_alloc_dag(<span class=\"supfact\">instance_id</span>, <span class=\"supfact\">dag_id</span>);\n  if (prVar3 == (rpl_dag_t *)Number) {\n    prVar3 = (rpl_dag_t *)Number;\n  } else {\n    prVar1 = prVar3->instance;\n    prVar3-><span class=\"supfact\">version</span> = <span class=\"supfact\">version</span>;\n    prVar3->joined = String;\n    prVar3->grounded = String;\n    prVar1->mop = String;\n    prVar1->of = (rpl_of_t *)&rpl_of_etx;\n    prVar3->preferred_parent = (rpl_parent_t *)Number;\n    uVar2 = *(undefined8 *)(<span class=\"supfact\">dag_id</span>->u8 + Number);\n    *(undefined8 *)&prVar3-><span class=\"supfact\">dag_id</span> =\n        *(undefined8 *)<span class=\"supfact\">dag_id</span>;\n    *(undefined8 *)((long)&prVar3-><span class=\"supfact\">dag_id</span> + Number) = uVar2;\n    prVar1->dio_intdoubl = String;\n    prVar1->dio_intmin = String;\n    prVar1->dio_intcurrent = String;\n    prVar1->dio_redundancy = String;\n    prVar1->max_rankinc = Number;\n    prVar1->min_hoprankinc = Number;\n    prVar1->default_lifetime = Number;\n    prVar1->lifetime_unit = Number;\n    prVar3->rank = prVar1->min_hoprankinc;\n    if ((prVar3 != prVar1->current_dag) &&\n        (prVar1->current_dag != (rpl_dag_t *)Number)) {\n      rpl_remove_routes(prVar1->current_dag);\n      prVar1->current_dag->joined = String;\n    }\n    prVar1->current_dag = prVar3;\n    prVar1->dtsn_out = Number;\n    (*prVar1->of->update_metric_container)(prVar1);\n    default_instance = prVar1;\n    rpl_reset_dio_timer(prVar1);\n  }\n  return prVar3;\n}", "var": [{"name": "param_1", "type": "uint8_t", "pred_name": "instance_id", "ref_name": "instance_id", "ref_type": "uint8_t"}, {"name": "param_2", "type": "uip_ipaddr_t * *", "pred_name": "dag_id", "ref_name": "dag_id", "ref_type": "uip_ipaddr_t * *"}, {"name": "local_9", "type": "uint8_t", "pred_name": "version", "ref_name": "version", "ref_type": "uint8_t"}], "body_in_train": true}, {"repo_owner": "bpillon", "repo_name": "android-ffmpeg-wrapper", "path": "bpillon/android-ffmpeg-wrapper/ba1cff2608504ca3b34e6f7884c235aab00d828df51cb6f4520ff842ce1e8ea9", "path_in_repo": "bpillon/android-ffmpeg-wrapper/jni/ffmpeg/libavcodec/h264idct.o", "objdump": "00000000000066ba <ff_h264_idct_add8_422_10_c>:\n    66ba:\t48 83 ec 48          \tsub    $0x48,%rsp\n    66be:\t48 89 7c 24 28       \tmov    %rdi,0x28(%rsp)\n    66c3:\t48 89 74 24 20       \tmov    %rsi,0x20(%rsp)\n    66c8:\t48 89 54 24 18       \tmov    %rdx,0x18(%rsp)\n    66cd:\t89 4c 24 14          \tmov    %ecx,0x14(%rsp)\n    66d1:\t4c 89 44 24 08       \tmov    %r8,0x8(%rsp)\n    66d6:\tc7 44 24 38 01 00 00 \tmovl   $0x1,0x38(%rsp)\n    66dd:\t00 \n    66de:\te9 2c 01 00 00       \tjmp    680f <ff_h264_idct_add8_422_10_c+0x155>\n    66e3:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    66e7:\tc1 e0 04             \tshl    $0x4,%eax\n    66ea:\t89 44 24 3c          \tmov    %eax,0x3c(%rsp)\n    66ee:\te9 03 01 00 00       \tjmp    67f6 <ff_h264_idct_add8_422_10_c+0x13c>\n    66f3:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    66f7:\t48 98                \tcltq   \n    66f9:\t0f b6 80 00 00 00 00 \tmovzbl 0x0(%rax),%eax\n    6700:\t0f b6 d0             \tmovzbl %al,%edx\n    6703:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    6708:\t48 01 d0             \tadd    %rdx,%rax\n    670b:\t0f b6 00             \tmovzbl (%rax),%eax\n    670e:\t84 c0                \ttest   %al,%al\n    6710:\t74 61                \tje     6773 <ff_h264_idct_add8_422_10_c+0xb9>\n    6712:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    6716:\tc1 e0 04             \tshl    $0x4,%eax\n    6719:\t48 98                \tcltq   \n    671b:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    6722:\t00 \n    6723:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    6728:\t48 8d 34 02          \tlea    (%rdx,%rax,1),%rsi\n    672c:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    6730:\t48 98                \tcltq   \n    6732:\t48 c1 e0 03          \tshl    $0x3,%rax\n    6736:\t48 8d 50 f8          \tlea    -0x8(%rax),%rdx\n    673a:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    673f:\t48 01 d0             \tadd    %rdx,%rax\n    6742:\t48 8b 10             \tmov    (%rax),%rdx\n    6745:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    6749:\t48 98                \tcltq   \n    674b:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    6752:\t00 \n    6753:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    6758:\t48 01 c8             \tadd    %rcx,%rax\n    675b:\t8b 00                \tmov    (%rax),%eax\n    675d:\t48 98                \tcltq   \n    675f:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n    6763:\t8b 44 24 14          \tmov    0x14(%rsp),%eax\n    6767:\t89 c2                \tmov    %eax,%edx\n    6769:\t48 89 cf             \tmov    %rcx,%rdi\n    676c:\te8 00 00 00 00       \tcall   6771 <ff_h264_idct_add8_422_10_c+0xb7>\n    6771:\teb 7e                \tjmp    67f1 <ff_h264_idct_add8_422_10_c+0x137>\n    6773:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    6777:\tc1 e0 04             \tshl    $0x4,%eax\n    677a:\t48 98                \tcltq   \n    677c:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    6783:\t00 \n    6784:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    6789:\t48 01 d0             \tadd    %rdx,%rax\n    678c:\t8b 00                \tmov    (%rax),%eax\n    678e:\t85 c0                \ttest   %eax,%eax\n    6790:\t74 5f                \tje     67f1 <ff_h264_idct_add8_422_10_c+0x137>\n    6792:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    6796:\tc1 e0 04             \tshl    $0x4,%eax\n    6799:\t48 98                \tcltq   \n    679b:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    67a2:\t00 \n    67a3:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    67a8:\t48 8d 34 02          \tlea    (%rdx,%rax,1),%rsi\n    67ac:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    67b0:\t48 98                \tcltq   \n    67b2:\t48 c1 e0 03          \tshl    $0x3,%rax\n    67b6:\t48 8d 50 f8          \tlea    -0x8(%rax),%rdx\n    67ba:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    67bf:\t48 01 d0             \tadd    %rdx,%rax\n    67c2:\t48 8b 10             \tmov    (%rax),%rdx\n    67c5:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    67c9:\t48 98                \tcltq   \n    67cb:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    67d2:\t00 \n    67d3:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    67d8:\t48 01 c8             \tadd    %rcx,%rax\n    67db:\t8b 00                \tmov    (%rax),%eax\n    67dd:\t48 98                \tcltq   \n    67df:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n    67e3:\t8b 44 24 14          \tmov    0x14(%rsp),%eax\n    67e7:\t89 c2                \tmov    %eax,%edx\n    67e9:\t48 89 cf             \tmov    %rcx,%rdi\n    67ec:\te8 00 00 00 00       \tcall   67f1 <ff_h264_idct_add8_422_10_c+0x137>\n    67f1:\t83 44 24 3c 01       \taddl   $0x1,0x3c(%rsp)\n    67f6:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    67fa:\tc1 e0 04             \tshl    $0x4,%eax\n    67fd:\t83 c0 03             \tadd    $0x3,%eax\n    6800:\t39 44 24 3c          \tcmp    %eax,0x3c(%rsp)\n    6804:\t0f 8e e9 fe ff ff    \tjle    66f3 <ff_h264_idct_add8_422_10_c+0x39>\n    680a:\t83 44 24 38 01       \taddl   $0x1,0x38(%rsp)\n    680f:\t83 7c 24 38 02       \tcmpl   $0x2,0x38(%rsp)\n    6814:\t0f 8e c9 fe ff ff    \tjle    66e3 <ff_h264_idct_add8_422_10_c+0x29>\n    681a:\tc7 44 24 38 01 00 00 \tmovl   $0x1,0x38(%rsp)\n    6821:\t00 \n    6822:\te9 3d 01 00 00       \tjmp    6964 <ff_h264_idct_add8_422_10_c+0x2aa>\n    6827:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    682b:\tc1 e0 04             \tshl    $0x4,%eax\n    682e:\t83 c0 04             \tadd    $0x4,%eax\n    6831:\t89 44 24 3c          \tmov    %eax,0x3c(%rsp)\n    6835:\te9 11 01 00 00       \tjmp    694b <ff_h264_idct_add8_422_10_c+0x291>\n    683a:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    683e:\t83 c0 04             \tadd    $0x4,%eax\n    6841:\t48 98                \tcltq   \n    6843:\t0f b6 80 00 00 00 00 \tmovzbl 0x0(%rax),%eax\n    684a:\t0f b6 d0             \tmovzbl %al,%edx\n    684d:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    6852:\t48 01 d0             \tadd    %rdx,%rax\n    6855:\t0f b6 00             \tmovzbl (%rax),%eax\n    6858:\t84 c0                \ttest   %al,%al\n    685a:\t74 68                \tje     68c4 <ff_h264_idct_add8_422_10_c+0x20a>\n    685c:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    6860:\tc1 e0 04             \tshl    $0x4,%eax\n    6863:\t48 98                \tcltq   \n    6865:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    686c:\t00 \n    686d:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    6872:\t48 8d 34 02          \tlea    (%rdx,%rax,1),%rsi\n    6876:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    687a:\t48 98                \tcltq   \n    687c:\t48 c1 e0 03          \tshl    $0x3,%rax\n    6880:\t48 8d 50 f8          \tlea    -0x8(%rax),%rdx\n    6884:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    6889:\t48 01 d0             \tadd    %rdx,%rax\n    688c:\t48 8b 10             \tmov    (%rax),%rdx\n    688f:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    6893:\t48 98                \tcltq   \n    6895:\t48 83 c0 04          \tadd    $0x4,%rax\n    6899:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    68a0:\t00 \n    68a1:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    68a6:\t48 01 c8             \tadd    %rcx,%rax\n    68a9:\t8b 00                \tmov    (%rax),%eax\n    68ab:\t48 98                \tcltq   \n    68ad:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n    68b1:\t8b 44 24 14          \tmov    0x14(%rsp),%eax\n    68b5:\t89 c2                \tmov    %eax,%edx\n    68b7:\t48 89 cf             \tmov    %rcx,%rdi\n    68ba:\te8 00 00 00 00       \tcall   68bf <ff_h264_idct_add8_422_10_c+0x205>\n    68bf:\te9 82 00 00 00       \tjmp    6946 <ff_h264_idct_add8_422_10_c+0x28c>\n    68c4:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    68c8:\tc1 e0 04             \tshl    $0x4,%eax\n    68cb:\t48 98                \tcltq   \n    68cd:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    68d4:\t00 \n    68d5:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    68da:\t48 01 d0             \tadd    %rdx,%rax\n    68dd:\t8b 00                \tmov    (%rax),%eax\n    68df:\t85 c0                \ttest   %eax,%eax\n    68e1:\t74 63                \tje     6946 <ff_h264_idct_add8_422_10_c+0x28c>\n    68e3:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    68e7:\tc1 e0 04             \tshl    $0x4,%eax\n    68ea:\t48 98                \tcltq   \n    68ec:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    68f3:\t00 \n    68f4:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    68f9:\t48 8d 34 02          \tlea    (%rdx,%rax,1),%rsi\n    68fd:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    6901:\t48 98                \tcltq   \n    6903:\t48 c1 e0 03          \tshl    $0x3,%rax\n    6907:\t48 8d 50 f8          \tlea    -0x8(%rax),%rdx\n    690b:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    6910:\t48 01 d0             \tadd    %rdx,%rax\n    6913:\t48 8b 10             \tmov    (%rax),%rdx\n    6916:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    691a:\t48 98                \tcltq   \n    691c:\t48 83 c0 04          \tadd    $0x4,%rax\n    6920:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    6927:\t00 \n    6928:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    692d:\t48 01 c8             \tadd    %rcx,%rax\n    6930:\t8b 00                \tmov    (%rax),%eax\n    6932:\t48 98                \tcltq   \n    6934:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n    6938:\t8b 44 24 14          \tmov    0x14(%rsp),%eax\n    693c:\t89 c2                \tmov    %eax,%edx\n    693e:\t48 89 cf             \tmov    %rcx,%rdi\n    6941:\te8 00 00 00 00       \tcall   6946 <ff_h264_idct_add8_422_10_c+0x28c>\n    6946:\t83 44 24 3c 01       \taddl   $0x1,0x3c(%rsp)\n    694b:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    694f:\tc1 e0 04             \tshl    $0x4,%eax\n    6952:\t83 c0 07             \tadd    $0x7,%eax\n    6955:\t39 44 24 3c          \tcmp    %eax,0x3c(%rsp)\n    6959:\t0f 8e db fe ff ff    \tjle    683a <ff_h264_idct_add8_422_10_c+0x180>\n    695f:\t83 44 24 38 01       \taddl   $0x1,0x38(%rsp)\n    6964:\t83 7c 24 38 02       \tcmpl   $0x2,0x38(%rsp)\n    6969:\t0f 8e b8 fe ff ff    \tjle    6827 <ff_h264_idct_add8_422_10_c+0x16d>\n    696f:\t90                   \tnop\n    6970:\t90                   \tnop\n    6971:\t48 83 c4 48          \tadd    $0x48,%rsp\n    6975:\tc3                   \tret    ", "code_s": "void ff_h264_idct_add8_422_10_c(long param_1, long <span class=\"supfact\">param_2</span>,\n                                long param_3,\n                                undefined4 <span class=\"supfact\">param_4</span>,\n                                long <span class=\"supfact\">param_5</span>) {\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> < Number;\n       <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n    for (<span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_10</span> << Number;\n         <span class=\"supfact\">local_c</span> <= <span class=\"supfact\">local_10</span> * Number + Number;\n         <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n      if (*(char *)(<span class=\"supfact\">param_5</span> +\n                    (ulong)(byte)(&DAT_0010bd40)[<span class=\"supfact\">local_c</span>]) ==\n          String) {\n        if (*(int *)(param_3 + (long)(<span class=\"supfact\">local_c</span> << Number) *\n                                   Number) != Number) {\n          ff_h264_idct_dc_add_10_c(\n              *(long *)(param_1 + (long)<span class=\"supfact\">local_10</span> * Number +\n                        -Number) +\n                  (long)*(int *)(<span class=\"supfact\">param_2</span> +\n                                 (long)<span class=\"supfact\">local_c</span> * Number),\n              (long)(<span class=\"supfact\">local_c</span> << Number) * Number + param_3,\n              <span class=\"supfact\">param_4</span>);\n        }\n      } else {\n        ff_h264_idct_add_10_c(\n            *(long *)(param_1 + (long)<span class=\"supfact\">local_10</span> * Number +\n                      -Number) +\n                (long)*(int *)(<span class=\"supfact\">param_2</span> +\n                               (long)<span class=\"supfact\">local_c</span> * Number),\n            (long)(<span class=\"supfact\">local_c</span> << Number) * Number + param_3,\n            <span class=\"supfact\">param_4</span>);\n      }\n    }\n  }\n  for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> < Number;\n       <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n    for (<span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_10</span> * Number + Number;\n         <span class=\"supfact\">local_c</span> <= <span class=\"supfact\">local_10</span> * Number + Number;\n         <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n      if (*(char *)(<span class=\"supfact\">param_5</span> +\n                    (ulong)(byte)(&DAT_0010bd40)[<span class=\"supfact\">local_c</span> +\n                                                 Number]) == String) {\n        if (*(int *)(param_3 + (long)(<span class=\"supfact\">local_c</span> << Number) *\n                                   Number) != Number) {\n          ff_h264_idct_dc_add_10_c(\n              *(long *)(param_1 + (long)<span class=\"supfact\">local_10</span> * Number +\n                        -Number) +\n                  (long)*(int *)(<span class=\"supfact\">param_2</span> +\n                                 ((long)<span class=\"supfact\">local_c</span> + Number) *\n                                     Number),\n              (long)(<span class=\"supfact\">local_c</span> << Number) * Number + param_3,\n              <span class=\"supfact\">param_4</span>);\n        }\n      } else {\n        ff_h264_idct_add_10_c(\n            *(long *)(param_1 + (long)<span class=\"supfact\">local_10</span> * Number +\n                      -Number) +\n                (long)*(int *)(<span class=\"supfact\">param_2</span> +\n                               ((long)<span class=\"supfact\">local_c</span> + Number) *\n                                   Number),\n            (long)(<span class=\"supfact\">local_c</span> << Number) * Number + param_3,\n            <span class=\"supfact\">param_4</span>);\n      }\n    }\n  }\n  return;\n}", "code_t": "void ff_h264_idct_add8_422_10_c(uint8_t **dest,\n                                int *<span class=\"supfact\">block_offset</span>,\n                                int16_t *block, int <span class=\"supfact\">stride</span>,\n                                uint8_t *<span class=\"supfact\">nnzc</span>) {\n  uint8_t *<span class=\"supfact\">nnzc</span> - local;\n  int <span class=\"supfact\">stride</span> - local;\n  int16_t *block - local;\n  int *<span class=\"supfact\">block_offset</span> - local;\n  uint8_t **dest - local;\n  int <span class=\"supfact\">j</span>;\n  int <span class=\"supfact\">i</span>;\n  for (<span class=\"supfact\">j</span> = Number; <span class=\"supfact\">j</span> < Number;\n       <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number) {\n    for (<span class=\"supfact\">i</span> = <span class=\"supfact\">j</span> << Number;\n         <span class=\"supfact\">i</span> <= <span class=\"supfact\">j</span> * Number + Number;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      if (<span class=\"supfact\">nnzc</span>[String[<span class=\"supfact\">i</span>]] == String) {\n        if (*(int *)(block + (long)(<span class=\"supfact\">i</span> << Number) * Number) !=\n            Number) {\n          ff_h264_idct_dc_add_10_c(\n              dest[(long)<span class=\"supfact\">j</span> + -Number] +\n                  <span class=\"supfact\">block_offset</span>[<span class=\"supfact\">i</span>],\n              block + (long)(<span class=\"supfact\">i</span> << Number) * Number,\n              <span class=\"supfact\">stride</span>);\n        }\n      } else {\n        ff_h264_idct_add_10_c(\n            dest[(long)<span class=\"supfact\">j</span> + -Number] +\n                <span class=\"supfact\">block_offset</span>[<span class=\"supfact\">i</span>],\n            block + (long)(<span class=\"supfact\">i</span> << Number) * Number,\n            <span class=\"supfact\">stride</span>);\n      }\n    }\n  }\n  for (<span class=\"supfact\">j</span> = Number; <span class=\"supfact\">j</span> < Number;\n       <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number) {\n    for (<span class=\"supfact\">i</span> = <span class=\"supfact\">j</span> * Number + Number;\n         <span class=\"supfact\">i</span> <= <span class=\"supfact\">j</span> * Number + Number;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      if (<span class=\"supfact\">nnzc</span>[String[<span class=\"supfact\">i</span> + Number]] == String) {\n        if (*(int *)(block + (long)(<span class=\"supfact\">i</span> << Number) * Number) !=\n            Number) {\n          ff_h264_idct_dc_add_10_c(\n              dest[(long)<span class=\"supfact\">j</span> + -Number] +\n                  <span class=\"supfact\">block_offset</span>[(long)<span class=\"supfact\">i</span> +\n                                               Number],\n              block + (long)(<span class=\"supfact\">i</span> << Number) * Number,\n              <span class=\"supfact\">stride</span>);\n        }\n      } else {\n        ff_h264_idct_add_10_c(\n            dest[(long)<span class=\"supfact\">j</span> + -Number] +\n                <span class=\"supfact\">block_offset</span>[(long)<span class=\"supfact\">i</span> + Number],\n            block + (long)(<span class=\"supfact\">i</span> << Number) * Number,\n            <span class=\"supfact\">stride</span>);\n      }\n    }\n  }\n  return;\n}", "var": [{"name": "param_2", "type": "int * *", "pred_name": "block_offset", "ref_name": "block_offset", "ref_type": "int * *"}, {"name": "param_4", "type": "int", "pred_name": "stride", "ref_name": "stride", "ref_type": "int"}, {"name": "param_5", "type": "uint8_t * *", "pred_name": "nnzc", "ref_name": "nnzc", "ref_type": "uint8_t * *"}, {"name": "local_10", "type": "int", "pred_name": "j", "ref_name": "j", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "littledan", "repo_name": "libserver", "path": "littledan/libserver/22929d63a2a4db58fd0a3a4b77a5f8542bab1be8ea4fce359304b9618a7a786f", "path_in_repo": "littledan/libserver/libevent/evutil.o", "objdump": "00000000000006f7 <evutil_socket_finished_connecting>:\n     6f7:\t55                   \tpush   %rbp\n     6f8:\t48 89 e5             \tmov    %rsp,%rbp\n     6fb:\t48 83 ec 20          \tsub    $0x20,%rsp\n     6ff:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n     702:\tc7 45 f8 04 00 00 00 \tmovl   $0x4,-0x8(%rbp)\n     709:\t48 8d 4d f8          \tlea    -0x8(%rbp),%rcx\n     70d:\t48 8d 55 fc          \tlea    -0x4(%rbp),%rdx\n     711:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n     714:\t49 89 c8             \tmov    %rcx,%r8\n     717:\t48 89 d1             \tmov    %rdx,%rcx\n     71a:\tba 04 00 00 00       \tmov    $0x4,%edx\n     71f:\tbe 01 00 00 00       \tmov    $0x1,%esi\n     724:\t89 c7                \tmov    %eax,%edi\n     726:\te8 00 00 00 00       \tcall   72b <evutil_socket_finished_connecting+0x34>\n     72b:\t85 c0                \ttest   %eax,%eax\n     72d:\t79 07                \tjns    736 <evutil_socket_finished_connecting+0x3f>\n     72f:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n     734:\teb 34                \tjmp    76a <evutil_socket_finished_connecting+0x73>\n     736:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     739:\t85 c0                \ttest   %eax,%eax\n     73b:\t74 28                \tje     765 <evutil_socket_finished_connecting+0x6e>\n     73d:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     740:\t83 f8 04             \tcmp    $0x4,%eax\n     743:\t74 08                \tje     74d <evutil_socket_finished_connecting+0x56>\n     745:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n     748:\t83 f8 73             \tcmp    $0x73,%eax\n     74b:\t75 07                \tjne    754 <evutil_socket_finished_connecting+0x5d>\n     74d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     752:\teb 16                \tjmp    76a <evutil_socket_finished_connecting+0x73>\n     754:\te8 00 00 00 00       \tcall   759 <evutil_socket_finished_connecting+0x62>\n     759:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n     75c:\t89 10                \tmov    %edx,(%rax)\n     75e:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n     763:\teb 05                \tjmp    76a <evutil_socket_finished_connecting+0x73>\n     765:\tb8 01 00 00 00       \tmov    $0x1,%eax\n     76a:\tc9                   \tleave  \n     76b:\tc3                   \tret    ", "code_s": "undefined8 evutil_socket_finished_connecting(int <span class=\"supfact\">param_1</span>) {\n  int iVar1;\n  undefined8 uVar2;\n  int *piVar3;\n  socklen_t <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_10</span> = Number;\n  iVar1 = getsockopt(<span class=\"supfact\">param_1</span>, Number, Number,\n                     &<span class=\"supfact\">local_c</span>, &<span class=\"supfact\">local_10</span>);\n  if (iVar1 < Number) {\n    uVar2 = Number;\n  } else if (<span class=\"supfact\">local_c</span> == Number) {\n    uVar2 = Number;\n  } else if ((<span class=\"supfact\">local_c</span> == Number) ||\n             (<span class=\"supfact\">local_c</span> == Number)) {\n    uVar2 = Number;\n  } else {\n    piVar3 = __errno_location();\n    *piVar3 = <span class=\"supfact\">local_c</span>;\n    uVar2 = Number;\n  }\n  return uVar2;\n}", "code_t": "int evutil_socket_finished_connecting(int <span class=\"supfact\">fd</span>) {\n  int iVar1;\n  int *piVar2;\n  int <span class=\"supfact\">fd</span> - local;\n  socklen_t <span class=\"supfact\">elen</span>;\n  int <span class=\"supfact\">e</span>;\n  <span class=\"supfact\">elen</span> = Number;\n  iVar1 = getsockopt(<span class=\"supfact\">fd</span>, Number, Number, &<span class=\"supfact\">e</span>,\n                     &<span class=\"supfact\">elen</span>);\n  if (iVar1 < Number) {\n    iVar1 = -Number;\n  } else if (<span class=\"supfact\">e</span> == Number) {\n    iVar1 = Number;\n  } else if ((<span class=\"supfact\">e</span> == Number) || (<span class=\"supfact\">e</span> == Number)) {\n    iVar1 = Number;\n  } else {\n    piVar2 = __errno_location();\n    *piVar2 = <span class=\"supfact\">e</span>;\n    iVar1 = -Number;\n  }\n  return iVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "fd", "ref_name": "fd", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "on", "ref_name": "elen", "ref_type": "socklen_t"}, {"name": "local_c", "type": "int", "pred_name": "__unk__", "ref_name": "e", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "lomithrani", "repo_name": "E-protect", "path": "lomithrani/E-protect/86ce0af33409aa91bc4081c00685ebe80212e8e7b4c0d06f6ac28be08586ccaa", "path_in_repo": "lomithrani/E-protect/SE/ContikiOS/contiki/examples/er-rest-example/obj_native/leds.o", "objdump": "00000000000000a6 <leds_on>:\n  a6:\t55                   \tpush   %rbp\n  a7:\t48 89 e5             \tmov    %rsp,%rbp\n  aa:\t48 83 ec 20          \tsub    $0x20,%rsp\n  ae:\t89 f8                \tmov    %edi,%eax\n  b0:\t88 45 ec             \tmov    %al,-0x14(%rbp)\n  b3:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # ba <leds_on+0x14>\n  ba:\tf7 d0                \tnot    %eax\n  bc:\t89 c2                \tmov    %eax,%edx\n  be:\t0f b6 45 ec          \tmovzbl -0x14(%rbp),%eax\n  c2:\t21 d0                \tand    %edx,%eax\n  c4:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n  c7:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # ce <leds_on+0x28>\n  ce:\t0a 45 ec             \tor     -0x14(%rbp),%al\n  d1:\t88 05 00 00 00 00    \tmov    %al,0x0(%rip)        # d7 <leds_on+0x31>\n  d7:\t0f b6 45 ff          \tmovzbl -0x1(%rbp),%eax\n  db:\t89 c7                \tmov    %eax,%edi\n  dd:\te8 1e ff ff ff       \tcall   0 <show_leds>\n  e2:\t90                   \tnop\n  e3:\tc9                   \tleave  \n  e4:\tc3                   \tret    ", "code_s": "void leds_on(byte <span class=\"supfact\">param_1</span>) {\n  byte <span class=\"supfact\">bVar1</span>;\n  <span class=\"supfact\">bVar1</span> = ~DAT_00100168;\n  DAT_00100168 = DAT_00100168 | <span class=\"supfact\">param_1</span>;\n  FUN_00100000(<span class=\"supfact\">param_1</span> & <span class=\"supfact\">bVar1</span>);\n  return;\n}", "code_t": "void leds_on(uchar <span class=\"supfact\">ledv</span>) {\n  byte bVar1;\n  uchar <span class=\"supfact\">ledv</span> - local;\n  uchar changed;\n  bVar1 = ~leds;\n  leds = leds | <span class=\"supfact\">ledv</span>;\n  show_leds(<span class=\"supfact\">ledv</span> & bVar1);\n  return;\n}", "var": [{"name": "param_1", "type": "uchar", "pred_name": "ledv", "ref_name": "ledv", "ref_type": "uchar"}, {"name": "bVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "BGCX067", "repo_name": "eyoung-event-description-language-svn-to-git", "path": "BGCX067/eyoung-event-description-language-svn-to-git/e13e59dd178ab6a6520d19ecf20b346d476fb7f9017bc4cf115e55cf9500a8c4", "path_in_repo": "BGCX067/eyoung-event-description-language-svn-to-git/trunk/decoder/demo/test", "objdump": "", "code_s": "int *__errno_location(void) {\n  int *<span class=\"supfact\">piVar1</span>;\n  <span class=\"supfact\">piVar1</span> = (int *)(*(code *)PTR___errno_location_00408020)();\n  return <span class=\"supfact\">piVar1</span>;\n}", "code_t": "int *__errno_location(void) {\n  int *<span class=\"supfact\">piVar1</span>;\n  <span class=\"supfact\">piVar1</span> = (int *)(*(code *)PTR___errno_location_00408020)();\n  return <span class=\"supfact\">piVar1</span>;\n}", "var": [{"name": "piVar1", "type": "int * *", "pred_name": "piVar1", "ref_name": "piVar1", "ref_type": "int * *"}], "body_in_train": true}, {"repo_owner": "ssfang", "repo_name": "dropbear", "path": "ssfang/dropbear/1c1cba3cb926c531e3a486da3cf4706112e578fd901cf00891fd73dec9271850", "path_in_repo": "ssfang/dropbear/libtommath/bn_error.o", "objdump": "0000000000000000 <mp_error_to_string>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n   7:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n   e:\teb 2e                \tjmp    3e <mp_error_to_string+0x3e>\n  10:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  13:\t48 98                \tcltq   \n  15:\t48 c1 e0 04          \tshl    $0x4,%rax\n  19:\t48 05 00 00 00 00    \tadd    $0x0,%rax\n  1f:\t8b 00                \tmov    (%rax),%eax\n  21:\t39 45 ec             \tcmp    %eax,-0x14(%rbp)\n  24:\t75 14                \tjne    3a <mp_error_to_string+0x3a>\n  26:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  29:\t48 98                \tcltq   \n  2b:\t48 c1 e0 04          \tshl    $0x4,%rax\n  2f:\t48 05 00 00 00 00    \tadd    $0x0,%rax\n  35:\t48 8b 00             \tmov    (%rax),%rax\n  38:\teb 0f                \tjmp    49 <mp_error_to_string+0x49>\n  3a:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n  3e:\t83 7d fc 02          \tcmpl   $0x2,-0x4(%rbp)\n  42:\t7e cc                \tjle    10 <mp_error_to_string+0x10>\n  44:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  49:\t5d                   \tpop    %rbp\n  4a:\tc3                   \tret    \n", "code_s": "char *mp_error_to_string(int <span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_c</span> = Number;\n  while (true) {\n    if (Number < <span class=\"supfact\">local_c</span>) {\n      return String;\n    }\n    if (<span class=\"supfact\">param_1</span> ==\n        *(int *)(&DAT_001000a0 + (long)<span class=\"supfact\">local_c</span> * Number))\n      break;\n    <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number;\n  }\n  return (&PTR_s_Successful_001000a8)[(long)<span class=\"supfact\">local_c</span> * Number];\n}", "code_t": "char *mp_error_to_string(int <span class=\"supfact\">code</span>) {\n  int <span class=\"supfact\">code</span> - local;\n  int <span class=\"supfact\">x</span>;\n  <span class=\"supfact\">x</span> = Number;\n  while (true) {\n    if (Number < <span class=\"supfact\">x</span>) {\n      return String;\n    }\n    if (<span class=\"supfact\">code</span> == msgs[<span class=\"supfact\">x</span>].<span class=\"supfact\">code</span>)\n      break;\n    <span class=\"supfact\">x</span> = <span class=\"supfact\">x</span> + Number;\n  }\n  return msgs[<span class=\"supfact\">x</span>].msg;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "code", "ref_name": "code", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "x", "ref_name": "x", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "littledan", "repo_name": "libserver", "path": "littledan/libserver/22929d63a2a4db58fd0a3a4b77a5f8542bab1be8ea4fce359304b9618a7a786f", "path_in_repo": "littledan/libserver/libevent/evutil.o", "objdump": "000000000000181a <evutil_getaddrinfo_async>:\n    181a:\t55                   \tpush   %rbp\n    181b:\t48 89 e5             \tmov    %rsp,%rbp\n    181e:\t48 83 ec 40          \tsub    $0x40,%rsp\n    1822:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    1826:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    182a:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    182e:\t48 89 4d d0          \tmov    %rcx,-0x30(%rbp)\n    1832:\t4c 89 45 c8          \tmov    %r8,-0x38(%rbp)\n    1836:\t4c 89 4d c0          \tmov    %r9,-0x40(%rbp)\n    183a:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    183f:\t74 39                \tje     187a <evutil_getaddrinfo_async+0x60>\n    1841:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1848 <evutil_getaddrinfo_async+0x2e>\n    1848:\t48 85 c0             \ttest   %rax,%rax\n    184b:\t74 2d                \tje     187a <evutil_getaddrinfo_async+0x60>\n    184d:\t4c 8b 15 00 00 00 00 \tmov    0x0(%rip),%r10        # 1854 <evutil_getaddrinfo_async+0x3a>\n    1854:\t4c 8b 45 c0          \tmov    -0x40(%rbp),%r8\n    1858:\t48 8b 7d c8          \tmov    -0x38(%rbp),%rdi\n    185c:\t48 8b 4d d0          \tmov    -0x30(%rbp),%rcx\n    1860:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    1864:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n    1868:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    186c:\t4d 89 c1             \tmov    %r8,%r9\n    186f:\t49 89 f8             \tmov    %rdi,%r8\n    1872:\t48 89 c7             \tmov    %rax,%rdi\n    1875:\t41 ff d2             \tcall   *%r10\n    1878:\teb 3a                \tjmp    18b4 <evutil_getaddrinfo_async+0x9a>\n    187a:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    1881:\t00 \n    1882:\t48 8d 4d f0          \tlea    -0x10(%rbp),%rcx\n    1886:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    188a:\t48 8b 75 d8          \tmov    -0x28(%rbp),%rsi\n    188e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1892:\t48 89 c7             \tmov    %rax,%rdi\n    1895:\te8 00 00 00 00       \tcall   189a <evutil_getaddrinfo_async+0x80>\n    189a:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    189d:\t48 8b 4d f0          \tmov    -0x10(%rbp),%rcx\n    18a1:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    18a5:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    18a8:\t4c 8b 45 c8          \tmov    -0x38(%rbp),%r8\n    18ac:\t48 89 ce             \tmov    %rcx,%rsi\n    18af:\t89 c7                \tmov    %eax,%edi\n    18b1:\t41 ff d0             \tcall   *%r8\n    18b4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    18b9:\tc9                   \tleave  \n    18ba:\tc3                   \tret    ", "code_s": "undefined8\nevutil_getaddrinfo_async(long param_1, undefined8 <span class=\"supfact\">param_2</span>,\n                         undefined8 param_3, undefined8 <span class=\"supfact\">param_4</span>,\n                         code *<span class=\"supfact\">param_5</span>, undefined8 param_6) {\n  undefined8 <span class=\"supfact\">local_18</span>;\n  undefined4 <span class=\"supfact\">local_c</span>;\n  if ((param_1 == Number) || (DAT_00103070 == (code *)Number)) {\n    <span class=\"supfact\">local_18</span> = Number;\n    <span class=\"supfact\">local_c</span> =\n        evutil_getaddrinfo(<span class=\"supfact\">param_2</span>, param_3,\n                           <span class=\"supfact\">param_4</span>, &<span class=\"supfact\">local_18</span>);\n    (*<span class=\"supfact\">param_5</span>)(<span class=\"supfact\">local_c</span>,\n                               <span class=\"supfact\">local_18</span>, param_6);\n  } else {\n    (*DAT_00103070)(param_1, <span class=\"supfact\">param_2</span>, param_3,\n                    <span class=\"supfact\">param_4</span>, <span class=\"supfact\">param_5</span>, param_6);\n  }\n  return Number;\n}", "code_t": "int evutil_getaddrinfo_async(evdns_base *dns_base,\n                             char *<span class=\"supfact\">nodename</span>, char *servname,\n                             addrinfo *<span class=\"supfact\">hints_in</span>,\n                             _func_void_int_addrinfo_ptr_void_ptr *cb,\n                             void *<span class=\"supfact\">arg</span>) {\n  void *<span class=\"supfact\">arg</span> - local;\n  _func_void_int_addrinfo_ptr_void_ptr *cb - local;\n  addrinfo *<span class=\"supfact\">hints_in</span> - local;\n  char *servname - local;\n  char *<span class=\"supfact\">nodename</span> - local;\n  evdns_base *dns_base - local;\n  addrinfo *<span class=\"supfact\">ai</span>;\n  int <span class=\"supfact\">err</span>;\n  if ((dns_base == (evdns_base *)Number) ||\n      (evdns_getaddrinfo_impl == (evdns_getaddrinfo_fn)Number)) {\n    <span class=\"supfact\">ai</span> = (addrinfo *)Number;\n    <span class=\"supfact\">err</span> =\n        evutil_getaddrinfo(<span class=\"supfact\">nodename</span>, servname,\n                           <span class=\"supfact\">hints_in</span>, &<span class=\"supfact\">ai</span>);\n    (*cb)(<span class=\"supfact\">err</span>, <span class=\"supfact\">ai</span>, <span class=\"supfact\">arg</span>);\n  } else {\n    (*evdns_getaddrinfo_impl)(dns_base, <span class=\"supfact\">nodename</span>, servname,\n                              <span class=\"supfact\">hints_in</span>, cb,\n                              <span class=\"supfact\">arg</span>);\n  }\n  return Number;\n}", "var": [{"name": "param_2", "type": "char * *", "pred_name": "name", "ref_name": "nodename", "ref_type": "char * *"}, {"name": "param_4", "type": "AVDictionary * * *", "pred_name": "out_val", "ref_name": "hints_in", "ref_type": "addrinfo * *"}, {"name": "param_5", "type": "int64_t", "pred_name": "den", "ref_name": "arg", "ref_type": "void * *"}, {"name": "local_18", "type": "double", "pred_name": "num", "ref_name": "ai", "ref_type": "addrinfo * *"}, {"name": "local_c", "type": "int", "pred_name": "err", "ref_name": "err", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "bpillon", "repo_name": "android-ffmpeg-wrapper", "path": "bpillon/android-ffmpeg-wrapper/ba1cff2608504ca3b34e6f7884c235aab00d828df51cb6f4520ff842ce1e8ea9", "path_in_repo": "bpillon/android-ffmpeg-wrapper/jni/ffmpeg/libavcodec/h264idct.o", "objdump": "0000000000009c3e <ff_h264_idct8_add_14_c>:\n    9c3e:\t48 81 ec 08 01 00 00 \tsub    $0x108,%rsp\n    9c45:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n    9c4a:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n    9c4f:\t89 54 24 0c          \tmov    %edx,0xc(%rsp)\n    9c53:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    9c58:\t48 89 84 24 f0 00 00 \tmov    %rax,0xf0(%rsp)\n    9c5f:\t00 \n    9c60:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    9c65:\t48 89 84 24 e8 00 00 \tmov    %rax,0xe8(%rsp)\n    9c6c:\t00 \n    9c6d:\td1 7c 24 0c          \tsarl   0xc(%rsp)\n    9c71:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9c78:\t00 \n    9c79:\t8b 00                \tmov    (%rax),%eax\n    9c7b:\t8d 50 20             \tlea    0x20(%rax),%edx\n    9c7e:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9c85:\t00 \n    9c86:\t89 10                \tmov    %edx,(%rax)\n    9c88:\tc7 84 24 fc 00 00 00 \tmovl   $0x0,0xfc(%rsp)\n    9c8f:\t00 00 00 00 \n    9c93:\te9 b2 05 00 00       \tjmp    a24a <ff_h264_idct8_add_14_c+0x60c>\n    9c98:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9c9f:\t48 98                \tcltq   \n    9ca1:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9ca8:\t00 \n    9ca9:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9cb0:\t00 \n    9cb1:\t48 01 d0             \tadd    %rdx,%rax\n    9cb4:\t8b 10                \tmov    (%rax),%edx\n    9cb6:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9cbd:\t48 98                \tcltq   \n    9cbf:\t48 83 c0 20          \tadd    $0x20,%rax\n    9cc3:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9cca:\t00 \n    9ccb:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9cd2:\t00 \n    9cd3:\t48 01 c8             \tadd    %rcx,%rax\n    9cd6:\t8b 00                \tmov    (%rax),%eax\n    9cd8:\t01 d0                \tadd    %edx,%eax\n    9cda:\t89 84 24 a4 00 00 00 \tmov    %eax,0xa4(%rsp)\n    9ce1:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9ce8:\t48 98                \tcltq   \n    9cea:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9cf1:\t00 \n    9cf2:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9cf9:\t00 \n    9cfa:\t48 01 d0             \tadd    %rdx,%rax\n    9cfd:\t8b 10                \tmov    (%rax),%edx\n    9cff:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9d06:\t48 98                \tcltq   \n    9d08:\t48 83 c0 20          \tadd    $0x20,%rax\n    9d0c:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9d13:\t00 \n    9d14:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9d1b:\t00 \n    9d1c:\t48 01 c8             \tadd    %rcx,%rax\n    9d1f:\t8b 00                \tmov    (%rax),%eax\n    9d21:\t29 c2                \tsub    %eax,%edx\n    9d23:\t89 d0                \tmov    %edx,%eax\n    9d25:\t89 84 24 a0 00 00 00 \tmov    %eax,0xa0(%rsp)\n    9d2c:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9d33:\t48 98                \tcltq   \n    9d35:\t48 83 c0 10          \tadd    $0x10,%rax\n    9d39:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9d40:\t00 \n    9d41:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9d48:\t00 \n    9d49:\t48 01 d0             \tadd    %rdx,%rax\n    9d4c:\t8b 00                \tmov    (%rax),%eax\n    9d4e:\td1 f8                \tsar    %eax\n    9d50:\t89 c2                \tmov    %eax,%edx\n    9d52:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9d59:\t48 98                \tcltq   \n    9d5b:\t48 83 c0 30          \tadd    $0x30,%rax\n    9d5f:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9d66:\t00 \n    9d67:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9d6e:\t00 \n    9d6f:\t48 01 c8             \tadd    %rcx,%rax\n    9d72:\t8b 00                \tmov    (%rax),%eax\n    9d74:\t29 c2                \tsub    %eax,%edx\n    9d76:\t89 d0                \tmov    %edx,%eax\n    9d78:\t89 84 24 9c 00 00 00 \tmov    %eax,0x9c(%rsp)\n    9d7f:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9d86:\t48 98                \tcltq   \n    9d88:\t48 83 c0 30          \tadd    $0x30,%rax\n    9d8c:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9d93:\t00 \n    9d94:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9d9b:\t00 \n    9d9c:\t48 01 d0             \tadd    %rdx,%rax\n    9d9f:\t8b 00                \tmov    (%rax),%eax\n    9da1:\td1 f8                \tsar    %eax\n    9da3:\t89 c2                \tmov    %eax,%edx\n    9da5:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9dac:\t48 98                \tcltq   \n    9dae:\t48 83 c0 10          \tadd    $0x10,%rax\n    9db2:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9db9:\t00 \n    9dba:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9dc1:\t00 \n    9dc2:\t48 01 c8             \tadd    %rcx,%rax\n    9dc5:\t8b 00                \tmov    (%rax),%eax\n    9dc7:\t01 d0                \tadd    %edx,%eax\n    9dc9:\t89 84 24 98 00 00 00 \tmov    %eax,0x98(%rsp)\n    9dd0:\t8b 94 24 a4 00 00 00 \tmov    0xa4(%rsp),%edx\n    9dd7:\t8b 84 24 98 00 00 00 \tmov    0x98(%rsp),%eax\n    9dde:\t01 d0                \tadd    %edx,%eax\n    9de0:\t89 84 24 94 00 00 00 \tmov    %eax,0x94(%rsp)\n    9de7:\t8b 94 24 a0 00 00 00 \tmov    0xa0(%rsp),%edx\n    9dee:\t8b 84 24 9c 00 00 00 \tmov    0x9c(%rsp),%eax\n    9df5:\t01 d0                \tadd    %edx,%eax\n    9df7:\t89 84 24 90 00 00 00 \tmov    %eax,0x90(%rsp)\n    9dfe:\t8b 84 24 a0 00 00 00 \tmov    0xa0(%rsp),%eax\n    9e05:\t2b 84 24 9c 00 00 00 \tsub    0x9c(%rsp),%eax\n    9e0c:\t89 84 24 8c 00 00 00 \tmov    %eax,0x8c(%rsp)\n    9e13:\t8b 84 24 a4 00 00 00 \tmov    0xa4(%rsp),%eax\n    9e1a:\t2b 84 24 98 00 00 00 \tsub    0x98(%rsp),%eax\n    9e21:\t89 84 24 88 00 00 00 \tmov    %eax,0x88(%rsp)\n    9e28:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9e2f:\t48 98                \tcltq   \n    9e31:\t48 83 c0 28          \tadd    $0x28,%rax\n    9e35:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9e3c:\t00 \n    9e3d:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9e44:\t00 \n    9e45:\t48 01 d0             \tadd    %rdx,%rax\n    9e48:\t8b 10                \tmov    (%rax),%edx\n    9e4a:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9e51:\t48 98                \tcltq   \n    9e53:\t48 83 c0 18          \tadd    $0x18,%rax\n    9e57:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9e5e:\t00 \n    9e5f:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9e66:\t00 \n    9e67:\t48 01 c8             \tadd    %rcx,%rax\n    9e6a:\t8b 00                \tmov    (%rax),%eax\n    9e6c:\t29 c2                \tsub    %eax,%edx\n    9e6e:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9e75:\t48 98                \tcltq   \n    9e77:\t48 83 c0 38          \tadd    $0x38,%rax\n    9e7b:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9e82:\t00 \n    9e83:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9e8a:\t00 \n    9e8b:\t48 01 c8             \tadd    %rcx,%rax\n    9e8e:\t8b 00                \tmov    (%rax),%eax\n    9e90:\t29 c2                \tsub    %eax,%edx\n    9e92:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9e99:\t48 98                \tcltq   \n    9e9b:\t48 83 c0 38          \tadd    $0x38,%rax\n    9e9f:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9ea6:\t00 \n    9ea7:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9eae:\t00 \n    9eaf:\t48 01 c8             \tadd    %rcx,%rax\n    9eb2:\t8b 00                \tmov    (%rax),%eax\n    9eb4:\td1 f8                \tsar    %eax\n    9eb6:\t29 c2                \tsub    %eax,%edx\n    9eb8:\t89 d0                \tmov    %edx,%eax\n    9eba:\t89 84 24 84 00 00 00 \tmov    %eax,0x84(%rsp)\n    9ec1:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9ec8:\t48 98                \tcltq   \n    9eca:\t48 83 c0 08          \tadd    $0x8,%rax\n    9ece:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9ed5:\t00 \n    9ed6:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9edd:\t00 \n    9ede:\t48 01 d0             \tadd    %rdx,%rax\n    9ee1:\t8b 10                \tmov    (%rax),%edx\n    9ee3:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9eea:\t48 98                \tcltq   \n    9eec:\t48 83 c0 38          \tadd    $0x38,%rax\n    9ef0:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9ef7:\t00 \n    9ef8:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9eff:\t00 \n    9f00:\t48 01 c8             \tadd    %rcx,%rax\n    9f03:\t8b 00                \tmov    (%rax),%eax\n    9f05:\t01 c2                \tadd    %eax,%edx\n    9f07:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9f0e:\t48 98                \tcltq   \n    9f10:\t48 83 c0 18          \tadd    $0x18,%rax\n    9f14:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9f1b:\t00 \n    9f1c:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9f23:\t00 \n    9f24:\t48 01 c8             \tadd    %rcx,%rax\n    9f27:\t8b 00                \tmov    (%rax),%eax\n    9f29:\t29 c2                \tsub    %eax,%edx\n    9f2b:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9f32:\t48 98                \tcltq   \n    9f34:\t48 83 c0 18          \tadd    $0x18,%rax\n    9f38:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9f3f:\t00 \n    9f40:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9f47:\t00 \n    9f48:\t48 01 c8             \tadd    %rcx,%rax\n    9f4b:\t8b 00                \tmov    (%rax),%eax\n    9f4d:\td1 f8                \tsar    %eax\n    9f4f:\t29 c2                \tsub    %eax,%edx\n    9f51:\t89 d0                \tmov    %edx,%eax\n    9f53:\t89 84 24 80 00 00 00 \tmov    %eax,0x80(%rsp)\n    9f5a:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9f61:\t48 98                \tcltq   \n    9f63:\t48 83 c0 38          \tadd    $0x38,%rax\n    9f67:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9f6e:\t00 \n    9f6f:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9f76:\t00 \n    9f77:\t48 01 d0             \tadd    %rdx,%rax\n    9f7a:\t8b 10                \tmov    (%rax),%edx\n    9f7c:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9f83:\t48 98                \tcltq   \n    9f85:\t48 83 c0 08          \tadd    $0x8,%rax\n    9f89:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9f90:\t00 \n    9f91:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9f98:\t00 \n    9f99:\t48 01 c8             \tadd    %rcx,%rax\n    9f9c:\t8b 00                \tmov    (%rax),%eax\n    9f9e:\t29 c2                \tsub    %eax,%edx\n    9fa0:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9fa7:\t48 98                \tcltq   \n    9fa9:\t48 83 c0 28          \tadd    $0x28,%rax\n    9fad:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9fb4:\t00 \n    9fb5:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9fbc:\t00 \n    9fbd:\t48 01 c8             \tadd    %rcx,%rax\n    9fc0:\t8b 00                \tmov    (%rax),%eax\n    9fc2:\t01 c2                \tadd    %eax,%edx\n    9fc4:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9fcb:\t48 98                \tcltq   \n    9fcd:\t48 83 c0 28          \tadd    $0x28,%rax\n    9fd1:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9fd8:\t00 \n    9fd9:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    9fe0:\t00 \n    9fe1:\t48 01 c8             \tadd    %rcx,%rax\n    9fe4:\t8b 00                \tmov    (%rax),%eax\n    9fe6:\td1 f8                \tsar    %eax\n    9fe8:\t01 d0                \tadd    %edx,%eax\n    9fea:\t89 44 24 7c          \tmov    %eax,0x7c(%rsp)\n    9fee:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    9ff5:\t48 98                \tcltq   \n    9ff7:\t48 83 c0 18          \tadd    $0x18,%rax\n    9ffb:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a002:\t00 \n    a003:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a00a:\t00 \n    a00b:\t48 01 d0             \tadd    %rdx,%rax\n    a00e:\t8b 10                \tmov    (%rax),%edx\n    a010:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a017:\t48 98                \tcltq   \n    a019:\t48 83 c0 28          \tadd    $0x28,%rax\n    a01d:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a024:\t00 \n    a025:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a02c:\t00 \n    a02d:\t48 01 c8             \tadd    %rcx,%rax\n    a030:\t8b 00                \tmov    (%rax),%eax\n    a032:\t01 c2                \tadd    %eax,%edx\n    a034:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a03b:\t48 98                \tcltq   \n    a03d:\t48 83 c0 08          \tadd    $0x8,%rax\n    a041:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a048:\t00 \n    a049:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a050:\t00 \n    a051:\t48 01 c8             \tadd    %rcx,%rax\n    a054:\t8b 00                \tmov    (%rax),%eax\n    a056:\t01 c2                \tadd    %eax,%edx\n    a058:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a05f:\t48 98                \tcltq   \n    a061:\t48 83 c0 08          \tadd    $0x8,%rax\n    a065:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a06c:\t00 \n    a06d:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a074:\t00 \n    a075:\t48 01 c8             \tadd    %rcx,%rax\n    a078:\t8b 00                \tmov    (%rax),%eax\n    a07a:\td1 f8                \tsar    %eax\n    a07c:\t01 d0                \tadd    %edx,%eax\n    a07e:\t89 44 24 78          \tmov    %eax,0x78(%rsp)\n    a082:\t8b 44 24 78          \tmov    0x78(%rsp),%eax\n    a086:\tc1 f8 02             \tsar    $0x2,%eax\n    a089:\t89 c2                \tmov    %eax,%edx\n    a08b:\t8b 84 24 84 00 00 00 \tmov    0x84(%rsp),%eax\n    a092:\t01 d0                \tadd    %edx,%eax\n    a094:\t89 44 24 74          \tmov    %eax,0x74(%rsp)\n    a098:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    a09c:\tc1 f8 02             \tsar    $0x2,%eax\n    a09f:\t89 c2                \tmov    %eax,%edx\n    a0a1:\t8b 84 24 80 00 00 00 \tmov    0x80(%rsp),%eax\n    a0a8:\t01 d0                \tadd    %edx,%eax\n    a0aa:\t89 44 24 70          \tmov    %eax,0x70(%rsp)\n    a0ae:\t8b 84 24 80 00 00 00 \tmov    0x80(%rsp),%eax\n    a0b5:\tc1 f8 02             \tsar    $0x2,%eax\n    a0b8:\t2b 44 24 7c          \tsub    0x7c(%rsp),%eax\n    a0bc:\t89 44 24 6c          \tmov    %eax,0x6c(%rsp)\n    a0c0:\t8b 84 24 84 00 00 00 \tmov    0x84(%rsp),%eax\n    a0c7:\tc1 f8 02             \tsar    $0x2,%eax\n    a0ca:\t89 c2                \tmov    %eax,%edx\n    a0cc:\t8b 44 24 78          \tmov    0x78(%rsp),%eax\n    a0d0:\t29 d0                \tsub    %edx,%eax\n    a0d2:\t89 44 24 68          \tmov    %eax,0x68(%rsp)\n    a0d6:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a0dd:\t48 98                \tcltq   \n    a0df:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a0e6:\t00 \n    a0e7:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a0ee:\t00 \n    a0ef:\t48 01 d0             \tadd    %rdx,%rax\n    a0f2:\t8b 8c 24 94 00 00 00 \tmov    0x94(%rsp),%ecx\n    a0f9:\t8b 54 24 68          \tmov    0x68(%rsp),%edx\n    a0fd:\t01 ca                \tadd    %ecx,%edx\n    a0ff:\t89 10                \tmov    %edx,(%rax)\n    a101:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a108:\t48 98                \tcltq   \n    a10a:\t48 83 c0 38          \tadd    $0x38,%rax\n    a10e:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a115:\t00 \n    a116:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a11d:\t00 \n    a11e:\t48 01 c2             \tadd    %rax,%rdx\n    a121:\t8b 84 24 94 00 00 00 \tmov    0x94(%rsp),%eax\n    a128:\t2b 44 24 68          \tsub    0x68(%rsp),%eax\n    a12c:\t89 02                \tmov    %eax,(%rdx)\n    a12e:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a135:\t48 98                \tcltq   \n    a137:\t48 83 c0 08          \tadd    $0x8,%rax\n    a13b:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a142:\t00 \n    a143:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a14a:\t00 \n    a14b:\t48 01 d0             \tadd    %rdx,%rax\n    a14e:\t8b 8c 24 90 00 00 00 \tmov    0x90(%rsp),%ecx\n    a155:\t8b 54 24 6c          \tmov    0x6c(%rsp),%edx\n    a159:\t01 ca                \tadd    %ecx,%edx\n    a15b:\t89 10                \tmov    %edx,(%rax)\n    a15d:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a164:\t48 98                \tcltq   \n    a166:\t48 83 c0 30          \tadd    $0x30,%rax\n    a16a:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a171:\t00 \n    a172:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a179:\t00 \n    a17a:\t48 01 c2             \tadd    %rax,%rdx\n    a17d:\t8b 84 24 90 00 00 00 \tmov    0x90(%rsp),%eax\n    a184:\t2b 44 24 6c          \tsub    0x6c(%rsp),%eax\n    a188:\t89 02                \tmov    %eax,(%rdx)\n    a18a:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a191:\t48 98                \tcltq   \n    a193:\t48 83 c0 10          \tadd    $0x10,%rax\n    a197:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a19e:\t00 \n    a19f:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a1a6:\t00 \n    a1a7:\t48 01 d0             \tadd    %rdx,%rax\n    a1aa:\t8b 8c 24 8c 00 00 00 \tmov    0x8c(%rsp),%ecx\n    a1b1:\t8b 54 24 70          \tmov    0x70(%rsp),%edx\n    a1b5:\t01 ca                \tadd    %ecx,%edx\n    a1b7:\t89 10                \tmov    %edx,(%rax)\n    a1b9:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a1c0:\t48 98                \tcltq   \n    a1c2:\t48 83 c0 28          \tadd    $0x28,%rax\n    a1c6:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a1cd:\t00 \n    a1ce:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a1d5:\t00 \n    a1d6:\t48 01 c2             \tadd    %rax,%rdx\n    a1d9:\t8b 84 24 8c 00 00 00 \tmov    0x8c(%rsp),%eax\n    a1e0:\t2b 44 24 70          \tsub    0x70(%rsp),%eax\n    a1e4:\t89 02                \tmov    %eax,(%rdx)\n    a1e6:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a1ed:\t48 98                \tcltq   \n    a1ef:\t48 83 c0 18          \tadd    $0x18,%rax\n    a1f3:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a1fa:\t00 \n    a1fb:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a202:\t00 \n    a203:\t48 01 d0             \tadd    %rdx,%rax\n    a206:\t8b 8c 24 88 00 00 00 \tmov    0x88(%rsp),%ecx\n    a20d:\t8b 54 24 74          \tmov    0x74(%rsp),%edx\n    a211:\t01 ca                \tadd    %ecx,%edx\n    a213:\t89 10                \tmov    %edx,(%rax)\n    a215:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a21c:\t48 98                \tcltq   \n    a21e:\t48 83 c0 20          \tadd    $0x20,%rax\n    a222:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a229:\t00 \n    a22a:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a231:\t00 \n    a232:\t48 01 c2             \tadd    %rax,%rdx\n    a235:\t8b 84 24 88 00 00 00 \tmov    0x88(%rsp),%eax\n    a23c:\t2b 44 24 74          \tsub    0x74(%rsp),%eax\n    a240:\t89 02                \tmov    %eax,(%rdx)\n    a242:\t83 84 24 fc 00 00 00 \taddl   $0x1,0xfc(%rsp)\n    a249:\t01 \n    a24a:\t83 bc 24 fc 00 00 00 \tcmpl   $0x7,0xfc(%rsp)\n    a251:\t07 \n    a252:\t0f 8e 40 fa ff ff    \tjle    9c98 <ff_h264_idct8_add_14_c+0x5a>\n    a258:\tc7 84 24 fc 00 00 00 \tmovl   $0x0,0xfc(%rsp)\n    a25f:\t00 00 00 00 \n    a263:\te9 ea 09 00 00       \tjmp    ac52 <ff_h264_idct8_add_14_c+0x1014>\n    a268:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a26f:\tc1 e0 03             \tshl    $0x3,%eax\n    a272:\t48 98                \tcltq   \n    a274:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a27b:\t00 \n    a27c:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a283:\t00 \n    a284:\t48 01 d0             \tadd    %rdx,%rax\n    a287:\t8b 10                \tmov    (%rax),%edx\n    a289:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a290:\tc1 e0 03             \tshl    $0x3,%eax\n    a293:\t83 c0 04             \tadd    $0x4,%eax\n    a296:\t48 98                \tcltq   \n    a298:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a29f:\t00 \n    a2a0:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a2a7:\t00 \n    a2a8:\t48 01 c8             \tadd    %rcx,%rax\n    a2ab:\t8b 00                \tmov    (%rax),%eax\n    a2ad:\t01 d0                \tadd    %edx,%eax\n    a2af:\t89 84 24 e4 00 00 00 \tmov    %eax,0xe4(%rsp)\n    a2b6:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a2bd:\tc1 e0 03             \tshl    $0x3,%eax\n    a2c0:\t48 98                \tcltq   \n    a2c2:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a2c9:\t00 \n    a2ca:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a2d1:\t00 \n    a2d2:\t48 01 d0             \tadd    %rdx,%rax\n    a2d5:\t8b 10                \tmov    (%rax),%edx\n    a2d7:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a2de:\tc1 e0 03             \tshl    $0x3,%eax\n    a2e1:\t83 c0 04             \tadd    $0x4,%eax\n    a2e4:\t48 98                \tcltq   \n    a2e6:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a2ed:\t00 \n    a2ee:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a2f5:\t00 \n    a2f6:\t48 01 c8             \tadd    %rcx,%rax\n    a2f9:\t8b 00                \tmov    (%rax),%eax\n    a2fb:\t29 c2                \tsub    %eax,%edx\n    a2fd:\t89 d0                \tmov    %edx,%eax\n    a2ff:\t89 84 24 e0 00 00 00 \tmov    %eax,0xe0(%rsp)\n    a306:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a30d:\tc1 e0 03             \tshl    $0x3,%eax\n    a310:\t83 c0 02             \tadd    $0x2,%eax\n    a313:\t48 98                \tcltq   \n    a315:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a31c:\t00 \n    a31d:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a324:\t00 \n    a325:\t48 01 d0             \tadd    %rdx,%rax\n    a328:\t8b 00                \tmov    (%rax),%eax\n    a32a:\td1 f8                \tsar    %eax\n    a32c:\t89 c2                \tmov    %eax,%edx\n    a32e:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a335:\tc1 e0 03             \tshl    $0x3,%eax\n    a338:\t83 c0 06             \tadd    $0x6,%eax\n    a33b:\t48 98                \tcltq   \n    a33d:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a344:\t00 \n    a345:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a34c:\t00 \n    a34d:\t48 01 c8             \tadd    %rcx,%rax\n    a350:\t8b 00                \tmov    (%rax),%eax\n    a352:\t29 c2                \tsub    %eax,%edx\n    a354:\t89 d0                \tmov    %edx,%eax\n    a356:\t89 84 24 dc 00 00 00 \tmov    %eax,0xdc(%rsp)\n    a35d:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a364:\tc1 e0 03             \tshl    $0x3,%eax\n    a367:\t83 c0 06             \tadd    $0x6,%eax\n    a36a:\t48 98                \tcltq   \n    a36c:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a373:\t00 \n    a374:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a37b:\t00 \n    a37c:\t48 01 d0             \tadd    %rdx,%rax\n    a37f:\t8b 00                \tmov    (%rax),%eax\n    a381:\td1 f8                \tsar    %eax\n    a383:\t89 c2                \tmov    %eax,%edx\n    a385:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a38c:\tc1 e0 03             \tshl    $0x3,%eax\n    a38f:\t83 c0 02             \tadd    $0x2,%eax\n    a392:\t48 98                \tcltq   \n    a394:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a39b:\t00 \n    a39c:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a3a3:\t00 \n    a3a4:\t48 01 c8             \tadd    %rcx,%rax\n    a3a7:\t8b 00                \tmov    (%rax),%eax\n    a3a9:\t01 d0                \tadd    %edx,%eax\n    a3ab:\t89 84 24 d8 00 00 00 \tmov    %eax,0xd8(%rsp)\n    a3b2:\t8b 94 24 e4 00 00 00 \tmov    0xe4(%rsp),%edx\n    a3b9:\t8b 84 24 d8 00 00 00 \tmov    0xd8(%rsp),%eax\n    a3c0:\t01 d0                \tadd    %edx,%eax\n    a3c2:\t89 84 24 d4 00 00 00 \tmov    %eax,0xd4(%rsp)\n    a3c9:\t8b 94 24 e0 00 00 00 \tmov    0xe0(%rsp),%edx\n    a3d0:\t8b 84 24 dc 00 00 00 \tmov    0xdc(%rsp),%eax\n    a3d7:\t01 d0                \tadd    %edx,%eax\n    a3d9:\t89 84 24 d0 00 00 00 \tmov    %eax,0xd0(%rsp)\n    a3e0:\t8b 84 24 e0 00 00 00 \tmov    0xe0(%rsp),%eax\n    a3e7:\t2b 84 24 dc 00 00 00 \tsub    0xdc(%rsp),%eax\n    a3ee:\t89 84 24 cc 00 00 00 \tmov    %eax,0xcc(%rsp)\n    a3f5:\t8b 84 24 e4 00 00 00 \tmov    0xe4(%rsp),%eax\n    a3fc:\t2b 84 24 d8 00 00 00 \tsub    0xd8(%rsp),%eax\n    a403:\t89 84 24 c8 00 00 00 \tmov    %eax,0xc8(%rsp)\n    a40a:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a411:\tc1 e0 03             \tshl    $0x3,%eax\n    a414:\t83 c0 05             \tadd    $0x5,%eax\n    a417:\t48 98                \tcltq   \n    a419:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a420:\t00 \n    a421:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a428:\t00 \n    a429:\t48 01 d0             \tadd    %rdx,%rax\n    a42c:\t8b 10                \tmov    (%rax),%edx\n    a42e:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a435:\tc1 e0 03             \tshl    $0x3,%eax\n    a438:\t83 c0 03             \tadd    $0x3,%eax\n    a43b:\t48 98                \tcltq   \n    a43d:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a444:\t00 \n    a445:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a44c:\t00 \n    a44d:\t48 01 c8             \tadd    %rcx,%rax\n    a450:\t8b 00                \tmov    (%rax),%eax\n    a452:\t29 c2                \tsub    %eax,%edx\n    a454:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a45b:\tc1 e0 03             \tshl    $0x3,%eax\n    a45e:\t83 c0 07             \tadd    $0x7,%eax\n    a461:\t48 98                \tcltq   \n    a463:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a46a:\t00 \n    a46b:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a472:\t00 \n    a473:\t48 01 c8             \tadd    %rcx,%rax\n    a476:\t8b 00                \tmov    (%rax),%eax\n    a478:\t29 c2                \tsub    %eax,%edx\n    a47a:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a481:\tc1 e0 03             \tshl    $0x3,%eax\n    a484:\t83 c0 07             \tadd    $0x7,%eax\n    a487:\t48 98                \tcltq   \n    a489:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a490:\t00 \n    a491:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a498:\t00 \n    a499:\t48 01 c8             \tadd    %rcx,%rax\n    a49c:\t8b 00                \tmov    (%rax),%eax\n    a49e:\td1 f8                \tsar    %eax\n    a4a0:\t29 c2                \tsub    %eax,%edx\n    a4a2:\t89 d0                \tmov    %edx,%eax\n    a4a4:\t89 84 24 c4 00 00 00 \tmov    %eax,0xc4(%rsp)\n    a4ab:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a4b2:\tc1 e0 03             \tshl    $0x3,%eax\n    a4b5:\t83 c0 01             \tadd    $0x1,%eax\n    a4b8:\t48 98                \tcltq   \n    a4ba:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a4c1:\t00 \n    a4c2:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a4c9:\t00 \n    a4ca:\t48 01 d0             \tadd    %rdx,%rax\n    a4cd:\t8b 10                \tmov    (%rax),%edx\n    a4cf:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a4d6:\tc1 e0 03             \tshl    $0x3,%eax\n    a4d9:\t83 c0 07             \tadd    $0x7,%eax\n    a4dc:\t48 98                \tcltq   \n    a4de:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a4e5:\t00 \n    a4e6:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a4ed:\t00 \n    a4ee:\t48 01 c8             \tadd    %rcx,%rax\n    a4f1:\t8b 00                \tmov    (%rax),%eax\n    a4f3:\t01 c2                \tadd    %eax,%edx\n    a4f5:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a4fc:\tc1 e0 03             \tshl    $0x3,%eax\n    a4ff:\t83 c0 03             \tadd    $0x3,%eax\n    a502:\t48 98                \tcltq   \n    a504:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a50b:\t00 \n    a50c:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a513:\t00 \n    a514:\t48 01 c8             \tadd    %rcx,%rax\n    a517:\t8b 00                \tmov    (%rax),%eax\n    a519:\t29 c2                \tsub    %eax,%edx\n    a51b:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a522:\tc1 e0 03             \tshl    $0x3,%eax\n    a525:\t83 c0 03             \tadd    $0x3,%eax\n    a528:\t48 98                \tcltq   \n    a52a:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a531:\t00 \n    a532:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a539:\t00 \n    a53a:\t48 01 c8             \tadd    %rcx,%rax\n    a53d:\t8b 00                \tmov    (%rax),%eax\n    a53f:\td1 f8                \tsar    %eax\n    a541:\t29 c2                \tsub    %eax,%edx\n    a543:\t89 d0                \tmov    %edx,%eax\n    a545:\t89 84 24 c0 00 00 00 \tmov    %eax,0xc0(%rsp)\n    a54c:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a553:\tc1 e0 03             \tshl    $0x3,%eax\n    a556:\t83 c0 07             \tadd    $0x7,%eax\n    a559:\t48 98                \tcltq   \n    a55b:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a562:\t00 \n    a563:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a56a:\t00 \n    a56b:\t48 01 d0             \tadd    %rdx,%rax\n    a56e:\t8b 10                \tmov    (%rax),%edx\n    a570:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a577:\tc1 e0 03             \tshl    $0x3,%eax\n    a57a:\t83 c0 01             \tadd    $0x1,%eax\n    a57d:\t48 98                \tcltq   \n    a57f:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a586:\t00 \n    a587:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a58e:\t00 \n    a58f:\t48 01 c8             \tadd    %rcx,%rax\n    a592:\t8b 00                \tmov    (%rax),%eax\n    a594:\t29 c2                \tsub    %eax,%edx\n    a596:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a59d:\tc1 e0 03             \tshl    $0x3,%eax\n    a5a0:\t83 c0 05             \tadd    $0x5,%eax\n    a5a3:\t48 98                \tcltq   \n    a5a5:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a5ac:\t00 \n    a5ad:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a5b4:\t00 \n    a5b5:\t48 01 c8             \tadd    %rcx,%rax\n    a5b8:\t8b 00                \tmov    (%rax),%eax\n    a5ba:\t01 c2                \tadd    %eax,%edx\n    a5bc:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a5c3:\tc1 e0 03             \tshl    $0x3,%eax\n    a5c6:\t83 c0 05             \tadd    $0x5,%eax\n    a5c9:\t48 98                \tcltq   \n    a5cb:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a5d2:\t00 \n    a5d3:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a5da:\t00 \n    a5db:\t48 01 c8             \tadd    %rcx,%rax\n    a5de:\t8b 00                \tmov    (%rax),%eax\n    a5e0:\td1 f8                \tsar    %eax\n    a5e2:\t01 d0                \tadd    %edx,%eax\n    a5e4:\t89 84 24 bc 00 00 00 \tmov    %eax,0xbc(%rsp)\n    a5eb:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a5f2:\tc1 e0 03             \tshl    $0x3,%eax\n    a5f5:\t83 c0 03             \tadd    $0x3,%eax\n    a5f8:\t48 98                \tcltq   \n    a5fa:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    a601:\t00 \n    a602:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a609:\t00 \n    a60a:\t48 01 d0             \tadd    %rdx,%rax\n    a60d:\t8b 10                \tmov    (%rax),%edx\n    a60f:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a616:\tc1 e0 03             \tshl    $0x3,%eax\n    a619:\t83 c0 05             \tadd    $0x5,%eax\n    a61c:\t48 98                \tcltq   \n    a61e:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a625:\t00 \n    a626:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a62d:\t00 \n    a62e:\t48 01 c8             \tadd    %rcx,%rax\n    a631:\t8b 00                \tmov    (%rax),%eax\n    a633:\t01 c2                \tadd    %eax,%edx\n    a635:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a63c:\tc1 e0 03             \tshl    $0x3,%eax\n    a63f:\t83 c0 01             \tadd    $0x1,%eax\n    a642:\t48 98                \tcltq   \n    a644:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a64b:\t00 \n    a64c:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a653:\t00 \n    a654:\t48 01 c8             \tadd    %rcx,%rax\n    a657:\t8b 00                \tmov    (%rax),%eax\n    a659:\t01 c2                \tadd    %eax,%edx\n    a65b:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a662:\tc1 e0 03             \tshl    $0x3,%eax\n    a665:\t83 c0 01             \tadd    $0x1,%eax\n    a668:\t48 98                \tcltq   \n    a66a:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    a671:\t00 \n    a672:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    a679:\t00 \n    a67a:\t48 01 c8             \tadd    %rcx,%rax\n    a67d:\t8b 00                \tmov    (%rax),%eax\n    a67f:\td1 f8                \tsar    %eax\n    a681:\t01 d0                \tadd    %edx,%eax\n    a683:\t89 84 24 b8 00 00 00 \tmov    %eax,0xb8(%rsp)\n    a68a:\t8b 84 24 b8 00 00 00 \tmov    0xb8(%rsp),%eax\n    a691:\tc1 f8 02             \tsar    $0x2,%eax\n    a694:\t89 c2                \tmov    %eax,%edx\n    a696:\t8b 84 24 c4 00 00 00 \tmov    0xc4(%rsp),%eax\n    a69d:\t01 d0                \tadd    %edx,%eax\n    a69f:\t89 84 24 b4 00 00 00 \tmov    %eax,0xb4(%rsp)\n    a6a6:\t8b 84 24 bc 00 00 00 \tmov    0xbc(%rsp),%eax\n    a6ad:\tc1 f8 02             \tsar    $0x2,%eax\n    a6b0:\t89 c2                \tmov    %eax,%edx\n    a6b2:\t8b 84 24 c0 00 00 00 \tmov    0xc0(%rsp),%eax\n    a6b9:\t01 d0                \tadd    %edx,%eax\n    a6bb:\t89 84 24 b0 00 00 00 \tmov    %eax,0xb0(%rsp)\n    a6c2:\t8b 84 24 c0 00 00 00 \tmov    0xc0(%rsp),%eax\n    a6c9:\tc1 f8 02             \tsar    $0x2,%eax\n    a6cc:\t2b 84 24 bc 00 00 00 \tsub    0xbc(%rsp),%eax\n    a6d3:\t89 84 24 ac 00 00 00 \tmov    %eax,0xac(%rsp)\n    a6da:\t8b 84 24 c4 00 00 00 \tmov    0xc4(%rsp),%eax\n    a6e1:\tc1 f8 02             \tsar    $0x2,%eax\n    a6e4:\t89 c2                \tmov    %eax,%edx\n    a6e6:\t8b 84 24 b8 00 00 00 \tmov    0xb8(%rsp),%eax\n    a6ed:\t29 d0                \tsub    %edx,%eax\n    a6ef:\t89 84 24 a8 00 00 00 \tmov    %eax,0xa8(%rsp)\n    a6f6:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a6fd:\t48 98                \tcltq   \n    a6ff:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    a703:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    a70a:\t00 \n    a70b:\t48 01 d0             \tadd    %rdx,%rax\n    a70e:\t0f b7 00             \tmovzwl (%rax),%eax\n    a711:\t0f b7 c0             \tmovzwl %ax,%eax\n    a714:\t8b 8c 24 d4 00 00 00 \tmov    0xd4(%rsp),%ecx\n    a71b:\t8b 94 24 a8 00 00 00 \tmov    0xa8(%rsp),%edx\n    a722:\t01 ca                \tadd    %ecx,%edx\n    a724:\tc1 fa 06             \tsar    $0x6,%edx\n    a727:\t01 d0                \tadd    %edx,%eax\n    a729:\t89 44 24 2c          \tmov    %eax,0x2c(%rsp)\n    a72d:\tc7 44 24 28 0e 00 00 \tmovl   $0xe,0x28(%rsp)\n    a734:\t00 \n    a735:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n    a739:\tba 01 00 00 00       \tmov    $0x1,%edx\n    a73e:\t89 c1                \tmov    %eax,%ecx\n    a740:\td3 e2                \tshl    %cl,%edx\n    a742:\t89 d0                \tmov    %edx,%eax\n    a744:\tf7 d8                \tneg    %eax\n    a746:\t23 44 24 2c          \tand    0x2c(%rsp),%eax\n    a74a:\t85 c0                \ttest   %eax,%eax\n    a74c:\t74 1d                \tje     a76b <ff_h264_idct8_add_14_c+0xb2d>\n    a74e:\t8b 44 24 2c          \tmov    0x2c(%rsp),%eax\n    a752:\tf7 d8                \tneg    %eax\n    a754:\t99                   \tcltd   \n    a755:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n    a759:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    a75e:\t89 c1                \tmov    %eax,%ecx\n    a760:\td3 e6                \tshl    %cl,%esi\n    a762:\t89 f0                \tmov    %esi,%eax\n    a764:\t83 e8 01             \tsub    $0x1,%eax\n    a767:\t21 d0                \tand    %edx,%eax\n    a769:\teb 04                \tjmp    a76f <ff_h264_idct8_add_14_c+0xb31>\n    a76b:\t8b 44 24 2c          \tmov    0x2c(%rsp),%eax\n    a76f:\t8b 94 24 fc 00 00 00 \tmov    0xfc(%rsp),%edx\n    a776:\t48 63 d2             \tmovslq %edx,%rdx\n    a779:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    a77d:\t48 8b 94 24 f0 00 00 \tmov    0xf0(%rsp),%rdx\n    a784:\t00 \n    a785:\t48 01 ca             \tadd    %rcx,%rdx\n    a788:\t66 89 02             \tmov    %ax,(%rdx)\n    a78b:\t8b 94 24 fc 00 00 00 \tmov    0xfc(%rsp),%edx\n    a792:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    a796:\t01 d0                \tadd    %edx,%eax\n    a798:\t48 98                \tcltq   \n    a79a:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    a79e:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    a7a5:\t00 \n    a7a6:\t48 01 d0             \tadd    %rdx,%rax\n    a7a9:\t0f b7 00             \tmovzwl (%rax),%eax\n    a7ac:\t0f b7 c0             \tmovzwl %ax,%eax\n    a7af:\t8b 8c 24 d0 00 00 00 \tmov    0xd0(%rsp),%ecx\n    a7b6:\t8b 94 24 ac 00 00 00 \tmov    0xac(%rsp),%edx\n    a7bd:\t01 ca                \tadd    %ecx,%edx\n    a7bf:\tc1 fa 06             \tsar    $0x6,%edx\n    a7c2:\t01 d0                \tadd    %edx,%eax\n    a7c4:\t89 44 24 34          \tmov    %eax,0x34(%rsp)\n    a7c8:\tc7 44 24 30 0e 00 00 \tmovl   $0xe,0x30(%rsp)\n    a7cf:\t00 \n    a7d0:\t8b 44 24 30          \tmov    0x30(%rsp),%eax\n    a7d4:\tba 01 00 00 00       \tmov    $0x1,%edx\n    a7d9:\t89 c1                \tmov    %eax,%ecx\n    a7db:\td3 e2                \tshl    %cl,%edx\n    a7dd:\t89 d0                \tmov    %edx,%eax\n    a7df:\tf7 d8                \tneg    %eax\n    a7e1:\t23 44 24 34          \tand    0x34(%rsp),%eax\n    a7e5:\t85 c0                \ttest   %eax,%eax\n    a7e7:\t74 1d                \tje     a806 <ff_h264_idct8_add_14_c+0xbc8>\n    a7e9:\t8b 44 24 34          \tmov    0x34(%rsp),%eax\n    a7ed:\tf7 d8                \tneg    %eax\n    a7ef:\t99                   \tcltd   \n    a7f0:\t8b 44 24 30          \tmov    0x30(%rsp),%eax\n    a7f4:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    a7f9:\t89 c1                \tmov    %eax,%ecx\n    a7fb:\td3 e6                \tshl    %cl,%esi\n    a7fd:\t89 f0                \tmov    %esi,%eax\n    a7ff:\t83 e8 01             \tsub    $0x1,%eax\n    a802:\t21 d0                \tand    %edx,%eax\n    a804:\teb 04                \tjmp    a80a <ff_h264_idct8_add_14_c+0xbcc>\n    a806:\t8b 44 24 34          \tmov    0x34(%rsp),%eax\n    a80a:\t8b 8c 24 fc 00 00 00 \tmov    0xfc(%rsp),%ecx\n    a811:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    a815:\t01 ca                \tadd    %ecx,%edx\n    a817:\t48 63 d2             \tmovslq %edx,%rdx\n    a81a:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    a81e:\t48 8b 94 24 f0 00 00 \tmov    0xf0(%rsp),%rdx\n    a825:\t00 \n    a826:\t48 01 ca             \tadd    %rcx,%rdx\n    a829:\t66 89 02             \tmov    %ax,(%rdx)\n    a82c:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    a830:\t8d 14 00             \tlea    (%rax,%rax,1),%edx\n    a833:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a83a:\t01 d0                \tadd    %edx,%eax\n    a83c:\t48 98                \tcltq   \n    a83e:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    a842:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    a849:\t00 \n    a84a:\t48 01 d0             \tadd    %rdx,%rax\n    a84d:\t0f b7 00             \tmovzwl (%rax),%eax\n    a850:\t0f b7 c0             \tmovzwl %ax,%eax\n    a853:\t8b 8c 24 cc 00 00 00 \tmov    0xcc(%rsp),%ecx\n    a85a:\t8b 94 24 b0 00 00 00 \tmov    0xb0(%rsp),%edx\n    a861:\t01 ca                \tadd    %ecx,%edx\n    a863:\tc1 fa 06             \tsar    $0x6,%edx\n    a866:\t01 d0                \tadd    %edx,%eax\n    a868:\t89 44 24 3c          \tmov    %eax,0x3c(%rsp)\n    a86c:\tc7 44 24 38 0e 00 00 \tmovl   $0xe,0x38(%rsp)\n    a873:\t00 \n    a874:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    a878:\tba 01 00 00 00       \tmov    $0x1,%edx\n    a87d:\t89 c1                \tmov    %eax,%ecx\n    a87f:\td3 e2                \tshl    %cl,%edx\n    a881:\t89 d0                \tmov    %edx,%eax\n    a883:\tf7 d8                \tneg    %eax\n    a885:\t23 44 24 3c          \tand    0x3c(%rsp),%eax\n    a889:\t85 c0                \ttest   %eax,%eax\n    a88b:\t74 1d                \tje     a8aa <ff_h264_idct8_add_14_c+0xc6c>\n    a88d:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    a891:\tf7 d8                \tneg    %eax\n    a893:\t99                   \tcltd   \n    a894:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    a898:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    a89d:\t89 c1                \tmov    %eax,%ecx\n    a89f:\td3 e6                \tshl    %cl,%esi\n    a8a1:\t89 f0                \tmov    %esi,%eax\n    a8a3:\t83 e8 01             \tsub    $0x1,%eax\n    a8a6:\t21 d0                \tand    %edx,%eax\n    a8a8:\teb 04                \tjmp    a8ae <ff_h264_idct8_add_14_c+0xc70>\n    a8aa:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    a8ae:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    a8b2:\t8d 0c 12             \tlea    (%rdx,%rdx,1),%ecx\n    a8b5:\t8b 94 24 fc 00 00 00 \tmov    0xfc(%rsp),%edx\n    a8bc:\t01 ca                \tadd    %ecx,%edx\n    a8be:\t48 63 d2             \tmovslq %edx,%rdx\n    a8c1:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    a8c5:\t48 8b 94 24 f0 00 00 \tmov    0xf0(%rsp),%rdx\n    a8cc:\t00 \n    a8cd:\t48 01 ca             \tadd    %rcx,%rdx\n    a8d0:\t66 89 02             \tmov    %ax,(%rdx)\n    a8d3:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    a8d7:\t89 d0                \tmov    %edx,%eax\n    a8d9:\t01 c0                \tadd    %eax,%eax\n    a8db:\t01 c2                \tadd    %eax,%edx\n    a8dd:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a8e4:\t01 d0                \tadd    %edx,%eax\n    a8e6:\t48 98                \tcltq   \n    a8e8:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    a8ec:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    a8f3:\t00 \n    a8f4:\t48 01 d0             \tadd    %rdx,%rax\n    a8f7:\t0f b7 00             \tmovzwl (%rax),%eax\n    a8fa:\t0f b7 c0             \tmovzwl %ax,%eax\n    a8fd:\t8b 8c 24 c8 00 00 00 \tmov    0xc8(%rsp),%ecx\n    a904:\t8b 94 24 b4 00 00 00 \tmov    0xb4(%rsp),%edx\n    a90b:\t01 ca                \tadd    %ecx,%edx\n    a90d:\tc1 fa 06             \tsar    $0x6,%edx\n    a910:\t01 d0                \tadd    %edx,%eax\n    a912:\t89 44 24 44          \tmov    %eax,0x44(%rsp)\n    a916:\tc7 44 24 40 0e 00 00 \tmovl   $0xe,0x40(%rsp)\n    a91d:\t00 \n    a91e:\t8b 44 24 40          \tmov    0x40(%rsp),%eax\n    a922:\tba 01 00 00 00       \tmov    $0x1,%edx\n    a927:\t89 c1                \tmov    %eax,%ecx\n    a929:\td3 e2                \tshl    %cl,%edx\n    a92b:\t89 d0                \tmov    %edx,%eax\n    a92d:\tf7 d8                \tneg    %eax\n    a92f:\t23 44 24 44          \tand    0x44(%rsp),%eax\n    a933:\t85 c0                \ttest   %eax,%eax\n    a935:\t74 1f                \tje     a956 <ff_h264_idct8_add_14_c+0xd18>\n    a937:\t8b 44 24 44          \tmov    0x44(%rsp),%eax\n    a93b:\tf7 d8                \tneg    %eax\n    a93d:\t99                   \tcltd   \n    a93e:\t8b 44 24 40          \tmov    0x40(%rsp),%eax\n    a942:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    a947:\t89 c1                \tmov    %eax,%ecx\n    a949:\td3 e6                \tshl    %cl,%esi\n    a94b:\t89 f0                \tmov    %esi,%eax\n    a94d:\t83 e8 01             \tsub    $0x1,%eax\n    a950:\t21 d0                \tand    %edx,%eax\n    a952:\t89 c1                \tmov    %eax,%ecx\n    a954:\teb 04                \tjmp    a95a <ff_h264_idct8_add_14_c+0xd1c>\n    a956:\t8b 4c 24 44          \tmov    0x44(%rsp),%ecx\n    a95a:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    a95e:\t89 d0                \tmov    %edx,%eax\n    a960:\t01 c0                \tadd    %eax,%eax\n    a962:\t01 c2                \tadd    %eax,%edx\n    a964:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a96b:\t01 d0                \tadd    %edx,%eax\n    a96d:\t48 98                \tcltq   \n    a96f:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    a973:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    a97a:\t00 \n    a97b:\t48 01 d0             \tadd    %rdx,%rax\n    a97e:\t89 ca                \tmov    %ecx,%edx\n    a980:\t66 89 10             \tmov    %dx,(%rax)\n    a983:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    a987:\t8d 14 85 00 00 00 00 \tlea    0x0(,%rax,4),%edx\n    a98e:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    a995:\t01 d0                \tadd    %edx,%eax\n    a997:\t48 98                \tcltq   \n    a999:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    a99d:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    a9a4:\t00 \n    a9a5:\t48 01 d0             \tadd    %rdx,%rax\n    a9a8:\t0f b7 00             \tmovzwl (%rax),%eax\n    a9ab:\t0f b7 d0             \tmovzwl %ax,%edx\n    a9ae:\t8b 84 24 c8 00 00 00 \tmov    0xc8(%rsp),%eax\n    a9b5:\t2b 84 24 b4 00 00 00 \tsub    0xb4(%rsp),%eax\n    a9bc:\tc1 f8 06             \tsar    $0x6,%eax\n    a9bf:\t01 d0                \tadd    %edx,%eax\n    a9c1:\t89 44 24 4c          \tmov    %eax,0x4c(%rsp)\n    a9c5:\tc7 44 24 48 0e 00 00 \tmovl   $0xe,0x48(%rsp)\n    a9cc:\t00 \n    a9cd:\t8b 44 24 48          \tmov    0x48(%rsp),%eax\n    a9d1:\tba 01 00 00 00       \tmov    $0x1,%edx\n    a9d6:\t89 c1                \tmov    %eax,%ecx\n    a9d8:\td3 e2                \tshl    %cl,%edx\n    a9da:\t89 d0                \tmov    %edx,%eax\n    a9dc:\tf7 d8                \tneg    %eax\n    a9de:\t23 44 24 4c          \tand    0x4c(%rsp),%eax\n    a9e2:\t85 c0                \ttest   %eax,%eax\n    a9e4:\t74 1d                \tje     aa03 <ff_h264_idct8_add_14_c+0xdc5>\n    a9e6:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n    a9ea:\tf7 d8                \tneg    %eax\n    a9ec:\t99                   \tcltd   \n    a9ed:\t8b 44 24 48          \tmov    0x48(%rsp),%eax\n    a9f1:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    a9f6:\t89 c1                \tmov    %eax,%ecx\n    a9f8:\td3 e6                \tshl    %cl,%esi\n    a9fa:\t89 f0                \tmov    %esi,%eax\n    a9fc:\t83 e8 01             \tsub    $0x1,%eax\n    a9ff:\t21 d0                \tand    %edx,%eax\n    aa01:\teb 04                \tjmp    aa07 <ff_h264_idct8_add_14_c+0xdc9>\n    aa03:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n    aa07:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    aa0b:\t8d 0c 95 00 00 00 00 \tlea    0x0(,%rdx,4),%ecx\n    aa12:\t8b 94 24 fc 00 00 00 \tmov    0xfc(%rsp),%edx\n    aa19:\t01 ca                \tadd    %ecx,%edx\n    aa1b:\t48 63 d2             \tmovslq %edx,%rdx\n    aa1e:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    aa22:\t48 8b 94 24 f0 00 00 \tmov    0xf0(%rsp),%rdx\n    aa29:\t00 \n    aa2a:\t48 01 ca             \tadd    %rcx,%rdx\n    aa2d:\t66 89 02             \tmov    %ax,(%rdx)\n    aa30:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    aa34:\t89 d0                \tmov    %edx,%eax\n    aa36:\tc1 e0 02             \tshl    $0x2,%eax\n    aa39:\t01 c2                \tadd    %eax,%edx\n    aa3b:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    aa42:\t01 d0                \tadd    %edx,%eax\n    aa44:\t48 98                \tcltq   \n    aa46:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    aa4a:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    aa51:\t00 \n    aa52:\t48 01 d0             \tadd    %rdx,%rax\n    aa55:\t0f b7 00             \tmovzwl (%rax),%eax\n    aa58:\t0f b7 d0             \tmovzwl %ax,%edx\n    aa5b:\t8b 84 24 cc 00 00 00 \tmov    0xcc(%rsp),%eax\n    aa62:\t2b 84 24 b0 00 00 00 \tsub    0xb0(%rsp),%eax\n    aa69:\tc1 f8 06             \tsar    $0x6,%eax\n    aa6c:\t01 d0                \tadd    %edx,%eax\n    aa6e:\t89 44 24 54          \tmov    %eax,0x54(%rsp)\n    aa72:\tc7 44 24 50 0e 00 00 \tmovl   $0xe,0x50(%rsp)\n    aa79:\t00 \n    aa7a:\t8b 44 24 50          \tmov    0x50(%rsp),%eax\n    aa7e:\tba 01 00 00 00       \tmov    $0x1,%edx\n    aa83:\t89 c1                \tmov    %eax,%ecx\n    aa85:\td3 e2                \tshl    %cl,%edx\n    aa87:\t89 d0                \tmov    %edx,%eax\n    aa89:\tf7 d8                \tneg    %eax\n    aa8b:\t23 44 24 54          \tand    0x54(%rsp),%eax\n    aa8f:\t85 c0                \ttest   %eax,%eax\n    aa91:\t74 1f                \tje     aab2 <ff_h264_idct8_add_14_c+0xe74>\n    aa93:\t8b 44 24 54          \tmov    0x54(%rsp),%eax\n    aa97:\tf7 d8                \tneg    %eax\n    aa99:\t99                   \tcltd   \n    aa9a:\t8b 44 24 50          \tmov    0x50(%rsp),%eax\n    aa9e:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    aaa3:\t89 c1                \tmov    %eax,%ecx\n    aaa5:\td3 e6                \tshl    %cl,%esi\n    aaa7:\t89 f0                \tmov    %esi,%eax\n    aaa9:\t83 e8 01             \tsub    $0x1,%eax\n    aaac:\t21 d0                \tand    %edx,%eax\n    aaae:\t89 c1                \tmov    %eax,%ecx\n    aab0:\teb 04                \tjmp    aab6 <ff_h264_idct8_add_14_c+0xe78>\n    aab2:\t8b 4c 24 54          \tmov    0x54(%rsp),%ecx\n    aab6:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    aaba:\t89 d0                \tmov    %edx,%eax\n    aabc:\tc1 e0 02             \tshl    $0x2,%eax\n    aabf:\t01 c2                \tadd    %eax,%edx\n    aac1:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    aac8:\t01 d0                \tadd    %edx,%eax\n    aaca:\t48 98                \tcltq   \n    aacc:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    aad0:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    aad7:\t00 \n    aad8:\t48 01 d0             \tadd    %rdx,%rax\n    aadb:\t89 ca                \tmov    %ecx,%edx\n    aadd:\t66 89 10             \tmov    %dx,(%rax)\n    aae0:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    aae4:\t89 d0                \tmov    %edx,%eax\n    aae6:\t01 c0                \tadd    %eax,%eax\n    aae8:\t01 d0                \tadd    %edx,%eax\n    aaea:\t01 c0                \tadd    %eax,%eax\n    aaec:\t89 c2                \tmov    %eax,%edx\n    aaee:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    aaf5:\t01 d0                \tadd    %edx,%eax\n    aaf7:\t48 98                \tcltq   \n    aaf9:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    aafd:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    ab04:\t00 \n    ab05:\t48 01 d0             \tadd    %rdx,%rax\n    ab08:\t0f b7 00             \tmovzwl (%rax),%eax\n    ab0b:\t0f b7 d0             \tmovzwl %ax,%edx\n    ab0e:\t8b 84 24 d0 00 00 00 \tmov    0xd0(%rsp),%eax\n    ab15:\t2b 84 24 ac 00 00 00 \tsub    0xac(%rsp),%eax\n    ab1c:\tc1 f8 06             \tsar    $0x6,%eax\n    ab1f:\t01 d0                \tadd    %edx,%eax\n    ab21:\t89 44 24 5c          \tmov    %eax,0x5c(%rsp)\n    ab25:\tc7 44 24 58 0e 00 00 \tmovl   $0xe,0x58(%rsp)\n    ab2c:\t00 \n    ab2d:\t8b 44 24 58          \tmov    0x58(%rsp),%eax\n    ab31:\tba 01 00 00 00       \tmov    $0x1,%edx\n    ab36:\t89 c1                \tmov    %eax,%ecx\n    ab38:\td3 e2                \tshl    %cl,%edx\n    ab3a:\t89 d0                \tmov    %edx,%eax\n    ab3c:\tf7 d8                \tneg    %eax\n    ab3e:\t23 44 24 5c          \tand    0x5c(%rsp),%eax\n    ab42:\t85 c0                \ttest   %eax,%eax\n    ab44:\t74 1f                \tje     ab65 <ff_h264_idct8_add_14_c+0xf27>\n    ab46:\t8b 44 24 5c          \tmov    0x5c(%rsp),%eax\n    ab4a:\tf7 d8                \tneg    %eax\n    ab4c:\t99                   \tcltd   \n    ab4d:\t8b 44 24 58          \tmov    0x58(%rsp),%eax\n    ab51:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    ab56:\t89 c1                \tmov    %eax,%ecx\n    ab58:\td3 e6                \tshl    %cl,%esi\n    ab5a:\t89 f0                \tmov    %esi,%eax\n    ab5c:\t83 e8 01             \tsub    $0x1,%eax\n    ab5f:\t21 d0                \tand    %edx,%eax\n    ab61:\t89 c1                \tmov    %eax,%ecx\n    ab63:\teb 04                \tjmp    ab69 <ff_h264_idct8_add_14_c+0xf2b>\n    ab65:\t8b 4c 24 5c          \tmov    0x5c(%rsp),%ecx\n    ab69:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    ab6d:\t89 d0                \tmov    %edx,%eax\n    ab6f:\t01 c0                \tadd    %eax,%eax\n    ab71:\t01 d0                \tadd    %edx,%eax\n    ab73:\t01 c0                \tadd    %eax,%eax\n    ab75:\t89 c2                \tmov    %eax,%edx\n    ab77:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    ab7e:\t01 d0                \tadd    %edx,%eax\n    ab80:\t48 98                \tcltq   \n    ab82:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    ab86:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    ab8d:\t00 \n    ab8e:\t48 01 d0             \tadd    %rdx,%rax\n    ab91:\t89 ca                \tmov    %ecx,%edx\n    ab93:\t66 89 10             \tmov    %dx,(%rax)\n    ab96:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    ab9a:\t89 d0                \tmov    %edx,%eax\n    ab9c:\tc1 e0 03             \tshl    $0x3,%eax\n    ab9f:\t29 d0                \tsub    %edx,%eax\n    aba1:\t89 c2                \tmov    %eax,%edx\n    aba3:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    abaa:\t01 d0                \tadd    %edx,%eax\n    abac:\t48 98                \tcltq   \n    abae:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    abb2:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    abb9:\t00 \n    abba:\t48 01 d0             \tadd    %rdx,%rax\n    abbd:\t0f b7 00             \tmovzwl (%rax),%eax\n    abc0:\t0f b7 d0             \tmovzwl %ax,%edx\n    abc3:\t8b 84 24 d4 00 00 00 \tmov    0xd4(%rsp),%eax\n    abca:\t2b 84 24 a8 00 00 00 \tsub    0xa8(%rsp),%eax\n    abd1:\tc1 f8 06             \tsar    $0x6,%eax\n    abd4:\t01 d0                \tadd    %edx,%eax\n    abd6:\t89 44 24 64          \tmov    %eax,0x64(%rsp)\n    abda:\tc7 44 24 60 0e 00 00 \tmovl   $0xe,0x60(%rsp)\n    abe1:\t00 \n    abe2:\t8b 44 24 60          \tmov    0x60(%rsp),%eax\n    abe6:\tba 01 00 00 00       \tmov    $0x1,%edx\n    abeb:\t89 c1                \tmov    %eax,%ecx\n    abed:\td3 e2                \tshl    %cl,%edx\n    abef:\t89 d0                \tmov    %edx,%eax\n    abf1:\tf7 d8                \tneg    %eax\n    abf3:\t23 44 24 64          \tand    0x64(%rsp),%eax\n    abf7:\t85 c0                \ttest   %eax,%eax\n    abf9:\t74 1f                \tje     ac1a <ff_h264_idct8_add_14_c+0xfdc>\n    abfb:\t8b 44 24 64          \tmov    0x64(%rsp),%eax\n    abff:\tf7 d8                \tneg    %eax\n    ac01:\t99                   \tcltd   \n    ac02:\t8b 44 24 60          \tmov    0x60(%rsp),%eax\n    ac06:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    ac0b:\t89 c1                \tmov    %eax,%ecx\n    ac0d:\td3 e6                \tshl    %cl,%esi\n    ac0f:\t89 f0                \tmov    %esi,%eax\n    ac11:\t83 e8 01             \tsub    $0x1,%eax\n    ac14:\t21 d0                \tand    %edx,%eax\n    ac16:\t89 c1                \tmov    %eax,%ecx\n    ac18:\teb 04                \tjmp    ac1e <ff_h264_idct8_add_14_c+0xfe0>\n    ac1a:\t8b 4c 24 64          \tmov    0x64(%rsp),%ecx\n    ac1e:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    ac22:\t89 d0                \tmov    %edx,%eax\n    ac24:\tc1 e0 03             \tshl    $0x3,%eax\n    ac27:\t29 d0                \tsub    %edx,%eax\n    ac29:\t89 c2                \tmov    %eax,%edx\n    ac2b:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    ac32:\t01 d0                \tadd    %edx,%eax\n    ac34:\t48 98                \tcltq   \n    ac36:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    ac3a:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    ac41:\t00 \n    ac42:\t48 01 d0             \tadd    %rdx,%rax\n    ac45:\t89 ca                \tmov    %ecx,%edx\n    ac47:\t66 89 10             \tmov    %dx,(%rax)\n    ac4a:\t83 84 24 fc 00 00 00 \taddl   $0x1,0xfc(%rsp)\n    ac51:\t01 \n    ac52:\t83 bc 24 fc 00 00 00 \tcmpl   $0x7,0xfc(%rsp)\n    ac59:\t07 \n    ac5a:\t0f 8e 08 f6 ff ff    \tjle    a268 <ff_h264_idct8_add_14_c+0x62a>\n    ac60:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    ac67:\t00 \n    ac68:\tba 00 01 00 00       \tmov    $0x100,%edx\n    ac6d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    ac72:\t48 89 c7             \tmov    %rax,%rdi\n    ac75:\te8 00 00 00 00       \tcall   ac7a <ff_h264_idct8_add_14_c+0x103c>\n    ac7a:\t90                   \tnop\n    ac7b:\t48 81 c4 08 01 00 00 \tadd    $0x108,%rsp\n    ac82:\tc3                   \tret    ", "code_s": "void ff_h264_idct8_add_14_c(long param_1, int *<span class=\"supfact\">param_2</span>,\n                            int <span class=\"supfact\">param_3</span>) {\n  ushort <span class=\"supfact\">uVar1</span>;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  uint uVar9;\n  int iVar10;\n  int iVar11;\n  int iVar12;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">param_3</span> = <span class=\"supfact\">param_3</span> >> Number;\n  *<span class=\"supfact\">param_2</span> = *<span class=\"supfact\">param_2</span> + Number;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    iVar10 = (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n              Number) -\n             <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number];\n    iVar2 = <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] +\n            (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n             Number);\n    iVar3 = iVar2 +\n            <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] +\n            <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>];\n    iVar4 = iVar10 +\n            (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>] -\n             <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number]);\n    iVar10 = (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>] -\n              <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number]) -\n             iVar10;\n    iVar2 = (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] +\n             <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>]) -\n            iVar2;\n    iVar11 =\n        ((<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] -\n          <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number]) -\n         <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number]) -\n        (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n         Number);\n    iVar12 =\n        ((<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] +\n          <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number]) -\n         <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number]) -\n        (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n         Number);\n    iVar5 = (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n             Number) +\n            (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] -\n             <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number]) +\n            <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number];\n    iVar6 = (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n             Number) +\n            <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] +\n            <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] +\n            <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number];\n    iVar7 = iVar11 + (iVar6 >> Number);\n    iVar8 = iVar12 + (iVar5 >> Number);\n    iVar5 = (iVar12 >> Number) - iVar5;\n    iVar6 = iVar6 - (iVar11 >> Number);\n    <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>] = iVar6 + iVar3;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar3 - iVar6;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar5 + iVar4;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar4 - iVar5;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar8 + iVar10;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar10 - iVar8;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar7 + iVar2;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar2 - iVar7;\n  }\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    iVar10 =\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number) -\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number];\n    iVar2 =\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] +\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number);\n    iVar3 = iVar2 +\n            <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] +\n            <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> << Number];\n    iVar4 =\n        iVar10 +\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> << Number] -\n         <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number]);\n    iVar10 =\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> << Number] -\n         <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number]) -\n        iVar10;\n    iVar2 =\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] +\n         <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> << Number]) -\n        iVar2;\n    iVar11 =\n        ((<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] -\n          <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number]) -\n         <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number]) -\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number);\n    iVar12 =\n        ((<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] +\n          <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number]) -\n         <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number]) -\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number);\n    iVar5 =\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number) +\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] -\n         <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number]) +\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number];\n    iVar6 =\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number) +\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] +\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] +\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number];\n    iVar7 = iVar11 + (iVar6 >> Number);\n    iVar8 = iVar12 + (iVar5 >> Number);\n    iVar5 = (iVar12 >> Number) - iVar5;\n    iVar6 = iVar6 - (iVar11 >> Number);\n    uVar9 =\n        (uint) * (ushort *)(param_1 + (long)<span class=\"supfact\">local_c</span> * Number) +\n        (iVar6 + iVar3 >> Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)<span class=\"supfact\">local_c</span> * Number) =\n        <span class=\"supfact\">uVar1</span>;\n    uVar9 = (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">param_3</span> +\n                                                 <span class=\"supfact\">local_c</span>) *\n                                              Number) +\n            (iVar5 + iVar4 >> Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 +\n                (long)(<span class=\"supfact\">param_3</span> + <span class=\"supfact\">local_c</span>) *\n                    Number) = <span class=\"supfact\">uVar1</span>;\n    uVar9 =\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number) +\n        (iVar8 + iVar10 >> Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar1</span>;\n    uVar9 =\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number) +\n        (iVar7 + iVar2 >> Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar1</span>;\n    uVar9 =\n        (iVar2 - iVar7 >> Number) +\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar1</span>;\n    uVar9 =\n        (iVar10 - iVar8 >> Number) +\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar1</span>;\n    uVar9 =\n        (iVar4 - iVar5 >> Number) +\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar1</span>;\n    uVar9 =\n        (iVar3 - iVar6 >> Number) +\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar1</span>;\n  }\n  memset(<span class=\"supfact\">param_2</span>, Number, Number);\n  return;\n}", "code_t": "void ff_h264_idct8_add_14_c(uint8_t *_dst, int16_t *<span class=\"supfact\">_block</span>,\n                            int <span class=\"supfact\">stride</span>) {\n  int iVar1;\n  ushort <span class=\"supfact\">uVar2</span>;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  uint uVar10;\n  int iVar11;\n  int iVar12;\n  int iVar13;\n  int <span class=\"supfact\">stride</span> - local;\n  int16_t *<span class=\"supfact\">_block</span> - local;\n  uint8_t *_dst - local;\n  int b7;\n  int b5;\n  int b3;\n  int b1;\n  int a7;\n  int a5;\n  int a3;\n  int a1;\n  int b6;\n  int b4;\n  int b2;\n  int b0;\n  int a6;\n  int a4;\n  int a2;\n  int a0;\n  int b7_1;\n  int b5_1;\n  int b3_1;\n  int b1_1;\n  int a7_1;\n  int a5_1;\n  int a3_1;\n  int a1_1;\n  int b6_1;\n  int b4_1;\n  int b2_1;\n  int b0_1;\n  int a6_1;\n  int a4_1;\n  int a2_1;\n  int a0_1;\n  int32_t *block;\n  uint16_t *dst;\n  int <span class=\"supfact\">i</span>;\n  iVar1 = <span class=\"supfact\">stride</span> >> Number;\n  *(int *)<span class=\"supfact\">_block</span> = *(int *)<span class=\"supfact\">_block</span> + Number;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    iVar11 = (*(int *)(<span class=\"supfact\">_block</span> +\n                       ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n              Number) -\n             *(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number);\n    iVar3 = *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number) +\n            (*(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n             Number);\n    iVar4 = iVar3 +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number) +\n            *(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number);\n    iVar5 =\n        iVar11 +\n        (*(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number) -\n         *(int *)(<span class=\"supfact\">_block</span> +\n                  ((long)<span class=\"supfact\">i</span> + Number) * Number));\n    iVar11 =\n        (*(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number) -\n         *(int *)(<span class=\"supfact\">_block</span> +\n                  ((long)<span class=\"supfact\">i</span> + Number) * Number)) -\n        iVar11;\n    iVar3 =\n        (*(int *)(<span class=\"supfact\">_block</span> +\n                  ((long)<span class=\"supfact\">i</span> + Number) * Number) +\n         *(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number)) -\n        iVar3;\n    iVar12 = ((*(int *)(<span class=\"supfact\">_block</span> +\n                        ((long)<span class=\"supfact\">i</span> + Number) * Number) -\n               *(int *)(<span class=\"supfact\">_block</span> +\n                        ((long)<span class=\"supfact\">i</span> + Number) * Number)) -\n              *(int *)(<span class=\"supfact\">_block</span> +\n                       ((long)<span class=\"supfact\">i</span> + Number) * Number)) -\n             (*(int *)(<span class=\"supfact\">_block</span> +\n                       ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n              Number);\n    iVar13 = ((*(int *)(<span class=\"supfact\">_block</span> +\n                        ((long)<span class=\"supfact\">i</span> + Number) * Number) +\n               *(int *)(<span class=\"supfact\">_block</span> +\n                        ((long)<span class=\"supfact\">i</span> + Number) * Number)) -\n              *(int *)(<span class=\"supfact\">_block</span> +\n                       ((long)<span class=\"supfact\">i</span> + Number) * Number)) -\n             (*(int *)(<span class=\"supfact\">_block</span> +\n                       ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n              Number);\n    iVar6 = (*(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n             Number) +\n            (*(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number) -\n             *(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number)) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number);\n    iVar7 = (*(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n             Number) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number);\n    iVar8 = iVar12 + (iVar7 >> Number);\n    iVar9 = iVar13 + (iVar6 >> Number);\n    iVar6 = (iVar13 >> Number) - iVar6;\n    iVar7 = iVar7 - (iVar12 >> Number);\n    *(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number) =\n        iVar7 + iVar4;\n    *(int *)(<span class=\"supfact\">_block</span> +\n             ((long)<span class=\"supfact\">i</span> + Number) * Number) = iVar4 - iVar7;\n    *(int *)(<span class=\"supfact\">_block</span> +\n             ((long)<span class=\"supfact\">i</span> + Number) * Number) = iVar6 + iVar5;\n    *(int *)(<span class=\"supfact\">_block</span> +\n             ((long)<span class=\"supfact\">i</span> + Number) * Number) = iVar5 - iVar6;\n    *(int *)(<span class=\"supfact\">_block</span> +\n             ((long)<span class=\"supfact\">i</span> + Number) * Number) = iVar9 + iVar11;\n    *(int *)(<span class=\"supfact\">_block</span> +\n             ((long)<span class=\"supfact\">i</span> + Number) * Number) = iVar11 - iVar9;\n    *(int *)(<span class=\"supfact\">_block</span> +\n             ((long)<span class=\"supfact\">i</span> + Number) * Number) = iVar8 + iVar3;\n    *(int *)(<span class=\"supfact\">_block</span> +\n             ((long)<span class=\"supfact\">i</span> + Number) * Number) = iVar3 - iVar8;\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    iVar11 = (*(int *)(<span class=\"supfact\">_block</span> +\n                       (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n              Number) -\n             *(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number);\n    iVar3 = *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) +\n            (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n             Number);\n    iVar4 = iVar3 +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> << Number) * Number);\n    iVar5 = iVar11 +\n            (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> << Number) * Number) -\n             *(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number));\n    iVar11 = (*(int *)(<span class=\"supfact\">_block</span> +\n                       (long)(<span class=\"supfact\">i</span> << Number) * Number) -\n              *(int *)(<span class=\"supfact\">_block</span> +\n                       (long)(<span class=\"supfact\">i</span> * Number + Number) * Number)) -\n             iVar11;\n    iVar3 = (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) +\n             *(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> << Number) * Number)) -\n            iVar3;\n    iVar12 = ((*(int *)(<span class=\"supfact\">_block</span> +\n                        (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) -\n               *(int *)(<span class=\"supfact\">_block</span> +\n                        (long)(<span class=\"supfact\">i</span> * Number + Number) * Number)) -\n              *(int *)(<span class=\"supfact\">_block</span> +\n                       (long)(<span class=\"supfact\">i</span> * Number + Number) * Number)) -\n             (*(int *)(<span class=\"supfact\">_block</span> +\n                       (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n              Number);\n    iVar13 = ((*(int *)(<span class=\"supfact\">_block</span> +\n                        (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) +\n               *(int *)(<span class=\"supfact\">_block</span> +\n                        (long)(<span class=\"supfact\">i</span> * Number + Number) * Number)) -\n              *(int *)(<span class=\"supfact\">_block</span> +\n                       (long)(<span class=\"supfact\">i</span> * Number + Number) * Number)) -\n             (*(int *)(<span class=\"supfact\">_block</span> +\n                       (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n              Number);\n    iVar6 = (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n             Number) +\n            (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) -\n             *(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number)) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number);\n    iVar7 = (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n             Number) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number);\n    iVar8 = iVar12 + (iVar7 >> Number);\n    iVar9 = iVar13 + (iVar6 >> Number);\n    iVar6 = (iVar13 >> Number) - iVar6;\n    iVar7 = iVar7 - (iVar12 >> Number);\n    uVar10 = (uint) * (ushort *)(_dst + (long)<span class=\"supfact\">i</span> * Number) +\n             (iVar7 + iVar4 >> Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)<span class=\"supfact\">i</span> * Number) =\n        <span class=\"supfact\">uVar2</span>;\n    uVar10 =\n        (uint) * (ushort *)(_dst + (long)(iVar1 + <span class=\"supfact\">i</span>) * Number) +\n        (iVar6 + iVar5 >> Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(iVar1 + <span class=\"supfact\">i</span>) * Number) =\n        <span class=\"supfact\">uVar2</span>;\n    uVar10 =\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number) +\n        (iVar9 + iVar11 >> Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar2</span>;\n    uVar10 =\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number) +\n        (iVar8 + iVar3 >> Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar2</span>;\n    uVar10 =\n        (iVar3 - iVar8 >> Number) +\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar2</span>;\n    uVar10 =\n        (iVar11 - iVar9 >> Number) +\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar2</span>;\n    uVar10 =\n        (iVar5 - iVar6 >> Number) +\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar2</span>;\n    uVar10 =\n        (iVar4 - iVar7 >> Number) +\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar2</span>;\n  }\n  memset(<span class=\"supfact\">_block</span>, Number, Number);\n  return;\n}", "var": [{"name": "param_2", "type": "int16_t * *", "pred_name": "_block", "ref_name": "_block", "ref_type": "int16_t * *"}, {"name": "param_3", "type": "int", "pred_name": "stride", "ref_name": "stride", "ref_type": "int"}, {"name": "uVar1", "type": "ushort", "pred_name": "uVar2", "ref_name": "uVar2", "ref_type": "ushort"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "android-iot", "repo_name": "gnu", "path": "android-iot/gnu/3f90ae4cf207a4a7869a2711484445fe3f0f69ff1d6319775d69d1e6d03768b5", "path_in_repo": "android-iot/gnu/alarm/usr/share/doc/xz/examples/01_compress_easy", "objdump": "", "code_s": "int fprintf(FILE *__stream, char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fprintf_00404048)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int fprintf(FILE *__stream, char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fprintf_00404048)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "apetrunev", "repo_name": "imgalg-opencl", "path": "apetrunev/imgalg-opencl/5f8f2173b98485b892dcf587e704d4a207c7a751d12b786cbddc8385a27ec93a", "path_in_repo": "apetrunev/imgalg-opencl//image", "objdump": "", "code_s": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_00407120)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_00407120)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": true}, {"repo_owner": "lomithrani", "repo_name": "E-protect", "path": "lomithrani/E-protect/791e36c452e9219b4a738d0527015163a146d89c5a0760188c266896adf5be9b", "path_in_repo": "lomithrani/E-protect/SE/ContikiOS/contiki/examples/mb851/temperature/obj_native/collect.o", "objdump": "00000000000016f7 <collect_set_keepalive>:\n    16f7:\t55                   \tpush   %rbp\n    16f8:\t48 89 e5             \tmov    %rsp,%rbp\n    16fb:\t48 83 ec 10          \tsub    $0x10,%rsp\n    16ff:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    1703:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n    1707:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    170b:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    170f:\t48 89 90 90 01 00 00 \tmov    %rdx,0x190(%rax)\n    1716:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    171a:\t48 89 c7             \tmov    %rax,%rdi\n    171d:\te8 47 ff ff ff       \tcall   1669 <set_keepalive_timer>\n    1722:\t90                   \tnop\n    1723:\tc9                   \tleave  \n    1724:\tc3                   \tret    ", "code_s": "void collect_set_keepalive(long param_1, undefined8 <span class=\"supfact\">param_2</span>) {\n  *(undefined8 *)(param_1 + Number) = <span class=\"supfact\">param_2</span>;\n  FUN_00101669(param_1);\n  return;\n}", "code_t": "void collect_set_keepalive(collect_conn *<span class=\"supfact\">c</span>,\n                           clock_time_t period) {\n  clock_time_t period - local;\n  collect_conn *<span class=\"supfact\">c</span> - local;\n  <span class=\"supfact\">c</span>->keepalive_period = period;\n  set_keepalive_timer(<span class=\"supfact\">c</span>);\n  return;\n}", "var": [{"name": "param_2", "type": "collect_conn * *", "pred_name": "c", "ref_name": "c", "ref_type": "collect_conn * *"}], "body_in_train": true}, {"repo_owner": "HusterWan", "repo_name": "qemu-1.7.2-stable", "path": "HusterWan/qemu-1.7.2-stable/2bd63672e1bcd37f4d24115e10c93b19be9085c1bc8c8814e669872a622954b0", "path_in_repo": "HusterWan/qemu-1.7.2-stable//block/qcow2-refcount.o", "objdump": "0000000000001fdb <qcow2_alloc_clusters_at>:\n    1fdb:\t55                   \tpush   %rbp\n    1fdc:\t48 89 e5             \tmov    %rsp,%rbp\n    1fdf:\t48 83 ec 50          \tsub    $0x50,%rsp\n    1fe3:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    1fe7:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n    1feb:\t89 55 bc             \tmov    %edx,-0x44(%rbp)\n    1fee:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    1ff5:\t00 00 \n    1ff7:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1ffb:\t31 c0                \txor    %eax,%eax\n    1ffd:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2001:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n    2005:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    2009:\t83 7d bc 00          \tcmpl   $0x0,-0x44(%rbp)\n    200d:\t79 1f                \tjns    202e <qcow2_alloc_clusters_at+0x53>\n    200f:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 2016 <qcow2_alloc_clusters_at+0x3b>\n    2016:\tba b5 02 00 00       \tmov    $0x2b5,%edx\n    201b:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 2022 <qcow2_alloc_clusters_at+0x47>\n    2022:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 2029 <qcow2_alloc_clusters_at+0x4e>\n    2029:\te8 00 00 00 00       \tcall   202e <qcow2_alloc_clusters_at+0x53>\n    202e:\t83 7d bc 00          \tcmpl   $0x0,-0x44(%rbp)\n    2032:\t75 0a                \tjne    203e <qcow2_alloc_clusters_at+0x63>\n    2034:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2039:\te9 b1 00 00 00       \tjmp    20ef <qcow2_alloc_clusters_at+0x114>\n    203e:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    2042:\t8b 00                \tmov    (%rax),%eax\n    2044:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    2048:\t89 c1                \tmov    %eax,%ecx\n    204a:\t48 d3 ea             \tshr    %cl,%rdx\n    204d:\t48 89 d0             \tmov    %rdx,%rax\n    2050:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    2054:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    205b:\t00 \n    205c:\teb 37                \tjmp    2095 <qcow2_alloc_clusters_at+0xba>\n    205e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    2062:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    2066:\t48 89 55 e0          \tmov    %rdx,-0x20(%rbp)\n    206a:\t48 89 c2             \tmov    %rax,%rdx\n    206d:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2071:\t48 89 d6             \tmov    %rdx,%rsi\n    2074:\t48 89 c7             \tmov    %rax,%rdi\n    2077:\te8 7f e8 ff ff       \tcall   8fb <get_refcount>\n    207c:\t89 45 d8             \tmov    %eax,-0x28(%rbp)\n    207f:\t83 7d d8 00          \tcmpl   $0x0,-0x28(%rbp)\n    2083:\t79 05                \tjns    208a <qcow2_alloc_clusters_at+0xaf>\n    2085:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    2088:\teb 65                \tjmp    20ef <qcow2_alloc_clusters_at+0x114>\n    208a:\t83 7d d8 00          \tcmpl   $0x0,-0x28(%rbp)\n    208e:\t75 12                \tjne    20a2 <qcow2_alloc_clusters_at+0xc7>\n    2090:\t48 83 45 e8 01       \taddq   $0x1,-0x18(%rbp)\n    2095:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    2098:\t48 98                \tcltq   \n    209a:\t48 39 45 e8          \tcmp    %rax,-0x18(%rbp)\n    209e:\t72 be                \tjb     205e <qcow2_alloc_clusters_at+0x83>\n    20a0:\teb 01                \tjmp    20a3 <qcow2_alloc_clusters_at+0xc8>\n    20a2:\t90                   \tnop\n    20a3:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    20a7:\t8b 00                \tmov    (%rax),%eax\n    20a9:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    20ad:\t89 c1                \tmov    %eax,%ecx\n    20af:\t48 d3 e2             \tshl    %cl,%rdx\n    20b2:\t48 89 d0             \tmov    %rdx,%rax\n    20b5:\t48 89 c2             \tmov    %rax,%rdx\n    20b8:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n    20bc:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    20c0:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    20c6:\tb9 01 00 00 00       \tmov    $0x1,%ecx\n    20cb:\t48 89 c7             \tmov    %rax,%rdi\n    20ce:\te8 91 f9 ff ff       \tcall   1a64 <update_refcount>\n    20d3:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n    20d6:\t83 7d dc f5          \tcmpl   $0xfffffff5,-0x24(%rbp)\n    20da:\t0f 84 5e ff ff ff    \tje     203e <qcow2_alloc_clusters_at+0x63>\n    20e0:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n    20e4:\t79 05                \tjns    20eb <qcow2_alloc_clusters_at+0x110>\n    20e6:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    20e9:\teb 04                \tjmp    20ef <qcow2_alloc_clusters_at+0x114>\n    20eb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    20ef:\t48 8b 7d f8          \tmov    -0x8(%rbp),%rdi\n    20f3:\t64 48 33 3c 25 28 00 \txor    %fs:0x28,%rdi\n    20fa:\t00 00 \n    20fc:\t74 05                \tje     2103 <qcow2_alloc_clusters_at+0x128>\n    20fe:\te8 00 00 00 00       \tcall   2103 <qcow2_alloc_clusters_at+0x128>\n    2103:\tc9                   \tleave  \n    2104:\tc3                   \tret    ", "code_s": "ulong qcow2_alloc_clusters_at(long param_1, ulong <span class=\"supfact\">param_2</span>,\n                              int <span class=\"supfact\">param_3</span>) {\n  long lVar1;\n  undefined4 *puVar2;\n  uint uVar3;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  ulong <span class=\"supfact\">local_28</span>;\n  ulong <span class=\"supfact\">local_20</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  puVar2 = *(undefined4 **)(param_1 + Number);\n  if (<span class=\"supfact\">param_3</span> < Number) {\n    __assert_fail(String, String, Number, String);\n  }\n  if (<span class=\"supfact\">param_3</span> == Number) {\n    <span class=\"supfact\">local_20</span> = Number;\n  } else {\n    do {\n      <span class=\"supfact\">local_28</span> =\n          <span class=\"supfact\">param_2</span> >> ((byte)*puVar2 & Number);\n      for (<span class=\"supfact\">local_20</span> = Number;\n           <span class=\"supfact\">local_20</span> < (ulong)(long)<span class=\"supfact\">param_3</span>;\n           <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_20</span> + Number) {\n        uVar3 = FUN_001008fb(param_1, <span class=\"supfact\">local_28</span>);\n        if ((int)uVar3 < Number) {\n          <span class=\"supfact\">local_20</span> = (ulong)uVar3;\n          goto LAB_001020ef;\n        }\n        if (uVar3 != Number)\n          break;\n        <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_28</span> + Number;\n      }\n      uVar3 = FUN_00101a64(param_1, <span class=\"supfact\">param_2</span>,\n                           <span class=\"supfact\">local_20</span> << ((byte)*puVar2 & Number),\n                           Number, Number);\n    } while (uVar3 == Number);\n    if ((int)uVar3 < Number) {\n      <span class=\"supfact\">local_20</span> = (ulong)uVar3;\n    }\n  }\nLAB_001020ef:\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">local_20</span>;\n  }\n  __stack_chk_fail();\n}", "code_t": "int qcow2_alloc_clusters_at(BlockDriverState *bs,\n                            uint64_t <span class=\"supfact\">offset</span>,\n                            int <span class=\"supfact\">nb_clusters</span>) {\n  long lVar1;\n  undefined4 *puVar2;\n  int iVar3;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">nb_clusters</span> - local;\n  uint64_t <span class=\"supfact\">offset</span> - local;\n  BlockDriverState *bs - local;\n  int refcount;\n  int ret;\n  uint64_t <span class=\"supfact\">cluster_index</span>;\n  uint64_t <span class=\"supfact\">i</span>;\n  BDRVQcowState *s;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  puVar2 = (undefined4 *)bs->opaque;\n  if (<span class=\"supfact\">nb_clusters</span> < Number) {\n    __assert_fail(String, String, Number, String);\n  }\n  if (<span class=\"supfact\">nb_clusters</span> == Number) {\n    iVar3 = Number;\n  } else {\n    do {\n      <span class=\"supfact\">cluster_index</span> =\n          <span class=\"supfact\">offset</span> >> ((byte)*puVar2 & Number);\n      for (<span class=\"supfact\">i</span> = Number;\n           <span class=\"supfact\">i</span> < (ulong)(long)<span class=\"supfact\">nb_clusters</span>;\n           <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n        iVar3 = get_refcount(bs, <span class=\"supfact\">cluster_index</span>);\n        if (iVar3 < Number)\n          goto LAB_001020ef;\n        if (iVar3 != Number)\n          break;\n        <span class=\"supfact\">cluster_index</span> = <span class=\"supfact\">cluster_index</span> + Number;\n      }\n      iVar3 = update_refcount(bs, <span class=\"supfact\">offset</span>,\n                              <span class=\"supfact\">i</span> << ((byte)*puVar2 & Number),\n                              Number, QCOW2_DISCARD_NEVER);\n    } while (iVar3 == -Number);\n    if (-Number < iVar3) {\n      iVar3 = (int)<span class=\"supfact\">i</span>;\n    }\n  }\nLAB_001020ef:\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return iVar3;\n  }\n  __stack_chk_fail();\n}", "var": [{"name": "param_2", "type": "uint64_t", "pred_name": "start", "ref_name": "offset", "ref_type": "uint64_t"}, {"name": "param_3", "type": "int", "pred_name": "end", "ref_name": "nb_clusters", "ref_type": "int"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_28", "type": "uint64_t", "pred_name": "start-local", "ref_name": "cluster_index", "ref_type": "uint64_t"}, {"name": "local_20", "type": "long", "pred_name": "local_20", "ref_name": "i", "ref_type": "uint64_t"}], "body_in_train": false}, {"repo_owner": "kmurray", "repo_name": "ECE1387_CAD", "path": "kmurray/ECE1387_CAD/0fccdd23196d5d801a4d7fb5e0f1f757ff950a8ba2c05eb1f9a60af9fe077d7c", "path_in_repo": "kmurray/ECE1387_CAD/assignment2/SRC/libs/UMFPACK/Lib/umf_zi_extend_front.o", "objdump": "00000000000001e4 <umfzi_extend_front>:\n 1e4:\t55                   \tpush   %rbp\n 1e5:\t48 89 e5             \tmov    %rsp,%rbp\n 1e8:\t48 81 ec c0 00 00 00 \tsub    $0xc0,%rsp\n 1ef:\t48 89 bd 48 ff ff ff \tmov    %rdi,-0xb8(%rbp)\n 1f6:\t48 89 b5 40 ff ff ff \tmov    %rsi,-0xc0(%rbp)\n 1fd:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 204:\t8b 80 80 05 00 00    \tmov    0x580(%rax),%eax\n 20a:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n 20d:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 214:\t8b 80 04 03 00 00    \tmov    0x304(%rax),%eax\n 21a:\t85 c0                \ttest   %eax,%eax\n 21c:\t0f 84 90 00 00 00    \tje     2b2 <umfzi_extend_front+0xce>\n 222:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 229:\t8b 80 90 05 00 00    \tmov    0x590(%rax),%eax\n 22f:\tf2 0f 2a c8          \tcvtsi2sd %eax,%xmm1\n 233:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # 23b <umfzi_extend_front+0x57>\n 23a:\t00 \n 23b:\tf2 0f 59 c8          \tmulsd  %xmm0,%xmm1\n 23f:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # 247 <umfzi_extend_front+0x63>\n 246:\t00 \n 247:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n 24b:\tf2 0f 2c c0          \tcvttsd2si %xmm0,%eax\n 24f:\t89 45 d8             \tmov    %eax,-0x28(%rbp)\n 252:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 259:\t8b 80 94 05 00 00    \tmov    0x594(%rax),%eax\n 25f:\tf2 0f 2a c8          \tcvtsi2sd %eax,%xmm1\n 263:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # 26b <umfzi_extend_front+0x87>\n 26a:\t00 \n 26b:\tf2 0f 59 c8          \tmulsd  %xmm0,%xmm1\n 26f:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # 277 <umfzi_extend_front+0x93>\n 276:\t00 \n 277:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n 27b:\tf2 0f 2c c0          \tcvttsd2si %xmm0,%eax\n 27f:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n 282:\t48 8b 8d 40 ff ff ff \tmov    -0xc0(%rbp),%rcx\n 289:\t8b 55 d4             \tmov    -0x2c(%rbp),%edx\n 28c:\t8b 75 d8             \tmov    -0x28(%rbp),%esi\n 28f:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n 296:\t41 b8 01 00 00 00    \tmov    $0x1,%r8d\n 29c:\t48 89 c7             \tmov    %rax,%rdi\n 29f:\te8 00 00 00 00       \tcall   2a4 <umfzi_extend_front+0xc0>\n 2a4:\t85 c0                \ttest   %eax,%eax\n 2a6:\t75 0a                \tjne    2b2 <umfzi_extend_front+0xce>\n 2a8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 2ad:\te9 a5 05 00 00       \tjmp    857 <umfzi_extend_front+0x673>\n 2b2:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 2b9:\t8b 80 68 05 00 00    \tmov    0x568(%rax),%eax\n 2bf:\t89 45 d0             \tmov    %eax,-0x30(%rbp)\n 2c2:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 2c9:\t8b 80 6c 05 00 00    \tmov    0x56c(%rax),%eax\n 2cf:\t89 45 cc             \tmov    %eax,-0x34(%rbp)\n 2d2:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 2d9:\t48 8b 80 40 05 00 00 \tmov    0x540(%rax),%rax\n 2e0:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n 2e4:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 2eb:\t48 8b 80 50 05 00 00 \tmov    0x550(%rax),%rax\n 2f2:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n 2f6:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 2fd:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n 304:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n 308:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 30f:\t48 8b 80 58 05 00 00 \tmov    0x558(%rax),%rax\n 316:\t48 89 45 a8          \tmov    %rax,-0x58(%rbp)\n 31a:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 321:\t8b 80 60 05 00 00    \tmov    0x560(%rax),%eax\n 327:\t89 45 a4             \tmov    %eax,-0x5c(%rbp)\n 32a:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 331:\t8b 80 64 05 00 00    \tmov    0x564(%rax),%eax\n 337:\t89 45 a0             \tmov    %eax,-0x60(%rbp)\n 33a:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 341:\t8b 80 bc 00 00 00    \tmov    0xbc(%rax),%eax\n 347:\t89 45 9c             \tmov    %eax,-0x64(%rbp)\n 34a:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 351:\t8b 80 c0 00 00 00    \tmov    0xc0(%rax),%eax\n 357:\t89 45 98             \tmov    %eax,-0x68(%rbp)\n 35a:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 361:\t8b 55 a0             \tmov    -0x60(%rbp),%edx\n 364:\t89 90 8c 05 00 00    \tmov    %edx,0x58c(%rax)\n 36a:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 371:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n 375:\t48 89 50 58          \tmov    %rdx,0x58(%rax)\n 379:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 380:\t8b 55 a4             \tmov    -0x5c(%rbp),%edx\n 383:\t89 90 88 05 00 00    \tmov    %edx,0x588(%rax)\n 389:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 390:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n 394:\t48 89 50 50          \tmov    %rdx,0x50(%rax)\n 398:\t8b 45 a4             \tmov    -0x5c(%rbp),%eax\n 39b:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n 39e:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n 3a1:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n 3a4:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 3ab:\t48 8b 90 28 05 00 00 \tmov    0x528(%rax),%rdx\n 3b2:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n 3b5:\t0f af 45 d0          \timul   -0x30(%rbp),%eax\n 3b9:\t48 98                \tcltq   \n 3bb:\t48 c1 e0 04          \tshl    $0x4,%rax\n 3bf:\t48 01 d0             \tadd    %rdx,%rax\n 3c2:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n 3c6:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 3cd:\t8b 80 9c 05 00 00    \tmov    0x59c(%rax),%eax\n 3d3:\t85 c0                \ttest   %eax,%eax\n 3d5:\t74 6a                \tje     441 <umfzi_extend_front+0x25d>\n 3d7:\t8b 45 98             \tmov    -0x68(%rbp),%eax\n 3da:\t01 45 f4             \tadd    %eax,-0xc(%rbp)\n 3dd:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 3e4:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n 3e8:\t48 89 85 68 ff ff ff \tmov    %rax,-0x98(%rbp)\n 3ef:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n 3f6:\teb 3c                \tjmp    434 <umfzi_extend_front+0x250>\n 3f8:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 3fb:\t48 98                \tcltq   \n 3fd:\t48 c1 e0 04          \tshl    $0x4,%rax\n 401:\t48 89 c2             \tmov    %rax,%rdx\n 404:\t48 8b 85 68 ff ff ff \tmov    -0x98(%rbp),%rax\n 40b:\t48 01 d0             \tadd    %rdx,%rax\n 40e:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n 411:\t48 63 d2             \tmovslq %edx,%rdx\n 414:\t48 89 d1             \tmov    %rdx,%rcx\n 417:\t48 c1 e1 04          \tshl    $0x4,%rcx\n 41b:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n 41f:\t48 01 d1             \tadd    %rdx,%rcx\n 422:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 426:\t48 8b 00             \tmov    (%rax),%rax\n 429:\t48 89 01             \tmov    %rax,(%rcx)\n 42c:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n 430:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n 434:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 437:\t3b 45 f4             \tcmp    -0xc(%rbp),%eax\n 43a:\t7c bc                \tjl     3f8 <umfzi_extend_front+0x214>\n 43c:\te9 99 01 00 00       \tjmp    5da <umfzi_extend_front+0x3f6>\n 441:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 448:\t48 8b 90 20 05 00 00 \tmov    0x520(%rax),%rdx\n 44f:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 456:\t8b 80 7c 05 00 00    \tmov    0x57c(%rax),%eax\n 45c:\t0f af 45 dc          \timul   -0x24(%rbp),%eax\n 460:\t48 98                \tcltq   \n 462:\t48 c1 e0 04          \tshl    $0x4,%rax\n 466:\t48 01 d0             \tadd    %rdx,%rax\n 469:\t48 89 45 88          \tmov    %rax,-0x78(%rbp)\n 46d:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 474:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n 478:\t48 89 45 80          \tmov    %rax,-0x80(%rbp)\n 47c:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 483:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n 487:\t48 89 85 78 ff ff ff \tmov    %rax,-0x88(%rbp)\n 48e:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n 492:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 496:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n 49d:\teb 22                \tjmp    4c1 <umfzi_extend_front+0x2dd>\n 49f:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 4a3:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n 4a7:\tf2 0f 11 00          \tmovsd  %xmm0,(%rax)\n 4ab:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 4af:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n 4b3:\tf2 0f 11 40 08       \tmovsd  %xmm0,0x8(%rax)\n 4b8:\t48 83 45 e0 10       \taddq   $0x10,-0x20(%rbp)\n 4bd:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n 4c1:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 4c4:\t3b 45 dc             \tcmp    -0x24(%rbp),%eax\n 4c7:\t7c d6                \tjl     49f <umfzi_extend_front+0x2bb>\n 4c9:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n 4cd:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n 4d1:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n 4d8:\teb 22                \tjmp    4fc <umfzi_extend_front+0x318>\n 4da:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 4de:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n 4e2:\tf2 0f 11 00          \tmovsd  %xmm0,(%rax)\n 4e6:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n 4ea:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n 4ee:\tf2 0f 11 40 08       \tmovsd  %xmm0,0x8(%rax)\n 4f3:\t48 83 45 e0 10       \taddq   $0x10,-0x20(%rbp)\n 4f8:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n 4fc:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 4ff:\t3b 45 a4             \tcmp    -0x5c(%rbp),%eax\n 502:\t7c d6                \tjl     4da <umfzi_extend_front+0x2f6>\n 504:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n 50b:\te9 be 00 00 00       \tjmp    5ce <umfzi_extend_front+0x3ea>\n 510:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 513:\t48 98                \tcltq   \n 515:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 51c:\t00 \n 51d:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n 521:\t48 01 d0             \tadd    %rdx,%rax\n 524:\t8b 00                \tmov    (%rax),%eax\n 526:\t89 85 74 ff ff ff    \tmov    %eax,-0x8c(%rbp)\n 52c:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 532:\t48 98                \tcltq   \n 534:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 53b:\t00 \n 53c:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 540:\t48 01 d0             \tadd    %rdx,%rax\n 543:\t8b 00                \tmov    (%rax),%eax\n 545:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n 548:\t83 7d ec 00          \tcmpl   $0x0,-0x14(%rbp)\n 54c:\t79 44                \tjns    592 <umfzi_extend_front+0x3ae>\n 54e:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n 551:\t8d 50 01             \tlea    0x1(%rax),%edx\n 554:\t89 55 f4             \tmov    %edx,-0xc(%rbp)\n 557:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n 55a:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 55d:\t48 98                \tcltq   \n 55f:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 566:\t00 \n 567:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 56b:\t48 01 c2             \tadd    %rax,%rdx\n 56e:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 574:\t89 02                \tmov    %eax,(%rdx)\n 576:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 57c:\t48 98                \tcltq   \n 57e:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 585:\t00 \n 586:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n 58a:\t48 01 c2             \tadd    %rax,%rdx\n 58d:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 590:\t89 02                \tmov    %eax,(%rdx)\n 592:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 595:\t48 98                \tcltq   \n 597:\t48 c1 e0 04          \tshl    $0x4,%rax\n 59b:\t48 89 c2             \tmov    %rax,%rdx\n 59e:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n 5a5:\t48 01 d0             \tadd    %rdx,%rax\n 5a8:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n 5ab:\t48 63 d2             \tmovslq %edx,%rdx\n 5ae:\t48 89 d1             \tmov    %rdx,%rcx\n 5b1:\t48 c1 e1 04          \tshl    $0x4,%rcx\n 5b5:\t48 8b 55 90          \tmov    -0x70(%rbp),%rdx\n 5b9:\t48 01 d1             \tadd    %rdx,%rcx\n 5bc:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 5c0:\t48 8b 00             \tmov    (%rax),%rax\n 5c3:\t48 89 01             \tmov    %rax,(%rcx)\n 5c6:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n 5ca:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n 5ce:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 5d1:\t3b 45 98             \tcmp    -0x68(%rbp),%eax\n 5d4:\t0f 8c 36 ff ff ff    \tjl     510 <umfzi_extend_front+0x32c>\n 5da:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 5e1:\t8b 80 98 05 00 00    \tmov    0x598(%rax),%eax\n 5e7:\t85 c0                \ttest   %eax,%eax\n 5e9:\t0f 84 48 01 00 00    \tje     737 <umfzi_extend_front+0x553>\n 5ef:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 5f6:\t8b 80 9c 05 00 00    \tmov    0x59c(%rax),%eax\n 5fc:\t85 c0                \ttest   %eax,%eax\n 5fe:\t74 49                \tje     649 <umfzi_extend_front+0x465>\n 600:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n 603:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 606:\teb 34                \tjmp    63c <umfzi_extend_front+0x458>\n 608:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 60b:\t48 98                \tcltq   \n 60d:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 614:\t00 \n 615:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 619:\t48 01 d0             \tadd    %rdx,%rax\n 61c:\t8b 00                \tmov    (%rax),%eax\n 61e:\t48 98                \tcltq   \n 620:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 627:\t00 \n 628:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 62c:\t48 01 c2             \tadd    %rax,%rdx\n 62f:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 632:\t0f af 45 d0          \timul   -0x30(%rbp),%eax\n 636:\t89 02                \tmov    %eax,(%rdx)\n 638:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 63c:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 63f:\t3b 45 9c             \tcmp    -0x64(%rbp),%eax\n 642:\t7c c4                \tjl     608 <umfzi_extend_front+0x424>\n 644:\te9 e3 00 00 00       \tjmp    72c <umfzi_extend_front+0x548>\n 649:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 650:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n 654:\t48 89 85 60 ff ff ff \tmov    %rax,-0xa0(%rbp)\n 65b:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n 662:\t48 3b 45 b0          \tcmp    -0x50(%rbp),%rax\n 666:\t75 55                \tjne    6bd <umfzi_extend_front+0x4d9>\n 668:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n 66b:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 66e:\teb 43                \tjmp    6b3 <umfzi_extend_front+0x4cf>\n 670:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 673:\t48 98                \tcltq   \n 675:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 67c:\t00 \n 67d:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n 684:\t48 01 d0             \tadd    %rdx,%rax\n 687:\t8b 00                \tmov    (%rax),%eax\n 689:\t89 85 5c ff ff ff    \tmov    %eax,-0xa4(%rbp)\n 68f:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n 695:\t48 98                \tcltq   \n 697:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 69e:\t00 \n 69f:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 6a3:\t48 01 c2             \tadd    %rax,%rdx\n 6a6:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 6a9:\t0f af 45 d0          \timul   -0x30(%rbp),%eax\n 6ad:\t89 02                \tmov    %eax,(%rdx)\n 6af:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 6b3:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 6b6:\t3b 45 9c             \tcmp    -0x64(%rbp),%eax\n 6b9:\t7c b5                \tjl     670 <umfzi_extend_front+0x48c>\n 6bb:\teb 6f                \tjmp    72c <umfzi_extend_front+0x548>\n 6bd:\t8b 45 a0             \tmov    -0x60(%rbp),%eax\n 6c0:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 6c3:\teb 5f                \tjmp    724 <umfzi_extend_front+0x540>\n 6c5:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 6c8:\t48 98                \tcltq   \n 6ca:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 6d1:\t00 \n 6d2:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n 6d9:\t48 01 d0             \tadd    %rdx,%rax\n 6dc:\t8b 00                \tmov    (%rax),%eax\n 6de:\t89 85 5c ff ff ff    \tmov    %eax,-0xa4(%rbp)\n 6e4:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 6e7:\t48 98                \tcltq   \n 6e9:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 6f0:\t00 \n 6f1:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 6f5:\t48 01 c2             \tadd    %rax,%rdx\n 6f8:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n 6fe:\t89 02                \tmov    %eax,(%rdx)\n 700:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n 706:\t48 98                \tcltq   \n 708:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 70f:\t00 \n 710:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 714:\t48 01 c2             \tadd    %rax,%rdx\n 717:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 71a:\t0f af 45 d0          \timul   -0x30(%rbp),%eax\n 71e:\t89 02                \tmov    %eax,(%rdx)\n 720:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 724:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 727:\t3b 45 9c             \tcmp    -0x64(%rbp),%eax\n 72a:\t7c 99                \tjl     6c5 <umfzi_extend_front+0x4e1>\n 72c:\t8b 45 9c             \tmov    -0x64(%rbp),%eax\n 72f:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n 732:\te9 aa 00 00 00       \tjmp    7e1 <umfzi_extend_front+0x5fd>\n 737:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 73e:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n 742:\t48 89 85 60 ff ff ff \tmov    %rax,-0xa0(%rbp)\n 749:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n 750:\te9 80 00 00 00       \tjmp    7d5 <umfzi_extend_front+0x5f1>\n 755:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 758:\t48 98                \tcltq   \n 75a:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 761:\t00 \n 762:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n 769:\t48 01 d0             \tadd    %rdx,%rax\n 76c:\t8b 00                \tmov    (%rax),%eax\n 76e:\t89 85 5c ff ff ff    \tmov    %eax,-0xa4(%rbp)\n 774:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n 77a:\t48 98                \tcltq   \n 77c:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 783:\t00 \n 784:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 788:\t48 01 d0             \tadd    %rdx,%rax\n 78b:\t8b 00                \tmov    (%rax),%eax\n 78d:\t85 c0                \ttest   %eax,%eax\n 78f:\t79 40                \tjns    7d1 <umfzi_extend_front+0x5ed>\n 791:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n 794:\t48 98                \tcltq   \n 796:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 79d:\t00 \n 79e:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n 7a2:\t48 01 c2             \tadd    %rax,%rdx\n 7a5:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n 7ab:\t89 02                \tmov    %eax,(%rdx)\n 7ad:\t8b 85 5c ff ff ff    \tmov    -0xa4(%rbp),%eax\n 7b3:\t48 98                \tcltq   \n 7b5:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n 7bc:\t00 \n 7bd:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n 7c1:\t48 01 c2             \tadd    %rax,%rdx\n 7c4:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n 7c7:\t0f af 45 d0          \timul   -0x30(%rbp),%eax\n 7cb:\t89 02                \tmov    %eax,(%rdx)\n 7cd:\t83 45 f0 01          \taddl   $0x1,-0x10(%rbp)\n 7d1:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 7d5:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 7d8:\t3b 45 9c             \tcmp    -0x64(%rbp),%eax\n 7db:\t0f 8c 74 ff ff ff    \tjl     755 <umfzi_extend_front+0x571>\n 7e1:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 7e8:\t48 8b 90 38 05 00 00 \tmov    0x538(%rax),%rdx\n 7ef:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 7f6:\t48 8b b0 30 05 00 00 \tmov    0x530(%rax),%rsi\n 7fd:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 804:\t48 8b 80 28 05 00 00 \tmov    0x528(%rax),%rax\n 80b:\t44 8b 4d d0          \tmov    -0x30(%rbp),%r9d\n 80f:\t44 8b 45 a0          \tmov    -0x60(%rbp),%r8d\n 813:\t8b 4d a4             \tmov    -0x5c(%rbp),%ecx\n 816:\t8b 7d f0             \tmov    -0x10(%rbp),%edi\n 819:\t57                   \tpush   %rdi\n 81a:\t8b 7d f4             \tmov    -0xc(%rbp),%edi\n 81d:\t57                   \tpush   %rdi\n 81e:\t8b 7d dc             \tmov    -0x24(%rbp),%edi\n 821:\t57                   \tpush   %rdi\n 822:\t8b 7d cc             \tmov    -0x34(%rbp),%edi\n 825:\t57                   \tpush   %rdi\n 826:\t48 89 c7             \tmov    %rax,%rdi\n 829:\te8 d2 f7 ff ff       \tcall   0 <zero_front>\n 82e:\t48 83 c4 20          \tadd    $0x20,%rsp\n 832:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 839:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n 83c:\t89 90 60 05 00 00    \tmov    %edx,0x560(%rax)\n 842:\t48 8b 85 40 ff ff ff \tmov    -0xc0(%rbp),%rax\n 849:\t8b 55 f0             \tmov    -0x10(%rbp),%edx\n 84c:\t89 90 64 05 00 00    \tmov    %edx,0x564(%rax)\n 852:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 857:\tc9                   \tleave  \n 858:\tc3                   \tret    \n", "code_s": "undefined8 umfzi_extend_front(undefined8 param_1,\n                              long <span class=\"supfact\">param_2</span>) {\n  int iVar1;\n  undefined4 uVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  long lVar8;\n  long lVar9;\n  long lVar10;\n  long lVar11;\n  long lVar12;\n  long lVar13;\n  int iVar14;\n  undefined8 uVar15;\n  undefined8 *puVar16;\n  undefined8 *puVar17;\n  undefined8 *<span class=\"supfact\">local_28</span>;\n  int <span class=\"supfact\">local_1c</span>;\n  int <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_14</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  iVar1 = *(int *)(<span class=\"supfact\">param_2</span> + Number);\n  if ((*(int *)(<span class=\"supfact\">param_2</span> + Number) == Number) ||\n      (iVar14 = umfzi_grow_front(\n           param_1,\n           (int)(DAT_00100868 +\n                 (double)*(int *)(<span class=\"supfact\">param_2</span> + Number) *\n                     DAT_00100860),\n           (int)(DAT_00100868 +\n                 (double)*(int *)(<span class=\"supfact\">param_2</span> + Number) *\n                     DAT_00100860),\n           <span class=\"supfact\">param_2</span>, Number),\n       iVar14 != Number)) {\n    iVar14 = *(int *)(<span class=\"supfact\">param_2</span> + Number);\n    uVar2 = *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number);\n    lVar8 = *(long *)(<span class=\"supfact\">param_2</span> + Number);\n    lVar9 = *(long *)(<span class=\"supfact\">param_2</span> + Number);\n    lVar10 = *(long *)(<span class=\"supfact\">param_2</span> + Number);\n    lVar11 = *(long *)(<span class=\"supfact\">param_2</span> + Number);\n    iVar3 = *(int *)(<span class=\"supfact\">param_2</span> + Number);\n    iVar4 = *(int *)(<span class=\"supfact\">param_2</span> + Number);\n    iVar5 = *(int *)(<span class=\"supfact\">param_2</span> + Number);\n    iVar6 = *(int *)(<span class=\"supfact\">param_2</span> + Number);\n    *(int *)(<span class=\"supfact\">param_2</span> + Number) = iVar4;\n    *(long *)(<span class=\"supfact\">param_2</span> + Number) = lVar10;\n    *(int *)(<span class=\"supfact\">param_2</span> + Number) = iVar3;\n    *(long *)(<span class=\"supfact\">param_2</span> + Number) = lVar8;\n    puVar16 = (undefined8 *)((long)(iVar1 * iVar14) * Number +\n                             *(long *)(<span class=\"supfact\">param_2</span> + Number));\n    if (*(int *)(<span class=\"supfact\">param_2</span> + Number) == Number) {\n      <span class=\"supfact\">local_28</span> =\n          (undefined8 *)((long)(*(int *)(<span class=\"supfact\">param_2</span> + Number) *\n                                iVar1) *\n                             Number +\n                         *(long *)(<span class=\"supfact\">param_2</span> + Number));\n      lVar12 = *(long *)(<span class=\"supfact\">param_2</span> + Number);\n      lVar13 = *(long *)(<span class=\"supfact\">param_2</span> + Number);\n      for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> < iVar1;\n           <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n        *<span class=\"supfact\">local_28</span> = Number;\n        <span class=\"supfact\">local_28</span>[Number] = Number;\n        <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_28</span> + Number;\n      }\n      <span class=\"supfact\">local_28</span> = puVar16;\n      for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> < iVar3;\n           <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n        *<span class=\"supfact\">local_28</span> = Number;\n        <span class=\"supfact\">local_28</span>[Number] = Number;\n        <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_28</span> + Number;\n      }\n      <span class=\"supfact\">local_14</span> = iVar3;\n      for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> < iVar6;\n           <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n        iVar7 = *(int *)(lVar12 + (long)<span class=\"supfact\">local_10</span> * Number);\n        <span class=\"supfact\">local_1c</span> = *(int *)(lVar9 + (long)iVar7 * Number);\n        if (<span class=\"supfact\">local_1c</span> < Number) {\n          <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_14</span>;\n          *(int *)((long)<span class=\"supfact\">local_14</span> * Number + lVar8) = iVar7;\n          *(int *)((long)iVar7 * Number + lVar9) = <span class=\"supfact\">local_14</span>;\n          <span class=\"supfact\">local_14</span> = <span class=\"supfact\">local_14</span> + Number;\n        }\n        puVar17 =\n            (undefined8 *)(lVar13 + (long)<span class=\"supfact\">local_10</span> * Number);\n        uVar15 = puVar17[Number];\n        puVar16[(long)<span class=\"supfact\">local_1c</span> * Number] = *puVar17;\n        (puVar16 + (long)<span class=\"supfact\">local_1c</span> * Number)[Number] = uVar15;\n      }\n    } else {\n      <span class=\"supfact\">local_14</span> = iVar3 + iVar6;\n      lVar8 = *(long *)(<span class=\"supfact\">param_2</span> + Number);\n      for (<span class=\"supfact\">local_10</span> = Number;\n           <span class=\"supfact\">local_10</span> < <span class=\"supfact\">local_14</span>;\n           <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n        puVar17 =\n            (undefined8 *)(lVar8 + (long)<span class=\"supfact\">local_10</span> * Number);\n        uVar15 = puVar17[Number];\n        puVar16[(long)<span class=\"supfact\">local_10</span> * Number] = *puVar17;\n        (puVar16 + (long)<span class=\"supfact\">local_10</span> * Number)[Number] = uVar15;\n      }\n    }\n    if (*(int *)(<span class=\"supfact\">param_2</span> + Number) == Number) {\n      lVar8 = *(long *)(<span class=\"supfact\">param_2</span> + Number);\n      <span class=\"supfact\">local_18</span> = iVar4;\n      for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < iVar5;\n           <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n        iVar6 = *(int *)(lVar8 + (long)<span class=\"supfact\">local_c</span> * Number);\n        if (*(int *)(lVar11 + (long)iVar6 * Number) < Number) {\n          *(int *)((long)<span class=\"supfact\">local_18</span> * Number + lVar10) = iVar6;\n          *(int *)((long)iVar6 * Number + lVar11) =\n              <span class=\"supfact\">local_18</span> * iVar14;\n          <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> + Number;\n        }\n      }\n    } else {\n      <span class=\"supfact\">local_c</span> = iVar4;\n      <span class=\"supfact\">local_18</span> = iVar5;\n      if (*(int *)(<span class=\"supfact\">param_2</span> + Number) == Number) {\n        lVar8 = *(long *)(<span class=\"supfact\">param_2</span> + Number);\n        if (lVar8 == lVar10) {\n          for (; <span class=\"supfact\">local_c</span> < iVar5;\n               <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n            *(int *)((long)*(int *)(lVar8 +\n                                    (long)<span class=\"supfact\">local_c</span> * Number) *\n                         Number +\n                     lVar11) = <span class=\"supfact\">local_c</span> * iVar14;\n          }\n        } else {\n          for (; <span class=\"supfact\">local_c</span> < iVar5;\n               <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n            iVar6 = *(int *)(lVar8 + (long)<span class=\"supfact\">local_c</span> * Number);\n            *(int *)((long)<span class=\"supfact\">local_c</span> * Number + lVar10) = iVar6;\n            *(int *)((long)iVar6 * Number + lVar11) =\n                <span class=\"supfact\">local_c</span> * iVar14;\n          }\n        }\n      } else {\n        for (; <span class=\"supfact\">local_c</span> < iVar5;\n             <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n          *(int *)((long)*(int *)(lVar10 +\n                                  (long)<span class=\"supfact\">local_c</span> * Number) *\n                       Number +\n                   lVar11) = <span class=\"supfact\">local_c</span> * iVar14;\n        }\n      }\n    }\n    FUN_00100000(*(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n                 *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n                 *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number), iVar3,\n                 iVar4, iVar14, uVar2, iVar1, <span class=\"supfact\">local_14</span>,\n                 <span class=\"supfact\">local_18</span>);\n    *(int *)(<span class=\"supfact\">param_2</span> + Number) = <span class=\"supfact\">local_14</span>;\n    *(int *)(<span class=\"supfact\">param_2</span> + Number) = <span class=\"supfact\">local_18</span>;\n    uVar15 = Number;\n  } else {\n    uVar15 = Number;\n  }\n  return uVar15;\n}", "code_t": "int umfzi_extend_front(NumericType *Numeric, WorkType *<span class=\"supfact\">Work</span>) {\n  int fnc_curr_00;\n  int fnrows_00;\n  int fncols_00;\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  int *piVar5;\n  int *piVar6;\n  int *piVar7;\n  DoubleComplex *pDVar8;\n  double dVar9;\n  int *piVar10;\n  int iVar11;\n  int iVar12;\n  DoubleComplex *pDVar13;\n  WorkType *<span class=\"supfact\">Work</span> - local;\n  NumericType *Numeric - local;\n  int col;\n  int *Wrow;\n  DoubleComplex *Wy;\n  int row;\n  DoubleComplex *Wx;\n  int *Wm;\n  DoubleComplex *Fu;\n  DoubleComplex *Fl;\n  int ccdeg;\n  int rrdeg;\n  int fncols;\n  int fnrows;\n  int *Fcpos;\n  int *Fcols;\n  int *Frpos;\n  int *Frows;\n  int fnc_curr;\n  int fnr_curr;\n  int fnc2;\n  int fnr2;\n  int fnpiv;\n  DoubleComplex *<span class=\"supfact\">F</span>;\n  int <span class=\"supfact\">pos</span>;\n  int <span class=\"supfact\">fncols_extended</span>;\n  int <span class=\"supfact\">fnrows_extended</span>;\n  int <span class=\"supfact\">i</span>;\n  int <span class=\"supfact\">j</span>;\n  iVar12 = <span class=\"supfact\">Work</span>->fnpiv;\n  if ((<span class=\"supfact\">Work</span>->do_grow == Number) ||\n      (iVar11 = umfzi_grow_front(\n           Numeric,\n           (int)(DAT_00100868 +\n                 (double)<span class=\"supfact\">Work</span>->fnrows_new * DAT_00100860),\n           (int)(DAT_00100868 +\n                 (double)<span class=\"supfact\">Work</span>->fncols_new * DAT_00100860),\n           <span class=\"supfact\">Work</span>, Number),\n       iVar11 != Number)) {\n    iVar11 = <span class=\"supfact\">Work</span>->fnr_curr;\n    fnc_curr_00 = <span class=\"supfact\">Work</span>->fnc_curr;\n    piVar4 = <span class=\"supfact\">Work</span>->Frows;\n    piVar5 = <span class=\"supfact\">Work</span>->Frpos;\n    piVar6 = <span class=\"supfact\">Work</span>->Fcols;\n    piVar7 = <span class=\"supfact\">Work</span>->Fcpos;\n    fnrows_00 = <span class=\"supfact\">Work</span>->fnrows;\n    fncols_00 = <span class=\"supfact\">Work</span>->fncols;\n    iVar1 = <span class=\"supfact\">Work</span>->rrdeg;\n    iVar2 = <span class=\"supfact\">Work</span>->ccdeg;\n    <span class=\"supfact\">Work</span>->fscan_col = fncols_00;\n    <span class=\"supfact\">Work</span>->NewCols = piVar6;\n    <span class=\"supfact\">Work</span>->fscan_row = fnrows_00;\n    <span class=\"supfact\">Work</span>->NewRows = piVar4;\n    pDVar13 = <span class=\"supfact\">Work</span>->Flblock + iVar12 * iVar11;\n    if (<span class=\"supfact\">Work</span>->pivcol_in_front == Number) {\n      <span class=\"supfact\">F</span> =\n          <span class=\"supfact\">Work</span>->Flublock + <span class=\"supfact\">Work</span>->nb * iVar12;\n      piVar10 = <span class=\"supfact\">Work</span>->Wm;\n      pDVar8 = <span class=\"supfact\">Work</span>->Wx;\n      for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < iVar12;\n           <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n        <span class=\"supfact\">F</span>->component[Number] = Number;\n        <span class=\"supfact\">F</span>->component[Number] = Number;\n        <span class=\"supfact\">F</span> = <span class=\"supfact\">F</span> + Number;\n      }\n      <span class=\"supfact\">F</span> = pDVar13;\n      for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < fnrows_00;\n           <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n        <span class=\"supfact\">F</span>->component[Number] = Number;\n        <span class=\"supfact\">F</span>->component[Number] = Number;\n        <span class=\"supfact\">F</span> = <span class=\"supfact\">F</span> + Number;\n      }\n      <span class=\"supfact\">fnrows_extended</span> = fnrows_00;\n      for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < iVar2;\n           <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n        iVar3 = piVar10[<span class=\"supfact\">i</span>];\n        <span class=\"supfact\">pos</span> = piVar5[iVar3];\n        if (<span class=\"supfact\">pos</span> < Number) {\n          <span class=\"supfact\">pos</span> = <span class=\"supfact\">fnrows_extended</span>;\n          piVar4[<span class=\"supfact\">fnrows_extended</span>] = iVar3;\n          piVar5[iVar3] = <span class=\"supfact\">fnrows_extended</span>;\n          <span class=\"supfact\">fnrows_extended</span> =\n              <span class=\"supfact\">fnrows_extended</span> + Number;\n        }\n        dVar9 = pDVar8[<span class=\"supfact\">i</span>].component[Number];\n        pDVar13[<span class=\"supfact\">pos</span>].component[Number] =\n            pDVar8[<span class=\"supfact\">i</span>].component[Number];\n        pDVar13[<span class=\"supfact\">pos</span>].component[Number] = dVar9;\n      }\n    } else {\n      <span class=\"supfact\">fnrows_extended</span> = fnrows_00 + iVar2;\n      pDVar8 = <span class=\"supfact\">Work</span>->Wy;\n      for (<span class=\"supfact\">i</span> = Number;\n           <span class=\"supfact\">i</span> < <span class=\"supfact\">fnrows_extended</span>;\n           <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n        dVar9 = pDVar8[<span class=\"supfact\">i</span>].component[Number];\n        pDVar13[<span class=\"supfact\">i</span>].component[Number] =\n            pDVar8[<span class=\"supfact\">i</span>].component[Number];\n        pDVar13[<span class=\"supfact\">i</span>].component[Number] = dVar9;\n      }\n    }\n    if (<span class=\"supfact\">Work</span>->pivrow_in_front == Number) {\n      piVar4 = <span class=\"supfact\">Work</span>->Wrow;\n      <span class=\"supfact\">fncols_extended</span> = fncols_00;\n      for (<span class=\"supfact\">j</span> = Number; <span class=\"supfact\">j</span> < iVar1;\n           <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number) {\n        iVar2 = piVar4[<span class=\"supfact\">j</span>];\n        if (piVar7[iVar2] < Number) {\n          piVar6[<span class=\"supfact\">fncols_extended</span>] = iVar2;\n          piVar7[iVar2] = <span class=\"supfact\">fncols_extended</span> * iVar11;\n          <span class=\"supfact\">fncols_extended</span> =\n              <span class=\"supfact\">fncols_extended</span> + Number;\n        }\n      }\n    } else {\n      <span class=\"supfact\">j</span> = fncols_00;\n      <span class=\"supfact\">fncols_extended</span> = iVar1;\n      if (<span class=\"supfact\">Work</span>->pivcol_in_front == Number) {\n        piVar4 = <span class=\"supfact\">Work</span>->Wrow;\n        if (piVar4 == piVar6) {\n          for (; <span class=\"supfact\">j</span> < iVar1;\n               <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number) {\n            piVar7[piVar4[<span class=\"supfact\">j</span>]] = <span class=\"supfact\">j</span> * iVar11;\n          }\n        } else {\n          for (; <span class=\"supfact\">j</span> < iVar1;\n               <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number) {\n            iVar2 = piVar4[<span class=\"supfact\">j</span>];\n            piVar6[<span class=\"supfact\">j</span>] = iVar2;\n            piVar7[iVar2] = <span class=\"supfact\">j</span> * iVar11;\n          }\n        }\n      } else {\n        for (; <span class=\"supfact\">j</span> < iVar1;\n             <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number) {\n          piVar7[piVar6[<span class=\"supfact\">j</span>]] = <span class=\"supfact\">j</span> * iVar11;\n        }\n      }\n    }\n    zero_front(<span class=\"supfact\">Work</span>->Flblock, <span class=\"supfact\">Work</span>->Fublock,\n               <span class=\"supfact\">Work</span>->Fcblock, fnrows_00, fncols_00, iVar11,\n               fnc_curr_00, iVar12, <span class=\"supfact\">fnrows_extended</span>,\n               <span class=\"supfact\">fncols_extended</span>);\n    <span class=\"supfact\">Work</span>->fnrows = <span class=\"supfact\">fnrows_extended</span>;\n    <span class=\"supfact\">Work</span>->fncols = <span class=\"supfact\">fncols_extended</span>;\n    iVar12 = Number;\n  } else {\n    iVar12 = Number;\n  }\n  return iVar12;\n}", "var": [{"name": "param_2", "type": "WorkType * *", "pred_name": "Work", "ref_name": "Work", "ref_type": "WorkType * *"}, {"name": "local_28", "type": "DoubleComplex * *", "pred_name": "F", "ref_name": "F", "ref_type": "DoubleComplex * *"}, {"name": "local_1c", "type": "int", "pred_name": "pos", "ref_name": "pos", "ref_type": "int"}, {"name": "local_18", "type": "int", "pred_name": "__unk__", "ref_name": "fncols_extended", "ref_type": "int"}, {"name": "local_14", "type": "int", "pred_name": "__unk__", "ref_name": "fnrows_extended", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "j", "ref_name": "j", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "bpillon", "repo_name": "android-ffmpeg-wrapper", "path": "bpillon/android-ffmpeg-wrapper/ba1cff2608504ca3b34e6f7884c235aab00d828df51cb6f4520ff842ce1e8ea9", "path_in_repo": "bpillon/android-ffmpeg-wrapper/jni/ffmpeg/libavcodec/h264idct.o", "objdump": "000000000000706f <ff_h264_idct_add_12_c>:\n    706f:\t48 81 ec 88 00 00 00 \tsub    $0x88,%rsp\n    7076:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n    707b:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n    7080:\t89 54 24 0c          \tmov    %edx,0xc(%rsp)\n    7084:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    7089:\t48 89 44 24 70       \tmov    %rax,0x70(%rsp)\n    708e:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    7093:\t48 89 44 24 68       \tmov    %rax,0x68(%rsp)\n    7098:\td1 7c 24 0c          \tsarl   0xc(%rsp)\n    709c:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    70a1:\t8b 00                \tmov    (%rax),%eax\n    70a3:\t8d 50 20             \tlea    0x20(%rax),%edx\n    70a6:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    70ab:\t89 10                \tmov    %edx,(%rax)\n    70ad:\tc7 44 24 7c 00 00 00 \tmovl   $0x0,0x7c(%rsp)\n    70b4:\t00 \n    70b5:\te9 90 01 00 00       \tjmp    724a <ff_h264_idct_add_12_c+0x1db>\n    70ba:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    70be:\t48 98                \tcltq   \n    70c0:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    70c7:\t00 \n    70c8:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    70cd:\t48 01 d0             \tadd    %rdx,%rax\n    70d0:\t8b 10                \tmov    (%rax),%edx\n    70d2:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    70d6:\t48 98                \tcltq   \n    70d8:\t48 83 c0 08          \tadd    $0x8,%rax\n    70dc:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    70e3:\t00 \n    70e4:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    70e9:\t48 01 c8             \tadd    %rcx,%rax\n    70ec:\t8b 00                \tmov    (%rax),%eax\n    70ee:\t01 d0                \tadd    %edx,%eax\n    70f0:\t89 44 24 54          \tmov    %eax,0x54(%rsp)\n    70f4:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    70f8:\t48 98                \tcltq   \n    70fa:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    7101:\t00 \n    7102:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    7107:\t48 01 d0             \tadd    %rdx,%rax\n    710a:\t8b 10                \tmov    (%rax),%edx\n    710c:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    7110:\t48 98                \tcltq   \n    7112:\t48 83 c0 08          \tadd    $0x8,%rax\n    7116:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    711d:\t00 \n    711e:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    7123:\t48 01 c8             \tadd    %rcx,%rax\n    7126:\t8b 00                \tmov    (%rax),%eax\n    7128:\t29 c2                \tsub    %eax,%edx\n    712a:\t89 d0                \tmov    %edx,%eax\n    712c:\t89 44 24 50          \tmov    %eax,0x50(%rsp)\n    7130:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    7134:\t48 98                \tcltq   \n    7136:\t48 83 c0 04          \tadd    $0x4,%rax\n    713a:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    7141:\t00 \n    7142:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    7147:\t48 01 d0             \tadd    %rdx,%rax\n    714a:\t8b 00                \tmov    (%rax),%eax\n    714c:\td1 f8                \tsar    %eax\n    714e:\t89 c2                \tmov    %eax,%edx\n    7150:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    7154:\t48 98                \tcltq   \n    7156:\t48 83 c0 0c          \tadd    $0xc,%rax\n    715a:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    7161:\t00 \n    7162:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    7167:\t48 01 c8             \tadd    %rcx,%rax\n    716a:\t8b 00                \tmov    (%rax),%eax\n    716c:\t29 c2                \tsub    %eax,%edx\n    716e:\t89 d0                \tmov    %edx,%eax\n    7170:\t89 44 24 4c          \tmov    %eax,0x4c(%rsp)\n    7174:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    7178:\t48 98                \tcltq   \n    717a:\t48 83 c0 04          \tadd    $0x4,%rax\n    717e:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    7185:\t00 \n    7186:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    718b:\t48 01 d0             \tadd    %rdx,%rax\n    718e:\t8b 00                \tmov    (%rax),%eax\n    7190:\t8b 54 24 7c          \tmov    0x7c(%rsp),%edx\n    7194:\t48 63 d2             \tmovslq %edx,%rdx\n    7197:\t48 83 c2 0c          \tadd    $0xc,%rdx\n    719b:\t48 8d 0c 95 00 00 00 \tlea    0x0(,%rdx,4),%rcx\n    71a2:\t00 \n    71a3:\t48 8b 54 24 68       \tmov    0x68(%rsp),%rdx\n    71a8:\t48 01 ca             \tadd    %rcx,%rdx\n    71ab:\t8b 12                \tmov    (%rdx),%edx\n    71ad:\td1 fa                \tsar    %edx\n    71af:\t01 d0                \tadd    %edx,%eax\n    71b1:\t89 44 24 48          \tmov    %eax,0x48(%rsp)\n    71b5:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    71b9:\t48 98                \tcltq   \n    71bb:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    71c2:\t00 \n    71c3:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    71c8:\t48 01 d0             \tadd    %rdx,%rax\n    71cb:\t8b 4c 24 54          \tmov    0x54(%rsp),%ecx\n    71cf:\t8b 54 24 48          \tmov    0x48(%rsp),%edx\n    71d3:\t01 ca                \tadd    %ecx,%edx\n    71d5:\t89 10                \tmov    %edx,(%rax)\n    71d7:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    71db:\t48 98                \tcltq   \n    71dd:\t48 83 c0 04          \tadd    $0x4,%rax\n    71e1:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    71e8:\t00 \n    71e9:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    71ee:\t48 01 d0             \tadd    %rdx,%rax\n    71f1:\t8b 4c 24 50          \tmov    0x50(%rsp),%ecx\n    71f5:\t8b 54 24 4c          \tmov    0x4c(%rsp),%edx\n    71f9:\t01 ca                \tadd    %ecx,%edx\n    71fb:\t89 10                \tmov    %edx,(%rax)\n    71fd:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    7201:\t48 98                \tcltq   \n    7203:\t48 83 c0 08          \tadd    $0x8,%rax\n    7207:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    720e:\t00 \n    720f:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    7214:\t48 01 c2             \tadd    %rax,%rdx\n    7217:\t8b 44 24 50          \tmov    0x50(%rsp),%eax\n    721b:\t2b 44 24 4c          \tsub    0x4c(%rsp),%eax\n    721f:\t89 02                \tmov    %eax,(%rdx)\n    7221:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    7225:\t48 98                \tcltq   \n    7227:\t48 83 c0 0c          \tadd    $0xc,%rax\n    722b:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    7232:\t00 \n    7233:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    7238:\t48 01 c2             \tadd    %rax,%rdx\n    723b:\t8b 44 24 54          \tmov    0x54(%rsp),%eax\n    723f:\t2b 44 24 48          \tsub    0x48(%rsp),%eax\n    7243:\t89 02                \tmov    %eax,(%rdx)\n    7245:\t83 44 24 7c 01       \taddl   $0x1,0x7c(%rsp)\n    724a:\t83 7c 24 7c 03       \tcmpl   $0x3,0x7c(%rsp)\n    724f:\t0f 8e 65 fe ff ff    \tjle    70ba <ff_h264_idct_add_12_c+0x4b>\n    7255:\tc7 44 24 7c 00 00 00 \tmovl   $0x0,0x7c(%rsp)\n    725c:\t00 \n    725d:\te9 53 03 00 00       \tjmp    75b5 <ff_h264_idct_add_12_c+0x546>\n    7262:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    7266:\tc1 e0 02             \tshl    $0x2,%eax\n    7269:\t48 98                \tcltq   \n    726b:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    7272:\t00 \n    7273:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    7278:\t48 01 d0             \tadd    %rdx,%rax\n    727b:\t8b 10                \tmov    (%rax),%edx\n    727d:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    7281:\tc1 e0 02             \tshl    $0x2,%eax\n    7284:\t83 c0 02             \tadd    $0x2,%eax\n    7287:\t48 98                \tcltq   \n    7289:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    7290:\t00 \n    7291:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    7296:\t48 01 c8             \tadd    %rcx,%rax\n    7299:\t8b 00                \tmov    (%rax),%eax\n    729b:\t01 d0                \tadd    %edx,%eax\n    729d:\t89 44 24 64          \tmov    %eax,0x64(%rsp)\n    72a1:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    72a5:\tc1 e0 02             \tshl    $0x2,%eax\n    72a8:\t48 98                \tcltq   \n    72aa:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    72b1:\t00 \n    72b2:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    72b7:\t48 01 d0             \tadd    %rdx,%rax\n    72ba:\t8b 10                \tmov    (%rax),%edx\n    72bc:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    72c0:\tc1 e0 02             \tshl    $0x2,%eax\n    72c3:\t83 c0 02             \tadd    $0x2,%eax\n    72c6:\t48 98                \tcltq   \n    72c8:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    72cf:\t00 \n    72d0:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    72d5:\t48 01 c8             \tadd    %rcx,%rax\n    72d8:\t8b 00                \tmov    (%rax),%eax\n    72da:\t29 c2                \tsub    %eax,%edx\n    72dc:\t89 d0                \tmov    %edx,%eax\n    72de:\t89 44 24 60          \tmov    %eax,0x60(%rsp)\n    72e2:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    72e6:\tc1 e0 02             \tshl    $0x2,%eax\n    72e9:\t83 c0 01             \tadd    $0x1,%eax\n    72ec:\t48 98                \tcltq   \n    72ee:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    72f5:\t00 \n    72f6:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    72fb:\t48 01 d0             \tadd    %rdx,%rax\n    72fe:\t8b 00                \tmov    (%rax),%eax\n    7300:\td1 f8                \tsar    %eax\n    7302:\t89 c2                \tmov    %eax,%edx\n    7304:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    7308:\tc1 e0 02             \tshl    $0x2,%eax\n    730b:\t83 c0 03             \tadd    $0x3,%eax\n    730e:\t48 98                \tcltq   \n    7310:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    7317:\t00 \n    7318:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    731d:\t48 01 c8             \tadd    %rcx,%rax\n    7320:\t8b 00                \tmov    (%rax),%eax\n    7322:\t29 c2                \tsub    %eax,%edx\n    7324:\t89 d0                \tmov    %edx,%eax\n    7326:\t89 44 24 5c          \tmov    %eax,0x5c(%rsp)\n    732a:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    732e:\tc1 e0 02             \tshl    $0x2,%eax\n    7331:\t83 c0 01             \tadd    $0x1,%eax\n    7334:\t48 98                \tcltq   \n    7336:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    733d:\t00 \n    733e:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    7343:\t48 01 d0             \tadd    %rdx,%rax\n    7346:\t8b 00                \tmov    (%rax),%eax\n    7348:\t8b 54 24 7c          \tmov    0x7c(%rsp),%edx\n    734c:\tc1 e2 02             \tshl    $0x2,%edx\n    734f:\t83 c2 03             \tadd    $0x3,%edx\n    7352:\t48 63 d2             \tmovslq %edx,%rdx\n    7355:\t48 8d 0c 95 00 00 00 \tlea    0x0(,%rdx,4),%rcx\n    735c:\t00 \n    735d:\t48 8b 54 24 68       \tmov    0x68(%rsp),%rdx\n    7362:\t48 01 ca             \tadd    %rcx,%rdx\n    7365:\t8b 12                \tmov    (%rdx),%edx\n    7367:\td1 fa                \tsar    %edx\n    7369:\t01 d0                \tadd    %edx,%eax\n    736b:\t89 44 24 58          \tmov    %eax,0x58(%rsp)\n    736f:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    7373:\t48 98                \tcltq   \n    7375:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    7379:\t48 8b 44 24 70       \tmov    0x70(%rsp),%rax\n    737e:\t48 01 d0             \tadd    %rdx,%rax\n    7381:\t0f b7 00             \tmovzwl (%rax),%eax\n    7384:\t0f b7 c0             \tmovzwl %ax,%eax\n    7387:\t8b 4c 24 64          \tmov    0x64(%rsp),%ecx\n    738b:\t8b 54 24 58          \tmov    0x58(%rsp),%edx\n    738f:\t01 ca                \tadd    %ecx,%edx\n    7391:\tc1 fa 06             \tsar    $0x6,%edx\n    7394:\t01 d0                \tadd    %edx,%eax\n    7396:\t89 44 24 2c          \tmov    %eax,0x2c(%rsp)\n    739a:\tc7 44 24 28 0c 00 00 \tmovl   $0xc,0x28(%rsp)\n    73a1:\t00 \n    73a2:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n    73a6:\tba 01 00 00 00       \tmov    $0x1,%edx\n    73ab:\t89 c1                \tmov    %eax,%ecx\n    73ad:\td3 e2                \tshl    %cl,%edx\n    73af:\t89 d0                \tmov    %edx,%eax\n    73b1:\tf7 d8                \tneg    %eax\n    73b3:\t23 44 24 2c          \tand    0x2c(%rsp),%eax\n    73b7:\t85 c0                \ttest   %eax,%eax\n    73b9:\t74 1d                \tje     73d8 <ff_h264_idct_add_12_c+0x369>\n    73bb:\t8b 44 24 2c          \tmov    0x2c(%rsp),%eax\n    73bf:\tf7 d8                \tneg    %eax\n    73c1:\t99                   \tcltd   \n    73c2:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n    73c6:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    73cb:\t89 c1                \tmov    %eax,%ecx\n    73cd:\td3 e6                \tshl    %cl,%esi\n    73cf:\t89 f0                \tmov    %esi,%eax\n    73d1:\t83 e8 01             \tsub    $0x1,%eax\n    73d4:\t21 d0                \tand    %edx,%eax\n    73d6:\teb 04                \tjmp    73dc <ff_h264_idct_add_12_c+0x36d>\n    73d8:\t8b 44 24 2c          \tmov    0x2c(%rsp),%eax\n    73dc:\t8b 54 24 7c          \tmov    0x7c(%rsp),%edx\n    73e0:\t48 63 d2             \tmovslq %edx,%rdx\n    73e3:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    73e7:\t48 8b 54 24 70       \tmov    0x70(%rsp),%rdx\n    73ec:\t48 01 ca             \tadd    %rcx,%rdx\n    73ef:\t66 89 02             \tmov    %ax,(%rdx)\n    73f2:\t8b 54 24 7c          \tmov    0x7c(%rsp),%edx\n    73f6:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    73fa:\t01 d0                \tadd    %edx,%eax\n    73fc:\t48 98                \tcltq   \n    73fe:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    7402:\t48 8b 44 24 70       \tmov    0x70(%rsp),%rax\n    7407:\t48 01 d0             \tadd    %rdx,%rax\n    740a:\t0f b7 00             \tmovzwl (%rax),%eax\n    740d:\t0f b7 c0             \tmovzwl %ax,%eax\n    7410:\t8b 4c 24 60          \tmov    0x60(%rsp),%ecx\n    7414:\t8b 54 24 5c          \tmov    0x5c(%rsp),%edx\n    7418:\t01 ca                \tadd    %ecx,%edx\n    741a:\tc1 fa 06             \tsar    $0x6,%edx\n    741d:\t01 d0                \tadd    %edx,%eax\n    741f:\t89 44 24 34          \tmov    %eax,0x34(%rsp)\n    7423:\tc7 44 24 30 0c 00 00 \tmovl   $0xc,0x30(%rsp)\n    742a:\t00 \n    742b:\t8b 44 24 30          \tmov    0x30(%rsp),%eax\n    742f:\tba 01 00 00 00       \tmov    $0x1,%edx\n    7434:\t89 c1                \tmov    %eax,%ecx\n    7436:\td3 e2                \tshl    %cl,%edx\n    7438:\t89 d0                \tmov    %edx,%eax\n    743a:\tf7 d8                \tneg    %eax\n    743c:\t23 44 24 34          \tand    0x34(%rsp),%eax\n    7440:\t85 c0                \ttest   %eax,%eax\n    7442:\t74 1d                \tje     7461 <ff_h264_idct_add_12_c+0x3f2>\n    7444:\t8b 44 24 34          \tmov    0x34(%rsp),%eax\n    7448:\tf7 d8                \tneg    %eax\n    744a:\t99                   \tcltd   \n    744b:\t8b 44 24 30          \tmov    0x30(%rsp),%eax\n    744f:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    7454:\t89 c1                \tmov    %eax,%ecx\n    7456:\td3 e6                \tshl    %cl,%esi\n    7458:\t89 f0                \tmov    %esi,%eax\n    745a:\t83 e8 01             \tsub    $0x1,%eax\n    745d:\t21 d0                \tand    %edx,%eax\n    745f:\teb 04                \tjmp    7465 <ff_h264_idct_add_12_c+0x3f6>\n    7461:\t8b 44 24 34          \tmov    0x34(%rsp),%eax\n    7465:\t8b 4c 24 7c          \tmov    0x7c(%rsp),%ecx\n    7469:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    746d:\t01 ca                \tadd    %ecx,%edx\n    746f:\t48 63 d2             \tmovslq %edx,%rdx\n    7472:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    7476:\t48 8b 54 24 70       \tmov    0x70(%rsp),%rdx\n    747b:\t48 01 ca             \tadd    %rcx,%rdx\n    747e:\t66 89 02             \tmov    %ax,(%rdx)\n    7481:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    7485:\t8d 14 00             \tlea    (%rax,%rax,1),%edx\n    7488:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    748c:\t01 d0                \tadd    %edx,%eax\n    748e:\t48 98                \tcltq   \n    7490:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    7494:\t48 8b 44 24 70       \tmov    0x70(%rsp),%rax\n    7499:\t48 01 d0             \tadd    %rdx,%rax\n    749c:\t0f b7 00             \tmovzwl (%rax),%eax\n    749f:\t0f b7 d0             \tmovzwl %ax,%edx\n    74a2:\t8b 44 24 60          \tmov    0x60(%rsp),%eax\n    74a6:\t2b 44 24 5c          \tsub    0x5c(%rsp),%eax\n    74aa:\tc1 f8 06             \tsar    $0x6,%eax\n    74ad:\t01 d0                \tadd    %edx,%eax\n    74af:\t89 44 24 3c          \tmov    %eax,0x3c(%rsp)\n    74b3:\tc7 44 24 38 0c 00 00 \tmovl   $0xc,0x38(%rsp)\n    74ba:\t00 \n    74bb:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    74bf:\tba 01 00 00 00       \tmov    $0x1,%edx\n    74c4:\t89 c1                \tmov    %eax,%ecx\n    74c6:\td3 e2                \tshl    %cl,%edx\n    74c8:\t89 d0                \tmov    %edx,%eax\n    74ca:\tf7 d8                \tneg    %eax\n    74cc:\t23 44 24 3c          \tand    0x3c(%rsp),%eax\n    74d0:\t85 c0                \ttest   %eax,%eax\n    74d2:\t74 1d                \tje     74f1 <ff_h264_idct_add_12_c+0x482>\n    74d4:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    74d8:\tf7 d8                \tneg    %eax\n    74da:\t99                   \tcltd   \n    74db:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    74df:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    74e4:\t89 c1                \tmov    %eax,%ecx\n    74e6:\td3 e6                \tshl    %cl,%esi\n    74e8:\t89 f0                \tmov    %esi,%eax\n    74ea:\t83 e8 01             \tsub    $0x1,%eax\n    74ed:\t21 d0                \tand    %edx,%eax\n    74ef:\teb 04                \tjmp    74f5 <ff_h264_idct_add_12_c+0x486>\n    74f1:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    74f5:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    74f9:\t8d 0c 12             \tlea    (%rdx,%rdx,1),%ecx\n    74fc:\t8b 54 24 7c          \tmov    0x7c(%rsp),%edx\n    7500:\t01 ca                \tadd    %ecx,%edx\n    7502:\t48 63 d2             \tmovslq %edx,%rdx\n    7505:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    7509:\t48 8b 54 24 70       \tmov    0x70(%rsp),%rdx\n    750e:\t48 01 ca             \tadd    %rcx,%rdx\n    7511:\t66 89 02             \tmov    %ax,(%rdx)\n    7514:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    7518:\t89 d0                \tmov    %edx,%eax\n    751a:\t01 c0                \tadd    %eax,%eax\n    751c:\t01 c2                \tadd    %eax,%edx\n    751e:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    7522:\t01 d0                \tadd    %edx,%eax\n    7524:\t48 98                \tcltq   \n    7526:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    752a:\t48 8b 44 24 70       \tmov    0x70(%rsp),%rax\n    752f:\t48 01 d0             \tadd    %rdx,%rax\n    7532:\t0f b7 00             \tmovzwl (%rax),%eax\n    7535:\t0f b7 d0             \tmovzwl %ax,%edx\n    7538:\t8b 44 24 64          \tmov    0x64(%rsp),%eax\n    753c:\t2b 44 24 58          \tsub    0x58(%rsp),%eax\n    7540:\tc1 f8 06             \tsar    $0x6,%eax\n    7543:\t01 d0                \tadd    %edx,%eax\n    7545:\t89 44 24 44          \tmov    %eax,0x44(%rsp)\n    7549:\tc7 44 24 40 0c 00 00 \tmovl   $0xc,0x40(%rsp)\n    7550:\t00 \n    7551:\t8b 44 24 40          \tmov    0x40(%rsp),%eax\n    7555:\tba 01 00 00 00       \tmov    $0x1,%edx\n    755a:\t89 c1                \tmov    %eax,%ecx\n    755c:\td3 e2                \tshl    %cl,%edx\n    755e:\t89 d0                \tmov    %edx,%eax\n    7560:\tf7 d8                \tneg    %eax\n    7562:\t23 44 24 44          \tand    0x44(%rsp),%eax\n    7566:\t85 c0                \ttest   %eax,%eax\n    7568:\t74 1f                \tje     7589 <ff_h264_idct_add_12_c+0x51a>\n    756a:\t8b 44 24 44          \tmov    0x44(%rsp),%eax\n    756e:\tf7 d8                \tneg    %eax\n    7570:\t99                   \tcltd   \n    7571:\t8b 44 24 40          \tmov    0x40(%rsp),%eax\n    7575:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    757a:\t89 c1                \tmov    %eax,%ecx\n    757c:\td3 e6                \tshl    %cl,%esi\n    757e:\t89 f0                \tmov    %esi,%eax\n    7580:\t83 e8 01             \tsub    $0x1,%eax\n    7583:\t21 d0                \tand    %edx,%eax\n    7585:\t89 c1                \tmov    %eax,%ecx\n    7587:\teb 04                \tjmp    758d <ff_h264_idct_add_12_c+0x51e>\n    7589:\t8b 4c 24 44          \tmov    0x44(%rsp),%ecx\n    758d:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    7591:\t89 d0                \tmov    %edx,%eax\n    7593:\t01 c0                \tadd    %eax,%eax\n    7595:\t01 c2                \tadd    %eax,%edx\n    7597:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    759b:\t01 d0                \tadd    %edx,%eax\n    759d:\t48 98                \tcltq   \n    759f:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    75a3:\t48 8b 44 24 70       \tmov    0x70(%rsp),%rax\n    75a8:\t48 01 d0             \tadd    %rdx,%rax\n    75ab:\t89 ca                \tmov    %ecx,%edx\n    75ad:\t66 89 10             \tmov    %dx,(%rax)\n    75b0:\t83 44 24 7c 01       \taddl   $0x1,0x7c(%rsp)\n    75b5:\t83 7c 24 7c 03       \tcmpl   $0x3,0x7c(%rsp)\n    75ba:\t0f 8e a2 fc ff ff    \tjle    7262 <ff_h264_idct_add_12_c+0x1f3>\n    75c0:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    75c5:\tba 40 00 00 00       \tmov    $0x40,%edx\n    75ca:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    75cf:\t48 89 c7             \tmov    %rax,%rdi\n    75d2:\te8 00 00 00 00       \tcall   75d7 <ff_h264_idct_add_12_c+0x568>\n    75d7:\t90                   \tnop\n    75d8:\t48 81 c4 88 00 00 00 \tadd    $0x88,%rsp\n    75df:\tc3                   \tret    ", "code_s": "void ff_h264_idct_add_12_c(long param_1, int *<span class=\"supfact\">param_2</span>,\n                           int <span class=\"supfact\">param_3</span>) {\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  ushort <span class=\"supfact\">uVar5</span>;\n  int iVar6;\n  uint uVar7;\n  int iVar8;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">param_3</span> = <span class=\"supfact\">param_3</span> >> Number;\n  *<span class=\"supfact\">param_2</span> = *<span class=\"supfact\">param_2</span> + Number;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    iVar1 = <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>];\n    iVar2 = <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number];\n    iVar3 = <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>];\n    iVar4 = <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number];\n    iVar8 = (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n             Number) -\n            <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number];\n    iVar6 = <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] +\n            (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n             Number);\n    <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>] = iVar6 + iVar2 + iVar1;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar8 + (iVar3 - iVar4);\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        (iVar3 - iVar4) - iVar8;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        (iVar2 + iVar1) - iVar6;\n  }\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    iVar1 = <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> << Number];\n    iVar2 = <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number];\n    iVar3 = <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> << Number];\n    iVar4 = <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number];\n    iVar8 =\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number) -\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number];\n    iVar6 =\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] +\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number);\n    uVar7 =\n        (uint) * (ushort *)(param_1 + (long)<span class=\"supfact\">local_c</span> * Number) +\n        (iVar6 + iVar2 + iVar1 >> Number);\n    if ((uVar7 & Number) == Number) {\n      <span class=\"supfact\">uVar5</span> = (ushort)uVar7;\n    } else {\n      <span class=\"supfact\">uVar5</span> = (ushort)((int)-uVar7 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)<span class=\"supfact\">local_c</span> * Number) =\n        <span class=\"supfact\">uVar5</span>;\n    uVar7 = (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">param_3</span> +\n                                                 <span class=\"supfact\">local_c</span>) *\n                                              Number) +\n            (iVar8 + (iVar3 - iVar4) >> Number);\n    if ((uVar7 & Number) == Number) {\n      <span class=\"supfact\">uVar5</span> = (ushort)uVar7;\n    } else {\n      <span class=\"supfact\">uVar5</span> = (ushort)((int)-uVar7 >> Number) & Number;\n    }\n    *(ushort *)(param_1 +\n                (long)(<span class=\"supfact\">param_3</span> + <span class=\"supfact\">local_c</span>) *\n                    Number) = <span class=\"supfact\">uVar5</span>;\n    uVar7 =\n        ((iVar3 - iVar4) - iVar8 >> Number) +\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number);\n    if ((uVar7 & Number) == Number) {\n      <span class=\"supfact\">uVar5</span> = (ushort)uVar7;\n    } else {\n      <span class=\"supfact\">uVar5</span> = (ushort)((int)-uVar7 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar5</span>;\n    uVar7 =\n        ((iVar2 + iVar1) - iVar6 >> Number) +\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number);\n    if ((uVar7 & Number) == Number) {\n      <span class=\"supfact\">uVar5</span> = (ushort)uVar7;\n    } else {\n      <span class=\"supfact\">uVar5</span> = (ushort)((int)-uVar7 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar5</span>;\n  }\n  memset(<span class=\"supfact\">param_2</span>, Number, Number);\n  return;\n}", "code_t": "void ff_h264_idct_add_12_c(uint8_t *_dst, int16_t *<span class=\"supfact\">_block</span>,\n                           int <span class=\"supfact\">stride</span>) {\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  ushort <span class=\"supfact\">uVar6</span>;\n  int iVar7;\n  uint uVar8;\n  int iVar9;\n  int <span class=\"supfact\">stride</span> - local;\n  int16_t *<span class=\"supfact\">_block</span> - local;\n  uint8_t *_dst - local;\n  int z3;\n  int z2;\n  int z1;\n  int z0;\n  int z3_1;\n  int z2_1;\n  int z1_1;\n  int z0_1;\n  int32_t *block;\n  uint16_t *dst;\n  int <span class=\"supfact\">i</span>;\n  iVar1 = <span class=\"supfact\">stride</span> >> Number;\n  *(int *)<span class=\"supfact\">_block</span> = *(int *)<span class=\"supfact\">_block</span> + Number;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    iVar2 = *(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number);\n    iVar3 = *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number);\n    iVar4 = *(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number);\n    iVar5 = *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number);\n    iVar9 = (*(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n             Number) -\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number);\n    iVar7 = *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number) +\n            (*(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n             Number);\n    *(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number) =\n        iVar7 + iVar3 + iVar2;\n    *(int *)(<span class=\"supfact\">_block</span> + ((long)<span class=\"supfact\">i</span> + Number) *\n                                          Number) = iVar9 + (iVar4 - iVar5);\n    *(int *)(<span class=\"supfact\">_block</span> + ((long)<span class=\"supfact\">i</span> + Number) *\n                                          Number) = (iVar4 - iVar5) - iVar9;\n    *(int *)(<span class=\"supfact\">_block</span> + ((long)<span class=\"supfact\">i</span> + Number) *\n                                          Number) = (iVar3 + iVar2) - iVar7;\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    iVar2 = *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> << Number) * Number);\n    iVar3 = *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number);\n    iVar4 = *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> << Number) * Number);\n    iVar5 = *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number);\n    iVar9 = (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n             Number) -\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number);\n    iVar7 = *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) +\n            (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n             Number);\n    uVar8 = (uint) * (ushort *)(_dst + (long)<span class=\"supfact\">i</span> * Number) +\n            (iVar7 + iVar3 + iVar2 >> Number);\n    if ((uVar8 & Number) == Number) {\n      <span class=\"supfact\">uVar6</span> = (ushort)uVar8;\n    } else {\n      <span class=\"supfact\">uVar6</span> = (ushort)((int)-uVar8 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)<span class=\"supfact\">i</span> * Number) =\n        <span class=\"supfact\">uVar6</span>;\n    uVar8 =\n        (uint) * (ushort *)(_dst + (long)(iVar1 + <span class=\"supfact\">i</span>) * Number) +\n        (iVar9 + (iVar4 - iVar5) >> Number);\n    if ((uVar8 & Number) == Number) {\n      <span class=\"supfact\">uVar6</span> = (ushort)uVar8;\n    } else {\n      <span class=\"supfact\">uVar6</span> = (ushort)((int)-uVar8 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(iVar1 + <span class=\"supfact\">i</span>) * Number) =\n        <span class=\"supfact\">uVar6</span>;\n    uVar8 =\n        ((iVar4 - iVar5) - iVar9 >> Number) +\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number);\n    if ((uVar8 & Number) == Number) {\n      <span class=\"supfact\">uVar6</span> = (ushort)uVar8;\n    } else {\n      <span class=\"supfact\">uVar6</span> = (ushort)((int)-uVar8 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar6</span>;\n    uVar8 =\n        ((iVar3 + iVar2) - iVar7 >> Number) +\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number);\n    if ((uVar8 & Number) == Number) {\n      <span class=\"supfact\">uVar6</span> = (ushort)uVar8;\n    } else {\n      <span class=\"supfact\">uVar6</span> = (ushort)((int)-uVar8 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar6</span>;\n  }\n  memset(<span class=\"supfact\">_block</span>, Number, Number);\n  return;\n}", "var": [{"name": "param_2", "type": "int16_t * *", "pred_name": "_block", "ref_name": "_block", "ref_type": "int16_t * *"}, {"name": "param_3", "type": "int", "pred_name": "stride", "ref_name": "stride", "ref_type": "int"}, {"name": "uVar5", "type": "ushort", "pred_name": "uVar6", "ref_name": "uVar6", "ref_type": "ushort"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "harvard-cns", "repo_name": "FlowRadar-P4", "path": "harvard-cns/FlowRadar-P4/33923458f8a144614491890fa823dbacd7997ba9411aeb91bba11a743a17be79", "path_in_repo": "harvard-cns/FlowRadar-P4/tools/new_target_template/build/p4utils/obj/tommyarrayblk.o", "objdump": "0000000000000101 <tommy_arrayblk_done>:\n 101:\t55                   \tpush   %rbp\n 102:\t48 89 e5             \tmov    %rsp,%rbp\n 105:\t48 83 ec 20          \tsub    $0x20,%rsp\n 109:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n 10d:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n 114:\teb 1d                \tjmp    133 <tommy_arrayblk_done+0x32>\n 116:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 11a:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n 11d:\t89 d6                \tmov    %edx,%esi\n 11f:\t48 89 c7             \tmov    %rax,%rdi\n 122:\te8 78 ff ff ff       \tcall   9f <tommy_array_get>\n 127:\t48 89 c7             \tmov    %rax,%rdi\n 12a:\te8 00 00 00 00       \tcall   12f <tommy_arrayblk_done+0x2e>\n 12f:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 133:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 137:\t48 89 c7             \tmov    %rax,%rdi\n 13a:\te8 85 ff ff ff       \tcall   c4 <tommy_array_size>\n 13f:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n 142:\t72 d2                \tjb     116 <tommy_arrayblk_done+0x15>\n 144:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 148:\t48 89 c7             \tmov    %rax,%rdi\n 14b:\te8 00 00 00 00       \tcall   150 <tommy_arrayblk_done+0x4f>\n 150:\t90                   \tnop\n 151:\tc9                   \tleave  \n 152:\tc3                   \tret    ", "code_s": "void tommy_arrayblk_done(undefined8 <span class=\"supfact\">param_1</span>) {\n  uint uVar1;\n  void *<span class=\"supfact\">__ptr</span>;\n  uint <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_c</span> = Number;\n  while (true) {\n    uVar1 = FUN_001000c4(<span class=\"supfact\">param_1</span>);\n    if (uVar1 <= <span class=\"supfact\">local_c</span>)\n      break;\n    <span class=\"supfact\">__ptr</span> =\n        (void *)FUN_0010009f(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_c</span>);\n    free(<span class=\"supfact\">__ptr</span>);\n    <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number;\n  }\n  tommy_array_done(<span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "void tommy_arrayblk_done(tommy_arrayblk *<span class=\"supfact\">array</span>) {\n  tommy_count_t tVar1;\n  void *<span class=\"supfact\">__ptr</span>;\n  tommy_arrayblk *<span class=\"supfact\">array</span> - local;\n  tommy_count_t <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">i</span> = Number;\n  while (true) {\n    tVar1 = tommy_array_size(&<span class=\"supfact\">array</span>->block);\n    if (tVar1 <= <span class=\"supfact\">i</span>)\n      break;\n    <span class=\"supfact\">__ptr</span> =\n        tommy_array_get(&<span class=\"supfact\">array</span>->block, <span class=\"supfact\">i</span>);\n    free(<span class=\"supfact\">__ptr</span>);\n    <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n  }\n  tommy_array_done(<span class=\"supfact\">array</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "array", "ref_type": "tommy_arrayblk * *"}, {"name": "__ptr", "type": "__unk__", "pred_name": "__ptr", "ref_name": "__ptr", "ref_type": "void * *"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "tommy_count_t"}], "body_in_train": false}, {"repo_owner": "DashW", "repo_name": "Ingenuity", "path": "DashW/Ingenuity/449b11873d23cdafe6019e168659cca8767448df50ba3f3149aa7affb0ea9e1c", "path_in_repo": "DashW/Ingenuity/Third Party/FreeImage3154/Source/LibTIFF4/tif_dirinfo.o", "objdump": "000000000000087c <TIFFFieldWithTag>:\n     87c:\t55                   \tpush   %rbp\n     87d:\t48 89 e5             \tmov    %rsp,%rbp\n     880:\t48 83 ec 20          \tsub    $0x20,%rsp\n     884:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     888:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n     88b:\t8b 4d e4             \tmov    -0x1c(%rbp),%ecx\n     88e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     892:\tba 00 00 00 00       \tmov    $0x0,%edx\n     897:\t89 ce                \tmov    %ecx,%esi\n     899:\t48 89 c7             \tmov    %rax,%rdi\n     89c:\te8 00 00 00 00       \tcall   8a1 <TIFFFieldWithTag+0x25>\n     8a1:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     8a5:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n     8aa:\t75 2b                \tjne    8d7 <TIFFFieldWithTag+0x5b>\n     8ac:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     8b0:\t48 8b 80 b8 03 00 00 \tmov    0x3b8(%rax),%rax\n     8b7:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n     8ba:\t89 d1                \tmov    %edx,%ecx\n     8bc:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 8c3 <TIFFFieldWithTag+0x47>\n     8c3:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 8ca <TIFFFieldWithTag+0x4e>\n     8ca:\t48 89 c7             \tmov    %rax,%rdi\n     8cd:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     8d2:\te8 00 00 00 00       \tcall   8d7 <TIFFFieldWithTag+0x5b>\n     8d7:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     8db:\tc9                   \tleave  \n     8dc:\tc3                   \tret    ", "code_s": "long TIFFFieldWithTag(long param_1, undefined4 <span class=\"supfact\">param_2</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  <span class=\"supfact\">lVar1</span> =\n      TIFFFindField(param_1, <span class=\"supfact\">param_2</span>, Number);\n  if (<span class=\"supfact\">lVar1</span> == Number) {\n    TIFFErrorExt(*(undefined8 *)(param_1 + Number), String, String,\n                 <span class=\"supfact\">param_2</span>);\n  }\n  return <span class=\"supfact\">lVar1</span>;\n}", "code_t": "TIFFField *TIFFFieldWithTag(TIFF *tif, uint32 <span class=\"supfact\">tag</span>) {\n  TIFFField *<span class=\"supfact\">pTVar1</span>;\n  uint32 <span class=\"supfact\">tag</span> - local;\n  TIFF *tif - local;\n  TIFFField *fip;\n  <span class=\"supfact\">pTVar1</span> = TIFFFindField(tif, <span class=\"supfact\">tag</span>, TIFF_NOTYPE);\n  if (<span class=\"supfact\">pTVar1</span> == (TIFFField *)Number) {\n    TIFFErrorExt(tif->tif_clientdata, String, String, <span class=\"supfact\">tag</span>);\n  }\n  return <span class=\"supfact\">pTVar1</span>;\n}", "var": [{"name": "param_2", "type": "int", "pred_name": "col", "ref_name": "tag", "ref_type": "uint32"}, {"name": "lVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pTVar1", "ref_type": "TIFFField * *"}], "body_in_train": false}, {"repo_owner": "omapconf", "repo_name": "omapconf", "path": "omapconf/omapconf/8d09c7dbc99560d07399223ee76f11c0969f397671ea5e4ec4a1b0c2a9e9af3f", "path_in_repo": "omapconf/omapconf//arch/arm/mach-omap/omap4/counters44xx.o", "objdump": "000000000000255b <counters44xx_main>:\n    255b:\t55                   \tpush   %rbp\n    255c:\t48 89 e5             \tmov    %rsp,%rbp\n    255f:\t48 81 ec 20 01 00 00 \tsub    $0x120,%rsp\n    2566:\t89 bd ec fe ff ff    \tmov    %edi,-0x114(%rbp)\n    256c:\t48 89 b5 e0 fe ff ff \tmov    %rsi,-0x120(%rbp)\n    2573:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    257a:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n    2581:\tc7 45 f0 00 00 00 00 \tmovl   $0x0,-0x10(%rbp)\n    2588:\te8 00 00 00 00       \tcall   258d <counters44xx_main+0x32>\n    258d:\t85 c0                \ttest   %eax,%eax\n    258f:\t75 0a                \tjne    259b <counters44xx_main+0x40>\n    2591:\tb8 fe ff ff ff       \tmov    $0xfffffffe,%eax\n    2596:\te9 8c 06 00 00       \tjmp    2c27 <counters44xx_main+0x6cc>\n    259b:\t83 bd ec fe ff ff 00 \tcmpl   $0x0,-0x114(%rbp)\n    25a2:\t7e 09                \tjle    25ad <counters44xx_main+0x52>\n    25a4:\t83 bd ec fe ff ff 03 \tcmpl   $0x3,-0x114(%rbp)\n    25ab:\t7e 19                \tjle    25c6 <counters44xx_main+0x6b>\n    25ad:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    25b2:\tbf 12 00 00 00       \tmov    $0x12,%edi\n    25b7:\te8 00 00 00 00       \tcall   25bc <counters44xx_main+0x61>\n    25bc:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    25c1:\te9 61 06 00 00       \tjmp    2c27 <counters44xx_main+0x6cc>\n    25c6:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n    25cd:\teb 33                \tjmp    2602 <counters44xx_main+0xa7>\n    25cf:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    25d2:\t48 98                \tcltq   \n    25d4:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    25db:\t00 \n    25dc:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    25e3:\t48 01 d0             \tadd    %rdx,%rax\n    25e6:\t48 8b 00             \tmov    (%rax),%rax\n    25e9:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    25ee:\t48 89 c7             \tmov    %rax,%rdi\n    25f1:\te8 00 00 00 00       \tcall   25f6 <counters44xx_main+0x9b>\n    25f6:\t85 c0                \ttest   %eax,%eax\n    25f8:\t75 04                \tjne    25fe <counters44xx_main+0xa3>\n    25fa:\t83 45 f4 01          \taddl   $0x1,-0xc(%rbp)\n    25fe:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n    2602:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2605:\t3b 85 ec fe ff ff    \tcmp    -0x114(%rbp),%eax\n    260b:\t7c c2                \tjl     25cf <counters44xx_main+0x74>\n    260d:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    2611:\t0f 85 9a 05 00 00    \tjne    2bb1 <counters44xx_main+0x656>\n    2617:\t83 bd ec fe ff ff 01 \tcmpl   $0x1,-0x114(%rbp)\n    261e:\t7e 33                \tjle    2653 <counters44xx_main+0xf8>\n    2620:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    2627:\t48 83 c0 08          \tadd    $0x8,%rax\n    262b:\t48 8b 00             \tmov    (%rax),%rax\n    262e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2633:\t48 89 c7             \tmov    %rax,%rdi\n    2636:\te8 00 00 00 00       \tcall   263b <counters44xx_main+0xe0>\n    263b:\t85 c0                \ttest   %eax,%eax\n    263d:\t75 14                \tjne    2653 <counters44xx_main+0xf8>\n    263f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2644:\te8 00 00 00 00       \tcall   2649 <counters44xx_main+0xee>\n    2649:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    264e:\te9 d4 05 00 00       \tjmp    2c27 <counters44xx_main+0x6cc>\n    2653:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    2658:\te8 00 00 00 00       \tcall   265d <counters44xx_main+0x102>\n    265d:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    2660:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    2664:\t74 23                \tje     2689 <counters44xx_main+0x12e>\n    2666:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 266d <counters44xx_main+0x112>\n    266d:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    2672:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2677:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    267c:\t48 89 c7             \tmov    %rax,%rdi\n    267f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2684:\te8 00 00 00 00       \tcall   2689 <counters44xx_main+0x12e>\n    2689:\t83 bd ec fe ff ff 01 \tcmpl   $0x1,-0x114(%rbp)\n    2690:\t7e 5b                \tjle    26ed <counters44xx_main+0x192>\n    2692:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    2699:\t48 83 c0 08          \tadd    $0x8,%rax\n    269d:\t48 8b 00             \tmov    (%rax),%rax\n    26a0:\tba 00 00 00 00       \tmov    $0x0,%edx\n    26a5:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    26aa:\t48 89 c7             \tmov    %rax,%rdi\n    26ad:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    26b2:\te8 00 00 00 00       \tcall   26b7 <counters44xx_main+0x15c>\n    26b7:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    26ba:\t83 7d fc 01          \tcmpl   $0x1,-0x4(%rbp)\n    26be:\t74 19                \tje     26d9 <counters44xx_main+0x17e>\n    26c0:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    26c5:\tbf 12 00 00 00       \tmov    $0x12,%edi\n    26ca:\te8 00 00 00 00       \tcall   26cf <counters44xx_main+0x174>\n    26cf:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    26d4:\te9 4e 05 00 00       \tjmp    2c27 <counters44xx_main+0x6cc>\n    26d9:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 26df <counters44xx_main+0x184>\n    26df:\t85 c0                \ttest   %eax,%eax\n    26e1:\t75 0a                \tjne    26ed <counters44xx_main+0x192>\n    26e3:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    26e8:\te8 00 00 00 00       \tcall   26ed <counters44xx_main+0x192>\n    26ed:\t83 bd ec fe ff ff 02 \tcmpl   $0x2,-0x114(%rbp)\n    26f4:\t0f 8e b7 04 00 00    \tjle    2bb1 <counters44xx_main+0x656>\n    26fa:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n    2701:\te9 3f 02 00 00       \tjmp    2945 <counters44xx_main+0x3ea>\n    2706:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    270d:\t48 83 c0 10          \tadd    $0x10,%rax\n    2711:\t48 8b 10             \tmov    (%rax),%rdx\n    2714:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2717:\t48 98                \tcltq   \n    2719:\t48 01 d0             \tadd    %rdx,%rax\n    271c:\t0f b6 00             \tmovzbl (%rax),%eax\n    271f:\t84 c0                \ttest   %al,%al\n    2721:\t75 29                \tjne    274c <counters44xx_main+0x1f1>\n    2723:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    272a:\t48 83 c0 10          \tadd    $0x10,%rax\n    272e:\t48 8b 10             \tmov    (%rax),%rdx\n    2731:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2734:\t48 98                \tcltq   \n    2736:\t48 01 d0             \tadd    %rdx,%rax\n    2739:\t0f b6 10             \tmovzbl (%rax),%edx\n    273c:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    273f:\t48 98                \tcltq   \n    2741:\t88 90 00 00 00 00    \tmov    %dl,0x0(%rax)\n    2747:\te9 03 02 00 00       \tjmp    294f <counters44xx_main+0x3f4>\n    274c:\t83 7d f8 13          \tcmpl   $0x13,-0x8(%rbp)\n    2750:\t7e 09                \tjle    275b <counters44xx_main+0x200>\n    2752:\t83 45 f0 01          \taddl   $0x1,-0x10(%rbp)\n    2756:\te9 f4 01 00 00       \tjmp    294f <counters44xx_main+0x3f4>\n    275b:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    2762:\t48 83 c0 10          \tadd    $0x10,%rax\n    2766:\t48 8b 10             \tmov    (%rax),%rdx\n    2769:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    276c:\t48 98                \tcltq   \n    276e:\t48 01 d0             \tadd    %rdx,%rax\n    2771:\t0f b6 00             \tmovzbl (%rax),%eax\n    2774:\t3c 2f                \tcmp    $0x2f,%al\n    2776:\t7e 46                \tjle    27be <counters44xx_main+0x263>\n    2778:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    277f:\t48 83 c0 10          \tadd    $0x10,%rax\n    2783:\t48 8b 10             \tmov    (%rax),%rdx\n    2786:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2789:\t48 98                \tcltq   \n    278b:\t48 01 d0             \tadd    %rdx,%rax\n    278e:\t0f b6 00             \tmovzbl (%rax),%eax\n    2791:\t3c 39                \tcmp    $0x39,%al\n    2793:\t7f 29                \tjg     27be <counters44xx_main+0x263>\n    2795:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    279c:\t48 83 c0 10          \tadd    $0x10,%rax\n    27a0:\t48 8b 10             \tmov    (%rax),%rdx\n    27a3:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    27a6:\t48 98                \tcltq   \n    27a8:\t48 01 d0             \tadd    %rdx,%rax\n    27ab:\t0f b6 10             \tmovzbl (%rax),%edx\n    27ae:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    27b1:\t48 98                \tcltq   \n    27b3:\t88 90 00 00 00 00    \tmov    %dl,0x0(%rax)\n    27b9:\te9 83 01 00 00       \tjmp    2941 <counters44xx_main+0x3e6>\n    27be:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    27c5:\t48 83 c0 10          \tadd    $0x10,%rax\n    27c9:\t48 8b 10             \tmov    (%rax),%rdx\n    27cc:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    27cf:\t48 98                \tcltq   \n    27d1:\t48 01 d0             \tadd    %rdx,%rax\n    27d4:\t0f b6 00             \tmovzbl (%rax),%eax\n    27d7:\t3c 40                \tcmp    $0x40,%al\n    27d9:\t7e 46                \tjle    2821 <counters44xx_main+0x2c6>\n    27db:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    27e2:\t48 83 c0 10          \tadd    $0x10,%rax\n    27e6:\t48 8b 10             \tmov    (%rax),%rdx\n    27e9:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    27ec:\t48 98                \tcltq   \n    27ee:\t48 01 d0             \tadd    %rdx,%rax\n    27f1:\t0f b6 00             \tmovzbl (%rax),%eax\n    27f4:\t3c 5a                \tcmp    $0x5a,%al\n    27f6:\t7f 29                \tjg     2821 <counters44xx_main+0x2c6>\n    27f8:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    27ff:\t48 83 c0 10          \tadd    $0x10,%rax\n    2803:\t48 8b 10             \tmov    (%rax),%rdx\n    2806:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2809:\t48 98                \tcltq   \n    280b:\t48 01 d0             \tadd    %rdx,%rax\n    280e:\t0f b6 10             \tmovzbl (%rax),%edx\n    2811:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2814:\t48 98                \tcltq   \n    2816:\t88 90 00 00 00 00    \tmov    %dl,0x0(%rax)\n    281c:\te9 20 01 00 00       \tjmp    2941 <counters44xx_main+0x3e6>\n    2821:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    2828:\t48 83 c0 10          \tadd    $0x10,%rax\n    282c:\t48 8b 10             \tmov    (%rax),%rdx\n    282f:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2832:\t48 98                \tcltq   \n    2834:\t48 01 d0             \tadd    %rdx,%rax\n    2837:\t0f b6 00             \tmovzbl (%rax),%eax\n    283a:\t3c 60                \tcmp    $0x60,%al\n    283c:\t7e 46                \tjle    2884 <counters44xx_main+0x329>\n    283e:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    2845:\t48 83 c0 10          \tadd    $0x10,%rax\n    2849:\t48 8b 10             \tmov    (%rax),%rdx\n    284c:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    284f:\t48 98                \tcltq   \n    2851:\t48 01 d0             \tadd    %rdx,%rax\n    2854:\t0f b6 00             \tmovzbl (%rax),%eax\n    2857:\t3c 7a                \tcmp    $0x7a,%al\n    2859:\t7f 29                \tjg     2884 <counters44xx_main+0x329>\n    285b:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    2862:\t48 83 c0 10          \tadd    $0x10,%rax\n    2866:\t48 8b 10             \tmov    (%rax),%rdx\n    2869:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    286c:\t48 98                \tcltq   \n    286e:\t48 01 d0             \tadd    %rdx,%rax\n    2871:\t0f b6 10             \tmovzbl (%rax),%edx\n    2874:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2877:\t48 98                \tcltq   \n    2879:\t88 90 00 00 00 00    \tmov    %dl,0x0(%rax)\n    287f:\te9 bd 00 00 00       \tjmp    2941 <counters44xx_main+0x3e6>\n    2884:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    288b:\t48 83 c0 10          \tadd    $0x10,%rax\n    288f:\t48 8b 10             \tmov    (%rax),%rdx\n    2892:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2895:\t48 98                \tcltq   \n    2897:\t48 01 d0             \tadd    %rdx,%rax\n    289a:\t0f b6 00             \tmovzbl (%rax),%eax\n    289d:\t3c 5f                \tcmp    $0x5f,%al\n    289f:\t74 74                \tje     2915 <counters44xx_main+0x3ba>\n    28a1:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    28a8:\t48 83 c0 10          \tadd    $0x10,%rax\n    28ac:\t48 8b 10             \tmov    (%rax),%rdx\n    28af:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    28b2:\t48 98                \tcltq   \n    28b4:\t48 01 d0             \tadd    %rdx,%rax\n    28b7:\t0f b6 00             \tmovzbl (%rax),%eax\n    28ba:\t3c 5b                \tcmp    $0x5b,%al\n    28bc:\t74 57                \tje     2915 <counters44xx_main+0x3ba>\n    28be:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    28c5:\t48 83 c0 10          \tadd    $0x10,%rax\n    28c9:\t48 8b 10             \tmov    (%rax),%rdx\n    28cc:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    28cf:\t48 98                \tcltq   \n    28d1:\t48 01 d0             \tadd    %rdx,%rax\n    28d4:\t0f b6 00             \tmovzbl (%rax),%eax\n    28d7:\t3c 5d                \tcmp    $0x5d,%al\n    28d9:\t74 3a                \tje     2915 <counters44xx_main+0x3ba>\n    28db:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    28e2:\t48 83 c0 10          \tadd    $0x10,%rax\n    28e6:\t48 8b 10             \tmov    (%rax),%rdx\n    28e9:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    28ec:\t48 98                \tcltq   \n    28ee:\t48 01 d0             \tadd    %rdx,%rax\n    28f1:\t0f b6 00             \tmovzbl (%rax),%eax\n    28f4:\t3c 2e                \tcmp    $0x2e,%al\n    28f6:\t74 1d                \tje     2915 <counters44xx_main+0x3ba>\n    28f8:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    28ff:\t48 83 c0 10          \tadd    $0x10,%rax\n    2903:\t48 8b 10             \tmov    (%rax),%rdx\n    2906:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2909:\t48 98                \tcltq   \n    290b:\t48 01 d0             \tadd    %rdx,%rax\n    290e:\t0f b6 00             \tmovzbl (%rax),%eax\n    2911:\t3c 2d                \tcmp    $0x2d,%al\n    2913:\t75 26                \tjne    293b <counters44xx_main+0x3e0>\n    2915:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    291c:\t48 83 c0 10          \tadd    $0x10,%rax\n    2920:\t48 8b 10             \tmov    (%rax),%rdx\n    2923:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2926:\t48 98                \tcltq   \n    2928:\t48 01 d0             \tadd    %rdx,%rax\n    292b:\t0f b6 10             \tmovzbl (%rax),%edx\n    292e:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2931:\t48 98                \tcltq   \n    2933:\t88 90 00 00 00 00    \tmov    %dl,0x0(%rax)\n    2939:\teb 06                \tjmp    2941 <counters44xx_main+0x3e6>\n    293b:\t83 45 f0 01          \taddl   $0x1,-0x10(%rbp)\n    293f:\teb 0e                \tjmp    294f <counters44xx_main+0x3f4>\n    2941:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n    2945:\t83 7d f8 3f          \tcmpl   $0x3f,-0x8(%rbp)\n    2949:\t0f 8e b7 fd ff ff    \tjle    2706 <counters44xx_main+0x1ab>\n    294f:\t83 7d f0 00          \tcmpl   $0x0,-0x10(%rbp)\n    2953:\t74 14                \tje     2969 <counters44xx_main+0x40e>\n    2955:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    295a:\te8 00 00 00 00       \tcall   295f <counters44xx_main+0x404>\n    295f:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    2964:\te9 be 02 00 00       \tjmp    2c27 <counters44xx_main+0x6cc>\n    2969:\t48 8d 85 f0 fe ff ff \tlea    -0x110(%rbp),%rax\n    2970:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    2976:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    297b:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2980:\tbe c0 00 00 00       \tmov    $0xc0,%esi\n    2985:\t48 89 c7             \tmov    %rax,%rdi\n    2988:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    298d:\te8 00 00 00 00       \tcall   2992 <counters44xx_main+0x437>\n    2992:\tc6 85 30 ff ff ff 00 \tmovb   $0x0,-0xd0(%rbp)\n    2999:\t48 8b 85 f0 fe ff ff \tmov    -0x110(%rbp),%rax\n    29a0:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n    29a7:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n    29ab:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n    29af:\t48 8b 85 00 ff ff ff \tmov    -0x100(%rbp),%rax\n    29b6:\t48 8b 95 08 ff ff ff \tmov    -0xf8(%rbp),%rdx\n    29bd:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    29c1:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n    29c5:\t48 8b 85 10 ff ff ff \tmov    -0xf0(%rbp),%rax\n    29cc:\t48 8b 95 18 ff ff ff \tmov    -0xe8(%rbp),%rdx\n    29d3:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    29d7:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    29db:\t48 8b 85 20 ff ff ff \tmov    -0xe0(%rbp),%rax\n    29e2:\t48 8b 95 28 ff ff ff \tmov    -0xd8(%rbp),%rdx\n    29e9:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    29ed:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n    29f1:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n    29f5:\t48 8d 85 f0 fe ff ff \tlea    -0x110(%rbp),%rax\n    29fc:\t48 89 d1             \tmov    %rdx,%rcx\n    29ff:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2a04:\tbe c0 00 00 00       \tmov    $0xc0,%esi\n    2a09:\t48 89 c7             \tmov    %rax,%rdi\n    2a0c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2a11:\te8 00 00 00 00       \tcall   2a16 <counters44xx_main+0x4bb>\n    2a16:\tc6 85 30 ff ff ff 00 \tmovb   $0x0,-0xd0(%rbp)\n    2a1d:\t48 8b 85 f0 fe ff ff \tmov    -0x110(%rbp),%rax\n    2a24:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n    2a2b:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 2a32 <counters44xx_main+0x4d7>\n    2a32:\t48 89 15 00 00 00 00 \tmov    %rdx,0x0(%rip)        # 2a39 <counters44xx_main+0x4de>\n    2a39:\t48 8b 85 00 ff ff ff \tmov    -0x100(%rbp),%rax\n    2a40:\t48 8b 95 08 ff ff ff \tmov    -0xf8(%rbp),%rdx\n    2a47:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 2a4e <counters44xx_main+0x4f3>\n    2a4e:\t48 89 15 00 00 00 00 \tmov    %rdx,0x0(%rip)        # 2a55 <counters44xx_main+0x4fa>\n    2a55:\t48 8b 85 10 ff ff ff \tmov    -0xf0(%rbp),%rax\n    2a5c:\t48 8b 95 18 ff ff ff \tmov    -0xe8(%rbp),%rdx\n    2a63:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 2a6a <counters44xx_main+0x50f>\n    2a6a:\t48 89 15 00 00 00 00 \tmov    %rdx,0x0(%rip)        # 2a71 <counters44xx_main+0x516>\n    2a71:\t48 8b 85 20 ff ff ff \tmov    -0xe0(%rbp),%rax\n    2a78:\t48 8b 95 28 ff ff ff \tmov    -0xd8(%rbp),%rdx\n    2a7f:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 2a86 <counters44xx_main+0x52b>\n    2a86:\t48 89 15 00 00 00 00 \tmov    %rdx,0x0(%rip)        # 2a8d <counters44xx_main+0x532>\n    2a8d:\t48 8d 85 f0 fe ff ff \tlea    -0x110(%rbp),%rax\n    2a94:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    2a9a:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    2a9f:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2aa4:\tbe c0 00 00 00       \tmov    $0xc0,%esi\n    2aa9:\t48 89 c7             \tmov    %rax,%rdi\n    2aac:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2ab1:\te8 00 00 00 00       \tcall   2ab6 <counters44xx_main+0x55b>\n    2ab6:\tc6 85 30 ff ff ff 00 \tmovb   $0x0,-0xd0(%rbp)\n    2abd:\t48 8b 85 f0 fe ff ff \tmov    -0x110(%rbp),%rax\n    2ac4:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n    2acb:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n    2acf:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n    2ad3:\t48 8b 85 00 ff ff ff \tmov    -0x100(%rbp),%rax\n    2ada:\t48 8b 95 08 ff ff ff \tmov    -0xf8(%rbp),%rdx\n    2ae1:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    2ae5:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n    2ae9:\t48 8b 85 10 ff ff ff \tmov    -0xf0(%rbp),%rax\n    2af0:\t48 8b 95 18 ff ff ff \tmov    -0xe8(%rbp),%rdx\n    2af7:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    2afb:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    2aff:\t48 8b 85 20 ff ff ff \tmov    -0xe0(%rbp),%rax\n    2b06:\t48 8b 95 28 ff ff ff \tmov    -0xd8(%rbp),%rdx\n    2b0d:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    2b11:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n    2b15:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n    2b19:\t48 8d 85 f0 fe ff ff \tlea    -0x110(%rbp),%rax\n    2b20:\t48 89 d1             \tmov    %rdx,%rcx\n    2b23:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2b28:\tbe c0 00 00 00       \tmov    $0xc0,%esi\n    2b2d:\t48 89 c7             \tmov    %rax,%rdi\n    2b30:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2b35:\te8 00 00 00 00       \tcall   2b3a <counters44xx_main+0x5df>\n    2b3a:\tc6 85 30 ff ff ff 00 \tmovb   $0x0,-0xd0(%rbp)\n    2b41:\t48 8b 85 f0 fe ff ff \tmov    -0x110(%rbp),%rax\n    2b48:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n    2b4f:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 2b56 <counters44xx_main+0x5fb>\n    2b56:\t48 89 15 00 00 00 00 \tmov    %rdx,0x0(%rip)        # 2b5d <counters44xx_main+0x602>\n    2b5d:\t48 8b 85 00 ff ff ff \tmov    -0x100(%rbp),%rax\n    2b64:\t48 8b 95 08 ff ff ff \tmov    -0xf8(%rbp),%rdx\n    2b6b:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 2b72 <counters44xx_main+0x617>\n    2b72:\t48 89 15 00 00 00 00 \tmov    %rdx,0x0(%rip)        # 2b79 <counters44xx_main+0x61e>\n    2b79:\t48 8b 85 10 ff ff ff \tmov    -0xf0(%rbp),%rax\n    2b80:\t48 8b 95 18 ff ff ff \tmov    -0xe8(%rbp),%rdx\n    2b87:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 2b8e <counters44xx_main+0x633>\n    2b8e:\t48 89 15 00 00 00 00 \tmov    %rdx,0x0(%rip)        # 2b95 <counters44xx_main+0x63a>\n    2b95:\t48 8b 85 20 ff ff ff \tmov    -0xe0(%rbp),%rax\n    2b9c:\t48 8b 95 28 ff ff ff \tmov    -0xd8(%rbp),%rdx\n    2ba3:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 2baa <counters44xx_main+0x64f>\n    2baa:\t48 89 15 00 00 00 00 \tmov    %rdx,0x0(%rip)        # 2bb1 <counters44xx_main+0x656>\n    2bb1:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n    2bb5:\t75 12                \tjne    2bc9 <counters44xx_main+0x66e>\n    2bb7:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 2bbd <counters44xx_main+0x662>\n    2bbd:\t89 c7                \tmov    %eax,%edi\n    2bbf:\te8 00 00 00 00       \tcall   2bc4 <counters44xx_main+0x669>\n    2bc4:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    2bc7:\teb 5b                \tjmp    2c24 <counters44xx_main+0x6c9>\n    2bc9:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    2bd0:\t48 83 c0 08          \tadd    $0x8,%rax\n    2bd4:\t48 8b 00             \tmov    (%rax),%rax\n    2bd7:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2bdc:\t48 89 c7             \tmov    %rax,%rdi\n    2bdf:\te8 00 00 00 00       \tcall   2be4 <counters44xx_main+0x689>\n    2be4:\t85 c0                \ttest   %eax,%eax\n    2be6:\t75 26                \tjne    2c0e <counters44xx_main+0x6b3>\n    2be8:\t83 bd ec fe ff ff 02 \tcmpl   $0x2,-0x114(%rbp)\n    2bef:\t7e 1d                \tjle    2c0e <counters44xx_main+0x6b3>\n    2bf1:\t48 8b 85 e0 fe ff ff \tmov    -0x120(%rbp),%rax\n    2bf8:\t48 83 c0 10          \tadd    $0x10,%rax\n    2bfc:\t48 8b 00             \tmov    (%rax),%rax\n    2bff:\t48 89 c6             \tmov    %rax,%rsi\n    2c02:\tbf 12 00 00 00       \tmov    $0x12,%edi\n    2c07:\te8 00 00 00 00       \tcall   2c0c <counters44xx_main+0x6b1>\n    2c0c:\teb 16                \tjmp    2c24 <counters44xx_main+0x6c9>\n    2c0e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2c13:\tbf 12 00 00 00       \tmov    $0x12,%edi\n    2c18:\te8 00 00 00 00       \tcall   2c1d <counters44xx_main+0x6c2>\n    2c1d:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n    2c24:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    2c27:\tc9                   \tleave  \n    2c28:\tc3                   \tret    \n", "code_s": "int counters44xx_main(int param_1, long <span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  undefined8 <span class=\"supfact\">local_118</span>;\n  undefined8 <span class=\"supfact\">local_110</span>;\n  undefined8 <span class=\"supfact\">local_108</span>;\n  undefined8 <span class=\"supfact\">local_100</span>;\n  undefined8 <span class=\"supfact\">local_f8</span>;\n  undefined8 <span class=\"supfact\">local_f0</span>;\n  undefined8 <span class=\"supfact\">local_e8</span>;\n  undefined8 <span class=\"supfact\">local_e0</span>;\n  undefined <span class=\"supfact\">local_d8</span>;\n  undefined8 <span class=\"supfact\">local_58</span>;\n  undefined8 <span class=\"supfact\">local_50</span>;\n  undefined8 <span class=\"supfact\">local_48</span>;\n  undefined8 <span class=\"supfact\">local_40</span>;\n  undefined8 <span class=\"supfact\">local_38</span>;\n  undefined8 <span class=\"supfact\">local_30</span>;\n  undefined8 <span class=\"supfact\">local_28</span>;\n  undefined8 <span class=\"supfact\">local_20</span>;\n  int <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_14</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_c</span> = Number;\n  <span class=\"supfact\">local_14</span> = Number;\n  <span class=\"supfact\">local_18</span> = Number;\n  <span class=\"supfact\">iVar1</span> = cpu_is_omap44xx();\n  if (<span class=\"supfact\">iVar1</span> == Number) {\n    <span class=\"supfact\">local_c</span> = -Number;\n  } else if ((param_1 < Number) || (Number < param_1)) {\n    help44xx(Number, &DAT_00109188);\n    <span class=\"supfact\">local_c</span> = -Number;\n  } else {\n    for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> < param_1;\n         <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n      <span class=\"supfact\">iVar1</span> =\n          strcmp(*(char **)(<span class=\"supfact\">param_2</span> +\n                            (long)<span class=\"supfact\">local_10</span> * Number),\n                 String);\n      if (<span class=\"supfact\">iVar1</span> == Number) {\n        <span class=\"supfact\">local_14</span> = <span class=\"supfact\">local_14</span> + Number;\n      }\n    }\n    if (<span class=\"supfact\">local_14</span> == Number) {\n      if ((Number < param_1) &&\n          (<span class=\"supfact\">iVar1</span> =\n               strcmp(*(char **)(<span class=\"supfact\">param_2</span> + Number), String),\n           <span class=\"supfact\">iVar1</span> == Number)) {\n        counters44xx_print_defaults();\n        return Number;\n      }\n      <span class=\"supfact\">local_c</span> = counters44xx_get_defaults(defaults_file);\n      if (<span class=\"supfact\">local_c</span> != Number) {\n        fprintf(_stderr, String, String, defaults_file);\n      }\n      if (Number < param_1) {\n        <span class=\"supfact\">local_c</span> =\n            __isoc99_sscanf(*(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n                            &DAT_0010927a, &DAT_00102d78);\n        if (<span class=\"supfact\">local_c</span> != Number) {\n          help44xx(Number, &DAT_00109188);\n          return -Number;\n        }\n        if (DAT_00102d78 == Number) {\n          puts(String);\n        }\n      }\n      if (Number < param_1) {\n        for (<span class=\"supfact\">local_10</span> = Number;\n             <span class=\"supfact\">local_10</span> < Number;\n             <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n          if (*(char *)((long)<span class=\"supfact\">local_10</span> +\n                        *(long *)(<span class=\"supfact\">param_2</span> + Number)) ==\n              String) {\n            s_omap_performance__00102c40[<span class=\"supfact\">local_10</span>] =\n                *(char *)((long)<span class=\"supfact\">local_10</span> +\n                          *(long *)(<span class=\"supfact\">param_2</span> + Number));\n            break;\n          }\n          if (Number < <span class=\"supfact\">local_10</span>) {\n            <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> + Number;\n            break;\n          }\n          if ((*(char *)((long)<span class=\"supfact\">local_10</span> +\n                         *(long *)(<span class=\"supfact\">param_2</span> + Number)) <\n               String) ||\n              (String <\n               *(char *)((long)<span class=\"supfact\">local_10</span> +\n                         *(long *)(<span class=\"supfact\">param_2</span> + Number)))) {\n            if ((*(char *)((long)<span class=\"supfact\">local_10</span> +\n                           *(long *)(<span class=\"supfact\">param_2</span> + Number)) <\n                 String) ||\n                (String <\n                 *(char *)((long)<span class=\"supfact\">local_10</span> +\n                           *(long *)(<span class=\"supfact\">param_2</span> + Number)))) {\n              if ((*(char *)((long)<span class=\"supfact\">local_10</span> +\n                             *(long *)(<span class=\"supfact\">param_2</span> + Number)) <\n                   String) ||\n                  (String <\n                   *(char *)((long)<span class=\"supfact\">local_10</span> +\n                             *(long *)(<span class=\"supfact\">param_2</span> + Number)))) {\n                if ((*(char *)((long)<span class=\"supfact\">local_10</span> +\n                               *(long *)(<span class=\"supfact\">param_2</span> + Number)) !=\n                     String) &&\n                    ((((*(char *)((long)<span class=\"supfact\">local_10</span> +\n                                  *(long *)(<span class=\"supfact\">param_2</span> +\n                                            Number)) != String &&\n                        (*(char *)((long)<span class=\"supfact\">local_10</span> +\n                                   *(long *)(<span class=\"supfact\">param_2</span> +\n                                             Number)) != String)) &&\n                       (*(char *)((long)<span class=\"supfact\">local_10</span> +\n                                  *(long *)(<span class=\"supfact\">param_2</span> +\n                                            Number)) != String)) &&\n                      (*(char *)((long)<span class=\"supfact\">local_10</span> +\n                                 *(long *)(<span class=\"supfact\">param_2</span> + Number)) !=\n                       String)))) {\n                  <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> + Number;\n                  break;\n                }\n                s_omap_performance__00102c40[<span class=\"supfact\">local_10</span>] =\n                    *(char *)((long)<span class=\"supfact\">local_10</span> +\n                              *(long *)(<span class=\"supfact\">param_2</span> + Number));\n              } else {\n                s_omap_performance__00102c40[<span class=\"supfact\">local_10</span>] =\n                    *(char *)((long)<span class=\"supfact\">local_10</span> +\n                              *(long *)(<span class=\"supfact\">param_2</span> + Number));\n              }\n            } else {\n              s_omap_performance__00102c40[<span class=\"supfact\">local_10</span>] =\n                  *(char *)((long)<span class=\"supfact\">local_10</span> +\n                            *(long *)(<span class=\"supfact\">param_2</span> + Number));\n            }\n          } else {\n            s_omap_performance__00102c40[<span class=\"supfact\">local_10</span>] =\n                *(char *)((long)<span class=\"supfact\">local_10</span> +\n                          *(long *)(<span class=\"supfact\">param_2</span> + Number));\n          }\n        }\n        if (<span class=\"supfact\">local_18</span> != Number) {\n          puts(String);\n          return -Number;\n        }\n        snprintf((char *)&<span class=\"supfact\">local_118</span>, Number, String,\n                 s_omap_performance__00102c40, s_trace.dat_00102c80);\n        <span class=\"supfact\">local_d8</span> = Number;\n        <span class=\"supfact\">local_58</span>._0_1_ = (char)<span class=\"supfact\">local_118</span>;\n        <span class=\"supfact\">local_58</span>._1_1_ = <span class=\"supfact\">local_118</span>._1_1_;\n        <span class=\"supfact\">local_58</span>._2_1_ = <span class=\"supfact\">local_118</span>._2_1_;\n        <span class=\"supfact\">local_58</span>._3_1_ = <span class=\"supfact\">local_118</span>._3_1_;\n        <span class=\"supfact\">local_58</span>._4_1_ = <span class=\"supfact\">local_118</span>._4_1_;\n        <span class=\"supfact\">local_58</span>._5_1_ = <span class=\"supfact\">local_118</span>._5_1_;\n        <span class=\"supfact\">local_58</span>._6_1_ = <span class=\"supfact\">local_118</span>._6_1_;\n        <span class=\"supfact\">local_58</span>._7_1_ = <span class=\"supfact\">local_118</span>._7_1_;\n        <span class=\"supfact\">local_50</span> = <span class=\"supfact\">local_110</span>;\n        <span class=\"supfact\">local_48</span> = <span class=\"supfact\">local_108</span>;\n        <span class=\"supfact\">local_40</span> = <span class=\"supfact\">local_100</span>;\n        <span class=\"supfact\">local_38</span> = <span class=\"supfact\">local_f8</span>;\n        <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_f0</span>;\n        <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_e8</span>;\n        <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_e0</span>;\n        snprintf((char *)&<span class=\"supfact\">local_118</span>, Number, String,\n                 &<span class=\"supfact\">local_58</span>);\n        <span class=\"supfact\">local_d8</span> = Number;\n        s_trace.dat_00102c80[Number] = (char)<span class=\"supfact\">local_118</span>;\n        s_trace.dat_00102c80[Number] = <span class=\"supfact\">local_118</span>._1_1_;\n        s_trace.dat_00102c80[Number] = <span class=\"supfact\">local_118</span>._2_1_;\n        s_trace.dat_00102c80[Number] = <span class=\"supfact\">local_118</span>._3_1_;\n        s_trace.dat_00102c80[Number] = <span class=\"supfact\">local_118</span>._4_1_;\n        s_trace.dat_00102c80[Number] = <span class=\"supfact\">local_118</span>._5_1_;\n        s_trace.dat_00102c80[Number] = <span class=\"supfact\">local_118</span>._6_1_;\n        s_trace.dat_00102c80[Number] = <span class=\"supfact\">local_118</span>._7_1_;\n        ram0x00102c88 = <span class=\"supfact\">local_110</span>;\n        _DAT_00102c90 = <span class=\"supfact\">local_108</span>;\n        _DAT_00102c98 = <span class=\"supfact\">local_100</span>;\n        _DAT_00102ca0 = <span class=\"supfact\">local_f8</span>;\n        _DAT_00102ca8 = <span class=\"supfact\">local_f0</span>;\n        _DAT_00102cb0 = <span class=\"supfact\">local_e8</span>;\n        _DAT_00102cb8 = <span class=\"supfact\">local_e0</span>;\n        snprintf((char *)&<span class=\"supfact\">local_118</span>, Number, String,\n                 s_omap_performance__00102c40, s_stats.txt_00102cc0);\n        <span class=\"supfact\">local_d8</span> = Number;\n        <span class=\"supfact\">local_58</span>._0_1_ = (char)<span class=\"supfact\">local_118</span>;\n        <span class=\"supfact\">local_58</span>._1_1_ = <span class=\"supfact\">local_118</span>._1_1_;\n        <span class=\"supfact\">local_58</span>._2_1_ = <span class=\"supfact\">local_118</span>._2_1_;\n        <span class=\"supfact\">local_58</span>._3_1_ = <span class=\"supfact\">local_118</span>._3_1_;\n        <span class=\"supfact\">local_58</span>._4_1_ = <span class=\"supfact\">local_118</span>._4_1_;\n        <span class=\"supfact\">local_58</span>._5_1_ = <span class=\"supfact\">local_118</span>._5_1_;\n        <span class=\"supfact\">local_58</span>._6_1_ = <span class=\"supfact\">local_118</span>._6_1_;\n        <span class=\"supfact\">local_58</span>._7_1_ = <span class=\"supfact\">local_118</span>._7_1_;\n        <span class=\"supfact\">local_50</span> = <span class=\"supfact\">local_110</span>;\n        <span class=\"supfact\">local_48</span> = <span class=\"supfact\">local_108</span>;\n        <span class=\"supfact\">local_40</span> = <span class=\"supfact\">local_100</span>;\n        <span class=\"supfact\">local_38</span> = <span class=\"supfact\">local_f8</span>;\n        <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_f0</span>;\n        <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_e8</span>;\n        <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_e0</span>;\n        snprintf((char *)&<span class=\"supfact\">local_118</span>, Number, String,\n                 &<span class=\"supfact\">local_58</span>);\n        <span class=\"supfact\">local_d8</span> = Number;\n        s_stats.txt_00102cc0[Number] = (char)<span class=\"supfact\">local_118</span>;\n        s_stats.txt_00102cc0[Number] = <span class=\"supfact\">local_118</span>._1_1_;\n        s_stats.txt_00102cc0[Number] = <span class=\"supfact\">local_118</span>._2_1_;\n        s_stats.txt_00102cc0[Number] = <span class=\"supfact\">local_118</span>._3_1_;\n        s_stats.txt_00102cc0[Number] = <span class=\"supfact\">local_118</span>._4_1_;\n        s_stats.txt_00102cc0[Number] = <span class=\"supfact\">local_118</span>._5_1_;\n        s_stats.txt_00102cc0[Number] = <span class=\"supfact\">local_118</span>._6_1_;\n        s_stats.txt_00102cc0[Number] = <span class=\"supfact\">local_118</span>._7_1_;\n        ram0x00102cc8 = <span class=\"supfact\">local_110</span>;\n        _DAT_00102cd0 = <span class=\"supfact\">local_108</span>;\n        _DAT_00102cd8 = <span class=\"supfact\">local_100</span>;\n        _DAT_00102ce0 = <span class=\"supfact\">local_f8</span>;\n        _DAT_00102ce8 = <span class=\"supfact\">local_f0</span>;\n        _DAT_00102cf0 = <span class=\"supfact\">local_e8</span>;\n        _DAT_00102cf8 = <span class=\"supfact\">local_e0</span>;\n      }\n    }\n    if (<span class=\"supfact\">local_14</span> == Number) {\n      <span class=\"supfact\">local_c</span> = counters44xx_count(DAT_00102d78);\n    } else {\n      <span class=\"supfact\">iVar1</span> =\n          strcmp(*(char **)(<span class=\"supfact\">param_2</span> + Number), String);\n      if ((<span class=\"supfact\">iVar1</span> == Number) && (Number < param_1)) {\n        help44xx(Number, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number));\n      } else {\n        help44xx(Number, &DAT_001094df);\n        <span class=\"supfact\">local_c</span> = -Number;\n      }\n    }\n  }\n  return <span class=\"supfact\">local_c</span>;\n}", "code_t": "int counters44xx_main(int argc, char **<span class=\"supfact\">argv</span>) {\n  bool bVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  char **<span class=\"supfact\">argv</span> - local;\n  int argc - local;\n  char <span class=\"supfact\">_s</span>[Number];\n  char <span class=\"supfact\">tmp_name</span>[Number];\n  int <span class=\"supfact\">invalid_char</span>;\n  int <span class=\"supfact\">help_skip</span>;\n  int <span class=\"supfact\">i</span>;\n  int <span class=\"supfact\">ret</span>;\n  <span class=\"supfact\">ret</span> = Number;\n  <span class=\"supfact\">help_skip</span> = Number;\n  bVar1 = false;\n  <span class=\"supfact\">iVar2</span> = cpu_is_omap44xx();\n  if (<span class=\"supfact\">iVar2</span> == Number) {\n    <span class=\"supfact\">ret</span> = -Number;\n  } else if ((argc < Number) || (Number < argc)) {\n    help44xx(Number, &DAT_00109188);\n    <span class=\"supfact\">ret</span> = -Number;\n  } else {\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < argc;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      <span class=\"supfact\">iVar2</span> =\n          strcmp(<span class=\"supfact\">argv</span>[<span class=\"supfact\">i</span>], String);\n      if (<span class=\"supfact\">iVar2</span> == Number) {\n        <span class=\"supfact\">help_skip</span> = <span class=\"supfact\">help_skip</span> + Number;\n      }\n    }\n    if (<span class=\"supfact\">help_skip</span> == Number) {\n      if ((Number < argc) &&\n          (<span class=\"supfact\">iVar2</span> = strcmp(<span class=\"supfact\">argv</span>[Number], String),\n           <span class=\"supfact\">iVar2</span> == Number)) {\n        counters44xx_print_defaults();\n        return Number;\n      }\n      <span class=\"supfact\">ret</span> = counters44xx_get_defaults(defaults_file);\n      if (<span class=\"supfact\">ret</span> != Number) {\n        fprintf(_stderr, String, String, defaults_file);\n      }\n      if (Number < argc) {\n        <span class=\"supfact\">iVar2</span> = __isoc99_sscanf(<span class=\"supfact\">argv</span>[Number],\n                                                &DAT_0010927a, &capture_time);\n        if (<span class=\"supfact\">iVar2</span> != Number) {\n          help44xx(Number, &DAT_00109188);\n          return -Number;\n        }\n        <span class=\"supfact\">ret</span> = Number;\n        if (capture_time == Number) {\n          puts(String);\n        }\n      }\n      if (Number < argc) {\n        for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n             <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n          if (<span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>] == String) {\n            file_prefix[<span class=\"supfact\">i</span>] =\n                <span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>];\n            break;\n          }\n          if (Number < <span class=\"supfact\">i</span>) {\n            bVar1 = true;\n            break;\n          }\n          if ((<span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>] < String) ||\n              (String < <span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>])) {\n            if ((<span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>] < String) ||\n                (String < <span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>])) {\n              if ((<span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>] < String) ||\n                  (String < <span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>])) {\n                if ((<span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>] !=\n                     String) &&\n                    ((((<span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>] !=\n                            String &&\n                        (<span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>] !=\n                         String)) &&\n                       (<span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>] !=\n                        String)) &&\n                      (<span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>] !=\n                       String)))) {\n                  bVar1 = true;\n                  break;\n                }\n                file_prefix[<span class=\"supfact\">i</span>] =\n                    <span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>];\n              } else {\n                file_prefix[<span class=\"supfact\">i</span>] =\n                    <span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>];\n              }\n            } else {\n              file_prefix[<span class=\"supfact\">i</span>] =\n                  <span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>];\n            }\n          } else {\n            file_prefix[<span class=\"supfact\">i</span>] =\n                <span class=\"supfact\">argv</span>[Number][<span class=\"supfact\">i</span>];\n          }\n        }\n        if (bVar1) {\n          puts(String);\n          return -Number;\n        }\n        snprintf(<span class=\"supfact\">_s</span>, Number, String, file_prefix,\n                 trace_perf_file);\n        <span class=\"supfact\">_s</span>[Number] = String;\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        snprintf(<span class=\"supfact\">_s</span>, Number, String, <span class=\"supfact\">tmp_name</span>);\n        <span class=\"supfact\">_s</span>[Number] = String;\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        snprintf(<span class=\"supfact\">_s</span>, Number, String, file_prefix,\n                 trace_perf_stats_file);\n        <span class=\"supfact\">_s</span>[Number] = String;\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        <span class=\"supfact\">tmp_name</span>[Number] = <span class=\"supfact\">_s</span>[Number];\n        snprintf(<span class=\"supfact\">_s</span>, Number, String, <span class=\"supfact\">tmp_name</span>);\n        <span class=\"supfact\">_s</span>[Number] = String;\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n        trace_perf_stats_file[Number] = <span class=\"supfact\">_s</span>[Number];\n      }\n    }\n    if (<span class=\"supfact\">help_skip</span> == Number) {\n      <span class=\"supfact\">ret</span> = counters44xx_count(capture_time);\n    } else {\n      <span class=\"supfact\">iVar2</span> = strcmp(<span class=\"supfact\">argv</span>[Number], String);\n      if ((<span class=\"supfact\">iVar2</span> == Number) && (Number < argc)) {\n        help44xx(Number, <span class=\"supfact\">argv</span>[Number]);\n      } else {\n        help44xx(Number, &DAT_001094df);\n        <span class=\"supfact\">ret</span> = -Number;\n      }\n    }\n  }\n  return <span class=\"supfact\">ret</span>;\n}", "var": [{"name": "param_2", "type": "char * * *", "pred_name": "argv", "ref_name": "argv", "ref_type": "char * * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar2", "ref_type": "int"}, {"name": "local_118", "type": "char[256][256]", "pred_name": "s", "ref_name": "_s", "ref_type": "char[192][192]"}, {"name": "local_110", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_108", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_100", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_f8", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_f0", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_e8", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_e0", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_d8", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_58", "type": "disappear", "pred_name": "", "ref_name": "tmp_name", "ref_type": "char[64][64]"}, {"name": "local_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_48", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_40", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_38", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_28", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_20", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_18", "type": "disappear", "pred_name": "", "ref_name": "invalid_char", "ref_type": "int"}, {"name": "local_14", "type": "int", "pred_name": "option_index", "ref_name": "help_skip", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "c", "ref_name": "i", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "ret", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "endoplasma", "repo_name": "tdma_demo", "path": "endoplasma/tdma_demo/250179743cbaf611024fa13cf21c7fc60371bb173439830cad5f4961f3ca1de8", "path_in_repo": "endoplasma/tdma_demo/contiki/projects/udpPlug/obj_native/rpl-dag.o", "objdump": "000000000000117c <rpl_select_parent>:\n    117c:\t55                   \tpush   %rbp\n    117d:\t48 89 e5             \tmov    %rsp,%rbp\n    1180:\t48 83 ec 20          \tsub    $0x20,%rsp\n    1184:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    1188:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    118f:\t00 \n    1190:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1194:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n    1198:\t48 89 c7             \tmov    %rax,%rdi\n    119b:\te8 00 00 00 00       \tcall   11a0 <rpl_select_parent+0x24>\n    11a0:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    11a4:\teb 4e                \tjmp    11f4 <rpl_select_parent+0x78>\n    11a6:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    11aa:\t0f b7 40 28          \tmovzwl 0x28(%rax),%eax\n    11ae:\t66 83 f8 ff          \tcmp    $0xffff,%ax\n    11b2:\t74 35                \tje     11e9 <rpl_select_parent+0x6d>\n    11b4:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    11b9:\t75 0a                \tjne    11c5 <rpl_select_parent+0x49>\n    11bb:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    11bf:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    11c3:\teb 24                \tjmp    11e9 <rpl_select_parent+0x6d>\n    11c5:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    11c9:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n    11cd:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    11d1:\t48 8b 48 10          \tmov    0x10(%rax),%rcx\n    11d5:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    11d9:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    11dd:\t48 89 d6             \tmov    %rdx,%rsi\n    11e0:\t48 89 c7             \tmov    %rax,%rdi\n    11e3:\tff d1                \tcall   *%rcx\n    11e5:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    11e9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    11ed:\t48 8b 00             \tmov    (%rax),%rax\n    11f0:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    11f4:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    11f9:\t75 ab                \tjne    11a6 <rpl_select_parent+0x2a>\n    11fb:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    1200:\t74 0c                \tje     120e <rpl_select_parent+0x92>\n    1202:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1206:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    120a:\t48 89 50 18          \tmov    %rdx,0x18(%rax)\n    120e:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1212:\tc9                   \tleave  \n    1213:\tc3                   \tret    ", "code_s": "undefined8 *rpl_select_parent(long <span class=\"supfact\">param_1</span>) {\n  undefined8 *<span class=\"supfact\">local_18</span>;\n  undefined8 *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_18</span> = (undefined8 *)Number;\n  for (<span class=\"supfact\">local_10</span> = (undefined8 *)list_head(\n           *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n       <span class=\"supfact\">local_10</span> != (undefined8 *)Number;\n       <span class=\"supfact\">local_10</span> = (undefined8 *)*<span class=\"supfact\">local_10</span>) {\n    if (*(short *)(<span class=\"supfact\">local_10</span> + Number) != -Number) {\n      if (<span class=\"supfact\">local_18</span> == (undefined8 *)Number) {\n        <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_10</span>;\n      } else {\n        <span class=\"supfact\">local_18</span> = (undefined8 *)(**(\n            code **)(*(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                               Number) +\n                     Number))(<span class=\"supfact\">local_18</span>,\n                              <span class=\"supfact\">local_10</span>);\n      }\n    }\n  }\n  if (<span class=\"supfact\">local_18</span> != (undefined8 *)Number) {\n    *(undefined8 **)(<span class=\"supfact\">param_1</span> + Number) =\n        <span class=\"supfact\">local_18</span>;\n  }\n  return <span class=\"supfact\">local_18</span>;\n}", "code_t": "rpl_parent_t *rpl_select_parent(rpl_dag_t *<span class=\"supfact\">dag</span>) {\n  rpl_dag_t *<span class=\"supfact\">dag</span> - local;\n  rpl_parent_t *<span class=\"supfact\">best</span>;\n  rpl_parent_t *<span class=\"supfact\">p</span>;\n  <span class=\"supfact\">best</span> = (rpl_parent_t *)Number;\n  for (<span class=\"supfact\">p</span> = (rpl_parent_t *)list_head(\n           *(undefined8 *)&<span class=\"supfact\">dag</span>->field_0x38);\n       <span class=\"supfact\">p</span> != (rpl_parent_t *)Number;\n       <span class=\"supfact\">p</span> = <span class=\"supfact\">p</span>->next) {\n    if (<span class=\"supfact\">p</span>->rank != Number) {\n      if (<span class=\"supfact\">best</span> == (rpl_parent_t *)Number) {\n        <span class=\"supfact\">best</span> = <span class=\"supfact\">p</span>;\n      } else {\n        <span class=\"supfact\">best</span> = (rpl_parent_t *)(**(\n            code **)(*(long *)(*(long *)&<span class=\"supfact\">dag</span>->field_0x28 +\n                               Number) +\n                     Number))(<span class=\"supfact\">best</span>, <span class=\"supfact\">p</span>);\n      }\n    }\n  }\n  if (<span class=\"supfact\">best</span> != (rpl_parent_t *)Number) {\n    *(rpl_parent_t **)&<span class=\"supfact\">dag</span>->field_0x18 = <span class=\"supfact\">best</span>;\n  }\n  return <span class=\"supfact\">best</span>;\n}", "var": [{"name": "param_1", "type": "rpl_dag_t * *", "pred_name": "dag", "ref_name": "dag", "ref_type": "rpl_dag_t * *"}, {"name": "local_18", "type": "rpl_parent_t * *", "pred_name": "best", "ref_name": "best", "ref_type": "rpl_parent_t * *"}, {"name": "local_10", "type": "rpl_parent_t * *", "pred_name": "p", "ref_name": "p", "ref_type": "rpl_parent_t * *"}], "body_in_train": true}, {"repo_owner": "jbrindle", "repo_name": "selinux", "path": "jbrindle/selinux/4de1823bfbb863aa0d9e320a6faf0fae65d3560a04c57ea479b14d02961f45bf", "path_in_repo": "jbrindle/selinux//libsepol/src/hierarchy.lo", "objdump": "0000000000001f33 <hierarchy_add_bounds>:\n    1f33:\t55                   \tpush   %rbp\n    1f34:\t48 89 e5             \tmov    %rsp,%rbp\n    1f37:\t48 83 ec 40          \tsub    $0x40,%rsp\n    1f3b:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    1f3f:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n    1f43:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    1f4a:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1f4e:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    1f52:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1f56:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    1f5a:\tc7 45 e0 00 00 00 00 \tmovl   $0x0,-0x20(%rbp)\n    1f61:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1f65:\t48 8b 40 68          \tmov    0x68(%rax),%rax\n    1f69:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    1f6d:\t48 8d 35 7a fd ff ff \tlea    -0x286(%rip),%rsi        # 1cee <hierarchy_add_user_callback>\n    1f74:\t48 89 c7             \tmov    %rax,%rdi\n    1f77:\te8 00 00 00 00       \tcall   1f7c <hierarchy_add_bounds+0x49>\n    1f7c:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    1f7f:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    1f83:\t0f 85 d8 00 00 00    \tjne    2061 <hierarchy_add_bounds+0x12e>\n    1f89:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1f8d:\t48 8b 40 48          \tmov    0x48(%rax),%rax\n    1f91:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    1f95:\t48 8d 35 13 fb ff ff \tlea    -0x4ed(%rip),%rsi        # 1aaf <hierarchy_add_role_callback>\n    1f9c:\t48 89 c7             \tmov    %rax,%rdi\n    1f9f:\te8 00 00 00 00       \tcall   1fa4 <hierarchy_add_bounds+0x71>\n    1fa4:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    1fa7:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    1fab:\t0f 85 b3 00 00 00    \tjne    2064 <hierarchy_add_bounds+0x131>\n    1fb1:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1fb5:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n    1fb9:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    1fbd:\t48 8d 35 ac f8 ff ff \tlea    -0x754(%rip),%rsi        # 1870 <hierarchy_add_type_callback>\n    1fc4:\t48 89 c7             \tmov    %rax,%rdi\n    1fc7:\te8 00 00 00 00       \tcall   1fcc <hierarchy_add_bounds+0x99>\n    1fcc:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    1fcf:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    1fd3:\t0f 85 8e 00 00 00    \tjne    2067 <hierarchy_add_bounds+0x134>\n    1fd9:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n    1fdc:\t85 c0                \ttest   %eax,%eax\n    1fde:\t0f 8e 86 00 00 00    \tjle    206a <hierarchy_add_bounds+0x137>\n    1fe4:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1fe8:\t48 85 c0             \ttest   %rax,%rax\n    1feb:\t75 07                \tjne    1ff4 <hierarchy_add_bounds+0xc1>\n    1fed:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1ff4 <hierarchy_add_bounds+0xc1>\n    1ff4:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1ff8:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1ffc:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    2000:\t48 85 c0             \ttest   %rax,%rax\n    2003:\t74 53                \tje     2058 <hierarchy_add_bounds+0x125>\n    2005:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    2009:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 2010 <hierarchy_add_bounds+0xdd>\n    2010:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n    2014:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    2018:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 201f <hierarchy_add_bounds+0xec>\n    201f:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n    2023:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    2027:\tc7 00 01 00 00 00    \tmovl   $0x1,(%rax)\n    202d:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    2031:\t4c 8b 40 18          \tmov    0x18(%rax),%r8\n    2035:\t8b 55 e0             \tmov    -0x20(%rbp),%edx\n    2038:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    203c:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    2040:\t48 8b 75 f0          \tmov    -0x10(%rbp),%rsi\n    2044:\t89 d1                \tmov    %edx,%ecx\n    2046:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 204d <hierarchy_add_bounds+0x11a>\n    204d:\t48 89 c7             \tmov    %rax,%rdi\n    2050:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2055:\t41 ff d0             \tcall   *%r8\n    2058:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n    205f:\teb 0a                \tjmp    206b <hierarchy_add_bounds+0x138>\n    2061:\t90                   \tnop\n    2062:\teb 07                \tjmp    206b <hierarchy_add_bounds+0x138>\n    2064:\t90                   \tnop\n    2065:\teb 04                \tjmp    206b <hierarchy_add_bounds+0x138>\n    2067:\t90                   \tnop\n    2068:\teb 01                \tjmp    206b <hierarchy_add_bounds+0x138>\n    206a:\t90                   \tnop\n    206b:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    206e:\tc9                   \tleave  \n    206f:\tc3                   \tret    ", "code_s": "int hierarchy_add_bounds(undefined4 *param_1, long <span class=\"supfact\">param_2</span>) {\n  undefined4 *<span class=\"supfact\">local_38</span>;\n  long <span class=\"supfact\">local_30</span>;\n  int <span class=\"supfact\">local_28</span>;\n  undefined4 *<span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_c</span> = Number;\n  <span class=\"supfact\">local_28</span> = Number;\n  <span class=\"supfact\">local_38</span> = param_1;\n  <span class=\"supfact\">local_30</span> = <span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">local_c</span> =\n      hashtab_map(*(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n                  FUN_00101cee, &<span class=\"supfact\">local_38</span>);\n  if ((((<span class=\"supfact\">local_c</span> == Number) &&\n        (<span class=\"supfact\">local_c</span> =\n             hashtab_map(*(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n                         FUN_00101aaf, &<span class=\"supfact\">local_38</span>),\n         <span class=\"supfact\">local_c</span> == Number)) &&\n       (<span class=\"supfact\">local_c</span> =\n            hashtab_map(*(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n                        FUN_00101870, &<span class=\"supfact\">local_38</span>),\n        <span class=\"supfact\">local_c</span> == Number)) &&\n      (Number < <span class=\"supfact\">local_28</span>)) {\n    if (param_1 == (undefined4 *)Number) {\n      param_1 = (undefined4 *)&sepol_compat_handle;\n    }\n    if (*(long *)(param_1 + Number) != Number) {\n      *(char **)(param_1 + Number) = String;\n      *(char **)(param_1 + Number) = String;\n      *param_1 = Number;\n      <span class=\"supfact\">local_18</span> = param_1;\n      (**(code **)(param_1 + Number))(*(undefined8 *)(param_1 + Number),\n                                      param_1, String,\n                                      <span class=\"supfact\">local_28</span>);\n    }\n    <span class=\"supfact\">local_c</span> = -Number;\n  }\n  return <span class=\"supfact\">local_c</span>;\n}", "code_t": "int hierarchy_add_bounds(sepol_handle_t *handle,\n                         policydb_t *<span class=\"supfact\">p</span>) {\n  policydb_t *<span class=\"supfact\">p</span> - local;\n  sepol_handle_t *handle - local;\n  bounds_args <span class=\"supfact\">args</span>;\n  sepol_handle_t *<span class=\"supfact\">_sepol_h</span>;\n  int <span class=\"supfact\">rc</span>;\n  <span class=\"supfact\">args</span>.numbad = Number;\n  <span class=\"supfact\">args</span>.handle = handle;\n  <span class=\"supfact\">args</span>.<span class=\"supfact\">p</span> = <span class=\"supfact\">p</span>;\n  <span class=\"supfact\">rc</span> =\n      hashtab_map(<span class=\"supfact\">p</span>->symtab[Number].table,\n                  hierarchy_add_user_callback, &<span class=\"supfact\">args</span>);\n  if ((((<span class=\"supfact\">rc</span> == Number) &&\n        (<span class=\"supfact\">rc</span> =\n             hashtab_map(<span class=\"supfact\">p</span>->symtab[Number].table,\n                         hierarchy_add_role_callback, &<span class=\"supfact\">args</span>),\n         <span class=\"supfact\">rc</span> == Number)) &&\n       (<span class=\"supfact\">rc</span> =\n            hashtab_map(<span class=\"supfact\">p</span>->symtab[Number].table,\n                        hierarchy_add_type_callback, &<span class=\"supfact\">args</span>),\n        <span class=\"supfact\">rc</span> == Number)) &&\n      (Number < <span class=\"supfact\">args</span>.numbad)) {\n    if (handle == (sepol_handle_t *)Number) {\n      handle = (sepol_handle_t *)&sepol_compat_handle;\n    }\n    if (handle->msg_callback !=\n        (_func_void_void_ptr_sepol_handle_t_ptr_char_ptr_varargs *)Number) {\n      handle->msg_fname = String;\n      handle->msg_channel = String;\n      handle->msg_level = Number;\n      (*handle->msg_callback)(handle->msg_callback_arg, handle, String,\n                              (ulong)(uint)<span class=\"supfact\">args</span>.numbad);\n    }\n    <span class=\"supfact\">rc</span> = -Number;\n  }\n  return <span class=\"supfact\">rc</span>;\n}", "var": [{"name": "param_2", "type": "__unk__", "pred_name": "__unk__", "ref_name": "p", "ref_type": "policydb_t * *"}, {"name": "local_38", "type": "__unk__", "pred_name": "__unk__", "ref_name": "args", "ref_type": "struct bounds_args { sepol_handle_t * handle; policydb_t * p; int numbad; PADDING (4); }"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_28", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_18", "type": "__unk__", "pred_name": "__unk__", "ref_name": "_sepol_h", "ref_type": "sepol_handle_t * *"}, {"name": "local_c", "type": "int", "pred_name": "rv", "ref_name": "rc", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "unix1986", "repo_name": "universe", "path": "unix1986/universe/31d3f608a76e0ab8077f1867ddbd72746e7dc432af4a1a12d83a2304f9dcf460", "path_in_repo": "unix1986/universe/book/bookcode/4/4.31/CLCriticalSection.o", "objdump": "", "code_s": "void __thiscall CLCriticalSection ~CLCriticalSection(\n    CLCriticalSection *<span class=\"supfact\">this</span>) {\n  char cVar1;\n  CLStatus local_68[Number];\n  CLStatus local_38[Number];\n  *(undefined ***)<span class=\"supfact\">this</span> = &PTR_ ~CLCriticalSection_00100280;\n  CLMutex Unlock();\n  cVar1 = CLStatus IsSuccess();\n  if (cVar1 != String) {\n    CLLogger WriteLogMsg((char *)local_38, Number);\n    CLStatus ~CLStatus(local_38);\n  }\n  CLStatus ~CLStatus(local_68);\n  return;\n}", "code_t": "void __thiscall CLCriticalSection ~CLCriticalSection(\n    CLCriticalSection *<span class=\"supfact\">this</span>, int __in_chrg) {\n  char <span class=\"supfact\">cVar1</span>;\n  CLCriticalSection *<span class=\"supfact\">this</span> - local;\n  CLStatus <span class=\"supfact\">s</span>;\n  CLStatus <span class=\"supfact\">local_38</span>[Number];\n  <span class=\"supfact\">this</span>->_vptr.CLCriticalSection =\n      (_func_int_varargs **)&PTR_ ~CLCriticalSection_00100280;\n  CLMutex Unlock();\n  <span class=\"supfact\">cVar1</span> = CLStatus IsSuccess();\n  if (<span class=\"supfact\">cVar1</span> != String) {\n    CLLogger WriteLogMsg((char *)<span class=\"supfact\">local_38</span>, Number);\n    CLStatus ~CLStatus(<span class=\"supfact\">local_38</span>);\n  }\n  CLStatus ~CLStatus(&<span class=\"supfact\">s</span>);\n  return;\n}", "var": [{"name": "this", "type": "__unk__", "pred_name": "this", "ref_name": "this", "ref_type": "CLCriticalSection * *"}], "body_in_train": false}, {"repo_owner": "DEEDS-TUD", "repo_name": "PAIN", "path": "DEEDS-TUD/PAIN/028a1e746bb178616789169fd379af7924074364a7bce7f940d7491be180e5a4", "path_in_repo": "DEEDS-TUD/PAIN/goldfish_kernel/tools/perf/util/rbtree.o", "objdump": "0000000000000c4d <rb_augment_erase_begin>:\n     c4d:\t55                   \tpush   %rbp\n     c4e:\t48 89 e5             \tmov    %rsp,%rbp\n     c51:\t48 83 ec 20          \tsub    $0x20,%rsp\n     c55:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     c59:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     c60:\t00 00 \n     c62:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     c66:\t31 c0                \txor    %eax,%eax\n     c68:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     c6c:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     c70:\t48 85 c0             \ttest   %rax,%rax\n     c73:\t75 21                \tjne    c96 <rb_augment_erase_begin+0x49>\n     c75:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     c79:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     c7d:\t48 85 c0             \ttest   %rax,%rax\n     c80:\t75 14                \tjne    c96 <rb_augment_erase_begin+0x49>\n     c82:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     c86:\t48 8b 00             \tmov    (%rax),%rax\n     c89:\t48 83 e0 fc          \tand    $0xfffffffffffffffc,%rax\n     c8d:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     c91:\te9 81 00 00 00       \tjmp    d17 <rb_augment_erase_begin+0xca>\n     c96:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     c9a:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     c9e:\t48 85 c0             \ttest   %rax,%rax\n     ca1:\t75 0e                \tjne    cb1 <rb_augment_erase_begin+0x64>\n     ca3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     ca7:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     cab:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     caf:\teb 66                \tjmp    d17 <rb_augment_erase_begin+0xca>\n     cb1:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     cb5:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n     cb9:\t48 85 c0             \ttest   %rax,%rax\n     cbc:\t75 0e                \tjne    ccc <rb_augment_erase_begin+0x7f>\n     cbe:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     cc2:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     cc6:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     cca:\teb 4b                \tjmp    d17 <rb_augment_erase_begin+0xca>\n     ccc:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     cd0:\t48 89 c7             \tmov    %rax,%rdi\n     cd3:\te8 00 00 00 00       \tcall   cd8 <rb_augment_erase_begin+0x8b>\n     cd8:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     cdc:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     ce0:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     ce4:\t48 85 c0             \ttest   %rax,%rax\n     ce7:\t74 0e                \tje     cf7 <rb_augment_erase_begin+0xaa>\n     ce9:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     ced:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     cf1:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     cf5:\teb 20                \tjmp    d17 <rb_augment_erase_begin+0xca>\n     cf7:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     cfb:\t48 8b 00             \tmov    (%rax),%rax\n     cfe:\t48 83 e0 fc          \tand    $0xfffffffffffffffc,%rax\n     d02:\t48 39 45 e8          \tcmp    %rax,-0x18(%rbp)\n     d06:\t74 0f                \tje     d17 <rb_augment_erase_begin+0xca>\n     d08:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     d0c:\t48 8b 00             \tmov    (%rax),%rax\n     d0f:\t48 83 e0 fc          \tand    $0xfffffffffffffffc,%rax\n     d13:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     d17:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     d1b:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n     d1f:\t64 48 33 14 25 28 00 \txor    %fs:0x28,%rdx\n     d26:\t00 00 \n     d28:\t74 05                \tje     d2f <rb_augment_erase_begin+0xe2>\n     d2a:\te8 00 00 00 00       \tcall   d2f <rb_augment_erase_begin+0xe2>\n     d2f:\tc9                   \tleave  \n     d30:\tc3                   \tret    ", "code_s": "ulong *rb_augment_erase_begin(ulong *<span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  ulong *<span class=\"supfact\">local_18</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  if ((<span class=\"supfact\">param_1</span>[Number] == Number) &&\n      (<span class=\"supfact\">param_1</span>[Number] == Number)) {\n    <span class=\"supfact\">local_18</span> = (ulong *)(*<span class=\"supfact\">param_1</span> & Number);\n  } else if (<span class=\"supfact\">param_1</span>[Number] == Number) {\n    <span class=\"supfact\">local_18</span> = (ulong *)<span class=\"supfact\">param_1</span>[Number];\n  } else if (<span class=\"supfact\">param_1</span>[Number] == Number) {\n    <span class=\"supfact\">local_18</span> = (ulong *)<span class=\"supfact\">param_1</span>[Number];\n  } else {\n    <span class=\"supfact\">local_18</span> = (ulong *)rb_next(<span class=\"supfact\">param_1</span>);\n    if (<span class=\"supfact\">local_18</span>[Number] == Number) {\n      if (<span class=\"supfact\">param_1</span> !=\n          (ulong *)(*<span class=\"supfact\">local_18</span> & Number)) {\n        <span class=\"supfact\">local_18</span> =\n            (ulong *)(*<span class=\"supfact\">local_18</span> & Number);\n      }\n    } else {\n      <span class=\"supfact\">local_18</span> = (ulong *)<span class=\"supfact\">local_18</span>[Number];\n    }\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return <span class=\"supfact\">local_18</span>;\n}", "code_t": "rb_node *rb_augment_erase_begin(rb_node *<span class=\"supfact\">node</span>) {\n  long lVar1;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  rb_node *<span class=\"supfact\">node</span> - local;\n  rb_node *<span class=\"supfact\">deepest</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  if ((<span class=\"supfact\">node</span>->rb_right == (rb_node *)Number) &&\n      (<span class=\"supfact\">node</span>->rb_left == (rb_node *)Number)) {\n    <span class=\"supfact\">deepest</span> =\n        (rb_node *)(<span class=\"supfact\">node</span>->rb_parent_color & Number);\n  } else if (<span class=\"supfact\">node</span>->rb_right == (rb_node *)Number) {\n    <span class=\"supfact\">deepest</span> = <span class=\"supfact\">node</span>->rb_left;\n  } else if (<span class=\"supfact\">node</span>->rb_left == (rb_node *)Number) {\n    <span class=\"supfact\">deepest</span> = <span class=\"supfact\">node</span>->rb_right;\n  } else {\n    <span class=\"supfact\">deepest</span> = rb_next(<span class=\"supfact\">node</span>);\n    if (<span class=\"supfact\">deepest</span>->rb_right == (rb_node *)Number) {\n      if (<span class=\"supfact\">node</span> !=\n          (rb_node *)(<span class=\"supfact\">deepest</span>->rb_parent_color & Number)) {\n        <span class=\"supfact\">deepest</span> =\n            (rb_node *)(<span class=\"supfact\">deepest</span>->rb_parent_color & Number);\n      }\n    } else {\n      <span class=\"supfact\">deepest</span> = <span class=\"supfact\">deepest</span>->rb_right;\n    }\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return <span class=\"supfact\">deepest</span>;\n}", "var": [{"name": "param_1", "type": "rb_node * *", "pred_name": "node", "ref_name": "node", "ref_type": "rb_node * *"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_18", "type": "rb_node * *", "pred_name": "__unk__", "ref_name": "deepest", "ref_type": "rb_node * *"}], "body_in_train": true}, {"repo_owner": "ErikPshat", "repo_name": "sign_np-hykem", "path": "ErikPshat/sign_np-hykem/e718ee2d111cff3ef342760f714ab2b1ae9cb48ee76a4c0e7b7c46c7cb72a75d", "path_in_repo": "ErikPshat/sign_np-hykem//libkirk/ec.o", "objdump": "0000000000000fd0 <ecdsa_set_priv>:\n     fd0:\t55                   \tpush   %rbp\n     fd1:\t48 89 e5             \tmov    %rsp,%rbp\n     fd4:\t48 83 ec 30          \tsub    $0x30,%rsp\n     fd8:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n     fdc:\tc6 45 e0 00          \tmovb   $0x0,-0x20(%rbp)\n     fe0:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n     fe4:\t48 83 c0 01          \tadd    $0x1,%rax\n     fe8:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n     fec:\tba 14 00 00 00       \tmov    $0x14,%edx\n     ff1:\t48 89 ce             \tmov    %rcx,%rsi\n     ff4:\t48 89 c7             \tmov    %rax,%rdi\n     ff7:\te8 00 00 00 00       \tcall   ffc <ecdsa_set_priv+0x2c>\n     ffc:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n    1000:\tba 15 00 00 00       \tmov    $0x15,%edx\n    1005:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    100a:\t48 89 c7             \tmov    %rax,%rdi\n    100d:\te8 00 00 00 00       \tcall   1012 <ecdsa_set_priv+0x42>\n    1012:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1016:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    101a:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 1021 <ecdsa_set_priv+0x51>\n    1021:\t48 89 15 00 00 00 00 \tmov    %rdx,0x0(%rip)        # 1028 <ecdsa_set_priv+0x58>\n    1028:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n    102b:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 1031 <ecdsa_set_priv+0x61>\n    1031:\t0f b6 45 f4          \tmovzbl -0xc(%rbp),%eax\n    1035:\t88 05 00 00 00 00    \tmov    %al,0x0(%rip)        # 103b <ecdsa_set_priv+0x6b>\n    103b:\t90                   \tnop\n    103c:\tc9                   \tleave  \n    103d:\tc3                   \tret    ", "code_s": "void ecdsa_set_priv(void *<span class=\"supfact\">param_1</span>) {\n  undefined <span class=\"supfact\">local_28</span>;\n  undefined7 <span class=\"supfact\">uStack_27</span>;\n  undefined8 <span class=\"supfact\">local_20</span>;\n  undefined4 <span class=\"supfact\">local_18</span>;\n  undefined <span class=\"supfact\">local_14</span>;\n  <span class=\"supfact\">local_28</span> = Number;\n  memcpy(&<span class=\"supfact\">uStack_27</span>, <span class=\"supfact\">param_1</span>, Number);\n  bn_reduce(&<span class=\"supfact\">local_28</span>, ec_N, Number);\n  ec_k._1_7_ = <span class=\"supfact\">uStack_27</span>;\n  ec_k[Number] = <span class=\"supfact\">local_28</span>;\n  ec_k._8_8_ = <span class=\"supfact\">local_20</span>;\n  ec_k._16_4_ = <span class=\"supfact\">local_18</span>;\n  ec_k[Number] = <span class=\"supfact\">local_14</span>;\n  return;\n}", "code_t": "void ecdsa_set_priv(u8 *<span class=\"supfact\">ink</span>) {\n  undefined8 uVar1;\n  u8 *<span class=\"supfact\">ink</span> - local;\n  u8 <span class=\"supfact\">k</span>[Number];\n  <span class=\"supfact\">k</span>[Number] = String;\n  memcpy(<span class=\"supfact\">k</span> + Number, <span class=\"supfact\">ink</span>, Number);\n  bn_reduce(<span class=\"supfact\">k</span>, ec_N, Number);\n  uVar1._1_1_ = <span class=\"supfact\">k</span>[Number];\n  uVar1._2_1_ = <span class=\"supfact\">k</span>[Number];\n  uVar1._3_1_ = <span class=\"supfact\">k</span>[Number];\n  uVar1._4_1_ = <span class=\"supfact\">k</span>[Number];\n  uVar1._5_1_ = <span class=\"supfact\">k</span>[Number];\n  uVar1._6_1_ = <span class=\"supfact\">k</span>[Number];\n  uVar1._7_1_ = <span class=\"supfact\">k</span>[Number];\n  uVar1._0_1_ = <span class=\"supfact\">k</span>[Number];\n  ec_k[Number] = (u8)uVar1;\n  ec_k[Number] = SUB81(uVar1, Number);\n  ec_k[Number] = SUB81(uVar1, Number);\n  ec_k[Number] = SUB81(uVar1, Number);\n  ec_k[Number] = SUB81(uVar1, Number);\n  ec_k[Number] = SUB81(uVar1, Number);\n  ec_k[Number] = SUB81(uVar1, Number);\n  ec_k[Number] = SUB81(uVar1, Number);\n  ec_k[Number] = <span class=\"supfact\">k</span>[Number];\n  ec_k[Number] = <span class=\"supfact\">k</span>[Number];\n  ec_k[Number] = <span class=\"supfact\">k</span>[Number];\n  ec_k[Number] = <span class=\"supfact\">k</span>[Number];\n  ec_k[Number] = <span class=\"supfact\">k</span>[Number];\n  ec_k[Number] = <span class=\"supfact\">k</span>[Number];\n  ec_k[Number] = <span class=\"supfact\">k</span>[Number];\n  ec_k[Number] = <span class=\"supfact\">k</span>[Number];\n  ec_k[Number] = <span class=\"supfact\">k</span>[Number];\n  ec_k[Number] = <span class=\"supfact\">k</span>[Number];\n  ec_k[Number] = <span class=\"supfact\">k</span>[Number];\n  ec_k[Number] = <span class=\"supfact\">k</span>[Number];\n  ec_k[Number] = <span class=\"supfact\">k</span>[Number];\n  return;\n}", "var": [{"name": "param_1", "type": "uchar * *", "pred_name": "digest", "ref_name": "ink", "ref_type": "u8 * *"}, {"name": "local_28", "type": "__unk__", "pred_name": "ctx", "ref_name": "k", "ref_type": "u8[21][21]"}, {"name": "uStack_27", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_20", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_18", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_14", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "abgoyal", "repo_name": "TCL_A986", "path": "abgoyal/TCL_A986/28c23fa3e3c70c28c2424d93fd6eeeba720708377be6bea395743668e1cc570f", "path_in_repo": "abgoyal/TCL_A986/external/zlib/contrib/puff/puff", "objdump": "", "code_s": "void *realloc(void *__ptr, size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_realloc_00405048)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *realloc(void *__ptr, size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_realloc_00405048)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": true}, {"repo_owner": "abgoyal", "repo_name": "TCL_A986", "path": "abgoyal/TCL_A986/28c23fa3e3c70c28c2424d93fd6eeeba720708377be6bea395743668e1cc570f", "path_in_repo": "abgoyal/TCL_A986/external/zlib/contrib/puff/puff", "objdump": "", "code_s": "void *realloc(void *__ptr, size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_realloc_00405048)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *realloc(void *__ptr, size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_realloc_00405048)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": true}, {"repo_owner": "android-iot", "repo_name": "gnu", "path": "android-iot/gnu/3f90ae4cf207a4a7869a2711484445fe3f0f69ff1d6319775d69d1e6d03768b5", "path_in_repo": "android-iot/gnu/alarm/usr/share/doc/xz/examples/01_compress_easy", "objdump": "", "code_s": "int feof(FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_feof_00404050)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int feof(FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_feof_00404050)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "openamedia", "repo_name": "ffmpeg-android", "path": "openamedia/ffmpeg-android/0da3724bcc027775e1ce96fc6a0712e25f89da43f4b9b9b72f27dec35d583815", "path_in_repo": "openamedia/ffmpeg-android//libswresample/swresample.o", "objdump": "00000000000004a1 <swr_init>:\n     4a1:\t41 54                \tpush   %r12\n     4a3:\t55                   \tpush   %rbp\n     4a4:\t53                   \tpush   %rbx\n     4a5:\t48 81 ec 20 08 00 00 \tsub    $0x820,%rsp\n     4ac:\t48 89 7c 24 08       \tmov    %rdi,0x8(%rsp)\n     4b1:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     4b6:\t48 89 c7             \tmov    %rax,%rdi\n     4b9:\te8 10 fe ff ff       \tcall   2ce <clear_context>\n     4be:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     4c3:\t8b 40 18             \tmov    0x18(%rax),%eax\n     4c6:\t83 f8 09             \tcmp    $0x9,%eax\n     4c9:\t7e 30                \tjle    4fb <swr_init+0x5a>\n     4cb:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     4d0:\t8b 50 18             \tmov    0x18(%rax),%edx\n     4d3:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     4d8:\t89 d1                \tmov    %edx,%ecx\n     4da:\tba 00 00 00 00       \tmov    $0x0,%edx\n     4df:\tbe 10 00 00 00       \tmov    $0x10,%esi\n     4e4:\t48 89 c7             \tmov    %rax,%rdi\n     4e7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     4ec:\te8 00 00 00 00       \tcall   4f1 <swr_init+0x50>\n     4f1:\tb8 ea ff ff ff       \tmov    $0xffffffea,%eax\n     4f6:\te9 bc 0c 00 00       \tjmp    11b7 <swr_init+0xd16>\n     4fb:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     500:\t8b 40 20             \tmov    0x20(%rax),%eax\n     503:\t83 f8 09             \tcmp    $0x9,%eax\n     506:\t7e 30                \tjle    538 <swr_init+0x97>\n     508:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     50d:\t8b 50 20             \tmov    0x20(%rax),%edx\n     510:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     515:\t89 d1                \tmov    %edx,%ecx\n     517:\tba 00 00 00 00       \tmov    $0x0,%edx\n     51c:\tbe 10 00 00 00       \tmov    $0x10,%esi\n     521:\t48 89 c7             \tmov    %rax,%rdi\n     524:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     529:\te8 00 00 00 00       \tcall   52e <swr_init+0x8d>\n     52e:\tb8 ea ff ff ff       \tmov    $0xffffffea,%eax\n     533:\te9 7f 0c 00 00       \tjmp    11b7 <swr_init+0xd16>\n     538:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     53d:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     541:\t48 89 c7             \tmov    %rax,%rdi\n     544:\te8 00 00 00 00       \tcall   549 <swr_init+0xa8>\n     549:\t83 f8 20             \tcmp    $0x20,%eax\n     54c:\t7e 35                \tjle    583 <swr_init+0xe2>\n     54e:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     553:\t48 8b 50 28          \tmov    0x28(%rax),%rdx\n     557:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     55c:\t48 89 d1             \tmov    %rdx,%rcx\n     55f:\tba 00 00 00 00       \tmov    $0x0,%edx\n     564:\tbe 18 00 00 00       \tmov    $0x18,%esi\n     569:\t48 89 c7             \tmov    %rax,%rdi\n     56c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     571:\te8 00 00 00 00       \tcall   576 <swr_init+0xd5>\n     576:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     57b:\t48 c7 40 28 00 00 00 \tmovq   $0x0,0x28(%rax)\n     582:\t00 \n     583:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     588:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n     58c:\t48 89 c7             \tmov    %rax,%rdi\n     58f:\te8 00 00 00 00       \tcall   594 <swr_init+0xf3>\n     594:\t83 f8 20             \tcmp    $0x20,%eax\n     597:\t7e 35                \tjle    5ce <swr_init+0x12d>\n     599:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     59e:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n     5a2:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     5a7:\t48 89 d1             \tmov    %rdx,%rcx\n     5aa:\tba 00 00 00 00       \tmov    $0x0,%edx\n     5af:\tbe 18 00 00 00       \tmov    $0x18,%esi\n     5b4:\t48 89 c7             \tmov    %rax,%rdi\n     5b7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     5bc:\te8 00 00 00 00       \tcall   5c1 <swr_init+0x120>\n     5c1:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     5c6:\t48 c7 40 30 00 00 00 \tmovq   $0x0,0x30(%rax)\n     5cd:\t00 \n     5ce:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     5d3:\t8b 40 6c             \tmov    0x6c(%rax),%eax\n     5d6:\t85 c0                \ttest   %eax,%eax\n     5d8:\t75 1f                \tjne    5f9 <swr_init+0x158>\n     5da:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     5df:\t48 c7 80 c8 20 00 00 \tmovq   $0x0,0x20c8(%rax)\n     5e6:\t00 00 00 00 \n     5ea:\t90                   \tnop\n     5eb:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     5f0:\t8b 40 68             \tmov    0x68(%rax),%eax\n     5f3:\t85 c0                \ttest   %eax,%eax\n     5f5:\t75 3b                \tjne    632 <swr_init+0x191>\n     5f7:\teb 26                \tjmp    61f <swr_init+0x17e>\n     5f9:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     5fe:\tba 00 00 00 00       \tmov    $0x0,%edx\n     603:\tbe 10 00 00 00       \tmov    $0x10,%esi\n     608:\t48 89 c7             \tmov    %rax,%rdi\n     60b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     610:\te8 00 00 00 00       \tcall   615 <swr_init+0x174>\n     615:\tb8 ea ff ff ff       \tmov    $0xffffffea,%eax\n     61a:\te9 98 0b 00 00       \tjmp    11b7 <swr_init+0xd16>\n     61f:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     624:\t8b 90 88 18 00 00    \tmov    0x1888(%rax),%edx\n     62a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     62f:\t89 50 68             \tmov    %edx,0x68(%rax)\n     632:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     637:\t8b 40 68             \tmov    0x68(%rax),%eax\n     63a:\t85 c0                \ttest   %eax,%eax\n     63c:\t74 54                \tje     692 <swr_init+0x1f1>\n     63e:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     643:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     647:\t48 85 c0             \ttest   %rax,%rax\n     64a:\t74 46                \tje     692 <swr_init+0x1f1>\n     64c:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     651:\t8b 58 68             \tmov    0x68(%rax),%ebx\n     654:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     659:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     65d:\t48 89 c7             \tmov    %rax,%rdi\n     660:\te8 00 00 00 00       \tcall   665 <swr_init+0x1c4>\n     665:\t39 c3                \tcmp    %eax,%ebx\n     667:\t74 29                \tje     692 <swr_init+0x1f1>\n     669:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     66e:\tba 00 00 00 00       \tmov    $0x0,%edx\n     673:\tbe 18 00 00 00       \tmov    $0x18,%esi\n     678:\t48 89 c7             \tmov    %rax,%rdi\n     67b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     680:\te8 00 00 00 00       \tcall   685 <swr_init+0x1e4>\n     685:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     68a:\t48 c7 40 28 00 00 00 \tmovq   $0x0,0x28(%rax)\n     691:\t00 \n     692:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     697:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     69b:\t48 85 c0             \ttest   %rax,%rax\n     69e:\t75 18                \tjne    6b8 <swr_init+0x217>\n     6a0:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     6a5:\t8b 40 68             \tmov    0x68(%rax),%eax\n     6a8:\t89 c7                \tmov    %eax,%edi\n     6aa:\te8 00 00 00 00       \tcall   6af <swr_init+0x20e>\n     6af:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     6b4:\t48 89 42 28          \tmov    %rax,0x28(%rdx)\n     6b8:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     6bd:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n     6c1:\t48 85 c0             \ttest   %rax,%rax\n     6c4:\t75 1b                \tjne    6e1 <swr_init+0x240>\n     6c6:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     6cb:\t8b 80 08 1d 00 00    \tmov    0x1d08(%rax),%eax\n     6d1:\t89 c7                \tmov    %eax,%edi\n     6d3:\te8 00 00 00 00       \tcall   6d8 <swr_init+0x237>\n     6d8:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     6dd:\t48 89 42 30          \tmov    %rax,0x30(%rdx)\n     6e1:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     6e6:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n     6ea:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     6ef:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     6f3:\t48 39 c2             \tcmp    %rax,%rdx\n     6f6:\t75 33                \tjne    72b <swr_init+0x28a>\n     6f8:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     6fd:\tf3 0f 10 40 50       \tmovss  0x50(%rax),%xmm0\n     702:\tf3 0f 10 0d 00 00 00 \tmovss  0x0(%rip),%xmm1        # 70a <swr_init+0x269>\n     709:\t00 \n     70a:\t0f 2e c1             \tucomiss %xmm1,%xmm0\n     70d:\t7a 1c                \tjp     72b <swr_init+0x28a>\n     70f:\tf3 0f 10 0d 00 00 00 \tmovss  0x0(%rip),%xmm1        # 717 <swr_init+0x276>\n     716:\t00 \n     717:\t0f 2e c1             \tucomiss %xmm1,%xmm0\n     71a:\t75 0f                \tjne    72b <swr_init+0x28a>\n     71c:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     721:\t8b 80 78 17 00 00    \tmov    0x1778(%rax),%eax\n     727:\t85 c0                \ttest   %eax,%eax\n     729:\t74 07                \tje     732 <swr_init+0x291>\n     72b:\tba 01 00 00 00       \tmov    $0x1,%edx\n     730:\teb 05                \tjmp    737 <swr_init+0x296>\n     732:\tba 00 00 00 00       \tmov    $0x0,%edx\n     737:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     73c:\t89 90 74 17 00 00    \tmov    %edx,0x1774(%rax)\n     742:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     747:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n     74a:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n     74d:\t0f 85 c1 00 00 00    \tjne    814 <swr_init+0x373>\n     753:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     758:\t8b 40 18             \tmov    0x18(%rax),%eax\n     75b:\t89 c7                \tmov    %eax,%edi\n     75d:\te8 00 00 00 00       \tcall   762 <swr_init+0x2c1>\n     762:\t83 f8 06             \tcmp    $0x6,%eax\n     765:\t7f 11                \tjg     778 <swr_init+0x2d7>\n     767:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     76c:\tc7 40 1c 06 00 00 00 \tmovl   $0x6,0x1c(%rax)\n     773:\te9 9c 00 00 00       \tjmp    814 <swr_init+0x373>\n     778:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     77d:\t8b 40 18             \tmov    0x18(%rax),%eax\n     780:\t89 c7                \tmov    %eax,%edi\n     782:\te8 00 00 00 00       \tcall   787 <swr_init+0x2e6>\n     787:\t83 f8 07             \tcmp    $0x7,%eax\n     78a:\t75 3e                \tjne    7ca <swr_init+0x329>\n     78c:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     791:\t8b 40 20             \tmov    0x20(%rax),%eax\n     794:\t89 c7                \tmov    %eax,%edi\n     796:\te8 00 00 00 00       \tcall   79b <swr_init+0x2fa>\n     79b:\t83 f8 07             \tcmp    $0x7,%eax\n     79e:\t75 2a                \tjne    7ca <swr_init+0x329>\n     7a0:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     7a5:\t8b 80 74 17 00 00    \tmov    0x1774(%rax),%eax\n     7ab:\t85 c0                \ttest   %eax,%eax\n     7ad:\t75 1b                \tjne    7ca <swr_init+0x329>\n     7af:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     7b4:\t8b 40 6c             \tmov    0x6c(%rax),%eax\n     7b7:\t83 f8 01             \tcmp    $0x1,%eax\n     7ba:\t74 0e                \tje     7ca <swr_init+0x329>\n     7bc:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     7c1:\tc7 40 1c 07 00 00 00 \tmovl   $0x7,0x1c(%rax)\n     7c8:\teb 4a                \tjmp    814 <swr_init+0x373>\n     7ca:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     7cf:\t8b 40 18             \tmov    0x18(%rax),%eax\n     7d2:\t89 c7                \tmov    %eax,%edi\n     7d4:\te8 00 00 00 00       \tcall   7d9 <swr_init+0x338>\n     7d9:\t83 f8 08             \tcmp    $0x8,%eax\n     7dc:\t7f 0e                \tjg     7ec <swr_init+0x34b>\n     7de:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     7e3:\tc7 40 1c 08 00 00 00 \tmovl   $0x8,0x1c(%rax)\n     7ea:\teb 28                \tjmp    814 <swr_init+0x373>\n     7ec:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     7f1:\tba 00 00 00 00       \tmov    $0x0,%edx\n     7f6:\tbe 30 00 00 00       \tmov    $0x30,%esi\n     7fb:\t48 89 c7             \tmov    %rax,%rdi\n     7fe:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     803:\te8 00 00 00 00       \tcall   808 <swr_init+0x367>\n     808:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     80d:\tc7 40 1c 09 00 00 00 \tmovl   $0x9,0x1c(%rax)\n     814:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     819:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n     81c:\t83 f8 06             \tcmp    $0x6,%eax\n     81f:\t74 62                \tje     883 <swr_init+0x3e2>\n     821:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     826:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n     829:\t83 f8 07             \tcmp    $0x7,%eax\n     82c:\t74 55                \tje     883 <swr_init+0x3e2>\n     82e:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     833:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n     836:\t83 f8 08             \tcmp    $0x8,%eax\n     839:\t74 48                \tje     883 <swr_init+0x3e2>\n     83b:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     840:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n     843:\t83 f8 09             \tcmp    $0x9,%eax\n     846:\t74 3b                \tje     883 <swr_init+0x3e2>\n     848:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     84d:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n     850:\t89 c7                \tmov    %eax,%edi\n     852:\te8 00 00 00 00       \tcall   857 <swr_init+0x3b6>\n     857:\t48 89 c2             \tmov    %rax,%rdx\n     85a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     85f:\t48 89 d1             \tmov    %rdx,%rcx\n     862:\tba 00 00 00 00       \tmov    $0x0,%edx\n     867:\tbe 10 00 00 00       \tmov    $0x10,%esi\n     86c:\t48 89 c7             \tmov    %rax,%rdi\n     86f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     874:\te8 00 00 00 00       \tcall   879 <swr_init+0x3d8>\n     879:\tb8 ea ff ff ff       \tmov    $0xffffffea,%eax\n     87e:\te9 34 09 00 00       \tjmp    11b7 <swr_init+0xd16>\n     883:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     888:\t8b 40 18             \tmov    0x18(%rax),%eax\n     88b:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     890:\t48 81 c2 80 17 00 00 \tadd    $0x1780,%rdx\n     897:\t89 c6                \tmov    %eax,%esi\n     899:\t48 89 d7             \tmov    %rdx,%rdi\n     89c:\te8 a5 f9 ff ff       \tcall   246 <set_audiodata_fmt>\n     8a1:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     8a6:\t8b 40 20             \tmov    0x20(%rax),%eax\n     8a9:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     8ae:\t48 81 c2 00 1c 00 00 \tadd    $0x1c00,%rdx\n     8b5:\t89 c6                \tmov    %eax,%esi\n     8b7:\t48 89 d7             \tmov    %rdx,%rdi\n     8ba:\te8 87 f9 ff ff       \tcall   246 <set_audiodata_fmt>\n     8bf:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     8c4:\t48 8b 80 68 17 00 00 \tmov    0x1768(%rax),%rax\n     8cb:\t48 ba 00 00 00 00 00 \tmovabs $0x8000000000000000,%rdx\n     8d2:\t00 00 80 \n     8d5:\t48 39 d0             \tcmp    %rdx,%rax\n     8d8:\t0f 84 8a 00 00 00    \tje     968 <swr_init+0x4c7>\n     8de:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     8e3:\tf3 0f 10 80 64 17 00 \tmovss  0x1764(%rax),%xmm0\n     8ea:\t00 \n     8eb:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n     8ef:\t0f 2e c1             \tucomiss %xmm1,%xmm0\n     8f2:\t7a 34                \tjp     928 <swr_init+0x487>\n     8f4:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n     8f8:\t0f 2e c1             \tucomiss %xmm1,%xmm0\n     8fb:\t75 2b                \tjne    928 <swr_init+0x487>\n     8fd:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     902:\tf3 0f 10 80 54 17 00 \tmovss  0x1754(%rax),%xmm0\n     909:\t00 \n     90a:\t0f 2f 05 00 00 00 00 \tcomiss 0x0(%rip),%xmm0        # 911 <swr_init+0x470>\n     911:\t72 15                \tjb     928 <swr_init+0x487>\n     913:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     918:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 920 <swr_init+0x47f>\n     91f:\t00 \n     920:\tf3 0f 11 80 64 17 00 \tmovss  %xmm0,0x1764(%rax)\n     927:\t00 \n     928:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     92d:\t48 8b 90 68 17 00 00 \tmov    0x1768(%rax),%rdx\n     934:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     939:\t8b 40 3c             \tmov    0x3c(%rax),%eax\n     93c:\t48 98                \tcltq   \n     93e:\t48 0f af d0          \timul   %rax,%rdx\n     942:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     947:\t48 89 90 90 20 00 00 \tmov    %rdx,0x2090(%rax)\n     94e:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     953:\t48 8b 90 90 20 00 00 \tmov    0x2090(%rax),%rdx\n     95a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     95f:\t48 89 90 98 20 00 00 \tmov    %rdx,0x2098(%rax)\n     966:\teb 16                \tjmp    97e <swr_init+0x4dd>\n     968:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     96d:\t48 bb 00 00 00 00 00 \tmovabs $0x8000000000000000,%rbx\n     974:\t00 00 80 \n     977:\t48 89 98 98 20 00 00 \tmov    %rbx,0x2098(%rax)\n     97e:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     983:\tf3 0f 10 80 64 17 00 \tmovss  0x1764(%rax),%xmm0\n     98a:\t00 \n     98b:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n     98f:\t0f 2e c1             \tucomiss %xmm1,%xmm0\n     992:\t7a 09                \tjp     99d <swr_init+0x4fc>\n     994:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n     998:\t0f 2e c1             \tucomiss %xmm1,%xmm0\n     99b:\t74 78                \tje     a15 <swr_init+0x574>\n     99d:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     9a2:\tf3 0f 10 80 54 17 00 \tmovss  0x1754(%rax),%xmm0\n     9a9:\t00 \n     9aa:\t0f 2f 05 00 00 00 00 \tcomiss 0x0(%rip),%xmm0        # 9b1 <swr_init+0x510>\n     9b1:\t72 15                \tjb     9c8 <swr_init+0x527>\n     9b3:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     9b8:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # 9c0 <swr_init+0x51f>\n     9bf:\t00 \n     9c0:\tf3 0f 11 80 54 17 00 \tmovss  %xmm0,0x1754(%rax)\n     9c7:\t00 \n     9c8:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     9cd:\tf3 0f 10 80 64 17 00 \tmovss  0x1764(%rax),%xmm0\n     9d4:\t00 \n     9d5:\tf3 0f 5a c0          \tcvtss2sd %xmm0,%xmm0\n     9d9:\t66 0f 2f 05 00 00 00 \tcomisd 0x0(%rip),%xmm0        # 9e1 <swr_init+0x540>\n     9e0:\t00 \n     9e1:\t76 32                \tjbe    a15 <swr_init+0x574>\n     9e3:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     9e8:\tf3 0f 10 80 64 17 00 \tmovss  0x1764(%rax),%xmm0\n     9ef:\t00 \n     9f0:\tf3 0f 5a c0          \tcvtss2sd %xmm0,%xmm0\n     9f4:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     9f9:\t8b 40 38             \tmov    0x38(%rax),%eax\n     9fc:\tf2 0f 2a c8          \tcvtsi2sd %eax,%xmm1\n     a00:\tf2 0f 5e c1          \tdivsd  %xmm1,%xmm0\n     a04:\tf2 0f 5a c0          \tcvtsd2ss %xmm0,%xmm0\n     a08:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     a0d:\tf3 0f 11 80 60 17 00 \tmovss  %xmm0,0x1760(%rax)\n     a14:\t00 \n     a15:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     a1a:\t8b 50 3c             \tmov    0x3c(%rax),%edx\n     a1d:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     a22:\t8b 40 38             \tmov    0x38(%rax),%eax\n     a25:\t39 c2                \tcmp    %eax,%edx\n     a27:\t75 13                \tjne    a3c <swr_init+0x59b>\n     a29:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     a2e:\t8b 40 40             \tmov    0x40(%rax),%eax\n     a31:\t83 e0 01             \tand    $0x1,%eax\n     a34:\t85 c0                \ttest   %eax,%eax\n     a36:\t0f 84 c0 00 00 00    \tje     afc <swr_init+0x65b>\n     a3c:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     a41:\t48 8b 80 c8 20 00 00 \tmov    0x20c8(%rax),%rax\n     a48:\t4c 8b 10             \tmov    (%rax),%r10\n     a4b:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     a50:\t8b 98 50 17 00 00    \tmov    0x1750(%rax),%ebx\n     a56:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     a5b:\tf2 0f 10 80 48 17 00 \tmovsd  0x1748(%rax),%xmm0\n     a62:\t00 \n     a63:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     a68:\t44 8b 98 44 17 00 00 \tmov    0x1744(%rax),%r11d\n     a6f:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     a74:\t44 8b 88 40 17 00 00 \tmov    0x1740(%rax),%r9d\n     a7b:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     a80:\t44 8b 40 1c          \tmov    0x1c(%rax),%r8d\n     a84:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     a89:\t48 8b b8 38 17 00 00 \tmov    0x1738(%rax),%rdi\n     a90:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     a95:\t44 8b a0 30 17 00 00 \tmov    0x1730(%rax),%r12d\n     a9c:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     aa1:\t8b a8 2c 17 00 00    \tmov    0x172c(%rax),%ebp\n     aa7:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     aac:\t8b 88 28 17 00 00    \tmov    0x1728(%rax),%ecx\n     ab2:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     ab7:\t8b 50 38             \tmov    0x38(%rax),%edx\n     aba:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     abf:\t8b 70 3c             \tmov    0x3c(%rax),%esi\n     ac2:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     ac7:\t48 8b 80 c0 20 00 00 \tmov    0x20c0(%rax),%rax\n     ace:\t53                   \tpush   %rbx\n     acf:\t41 53                \tpush   %r11\n     ad1:\t41 51                \tpush   %r9\n     ad3:\t41 50                \tpush   %r8\n     ad5:\t66 0f 28 c8          \tmovapd %xmm0,%xmm1\n     ad9:\t66 48 0f 6e c7       \tmovq   %rdi,%xmm0\n     ade:\t45 89 e1             \tmov    %r12d,%r9d\n     ae1:\t41 89 e8             \tmov    %ebp,%r8d\n     ae4:\t48 89 c7             \tmov    %rax,%rdi\n     ae7:\t41 ff d2             \tcall   *%r10\n     aea:\t48 83 c4 20          \tadd    $0x20,%rsp\n     aee:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     af3:\t48 89 82 c0 20 00 00 \tmov    %rax,0x20c0(%rdx)\n     afa:\teb 21                \tjmp    b1d <swr_init+0x67c>\n     afc:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     b01:\t48 8b 80 c8 20 00 00 \tmov    0x20c8(%rax),%rax\n     b08:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     b0c:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     b11:\t48 81 c2 c0 20 00 00 \tadd    $0x20c0,%rdx\n     b18:\t48 89 d7             \tmov    %rdx,%rdi\n     b1b:\tff d0                \tcall   *%rax\n     b1d:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     b22:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n     b25:\t83 f8 06             \tcmp    $0x6,%eax\n     b28:\t74 5e                \tje     b88 <swr_init+0x6e7>\n     b2a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     b2f:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n     b32:\t83 f8 07             \tcmp    $0x7,%eax\n     b35:\t74 51                \tje     b88 <swr_init+0x6e7>\n     b37:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     b3c:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n     b3f:\t83 f8 08             \tcmp    $0x8,%eax\n     b42:\t74 44                \tje     b88 <swr_init+0x6e7>\n     b44:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     b49:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n     b4c:\t83 f8 09             \tcmp    $0x9,%eax\n     b4f:\t74 37                \tje     b88 <swr_init+0x6e7>\n     b51:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     b56:\t48 8b 80 c0 20 00 00 \tmov    0x20c0(%rax),%rax\n     b5d:\t48 85 c0             \ttest   %rax,%rax\n     b60:\t74 26                \tje     b88 <swr_init+0x6e7>\n     b62:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     b67:\tba 00 00 00 00       \tmov    $0x0,%edx\n     b6c:\tbe 10 00 00 00       \tmov    $0x10,%esi\n     b71:\t48 89 c7             \tmov    %rax,%rdi\n     b74:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     b79:\te8 00 00 00 00       \tcall   b7e <swr_init+0x6dd>\n     b7e:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n     b83:\te9 2f 06 00 00       \tjmp    11b7 <swr_init+0xd16>\n     b88:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     b8d:\t8b 80 88 18 00 00    \tmov    0x1888(%rax),%eax\n     b93:\t85 c0                \ttest   %eax,%eax\n     b95:\t75 1c                \tjne    bb3 <swr_init+0x712>\n     b97:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     b9c:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     ba0:\t48 89 c7             \tmov    %rax,%rdi\n     ba3:\te8 00 00 00 00       \tcall   ba8 <swr_init+0x707>\n     ba8:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     bad:\t89 82 88 18 00 00    \tmov    %eax,0x1888(%rdx)\n     bb3:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     bb8:\t8b 40 68             \tmov    0x68(%rax),%eax\n     bbb:\t85 c0                \ttest   %eax,%eax\n     bbd:\t75 13                \tjne    bd2 <swr_init+0x731>\n     bbf:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     bc4:\t8b 90 88 18 00 00    \tmov    0x1888(%rax),%edx\n     bca:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     bcf:\t89 50 68             \tmov    %edx,0x68(%rax)\n     bd2:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     bd7:\t8b 80 08 1d 00 00    \tmov    0x1d08(%rax),%eax\n     bdd:\t85 c0                \ttest   %eax,%eax\n     bdf:\t75 1c                \tjne    bfd <swr_init+0x75c>\n     be1:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     be6:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n     bea:\t48 89 c7             \tmov    %rax,%rdi\n     bed:\te8 00 00 00 00       \tcall   bf2 <swr_init+0x751>\n     bf2:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     bf7:\t89 82 08 1d 00 00    \tmov    %eax,0x1d08(%rdx)\n     bfd:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     c02:\t8b 80 88 18 00 00    \tmov    0x1888(%rax),%eax\n     c08:\t85 c0                \ttest   %eax,%eax\n     c0a:\t75 63                \tjne    c6f <swr_init+0x7ce>\n     c0c:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     c11:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     c15:\t48 85 c0             \ttest   %rax,%rax\n     c18:\t74 2f                \tje     c49 <swr_init+0x7a8>\n     c1a:\t41 b9 72 01 00 00    \tmov    $0x172,%r9d\n     c20:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n     c26:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n     c2b:\tba 00 00 00 00       \tmov    $0x0,%edx\n     c30:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     c35:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     c3a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     c3f:\te8 00 00 00 00       \tcall   c44 <swr_init+0x7a3>\n     c44:\te8 00 00 00 00       \tcall   c49 <swr_init+0x7a8>\n     c49:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     c4e:\tba 00 00 00 00       \tmov    $0x0,%edx\n     c53:\tbe 10 00 00 00       \tmov    $0x10,%esi\n     c58:\t48 89 c7             \tmov    %rax,%rdi\n     c5b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     c60:\te8 00 00 00 00       \tcall   c65 <swr_init+0x7c4>\n     c65:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n     c6a:\te9 48 05 00 00       \tjmp    11b7 <swr_init+0xd16>\n     c6f:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     c74:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n     c78:\t48 85 c0             \ttest   %rax,%rax\n     c7b:\t74 12                \tje     c8f <swr_init+0x7ee>\n     c7d:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     c82:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     c86:\t48 85 c0             \ttest   %rax,%rax\n     c89:\t0f 85 bc 00 00 00    \tjne    d4b <swr_init+0x8aa>\n     c8f:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     c94:\t8b 50 68             \tmov    0x68(%rax),%edx\n     c97:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     c9c:\t8b 80 08 1d 00 00    \tmov    0x1d08(%rax),%eax\n     ca2:\t39 c2                \tcmp    %eax,%edx\n     ca4:\t0f 84 a1 00 00 00    \tje     d4b <swr_init+0x8aa>\n     caa:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     caf:\t8b 80 78 17 00 00    \tmov    0x1778(%rax),%eax\n     cb5:\t85 c0                \ttest   %eax,%eax\n     cb7:\t0f 85 8e 00 00 00    \tjne    d4b <swr_init+0x8aa>\n     cbd:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     cc2:\t48 8b 40 28          \tmov    0x28(%rax),%rax\n     cc6:\t48 89 c1             \tmov    %rax,%rcx\n     cc9:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     cce:\t8b 90 88 18 00 00    \tmov    0x1888(%rax),%edx\n     cd4:\t48 8d 44 24 10       \tlea    0x10(%rsp),%rax\n     cd9:\tbe 00 04 00 00       \tmov    $0x400,%esi\n     cde:\t48 89 c7             \tmov    %rax,%rdi\n     ce1:\te8 00 00 00 00       \tcall   ce6 <swr_init+0x845>\n     ce6:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     ceb:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n     cef:\t48 89 c1             \tmov    %rax,%rcx\n     cf2:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     cf7:\t8b 90 08 1d 00 00    \tmov    0x1d08(%rax),%edx\n     cfd:\t48 8d 84 24 10 04 00 \tlea    0x410(%rsp),%rax\n     d04:\t00 \n     d05:\tbe 00 04 00 00       \tmov    $0x400,%esi\n     d0a:\t48 89 c7             \tmov    %rax,%rdi\n     d0d:\te8 00 00 00 00       \tcall   d12 <swr_init+0x871>\n     d12:\t48 8d 8c 24 10 04 00 \tlea    0x410(%rsp),%rcx\n     d19:\t00 \n     d1a:\t48 8d 54 24 10       \tlea    0x10(%rsp),%rdx\n     d1f:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     d24:\t49 89 c8             \tmov    %rcx,%r8\n     d27:\t48 89 d1             \tmov    %rdx,%rcx\n     d2a:\tba 00 00 00 00       \tmov    $0x0,%edx\n     d2f:\tbe 10 00 00 00       \tmov    $0x10,%esi\n     d34:\t48 89 c7             \tmov    %rax,%rdi\n     d37:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     d3c:\te8 00 00 00 00       \tcall   d41 <swr_init+0x8a0>\n     d41:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n     d46:\te9 6c 04 00 00       \tjmp    11b7 <swr_init+0xd16>\n     d4b:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     d50:\t8b 40 68             \tmov    0x68(%rax),%eax\n     d53:\t85 c0                \ttest   %eax,%eax\n     d55:\t75 2f                \tjne    d86 <swr_init+0x8e5>\n     d57:\t41 b9 80 01 00 00    \tmov    $0x180,%r9d\n     d5d:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n     d63:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n     d68:\tba 00 00 00 00       \tmov    $0x0,%edx\n     d6d:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     d72:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     d77:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     d7c:\te8 00 00 00 00       \tcall   d81 <swr_init+0x8e0>\n     d81:\te8 00 00 00 00       \tcall   d86 <swr_init+0x8e5>\n     d86:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     d8b:\t8b 80 08 1d 00 00    \tmov    0x1d08(%rax),%eax\n     d91:\t85 c0                \ttest   %eax,%eax\n     d93:\t75 2f                \tjne    dc4 <swr_init+0x923>\n     d95:\t41 b9 81 01 00 00    \tmov    $0x181,%r9d\n     d9b:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n     da1:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n     da6:\tba 00 00 00 00       \tmov    $0x0,%edx\n     dab:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     db0:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     db5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     dba:\te8 00 00 00 00       \tcall   dbf <swr_init+0x91e>\n     dbf:\te8 00 00 00 00       \tcall   dc4 <swr_init+0x923>\n     dc4:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     dc9:\t8b 80 08 1d 00 00    \tmov    0x1d08(%rax),%eax\n     dcf:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     dd4:\t8b 9a 88 18 00 00    \tmov    0x1888(%rdx),%ebx\n     dda:\t99                   \tcltd   \n     ddb:\tf7 fb                \tidiv   %ebx\n     ddd:\t83 e8 01             \tsub    $0x1,%eax\n     de0:\tf2 0f 2a c8          \tcvtsi2sd %eax,%xmm1\n     de4:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     de9:\t8b 40 3c             \tmov    0x3c(%rax),%eax\n     dec:\tf3 0f 2a c0          \tcvtsi2ss %eax,%xmm0\n     df0:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     df5:\t8b 40 38             \tmov    0x38(%rax),%eax\n     df8:\tf3 0f 2a d0          \tcvtsi2ss %eax,%xmm2\n     dfc:\tf3 0f 5e c2          \tdivss  %xmm2,%xmm0\n     e00:\tf3 0f 5a c0          \tcvtss2sd %xmm0,%xmm0\n     e04:\tf2 0f 10 15 00 00 00 \tmovsd  0x0(%rip),%xmm2        # e0c <swr_init+0x96b>\n     e0b:\t00 \n     e0c:\tf2 0f 5c c2          \tsubsd  %xmm2,%xmm0\n     e10:\t66 0f 2f c1          \tcomisd %xmm1,%xmm0\n     e14:\t0f 97 c0             \tseta   %al\n     e17:\t0f b6 d0             \tmovzbl %al,%edx\n     e1a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     e1f:\t89 90 70 17 00 00    \tmov    %edx,0x1770(%rax)\n     e25:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     e2a:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     e2f:\t48 05 20 1d 00 00    \tadd    $0x1d20,%rax\n     e35:\t48 81 c2 80 17 00 00 \tadd    $0x1780,%rdx\n     e3c:\tb9 24 00 00 00       \tmov    $0x24,%ecx\n     e41:\t48 89 c7             \tmov    %rax,%rdi\n     e44:\t48 89 d6             \tmov    %rdx,%rsi\n     e47:\tf3 48 a5             \trep movsq %ds:(%rsi),%es:(%rdi)\n     e4a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     e4f:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     e54:\t48 05 40 1e 00 00    \tadd    $0x1e40,%rax\n     e5a:\t48 81 c2 80 17 00 00 \tadd    $0x1780,%rdx\n     e61:\tb9 24 00 00 00       \tmov    $0x24,%ecx\n     e66:\t48 89 c7             \tmov    %rax,%rdi\n     e69:\t48 89 d6             \tmov    %rdx,%rsi\n     e6c:\tf3 48 a5             \trep movsq %ds:(%rsi),%es:(%rdi)\n     e6f:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     e74:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     e79:\t48 05 60 1f 00 00    \tadd    $0x1f60,%rax\n     e7f:\t48 81 c2 00 1c 00 00 \tadd    $0x1c00,%rdx\n     e86:\tb9 24 00 00 00       \tmov    $0x24,%ecx\n     e8b:\t48 89 c7             \tmov    %rax,%rdi\n     e8e:\t48 89 d6             \tmov    %rdx,%rsi\n     e91:\tf3 48 a5             \trep movsq %ds:(%rsi),%es:(%rdi)\n     e94:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     e99:\t48 8b 80 c0 20 00 00 \tmov    0x20c0(%rax),%rax\n     ea0:\t48 85 c0             \ttest   %rax,%rax\n     ea3:\t75 6c                \tjne    f11 <swr_init+0xa70>\n     ea5:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     eaa:\t8b 80 74 17 00 00    \tmov    0x1774(%rax),%eax\n     eb0:\t85 c0                \ttest   %eax,%eax\n     eb2:\t75 5d                \tjne    f11 <swr_init+0xa70>\n     eb4:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     eb9:\t48 8b 40 60          \tmov    0x60(%rax),%rax\n     ebd:\t48 85 c0             \ttest   %rax,%rax\n     ec0:\t75 4f                \tjne    f11 <swr_init+0xa70>\n     ec2:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     ec7:\t8b 40 70             \tmov    0x70(%rax),%eax\n     eca:\t85 c0                \ttest   %eax,%eax\n     ecc:\t75 43                \tjne    f11 <swr_init+0xa70>\n     ece:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     ed3:\t8b 90 88 18 00 00    \tmov    0x1888(%rax),%edx\n     ed9:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     ede:\t8b 70 18             \tmov    0x18(%rax),%esi\n     ee1:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     ee6:\t8b 40 20             \tmov    0x20(%rax),%eax\n     ee9:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n     eef:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n     ef4:\t89 c7                \tmov    %eax,%edi\n     ef6:\te8 00 00 00 00       \tcall   efb <swr_init+0xa5a>\n     efb:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     f00:\t48 89 82 b8 20 00 00 \tmov    %rax,0x20b8(%rdx)\n     f07:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     f0c:\te9 a6 02 00 00       \tjmp    11b7 <swr_init+0xd16>\n     f11:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     f16:\t48 8b 48 60          \tmov    0x60(%rax),%rcx\n     f1a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     f1f:\t8b 50 68             \tmov    0x68(%rax),%edx\n     f22:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     f27:\t8b 70 18             \tmov    0x18(%rax),%esi\n     f2a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     f2f:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n     f32:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n     f38:\t89 c7                \tmov    %eax,%edi\n     f3a:\te8 00 00 00 00       \tcall   f3f <swr_init+0xa9e>\n     f3f:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     f44:\t48 89 82 a8 20 00 00 \tmov    %rax,0x20a8(%rdx)\n     f4b:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     f50:\t8b 90 08 1d 00 00    \tmov    0x1d08(%rax),%edx\n     f56:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     f5b:\t8b 70 1c             \tmov    0x1c(%rax),%esi\n     f5e:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     f63:\t8b 40 20             \tmov    0x20(%rax),%eax\n     f66:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n     f6c:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n     f71:\t89 c7                \tmov    %eax,%edi\n     f73:\te8 00 00 00 00       \tcall   f78 <swr_init+0xad7>\n     f78:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     f7d:\t48 89 82 b0 20 00 00 \tmov    %rax,0x20b0(%rdx)\n     f84:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     f89:\t48 8b 80 a8 20 00 00 \tmov    0x20a8(%rax),%rax\n     f90:\t48 85 c0             \ttest   %rax,%rax\n     f93:\t74 11                \tje     fa6 <swr_init+0xb05>\n     f95:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     f9a:\t48 8b 80 b0 20 00 00 \tmov    0x20b0(%rax),%rax\n     fa1:\t48 85 c0             \ttest   %rax,%rax\n     fa4:\t75 0a                \tjne    fb0 <swr_init+0xb0f>\n     fa6:\tb8 f4 ff ff ff       \tmov    $0xfffffff4,%eax\n     fab:\te9 07 02 00 00       \tjmp    11b7 <swr_init+0xd16>\n     fb0:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     fb5:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     fba:\t48 05 a0 18 00 00    \tadd    $0x18a0,%rax\n     fc0:\t48 81 c2 80 17 00 00 \tadd    $0x1780,%rdx\n     fc7:\tb9 24 00 00 00       \tmov    $0x24,%ecx\n     fcc:\t48 89 c7             \tmov    %rax,%rdi\n     fcf:\t48 89 d6             \tmov    %rdx,%rsi\n     fd2:\tf3 48 a5             \trep movsq %ds:(%rsi),%es:(%rdi)\n     fd5:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     fda:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n     fdf:\t48 05 e0 1a 00 00    \tadd    $0x1ae0,%rax\n     fe5:\t48 81 c2 00 1c 00 00 \tadd    $0x1c00,%rdx\n     fec:\tb9 24 00 00 00       \tmov    $0x24,%ecx\n     ff1:\t48 89 c7             \tmov    %rax,%rdi\n     ff4:\t48 89 d6             \tmov    %rdx,%rsi\n     ff7:\tf3 48 a5             \trep movsq %ds:(%rsi),%es:(%rdi)\n     ffa:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     fff:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n    1004:\t48 05 c0 19 00 00    \tadd    $0x19c0,%rax\n    100a:\t48 81 c2 80 17 00 00 \tadd    $0x1780,%rdx\n    1011:\tb9 24 00 00 00       \tmov    $0x24,%ecx\n    1016:\t48 89 c7             \tmov    %rax,%rdi\n    1019:\t48 89 d6             \tmov    %rdx,%rsi\n    101c:\tf3 48 a5             \trep movsq %ds:(%rsi),%es:(%rdi)\n    101f:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1024:\t48 8b 40 60          \tmov    0x60(%rax),%rax\n    1028:\t48 85 c0             \ttest   %rax,%rax\n    102b:\t74 4d                \tje     107a <swr_init+0xbd9>\n    102d:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1032:\t8b 50 68             \tmov    0x68(%rax),%edx\n    1035:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    103a:\t89 90 c8 1a 00 00    \tmov    %edx,0x1ac8(%rax)\n    1040:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1045:\t8b 90 c8 1a 00 00    \tmov    0x1ac8(%rax),%edx\n    104b:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1050:\t89 90 a8 19 00 00    \tmov    %edx,0x19a8(%rax)\n    1056:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    105b:\t48 8b 80 c0 20 00 00 \tmov    0x20c0(%rax),%rax\n    1062:\t48 85 c0             \ttest   %rax,%rax\n    1065:\t74 13                \tje     107a <swr_init+0xbd9>\n    1067:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    106c:\t8b 50 68             \tmov    0x68(%rax),%edx\n    106f:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1074:\t89 90 28 1e 00 00    \tmov    %edx,0x1e28(%rax)\n    107a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    107f:\t8b 80 70 17 00 00    \tmov    0x1770(%rax),%eax\n    1085:\t85 c0                \ttest   %eax,%eax\n    1087:\t75 3d                \tjne    10c6 <swr_init+0xc25>\n    1089:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    108e:\t8b 90 08 1d 00 00    \tmov    0x1d08(%rax),%edx\n    1094:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1099:\t89 90 c8 1a 00 00    \tmov    %edx,0x1ac8(%rax)\n    109f:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    10a4:\t48 8b 80 c0 20 00 00 \tmov    0x20c0(%rax),%rax\n    10ab:\t48 85 c0             \ttest   %rax,%rax\n    10ae:\t74 16                \tje     10c6 <swr_init+0xc25>\n    10b0:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    10b5:\t8b 90 08 1d 00 00    \tmov    0x1d08(%rax),%edx\n    10bb:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    10c0:\t89 90 28 1e 00 00    \tmov    %edx,0x1e28(%rax)\n    10c6:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    10cb:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n    10ce:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n    10d3:\t48 81 c2 a0 18 00 00 \tadd    $0x18a0,%rdx\n    10da:\t89 c6                \tmov    %eax,%esi\n    10dc:\t48 89 d7             \tmov    %rdx,%rdi\n    10df:\te8 62 f1 ff ff       \tcall   246 <set_audiodata_fmt>\n    10e4:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    10e9:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n    10ec:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n    10f1:\t48 81 c2 c0 19 00 00 \tadd    $0x19c0,%rdx\n    10f8:\t89 c6                \tmov    %eax,%esi\n    10fa:\t48 89 d7             \tmov    %rdx,%rdi\n    10fd:\te8 44 f1 ff ff       \tcall   246 <set_audiodata_fmt>\n    1102:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1107:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n    110a:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n    110f:\t48 81 c2 e0 1a 00 00 \tadd    $0x1ae0,%rdx\n    1116:\t89 c6                \tmov    %eax,%esi\n    1118:\t48 89 d7             \tmov    %rdx,%rdi\n    111b:\te8 26 f1 ff ff       \tcall   246 <set_audiodata_fmt>\n    1120:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1125:\t48 8b 80 c0 20 00 00 \tmov    0x20c0(%rax),%rax\n    112c:\t48 85 c0             \ttest   %rax,%rax\n    112f:\t74 1e                \tje     114f <swr_init+0xcae>\n    1131:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1136:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n    1139:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n    113e:\t48 81 c2 20 1d 00 00 \tadd    $0x1d20,%rdx\n    1145:\t89 c6                \tmov    %eax,%esi\n    1147:\t48 89 d7             \tmov    %rdx,%rdi\n    114a:\te8 f7 f0 ff ff       \tcall   246 <set_audiodata_fmt>\n    114f:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1154:\t8b 50 1c             \tmov    0x1c(%rax),%edx\n    1157:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    115c:\t8b 48 20             \tmov    0x20(%rax),%ecx\n    115f:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    1164:\t89 ce                \tmov    %ecx,%esi\n    1166:\t48 89 c7             \tmov    %rax,%rdi\n    1169:\te8 00 00 00 00       \tcall   116e <swr_init+0xccd>\n    116e:\t89 84 24 1c 08 00 00 \tmov    %eax,0x81c(%rsp)\n    1175:\t83 bc 24 1c 08 00 00 \tcmpl   $0x0,0x81c(%rsp)\n    117c:\t00 \n    117d:\t79 09                \tjns    1188 <swr_init+0xce7>\n    117f:\t8b 84 24 1c 08 00 00 \tmov    0x81c(%rsp),%eax\n    1186:\teb 2f                \tjmp    11b7 <swr_init+0xd16>\n    1188:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    118d:\t8b 80 74 17 00 00    \tmov    0x1774(%rax),%eax\n    1193:\t85 c0                \ttest   %eax,%eax\n    1195:\t75 0c                \tjne    11a3 <swr_init+0xd02>\n    1197:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    119c:\t8b 40 70             \tmov    0x70(%rax),%eax\n    119f:\t85 c0                \ttest   %eax,%eax\n    11a1:\t74 0f                \tje     11b2 <swr_init+0xd11>\n    11a3:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    11a8:\t48 89 c7             \tmov    %rax,%rdi\n    11ab:\te8 00 00 00 00       \tcall   11b0 <swr_init+0xd0f>\n    11b0:\teb 05                \tjmp    11b7 <swr_init+0xd16>\n    11b2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    11b7:\t48 81 c4 20 08 00 00 \tadd    $0x820,%rsp\n    11be:\t5b                   \tpop    %rbx\n    11bf:\t5d                   \tpop    %rbp\n    11c0:\t41 5c                \tpop    %r12\n    11c2:\tc3                   \tret    ", "code_s": "ulong swr_init(long <span class=\"supfact\">param_1</span>) {\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  long <span class=\"supfact\">lVar6</span>;\n  undefined8 *puVar7;\n  undefined8 *puVar8;\n  byte <span class=\"supfact\">bVar9</span>;\n  undefined <span class=\"supfact\">local_828</span>[Number];\n  undefined <span class=\"supfact\">local_428</span>[Number];\n  uint <span class=\"supfact\">local_1c</span>;\n  <span class=\"supfact\">bVar9</span> = Number;\n  FUN_001002ce(<span class=\"supfact\">param_1</span>);\n  if (*(int *)(<span class=\"supfact\">param_1</span> + Number) < Number) {\n    if (*(int *)(<span class=\"supfact\">param_1</span> + Number) < Number) {\n      iVar1 = av_get_channel_layout_nb_channels(\n          *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n      if (Number < iVar1) {\n        av_log(<span class=\"supfact\">param_1</span>, Number, String,\n               *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n        *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n      }\n      iVar1 = av_get_channel_layout_nb_channels(\n          *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n      if (Number < iVar1) {\n        av_log(<span class=\"supfact\">param_1</span>, Number, String,\n               *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n        *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n      }\n      if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n        *(undefined **)(<span class=\"supfact\">param_1</span> + Number) = &swri_resampler;\n        if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n          *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) =\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n        }\n        if (((*(int *)(<span class=\"supfact\">param_1</span> + Number) != Number) &&\n             (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number)) &&\n            (iVar1 = *(int *)(<span class=\"supfact\">param_1</span> + Number),\n             iVar2 = av_get_channel_layout_nb_channels(\n                 *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number)),\n             iVar1 != iVar2)) {\n          av_log(<span class=\"supfact\">param_1</span>, Number, String);\n          *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n        }\n        if (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n          uVar5 = av_get_default_channel_layout(\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n          *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = uVar5;\n        }\n        if (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n          uVar5 = av_get_default_channel_layout(\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n          *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = uVar5;\n        }\n        if (((*(long *)(<span class=\"supfact\">param_1</span> + Number) ==\n              *(long *)(<span class=\"supfact\">param_1</span> + Number)) &&\n             (*(float *)(<span class=\"supfact\">param_1</span> + Number) == DAT_00105b90)) &&\n            (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number)) {\n          uVar3 = Number;\n        } else {\n          uVar3 = Number;\n        }\n        *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = uVar3;\n        if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == -Number) {\n          iVar1 = av_get_planar_sample_fmt(\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n          if (iVar1 < Number) {\n            *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n          } else {\n            iVar1 = av_get_planar_sample_fmt(\n                *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n            if (((iVar1 == Number) &&\n                 (iVar1 = av_get_planar_sample_fmt(\n                      *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number)),\n                  iVar1 == Number)) &&\n                ((*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number &&\n                  (*(int *)(<span class=\"supfact\">param_1</span> + Number) != Number)))) {\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n            } else {\n              iVar1 = av_get_planar_sample_fmt(\n                  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n              if (iVar1 < Number) {\n                *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n              } else {\n                av_log(<span class=\"supfact\">param_1</span>, Number, String);\n                *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n              }\n            }\n          }\n        }\n        if ((((*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) ||\n              (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number)) ||\n             (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number)) ||\n            (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number)) {\n          FUN_00100246(<span class=\"supfact\">param_1</span> + Number,\n                       *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n          FUN_00100246(<span class=\"supfact\">param_1</span> + Number,\n                       *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n          if (*(long *)(<span class=\"supfact\">param_1</span> + Number) == -Number) {\n            *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n          } else {\n            if ((*(float *)(<span class=\"supfact\">param_1</span> + Number) == Number) &&\n                (_DAT_00105b94 <=\n                 *(float *)(<span class=\"supfact\">param_1</span> + Number))) {\n              *(float *)(<span class=\"supfact\">param_1</span> + Number) = DAT_00105b90;\n            }\n            *(long *)(<span class=\"supfact\">param_1</span> + Number) =\n                *(long *)(<span class=\"supfact\">param_1</span> + Number) *\n                (long)*(int *)(<span class=\"supfact\">param_1</span> + Number);\n            *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) =\n                *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n          }\n          if (*(float *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n            if (_DAT_00105b94 <= *(float *)(<span class=\"supfact\">param_1</span> + Number)) {\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = DAT_00105b98;\n            }\n            if (_DAT_00105ba0 <\n                (double)*(float *)(<span class=\"supfact\">param_1</span> + Number)) {\n              *(float *)(<span class=\"supfact\">param_1</span> + Number) =\n                  *(float *)(<span class=\"supfact\">param_1</span> + Number) /\n                  (float)*(int *)(<span class=\"supfact\">param_1</span> + Number);\n            }\n          }\n          if ((*(int *)(<span class=\"supfact\">param_1</span> + Number) ==\n               *(int *)(<span class=\"supfact\">param_1</span> + Number)) &&\n              ((*(uint *)(<span class=\"supfact\">param_1</span> + Number) & Number) ==\n               Number)) {\n            (**(code **)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number))(\n                <span class=\"supfact\">param_1</span> + Number);\n          } else {\n            uVar5 = (***(code ***)(<span class=\"supfact\">param_1</span> + Number))(\n                *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n                *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n                *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n                *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n            *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = uVar5;\n          }\n          if ((((*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) ||\n                (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number)) ||\n               (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number)) ||\n              ((*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number ||\n                (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number)))) {\n            if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n              uVar3 = av_get_channel_layout_nb_channels(\n                  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = uVar3;\n            }\n            if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) =\n                  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n            }\n            if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n              uVar3 = av_get_channel_layout_nb_channels(\n                  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = uVar3;\n            }\n            if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n              if (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n                av_log(Number, Number, String, String, String, Number);\n                abort();\n              }\n              av_log(<span class=\"supfact\">param_1</span>, Number, String);\n              uVar4 = Number;\n            } else if (((*(long *)(<span class=\"supfact\">param_1</span> + Number) ==\n                         Number) ||\n                        (*(long *)(<span class=\"supfact\">param_1</span> + Number) ==\n                         Number)) &&\n                       ((*(int *)(<span class=\"supfact\">param_1</span> + Number) !=\n                             *(int *)(<span class=\"supfact\">param_1</span> + Number) &&\n                         (*(int *)(<span class=\"supfact\">param_1</span> + Number) ==\n                          Number)))) {\n              av_get_channel_layout_string(\n                  <span class=\"supfact\">local_828</span>, Number,\n                  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n              av_get_channel_layout_string(\n                  <span class=\"supfact\">local_428</span>, Number,\n                  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n              av_log(<span class=\"supfact\">param_1</span>, Number, String,\n                     <span class=\"supfact\">local_828</span>, <span class=\"supfact\">local_428</span>);\n              uVar4 = Number;\n            } else {\n              if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n                av_log(Number, Number, String, String, String, Number);\n                abort();\n              }\n              if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n                av_log(Number, Number, String, String, String, Number);\n                abort();\n              }\n              *(uint *)(<span class=\"supfact\">param_1</span> + Number) =\n                  (uint)((double)(*(int *)(<span class=\"supfact\">param_1</span> + Number) /\n                                      *(int *)(<span class=\"supfact\">param_1</span> +\n                                               Number) +\n                                  -Number) <\n                         (double)((float)*(int *)(<span class=\"supfact\">param_1</span> +\n                                                  Number) /\n                                  (float)*(int *)(<span class=\"supfact\">param_1</span> +\n                                                  Number)) -\n                             DAT_00105ba8);\n              puVar7 = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n              puVar8 = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n              for (<span class=\"supfact\">lVar6</span> = Number;\n                   <span class=\"supfact\">lVar6</span> != Number;\n                   <span class=\"supfact\">lVar6</span> = <span class=\"supfact\">lVar6</span> + -Number) {\n                *puVar8 = *puVar7;\n                puVar7 =\n                    puVar7 + (ulong)<span class=\"supfact\">bVar9</span> * -Number + Number;\n                puVar8 =\n                    puVar8 + (ulong)<span class=\"supfact\">bVar9</span> * -Number + Number;\n              }\n              puVar7 = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n              puVar8 = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n              for (<span class=\"supfact\">lVar6</span> = Number;\n                   <span class=\"supfact\">lVar6</span> != Number;\n                   <span class=\"supfact\">lVar6</span> = <span class=\"supfact\">lVar6</span> + -Number) {\n                *puVar8 = *puVar7;\n                puVar7 =\n                    puVar7 + (ulong)<span class=\"supfact\">bVar9</span> * -Number + Number;\n                puVar8 =\n                    puVar8 + (ulong)<span class=\"supfact\">bVar9</span> * -Number + Number;\n              }\n              puVar7 = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n              puVar8 = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n              for (<span class=\"supfact\">lVar6</span> = Number;\n                   <span class=\"supfact\">lVar6</span> != Number;\n                   <span class=\"supfact\">lVar6</span> = <span class=\"supfact\">lVar6</span> + -Number) {\n                *puVar8 = *puVar7;\n                puVar7 =\n                    puVar7 + (ulong)<span class=\"supfact\">bVar9</span> * -Number + Number;\n                puVar8 =\n                    puVar8 + (ulong)<span class=\"supfact\">bVar9</span> * -Number + Number;\n              }\n              if ((((*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) &&\n                    (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number)) &&\n                   (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number)) &&\n                  (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number)) {\n                uVar5 = swri_audio_convert_alloc(\n                    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number), Number,\n                    Number);\n                *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = uVar5;\n                uVar4 = Number;\n              } else {\n                uVar5 = swri_audio_convert_alloc(\n                    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                    *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number), Number);\n                *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = uVar5;\n                uVar5 = swri_audio_convert_alloc(\n                    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number), Number,\n                    Number);\n                *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = uVar5;\n                if ((*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) ||\n                    (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number)) {\n                  uVar4 = Number;\n                } else {\n                  puVar7 = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n                  puVar8 = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n                  for (<span class=\"supfact\">lVar6</span> = Number;\n                       <span class=\"supfact\">lVar6</span> != Number;\n                       <span class=\"supfact\">lVar6</span> =\n                           <span class=\"supfact\">lVar6</span> + -Number) {\n                    *puVar8 = *puVar7;\n                    puVar7 = puVar7 + (ulong)<span class=\"supfact\">bVar9</span> * -Number +\n                             Number;\n                    puVar8 = puVar8 + (ulong)<span class=\"supfact\">bVar9</span> * -Number +\n                             Number;\n                  }\n                  puVar7 = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n                  puVar8 = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n                  for (<span class=\"supfact\">lVar6</span> = Number;\n                       <span class=\"supfact\">lVar6</span> != Number;\n                       <span class=\"supfact\">lVar6</span> =\n                           <span class=\"supfact\">lVar6</span> + -Number) {\n                    *puVar8 = *puVar7;\n                    puVar7 = puVar7 + (ulong)<span class=\"supfact\">bVar9</span> * -Number +\n                             Number;\n                    puVar8 = puVar8 + (ulong)<span class=\"supfact\">bVar9</span> * -Number +\n                             Number;\n                  }\n                  puVar7 = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n                  puVar8 = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n                  for (<span class=\"supfact\">lVar6</span> = Number;\n                       <span class=\"supfact\">lVar6</span> != Number;\n                       <span class=\"supfact\">lVar6</span> =\n                           <span class=\"supfact\">lVar6</span> + -Number) {\n                    *puVar8 = *puVar7;\n                    puVar7 = puVar7 + (ulong)<span class=\"supfact\">bVar9</span> * -Number +\n                             Number;\n                    puVar8 = puVar8 + (ulong)<span class=\"supfact\">bVar9</span> * -Number +\n                             Number;\n                  }\n                  if (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n                    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) =\n                        *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n                    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) =\n                        *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n                    if (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n                      *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) =\n                          *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n                    }\n                  }\n                  if ((*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) &&\n                      (*(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) =\n                           *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                       *(long *)(<span class=\"supfact\">param_1</span> + Number) != Number)) {\n                    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) =\n                        *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n                  }\n                  FUN_00100246(\n                      <span class=\"supfact\">param_1</span> + Number,\n                      *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n                  FUN_00100246(\n                      <span class=\"supfact\">param_1</span> + Number,\n                      *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n                  FUN_00100246(\n                      <span class=\"supfact\">param_1</span> + Number,\n                      *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n                  if (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n                    FUN_00100246(\n                        <span class=\"supfact\">param_1</span> + Number,\n                        *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n                  }\n                  <span class=\"supfact\">local_1c</span> = swri_dither_init(\n                      <span class=\"supfact\">param_1</span>,\n                      *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number),\n                      *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n                  if ((int)<span class=\"supfact\">local_1c</span> < Number) {\n                    uVar4 = (ulong)<span class=\"supfact\">local_1c</span>;\n                  } else if ((*(int *)(<span class=\"supfact\">param_1</span> + Number) ==\n                              Number) &&\n                             (*(int *)(<span class=\"supfact\">param_1</span> + Number) ==\n                              Number)) {\n                    uVar4 = Number;\n                  } else {\n                    uVar4 = swri_rematrix_init(<span class=\"supfact\">param_1</span>);\n                  }\n                }\n              }\n            }\n          } else {\n            av_log(<span class=\"supfact\">param_1</span>, Number, String);\n            uVar4 = Number;\n          }\n        } else {\n          uVar5 = av_get_sample_fmt_name(\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n          av_log(<span class=\"supfact\">param_1</span>, Number, String, uVar5);\n          uVar4 = Number;\n        }\n      } else {\n        av_log(<span class=\"supfact\">param_1</span>, Number, String);\n        uVar4 = Number;\n      }\n    } else {\n      av_log(<span class=\"supfact\">param_1</span>, Number, String,\n             *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n      uVar4 = Number;\n    }\n  } else {\n    av_log(<span class=\"supfact\">param_1</span>, Number, String,\n           *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n    uVar4 = Number;\n  }\n  return uVar4;\n}", "code_t": "int swr_init(SwrContext *<span class=\"supfact\">s</span>) {\n  int iVar1;\n  int iVar2;\n  int64_t iVar3;\n  undefined8 uVar4;\n  ResampleContext *pRVar5;\n  AudioConvert *pAVar6;\n  long <span class=\"supfact\">lVar7</span>;\n  AudioData *pAVar8;\n  AudioData *pAVar9;\n  byte <span class=\"supfact\">bVar10</span>;\n  SwrContext *<span class=\"supfact\">s</span> - local;\n  char <span class=\"supfact\">l1</span>[Number];\n  char <span class=\"supfact\">l2</span>[Number];\n  int <span class=\"supfact\">ret</span>;\n  <span class=\"supfact\">bVar10</span> = Number;\n  clear_context(<span class=\"supfact\">s</span>);\n  if (<span class=\"supfact\">s</span>->in_sample_fmt < AV_SAMPLE_FMT_NB) {\n    if (<span class=\"supfact\">s</span>->out_sample_fmt < AV_SAMPLE_FMT_NB) {\n      iVar1 =\n          av_get_channel_layout_nb_channels(<span class=\"supfact\">s</span>->in_ch_layout);\n      if (Number < iVar1) {\n        av_log(<span class=\"supfact\">s</span>, Number, String,\n               <span class=\"supfact\">s</span>->in_ch_layout);\n        <span class=\"supfact\">s</span>->in_ch_layout = Number;\n      }\n      iVar1 =\n          av_get_channel_layout_nb_channels(<span class=\"supfact\">s</span>->out_ch_layout);\n      if (Number < iVar1) {\n        av_log(<span class=\"supfact\">s</span>, Number, String,\n               <span class=\"supfact\">s</span>->out_ch_layout);\n        <span class=\"supfact\">s</span>->out_ch_layout = Number;\n      }\n      if (<span class=\"supfact\">s</span>->engine == SWR_ENGINE_SWR) {\n        <span class=\"supfact\">s</span>->resampler = (Resampler *)&swri_resampler;\n        if (<span class=\"supfact\">s</span>->used_ch_count == Number) {\n          <span class=\"supfact\">s</span>->used_ch_count = (<span class=\"supfact\">s</span>->in).ch_count;\n        }\n        if (((<span class=\"supfact\">s</span>->used_ch_count != Number) &&\n             (<span class=\"supfact\">s</span>->in_ch_layout != Number)) &&\n            (iVar1 = <span class=\"supfact\">s</span>->used_ch_count,\n             iVar2 = av_get_channel_layout_nb_channels(\n                 <span class=\"supfact\">s</span>->in_ch_layout),\n             iVar1 != iVar2)) {\n          av_log(<span class=\"supfact\">s</span>, Number, String);\n          <span class=\"supfact\">s</span>->in_ch_layout = Number;\n        }\n        if (<span class=\"supfact\">s</span>->in_ch_layout == Number) {\n          iVar3 =\n              av_get_default_channel_layout(<span class=\"supfact\">s</span>->used_ch_count);\n          <span class=\"supfact\">s</span>->in_ch_layout = iVar3;\n        }\n        if (<span class=\"supfact\">s</span>->out_ch_layout == Number) {\n          iVar3 =\n              av_get_default_channel_layout((<span class=\"supfact\">s</span>->out).ch_count);\n          <span class=\"supfact\">s</span>->out_ch_layout = iVar3;\n        }\n        if (((<span class=\"supfact\">s</span>->out_ch_layout ==\n              <span class=\"supfact\">s</span>->in_ch_layout) &&\n             (<span class=\"supfact\">s</span>->rematrix_volume == DAT_00105b90)) &&\n            (<span class=\"supfact\">s</span>->rematrix_custom == Number)) {\n          iVar1 = Number;\n        } else {\n          iVar1 = Number;\n        }\n        <span class=\"supfact\">s</span>->rematrix = iVar1;\n        if (<span class=\"supfact\">s</span>->int_sample_fmt == AV_SAMPLE_FMT_NONE) {\n          iVar1 = av_get_planar_sample_fmt(<span class=\"supfact\">s</span>->in_sample_fmt);\n          if (iVar1 < Number) {\n            <span class=\"supfact\">s</span>->int_sample_fmt = AV_SAMPLE_FMT_S16P;\n          } else {\n            iVar1 = av_get_planar_sample_fmt(<span class=\"supfact\">s</span>->in_sample_fmt);\n            if (((iVar1 == Number) && (iVar1 = av_get_planar_sample_fmt(\n                                           <span class=\"supfact\">s</span>->out_sample_fmt),\n                                       iVar1 == Number)) &&\n                ((<span class=\"supfact\">s</span>->rematrix == Number &&\n                  (<span class=\"supfact\">s</span>->engine != SWR_ENGINE_SOXR)))) {\n              <span class=\"supfact\">s</span>->int_sample_fmt = AV_SAMPLE_FMT_S32P;\n            } else {\n              iVar1 =\n                  av_get_planar_sample_fmt(<span class=\"supfact\">s</span>->in_sample_fmt);\n              if (iVar1 < Number) {\n                <span class=\"supfact\">s</span>->int_sample_fmt = AV_SAMPLE_FMT_FLTP;\n              } else {\n                av_log(<span class=\"supfact\">s</span>, Number, String);\n                <span class=\"supfact\">s</span>->int_sample_fmt = AV_SAMPLE_FMT_DBLP;\n              }\n            }\n          }\n        }\n        if ((((<span class=\"supfact\">s</span>->int_sample_fmt == AV_SAMPLE_FMT_S16P) ||\n              (<span class=\"supfact\">s</span>->int_sample_fmt == AV_SAMPLE_FMT_S32P)) ||\n             (<span class=\"supfact\">s</span>->int_sample_fmt == AV_SAMPLE_FMT_FLTP)) ||\n            (<span class=\"supfact\">s</span>->int_sample_fmt == AV_SAMPLE_FMT_DBLP)) {\n          set_audiodata_fmt(&<span class=\"supfact\">s</span>->in,\n                            <span class=\"supfact\">s</span>->in_sample_fmt);\n          set_audiodata_fmt(&<span class=\"supfact\">s</span>->out,\n                            <span class=\"supfact\">s</span>->out_sample_fmt);\n          if (<span class=\"supfact\">s</span>->firstpts_in_samples == -Number) {\n            <span class=\"supfact\">s</span>->firstpts = -Number;\n          } else {\n            if ((<span class=\"supfact\">s</span>->async == Number) &&\n                (_DAT_00105b94 <= <span class=\"supfact\">s</span>->min_compensation)) {\n              <span class=\"supfact\">s</span>->async = DAT_00105b90;\n            }\n            <span class=\"supfact\">s</span>->outpts =\n                <span class=\"supfact\">s</span>->firstpts_in_samples *\n                (long)<span class=\"supfact\">s</span>->out_sample_rate;\n            <span class=\"supfact\">s</span>->firstpts = <span class=\"supfact\">s</span>->outpts;\n          }\n          if (<span class=\"supfact\">s</span>->async != Number) {\n            if (_DAT_00105b94 <= <span class=\"supfact\">s</span>->min_compensation) {\n              <span class=\"supfact\">s</span>->min_compensation = DAT_00105b98;\n            }\n            if (_DAT_00105ba0 < (double)<span class=\"supfact\">s</span>->async) {\n              <span class=\"supfact\">s</span>->max_soft_compensation =\n                  <span class=\"supfact\">s</span>->async /\n                  (float)<span class=\"supfact\">s</span>->in_sample_rate;\n            }\n          }\n          if ((<span class=\"supfact\">s</span>->out_sample_rate ==\n               <span class=\"supfact\">s</span>->in_sample_rate) &&\n              ((<span class=\"supfact\">s</span>->flags & Number) == Number)) {\n            (*<span class=\"supfact\">s</span>->resampler->free)(&<span class=\"supfact\">s</span>->resample);\n          } else {\n            pRVar5 = (*<span class=\"supfact\">s</span>->resampler->init)(\n                <span class=\"supfact\">s</span>->resample, <span class=\"supfact\">s</span>->out_sample_rate,\n                <span class=\"supfact\">s</span>->in_sample_rate,\n                <span class=\"supfact\">s</span>->filter_size, <span class=\"supfact\">s</span>->phase_shift,\n                <span class=\"supfact\">s</span>->linear_interp, <span class=\"supfact\">s</span>->cutoff,\n                <span class=\"supfact\">s</span>->int_sample_fmt,\n                <span class=\"supfact\">s</span>->filter_type, <span class=\"supfact\">s</span>->kaiser_beta,\n                <span class=\"supfact\">s</span>->precision, <span class=\"supfact\">s</span>->cheby);\n            <span class=\"supfact\">s</span>->resample = pRVar5;\n          }\n          if ((((<span class=\"supfact\">s</span>->int_sample_fmt == AV_SAMPLE_FMT_S16P) ||\n                (<span class=\"supfact\">s</span>->int_sample_fmt == AV_SAMPLE_FMT_S32P)) ||\n               (<span class=\"supfact\">s</span>->int_sample_fmt == AV_SAMPLE_FMT_FLTP)) ||\n              ((<span class=\"supfact\">s</span>->int_sample_fmt == AV_SAMPLE_FMT_DBLP ||\n                (<span class=\"supfact\">s</span>->resample == (ResampleContext *)Number)))) {\n            if ((<span class=\"supfact\">s</span>->in).ch_count == Number) {\n              iVar1 = av_get_channel_layout_nb_channels(\n                  <span class=\"supfact\">s</span>->in_ch_layout);\n              (<span class=\"supfact\">s</span>->in).ch_count = iVar1;\n            }\n            if (<span class=\"supfact\">s</span>->used_ch_count == Number) {\n              <span class=\"supfact\">s</span>->used_ch_count =\n                  (<span class=\"supfact\">s</span>->in).ch_count;\n            }\n            if ((<span class=\"supfact\">s</span>->out).ch_count == Number) {\n              iVar1 = av_get_channel_layout_nb_channels(\n                  <span class=\"supfact\">s</span>->out_ch_layout);\n              (<span class=\"supfact\">s</span>->out).ch_count = iVar1;\n            }\n            if ((<span class=\"supfact\">s</span>->in).ch_count == Number) {\n              if (<span class=\"supfact\">s</span>->in_ch_layout != Number) {\n                av_log(Number, Number, String, String, String, Number);\n                abort();\n              }\n              av_log(<span class=\"supfact\">s</span>, Number, String);\n              iVar1 = -Number;\n            } else if (((<span class=\"supfact\">s</span>->out_ch_layout == Number) ||\n                        (<span class=\"supfact\">s</span>->in_ch_layout == Number)) &&\n                       ((<span class=\"supfact\">s</span>->used_ch_count !=\n                             (<span class=\"supfact\">s</span>->out).ch_count &&\n                         (<span class=\"supfact\">s</span>->rematrix_custom == Number)))) {\n              av_get_channel_layout_string(<span class=\"supfact\">l1</span>, Number,\n                                           (<span class=\"supfact\">s</span>->in).ch_count,\n                                           <span class=\"supfact\">s</span>->in_ch_layout);\n              av_get_channel_layout_string(<span class=\"supfact\">l2</span>, Number,\n                                           (<span class=\"supfact\">s</span>->out).ch_count,\n                                           <span class=\"supfact\">s</span>->out_ch_layout);\n              av_log(<span class=\"supfact\">s</span>, Number, String, <span class=\"supfact\">l1</span>,\n                     <span class=\"supfact\">l2</span>);\n              iVar1 = -Number;\n            } else {\n              if (<span class=\"supfact\">s</span>->used_ch_count == Number) {\n                av_log(Number, Number, String, String, String, Number);\n                abort();\n              }\n              if ((<span class=\"supfact\">s</span>->out).ch_count == Number) {\n                av_log(Number, Number, String, String, String, Number);\n                abort();\n              }\n              <span class=\"supfact\">s</span>->resample_first =\n                  (uint)((double)((<span class=\"supfact\">s</span>->out).ch_count /\n                                      (<span class=\"supfact\">s</span>->in).ch_count +\n                                  -Number) <\n                         (double)((float)<span class=\"supfact\">s</span>->out_sample_rate /\n                                  (float)<span class=\"supfact\">s</span>->in_sample_rate) -\n                             DAT_00105ba8);\n              pAVar8 = &<span class=\"supfact\">s</span>->in;\n              pAVar9 = &<span class=\"supfact\">s</span>->in_buffer;\n              for (<span class=\"supfact\">lVar7</span> = Number;\n                   <span class=\"supfact\">lVar7</span> != Number;\n                   <span class=\"supfact\">lVar7</span> = <span class=\"supfact\">lVar7</span> + -Number) {\n                pAVar9->ch[Number] = pAVar8->ch[Number];\n                pAVar8 = (AudioData *)((long)pAVar8 +\n                                       (ulong)<span class=\"supfact\">bVar10</span> * -Number +\n                                       Number);\n                pAVar9 = (AudioData *)((long)pAVar9 +\n                                       (ulong)<span class=\"supfact\">bVar10</span> * -Number +\n                                       Number);\n              }\n              pAVar8 = &<span class=\"supfact\">s</span>->in;\n              pAVar9 = &<span class=\"supfact\">s</span>->silence;\n              for (<span class=\"supfact\">lVar7</span> = Number;\n                   <span class=\"supfact\">lVar7</span> != Number;\n                   <span class=\"supfact\">lVar7</span> = <span class=\"supfact\">lVar7</span> + -Number) {\n                pAVar9->ch[Number] = pAVar8->ch[Number];\n                pAVar8 = (AudioData *)((long)pAVar8 +\n                                       (ulong)<span class=\"supfact\">bVar10</span> * -Number +\n                                       Number);\n                pAVar9 = (AudioData *)((long)pAVar9 +\n                                       (ulong)<span class=\"supfact\">bVar10</span> * -Number +\n                                       Number);\n              }\n              pAVar8 = &<span class=\"supfact\">s</span>->out;\n              pAVar9 = &<span class=\"supfact\">s</span>->drop_temp;\n              for (<span class=\"supfact\">lVar7</span> = Number;\n                   <span class=\"supfact\">lVar7</span> != Number;\n                   <span class=\"supfact\">lVar7</span> = <span class=\"supfact\">lVar7</span> + -Number) {\n                pAVar9->ch[Number] = pAVar8->ch[Number];\n                pAVar8 = (AudioData *)((long)pAVar8 +\n                                       (ulong)<span class=\"supfact\">bVar10</span> * -Number +\n                                       Number);\n                pAVar9 = (AudioData *)((long)pAVar9 +\n                                       (ulong)<span class=\"supfact\">bVar10</span> * -Number +\n                                       Number);\n              }\n              if ((((<span class=\"supfact\">s</span>->resample ==\n                     (ResampleContext *)Number) &&\n                    (<span class=\"supfact\">s</span>->rematrix == Number)) &&\n                   (<span class=\"supfact\">s</span>->channel_map == (int *)Number)) &&\n                  ((<span class=\"supfact\">s</span>->dither).method == SWR_DITHER_NONE)) {\n                pAVar6 = (AudioConvert *)swri_audio_convert_alloc(\n                    <span class=\"supfact\">s</span>->out_sample_fmt,\n                    <span class=\"supfact\">s</span>->in_sample_fmt,\n                    (<span class=\"supfact\">s</span>->in).ch_count, Number, Number);\n                <span class=\"supfact\">s</span>->full_convert = pAVar6;\n                iVar1 = Number;\n              } else {\n                pAVar6 = (AudioConvert *)swri_audio_convert_alloc(\n                    <span class=\"supfact\">s</span>->int_sample_fmt,\n                    <span class=\"supfact\">s</span>->in_sample_fmt,\n                    <span class=\"supfact\">s</span>->used_ch_count,\n                    <span class=\"supfact\">s</span>->channel_map, Number);\n                <span class=\"supfact\">s</span>->in_convert = pAVar6;\n                pAVar6 = (AudioConvert *)swri_audio_convert_alloc(\n                    <span class=\"supfact\">s</span>->out_sample_fmt,\n                    <span class=\"supfact\">s</span>->int_sample_fmt,\n                    (<span class=\"supfact\">s</span>->out).ch_count, Number, Number);\n                <span class=\"supfact\">s</span>->out_convert = pAVar6;\n                if ((<span class=\"supfact\">s</span>->in_convert == (AudioConvert *)Number) ||\n                    (<span class=\"supfact\">s</span>->out_convert ==\n                     (AudioConvert *)Number)) {\n                  iVar1 = -Number;\n                } else {\n                  pAVar8 = &<span class=\"supfact\">s</span>->in;\n                  pAVar9 = &<span class=\"supfact\">s</span>->postin;\n                  for (<span class=\"supfact\">lVar7</span> = Number;\n                       <span class=\"supfact\">lVar7</span> != Number;\n                       <span class=\"supfact\">lVar7</span> =\n                           <span class=\"supfact\">lVar7</span> + -Number) {\n                    pAVar9->ch[Number] = pAVar8->ch[Number];\n                    pAVar8 =\n                        (AudioData *)((long)pAVar8 +\n                                      (ulong)<span class=\"supfact\">bVar10</span> * -Number +\n                                      Number);\n                    pAVar9 =\n                        (AudioData *)((long)pAVar9 +\n                                      (ulong)<span class=\"supfact\">bVar10</span> * -Number +\n                                      Number);\n                  }\n                  pAVar8 = &<span class=\"supfact\">s</span>->out;\n                  pAVar9 = &<span class=\"supfact\">s</span>->preout;\n                  for (<span class=\"supfact\">lVar7</span> = Number;\n                       <span class=\"supfact\">lVar7</span> != Number;\n                       <span class=\"supfact\">lVar7</span> =\n                           <span class=\"supfact\">lVar7</span> + -Number) {\n                    pAVar9->ch[Number] = pAVar8->ch[Number];\n                    pAVar8 =\n                        (AudioData *)((long)pAVar8 +\n                                      (ulong)<span class=\"supfact\">bVar10</span> * -Number +\n                                      Number);\n                    pAVar9 =\n                        (AudioData *)((long)pAVar9 +\n                                      (ulong)<span class=\"supfact\">bVar10</span> * -Number +\n                                      Number);\n                  }\n                  pAVar8 = &<span class=\"supfact\">s</span>->in;\n                  pAVar9 = &<span class=\"supfact\">s</span>->midbuf;\n                  for (<span class=\"supfact\">lVar7</span> = Number;\n                       <span class=\"supfact\">lVar7</span> != Number;\n                       <span class=\"supfact\">lVar7</span> =\n                           <span class=\"supfact\">lVar7</span> + -Number) {\n                    pAVar9->ch[Number] = pAVar8->ch[Number];\n                    pAVar8 =\n                        (AudioData *)((long)pAVar8 +\n                                      (ulong)<span class=\"supfact\">bVar10</span> * -Number +\n                                      Number);\n                    pAVar9 =\n                        (AudioData *)((long)pAVar9 +\n                                      (ulong)<span class=\"supfact\">bVar10</span> * -Number +\n                                      Number);\n                  }\n                  if (<span class=\"supfact\">s</span>->channel_map != (int *)Number) {\n                    (<span class=\"supfact\">s</span>->midbuf).ch_count =\n                        <span class=\"supfact\">s</span>->used_ch_count;\n                    (<span class=\"supfact\">s</span>->postin).ch_count =\n                        (<span class=\"supfact\">s</span>->midbuf).ch_count;\n                    if (<span class=\"supfact\">s</span>->resample !=\n                        (ResampleContext *)Number) {\n                      (<span class=\"supfact\">s</span>->in_buffer).ch_count =\n                          <span class=\"supfact\">s</span>->used_ch_count;\n                    }\n                  }\n                  if ((<span class=\"supfact\">s</span>->resample_first == Number) &&\n                      ((<span class=\"supfact\">s</span>->midbuf).ch_count =\n                           (<span class=\"supfact\">s</span>->out).ch_count,\n                       <span class=\"supfact\">s</span>->resample !=\n                           (ResampleContext *)Number)) {\n                    (<span class=\"supfact\">s</span>->in_buffer).ch_count =\n                        (<span class=\"supfact\">s</span>->out).ch_count;\n                  }\n                  set_audiodata_fmt(&<span class=\"supfact\">s</span>->postin,\n                                    <span class=\"supfact\">s</span>->int_sample_fmt);\n                  set_audiodata_fmt(&<span class=\"supfact\">s</span>->midbuf,\n                                    <span class=\"supfact\">s</span>->int_sample_fmt);\n                  set_audiodata_fmt(&<span class=\"supfact\">s</span>->preout,\n                                    <span class=\"supfact\">s</span>->int_sample_fmt);\n                  if (<span class=\"supfact\">s</span>->resample !=\n                      (ResampleContext *)Number) {\n                    set_audiodata_fmt(&<span class=\"supfact\">s</span>->in_buffer,\n                                      <span class=\"supfact\">s</span>->int_sample_fmt);\n                  }\n                  iVar1 = swri_dither_init(<span class=\"supfact\">s</span>,\n                                           <span class=\"supfact\">s</span>->out_sample_fmt,\n                                           <span class=\"supfact\">s</span>->int_sample_fmt);\n                  if (-Number < iVar1) {\n                    if ((<span class=\"supfact\">s</span>->rematrix == Number) &&\n                        ((<span class=\"supfact\">s</span>->dither).method ==\n                         SWR_DITHER_NONE)) {\n                      iVar1 = Number;\n                    } else {\n                      iVar1 = swri_rematrix_init(<span class=\"supfact\">s</span>);\n                    }\n                  }\n                }\n              }\n            }\n          } else {\n            av_log(<span class=\"supfact\">s</span>, Number, String);\n            iVar1 = -Number;\n          }\n        } else {\n          uVar4 = av_get_sample_fmt_name(<span class=\"supfact\">s</span>->int_sample_fmt);\n          av_log(<span class=\"supfact\">s</span>, Number, String, uVar4);\n          iVar1 = -Number;\n        }\n      } else {\n        av_log(<span class=\"supfact\">s</span>, Number, String);\n        iVar1 = -Number;\n      }\n    } else {\n      av_log(<span class=\"supfact\">s</span>, Number, String,\n             <span class=\"supfact\">s</span>->out_sample_fmt);\n      iVar1 = -Number;\n    }\n  } else {\n    av_log(<span class=\"supfact\">s</span>, Number, String, <span class=\"supfact\">s</span>->in_sample_fmt);\n    iVar1 = -Number;\n  }\n  return iVar1;\n}", "var": [{"name": "param_1", "type": "SwrContext * *", "pred_name": "s", "ref_name": "s", "ref_type": "SwrContext * *"}, {"name": "lVar6", "type": "long", "pred_name": "lVar7", "ref_name": "lVar7", "ref_type": "long"}, {"name": "bVar9", "type": "byte", "pred_name": "bVar10", "ref_name": "bVar10", "ref_type": "byte"}, {"name": "local_828", "type": "char[1024][1024]", "pred_name": "l1", "ref_name": "l1", "ref_type": "char[1024][1024]"}, {"name": "local_428", "type": "char[1024][1024]", "pred_name": "l2", "ref_name": "l2", "ref_type": "char[1024][1024]"}, {"name": "local_1c", "type": "int", "pred_name": "ret", "ref_name": "ret", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "sohil318", "repo_name": "cse533", "path": "sohil318/cse533/23f5616a30777eee624f3f99702bbc90d9db41a8ed5db710ee97ab563ab5b5b3", "path_in_repo": "sohil318/cse533/Stevens/unpv13e/threads/example03", "objdump": "", "code_s": "int pthread_join(pthread_t __th, void **__thread_return) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_join_00404088)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int pthread_join(pthread_t __th, void **__thread_return) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_join_00404088)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "bpillon", "repo_name": "android-ffmpeg-wrapper", "path": "bpillon/android-ffmpeg-wrapper/ba1cff2608504ca3b34e6f7884c235aab00d828df51cb6f4520ff842ce1e8ea9", "path_in_repo": "bpillon/android-ffmpeg-wrapper/jni/ffmpeg/libavcodec/h264idct.o", "objdump": "0000000000002924 <ff_h264_idct8_add_9_c>:\n    2924:\t48 81 ec 08 01 00 00 \tsub    $0x108,%rsp\n    292b:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n    2930:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n    2935:\t89 54 24 0c          \tmov    %edx,0xc(%rsp)\n    2939:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    293e:\t48 89 84 24 f0 00 00 \tmov    %rax,0xf0(%rsp)\n    2945:\t00 \n    2946:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    294b:\t48 89 84 24 e8 00 00 \tmov    %rax,0xe8(%rsp)\n    2952:\t00 \n    2953:\td1 7c 24 0c          \tsarl   0xc(%rsp)\n    2957:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    295e:\t00 \n    295f:\t8b 00                \tmov    (%rax),%eax\n    2961:\t8d 50 20             \tlea    0x20(%rax),%edx\n    2964:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    296b:\t00 \n    296c:\t89 10                \tmov    %edx,(%rax)\n    296e:\tc7 84 24 fc 00 00 00 \tmovl   $0x0,0xfc(%rsp)\n    2975:\t00 00 00 00 \n    2979:\te9 b2 05 00 00       \tjmp    2f30 <ff_h264_idct8_add_9_c+0x60c>\n    297e:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2985:\t48 98                \tcltq   \n    2987:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    298e:\t00 \n    298f:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2996:\t00 \n    2997:\t48 01 d0             \tadd    %rdx,%rax\n    299a:\t8b 10                \tmov    (%rax),%edx\n    299c:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    29a3:\t48 98                \tcltq   \n    29a5:\t48 83 c0 20          \tadd    $0x20,%rax\n    29a9:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    29b0:\t00 \n    29b1:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    29b8:\t00 \n    29b9:\t48 01 c8             \tadd    %rcx,%rax\n    29bc:\t8b 00                \tmov    (%rax),%eax\n    29be:\t01 d0                \tadd    %edx,%eax\n    29c0:\t89 84 24 a4 00 00 00 \tmov    %eax,0xa4(%rsp)\n    29c7:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    29ce:\t48 98                \tcltq   \n    29d0:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    29d7:\t00 \n    29d8:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    29df:\t00 \n    29e0:\t48 01 d0             \tadd    %rdx,%rax\n    29e3:\t8b 10                \tmov    (%rax),%edx\n    29e5:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    29ec:\t48 98                \tcltq   \n    29ee:\t48 83 c0 20          \tadd    $0x20,%rax\n    29f2:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    29f9:\t00 \n    29fa:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2a01:\t00 \n    2a02:\t48 01 c8             \tadd    %rcx,%rax\n    2a05:\t8b 00                \tmov    (%rax),%eax\n    2a07:\t29 c2                \tsub    %eax,%edx\n    2a09:\t89 d0                \tmov    %edx,%eax\n    2a0b:\t89 84 24 a0 00 00 00 \tmov    %eax,0xa0(%rsp)\n    2a12:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2a19:\t48 98                \tcltq   \n    2a1b:\t48 83 c0 10          \tadd    $0x10,%rax\n    2a1f:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2a26:\t00 \n    2a27:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2a2e:\t00 \n    2a2f:\t48 01 d0             \tadd    %rdx,%rax\n    2a32:\t8b 00                \tmov    (%rax),%eax\n    2a34:\td1 f8                \tsar    %eax\n    2a36:\t89 c2                \tmov    %eax,%edx\n    2a38:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2a3f:\t48 98                \tcltq   \n    2a41:\t48 83 c0 30          \tadd    $0x30,%rax\n    2a45:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2a4c:\t00 \n    2a4d:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2a54:\t00 \n    2a55:\t48 01 c8             \tadd    %rcx,%rax\n    2a58:\t8b 00                \tmov    (%rax),%eax\n    2a5a:\t29 c2                \tsub    %eax,%edx\n    2a5c:\t89 d0                \tmov    %edx,%eax\n    2a5e:\t89 84 24 9c 00 00 00 \tmov    %eax,0x9c(%rsp)\n    2a65:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2a6c:\t48 98                \tcltq   \n    2a6e:\t48 83 c0 30          \tadd    $0x30,%rax\n    2a72:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2a79:\t00 \n    2a7a:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2a81:\t00 \n    2a82:\t48 01 d0             \tadd    %rdx,%rax\n    2a85:\t8b 00                \tmov    (%rax),%eax\n    2a87:\td1 f8                \tsar    %eax\n    2a89:\t89 c2                \tmov    %eax,%edx\n    2a8b:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2a92:\t48 98                \tcltq   \n    2a94:\t48 83 c0 10          \tadd    $0x10,%rax\n    2a98:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2a9f:\t00 \n    2aa0:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2aa7:\t00 \n    2aa8:\t48 01 c8             \tadd    %rcx,%rax\n    2aab:\t8b 00                \tmov    (%rax),%eax\n    2aad:\t01 d0                \tadd    %edx,%eax\n    2aaf:\t89 84 24 98 00 00 00 \tmov    %eax,0x98(%rsp)\n    2ab6:\t8b 94 24 a4 00 00 00 \tmov    0xa4(%rsp),%edx\n    2abd:\t8b 84 24 98 00 00 00 \tmov    0x98(%rsp),%eax\n    2ac4:\t01 d0                \tadd    %edx,%eax\n    2ac6:\t89 84 24 94 00 00 00 \tmov    %eax,0x94(%rsp)\n    2acd:\t8b 94 24 a0 00 00 00 \tmov    0xa0(%rsp),%edx\n    2ad4:\t8b 84 24 9c 00 00 00 \tmov    0x9c(%rsp),%eax\n    2adb:\t01 d0                \tadd    %edx,%eax\n    2add:\t89 84 24 90 00 00 00 \tmov    %eax,0x90(%rsp)\n    2ae4:\t8b 84 24 a0 00 00 00 \tmov    0xa0(%rsp),%eax\n    2aeb:\t2b 84 24 9c 00 00 00 \tsub    0x9c(%rsp),%eax\n    2af2:\t89 84 24 8c 00 00 00 \tmov    %eax,0x8c(%rsp)\n    2af9:\t8b 84 24 a4 00 00 00 \tmov    0xa4(%rsp),%eax\n    2b00:\t2b 84 24 98 00 00 00 \tsub    0x98(%rsp),%eax\n    2b07:\t89 84 24 88 00 00 00 \tmov    %eax,0x88(%rsp)\n    2b0e:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2b15:\t48 98                \tcltq   \n    2b17:\t48 83 c0 28          \tadd    $0x28,%rax\n    2b1b:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2b22:\t00 \n    2b23:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2b2a:\t00 \n    2b2b:\t48 01 d0             \tadd    %rdx,%rax\n    2b2e:\t8b 10                \tmov    (%rax),%edx\n    2b30:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2b37:\t48 98                \tcltq   \n    2b39:\t48 83 c0 18          \tadd    $0x18,%rax\n    2b3d:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2b44:\t00 \n    2b45:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2b4c:\t00 \n    2b4d:\t48 01 c8             \tadd    %rcx,%rax\n    2b50:\t8b 00                \tmov    (%rax),%eax\n    2b52:\t29 c2                \tsub    %eax,%edx\n    2b54:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2b5b:\t48 98                \tcltq   \n    2b5d:\t48 83 c0 38          \tadd    $0x38,%rax\n    2b61:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2b68:\t00 \n    2b69:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2b70:\t00 \n    2b71:\t48 01 c8             \tadd    %rcx,%rax\n    2b74:\t8b 00                \tmov    (%rax),%eax\n    2b76:\t29 c2                \tsub    %eax,%edx\n    2b78:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2b7f:\t48 98                \tcltq   \n    2b81:\t48 83 c0 38          \tadd    $0x38,%rax\n    2b85:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2b8c:\t00 \n    2b8d:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2b94:\t00 \n    2b95:\t48 01 c8             \tadd    %rcx,%rax\n    2b98:\t8b 00                \tmov    (%rax),%eax\n    2b9a:\td1 f8                \tsar    %eax\n    2b9c:\t29 c2                \tsub    %eax,%edx\n    2b9e:\t89 d0                \tmov    %edx,%eax\n    2ba0:\t89 84 24 84 00 00 00 \tmov    %eax,0x84(%rsp)\n    2ba7:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2bae:\t48 98                \tcltq   \n    2bb0:\t48 83 c0 08          \tadd    $0x8,%rax\n    2bb4:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2bbb:\t00 \n    2bbc:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2bc3:\t00 \n    2bc4:\t48 01 d0             \tadd    %rdx,%rax\n    2bc7:\t8b 10                \tmov    (%rax),%edx\n    2bc9:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2bd0:\t48 98                \tcltq   \n    2bd2:\t48 83 c0 38          \tadd    $0x38,%rax\n    2bd6:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2bdd:\t00 \n    2bde:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2be5:\t00 \n    2be6:\t48 01 c8             \tadd    %rcx,%rax\n    2be9:\t8b 00                \tmov    (%rax),%eax\n    2beb:\t01 c2                \tadd    %eax,%edx\n    2bed:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2bf4:\t48 98                \tcltq   \n    2bf6:\t48 83 c0 18          \tadd    $0x18,%rax\n    2bfa:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2c01:\t00 \n    2c02:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2c09:\t00 \n    2c0a:\t48 01 c8             \tadd    %rcx,%rax\n    2c0d:\t8b 00                \tmov    (%rax),%eax\n    2c0f:\t29 c2                \tsub    %eax,%edx\n    2c11:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2c18:\t48 98                \tcltq   \n    2c1a:\t48 83 c0 18          \tadd    $0x18,%rax\n    2c1e:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2c25:\t00 \n    2c26:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2c2d:\t00 \n    2c2e:\t48 01 c8             \tadd    %rcx,%rax\n    2c31:\t8b 00                \tmov    (%rax),%eax\n    2c33:\td1 f8                \tsar    %eax\n    2c35:\t29 c2                \tsub    %eax,%edx\n    2c37:\t89 d0                \tmov    %edx,%eax\n    2c39:\t89 84 24 80 00 00 00 \tmov    %eax,0x80(%rsp)\n    2c40:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2c47:\t48 98                \tcltq   \n    2c49:\t48 83 c0 38          \tadd    $0x38,%rax\n    2c4d:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2c54:\t00 \n    2c55:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2c5c:\t00 \n    2c5d:\t48 01 d0             \tadd    %rdx,%rax\n    2c60:\t8b 10                \tmov    (%rax),%edx\n    2c62:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2c69:\t48 98                \tcltq   \n    2c6b:\t48 83 c0 08          \tadd    $0x8,%rax\n    2c6f:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2c76:\t00 \n    2c77:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2c7e:\t00 \n    2c7f:\t48 01 c8             \tadd    %rcx,%rax\n    2c82:\t8b 00                \tmov    (%rax),%eax\n    2c84:\t29 c2                \tsub    %eax,%edx\n    2c86:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2c8d:\t48 98                \tcltq   \n    2c8f:\t48 83 c0 28          \tadd    $0x28,%rax\n    2c93:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2c9a:\t00 \n    2c9b:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2ca2:\t00 \n    2ca3:\t48 01 c8             \tadd    %rcx,%rax\n    2ca6:\t8b 00                \tmov    (%rax),%eax\n    2ca8:\t01 c2                \tadd    %eax,%edx\n    2caa:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2cb1:\t48 98                \tcltq   \n    2cb3:\t48 83 c0 28          \tadd    $0x28,%rax\n    2cb7:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2cbe:\t00 \n    2cbf:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2cc6:\t00 \n    2cc7:\t48 01 c8             \tadd    %rcx,%rax\n    2cca:\t8b 00                \tmov    (%rax),%eax\n    2ccc:\td1 f8                \tsar    %eax\n    2cce:\t01 d0                \tadd    %edx,%eax\n    2cd0:\t89 44 24 7c          \tmov    %eax,0x7c(%rsp)\n    2cd4:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2cdb:\t48 98                \tcltq   \n    2cdd:\t48 83 c0 18          \tadd    $0x18,%rax\n    2ce1:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2ce8:\t00 \n    2ce9:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2cf0:\t00 \n    2cf1:\t48 01 d0             \tadd    %rdx,%rax\n    2cf4:\t8b 10                \tmov    (%rax),%edx\n    2cf6:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2cfd:\t48 98                \tcltq   \n    2cff:\t48 83 c0 28          \tadd    $0x28,%rax\n    2d03:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2d0a:\t00 \n    2d0b:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2d12:\t00 \n    2d13:\t48 01 c8             \tadd    %rcx,%rax\n    2d16:\t8b 00                \tmov    (%rax),%eax\n    2d18:\t01 c2                \tadd    %eax,%edx\n    2d1a:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2d21:\t48 98                \tcltq   \n    2d23:\t48 83 c0 08          \tadd    $0x8,%rax\n    2d27:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2d2e:\t00 \n    2d2f:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2d36:\t00 \n    2d37:\t48 01 c8             \tadd    %rcx,%rax\n    2d3a:\t8b 00                \tmov    (%rax),%eax\n    2d3c:\t01 c2                \tadd    %eax,%edx\n    2d3e:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2d45:\t48 98                \tcltq   \n    2d47:\t48 83 c0 08          \tadd    $0x8,%rax\n    2d4b:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2d52:\t00 \n    2d53:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2d5a:\t00 \n    2d5b:\t48 01 c8             \tadd    %rcx,%rax\n    2d5e:\t8b 00                \tmov    (%rax),%eax\n    2d60:\td1 f8                \tsar    %eax\n    2d62:\t01 d0                \tadd    %edx,%eax\n    2d64:\t89 44 24 78          \tmov    %eax,0x78(%rsp)\n    2d68:\t8b 44 24 78          \tmov    0x78(%rsp),%eax\n    2d6c:\tc1 f8 02             \tsar    $0x2,%eax\n    2d6f:\t89 c2                \tmov    %eax,%edx\n    2d71:\t8b 84 24 84 00 00 00 \tmov    0x84(%rsp),%eax\n    2d78:\t01 d0                \tadd    %edx,%eax\n    2d7a:\t89 44 24 74          \tmov    %eax,0x74(%rsp)\n    2d7e:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    2d82:\tc1 f8 02             \tsar    $0x2,%eax\n    2d85:\t89 c2                \tmov    %eax,%edx\n    2d87:\t8b 84 24 80 00 00 00 \tmov    0x80(%rsp),%eax\n    2d8e:\t01 d0                \tadd    %edx,%eax\n    2d90:\t89 44 24 70          \tmov    %eax,0x70(%rsp)\n    2d94:\t8b 84 24 80 00 00 00 \tmov    0x80(%rsp),%eax\n    2d9b:\tc1 f8 02             \tsar    $0x2,%eax\n    2d9e:\t2b 44 24 7c          \tsub    0x7c(%rsp),%eax\n    2da2:\t89 44 24 6c          \tmov    %eax,0x6c(%rsp)\n    2da6:\t8b 84 24 84 00 00 00 \tmov    0x84(%rsp),%eax\n    2dad:\tc1 f8 02             \tsar    $0x2,%eax\n    2db0:\t89 c2                \tmov    %eax,%edx\n    2db2:\t8b 44 24 78          \tmov    0x78(%rsp),%eax\n    2db6:\t29 d0                \tsub    %edx,%eax\n    2db8:\t89 44 24 68          \tmov    %eax,0x68(%rsp)\n    2dbc:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2dc3:\t48 98                \tcltq   \n    2dc5:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2dcc:\t00 \n    2dcd:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2dd4:\t00 \n    2dd5:\t48 01 d0             \tadd    %rdx,%rax\n    2dd8:\t8b 8c 24 94 00 00 00 \tmov    0x94(%rsp),%ecx\n    2ddf:\t8b 54 24 68          \tmov    0x68(%rsp),%edx\n    2de3:\t01 ca                \tadd    %ecx,%edx\n    2de5:\t89 10                \tmov    %edx,(%rax)\n    2de7:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2dee:\t48 98                \tcltq   \n    2df0:\t48 83 c0 38          \tadd    $0x38,%rax\n    2df4:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2dfb:\t00 \n    2dfc:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2e03:\t00 \n    2e04:\t48 01 c2             \tadd    %rax,%rdx\n    2e07:\t8b 84 24 94 00 00 00 \tmov    0x94(%rsp),%eax\n    2e0e:\t2b 44 24 68          \tsub    0x68(%rsp),%eax\n    2e12:\t89 02                \tmov    %eax,(%rdx)\n    2e14:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2e1b:\t48 98                \tcltq   \n    2e1d:\t48 83 c0 08          \tadd    $0x8,%rax\n    2e21:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2e28:\t00 \n    2e29:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2e30:\t00 \n    2e31:\t48 01 d0             \tadd    %rdx,%rax\n    2e34:\t8b 8c 24 90 00 00 00 \tmov    0x90(%rsp),%ecx\n    2e3b:\t8b 54 24 6c          \tmov    0x6c(%rsp),%edx\n    2e3f:\t01 ca                \tadd    %ecx,%edx\n    2e41:\t89 10                \tmov    %edx,(%rax)\n    2e43:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2e4a:\t48 98                \tcltq   \n    2e4c:\t48 83 c0 30          \tadd    $0x30,%rax\n    2e50:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2e57:\t00 \n    2e58:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2e5f:\t00 \n    2e60:\t48 01 c2             \tadd    %rax,%rdx\n    2e63:\t8b 84 24 90 00 00 00 \tmov    0x90(%rsp),%eax\n    2e6a:\t2b 44 24 6c          \tsub    0x6c(%rsp),%eax\n    2e6e:\t89 02                \tmov    %eax,(%rdx)\n    2e70:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2e77:\t48 98                \tcltq   \n    2e79:\t48 83 c0 10          \tadd    $0x10,%rax\n    2e7d:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2e84:\t00 \n    2e85:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2e8c:\t00 \n    2e8d:\t48 01 d0             \tadd    %rdx,%rax\n    2e90:\t8b 8c 24 8c 00 00 00 \tmov    0x8c(%rsp),%ecx\n    2e97:\t8b 54 24 70          \tmov    0x70(%rsp),%edx\n    2e9b:\t01 ca                \tadd    %ecx,%edx\n    2e9d:\t89 10                \tmov    %edx,(%rax)\n    2e9f:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2ea6:\t48 98                \tcltq   \n    2ea8:\t48 83 c0 28          \tadd    $0x28,%rax\n    2eac:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2eb3:\t00 \n    2eb4:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2ebb:\t00 \n    2ebc:\t48 01 c2             \tadd    %rax,%rdx\n    2ebf:\t8b 84 24 8c 00 00 00 \tmov    0x8c(%rsp),%eax\n    2ec6:\t2b 44 24 70          \tsub    0x70(%rsp),%eax\n    2eca:\t89 02                \tmov    %eax,(%rdx)\n    2ecc:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2ed3:\t48 98                \tcltq   \n    2ed5:\t48 83 c0 18          \tadd    $0x18,%rax\n    2ed9:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2ee0:\t00 \n    2ee1:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2ee8:\t00 \n    2ee9:\t48 01 d0             \tadd    %rdx,%rax\n    2eec:\t8b 8c 24 88 00 00 00 \tmov    0x88(%rsp),%ecx\n    2ef3:\t8b 54 24 74          \tmov    0x74(%rsp),%edx\n    2ef7:\t01 ca                \tadd    %ecx,%edx\n    2ef9:\t89 10                \tmov    %edx,(%rax)\n    2efb:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2f02:\t48 98                \tcltq   \n    2f04:\t48 83 c0 20          \tadd    $0x20,%rax\n    2f08:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2f0f:\t00 \n    2f10:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2f17:\t00 \n    2f18:\t48 01 c2             \tadd    %rax,%rdx\n    2f1b:\t8b 84 24 88 00 00 00 \tmov    0x88(%rsp),%eax\n    2f22:\t2b 44 24 74          \tsub    0x74(%rsp),%eax\n    2f26:\t89 02                \tmov    %eax,(%rdx)\n    2f28:\t83 84 24 fc 00 00 00 \taddl   $0x1,0xfc(%rsp)\n    2f2f:\t01 \n    2f30:\t83 bc 24 fc 00 00 00 \tcmpl   $0x7,0xfc(%rsp)\n    2f37:\t07 \n    2f38:\t0f 8e 40 fa ff ff    \tjle    297e <ff_h264_idct8_add_9_c+0x5a>\n    2f3e:\tc7 84 24 fc 00 00 00 \tmovl   $0x0,0xfc(%rsp)\n    2f45:\t00 00 00 00 \n    2f49:\te9 ea 09 00 00       \tjmp    3938 <ff_h264_idct8_add_9_c+0x1014>\n    2f4e:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2f55:\tc1 e0 03             \tshl    $0x3,%eax\n    2f58:\t48 98                \tcltq   \n    2f5a:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2f61:\t00 \n    2f62:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2f69:\t00 \n    2f6a:\t48 01 d0             \tadd    %rdx,%rax\n    2f6d:\t8b 10                \tmov    (%rax),%edx\n    2f6f:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2f76:\tc1 e0 03             \tshl    $0x3,%eax\n    2f79:\t83 c0 04             \tadd    $0x4,%eax\n    2f7c:\t48 98                \tcltq   \n    2f7e:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2f85:\t00 \n    2f86:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2f8d:\t00 \n    2f8e:\t48 01 c8             \tadd    %rcx,%rax\n    2f91:\t8b 00                \tmov    (%rax),%eax\n    2f93:\t01 d0                \tadd    %edx,%eax\n    2f95:\t89 84 24 e4 00 00 00 \tmov    %eax,0xe4(%rsp)\n    2f9c:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2fa3:\tc1 e0 03             \tshl    $0x3,%eax\n    2fa6:\t48 98                \tcltq   \n    2fa8:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    2faf:\t00 \n    2fb0:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2fb7:\t00 \n    2fb8:\t48 01 d0             \tadd    %rdx,%rax\n    2fbb:\t8b 10                \tmov    (%rax),%edx\n    2fbd:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2fc4:\tc1 e0 03             \tshl    $0x3,%eax\n    2fc7:\t83 c0 04             \tadd    $0x4,%eax\n    2fca:\t48 98                \tcltq   \n    2fcc:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    2fd3:\t00 \n    2fd4:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    2fdb:\t00 \n    2fdc:\t48 01 c8             \tadd    %rcx,%rax\n    2fdf:\t8b 00                \tmov    (%rax),%eax\n    2fe1:\t29 c2                \tsub    %eax,%edx\n    2fe3:\t89 d0                \tmov    %edx,%eax\n    2fe5:\t89 84 24 e0 00 00 00 \tmov    %eax,0xe0(%rsp)\n    2fec:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    2ff3:\tc1 e0 03             \tshl    $0x3,%eax\n    2ff6:\t83 c0 02             \tadd    $0x2,%eax\n    2ff9:\t48 98                \tcltq   \n    2ffb:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    3002:\t00 \n    3003:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    300a:\t00 \n    300b:\t48 01 d0             \tadd    %rdx,%rax\n    300e:\t8b 00                \tmov    (%rax),%eax\n    3010:\td1 f8                \tsar    %eax\n    3012:\t89 c2                \tmov    %eax,%edx\n    3014:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    301b:\tc1 e0 03             \tshl    $0x3,%eax\n    301e:\t83 c0 06             \tadd    $0x6,%eax\n    3021:\t48 98                \tcltq   \n    3023:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    302a:\t00 \n    302b:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    3032:\t00 \n    3033:\t48 01 c8             \tadd    %rcx,%rax\n    3036:\t8b 00                \tmov    (%rax),%eax\n    3038:\t29 c2                \tsub    %eax,%edx\n    303a:\t89 d0                \tmov    %edx,%eax\n    303c:\t89 84 24 dc 00 00 00 \tmov    %eax,0xdc(%rsp)\n    3043:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    304a:\tc1 e0 03             \tshl    $0x3,%eax\n    304d:\t83 c0 06             \tadd    $0x6,%eax\n    3050:\t48 98                \tcltq   \n    3052:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    3059:\t00 \n    305a:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    3061:\t00 \n    3062:\t48 01 d0             \tadd    %rdx,%rax\n    3065:\t8b 00                \tmov    (%rax),%eax\n    3067:\td1 f8                \tsar    %eax\n    3069:\t89 c2                \tmov    %eax,%edx\n    306b:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3072:\tc1 e0 03             \tshl    $0x3,%eax\n    3075:\t83 c0 02             \tadd    $0x2,%eax\n    3078:\t48 98                \tcltq   \n    307a:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    3081:\t00 \n    3082:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    3089:\t00 \n    308a:\t48 01 c8             \tadd    %rcx,%rax\n    308d:\t8b 00                \tmov    (%rax),%eax\n    308f:\t01 d0                \tadd    %edx,%eax\n    3091:\t89 84 24 d8 00 00 00 \tmov    %eax,0xd8(%rsp)\n    3098:\t8b 94 24 e4 00 00 00 \tmov    0xe4(%rsp),%edx\n    309f:\t8b 84 24 d8 00 00 00 \tmov    0xd8(%rsp),%eax\n    30a6:\t01 d0                \tadd    %edx,%eax\n    30a8:\t89 84 24 d4 00 00 00 \tmov    %eax,0xd4(%rsp)\n    30af:\t8b 94 24 e0 00 00 00 \tmov    0xe0(%rsp),%edx\n    30b6:\t8b 84 24 dc 00 00 00 \tmov    0xdc(%rsp),%eax\n    30bd:\t01 d0                \tadd    %edx,%eax\n    30bf:\t89 84 24 d0 00 00 00 \tmov    %eax,0xd0(%rsp)\n    30c6:\t8b 84 24 e0 00 00 00 \tmov    0xe0(%rsp),%eax\n    30cd:\t2b 84 24 dc 00 00 00 \tsub    0xdc(%rsp),%eax\n    30d4:\t89 84 24 cc 00 00 00 \tmov    %eax,0xcc(%rsp)\n    30db:\t8b 84 24 e4 00 00 00 \tmov    0xe4(%rsp),%eax\n    30e2:\t2b 84 24 d8 00 00 00 \tsub    0xd8(%rsp),%eax\n    30e9:\t89 84 24 c8 00 00 00 \tmov    %eax,0xc8(%rsp)\n    30f0:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    30f7:\tc1 e0 03             \tshl    $0x3,%eax\n    30fa:\t83 c0 05             \tadd    $0x5,%eax\n    30fd:\t48 98                \tcltq   \n    30ff:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    3106:\t00 \n    3107:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    310e:\t00 \n    310f:\t48 01 d0             \tadd    %rdx,%rax\n    3112:\t8b 10                \tmov    (%rax),%edx\n    3114:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    311b:\tc1 e0 03             \tshl    $0x3,%eax\n    311e:\t83 c0 03             \tadd    $0x3,%eax\n    3121:\t48 98                \tcltq   \n    3123:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    312a:\t00 \n    312b:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    3132:\t00 \n    3133:\t48 01 c8             \tadd    %rcx,%rax\n    3136:\t8b 00                \tmov    (%rax),%eax\n    3138:\t29 c2                \tsub    %eax,%edx\n    313a:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3141:\tc1 e0 03             \tshl    $0x3,%eax\n    3144:\t83 c0 07             \tadd    $0x7,%eax\n    3147:\t48 98                \tcltq   \n    3149:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    3150:\t00 \n    3151:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    3158:\t00 \n    3159:\t48 01 c8             \tadd    %rcx,%rax\n    315c:\t8b 00                \tmov    (%rax),%eax\n    315e:\t29 c2                \tsub    %eax,%edx\n    3160:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3167:\tc1 e0 03             \tshl    $0x3,%eax\n    316a:\t83 c0 07             \tadd    $0x7,%eax\n    316d:\t48 98                \tcltq   \n    316f:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    3176:\t00 \n    3177:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    317e:\t00 \n    317f:\t48 01 c8             \tadd    %rcx,%rax\n    3182:\t8b 00                \tmov    (%rax),%eax\n    3184:\td1 f8                \tsar    %eax\n    3186:\t29 c2                \tsub    %eax,%edx\n    3188:\t89 d0                \tmov    %edx,%eax\n    318a:\t89 84 24 c4 00 00 00 \tmov    %eax,0xc4(%rsp)\n    3191:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3198:\tc1 e0 03             \tshl    $0x3,%eax\n    319b:\t83 c0 01             \tadd    $0x1,%eax\n    319e:\t48 98                \tcltq   \n    31a0:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    31a7:\t00 \n    31a8:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    31af:\t00 \n    31b0:\t48 01 d0             \tadd    %rdx,%rax\n    31b3:\t8b 10                \tmov    (%rax),%edx\n    31b5:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    31bc:\tc1 e0 03             \tshl    $0x3,%eax\n    31bf:\t83 c0 07             \tadd    $0x7,%eax\n    31c2:\t48 98                \tcltq   \n    31c4:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    31cb:\t00 \n    31cc:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    31d3:\t00 \n    31d4:\t48 01 c8             \tadd    %rcx,%rax\n    31d7:\t8b 00                \tmov    (%rax),%eax\n    31d9:\t01 c2                \tadd    %eax,%edx\n    31db:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    31e2:\tc1 e0 03             \tshl    $0x3,%eax\n    31e5:\t83 c0 03             \tadd    $0x3,%eax\n    31e8:\t48 98                \tcltq   \n    31ea:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    31f1:\t00 \n    31f2:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    31f9:\t00 \n    31fa:\t48 01 c8             \tadd    %rcx,%rax\n    31fd:\t8b 00                \tmov    (%rax),%eax\n    31ff:\t29 c2                \tsub    %eax,%edx\n    3201:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3208:\tc1 e0 03             \tshl    $0x3,%eax\n    320b:\t83 c0 03             \tadd    $0x3,%eax\n    320e:\t48 98                \tcltq   \n    3210:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    3217:\t00 \n    3218:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    321f:\t00 \n    3220:\t48 01 c8             \tadd    %rcx,%rax\n    3223:\t8b 00                \tmov    (%rax),%eax\n    3225:\td1 f8                \tsar    %eax\n    3227:\t29 c2                \tsub    %eax,%edx\n    3229:\t89 d0                \tmov    %edx,%eax\n    322b:\t89 84 24 c0 00 00 00 \tmov    %eax,0xc0(%rsp)\n    3232:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3239:\tc1 e0 03             \tshl    $0x3,%eax\n    323c:\t83 c0 07             \tadd    $0x7,%eax\n    323f:\t48 98                \tcltq   \n    3241:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    3248:\t00 \n    3249:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    3250:\t00 \n    3251:\t48 01 d0             \tadd    %rdx,%rax\n    3254:\t8b 10                \tmov    (%rax),%edx\n    3256:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    325d:\tc1 e0 03             \tshl    $0x3,%eax\n    3260:\t83 c0 01             \tadd    $0x1,%eax\n    3263:\t48 98                \tcltq   \n    3265:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    326c:\t00 \n    326d:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    3274:\t00 \n    3275:\t48 01 c8             \tadd    %rcx,%rax\n    3278:\t8b 00                \tmov    (%rax),%eax\n    327a:\t29 c2                \tsub    %eax,%edx\n    327c:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3283:\tc1 e0 03             \tshl    $0x3,%eax\n    3286:\t83 c0 05             \tadd    $0x5,%eax\n    3289:\t48 98                \tcltq   \n    328b:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    3292:\t00 \n    3293:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    329a:\t00 \n    329b:\t48 01 c8             \tadd    %rcx,%rax\n    329e:\t8b 00                \tmov    (%rax),%eax\n    32a0:\t01 c2                \tadd    %eax,%edx\n    32a2:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    32a9:\tc1 e0 03             \tshl    $0x3,%eax\n    32ac:\t83 c0 05             \tadd    $0x5,%eax\n    32af:\t48 98                \tcltq   \n    32b1:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    32b8:\t00 \n    32b9:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    32c0:\t00 \n    32c1:\t48 01 c8             \tadd    %rcx,%rax\n    32c4:\t8b 00                \tmov    (%rax),%eax\n    32c6:\td1 f8                \tsar    %eax\n    32c8:\t01 d0                \tadd    %edx,%eax\n    32ca:\t89 84 24 bc 00 00 00 \tmov    %eax,0xbc(%rsp)\n    32d1:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    32d8:\tc1 e0 03             \tshl    $0x3,%eax\n    32db:\t83 c0 03             \tadd    $0x3,%eax\n    32de:\t48 98                \tcltq   \n    32e0:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    32e7:\t00 \n    32e8:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    32ef:\t00 \n    32f0:\t48 01 d0             \tadd    %rdx,%rax\n    32f3:\t8b 10                \tmov    (%rax),%edx\n    32f5:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    32fc:\tc1 e0 03             \tshl    $0x3,%eax\n    32ff:\t83 c0 05             \tadd    $0x5,%eax\n    3302:\t48 98                \tcltq   \n    3304:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    330b:\t00 \n    330c:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    3313:\t00 \n    3314:\t48 01 c8             \tadd    %rcx,%rax\n    3317:\t8b 00                \tmov    (%rax),%eax\n    3319:\t01 c2                \tadd    %eax,%edx\n    331b:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3322:\tc1 e0 03             \tshl    $0x3,%eax\n    3325:\t83 c0 01             \tadd    $0x1,%eax\n    3328:\t48 98                \tcltq   \n    332a:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    3331:\t00 \n    3332:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    3339:\t00 \n    333a:\t48 01 c8             \tadd    %rcx,%rax\n    333d:\t8b 00                \tmov    (%rax),%eax\n    333f:\t01 c2                \tadd    %eax,%edx\n    3341:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3348:\tc1 e0 03             \tshl    $0x3,%eax\n    334b:\t83 c0 01             \tadd    $0x1,%eax\n    334e:\t48 98                \tcltq   \n    3350:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    3357:\t00 \n    3358:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    335f:\t00 \n    3360:\t48 01 c8             \tadd    %rcx,%rax\n    3363:\t8b 00                \tmov    (%rax),%eax\n    3365:\td1 f8                \tsar    %eax\n    3367:\t01 d0                \tadd    %edx,%eax\n    3369:\t89 84 24 b8 00 00 00 \tmov    %eax,0xb8(%rsp)\n    3370:\t8b 84 24 b8 00 00 00 \tmov    0xb8(%rsp),%eax\n    3377:\tc1 f8 02             \tsar    $0x2,%eax\n    337a:\t89 c2                \tmov    %eax,%edx\n    337c:\t8b 84 24 c4 00 00 00 \tmov    0xc4(%rsp),%eax\n    3383:\t01 d0                \tadd    %edx,%eax\n    3385:\t89 84 24 b4 00 00 00 \tmov    %eax,0xb4(%rsp)\n    338c:\t8b 84 24 bc 00 00 00 \tmov    0xbc(%rsp),%eax\n    3393:\tc1 f8 02             \tsar    $0x2,%eax\n    3396:\t89 c2                \tmov    %eax,%edx\n    3398:\t8b 84 24 c0 00 00 00 \tmov    0xc0(%rsp),%eax\n    339f:\t01 d0                \tadd    %edx,%eax\n    33a1:\t89 84 24 b0 00 00 00 \tmov    %eax,0xb0(%rsp)\n    33a8:\t8b 84 24 c0 00 00 00 \tmov    0xc0(%rsp),%eax\n    33af:\tc1 f8 02             \tsar    $0x2,%eax\n    33b2:\t2b 84 24 bc 00 00 00 \tsub    0xbc(%rsp),%eax\n    33b9:\t89 84 24 ac 00 00 00 \tmov    %eax,0xac(%rsp)\n    33c0:\t8b 84 24 c4 00 00 00 \tmov    0xc4(%rsp),%eax\n    33c7:\tc1 f8 02             \tsar    $0x2,%eax\n    33ca:\t89 c2                \tmov    %eax,%edx\n    33cc:\t8b 84 24 b8 00 00 00 \tmov    0xb8(%rsp),%eax\n    33d3:\t29 d0                \tsub    %edx,%eax\n    33d5:\t89 84 24 a8 00 00 00 \tmov    %eax,0xa8(%rsp)\n    33dc:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    33e3:\t48 98                \tcltq   \n    33e5:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    33e9:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    33f0:\t00 \n    33f1:\t48 01 d0             \tadd    %rdx,%rax\n    33f4:\t0f b7 00             \tmovzwl (%rax),%eax\n    33f7:\t0f b7 c0             \tmovzwl %ax,%eax\n    33fa:\t8b 8c 24 d4 00 00 00 \tmov    0xd4(%rsp),%ecx\n    3401:\t8b 94 24 a8 00 00 00 \tmov    0xa8(%rsp),%edx\n    3408:\t01 ca                \tadd    %ecx,%edx\n    340a:\tc1 fa 06             \tsar    $0x6,%edx\n    340d:\t01 d0                \tadd    %edx,%eax\n    340f:\t89 44 24 2c          \tmov    %eax,0x2c(%rsp)\n    3413:\tc7 44 24 28 09 00 00 \tmovl   $0x9,0x28(%rsp)\n    341a:\t00 \n    341b:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n    341f:\tba 01 00 00 00       \tmov    $0x1,%edx\n    3424:\t89 c1                \tmov    %eax,%ecx\n    3426:\td3 e2                \tshl    %cl,%edx\n    3428:\t89 d0                \tmov    %edx,%eax\n    342a:\tf7 d8                \tneg    %eax\n    342c:\t23 44 24 2c          \tand    0x2c(%rsp),%eax\n    3430:\t85 c0                \ttest   %eax,%eax\n    3432:\t74 1d                \tje     3451 <ff_h264_idct8_add_9_c+0xb2d>\n    3434:\t8b 44 24 2c          \tmov    0x2c(%rsp),%eax\n    3438:\tf7 d8                \tneg    %eax\n    343a:\t99                   \tcltd   \n    343b:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n    343f:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    3444:\t89 c1                \tmov    %eax,%ecx\n    3446:\td3 e6                \tshl    %cl,%esi\n    3448:\t89 f0                \tmov    %esi,%eax\n    344a:\t83 e8 01             \tsub    $0x1,%eax\n    344d:\t21 d0                \tand    %edx,%eax\n    344f:\teb 04                \tjmp    3455 <ff_h264_idct8_add_9_c+0xb31>\n    3451:\t8b 44 24 2c          \tmov    0x2c(%rsp),%eax\n    3455:\t8b 94 24 fc 00 00 00 \tmov    0xfc(%rsp),%edx\n    345c:\t48 63 d2             \tmovslq %edx,%rdx\n    345f:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    3463:\t48 8b 94 24 f0 00 00 \tmov    0xf0(%rsp),%rdx\n    346a:\t00 \n    346b:\t48 01 ca             \tadd    %rcx,%rdx\n    346e:\t66 89 02             \tmov    %ax,(%rdx)\n    3471:\t8b 94 24 fc 00 00 00 \tmov    0xfc(%rsp),%edx\n    3478:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    347c:\t01 d0                \tadd    %edx,%eax\n    347e:\t48 98                \tcltq   \n    3480:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    3484:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    348b:\t00 \n    348c:\t48 01 d0             \tadd    %rdx,%rax\n    348f:\t0f b7 00             \tmovzwl (%rax),%eax\n    3492:\t0f b7 c0             \tmovzwl %ax,%eax\n    3495:\t8b 8c 24 d0 00 00 00 \tmov    0xd0(%rsp),%ecx\n    349c:\t8b 94 24 ac 00 00 00 \tmov    0xac(%rsp),%edx\n    34a3:\t01 ca                \tadd    %ecx,%edx\n    34a5:\tc1 fa 06             \tsar    $0x6,%edx\n    34a8:\t01 d0                \tadd    %edx,%eax\n    34aa:\t89 44 24 34          \tmov    %eax,0x34(%rsp)\n    34ae:\tc7 44 24 30 09 00 00 \tmovl   $0x9,0x30(%rsp)\n    34b5:\t00 \n    34b6:\t8b 44 24 30          \tmov    0x30(%rsp),%eax\n    34ba:\tba 01 00 00 00       \tmov    $0x1,%edx\n    34bf:\t89 c1                \tmov    %eax,%ecx\n    34c1:\td3 e2                \tshl    %cl,%edx\n    34c3:\t89 d0                \tmov    %edx,%eax\n    34c5:\tf7 d8                \tneg    %eax\n    34c7:\t23 44 24 34          \tand    0x34(%rsp),%eax\n    34cb:\t85 c0                \ttest   %eax,%eax\n    34cd:\t74 1d                \tje     34ec <ff_h264_idct8_add_9_c+0xbc8>\n    34cf:\t8b 44 24 34          \tmov    0x34(%rsp),%eax\n    34d3:\tf7 d8                \tneg    %eax\n    34d5:\t99                   \tcltd   \n    34d6:\t8b 44 24 30          \tmov    0x30(%rsp),%eax\n    34da:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    34df:\t89 c1                \tmov    %eax,%ecx\n    34e1:\td3 e6                \tshl    %cl,%esi\n    34e3:\t89 f0                \tmov    %esi,%eax\n    34e5:\t83 e8 01             \tsub    $0x1,%eax\n    34e8:\t21 d0                \tand    %edx,%eax\n    34ea:\teb 04                \tjmp    34f0 <ff_h264_idct8_add_9_c+0xbcc>\n    34ec:\t8b 44 24 34          \tmov    0x34(%rsp),%eax\n    34f0:\t8b 8c 24 fc 00 00 00 \tmov    0xfc(%rsp),%ecx\n    34f7:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    34fb:\t01 ca                \tadd    %ecx,%edx\n    34fd:\t48 63 d2             \tmovslq %edx,%rdx\n    3500:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    3504:\t48 8b 94 24 f0 00 00 \tmov    0xf0(%rsp),%rdx\n    350b:\t00 \n    350c:\t48 01 ca             \tadd    %rcx,%rdx\n    350f:\t66 89 02             \tmov    %ax,(%rdx)\n    3512:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    3516:\t8d 14 00             \tlea    (%rax,%rax,1),%edx\n    3519:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3520:\t01 d0                \tadd    %edx,%eax\n    3522:\t48 98                \tcltq   \n    3524:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    3528:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    352f:\t00 \n    3530:\t48 01 d0             \tadd    %rdx,%rax\n    3533:\t0f b7 00             \tmovzwl (%rax),%eax\n    3536:\t0f b7 c0             \tmovzwl %ax,%eax\n    3539:\t8b 8c 24 cc 00 00 00 \tmov    0xcc(%rsp),%ecx\n    3540:\t8b 94 24 b0 00 00 00 \tmov    0xb0(%rsp),%edx\n    3547:\t01 ca                \tadd    %ecx,%edx\n    3549:\tc1 fa 06             \tsar    $0x6,%edx\n    354c:\t01 d0                \tadd    %edx,%eax\n    354e:\t89 44 24 3c          \tmov    %eax,0x3c(%rsp)\n    3552:\tc7 44 24 38 09 00 00 \tmovl   $0x9,0x38(%rsp)\n    3559:\t00 \n    355a:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    355e:\tba 01 00 00 00       \tmov    $0x1,%edx\n    3563:\t89 c1                \tmov    %eax,%ecx\n    3565:\td3 e2                \tshl    %cl,%edx\n    3567:\t89 d0                \tmov    %edx,%eax\n    3569:\tf7 d8                \tneg    %eax\n    356b:\t23 44 24 3c          \tand    0x3c(%rsp),%eax\n    356f:\t85 c0                \ttest   %eax,%eax\n    3571:\t74 1d                \tje     3590 <ff_h264_idct8_add_9_c+0xc6c>\n    3573:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    3577:\tf7 d8                \tneg    %eax\n    3579:\t99                   \tcltd   \n    357a:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    357e:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    3583:\t89 c1                \tmov    %eax,%ecx\n    3585:\td3 e6                \tshl    %cl,%esi\n    3587:\t89 f0                \tmov    %esi,%eax\n    3589:\t83 e8 01             \tsub    $0x1,%eax\n    358c:\t21 d0                \tand    %edx,%eax\n    358e:\teb 04                \tjmp    3594 <ff_h264_idct8_add_9_c+0xc70>\n    3590:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    3594:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    3598:\t8d 0c 12             \tlea    (%rdx,%rdx,1),%ecx\n    359b:\t8b 94 24 fc 00 00 00 \tmov    0xfc(%rsp),%edx\n    35a2:\t01 ca                \tadd    %ecx,%edx\n    35a4:\t48 63 d2             \tmovslq %edx,%rdx\n    35a7:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    35ab:\t48 8b 94 24 f0 00 00 \tmov    0xf0(%rsp),%rdx\n    35b2:\t00 \n    35b3:\t48 01 ca             \tadd    %rcx,%rdx\n    35b6:\t66 89 02             \tmov    %ax,(%rdx)\n    35b9:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    35bd:\t89 d0                \tmov    %edx,%eax\n    35bf:\t01 c0                \tadd    %eax,%eax\n    35c1:\t01 c2                \tadd    %eax,%edx\n    35c3:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    35ca:\t01 d0                \tadd    %edx,%eax\n    35cc:\t48 98                \tcltq   \n    35ce:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    35d2:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    35d9:\t00 \n    35da:\t48 01 d0             \tadd    %rdx,%rax\n    35dd:\t0f b7 00             \tmovzwl (%rax),%eax\n    35e0:\t0f b7 c0             \tmovzwl %ax,%eax\n    35e3:\t8b 8c 24 c8 00 00 00 \tmov    0xc8(%rsp),%ecx\n    35ea:\t8b 94 24 b4 00 00 00 \tmov    0xb4(%rsp),%edx\n    35f1:\t01 ca                \tadd    %ecx,%edx\n    35f3:\tc1 fa 06             \tsar    $0x6,%edx\n    35f6:\t01 d0                \tadd    %edx,%eax\n    35f8:\t89 44 24 44          \tmov    %eax,0x44(%rsp)\n    35fc:\tc7 44 24 40 09 00 00 \tmovl   $0x9,0x40(%rsp)\n    3603:\t00 \n    3604:\t8b 44 24 40          \tmov    0x40(%rsp),%eax\n    3608:\tba 01 00 00 00       \tmov    $0x1,%edx\n    360d:\t89 c1                \tmov    %eax,%ecx\n    360f:\td3 e2                \tshl    %cl,%edx\n    3611:\t89 d0                \tmov    %edx,%eax\n    3613:\tf7 d8                \tneg    %eax\n    3615:\t23 44 24 44          \tand    0x44(%rsp),%eax\n    3619:\t85 c0                \ttest   %eax,%eax\n    361b:\t74 1f                \tje     363c <ff_h264_idct8_add_9_c+0xd18>\n    361d:\t8b 44 24 44          \tmov    0x44(%rsp),%eax\n    3621:\tf7 d8                \tneg    %eax\n    3623:\t99                   \tcltd   \n    3624:\t8b 44 24 40          \tmov    0x40(%rsp),%eax\n    3628:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    362d:\t89 c1                \tmov    %eax,%ecx\n    362f:\td3 e6                \tshl    %cl,%esi\n    3631:\t89 f0                \tmov    %esi,%eax\n    3633:\t83 e8 01             \tsub    $0x1,%eax\n    3636:\t21 d0                \tand    %edx,%eax\n    3638:\t89 c1                \tmov    %eax,%ecx\n    363a:\teb 04                \tjmp    3640 <ff_h264_idct8_add_9_c+0xd1c>\n    363c:\t8b 4c 24 44          \tmov    0x44(%rsp),%ecx\n    3640:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    3644:\t89 d0                \tmov    %edx,%eax\n    3646:\t01 c0                \tadd    %eax,%eax\n    3648:\t01 c2                \tadd    %eax,%edx\n    364a:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3651:\t01 d0                \tadd    %edx,%eax\n    3653:\t48 98                \tcltq   \n    3655:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    3659:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    3660:\t00 \n    3661:\t48 01 d0             \tadd    %rdx,%rax\n    3664:\t89 ca                \tmov    %ecx,%edx\n    3666:\t66 89 10             \tmov    %dx,(%rax)\n    3669:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    366d:\t8d 14 85 00 00 00 00 \tlea    0x0(,%rax,4),%edx\n    3674:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    367b:\t01 d0                \tadd    %edx,%eax\n    367d:\t48 98                \tcltq   \n    367f:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    3683:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    368a:\t00 \n    368b:\t48 01 d0             \tadd    %rdx,%rax\n    368e:\t0f b7 00             \tmovzwl (%rax),%eax\n    3691:\t0f b7 d0             \tmovzwl %ax,%edx\n    3694:\t8b 84 24 c8 00 00 00 \tmov    0xc8(%rsp),%eax\n    369b:\t2b 84 24 b4 00 00 00 \tsub    0xb4(%rsp),%eax\n    36a2:\tc1 f8 06             \tsar    $0x6,%eax\n    36a5:\t01 d0                \tadd    %edx,%eax\n    36a7:\t89 44 24 4c          \tmov    %eax,0x4c(%rsp)\n    36ab:\tc7 44 24 48 09 00 00 \tmovl   $0x9,0x48(%rsp)\n    36b2:\t00 \n    36b3:\t8b 44 24 48          \tmov    0x48(%rsp),%eax\n    36b7:\tba 01 00 00 00       \tmov    $0x1,%edx\n    36bc:\t89 c1                \tmov    %eax,%ecx\n    36be:\td3 e2                \tshl    %cl,%edx\n    36c0:\t89 d0                \tmov    %edx,%eax\n    36c2:\tf7 d8                \tneg    %eax\n    36c4:\t23 44 24 4c          \tand    0x4c(%rsp),%eax\n    36c8:\t85 c0                \ttest   %eax,%eax\n    36ca:\t74 1d                \tje     36e9 <ff_h264_idct8_add_9_c+0xdc5>\n    36cc:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n    36d0:\tf7 d8                \tneg    %eax\n    36d2:\t99                   \tcltd   \n    36d3:\t8b 44 24 48          \tmov    0x48(%rsp),%eax\n    36d7:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    36dc:\t89 c1                \tmov    %eax,%ecx\n    36de:\td3 e6                \tshl    %cl,%esi\n    36e0:\t89 f0                \tmov    %esi,%eax\n    36e2:\t83 e8 01             \tsub    $0x1,%eax\n    36e5:\t21 d0                \tand    %edx,%eax\n    36e7:\teb 04                \tjmp    36ed <ff_h264_idct8_add_9_c+0xdc9>\n    36e9:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n    36ed:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    36f1:\t8d 0c 95 00 00 00 00 \tlea    0x0(,%rdx,4),%ecx\n    36f8:\t8b 94 24 fc 00 00 00 \tmov    0xfc(%rsp),%edx\n    36ff:\t01 ca                \tadd    %ecx,%edx\n    3701:\t48 63 d2             \tmovslq %edx,%rdx\n    3704:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    3708:\t48 8b 94 24 f0 00 00 \tmov    0xf0(%rsp),%rdx\n    370f:\t00 \n    3710:\t48 01 ca             \tadd    %rcx,%rdx\n    3713:\t66 89 02             \tmov    %ax,(%rdx)\n    3716:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    371a:\t89 d0                \tmov    %edx,%eax\n    371c:\tc1 e0 02             \tshl    $0x2,%eax\n    371f:\t01 c2                \tadd    %eax,%edx\n    3721:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3728:\t01 d0                \tadd    %edx,%eax\n    372a:\t48 98                \tcltq   \n    372c:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    3730:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    3737:\t00 \n    3738:\t48 01 d0             \tadd    %rdx,%rax\n    373b:\t0f b7 00             \tmovzwl (%rax),%eax\n    373e:\t0f b7 d0             \tmovzwl %ax,%edx\n    3741:\t8b 84 24 cc 00 00 00 \tmov    0xcc(%rsp),%eax\n    3748:\t2b 84 24 b0 00 00 00 \tsub    0xb0(%rsp),%eax\n    374f:\tc1 f8 06             \tsar    $0x6,%eax\n    3752:\t01 d0                \tadd    %edx,%eax\n    3754:\t89 44 24 54          \tmov    %eax,0x54(%rsp)\n    3758:\tc7 44 24 50 09 00 00 \tmovl   $0x9,0x50(%rsp)\n    375f:\t00 \n    3760:\t8b 44 24 50          \tmov    0x50(%rsp),%eax\n    3764:\tba 01 00 00 00       \tmov    $0x1,%edx\n    3769:\t89 c1                \tmov    %eax,%ecx\n    376b:\td3 e2                \tshl    %cl,%edx\n    376d:\t89 d0                \tmov    %edx,%eax\n    376f:\tf7 d8                \tneg    %eax\n    3771:\t23 44 24 54          \tand    0x54(%rsp),%eax\n    3775:\t85 c0                \ttest   %eax,%eax\n    3777:\t74 1f                \tje     3798 <ff_h264_idct8_add_9_c+0xe74>\n    3779:\t8b 44 24 54          \tmov    0x54(%rsp),%eax\n    377d:\tf7 d8                \tneg    %eax\n    377f:\t99                   \tcltd   \n    3780:\t8b 44 24 50          \tmov    0x50(%rsp),%eax\n    3784:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    3789:\t89 c1                \tmov    %eax,%ecx\n    378b:\td3 e6                \tshl    %cl,%esi\n    378d:\t89 f0                \tmov    %esi,%eax\n    378f:\t83 e8 01             \tsub    $0x1,%eax\n    3792:\t21 d0                \tand    %edx,%eax\n    3794:\t89 c1                \tmov    %eax,%ecx\n    3796:\teb 04                \tjmp    379c <ff_h264_idct8_add_9_c+0xe78>\n    3798:\t8b 4c 24 54          \tmov    0x54(%rsp),%ecx\n    379c:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    37a0:\t89 d0                \tmov    %edx,%eax\n    37a2:\tc1 e0 02             \tshl    $0x2,%eax\n    37a5:\t01 c2                \tadd    %eax,%edx\n    37a7:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    37ae:\t01 d0                \tadd    %edx,%eax\n    37b0:\t48 98                \tcltq   \n    37b2:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    37b6:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    37bd:\t00 \n    37be:\t48 01 d0             \tadd    %rdx,%rax\n    37c1:\t89 ca                \tmov    %ecx,%edx\n    37c3:\t66 89 10             \tmov    %dx,(%rax)\n    37c6:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    37ca:\t89 d0                \tmov    %edx,%eax\n    37cc:\t01 c0                \tadd    %eax,%eax\n    37ce:\t01 d0                \tadd    %edx,%eax\n    37d0:\t01 c0                \tadd    %eax,%eax\n    37d2:\t89 c2                \tmov    %eax,%edx\n    37d4:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    37db:\t01 d0                \tadd    %edx,%eax\n    37dd:\t48 98                \tcltq   \n    37df:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    37e3:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    37ea:\t00 \n    37eb:\t48 01 d0             \tadd    %rdx,%rax\n    37ee:\t0f b7 00             \tmovzwl (%rax),%eax\n    37f1:\t0f b7 d0             \tmovzwl %ax,%edx\n    37f4:\t8b 84 24 d0 00 00 00 \tmov    0xd0(%rsp),%eax\n    37fb:\t2b 84 24 ac 00 00 00 \tsub    0xac(%rsp),%eax\n    3802:\tc1 f8 06             \tsar    $0x6,%eax\n    3805:\t01 d0                \tadd    %edx,%eax\n    3807:\t89 44 24 5c          \tmov    %eax,0x5c(%rsp)\n    380b:\tc7 44 24 58 09 00 00 \tmovl   $0x9,0x58(%rsp)\n    3812:\t00 \n    3813:\t8b 44 24 58          \tmov    0x58(%rsp),%eax\n    3817:\tba 01 00 00 00       \tmov    $0x1,%edx\n    381c:\t89 c1                \tmov    %eax,%ecx\n    381e:\td3 e2                \tshl    %cl,%edx\n    3820:\t89 d0                \tmov    %edx,%eax\n    3822:\tf7 d8                \tneg    %eax\n    3824:\t23 44 24 5c          \tand    0x5c(%rsp),%eax\n    3828:\t85 c0                \ttest   %eax,%eax\n    382a:\t74 1f                \tje     384b <ff_h264_idct8_add_9_c+0xf27>\n    382c:\t8b 44 24 5c          \tmov    0x5c(%rsp),%eax\n    3830:\tf7 d8                \tneg    %eax\n    3832:\t99                   \tcltd   \n    3833:\t8b 44 24 58          \tmov    0x58(%rsp),%eax\n    3837:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    383c:\t89 c1                \tmov    %eax,%ecx\n    383e:\td3 e6                \tshl    %cl,%esi\n    3840:\t89 f0                \tmov    %esi,%eax\n    3842:\t83 e8 01             \tsub    $0x1,%eax\n    3845:\t21 d0                \tand    %edx,%eax\n    3847:\t89 c1                \tmov    %eax,%ecx\n    3849:\teb 04                \tjmp    384f <ff_h264_idct8_add_9_c+0xf2b>\n    384b:\t8b 4c 24 5c          \tmov    0x5c(%rsp),%ecx\n    384f:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    3853:\t89 d0                \tmov    %edx,%eax\n    3855:\t01 c0                \tadd    %eax,%eax\n    3857:\t01 d0                \tadd    %edx,%eax\n    3859:\t01 c0                \tadd    %eax,%eax\n    385b:\t89 c2                \tmov    %eax,%edx\n    385d:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3864:\t01 d0                \tadd    %edx,%eax\n    3866:\t48 98                \tcltq   \n    3868:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    386c:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    3873:\t00 \n    3874:\t48 01 d0             \tadd    %rdx,%rax\n    3877:\t89 ca                \tmov    %ecx,%edx\n    3879:\t66 89 10             \tmov    %dx,(%rax)\n    387c:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    3880:\t89 d0                \tmov    %edx,%eax\n    3882:\tc1 e0 03             \tshl    $0x3,%eax\n    3885:\t29 d0                \tsub    %edx,%eax\n    3887:\t89 c2                \tmov    %eax,%edx\n    3889:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3890:\t01 d0                \tadd    %edx,%eax\n    3892:\t48 98                \tcltq   \n    3894:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    3898:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    389f:\t00 \n    38a0:\t48 01 d0             \tadd    %rdx,%rax\n    38a3:\t0f b7 00             \tmovzwl (%rax),%eax\n    38a6:\t0f b7 d0             \tmovzwl %ax,%edx\n    38a9:\t8b 84 24 d4 00 00 00 \tmov    0xd4(%rsp),%eax\n    38b0:\t2b 84 24 a8 00 00 00 \tsub    0xa8(%rsp),%eax\n    38b7:\tc1 f8 06             \tsar    $0x6,%eax\n    38ba:\t01 d0                \tadd    %edx,%eax\n    38bc:\t89 44 24 64          \tmov    %eax,0x64(%rsp)\n    38c0:\tc7 44 24 60 09 00 00 \tmovl   $0x9,0x60(%rsp)\n    38c7:\t00 \n    38c8:\t8b 44 24 60          \tmov    0x60(%rsp),%eax\n    38cc:\tba 01 00 00 00       \tmov    $0x1,%edx\n    38d1:\t89 c1                \tmov    %eax,%ecx\n    38d3:\td3 e2                \tshl    %cl,%edx\n    38d5:\t89 d0                \tmov    %edx,%eax\n    38d7:\tf7 d8                \tneg    %eax\n    38d9:\t23 44 24 64          \tand    0x64(%rsp),%eax\n    38dd:\t85 c0                \ttest   %eax,%eax\n    38df:\t74 1f                \tje     3900 <ff_h264_idct8_add_9_c+0xfdc>\n    38e1:\t8b 44 24 64          \tmov    0x64(%rsp),%eax\n    38e5:\tf7 d8                \tneg    %eax\n    38e7:\t99                   \tcltd   \n    38e8:\t8b 44 24 60          \tmov    0x60(%rsp),%eax\n    38ec:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    38f1:\t89 c1                \tmov    %eax,%ecx\n    38f3:\td3 e6                \tshl    %cl,%esi\n    38f5:\t89 f0                \tmov    %esi,%eax\n    38f7:\t83 e8 01             \tsub    $0x1,%eax\n    38fa:\t21 d0                \tand    %edx,%eax\n    38fc:\t89 c1                \tmov    %eax,%ecx\n    38fe:\teb 04                \tjmp    3904 <ff_h264_idct8_add_9_c+0xfe0>\n    3900:\t8b 4c 24 64          \tmov    0x64(%rsp),%ecx\n    3904:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    3908:\t89 d0                \tmov    %edx,%eax\n    390a:\tc1 e0 03             \tshl    $0x3,%eax\n    390d:\t29 d0                \tsub    %edx,%eax\n    390f:\t89 c2                \tmov    %eax,%edx\n    3911:\t8b 84 24 fc 00 00 00 \tmov    0xfc(%rsp),%eax\n    3918:\t01 d0                \tadd    %edx,%eax\n    391a:\t48 98                \tcltq   \n    391c:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    3920:\t48 8b 84 24 f0 00 00 \tmov    0xf0(%rsp),%rax\n    3927:\t00 \n    3928:\t48 01 d0             \tadd    %rdx,%rax\n    392b:\t89 ca                \tmov    %ecx,%edx\n    392d:\t66 89 10             \tmov    %dx,(%rax)\n    3930:\t83 84 24 fc 00 00 00 \taddl   $0x1,0xfc(%rsp)\n    3937:\t01 \n    3938:\t83 bc 24 fc 00 00 00 \tcmpl   $0x7,0xfc(%rsp)\n    393f:\t07 \n    3940:\t0f 8e 08 f6 ff ff    \tjle    2f4e <ff_h264_idct8_add_9_c+0x62a>\n    3946:\t48 8b 84 24 e8 00 00 \tmov    0xe8(%rsp),%rax\n    394d:\t00 \n    394e:\tba 00 01 00 00       \tmov    $0x100,%edx\n    3953:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    3958:\t48 89 c7             \tmov    %rax,%rdi\n    395b:\te8 00 00 00 00       \tcall   3960 <ff_h264_idct8_add_9_c+0x103c>\n    3960:\t90                   \tnop\n    3961:\t48 81 c4 08 01 00 00 \tadd    $0x108,%rsp\n    3968:\tc3                   \tret    ", "code_s": "void ff_h264_idct8_add_9_c(long param_1, int *<span class=\"supfact\">param_2</span>,\n                           int <span class=\"supfact\">param_3</span>) {\n  ushort <span class=\"supfact\">uVar1</span>;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  uint uVar9;\n  int iVar10;\n  int iVar11;\n  int iVar12;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">param_3</span> = <span class=\"supfact\">param_3</span> >> Number;\n  *<span class=\"supfact\">param_2</span> = *<span class=\"supfact\">param_2</span> + Number;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    iVar10 = (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n              Number) -\n             <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number];\n    iVar2 = <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] +\n            (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n             Number);\n    iVar3 = iVar2 +\n            <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] +\n            <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>];\n    iVar4 = iVar10 +\n            (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>] -\n             <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number]);\n    iVar10 = (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>] -\n              <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number]) -\n             iVar10;\n    iVar2 = (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] +\n             <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>]) -\n            iVar2;\n    iVar11 =\n        ((<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] -\n          <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number]) -\n         <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number]) -\n        (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n         Number);\n    iVar12 =\n        ((<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] +\n          <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number]) -\n         <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number]) -\n        (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n         Number);\n    iVar5 = (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n             Number) +\n            (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] -\n             <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number]) +\n            <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number];\n    iVar6 = (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n             Number) +\n            <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] +\n            <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] +\n            <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number];\n    iVar7 = iVar11 + (iVar6 >> Number);\n    iVar8 = iVar12 + (iVar5 >> Number);\n    iVar5 = (iVar12 >> Number) - iVar5;\n    iVar6 = iVar6 - (iVar11 >> Number);\n    <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>] = iVar6 + iVar3;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar3 - iVar6;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar5 + iVar4;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar4 - iVar5;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar8 + iVar10;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar10 - iVar8;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar7 + iVar2;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar2 - iVar7;\n  }\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    iVar10 =\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number) -\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number];\n    iVar2 =\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] +\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number);\n    iVar3 = iVar2 +\n            <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] +\n            <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> << Number];\n    iVar4 =\n        iVar10 +\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> << Number] -\n         <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number]);\n    iVar10 =\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> << Number] -\n         <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number]) -\n        iVar10;\n    iVar2 =\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] +\n         <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> << Number]) -\n        iVar2;\n    iVar11 =\n        ((<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] -\n          <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number]) -\n         <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number]) -\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number);\n    iVar12 =\n        ((<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] +\n          <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number]) -\n         <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number]) -\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number);\n    iVar5 =\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number) +\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] -\n         <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number]) +\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number];\n    iVar6 =\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number) +\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] +\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] +\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number];\n    iVar7 = iVar11 + (iVar6 >> Number);\n    iVar8 = iVar12 + (iVar5 >> Number);\n    iVar5 = (iVar12 >> Number) - iVar5;\n    iVar6 = iVar6 - (iVar11 >> Number);\n    uVar9 =\n        (uint) * (ushort *)(param_1 + (long)<span class=\"supfact\">local_c</span> * Number) +\n        (iVar6 + iVar3 >> Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)<span class=\"supfact\">local_c</span> * Number) =\n        <span class=\"supfact\">uVar1</span>;\n    uVar9 = (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">param_3</span> +\n                                                 <span class=\"supfact\">local_c</span>) *\n                                              Number) +\n            (iVar5 + iVar4 >> Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 +\n                (long)(<span class=\"supfact\">param_3</span> + <span class=\"supfact\">local_c</span>) *\n                    Number) = <span class=\"supfact\">uVar1</span>;\n    uVar9 =\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number) +\n        (iVar8 + iVar10 >> Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar1</span>;\n    uVar9 =\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number) +\n        (iVar7 + iVar2 >> Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar1</span>;\n    uVar9 =\n        (iVar2 - iVar7 >> Number) +\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar1</span>;\n    uVar9 =\n        (iVar10 - iVar8 >> Number) +\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar1</span>;\n    uVar9 =\n        (iVar4 - iVar5 >> Number) +\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar1</span>;\n    uVar9 =\n        (iVar3 - iVar6 >> Number) +\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number);\n    if ((uVar9 & Number) == Number) {\n      <span class=\"supfact\">uVar1</span> = (ushort)uVar9;\n    } else {\n      <span class=\"supfact\">uVar1</span> = (ushort)((int)-uVar9 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar1</span>;\n  }\n  memset(<span class=\"supfact\">param_2</span>, Number, Number);\n  return;\n}", "code_t": "void ff_h264_idct8_add_9_c(uint8_t *_dst, int16_t *<span class=\"supfact\">_block</span>,\n                           int <span class=\"supfact\">stride</span>) {\n  int iVar1;\n  ushort <span class=\"supfact\">uVar2</span>;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  uint uVar10;\n  int iVar11;\n  int iVar12;\n  int iVar13;\n  int <span class=\"supfact\">stride</span> - local;\n  int16_t *<span class=\"supfact\">_block</span> - local;\n  uint8_t *_dst - local;\n  int b7;\n  int b5;\n  int b3;\n  int b1;\n  int a7;\n  int a5;\n  int a3;\n  int a1;\n  int b6;\n  int b4;\n  int b2;\n  int b0;\n  int a6;\n  int a4;\n  int a2;\n  int a0;\n  int b7_1;\n  int b5_1;\n  int b3_1;\n  int b1_1;\n  int a7_1;\n  int a5_1;\n  int a3_1;\n  int a1_1;\n  int b6_1;\n  int b4_1;\n  int b2_1;\n  int b0_1;\n  int a6_1;\n  int a4_1;\n  int a2_1;\n  int a0_1;\n  int32_t *block;\n  uint16_t *dst;\n  int <span class=\"supfact\">i</span>;\n  iVar1 = <span class=\"supfact\">stride</span> >> Number;\n  *(int *)<span class=\"supfact\">_block</span> = *(int *)<span class=\"supfact\">_block</span> + Number;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    iVar11 = (*(int *)(<span class=\"supfact\">_block</span> +\n                       ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n              Number) -\n             *(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number);\n    iVar3 = *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number) +\n            (*(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n             Number);\n    iVar4 = iVar3 +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number) +\n            *(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number);\n    iVar5 =\n        iVar11 +\n        (*(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number) -\n         *(int *)(<span class=\"supfact\">_block</span> +\n                  ((long)<span class=\"supfact\">i</span> + Number) * Number));\n    iVar11 =\n        (*(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number) -\n         *(int *)(<span class=\"supfact\">_block</span> +\n                  ((long)<span class=\"supfact\">i</span> + Number) * Number)) -\n        iVar11;\n    iVar3 =\n        (*(int *)(<span class=\"supfact\">_block</span> +\n                  ((long)<span class=\"supfact\">i</span> + Number) * Number) +\n         *(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number)) -\n        iVar3;\n    iVar12 = ((*(int *)(<span class=\"supfact\">_block</span> +\n                        ((long)<span class=\"supfact\">i</span> + Number) * Number) -\n               *(int *)(<span class=\"supfact\">_block</span> +\n                        ((long)<span class=\"supfact\">i</span> + Number) * Number)) -\n              *(int *)(<span class=\"supfact\">_block</span> +\n                       ((long)<span class=\"supfact\">i</span> + Number) * Number)) -\n             (*(int *)(<span class=\"supfact\">_block</span> +\n                       ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n              Number);\n    iVar13 = ((*(int *)(<span class=\"supfact\">_block</span> +\n                        ((long)<span class=\"supfact\">i</span> + Number) * Number) +\n               *(int *)(<span class=\"supfact\">_block</span> +\n                        ((long)<span class=\"supfact\">i</span> + Number) * Number)) -\n              *(int *)(<span class=\"supfact\">_block</span> +\n                       ((long)<span class=\"supfact\">i</span> + Number) * Number)) -\n             (*(int *)(<span class=\"supfact\">_block</span> +\n                       ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n              Number);\n    iVar6 = (*(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n             Number) +\n            (*(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number) -\n             *(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number)) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number);\n    iVar7 = (*(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n             Number) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number);\n    iVar8 = iVar12 + (iVar7 >> Number);\n    iVar9 = iVar13 + (iVar6 >> Number);\n    iVar6 = (iVar13 >> Number) - iVar6;\n    iVar7 = iVar7 - (iVar12 >> Number);\n    *(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number) =\n        iVar7 + iVar4;\n    *(int *)(<span class=\"supfact\">_block</span> +\n             ((long)<span class=\"supfact\">i</span> + Number) * Number) = iVar4 - iVar7;\n    *(int *)(<span class=\"supfact\">_block</span> +\n             ((long)<span class=\"supfact\">i</span> + Number) * Number) = iVar6 + iVar5;\n    *(int *)(<span class=\"supfact\">_block</span> +\n             ((long)<span class=\"supfact\">i</span> + Number) * Number) = iVar5 - iVar6;\n    *(int *)(<span class=\"supfact\">_block</span> +\n             ((long)<span class=\"supfact\">i</span> + Number) * Number) = iVar9 + iVar11;\n    *(int *)(<span class=\"supfact\">_block</span> +\n             ((long)<span class=\"supfact\">i</span> + Number) * Number) = iVar11 - iVar9;\n    *(int *)(<span class=\"supfact\">_block</span> +\n             ((long)<span class=\"supfact\">i</span> + Number) * Number) = iVar8 + iVar3;\n    *(int *)(<span class=\"supfact\">_block</span> +\n             ((long)<span class=\"supfact\">i</span> + Number) * Number) = iVar3 - iVar8;\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    iVar11 = (*(int *)(<span class=\"supfact\">_block</span> +\n                       (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n              Number) -\n             *(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number);\n    iVar3 = *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) +\n            (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n             Number);\n    iVar4 = iVar3 +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> << Number) * Number);\n    iVar5 = iVar11 +\n            (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> << Number) * Number) -\n             *(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number));\n    iVar11 = (*(int *)(<span class=\"supfact\">_block</span> +\n                       (long)(<span class=\"supfact\">i</span> << Number) * Number) -\n              *(int *)(<span class=\"supfact\">_block</span> +\n                       (long)(<span class=\"supfact\">i</span> * Number + Number) * Number)) -\n             iVar11;\n    iVar3 = (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) +\n             *(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> << Number) * Number)) -\n            iVar3;\n    iVar12 = ((*(int *)(<span class=\"supfact\">_block</span> +\n                        (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) -\n               *(int *)(<span class=\"supfact\">_block</span> +\n                        (long)(<span class=\"supfact\">i</span> * Number + Number) * Number)) -\n              *(int *)(<span class=\"supfact\">_block</span> +\n                       (long)(<span class=\"supfact\">i</span> * Number + Number) * Number)) -\n             (*(int *)(<span class=\"supfact\">_block</span> +\n                       (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n              Number);\n    iVar13 = ((*(int *)(<span class=\"supfact\">_block</span> +\n                        (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) +\n               *(int *)(<span class=\"supfact\">_block</span> +\n                        (long)(<span class=\"supfact\">i</span> * Number + Number) * Number)) -\n              *(int *)(<span class=\"supfact\">_block</span> +\n                       (long)(<span class=\"supfact\">i</span> * Number + Number) * Number)) -\n             (*(int *)(<span class=\"supfact\">_block</span> +\n                       (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n              Number);\n    iVar6 = (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n             Number) +\n            (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) -\n             *(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number)) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number);\n    iVar7 = (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n             Number) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) +\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number);\n    iVar8 = iVar12 + (iVar7 >> Number);\n    iVar9 = iVar13 + (iVar6 >> Number);\n    iVar6 = (iVar13 >> Number) - iVar6;\n    iVar7 = iVar7 - (iVar12 >> Number);\n    uVar10 = (uint) * (ushort *)(_dst + (long)<span class=\"supfact\">i</span> * Number) +\n             (iVar7 + iVar4 >> Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)<span class=\"supfact\">i</span> * Number) =\n        <span class=\"supfact\">uVar2</span>;\n    uVar10 =\n        (uint) * (ushort *)(_dst + (long)(iVar1 + <span class=\"supfact\">i</span>) * Number) +\n        (iVar6 + iVar5 >> Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(iVar1 + <span class=\"supfact\">i</span>) * Number) =\n        <span class=\"supfact\">uVar2</span>;\n    uVar10 =\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number) +\n        (iVar9 + iVar11 >> Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar2</span>;\n    uVar10 =\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number) +\n        (iVar8 + iVar3 >> Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar2</span>;\n    uVar10 =\n        (iVar3 - iVar8 >> Number) +\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar2</span>;\n    uVar10 =\n        (iVar11 - iVar9 >> Number) +\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar2</span>;\n    uVar10 =\n        (iVar5 - iVar6 >> Number) +\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar2</span>;\n    uVar10 =\n        (iVar4 - iVar7 >> Number) +\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number);\n    if ((uVar10 & Number) == Number) {\n      <span class=\"supfact\">uVar2</span> = (ushort)uVar10;\n    } else {\n      <span class=\"supfact\">uVar2</span> = (ushort)((int)-uVar10 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar2</span>;\n  }\n  memset(<span class=\"supfact\">_block</span>, Number, Number);\n  return;\n}", "var": [{"name": "param_2", "type": "int16_t * *", "pred_name": "_block", "ref_name": "_block", "ref_type": "int16_t * *"}, {"name": "param_3", "type": "int", "pred_name": "stride", "ref_name": "stride", "ref_type": "int"}, {"name": "uVar1", "type": "ushort", "pred_name": "uVar2", "ref_name": "uVar2", "ref_type": "ushort"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "bpillon", "repo_name": "android-ffmpeg-wrapper", "path": "bpillon/android-ffmpeg-wrapper/ba1cff2608504ca3b34e6f7884c235aab00d828df51cb6f4520ff842ce1e8ea9", "path_in_repo": "bpillon/android-ffmpeg-wrapper/jni/ffmpeg/libavcodec/h264idct.o", "objdump": "00000000000096cd <ff_h264_idct_add_14_c>:\n    96cd:\t48 81 ec 88 00 00 00 \tsub    $0x88,%rsp\n    96d4:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n    96d9:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n    96de:\t89 54 24 0c          \tmov    %edx,0xc(%rsp)\n    96e2:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    96e7:\t48 89 44 24 70       \tmov    %rax,0x70(%rsp)\n    96ec:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    96f1:\t48 89 44 24 68       \tmov    %rax,0x68(%rsp)\n    96f6:\td1 7c 24 0c          \tsarl   0xc(%rsp)\n    96fa:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    96ff:\t8b 00                \tmov    (%rax),%eax\n    9701:\t8d 50 20             \tlea    0x20(%rax),%edx\n    9704:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    9709:\t89 10                \tmov    %edx,(%rax)\n    970b:\tc7 44 24 7c 00 00 00 \tmovl   $0x0,0x7c(%rsp)\n    9712:\t00 \n    9713:\te9 90 01 00 00       \tjmp    98a8 <ff_h264_idct_add_14_c+0x1db>\n    9718:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    971c:\t48 98                \tcltq   \n    971e:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9725:\t00 \n    9726:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    972b:\t48 01 d0             \tadd    %rdx,%rax\n    972e:\t8b 10                \tmov    (%rax),%edx\n    9730:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    9734:\t48 98                \tcltq   \n    9736:\t48 83 c0 08          \tadd    $0x8,%rax\n    973a:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9741:\t00 \n    9742:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    9747:\t48 01 c8             \tadd    %rcx,%rax\n    974a:\t8b 00                \tmov    (%rax),%eax\n    974c:\t01 d0                \tadd    %edx,%eax\n    974e:\t89 44 24 54          \tmov    %eax,0x54(%rsp)\n    9752:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    9756:\t48 98                \tcltq   \n    9758:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    975f:\t00 \n    9760:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    9765:\t48 01 d0             \tadd    %rdx,%rax\n    9768:\t8b 10                \tmov    (%rax),%edx\n    976a:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    976e:\t48 98                \tcltq   \n    9770:\t48 83 c0 08          \tadd    $0x8,%rax\n    9774:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    977b:\t00 \n    977c:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    9781:\t48 01 c8             \tadd    %rcx,%rax\n    9784:\t8b 00                \tmov    (%rax),%eax\n    9786:\t29 c2                \tsub    %eax,%edx\n    9788:\t89 d0                \tmov    %edx,%eax\n    978a:\t89 44 24 50          \tmov    %eax,0x50(%rsp)\n    978e:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    9792:\t48 98                \tcltq   \n    9794:\t48 83 c0 04          \tadd    $0x4,%rax\n    9798:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    979f:\t00 \n    97a0:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    97a5:\t48 01 d0             \tadd    %rdx,%rax\n    97a8:\t8b 00                \tmov    (%rax),%eax\n    97aa:\td1 f8                \tsar    %eax\n    97ac:\t89 c2                \tmov    %eax,%edx\n    97ae:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    97b2:\t48 98                \tcltq   \n    97b4:\t48 83 c0 0c          \tadd    $0xc,%rax\n    97b8:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    97bf:\t00 \n    97c0:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    97c5:\t48 01 c8             \tadd    %rcx,%rax\n    97c8:\t8b 00                \tmov    (%rax),%eax\n    97ca:\t29 c2                \tsub    %eax,%edx\n    97cc:\t89 d0                \tmov    %edx,%eax\n    97ce:\t89 44 24 4c          \tmov    %eax,0x4c(%rsp)\n    97d2:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    97d6:\t48 98                \tcltq   \n    97d8:\t48 83 c0 04          \tadd    $0x4,%rax\n    97dc:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    97e3:\t00 \n    97e4:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    97e9:\t48 01 d0             \tadd    %rdx,%rax\n    97ec:\t8b 00                \tmov    (%rax),%eax\n    97ee:\t8b 54 24 7c          \tmov    0x7c(%rsp),%edx\n    97f2:\t48 63 d2             \tmovslq %edx,%rdx\n    97f5:\t48 83 c2 0c          \tadd    $0xc,%rdx\n    97f9:\t48 8d 0c 95 00 00 00 \tlea    0x0(,%rdx,4),%rcx\n    9800:\t00 \n    9801:\t48 8b 54 24 68       \tmov    0x68(%rsp),%rdx\n    9806:\t48 01 ca             \tadd    %rcx,%rdx\n    9809:\t8b 12                \tmov    (%rdx),%edx\n    980b:\td1 fa                \tsar    %edx\n    980d:\t01 d0                \tadd    %edx,%eax\n    980f:\t89 44 24 48          \tmov    %eax,0x48(%rsp)\n    9813:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    9817:\t48 98                \tcltq   \n    9819:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9820:\t00 \n    9821:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    9826:\t48 01 d0             \tadd    %rdx,%rax\n    9829:\t8b 4c 24 54          \tmov    0x54(%rsp),%ecx\n    982d:\t8b 54 24 48          \tmov    0x48(%rsp),%edx\n    9831:\t01 ca                \tadd    %ecx,%edx\n    9833:\t89 10                \tmov    %edx,(%rax)\n    9835:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    9839:\t48 98                \tcltq   \n    983b:\t48 83 c0 04          \tadd    $0x4,%rax\n    983f:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9846:\t00 \n    9847:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    984c:\t48 01 d0             \tadd    %rdx,%rax\n    984f:\t8b 4c 24 50          \tmov    0x50(%rsp),%ecx\n    9853:\t8b 54 24 4c          \tmov    0x4c(%rsp),%edx\n    9857:\t01 ca                \tadd    %ecx,%edx\n    9859:\t89 10                \tmov    %edx,(%rax)\n    985b:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    985f:\t48 98                \tcltq   \n    9861:\t48 83 c0 08          \tadd    $0x8,%rax\n    9865:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    986c:\t00 \n    986d:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    9872:\t48 01 c2             \tadd    %rax,%rdx\n    9875:\t8b 44 24 50          \tmov    0x50(%rsp),%eax\n    9879:\t2b 44 24 4c          \tsub    0x4c(%rsp),%eax\n    987d:\t89 02                \tmov    %eax,(%rdx)\n    987f:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    9883:\t48 98                \tcltq   \n    9885:\t48 83 c0 0c          \tadd    $0xc,%rax\n    9889:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9890:\t00 \n    9891:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    9896:\t48 01 c2             \tadd    %rax,%rdx\n    9899:\t8b 44 24 54          \tmov    0x54(%rsp),%eax\n    989d:\t2b 44 24 48          \tsub    0x48(%rsp),%eax\n    98a1:\t89 02                \tmov    %eax,(%rdx)\n    98a3:\t83 44 24 7c 01       \taddl   $0x1,0x7c(%rsp)\n    98a8:\t83 7c 24 7c 03       \tcmpl   $0x3,0x7c(%rsp)\n    98ad:\t0f 8e 65 fe ff ff    \tjle    9718 <ff_h264_idct_add_14_c+0x4b>\n    98b3:\tc7 44 24 7c 00 00 00 \tmovl   $0x0,0x7c(%rsp)\n    98ba:\t00 \n    98bb:\te9 53 03 00 00       \tjmp    9c13 <ff_h264_idct_add_14_c+0x546>\n    98c0:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    98c4:\tc1 e0 02             \tshl    $0x2,%eax\n    98c7:\t48 98                \tcltq   \n    98c9:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    98d0:\t00 \n    98d1:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    98d6:\t48 01 d0             \tadd    %rdx,%rax\n    98d9:\t8b 10                \tmov    (%rax),%edx\n    98db:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    98df:\tc1 e0 02             \tshl    $0x2,%eax\n    98e2:\t83 c0 02             \tadd    $0x2,%eax\n    98e5:\t48 98                \tcltq   \n    98e7:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    98ee:\t00 \n    98ef:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    98f4:\t48 01 c8             \tadd    %rcx,%rax\n    98f7:\t8b 00                \tmov    (%rax),%eax\n    98f9:\t01 d0                \tadd    %edx,%eax\n    98fb:\t89 44 24 64          \tmov    %eax,0x64(%rsp)\n    98ff:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    9903:\tc1 e0 02             \tshl    $0x2,%eax\n    9906:\t48 98                \tcltq   \n    9908:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    990f:\t00 \n    9910:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    9915:\t48 01 d0             \tadd    %rdx,%rax\n    9918:\t8b 10                \tmov    (%rax),%edx\n    991a:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    991e:\tc1 e0 02             \tshl    $0x2,%eax\n    9921:\t83 c0 02             \tadd    $0x2,%eax\n    9924:\t48 98                \tcltq   \n    9926:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    992d:\t00 \n    992e:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    9933:\t48 01 c8             \tadd    %rcx,%rax\n    9936:\t8b 00                \tmov    (%rax),%eax\n    9938:\t29 c2                \tsub    %eax,%edx\n    993a:\t89 d0                \tmov    %edx,%eax\n    993c:\t89 44 24 60          \tmov    %eax,0x60(%rsp)\n    9940:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    9944:\tc1 e0 02             \tshl    $0x2,%eax\n    9947:\t83 c0 01             \tadd    $0x1,%eax\n    994a:\t48 98                \tcltq   \n    994c:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9953:\t00 \n    9954:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    9959:\t48 01 d0             \tadd    %rdx,%rax\n    995c:\t8b 00                \tmov    (%rax),%eax\n    995e:\td1 f8                \tsar    %eax\n    9960:\t89 c2                \tmov    %eax,%edx\n    9962:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    9966:\tc1 e0 02             \tshl    $0x2,%eax\n    9969:\t83 c0 03             \tadd    $0x3,%eax\n    996c:\t48 98                \tcltq   \n    996e:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9975:\t00 \n    9976:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    997b:\t48 01 c8             \tadd    %rcx,%rax\n    997e:\t8b 00                \tmov    (%rax),%eax\n    9980:\t29 c2                \tsub    %eax,%edx\n    9982:\t89 d0                \tmov    %edx,%eax\n    9984:\t89 44 24 5c          \tmov    %eax,0x5c(%rsp)\n    9988:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    998c:\tc1 e0 02             \tshl    $0x2,%eax\n    998f:\t83 c0 01             \tadd    $0x1,%eax\n    9992:\t48 98                \tcltq   \n    9994:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    999b:\t00 \n    999c:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    99a1:\t48 01 d0             \tadd    %rdx,%rax\n    99a4:\t8b 00                \tmov    (%rax),%eax\n    99a6:\t8b 54 24 7c          \tmov    0x7c(%rsp),%edx\n    99aa:\tc1 e2 02             \tshl    $0x2,%edx\n    99ad:\t83 c2 03             \tadd    $0x3,%edx\n    99b0:\t48 63 d2             \tmovslq %edx,%rdx\n    99b3:\t48 8d 0c 95 00 00 00 \tlea    0x0(,%rdx,4),%rcx\n    99ba:\t00 \n    99bb:\t48 8b 54 24 68       \tmov    0x68(%rsp),%rdx\n    99c0:\t48 01 ca             \tadd    %rcx,%rdx\n    99c3:\t8b 12                \tmov    (%rdx),%edx\n    99c5:\td1 fa                \tsar    %edx\n    99c7:\t01 d0                \tadd    %edx,%eax\n    99c9:\t89 44 24 58          \tmov    %eax,0x58(%rsp)\n    99cd:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    99d1:\t48 98                \tcltq   \n    99d3:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    99d7:\t48 8b 44 24 70       \tmov    0x70(%rsp),%rax\n    99dc:\t48 01 d0             \tadd    %rdx,%rax\n    99df:\t0f b7 00             \tmovzwl (%rax),%eax\n    99e2:\t0f b7 c0             \tmovzwl %ax,%eax\n    99e5:\t8b 4c 24 64          \tmov    0x64(%rsp),%ecx\n    99e9:\t8b 54 24 58          \tmov    0x58(%rsp),%edx\n    99ed:\t01 ca                \tadd    %ecx,%edx\n    99ef:\tc1 fa 06             \tsar    $0x6,%edx\n    99f2:\t01 d0                \tadd    %edx,%eax\n    99f4:\t89 44 24 2c          \tmov    %eax,0x2c(%rsp)\n    99f8:\tc7 44 24 28 0e 00 00 \tmovl   $0xe,0x28(%rsp)\n    99ff:\t00 \n    9a00:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n    9a04:\tba 01 00 00 00       \tmov    $0x1,%edx\n    9a09:\t89 c1                \tmov    %eax,%ecx\n    9a0b:\td3 e2                \tshl    %cl,%edx\n    9a0d:\t89 d0                \tmov    %edx,%eax\n    9a0f:\tf7 d8                \tneg    %eax\n    9a11:\t23 44 24 2c          \tand    0x2c(%rsp),%eax\n    9a15:\t85 c0                \ttest   %eax,%eax\n    9a17:\t74 1d                \tje     9a36 <ff_h264_idct_add_14_c+0x369>\n    9a19:\t8b 44 24 2c          \tmov    0x2c(%rsp),%eax\n    9a1d:\tf7 d8                \tneg    %eax\n    9a1f:\t99                   \tcltd   \n    9a20:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n    9a24:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    9a29:\t89 c1                \tmov    %eax,%ecx\n    9a2b:\td3 e6                \tshl    %cl,%esi\n    9a2d:\t89 f0                \tmov    %esi,%eax\n    9a2f:\t83 e8 01             \tsub    $0x1,%eax\n    9a32:\t21 d0                \tand    %edx,%eax\n    9a34:\teb 04                \tjmp    9a3a <ff_h264_idct_add_14_c+0x36d>\n    9a36:\t8b 44 24 2c          \tmov    0x2c(%rsp),%eax\n    9a3a:\t8b 54 24 7c          \tmov    0x7c(%rsp),%edx\n    9a3e:\t48 63 d2             \tmovslq %edx,%rdx\n    9a41:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    9a45:\t48 8b 54 24 70       \tmov    0x70(%rsp),%rdx\n    9a4a:\t48 01 ca             \tadd    %rcx,%rdx\n    9a4d:\t66 89 02             \tmov    %ax,(%rdx)\n    9a50:\t8b 54 24 7c          \tmov    0x7c(%rsp),%edx\n    9a54:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    9a58:\t01 d0                \tadd    %edx,%eax\n    9a5a:\t48 98                \tcltq   \n    9a5c:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    9a60:\t48 8b 44 24 70       \tmov    0x70(%rsp),%rax\n    9a65:\t48 01 d0             \tadd    %rdx,%rax\n    9a68:\t0f b7 00             \tmovzwl (%rax),%eax\n    9a6b:\t0f b7 c0             \tmovzwl %ax,%eax\n    9a6e:\t8b 4c 24 60          \tmov    0x60(%rsp),%ecx\n    9a72:\t8b 54 24 5c          \tmov    0x5c(%rsp),%edx\n    9a76:\t01 ca                \tadd    %ecx,%edx\n    9a78:\tc1 fa 06             \tsar    $0x6,%edx\n    9a7b:\t01 d0                \tadd    %edx,%eax\n    9a7d:\t89 44 24 34          \tmov    %eax,0x34(%rsp)\n    9a81:\tc7 44 24 30 0e 00 00 \tmovl   $0xe,0x30(%rsp)\n    9a88:\t00 \n    9a89:\t8b 44 24 30          \tmov    0x30(%rsp),%eax\n    9a8d:\tba 01 00 00 00       \tmov    $0x1,%edx\n    9a92:\t89 c1                \tmov    %eax,%ecx\n    9a94:\td3 e2                \tshl    %cl,%edx\n    9a96:\t89 d0                \tmov    %edx,%eax\n    9a98:\tf7 d8                \tneg    %eax\n    9a9a:\t23 44 24 34          \tand    0x34(%rsp),%eax\n    9a9e:\t85 c0                \ttest   %eax,%eax\n    9aa0:\t74 1d                \tje     9abf <ff_h264_idct_add_14_c+0x3f2>\n    9aa2:\t8b 44 24 34          \tmov    0x34(%rsp),%eax\n    9aa6:\tf7 d8                \tneg    %eax\n    9aa8:\t99                   \tcltd   \n    9aa9:\t8b 44 24 30          \tmov    0x30(%rsp),%eax\n    9aad:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    9ab2:\t89 c1                \tmov    %eax,%ecx\n    9ab4:\td3 e6                \tshl    %cl,%esi\n    9ab6:\t89 f0                \tmov    %esi,%eax\n    9ab8:\t83 e8 01             \tsub    $0x1,%eax\n    9abb:\t21 d0                \tand    %edx,%eax\n    9abd:\teb 04                \tjmp    9ac3 <ff_h264_idct_add_14_c+0x3f6>\n    9abf:\t8b 44 24 34          \tmov    0x34(%rsp),%eax\n    9ac3:\t8b 4c 24 7c          \tmov    0x7c(%rsp),%ecx\n    9ac7:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    9acb:\t01 ca                \tadd    %ecx,%edx\n    9acd:\t48 63 d2             \tmovslq %edx,%rdx\n    9ad0:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    9ad4:\t48 8b 54 24 70       \tmov    0x70(%rsp),%rdx\n    9ad9:\t48 01 ca             \tadd    %rcx,%rdx\n    9adc:\t66 89 02             \tmov    %ax,(%rdx)\n    9adf:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    9ae3:\t8d 14 00             \tlea    (%rax,%rax,1),%edx\n    9ae6:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    9aea:\t01 d0                \tadd    %edx,%eax\n    9aec:\t48 98                \tcltq   \n    9aee:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    9af2:\t48 8b 44 24 70       \tmov    0x70(%rsp),%rax\n    9af7:\t48 01 d0             \tadd    %rdx,%rax\n    9afa:\t0f b7 00             \tmovzwl (%rax),%eax\n    9afd:\t0f b7 d0             \tmovzwl %ax,%edx\n    9b00:\t8b 44 24 60          \tmov    0x60(%rsp),%eax\n    9b04:\t2b 44 24 5c          \tsub    0x5c(%rsp),%eax\n    9b08:\tc1 f8 06             \tsar    $0x6,%eax\n    9b0b:\t01 d0                \tadd    %edx,%eax\n    9b0d:\t89 44 24 3c          \tmov    %eax,0x3c(%rsp)\n    9b11:\tc7 44 24 38 0e 00 00 \tmovl   $0xe,0x38(%rsp)\n    9b18:\t00 \n    9b19:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    9b1d:\tba 01 00 00 00       \tmov    $0x1,%edx\n    9b22:\t89 c1                \tmov    %eax,%ecx\n    9b24:\td3 e2                \tshl    %cl,%edx\n    9b26:\t89 d0                \tmov    %edx,%eax\n    9b28:\tf7 d8                \tneg    %eax\n    9b2a:\t23 44 24 3c          \tand    0x3c(%rsp),%eax\n    9b2e:\t85 c0                \ttest   %eax,%eax\n    9b30:\t74 1d                \tje     9b4f <ff_h264_idct_add_14_c+0x482>\n    9b32:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    9b36:\tf7 d8                \tneg    %eax\n    9b38:\t99                   \tcltd   \n    9b39:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    9b3d:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    9b42:\t89 c1                \tmov    %eax,%ecx\n    9b44:\td3 e6                \tshl    %cl,%esi\n    9b46:\t89 f0                \tmov    %esi,%eax\n    9b48:\t83 e8 01             \tsub    $0x1,%eax\n    9b4b:\t21 d0                \tand    %edx,%eax\n    9b4d:\teb 04                \tjmp    9b53 <ff_h264_idct_add_14_c+0x486>\n    9b4f:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    9b53:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    9b57:\t8d 0c 12             \tlea    (%rdx,%rdx,1),%ecx\n    9b5a:\t8b 54 24 7c          \tmov    0x7c(%rsp),%edx\n    9b5e:\t01 ca                \tadd    %ecx,%edx\n    9b60:\t48 63 d2             \tmovslq %edx,%rdx\n    9b63:\t48 8d 0c 12          \tlea    (%rdx,%rdx,1),%rcx\n    9b67:\t48 8b 54 24 70       \tmov    0x70(%rsp),%rdx\n    9b6c:\t48 01 ca             \tadd    %rcx,%rdx\n    9b6f:\t66 89 02             \tmov    %ax,(%rdx)\n    9b72:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    9b76:\t89 d0                \tmov    %edx,%eax\n    9b78:\t01 c0                \tadd    %eax,%eax\n    9b7a:\t01 c2                \tadd    %eax,%edx\n    9b7c:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    9b80:\t01 d0                \tadd    %edx,%eax\n    9b82:\t48 98                \tcltq   \n    9b84:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    9b88:\t48 8b 44 24 70       \tmov    0x70(%rsp),%rax\n    9b8d:\t48 01 d0             \tadd    %rdx,%rax\n    9b90:\t0f b7 00             \tmovzwl (%rax),%eax\n    9b93:\t0f b7 d0             \tmovzwl %ax,%edx\n    9b96:\t8b 44 24 64          \tmov    0x64(%rsp),%eax\n    9b9a:\t2b 44 24 58          \tsub    0x58(%rsp),%eax\n    9b9e:\tc1 f8 06             \tsar    $0x6,%eax\n    9ba1:\t01 d0                \tadd    %edx,%eax\n    9ba3:\t89 44 24 44          \tmov    %eax,0x44(%rsp)\n    9ba7:\tc7 44 24 40 0e 00 00 \tmovl   $0xe,0x40(%rsp)\n    9bae:\t00 \n    9baf:\t8b 44 24 40          \tmov    0x40(%rsp),%eax\n    9bb3:\tba 01 00 00 00       \tmov    $0x1,%edx\n    9bb8:\t89 c1                \tmov    %eax,%ecx\n    9bba:\td3 e2                \tshl    %cl,%edx\n    9bbc:\t89 d0                \tmov    %edx,%eax\n    9bbe:\tf7 d8                \tneg    %eax\n    9bc0:\t23 44 24 44          \tand    0x44(%rsp),%eax\n    9bc4:\t85 c0                \ttest   %eax,%eax\n    9bc6:\t74 1f                \tje     9be7 <ff_h264_idct_add_14_c+0x51a>\n    9bc8:\t8b 44 24 44          \tmov    0x44(%rsp),%eax\n    9bcc:\tf7 d8                \tneg    %eax\n    9bce:\t99                   \tcltd   \n    9bcf:\t8b 44 24 40          \tmov    0x40(%rsp),%eax\n    9bd3:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    9bd8:\t89 c1                \tmov    %eax,%ecx\n    9bda:\td3 e6                \tshl    %cl,%esi\n    9bdc:\t89 f0                \tmov    %esi,%eax\n    9bde:\t83 e8 01             \tsub    $0x1,%eax\n    9be1:\t21 d0                \tand    %edx,%eax\n    9be3:\t89 c1                \tmov    %eax,%ecx\n    9be5:\teb 04                \tjmp    9beb <ff_h264_idct_add_14_c+0x51e>\n    9be7:\t8b 4c 24 44          \tmov    0x44(%rsp),%ecx\n    9beb:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    9bef:\t89 d0                \tmov    %edx,%eax\n    9bf1:\t01 c0                \tadd    %eax,%eax\n    9bf3:\t01 c2                \tadd    %eax,%edx\n    9bf5:\t8b 44 24 7c          \tmov    0x7c(%rsp),%eax\n    9bf9:\t01 d0                \tadd    %edx,%eax\n    9bfb:\t48 98                \tcltq   \n    9bfd:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    9c01:\t48 8b 44 24 70       \tmov    0x70(%rsp),%rax\n    9c06:\t48 01 d0             \tadd    %rdx,%rax\n    9c09:\t89 ca                \tmov    %ecx,%edx\n    9c0b:\t66 89 10             \tmov    %dx,(%rax)\n    9c0e:\t83 44 24 7c 01       \taddl   $0x1,0x7c(%rsp)\n    9c13:\t83 7c 24 7c 03       \tcmpl   $0x3,0x7c(%rsp)\n    9c18:\t0f 8e a2 fc ff ff    \tjle    98c0 <ff_h264_idct_add_14_c+0x1f3>\n    9c1e:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    9c23:\tba 40 00 00 00       \tmov    $0x40,%edx\n    9c28:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    9c2d:\t48 89 c7             \tmov    %rax,%rdi\n    9c30:\te8 00 00 00 00       \tcall   9c35 <ff_h264_idct_add_14_c+0x568>\n    9c35:\t90                   \tnop\n    9c36:\t48 81 c4 88 00 00 00 \tadd    $0x88,%rsp\n    9c3d:\tc3                   \tret    ", "code_s": "void ff_h264_idct_add_14_c(long param_1, int *<span class=\"supfact\">param_2</span>,\n                           int <span class=\"supfact\">param_3</span>) {\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  ushort <span class=\"supfact\">uVar5</span>;\n  int iVar6;\n  uint uVar7;\n  int iVar8;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">param_3</span> = <span class=\"supfact\">param_3</span> >> Number;\n  *<span class=\"supfact\">param_2</span> = *<span class=\"supfact\">param_2</span> + Number;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    iVar1 = <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>];\n    iVar2 = <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number];\n    iVar3 = <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>];\n    iVar4 = <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number];\n    iVar8 = (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n             Number) -\n            <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number];\n    iVar6 = <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] +\n            (<span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] >>\n             Number);\n    <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span>] = iVar6 + iVar2 + iVar1;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        iVar8 + (iVar3 - iVar4);\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        (iVar3 - iVar4) - iVar8;\n    <span class=\"supfact\">param_2</span>[(long)<span class=\"supfact\">local_c</span> + Number] =\n        (iVar2 + iVar1) - iVar6;\n  }\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    iVar1 = <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> << Number];\n    iVar2 = <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number];\n    iVar3 = <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> << Number];\n    iVar4 = <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number];\n    iVar8 =\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number) -\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number];\n    iVar6 =\n        <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] +\n        (<span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_c</span> * Number + Number] >>\n         Number);\n    uVar7 =\n        (uint) * (ushort *)(param_1 + (long)<span class=\"supfact\">local_c</span> * Number) +\n        (iVar6 + iVar2 + iVar1 >> Number);\n    if ((uVar7 & Number) == Number) {\n      <span class=\"supfact\">uVar5</span> = (ushort)uVar7;\n    } else {\n      <span class=\"supfact\">uVar5</span> = (ushort)((int)-uVar7 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)<span class=\"supfact\">local_c</span> * Number) =\n        <span class=\"supfact\">uVar5</span>;\n    uVar7 = (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">param_3</span> +\n                                                 <span class=\"supfact\">local_c</span>) *\n                                              Number) +\n            (iVar8 + (iVar3 - iVar4) >> Number);\n    if ((uVar7 & Number) == Number) {\n      <span class=\"supfact\">uVar5</span> = (ushort)uVar7;\n    } else {\n      <span class=\"supfact\">uVar5</span> = (ushort)((int)-uVar7 >> Number) & Number;\n    }\n    *(ushort *)(param_1 +\n                (long)(<span class=\"supfact\">param_3</span> + <span class=\"supfact\">local_c</span>) *\n                    Number) = <span class=\"supfact\">uVar5</span>;\n    uVar7 =\n        ((iVar3 - iVar4) - iVar8 >> Number) +\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number);\n    if ((uVar7 & Number) == Number) {\n      <span class=\"supfact\">uVar5</span> = (ushort)uVar7;\n    } else {\n      <span class=\"supfact\">uVar5</span> = (ushort)((int)-uVar7 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar5</span>;\n    uVar7 =\n        ((iVar2 + iVar1) - iVar6 >> Number) +\n        (uint) * (ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                             <span class=\"supfact\">param_3</span> * Number) *\n                                          Number);\n    if ((uVar7 & Number) == Number) {\n      <span class=\"supfact\">uVar5</span> = (ushort)uVar7;\n    } else {\n      <span class=\"supfact\">uVar5</span> = (ushort)((int)-uVar7 >> Number) & Number;\n    }\n    *(ushort *)(param_1 + (long)(<span class=\"supfact\">local_c</span> +\n                                 <span class=\"supfact\">param_3</span> * Number) *\n                              Number) = <span class=\"supfact\">uVar5</span>;\n  }\n  memset(<span class=\"supfact\">param_2</span>, Number, Number);\n  return;\n}", "code_t": "void ff_h264_idct_add_14_c(uint8_t *_dst, int16_t *<span class=\"supfact\">_block</span>,\n                           int <span class=\"supfact\">stride</span>) {\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  ushort <span class=\"supfact\">uVar6</span>;\n  int iVar7;\n  uint uVar8;\n  int iVar9;\n  int <span class=\"supfact\">stride</span> - local;\n  int16_t *<span class=\"supfact\">_block</span> - local;\n  uint8_t *_dst - local;\n  int z3;\n  int z2;\n  int z1;\n  int z0;\n  int z3_1;\n  int z2_1;\n  int z1_1;\n  int z0_1;\n  int32_t *block;\n  uint16_t *dst;\n  int <span class=\"supfact\">i</span>;\n  iVar1 = <span class=\"supfact\">stride</span> >> Number;\n  *(int *)<span class=\"supfact\">_block</span> = *(int *)<span class=\"supfact\">_block</span> + Number;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    iVar2 = *(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number);\n    iVar3 = *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number);\n    iVar4 = *(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number);\n    iVar5 = *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number);\n    iVar9 = (*(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n             Number) -\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number);\n    iVar7 = *(int *)(<span class=\"supfact\">_block</span> +\n                     ((long)<span class=\"supfact\">i</span> + Number) * Number) +\n            (*(int *)(<span class=\"supfact\">_block</span> +\n                      ((long)<span class=\"supfact\">i</span> + Number) * Number) >>\n             Number);\n    *(int *)(<span class=\"supfact\">_block</span> + (long)<span class=\"supfact\">i</span> * Number) =\n        iVar7 + iVar3 + iVar2;\n    *(int *)(<span class=\"supfact\">_block</span> + ((long)<span class=\"supfact\">i</span> + Number) *\n                                          Number) = iVar9 + (iVar4 - iVar5);\n    *(int *)(<span class=\"supfact\">_block</span> + ((long)<span class=\"supfact\">i</span> + Number) *\n                                          Number) = (iVar4 - iVar5) - iVar9;\n    *(int *)(<span class=\"supfact\">_block</span> + ((long)<span class=\"supfact\">i</span> + Number) *\n                                          Number) = (iVar3 + iVar2) - iVar7;\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    iVar2 = *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> << Number) * Number);\n    iVar3 = *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number);\n    iVar4 = *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> << Number) * Number);\n    iVar5 = *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number);\n    iVar9 = (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n             Number) -\n            *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number);\n    iVar7 = *(int *)(<span class=\"supfact\">_block</span> +\n                     (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) +\n            (*(int *)(<span class=\"supfact\">_block</span> +\n                      (long)(<span class=\"supfact\">i</span> * Number + Number) * Number) >>\n             Number);\n    uVar8 = (uint) * (ushort *)(_dst + (long)<span class=\"supfact\">i</span> * Number) +\n            (iVar7 + iVar3 + iVar2 >> Number);\n    if ((uVar8 & Number) == Number) {\n      <span class=\"supfact\">uVar6</span> = (ushort)uVar8;\n    } else {\n      <span class=\"supfact\">uVar6</span> = (ushort)((int)-uVar8 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)<span class=\"supfact\">i</span> * Number) =\n        <span class=\"supfact\">uVar6</span>;\n    uVar8 =\n        (uint) * (ushort *)(_dst + (long)(iVar1 + <span class=\"supfact\">i</span>) * Number) +\n        (iVar9 + (iVar4 - iVar5) >> Number);\n    if ((uVar8 & Number) == Number) {\n      <span class=\"supfact\">uVar6</span> = (ushort)uVar8;\n    } else {\n      <span class=\"supfact\">uVar6</span> = (ushort)((int)-uVar8 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(iVar1 + <span class=\"supfact\">i</span>) * Number) =\n        <span class=\"supfact\">uVar6</span>;\n    uVar8 =\n        ((iVar4 - iVar5) - iVar9 >> Number) +\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number);\n    if ((uVar8 & Number) == Number) {\n      <span class=\"supfact\">uVar6</span> = (ushort)uVar8;\n    } else {\n      <span class=\"supfact\">uVar6</span> = (ushort)((int)-uVar8 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar6</span>;\n    uVar8 =\n        ((iVar3 + iVar2) - iVar7 >> Number) +\n        (uint) * (ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) *\n                                       Number);\n    if ((uVar8 & Number) == Number) {\n      <span class=\"supfact\">uVar6</span> = (ushort)uVar8;\n    } else {\n      <span class=\"supfact\">uVar6</span> = (ushort)((int)-uVar8 >> Number) & Number;\n    }\n    *(ushort *)(_dst + (long)(<span class=\"supfact\">i</span> + iVar1 * Number) * Number) =\n        <span class=\"supfact\">uVar6</span>;\n  }\n  memset(<span class=\"supfact\">_block</span>, Number, Number);\n  return;\n}", "var": [{"name": "param_2", "type": "int16_t * *", "pred_name": "_block", "ref_name": "_block", "ref_type": "int16_t * *"}, {"name": "param_3", "type": "int", "pred_name": "stride", "ref_name": "stride", "ref_type": "int"}, {"name": "uVar5", "type": "ushort", "pred_name": "uVar6", "ref_name": "uVar6", "ref_type": "ushort"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "SecureAuthCorp", "repo_name": "pycodin", "path": "SecureAuthCorp/pycodin/586c5e36a0be3981e01b84652b4bd2140d33e3275084583ab6ff91bc3024759b", "path_in_repo": "SecureAuthCorp/pycodin/qemu-0.12.3/arm-linux-user/nwfpe/fpa11.o", "objdump": "0000000000000059 <SetRoundingMode>:\n  59:\t55                   \tpush   %rbp\n  5a:\t48 89 e5             \tmov    %rsp,%rbp\n  5d:\t48 83 ec 20          \tsub    $0x20,%rsp\n  61:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n  64:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 6b <SetRoundingMode+0x12>\n  6b:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  6f:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  72:\t83 e0 60             \tand    $0x60,%eax\n  75:\t83 f8 60             \tcmp    $0x60,%eax\n  78:\t74 2a                \tje     a4 <SetRoundingMode+0x4b>\n  7a:\t83 f8 60             \tcmp    $0x60,%eax\n  7d:\t77 0a                \tja     89 <SetRoundingMode+0x30>\n  7f:\t83 f8 20             \tcmp    $0x20,%eax\n  82:\t74 0e                \tje     92 <SetRoundingMode+0x39>\n  84:\t83 f8 40             \tcmp    $0x40,%eax\n  87:\t74 12                \tje     9b <SetRoundingMode+0x42>\n  89:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n  90:\teb 1a                \tjmp    ac <SetRoundingMode+0x53>\n  92:\tc7 45 fc 02 00 00 00 \tmovl   $0x2,-0x4(%rbp)\n  99:\teb 11                \tjmp    ac <SetRoundingMode+0x53>\n  9b:\tc7 45 fc 01 00 00 00 \tmovl   $0x1,-0x4(%rbp)\n  a2:\teb 08                \tjmp    ac <SetRoundingMode+0x53>\n  a4:\tc7 45 fc 03 00 00 00 \tmovl   $0x3,-0x4(%rbp)\n  ab:\t90                   \tnop\n  ac:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  b0:\t48 8d 90 94 00 00 00 \tlea    0x94(%rax),%rdx\n  b7:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  ba:\t48 89 d6             \tmov    %rdx,%rsi\n  bd:\t89 c7                \tmov    %eax,%edi\n  bf:\te8 00 00 00 00       \tcall   c4 <SetRoundingMode+0x6b>\n  c4:\t90                   \tnop\n  c5:\tc9                   \tleave  \n  c6:\tc3                   \tret    ", "code_s": "void SetRoundingMode(uint <span class=\"supfact\">param_1</span>) {\n  undefined4 <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">param_1</span> = <span class=\"supfact\">param_1</span> & Number;\n  if (<span class=\"supfact\">param_1</span> == Number) {\n    <span class=\"supfact\">local_c</span> = Number;\n    goto LAB_001000ac;\n  }\n  if (<span class=\"supfact\">param_1</span> < Number) {\n    if (<span class=\"supfact\">param_1</span> == Number) {\n      <span class=\"supfact\">local_c</span> = Number;\n      goto LAB_001000ac;\n    }\n    if (<span class=\"supfact\">param_1</span> == Number) {\n      <span class=\"supfact\">local_c</span> = Number;\n      goto LAB_001000ac;\n    }\n  }\n  <span class=\"supfact\">local_c</span> = Number;\nLAB_001000ac:\n  set_float_rounding_mode(<span class=\"supfact\">local_c</span>, qemufpa + Number);\n  return;\n}", "code_t": "void SetRoundingMode(uint <span class=\"supfact\">opcode</span>) {\n  uint uVar1;\n  uint <span class=\"supfact\">opcode</span> - local;\n  FPA11 *fpa11;\n  int <span class=\"supfact\">rounding_mode</span>;\n  uVar1 = <span class=\"supfact\">opcode</span> & Number;\n  if (uVar1 == Number) {\n    <span class=\"supfact\">rounding_mode</span> = Number;\n    goto LAB_001000ac;\n  }\n  if (uVar1 < Number) {\n    if (uVar1 == Number) {\n      <span class=\"supfact\">rounding_mode</span> = Number;\n      goto LAB_001000ac;\n    }\n    if (uVar1 == Number) {\n      <span class=\"supfact\">rounding_mode</span> = Number;\n      goto LAB_001000ac;\n    }\n  }\n  <span class=\"supfact\">rounding_mode</span> = Number;\nLAB_001000ac:\n  set_float_rounding_mode(<span class=\"supfact\">rounding_mode</span>, &qemufpa->fp_status);\n  return;\n}", "var": [{"name": "param_1", "type": "uint", "pred_name": "__unk__", "ref_name": "opcode", "ref_type": "uint"}, {"name": "local_c", "type": "uint", "pred_name": "__unk__", "ref_name": "rounding_mode", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "eliasbaixas", "repo_name": "openser-xmlrpc", "path": "eliasbaixas/openser-xmlrpc/31a4371c8588385cf8cda07d1b681e826f9adaadd158fe49cc1764bd4cca220f", "path_in_repo": "eliasbaixas/openser-xmlrpc/modules/usrloc/dlist.o", "objdump": "000000000000175e <register_udomain>:\n    175e:\t55                   \tpush   %rbp\n    175f:\t48 89 e5             \tmov    %rsp,%rbp\n    1762:\t41 55                \tpush   %r13\n    1764:\t41 54                \tpush   %r12\n    1766:\t53                   \tpush   %rbx\n    1767:\t48 83 ec 48          \tsub    $0x48,%rsp\n    176b:\t48 89 7d a8          \tmov    %rdi,-0x58(%rbp)\n    176f:\t48 89 75 a0          \tmov    %rsi,-0x60(%rbp)\n    1773:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    1777:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n    177b:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    177f:\t48 89 c7             \tmov    %rax,%rdi\n    1782:\te8 00 00 00 00       \tcall   1787 <register_udomain+0x29>\n    1787:\t89 45 b8             \tmov    %eax,-0x48(%rbp)\n    178a:\t48 8d 55 c8          \tlea    -0x38(%rbp),%rdx\n    178e:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    1792:\t48 89 d6             \tmov    %rdx,%rsi\n    1795:\t48 89 c7             \tmov    %rax,%rdi\n    1798:\te8 93 ef ff ff       \tcall   730 <find_dlist>\n    179d:\t85 c0                \ttest   %eax,%eax\n    179f:\t75 19                \tjne    17ba <register_udomain+0x5c>\n    17a1:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    17a5:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n    17a9:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    17ad:\t48 89 10             \tmov    %rdx,(%rax)\n    17b0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    17b5:\te9 3e 04 00 00       \tjmp    1bf8 <register_udomain+0x49a>\n    17ba:\t48 8d 55 c8          \tlea    -0x38(%rbp),%rdx\n    17be:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n    17c2:\t48 89 d6             \tmov    %rdx,%rsi\n    17c5:\t48 89 c7             \tmov    %rax,%rdi\n    17c8:\te8 86 fc ff ff       \tcall   1453 <new_dlist>\n    17cd:\t85 c0                \ttest   %eax,%eax\n    17cf:\t79 79                \tjns    184a <register_udomain+0xec>\n    17d1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 17d8 <register_udomain+0x7a>\n    17d8:\t48 8b 00             \tmov    (%rax),%rax\n    17db:\t8b 00                \tmov    (%rax),%eax\n    17dd:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    17e0:\t7c 5e                \tjl     1840 <register_udomain+0xe2>\n    17e2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 17e9 <register_udomain+0x8b>\n    17e9:\t8b 00                \tmov    (%rax),%eax\n    17eb:\t85 c0                \ttest   %eax,%eax\n    17ed:\t74 2b                \tje     181a <register_udomain+0xbc>\n    17ef:\te8 00 00 00 00       \tcall   17f4 <register_udomain+0x96>\n    17f4:\t89 c3                \tmov    %eax,%ebx\n    17f6:\te8 75 e8 ff ff       \tcall   70 <dp_time>\n    17fb:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 1802 <register_udomain+0xa4>\n    1802:\t89 da                \tmov    %ebx,%edx\n    1804:\t48 89 c6             \tmov    %rax,%rsi\n    1807:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 180e <register_udomain+0xb0>\n    180e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1813:\te8 00 00 00 00       \tcall   1818 <register_udomain+0xba>\n    1818:\teb 26                \tjmp    1840 <register_udomain+0xe2>\n    181a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1821 <register_udomain+0xc3>\n    1821:\t8b 00                \tmov    (%rax),%eax\n    1823:\t83 c8 03             \tor     $0x3,%eax\n    1826:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 182d <register_udomain+0xcf>\n    182d:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 1834 <register_udomain+0xd6>\n    1834:\t89 c7                \tmov    %eax,%edi\n    1836:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    183b:\te8 00 00 00 00       \tcall   1840 <register_udomain+0xe2>\n    1840:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    1845:\te9 ae 03 00 00       \tjmp    1bf8 <register_udomain+0x49a>\n    184a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1851 <register_udomain+0xf3>\n    1851:\t8b 00                \tmov    (%rax),%eax\n    1853:\t85 c0                \ttest   %eax,%eax\n    1855:\t0f 84 ad 02 00 00    \tje     1b08 <register_udomain+0x3aa>\n    185b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1862 <register_udomain+0x104>\n    1862:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n    1866:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 186d <register_udomain+0x10f>\n    186d:\t48 8b 00             \tmov    (%rax),%rax\n    1870:\t48 89 c7             \tmov    %rax,%rdi\n    1873:\tff d2                \tcall   *%rdx\n    1875:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    1879:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n    187e:\t75 7b                \tjne    18fb <register_udomain+0x19d>\n    1880:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1887 <register_udomain+0x129>\n    1887:\t48 8b 00             \tmov    (%rax),%rax\n    188a:\t8b 00                \tmov    (%rax),%eax\n    188c:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    188f:\t0f 8c ac 02 00 00    \tjl     1b41 <register_udomain+0x3e3>\n    1895:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 189c <register_udomain+0x13e>\n    189c:\t8b 00                \tmov    (%rax),%eax\n    189e:\t85 c0                \ttest   %eax,%eax\n    18a0:\t74 2e                \tje     18d0 <register_udomain+0x172>\n    18a2:\te8 00 00 00 00       \tcall   18a7 <register_udomain+0x149>\n    18a7:\t89 c3                \tmov    %eax,%ebx\n    18a9:\te8 c2 e7 ff ff       \tcall   70 <dp_time>\n    18ae:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 18b5 <register_udomain+0x157>\n    18b5:\t89 da                \tmov    %ebx,%edx\n    18b7:\t48 89 c6             \tmov    %rax,%rsi\n    18ba:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 18c1 <register_udomain+0x163>\n    18c1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    18c6:\te8 00 00 00 00       \tcall   18cb <register_udomain+0x16d>\n    18cb:\te9 71 02 00 00       \tjmp    1b41 <register_udomain+0x3e3>\n    18d0:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 18d7 <register_udomain+0x179>\n    18d7:\t8b 00                \tmov    (%rax),%eax\n    18d9:\t83 c8 03             \tor     $0x3,%eax\n    18dc:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 18e3 <register_udomain+0x185>\n    18e3:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 18ea <register_udomain+0x18c>\n    18ea:\t89 c7                \tmov    %eax,%edi\n    18ec:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    18f1:\te8 00 00 00 00       \tcall   18f6 <register_udomain+0x198>\n    18f6:\te9 46 02 00 00       \tjmp    1b41 <register_udomain+0x3e3>\n    18fb:\t48 8d 55 b0          \tlea    -0x50(%rbp),%rdx\n    18ff:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1903:\t48 89 c6             \tmov    %rax,%rsi\n    1906:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 190d <register_udomain+0x1af>\n    190d:\t48 89 c7             \tmov    %rax,%rdi\n    1910:\te8 00 00 00 00       \tcall   1915 <register_udomain+0x1b7>\n    1915:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n    1918:\t83 7d d4 00          \tcmpl   $0x0,-0x2c(%rbp)\n    191c:\t79 7b                \tjns    1999 <register_udomain+0x23b>\n    191e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1925 <register_udomain+0x1c7>\n    1925:\t48 8b 00             \tmov    (%rax),%rax\n    1928:\t8b 00                \tmov    (%rax),%eax\n    192a:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    192d:\t0f 8c 11 02 00 00    \tjl     1b44 <register_udomain+0x3e6>\n    1933:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 193a <register_udomain+0x1dc>\n    193a:\t8b 00                \tmov    (%rax),%eax\n    193c:\t85 c0                \ttest   %eax,%eax\n    193e:\t74 2e                \tje     196e <register_udomain+0x210>\n    1940:\te8 00 00 00 00       \tcall   1945 <register_udomain+0x1e7>\n    1945:\t89 c3                \tmov    %eax,%ebx\n    1947:\te8 24 e7 ff ff       \tcall   70 <dp_time>\n    194c:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 1953 <register_udomain+0x1f5>\n    1953:\t89 da                \tmov    %ebx,%edx\n    1955:\t48 89 c6             \tmov    %rax,%rsi\n    1958:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 195f <register_udomain+0x201>\n    195f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1964:\te8 00 00 00 00       \tcall   1969 <register_udomain+0x20b>\n    1969:\te9 d6 01 00 00       \tjmp    1b44 <register_udomain+0x3e6>\n    196e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1975 <register_udomain+0x217>\n    1975:\t8b 00                \tmov    (%rax),%eax\n    1977:\t83 c8 03             \tor     $0x3,%eax\n    197a:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 1981 <register_udomain+0x223>\n    1981:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 1988 <register_udomain+0x22a>\n    1988:\t89 c7                \tmov    %eax,%edi\n    198a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    198f:\te8 00 00 00 00       \tcall   1994 <register_udomain+0x236>\n    1994:\te9 ab 01 00 00       \tjmp    1b44 <register_udomain+0x3e6>\n    1999:\t81 7d d4 eb 03 00 00 \tcmpl   $0x3eb,-0x2c(%rbp)\n    19a0:\t7f 7b                \tjg     1a1d <register_udomain+0x2bf>\n    19a2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 19a9 <register_udomain+0x24b>\n    19a9:\t48 8b 00             \tmov    (%rax),%rax\n    19ac:\t8b 00                \tmov    (%rax),%eax\n    19ae:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    19b1:\t0f 8c 90 01 00 00    \tjl     1b47 <register_udomain+0x3e9>\n    19b7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 19be <register_udomain+0x260>\n    19be:\t8b 00                \tmov    (%rax),%eax\n    19c0:\t85 c0                \ttest   %eax,%eax\n    19c2:\t74 2e                \tje     19f2 <register_udomain+0x294>\n    19c4:\te8 00 00 00 00       \tcall   19c9 <register_udomain+0x26b>\n    19c9:\t89 c3                \tmov    %eax,%ebx\n    19cb:\te8 a0 e6 ff ff       \tcall   70 <dp_time>\n    19d0:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 19d7 <register_udomain+0x279>\n    19d7:\t89 da                \tmov    %ebx,%edx\n    19d9:\t48 89 c6             \tmov    %rax,%rsi\n    19dc:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 19e3 <register_udomain+0x285>\n    19e3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    19e8:\te8 00 00 00 00       \tcall   19ed <register_udomain+0x28f>\n    19ed:\te9 55 01 00 00       \tjmp    1b47 <register_udomain+0x3e9>\n    19f2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 19f9 <register_udomain+0x29b>\n    19f9:\t8b 00                \tmov    (%rax),%eax\n    19fb:\t83 c8 03             \tor     $0x3,%eax\n    19fe:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 1a05 <register_udomain+0x2a7>\n    1a05:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 1a0c <register_udomain+0x2ae>\n    1a0c:\t89 c7                \tmov    %eax,%edi\n    1a0e:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1a13:\te8 00 00 00 00       \tcall   1a18 <register_udomain+0x2ba>\n    1a18:\te9 2a 01 00 00       \tjmp    1b47 <register_udomain+0x3e9>\n    1a1d:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1a21:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n    1a25:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1a29:\t48 89 d6             \tmov    %rdx,%rsi\n    1a2c:\t48 89 c7             \tmov    %rax,%rdi\n    1a2f:\te8 00 00 00 00       \tcall   1a34 <register_udomain+0x2d6>\n    1a34:\t85 c0                \ttest   %eax,%eax\n    1a36:\t0f 89 b8 00 00 00    \tjns    1af4 <register_udomain+0x396>\n    1a3c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1a43 <register_udomain+0x2e5>\n    1a43:\t48 8b 00             \tmov    (%rax),%rax\n    1a46:\t8b 00                \tmov    (%rax),%eax\n    1a48:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    1a4b:\t0f 8c f9 00 00 00    \tjl     1b4a <register_udomain+0x3ec>\n    1a51:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1a58 <register_udomain+0x2fa>\n    1a58:\t8b 00                \tmov    (%rax),%eax\n    1a5a:\t85 c0                \ttest   %eax,%eax\n    1a5c:\t74 50                \tje     1aae <register_udomain+0x350>\n    1a5e:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    1a62:\t48 85 c0             \ttest   %rax,%rax\n    1a65:\t74 06                \tje     1a6d <register_udomain+0x30f>\n    1a67:\t48 8b 5d b0          \tmov    -0x50(%rbp),%rbx\n    1a6b:\teb 07                \tjmp    1a74 <register_udomain+0x316>\n    1a6d:\t48 8d 1d 00 00 00 00 \tlea    0x0(%rip),%rbx        # 1a74 <register_udomain+0x316>\n    1a74:\t44 8b 6d b8          \tmov    -0x48(%rbp),%r13d\n    1a78:\te8 00 00 00 00       \tcall   1a7d <register_udomain+0x31f>\n    1a7d:\t41 89 c4             \tmov    %eax,%r12d\n    1a80:\te8 eb e5 ff ff       \tcall   70 <dp_time>\n    1a85:\t49 89 d9             \tmov    %rbx,%r9\n    1a88:\t45 89 e8             \tmov    %r13d,%r8d\n    1a8b:\t48 8d 0d 00 00 00 00 \tlea    0x0(%rip),%rcx        # 1a92 <register_udomain+0x334>\n    1a92:\t44 89 e2             \tmov    %r12d,%edx\n    1a95:\t48 89 c6             \tmov    %rax,%rsi\n    1a98:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 1a9f <register_udomain+0x341>\n    1a9f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1aa4:\te8 00 00 00 00       \tcall   1aa9 <register_udomain+0x34b>\n    1aa9:\te9 9c 00 00 00       \tjmp    1b4a <register_udomain+0x3ec>\n    1aae:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    1ab2:\t48 85 c0             \ttest   %rax,%rax\n    1ab5:\t74 06                \tje     1abd <register_udomain+0x35f>\n    1ab7:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    1abb:\teb 07                \tjmp    1ac4 <register_udomain+0x366>\n    1abd:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 1ac4 <register_udomain+0x366>\n    1ac4:\t8b 55 b8             \tmov    -0x48(%rbp),%edx\n    1ac7:\t48 8b 0d 00 00 00 00 \tmov    0x0(%rip),%rcx        # 1ace <register_udomain+0x370>\n    1ace:\t8b 09                \tmov    (%rcx),%ecx\n    1ad0:\t83 c9 03             \tor     $0x3,%ecx\n    1ad3:\t89 cf                \tmov    %ecx,%edi\n    1ad5:\t49 89 c0             \tmov    %rax,%r8\n    1ad8:\t89 d1                \tmov    %edx,%ecx\n    1ada:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 1ae1 <register_udomain+0x383>\n    1ae1:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 1ae8 <register_udomain+0x38a>\n    1ae8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1aed:\te8 00 00 00 00       \tcall   1af2 <register_udomain+0x394>\n    1af2:\teb 56                \tjmp    1b4a <register_udomain+0x3ec>\n    1af4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1afb <register_udomain+0x39d>\n    1afb:\t48 8b 50 18          \tmov    0x18(%rax),%rdx\n    1aff:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1b03:\t48 89 c7             \tmov    %rax,%rdi\n    1b06:\tff d2                \tcall   *%rdx\n    1b08:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1b0c:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 1b13 <register_udomain+0x3b5>\n    1b13:\t48 8b 12             \tmov    (%rdx),%rdx\n    1b16:\t48 89 50 18          \tmov    %rdx,0x18(%rax)\n    1b1a:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    1b1e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1b25 <register_udomain+0x3c7>\n    1b25:\t48 89 10             \tmov    %rdx,(%rax)\n    1b28:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1b2c:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n    1b30:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    1b34:\t48 89 10             \tmov    %rdx,(%rax)\n    1b37:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1b3c:\te9 b7 00 00 00       \tjmp    1bf8 <register_udomain+0x49a>\n    1b41:\t90                   \tnop\n    1b42:\teb 07                \tjmp    1b4b <register_udomain+0x3ed>\n    1b44:\t90                   \tnop\n    1b45:\teb 04                \tjmp    1b4b <register_udomain+0x3ed>\n    1b47:\t90                   \tnop\n    1b48:\teb 01                \tjmp    1b4b <register_udomain+0x3ed>\n    1b4a:\t90                   \tnop\n    1b4b:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n    1b50:\t74 14                \tje     1b66 <register_udomain+0x408>\n    1b52:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1b59 <register_udomain+0x3fb>\n    1b59:\t48 8b 50 18          \tmov    0x18(%rax),%rdx\n    1b5d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1b61:\t48 89 c7             \tmov    %rax,%rdi\n    1b64:\tff d2                \tcall   *%rdx\n    1b66:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1b6a:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    1b6e:\t48 89 c7             \tmov    %rax,%rdi\n    1b71:\te8 00 00 00 00       \tcall   1b76 <register_udomain+0x418>\n    1b76:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1b7d <register_udomain+0x41f>\n    1b7d:\t48 8b 00             \tmov    (%rax),%rax\n    1b80:\t48 89 c7             \tmov    %rax,%rdi\n    1b83:\te8 98 e4 ff ff       \tcall   20 <get_lock>\n    1b88:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1b8c:\t48 8b 10             \tmov    (%rax),%rdx\n    1b8f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1b96 <register_udomain+0x438>\n    1b96:\t48 8b 00             \tmov    (%rax),%rax\n    1b99:\t48 89 d6             \tmov    %rdx,%rsi\n    1b9c:\t48 89 c7             \tmov    %rax,%rdi\n    1b9f:\te8 00 00 00 00       \tcall   1ba4 <register_udomain+0x446>\n    1ba4:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1bab <register_udomain+0x44d>\n    1bab:\t48 8b 00             \tmov    (%rax),%rax\n    1bae:\t48 89 c7             \tmov    %rax,%rdi\n    1bb1:\te8 a4 e4 ff ff       \tcall   5a <release_lock>\n    1bb6:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1bbd <register_udomain+0x45f>\n    1bbd:\t48 8b 00             \tmov    (%rax),%rax\n    1bc0:\t48 89 c7             \tmov    %rax,%rdi\n    1bc3:\te8 58 e4 ff ff       \tcall   20 <get_lock>\n    1bc8:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    1bcc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1bd3 <register_udomain+0x475>\n    1bd3:\t48 8b 00             \tmov    (%rax),%rax\n    1bd6:\t48 89 d6             \tmov    %rdx,%rsi\n    1bd9:\t48 89 c7             \tmov    %rax,%rdi\n    1bdc:\te8 00 00 00 00       \tcall   1be1 <register_udomain+0x483>\n    1be1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1be8 <register_udomain+0x48a>\n    1be8:\t48 8b 00             \tmov    (%rax),%rax\n    1beb:\t48 89 c7             \tmov    %rax,%rdi\n    1bee:\te8 67 e4 ff ff       \tcall   5a <release_lock>\n    1bf3:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    1bf8:\t48 83 c4 48          \tadd    $0x48,%rsp\n    1bfc:\t5b                   \tpop    %rbx\n    1bfd:\t41 5c                \tpop    %r12\n    1bff:\t41 5d                \tpop    %r13\n    1c01:\t5d                   \tpop    %rbp\n    1c02:\tc3                   \tret    ", "code_s": "undefined8 register_udomain(char *param_1,\n                            undefined8 *<span class=\"supfact\">param_2</span>) {\n  uint uVar1;\n  int iVar2;\n  undefined4 uVar3;\n  size_t sVar4;\n  undefined8 uVar5;\n  char *pcVar6;\n  char *<span class=\"supfact\">local_58</span>;\n  uint <span class=\"supfact\">local_50</span>;\n  undefined8 *<span class=\"supfact\">local_40</span>;\n  int <span class=\"supfact\">local_34</span>;\n  long <span class=\"supfact\">local_30</span>;\n  <span class=\"supfact\">local_58</span> = param_1;\n  sVar4 = strlen(param_1);\n  <span class=\"supfact\">local_50</span> = (uint)sVar4;\n  iVar2 = FUN_00100730(&<span class=\"supfact\">local_58</span>, &<span class=\"supfact\">local_40</span>);\n  if (iVar2 == Number) {\n    *<span class=\"supfact\">param_2</span> = <span class=\"supfact\">local_40</span>[Number];\n    return Number;\n  }\n  iVar2 = FUN_00101453(&<span class=\"supfact\">local_58</span>, &<span class=\"supfact\">local_40</span>);\n  if (iVar2 < Number) {\n    if (-Number < *_debug) {\n      if (_log_stderr == Number) {\n        syslog(_log_facility | Number, String, String);\n      } else {\n        uVar3 = dp_my_pid();\n        uVar5 = FUN_00100070();\n        dprint(&DAT_00102750, uVar5, uVar3, String);\n      }\n    }\n    return Number;\n  }\n  if (_db_mode == Number) {\n  LAB_00101b08:\n    <span class=\"supfact\">local_40</span>[Number] = root;\n    root = <span class=\"supfact\">local_40</span>;\n    *<span class=\"supfact\">param_2</span> = <span class=\"supfact\">local_40</span>[Number];\n    uVar5 = Number;\n  } else {\n    <span class=\"supfact\">local_30</span> = (*_strlen)(_db_url);\n    if (<span class=\"supfact\">local_30</span> == Number) {\n      if (-Number < *_debug) {\n        if (_log_stderr == Number) {\n          syslog(_log_facility | Number, String, String);\n        } else {\n          uVar3 = dp_my_pid();\n          uVar5 = FUN_00100070();\n          dprint(&DAT_001027c8, uVar5, uVar3, String);\n        }\n      }\n    } else {\n      <span class=\"supfact\">local_34</span> = table_version(\n          &ul_dbf, <span class=\"supfact\">local_30</span>, &<span class=\"supfact\">local_58</span>);\n      if (<span class=\"supfact\">local_34</span> < Number) {\n        if (-Number < *_debug) {\n          if (_log_stderr == Number) {\n            syslog(_log_facility | Number, String, String);\n          } else {\n            uVar3 = dp_my_pid();\n            uVar5 = FUN_00100070();\n            dprint(&DAT_00102850, uVar5, uVar3, String);\n          }\n        }\n      } else if (<span class=\"supfact\">local_34</span> < Number) {\n        if (-Number < *_debug) {\n          if (_log_stderr == Number) {\n            syslog(_log_facility | Number, String, String);\n          } else {\n            uVar3 = dp_my_pid();\n            uVar5 = FUN_00100070();\n            dprint(&DAT_001028d8, uVar5, uVar3, String);\n          }\n        }\n      } else {\n        iVar2 = testdb_udomain(<span class=\"supfact\">local_30</span>,\n                               <span class=\"supfact\">local_40</span>[Number]);\n        uVar1 = <span class=\"supfact\">local_50</span>;\n        if (-Number < iVar2) {\n          (*_memcpy)(<span class=\"supfact\">local_30</span>);\n          goto LAB_00101b08;\n        }\n        if (-Number < *_debug) {\n          if (_log_stderr == Number) {\n            pcVar6 = <span class=\"supfact\">local_58</span>;\n            if (<span class=\"supfact\">local_58</span> == (char *)Number) {\n              pcVar6 = String;\n            }\n            syslog(_log_facility | Number, String, String,\n                   (ulong)<span class=\"supfact\">local_50</span>, pcVar6);\n          } else {\n            pcVar6 = <span class=\"supfact\">local_58</span>;\n            if (<span class=\"supfact\">local_58</span> == (char *)Number) {\n              pcVar6 = String;\n            }\n            uVar3 = dp_my_pid();\n            uVar5 = FUN_00100070();\n            dprint(&DAT_00102990, uVar5, uVar3, String, uVar1, pcVar6);\n          }\n        }\n      }\n    }\n    if (<span class=\"supfact\">local_30</span> != Number) {\n      (*_memcpy)(<span class=\"supfact\">local_30</span>);\n    }\n    free_udomain(<span class=\"supfact\">local_40</span>[Number]);\n    FUN_00100020(_mem_lock);\n    fm_free(_shm_block, *<span class=\"supfact\">local_40</span>);\n    FUN_0010005a(_mem_lock);\n    FUN_00100020(_mem_lock);\n    fm_free(_shm_block, <span class=\"supfact\">local_40</span>);\n    FUN_0010005a(_mem_lock);\n    uVar5 = Number;\n  }\n  return uVar5;\n}", "code_t": "int register_udomain(char *_n, udomain_t **<span class=\"supfact\">_d</span>) {\n  int iVar1;\n  undefined4 uVar2;\n  int iVar3;\n  size_t sVar4;\n  char *pcVar5;\n  char *pcVar6;\n  udomain_t **<span class=\"supfact\">_d</span> - local;\n  char *_n - local;\n  str <span class=\"supfact\">s</span>;\n  dlist_t *<span class=\"supfact\">d</span>;\n  int <span class=\"supfact\">ver</span>;\n  db_con_t *<span class=\"supfact\">con</span>;\n  <span class=\"supfact\">s</span>.<span class=\"supfact\">s</span> = _n;\n  sVar4 = strlen(_n);\n  <span class=\"supfact\">s</span>.len = (int)sVar4;\n  iVar1 = find_dlist(&<span class=\"supfact\">s</span>, &<span class=\"supfact\">d</span>);\n  if (iVar1 == Number) {\n    *<span class=\"supfact\">_d</span> = <span class=\"supfact\">d</span>-><span class=\"supfact\">d</span>;\n    return Number;\n  }\n  iVar1 = new_dlist(&<span class=\"supfact\">s</span>, &<span class=\"supfact\">d</span>);\n  if (iVar1 < Number) {\n    if (-Number < *_debug) {\n      if (_log_stderr == Number) {\n        syslog(_log_facility | Number, String, String);\n      } else {\n        uVar2 = dp_my_pid();\n        pcVar5 = dp_time();\n        dprint(&DAT_00102750, pcVar5, uVar2, String);\n      }\n    }\n    return -Number;\n  }\n  if (_db_mode == Number) {\n  LAB_00101b08:\n    <span class=\"supfact\">d</span>->next = root;\n    root = <span class=\"supfact\">d</span>;\n    *<span class=\"supfact\">_d</span> = <span class=\"supfact\">d</span>-><span class=\"supfact\">d</span>;\n    iVar1 = Number;\n  } else {\n    <span class=\"supfact\">con</span> = (db_con_t *)(*_strlen)(_db_url);\n    if (<span class=\"supfact\">con</span> == (db_con_t *)Number) {\n      if (-Number < *_debug) {\n        if (_log_stderr == Number) {\n          syslog(_log_facility | Number, String, String);\n        } else {\n          uVar2 = dp_my_pid();\n          pcVar5 = dp_time();\n          dprint(&DAT_001027c8, pcVar5, uVar2, String);\n        }\n      }\n    } else {\n      <span class=\"supfact\">ver</span> =\n          table_version(&ul_dbf, <span class=\"supfact\">con</span>, &<span class=\"supfact\">s</span>);\n      if (<span class=\"supfact\">ver</span> < Number) {\n        if (-Number < *_debug) {\n          if (_log_stderr == Number) {\n            syslog(_log_facility | Number, String, String);\n          } else {\n            uVar2 = dp_my_pid();\n            pcVar5 = dp_time();\n            dprint(&DAT_00102850, pcVar5, uVar2, String);\n          }\n        }\n      } else if (<span class=\"supfact\">ver</span> < Number) {\n        if (-Number < *_debug) {\n          if (_log_stderr == Number) {\n            syslog(_log_facility | Number, String, String);\n          } else {\n            uVar2 = dp_my_pid();\n            pcVar5 = dp_time();\n            dprint(&DAT_001028d8, pcVar5, uVar2, String);\n          }\n        }\n      } else {\n        iVar3 = testdb_udomain(<span class=\"supfact\">con</span>,\n                               <span class=\"supfact\">d</span>-><span class=\"supfact\">d</span>);\n        iVar1 = <span class=\"supfact\">s</span>.len;\n        if (-Number < iVar3) {\n          (*_memcpy)(<span class=\"supfact\">con</span>);\n          goto LAB_00101b08;\n        }\n        if (-Number < *_debug) {\n          if (_log_stderr == Number) {\n            pcVar5 = <span class=\"supfact\">s</span>.<span class=\"supfact\">s</span>;\n            if (<span class=\"supfact\">s</span>.<span class=\"supfact\">s</span> == (char *)Number) {\n              pcVar5 = String;\n            }\n            syslog(_log_facility | Number, String, String,\n                   (ulong)(uint)<span class=\"supfact\">s</span>.len, pcVar5);\n          } else {\n            pcVar5 = <span class=\"supfact\">s</span>.<span class=\"supfact\">s</span>;\n            if (<span class=\"supfact\">s</span>.<span class=\"supfact\">s</span> == (char *)Number) {\n              pcVar5 = String;\n            }\n            uVar2 = dp_my_pid();\n            pcVar6 = dp_time();\n            dprint(&DAT_00102990, pcVar6, uVar2, String, iVar1, pcVar5);\n          }\n        }\n      }\n    }\n    if (<span class=\"supfact\">con</span> != (db_con_t *)Number) {\n      (*_memcpy)(<span class=\"supfact\">con</span>);\n    }\n    free_udomain(<span class=\"supfact\">d</span>-><span class=\"supfact\">d</span>);\n    get_lock(_mem_lock);\n    fm_free(_shm_block, (<span class=\"supfact\">d</span>->name).<span class=\"supfact\">s</span>);\n    release_lock(_mem_lock);\n    get_lock(_mem_lock);\n    fm_free(_shm_block, <span class=\"supfact\">d</span>);\n    release_lock(_mem_lock);\n    iVar1 = -Number;\n  }\n  return iVar1;\n}", "var": [{"name": "param_2", "type": "char * *", "pred_name": "__unk__", "ref_name": "_d", "ref_type": "udomain_t * * *"}, {"name": "local_58", "type": "str", "pred_name": "tmp", "ref_name": "s", "ref_type": "str"}, {"name": "local_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_40", "type": "dlg_t * *", "pred_name": "res", "ref_name": "d", "ref_type": "dlist_t * *"}, {"name": "local_34", "type": "int", "pred_name": "__unk__", "ref_name": "ver", "ref_type": "int"}, {"name": "local_30", "type": "__unk__", "pred_name": "__unk__", "ref_name": "con", "ref_type": "db_con_t * *"}], "body_in_train": false}, {"repo_owner": "openamedia", "repo_name": "ffmpeg-android", "path": "openamedia/ffmpeg-android/0da3724bcc027775e1ce96fc6a0712e25f89da43f4b9b9b72f27dec35d583815", "path_in_repo": "openamedia/ffmpeg-android//libswresample/swresample.o", "objdump": "0000000000000431 <swr_free>:\n     431:\t48 83 ec 28          \tsub    $0x28,%rsp\n     435:\t48 89 7c 24 08       \tmov    %rdi,0x8(%rsp)\n     43a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     43f:\t48 8b 00             \tmov    (%rax),%rax\n     442:\t48 89 44 24 18       \tmov    %rax,0x18(%rsp)\n     447:\t48 83 7c 24 18 00    \tcmpq   $0x0,0x18(%rsp)\n     44d:\t74 3f                \tje     48e <swr_free+0x5d>\n     44f:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     454:\t48 89 c7             \tmov    %rax,%rdi\n     457:\te8 72 fe ff ff       \tcall   2ce <clear_context>\n     45c:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     461:\t48 8b 80 c8 20 00 00 \tmov    0x20c8(%rax),%rax\n     468:\t48 85 c0             \ttest   %rax,%rax\n     46b:\t74 21                \tje     48e <swr_free+0x5d>\n     46d:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     472:\t48 8b 80 c8 20 00 00 \tmov    0x20c8(%rax),%rax\n     479:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     47d:\t48 8b 54 24 18       \tmov    0x18(%rsp),%rdx\n     482:\t48 81 c2 c0 20 00 00 \tadd    $0x20c0,%rdx\n     489:\t48 89 d7             \tmov    %rdx,%rdi\n     48c:\tff d0                \tcall   *%rax\n     48e:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     493:\t48 89 c7             \tmov    %rax,%rdi\n     496:\te8 00 00 00 00       \tcall   49b <swr_free+0x6a>\n     49b:\t90                   \tnop\n     49c:\t48 83 c4 28          \tadd    $0x28,%rsp\n     4a0:\tc3                   \tret    ", "code_s": "void swr_free(long *<span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  lVar1 = *<span class=\"supfact\">param_1</span>;\n  if (lVar1 != Number) {\n    FUN_001002ce(lVar1);\n    if (*(long *)(lVar1 + Number) != Number) {\n      (**(code **)(*(long *)(lVar1 + Number) + Number))(lVar1 + Number);\n    }\n  }\n  av_freep(<span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "void swr_free(SwrContext **<span class=\"supfact\">ss</span>) {\n  SwrContext *s_00;\n  SwrContext **<span class=\"supfact\">ss</span> - local;\n  SwrContext *s;\n  s_00 = *<span class=\"supfact\">ss</span>;\n  if (s_00 != (SwrContext *)Number) {\n    clear_context(s_00);\n    if (s_00->resampler != (Resampler *)Number) {\n      (*s_00->resampler->free)(&s_00->resample);\n    }\n  }\n  av_freep(<span class=\"supfact\">ss</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "size_t", "pred_name": "idx", "ref_name": "ss", "ref_type": "SwrContext * * *"}], "body_in_train": false}, {"repo_owner": "bpillon", "repo_name": "android-ffmpeg-wrapper", "path": "bpillon/android-ffmpeg-wrapper/ba1cff2608504ca3b34e6f7884c235aab00d828df51cb6f4520ff842ce1e8ea9", "path_in_repo": "bpillon/android-ffmpeg-wrapper/jni/ffmpeg/libavcodec/h264idct.o", "objdump": "0000000000008fd4 <ff_h264_luma_dc_dequant_idct_12_c>:\n    8fd4:\t48 83 ec 20          \tsub    $0x20,%rsp\n    8fd8:\t48 89 7c 24 98       \tmov    %rdi,-0x68(%rsp)\n    8fdd:\t48 89 74 24 90       \tmov    %rsi,-0x70(%rsp)\n    8fe2:\t89 54 24 8c          \tmov    %edx,-0x74(%rsp)\n    8fe6:\t48 8b 44 24 90       \tmov    -0x70(%rsp),%rax\n    8feb:\t48 89 44 24 10       \tmov    %rax,0x10(%rsp)\n    8ff0:\t48 8b 44 24 98       \tmov    -0x68(%rsp),%rax\n    8ff5:\t48 89 44 24 08       \tmov    %rax,0x8(%rsp)\n    8ffa:\tc7 44 24 1c 00 00 00 \tmovl   $0x0,0x1c(%rsp)\n    9001:\t00 \n    9002:\te9 7e 01 00 00       \tjmp    9185 <ff_h264_luma_dc_dequant_idct_12_c+0x1b1>\n    9007:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    900b:\tc1 e0 02             \tshl    $0x2,%eax\n    900e:\t48 98                \tcltq   \n    9010:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9017:\t00 \n    9018:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    901d:\t48 01 d0             \tadd    %rdx,%rax\n    9020:\t8b 10                \tmov    (%rax),%edx\n    9022:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    9026:\tc1 e0 02             \tshl    $0x2,%eax\n    9029:\t48 98                \tcltq   \n    902b:\t48 83 c0 01          \tadd    $0x1,%rax\n    902f:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9036:\t00 \n    9037:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    903c:\t48 01 c8             \tadd    %rcx,%rax\n    903f:\t8b 00                \tmov    (%rax),%eax\n    9041:\t01 d0                \tadd    %edx,%eax\n    9043:\t89 44 24 f0          \tmov    %eax,-0x10(%rsp)\n    9047:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    904b:\tc1 e0 02             \tshl    $0x2,%eax\n    904e:\t48 98                \tcltq   \n    9050:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9057:\t00 \n    9058:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    905d:\t48 01 d0             \tadd    %rdx,%rax\n    9060:\t8b 10                \tmov    (%rax),%edx\n    9062:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    9066:\tc1 e0 02             \tshl    $0x2,%eax\n    9069:\t48 98                \tcltq   \n    906b:\t48 83 c0 01          \tadd    $0x1,%rax\n    906f:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9076:\t00 \n    9077:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    907c:\t48 01 c8             \tadd    %rcx,%rax\n    907f:\t8b 00                \tmov    (%rax),%eax\n    9081:\t29 c2                \tsub    %eax,%edx\n    9083:\t89 d0                \tmov    %edx,%eax\n    9085:\t89 44 24 ec          \tmov    %eax,-0x14(%rsp)\n    9089:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    908d:\tc1 e0 02             \tshl    $0x2,%eax\n    9090:\t48 98                \tcltq   \n    9092:\t48 83 c0 02          \tadd    $0x2,%rax\n    9096:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    909d:\t00 \n    909e:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    90a3:\t48 01 d0             \tadd    %rdx,%rax\n    90a6:\t8b 10                \tmov    (%rax),%edx\n    90a8:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    90ac:\tc1 e0 02             \tshl    $0x2,%eax\n    90af:\t48 98                \tcltq   \n    90b1:\t48 83 c0 03          \tadd    $0x3,%rax\n    90b5:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    90bc:\t00 \n    90bd:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    90c2:\t48 01 c8             \tadd    %rcx,%rax\n    90c5:\t8b 00                \tmov    (%rax),%eax\n    90c7:\t29 c2                \tsub    %eax,%edx\n    90c9:\t89 d0                \tmov    %edx,%eax\n    90cb:\t89 44 24 e8          \tmov    %eax,-0x18(%rsp)\n    90cf:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    90d3:\tc1 e0 02             \tshl    $0x2,%eax\n    90d6:\t48 98                \tcltq   \n    90d8:\t48 83 c0 02          \tadd    $0x2,%rax\n    90dc:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    90e3:\t00 \n    90e4:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    90e9:\t48 01 d0             \tadd    %rdx,%rax\n    90ec:\t8b 10                \tmov    (%rax),%edx\n    90ee:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    90f2:\tc1 e0 02             \tshl    $0x2,%eax\n    90f5:\t48 98                \tcltq   \n    90f7:\t48 83 c0 03          \tadd    $0x3,%rax\n    90fb:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9102:\t00 \n    9103:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    9108:\t48 01 c8             \tadd    %rcx,%rax\n    910b:\t8b 00                \tmov    (%rax),%eax\n    910d:\t01 d0                \tadd    %edx,%eax\n    910f:\t89 44 24 e4          \tmov    %eax,-0x1c(%rsp)\n    9113:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    9117:\t8d 0c 85 00 00 00 00 \tlea    0x0(,%rax,4),%ecx\n    911e:\t8b 54 24 f0          \tmov    -0x10(%rsp),%edx\n    9122:\t8b 44 24 e4          \tmov    -0x1c(%rsp),%eax\n    9126:\t01 c2                \tadd    %eax,%edx\n    9128:\t48 63 c1             \tmovslq %ecx,%rax\n    912b:\t89 54 84 a0          \tmov    %edx,-0x60(%rsp,%rax,4)\n    912f:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    9133:\tc1 e0 02             \tshl    $0x2,%eax\n    9136:\t8d 48 01             \tlea    0x1(%rax),%ecx\n    9139:\t8b 44 24 f0          \tmov    -0x10(%rsp),%eax\n    913d:\t2b 44 24 e4          \tsub    -0x1c(%rsp),%eax\n    9141:\t89 c2                \tmov    %eax,%edx\n    9143:\t48 63 c1             \tmovslq %ecx,%rax\n    9146:\t89 54 84 a0          \tmov    %edx,-0x60(%rsp,%rax,4)\n    914a:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    914e:\tc1 e0 02             \tshl    $0x2,%eax\n    9151:\t8d 48 02             \tlea    0x2(%rax),%ecx\n    9154:\t8b 44 24 ec          \tmov    -0x14(%rsp),%eax\n    9158:\t2b 44 24 e8          \tsub    -0x18(%rsp),%eax\n    915c:\t89 c2                \tmov    %eax,%edx\n    915e:\t48 63 c1             \tmovslq %ecx,%rax\n    9161:\t89 54 84 a0          \tmov    %edx,-0x60(%rsp,%rax,4)\n    9165:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    9169:\tc1 e0 02             \tshl    $0x2,%eax\n    916c:\t8d 48 03             \tlea    0x3(%rax),%ecx\n    916f:\t8b 54 24 ec          \tmov    -0x14(%rsp),%edx\n    9173:\t8b 44 24 e8          \tmov    -0x18(%rsp),%eax\n    9177:\t01 c2                \tadd    %eax,%edx\n    9179:\t48 63 c1             \tmovslq %ecx,%rax\n    917c:\t89 54 84 a0          \tmov    %edx,-0x60(%rsp,%rax,4)\n    9180:\t83 44 24 1c 01       \taddl   $0x1,0x1c(%rsp)\n    9185:\t83 7c 24 1c 03       \tcmpl   $0x3,0x1c(%rsp)\n    918a:\t0f 8e 77 fe ff ff    \tjle    9007 <ff_h264_luma_dc_dequant_idct_12_c+0x33>\n    9190:\tc7 44 24 1c 00 00 00 \tmovl   $0x0,0x1c(%rsp)\n    9197:\t00 \n    9198:\te9 59 01 00 00       \tjmp    92f6 <ff_h264_luma_dc_dequant_idct_12_c+0x322>\n    919d:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    91a1:\t48 98                \tcltq   \n    91a3:\t0f b6 80 00 00 00 00 \tmovzbl 0x0(%rax),%eax\n    91aa:\t0f b6 c0             \tmovzbl %al,%eax\n    91ad:\t89 44 24 04          \tmov    %eax,0x4(%rsp)\n    91b1:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    91b5:\t48 98                \tcltq   \n    91b7:\t8b 54 84 a0          \tmov    -0x60(%rsp,%rax,4),%edx\n    91bb:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    91bf:\t83 c0 08             \tadd    $0x8,%eax\n    91c2:\t48 98                \tcltq   \n    91c4:\t8b 44 84 a0          \tmov    -0x60(%rsp,%rax,4),%eax\n    91c8:\t01 d0                \tadd    %edx,%eax\n    91ca:\t89 04 24             \tmov    %eax,(%rsp)\n    91cd:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    91d1:\t48 98                \tcltq   \n    91d3:\t8b 54 84 a0          \tmov    -0x60(%rsp,%rax,4),%edx\n    91d7:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    91db:\t83 c0 08             \tadd    $0x8,%eax\n    91de:\t48 98                \tcltq   \n    91e0:\t8b 44 84 a0          \tmov    -0x60(%rsp,%rax,4),%eax\n    91e4:\t29 c2                \tsub    %eax,%edx\n    91e6:\t89 d0                \tmov    %edx,%eax\n    91e8:\t89 44 24 fc          \tmov    %eax,-0x4(%rsp)\n    91ec:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    91f0:\t83 c0 04             \tadd    $0x4,%eax\n    91f3:\t48 98                \tcltq   \n    91f5:\t8b 54 84 a0          \tmov    -0x60(%rsp,%rax,4),%edx\n    91f9:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    91fd:\t83 c0 0c             \tadd    $0xc,%eax\n    9200:\t48 98                \tcltq   \n    9202:\t8b 44 84 a0          \tmov    -0x60(%rsp,%rax,4),%eax\n    9206:\t29 c2                \tsub    %eax,%edx\n    9208:\t89 d0                \tmov    %edx,%eax\n    920a:\t89 44 24 f8          \tmov    %eax,-0x8(%rsp)\n    920e:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    9212:\t83 c0 04             \tadd    $0x4,%eax\n    9215:\t48 98                \tcltq   \n    9217:\t8b 54 84 a0          \tmov    -0x60(%rsp,%rax,4),%edx\n    921b:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    921f:\t83 c0 0c             \tadd    $0xc,%eax\n    9222:\t48 98                \tcltq   \n    9224:\t8b 44 84 a0          \tmov    -0x60(%rsp,%rax,4),%eax\n    9228:\t01 d0                \tadd    %edx,%eax\n    922a:\t89 44 24 f4          \tmov    %eax,-0xc(%rsp)\n    922e:\t8b 14 24             \tmov    (%rsp),%edx\n    9231:\t8b 44 24 f4          \tmov    -0xc(%rsp),%eax\n    9235:\t01 d0                \tadd    %edx,%eax\n    9237:\t0f af 44 24 8c       \timul   -0x74(%rsp),%eax\n    923c:\t8d 90 80 00 00 00    \tlea    0x80(%rax),%edx\n    9242:\t8b 44 24 04          \tmov    0x4(%rsp),%eax\n    9246:\t48 98                \tcltq   \n    9248:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    924f:\t00 \n    9250:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9255:\t48 01 c8             \tadd    %rcx,%rax\n    9258:\tc1 fa 08             \tsar    $0x8,%edx\n    925b:\t89 10                \tmov    %edx,(%rax)\n    925d:\t8b 54 24 fc          \tmov    -0x4(%rsp),%edx\n    9261:\t8b 44 24 f8          \tmov    -0x8(%rsp),%eax\n    9265:\t01 d0                \tadd    %edx,%eax\n    9267:\t0f af 44 24 8c       \timul   -0x74(%rsp),%eax\n    926c:\t8d 90 80 00 00 00    \tlea    0x80(%rax),%edx\n    9272:\t8b 44 24 04          \tmov    0x4(%rsp),%eax\n    9276:\t83 c0 10             \tadd    $0x10,%eax\n    9279:\t48 98                \tcltq   \n    927b:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9282:\t00 \n    9283:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9288:\t48 01 c8             \tadd    %rcx,%rax\n    928b:\tc1 fa 08             \tsar    $0x8,%edx\n    928e:\t89 10                \tmov    %edx,(%rax)\n    9290:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    9294:\t2b 44 24 f8          \tsub    -0x8(%rsp),%eax\n    9298:\t0f af 44 24 8c       \timul   -0x74(%rsp),%eax\n    929d:\t8d 90 80 00 00 00    \tlea    0x80(%rax),%edx\n    92a3:\t8b 44 24 04          \tmov    0x4(%rsp),%eax\n    92a7:\t83 c0 40             \tadd    $0x40,%eax\n    92aa:\t48 98                \tcltq   \n    92ac:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    92b3:\t00 \n    92b4:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    92b9:\t48 01 c8             \tadd    %rcx,%rax\n    92bc:\tc1 fa 08             \tsar    $0x8,%edx\n    92bf:\t89 10                \tmov    %edx,(%rax)\n    92c1:\t8b 04 24             \tmov    (%rsp),%eax\n    92c4:\t2b 44 24 f4          \tsub    -0xc(%rsp),%eax\n    92c8:\t0f af 44 24 8c       \timul   -0x74(%rsp),%eax\n    92cd:\t8d 90 80 00 00 00    \tlea    0x80(%rax),%edx\n    92d3:\t8b 44 24 04          \tmov    0x4(%rsp),%eax\n    92d7:\t83 c0 50             \tadd    $0x50,%eax\n    92da:\t48 98                \tcltq   \n    92dc:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    92e3:\t00 \n    92e4:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    92e9:\t48 01 c8             \tadd    %rcx,%rax\n    92ec:\tc1 fa 08             \tsar    $0x8,%edx\n    92ef:\t89 10                \tmov    %edx,(%rax)\n    92f1:\t83 44 24 1c 01       \taddl   $0x1,0x1c(%rsp)\n    92f6:\t83 7c 24 1c 03       \tcmpl   $0x3,0x1c(%rsp)\n    92fb:\t0f 8e 9c fe ff ff    \tjle    919d <ff_h264_luma_dc_dequant_idct_12_c+0x1c9>\n    9301:\t90                   \tnop\n    9302:\t90                   \tnop\n    9303:\t48 83 c4 20          \tadd    $0x20,%rsp\n    9307:\tc3                   \tret    ", "code_s": "void ff_h264_luma_dc_dequant_idct_12_c(long param_1,\n                                       long <span class=\"supfact\">param_2</span>,\n                                       int <span class=\"supfact\">param_3</span>) {\n  int <span class=\"supfact\">aiStack_80</span>[Number];\n  int <span class=\"supfact\">aiStack_60</span>[Number];\n  int <span class=\"supfact\">aiStack_50</span>[Number];\n  int <span class=\"supfact\">local_3c</span>;\n  int <span class=\"supfact\">local_38</span>;\n  int <span class=\"supfact\">local_34</span>;\n  int <span class=\"supfact\">local_30</span>;\n  int <span class=\"supfact\">local_2c</span>;\n  int <span class=\"supfact\">local_28</span>;\n  int <span class=\"supfact\">local_24</span>;\n  int <span class=\"supfact\">local_20</span>;\n  uint <span class=\"supfact\">local_1c</span>;\n  long <span class=\"supfact\">local_18</span>;\n  long <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_4</span>;\n  <span class=\"supfact\">local_10</span> = <span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">local_18</span> = param_1;\n  for (<span class=\"supfact\">local_4</span> = Number; <span class=\"supfact\">local_4</span> < Number;\n       <span class=\"supfact\">local_4</span> = <span class=\"supfact\">local_4</span> + Number) {\n    <span class=\"supfact\">local_30</span> =\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 ((long)(<span class=\"supfact\">local_4</span> << Number) + Number) *\n                     Number) +\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 (long)(<span class=\"supfact\">local_4</span> << Number) * Number);\n    <span class=\"supfact\">local_34</span> =\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 (long)(<span class=\"supfact\">local_4</span> << Number) * Number) -\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 ((long)(<span class=\"supfact\">local_4</span> << Number) + Number) * Number);\n    <span class=\"supfact\">local_38</span> =\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 ((long)(<span class=\"supfact\">local_4</span> << Number) + Number) *\n                     Number) -\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 ((long)(<span class=\"supfact\">local_4</span> << Number) + Number) * Number);\n    <span class=\"supfact\">local_3c</span> =\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 ((long)(<span class=\"supfact\">local_4</span> << Number) + Number) *\n                     Number) +\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 ((long)(<span class=\"supfact\">local_4</span> << Number) + Number) * Number);\n    <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> * Number] =\n        <span class=\"supfact\">local_30</span> + <span class=\"supfact\">local_3c</span>;\n    <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> * Number + Number] =\n        <span class=\"supfact\">local_30</span> - <span class=\"supfact\">local_3c</span>;\n    <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> * Number + Number] =\n        <span class=\"supfact\">local_34</span> - <span class=\"supfact\">local_38</span>;\n    <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> * Number + Number] =\n        <span class=\"supfact\">local_34</span> + <span class=\"supfact\">local_38</span>;\n  }\n  for (<span class=\"supfact\">local_4</span> = Number; <span class=\"supfact\">local_4</span> < Number;\n       <span class=\"supfact\">local_4</span> = <span class=\"supfact\">local_4</span> + Number) {\n    <span class=\"supfact\">local_1c</span> =\n        (uint)(byte)(&DAT_0010bd85)[<span class=\"supfact\">local_4</span>];\n    <span class=\"supfact\">local_20</span> =\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> + Number] +\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span>];\n    <span class=\"supfact\">local_24</span> =\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span>] -\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> + Number];\n    <span class=\"supfact\">local_28</span> =\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> + Number] -\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> + Number];\n    <span class=\"supfact\">local_2c</span> =\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> + Number] +\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> + Number];\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)<span class=\"supfact\">local_1c</span> * Number) =\n        (<span class=\"supfact\">local_2c</span> + <span class=\"supfact\">local_20</span>) *\n                <span class=\"supfact\">param_3</span> +\n            Number >>\n        Number;\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)(<span class=\"supfact\">local_1c</span> + Number) * Number) =\n        (<span class=\"supfact\">local_28</span> + <span class=\"supfact\">local_24</span>) *\n                <span class=\"supfact\">param_3</span> +\n            Number >>\n        Number;\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)(<span class=\"supfact\">local_1c</span> + Number) * Number) =\n        (<span class=\"supfact\">local_24</span> - <span class=\"supfact\">local_28</span>) *\n                <span class=\"supfact\">param_3</span> +\n            Number >>\n        Number;\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)(<span class=\"supfact\">local_1c</span> + Number) * Number) =\n        (<span class=\"supfact\">local_20</span> - <span class=\"supfact\">local_2c</span>) *\n                <span class=\"supfact\">param_3</span> +\n            Number >>\n        Number;\n  }\n  return;\n}", "code_t": "void ff_h264_luma_dc_dequant_idct_12_c(int16_t *_output,\n                                       int16_t *<span class=\"supfact\">_input</span>,\n                                       int <span class=\"supfact\">qmul</span>) {\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  uint uVar9;\n  int <span class=\"supfact\">qmul</span> - local;\n  int16_t *<span class=\"supfact\">_input</span> - local;\n  int16_t *_output - local;\n  int <span class=\"supfact\">temp</span>[Number];\n  int <span class=\"supfact\">z3</span>;\n  int <span class=\"supfact\">z2</span>;\n  int <span class=\"supfact\">z1</span>;\n  int <span class=\"supfact\">z0</span>;\n  int <span class=\"supfact\">z3_1</span>;\n  int <span class=\"supfact\">z2_1</span>;\n  int <span class=\"supfact\">z1_1</span>;\n  int <span class=\"supfact\">z0_1</span>;\n  int <span class=\"supfact\">offset</span>;\n  int32_t *<span class=\"supfact\">output</span>;\n  int32_t *<span class=\"supfact\">input</span>;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">output</span> = (int32_t *)_output;\n  <span class=\"supfact\">input</span> = (int32_t *)<span class=\"supfact\">_input</span>;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    <span class=\"supfact\">z0</span> =\n        <span class=\"supfact\">input</span>[(long)(<span class=\"supfact\">i</span> << Number) + Number] +\n        <span class=\"supfact\">input</span>[<span class=\"supfact\">i</span> << Number];\n    <span class=\"supfact\">z1</span> =\n        <span class=\"supfact\">input</span>[<span class=\"supfact\">i</span> << Number] -\n        <span class=\"supfact\">input</span>[(long)(<span class=\"supfact\">i</span> << Number) + Number];\n    <span class=\"supfact\">z2</span> =\n        <span class=\"supfact\">input</span>[(long)(<span class=\"supfact\">i</span> << Number) + Number] -\n        <span class=\"supfact\">input</span>[(long)(<span class=\"supfact\">i</span> << Number) + Number];\n    <span class=\"supfact\">z3</span> =\n        <span class=\"supfact\">input</span>[(long)(<span class=\"supfact\">i</span> << Number) + Number] +\n        <span class=\"supfact\">input</span>[(long)(<span class=\"supfact\">i</span> << Number) + Number];\n    <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> * Number] =\n        <span class=\"supfact\">z0</span> + <span class=\"supfact\">z3</span>;\n    <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> * Number + Number] =\n        <span class=\"supfact\">z0</span> - <span class=\"supfact\">z3</span>;\n    <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> * Number + Number] =\n        <span class=\"supfact\">z1</span> - <span class=\"supfact\">z2</span>;\n    <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> * Number + Number] =\n        <span class=\"supfact\">z1</span> + <span class=\"supfact\">z2</span>;\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    uVar9 = (uint)String[<span class=\"supfact\">i</span>];\n    iVar1 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span>];\n    iVar2 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar3 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span>];\n    iVar4 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar5 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar6 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar7 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar8 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    <span class=\"supfact\">output</span>[(int)uVar9] =\n        (iVar8 + iVar7 + iVar2 + iVar1) * <span class=\"supfact\">qmul</span> + Number >>\n        Number;\n    <span class=\"supfact\">output</span>[(int)(uVar9 + Number)] =\n        ((iVar5 - iVar6) + (iVar3 - iVar4)) * <span class=\"supfact\">qmul</span> + Number >>\n        Number;\n    <span class=\"supfact\">output</span>[(int)(uVar9 + Number)] =\n        ((iVar3 - iVar4) - (iVar5 - iVar6)) * <span class=\"supfact\">qmul</span> + Number >>\n        Number;\n    <span class=\"supfact\">output</span>[(int)(uVar9 + Number)] =\n        ((iVar2 + iVar1) - (iVar8 + iVar7)) * <span class=\"supfact\">qmul</span> + Number >>\n        Number;\n  }\n  return;\n}", "var": [{"name": "param_2", "type": "DCTELEM * *", "pred_name": "__unk__", "ref_name": "_input", "ref_type": "int16_t * *"}, {"name": "param_3", "type": "int", "pred_name": "qmul", "ref_name": "qmul", "ref_type": "int"}, {"name": "aiStack_80", "type": "int[16][16]", "pred_name": "temp", "ref_name": "temp", "ref_type": "int[16][16]"}, {"name": "aiStack_60", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "aiStack_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_3c", "type": "int", "pred_name": "z3", "ref_name": "z3", "ref_type": "int"}, {"name": "local_38", "type": "int", "pred_name": "z2", "ref_name": "z2", "ref_type": "int"}, {"name": "local_34", "type": "int", "pred_name": "z1", "ref_name": "z1", "ref_type": "int"}, {"name": "local_30", "type": "int", "pred_name": "z0", "ref_name": "z0", "ref_type": "int"}, {"name": "local_2c", "type": "int", "pred_name": "z3_1", "ref_name": "z3_1", "ref_type": "int"}, {"name": "local_28", "type": "int", "pred_name": "z2_1", "ref_name": "z2_1", "ref_type": "int"}, {"name": "local_24", "type": "int", "pred_name": "z1_1", "ref_name": "z1_1", "ref_type": "int"}, {"name": "local_20", "type": "int", "pred_name": "z0_1", "ref_name": "z0_1", "ref_type": "int"}, {"name": "local_1c", "type": "int", "pred_name": "offset", "ref_name": "offset", "ref_type": "int"}, {"name": "local_18", "type": "int32_t * *", "pred_name": "output", "ref_name": "output", "ref_type": "int32_t * *"}, {"name": "local_10", "type": "int32_t * *", "pred_name": "input", "ref_name": "input", "ref_type": "int32_t * *"}, {"name": "local_4", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "endoplasma", "repo_name": "tdma_demo", "path": "endoplasma/tdma_demo/250179743cbaf611024fa13cf21c7fc60371bb173439830cad5f4961f3ca1de8", "path_in_repo": "endoplasma/tdma_demo/contiki/projects/udpPlug/obj_native/rpl-dag.o", "objdump": "0000000000001d71 <rpl_process_parent_event>:\n    1d71:\t55                   \tpush   %rbp\n    1d72:\t48 89 e5             \tmov    %rsp,%rbp\n    1d75:\t48 83 ec 20          \tsub    $0x20,%rsp\n    1d79:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    1d7d:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    1d81:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1d85:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    1d89:\t0f b7 40 20          \tmovzwl 0x20(%rax),%eax\n    1d8d:\t66 89 45 fa          \tmov    %ax,-0x6(%rbp)\n    1d91:\tc7 45 fc 01 00 00 00 \tmovl   $0x1,-0x4(%rbp)\n    1d98:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1d9c:\t0f b7 40 28          \tmovzwl 0x28(%rax),%eax\n    1da0:\t0f b7 d0             \tmovzwl %ax,%edx\n    1da3:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1da7:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1dab:\t89 d6                \tmov    %edx,%esi\n    1dad:\t48 89 c7             \tmov    %rax,%rdi\n    1db0:\te8 8a e4 ff ff       \tcall   23f <acceptable_rank>\n    1db5:\t85 c0                \ttest   %eax,%eax\n    1db7:\t75 4e                \tjne    1e07 <rpl_process_parent_event+0x96>\n    1db9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1dbd:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    1dc1:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    1dc5:\t48 39 45 e0          \tcmp    %rax,-0x20(%rbp)\n    1dc9:\t74 1e                \tje     1de9 <rpl_process_parent_event+0x78>\n    1dcb:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1dcf:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1dd3:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    1dd7:\t48 89 d6             \tmov    %rdx,%rsi\n    1dda:\t48 89 c7             \tmov    %rax,%rdi\n    1ddd:\te8 00 00 00 00       \tcall   1de2 <rpl_process_parent_event+0x71>\n    1de2:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1de7:\teb 4c                \tjmp    1e35 <rpl_process_parent_event+0xc4>\n    1de9:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    1ded:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1df1:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    1df5:\t48 89 d6             \tmov    %rdx,%rsi\n    1df8:\t48 89 c7             \tmov    %rax,%rdi\n    1dfb:\te8 00 00 00 00       \tcall   1e00 <rpl_process_parent_event+0x8f>\n    1e00:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    1e07:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    1e0b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1e0f:\t48 89 d6             \tmov    %rdx,%rsi\n    1e12:\t48 89 c7             \tmov    %rax,%rdi\n    1e15:\te8 00 00 00 00       \tcall   1e1a <rpl_process_parent_event+0xa9>\n    1e1a:\t48 85 c0             \ttest   %rax,%rax\n    1e1d:\t75 13                \tjne    1e32 <rpl_process_parent_event+0xc1>\n    1e1f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1e23:\t48 89 c7             \tmov    %rax,%rdi\n    1e26:\te8 00 00 00 00       \tcall   1e2b <rpl_process_parent_event+0xba>\n    1e2b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1e30:\teb 03                \tjmp    1e35 <rpl_process_parent_event+0xc4>\n    1e32:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    1e35:\tc9                   \tleave  \n    1e36:\tc3                   \tret    ", "code_s": "undefined4 rpl_process_parent_event(long param_1,\n                                    long <span class=\"supfact\">param_2</span>) {\n  int iVar1;\n  long <span class=\"supfact\">lVar2</span>;\n  undefined4 <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_c</span> = Number;\n  iVar1 = FUN_0010023f(*(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n                       *(undefined2 *)(<span class=\"supfact\">param_2</span> + Number));\n  if (iVar1 == Number) {\n    if (<span class=\"supfact\">param_2</span> !=\n        *(long *)(*(long *)(param_1 + Number) + Number)) {\n      rpl_nullify_parent(*(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n                         <span class=\"supfact\">param_2</span>);\n      return Number;\n    }\n    rpl_nullify_parent(*(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n                       <span class=\"supfact\">param_2</span>);\n    <span class=\"supfact\">local_c</span> = Number;\n  }\n  <span class=\"supfact\">lVar2</span> = rpl_select_dag(param_1, <span class=\"supfact\">param_2</span>);\n  if (<span class=\"supfact\">lVar2</span> == Number) {\n    rpl_local_repair(param_1);\n    <span class=\"supfact\">local_c</span> = Number;\n  }\n  return <span class=\"supfact\">local_c</span>;\n}", "code_t": "int rpl_process_parent_event(rpl_instance_t *instance,\n                             rpl_parent_t *<span class=\"supfact\">p</span>) {\n  int iVar1;\n  rpl_dag_t *<span class=\"supfact\">prVar2</span>;\n  rpl_parent_t *<span class=\"supfact\">p</span> - local;\n  rpl_instance_t *instance - local;\n  rpl_rank_t old_rank;\n  int <span class=\"supfact\">return_value</span>;\n  <span class=\"supfact\">return_value</span> = Number;\n  iVar1 = acceptable_rank(<span class=\"supfact\">p</span>->dag, <span class=\"supfact\">p</span>->rank);\n  if (iVar1 == Number) {\n    if (<span class=\"supfact\">p</span> != instance->current_dag->preferred_parent) {\n      rpl_nullify_parent(<span class=\"supfact\">p</span>->dag, <span class=\"supfact\">p</span>);\n      return Number;\n    }\n    rpl_nullify_parent(<span class=\"supfact\">p</span>->dag, <span class=\"supfact\">p</span>);\n    <span class=\"supfact\">return_value</span> = Number;\n  }\n  <span class=\"supfact\">prVar2</span> = rpl_select_dag(instance, <span class=\"supfact\">p</span>);\n  if (<span class=\"supfact\">prVar2</span> == (rpl_dag_t *)Number) {\n    rpl_local_repair(instance);\n    <span class=\"supfact\">return_value</span> = Number;\n  }\n  return <span class=\"supfact\">return_value</span>;\n}", "var": [{"name": "param_2", "type": "rpl_parent_t * *", "pred_name": "p", "ref_name": "p", "ref_type": "rpl_parent_t * *"}, {"name": "lVar2", "type": "rpl_dag_t * *", "pred_name": "prVar2", "ref_name": "prVar2", "ref_type": "rpl_dag_t * *"}, {"name": "local_c", "type": "int", "pred_name": "return_value", "ref_name": "return_value", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "ngduser", "repo_name": "vortex-video", "path": "ngduser/vortex-video/04ab6e0194ed5d7fdda8093a8a5e9b0613498d54eee6437151d80f3b18be381e", "path_in_repo": "ngduser/vortex-video/lib/ffmpeg-3.0.2/libswresample/swresample.o", "objdump": "0000000000002ed5 <swr_convert>:\n    2ed5:\t48 81 ec 78 02 00 00 \tsub    $0x278,%rsp\n    2edc:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n    2ee1:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n    2ee6:\t89 54 24 0c          \tmov    %edx,0xc(%rsp)\n    2eea:\t48 89 0c 24          \tmov    %rcx,(%rsp)\n    2eee:\t44 89 44 24 08       \tmov    %r8d,0x8(%rsp)\n    2ef3:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2ef8:\t48 05 b0 2d 00 00    \tadd    $0x2db0,%rax\n    2efe:\t48 89 84 24 60 02 00 \tmov    %rax,0x260(%rsp)\n    2f05:\t00 \n    2f06:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2f0b:\t48 05 30 36 00 00    \tadd    $0x3630,%rax\n    2f11:\t48 89 84 24 58 02 00 \tmov    %rax,0x258(%rsp)\n    2f18:\t00 \n    2f19:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2f1e:\t48 89 c7             \tmov    %rax,%rdi\n    2f21:\te8 00 00 00 00       \tcall   2f26 <swr_convert+0x51>\n    2f26:\t85 c0                \ttest   %eax,%eax\n    2f28:\t0f 85 a7 01 00 00    \tjne    30d5 <swr_convert+0x200>\n    2f2e:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2f33:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2f38:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    2f3d:\t48 89 c7             \tmov    %rax,%rdi\n    2f40:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2f45:\te8 00 00 00 00       \tcall   2f4a <swr_convert+0x75>\n    2f4a:\tb8 ea ff ff ff       \tmov    $0xffffffea,%eax\n    2f4f:\te9 b5 06 00 00       \tjmp    3609 <swr_convert+0x734>\n    2f54:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2f59:\t8b 80 d0 3e 00 00    \tmov    0x3ed0(%rax),%eax\n    2f5f:\tba 00 40 00 00       \tmov    $0x4000,%edx\n    2f64:\t3d 00 40 00 00       \tcmp    $0x4000,%eax\n    2f69:\t0f 4f c2             \tcmovg  %edx,%eax\n    2f6c:\t48 8b 54 24 18       \tmov    0x18(%rsp),%rdx\n    2f71:\t48 81 c2 90 3c 00 00 \tadd    $0x3c90,%rdx\n    2f78:\t89 c6                \tmov    %eax,%esi\n    2f7a:\t48 89 d7             \tmov    %rdx,%rdi\n    2f7d:\te8 00 00 00 00       \tcall   2f82 <swr_convert+0xad>\n    2f82:\t89 84 24 48 02 00 00 \tmov    %eax,0x248(%rsp)\n    2f89:\t83 bc 24 48 02 00 00 \tcmpl   $0x0,0x248(%rsp)\n    2f90:\t00 \n    2f91:\t79 0c                \tjns    2f9f <swr_convert+0xca>\n    2f93:\t8b 84 24 48 02 00 00 \tmov    0x248(%rsp),%eax\n    2f9a:\te9 6a 06 00 00       \tjmp    3609 <swr_convert+0x734>\n    2f9f:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2fa4:\t48 8d 90 90 3c 00 00 \tlea    0x3c90(%rax),%rdx\n    2fab:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    2fb0:\t48 89 c6             \tmov    %rax,%rsi\n    2fb3:\t48 89 d7             \tmov    %rdx,%rdi\n    2fb6:\te8 56 ea ff ff       \tcall   1a11 <reversefill_audiodata>\n    2fbb:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2fc0:\t8b 80 d0 3e 00 00    \tmov    0x3ed0(%rax),%eax\n    2fc6:\tf7 d8                \tneg    %eax\n    2fc8:\t89 c2                \tmov    %eax,%edx\n    2fca:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2fcf:\t89 90 d0 3e 00 00    \tmov    %edx,0x3ed0(%rax)\n    2fd5:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2fda:\t8b 80 d0 3e 00 00    \tmov    0x3ed0(%rax),%eax\n    2fe0:\t3d 00 c0 ff ff       \tcmp    $0xffffc000,%eax\n    2fe5:\t7c 11                \tjl     2ff8 <swr_convert+0x123>\n    2fe7:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    2fec:\t8b 80 d0 3e 00 00    \tmov    0x3ed0(%rax),%eax\n    2ff2:\tf7 d8                \tneg    %eax\n    2ff4:\t89 c2                \tmov    %eax,%edx\n    2ff6:\teb 05                \tjmp    2ffd <swr_convert+0x128>\n    2ff8:\tba 00 40 00 00       \tmov    $0x4000,%edx\n    2ffd:\t8b 7c 24 08          \tmov    0x8(%rsp),%edi\n    3001:\t48 8b 0c 24          \tmov    (%rsp),%rcx\n    3005:\t48 8d 74 24 20       \tlea    0x20(%rsp),%rsi\n    300a:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    300f:\t41 89 f8             \tmov    %edi,%r8d\n    3012:\t48 89 c7             \tmov    %rax,%rdi\n    3015:\te8 00 00 00 00       \tcall   301a <swr_convert+0x145>\n    301a:\t89 84 24 48 02 00 00 \tmov    %eax,0x248(%rsp)\n    3021:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3026:\t8b 80 d0 3e 00 00    \tmov    0x3ed0(%rax),%eax\n    302c:\tf7 d8                \tneg    %eax\n    302e:\t89 c2                \tmov    %eax,%edx\n    3030:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3035:\t89 90 d0 3e 00 00    \tmov    %edx,0x3ed0(%rax)\n    303b:\tc7 44 24 08 00 00 00 \tmovl   $0x0,0x8(%rsp)\n    3042:\t00 \n    3043:\t83 bc 24 48 02 00 00 \tcmpl   $0x0,0x248(%rsp)\n    304a:\t00 \n    304b:\t7e 40                \tjle    308d <swr_convert+0x1b8>\n    304d:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3052:\t8b 80 d0 3e 00 00    \tmov    0x3ed0(%rax),%eax\n    3058:\t2b 84 24 48 02 00 00 \tsub    0x248(%rsp),%eax\n    305f:\t89 c2                \tmov    %eax,%edx\n    3061:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3066:\t89 90 d0 3e 00 00    \tmov    %edx,0x3ed0(%rax)\n    306c:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3071:\t8b 80 d0 3e 00 00    \tmov    0x3ed0(%rax),%eax\n    3077:\t85 c0                \ttest   %eax,%eax\n    3079:\t75 5a                \tjne    30d5 <swr_convert+0x200>\n    307b:\t48 83 7c 24 10 00    \tcmpq   $0x0,0x10(%rsp)\n    3081:\t75 52                \tjne    30d5 <swr_convert+0x200>\n    3083:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3088:\te9 7c 05 00 00       \tjmp    3609 <swr_convert+0x734>\n    308d:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3092:\t8b 80 d0 3e 00 00    \tmov    0x3ed0(%rax),%eax\n    3098:\t85 c0                \ttest   %eax,%eax\n    309a:\t75 2f                \tjne    30cb <swr_convert+0x1f6>\n    309c:\t41 b9 d8 02 00 00    \tmov    $0x2d8,%r9d\n    30a2:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    30a8:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    30ad:\tba 00 00 00 00       \tmov    $0x0,%edx\n    30b2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    30b7:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    30bc:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    30c1:\te8 00 00 00 00       \tcall   30c6 <swr_convert+0x1f1>\n    30c6:\te8 00 00 00 00       \tcall   30cb <swr_convert+0x1f6>\n    30cb:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    30d0:\te9 34 05 00 00       \tjmp    3609 <swr_convert+0x734>\n    30d5:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    30da:\t8b 80 d0 3e 00 00    \tmov    0x3ed0(%rax),%eax\n    30e0:\t85 c0                \ttest   %eax,%eax\n    30e2:\t0f 8f 6c fe ff ff    \tjg     2f54 <swr_convert+0x7f>\n    30e8:\t48 83 3c 24 00       \tcmpq   $0x0,(%rsp)\n    30ed:\t75 73                \tjne    3162 <swr_convert+0x28d>\n    30ef:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    30f4:\t48 8b 80 f8 3e 00 00 \tmov    0x3ef8(%rax),%rax\n    30fb:\t48 85 c0             \ttest   %rax,%rax\n    30fe:\t74 49                \tje     3149 <swr_convert+0x274>\n    3100:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3105:\t8b 80 bc 3e 00 00    \tmov    0x3ebc(%rax),%eax\n    310b:\t85 c0                \ttest   %eax,%eax\n    310d:\t75 1a                \tjne    3129 <swr_convert+0x254>\n    310f:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3114:\t48 8b 80 00 3f 00 00 \tmov    0x3f00(%rax),%rax\n    311b:\t48 8b 50 18          \tmov    0x18(%rax),%rdx\n    311f:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3124:\t48 89 c7             \tmov    %rax,%rdi\n    3127:\tff d2                \tcall   *%rdx\n    3129:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    312e:\tc7 80 b8 3e 00 00 00 \tmovl   $0x0,0x3eb8(%rax)\n    3135:\t00 00 00 \n    3138:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    313d:\tc7 80 bc 3e 00 00 01 \tmovl   $0x1,0x3ebc(%rax)\n    3144:\t00 00 00 \n    3147:\teb 30                \tjmp    3179 <swr_convert+0x2a4>\n    3149:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    314e:\t8b 80 b4 3e 00 00    \tmov    0x3eb4(%rax),%eax\n    3154:\t85 c0                \ttest   %eax,%eax\n    3156:\t75 21                \tjne    3179 <swr_convert+0x2a4>\n    3158:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    315d:\te9 a7 04 00 00       \tjmp    3609 <swr_convert+0x734>\n    3162:\t48 8b 14 24          \tmov    (%rsp),%rdx\n    3166:\t48 8b 84 24 60 02 00 \tmov    0x260(%rsp),%rax\n    316d:\t00 \n    316e:\t48 89 d6             \tmov    %rdx,%rsi\n    3171:\t48 89 c7             \tmov    %rax,%rdi\n    3174:\te8 bc e7 ff ff       \tcall   1935 <fill_audiodata>\n    3179:\t48 8b 54 24 10       \tmov    0x10(%rsp),%rdx\n    317e:\t48 8b 84 24 58 02 00 \tmov    0x258(%rsp),%rax\n    3185:\t00 \n    3186:\t48 89 d6             \tmov    %rdx,%rsi\n    3189:\t48 89 c7             \tmov    %rax,%rdi\n    318c:\te8 a4 e7 ff ff       \tcall   1935 <fill_audiodata>\n    3191:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3196:\t48 8b 80 f8 3e 00 00 \tmov    0x3ef8(%rax),%rax\n    319d:\t48 85 c0             \ttest   %rax,%rax\n    31a0:\t0f 84 87 00 00 00    \tje     322d <swr_convert+0x358>\n    31a6:\t8b 7c 24 08          \tmov    0x8(%rsp),%edi\n    31aa:\t48 8b 8c 24 60 02 00 \tmov    0x260(%rsp),%rcx\n    31b1:\t00 \n    31b2:\t8b 54 24 0c          \tmov    0xc(%rsp),%edx\n    31b6:\t48 8b b4 24 58 02 00 \tmov    0x258(%rsp),%rsi\n    31bd:\t00 \n    31be:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    31c3:\t41 89 f8             \tmov    %edi,%r8d\n    31c6:\t48 89 c7             \tmov    %rax,%rdi\n    31c9:\te8 0d f0 ff ff       \tcall   21db <swr_convert_internal>\n    31ce:\t89 84 24 4c 02 00 00 \tmov    %eax,0x24c(%rsp)\n    31d5:\t83 bc 24 4c 02 00 00 \tcmpl   $0x0,0x24c(%rsp)\n    31dc:\t00 \n    31dd:\t7e 42                \tjle    3221 <swr_convert+0x34c>\n    31df:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    31e4:\t8b 80 d0 3e 00 00    \tmov    0x3ed0(%rax),%eax\n    31ea:\t85 c0                \ttest   %eax,%eax\n    31ec:\t75 33                \tjne    3221 <swr_convert+0x34c>\n    31ee:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    31f3:\t48 8b 90 c0 3e 00 00 \tmov    0x3ec0(%rax),%rdx\n    31fa:\t8b 84 24 4c 02 00 00 \tmov    0x24c(%rsp),%eax\n    3201:\t48 63 c8             \tmovslq %eax,%rcx\n    3204:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3209:\t8b 40 38             \tmov    0x38(%rax),%eax\n    320c:\t48 98                \tcltq   \n    320e:\t48 0f af c1          \timul   %rcx,%rax\n    3212:\t48 01 c2             \tadd    %rax,%rdx\n    3215:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    321a:\t48 89 90 c0 3e 00 00 \tmov    %rdx,0x3ec0(%rax)\n    3221:\t8b 84 24 4c 02 00 00 \tmov    0x24c(%rsp),%eax\n    3228:\te9 dc 03 00 00       \tjmp    3609 <swr_convert+0x734>\n    322d:\t48 8b 94 24 60 02 00 \tmov    0x260(%rsp),%rdx\n    3234:\t00 \n    3235:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    323a:\t48 89 d6             \tmov    %rdx,%rsi\n    323d:\tba 44 00 00 00       \tmov    $0x44,%edx\n    3242:\t48 89 c7             \tmov    %rax,%rdi\n    3245:\t48 89 d1             \tmov    %rdx,%rcx\n    3248:\tf3 48 a5             \trep movsq %ds:(%rsi),%es:(%rdi)\n    324b:\tc7 84 24 6c 02 00 00 \tmovl   $0x0,0x26c(%rsp)\n    3252:\t00 00 00 00 \n    3256:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    325b:\t8b 80 b4 3e 00 00    \tmov    0x3eb4(%rax),%eax\n    3261:\t39 44 24 0c          \tcmp    %eax,0xc(%rsp)\n    3265:\t0f 4e 44 24 0c       \tcmovle 0xc(%rsp),%eax\n    326a:\t89 84 24 54 02 00 00 \tmov    %eax,0x254(%rsp)\n    3271:\t83 bc 24 54 02 00 00 \tcmpl   $0x0,0x254(%rsp)\n    3278:\t00 \n    3279:\t0f 84 06 01 00 00    \tje     3385 <swr_convert+0x4b0>\n    327f:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3284:\t8b 90 b0 3e 00 00    \tmov    0x3eb0(%rax),%edx\n    328a:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    328f:\t48 8d 88 50 38 00 00 \tlea    0x3850(%rax),%rcx\n    3296:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    329b:\t48 89 ce             \tmov    %rcx,%rsi\n    329e:\t48 89 c7             \tmov    %rax,%rdi\n    32a1:\te8 e2 e7 ff ff       \tcall   1a88 <buf_set>\n    32a6:\t8b bc 24 54 02 00 00 \tmov    0x254(%rsp),%edi\n    32ad:\t48 8d 4c 24 20       \tlea    0x20(%rsp),%rcx\n    32b2:\t8b 94 24 54 02 00 00 \tmov    0x254(%rsp),%edx\n    32b9:\t48 8b b4 24 58 02 00 \tmov    0x258(%rsp),%rsi\n    32c0:\t00 \n    32c1:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    32c6:\t41 89 f8             \tmov    %edi,%r8d\n    32c9:\t48 89 c7             \tmov    %rax,%rdi\n    32cc:\te8 0a ef ff ff       \tcall   21db <swr_convert_internal>\n    32d1:\t89 84 24 50 02 00 00 \tmov    %eax,0x250(%rsp)\n    32d8:\t83 bc 24 50 02 00 00 \tcmpl   $0x0,0x250(%rsp)\n    32df:\t00 \n    32e0:\t79 0c                \tjns    32ee <swr_convert+0x419>\n    32e2:\t8b 84 24 50 02 00 00 \tmov    0x250(%rsp),%eax\n    32e9:\te9 1b 03 00 00       \tjmp    3609 <swr_convert+0x734>\n    32ee:\t8b 84 24 50 02 00 00 \tmov    0x250(%rsp),%eax\n    32f5:\t89 84 24 6c 02 00 00 \tmov    %eax,0x26c(%rsp)\n    32fc:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3301:\t8b 80 b4 3e 00 00    \tmov    0x3eb4(%rax),%eax\n    3307:\t2b 84 24 50 02 00 00 \tsub    0x250(%rsp),%eax\n    330e:\t89 c2                \tmov    %eax,%edx\n    3310:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3315:\t89 90 b4 3e 00 00    \tmov    %edx,0x3eb4(%rax)\n    331b:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3320:\t8b 90 b0 3e 00 00    \tmov    0x3eb0(%rax),%edx\n    3326:\t8b 84 24 50 02 00 00 \tmov    0x250(%rsp),%eax\n    332d:\t01 c2                \tadd    %eax,%edx\n    332f:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3334:\t89 90 b0 3e 00 00    \tmov    %edx,0x3eb0(%rax)\n    333a:\t8b 94 24 50 02 00 00 \tmov    0x250(%rsp),%edx\n    3341:\t48 8b 8c 24 58 02 00 \tmov    0x258(%rsp),%rcx\n    3348:\t00 \n    3349:\t48 8b 84 24 58 02 00 \tmov    0x258(%rsp),%rax\n    3350:\t00 \n    3351:\t48 89 ce             \tmov    %rcx,%rsi\n    3354:\t48 89 c7             \tmov    %rax,%rdi\n    3357:\te8 2c e7 ff ff       \tcall   1a88 <buf_set>\n    335c:\t8b 84 24 50 02 00 00 \tmov    0x250(%rsp),%eax\n    3363:\t29 44 24 0c          \tsub    %eax,0xc(%rsp)\n    3367:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    336c:\t8b 80 b4 3e 00 00    \tmov    0x3eb4(%rax),%eax\n    3372:\t85 c0                \ttest   %eax,%eax\n    3374:\t75 0f                \tjne    3385 <swr_convert+0x4b0>\n    3376:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    337b:\tc7 80 b0 3e 00 00 00 \tmovl   $0x0,0x3eb0(%rax)\n    3382:\t00 00 00 \n    3385:\t83 7c 24 08 00       \tcmpl   $0x0,0x8(%rsp)\n    338a:\t0f 84 26 02 00 00    \tje     35b6 <swr_convert+0x6e1>\n    3390:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3395:\t8b 90 b0 3e 00 00    \tmov    0x3eb0(%rax),%edx\n    339b:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    33a0:\t8b 80 b4 3e 00 00    \tmov    0x3eb4(%rax),%eax\n    33a6:\t01 c2                \tadd    %eax,%edx\n    33a8:\t8b 44 24 08          \tmov    0x8(%rsp),%eax\n    33ac:\t01 d0                \tadd    %edx,%eax\n    33ae:\t2b 44 24 0c          \tsub    0xc(%rsp),%eax\n    33b2:\t89 84 24 54 02 00 00 \tmov    %eax,0x254(%rsp)\n    33b9:\t8b 44 24 08          \tmov    0x8(%rsp),%eax\n    33bd:\t3b 44 24 0c          \tcmp    0xc(%rsp),%eax\n    33c1:\t0f 8e d7 00 00 00    \tjle    349e <swr_convert+0x5c9>\n    33c7:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    33cc:\t8b 80 60 3a 00 00    \tmov    0x3a60(%rax),%eax\n    33d2:\t39 84 24 54 02 00 00 \tcmp    %eax,0x254(%rsp)\n    33d9:\t0f 8e 85 00 00 00    \tjle    3464 <swr_convert+0x58f>\n    33df:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    33e4:\t8b 90 b4 3e 00 00    \tmov    0x3eb4(%rax),%edx\n    33ea:\t8b 44 24 08          \tmov    0x8(%rsp),%eax\n    33ee:\t01 d0                \tadd    %edx,%eax\n    33f0:\t2b 44 24 0c          \tsub    0xc(%rsp),%eax\n    33f4:\t89 c2                \tmov    %eax,%edx\n    33f6:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    33fb:\t8b 80 b0 3e 00 00    \tmov    0x3eb0(%rax),%eax\n    3401:\t39 c2                \tcmp    %eax,%edx\n    3403:\t7f 5f                \tjg     3464 <swr_convert+0x58f>\n    3405:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    340a:\t8b 90 b0 3e 00 00    \tmov    0x3eb0(%rax),%edx\n    3410:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3415:\t48 8d 88 50 38 00 00 \tlea    0x3850(%rax),%rcx\n    341c:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    3421:\t48 89 ce             \tmov    %rcx,%rsi\n    3424:\t48 89 c7             \tmov    %rax,%rdi\n    3427:\te8 5c e6 ff ff       \tcall   1a88 <buf_set>\n    342c:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3431:\t8b 90 b4 3e 00 00    \tmov    0x3eb4(%rax),%edx\n    3437:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    343c:\t48 8d 88 50 38 00 00 \tlea    0x3850(%rax),%rcx\n    3443:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    3448:\t48 89 c6             \tmov    %rax,%rsi\n    344b:\t48 89 cf             \tmov    %rcx,%rdi\n    344e:\te8 42 e3 ff ff       \tcall   1795 <copy>\n    3453:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3458:\tc7 80 b0 3e 00 00 00 \tmovl   $0x0,0x3eb0(%rax)\n    345f:\t00 00 00 \n    3462:\teb 3a                \tjmp    349e <swr_convert+0x5c9>\n    3464:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3469:\t48 8d 90 50 38 00 00 \tlea    0x3850(%rax),%rdx\n    3470:\t8b 84 24 54 02 00 00 \tmov    0x254(%rsp),%eax\n    3477:\t89 c6                \tmov    %eax,%esi\n    3479:\t48 89 d7             \tmov    %rdx,%rdi\n    347c:\te8 00 00 00 00       \tcall   3481 <swr_convert+0x5ac>\n    3481:\t89 84 24 50 02 00 00 \tmov    %eax,0x250(%rsp)\n    3488:\t83 bc 24 50 02 00 00 \tcmpl   $0x0,0x250(%rsp)\n    348f:\t00 \n    3490:\t79 0c                \tjns    349e <swr_convert+0x5c9>\n    3492:\t8b 84 24 50 02 00 00 \tmov    0x250(%rsp),%eax\n    3499:\te9 6b 01 00 00       \tjmp    3609 <swr_convert+0x734>\n    349e:\t83 7c 24 0c 00       \tcmpl   $0x0,0xc(%rsp)\n    34a3:\t0f 84 9a 00 00 00    \tje     3543 <swr_convert+0x66e>\n    34a9:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    34ad:\t39 44 24 08          \tcmp    %eax,0x8(%rsp)\n    34b1:\t0f 4e 44 24 08       \tcmovle 0x8(%rsp),%eax\n    34b6:\t89 84 24 54 02 00 00 \tmov    %eax,0x254(%rsp)\n    34bd:\t8b bc 24 54 02 00 00 \tmov    0x254(%rsp),%edi\n    34c4:\t48 8b 8c 24 60 02 00 \tmov    0x260(%rsp),%rcx\n    34cb:\t00 \n    34cc:\t8b 94 24 54 02 00 00 \tmov    0x254(%rsp),%edx\n    34d3:\t48 8b b4 24 58 02 00 \tmov    0x258(%rsp),%rsi\n    34da:\t00 \n    34db:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    34e0:\t41 89 f8             \tmov    %edi,%r8d\n    34e3:\t48 89 c7             \tmov    %rax,%rdi\n    34e6:\te8 f0 ec ff ff       \tcall   21db <swr_convert_internal>\n    34eb:\t89 84 24 50 02 00 00 \tmov    %eax,0x250(%rsp)\n    34f2:\t83 bc 24 50 02 00 00 \tcmpl   $0x0,0x250(%rsp)\n    34f9:\t00 \n    34fa:\t79 0c                \tjns    3508 <swr_convert+0x633>\n    34fc:\t8b 84 24 50 02 00 00 \tmov    0x250(%rsp),%eax\n    3503:\te9 01 01 00 00       \tjmp    3609 <swr_convert+0x734>\n    3508:\t8b 94 24 50 02 00 00 \tmov    0x250(%rsp),%edx\n    350f:\t48 8b 8c 24 60 02 00 \tmov    0x260(%rsp),%rcx\n    3516:\t00 \n    3517:\t48 8b 84 24 60 02 00 \tmov    0x260(%rsp),%rax\n    351e:\t00 \n    351f:\t48 89 ce             \tmov    %rcx,%rsi\n    3522:\t48 89 c7             \tmov    %rax,%rdi\n    3525:\te8 5e e5 ff ff       \tcall   1a88 <buf_set>\n    352a:\t8b 84 24 50 02 00 00 \tmov    0x250(%rsp),%eax\n    3531:\t29 44 24 08          \tsub    %eax,0x8(%rsp)\n    3535:\t8b 84 24 50 02 00 00 \tmov    0x250(%rsp),%eax\n    353c:\t01 84 24 6c 02 00 00 \tadd    %eax,0x26c(%rsp)\n    3543:\t83 7c 24 08 00       \tcmpl   $0x0,0x8(%rsp)\n    3548:\t74 6c                \tje     35b6 <swr_convert+0x6e1>\n    354a:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    354f:\t8b 90 b0 3e 00 00    \tmov    0x3eb0(%rax),%edx\n    3555:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    355a:\t8b 80 b4 3e 00 00    \tmov    0x3eb4(%rax),%eax\n    3560:\t01 c2                \tadd    %eax,%edx\n    3562:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3567:\t48 8d 88 50 38 00 00 \tlea    0x3850(%rax),%rcx\n    356e:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    3573:\t48 89 ce             \tmov    %rcx,%rsi\n    3576:\t48 89 c7             \tmov    %rax,%rdi\n    3579:\te8 0a e5 ff ff       \tcall   1a88 <buf_set>\n    357e:\t8b 54 24 08          \tmov    0x8(%rsp),%edx\n    3582:\t48 8b 8c 24 60 02 00 \tmov    0x260(%rsp),%rcx\n    3589:\t00 \n    358a:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    358f:\t48 89 ce             \tmov    %rcx,%rsi\n    3592:\t48 89 c7             \tmov    %rax,%rdi\n    3595:\te8 fb e1 ff ff       \tcall   1795 <copy>\n    359a:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    359f:\t8b 90 b4 3e 00 00    \tmov    0x3eb4(%rax),%edx\n    35a5:\t8b 44 24 08          \tmov    0x8(%rsp),%eax\n    35a9:\t01 c2                \tadd    %eax,%edx\n    35ab:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    35b0:\t89 90 b4 3e 00 00    \tmov    %edx,0x3eb4(%rax)\n    35b6:\t83 bc 24 6c 02 00 00 \tcmpl   $0x0,0x26c(%rsp)\n    35bd:\t00 \n    35be:\t7e 42                \tjle    3602 <swr_convert+0x72d>\n    35c0:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    35c5:\t8b 80 d0 3e 00 00    \tmov    0x3ed0(%rax),%eax\n    35cb:\t85 c0                \ttest   %eax,%eax\n    35cd:\t75 33                \tjne    3602 <swr_convert+0x72d>\n    35cf:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    35d4:\t48 8b 90 c0 3e 00 00 \tmov    0x3ec0(%rax),%rdx\n    35db:\t8b 84 24 6c 02 00 00 \tmov    0x26c(%rsp),%eax\n    35e2:\t48 63 c8             \tmovslq %eax,%rcx\n    35e5:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    35ea:\t8b 40 38             \tmov    0x38(%rax),%eax\n    35ed:\t48 98                \tcltq   \n    35ef:\t48 0f af c1          \timul   %rcx,%rax\n    35f3:\t48 01 c2             \tadd    %rax,%rdx\n    35f6:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    35fb:\t48 89 90 c0 3e 00 00 \tmov    %rdx,0x3ec0(%rax)\n    3602:\t8b 84 24 6c 02 00 00 \tmov    0x26c(%rsp),%eax\n    3609:\t48 81 c4 78 02 00 00 \tadd    $0x278,%rsp\n    3610:\tc3                   \tret    ", "code_s": "int swr_convert(long <span class=\"supfact\">param_1</span>, long param_2,\n                int <span class=\"supfact\">param_3</span>, long param_4,\n                int <span class=\"supfact\">param_5</span>) {\n  int iVar1;\n  long lVar2;\n  undefined8 *puVar3;\n  undefined8 *puVar4;\n  byte <span class=\"supfact\">bVar5</span>;\n  int <span class=\"supfact\">local_270</span>;\n  int <span class=\"supfact\">local_26c</span>;\n  undefined8 <span class=\"supfact\">local_258</span>[Number];\n  int <span class=\"supfact\">local_30</span>;\n  int <span class=\"supfact\">local_28</span>;\n  int <span class=\"supfact\">local_24</span>;\n  long <span class=\"supfact\">local_20</span>;\n  undefined8 *<span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">bVar5</span> = Number;\n  <span class=\"supfact\">local_18</span> = (undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_1</span> + Number;\n  iVar1 = swr_is_initialized(<span class=\"supfact\">param_1</span>);\n  <span class=\"supfact\">local_270</span> = <span class=\"supfact\">param_5</span>;\n  if (iVar1 == Number) {\n    av_log(<span class=\"supfact\">param_1</span>, Number, String);\n    iVar1 = -Number;\n  } else {\n    do {\n      if (*(int *)(<span class=\"supfact\">param_1</span> + Number) < Number) {\n        if (param_4 == Number) {\n          if (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n            if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n              return Number;\n            }\n          } else {\n            if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n              (**(code **)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                           Number))(<span class=\"supfact\">param_1</span>);\n            }\n            *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n            *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n          }\n        } else {\n          FUN_00101935(<span class=\"supfact\">local_18</span>, param_4);\n        }\n        FUN_00101935(<span class=\"supfact\">local_20</span>, param_2);\n        if (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n          iVar1 =\n              FUN_001021db(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_20</span>,\n                           <span class=\"supfact\">param_3</span>, <span class=\"supfact\">local_18</span>,\n                           <span class=\"supfact\">local_270</span>);\n          if (iVar1 < Number) {\n            return iVar1;\n          }\n          if (*(int *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n            return iVar1;\n          }\n          *(long *)(<span class=\"supfact\">param_1</span> + Number) =\n              *(long *)(<span class=\"supfact\">param_1</span> + Number) +\n              (long)*(int *)(<span class=\"supfact\">param_1</span> + Number) * (long)iVar1;\n          return iVar1;\n        }\n        puVar3 = <span class=\"supfact\">local_18</span>;\n        puVar4 = <span class=\"supfact\">local_258</span>;\n        for (lVar2 = Number; lVar2 != Number; lVar2 = lVar2 + -Number) {\n          *puVar4 = *puVar3;\n          puVar3 = puVar3 + (ulong)<span class=\"supfact\">bVar5</span> * -Number + Number;\n          puVar4 = puVar4 + (ulong)<span class=\"supfact\">bVar5</span> * -Number + Number;\n        }\n        <span class=\"supfact\">local_c</span> = Number;\n        <span class=\"supfact\">local_24</span> = *(int *)(<span class=\"supfact\">param_1</span> + Number);\n        if (<span class=\"supfact\">param_3</span> <=\n            *(int *)(<span class=\"supfact\">param_1</span> + Number)) {\n          <span class=\"supfact\">local_24</span> = <span class=\"supfact\">param_3</span>;\n        }\n        <span class=\"supfact\">local_26c</span> = <span class=\"supfact\">param_3</span>;\n        if (<span class=\"supfact\">local_24</span> != Number) {\n          FUN_00101a88(<span class=\"supfact\">local_258</span>,\n                       <span class=\"supfact\">param_1</span> + Number,\n                       *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n          <span class=\"supfact\">local_28</span> =\n              FUN_001021db(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_20</span>,\n                           <span class=\"supfact\">local_24</span>, <span class=\"supfact\">local_258</span>,\n                           <span class=\"supfact\">local_24</span>);\n          if (<span class=\"supfact\">local_28</span> < Number) {\n            return <span class=\"supfact\">local_28</span>;\n          }\n          *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n              *(int *)(<span class=\"supfact\">param_1</span> + Number) -\n              <span class=\"supfact\">local_28</span>;\n          *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n              *(int *)(<span class=\"supfact\">param_1</span> + Number) +\n              <span class=\"supfact\">local_28</span>;\n          <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_28</span>;\n          FUN_00101a88(<span class=\"supfact\">local_20</span>, <span class=\"supfact\">local_20</span>,\n                       <span class=\"supfact\">local_28</span>);\n          <span class=\"supfact\">local_26c</span> =\n              <span class=\"supfact\">param_3</span> - <span class=\"supfact\">local_28</span>;\n          if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n            *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n          }\n        }\n        if (<span class=\"supfact\">local_270</span> != Number) {\n          <span class=\"supfact\">local_24</span> =\n              (<span class=\"supfact\">local_270</span> +\n               *(int *)(<span class=\"supfact\">param_1</span> + Number) +\n               *(int *)(<span class=\"supfact\">param_1</span> + Number)) -\n              <span class=\"supfact\">local_26c</span>;\n          if (<span class=\"supfact\">local_26c</span> < <span class=\"supfact\">local_270</span>) {\n            if ((*(int *)(<span class=\"supfact\">param_1</span> + Number) <\n                 <span class=\"supfact\">local_24</span>) &&\n                ((<span class=\"supfact\">local_270</span> +\n                  *(int *)(<span class=\"supfact\">param_1</span> + Number)) -\n                     <span class=\"supfact\">local_26c</span> <=\n                 *(int *)(<span class=\"supfact\">param_1</span> + Number))) {\n              FUN_00101a88(<span class=\"supfact\">local_258</span>,\n                           <span class=\"supfact\">param_1</span> + Number,\n                           *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n              FUN_00101795(<span class=\"supfact\">param_1</span> + Number,\n                           <span class=\"supfact\">local_258</span>,\n                           *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number));\n              *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n            } else {\n              <span class=\"supfact\">local_28</span> = swri_realloc_audio(\n                  <span class=\"supfact\">param_1</span> + Number, <span class=\"supfact\">local_24</span>);\n              if (<span class=\"supfact\">local_28</span> < Number) {\n                return <span class=\"supfact\">local_28</span>;\n              }\n            }\n          }\n          if (<span class=\"supfact\">local_26c</span> != Number) {\n            if (<span class=\"supfact\">local_270</span> <= <span class=\"supfact\">local_26c</span>) {\n              <span class=\"supfact\">local_26c</span> = <span class=\"supfact\">local_270</span>;\n            }\n            <span class=\"supfact\">local_24</span> = <span class=\"supfact\">local_26c</span>;\n            <span class=\"supfact\">local_28</span> = FUN_001021db(\n                <span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_20</span>,\n                <span class=\"supfact\">local_26c</span>, <span class=\"supfact\">local_18</span>,\n                <span class=\"supfact\">local_26c</span>);\n            if (<span class=\"supfact\">local_28</span> < Number) {\n              return <span class=\"supfact\">local_28</span>;\n            }\n            FUN_00101a88(<span class=\"supfact\">local_18</span>, <span class=\"supfact\">local_18</span>,\n                         <span class=\"supfact\">local_28</span>);\n            <span class=\"supfact\">local_270</span> =\n                <span class=\"supfact\">local_270</span> - <span class=\"supfact\">local_28</span>;\n            <span class=\"supfact\">local_c</span> =\n                <span class=\"supfact\">local_c</span> + <span class=\"supfact\">local_28</span>;\n          }\n          if (<span class=\"supfact\">local_270</span> != Number) {\n            FUN_00101a88(<span class=\"supfact\">local_258</span>,\n                         <span class=\"supfact\">param_1</span> + Number,\n                         *(int *)(<span class=\"supfact\">param_1</span> + Number) +\n                             *(int *)(<span class=\"supfact\">param_1</span> + Number));\n            FUN_00101795(<span class=\"supfact\">local_258</span>, <span class=\"supfact\">local_18</span>,\n                         <span class=\"supfact\">local_270</span>);\n            *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n                *(int *)(<span class=\"supfact\">param_1</span> + Number) +\n                <span class=\"supfact\">local_270</span>;\n          }\n        }\n        if (<span class=\"supfact\">local_c</span> < Number) {\n          return <span class=\"supfact\">local_c</span>;\n        }\n        if (*(int *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n          return <span class=\"supfact\">local_c</span>;\n        }\n        *(long *)(<span class=\"supfact\">param_1</span> + Number) =\n            *(long *)(<span class=\"supfact\">param_1</span> + Number) +\n            (long)*(int *)(<span class=\"supfact\">param_1</span> + Number) *\n                (long)<span class=\"supfact\">local_c</span>;\n        return <span class=\"supfact\">local_c</span>;\n      }\n      iVar1 = *(int *)(<span class=\"supfact\">param_1</span> + Number);\n      if (Number < iVar1) {\n        iVar1 = Number;\n      }\n      <span class=\"supfact\">local_30</span> =\n          swri_realloc_audio(<span class=\"supfact\">param_1</span> + Number, iVar1);\n      if (<span class=\"supfact\">local_30</span> < Number) {\n        return <span class=\"supfact\">local_30</span>;\n      }\n      FUN_00101a11(<span class=\"supfact\">param_1</span> + Number, <span class=\"supfact\">local_258</span>);\n      *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n          -*(int *)(<span class=\"supfact\">param_1</span> + Number);\n      if (*(int *)(<span class=\"supfact\">param_1</span> + Number) < -Number) {\n        iVar1 = Number;\n      } else {\n        iVar1 = -*(int *)(<span class=\"supfact\">param_1</span> + Number);\n      }\n      <span class=\"supfact\">local_30</span> =\n          swr_convert(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_258</span>, iVar1,\n                      param_4, <span class=\"supfact\">local_270</span>);\n      *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n          -*(int *)(<span class=\"supfact\">param_1</span> + Number);\n      <span class=\"supfact\">local_270</span> = Number;\n      if (<span class=\"supfact\">local_30</span> < Number) {\n        if (*(int *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n          return Number;\n        }\n        av_log(Number, Number, String, String, String, Number);\n        abort();\n      }\n      *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n          *(int *)(<span class=\"supfact\">param_1</span> + Number) - <span class=\"supfact\">local_30</span>;\n    } while ((*(int *)(<span class=\"supfact\">param_1</span> + Number) != Number) ||\n             (param_2 != Number));\n    iVar1 = Number;\n  }\n  return iVar1;\n}", "code_t": "int swr_convert(SwrContext *<span class=\"supfact\">s</span>, uint8_t **out_arg,\n                int <span class=\"supfact\">out_count</span>, uint8_t **in_arg,\n                int <span class=\"supfact\">in_count</span>) {\n  int iVar1;\n  long lVar2;\n  AudioData *pAVar3;\n  uint8_t **ppuVar4;\n  byte <span class=\"supfact\">bVar5</span>;\n  uint8_t **in_arg - local;\n  int <span class=\"supfact\">in_count</span> - local;\n  int <span class=\"supfact\">out_count</span> - local;\n  uint8_t **out_arg - local;\n  SwrContext *<span class=\"supfact\">s</span> - local;\n  uint8_t *<span class=\"supfact\">tmp_arg</span>[Number];\n  int <span class=\"supfact\">ret</span>;\n  int ret_1;\n  int <span class=\"supfact\">ret_2</span>;\n  int <span class=\"supfact\">size</span>;\n  AudioData *<span class=\"supfact\">out</span>;\n  AudioData *<span class=\"supfact\">in</span>;\n  int <span class=\"supfact\">ret2</span>;\n  <span class=\"supfact\">bVar5</span> = Number;\n  <span class=\"supfact\">in</span> = &<span class=\"supfact\">s</span>-><span class=\"supfact\">in</span>;\n  <span class=\"supfact\">out</span> = &<span class=\"supfact\">s</span>-><span class=\"supfact\">out</span>;\n  iVar1 = swr_is_initialized(<span class=\"supfact\">s</span>);\n  <span class=\"supfact\">in_count</span> - local = <span class=\"supfact\">in_count</span>;\n  if (iVar1 == Number) {\n    av_log(<span class=\"supfact\">s</span>, Number, String);\n    iVar1 = -Number;\n  } else {\n    do {\n      if (<span class=\"supfact\">s</span>->drop_output < Number) {\n        if (in_arg == (uint8_t **)Number) {\n          if (<span class=\"supfact\">s</span>->resample == (ResampleContext *)Number) {\n            if (<span class=\"supfact\">s</span>->in_buffer_count == Number) {\n              return Number;\n            }\n          } else {\n            if (<span class=\"supfact\">s</span>->flushed == Number) {\n              (*<span class=\"supfact\">s</span>->resampler->flush)(<span class=\"supfact\">s</span>);\n            }\n            <span class=\"supfact\">s</span>->resample_in_constraint = Number;\n            <span class=\"supfact\">s</span>->flushed = Number;\n          }\n        } else {\n          fill_audiodata(<span class=\"supfact\">in</span>, in_arg);\n        }\n        fill_audiodata(<span class=\"supfact\">out</span>, out_arg);\n        if (<span class=\"supfact\">s</span>->resample != (ResampleContext *)Number) {\n          iVar1 = swr_convert_internal(\n              <span class=\"supfact\">s</span>, <span class=\"supfact\">out</span>, <span class=\"supfact\">out_count</span>,\n              <span class=\"supfact\">in</span>, <span class=\"supfact\">in_count</span> - local);\n          if (iVar1 < Number) {\n            return iVar1;\n          }\n          if (<span class=\"supfact\">s</span>->drop_output != Number) {\n            return iVar1;\n          }\n          <span class=\"supfact\">s</span>->outpts =\n              <span class=\"supfact\">s</span>->outpts +\n              (long)<span class=\"supfact\">s</span>->in_sample_rate * (long)iVar1;\n          return iVar1;\n        }\n        pAVar3 = <span class=\"supfact\">in</span>;\n        ppuVar4 = <span class=\"supfact\">tmp_arg</span>;\n        for (lVar2 = Number; lVar2 != Number; lVar2 = lVar2 + -Number) {\n          *ppuVar4 = pAVar3->ch[Number];\n          pAVar3 =\n              (AudioData *)((long)pAVar3 +\n                            (ulong)<span class=\"supfact\">bVar5</span> * -Number + Number);\n          ppuVar4 = ppuVar4 + (ulong)<span class=\"supfact\">bVar5</span> * -Number + Number;\n        }\n        <span class=\"supfact\">ret2</span> = Number;\n        iVar1 = <span class=\"supfact\">s</span>->in_buffer_count;\n        if (<span class=\"supfact\">out_count</span> <= <span class=\"supfact\">s</span>->in_buffer_count) {\n          iVar1 = <span class=\"supfact\">out_count</span>;\n        }\n        <span class=\"supfact\">out_count</span> - local = <span class=\"supfact\">out_count</span>;\n        if (iVar1 != Number) {\n          buf_set((AudioData *)<span class=\"supfact\">tmp_arg</span>,\n                  &<span class=\"supfact\">s</span>->in_buffer,\n                  <span class=\"supfact\">s</span>->in_buffer_index);\n          <span class=\"supfact\">ret2</span> = swr_convert_internal(\n              <span class=\"supfact\">s</span>, <span class=\"supfact\">out</span>, iVar1,\n              (AudioData *)<span class=\"supfact\">tmp_arg</span>, iVar1);\n          if (<span class=\"supfact\">ret2</span> < Number) {\n            return <span class=\"supfact\">ret2</span>;\n          }\n          <span class=\"supfact\">s</span>->in_buffer_count =\n              <span class=\"supfact\">s</span>->in_buffer_count - <span class=\"supfact\">ret2</span>;\n          <span class=\"supfact\">s</span>->in_buffer_index =\n              <span class=\"supfact\">s</span>->in_buffer_index + <span class=\"supfact\">ret2</span>;\n          buf_set(<span class=\"supfact\">out</span>, <span class=\"supfact\">out</span>,\n                  <span class=\"supfact\">ret2</span>);\n          <span class=\"supfact\">out_count</span> - local =\n              <span class=\"supfact\">out_count</span> - <span class=\"supfact\">ret2</span>;\n          if (<span class=\"supfact\">s</span>->in_buffer_count == Number) {\n            <span class=\"supfact\">s</span>->in_buffer_index = Number;\n          }\n        }\n        if (<span class=\"supfact\">in_count</span> - local != Number) {\n          iVar1 = (<span class=\"supfact\">in_count</span> - local +\n                   <span class=\"supfact\">s</span>->in_buffer_index +\n                   <span class=\"supfact\">s</span>->in_buffer_count) -\n                  <span class=\"supfact\">out_count</span> - local;\n          if (<span class=\"supfact\">out_count</span> - local <\n              <span class=\"supfact\">in_count</span> - local) {\n            if (((<span class=\"supfact\">s</span>->in_buffer).count < iVar1) &&\n                ((<span class=\"supfact\">in_count</span> - local +\n                  <span class=\"supfact\">s</span>->in_buffer_count) -\n                     <span class=\"supfact\">out_count</span> - local <=\n                 <span class=\"supfact\">s</span>->in_buffer_index)) {\n              buf_set((AudioData *)<span class=\"supfact\">tmp_arg</span>,\n                      &<span class=\"supfact\">s</span>->in_buffer,\n                      <span class=\"supfact\">s</span>->in_buffer_index);\n              copy((EVP_PKEY_CTX *)&<span class=\"supfact\">s</span>->in_buffer,\n                   (EVP_PKEY_CTX *)<span class=\"supfact\">tmp_arg</span>);\n              <span class=\"supfact\">s</span>->in_buffer_index = Number;\n            } else {\n              iVar1 = swri_realloc_audio(&<span class=\"supfact\">s</span>->in_buffer, iVar1);\n              if (iVar1 < Number) {\n                return iVar1;\n              }\n            }\n          }\n          if (<span class=\"supfact\">out_count</span> - local != Number) {\n            if (<span class=\"supfact\">in_count</span> - local <=\n                <span class=\"supfact\">out_count</span> - local) {\n              <span class=\"supfact\">out_count</span> - local =\n                  <span class=\"supfact\">in_count</span> - local;\n            }\n            iVar1 = swr_convert_internal(<span class=\"supfact\">s</span>, <span class=\"supfact\">out</span>,\n                                         <span class=\"supfact\">out_count</span> - local,\n                                         <span class=\"supfact\">in</span>,\n                                         <span class=\"supfact\">out_count</span> - local);\n            if (iVar1 < Number) {\n              return iVar1;\n            }\n            buf_set(<span class=\"supfact\">in</span>, <span class=\"supfact\">in</span>, iVar1);\n            <span class=\"supfact\">in_count</span> - local =\n                <span class=\"supfact\">in_count</span> - local - iVar1;\n            <span class=\"supfact\">ret2</span> = <span class=\"supfact\">ret2</span> + iVar1;\n          }\n          if (<span class=\"supfact\">in_count</span> - local != Number) {\n            buf_set((AudioData *)<span class=\"supfact\">tmp_arg</span>,\n                    &<span class=\"supfact\">s</span>->in_buffer,\n                    <span class=\"supfact\">s</span>->in_buffer_index +\n                        <span class=\"supfact\">s</span>->in_buffer_count);\n            copy((EVP_PKEY_CTX *)<span class=\"supfact\">tmp_arg</span>,\n                 (EVP_PKEY_CTX *)<span class=\"supfact\">in</span>);\n            <span class=\"supfact\">s</span>->in_buffer_count =\n                <span class=\"supfact\">s</span>->in_buffer_count + <span class=\"supfact\">in_count</span> -\n                local;\n          }\n        }\n        if (<span class=\"supfact\">ret2</span> < Number) {\n          return <span class=\"supfact\">ret2</span>;\n        }\n        if (<span class=\"supfact\">s</span>->drop_output != Number) {\n          return <span class=\"supfact\">ret2</span>;\n        }\n        <span class=\"supfact\">s</span>->outpts = <span class=\"supfact\">s</span>->outpts +\n                                    (long)<span class=\"supfact\">s</span>->in_sample_rate *\n                                        (long)<span class=\"supfact\">ret2</span>;\n        return <span class=\"supfact\">ret2</span>;\n      }\n      iVar1 = <span class=\"supfact\">s</span>->drop_output;\n      if (Number < iVar1) {\n        iVar1 = Number;\n      }\n      iVar1 = swri_realloc_audio(&<span class=\"supfact\">s</span>->drop_temp, iVar1);\n      if (iVar1 < Number) {\n        return iVar1;\n      }\n      reversefill_audiodata(&<span class=\"supfact\">s</span>->drop_temp,\n                            <span class=\"supfact\">tmp_arg</span>);\n      <span class=\"supfact\">s</span>->drop_output = -<span class=\"supfact\">s</span>->drop_output;\n      if (<span class=\"supfact\">s</span>->drop_output < -Number) {\n        iVar1 = Number;\n      } else {\n        iVar1 = -<span class=\"supfact\">s</span>->drop_output;\n      }\n      iVar1 = swr_convert(<span class=\"supfact\">s</span>, <span class=\"supfact\">tmp_arg</span>, iVar1,\n                          in_arg, <span class=\"supfact\">in_count</span> - local);\n      <span class=\"supfact\">s</span>->drop_output = -<span class=\"supfact\">s</span>->drop_output;\n      <span class=\"supfact\">in_count</span> - local = Number;\n      if (iVar1 < Number) {\n        if (<span class=\"supfact\">s</span>->drop_output != Number) {\n          return Number;\n        }\n        av_log(Number, Number, String, String, String, Number);\n        abort();\n      }\n      <span class=\"supfact\">s</span>->drop_output = <span class=\"supfact\">s</span>->drop_output - iVar1;\n    } while ((<span class=\"supfact\">s</span>->drop_output != Number) ||\n             (out_arg != (uint8_t **)Number));\n    iVar1 = Number;\n  }\n  return iVar1;\n}", "var": [{"name": "param_1", "type": "SwrContext * *", "pred_name": "s", "ref_name": "s", "ref_type": "SwrContext * *"}, {"name": "param_3", "type": "int", "pred_name": "out_count", "ref_name": "out_count", "ref_type": "int"}, {"name": "param_5", "type": "int", "pred_name": "in_count", "ref_name": "in_count", "ref_type": "int"}, {"name": "bVar5", "type": "byte", "pred_name": "bVar5", "ref_name": "bVar5", "ref_type": "byte"}, {"name": "local_270", "type": "int", "pred_name": "__unk__", "ref_name": "in_count-local", "ref_type": "int"}, {"name": "local_26c", "type": "int", "pred_name": "out_count-local", "ref_name": "out_count-local", "ref_type": "int"}, {"name": "local_258", "type": "uint8_t *[64][64]", "pred_name": "tmp_arg", "ref_name": "tmp_arg", "ref_type": "uint8_t *[64][64]"}, {"name": "local_30", "type": "int", "pred_name": "ret", "ref_name": "ret", "ref_type": "int"}, {"name": "local_28", "type": "int", "pred_name": "ret_2", "ref_name": "ret_2", "ref_type": "int"}, {"name": "local_24", "type": "int", "pred_name": "size", "ref_name": "size", "ref_type": "int"}, {"name": "local_20", "type": "AudioData * *", "pred_name": "out", "ref_name": "out", "ref_type": "AudioData * *"}, {"name": "local_18", "type": "AudioData * *", "pred_name": "in", "ref_name": "in", "ref_type": "AudioData * *"}, {"name": "local_c", "type": "int", "pred_name": "ret2", "ref_name": "ret2", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "bpillon", "repo_name": "android-ffmpeg-wrapper", "path": "bpillon/android-ffmpeg-wrapper/ba1cff2608504ca3b34e6f7884c235aab00d828df51cb6f4520ff842ce1e8ea9", "path_in_repo": "bpillon/android-ffmpeg-wrapper/jni/ffmpeg/libavcodec/h264idct.o", "objdump": "0000000000008fd4 <ff_h264_luma_dc_dequant_idct_12_c>:\n    8fd4:\t48 83 ec 20          \tsub    $0x20,%rsp\n    8fd8:\t48 89 7c 24 98       \tmov    %rdi,-0x68(%rsp)\n    8fdd:\t48 89 74 24 90       \tmov    %rsi,-0x70(%rsp)\n    8fe2:\t89 54 24 8c          \tmov    %edx,-0x74(%rsp)\n    8fe6:\t48 8b 44 24 90       \tmov    -0x70(%rsp),%rax\n    8feb:\t48 89 44 24 10       \tmov    %rax,0x10(%rsp)\n    8ff0:\t48 8b 44 24 98       \tmov    -0x68(%rsp),%rax\n    8ff5:\t48 89 44 24 08       \tmov    %rax,0x8(%rsp)\n    8ffa:\tc7 44 24 1c 00 00 00 \tmovl   $0x0,0x1c(%rsp)\n    9001:\t00 \n    9002:\te9 7e 01 00 00       \tjmp    9185 <ff_h264_luma_dc_dequant_idct_12_c+0x1b1>\n    9007:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    900b:\tc1 e0 02             \tshl    $0x2,%eax\n    900e:\t48 98                \tcltq   \n    9010:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9017:\t00 \n    9018:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    901d:\t48 01 d0             \tadd    %rdx,%rax\n    9020:\t8b 10                \tmov    (%rax),%edx\n    9022:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    9026:\tc1 e0 02             \tshl    $0x2,%eax\n    9029:\t48 98                \tcltq   \n    902b:\t48 83 c0 01          \tadd    $0x1,%rax\n    902f:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9036:\t00 \n    9037:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    903c:\t48 01 c8             \tadd    %rcx,%rax\n    903f:\t8b 00                \tmov    (%rax),%eax\n    9041:\t01 d0                \tadd    %edx,%eax\n    9043:\t89 44 24 f0          \tmov    %eax,-0x10(%rsp)\n    9047:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    904b:\tc1 e0 02             \tshl    $0x2,%eax\n    904e:\t48 98                \tcltq   \n    9050:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    9057:\t00 \n    9058:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    905d:\t48 01 d0             \tadd    %rdx,%rax\n    9060:\t8b 10                \tmov    (%rax),%edx\n    9062:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    9066:\tc1 e0 02             \tshl    $0x2,%eax\n    9069:\t48 98                \tcltq   \n    906b:\t48 83 c0 01          \tadd    $0x1,%rax\n    906f:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9076:\t00 \n    9077:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    907c:\t48 01 c8             \tadd    %rcx,%rax\n    907f:\t8b 00                \tmov    (%rax),%eax\n    9081:\t29 c2                \tsub    %eax,%edx\n    9083:\t89 d0                \tmov    %edx,%eax\n    9085:\t89 44 24 ec          \tmov    %eax,-0x14(%rsp)\n    9089:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    908d:\tc1 e0 02             \tshl    $0x2,%eax\n    9090:\t48 98                \tcltq   \n    9092:\t48 83 c0 02          \tadd    $0x2,%rax\n    9096:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    909d:\t00 \n    909e:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    90a3:\t48 01 d0             \tadd    %rdx,%rax\n    90a6:\t8b 10                \tmov    (%rax),%edx\n    90a8:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    90ac:\tc1 e0 02             \tshl    $0x2,%eax\n    90af:\t48 98                \tcltq   \n    90b1:\t48 83 c0 03          \tadd    $0x3,%rax\n    90b5:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    90bc:\t00 \n    90bd:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    90c2:\t48 01 c8             \tadd    %rcx,%rax\n    90c5:\t8b 00                \tmov    (%rax),%eax\n    90c7:\t29 c2                \tsub    %eax,%edx\n    90c9:\t89 d0                \tmov    %edx,%eax\n    90cb:\t89 44 24 e8          \tmov    %eax,-0x18(%rsp)\n    90cf:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    90d3:\tc1 e0 02             \tshl    $0x2,%eax\n    90d6:\t48 98                \tcltq   \n    90d8:\t48 83 c0 02          \tadd    $0x2,%rax\n    90dc:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    90e3:\t00 \n    90e4:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    90e9:\t48 01 d0             \tadd    %rdx,%rax\n    90ec:\t8b 10                \tmov    (%rax),%edx\n    90ee:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    90f2:\tc1 e0 02             \tshl    $0x2,%eax\n    90f5:\t48 98                \tcltq   \n    90f7:\t48 83 c0 03          \tadd    $0x3,%rax\n    90fb:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9102:\t00 \n    9103:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    9108:\t48 01 c8             \tadd    %rcx,%rax\n    910b:\t8b 00                \tmov    (%rax),%eax\n    910d:\t01 d0                \tadd    %edx,%eax\n    910f:\t89 44 24 e4          \tmov    %eax,-0x1c(%rsp)\n    9113:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    9117:\t8d 0c 85 00 00 00 00 \tlea    0x0(,%rax,4),%ecx\n    911e:\t8b 54 24 f0          \tmov    -0x10(%rsp),%edx\n    9122:\t8b 44 24 e4          \tmov    -0x1c(%rsp),%eax\n    9126:\t01 c2                \tadd    %eax,%edx\n    9128:\t48 63 c1             \tmovslq %ecx,%rax\n    912b:\t89 54 84 a0          \tmov    %edx,-0x60(%rsp,%rax,4)\n    912f:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    9133:\tc1 e0 02             \tshl    $0x2,%eax\n    9136:\t8d 48 01             \tlea    0x1(%rax),%ecx\n    9139:\t8b 44 24 f0          \tmov    -0x10(%rsp),%eax\n    913d:\t2b 44 24 e4          \tsub    -0x1c(%rsp),%eax\n    9141:\t89 c2                \tmov    %eax,%edx\n    9143:\t48 63 c1             \tmovslq %ecx,%rax\n    9146:\t89 54 84 a0          \tmov    %edx,-0x60(%rsp,%rax,4)\n    914a:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    914e:\tc1 e0 02             \tshl    $0x2,%eax\n    9151:\t8d 48 02             \tlea    0x2(%rax),%ecx\n    9154:\t8b 44 24 ec          \tmov    -0x14(%rsp),%eax\n    9158:\t2b 44 24 e8          \tsub    -0x18(%rsp),%eax\n    915c:\t89 c2                \tmov    %eax,%edx\n    915e:\t48 63 c1             \tmovslq %ecx,%rax\n    9161:\t89 54 84 a0          \tmov    %edx,-0x60(%rsp,%rax,4)\n    9165:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    9169:\tc1 e0 02             \tshl    $0x2,%eax\n    916c:\t8d 48 03             \tlea    0x3(%rax),%ecx\n    916f:\t8b 54 24 ec          \tmov    -0x14(%rsp),%edx\n    9173:\t8b 44 24 e8          \tmov    -0x18(%rsp),%eax\n    9177:\t01 c2                \tadd    %eax,%edx\n    9179:\t48 63 c1             \tmovslq %ecx,%rax\n    917c:\t89 54 84 a0          \tmov    %edx,-0x60(%rsp,%rax,4)\n    9180:\t83 44 24 1c 01       \taddl   $0x1,0x1c(%rsp)\n    9185:\t83 7c 24 1c 03       \tcmpl   $0x3,0x1c(%rsp)\n    918a:\t0f 8e 77 fe ff ff    \tjle    9007 <ff_h264_luma_dc_dequant_idct_12_c+0x33>\n    9190:\tc7 44 24 1c 00 00 00 \tmovl   $0x0,0x1c(%rsp)\n    9197:\t00 \n    9198:\te9 59 01 00 00       \tjmp    92f6 <ff_h264_luma_dc_dequant_idct_12_c+0x322>\n    919d:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    91a1:\t48 98                \tcltq   \n    91a3:\t0f b6 80 00 00 00 00 \tmovzbl 0x0(%rax),%eax\n    91aa:\t0f b6 c0             \tmovzbl %al,%eax\n    91ad:\t89 44 24 04          \tmov    %eax,0x4(%rsp)\n    91b1:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    91b5:\t48 98                \tcltq   \n    91b7:\t8b 54 84 a0          \tmov    -0x60(%rsp,%rax,4),%edx\n    91bb:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    91bf:\t83 c0 08             \tadd    $0x8,%eax\n    91c2:\t48 98                \tcltq   \n    91c4:\t8b 44 84 a0          \tmov    -0x60(%rsp,%rax,4),%eax\n    91c8:\t01 d0                \tadd    %edx,%eax\n    91ca:\t89 04 24             \tmov    %eax,(%rsp)\n    91cd:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    91d1:\t48 98                \tcltq   \n    91d3:\t8b 54 84 a0          \tmov    -0x60(%rsp,%rax,4),%edx\n    91d7:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    91db:\t83 c0 08             \tadd    $0x8,%eax\n    91de:\t48 98                \tcltq   \n    91e0:\t8b 44 84 a0          \tmov    -0x60(%rsp,%rax,4),%eax\n    91e4:\t29 c2                \tsub    %eax,%edx\n    91e6:\t89 d0                \tmov    %edx,%eax\n    91e8:\t89 44 24 fc          \tmov    %eax,-0x4(%rsp)\n    91ec:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    91f0:\t83 c0 04             \tadd    $0x4,%eax\n    91f3:\t48 98                \tcltq   \n    91f5:\t8b 54 84 a0          \tmov    -0x60(%rsp,%rax,4),%edx\n    91f9:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    91fd:\t83 c0 0c             \tadd    $0xc,%eax\n    9200:\t48 98                \tcltq   \n    9202:\t8b 44 84 a0          \tmov    -0x60(%rsp,%rax,4),%eax\n    9206:\t29 c2                \tsub    %eax,%edx\n    9208:\t89 d0                \tmov    %edx,%eax\n    920a:\t89 44 24 f8          \tmov    %eax,-0x8(%rsp)\n    920e:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    9212:\t83 c0 04             \tadd    $0x4,%eax\n    9215:\t48 98                \tcltq   \n    9217:\t8b 54 84 a0          \tmov    -0x60(%rsp,%rax,4),%edx\n    921b:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    921f:\t83 c0 0c             \tadd    $0xc,%eax\n    9222:\t48 98                \tcltq   \n    9224:\t8b 44 84 a0          \tmov    -0x60(%rsp,%rax,4),%eax\n    9228:\t01 d0                \tadd    %edx,%eax\n    922a:\t89 44 24 f4          \tmov    %eax,-0xc(%rsp)\n    922e:\t8b 14 24             \tmov    (%rsp),%edx\n    9231:\t8b 44 24 f4          \tmov    -0xc(%rsp),%eax\n    9235:\t01 d0                \tadd    %edx,%eax\n    9237:\t0f af 44 24 8c       \timul   -0x74(%rsp),%eax\n    923c:\t8d 90 80 00 00 00    \tlea    0x80(%rax),%edx\n    9242:\t8b 44 24 04          \tmov    0x4(%rsp),%eax\n    9246:\t48 98                \tcltq   \n    9248:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    924f:\t00 \n    9250:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9255:\t48 01 c8             \tadd    %rcx,%rax\n    9258:\tc1 fa 08             \tsar    $0x8,%edx\n    925b:\t89 10                \tmov    %edx,(%rax)\n    925d:\t8b 54 24 fc          \tmov    -0x4(%rsp),%edx\n    9261:\t8b 44 24 f8          \tmov    -0x8(%rsp),%eax\n    9265:\t01 d0                \tadd    %edx,%eax\n    9267:\t0f af 44 24 8c       \timul   -0x74(%rsp),%eax\n    926c:\t8d 90 80 00 00 00    \tlea    0x80(%rax),%edx\n    9272:\t8b 44 24 04          \tmov    0x4(%rsp),%eax\n    9276:\t83 c0 10             \tadd    $0x10,%eax\n    9279:\t48 98                \tcltq   \n    927b:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    9282:\t00 \n    9283:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9288:\t48 01 c8             \tadd    %rcx,%rax\n    928b:\tc1 fa 08             \tsar    $0x8,%edx\n    928e:\t89 10                \tmov    %edx,(%rax)\n    9290:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    9294:\t2b 44 24 f8          \tsub    -0x8(%rsp),%eax\n    9298:\t0f af 44 24 8c       \timul   -0x74(%rsp),%eax\n    929d:\t8d 90 80 00 00 00    \tlea    0x80(%rax),%edx\n    92a3:\t8b 44 24 04          \tmov    0x4(%rsp),%eax\n    92a7:\t83 c0 40             \tadd    $0x40,%eax\n    92aa:\t48 98                \tcltq   \n    92ac:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    92b3:\t00 \n    92b4:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    92b9:\t48 01 c8             \tadd    %rcx,%rax\n    92bc:\tc1 fa 08             \tsar    $0x8,%edx\n    92bf:\t89 10                \tmov    %edx,(%rax)\n    92c1:\t8b 04 24             \tmov    (%rsp),%eax\n    92c4:\t2b 44 24 f4          \tsub    -0xc(%rsp),%eax\n    92c8:\t0f af 44 24 8c       \timul   -0x74(%rsp),%eax\n    92cd:\t8d 90 80 00 00 00    \tlea    0x80(%rax),%edx\n    92d3:\t8b 44 24 04          \tmov    0x4(%rsp),%eax\n    92d7:\t83 c0 50             \tadd    $0x50,%eax\n    92da:\t48 98                \tcltq   \n    92dc:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    92e3:\t00 \n    92e4:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    92e9:\t48 01 c8             \tadd    %rcx,%rax\n    92ec:\tc1 fa 08             \tsar    $0x8,%edx\n    92ef:\t89 10                \tmov    %edx,(%rax)\n    92f1:\t83 44 24 1c 01       \taddl   $0x1,0x1c(%rsp)\n    92f6:\t83 7c 24 1c 03       \tcmpl   $0x3,0x1c(%rsp)\n    92fb:\t0f 8e 9c fe ff ff    \tjle    919d <ff_h264_luma_dc_dequant_idct_12_c+0x1c9>\n    9301:\t90                   \tnop\n    9302:\t90                   \tnop\n    9303:\t48 83 c4 20          \tadd    $0x20,%rsp\n    9307:\tc3                   \tret    ", "code_s": "void ff_h264_luma_dc_dequant_idct_12_c(long param_1,\n                                       long <span class=\"supfact\">param_2</span>,\n                                       int <span class=\"supfact\">param_3</span>) {\n  int <span class=\"supfact\">aiStack_80</span>[Number];\n  int <span class=\"supfact\">aiStack_60</span>[Number];\n  int <span class=\"supfact\">aiStack_50</span>[Number];\n  int <span class=\"supfact\">local_3c</span>;\n  int <span class=\"supfact\">local_38</span>;\n  int <span class=\"supfact\">local_34</span>;\n  int <span class=\"supfact\">local_30</span>;\n  int <span class=\"supfact\">local_2c</span>;\n  int <span class=\"supfact\">local_28</span>;\n  int <span class=\"supfact\">local_24</span>;\n  int <span class=\"supfact\">local_20</span>;\n  uint <span class=\"supfact\">local_1c</span>;\n  long <span class=\"supfact\">local_18</span>;\n  long <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_4</span>;\n  <span class=\"supfact\">local_10</span> = <span class=\"supfact\">param_2</span>;\n  <span class=\"supfact\">local_18</span> = param_1;\n  for (<span class=\"supfact\">local_4</span> = Number; <span class=\"supfact\">local_4</span> < Number;\n       <span class=\"supfact\">local_4</span> = <span class=\"supfact\">local_4</span> + Number) {\n    <span class=\"supfact\">local_30</span> =\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 ((long)(<span class=\"supfact\">local_4</span> << Number) + Number) *\n                     Number) +\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 (long)(<span class=\"supfact\">local_4</span> << Number) * Number);\n    <span class=\"supfact\">local_34</span> =\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 (long)(<span class=\"supfact\">local_4</span> << Number) * Number) -\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 ((long)(<span class=\"supfact\">local_4</span> << Number) + Number) * Number);\n    <span class=\"supfact\">local_38</span> =\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 ((long)(<span class=\"supfact\">local_4</span> << Number) + Number) *\n                     Number) -\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 ((long)(<span class=\"supfact\">local_4</span> << Number) + Number) * Number);\n    <span class=\"supfact\">local_3c</span> =\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 ((long)(<span class=\"supfact\">local_4</span> << Number) + Number) *\n                     Number) +\n        *(int *)(<span class=\"supfact\">local_10</span> +\n                 ((long)(<span class=\"supfact\">local_4</span> << Number) + Number) * Number);\n    <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> * Number] =\n        <span class=\"supfact\">local_30</span> + <span class=\"supfact\">local_3c</span>;\n    <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> * Number + Number] =\n        <span class=\"supfact\">local_30</span> - <span class=\"supfact\">local_3c</span>;\n    <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> * Number + Number] =\n        <span class=\"supfact\">local_34</span> - <span class=\"supfact\">local_38</span>;\n    <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> * Number + Number] =\n        <span class=\"supfact\">local_34</span> + <span class=\"supfact\">local_38</span>;\n  }\n  for (<span class=\"supfact\">local_4</span> = Number; <span class=\"supfact\">local_4</span> < Number;\n       <span class=\"supfact\">local_4</span> = <span class=\"supfact\">local_4</span> + Number) {\n    <span class=\"supfact\">local_1c</span> =\n        (uint)(byte)(&DAT_0010bd85)[<span class=\"supfact\">local_4</span>];\n    <span class=\"supfact\">local_20</span> =\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> + Number] +\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span>];\n    <span class=\"supfact\">local_24</span> =\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span>] -\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> + Number];\n    <span class=\"supfact\">local_28</span> =\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> + Number] -\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> + Number];\n    <span class=\"supfact\">local_2c</span> =\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> + Number] +\n        <span class=\"supfact\">aiStack_80</span>[<span class=\"supfact\">local_4</span> + Number];\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)<span class=\"supfact\">local_1c</span> * Number) =\n        (<span class=\"supfact\">local_2c</span> + <span class=\"supfact\">local_20</span>) *\n                <span class=\"supfact\">param_3</span> +\n            Number >>\n        Number;\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)(<span class=\"supfact\">local_1c</span> + Number) * Number) =\n        (<span class=\"supfact\">local_28</span> + <span class=\"supfact\">local_24</span>) *\n                <span class=\"supfact\">param_3</span> +\n            Number >>\n        Number;\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)(<span class=\"supfact\">local_1c</span> + Number) * Number) =\n        (<span class=\"supfact\">local_24</span> - <span class=\"supfact\">local_28</span>) *\n                <span class=\"supfact\">param_3</span> +\n            Number >>\n        Number;\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)(<span class=\"supfact\">local_1c</span> + Number) * Number) =\n        (<span class=\"supfact\">local_20</span> - <span class=\"supfact\">local_2c</span>) *\n                <span class=\"supfact\">param_3</span> +\n            Number >>\n        Number;\n  }\n  return;\n}", "code_t": "void ff_h264_luma_dc_dequant_idct_12_c(int16_t *_output,\n                                       int16_t *<span class=\"supfact\">_input</span>,\n                                       int <span class=\"supfact\">qmul</span>) {\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  uint uVar9;\n  int <span class=\"supfact\">qmul</span> - local;\n  int16_t *<span class=\"supfact\">_input</span> - local;\n  int16_t *_output - local;\n  int <span class=\"supfact\">temp</span>[Number];\n  int <span class=\"supfact\">z3</span>;\n  int <span class=\"supfact\">z2</span>;\n  int <span class=\"supfact\">z1</span>;\n  int <span class=\"supfact\">z0</span>;\n  int <span class=\"supfact\">z3_1</span>;\n  int <span class=\"supfact\">z2_1</span>;\n  int <span class=\"supfact\">z1_1</span>;\n  int <span class=\"supfact\">z0_1</span>;\n  int <span class=\"supfact\">offset</span>;\n  int32_t *<span class=\"supfact\">output</span>;\n  int32_t *<span class=\"supfact\">input</span>;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">output</span> = (int32_t *)_output;\n  <span class=\"supfact\">input</span> = (int32_t *)<span class=\"supfact\">_input</span>;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    <span class=\"supfact\">z0</span> =\n        <span class=\"supfact\">input</span>[(long)(<span class=\"supfact\">i</span> << Number) + Number] +\n        <span class=\"supfact\">input</span>[<span class=\"supfact\">i</span> << Number];\n    <span class=\"supfact\">z1</span> =\n        <span class=\"supfact\">input</span>[<span class=\"supfact\">i</span> << Number] -\n        <span class=\"supfact\">input</span>[(long)(<span class=\"supfact\">i</span> << Number) + Number];\n    <span class=\"supfact\">z2</span> =\n        <span class=\"supfact\">input</span>[(long)(<span class=\"supfact\">i</span> << Number) + Number] -\n        <span class=\"supfact\">input</span>[(long)(<span class=\"supfact\">i</span> << Number) + Number];\n    <span class=\"supfact\">z3</span> =\n        <span class=\"supfact\">input</span>[(long)(<span class=\"supfact\">i</span> << Number) + Number] +\n        <span class=\"supfact\">input</span>[(long)(<span class=\"supfact\">i</span> << Number) + Number];\n    <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> * Number] =\n        <span class=\"supfact\">z0</span> + <span class=\"supfact\">z3</span>;\n    <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> * Number + Number] =\n        <span class=\"supfact\">z0</span> - <span class=\"supfact\">z3</span>;\n    <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> * Number + Number] =\n        <span class=\"supfact\">z1</span> - <span class=\"supfact\">z2</span>;\n    <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> * Number + Number] =\n        <span class=\"supfact\">z1</span> + <span class=\"supfact\">z2</span>;\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    uVar9 = (uint)String[<span class=\"supfact\">i</span>];\n    iVar1 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span>];\n    iVar2 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar3 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span>];\n    iVar4 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar5 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar6 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar7 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar8 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    <span class=\"supfact\">output</span>[(int)uVar9] =\n        (iVar8 + iVar7 + iVar2 + iVar1) * <span class=\"supfact\">qmul</span> + Number >>\n        Number;\n    <span class=\"supfact\">output</span>[(int)(uVar9 + Number)] =\n        ((iVar5 - iVar6) + (iVar3 - iVar4)) * <span class=\"supfact\">qmul</span> + Number >>\n        Number;\n    <span class=\"supfact\">output</span>[(int)(uVar9 + Number)] =\n        ((iVar3 - iVar4) - (iVar5 - iVar6)) * <span class=\"supfact\">qmul</span> + Number >>\n        Number;\n    <span class=\"supfact\">output</span>[(int)(uVar9 + Number)] =\n        ((iVar2 + iVar1) - (iVar8 + iVar7)) * <span class=\"supfact\">qmul</span> + Number >>\n        Number;\n  }\n  return;\n}", "var": [{"name": "param_2", "type": "DCTELEM * *", "pred_name": "__unk__", "ref_name": "_input", "ref_type": "int16_t * *"}, {"name": "param_3", "type": "int", "pred_name": "qmul", "ref_name": "qmul", "ref_type": "int"}, {"name": "aiStack_80", "type": "int[16][16]", "pred_name": "temp", "ref_name": "temp", "ref_type": "int[16][16]"}, {"name": "aiStack_60", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "aiStack_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_3c", "type": "int", "pred_name": "z3", "ref_name": "z3", "ref_type": "int"}, {"name": "local_38", "type": "int", "pred_name": "z2", "ref_name": "z2", "ref_type": "int"}, {"name": "local_34", "type": "int", "pred_name": "z1", "ref_name": "z1", "ref_type": "int"}, {"name": "local_30", "type": "int", "pred_name": "z0", "ref_name": "z0", "ref_type": "int"}, {"name": "local_2c", "type": "int", "pred_name": "z3_1", "ref_name": "z3_1", "ref_type": "int"}, {"name": "local_28", "type": "int", "pred_name": "z2_1", "ref_name": "z2_1", "ref_type": "int"}, {"name": "local_24", "type": "int", "pred_name": "z1_1", "ref_name": "z1_1", "ref_type": "int"}, {"name": "local_20", "type": "int", "pred_name": "z0_1", "ref_name": "z0_1", "ref_type": "int"}, {"name": "local_1c", "type": "int", "pred_name": "offset", "ref_name": "offset", "ref_type": "int"}, {"name": "local_18", "type": "int32_t * *", "pred_name": "output", "ref_name": "output", "ref_type": "int32_t * *"}, {"name": "local_10", "type": "int32_t * *", "pred_name": "input", "ref_name": "input", "ref_type": "int32_t * *"}, {"name": "local_4", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "Alhadis", "repo_name": "Research-Unix-v8", "path": "Alhadis/Research-Unix-v8/8bbfb80068fb3a1f3ab7419cf9ded97ba154e72b8ab0a13d14aed2728116893d", "path_in_repo": "Alhadis/Research-Unix-v8/v8/usr/src/cmd/calendar/calendar2", "objdump": "", "code_s": "char *ctime(time_t *__timer) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_ctime_00404030)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *ctime(time_t *__timer) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_ctime_00404030)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": true}, {"repo_owner": "kyotobay", "repo_name": "playing_abc", "path": "kyotobay/playing_abc/265672d062f5d747f7233261f9f87a4eb3c96da642ae183c6df2cab1a815ec42", "path_in_repo": "kyotobay/playing_abc/abc_truth_up/src/opt/dec/decPrint.o", "objdump": "0000000000000b64 <Dec_GraphPrint2_rec>:\n     b64:\t55                   \tpush   %rbp\n     b65:\t48 89 e5             \tmov    %rsp,%rbp\n     b68:\t48 83 ec 40          \tsub    $0x40,%rsp\n     b6c:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     b70:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n     b74:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n     b78:\t89 4d d4             \tmov    %ecx,-0x2c(%rbp)\n     b7b:\t4c 89 45 c8          \tmov    %r8,-0x38(%rbp)\n     b7f:\t4c 89 4d c0          \tmov    %r9,-0x40(%rbp)\n     b83:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     b87:\t8b 00                \tmov    (%rax),%eax\n     b89:\td1 e8                \tshr    %eax\n     b8b:\t25 ff ff ff 3f       \tand    $0x3fffffff,%eax\n     b90:\t89 c2                \tmov    %eax,%edx\n     b92:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     b96:\t89 d6                \tmov    %edx,%esi\n     b98:\t48 89 c7             \tmov    %rax,%rdi\n     b9b:\te8 29 fc ff ff       \tcall   7c9 <Dec_GraphNode>\n     ba0:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     ba4:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     ba8:\t8b 40 04             \tmov    0x4(%rax),%eax\n     bab:\td1 e8                \tshr    %eax\n     bad:\t25 ff ff ff 3f       \tand    $0x3fffffff,%eax\n     bb2:\t89 c2                \tmov    %eax,%edx\n     bb4:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     bb8:\t89 d6                \tmov    %edx,%esi\n     bba:\t48 89 c7             \tmov    %rax,%rdi\n     bbd:\te8 07 fc ff ff       \tcall   7c9 <Dec_GraphNode>\n     bc2:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     bc6:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n     bca:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     bce:\t48 89 d6             \tmov    %rdx,%rsi\n     bd1:\t48 89 c7             \tmov    %rax,%rdi\n     bd4:\te8 a9 fc ff ff       \tcall   882 <Dec_GraphNodeIsVar>\n     bd9:\t85 c0                \ttest   %eax,%eax\n     bdb:\t74 3b                \tje     c18 <Dec_GraphPrint2_rec+0xb4>\n     bdd:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n     be1:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     be5:\t48 89 d6             \tmov    %rdx,%rsi\n     be8:\t48 89 c7             \tmov    %rax,%rdi\n     beb:\te8 34 fc ff ff       \tcall   824 <Dec_GraphNodeInt>\n     bf0:\t89 c6                \tmov    %eax,%esi\n     bf2:\t48 8b 4d c8          \tmov    -0x38(%rbp),%rcx\n     bf6:\t8b 55 d4             \tmov    -0x2c(%rbp),%edx\n     bf9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     bfd:\t48 89 c7             \tmov    %rax,%rdi\n     c00:\te8 d2 06 00 00       \tcall   12d7 <Dec_GraphPrintGetLeafName>\n     c05:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n     c09:\t8b 12                \tmov    (%rdx),%edx\n     c0b:\t01 c2                \tadd    %eax,%edx\n     c0d:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     c11:\t89 10                \tmov    %edx,(%rax)\n     c13:\te9 a5 02 00 00       \tjmp    ebd <Dec_GraphPrint2_rec+0x359>\n     c18:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     c1c:\t0f b6 40 11          \tmovzbl 0x11(%rax),%eax\n     c20:\t83 e0 40             \tand    $0x40,%eax\n     c23:\t84 c0                \ttest   %al,%al\n     c25:\t0f 85 b8 01 00 00    \tjne    de3 <Dec_GraphPrint2_rec+0x27f>\n     c2b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     c2f:\t0f b6 40 11          \tmovzbl 0x11(%rax),%eax\n     c33:\t83 e0 40             \tand    $0x40,%eax\n     c36:\t84 c0                \ttest   %al,%al\n     c38:\t75 38                \tjne    c72 <Dec_GraphPrint2_rec+0x10e>\n     c3a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     c3e:\t0f b6 40 11          \tmovzbl 0x11(%rax),%eax\n     c42:\tc0 e8 07             \tshr    $0x7,%al\n     c45:\t0f b6 c8             \tmovzbl %al,%ecx\n     c48:\t4c 8b 4d c0          \tmov    -0x40(%rbp),%r9\n     c4c:\t4c 8b 45 c8          \tmov    -0x38(%rbp),%r8\n     c50:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n     c54:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n     c58:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     c5c:\t48 83 ec 08          \tsub    $0x8,%rsp\n     c60:\t8b 7d 10             \tmov    0x10(%rbp),%edi\n     c63:\t57                   \tpush   %rdi\n     c64:\t48 89 c7             \tmov    %rax,%rdi\n     c67:\te8 53 02 00 00       \tcall   ebf <Dec_GraphPrint_rec>\n     c6c:\t48 83 c4 10          \tadd    $0x10,%rsp\n     c70:\teb 76                \tjmp    ce8 <Dec_GraphPrint2_rec+0x184>\n     c72:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     c76:\t48 89 c6             \tmov    %rax,%rsi\n     c79:\tbf 28 00 00 00       \tmov    $0x28,%edi\n     c7e:\te8 00 00 00 00       \tcall   c83 <Dec_GraphPrint2_rec+0x11f>\n     c83:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     c87:\t8b 00                \tmov    (%rax),%eax\n     c89:\t8d 50 01             \tlea    0x1(%rax),%edx\n     c8c:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     c90:\t89 10                \tmov    %edx,(%rax)\n     c92:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     c96:\t0f b6 40 11          \tmovzbl 0x11(%rax),%eax\n     c9a:\tc0 e8 07             \tshr    $0x7,%al\n     c9d:\t0f b6 c8             \tmovzbl %al,%ecx\n     ca0:\t4c 8b 4d c0          \tmov    -0x40(%rbp),%r9\n     ca4:\t4c 8b 45 c8          \tmov    -0x38(%rbp),%r8\n     ca8:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n     cac:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n     cb0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     cb4:\t48 83 ec 08          \tsub    $0x8,%rsp\n     cb8:\t8b 7d 10             \tmov    0x10(%rbp),%edi\n     cbb:\t57                   \tpush   %rdi\n     cbc:\t48 89 c7             \tmov    %rax,%rdi\n     cbf:\te8 fb 01 00 00       \tcall   ebf <Dec_GraphPrint_rec>\n     cc4:\t48 83 c4 10          \tadd    $0x10,%rsp\n     cc8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     ccc:\t48 89 c6             \tmov    %rax,%rsi\n     ccf:\tbf 29 00 00 00       \tmov    $0x29,%edi\n     cd4:\te8 00 00 00 00       \tcall   cd9 <Dec_GraphPrint2_rec+0x175>\n     cd9:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     cdd:\t8b 00                \tmov    (%rax),%eax\n     cdf:\t8d 50 01             \tlea    0x1(%rax),%edx\n     ce2:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     ce6:\t89 10                \tmov    %edx,(%rax)\n     ce8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     cec:\t48 89 c6             \tmov    %rax,%rsi\n     cef:\tbf 20 00 00 00       \tmov    $0x20,%edi\n     cf4:\te8 00 00 00 00       \tcall   cf9 <Dec_GraphPrint2_rec+0x195>\n     cf9:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     cfd:\t8b 00                \tmov    (%rax),%eax\n     cff:\t8d 50 01             \tlea    0x1(%rax),%edx\n     d02:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     d06:\t89 10                \tmov    %edx,(%rax)\n     d08:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n     d0c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     d10:\t8b 55 10             \tmov    0x10(%rbp),%edx\n     d13:\t48 89 ce             \tmov    %rcx,%rsi\n     d16:\t48 89 c7             \tmov    %rax,%rdi\n     d19:\te8 2c 06 00 00       \tcall   134a <Dec_GraphPrintUpdatePos>\n     d1e:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     d22:\t0f b6 40 11          \tmovzbl 0x11(%rax),%eax\n     d26:\t83 e0 40             \tand    $0x40,%eax\n     d29:\t84 c0                \ttest   %al,%al\n     d2b:\t75 3b                \tjne    d68 <Dec_GraphPrint2_rec+0x204>\n     d2d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     d31:\t0f b6 40 12          \tmovzbl 0x12(%rax),%eax\n     d35:\t83 e0 01             \tand    $0x1,%eax\n     d38:\t0f b6 c8             \tmovzbl %al,%ecx\n     d3b:\t4c 8b 4d c0          \tmov    -0x40(%rbp),%r9\n     d3f:\t4c 8b 45 c8          \tmov    -0x38(%rbp),%r8\n     d43:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n     d47:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n     d4b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     d4f:\t48 83 ec 08          \tsub    $0x8,%rsp\n     d53:\t8b 7d 10             \tmov    0x10(%rbp),%edi\n     d56:\t57                   \tpush   %rdi\n     d57:\t48 89 c7             \tmov    %rax,%rdi\n     d5a:\te8 60 01 00 00       \tcall   ebf <Dec_GraphPrint_rec>\n     d5f:\t48 83 c4 10          \tadd    $0x10,%rsp\n     d63:\te9 55 01 00 00       \tjmp    ebd <Dec_GraphPrint2_rec+0x359>\n     d68:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     d6c:\t48 89 c6             \tmov    %rax,%rsi\n     d6f:\tbf 28 00 00 00       \tmov    $0x28,%edi\n     d74:\te8 00 00 00 00       \tcall   d79 <Dec_GraphPrint2_rec+0x215>\n     d79:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     d7d:\t8b 00                \tmov    (%rax),%eax\n     d7f:\t8d 50 01             \tlea    0x1(%rax),%edx\n     d82:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     d86:\t89 10                \tmov    %edx,(%rax)\n     d88:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     d8c:\t0f b6 40 12          \tmovzbl 0x12(%rax),%eax\n     d90:\t83 e0 01             \tand    $0x1,%eax\n     d93:\t0f b6 c8             \tmovzbl %al,%ecx\n     d96:\t4c 8b 4d c0          \tmov    -0x40(%rbp),%r9\n     d9a:\t4c 8b 45 c8          \tmov    -0x38(%rbp),%r8\n     d9e:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n     da2:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n     da6:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     daa:\t48 83 ec 08          \tsub    $0x8,%rsp\n     dae:\t8b 7d 10             \tmov    0x10(%rbp),%edi\n     db1:\t57                   \tpush   %rdi\n     db2:\t48 89 c7             \tmov    %rax,%rdi\n     db5:\te8 05 01 00 00       \tcall   ebf <Dec_GraphPrint_rec>\n     dba:\t48 83 c4 10          \tadd    $0x10,%rsp\n     dbe:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     dc2:\t48 89 c6             \tmov    %rax,%rsi\n     dc5:\tbf 29 00 00 00       \tmov    $0x29,%edi\n     dca:\te8 00 00 00 00       \tcall   dcf <Dec_GraphPrint2_rec+0x26b>\n     dcf:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     dd3:\t8b 00                \tmov    (%rax),%eax\n     dd5:\t8d 50 01             \tlea    0x1(%rax),%edx\n     dd8:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     ddc:\t89 10                \tmov    %edx,(%rax)\n     dde:\te9 da 00 00 00       \tjmp    ebd <Dec_GraphPrint2_rec+0x359>\n     de3:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     de7:\t0f b6 40 11          \tmovzbl 0x11(%rax),%eax\n     deb:\t83 e0 40             \tand    $0x40,%eax\n     dee:\t84 c0                \ttest   %al,%al\n     df0:\t0f 84 ae 00 00 00    \tje     ea4 <Dec_GraphPrint2_rec+0x340>\n     df6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     dfa:\t0f b6 40 11          \tmovzbl 0x11(%rax),%eax\n     dfe:\tc0 e8 07             \tshr    $0x7,%al\n     e01:\t0f b6 c8             \tmovzbl %al,%ecx\n     e04:\t4c 8b 4d c0          \tmov    -0x40(%rbp),%r9\n     e08:\t4c 8b 45 c8          \tmov    -0x38(%rbp),%r8\n     e0c:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n     e10:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n     e14:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     e18:\t48 83 ec 08          \tsub    $0x8,%rsp\n     e1c:\t8b 7d 10             \tmov    0x10(%rbp),%edi\n     e1f:\t57                   \tpush   %rdi\n     e20:\t48 89 c7             \tmov    %rax,%rdi\n     e23:\te8 97 00 00 00       \tcall   ebf <Dec_GraphPrint_rec>\n     e28:\t48 83 c4 10          \tadd    $0x10,%rsp\n     e2c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     e30:\t48 89 c1             \tmov    %rax,%rcx\n     e33:\tba 03 00 00 00       \tmov    $0x3,%edx\n     e38:\tbe 01 00 00 00       \tmov    $0x1,%esi\n     e3d:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     e42:\te8 00 00 00 00       \tcall   e47 <Dec_GraphPrint2_rec+0x2e3>\n     e47:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     e4b:\t8b 00                \tmov    (%rax),%eax\n     e4d:\t8d 50 03             \tlea    0x3(%rax),%edx\n     e50:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     e54:\t89 10                \tmov    %edx,(%rax)\n     e56:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n     e5a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     e5e:\t8b 55 10             \tmov    0x10(%rbp),%edx\n     e61:\t48 89 ce             \tmov    %rcx,%rsi\n     e64:\t48 89 c7             \tmov    %rax,%rdi\n     e67:\te8 de 04 00 00       \tcall   134a <Dec_GraphPrintUpdatePos>\n     e6c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     e70:\t0f b6 40 12          \tmovzbl 0x12(%rax),%eax\n     e74:\t83 e0 01             \tand    $0x1,%eax\n     e77:\t0f b6 c8             \tmovzbl %al,%ecx\n     e7a:\t4c 8b 4d c0          \tmov    -0x40(%rbp),%r9\n     e7e:\t4c 8b 45 c8          \tmov    -0x38(%rbp),%r8\n     e82:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n     e86:\t48 8b 75 e0          \tmov    -0x20(%rbp),%rsi\n     e8a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     e8e:\t48 83 ec 08          \tsub    $0x8,%rsp\n     e92:\t8b 7d 10             \tmov    0x10(%rbp),%edi\n     e95:\t57                   \tpush   %rdi\n     e96:\t48 89 c7             \tmov    %rax,%rdi\n     e99:\te8 21 00 00 00       \tcall   ebf <Dec_GraphPrint_rec>\n     e9e:\t48 83 c4 10          \tadd    $0x10,%rsp\n     ea2:\teb 19                \tjmp    ebd <Dec_GraphPrint2_rec+0x359>\n     ea4:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n     ea9:\tba 9d 00 00 00       \tmov    $0x9d,%edx\n     eae:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     eb3:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     eb8:\te8 00 00 00 00       \tcall   ebd <Dec_GraphPrint2_rec+0x359>\n     ebd:\tc9                   \tleave  \n     ebe:\tc3                   \tret    ", "code_s": "void Dec_GraphPrint2_rec(FILE *param_1, undefined8 <span class=\"supfact\">param_2</span>,\n                         uint *param_3, undefined4 <span class=\"supfact\">param_4</span>,\n                         undefined8 param_5, int *<span class=\"supfact\">param_6</span>,\n                         undefined4 <span class=\"supfact\">param_7</span>) {\n  int iVar1;\n  undefined4 uVar2;\n  long lVar3;\n  long lVar4;\n  lVar3 = FUN_001007c9(<span class=\"supfact\">param_2</span>, *param_3 >> Number & Number);\n  lVar4 =\n      FUN_001007c9(<span class=\"supfact\">param_2</span>, param_3[Number] >> Number & Number);\n  iVar1 = FUN_00100882(<span class=\"supfact\">param_2</span>, param_3);\n  if (iVar1 == Number) {\n    if ((*(byte *)((long)param_3 + Number) & Number) == Number) {\n      if ((*(byte *)(lVar3 + Number) & Number) == Number) {\n        FUN_00100ebf(param_1, <span class=\"supfact\">param_2</span>, lVar3,\n                     *(byte *)((long)param_3 + Number) >> Number, param_5,\n                     <span class=\"supfact\">param_6</span>, <span class=\"supfact\">param_7</span>);\n      } else {\n        fputc(Number, param_1);\n        *<span class=\"supfact\">param_6</span> = *<span class=\"supfact\">param_6</span> + Number;\n        FUN_00100ebf(param_1, <span class=\"supfact\">param_2</span>, lVar3,\n                     *(byte *)((long)param_3 + Number) >> Number, param_5,\n                     <span class=\"supfact\">param_6</span>, <span class=\"supfact\">param_7</span>);\n        fputc(Number, param_1);\n        *<span class=\"supfact\">param_6</span> = *<span class=\"supfact\">param_6</span> + Number;\n      }\n      fputc(Number, param_1);\n      *<span class=\"supfact\">param_6</span> = *<span class=\"supfact\">param_6</span> + Number;\n      FUN_0010134a(param_1, <span class=\"supfact\">param_6</span>, <span class=\"supfact\">param_7</span>);\n      if ((*(byte *)(lVar4 + Number) & Number) == Number) {\n        FUN_00100ebf(param_1, <span class=\"supfact\">param_2</span>, lVar4,\n                     *(byte *)((long)param_3 + Number) & Number, param_5,\n                     <span class=\"supfact\">param_6</span>, <span class=\"supfact\">param_7</span>);\n      } else {\n        fputc(Number, param_1);\n        *<span class=\"supfact\">param_6</span> = *<span class=\"supfact\">param_6</span> + Number;\n        FUN_00100ebf(param_1, <span class=\"supfact\">param_2</span>, lVar4,\n                     *(byte *)((long)param_3 + Number) & Number, param_5,\n                     <span class=\"supfact\">param_6</span>, <span class=\"supfact\">param_7</span>);\n        fputc(Number, param_1);\n        *<span class=\"supfact\">param_6</span> = *<span class=\"supfact\">param_6</span> + Number;\n      }\n    } else {\n      if ((*(byte *)((long)param_3 + Number) & Number) == Number) {\n        __assert_fail(String, String, Number, String);\n      }\n      FUN_00100ebf(param_1, <span class=\"supfact\">param_2</span>, lVar3,\n                   *(byte *)((long)param_3 + Number) >> Number, param_5,\n                   <span class=\"supfact\">param_6</span>, <span class=\"supfact\">param_7</span>);\n      fwrite(&DAT_001014c9, Number, Number, param_1);\n      *<span class=\"supfact\">param_6</span> = *<span class=\"supfact\">param_6</span> + Number;\n      FUN_0010134a(param_1, <span class=\"supfact\">param_6</span>, <span class=\"supfact\">param_7</span>);\n      FUN_00100ebf(param_1, <span class=\"supfact\">param_2</span>, lVar4,\n                   *(byte *)((long)param_3 + Number) & Number, param_5,\n                   <span class=\"supfact\">param_6</span>, <span class=\"supfact\">param_7</span>);\n    }\n  } else {\n    uVar2 = FUN_00100824(<span class=\"supfact\">param_2</span>, param_3);\n    iVar1 = FUN_001012d7(param_1, uVar2, <span class=\"supfact\">param_4</span>, param_5);\n    *<span class=\"supfact\">param_6</span> = *<span class=\"supfact\">param_6</span> + iVar1;\n  }\n  return;\n}", "code_t": "void Dec_GraphPrint2_rec(FILE *pFile, Dec_Graph_t *<span class=\"supfact\">pGraph</span>,\n                         Dec_Node_t *pNode, int <span class=\"supfact\">fCompl</span>,\n                         char **pNamesIn, int *<span class=\"supfact\">pPos</span>,\n                         int <span class=\"supfact\">LitSizeMax</span>) {\n  int iVar1;\n  Dec_Node_t *pNode_00;\n  Dec_Node_t *pNode_01;\n  int *<span class=\"supfact\">pPos</span> - local;\n  char **pNamesIn - local;\n  int <span class=\"supfact\">fCompl</span> - local;\n  Dec_Node_t *pNode - local;\n  Dec_Graph_t *<span class=\"supfact\">pGraph</span> - local;\n  FILE *pFile - local;\n  Dec_Node_t *pNode1;\n  Dec_Node_t *pNode0;\n  pNode_00 = Dec_GraphNode(<span class=\"supfact\">pGraph</span>,\n                           (uint)pNode->eEdge0 >> Number & Number);\n  pNode_01 = Dec_GraphNode(<span class=\"supfact\">pGraph</span>,\n                           (uint)pNode->eEdge1 >> Number & Number);\n  iVar1 = Dec_GraphNodeIsVar(<span class=\"supfact\">pGraph</span>, pNode);\n  if (iVar1 == Number) {\n    if ((pNode->field_0x11 & Number) == Number) {\n      if ((pNode_00->field_0x11 & Number) == Number) {\n        Dec_GraphPrint_rec(pFile, <span class=\"supfact\">pGraph</span>, pNode_00,\n                           (uint)((byte)pNode->field_0x11 >> Number), pNamesIn,\n                           <span class=\"supfact\">pPos</span>, <span class=\"supfact\">LitSizeMax</span>);\n      } else {\n        fputc(Number, (FILE *)pFile);\n        *<span class=\"supfact\">pPos</span> = *<span class=\"supfact\">pPos</span> + Number;\n        Dec_GraphPrint_rec(pFile, <span class=\"supfact\">pGraph</span>, pNode_00,\n                           (uint)((byte)pNode->field_0x11 >> Number), pNamesIn,\n                           <span class=\"supfact\">pPos</span>, <span class=\"supfact\">LitSizeMax</span>);\n        fputc(Number, (FILE *)pFile);\n        *<span class=\"supfact\">pPos</span> = *<span class=\"supfact\">pPos</span> + Number;\n      }\n      fputc(Number, (FILE *)pFile);\n      *<span class=\"supfact\">pPos</span> = *<span class=\"supfact\">pPos</span> + Number;\n      Dec_GraphPrintUpdatePos(pFile, <span class=\"supfact\">pPos</span>,\n                              <span class=\"supfact\">LitSizeMax</span>);\n      if ((pNode_01->field_0x11 & Number) == Number) {\n        Dec_GraphPrint_rec(pFile, <span class=\"supfact\">pGraph</span>, pNode_01,\n                           (uint)(pNode->field_0x12 & Number), pNamesIn,\n                           <span class=\"supfact\">pPos</span>, <span class=\"supfact\">LitSizeMax</span>);\n      } else {\n        fputc(Number, (FILE *)pFile);\n        *<span class=\"supfact\">pPos</span> = *<span class=\"supfact\">pPos</span> + Number;\n        Dec_GraphPrint_rec(pFile, <span class=\"supfact\">pGraph</span>, pNode_01,\n                           (uint)(pNode->field_0x12 & Number), pNamesIn,\n                           <span class=\"supfact\">pPos</span>, <span class=\"supfact\">LitSizeMax</span>);\n        fputc(Number, (FILE *)pFile);\n        *<span class=\"supfact\">pPos</span> = *<span class=\"supfact\">pPos</span> + Number;\n      }\n    } else {\n      if ((pNode->field_0x11 & Number) == Number) {\n        __assert_fail(String, String, Number, String);\n      }\n      Dec_GraphPrint_rec(pFile, <span class=\"supfact\">pGraph</span>, pNode_00,\n                         (uint)((byte)pNode->field_0x11 >> Number), pNamesIn,\n                         <span class=\"supfact\">pPos</span>, <span class=\"supfact\">LitSizeMax</span>);\n      fwrite(&DAT_001014c9, Number, Number, (FILE *)pFile);\n      *<span class=\"supfact\">pPos</span> = *<span class=\"supfact\">pPos</span> + Number;\n      Dec_GraphPrintUpdatePos(pFile, <span class=\"supfact\">pPos</span>,\n                              <span class=\"supfact\">LitSizeMax</span>);\n      Dec_GraphPrint_rec(pFile, <span class=\"supfact\">pGraph</span>, pNode_01,\n                         (uint)(pNode->field_0x12 & Number), pNamesIn,\n                         <span class=\"supfact\">pPos</span>, <span class=\"supfact\">LitSizeMax</span>);\n    }\n  } else {\n    iVar1 = Dec_GraphNodeInt(<span class=\"supfact\">pGraph</span>, pNode);\n    iVar1 = Dec_GraphPrintGetLeafName(pFile, iVar1, <span class=\"supfact\">fCompl</span>,\n                                      pNamesIn);\n    *<span class=\"supfact\">pPos</span> = *<span class=\"supfact\">pPos</span> + iVar1;\n  }\n  return;\n}", "var": [{"name": "param_2", "type": "int * *", "pred_name": "__unk__", "ref_name": "pGraph", "ref_type": "Dec_Graph_t * *"}, {"name": "param_4", "type": "int", "pred_name": "__unk__", "ref_name": "fCompl", "ref_type": "int"}, {"name": "param_6", "type": "int * *", "pred_name": "__unk__", "ref_name": "pPos", "ref_type": "int * *"}, {"name": "param_7", "type": "int", "pred_name": "__unk__", "ref_name": "LitSizeMax", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "qiupq", "repo_name": "ffmpeg", "path": "qiupq/ffmpeg/21b57fba34a5621901c137739a252b406aa72d59ab1b75281ab85bb6148fefbf", "path_in_repo": "qiupq/ffmpeg//libavformat/mux.o", "objdump": "00000000000040bc <av_write_trailer>:\n    40bc:\t48 83 ec 78          \tsub    $0x78,%rsp\n    40c0:\t48 89 7c 24 08       \tmov    %rdi,0x8(%rsp)\n    40c5:\t48 8d 74 24 10       \tlea    0x10(%rsp),%rsi\n    40ca:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    40cf:\tb9 01 00 00 00       \tmov    $0x1,%ecx\n    40d4:\tba 00 00 00 00       \tmov    $0x0,%edx\n    40d9:\t48 89 c7             \tmov    %rax,%rdi\n    40dc:\te8 06 fc ff ff       \tcall   3ce7 <interleave_packet>\n    40e1:\t89 44 24 6c          \tmov    %eax,0x6c(%rsp)\n    40e5:\t83 7c 24 6c 00       \tcmpl   $0x0,0x6c(%rsp)\n    40ea:\t0f 88 8c 00 00 00    \tjs     417c <av_write_trailer+0xc0>\n    40f0:\t83 7c 24 6c 00       \tcmpl   $0x0,0x6c(%rsp)\n    40f5:\t0f 84 84 00 00 00    \tje     417f <av_write_trailer+0xc3>\n    40fb:\t48 8d 54 24 10       \tlea    0x10(%rsp),%rdx\n    4100:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    4105:\t48 89 d6             \tmov    %rdx,%rsi\n    4108:\t48 89 c7             \tmov    %rax,%rdi\n    410b:\te8 20 e0 ff ff       \tcall   2130 <write_packet>\n    4110:\t89 44 24 6c          \tmov    %eax,0x6c(%rsp)\n    4114:\t83 7c 24 6c 00       \tcmpl   $0x0,0x6c(%rsp)\n    4119:\t78 26                \tjs     4141 <av_write_trailer+0x85>\n    411b:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    4120:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    4124:\t8b 54 24 34          \tmov    0x34(%rsp),%edx\n    4128:\t48 63 d2             \tmovslq %edx,%rdx\n    412b:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    412f:\t48 01 d0             \tadd    %rdx,%rax\n    4132:\t48 8b 00             \tmov    (%rax),%rax\n    4135:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n    4139:\t48 83 c2 01          \tadd    $0x1,%rdx\n    413d:\t48 89 50 30          \tmov    %rdx,0x30(%rax)\n    4141:\t48 8d 44 24 10       \tlea    0x10(%rsp),%rax\n    4146:\t48 89 c7             \tmov    %rax,%rdi\n    4149:\te8 00 00 00 00       \tcall   414e <av_write_trailer+0x92>\n    414e:\t83 7c 24 6c 00       \tcmpl   $0x0,0x6c(%rsp)\n    4153:\t78 2d                \tjs     4182 <av_write_trailer+0xc6>\n    4155:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    415a:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    415e:\t48 85 c0             \ttest   %rax,%rax\n    4161:\t0f 84 5e ff ff ff    \tje     40c5 <av_write_trailer+0x9>\n    4167:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    416c:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    4170:\t8b 40 78             \tmov    0x78(%rax),%eax\n    4173:\t85 c0                \ttest   %eax,%eax\n    4175:\t75 0e                \tjne    4185 <av_write_trailer+0xc9>\n    4177:\te9 49 ff ff ff       \tjmp    40c5 <av_write_trailer+0x9>\n    417c:\t90                   \tnop\n    417d:\teb 07                \tjmp    4186 <av_write_trailer+0xca>\n    417f:\t90                   \tnop\n    4180:\teb 04                \tjmp    4186 <av_write_trailer+0xca>\n    4182:\t90                   \tnop\n    4183:\teb 01                \tjmp    4186 <av_write_trailer+0xca>\n    4185:\t90                   \tnop\n    4186:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    418b:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    418f:\t48 8b 40 60          \tmov    0x60(%rax),%rax\n    4193:\t48 85 c0             \ttest   %rax,%rax\n    4196:\t74 7c                \tje     4214 <av_write_trailer+0x158>\n    4198:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    419d:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    41a1:\t8b 40 2c             \tmov    0x2c(%rax),%eax\n    41a4:\t83 e0 01             \tand    $0x1,%eax\n    41a7:\t85 c0                \ttest   %eax,%eax\n    41a9:\t75 2e                \tjne    41d9 <av_write_trailer+0x11d>\n    41ab:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    41b0:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    41b4:\t48 85 c0             \ttest   %rax,%rax\n    41b7:\t74 20                \tje     41d9 <av_write_trailer+0x11d>\n    41b9:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    41be:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    41c2:\tba 04 00 00 00       \tmov    $0x4,%edx\n    41c7:\t48 be 00 00 00 00 00 \tmovabs $0x8000000000000000,%rsi\n    41ce:\t00 00 80 \n    41d1:\t48 89 c7             \tmov    %rax,%rdi\n    41d4:\te8 00 00 00 00       \tcall   41d9 <av_write_trailer+0x11d>\n    41d9:\t83 7c 24 6c 00       \tcmpl   $0x0,0x6c(%rsp)\n    41de:\t78 1d                \tjs     41fd <av_write_trailer+0x141>\n    41e0:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    41e5:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    41e9:\t48 8b 50 60          \tmov    0x60(%rax),%rdx\n    41ed:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    41f2:\t48 89 c7             \tmov    %rax,%rdi\n    41f5:\tff d2                \tcall   *%rdx\n    41f7:\t89 44 24 6c          \tmov    %eax,0x6c(%rsp)\n    41fb:\teb 17                \tjmp    4214 <av_write_trailer+0x158>\n    41fd:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    4202:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    4206:\t48 8b 50 60          \tmov    0x60(%rax),%rdx\n    420a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    420f:\t48 89 c7             \tmov    %rax,%rdi\n    4212:\tff d2                \tcall   *%rdx\n    4214:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    4219:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    421d:\t48 8b 80 b8 00 00 00 \tmov    0xb8(%rax),%rax\n    4224:\t48 85 c0             \ttest   %rax,%rax\n    4227:\t74 1a                \tje     4243 <av_write_trailer+0x187>\n    4229:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    422e:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    4232:\t48 8b 90 b8 00 00 00 \tmov    0xb8(%rax),%rdx\n    4239:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    423e:\t48 89 c7             \tmov    %rax,%rdi\n    4241:\tff d2                \tcall   *%rdx\n    4243:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    4248:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    424f:\tc7 40 74 00 00 00 00 \tmovl   $0x0,0x74(%rax)\n    4256:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n    425b:\t48 8b 92 48 05 00 00 \tmov    0x548(%rdx),%rdx\n    4262:\t8b 40 74             \tmov    0x74(%rax),%eax\n    4265:\t89 42 70             \tmov    %eax,0x70(%rdx)\n    4268:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    426d:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    4271:\t48 85 c0             \ttest   %rax,%rax\n    4274:\t74 11                \tje     4287 <av_write_trailer+0x1cb>\n    4276:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    427b:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    427f:\t48 89 c7             \tmov    %rax,%rdi\n    4282:\te8 00 00 00 00       \tcall   4287 <av_write_trailer+0x1cb>\n    4287:\t83 7c 24 6c 00       \tcmpl   $0x0,0x6c(%rsp)\n    428c:\t75 25                \tjne    42b3 <av_write_trailer+0x1f7>\n    428e:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    4293:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    4297:\t48 85 c0             \ttest   %rax,%rax\n    429a:\t74 0e                \tje     42aa <av_write_trailer+0x1ee>\n    429c:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    42a1:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    42a5:\t8b 40 78             \tmov    0x78(%rax),%eax\n    42a8:\teb 05                \tjmp    42af <av_write_trailer+0x1f3>\n    42aa:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    42af:\t89 44 24 6c          \tmov    %eax,0x6c(%rsp)\n    42b3:\tc7 44 24 68 00 00 00 \tmovl   $0x0,0x68(%rsp)\n    42ba:\t00 \n    42bb:\teb 53                \tjmp    4310 <av_write_trailer+0x254>\n    42bd:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    42c2:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    42c6:\t8b 54 24 68          \tmov    0x68(%rsp),%edx\n    42ca:\t48 63 d2             \tmovslq %edx,%rdx\n    42cd:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    42d1:\t48 01 d0             \tadd    %rdx,%rax\n    42d4:\t48 8b 00             \tmov    (%rax),%rax\n    42d7:\t48 83 c0 10          \tadd    $0x10,%rax\n    42db:\t48 89 c7             \tmov    %rax,%rdi\n    42de:\te8 00 00 00 00       \tcall   42e3 <av_write_trailer+0x227>\n    42e3:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    42e8:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    42ec:\t8b 54 24 68          \tmov    0x68(%rsp),%edx\n    42f0:\t48 63 d2             \tmovslq %edx,%rdx\n    42f3:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    42f7:\t48 01 d0             \tadd    %rdx,%rax\n    42fa:\t48 8b 00             \tmov    (%rax),%rax\n    42fd:\t48 05 c8 01 00 00    \tadd    $0x1c8,%rax\n    4303:\t48 89 c7             \tmov    %rax,%rdi\n    4306:\te8 00 00 00 00       \tcall   430b <av_write_trailer+0x24f>\n    430b:\t83 44 24 68 01       \taddl   $0x1,0x68(%rsp)\n    4310:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    4315:\t8b 50 2c             \tmov    0x2c(%rax),%edx\n    4318:\t8b 44 24 68          \tmov    0x68(%rsp),%eax\n    431c:\t39 c2                \tcmp    %eax,%edx\n    431e:\t77 9d                \tja     42bd <av_write_trailer+0x201>\n    4320:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    4325:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    4329:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n    432d:\t48 85 c0             \ttest   %rax,%rax\n    4330:\t74 11                \tje     4343 <av_write_trailer+0x287>\n    4332:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    4337:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n    433b:\t48 89 c7             \tmov    %rax,%rdi\n    433e:\te8 00 00 00 00       \tcall   4343 <av_write_trailer+0x287>\n    4343:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    4348:\t48 83 c0 18          \tadd    $0x18,%rax\n    434c:\t48 89 c7             \tmov    %rax,%rdi\n    434f:\te8 00 00 00 00       \tcall   4354 <av_write_trailer+0x298>\n    4354:\t8b 44 24 6c          \tmov    0x6c(%rsp),%eax\n    4358:\t48 83 c4 78          \tadd    $0x78,%rsp\n    435c:\tc3                   \tret    ", "code_s": "int av_write_trailer(long <span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  undefined <span class=\"supfact\">local_68</span>[Number];\n  int <span class=\"supfact\">local_44</span>;\n  uint <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  while ((<span class=\"supfact\">local_c</span> =\n              FUN_00103ce7(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_68</span>,\n                           Number, Number),\n          -Number < <span class=\"supfact\">local_c</span> &&\n              (<span class=\"supfact\">local_c</span> != Number))) {\n    <span class=\"supfact\">local_c</span> =\n        FUN_00102130(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_68</span>);\n    if (-Number < <span class=\"supfact\">local_c</span>) {\n      lVar1 = *(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                        (long)<span class=\"supfact\">local_44</span> * Number);\n      *(long *)(lVar1 + Number) = *(long *)(lVar1 + Number) + Number;\n    }\n    av_packet_unref(<span class=\"supfact\">local_68</span>);\n    if ((<span class=\"supfact\">local_c</span> < Number) ||\n        ((*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number &&\n          (*(int *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) !=\n           Number))))\n      break;\n  }\n  if (*(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) !=\n      Number) {\n    if (((*(uint *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) &\n          Number) == Number) &&\n        (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number)) {\n      avio_write_marker(*(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n                        Number, Number);\n    }\n    if (<span class=\"supfact\">local_c</span> < Number) {\n      (**(code **)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number))(\n          <span class=\"supfact\">param_1</span>);\n    } else {\n      <span class=\"supfact\">local_c</span> =\n          (**(code **)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number))(\n              <span class=\"supfact\">param_1</span>);\n    }\n  }\n  if (*(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) !=\n      Number) {\n    (**(code **)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number))(\n        <span class=\"supfact\">param_1</span>);\n  }\n  lVar1 = *(long *)(<span class=\"supfact\">param_1</span> + Number);\n  *(undefined4 *)(lVar1 + Number) = Number;\n  *(undefined4 *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) =\n      *(undefined4 *)(lVar1 + Number);\n  if (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n    avio_flush(*(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n  }\n  if (<span class=\"supfact\">local_c</span> == Number) {\n    if (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n      <span class=\"supfact\">local_c</span> = Number;\n    } else {\n      <span class=\"supfact\">local_c</span> =\n          *(int *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number);\n    }\n  }\n  for (<span class=\"supfact\">local_10</span> = Number;\n       <span class=\"supfact\">local_10</span> < *(uint *)(<span class=\"supfact\">param_1</span> + Number);\n       <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n    av_freep(*(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                       (long)(int)<span class=\"supfact\">local_10</span> * Number) +\n             Number);\n    av_freep(*(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                       (long)(int)<span class=\"supfact\">local_10</span> * Number) +\n             Number);\n  }\n  if (*(long *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) + Number) !=\n      Number) {\n    av_opt_free(*(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n  }\n  av_freep(<span class=\"supfact\">param_1</span> + Number);\n  return <span class=\"supfact\">local_c</span>;\n}", "code_t": "int av_write_trailer(AVFormatContext *<span class=\"supfact\">s</span>) {\n  AVFormatInternal *pAVar1;\n  AVFormatContext *<span class=\"supfact\">s</span> - local;\n  AVPacket <span class=\"supfact\">pkt</span>;\n  int <span class=\"supfact\">i</span>;\n  int <span class=\"supfact\">ret</span>;\n  while ((<span class=\"supfact\">ret</span> =\n              interleave_packet(<span class=\"supfact\">s</span>, &<span class=\"supfact\">pkt</span>,\n                                (AVPacket *)Number, Number),\n          -Number < <span class=\"supfact\">ret</span> && (<span class=\"supfact\">ret</span> != Number))) {\n    <span class=\"supfact\">ret</span> = write_packet(<span class=\"supfact\">s</span>, &<span class=\"supfact\">pkt</span>);\n    if (-Number < <span class=\"supfact\">ret</span>) {\n      <span class=\"supfact\">s</span>->streams[<span class=\"supfact\">pkt</span>.stream_index]->nb_frames =\n          <span class=\"supfact\">s</span>->streams[<span class=\"supfact\">pkt</span>.stream_index]\n              ->nb_frames +\n          Number;\n    }\n    av_packet_unref(&<span class=\"supfact\">pkt</span>);\n    if ((<span class=\"supfact\">ret</span> < Number) ||\n        ((<span class=\"supfact\">s</span>->pb != (AVIOContext *)Number &&\n          (<span class=\"supfact\">s</span>->pb->error != Number))))\n      break;\n  }\n  if (<span class=\"supfact\">s</span>->oformat->write_trailer !=\n      (_func_int_AVFormatContext_ptr *)Number) {\n    if (((<span class=\"supfact\">s</span>->oformat->flags & Number) == Number) &&\n        (<span class=\"supfact\">s</span>->pb != (AVIOContext *)Number)) {\n      avio_write_marker(<span class=\"supfact\">s</span>->pb, Number, Number);\n    }\n    if (<span class=\"supfact\">ret</span> < Number) {\n      (*<span class=\"supfact\">s</span>->oformat->write_trailer)(<span class=\"supfact\">s</span>);\n    } else {\n      <span class=\"supfact\">ret</span> =\n          (*<span class=\"supfact\">s</span>->oformat->write_trailer)(<span class=\"supfact\">s</span>);\n    }\n  }\n  if (<span class=\"supfact\">s</span>->oformat->deinit !=\n      (_func_void_AVFormatContext_ptr *)Number) {\n    (*<span class=\"supfact\">s</span>->oformat->deinit)(<span class=\"supfact\">s</span>);\n  }\n  pAVar1 = <span class=\"supfact\">s</span>->internal;\n  pAVar1->streams_initialized = Number;\n  <span class=\"supfact\">s</span>->internal->initialized = pAVar1->streams_initialized;\n  if (<span class=\"supfact\">s</span>->pb != (AVIOContext *)Number) {\n    avio_flush(<span class=\"supfact\">s</span>->pb);\n  }\n  if (<span class=\"supfact\">ret</span> == Number) {\n    if (<span class=\"supfact\">s</span>->pb == (AVIOContext *)Number) {\n      <span class=\"supfact\">ret</span> = Number;\n    } else {\n      <span class=\"supfact\">ret</span> = <span class=\"supfact\">s</span>->pb->error;\n    }\n  }\n  for (<span class=\"supfact\">i</span> = Number;\n       (uint)<span class=\"supfact\">i</span> < <span class=\"supfact\">s</span>->nb_streams;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    av_freep(&<span class=\"supfact\">s</span>->streams[<span class=\"supfact\">i</span>]->priv_data);\n    av_freep(&<span class=\"supfact\">s</span>->streams[<span class=\"supfact\">i</span>]->index_entries);\n  }\n  if (<span class=\"supfact\">s</span>->oformat->priv_class != (AVClass *)Number) {\n    av_opt_free(<span class=\"supfact\">s</span>->priv_data);\n  }\n  av_freep(&<span class=\"supfact\">s</span>->priv_data);\n  return <span class=\"supfact\">ret</span>;\n}", "var": [{"name": "param_1", "type": "AVPacket * *", "pred_name": "pkt", "ref_name": "s", "ref_type": "AVFormatContext * *"}, {"name": "local_68", "type": "struct GetBitContext { uint8_t * buffer; uint8_t * buffer_end; int index; int size_in_bits; int size_in_bits_plus8; PADDING (4); }", "pred_name": "gb", "ref_name": "pkt", "ref_type": "struct AVPacket { AVBufferRef * buf; int64_t pts; int64_t dts; uint8_t * data; int size; int stream_index; int flags; AVPacketSideData * side_data; int side_data_elems; int64_t duration; int64_t pos; int64_t convergence_duration; PADDING (8); }"}, {"name": "local_44", "type": "int", "pred_name": "__unk__", "ref_name": "", "ref_type": "disappear"}, {"name": "local_10", "type": "int", "pred_name": "flush", "ref_name": "i", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "ret", "ref_name": "ret", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "ystk", "repo_name": "debian-crash", "path": "ystk/debian-crash/93d22e4a057a3113a17af2cddc74b7f000e6e19cf2e4f0358681ff6090ed6fba", "path_in_repo": "ystk/debian-crash//gdb-7.0/libdecnumber/bid/decimal32.o", "objdump": "0000000000000b27 <decimal32ToEngString>:\n b27:\t55                   \tpush   %rbp\n b28:\t48 89 e5             \tmov    %rsp,%rbp\n b2b:\t48 83 ec 20          \tsub    $0x20,%rsp\n b2f:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n b33:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n b37:\t48 8d 55 f0          \tlea    -0x10(%rbp),%rdx\n b3b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n b3f:\t48 89 d6             \tmov    %rdx,%rsi\n b42:\t48 89 c7             \tmov    %rax,%rdi\n b45:\te8 00 00 00 00       \tcall   b4a <decimal32ToEngString+0x23>\n b4a:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n b4e:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n b52:\t48 89 d6             \tmov    %rdx,%rsi\n b55:\t48 89 c7             \tmov    %rax,%rdi\n b58:\te8 00 00 00 00       \tcall   b5d <decimal32ToEngString+0x36>\n b5d:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n b61:\tc9                   \tleave  \n b62:\tc3                   \tret    ", "code_s": "undefined8 decimal32ToEngString(undefined8 param_1,\n                                undefined8 <span class=\"supfact\">param_2</span>) {\n  undefined <span class=\"supfact\">local_18</span>[Number];\n  decimal32ToNumber(param_1, <span class=\"supfact\">local_18</span>);\n  decNumberToEngString(<span class=\"supfact\">local_18</span>, <span class=\"supfact\">param_2</span>);\n  return <span class=\"supfact\">param_2</span>;\n}", "code_t": "char *decimal32ToEngString(decimal32 *d32, char *<span class=\"supfact\">string</span>) {\n  char *<span class=\"supfact\">string</span> - local;\n  decimal32 *d32 - local;\n  decNumber <span class=\"supfact\">dn</span>;\n  decimal32ToNumber(d32, &<span class=\"supfact\">dn</span>);\n  decNumberToEngString(&<span class=\"supfact\">dn</span>, <span class=\"supfact\">string</span>);\n  return <span class=\"supfact\">string</span>;\n}", "var": [{"name": "param_2", "type": "char * *", "pred_name": "string", "ref_name": "string", "ref_type": "char * *"}, {"name": "local_18", "type": "char[16][16]", "pred_name": "buf", "ref_name": "dn", "ref_type": "struct decNumber { int32_t digits; int32_t exponent; uint8_t bits; uint16_t[3] lsu; PADDING (1); }"}], "body_in_train": false}, {"repo_owner": "TimedSDN", "repo_name": "Yuma-Time", "path": "TimedSDN/Yuma-Time/2f1f22cc96da762e89878b0e1eacb480ce838d6a6c927f7e68e6ee1f062a0bf5", "path_in_repo": "TimedSDN/Yuma-Time/netconf/test/lib/output/yang_obj.o", "objdump": "0000000000012ea1 <yang_obj_resolve_xpath_final>:\n   12ea1:\t55                   \tpush   %rbp\n   12ea2:\t48 89 e5             \tmov    %rsp,%rbp\n   12ea5:\t53                   \tpush   %rbx\n   12ea6:\t48 83 ec 48          \tsub    $0x48,%rsp\n   12eaa:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n   12eae:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n   12eb2:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n   12eb6:\t48 89 4d b0          \tmov    %rcx,-0x50(%rbp)\n   12eba:\tc7 45 e0 00 00 00 00 \tmovl   $0x0,-0x20(%rbp)\n   12ec1:\tc7 45 e4 00 00 00 00 \tmovl   $0x0,-0x1c(%rbp)\n   12ec8:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n   12ecc:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n   12ed0:\t48 39 45 b0          \tcmp    %rax,-0x50(%rbp)\n   12ed4:\t74 0a                \tje     12ee0 <yang_obj_resolve_xpath_final+0x3f>\n   12ed6:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n   12eda:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n   12ede:\teb 05                \tjmp    12ee5 <yang_obj_resolve_xpath_final+0x44>\n   12ee0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   12ee5:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   12ee9:\te9 1e 01 00 00       \tjmp    1300c <yang_obj_resolve_xpath_final+0x16b>\n   12eee:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   12ef2:\t48 89 c7             \tmov    %rax,%rdi\n   12ef5:\te8 00 00 00 00       \tcall   12efa <yang_obj_resolve_xpath_final+0x59>\n   12efa:\t84 c0                \ttest   %al,%al\n   12efc:\t0f 84 e6 00 00 00    \tje     12fe8 <yang_obj_resolve_xpath_final+0x147>\n   12f02:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   12f06:\t48 89 c7             \tmov    %rax,%rdi\n   12f09:\te8 00 00 00 00       \tcall   12f0e <yang_obj_resolve_xpath_final+0x6d>\n   12f0e:\t83 f8 03             \tcmp    $0x3,%eax\n   12f11:\t0f 84 d1 00 00 00    \tje     12fe8 <yang_obj_resolve_xpath_final+0x147>\n   12f17:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   12f1b:\t48 89 c7             \tmov    %rax,%rdi\n   12f1e:\te8 00 00 00 00       \tcall   12f23 <yang_obj_resolve_xpath_final+0x82>\n   12f23:\t84 c0                \ttest   %al,%al\n   12f25:\t74 70                \tje     12f97 <yang_obj_resolve_xpath_final+0xf6>\n   12f27:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   12f2b:\t48 89 c7             \tmov    %rax,%rdi\n   12f2e:\te8 00 00 00 00       \tcall   12f33 <yang_obj_resolve_xpath_final+0x92>\n   12f33:\t48 85 c0             \ttest   %rax,%rax\n   12f36:\t74 5f                \tje     12f97 <yang_obj_resolve_xpath_final+0xf6>\n   12f38:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   12f3c:\t48 89 c7             \tmov    %rax,%rdi\n   12f3f:\te8 00 00 00 00       \tcall   12f44 <yang_obj_resolve_xpath_final+0xa3>\n   12f44:\t48 89 c3             \tmov    %rax,%rbx\n   12f47:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   12f4b:\t48 89 c7             \tmov    %rax,%rdi\n   12f4e:\te8 00 00 00 00       \tcall   12f53 <yang_obj_resolve_xpath_final+0xb2>\n   12f53:\t48 89 c2             \tmov    %rax,%rdx\n   12f56:\t48 8b 4d e8          \tmov    -0x18(%rbp),%rcx\n   12f5a:\t48 8b 75 b8          \tmov    -0x48(%rbp),%rsi\n   12f5e:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n   12f62:\t49 89 c8             \tmov    %rcx,%r8\n   12f65:\t48 89 d9             \tmov    %rbx,%rcx\n   12f68:\t48 89 c7             \tmov    %rax,%rdi\n   12f6b:\te8 00 00 00 00       \tcall   12f70 <yang_obj_resolve_xpath_final+0xcf>\n   12f70:\t89 45 e0             \tmov    %eax,-0x20(%rbp)\n   12f73:\t83 7d e0 00          \tcmpl   $0x0,-0x20(%rbp)\n   12f77:\t74 6f                \tje     12fe8 <yang_obj_resolve_xpath_final+0x147>\n   12f79:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n   12f7c:\t89 c7                \tmov    %eax,%edi\n   12f7e:\te8 7d d0 fe ff       \tcall   0 <terminate_parse>\n   12f83:\t84 c0                \ttest   %al,%al\n   12f85:\t74 08                \tje     12f8f <yang_obj_resolve_xpath_final+0xee>\n   12f87:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n   12f8a:\te9 8b 00 00 00       \tjmp    1301a <yang_obj_resolve_xpath_final+0x179>\n   12f8f:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n   12f92:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n   12f95:\teb 51                \tjmp    12fe8 <yang_obj_resolve_xpath_final+0x147>\n   12f97:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   12f9b:\t48 89 c7             \tmov    %rax,%rdi\n   12f9e:\te8 00 00 00 00       \tcall   12fa3 <yang_obj_resolve_xpath_final+0x102>\n   12fa3:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n   12fa7:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n   12fac:\t74 3a                \tje     12fe8 <yang_obj_resolve_xpath_final+0x147>\n   12fae:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n   12fb2:\t48 8b 55 b8          \tmov    -0x48(%rbp),%rdx\n   12fb6:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n   12fba:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n   12fbe:\t48 89 c7             \tmov    %rax,%rdi\n   12fc1:\te8 db fe ff ff       \tcall   12ea1 <yang_obj_resolve_xpath_final>\n   12fc6:\t89 45 e0             \tmov    %eax,-0x20(%rbp)\n   12fc9:\t83 7d e0 00          \tcmpl   $0x0,-0x20(%rbp)\n   12fcd:\t74 19                \tje     12fe8 <yang_obj_resolve_xpath_final+0x147>\n   12fcf:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n   12fd2:\t89 c7                \tmov    %eax,%edi\n   12fd4:\te8 27 d0 fe ff       \tcall   0 <terminate_parse>\n   12fd9:\t84 c0                \ttest   %al,%al\n   12fdb:\t74 05                \tje     12fe2 <yang_obj_resolve_xpath_final+0x141>\n   12fdd:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n   12fe0:\teb 38                \tjmp    1301a <yang_obj_resolve_xpath_final+0x179>\n   12fe2:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n   12fe5:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n   12fe8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   12fec:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n   12ff0:\t0f b7 00             \tmovzwl (%rax),%eax\n   12ff3:\t66 3d 7d 16          \tcmp    $0x167d,%ax\n   12ff7:\t75 0a                \tjne    13003 <yang_obj_resolve_xpath_final+0x162>\n   12ff9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   12ffd:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n   13001:\teb 05                \tjmp    13008 <yang_obj_resolve_xpath_final+0x167>\n   13003:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   13008:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   1300c:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n   13011:\t0f 85 d7 fe ff ff    \tjne    12eee <yang_obj_resolve_xpath_final+0x4d>\n   13017:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n   1301a:\t48 83 c4 48          \tadd    $0x48,%rsp\n   1301e:\t5b                   \tpop    %rbx\n   1301f:\t5d                   \tpop    %rbp\n   13020:\tc3                   \tret    ", "code_s": "int yang_obj_resolve_xpath_final(undefined8 param_1,\n                                 undefined8 <span class=\"supfact\">param_2</span>,\n                                 undefined8 param_3,\n                                 long <span class=\"supfact\">param_4</span>) {\n  char <span class=\"supfact\">cVar1</span>;\n  int iVar2;\n  long lVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  int <span class=\"supfact\">local_24</span>;\n  long <span class=\"supfact\">local_20</span>;\n  <span class=\"supfact\">local_24</span> = Number;\n  if (<span class=\"supfact\">param_4</span> == *(long *)(<span class=\"supfact\">param_4</span> + Number)) {\n    <span class=\"supfact\">local_20</span> = Number;\n  } else {\n    <span class=\"supfact\">local_20</span> = *(long *)(<span class=\"supfact\">param_4</span> + Number);\n  }\n  do {\n    if (<span class=\"supfact\">local_20</span> == Number) {\n      return <span class=\"supfact\">local_24</span>;\n    }\n    <span class=\"supfact\">cVar1</span> = obj_has_name(<span class=\"supfact\">local_20</span>);\n    if ((<span class=\"supfact\">cVar1</span> != String) &&\n        (iVar2 = obj_get_status(<span class=\"supfact\">local_20</span>), iVar2 != Number)) {\n      <span class=\"supfact\">cVar1</span> = obj_is_leafy(<span class=\"supfact\">local_20</span>);\n      if ((<span class=\"supfact\">cVar1</span> == String) ||\n          (lVar3 = obj_get_default(<span class=\"supfact\">local_20</span>),\n           lVar3 == Number)) {\n        lVar3 = obj_get_datadefQ(<span class=\"supfact\">local_20</span>);\n        if ((lVar3 != Number) &&\n            (iVar2 = yang_obj_resolve_xpath_final(\n                 param_1, <span class=\"supfact\">param_2</span>, param_3, lVar3),\n             iVar2 != Number)) {\n          <span class=\"supfact\">cVar1</span> = FUN_00100000(iVar2);\n          <span class=\"supfact\">local_24</span> = iVar2;\n          goto joined_r0x00112f85;\n        }\n      } else {\n        uVar4 = obj_get_default(<span class=\"supfact\">local_20</span>);\n        uVar5 = obj_get_typdef(<span class=\"supfact\">local_20</span>);\n        iVar2 =\n            yang_typ_resolve_type_final(<span class=\"supfact\">param_2</span>, param_3, uVar5,\n                                        uVar4, <span class=\"supfact\">local_20</span>);\n        if (iVar2 != Number) {\n          <span class=\"supfact\">cVar1</span> = FUN_00100000(iVar2);\n          <span class=\"supfact\">local_24</span> = iVar2;\n        joined_r0x00112f85:\n          if (<span class=\"supfact\">cVar1</span> != String) {\n            return <span class=\"supfact\">local_24</span>;\n          }\n        }\n      }\n    }\n    if (**(short **)(<span class=\"supfact\">local_20</span> + Number) == Number) {\n      <span class=\"supfact\">local_20</span> = *(long *)(<span class=\"supfact\">local_20</span> + Number);\n    } else {\n      <span class=\"supfact\">local_20</span> = Number;\n    }\n  } while (true);\n}", "code_t": "status_t yang_obj_resolve_xpath_final(yang_pcb_t *pcb,\n                                      tk_chain_t *<span class=\"supfact\">tkc</span>,\n                                      ncx_module_t *mod,\n                                      dlq_hdrT *<span class=\"supfact\">datadefQ</span>) {\n  char cVar1;\n  boolean bVar2;\n  int iVar3;\n  status_t sVar4;\n  long lVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  dlq_hdrT *datadefQ_00;\n  dlq_hdrT *<span class=\"supfact\">datadefQ</span> - local;\n  ncx_module_t *mod - local;\n  tk_chain_t *<span class=\"supfact\">tkc</span> - local;\n  yang_pcb_t *pcb - local;\n  dlq_hdrT *childQ;\n  status_t res;\n  status_t <span class=\"supfact\">retres</span>;\n  obj_template_t *<span class=\"supfact\">testobj</span>;\n  <span class=\"supfact\">retres</span> = NO_ERR;\n  if (<span class=\"supfact\">datadefQ</span> == <span class=\"supfact\">datadefQ</span>->next) {\n    <span class=\"supfact\">testobj</span> = (obj_template_t *)Number;\n  } else {\n    <span class=\"supfact\">testobj</span> = (obj_template_t *)<span class=\"supfact\">datadefQ</span>->next;\n  }\n  do {\n    if (<span class=\"supfact\">testobj</span> == (obj_template_t *)Number) {\n      return <span class=\"supfact\">retres</span>;\n    }\n    cVar1 = obj_has_name(<span class=\"supfact\">testobj</span>);\n    if ((cVar1 != String) &&\n        (iVar3 = obj_get_status(<span class=\"supfact\">testobj</span>), iVar3 != Number)) {\n      cVar1 = obj_is_leafy(<span class=\"supfact\">testobj</span>);\n      if ((cVar1 == String) ||\n          (lVar5 = obj_get_default(<span class=\"supfact\">testobj</span>), lVar5 == Number)) {\n        datadefQ_00 = (dlq_hdrT *)obj_get_datadefQ(<span class=\"supfact\">testobj</span>);\n        if (((datadefQ_00 != (dlq_hdrT *)Number) &&\n             (sVar4 = yang_obj_resolve_xpath_final(pcb, <span class=\"supfact\">tkc</span>,\n                                                   mod, datadefQ_00),\n              sVar4 != NO_ERR)) &&\n            (bVar2 = terminate_parse(sVar4), <span class=\"supfact\">retres</span> = sVar4,\n             bVar2)) {\n          return sVar4;\n        }\n      } else {\n        uVar6 = obj_get_default(<span class=\"supfact\">testobj</span>);\n        uVar7 = obj_get_typdef(<span class=\"supfact\">testobj</span>);\n        sVar4 = yang_typ_resolve_type_final(<span class=\"supfact\">tkc</span>, mod, uVar7,\n                                            uVar6, <span class=\"supfact\">testobj</span>);\n        if ((sVar4 != NO_ERR) && (bVar2 = terminate_parse(sVar4),\n                                  <span class=\"supfact\">retres</span> = sVar4, bVar2)) {\n          return sVar4;\n        }\n      }\n    }\n    if (((<span class=\"supfact\">testobj</span>->qhdr).next)->hdr_typ == Number) {\n      <span class=\"supfact\">testobj</span> =\n          (obj_template_t *)(<span class=\"supfact\">testobj</span>->qhdr).next;\n    } else {\n      <span class=\"supfact\">testobj</span> = (obj_template_t *)Number;\n    }\n  } while (true);\n}", "var": [{"name": "param_2", "type": "char * *", "pred_name": "tag", "ref_name": "tkc", "ref_type": "tk_chain_t * *"}, {"name": "param_4", "type": "double * *", "pred_name": "tag-local", "ref_name": "datadefQ", "ref_type": "dlq_hdrT * *"}, {"name": "cVar1", "type": "char", "pred_name": "cVar1", "ref_name": "", "ref_type": "disappear"}, {"name": "local_24", "type": "int", "pred_name": "ret", "ref_name": "retres", "ref_type": "status_t"}, {"name": "local_20", "type": "char * *", "pred_name": "buf", "ref_name": "testobj", "ref_type": "obj_template_t * *"}], "body_in_train": false}, {"repo_owner": "sreejithcools", "repo_name": "opensourceworkspace", "path": "sreejithcools/opensourceworkspace/0b1d41075ceeb613d97ce137b564e5495bba34f37a7888eb5888d0167f5d5e21", "path_in_repo": "sreejithcools/opensourceworkspace/xuggle-xuggler-iStreamLife/captive/openssl/csrc/apps/apps.o", "objdump": "00000000000049b7 <raw_write_stdout>:\n    49b7:\t55                   \tpush   %rbp\n    49b8:\t48 89 e5             \tmov    %rsp,%rbp\n    49bb:\t53                   \tpush   %rbx\n    49bc:\t48 83 ec 18          \tsub    $0x18,%rsp\n    49c0:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    49c4:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n    49c7:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n    49ca:\t48 63 d8             \tmovslq %eax,%rbx\n    49cd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 49d4 <raw_write_stdout+0x1d>\n    49d4:\t48 89 c7             \tmov    %rax,%rdi\n    49d7:\te8 00 00 00 00       \tcall   49dc <raw_write_stdout+0x25>\n    49dc:\t89 c1                \tmov    %eax,%ecx\n    49de:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    49e2:\t48 89 da             \tmov    %rbx,%rdx\n    49e5:\t48 89 c6             \tmov    %rax,%rsi\n    49e8:\t89 cf                \tmov    %ecx,%edi\n    49ea:\te8 00 00 00 00       \tcall   49ef <raw_write_stdout+0x38>\n    49ef:\t48 83 c4 18          \tadd    $0x18,%rsp\n    49f3:\t5b                   \tpop    %rbx\n    49f4:\t5d                   \tpop    %rbp\n    49f5:\tc3                   \tret    \n", "code_s": "void raw_write_stdout(void *<span class=\"supfact\">param_1</span>, int param_2) {\n  int <span class=\"supfact\">__fd</span>;\n  <span class=\"supfact\">__fd</span> = fileno(_stdout);\n  write(<span class=\"supfact\">__fd</span>, <span class=\"supfact\">param_1</span>, (long)param_2);\n  return;\n}", "code_t": "int raw_write_stdout(void *buf, int <span class=\"supfact\">siz</span>) {\n  int <span class=\"supfact\">__fd</span>;\n  ssize_t sVar1;\n  int <span class=\"supfact\">siz</span> - local;\n  void *buf - local;\n  <span class=\"supfact\">__fd</span> = fileno(_stdout);\n  sVar1 = write(<span class=\"supfact\">__fd</span>, buf, (long)<span class=\"supfact\">siz</span>);\n  return (int)sVar1;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "siz", "ref_name": "siz", "ref_type": "int"}, {"name": "__fd", "type": "int", "pred_name": "__fd", "ref_name": "__fd", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "iongradea", "repo_name": "42_corewar", "path": "iongradea/42_corewar/e0ac86cd081b3c016804ea1a7cb8c4c6bef9401c3e1c1bed8ea7e938ebfc1eed", "path_in_repo": "iongradea/42_corewar/VM/bin/ft_aff_sti_ldi_lldi.o", "objdump": "0000000000000111 <ft_sti>:\n 111:\t55                   \tpush   %rbp\n 112:\t48 89 e5             \tmov    %rsp,%rbp\n 115:\t41 54                \tpush   %r12\n 117:\t53                   \tpush   %rbx\n 118:\t48 83 ec 40          \tsub    $0x40,%rsp\n 11c:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n 120:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n 124:\t89 55 bc             \tmov    %edx,-0x44(%rbp)\n 127:\tc7 45 ec ff ff ff ff \tmovl   $0xffffffff,-0x14(%rbp)\n 12e:\tc7 45 e8 00 00 00 00 \tmovl   $0x0,-0x18(%rbp)\n 135:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n 139:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 13d:\tba 03 00 00 00       \tmov    $0x3,%edx\n 142:\t48 89 ce             \tmov    %rcx,%rsi\n 145:\t48 89 c7             \tmov    %rax,%rdi\n 148:\te8 00 00 00 00       \tcall   14d <ft_sti+0x3c>\n 14d:\t85 c0                \ttest   %eax,%eax\n 14f:\t75 2c                \tjne    17d <ft_sti+0x6c>\n 151:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 155:\t8b 40 68             \tmov    0x68(%rax),%eax\n 158:\t8d 50 02             \tlea    0x2(%rax),%edx\n 15b:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 15f:\t89 50 68             \tmov    %edx,0x68(%rax)\n 162:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 166:\tba 00 00 00 00       \tmov    $0x0,%edx\n 16b:\tbe ff ff ff ff       \tmov    $0xffffffff,%esi\n 170:\t48 89 c7             \tmov    %rax,%rdi\n 173:\te8 00 00 00 00       \tcall   178 <ft_sti+0x67>\n 178:\te9 a3 01 00 00       \tjmp    320 <ft_sti+0x20f>\n 17d:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n 181:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 185:\tba 00 00 00 00       \tmov    $0x0,%edx\n 18a:\t48 89 ce             \tmov    %rcx,%rsi\n 18d:\t48 89 c7             \tmov    %rax,%rdi\n 190:\te8 00 00 00 00       \tcall   195 <ft_sti+0x84>\n 195:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n 198:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n 19c:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 1a0:\tba 01 00 00 00       \tmov    $0x1,%edx\n 1a5:\t48 89 ce             \tmov    %rcx,%rsi\n 1a8:\t48 89 c7             \tmov    %rax,%rdi\n 1ab:\te8 00 00 00 00       \tcall   1b0 <ft_sti+0x9f>\n 1b0:\t89 45 e0             \tmov    %eax,-0x20(%rbp)\n 1b3:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n 1b7:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 1bb:\tba 02 00 00 00       \tmov    $0x2,%edx\n 1c0:\t48 89 ce             \tmov    %rcx,%rsi\n 1c3:\t48 89 c7             \tmov    %rax,%rdi\n 1c6:\te8 00 00 00 00       \tcall   1cb <ft_sti+0xba>\n 1cb:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n 1ce:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n 1d2:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 1d6:\tba 03 00 00 00       \tmov    $0x3,%edx\n 1db:\t48 89 ce             \tmov    %rcx,%rsi\n 1de:\t48 89 c7             \tmov    %rax,%rdi\n 1e1:\te8 00 00 00 00       \tcall   1e6 <ft_sti+0xd5>\n 1e6:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n 1ea:\t89 42 68             \tmov    %eax,0x68(%rdx)\n 1ed:\t8b 55 dc             \tmov    -0x24(%rbp),%edx\n 1f0:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n 1f4:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 1f8:\t89 d1                \tmov    %edx,%ecx\n 1fa:\tba 02 00 00 00       \tmov    $0x2,%edx\n 1ff:\t48 89 c7             \tmov    %rax,%rdi\n 202:\te8 00 00 00 00       \tcall   207 <ft_sti+0xf6>\n 207:\t85 c0                \ttest   %eax,%eax\n 209:\t75 3c                \tjne    247 <ft_sti+0x136>\n 20b:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n 20e:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n 212:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 216:\t89 d1                \tmov    %edx,%ecx\n 218:\tba 00 00 00 00       \tmov    $0x0,%edx\n 21d:\t48 89 c7             \tmov    %rax,%rdi\n 220:\te8 00 00 00 00       \tcall   225 <ft_sti+0x114>\n 225:\t85 c0                \ttest   %eax,%eax\n 227:\t75 1e                \tjne    247 <ft_sti+0x136>\n 229:\t8b 55 e0             \tmov    -0x20(%rbp),%edx\n 22c:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n 230:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 234:\t89 d1                \tmov    %edx,%ecx\n 236:\tba 01 00 00 00       \tmov    $0x1,%edx\n 23b:\t48 89 c7             \tmov    %rax,%rdi\n 23e:\te8 00 00 00 00       \tcall   243 <ft_sti+0x132>\n 243:\t85 c0                \ttest   %eax,%eax\n 245:\t74 1b                \tje     262 <ft_sti+0x151>\n 247:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 24b:\tba 00 00 00 00       \tmov    $0x0,%edx\n 250:\tbe ff ff ff ff       \tmov    $0xffffffff,%esi\n 255:\t48 89 c7             \tmov    %rax,%rdi\n 258:\te8 00 00 00 00       \tcall   25d <ft_sti+0x14c>\n 25d:\te9 be 00 00 00       \tjmp    320 <ft_sti+0x20f>\n 262:\t8b 4d dc             \tmov    -0x24(%rbp),%ecx\n 265:\t8b 55 e0             \tmov    -0x20(%rbp),%edx\n 268:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n 26c:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 270:\t48 89 c7             \tmov    %rax,%rdi\n 273:\te8 00 00 00 00       \tcall   278 <ft_sti+0x167>\n 278:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n 27b:\teb 5c                \tjmp    2d9 <ft_sti+0x1c8>\n 27d:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 281:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n 284:\t48 63 d2             \tmovslq %edx,%rdx\n 287:\t48 83 c2 04          \tadd    $0x4,%rdx\n 28b:\t8b 54 90 0c          \tmov    0xc(%rax,%rdx,4),%edx\n 28f:\tb8 03 00 00 00       \tmov    $0x3,%eax\n 294:\t2b 45 ec             \tsub    -0x14(%rbp),%eax\n 297:\tc1 e0 03             \tshl    $0x3,%eax\n 29a:\t89 c1                \tmov    %eax,%ecx\n 29c:\td3 fa                \tsar    %cl,%edx\n 29e:\t41 89 d4             \tmov    %edx,%r12d\n 2a1:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 2a5:\t48 8d 58 14          \tlea    0x14(%rax),%rbx\n 2a9:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 2ad:\t8b 48 60             \tmov    0x60(%rax),%ecx\n 2b0:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n 2b3:\t99                   \tcltd   \n 2b4:\tc1 ea 17             \tshr    $0x17,%edx\n 2b7:\t01 d0                \tadd    %edx,%eax\n 2b9:\t25 ff 01 00 00       \tand    $0x1ff,%eax\n 2be:\t29 d0                \tsub    %edx,%eax\n 2c0:\t8d 14 01             \tlea    (%rcx,%rax,1),%edx\n 2c3:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 2c6:\t01 d0                \tadd    %edx,%eax\n 2c8:\t89 c7                \tmov    %eax,%edi\n 2ca:\te8 00 00 00 00       \tcall   2cf <ft_sti+0x1be>\n 2cf:\t48 98                \tcltq   \n 2d1:\t48 01 d8             \tadd    %rbx,%rax\n 2d4:\t44 89 e2             \tmov    %r12d,%edx\n 2d7:\t88 10                \tmov    %dl,(%rax)\n 2d9:\t83 45 ec 01          \taddl   $0x1,-0x14(%rbp)\n 2dd:\t83 7d ec 03          \tcmpl   $0x3,-0x14(%rbp)\n 2e1:\t7e 9a                \tjle    27d <ft_sti+0x16c>\n 2e3:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n 2e6:\t99                   \tcltd   \n 2e7:\tc1 ea 17             \tshr    $0x17,%edx\n 2ea:\t01 d0                \tadd    %edx,%eax\n 2ec:\t25 ff 01 00 00       \tand    $0x1ff,%eax\n 2f1:\t29 d0                \tsub    %edx,%eax\n 2f3:\t89 c2                \tmov    %eax,%edx\n 2f5:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n 2f9:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n 2fd:\tb9 04 00 00 00       \tmov    $0x4,%ecx\n 302:\t48 89 c7             \tmov    %rax,%rdi\n 305:\te8 00 00 00 00       \tcall   30a <ft_sti+0x1f9>\n 30a:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n 30e:\tba 00 00 00 00       \tmov    $0x0,%edx\n 313:\tbe ff ff ff ff       \tmov    $0xffffffff,%esi\n 318:\t48 89 c7             \tmov    %rax,%rdi\n 31b:\te8 00 00 00 00       \tcall   320 <ft_sti+0x20f>\n 320:\t48 83 c4 40          \tadd    $0x40,%rsp\n 324:\t5b                   \tpop    %rbx\n 325:\t41 5c                \tpop    %r12\n 327:\t5d                   \tpop    %rbp\n 328:\tc3                   \tret    ", "code_s": "void ft_sti(long param_1, long <span class=\"supfact\">param_2</span>) {\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  int iVar6;\n  int iVar7;\n  int <span class=\"supfact\">local_1c</span>;\n  <span class=\"supfact\">local_1c</span> = -Number;\n  iVar2 = check_ocp_fmt(param_1, <span class=\"supfact\">param_2</span>, Number);\n  if (iVar2 == Number) {\n    *(int *)(<span class=\"supfact\">param_2</span> + Number) =\n        *(int *)(<span class=\"supfact\">param_2</span> + Number) + Number;\n    ft_next_op(<span class=\"supfact\">param_2</span>, Number, Number);\n  } else {\n    iVar2 = ft_get_arg(param_1, <span class=\"supfact\">param_2</span>, Number);\n    uVar3 = ft_get_arg(param_1, <span class=\"supfact\">param_2</span>, Number);\n    uVar4 = ft_get_arg(param_1, <span class=\"supfact\">param_2</span>, Number);\n    uVar5 = ft_op_size(param_1, <span class=\"supfact\">param_2</span>, Number);\n    *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number) = uVar5;\n    iVar6 = is_invalid_reg(param_1, <span class=\"supfact\">param_2</span>, Number, uVar4);\n    if (((iVar6 == Number) &&\n         (iVar6 =\n              is_invalid_reg(param_1, <span class=\"supfact\">param_2</span>, Number, iVar2),\n          iVar6 == Number)) &&\n        (iVar6 =\n             is_invalid_reg(param_1, <span class=\"supfact\">param_2</span>, Number, uVar3),\n         iVar6 == Number)) {\n      iVar6 = ft_sti_2(param_1, <span class=\"supfact\">param_2</span>, uVar3, uVar4);\n      while (<span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number,\n             <span class=\"supfact\">local_1c</span> < Number) {\n        iVar1 = *(int *)(<span class=\"supfact\">param_2</span> + Number +\n                         ((long)iVar2 + Number) * Number);\n        iVar7 = ft_mem_cir_pos(<span class=\"supfact\">local_1c</span> +\n                               *(int *)(<span class=\"supfact\">param_2</span> + Number) +\n                               iVar6 % Number);\n        *(char *)((long)iVar7 + param_1 + Number) =\n            (char)(iVar1 >>\n                   ((String - (char)<span class=\"supfact\">local_1c</span>) * String &\n                    Number));\n      }\n      ft_chg_mem_uid(param_1, <span class=\"supfact\">param_2</span>, iVar6 % Number, Number);\n      ft_next_op(<span class=\"supfact\">param_2</span>, Number, Number);\n      return;\n    }\n    ft_next_op(<span class=\"supfact\">param_2</span>, Number, Number);\n  }\n  return;\n}", "code_t": "int ft_sti(t_vm_mem *vm, t_ps *<span class=\"supfact\">ps</span>, int opcode) {\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  int iVar5;\n  int iVar6;\n  int opcode - local;\n  t_ps *<span class=\"supfact\">ps</span> - local;\n  t_vm_mem *vm - local;\n  int arg2;\n  int arg1;\n  int arg0;\n  int sum;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">i</span> = -Number;\n  iVar2 = check_ocp_fmt(vm, <span class=\"supfact\">ps</span>, Number);\n  if (iVar2 == Number) {\n    <span class=\"supfact\">ps</span>->op_size = <span class=\"supfact\">ps</span>->op_size + Number;\n    iVar2 = ft_next_op(<span class=\"supfact\">ps</span>, Number, Number);\n  } else {\n    iVar2 = ft_get_arg(vm, <span class=\"supfact\">ps</span>, Number);\n    uVar3 = ft_get_arg(vm, <span class=\"supfact\">ps</span>, Number);\n    uVar4 = ft_get_arg(vm, <span class=\"supfact\">ps</span>, Number);\n    iVar5 = ft_op_size(vm, <span class=\"supfact\">ps</span>, Number);\n    <span class=\"supfact\">ps</span>->op_size = iVar5;\n    iVar5 = is_invalid_reg(vm, <span class=\"supfact\">ps</span>, Number, uVar4);\n    if (((iVar5 == Number) &&\n         (iVar5 = is_invalid_reg(vm, <span class=\"supfact\">ps</span>, Number, iVar2),\n          iVar5 == Number)) &&\n        (iVar5 = is_invalid_reg(vm, <span class=\"supfact\">ps</span>, Number, uVar3),\n         iVar5 == Number)) {\n      iVar5 = ft_sti_2(vm, <span class=\"supfact\">ps</span>, uVar3, uVar4);\n      while (<span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number,\n             <span class=\"supfact\">i</span> < Number) {\n        iVar1 = <span class=\"supfact\">ps</span>->reg[iVar2];\n        iVar6 = ft_mem_cir_pos(<span class=\"supfact\">i</span> + <span class=\"supfact\">ps</span>->pc +\n                               iVar5 % Number);\n        vm->mem[iVar6] =\n            (uchar)(iVar1 >>\n                    ((String - (char)<span class=\"supfact\">i</span>) * String & Number));\n      }\n      ft_chg_mem_uid(vm, <span class=\"supfact\">ps</span>, iVar5 % Number, Number);\n      iVar2 = ft_next_op(<span class=\"supfact\">ps</span>, Number, Number);\n      return iVar2;\n    }\n    iVar2 = ft_next_op(<span class=\"supfact\">ps</span>, Number, Number);\n  }\n  return iVar2;\n}", "var": [{"name": "param_2", "type": "__unk__", "pred_name": "ac", "ref_name": "ps", "ref_type": "t_ps * *"}, {"name": "local_1c", "type": "int", "pred_name": "__unk__", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "RSB4760", "repo_name": "apq8016_external_elfutils", "path": "RSB4760/apq8016_external_elfutils/8f7b12949f86d79be5307a7da19431644a8cfe5d4820c1b1f10e734604306fc2", "path_in_repo": "RSB4760/apq8016_external_elfutils/src/src/size", "objdump": "", "code_s": "int fputc_unlocked(int __c, FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fputc_unlocked_00405098)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int fputc_unlocked(int __c, FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fputc_unlocked_00405098)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "Reloaded-CAF", "repo_name": "android_external_selinux", "path": "Reloaded-CAF/android_external_selinux/96f229c3504061f2f16f63f8a6de650eab4c8613b7a030b7d5ca3346ce38dbf8", "path_in_repo": "Reloaded-CAF/android_external_selinux//libsepol/cil/src/cil_policy.o", "objdump": "0000000000004eab <cil_gen_policy>:\n    4eab:\t55                   \tpush   %rbp\n    4eac:\t48 89 e5             \tmov    %rsp,%rbp\n    4eaf:\t48 81 ec d0 00 00 00 \tsub    $0xd0,%rsp\n    4eb6:\t48 89 bd 38 ff ff ff \tmov    %rdi,-0xc8(%rbp)\n    4ebd:\t48 89 b5 30 ff ff ff \tmov    %rsi,-0xd0(%rbp)\n    4ec4:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    4ecb:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    4ecf:\t48 8b 00             \tmov    (%rax),%rax\n    4ed2:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    4ed6:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    4edd:\teb 22                \tjmp    4f01 <cil_gen_policy+0x56>\n    4edf:\t48 8d 85 40 ff ff ff \tlea    -0xc0(%rbp),%rax\n    4ee6:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    4ee9:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    4eed:\t48 01 d0             \tadd    %rdx,%rax\n    4ef0:\tbe 05 00 00 00       \tmov    $0x5,%esi\n    4ef5:\t48 89 c7             \tmov    %rax,%rdi\n    4ef8:\te8 00 00 00 00       \tcall   4efd <cil_gen_policy+0x52>\n    4efd:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    4f01:\t83 7d fc 15          \tcmpl   $0x15,-0x4(%rbp)\n    4f05:\t76 d8                \tjbe    4edf <cil_gen_policy+0x34>\n    4f07:\t48 8d 95 40 ff ff ff \tlea    -0xc0(%rbp),%rdx\n    4f0e:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    4f12:\t48 89 d6             \tmov    %rdx,%rsi\n    4f15:\t48 89 c7             \tmov    %rax,%rdi\n    4f18:\te8 16 b4 ff ff       \tcall   333 <cil_gather_statements>\n    4f1d:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    4f24:\t48 8b 50 20          \tmov    0x20(%rax),%rdx\n    4f28:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    4f2f:\t48 89 d6             \tmov    %rdx,%rsi\n    4f32:\t48 89 c7             \tmov    %rax,%rdi\n    4f35:\te8 be c9 ff ff       \tcall   18f8 <cil_class_decls_to_policy>\n    4f3a:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    4f41:\t48 8b 50 18          \tmov    0x18(%rax),%rdx\n    4f45:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    4f4c:\t48 89 d6             \tmov    %rdx,%rsi\n    4f4f:\t48 89 c7             \tmov    %rax,%rdi\n    4f52:\te8 f8 c9 ff ff       \tcall   194f <cil_sid_decls_to_policy>\n    4f57:\t48 8b 95 48 ff ff ff \tmov    -0xb8(%rbp),%rdx\n    4f5e:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    4f65:\t48 89 d6             \tmov    %rdx,%rsi\n    4f68:\t48 89 c7             \tmov    %rax,%rdi\n    4f6b:\te8 36 ca ff ff       \tcall   19a6 <cil_commons_to_policy>\n    4f70:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    4f77:\t48 8b 50 20          \tmov    0x20(%rax),%rdx\n    4f7b:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    4f82:\t48 89 d6             \tmov    %rdx,%rsi\n    4f85:\t48 89 c7             \tmov    %rax,%rdi\n    4f88:\te8 f3 ca ff ff       \tcall   1a80 <cil_classes_to_policy>\n    4f8d:\t48 8b 8d 50 ff ff ff \tmov    -0xb0(%rbp),%rcx\n    4f94:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    4f9b:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 4fa2 <cil_gen_policy+0xf7>\n    4fa2:\t48 89 ce             \tmov    %rcx,%rsi\n    4fa5:\t48 89 c7             \tmov    %rax,%rdi\n    4fa8:\te8 19 cc ff ff       \tcall   1bc6 <cil_defaults_to_policy>\n    4fad:\t48 8b 8d 58 ff ff ff \tmov    -0xa8(%rbp),%rcx\n    4fb4:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    4fbb:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 4fc2 <cil_gen_policy+0x117>\n    4fc2:\t48 89 ce             \tmov    %rcx,%rsi\n    4fc5:\t48 89 c7             \tmov    %rax,%rdi\n    4fc8:\te8 f9 cb ff ff       \tcall   1bc6 <cil_defaults_to_policy>\n    4fcd:\t48 8b 8d 60 ff ff ff \tmov    -0xa0(%rbp),%rcx\n    4fd4:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    4fdb:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 4fe2 <cil_gen_policy+0x137>\n    4fe2:\t48 89 ce             \tmov    %rcx,%rsi\n    4fe5:\t48 89 c7             \tmov    %rax,%rdi\n    4fe8:\te8 d9 cb ff ff       \tcall   1bc6 <cil_defaults_to_policy>\n    4fed:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    4ff4:\t8b 80 00 01 00 00    \tmov    0x100(%rax),%eax\n    4ffa:\t83 f8 01             \tcmp    $0x1,%eax\n    4ffd:\t0f 85 dc 00 00 00    \tjne    50df <cil_gen_policy+0x234>\n    5003:\t48 8b 95 68 ff ff ff \tmov    -0x98(%rbp),%rdx\n    500a:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5011:\t48 89 d6             \tmov    %rdx,%rsi\n    5014:\t48 89 c7             \tmov    %rax,%rdi\n    5017:\te8 33 cd ff ff       \tcall   1d4f <cil_default_ranges_to_policy>\n    501c:\t48 8b 95 70 ff ff ff \tmov    -0x90(%rbp),%rdx\n    5023:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    502a:\t48 8b 48 30          \tmov    0x30(%rax),%rcx\n    502e:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5035:\t48 89 ce             \tmov    %rcx,%rsi\n    5038:\t48 89 c7             \tmov    %rax,%rdi\n    503b:\te8 87 cf ff ff       \tcall   1fc7 <cil_sensitivities_to_policy>\n    5040:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    5047:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n    504b:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5052:\t48 89 d6             \tmov    %rdx,%rsi\n    5055:\t48 89 c7             \tmov    %rax,%rdi\n    5058:\te8 3a d1 ff ff       \tcall   2197 <cil_dominance_to_policy>\n    505d:\t48 8b 95 78 ff ff ff \tmov    -0x88(%rbp),%rdx\n    5064:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    506b:\t48 8b 48 28          \tmov    0x28(%rax),%rcx\n    506f:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5076:\t48 89 ce             \tmov    %rcx,%rsi\n    5079:\t48 89 c7             \tmov    %rax,%rdi\n    507c:\te8 ae d1 ff ff       \tcall   222f <cil_categories_to_policy>\n    5081:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    5088:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n    508c:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5093:\t48 89 d6             \tmov    %rdx,%rsi\n    5096:\t48 89 c7             \tmov    %rax,%rdi\n    5099:\te8 61 d3 ff ff       \tcall   23ff <cil_levels_to_policy>\n    509e:\t48 8b 55 80          \tmov    -0x80(%rbp),%rdx\n    50a2:\t48 8b 8d 30 ff ff ff \tmov    -0xd0(%rbp),%rcx\n    50a9:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    50b0:\t48 89 ce             \tmov    %rcx,%rsi\n    50b3:\t48 89 c7             \tmov    %rax,%rdi\n    50b6:\te8 30 d4 ff ff       \tcall   24eb <cil_mlsconstrains_to_policy>\n    50bb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 50c2 <cil_gen_policy+0x217>\n    50c2:\t48 8b 08             \tmov    (%rax),%rcx\n    50c5:\t48 8b 55 88          \tmov    -0x78(%rbp),%rdx\n    50c9:\t48 8b b5 30 ff ff ff \tmov    -0xd0(%rbp),%rsi\n    50d0:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    50d7:\t48 89 c7             \tmov    %rax,%rdi\n    50da:\te8 0c d5 ff ff       \tcall   25eb <cil_validatetrans_to_policy>\n    50df:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 50e6 <cil_gen_policy+0x23b>\n    50e6:\t48 8b 10             \tmov    (%rax),%rdx\n    50e9:\t48 8b 4d 90          \tmov    -0x70(%rbp),%rcx\n    50ed:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    50f4:\t48 89 ce             \tmov    %rcx,%rsi\n    50f7:\t48 89 c7             \tmov    %rax,%rdi\n    50fa:\te8 6b b2 ff ff       \tcall   36a <cil_simple_rules_to_policy>\n    50ff:\t48 8b 4d 98          \tmov    -0x68(%rbp),%rcx\n    5103:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    510a:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 5111 <cil_gen_policy+0x266>\n    5111:\t48 89 ce             \tmov    %rcx,%rsi\n    5114:\t48 89 c7             \tmov    %rax,%rdi\n    5117:\te8 4e b2 ff ff       \tcall   36a <cil_simple_rules_to_policy>\n    511c:\t48 8b 4d a0          \tmov    -0x60(%rbp),%rcx\n    5120:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5127:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 512e <cil_gen_policy+0x283>\n    512e:\t48 89 ce             \tmov    %rcx,%rsi\n    5131:\t48 89 c7             \tmov    %rax,%rdi\n    5134:\te8 31 b2 ff ff       \tcall   36a <cil_simple_rules_to_policy>\n    5139:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    513d:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5144:\t48 89 d6             \tmov    %rdx,%rsi\n    5147:\t48 89 c7             \tmov    %rax,%rdi\n    514a:\te8 8c d5 ff ff       \tcall   26db <cil_bools_to_policy>\n    514f:\t48 8b 4d b0          \tmov    -0x50(%rbp),%rcx\n    5153:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    515a:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 5161 <cil_gen_policy+0x2b6>\n    5161:\t48 89 ce             \tmov    %rcx,%rsi\n    5164:\t48 89 c7             \tmov    %rax,%rdi\n    5167:\te8 fe b1 ff ff       \tcall   36a <cil_simple_rules_to_policy>\n    516c:\t48 8b 55 b8          \tmov    -0x48(%rbp),%rdx\n    5170:\t48 8b 4d b0          \tmov    -0x50(%rbp),%rcx\n    5174:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    517b:\t48 89 ce             \tmov    %rcx,%rsi\n    517e:\t48 89 c7             \tmov    %rax,%rdi\n    5181:\te8 d9 d5 ff ff       \tcall   275f <cil_typealiases_to_policy>\n    5186:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n    518a:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5191:\t48 89 d6             \tmov    %rdx,%rsi\n    5194:\t48 89 c7             \tmov    %rax,%rdi\n    5197:\te8 76 d7 ff ff       \tcall   2912 <cil_typebounds_to_policy>\n    519c:\t48 8b 55 98          \tmov    -0x68(%rbp),%rdx\n    51a0:\t48 8b 4d b0          \tmov    -0x50(%rbp),%rcx\n    51a4:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    51ab:\t48 89 ce             \tmov    %rcx,%rsi\n    51ae:\t48 89 c7             \tmov    %rax,%rdi\n    51b1:\te8 dc d7 ff ff       \tcall   2992 <cil_typeattributes_to_policy>\n    51b6:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    51bd:\t8b 90 00 01 00 00    \tmov    0x100(%rax),%edx\n    51c3:\t48 8b 4d f0          \tmov    -0x10(%rbp),%rcx\n    51c7:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    51ce:\t48 89 ce             \tmov    %rcx,%rsi\n    51d1:\t48 89 c7             \tmov    %rax,%rdi\n    51d4:\te8 33 e7 ff ff       \tcall   390c <cil_te_rules_to_policy>\n    51d9:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    51dd:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    51e4:\t48 89 d6             \tmov    %rdx,%rsi\n    51e7:\t48 89 c7             \tmov    %rax,%rdi\n    51ea:\te8 7b e7 ff ff       \tcall   396a <cil_roles_to_policy>\n    51ef:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n    51f3:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n    51f7:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    51fe:\t48 89 ce             \tmov    %rcx,%rsi\n    5201:\t48 89 c7             \tmov    %rax,%rdi\n    5204:\te8 de e7 ff ff       \tcall   39e7 <cil_role_types_to_policy>\n    5209:\t48 8b 55 a0          \tmov    -0x60(%rbp),%rdx\n    520d:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n    5211:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5218:\t48 89 ce             \tmov    %rcx,%rsi\n    521b:\t48 89 c7             \tmov    %rax,%rdi\n    521e:\te8 37 e9 ff ff       \tcall   3b5a <cil_roleattributes_to_policy>\n    5223:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    5227:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    522e:\t48 89 d6             \tmov    %rdx,%rsi\n    5231:\t48 89 c7             \tmov    %rax,%rdi\n    5234:\te8 66 ea ff ff       \tcall   3c9f <cil_roleallows_to_policy>\n    5239:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    523d:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5244:\t48 89 d6             \tmov    %rdx,%rsi\n    5247:\t48 89 c7             \tmov    %rax,%rdi\n    524a:\te8 bf ea ff ff       \tcall   3d0e <cil_roletransitions_to_policy>\n    524f:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n    5253:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    5257:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    525e:\t8b b0 00 01 00 00    \tmov    0x100(%rax),%esi\n    5264:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    526b:\t48 89 c7             \tmov    %rax,%rdi\n    526e:\te8 73 eb ff ff       \tcall   3de6 <cil_users_to_policy>\n    5273:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    5277:\t48 8b 8d 30 ff ff ff \tmov    -0xd0(%rbp),%rcx\n    527e:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5285:\t48 89 ce             \tmov    %rcx,%rsi\n    5288:\t48 89 c7             \tmov    %rax,%rdi\n    528b:\te8 c0 ed ff ff       \tcall   4050 <cil_constrains_to_policy>\n    5290:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5297 <cil_gen_policy+0x3ec>\n    5297:\t48 8b 08             \tmov    (%rax),%rcx\n    529a:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    529e:\t48 8b b5 30 ff ff ff \tmov    -0xd0(%rbp),%rsi\n    52a5:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    52ac:\t48 89 c7             \tmov    %rax,%rdi\n    52af:\te8 37 d3 ff ff       \tcall   25eb <cil_validatetrans_to_policy>\n    52b4:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    52bb:\t8b 90 00 01 00 00    \tmov    0x100(%rax),%edx\n    52c1:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    52c8:\t48 8b 48 18          \tmov    0x18(%rax),%rcx\n    52cc:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    52d3:\t48 89 ce             \tmov    %rcx,%rsi\n    52d6:\t48 89 c7             \tmov    %rax,%rdi\n    52d9:\te8 72 ee ff ff       \tcall   4150 <cil_sid_contexts_to_policy>\n    52de:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    52e5:\t8b 90 00 01 00 00    \tmov    0x100(%rax),%edx\n    52eb:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    52f2:\t48 8b 88 98 00 00 00 \tmov    0x98(%rax),%rcx\n    52f9:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5300:\t48 89 ce             \tmov    %rcx,%rsi\n    5303:\t48 89 c7             \tmov    %rax,%rdi\n    5306:\te8 d2 ee ff ff       \tcall   41dd <cil_fsuses_to_policy>\n    530b:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    5312:\t8b 90 00 01 00 00    \tmov    0x100(%rax),%edx\n    5318:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    531f:\t48 8b 48 40          \tmov    0x40(%rax),%rcx\n    5323:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    532a:\t48 89 ce             \tmov    %rcx,%rsi\n    532d:\t48 89 c7             \tmov    %rax,%rdi\n    5330:\te8 87 f0 ff ff       \tcall   43bc <cil_genfscons_to_policy>\n    5335:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    533c:\t8b 90 00 01 00 00    \tmov    0x100(%rax),%edx\n    5342:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    5349:\t48 8b 48 68          \tmov    0x68(%rax),%rcx\n    534d:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5354:\t48 89 ce             \tmov    %rcx,%rsi\n    5357:\t48 89 c7             \tmov    %rax,%rdi\n    535a:\te8 90 f2 ff ff       \tcall   45ef <cil_portcons_to_policy>\n    535f:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    5366:\t8b 90 00 01 00 00    \tmov    0x100(%rax),%edx\n    536c:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    5373:\t48 8b 48 38          \tmov    0x38(%rax),%rcx\n    5377:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    537e:\t48 89 ce             \tmov    %rcx,%rsi\n    5381:\t48 89 c7             \tmov    %rax,%rdi\n    5384:\te8 fd f3 ff ff       \tcall   4786 <cil_netifcons_to_policy>\n    5389:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    5390:\t8b 90 00 01 00 00    \tmov    0x100(%rax),%edx\n    5396:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    539d:\t48 8b 48 58          \tmov    0x58(%rax),%rcx\n    53a1:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    53a8:\t48 89 ce             \tmov    %rcx,%rsi\n    53ab:\t48 89 c7             \tmov    %rax,%rdi\n    53ae:\te8 a4 f0 ff ff       \tcall   4457 <cil_ibpkeycons_to_policy>\n    53b3:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    53ba:\t8b 90 00 01 00 00    \tmov    0x100(%rax),%edx\n    53c0:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    53c7:\t48 8b 48 60          \tmov    0x60(%rax),%rcx\n    53cb:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    53d2:\t48 89 ce             \tmov    %rcx,%rsi\n    53d5:\t48 89 c7             \tmov    %rax,%rdi\n    53d8:\te8 59 f1 ff ff       \tcall   4536 <cil_ibendportcons_to_policy>\n    53dd:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    53e4:\t8b 90 00 01 00 00    \tmov    0x100(%rax),%edx\n    53ea:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    53f1:\t48 8b 48 50          \tmov    0x50(%rax),%rcx\n    53f5:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    53fc:\t48 89 ce             \tmov    %rcx,%rsi\n    53ff:\t48 89 c7             \tmov    %rax,%rdi\n    5402:\te8 44 f4 ff ff       \tcall   484b <cil_nodecons_to_policy>\n    5407:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    540e:\t8b 90 00 01 00 00    \tmov    0x100(%rax),%edx\n    5414:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    541b:\t48 8b 48 70          \tmov    0x70(%rax),%rcx\n    541f:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5426:\t48 89 ce             \tmov    %rcx,%rsi\n    5429:\t48 89 c7             \tmov    %rax,%rdi\n    542c:\te8 13 f7 ff ff       \tcall   4b44 <cil_pirqcons_to_policy>\n    5431:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    5438:\t8b 90 00 01 00 00    \tmov    0x100(%rax),%edx\n    543e:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    5445:\t48 8b 48 78          \tmov    0x78(%rax),%rcx\n    5449:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    5450:\t48 89 ce             \tmov    %rcx,%rsi\n    5453:\t48 89 c7             \tmov    %rax,%rdi\n    5456:\te8 87 f7 ff ff       \tcall   4be2 <cil_iomemcons_to_policy>\n    545b:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    5462:\t8b 90 00 01 00 00    \tmov    0x100(%rax),%edx\n    5468:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    546f:\t48 8b 88 80 00 00 00 \tmov    0x80(%rax),%rcx\n    5476:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    547d:\t48 89 ce             \tmov    %rcx,%rsi\n    5480:\t48 89 c7             \tmov    %rax,%rdi\n    5483:\te8 3d f8 ff ff       \tcall   4cc5 <cil_ioportcons_to_policy>\n    5488:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    548f:\t8b 90 00 01 00 00    \tmov    0x100(%rax),%edx\n    5495:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    549c:\t48 8b 88 88 00 00 00 \tmov    0x88(%rax),%rcx\n    54a3:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    54aa:\t48 89 ce             \tmov    %rcx,%rsi\n    54ad:\t48 89 c7             \tmov    %rax,%rdi\n    54b0:\te8 b9 f8 ff ff       \tcall   4d6e <cil_pcidevicecons_to_policy>\n    54b5:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    54bc:\t8b 90 00 01 00 00    \tmov    0x100(%rax),%edx\n    54c2:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    54c9:\t48 8b 88 90 00 00 00 \tmov    0x90(%rax),%rcx\n    54d0:\t48 8b 85 38 ff ff ff \tmov    -0xc8(%rbp),%rax\n    54d7:\t48 89 ce             \tmov    %rcx,%rsi\n    54da:\t48 89 c7             \tmov    %rax,%rdi\n    54dd:\te8 2a f9 ff ff       \tcall   4e0c <cil_devicetreecons_to_policy>\n    54e2:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    54e9:\teb 22                \tjmp    550d <cil_gen_policy+0x662>\n    54eb:\t48 8d 85 40 ff ff ff \tlea    -0xc0(%rbp),%rax\n    54f2:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    54f5:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    54f9:\t48 01 d0             \tadd    %rdx,%rax\n    54fc:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    5501:\t48 89 c7             \tmov    %rax,%rdi\n    5504:\te8 00 00 00 00       \tcall   5509 <cil_gen_policy+0x65e>\n    5509:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    550d:\t83 7d fc 15          \tcmpl   $0x15,-0x4(%rbp)\n    5511:\t76 d8                \tjbe    54eb <cil_gen_policy+0x640>\n    5513:\t90                   \tnop\n    5514:\t90                   \tnop\n    5515:\tc9                   \tleave  \n    5516:\tc3                   \tret    \n", "code_s": "void cil_gen_policy(undefined8 param_1, long <span class=\"supfact\">param_2</span>) {\n  undefined <span class=\"supfact\">local_c8</span>[Number];\n  undefined8 <span class=\"supfact\">local_c0</span>;\n  undefined8 <span class=\"supfact\">local_b8</span>;\n  undefined8 <span class=\"supfact\">local_b0</span>;\n  undefined8 <span class=\"supfact\">local_a8</span>;\n  undefined8 <span class=\"supfact\">local_a0</span>;\n  undefined8 <span class=\"supfact\">local_98</span>;\n  undefined8 <span class=\"supfact\">local_90</span>;\n  undefined8 <span class=\"supfact\">local_88</span>;\n  undefined8 <span class=\"supfact\">local_80</span>;\n  undefined8 <span class=\"supfact\">local_78</span>;\n  undefined8 <span class=\"supfact\">local_70</span>;\n  undefined8 <span class=\"supfact\">local_68</span>;\n  undefined8 <span class=\"supfact\">local_60</span>;\n  undefined8 <span class=\"supfact\">local_58</span>;\n  undefined8 <span class=\"supfact\">local_50</span>;\n  undefined8 <span class=\"supfact\">local_48</span>;\n  undefined8 <span class=\"supfact\">local_40</span>;\n  undefined8 <span class=\"supfact\">local_38</span>;\n  undefined8 <span class=\"supfact\">local_30</span>;\n  undefined8 <span class=\"supfact\">local_28</span>;\n  undefined8 <span class=\"supfact\">local_20</span>;\n  undefined8 <span class=\"supfact\">local_18</span>;\n  uint <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_18</span> =\n      **(undefined8 **)(<span class=\"supfact\">param_2</span> + Number);\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    cil_list_init(<span class=\"supfact\">local_c8</span> +\n                      (ulong)<span class=\"supfact\">local_c</span> * Number,\n                  Number);\n  }\n  FUN_00100333(<span class=\"supfact\">local_18</span>, <span class=\"supfact\">local_c8</span>);\n  FUN_001018f8(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_0010194f(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_001019a6(param_1, <span class=\"supfact\">local_c0</span>);\n  FUN_00101a80(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_00101bc6(param_1, <span class=\"supfact\">local_b8</span>, String);\n  FUN_00101bc6(param_1, <span class=\"supfact\">local_b0</span>, String);\n  FUN_00101bc6(param_1, <span class=\"supfact\">local_a8</span>, String);\n  if (*(int *)(<span class=\"supfact\">param_2</span> + Number) == Number) {\n    FUN_00101d4f(param_1, <span class=\"supfact\">local_a0</span>);\n    FUN_00101fc7(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n                 <span class=\"supfact\">local_98</span>);\n    FUN_00102197(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number));\n    FUN_0010222f(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n                 <span class=\"supfact\">local_90</span>);\n    FUN_001023ff(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number));\n    FUN_001024eb(param_1, <span class=\"supfact\">param_2</span>, <span class=\"supfact\">local_88</span>);\n    FUN_001025eb(param_1, <span class=\"supfact\">param_2</span>, <span class=\"supfact\">local_80</span>,\n                 CIL_KEY_MLSVALIDATETRANS);\n  }\n  FUN_0010036a(param_1, <span class=\"supfact\">local_78</span>, CIL_KEY_POLICYCAP);\n  FUN_0010036a(param_1, <span class=\"supfact\">local_70</span>, String);\n  FUN_0010036a(param_1, <span class=\"supfact\">local_68</span>, String);\n  FUN_001026db(param_1, <span class=\"supfact\">local_60</span>);\n  FUN_0010036a(param_1, <span class=\"supfact\">local_58</span>, &DAT_00105cb7);\n  FUN_0010275f(param_1, <span class=\"supfact\">local_58</span>, <span class=\"supfact\">local_50</span>);\n  FUN_00102912(param_1, <span class=\"supfact\">local_58</span>);\n  FUN_00102992(param_1, <span class=\"supfact\">local_58</span>, <span class=\"supfact\">local_70</span>);\n  FUN_0010390c(param_1, <span class=\"supfact\">local_18</span>,\n               *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_0010396a(param_1, <span class=\"supfact\">local_48</span>);\n  FUN_001039e7(param_1, <span class=\"supfact\">local_48</span>, <span class=\"supfact\">local_58</span>);\n  FUN_00103b5a(param_1, <span class=\"supfact\">local_48</span>, <span class=\"supfact\">local_68</span>);\n  FUN_00103c9f(param_1, <span class=\"supfact\">local_40</span>);\n  FUN_00103d0e(param_1, <span class=\"supfact\">local_38</span>);\n  FUN_00103de6(param_1, *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number),\n               <span class=\"supfact\">local_30</span>, <span class=\"supfact\">local_48</span>);\n  FUN_00104050(param_1, <span class=\"supfact\">param_2</span>, <span class=\"supfact\">local_28</span>);\n  FUN_001025eb(param_1, <span class=\"supfact\">param_2</span>, <span class=\"supfact\">local_20</span>,\n               CIL_KEY_VALIDATETRANS);\n  FUN_00104150(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n               *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_001041dd(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n               *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_001043bc(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n               *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_001045ef(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n               *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_00104786(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n               *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_00104457(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n               *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_00104536(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n               *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_0010484b(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n               *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_00104b44(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n               *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_00104be2(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n               *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_00104cc5(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n               *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_00104d6e(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n               *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number));\n  FUN_00104e0c(param_1, *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number),\n               *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number));\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    cil_list_destroy(<span class=\"supfact\">local_c8</span> +\n                         (ulong)<span class=\"supfact\">local_c</span> * Number,\n                     Number);\n  }\n  return;\n}", "code_t": "void cil_gen_policy(FILE *out, cil_db *<span class=\"supfact\">db</span>) {\n  cil_tree_node *start;\n  cil_db *<span class=\"supfact\">db</span> - local;\n  FILE *out - local;\n  cil_list *<span class=\"supfact\">lists</span>[Number];\n  cil_tree_node *<span class=\"supfact\">head</span>;\n  uint <span class=\"supfact\">i</span>;\n  start = <span class=\"supfact\">db</span>->ast->root;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    cil_list_init(<span class=\"supfact\">lists</span> + <span class=\"supfact\">i</span>, Number);\n  }\n  cil_gather_statements(start, <span class=\"supfact\">lists</span>);\n  cil_class_decls_to_policy(out, <span class=\"supfact\">db</span>->classorder);\n  cil_sid_decls_to_policy(out, <span class=\"supfact\">db</span>->sidorder);\n  cil_commons_to_policy(out, <span class=\"supfact\">lists</span>[Number]);\n  cil_classes_to_policy(out, <span class=\"supfact\">db</span>->classorder);\n  cil_defaults_to_policy(out, <span class=\"supfact\">lists</span>[Number], String);\n  cil_defaults_to_policy(out, <span class=\"supfact\">lists</span>[Number], String);\n  cil_defaults_to_policy(out, <span class=\"supfact\">lists</span>[Number], String);\n  if (<span class=\"supfact\">db</span>->mls == Number) {\n    cil_default_ranges_to_policy(out, <span class=\"supfact\">lists</span>[Number]);\n    cil_sensitivities_to_policy(out, <span class=\"supfact\">db</span>->sensitivityorder,\n                                <span class=\"supfact\">lists</span>[Number]);\n    cil_dominance_to_policy(out, <span class=\"supfact\">db</span>->sensitivityorder);\n    cil_categories_to_policy(out, <span class=\"supfact\">db</span>->catorder,\n                             <span class=\"supfact\">lists</span>[Number]);\n    cil_levels_to_policy(out, <span class=\"supfact\">db</span>->sensitivityorder);\n    cil_mlsconstrains_to_policy(out, <span class=\"supfact\">db</span>,\n                                <span class=\"supfact\">lists</span>[Number]);\n    cil_validatetrans_to_policy(out, <span class=\"supfact\">db</span>,\n                                <span class=\"supfact\">lists</span>[Number],\n                                CIL_KEY_MLSVALIDATETRANS);\n  }\n  cil_simple_rules_to_policy(out, <span class=\"supfact\">lists</span>[Number],\n                             CIL_KEY_POLICYCAP);\n  cil_simple_rules_to_policy(out, <span class=\"supfact\">lists</span>[Number], String);\n  cil_simple_rules_to_policy(out, <span class=\"supfact\">lists</span>[Number], String);\n  cil_bools_to_policy(out, <span class=\"supfact\">lists</span>[Number]);\n  cil_simple_rules_to_policy(out, <span class=\"supfact\">lists</span>[Number], String);\n  cil_typealiases_to_policy(out, <span class=\"supfact\">lists</span>[Number],\n                            <span class=\"supfact\">lists</span>[Number]);\n  cil_typebounds_to_policy(out, <span class=\"supfact\">lists</span>[Number]);\n  cil_typeattributes_to_policy(out, <span class=\"supfact\">lists</span>[Number],\n                               <span class=\"supfact\">lists</span>[Number]);\n  cil_te_rules_to_policy(out, start, <span class=\"supfact\">db</span>->mls);\n  cil_roles_to_policy(out, <span class=\"supfact\">lists</span>[Number]);\n  cil_role_types_to_policy(out, <span class=\"supfact\">lists</span>[Number],\n                           <span class=\"supfact\">lists</span>[Number]);\n  cil_roleattributes_to_policy(out, <span class=\"supfact\">lists</span>[Number],\n                               <span class=\"supfact\">lists</span>[Number]);\n  cil_roleallows_to_policy(out, <span class=\"supfact\">lists</span>[Number]);\n  cil_roletransitions_to_policy(out, <span class=\"supfact\">lists</span>[Number]);\n  cil_users_to_policy(out, <span class=\"supfact\">db</span>->mls,\n                      <span class=\"supfact\">lists</span>[Number],\n                      <span class=\"supfact\">lists</span>[Number]);\n  cil_constrains_to_policy(out, <span class=\"supfact\">db</span>,\n                           <span class=\"supfact\">lists</span>[Number]);\n  cil_validatetrans_to_policy(out, <span class=\"supfact\">db</span>,\n                              <span class=\"supfact\">lists</span>[Number],\n                              CIL_KEY_VALIDATETRANS);\n  cil_sid_contexts_to_policy(out, <span class=\"supfact\">db</span>->sidorder,\n                             <span class=\"supfact\">db</span>->mls);\n  cil_fsuses_to_policy(out, <span class=\"supfact\">db</span>->fsuse, <span class=\"supfact\">db</span>->mls);\n  cil_genfscons_to_policy(out, <span class=\"supfact\">db</span>->genfscon,\n                          <span class=\"supfact\">db</span>->mls);\n  cil_portcons_to_policy(out, <span class=\"supfact\">db</span>->portcon,\n                         <span class=\"supfact\">db</span>->mls);\n  cil_netifcons_to_policy(out, <span class=\"supfact\">db</span>->netifcon,\n                          <span class=\"supfact\">db</span>->mls);\n  cil_ibpkeycons_to_policy(out, <span class=\"supfact\">db</span>->ibpkeycon,\n                           <span class=\"supfact\">db</span>->mls);\n  cil_ibendportcons_to_policy(out, <span class=\"supfact\">db</span>->ibendportcon,\n                              <span class=\"supfact\">db</span>->mls);\n  cil_nodecons_to_policy(out, <span class=\"supfact\">db</span>->nodecon,\n                         <span class=\"supfact\">db</span>->mls);\n  cil_pirqcons_to_policy(out, <span class=\"supfact\">db</span>->pirqcon,\n                         <span class=\"supfact\">db</span>->mls);\n  cil_iomemcons_to_policy(out, <span class=\"supfact\">db</span>->iomemcon,\n                          <span class=\"supfact\">db</span>->mls);\n  cil_ioportcons_to_policy(out, <span class=\"supfact\">db</span>->ioportcon,\n                           <span class=\"supfact\">db</span>->mls);\n  cil_pcidevicecons_to_policy(out, <span class=\"supfact\">db</span>->pcidevicecon,\n                              <span class=\"supfact\">db</span>->mls);\n  cil_devicetreecons_to_policy(out, <span class=\"supfact\">db</span>->devicetreecon,\n                               <span class=\"supfact\">db</span>->mls);\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    cil_list_destroy(<span class=\"supfact\">lists</span> + <span class=\"supfact\">i</span>, Number);\n  }\n  return;\n}", "var": [{"name": "param_2", "type": "__unk__", "pred_name": "y", "ref_name": "db", "ref_type": "cil_db * *"}, {"name": "local_c8", "type": "__unk__", "pred_name": "z", "ref_name": "lists", "ref_type": "cil_list *[22][22]"}, {"name": "local_c0", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_b8", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_b0", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_a8", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_a0", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_98", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_90", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_88", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_80", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_78", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_70", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_68", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_60", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_58", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_48", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_40", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_38", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_28", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_20", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_18", "type": "disappear", "pred_name": "", "ref_name": "head", "ref_type": "cil_tree_node * *"}, {"name": "local_c", "type": "int", "pred_name": "c", "ref_name": "i", "ref_type": "uint"}], "body_in_train": false}, {"repo_owner": "android-iot", "repo_name": "gnu", "path": "android-iot/gnu/3f90ae4cf207a4a7869a2711484445fe3f0f69ff1d6319775d69d1e6d03768b5", "path_in_repo": "android-iot/gnu/alarm/usr/share/doc/xz/examples/01_compress_easy", "objdump": "", "code_s": "size_t fwrite(void *__ptr, size_t __size, size_t __n, FILE *__s) {\n  size_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_fwrite_00404068)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "size_t fwrite(void *__ptr, size_t __size, size_t __n, FILE *__s) {\n  size_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_fwrite_00404068)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "size_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "size_t"}], "body_in_train": true}, {"repo_owner": "sreejithcools", "repo_name": "opensourceworkspace", "path": "sreejithcools/opensourceworkspace/0b1d41075ceeb613d97ce137b564e5495bba34f37a7888eb5888d0167f5d5e21", "path_in_repo": "sreejithcools/opensourceworkspace/xuggle-xuggler-iStreamLife/captive/openssl/csrc/apps/apps.o", "objdump": "0000000000002bfc <save_serial>:\n    2bfc:\t55                   \tpush   %rbp\n    2bfd:\t48 89 e5             \tmov    %rsp,%rbp\n    2c00:\t53                   \tpush   %rbx\n    2c01:\t48 81 ec 48 01 00 00 \tsub    $0x148,%rsp\n    2c08:\t48 89 bd c8 fe ff ff \tmov    %rdi,-0x138(%rbp)\n    2c0f:\t48 89 b5 c0 fe ff ff \tmov    %rsi,-0x140(%rbp)\n    2c16:\t48 89 95 b8 fe ff ff \tmov    %rdx,-0x148(%rbp)\n    2c1d:\t48 89 8d b0 fe ff ff \tmov    %rcx,-0x150(%rbp)\n    2c24:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    2c2b:\t00 \n    2c2c:\tc7 45 e4 00 00 00 00 \tmovl   $0x0,-0x1c(%rbp)\n    2c33:\t48 c7 45 d8 00 00 00 \tmovq   $0x0,-0x28(%rbp)\n    2c3a:\t00 \n    2c3b:\t48 83 bd c0 fe ff ff \tcmpq   $0x0,-0x140(%rbp)\n    2c42:\t00 \n    2c43:\t75 14                \tjne    2c59 <save_serial+0x5d>\n    2c45:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n    2c4c:\t48 89 c7             \tmov    %rax,%rdi\n    2c4f:\te8 00 00 00 00       \tcall   2c54 <save_serial+0x58>\n    2c54:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n    2c57:\teb 28                \tjmp    2c81 <save_serial+0x85>\n    2c59:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n    2c60:\t48 89 c7             \tmov    %rax,%rdi\n    2c63:\te8 00 00 00 00       \tcall   2c68 <save_serial+0x6c>\n    2c68:\t89 c3                \tmov    %eax,%ebx\n    2c6a:\t48 8b 85 c0 fe ff ff \tmov    -0x140(%rbp),%rax\n    2c71:\t48 89 c7             \tmov    %rax,%rdi\n    2c74:\te8 00 00 00 00       \tcall   2c79 <save_serial+0x7d>\n    2c79:\t01 d8                \tadd    %ebx,%eax\n    2c7b:\t83 c0 01             \tadd    $0x1,%eax\n    2c7e:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n    2c81:\t81 7d d4 ff 00 00 00 \tcmpl   $0xff,-0x2c(%rbp)\n    2c88:\t7e 1e                \tjle    2ca8 <save_serial+0xac>\n    2c8a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2c91 <save_serial+0x95>\n    2c91:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2c96:\t48 89 c7             \tmov    %rax,%rdi\n    2c99:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2c9e:\te8 00 00 00 00       \tcall   2ca3 <save_serial+0xa7>\n    2ca3:\te9 4c 01 00 00       \tjmp    2df4 <save_serial+0x1f8>\n    2ca8:\t48 83 bd c0 fe ff ff \tcmpq   $0x0,-0x140(%rbp)\n    2caf:\t00 \n    2cb0:\t75 20                \tjne    2cd2 <save_serial+0xd6>\n    2cb2:\t48 8b 8d c8 fe ff ff \tmov    -0x138(%rbp),%rcx\n    2cb9:\t48 8d 85 d0 fe ff ff \tlea    -0x130(%rbp),%rax\n    2cc0:\tba 00 01 00 00       \tmov    $0x100,%edx\n    2cc5:\t48 89 ce             \tmov    %rcx,%rsi\n    2cc8:\t48 89 c7             \tmov    %rax,%rdi\n    2ccb:\te8 00 00 00 00       \tcall   2cd0 <save_serial+0xd4>\n    2cd0:\teb 35                \tjmp    2d07 <save_serial+0x10b>\n    2cd2:\t48 8b 8d c0 fe ff ff \tmov    -0x140(%rbp),%rcx\n    2cd9:\t48 8b 95 c8 fe ff ff \tmov    -0x138(%rbp),%rdx\n    2ce0:\t48 8d 85 d0 fe ff ff \tlea    -0x130(%rbp),%rax\n    2ce7:\t49 89 c8             \tmov    %rcx,%r8\n    2cea:\t48 89 d1             \tmov    %rdx,%rcx\n    2ced:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2cf2:\tbe 00 01 00 00       \tmov    $0x100,%esi\n    2cf7:\t48 89 c7             \tmov    %rax,%rdi\n    2cfa:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2cff:\te8 00 00 00 00       \tcall   2d04 <save_serial+0x108>\n    2d04:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n    2d07:\te8 00 00 00 00       \tcall   2d0c <save_serial+0x110>\n    2d0c:\t48 89 c7             \tmov    %rax,%rdi\n    2d0f:\te8 00 00 00 00       \tcall   2d14 <save_serial+0x118>\n    2d14:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    2d18:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    2d1d:\t75 14                \tjne    2d33 <save_serial+0x137>\n    2d1f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2d26 <save_serial+0x12a>\n    2d26:\t48 89 c7             \tmov    %rax,%rdi\n    2d29:\te8 00 00 00 00       \tcall   2d2e <save_serial+0x132>\n    2d2e:\te9 c1 00 00 00       \tjmp    2df4 <save_serial+0x1f8>\n    2d33:\t48 8d 95 d0 fe ff ff \tlea    -0x130(%rbp),%rdx\n    2d3a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2d3e:\t48 89 d1             \tmov    %rdx,%rcx\n    2d41:\tba 05 00 00 00       \tmov    $0x5,%edx\n    2d46:\tbe 6c 00 00 00       \tmov    $0x6c,%esi\n    2d4b:\t48 89 c7             \tmov    %rax,%rdi\n    2d4e:\te8 00 00 00 00       \tcall   2d53 <save_serial+0x157>\n    2d53:\t48 85 c0             \ttest   %rax,%rax\n    2d56:\t7f 14                \tjg     2d6c <save_serial+0x170>\n    2d58:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n    2d5f:\t48 89 c7             \tmov    %rax,%rdi\n    2d62:\te8 00 00 00 00       \tcall   2d67 <save_serial+0x16b>\n    2d67:\te9 88 00 00 00       \tjmp    2df4 <save_serial+0x1f8>\n    2d6c:\t48 8b 85 b8 fe ff ff \tmov    -0x148(%rbp),%rax\n    2d73:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2d78:\t48 89 c7             \tmov    %rax,%rdi\n    2d7b:\te8 00 00 00 00       \tcall   2d80 <save_serial+0x184>\n    2d80:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    2d84:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n    2d89:\t75 1b                \tjne    2da6 <save_serial+0x1aa>\n    2d8b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2d92 <save_serial+0x196>\n    2d92:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2d97:\t48 89 c7             \tmov    %rax,%rdi\n    2d9a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2d9f:\te8 00 00 00 00       \tcall   2da4 <save_serial+0x1a8>\n    2da4:\teb 4e                \tjmp    2df4 <save_serial+0x1f8>\n    2da6:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    2daa:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2dae:\t48 89 d6             \tmov    %rdx,%rsi\n    2db1:\t48 89 c7             \tmov    %rax,%rdi\n    2db4:\te8 00 00 00 00       \tcall   2db9 <save_serial+0x1bd>\n    2db9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2dbd:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2dc2:\t48 89 c7             \tmov    %rax,%rdi\n    2dc5:\te8 00 00 00 00       \tcall   2dca <save_serial+0x1ce>\n    2dca:\tc7 45 e4 01 00 00 00 \tmovl   $0x1,-0x1c(%rbp)\n    2dd1:\t48 83 bd b0 fe ff ff \tcmpq   $0x0,-0x150(%rbp)\n    2dd8:\t00 \n    2dd9:\t74 18                \tje     2df3 <save_serial+0x1f7>\n    2ddb:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    2de2:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    2de6:\t48 89 10             \tmov    %rdx,(%rax)\n    2de9:\t48 c7 45 d8 00 00 00 \tmovq   $0x0,-0x28(%rbp)\n    2df0:\t00 \n    2df1:\teb 01                \tjmp    2df4 <save_serial+0x1f8>\n    2df3:\t90                   \tnop\n    2df4:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    2df9:\t74 0c                \tje     2e07 <save_serial+0x20b>\n    2dfb:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2dff:\t48 89 c7             \tmov    %rax,%rdi\n    2e02:\te8 00 00 00 00       \tcall   2e07 <save_serial+0x20b>\n    2e07:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n    2e0c:\t74 0c                \tje     2e1a <save_serial+0x21e>\n    2e0e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    2e12:\t48 89 c7             \tmov    %rax,%rdi\n    2e15:\te8 00 00 00 00       \tcall   2e1a <save_serial+0x21e>\n    2e1a:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n    2e1d:\t48 81 c4 48 01 00 00 \tadd    $0x148,%rsp\n    2e24:\t5b                   \tpop    %rbx\n    2e25:\t5d                   \tpop    %rbp\n    2e26:\tc3                   \tret    ", "code_s": "undefined4 save_serial(char *param_1, char *<span class=\"supfact\">param_2</span>,\n                       BIGNUM *param_3,\n                       ASN1_INTEGER **<span class=\"supfact\">param_4</span>) {\n  size_t sVar1;\n  size_t sVar2;\n  BIO_METHOD *type;\n  long lVar3;\n  char <span class=\"supfact\">local_138</span>[Number];\n  int <span class=\"supfact\">local_34</span>;\n  ASN1_INTEGER *<span class=\"supfact\">local_30</span>;\n  undefined4 <span class=\"supfact\">local_24</span>;\n  BIO *<span class=\"supfact\">local_20</span>;\n  <span class=\"supfact\">local_20</span> = (BIO *)Number;\n  <span class=\"supfact\">local_24</span> = Number;\n  <span class=\"supfact\">local_30</span> = (ASN1_INTEGER *)Number;\n  if (<span class=\"supfact\">param_2</span> == (char *)Number) {\n    sVar1 = strlen(param_1);\n    <span class=\"supfact\">local_34</span> = (int)sVar1;\n  } else {\n    sVar1 = strlen(param_1);\n    sVar2 = strlen(<span class=\"supfact\">param_2</span>);\n    <span class=\"supfact\">local_34</span> = (int)sVar2 + (int)sVar1 + Number;\n  }\n  if (<span class=\"supfact\">local_34</span> < Number) {\n    if (<span class=\"supfact\">param_2</span> == (char *)Number) {\n      BUF_strlcpy(<span class=\"supfact\">local_138</span>, param_1, Number);\n    } else {\n      <span class=\"supfact\">local_34</span> =\n          BIO_snprintf(<span class=\"supfact\">local_138</span>, Number, String, param_1,\n                       <span class=\"supfact\">param_2</span>);\n    }\n    type = BIO_s_file();\n    <span class=\"supfact\">local_20</span> = BIO_new(type);\n    if (<span class=\"supfact\">local_20</span> == (BIO *)Number) {\n      ERR_print_errors(_bio_err);\n    } else {\n      lVar3 = BIO_ctrl(<span class=\"supfact\">local_20</span>, Number, Number,\n                       <span class=\"supfact\">local_138</span>);\n      if (lVar3 < Number) {\n        perror(param_1);\n      } else {\n        <span class=\"supfact\">local_30</span> =\n            BN_to_ASN1_INTEGER(param_3, (ASN1_INTEGER *)Number);\n        if (<span class=\"supfact\">local_30</span> == (ASN1_INTEGER *)Number) {\n          BIO_printf(_bio_err, String);\n        } else {\n          i2a_ASN1_INTEGER(<span class=\"supfact\">local_20</span>, <span class=\"supfact\">local_30</span>);\n          BIO_puts(<span class=\"supfact\">local_20</span>, String);\n          <span class=\"supfact\">local_24</span> = Number;\n          if (<span class=\"supfact\">param_4</span> != (ASN1_INTEGER **)Number) {\n            *<span class=\"supfact\">param_4</span> = <span class=\"supfact\">local_30</span>;\n            <span class=\"supfact\">local_30</span> = (ASN1_INTEGER *)Number;\n          }\n        }\n      }\n    }\n  } else {\n    BIO_printf(_bio_err, String);\n  }\n  if (<span class=\"supfact\">local_20</span> != (BIO *)Number) {\n    BIO_free_all(<span class=\"supfact\">local_20</span>);\n  }\n  if (<span class=\"supfact\">local_30</span> != (ASN1_INTEGER *)Number) {\n    ASN1_INTEGER_free(<span class=\"supfact\">local_30</span>);\n  }\n  return <span class=\"supfact\">local_24</span>;\n}", "code_t": "int save_serial(char *serialfile, char *<span class=\"supfact\">suffix</span>, BIGNUM *serial,\n                ASN1_INTEGER **<span class=\"supfact\">retai</span>) {\n  size_t sVar1;\n  size_t sVar2;\n  BIO_METHOD *type;\n  long lVar3;\n  ASN1_INTEGER **<span class=\"supfact\">retai</span> - local;\n  BIGNUM *serial - local;\n  char *<span class=\"supfact\">suffix</span> - local;\n  char *serialfile - local;\n  char <span class=\"supfact\">buf</span>[Number][Number];\n  int <span class=\"supfact\">j</span>;\n  ASN1_INTEGER *<span class=\"supfact\">ai</span>;\n  int <span class=\"supfact\">ret</span>;\n  BIO *<span class=\"supfact\">out</span>;\n  <span class=\"supfact\">out</span> = (BIO *)Number;\n  <span class=\"supfact\">ret</span> = Number;\n  <span class=\"supfact\">ai</span> = (ASN1_INTEGER *)Number;\n  if (<span class=\"supfact\">suffix</span> == (char *)Number) {\n    sVar1 = strlen(serialfile);\n    <span class=\"supfact\">j</span> = (int)sVar1;\n  } else {\n    sVar1 = strlen(serialfile);\n    sVar2 = strlen(<span class=\"supfact\">suffix</span>);\n    <span class=\"supfact\">j</span> = (int)sVar2 + (int)sVar1 + Number;\n  }\n  if (<span class=\"supfact\">j</span> < Number) {\n    if (<span class=\"supfact\">suffix</span> == (char *)Number) {\n      BUF_strlcpy((char *)<span class=\"supfact\">buf</span>, serialfile, Number);\n    } else {\n      BIO_snprintf((char *)<span class=\"supfact\">buf</span>, Number, String, serialfile,\n                   <span class=\"supfact\">suffix</span>);\n    }\n    type = BIO_s_file();\n    <span class=\"supfact\">out</span> = (BIO *)BIO_new(type);\n    if (<span class=\"supfact\">out</span> == (BIO *)Number) {\n      ERR_print_errors(_bio_err);\n    } else {\n      lVar3 = BIO_ctrl((BIO *)<span class=\"supfact\">out</span>, Number, Number,\n                       <span class=\"supfact\">buf</span>);\n      if (lVar3 < Number) {\n        perror(serialfile);\n      } else {\n        <span class=\"supfact\">ai</span> = (ASN1_INTEGER *)BN_to_ASN1_INTEGER(\n            (BIGNUM *)serial, (ASN1_INTEGER *)Number);\n        if (<span class=\"supfact\">ai</span> == (ASN1_INTEGER *)Number) {\n          BIO_printf(_bio_err, String);\n        } else {\n          i2a_ASN1_INTEGER((BIO *)<span class=\"supfact\">out</span>,\n                           (ASN1_INTEGER *)<span class=\"supfact\">ai</span>);\n          BIO_puts((BIO *)<span class=\"supfact\">out</span>, String);\n          <span class=\"supfact\">ret</span> = Number;\n          if (<span class=\"supfact\">retai</span> != (ASN1_INTEGER **)Number) {\n            *<span class=\"supfact\">retai</span> = <span class=\"supfact\">ai</span>;\n            <span class=\"supfact\">ai</span> = (ASN1_INTEGER *)Number;\n          }\n        }\n      }\n    }\n  } else {\n    BIO_printf(_bio_err, String);\n  }\n  if (<span class=\"supfact\">out</span> != (BIO *)Number) {\n    BIO_free_all((BIO *)<span class=\"supfact\">out</span>);\n  }\n  if (<span class=\"supfact\">ai</span> != (ASN1_INTEGER *)Number) {\n    ASN1_INTEGER_free((ASN1_INTEGER *)<span class=\"supfact\">ai</span>);\n  }\n  return <span class=\"supfact\">ret</span>;\n}", "var": [{"name": "param_2", "type": "char * *", "pred_name": "suffix", "ref_name": "suffix", "ref_type": "char * *"}, {"name": "param_4", "type": "ASN1_INTEGER * * *", "pred_name": "__unk__", "ref_name": "retai", "ref_type": "ASN1_INTEGER * * *"}, {"name": "local_138", "type": "__unk__", "pred_name": "buf", "ref_name": "buf", "ref_type": "char[1][256][1]"}, {"name": "local_34", "type": "int", "pred_name": "j", "ref_name": "j", "ref_type": "int"}, {"name": "local_30", "type": "ASN1_INTEGER * *", "pred_name": "ai", "ref_name": "ai", "ref_type": "ASN1_INTEGER * *"}, {"name": "local_24", "type": "int", "pred_name": "ret", "ref_name": "ret", "ref_type": "int"}, {"name": "local_20", "type": "BIO * *", "pred_name": "out", "ref_name": "out", "ref_type": "BIO * *"}], "body_in_train": true}, {"repo_owner": "android-iot", "repo_name": "gnu", "path": "android-iot/gnu/3f90ae4cf207a4a7869a2711484445fe3f0f69ff1d6319775d69d1e6d03768b5", "path_in_repo": "android-iot/gnu/alarm/usr/share/doc/xz/examples/01_compress_easy", "objdump": "", "code_s": "size_t fwrite(void *__ptr, size_t __size, size_t __n, FILE *__s) {\n  size_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_fwrite_00404068)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "size_t fwrite(void *__ptr, size_t __size, size_t __n, FILE *__s) {\n  size_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_fwrite_00404068)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "size_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "size_t"}], "body_in_train": true}, {"repo_owner": "friends-of-iup", "repo_name": "cd", "path": "friends-of-iup/cd/08668f24dd739966e87158cedbf1e01feb8715f6c272e27dec05a9dcecda5cf3", "path_in_repo": "friends-of-iup/cd//obj/pdflib/Linux44_64/p_shading.o", "objdump": "0000000000000000 <pdf_init_shadings>:\n       0:\t55                   \tpush   %rbp\n       1:\t48 89 e5             \tmov    %rsp,%rbp\n       4:\t48 83 ec 20          \tsub    $0x20,%rsp\n       8:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n       c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      10:\tc7 80 1c 01 00 00 00 \tmovl   $0x0,0x11c(%rax)\n      17:\t00 00 00 \n      1a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      1e:\tc7 80 18 01 00 00 04 \tmovl   $0x4,0x118(%rax)\n      25:\t00 00 00 \n      28:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      2c:\t8b 80 18 01 00 00    \tmov    0x118(%rax),%eax\n      32:\t48 98                \tcltq   \n      34:\t48 c1 e0 04          \tshl    $0x4,%rax\n      38:\t48 89 c1             \tmov    %rax,%rcx\n      3b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      3f:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n      43:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 4a <pdf_init_shadings+0x4a>\n      4a:\t48 89 ce             \tmov    %rcx,%rsi\n      4d:\t48 89 c7             \tmov    %rax,%rdi\n      50:\te8 00 00 00 00       \tcall   55 <pdf_init_shadings+0x55>\n      55:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n      59:\t48 89 82 10 01 00 00 \tmov    %rax,0x110(%rdx)\n      60:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n      67:\teb 42                \tjmp    ab <pdf_init_shadings+0xab>\n      69:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      6d:\t48 8b 80 10 01 00 00 \tmov    0x110(%rax),%rax\n      74:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n      77:\t48 63 d2             \tmovslq %edx,%rdx\n      7a:\t48 c1 e2 04          \tshl    $0x4,%rdx\n      7e:\t48 01 d0             \tadd    %rdx,%rax\n      81:\tc7 40 08 00 00 00 00 \tmovl   $0x0,0x8(%rax)\n      88:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      8c:\t48 8b 80 10 01 00 00 \tmov    0x110(%rax),%rax\n      93:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n      96:\t48 63 d2             \tmovslq %edx,%rdx\n      99:\t48 c1 e2 04          \tshl    $0x4,%rdx\n      9d:\t48 01 d0             \tadd    %rdx,%rax\n      a0:\t48 c7 00 ff ff ff ff \tmovq   $0xffffffffffffffff,(%rax)\n      a7:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n      ab:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      af:\t8b 80 18 01 00 00    \tmov    0x118(%rax),%eax\n      b5:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n      b8:\t7c af                \tjl     69 <pdf_init_shadings+0x69>\n      ba:\t90                   \tnop\n      bb:\t90                   \tnop\n      bc:\tc9                   \tleave  \n      bd:\tc3                   \tret    ", "code_s": "void pdf_init_shadings(long <span class=\"supfact\">param_1</span>) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  int <span class=\"supfact\">local_c</span>;\n  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  <span class=\"supfact\">uVar1</span> = pdc_malloc(\n      *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n      (long)*(int *)(<span class=\"supfact\">param_1</span> + Number) << Number, String);\n  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = <span class=\"supfact\">uVar1</span>;\n  for (<span class=\"supfact\">local_c</span> = Number;\n       <span class=\"supfact\">local_c</span> < *(int *)(<span class=\"supfact\">param_1</span> + Number);\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    *(undefined4 *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                    (long)<span class=\"supfact\">local_c</span> * Number + Number) = Number;\n    *(undefined8 *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                    (long)<span class=\"supfact\">local_c</span> * Number) = Number;\n  }\n  return;\n}", "code_t": "void pdf_init_shadings(PDF *<span class=\"supfact\">p</span>) {\n  pdf_shading *<span class=\"supfact\">ppVar1</span>;\n  PDF *<span class=\"supfact\">p</span> - local;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">p</span>->shadings_number = Number;\n  <span class=\"supfact\">p</span>->shadings_capacity = Number;\n  <span class=\"supfact\">ppVar1</span> = (pdf_shading *)pdc_malloc(\n      <span class=\"supfact\">p</span>->pdc,\n      (long)<span class=\"supfact\">p</span>->shadings_capacity << Number, String);\n  <span class=\"supfact\">p</span>->shadings = <span class=\"supfact\">ppVar1</span>;\n  for (<span class=\"supfact\">i</span> = Number;\n       <span class=\"supfact\">i</span> < <span class=\"supfact\">p</span>->shadings_capacity;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    <span class=\"supfact\">p</span>->shadings[<span class=\"supfact\">i</span>].used_on_current_page =\n        Number;\n    <span class=\"supfact\">p</span>->shadings[<span class=\"supfact\">i</span>].obj_id = -Number;\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "__va_list_tag * *", "pred_name": "ap", "ref_name": "p", "ref_type": "PDF * *"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "ppVar1", "ref_type": "pdf_shading * *"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "libretro", "repo_name": "libretro-tyrquake", "path": "libretro/libretro-tyrquake/a6ae2f7d04e47f6c97e70ca66b580410fd9c49aa87a614229899fd5a11fe6468", "path_in_repo": "libretro/libretro-tyrquake//build/qwgl/cvar.o", "objdump": "0000000000000000 <Cvar_FindVar>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 83 ec 30          \tsub    $0x30,%rsp\n   8:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n   c:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n  13:\t00 \n  14:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n  18:\t48 89 c6             \tmov    %rax,%rsi\n  1b:\tbf 00 00 00 00       \tmov    $0x0,%edi\n  20:\te8 00 00 00 00       \tcall   25 <Cvar_FindVar+0x25>\n  25:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  29:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n  2e:\t74 14                \tje     44 <Cvar_FindVar+0x44>\n  30:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  34:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n  38:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  3c:\t48 83 e8 30          \tsub    $0x30,%rax\n  40:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n  44:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  48:\tc9                   \tleave  \n  49:\tc3                   \tret    ", "code_s": "long Cvar_FindVar(undefined8 <span class=\"supfact\">param_1</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = Number;\n  <span class=\"supfact\">lVar1</span> = STree_Find(cvar_tree, <span class=\"supfact\">param_1</span>);\n  if (<span class=\"supfact\">lVar1</span> != Number) {\n    <span class=\"supfact\">local_10</span> = <span class=\"supfact\">lVar1</span> + -Number;\n  }\n  return <span class=\"supfact\">local_10</span>;\n}", "code_t": "cvar_t *Cvar_FindVar(char *<span class=\"supfact\">var_name</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  char *<span class=\"supfact\">var_name</span> - local;\n  stree_node *__mptr;\n  stree_node *n;\n  cvar_s *<span class=\"supfact\">ret</span>;\n  <span class=\"supfact\">ret</span> = (cvar_s *)Number;\n  <span class=\"supfact\">lVar1</span> = STree_Find(&cvar_tree, <span class=\"supfact\">var_name</span>);\n  if (<span class=\"supfact\">lVar1</span> != Number) {\n    <span class=\"supfact\">ret</span> = (cvar_s *)(<span class=\"supfact\">lVar1</span> + -Number);\n  }\n  return <span class=\"supfact\">ret</span>;\n}", "var": [{"name": "param_1", "type": "FT_Angle", "pred_name": "angle", "ref_name": "var_name", "ref_type": "char * *"}, {"name": "lVar1", "type": "disappear", "pred_name": "", "ref_name": "lVar1", "ref_type": "long"}, {"name": "local_10", "type": "FT_Angle", "pred_name": "angle", "ref_name": "ret", "ref_type": "cvar_s * *"}], "body_in_train": false}, {"repo_owner": "friends-of-iup", "repo_name": "cd", "path": "friends-of-iup/cd/08668f24dd739966e87158cedbf1e01feb8715f6c272e27dec05a9dcecda5cf3", "path_in_repo": "friends-of-iup/cd//obj/pdflib/Linux44_64/p_shading.o", "objdump": "0000000000000000 <pdf_init_shadings>:\n       0:\t55                   \tpush   %rbp\n       1:\t48 89 e5             \tmov    %rsp,%rbp\n       4:\t48 83 ec 20          \tsub    $0x20,%rsp\n       8:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n       c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      10:\tc7 80 1c 01 00 00 00 \tmovl   $0x0,0x11c(%rax)\n      17:\t00 00 00 \n      1a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      1e:\tc7 80 18 01 00 00 04 \tmovl   $0x4,0x118(%rax)\n      25:\t00 00 00 \n      28:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      2c:\t8b 80 18 01 00 00    \tmov    0x118(%rax),%eax\n      32:\t48 98                \tcltq   \n      34:\t48 c1 e0 04          \tshl    $0x4,%rax\n      38:\t48 89 c1             \tmov    %rax,%rcx\n      3b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      3f:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n      43:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 4a <pdf_init_shadings+0x4a>\n      4a:\t48 89 ce             \tmov    %rcx,%rsi\n      4d:\t48 89 c7             \tmov    %rax,%rdi\n      50:\te8 00 00 00 00       \tcall   55 <pdf_init_shadings+0x55>\n      55:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n      59:\t48 89 82 10 01 00 00 \tmov    %rax,0x110(%rdx)\n      60:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n      67:\teb 42                \tjmp    ab <pdf_init_shadings+0xab>\n      69:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      6d:\t48 8b 80 10 01 00 00 \tmov    0x110(%rax),%rax\n      74:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n      77:\t48 63 d2             \tmovslq %edx,%rdx\n      7a:\t48 c1 e2 04          \tshl    $0x4,%rdx\n      7e:\t48 01 d0             \tadd    %rdx,%rax\n      81:\tc7 40 08 00 00 00 00 \tmovl   $0x0,0x8(%rax)\n      88:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      8c:\t48 8b 80 10 01 00 00 \tmov    0x110(%rax),%rax\n      93:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n      96:\t48 63 d2             \tmovslq %edx,%rdx\n      99:\t48 c1 e2 04          \tshl    $0x4,%rdx\n      9d:\t48 01 d0             \tadd    %rdx,%rax\n      a0:\t48 c7 00 ff ff ff ff \tmovq   $0xffffffffffffffff,(%rax)\n      a7:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n      ab:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n      af:\t8b 80 18 01 00 00    \tmov    0x118(%rax),%eax\n      b5:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n      b8:\t7c af                \tjl     69 <pdf_init_shadings+0x69>\n      ba:\t90                   \tnop\n      bb:\t90                   \tnop\n      bc:\tc9                   \tleave  \n      bd:\tc3                   \tret    ", "code_s": "void pdf_init_shadings(long <span class=\"supfact\">param_1</span>) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  int <span class=\"supfact\">local_c</span>;\n  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  <span class=\"supfact\">uVar1</span> = pdc_malloc(\n      *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n      (long)*(int *)(<span class=\"supfact\">param_1</span> + Number) << Number, String);\n  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = <span class=\"supfact\">uVar1</span>;\n  for (<span class=\"supfact\">local_c</span> = Number;\n       <span class=\"supfact\">local_c</span> < *(int *)(<span class=\"supfact\">param_1</span> + Number);\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    *(undefined4 *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                    (long)<span class=\"supfact\">local_c</span> * Number + Number) = Number;\n    *(undefined8 *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                    (long)<span class=\"supfact\">local_c</span> * Number) = Number;\n  }\n  return;\n}", "code_t": "void pdf_init_shadings(PDF *<span class=\"supfact\">p</span>) {\n  pdf_shading *<span class=\"supfact\">ppVar1</span>;\n  PDF *<span class=\"supfact\">p</span> - local;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">p</span>->shadings_number = Number;\n  <span class=\"supfact\">p</span>->shadings_capacity = Number;\n  <span class=\"supfact\">ppVar1</span> = (pdf_shading *)pdc_malloc(\n      <span class=\"supfact\">p</span>->pdc,\n      (long)<span class=\"supfact\">p</span>->shadings_capacity << Number, String);\n  <span class=\"supfact\">p</span>->shadings = <span class=\"supfact\">ppVar1</span>;\n  for (<span class=\"supfact\">i</span> = Number;\n       <span class=\"supfact\">i</span> < <span class=\"supfact\">p</span>->shadings_capacity;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    <span class=\"supfact\">p</span>->shadings[<span class=\"supfact\">i</span>].used_on_current_page =\n        Number;\n    <span class=\"supfact\">p</span>->shadings[<span class=\"supfact\">i</span>].obj_id = -Number;\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "__va_list_tag * *", "pred_name": "ap", "ref_name": "p", "ref_type": "PDF * *"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "ppVar1", "ref_type": "pdf_shading * *"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "qiupq", "repo_name": "ffmpeg", "path": "qiupq/ffmpeg/21b57fba34a5621901c137739a252b406aa72d59ab1b75281ab85bb6148fefbf", "path_in_repo": "qiupq/ffmpeg//libavformat/mux.o", "objdump": "00000000000033ae <ff_interleave_packet_per_dts>:\n    33ae:\t41 55                \tpush   %r13\n    33b0:\t41 54                \tpush   %r12\n    33b2:\t55                   \tpush   %rbp\n    33b3:\t53                   \tpush   %rbx\n    33b4:\t48 81 ec 98 00 00 00 \tsub    $0x98,%rsp\n    33bb:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n    33c0:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n    33c5:\t48 89 54 24 08       \tmov    %rdx,0x8(%rsp)\n    33ca:\t89 4c 24 04          \tmov    %ecx,0x4(%rsp)\n    33ce:\tc7 84 24 8c 00 00 00 \tmovl   $0x0,0x8c(%rsp)\n    33d5:\t00 00 00 00 \n    33d9:\tc7 84 24 88 00 00 00 \tmovl   $0x0,0x88(%rsp)\n    33e0:\t00 00 00 00 \n    33e4:\t8b 44 24 04          \tmov    0x4(%rsp),%eax\n    33e8:\t89 44 24 74          \tmov    %eax,0x74(%rsp)\n    33ec:\t48 83 7c 24 08 00    \tcmpq   $0x0,0x8(%rsp)\n    33f2:\t74 2e                \tje     3422 <ff_interleave_packet_per_dts+0x74>\n    33f4:\t48 8b 4c 24 08       \tmov    0x8(%rsp),%rcx\n    33f9:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    33fe:\tba 00 00 00 00       \tmov    $0x0,%edx\n    3403:\t48 89 ce             \tmov    %rcx,%rsi\n    3406:\t48 89 c7             \tmov    %rax,%rdi\n    3409:\te8 00 00 00 00       \tcall   340e <ff_interleave_packet_per_dts+0x60>\n    340e:\t89 44 24 70          \tmov    %eax,0x70(%rsp)\n    3412:\t83 7c 24 70 00       \tcmpl   $0x0,0x70(%rsp)\n    3417:\t79 09                \tjns    3422 <ff_interleave_packet_per_dts+0x74>\n    3419:\t8b 44 24 70          \tmov    0x70(%rsp),%eax\n    341d:\te9 e9 06 00 00       \tjmp    3b0b <ff_interleave_packet_per_dts+0x75d>\n    3422:\tc7 84 24 84 00 00 00 \tmovl   $0x0,0x84(%rsp)\n    3429:\t00 00 00 00 \n    342d:\te9 cd 00 00 00       \tjmp    34ff <ff_interleave_packet_per_dts+0x151>\n    3432:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3437:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    343b:\t8b 94 24 84 00 00 00 \tmov    0x84(%rsp),%edx\n    3442:\t48 63 d2             \tmovslq %edx,%rdx\n    3445:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    3449:\t48 01 d0             \tadd    %rdx,%rax\n    344c:\t48 8b 00             \tmov    (%rax),%rax\n    344f:\t48 8b 80 18 01 00 00 \tmov    0x118(%rax),%rax\n    3456:\t48 85 c0             \ttest   %rax,%rax\n    3459:\t74 0d                \tje     3468 <ff_interleave_packet_per_dts+0xba>\n    345b:\t83 84 24 8c 00 00 00 \taddl   $0x1,0x8c(%rsp)\n    3462:\t01 \n    3463:\te9 8f 00 00 00       \tjmp    34f7 <ff_interleave_packet_per_dts+0x149>\n    3468:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    346d:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    3471:\t8b 94 24 84 00 00 00 \tmov    0x84(%rsp),%edx\n    3478:\t48 63 d2             \tmovslq %edx,%rdx\n    347b:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    347f:\t48 01 d0             \tadd    %rdx,%rax\n    3482:\t48 8b 00             \tmov    (%rax),%rax\n    3485:\t48 8b 80 d0 00 00 00 \tmov    0xd0(%rax),%rax\n    348c:\t8b 00                \tmov    (%rax),%eax\n    348e:\t83 f8 04             \tcmp    $0x4,%eax\n    3491:\t74 64                \tje     34f7 <ff_interleave_packet_per_dts+0x149>\n    3493:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3498:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    349c:\t8b 94 24 84 00 00 00 \tmov    0x84(%rsp),%edx\n    34a3:\t48 63 d2             \tmovslq %edx,%rdx\n    34a6:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    34aa:\t48 01 d0             \tadd    %rdx,%rax\n    34ad:\t48 8b 00             \tmov    (%rax),%rax\n    34b0:\t48 8b 80 d0 00 00 00 \tmov    0xd0(%rax),%rax\n    34b7:\t8b 40 04             \tmov    0x4(%rax),%eax\n    34ba:\t3d 8b 00 00 00       \tcmp    $0x8b,%eax\n    34bf:\t74 36                \tje     34f7 <ff_interleave_packet_per_dts+0x149>\n    34c1:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    34c6:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    34ca:\t8b 94 24 84 00 00 00 \tmov    0x84(%rsp),%edx\n    34d1:\t48 63 d2             \tmovslq %edx,%rdx\n    34d4:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    34d8:\t48 01 d0             \tadd    %rdx,%rax\n    34db:\t48 8b 00             \tmov    (%rax),%rax\n    34de:\t48 8b 80 d0 00 00 00 \tmov    0xd0(%rax),%rax\n    34e5:\t8b 40 04             \tmov    0x4(%rax),%eax\n    34e8:\t3d a7 00 00 00       \tcmp    $0xa7,%eax\n    34ed:\t74 08                \tje     34f7 <ff_interleave_packet_per_dts+0x149>\n    34ef:\t83 84 24 88 00 00 00 \taddl   $0x1,0x88(%rsp)\n    34f6:\t01 \n    34f7:\t83 84 24 84 00 00 00 \taddl   $0x1,0x84(%rsp)\n    34fe:\t01 \n    34ff:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3504:\t8b 50 2c             \tmov    0x2c(%rax),%edx\n    3507:\t8b 84 24 84 00 00 00 \tmov    0x84(%rsp),%eax\n    350e:\t39 c2                \tcmp    %eax,%edx\n    3510:\t0f 87 1c ff ff ff    \tja     3432 <ff_interleave_packet_per_dts+0x84>\n    3516:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    351b:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    3522:\t8b 00                \tmov    (%rax),%eax\n    3524:\t39 84 24 8c 00 00 00 \tcmp    %eax,0x8c(%rsp)\n    352b:\t75 08                \tjne    3535 <ff_interleave_packet_per_dts+0x187>\n    352d:\tc7 44 24 04 01 00 00 \tmovl   $0x1,0x4(%rsp)\n    3534:\t00 \n    3535:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    353a:\t48 8b 80 e0 04 00 00 \tmov    0x4e0(%rax),%rax\n    3541:\t48 85 c0             \ttest   %rax,%rax\n    3544:\t0f 8e 04 02 00 00    \tjle    374e <ff_interleave_packet_per_dts+0x3a0>\n    354a:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    354f:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    3556:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    355a:\t48 85 c0             \ttest   %rax,%rax\n    355d:\t0f 84 eb 01 00 00    \tje     374e <ff_interleave_packet_per_dts+0x3a0>\n    3563:\t83 7c 24 04 00       \tcmpl   $0x0,0x4(%rsp)\n    3568:\t0f 85 e0 01 00 00    \tjne    374e <ff_interleave_packet_per_dts+0x3a0>\n    356e:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3573:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    357a:\t8b 00                \tmov    (%rax),%eax\n    357c:\t8b 8c 24 8c 00 00 00 \tmov    0x8c(%rsp),%ecx\n    3583:\t8b 94 24 88 00 00 00 \tmov    0x88(%rsp),%edx\n    358a:\t01 ca                \tadd    %ecx,%edx\n    358c:\t39 d0                \tcmp    %edx,%eax\n    358e:\t0f 85 ba 01 00 00    \tjne    374e <ff_interleave_packet_per_dts+0x3a0>\n    3594:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3599:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    35a0:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    35a4:\t48 89 44 24 68       \tmov    %rax,0x68(%rsp)\n    35a9:\t48 b8 00 00 00 00 00 \tmovabs $0x8000000000000000,%rax\n    35b0:\t00 00 80 \n    35b3:\t48 89 44 24 78       \tmov    %rax,0x78(%rsp)\n    35b8:\t48 b8 00 00 00 00 ff \tmovabs $0xffffffff00000000,%rax\n    35bf:\tff ff ff \n    35c2:\t48 21 e8             \tand    %rbp,%rax\n    35c5:\t48 83 c8 01          \tor     $0x1,%rax\n    35c9:\t48 89 c5             \tmov    %rax,%rbp\n    35cc:\t89 ea                \tmov    %ebp,%edx\n    35ce:\t48 b8 00 00 00 00 40 \tmovabs $0xf424000000000,%rax\n    35d5:\t42 0f 00 \n    35d8:\t48 09 d0             \tor     %rdx,%rax\n    35db:\t48 89 c5             \tmov    %rax,%rbp\n    35de:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    35e3:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n    35e7:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    35ec:\t8b 40 24             \tmov    0x24(%rax),%eax\n    35ef:\t48 98                \tcltq   \n    35f1:\t48 c1 e0 03          \tshl    $0x3,%rax\n    35f5:\t48 01 d0             \tadd    %rdx,%rax\n    35f8:\t48 8b 10             \tmov    (%rax),%rdx\n    35fb:\t48 8b 44 24 68       \tmov    0x68(%rsp),%rax\n    3600:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    3604:\t48 8b 4a 18          \tmov    0x18(%rdx),%rcx\n    3608:\t48 89 ea             \tmov    %rbp,%rdx\n    360b:\t48 89 ce             \tmov    %rcx,%rsi\n    360e:\t48 89 c7             \tmov    %rax,%rdi\n    3611:\te8 00 00 00 00       \tcall   3616 <ff_interleave_packet_per_dts+0x268>\n    3616:\t48 89 44 24 60       \tmov    %rax,0x60(%rsp)\n    361b:\tc7 84 24 84 00 00 00 \tmovl   $0x0,0x84(%rsp)\n    3622:\t00 00 00 00 \n    3626:\te9 be 00 00 00       \tjmp    36e9 <ff_interleave_packet_per_dts+0x33b>\n    362b:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3630:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    3634:\t8b 94 24 84 00 00 00 \tmov    0x84(%rsp),%edx\n    363b:\t48 63 d2             \tmovslq %edx,%rdx\n    363e:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    3642:\t48 01 d0             \tadd    %rdx,%rax\n    3645:\t48 8b 00             \tmov    (%rax),%rax\n    3648:\t48 8b 80 18 01 00 00 \tmov    0x118(%rax),%rax\n    364f:\t48 89 44 24 58       \tmov    %rax,0x58(%rsp)\n    3654:\t48 83 7c 24 58 00    \tcmpq   $0x0,0x58(%rsp)\n    365a:\t0f 84 80 00 00 00    \tje     36e0 <ff_interleave_packet_per_dts+0x332>\n    3660:\t48 b8 00 00 00 00 ff \tmovabs $0xffffffff00000000,%rax\n    3667:\tff ff ff \n    366a:\t4c 21 e8             \tand    %r13,%rax\n    366d:\t48 83 c8 01          \tor     $0x1,%rax\n    3671:\t49 89 c5             \tmov    %rax,%r13\n    3674:\t44 89 ea             \tmov    %r13d,%edx\n    3677:\t48 b8 00 00 00 00 40 \tmovabs $0xf424000000000,%rax\n    367e:\t42 0f 00 \n    3681:\t48 09 d0             \tor     %rdx,%rax\n    3684:\t49 89 c5             \tmov    %rax,%r13\n    3687:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    368c:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    3690:\t8b 94 24 84 00 00 00 \tmov    0x84(%rsp),%edx\n    3697:\t48 63 d2             \tmovslq %edx,%rdx\n    369a:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    369e:\t48 01 d0             \tadd    %rdx,%rax\n    36a1:\t48 8b 10             \tmov    (%rax),%rdx\n    36a4:\t48 8b 44 24 58       \tmov    0x58(%rsp),%rax\n    36a9:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    36ad:\t48 8b 4a 18          \tmov    0x18(%rdx),%rcx\n    36b1:\t4c 89 ea             \tmov    %r13,%rdx\n    36b4:\t48 89 ce             \tmov    %rcx,%rsi\n    36b7:\t48 89 c7             \tmov    %rax,%rdi\n    36ba:\te8 00 00 00 00       \tcall   36bf <ff_interleave_packet_per_dts+0x311>\n    36bf:\t48 89 44 24 50       \tmov    %rax,0x50(%rsp)\n    36c4:\t48 8b 44 24 50       \tmov    0x50(%rsp),%rax\n    36c9:\t48 2b 44 24 60       \tsub    0x60(%rsp),%rax\n    36ce:\t48 39 44 24 78       \tcmp    %rax,0x78(%rsp)\n    36d3:\t48 0f 4d 44 24 78    \tcmovge 0x78(%rsp),%rax\n    36d9:\t48 89 44 24 78       \tmov    %rax,0x78(%rsp)\n    36de:\teb 01                \tjmp    36e1 <ff_interleave_packet_per_dts+0x333>\n    36e0:\t90                   \tnop\n    36e1:\t83 84 24 84 00 00 00 \taddl   $0x1,0x84(%rsp)\n    36e8:\t01 \n    36e9:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    36ee:\t8b 50 2c             \tmov    0x2c(%rax),%edx\n    36f1:\t8b 84 24 84 00 00 00 \tmov    0x84(%rsp),%eax\n    36f8:\t39 c2                \tcmp    %eax,%edx\n    36fa:\t0f 87 2b ff ff ff    \tja     362b <ff_interleave_packet_per_dts+0x27d>\n    3700:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3705:\t48 8b 80 e0 04 00 00 \tmov    0x4e0(%rax),%rax\n    370c:\t48 39 44 24 78       \tcmp    %rax,0x78(%rsp)\n    3711:\t7e 3b                \tjle    374e <ff_interleave_packet_per_dts+0x3a0>\n    3713:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3718:\t48 8b 88 e0 04 00 00 \tmov    0x4e0(%rax),%rcx\n    371f:\t48 8b 54 24 78       \tmov    0x78(%rsp),%rdx\n    3724:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3729:\t49 89 c8             \tmov    %rcx,%r8\n    372c:\t48 89 d1             \tmov    %rdx,%rcx\n    372f:\tba 00 00 00 00       \tmov    $0x0,%edx\n    3734:\tbe 30 00 00 00       \tmov    $0x30,%esi\n    3739:\t48 89 c7             \tmov    %rax,%rdi\n    373c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3741:\te8 00 00 00 00       \tcall   3746 <ff_interleave_packet_per_dts+0x398>\n    3746:\tc7 44 24 04 01 00 00 \tmovl   $0x1,0x4(%rsp)\n    374d:\t00 \n    374e:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3753:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    375a:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    375e:\t48 85 c0             \ttest   %rax,%rax\n    3761:\t0f 84 c9 00 00 00    \tje     3830 <ff_interleave_packet_per_dts+0x482>\n    3767:\t83 7c 24 74 00       \tcmpl   $0x0,0x74(%rsp)\n    376c:\t0f 84 be 00 00 00    \tje     3830 <ff_interleave_packet_per_dts+0x482>\n    3772:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3777:\t8b 80 60 04 00 00    \tmov    0x460(%rax),%eax\n    377d:\t25 00 00 10 00       \tand    $0x100000,%eax\n    3782:\t85 c0                \ttest   %eax,%eax\n    3784:\t0f 84 a6 00 00 00    \tje     3830 <ff_interleave_packet_per_dts+0x482>\n    378a:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    378f:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    3796:\t48 8b 40 68          \tmov    0x68(%rax),%rax\n    379a:\t48 ba 00 00 00 00 00 \tmovabs $0x8000000000000000,%rdx\n    37a1:\t00 00 80 \n    37a4:\t48 39 d0             \tcmp    %rdx,%rax\n    37a7:\t0f 85 83 00 00 00    \tjne    3830 <ff_interleave_packet_per_dts+0x482>\n    37ad:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    37b2:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    37b9:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    37bd:\t48 89 44 24 48       \tmov    %rax,0x48(%rsp)\n    37c2:\t48 b8 00 00 00 00 ff \tmovabs $0xffffffff00000000,%rax\n    37c9:\tff ff ff \n    37cc:\t48 21 d8             \tand    %rbx,%rax\n    37cf:\t48 83 c8 01          \tor     $0x1,%rax\n    37d3:\t48 89 c3             \tmov    %rax,%rbx\n    37d6:\t89 da                \tmov    %ebx,%edx\n    37d8:\t48 b8 00 00 00 00 40 \tmovabs $0xf424000000000,%rax\n    37df:\t42 0f 00 \n    37e2:\t48 09 d0             \tor     %rdx,%rax\n    37e5:\t48 89 c3             \tmov    %rax,%rbx\n    37e8:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    37ed:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n    37f1:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n    37f6:\t8b 40 24             \tmov    0x24(%rax),%eax\n    37f9:\t48 98                \tcltq   \n    37fb:\t48 c1 e0 03          \tshl    $0x3,%rax\n    37ff:\t48 01 d0             \tadd    %rdx,%rax\n    3802:\t48 8b 10             \tmov    (%rax),%rdx\n    3805:\t48 8b 44 24 48       \tmov    0x48(%rsp),%rax\n    380a:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    380e:\t48 8b 4c 24 18       \tmov    0x18(%rsp),%rcx\n    3813:\t48 8b a9 48 05 00 00 \tmov    0x548(%rcx),%rbp\n    381a:\t48 8b 4a 18          \tmov    0x18(%rdx),%rcx\n    381e:\t48 89 da             \tmov    %rbx,%rdx\n    3821:\t48 89 ce             \tmov    %rcx,%rsi\n    3824:\t48 89 c7             \tmov    %rax,%rdi\n    3827:\te8 00 00 00 00       \tcall   382c <ff_interleave_packet_per_dts+0x47e>\n    382c:\t48 89 45 68          \tmov    %rax,0x68(%rbp)\n    3830:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3835:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    383c:\t48 8b 40 68          \tmov    0x68(%rax),%rax\n    3840:\t48 ba 00 00 00 00 00 \tmovabs $0x8000000000000000,%rdx\n    3847:\t00 00 80 \n    384a:\t48 39 d0             \tcmp    %rdx,%rax\n    384d:\t0f 84 7a 01 00 00    \tje     39cd <ff_interleave_packet_per_dts+0x61f>\n    3853:\te9 59 01 00 00       \tjmp    39b1 <ff_interleave_packet_per_dts+0x603>\n    3858:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    385d:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    3864:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    3868:\t48 89 44 24 40       \tmov    %rax,0x40(%rsp)\n    386d:\t48 b8 00 00 00 00 ff \tmovabs $0xffffffff00000000,%rax\n    3874:\tff ff ff \n    3877:\t4c 21 e0             \tand    %r12,%rax\n    387a:\t48 83 c8 01          \tor     $0x1,%rax\n    387e:\t49 89 c4             \tmov    %rax,%r12\n    3881:\t44 89 e2             \tmov    %r12d,%edx\n    3884:\t48 b8 00 00 00 00 40 \tmovabs $0xf424000000000,%rax\n    388b:\t42 0f 00 \n    388e:\t48 09 d0             \tor     %rdx,%rax\n    3891:\t49 89 c4             \tmov    %rax,%r12\n    3894:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3899:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n    389d:\t48 8b 44 24 40       \tmov    0x40(%rsp),%rax\n    38a2:\t8b 40 24             \tmov    0x24(%rax),%eax\n    38a5:\t48 98                \tcltq   \n    38a7:\t48 c1 e0 03          \tshl    $0x3,%rax\n    38ab:\t48 01 d0             \tadd    %rdx,%rax\n    38ae:\t48 8b 10             \tmov    (%rax),%rdx\n    38b1:\t48 8b 44 24 40       \tmov    0x40(%rsp),%rax\n    38b6:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    38ba:\t48 8b 4a 18          \tmov    0x18(%rdx),%rcx\n    38be:\t4c 89 e2             \tmov    %r12,%rdx\n    38c1:\t48 89 ce             \tmov    %rcx,%rsi\n    38c4:\t48 89 c7             \tmov    %rax,%rdi\n    38c7:\te8 00 00 00 00       \tcall   38cc <ff_interleave_packet_per_dts+0x51e>\n    38cc:\t48 89 44 24 38       \tmov    %rax,0x38(%rsp)\n    38d1:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    38d6:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    38dd:\t48 8b 40 68          \tmov    0x68(%rax),%rax\n    38e1:\t48 83 c0 01          \tadd    $0x1,%rax\n    38e5:\t48 39 44 24 38       \tcmp    %rax,0x38(%rsp)\n    38ea:\t0f 8e dc 00 00 00    \tjle    39cc <ff_interleave_packet_per_dts+0x61e>\n    38f0:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    38f5:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    38fc:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    3900:\t48 89 44 24 20       \tmov    %rax,0x20(%rsp)\n    3905:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    390a:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n    390e:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    3913:\t8b 40 24             \tmov    0x24(%rax),%eax\n    3916:\t48 98                \tcltq   \n    3918:\t48 c1 e0 03          \tshl    $0x3,%rax\n    391c:\t48 01 d0             \tadd    %rdx,%rax\n    391f:\t48 8b 00             \tmov    (%rax),%rax\n    3922:\t48 89 44 24 30       \tmov    %rax,0x30(%rsp)\n    3927:\t48 8b 54 24 20       \tmov    0x20(%rsp),%rdx\n    392c:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3931:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    3938:\t48 8b 52 58          \tmov    0x58(%rdx),%rdx\n    393c:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n    3940:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3945:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    394c:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    3950:\t48 85 c0             \ttest   %rax,%rax\n    3953:\t75 14                \tjne    3969 <ff_interleave_packet_per_dts+0x5bb>\n    3955:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    395a:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    3961:\t48 c7 40 10 00 00 00 \tmovq   $0x0,0x10(%rax)\n    3968:\t00 \n    3969:\t48 8b 44 24 30       \tmov    0x30(%rsp),%rax\n    396e:\t48 8b 90 18 01 00 00 \tmov    0x118(%rax),%rdx\n    3975:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    397a:\t48 39 c2             \tcmp    %rax,%rdx\n    397d:\t75 10                \tjne    398f <ff_interleave_packet_per_dts+0x5e1>\n    397f:\t48 8b 44 24 30       \tmov    0x30(%rsp),%rax\n    3984:\t48 c7 80 18 01 00 00 \tmovq   $0x0,0x118(%rax)\n    398b:\t00 00 00 00 \n    398f:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    3994:\t48 89 c7             \tmov    %rax,%rdi\n    3997:\te8 00 00 00 00       \tcall   399c <ff_interleave_packet_per_dts+0x5ee>\n    399c:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    39a1:\t48 89 c7             \tmov    %rax,%rdi\n    39a4:\te8 00 00 00 00       \tcall   39a9 <ff_interleave_packet_per_dts+0x5fb>\n    39a9:\tc7 44 24 04 00 00 00 \tmovl   $0x0,0x4(%rsp)\n    39b0:\t00 \n    39b1:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    39b6:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    39bd:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    39c1:\t48 85 c0             \ttest   %rax,%rax\n    39c4:\t0f 85 8e fe ff ff    \tjne    3858 <ff_interleave_packet_per_dts+0x4aa>\n    39ca:\teb 01                \tjmp    39cd <ff_interleave_packet_per_dts+0x61f>\n    39cc:\t90                   \tnop\n    39cd:\t83 bc 24 8c 00 00 00 \tcmpl   $0x0,0x8c(%rsp)\n    39d4:\t00 \n    39d5:\t0f 84 1e 01 00 00    \tje     3af9 <ff_interleave_packet_per_dts+0x74b>\n    39db:\t83 7c 24 04 00       \tcmpl   $0x0,0x4(%rsp)\n    39e0:\t0f 84 13 01 00 00    \tje     3af9 <ff_interleave_packet_per_dts+0x74b>\n    39e6:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    39eb:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    39f2:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    39f6:\t48 89 44 24 20       \tmov    %rax,0x20(%rsp)\n    39fb:\t48 8b 54 24 20       \tmov    0x20(%rsp),%rdx\n    3a00:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    3a05:\t48 8b 0a             \tmov    (%rdx),%rcx\n    3a08:\t48 8b 5a 08          \tmov    0x8(%rdx),%rbx\n    3a0c:\t48 89 08             \tmov    %rcx,(%rax)\n    3a0f:\t48 89 58 08          \tmov    %rbx,0x8(%rax)\n    3a13:\t48 8b 4a 10          \tmov    0x10(%rdx),%rcx\n    3a17:\t48 8b 5a 18          \tmov    0x18(%rdx),%rbx\n    3a1b:\t48 89 48 10          \tmov    %rcx,0x10(%rax)\n    3a1f:\t48 89 58 18          \tmov    %rbx,0x18(%rax)\n    3a23:\t48 8b 4a 20          \tmov    0x20(%rdx),%rcx\n    3a27:\t48 8b 5a 28          \tmov    0x28(%rdx),%rbx\n    3a2b:\t48 89 48 20          \tmov    %rcx,0x20(%rax)\n    3a2f:\t48 89 58 28          \tmov    %rbx,0x28(%rax)\n    3a33:\t48 8b 4a 30          \tmov    0x30(%rdx),%rcx\n    3a37:\t48 8b 5a 38          \tmov    0x38(%rdx),%rbx\n    3a3b:\t48 89 48 30          \tmov    %rcx,0x30(%rax)\n    3a3f:\t48 89 58 38          \tmov    %rbx,0x38(%rax)\n    3a43:\t48 8b 4a 40          \tmov    0x40(%rdx),%rcx\n    3a47:\t48 8b 5a 48          \tmov    0x48(%rdx),%rbx\n    3a4b:\t48 89 48 40          \tmov    %rcx,0x40(%rax)\n    3a4f:\t48 89 58 48          \tmov    %rbx,0x48(%rax)\n    3a53:\t48 8b 52 50          \tmov    0x50(%rdx),%rdx\n    3a57:\t48 89 50 50          \tmov    %rdx,0x50(%rax)\n    3a5b:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3a60:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n    3a64:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    3a69:\t8b 40 24             \tmov    0x24(%rax),%eax\n    3a6c:\t48 98                \tcltq   \n    3a6e:\t48 c1 e0 03          \tshl    $0x3,%rax\n    3a72:\t48 01 d0             \tadd    %rdx,%rax\n    3a75:\t48 8b 00             \tmov    (%rax),%rax\n    3a78:\t48 89 44 24 28       \tmov    %rax,0x28(%rsp)\n    3a7d:\t48 8b 54 24 20       \tmov    0x20(%rsp),%rdx\n    3a82:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3a87:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    3a8e:\t48 8b 52 58          \tmov    0x58(%rdx),%rdx\n    3a92:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n    3a96:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3a9b:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    3aa2:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    3aa6:\t48 85 c0             \ttest   %rax,%rax\n    3aa9:\t75 14                \tjne    3abf <ff_interleave_packet_per_dts+0x711>\n    3aab:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    3ab0:\t48 8b 80 48 05 00 00 \tmov    0x548(%rax),%rax\n    3ab7:\t48 c7 40 10 00 00 00 \tmovq   $0x0,0x10(%rax)\n    3abe:\t00 \n    3abf:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    3ac4:\t48 8b 90 18 01 00 00 \tmov    0x118(%rax),%rdx\n    3acb:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n    3ad0:\t48 39 c2             \tcmp    %rax,%rdx\n    3ad3:\t75 10                \tjne    3ae5 <ff_interleave_packet_per_dts+0x737>\n    3ad5:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    3ada:\t48 c7 80 18 01 00 00 \tmovq   $0x0,0x118(%rax)\n    3ae1:\t00 00 00 00 \n    3ae5:\t48 8d 44 24 20       \tlea    0x20(%rsp),%rax\n    3aea:\t48 89 c7             \tmov    %rax,%rdi\n    3aed:\te8 00 00 00 00       \tcall   3af2 <ff_interleave_packet_per_dts+0x744>\n    3af2:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    3af7:\teb 12                \tjmp    3b0b <ff_interleave_packet_per_dts+0x75d>\n    3af9:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    3afe:\t48 89 c7             \tmov    %rax,%rdi\n    3b01:\te8 00 00 00 00       \tcall   3b06 <ff_interleave_packet_per_dts+0x758>\n    3b06:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3b0b:\t48 81 c4 98 00 00 00 \tadd    $0x98,%rsp\n    3b12:\t5b                   \tpop    %rbx\n    3b13:\t5d                   \tpop    %rbp\n    3b14:\t41 5c                \tpop    %r12\n    3b16:\t41 5d                \tpop    %r13\n    3b18:\tc3                   \tret    ", "code_s": "int ff_interleave_packet_per_dts(long param_1,\n                                 undefined8 *<span class=\"supfact\">param_2</span>,\n                                 long param_3, int <span class=\"supfact\">param_4</span>) {\n  long lVar1;\n  undefined8 uVar2;\n  int <span class=\"supfact\">local_b4</span>;\n  undefined8 *<span class=\"supfact\">local_98</span>;\n  long <span class=\"supfact\">local_90</span>;\n  long <span class=\"supfact\">local_88</span>;\n  long <span class=\"supfact\">local_80</span>;\n  long <span class=\"supfact\">local_78</span>;\n  long <span class=\"supfact\">local_70</span>;\n  long <span class=\"supfact\">local_68</span>;\n  long <span class=\"supfact\">local_60</span>;\n  long <span class=\"supfact\">local_58</span>;\n  long <span class=\"supfact\">local_50</span>;\n  int <span class=\"supfact\">local_48</span>;\n  int <span class=\"supfact\">local_44</span>;\n  long <span class=\"supfact\">local_40</span>;\n  uint <span class=\"supfact\">local_34</span>;\n  int <span class=\"supfact\">local_30</span>;\n  int <span class=\"supfact\">local_2c</span>;\n  <span class=\"supfact\">local_2c</span> = Number;\n  <span class=\"supfact\">local_30</span> = Number;\n  <span class=\"supfact\">local_44</span> = <span class=\"supfact\">param_4</span>;\n  if ((param_3 == Number) ||\n      (<span class=\"supfact\">local_48</span> =\n           ff_interleave_add_packet(param_1, param_3, FUN_001030a9),\n       -Number < <span class=\"supfact\">local_48</span>)) {\n    for (<span class=\"supfact\">local_34</span> = Number;\n         <span class=\"supfact\">local_34</span> < *(uint *)(param_1 + Number);\n         <span class=\"supfact\">local_34</span> = <span class=\"supfact\">local_34</span> + Number) {\n      if (*(long *)(*(long *)(*(long *)(param_1 + Number) +\n                              (long)(int)<span class=\"supfact\">local_34</span> * Number) +\n                    Number) == Number) {\n        if (((**(int **)(*(long *)(*(long *)(param_1 + Number) +\n                                   (long)(int)<span class=\"supfact\">local_34</span> *\n                                       Number) +\n                         Number) != Number) &&\n             (*(int *)(*(long *)(*(long *)(*(long *)(param_1 + Number) +\n                                           (long)(int)<span class=\"supfact\">local_34</span> *\n                                               Number) +\n                                 Number) +\n                       Number) != Number)) &&\n            (*(int *)(*(long *)(*(long *)(*(long *)(param_1 + Number) +\n                                          (long)(int)<span class=\"supfact\">local_34</span> *\n                                              Number) +\n                                Number) +\n                      Number) != Number)) {\n          <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_30</span> + Number;\n        }\n      } else {\n        <span class=\"supfact\">local_2c</span> = <span class=\"supfact\">local_2c</span> + Number;\n      }\n    }\n    <span class=\"supfact\">local_b4</span> = <span class=\"supfact\">param_4</span>;\n    if (<span class=\"supfact\">local_2c</span> == **(int **)(param_1 + Number)) {\n      <span class=\"supfact\">local_b4</span> = Number;\n    }\n    if (((Number < *(long *)(param_1 + Number)) &&\n         (*(long *)(*(long *)(param_1 + Number) + Number) != Number)) &&\n        ((<span class=\"supfact\">local_b4</span> == Number &&\n          (**(int **)(param_1 + Number) ==\n           <span class=\"supfact\">local_30</span> + <span class=\"supfact\">local_2c</span>)))) {\n      <span class=\"supfact\">local_50</span> =\n          *(long *)(*(long *)(param_1 + Number) + Number);\n      <span class=\"supfact\">local_40</span> = -Number;\n      <span class=\"supfact\">local_58</span> = av_rescale_q(\n          *(undefined8 *)(<span class=\"supfact\">local_50</span> + Number),\n          *(undefined8 *)(*(long *)((long)*(int *)(<span class=\"supfact\">local_50</span> +\n                                                   Number) *\n                                        Number +\n                                    *(long *)(param_1 + Number)) +\n                          Number),\n          Number);\n      for (<span class=\"supfact\">local_34</span> = Number;\n           <span class=\"supfact\">local_34</span> < *(uint *)(param_1 + Number);\n           <span class=\"supfact\">local_34</span> = <span class=\"supfact\">local_34</span> + Number) {\n        <span class=\"supfact\">local_60</span> =\n            *(long *)(*(long *)(*(long *)(param_1 + Number) +\n                                (long)(int)<span class=\"supfact\">local_34</span> * Number) +\n                      Number);\n        lVar1 = <span class=\"supfact\">local_40</span>;\n        if (<span class=\"supfact\">local_60</span> != Number) {\n          <span class=\"supfact\">local_68</span> = av_rescale_q(\n              *(undefined8 *)(<span class=\"supfact\">local_60</span> + Number),\n              *(undefined8 *)(*(long *)(*(long *)(param_1 + Number) +\n                                        (long)(int)<span class=\"supfact\">local_34</span> *\n                                            Number) +\n                              Number),\n              Number);\n          lVar1 = <span class=\"supfact\">local_68</span> - <span class=\"supfact\">local_58</span>;\n          if (<span class=\"supfact\">local_68</span> - <span class=\"supfact\">local_58</span> <=\n              <span class=\"supfact\">local_40</span>) {\n            lVar1 = <span class=\"supfact\">local_40</span>;\n          }\n        }\n        <span class=\"supfact\">local_40</span> = lVar1;\n      }\n      if (*(long *)(param_1 + Number) < <span class=\"supfact\">local_40</span>) {\n        av_log(param_1, Number, String, <span class=\"supfact\">local_40</span>,\n               *(undefined8 *)(param_1 + Number));\n        <span class=\"supfact\">local_b4</span> = Number;\n      }\n    }\n    if (((*(long *)(*(long *)(param_1 + Number) + Number) != Number) &&\n         (<span class=\"supfact\">local_44</span> != Number)) &&\n        (((*(uint *)(param_1 + Number) & Number) != Number &&\n          (*(long *)(*(long *)(param_1 + Number) + Number) == -Number)))) {\n      <span class=\"supfact\">local_70</span> =\n          *(long *)(*(long *)(param_1 + Number) + Number);\n      lVar1 = *(long *)(param_1 + Number);\n      uVar2 = av_rescale_q(\n          *(undefined8 *)(<span class=\"supfact\">local_70</span> + Number),\n          *(undefined8 *)(*(long *)((long)*(int *)(<span class=\"supfact\">local_70</span> +\n                                                   Number) *\n                                        Number +\n                                    *(long *)(param_1 + Number)) +\n                          Number),\n          Number);\n      *(undefined8 *)(lVar1 + Number) = uVar2;\n    }\n    if (*(long *)(*(long *)(param_1 + Number) + Number) != -Number) {\n      while (*(long *)(*(long *)(param_1 + Number) + Number) != Number) {\n        <span class=\"supfact\">local_78</span> =\n            *(long *)(*(long *)(param_1 + Number) + Number);\n        <span class=\"supfact\">local_80</span> = av_rescale_q(\n            *(undefined8 *)(<span class=\"supfact\">local_78</span> + Number),\n            *(undefined8 *)(*(long *)((long)*(int *)(<span class=\"supfact\">local_78</span> +\n                                                     Number) *\n                                          Number +\n                                      *(long *)(param_1 + Number)) +\n                            Number),\n            Number);\n        if (<span class=\"supfact\">local_80</span> <=\n            *(long *)(*(long *)(param_1 + Number) + Number) + Number)\n          break;\n        <span class=\"supfact\">local_98</span> =\n            *(undefined8 **)(*(long *)(param_1 + Number) + Number);\n        <span class=\"supfact\">local_88</span> =\n            *(long *)((long)*(int *)((long)<span class=\"supfact\">local_98</span> + Number) *\n                          Number +\n                      *(long *)(param_1 + Number));\n        *(undefined8 *)(*(long *)(param_1 + Number) + Number) =\n            <span class=\"supfact\">local_98</span>[Number];\n        if (*(long *)(*(long *)(param_1 + Number) + Number) == Number) {\n          *(undefined8 *)(*(long *)(param_1 + Number) + Number) = Number;\n        }\n        if (*(undefined8 **)(<span class=\"supfact\">local_88</span> + Number) ==\n            <span class=\"supfact\">local_98</span>) {\n          *(undefined8 *)(<span class=\"supfact\">local_88</span> + Number) = Number;\n        }\n        av_packet_unref(<span class=\"supfact\">local_98</span>);\n        av_freep(&<span class=\"supfact\">local_98</span>);\n        <span class=\"supfact\">local_b4</span> = Number;\n      }\n    }\n    if ((<span class=\"supfact\">local_2c</span> == Number) ||\n        (<span class=\"supfact\">local_b4</span> == Number)) {\n      av_init_packet(<span class=\"supfact\">param_2</span>);\n      <span class=\"supfact\">local_48</span> = Number;\n    } else {\n      <span class=\"supfact\">local_98</span> =\n          *(undefined8 **)(*(long *)(param_1 + Number) + Number);\n      uVar2 = <span class=\"supfact\">local_98</span>[Number];\n      *<span class=\"supfact\">param_2</span> = *<span class=\"supfact\">local_98</span>;\n      <span class=\"supfact\">param_2</span>[Number] = uVar2;\n      uVar2 = <span class=\"supfact\">local_98</span>[Number];\n      <span class=\"supfact\">param_2</span>[Number] = <span class=\"supfact\">local_98</span>[Number];\n      <span class=\"supfact\">param_2</span>[Number] = uVar2;\n      uVar2 = <span class=\"supfact\">local_98</span>[Number];\n      <span class=\"supfact\">param_2</span>[Number] = <span class=\"supfact\">local_98</span>[Number];\n      <span class=\"supfact\">param_2</span>[Number] = uVar2;\n      uVar2 = <span class=\"supfact\">local_98</span>[Number];\n      <span class=\"supfact\">param_2</span>[Number] = <span class=\"supfact\">local_98</span>[Number];\n      <span class=\"supfact\">param_2</span>[Number] = uVar2;\n      uVar2 = <span class=\"supfact\">local_98</span>[Number];\n      <span class=\"supfact\">param_2</span>[Number] = <span class=\"supfact\">local_98</span>[Number];\n      <span class=\"supfact\">param_2</span>[Number] = uVar2;\n      <span class=\"supfact\">param_2</span>[Number] = <span class=\"supfact\">local_98</span>[Number];\n      <span class=\"supfact\">local_90</span> =\n          *(long *)((long)*(int *)((long)<span class=\"supfact\">param_2</span> + Number) *\n                        Number +\n                    *(long *)(param_1 + Number));\n      *(undefined8 *)(*(long *)(param_1 + Number) + Number) =\n          <span class=\"supfact\">local_98</span>[Number];\n      if (*(long *)(*(long *)(param_1 + Number) + Number) == Number) {\n        *(undefined8 *)(*(long *)(param_1 + Number) + Number) = Number;\n      }\n      if (*(undefined8 **)(<span class=\"supfact\">local_90</span> + Number) ==\n          <span class=\"supfact\">local_98</span>) {\n        *(undefined8 *)(<span class=\"supfact\">local_90</span> + Number) = Number;\n      }\n      av_freep(&<span class=\"supfact\">local_98</span>);\n      <span class=\"supfact\">local_48</span> = Number;\n    }\n  }\n  return <span class=\"supfact\">local_48</span>;\n}", "code_t": "int ff_interleave_packet_per_dts(AVFormatContext *s,\n                                 AVPacket *<span class=\"supfact\">out</span>, AVPacket *pkt,\n                                 int <span class=\"supfact\">flush</span>) {\n  AVFormatInternal *pAVar1;\n  uint8_t *puVar2;\n  int iVar3;\n  int iVar4;\n  undefined4 uVar5;\n  int64_t iVar6;\n  int <span class=\"supfact\">flush</span> - local;\n  AVPacket *pkt - local;\n  AVPacket *<span class=\"supfact\">out</span> - local;\n  AVFormatContext *s - local;\n  AVPacketList *<span class=\"supfact\">pktl</span>;\n  AVStream *<span class=\"supfact\">st_1</span>;\n  AVStream *<span class=\"supfact\">st</span>;\n  int64_t <span class=\"supfact\">top_dts_1</span>;\n  AVPacket *<span class=\"supfact\">top_pkt_2</span>;\n  AVPacket *<span class=\"supfact\">top_pkt_1</span>;\n  int64_t <span class=\"supfact\">last_dts</span>;\n  AVPacketList *<span class=\"supfact\">last</span>;\n  int64_t <span class=\"supfact\">top_dts</span>;\n  AVPacket *<span class=\"supfact\">top_pkt</span>;\n  int <span class=\"supfact\">ret</span>;\n  int <span class=\"supfact\">eof</span>;\n  int64_t <span class=\"supfact\">delta_dts</span>;\n  int <span class=\"supfact\">i</span>;\n  int <span class=\"supfact\">noninterleaved_count</span>;\n  int <span class=\"supfact\">stream_count</span>;\n  <span class=\"supfact\">stream_count</span> = Number;\n  <span class=\"supfact\">noninterleaved_count</span> = Number;\n  <span class=\"supfact\">eof</span> = <span class=\"supfact\">flush</span>;\n  if ((pkt == (AVPacket *)Number) ||\n      (<span class=\"supfact\">ret</span> =\n           ff_interleave_add_packet(s, pkt, interleave_compare_dts),\n       -Number < <span class=\"supfact\">ret</span>)) {\n    for (<span class=\"supfact\">i</span> = Number; (uint)<span class=\"supfact\">i</span> < s->nb_streams;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      if (s->streams[<span class=\"supfact\">i</span>]->last_in_packet_buffer ==\n          (AVPacketList *)Number) {\n        if (((s->streams[<span class=\"supfact\">i</span>]->codecpar->codec_type !=\n              AVMEDIA_TYPE_ATTACHMENT) &&\n             (s->streams[<span class=\"supfact\">i</span>]->codecpar->codec_id !=\n              AV_CODEC_ID_VP8)) &&\n            (s->streams[<span class=\"supfact\">i</span>]->codecpar->codec_id !=\n             AV_CODEC_ID_VP9)) {\n          <span class=\"supfact\">noninterleaved_count</span> =\n              <span class=\"supfact\">noninterleaved_count</span> + Number;\n        }\n      } else {\n        <span class=\"supfact\">stream_count</span> = <span class=\"supfact\">stream_count</span> + Number;\n      }\n    }\n    <span class=\"supfact\">flush</span> - local = <span class=\"supfact\">flush</span>;\n    if (<span class=\"supfact\">stream_count</span> == s->internal->nb_interleaved_streams) {\n      <span class=\"supfact\">flush</span> - local = Number;\n    }\n    if (((Number < s->max_interleave_delta) &&\n         (s->internal->packet_buffer != (AVPacketList *)Number)) &&\n        ((<span class=\"supfact\">flush</span> - local == Number &&\n          (s->internal->nb_interleaved_streams ==\n           <span class=\"supfact\">noninterleaved_count</span> +\n               <span class=\"supfact\">stream_count</span>)))) {\n      <span class=\"supfact\">top_pkt</span> = (AVPacket *)s->internal->packet_buffer;\n      <span class=\"supfact\">delta_dts</span> = -Number;\n      <span class=\"supfact\">top_dts</span> = av_rescale_q(\n          (((AVPacketList *)<span class=\"supfact\">top_pkt</span>)->pkt).dts,\n          s->streams[(((AVPacketList *)<span class=\"supfact\">top_pkt</span>)->pkt)\n                         .stream_index]\n              ->time_base,\n          Number);\n      for (<span class=\"supfact\">i</span> = Number; (uint)<span class=\"supfact\">i</span> < s->nb_streams;\n           <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n        <span class=\"supfact\">last</span> =\n            s->streams[<span class=\"supfact\">i</span>]->last_in_packet_buffer;\n        iVar6 = <span class=\"supfact\">delta_dts</span>;\n        if (<span class=\"supfact\">last</span> != (AVPacketList *)Number) {\n          <span class=\"supfact\">last_dts</span> =\n              av_rescale_q((<span class=\"supfact\">last</span>->pkt).dts,\n                           s->streams[<span class=\"supfact\">i</span>]->time_base, Number);\n          iVar6 = <span class=\"supfact\">last_dts</span> - <span class=\"supfact\">top_dts</span>;\n          if (<span class=\"supfact\">last_dts</span> - <span class=\"supfact\">top_dts</span> <=\n              <span class=\"supfact\">delta_dts</span>) {\n            iVar6 = <span class=\"supfact\">delta_dts</span>;\n          }\n        }\n        <span class=\"supfact\">delta_dts</span> = iVar6;\n      }\n      if (s->max_interleave_delta < <span class=\"supfact\">delta_dts</span>) {\n        av_log(s, Number, String, <span class=\"supfact\">delta_dts</span>,\n               s->max_interleave_delta);\n        <span class=\"supfact\">flush</span> - local = Number;\n      }\n    }\n    if (((s->internal->packet_buffer != (AVPacketList *)Number) &&\n         (<span class=\"supfact\">eof</span> != Number)) &&\n        (((s->flags & Number) != Number &&\n          (s->internal->shortest_end == -Number)))) {\n      <span class=\"supfact\">top_pkt_1</span> = (AVPacket *)s->internal->packet_buffer;\n      pAVar1 = s->internal;\n      iVar6 = av_rescale_q(\n          (((AVPacketList *)<span class=\"supfact\">top_pkt_1</span>)->pkt).dts,\n          s->streams[(((AVPacketList *)<span class=\"supfact\">top_pkt_1</span>)->pkt)\n                         .stream_index]\n              ->time_base,\n          Number);\n      pAVar1->shortest_end = iVar6;\n    }\n    if (s->internal->shortest_end != -Number) {\n      while (s->internal->packet_buffer != (AVPacketList *)Number) {\n        <span class=\"supfact\">top_pkt_2</span> = (AVPacket *)s->internal->packet_buffer;\n        <span class=\"supfact\">top_dts_1</span> = av_rescale_q(\n            (((AVPacketList *)<span class=\"supfact\">top_pkt_2</span>)->pkt).dts,\n            s->streams[(((AVPacketList *)<span class=\"supfact\">top_pkt_2</span>)->pkt)\n                           .stream_index]\n                ->time_base,\n            Number);\n        if (<span class=\"supfact\">top_dts_1</span> <= s->internal->shortest_end + Number)\n          break;\n        <span class=\"supfact\">pktl</span> = s->internal->packet_buffer;\n        <span class=\"supfact\">st</span> =\n            s->streams[(<span class=\"supfact\">pktl</span>->pkt).stream_index];\n        s->internal->packet_buffer = <span class=\"supfact\">pktl</span>->next;\n        if (s->internal->packet_buffer == (AVPacketList *)Number) {\n          s->internal->packet_buffer_end = (AVPacketList *)Number;\n        }\n        if (<span class=\"supfact\">st</span>->last_in_packet_buffer == <span class=\"supfact\">pktl</span>) {\n          <span class=\"supfact\">st</span>->last_in_packet_buffer = (AVPacketList *)Number;\n        }\n        av_packet_unref(<span class=\"supfact\">pktl</span>);\n        av_freep(&<span class=\"supfact\">pktl</span>);\n        <span class=\"supfact\">flush</span> - local = Number;\n      }\n    }\n    if ((<span class=\"supfact\">stream_count</span> == Number) ||\n        (<span class=\"supfact\">flush</span> - local == Number)) {\n      av_init_packet(<span class=\"supfact\">out</span>);\n      <span class=\"supfact\">ret</span> = Number;\n    } else {\n      <span class=\"supfact\">pktl</span> = s->internal->packet_buffer;\n      iVar6 = (<span class=\"supfact\">pktl</span>->pkt).pts;\n      <span class=\"supfact\">out</span>->buf = (<span class=\"supfact\">pktl</span>->pkt).buf;\n      <span class=\"supfact\">out</span>->pts = iVar6;\n      puVar2 = (<span class=\"supfact\">pktl</span>->pkt).data;\n      <span class=\"supfact\">out</span>->dts = (<span class=\"supfact\">pktl</span>->pkt).dts;\n      <span class=\"supfact\">out</span>->data = puVar2;\n      iVar3 = (<span class=\"supfact\">pktl</span>->pkt).stream_index;\n      iVar4 = (<span class=\"supfact\">pktl</span>->pkt).flags;\n      uVar5 = *(undefined4 *)&(<span class=\"supfact\">pktl</span>->pkt).field_0x2c;\n      <span class=\"supfact\">out</span>->size = (<span class=\"supfact\">pktl</span>->pkt).size;\n      <span class=\"supfact\">out</span>->stream_index = iVar3;\n      <span class=\"supfact\">out</span>->flags = iVar4;\n      *(undefined4 *)&<span class=\"supfact\">out</span>->field_0x2c = uVar5;\n      iVar3 = (<span class=\"supfact\">pktl</span>->pkt).side_data_elems;\n      uVar5 = *(undefined4 *)&(<span class=\"supfact\">pktl</span>->pkt).field_0x3c;\n      <span class=\"supfact\">out</span>->side_data = (<span class=\"supfact\">pktl</span>->pkt).side_data;\n      <span class=\"supfact\">out</span>->side_data_elems = iVar3;\n      *(undefined4 *)&<span class=\"supfact\">out</span>->field_0x3c = uVar5;\n      iVar6 = (<span class=\"supfact\">pktl</span>->pkt).pos;\n      <span class=\"supfact\">out</span>->duration = (<span class=\"supfact\">pktl</span>->pkt).duration;\n      <span class=\"supfact\">out</span>->pos = iVar6;\n      <span class=\"supfact\">out</span>->convergence_duration =\n          (<span class=\"supfact\">pktl</span>->pkt).convergence_duration;\n      <span class=\"supfact\">st_1</span> = s->streams[<span class=\"supfact\">out</span>->stream_index];\n      s->internal->packet_buffer = <span class=\"supfact\">pktl</span>->next;\n      if (s->internal->packet_buffer == (AVPacketList *)Number) {\n        s->internal->packet_buffer_end = (AVPacketList *)Number;\n      }\n      if (<span class=\"supfact\">st_1</span>->last_in_packet_buffer == <span class=\"supfact\">pktl</span>) {\n        <span class=\"supfact\">st_1</span>->last_in_packet_buffer = (AVPacketList *)Number;\n      }\n      av_freep(&<span class=\"supfact\">pktl</span>);\n      <span class=\"supfact\">ret</span> = Number;\n    }\n  }\n  return <span class=\"supfact\">ret</span>;\n}", "var": [{"name": "param_2", "type": "AVPacket * *", "pred_name": "out", "ref_name": "out", "ref_type": "AVPacket * *"}, {"name": "param_4", "type": "int", "pred_name": "flush", "ref_name": "flush", "ref_type": "int"}, {"name": "local_b4", "type": "int", "pred_name": "__unk__", "ref_name": "flush-local", "ref_type": "int"}, {"name": "local_98", "type": "AVPacketList * *", "pred_name": "pktl", "ref_name": "pktl", "ref_type": "AVPacketList * *"}, {"name": "local_90", "type": "int64_t", "pred_name": "last_dts", "ref_name": "st_1", "ref_type": "AVStream * *"}, {"name": "local_88", "type": "AVPacketList * *", "pred_name": "pktl", "ref_name": "st", "ref_type": "AVStream * *"}, {"name": "local_80", "type": "AVStream * *", "pred_name": "st", "ref_name": "top_dts_1", "ref_type": "int64_t"}, {"name": "local_78", "type": "int64_t", "pred_name": "last_dts", "ref_name": "top_pkt_2", "ref_type": "AVPacket * *"}, {"name": "local_70", "type": "AVPacketList * *", "pred_name": "__unk__", "ref_name": "top_pkt_1", "ref_type": "AVPacket * *"}, {"name": "local_68", "type": "AVPacket * *", "pred_name": "__unk__", "ref_name": "last_dts", "ref_type": "int64_t"}, {"name": "local_60", "type": "AVPacket * *", "pred_name": "__unk__", "ref_name": "last", "ref_type": "AVPacketList * *"}, {"name": "local_58", "type": "int64_t", "pred_name": "__unk__", "ref_name": "top_dts", "ref_type": "int64_t"}, {"name": "local_50", "type": "int64_t", "pred_name": "__unk__", "ref_name": "top_pkt", "ref_type": "AVPacket * *"}, {"name": "local_48", "type": "int", "pred_name": "__unk__", "ref_name": "ret", "ref_type": "int"}, {"name": "local_44", "type": "int", "pred_name": "ret", "ref_name": "eof", "ref_type": "int"}, {"name": "local_40", "type": "int64_t", "pred_name": "__unk__", "ref_name": "delta_dts", "ref_type": "int64_t"}, {"name": "local_34", "type": "int", "pred_name": "__unk__", "ref_name": "i", "ref_type": "int"}, {"name": "local_30", "type": "int", "pred_name": "__unk__", "ref_name": "noninterleaved_count", "ref_type": "int"}, {"name": "local_2c", "type": "int", "pred_name": "i", "ref_name": "stream_count", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "qiupq", "repo_name": "ffmpeg", "path": "qiupq/ffmpeg/21b57fba34a5621901c137739a252b406aa72d59ab1b75281ab85bb6148fefbf", "path_in_repo": "qiupq/ffmpeg//libavformat/mux.o", "objdump": "0000000000000310 <ff_choose_chroma_location>:\n     310:\t48 83 ec 28          \tsub    $0x28,%rsp\n     314:\t48 89 7c 24 08       \tmov    %rdi,0x8(%rsp)\n     319:\t48 89 34 24          \tmov    %rsi,(%rsp)\n     31d:\t48 8b 04 24          \tmov    (%rsp),%rax\n     321:\t48 8b 80 d0 00 00 00 \tmov    0xd0(%rax),%rax\n     328:\t48 89 44 24 18       \tmov    %rax,0x18(%rsp)\n     32d:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     332:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n     335:\t89 c7                \tmov    %eax,%edi\n     337:\te8 00 00 00 00       \tcall   33c <ff_choose_chroma_location+0x2c>\n     33c:\t48 89 44 24 10       \tmov    %rax,0x10(%rsp)\n     341:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     346:\t8b 40 5c             \tmov    0x5c(%rax),%eax\n     349:\t85 c0                \ttest   %eax,%eax\n     34b:\t74 0d                \tje     35a <ff_choose_chroma_location+0x4a>\n     34d:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     352:\t8b 40 5c             \tmov    0x5c(%rax),%eax\n     355:\te9 9e 00 00 00       \tjmp    3f8 <ff_choose_chroma_location+0xe8>\n     35a:\t48 83 7c 24 10 00    \tcmpq   $0x0,0x10(%rsp)\n     360:\t0f 84 8d 00 00 00    \tje     3f3 <ff_choose_chroma_location+0xe3>\n     366:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n     36b:\t0f b6 40 0a          \tmovzbl 0xa(%rax),%eax\n     36f:\t84 c0                \ttest   %al,%al\n     371:\t75 07                \tjne    37a <ff_choose_chroma_location+0x6a>\n     373:\tb8 03 00 00 00       \tmov    $0x3,%eax\n     378:\teb 7e                \tjmp    3f8 <ff_choose_chroma_location+0xe8>\n     37a:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n     37f:\t0f b6 40 09          \tmovzbl 0x9(%rax),%eax\n     383:\t3c 01                \tcmp    $0x1,%al\n     385:\t75 6c                \tjne    3f3 <ff_choose_chroma_location+0xe3>\n     387:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n     38c:\t0f b6 40 0a          \tmovzbl 0xa(%rax),%eax\n     390:\t3c 01                \tcmp    $0x1,%al\n     392:\t75 5f                \tjne    3f3 <ff_choose_chroma_location+0xe3>\n     394:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     399:\t8b 40 48             \tmov    0x48(%rax),%eax\n     39c:\t85 c0                \ttest   %eax,%eax\n     39e:\t74 0d                \tje     3ad <ff_choose_chroma_location+0x9d>\n     3a0:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     3a5:\t8b 40 48             \tmov    0x48(%rax),%eax\n     3a8:\t83 f8 01             \tcmp    $0x1,%eax\n     3ab:\t75 19                \tjne    3c6 <ff_choose_chroma_location+0xb6>\n     3ad:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     3b2:\t8b 40 04             \tmov    0x4(%rax),%eax\n     3b5:\t83 f8 01             \tcmp    $0x1,%eax\n     3b8:\t74 05                \tje     3bf <ff_choose_chroma_location+0xaf>\n     3ba:\t83 f8 07             \tcmp    $0x7,%eax\n     3bd:\t75 07                \tjne    3c6 <ff_choose_chroma_location+0xb6>\n     3bf:\tb8 02 00 00 00       \tmov    $0x2,%eax\n     3c4:\teb 32                \tjmp    3f8 <ff_choose_chroma_location+0xe8>\n     3c6:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     3cb:\t8b 40 48             \tmov    0x48(%rax),%eax\n     3ce:\t85 c0                \ttest   %eax,%eax\n     3d0:\t74 0d                \tje     3df <ff_choose_chroma_location+0xcf>\n     3d2:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     3d7:\t8b 40 48             \tmov    0x48(%rax),%eax\n     3da:\t83 f8 01             \tcmp    $0x1,%eax\n     3dd:\t74 14                \tje     3f3 <ff_choose_chroma_location+0xe3>\n     3df:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     3e4:\t8b 40 04             \tmov    0x4(%rax),%eax\n     3e7:\t83 f8 02             \tcmp    $0x2,%eax\n     3ea:\t75 07                \tjne    3f3 <ff_choose_chroma_location+0xe3>\n     3ec:\tb8 01 00 00 00       \tmov    $0x1,%eax\n     3f1:\teb 05                \tjmp    3f8 <ff_choose_chroma_location+0xe8>\n     3f3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     3f8:\t48 83 c4 28          \tadd    $0x28,%rsp\n     3fc:\tc3                   \tret    ", "code_s": "undefined4 ff_choose_chroma_location(undefined8 param_1,\n                                     long <span class=\"supfact\">param_2</span>) {\n  long lVar1;\n  long <span class=\"supfact\">lVar2</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">param_2</span> + Number);\n  <span class=\"supfact\">lVar2</span> = av_pix_fmt_desc_get(*(undefined4 *)(lVar1 + Number));\n  if (*(int *)(lVar1 + Number) != Number) {\n    return *(undefined4 *)(lVar1 + Number);\n  }\n  if (<span class=\"supfact\">lVar2</span> != Number) {\n    if (*(char *)(<span class=\"supfact\">lVar2</span> + Number) == String) {\n      return Number;\n    }\n    if ((*(char *)(<span class=\"supfact\">lVar2</span> + Number) == String) &&\n        (*(char *)(<span class=\"supfact\">lVar2</span> + Number) == String)) {\n      if (((*(int *)(lVar1 + Number) == Number) ||\n           (*(int *)(lVar1 + Number) == Number)) &&\n          ((*(int *)(lVar1 + Number) == Number ||\n            (*(int *)(lVar1 + Number) == Number)))) {\n        return Number;\n      }\n      if (((*(int *)(lVar1 + Number) == Number) ||\n           (*(int *)(lVar1 + Number) != Number)) &&\n          (*(int *)(lVar1 + Number) == Number)) {\n        return Number;\n      }\n    }\n  }\n  return Number;\n}", "code_t": "AVChromaLocation ff_choose_chroma_location(AVFormatContext *s,\n                                           AVStream *<span class=\"supfact\">st</span>) {\n  AVCodecParameters *pAVar1;\n  long <span class=\"supfact\">lVar2</span>;\n  AVStream *<span class=\"supfact\">st</span> - local;\n  AVFormatContext *s - local;\n  AVPixFmtDescriptor *pix_desc;\n  AVCodecParameters *par;\n  pAVar1 = <span class=\"supfact\">st</span>->codecpar;\n  <span class=\"supfact\">lVar2</span> = av_pix_fmt_desc_get(pAVar1->format);\n  if (pAVar1->chroma_location != AVCHROMA_LOC_UNSPECIFIED) {\n    return pAVar1->chroma_location;\n  }\n  if (<span class=\"supfact\">lVar2</span> != Number) {\n    if (*(char *)(<span class=\"supfact\">lVar2</span> + Number) == String) {\n      return AVCHROMA_LOC_TOPLEFT;\n    }\n    if ((*(char *)(<span class=\"supfact\">lVar2</span> + Number) == String) &&\n        (*(char *)(<span class=\"supfact\">lVar2</span> + Number) == String)) {\n      if (((pAVar1->field_order == AV_FIELD_UNKNOWN) ||\n           (pAVar1->field_order == AV_FIELD_PROGRESSIVE)) &&\n          ((pAVar1->codec_id == AV_CODEC_ID_MPEG1VIDEO ||\n            (pAVar1->codec_id == AV_CODEC_ID_MJPEG)))) {\n        return AVCHROMA_LOC_CENTER;\n      }\n      if (((pAVar1->field_order == AV_FIELD_UNKNOWN) ||\n           (pAVar1->field_order != AV_FIELD_PROGRESSIVE)) &&\n          (pAVar1->codec_id == AV_CODEC_ID_MPEG2VIDEO)) {\n        return AVCHROMA_LOC_LEFT;\n      }\n    }\n  }\n  return AVCHROMA_LOC_UNSPECIFIED;\n}", "var": [{"name": "param_2", "type": "AVStream * *", "pred_name": "st", "ref_name": "st", "ref_type": "AVStream * *"}, {"name": "lVar2", "type": "long", "pred_name": "lVar2", "ref_name": "lVar2", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "qiupq", "repo_name": "ffmpeg", "path": "qiupq/ffmpeg/21b57fba34a5621901c137739a252b406aa72d59ab1b75281ab85bb6148fefbf", "path_in_repo": "qiupq/ffmpeg//libavformat/mux.o", "objdump": "0000000000000310 <ff_choose_chroma_location>:\n     310:\t48 83 ec 28          \tsub    $0x28,%rsp\n     314:\t48 89 7c 24 08       \tmov    %rdi,0x8(%rsp)\n     319:\t48 89 34 24          \tmov    %rsi,(%rsp)\n     31d:\t48 8b 04 24          \tmov    (%rsp),%rax\n     321:\t48 8b 80 d0 00 00 00 \tmov    0xd0(%rax),%rax\n     328:\t48 89 44 24 18       \tmov    %rax,0x18(%rsp)\n     32d:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     332:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n     335:\t89 c7                \tmov    %eax,%edi\n     337:\te8 00 00 00 00       \tcall   33c <ff_choose_chroma_location+0x2c>\n     33c:\t48 89 44 24 10       \tmov    %rax,0x10(%rsp)\n     341:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     346:\t8b 40 5c             \tmov    0x5c(%rax),%eax\n     349:\t85 c0                \ttest   %eax,%eax\n     34b:\t74 0d                \tje     35a <ff_choose_chroma_location+0x4a>\n     34d:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     352:\t8b 40 5c             \tmov    0x5c(%rax),%eax\n     355:\te9 9e 00 00 00       \tjmp    3f8 <ff_choose_chroma_location+0xe8>\n     35a:\t48 83 7c 24 10 00    \tcmpq   $0x0,0x10(%rsp)\n     360:\t0f 84 8d 00 00 00    \tje     3f3 <ff_choose_chroma_location+0xe3>\n     366:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n     36b:\t0f b6 40 0a          \tmovzbl 0xa(%rax),%eax\n     36f:\t84 c0                \ttest   %al,%al\n     371:\t75 07                \tjne    37a <ff_choose_chroma_location+0x6a>\n     373:\tb8 03 00 00 00       \tmov    $0x3,%eax\n     378:\teb 7e                \tjmp    3f8 <ff_choose_chroma_location+0xe8>\n     37a:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n     37f:\t0f b6 40 09          \tmovzbl 0x9(%rax),%eax\n     383:\t3c 01                \tcmp    $0x1,%al\n     385:\t75 6c                \tjne    3f3 <ff_choose_chroma_location+0xe3>\n     387:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n     38c:\t0f b6 40 0a          \tmovzbl 0xa(%rax),%eax\n     390:\t3c 01                \tcmp    $0x1,%al\n     392:\t75 5f                \tjne    3f3 <ff_choose_chroma_location+0xe3>\n     394:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     399:\t8b 40 48             \tmov    0x48(%rax),%eax\n     39c:\t85 c0                \ttest   %eax,%eax\n     39e:\t74 0d                \tje     3ad <ff_choose_chroma_location+0x9d>\n     3a0:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     3a5:\t8b 40 48             \tmov    0x48(%rax),%eax\n     3a8:\t83 f8 01             \tcmp    $0x1,%eax\n     3ab:\t75 19                \tjne    3c6 <ff_choose_chroma_location+0xb6>\n     3ad:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     3b2:\t8b 40 04             \tmov    0x4(%rax),%eax\n     3b5:\t83 f8 01             \tcmp    $0x1,%eax\n     3b8:\t74 05                \tje     3bf <ff_choose_chroma_location+0xaf>\n     3ba:\t83 f8 07             \tcmp    $0x7,%eax\n     3bd:\t75 07                \tjne    3c6 <ff_choose_chroma_location+0xb6>\n     3bf:\tb8 02 00 00 00       \tmov    $0x2,%eax\n     3c4:\teb 32                \tjmp    3f8 <ff_choose_chroma_location+0xe8>\n     3c6:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     3cb:\t8b 40 48             \tmov    0x48(%rax),%eax\n     3ce:\t85 c0                \ttest   %eax,%eax\n     3d0:\t74 0d                \tje     3df <ff_choose_chroma_location+0xcf>\n     3d2:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     3d7:\t8b 40 48             \tmov    0x48(%rax),%eax\n     3da:\t83 f8 01             \tcmp    $0x1,%eax\n     3dd:\t74 14                \tje     3f3 <ff_choose_chroma_location+0xe3>\n     3df:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     3e4:\t8b 40 04             \tmov    0x4(%rax),%eax\n     3e7:\t83 f8 02             \tcmp    $0x2,%eax\n     3ea:\t75 07                \tjne    3f3 <ff_choose_chroma_location+0xe3>\n     3ec:\tb8 01 00 00 00       \tmov    $0x1,%eax\n     3f1:\teb 05                \tjmp    3f8 <ff_choose_chroma_location+0xe8>\n     3f3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     3f8:\t48 83 c4 28          \tadd    $0x28,%rsp\n     3fc:\tc3                   \tret    ", "code_s": "undefined4 ff_choose_chroma_location(undefined8 param_1,\n                                     long <span class=\"supfact\">param_2</span>) {\n  long lVar1;\n  long <span class=\"supfact\">lVar2</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">param_2</span> + Number);\n  <span class=\"supfact\">lVar2</span> = av_pix_fmt_desc_get(*(undefined4 *)(lVar1 + Number));\n  if (*(int *)(lVar1 + Number) != Number) {\n    return *(undefined4 *)(lVar1 + Number);\n  }\n  if (<span class=\"supfact\">lVar2</span> != Number) {\n    if (*(char *)(<span class=\"supfact\">lVar2</span> + Number) == String) {\n      return Number;\n    }\n    if ((*(char *)(<span class=\"supfact\">lVar2</span> + Number) == String) &&\n        (*(char *)(<span class=\"supfact\">lVar2</span> + Number) == String)) {\n      if (((*(int *)(lVar1 + Number) == Number) ||\n           (*(int *)(lVar1 + Number) == Number)) &&\n          ((*(int *)(lVar1 + Number) == Number ||\n            (*(int *)(lVar1 + Number) == Number)))) {\n        return Number;\n      }\n      if (((*(int *)(lVar1 + Number) == Number) ||\n           (*(int *)(lVar1 + Number) != Number)) &&\n          (*(int *)(lVar1 + Number) == Number)) {\n        return Number;\n      }\n    }\n  }\n  return Number;\n}", "code_t": "AVChromaLocation ff_choose_chroma_location(AVFormatContext *s,\n                                           AVStream *<span class=\"supfact\">st</span>) {\n  AVCodecParameters *pAVar1;\n  long <span class=\"supfact\">lVar2</span>;\n  AVStream *<span class=\"supfact\">st</span> - local;\n  AVFormatContext *s - local;\n  AVPixFmtDescriptor *pix_desc;\n  AVCodecParameters *par;\n  pAVar1 = <span class=\"supfact\">st</span>->codecpar;\n  <span class=\"supfact\">lVar2</span> = av_pix_fmt_desc_get(pAVar1->format);\n  if (pAVar1->chroma_location != AVCHROMA_LOC_UNSPECIFIED) {\n    return pAVar1->chroma_location;\n  }\n  if (<span class=\"supfact\">lVar2</span> != Number) {\n    if (*(char *)(<span class=\"supfact\">lVar2</span> + Number) == String) {\n      return AVCHROMA_LOC_TOPLEFT;\n    }\n    if ((*(char *)(<span class=\"supfact\">lVar2</span> + Number) == String) &&\n        (*(char *)(<span class=\"supfact\">lVar2</span> + Number) == String)) {\n      if (((pAVar1->field_order == AV_FIELD_UNKNOWN) ||\n           (pAVar1->field_order == AV_FIELD_PROGRESSIVE)) &&\n          ((pAVar1->codec_id == AV_CODEC_ID_MPEG1VIDEO ||\n            (pAVar1->codec_id == AV_CODEC_ID_MJPEG)))) {\n        return AVCHROMA_LOC_CENTER;\n      }\n      if (((pAVar1->field_order == AV_FIELD_UNKNOWN) ||\n           (pAVar1->field_order != AV_FIELD_PROGRESSIVE)) &&\n          (pAVar1->codec_id == AV_CODEC_ID_MPEG2VIDEO)) {\n        return AVCHROMA_LOC_LEFT;\n      }\n    }\n  }\n  return AVCHROMA_LOC_UNSPECIFIED;\n}", "var": [{"name": "param_2", "type": "AVStream * *", "pred_name": "st", "ref_name": "st", "ref_type": "AVStream * *"}, {"name": "lVar2", "type": "long", "pred_name": "lVar2", "ref_name": "lVar2", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "ErikPshat", "repo_name": "sign_np-hykem", "path": "ErikPshat/sign_np-hykem/e718ee2d111cff3ef342760f714ab2b1ae9cb48ee76a4c0e7b7c46c7cb72a75d", "path_in_repo": "ErikPshat/sign_np-hykem//libkirk/ec.o", "objdump": "0000000000000d4a <ec_priv_to_pub>:\n     d4a:\t55                   \tpush   %rbp\n     d4b:\t48 89 e5             \tmov    %rsp,%rbp\n     d4e:\t48 83 ec 40          \tsub    $0x40,%rsp\n     d52:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n     d56:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n     d5a:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     d5e:\tba 15 00 00 00       \tmov    $0x15,%edx\n     d63:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     d68:\t48 89 c7             \tmov    %rax,%rdi\n     d6b:\te8 00 00 00 00       \tcall   d70 <ec_priv_to_pub+0x26>\n     d70:\t48 8b 4d c8          \tmov    -0x38(%rbp),%rcx\n     d74:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     d78:\tba 00 00 00 00       \tmov    $0x0,%edx\n     d7d:\t48 89 ce             \tmov    %rcx,%rsi\n     d80:\t48 89 c7             \tmov    %rax,%rdi\n     d83:\te8 2a fa ff ff       \tcall   7b2 <point_mul>\n     d88:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n     d8c:\t48 89 c7             \tmov    %rax,%rdi\n     d8f:\te8 d5 f4 ff ff       \tcall   269 <point_from_mon>\n     d94:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n     d98:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     d9c:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n     da0:\t48 89 01             \tmov    %rax,(%rcx)\n     da3:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n     da7:\t8b 45 e0             \tmov    -0x20(%rbp),%eax\n     daa:\t89 41 10             \tmov    %eax,0x10(%rcx)\n     dad:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n     db1:\t48 8d 48 14          \tlea    0x14(%rax),%rcx\n     db5:\t48 8b 45 e4          \tmov    -0x1c(%rbp),%rax\n     db9:\t48 8b 55 ec          \tmov    -0x14(%rbp),%rdx\n     dbd:\t48 89 01             \tmov    %rax,(%rcx)\n     dc0:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n     dc4:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n     dc7:\t89 41 10             \tmov    %eax,0x10(%rcx)\n     dca:\t90                   \tnop\n     dcb:\tc9                   \tleave  \n     dcc:\tc3                   \tret    ", "code_s": "void ec_priv_to_pub(undefined8 param_1, undefined8 *<span class=\"supfact\">param_2</span>) {\n  undefined8 <span class=\"supfact\">local_38</span>;\n  undefined8 <span class=\"supfact\">local_30</span>;\n  undefined4 <span class=\"supfact\">local_28</span>;\n  undefined8 <span class=\"supfact\">local_24</span>;\n  undefined8 <span class=\"supfact\">local_1c</span>;\n  undefined4 <span class=\"supfact\">local_14</span>;\n  bn_to_mon(param_1, ec_N, Number);\n  FUN_001007b2(&<span class=\"supfact\">local_38</span>, param_1, ec_G);\n  FUN_00100269(&<span class=\"supfact\">local_38</span>);\n  *<span class=\"supfact\">param_2</span> = <span class=\"supfact\">local_38</span>;\n  <span class=\"supfact\">param_2</span>[Number] = <span class=\"supfact\">local_30</span>;\n  *(undefined4 *)(<span class=\"supfact\">param_2</span> + Number) = <span class=\"supfact\">local_28</span>;\n  *(undefined8 *)((long)<span class=\"supfact\">param_2</span> + Number) =\n      <span class=\"supfact\">local_24</span>;\n  *(undefined8 *)((long)<span class=\"supfact\">param_2</span> + Number) =\n      <span class=\"supfact\">local_1c</span>;\n  *(undefined4 *)((long)<span class=\"supfact\">param_2</span> + Number) =\n      <span class=\"supfact\">local_14</span>;\n  return;\n}", "code_t": "void ec_priv_to_pub(u8 *k, u8 *<span class=\"supfact\">Q</span>) {\n  u8 *<span class=\"supfact\">Q</span> - local;\n  u8 *k - local;\n  point <span class=\"supfact\">ec_temp</span>;\n  bn_to_mon(k, ec_N, Number);\n  point_mul(&<span class=\"supfact\">ec_temp</span>, k, &ec_G);\n  point_from_mon(&<span class=\"supfact\">ec_temp</span>);\n  *(undefined8 *)<span class=\"supfact\">Q</span> = <span class=\"supfact\">ec_temp</span>.x._0_8_;\n  *(undefined8 *)(<span class=\"supfact\">Q</span> + Number) = <span class=\"supfact\">ec_temp</span>.x._8_8_;\n  *(undefined4 *)(<span class=\"supfact\">Q</span> + Number) =\n      <span class=\"supfact\">ec_temp</span>.x._16_4_;\n  *(undefined8 *)(<span class=\"supfact\">Q</span> + Number) = <span class=\"supfact\">ec_temp</span>.y._0_8_;\n  *(undefined8 *)(<span class=\"supfact\">Q</span> + Number) = <span class=\"supfact\">ec_temp</span>.y._8_8_;\n  *(undefined4 *)(<span class=\"supfact\">Q</span> + Number) =\n      <span class=\"supfact\">ec_temp</span>.y._16_4_;\n  return;\n}", "var": [{"name": "param_2", "type": "EC_GROUP * *", "pred_name": "src", "ref_name": "Q", "ref_type": "u8 * *"}, {"name": "local_38", "type": "__unk__", "pred_name": "dest", "ref_name": "ec_temp", "ref_type": "struct point { u8[20] x; u8[20] y; }"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_28", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_24", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_1c", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_14", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "irock", "repo_name": "FFmpeg", "path": "irock/FFmpeg/45150b14ca72d6b846c16db6862750ce856662535b2c929761eb9cc14fef3e70", "path_in_repo": "irock/FFmpeg//libavcodec/wmv2.o", "objdump": "0000000000000348 <ff_wmv2_add_mb>:\n 348:\t48 83 ec 48          \tsub    $0x48,%rsp\n 34c:\t48 89 7c 24 28       \tmov    %rdi,0x28(%rsp)\n 351:\t48 89 74 24 20       \tmov    %rsi,0x20(%rsp)\n 356:\t48 89 54 24 18       \tmov    %rdx,0x18(%rsp)\n 35b:\t48 89 4c 24 10       \tmov    %rcx,0x10(%rsp)\n 360:\t4c 89 44 24 08       \tmov    %r8,0x8(%rsp)\n 365:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n 36a:\t48 89 44 24 38       \tmov    %rax,0x38(%rsp)\n 36f:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n 374:\t8b 88 a8 00 00 00    \tmov    0xa8(%rax),%ecx\n 37a:\t48 8b 54 24 18       \tmov    0x18(%rsp),%rdx\n 37f:\t48 8b 74 24 20       \tmov    0x20(%rsp),%rsi\n 384:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n 389:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n 38f:\t48 89 c7             \tmov    %rax,%rdi\n 392:\te8 fa fd ff ff       \tcall   191 <wmv2_add_block>\n 397:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n 39c:\t8b 90 a8 00 00 00    \tmov    0xa8(%rax),%edx\n 3a2:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n 3a7:\t48 8d 78 08          \tlea    0x8(%rax),%rdi\n 3ab:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n 3b0:\t48 8d b0 80 00 00 00 \tlea    0x80(%rax),%rsi\n 3b7:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n 3bc:\t41 b8 01 00 00 00    \tmov    $0x1,%r8d\n 3c2:\t89 d1                \tmov    %edx,%ecx\n 3c4:\t48 89 fa             \tmov    %rdi,%rdx\n 3c7:\t48 89 c7             \tmov    %rax,%rdi\n 3ca:\te8 c2 fd ff ff       \tcall   191 <wmv2_add_block>\n 3cf:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n 3d4:\t8b 90 a8 00 00 00    \tmov    0xa8(%rax),%edx\n 3da:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n 3df:\t8b 80 a8 00 00 00    \tmov    0xa8(%rax),%eax\n 3e5:\tc1 e0 03             \tshl    $0x3,%eax\n 3e8:\t48 63 c8             \tmovslq %eax,%rcx\n 3eb:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n 3f0:\t48 8d 3c 01          \tlea    (%rcx,%rax,1),%rdi\n 3f4:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n 3f9:\t48 8d b0 00 01 00 00 \tlea    0x100(%rax),%rsi\n 400:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n 405:\t41 b8 02 00 00 00    \tmov    $0x2,%r8d\n 40b:\t89 d1                \tmov    %edx,%ecx\n 40d:\t48 89 fa             \tmov    %rdi,%rdx\n 410:\t48 89 c7             \tmov    %rax,%rdi\n 413:\te8 79 fd ff ff       \tcall   191 <wmv2_add_block>\n 418:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n 41d:\t8b 90 a8 00 00 00    \tmov    0xa8(%rax),%edx\n 423:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n 428:\t8b 80 a8 00 00 00    \tmov    0xa8(%rax),%eax\n 42e:\tc1 e0 03             \tshl    $0x3,%eax\n 431:\t48 98                \tcltq   \n 433:\t48 8d 48 08          \tlea    0x8(%rax),%rcx\n 437:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n 43c:\t48 8d 3c 01          \tlea    (%rcx,%rax,1),%rdi\n 440:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n 445:\t48 8d b0 80 01 00 00 \tlea    0x180(%rax),%rsi\n 44c:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n 451:\t41 b8 03 00 00 00    \tmov    $0x3,%r8d\n 457:\t89 d1                \tmov    %edx,%ecx\n 459:\t48 89 fa             \tmov    %rdi,%rdx\n 45c:\t48 89 c7             \tmov    %rax,%rdi\n 45f:\te8 2d fd ff ff       \tcall   191 <wmv2_add_block>\n 464:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n 469:\t8b 40 40             \tmov    0x40(%rax),%eax\n 46c:\t25 00 20 00 00       \tand    $0x2000,%eax\n 471:\t85 c0                \ttest   %eax,%eax\n 473:\t75 60                \tjne    4d5 <ff_wmv2_add_mb+0x18d>\n 475:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n 47a:\t8b 88 ac 00 00 00    \tmov    0xac(%rax),%ecx\n 480:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n 485:\t48 8d b0 00 02 00 00 \tlea    0x200(%rax),%rsi\n 48c:\t48 8b 54 24 10       \tmov    0x10(%rsp),%rdx\n 491:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n 496:\t41 b8 04 00 00 00    \tmov    $0x4,%r8d\n 49c:\t48 89 c7             \tmov    %rax,%rdi\n 49f:\te8 ed fc ff ff       \tcall   191 <wmv2_add_block>\n 4a4:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n 4a9:\t8b 88 ac 00 00 00    \tmov    0xac(%rax),%ecx\n 4af:\t48 8b 44 24 20       \tmov    0x20(%rsp),%rax\n 4b4:\t48 8d b0 80 02 00 00 \tlea    0x280(%rax),%rsi\n 4bb:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n 4c0:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n 4c5:\t41 b8 05 00 00 00    \tmov    $0x5,%r8d\n 4cb:\t48 89 c7             \tmov    %rax,%rdi\n 4ce:\te8 be fc ff ff       \tcall   191 <wmv2_add_block>\n 4d3:\teb 01                \tjmp    4d6 <ff_wmv2_add_mb+0x18e>\n 4d5:\t90                   \tnop\n 4d6:\t48 83 c4 48          \tadd    $0x48,%rsp\n 4da:\tc3                   \tret    ", "code_s": "void ff_wmv2_add_mb(long param_1, long <span class=\"supfact\">param_2</span>, long param_3,\n                    undefined8 <span class=\"supfact\">param_4</span>,\n                    undefined8 <span class=\"supfact\">param_5</span>) {\n  FUN_00100191(param_1, <span class=\"supfact\">param_2</span>, param_3,\n               *(undefined4 *)(param_1 + Number), Number);\n  FUN_00100191(param_1, <span class=\"supfact\">param_2</span> + Number, param_3 + Number,\n               *(undefined4 *)(param_1 + Number), Number);\n  FUN_00100191(param_1, <span class=\"supfact\">param_2</span> + Number,\n               (*(int *)(param_1 + Number) << Number) + param_3,\n               *(undefined4 *)(param_1 + Number), Number);\n  FUN_00100191(param_1, <span class=\"supfact\">param_2</span> + Number,\n               (long)(*(int *)(param_1 + Number) << Number) + Number + param_3,\n               *(undefined4 *)(param_1 + Number), Number);\n  if ((*(uint *)(param_1 + Number) & Number) == Number) {\n    FUN_00100191(param_1, <span class=\"supfact\">param_2</span> + Number,\n                 <span class=\"supfact\">param_4</span>, *(undefined4 *)(param_1 + Number),\n                 Number);\n    FUN_00100191(param_1, <span class=\"supfact\">param_2</span> + Number,\n                 <span class=\"supfact\">param_5</span>, *(undefined4 *)(param_1 + Number),\n                 Number);\n  }\n  return;\n}", "code_t": "void ff_wmv2_add_mb(MpegEncContext *s,\n                    DCTELEM (*<span class=\"supfact\">block1</span>)[Number], uint8_t *dest_y,\n                    uint8_t *<span class=\"supfact\">dest_cb</span>,\n                    uint8_t *<span class=\"supfact\">dest_cr</span>) {\n  uint8_t *<span class=\"supfact\">dest_cr</span> - local;\n  uint8_t *<span class=\"supfact\">dest_cb</span> - local;\n  uint8_t *dest_y - local;\n  DCTELEM(*<span class=\"supfact\">block1</span> - local)[Number];\n  MpegEncContext *s - local;\n  Wmv2Context *w;\n  wmv2_add_block((Wmv2Context *)s, (DCTELEM *)<span class=\"supfact\">block1</span>, dest_y,\n                 s->linesize, Number);\n  wmv2_add_block((Wmv2Context *)s, (DCTELEM *)<span class=\"supfact\">block1</span>[Number],\n                 dest_y + Number, s->linesize, Number);\n  wmv2_add_block((Wmv2Context *)s, (DCTELEM *)<span class=\"supfact\">block1</span>[Number],\n                 dest_y + (s->linesize << Number), s->linesize, Number);\n  wmv2_add_block((Wmv2Context *)s, (DCTELEM *)<span class=\"supfact\">block1</span>[Number],\n                 dest_y + (long)(s->linesize << Number) + Number, s->linesize,\n                 Number);\n  if ((s->flags & Number) == Number) {\n    wmv2_add_block((Wmv2Context *)s, (DCTELEM *)<span class=\"supfact\">block1</span>[Number],\n                   <span class=\"supfact\">dest_cb</span>, s->uvlinesize, Number);\n    wmv2_add_block((Wmv2Context *)s, (DCTELEM *)<span class=\"supfact\">block1</span>[Number],\n                   <span class=\"supfact\">dest_cr</span>, s->uvlinesize, Number);\n  }\n  return;\n}", "var": [{"name": "param_2", "type": "DCTELEM[64] * *", "pred_name": "block1", "ref_name": "block1", "ref_type": "DCTELEM[64] * *"}, {"name": "param_4", "type": "uint8_t * *", "pred_name": "dest_cb", "ref_name": "dest_cb", "ref_type": "uint8_t * *"}, {"name": "param_5", "type": "uint8_t * *", "pred_name": "dest_cr", "ref_name": "dest_cr", "ref_type": "uint8_t * *"}], "body_in_train": false}, {"repo_owner": "Erriy", "repo_name": "data_pirate", "path": "Erriy/data_pirate/447de472ab9fd29bde461454b888fcb3bad5d9cbe852d4a1aeaa6b09d8b7695b", "path_in_repo": "Erriy/data_pirate//data_pirate", "objdump": "", "code_s": "int rand(void) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*_DAT_0040d178)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int rand(void) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*_DAT_0040d178)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "sohil318", "repo_name": "cse533", "path": "sohil318/cse533/23f5616a30777eee624f3f99702bbc90d9db41a8ed5db710ee97ab563ab5b5b3", "path_in_repo": "sohil318/cse533/Stevens/unpv13e/threads/example03", "objdump": "", "code_s": "int fflush(FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fflush_00404070)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int fflush(FILE *__stream) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fflush_00404070)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "ErikPshat", "repo_name": "sign_np-hykem", "path": "ErikPshat/sign_np-hykem/e718ee2d111cff3ef342760f714ab2b1ae9cb48ee76a4c0e7b7c46c7cb72a75d", "path_in_repo": "ErikPshat/sign_np-hykem//libkirk/ec.o", "objdump": "000000000000106d <ecdsa_sign>:\n    106d:\t55                   \tpush   %rbp\n    106e:\t48 89 e5             \tmov    %rsp,%rbp\n    1071:\t48 83 ec 20          \tsub    $0x20,%rsp\n    1075:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    1079:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n    107d:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n    1081:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    1085:\t48 8b 75 e8          \tmov    -0x18(%rbp),%rsi\n    1089:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    108d:\t48 89 d1             \tmov    %rdx,%rcx\n    1090:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1095:\t48 89 c7             \tmov    %rax,%rdi\n    1098:\te8 99 f7 ff ff       \tcall   836 <generate_ecdsa>\n    109d:\t90                   \tnop\n    109e:\tc9                   \tleave  \n    109f:\tc3                   \tret    ", "code_s": "void ecdsa_sign(undefined8 param_1, undefined8 <span class=\"supfact\">param_2</span>,\n                undefined8 <span class=\"supfact\">param_3</span>) {\n  FUN_00100836(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>, ec_k, param_1);\n  return;\n}", "code_t": "void ecdsa_sign(u8 *hash, u8 *<span class=\"supfact\">R</span>, u8 *<span class=\"supfact\">S</span>) {\n  u8 *<span class=\"supfact\">S</span> - local;\n  u8 *<span class=\"supfact\">R</span> - local;\n  u8 *hash - local;\n  generate_ecdsa(<span class=\"supfact\">R</span>, <span class=\"supfact\">S</span>, ec_k, hash);\n  return;\n}", "var": [{"name": "param_2", "type": "char * *", "pred_name": "data", "ref_name": "R", "ref_type": "u8 * *"}, {"name": "param_3", "type": "size_t", "pred_name": "len", "ref_name": "S", "ref_type": "u8 * *"}], "body_in_train": false}, {"repo_owner": "Erriy", "repo_name": "data_pirate", "path": "Erriy/data_pirate/447de472ab9fd29bde461454b888fcb3bad5d9cbe852d4a1aeaa6b09d8b7695b", "path_in_repo": "Erriy/data_pirate//data_pirate", "objdump": "", "code_s": "int rand(void) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*_DAT_0040d178)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int rand(void) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*_DAT_0040d178)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "apetrunev", "repo_name": "imgalg-opencl", "path": "apetrunev/imgalg-opencl/5f8f2173b98485b892dcf587e704d4a207c7a751d12b786cbddc8385a27ec93a", "path_in_repo": "apetrunev/imgalg-opencl//image", "objdump": "", "code_s": "int *__errno_location(void) {\n  int *<span class=\"supfact\">piVar1</span>;\n  <span class=\"supfact\">piVar1</span> = (int *)(*(code *)PTR___errno_location_00407018)();\n  return <span class=\"supfact\">piVar1</span>;\n}", "code_t": "int *__errno_location(void) {\n  int *<span class=\"supfact\">piVar1</span>;\n  <span class=\"supfact\">piVar1</span> = (int *)(*(code *)PTR___errno_location_00407018)();\n  return <span class=\"supfact\">piVar1</span>;\n}", "var": [{"name": "piVar1", "type": "int * *", "pred_name": "piVar1", "ref_name": "piVar1", "ref_type": "int * *"}], "body_in_train": true}, {"repo_owner": "Deslon", "repo_name": "Supernova", "path": "Deslon/Supernova/24c879be32921f694f6da40a3d7dcdf0e00e4425d21b3ce29cde8adfcf6b32ca", "path_in_repo": "Deslon/Supernova/engine/libs/mpg123/doc/examples/mpg123_to_out123", "objdump": "", "code_s": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_00404098)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_malloc_00404098)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": true}, {"repo_owner": "anthony-kolesov", "repo_name": "arc_ltp", "path": "anthony-kolesov/arc_ltp/b81026afc7f9466a92d4ab65ef348a7fc54c6d956dad9ab85381ec541e8b2ecb", "path_in_repo": "anthony-kolesov/arc_ltp/testcases/open_posix_testsuite/conformance/interfaces/munmap/1-1.run-test", "objdump": "", "code_s": "void *mmap(void *__addr, size_t __len, int __prot, int __flags, int __fd,\n           __off_t __offset) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_mmap_00404040)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *mmap(void *__addr, size_t __len, int __prot, int __flags, int __fd,\n           __off_t __offset) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_mmap_00404040)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": true}, {"repo_owner": "endoplasma", "repo_name": "tdma_demo", "path": "endoplasma/tdma_demo/250179743cbaf611024fa13cf21c7fc60371bb173439830cad5f4961f3ca1de8", "path_in_repo": "endoplasma/tdma_demo/contiki/projects/udpPlug/obj_native/rpl-dag.o", "objdump": "0000000000000b9f <rpl_add_parent>:\n     b9f:\t55                   \tpush   %rbp\n     ba0:\t48 89 e5             \tmov    %rsp,%rbp\n     ba3:\t48 83 ec 30          \tsub    $0x30,%rsp\n     ba7:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     bab:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n     baf:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n     bb3:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     bb7:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n     bbb:\t48 89 c7             \tmov    %rax,%rdi\n     bbe:\te8 00 00 00 00       \tcall   bc3 <rpl_add_parent+0x24>\n     bc3:\t83 f8 08             \tcmp    $0x8,%eax\n     bc6:\t75 0a                \tjne    bd2 <rpl_add_parent+0x33>\n     bc8:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     bcd:\te9 9a 00 00 00       \tjmp    c6c <rpl_add_parent+0xcd>\n     bd2:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     bd7:\te8 00 00 00 00       \tcall   bdc <rpl_add_parent+0x3d>\n     bdc:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     be0:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n     be5:\t75 07                \tjne    bee <rpl_add_parent+0x4f>\n     be7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     bec:\teb 7e                \tjmp    c6c <rpl_add_parent+0xcd>\n     bee:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     bf2:\t48 8d 48 18          \tlea    0x18(%rax),%rcx\n     bf6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     bfa:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n     bfe:\t48 8b 00             \tmov    (%rax),%rax\n     c01:\t48 89 01             \tmov    %rax,(%rcx)\n     c04:\t48 89 51 08          \tmov    %rdx,0x8(%rcx)\n     c08:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     c0c:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n     c10:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n     c14:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     c18:\t0f b7 50 12          \tmovzwl 0x12(%rax),%edx\n     c1c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     c20:\t66 89 50 28          \tmov    %dx,0x28(%rax)\n     c24:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     c28:\t0f b6 50 19          \tmovzbl 0x19(%rax),%edx\n     c2c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     c30:\t88 50 2b             \tmov    %dl,0x2b(%rax)\n     c33:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     c37:\tc6 40 2a 50          \tmovb   $0x50,0x2a(%rax)\n     c3b:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n     c3f:\t48 83 c0 54          \tadd    $0x54,%rax\n     c43:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n     c47:\t48 83 c2 10          \tadd    $0x10,%rdx\n     c4b:\t48 8b 00             \tmov    (%rax),%rax\n     c4e:\t48 89 02             \tmov    %rax,(%rdx)\n     c51:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     c55:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n     c59:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n     c5d:\t48 89 d6             \tmov    %rdx,%rsi\n     c60:\t48 89 c7             \tmov    %rax,%rdi\n     c63:\te8 00 00 00 00       \tcall   c68 <rpl_add_parent+0xc9>\n     c68:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     c6c:\tc9                   \tleave  \n     c6d:\tc3                   \tret    ", "code_s": "long rpl_add_parent(long param_1, long <span class=\"supfact\">param_2</span>,\n                    undefined8 *<span class=\"supfact\">param_3</span>) {\n  undefined8 uVar1;\n  int iVar2;\n  long lVar3;\n  iVar2 = list_length(*(undefined8 *)(param_1 + Number));\n  if (iVar2 == Number) {\n    lVar3 = Number;\n  } else {\n    lVar3 = memb_alloc(&DAT_00102240);\n    if (lVar3 == Number) {\n      lVar3 = Number;\n    } else {\n      uVar1 = <span class=\"supfact\">param_3</span>[Number];\n      *(undefined8 *)(lVar3 + Number) = *<span class=\"supfact\">param_3</span>;\n      *(undefined8 *)(lVar3 + Number) = uVar1;\n      *(long *)(lVar3 + Number) = param_1;\n      *(undefined2 *)(lVar3 + Number) =\n          *(undefined2 *)(<span class=\"supfact\">param_2</span> + Number);\n      *(undefined *)(lVar3 + Number) =\n          *(undefined *)(<span class=\"supfact\">param_2</span> + Number);\n      *(undefined *)(lVar3 + Number) = Number;\n      *(undefined8 *)(lVar3 + Number) =\n          *(undefined8 *)(<span class=\"supfact\">param_2</span> + Number);\n      list_add(*(undefined8 *)(param_1 + Number), lVar3);\n    }\n  }\n  return lVar3;\n}", "code_t": "rpl_parent_t *rpl_add_parent(rpl_dag_t *dag, rpl_dio_t *<span class=\"supfact\">dio</span>,\n                             uip_ipaddr_t *<span class=\"supfact\">addr</span>) {\n  undefined8 uVar1;\n  uint8_t uVar2;\n  uint8_t uVar3;\n  uint8_t uVar4;\n  uint8_t uVar5;\n  undefined uVar6;\n  metric_object mVar7;\n  int iVar8;\n  rpl_parent_t *prVar9;\n  uip_ipaddr_t *<span class=\"supfact\">addr</span> - local;\n  rpl_dio_t *<span class=\"supfact\">dio</span> - local;\n  rpl_dag_t *dag - local;\n  rpl_parent_t *p;\n  iVar8 = list_length(*(undefined8 *)&dag->field_0x38);\n  if (iVar8 == Number) {\n    prVar9 = (rpl_parent_t *)Number;\n  } else {\n    prVar9 = (rpl_parent_t *)memb_alloc(&parent_memb);\n    if (prVar9 == (rpl_parent_t *)Number) {\n      prVar9 = (rpl_parent_t *)Number;\n    } else {\n      uVar1 = *(undefined8 *)(<span class=\"supfact\">addr</span>->u8 + Number);\n      *(undefined8 *)&prVar9-><span class=\"supfact\">addr</span> =\n          *(undefined8 *)<span class=\"supfact\">addr</span>;\n      *(undefined8 *)((long)&prVar9-><span class=\"supfact\">addr</span> + Number) = uVar1;\n      prVar9->dag = dag;\n      prVar9->rank = <span class=\"supfact\">dio</span>->rank;\n      prVar9->dtsn = <span class=\"supfact\">dio</span>->dtsn;\n      prVar9->link_metric = String;\n      uVar2 = (<span class=\"supfact\">dio</span>->mc).flags;\n      uVar3 = (<span class=\"supfact\">dio</span>->mc).aggr;\n      uVar4 = (<span class=\"supfact\">dio</span>->mc).prec;\n      uVar5 = (<span class=\"supfact\">dio</span>->mc).length;\n      uVar6 = (<span class=\"supfact\">dio</span>->mc).field_0x5;\n      mVar7 = (<span class=\"supfact\">dio</span>->mc).obj;\n      (prVar9->mc).type = (<span class=\"supfact\">dio</span>->mc).type;\n      (prVar9->mc).flags = uVar2;\n      (prVar9->mc).aggr = uVar3;\n      (prVar9->mc).prec = uVar4;\n      (prVar9->mc).length = uVar5;\n      (prVar9->mc).field_0x5 = uVar6;\n      (prVar9->mc).obj = mVar7;\n      list_add(*(undefined8 *)&dag->field_0x38, prVar9);\n    }\n  }\n  return prVar9;\n}", "var": [{"name": "param_2", "type": "rpl_dio_t * *", "pred_name": "dio", "ref_name": "dio", "ref_type": "rpl_dio_t * *"}, {"name": "param_3", "type": "uip_ipaddr_t * *", "pred_name": "addr", "ref_name": "addr", "ref_type": "uip_ipaddr_t * *"}], "body_in_train": true}, {"repo_owner": "endoplasma", "repo_name": "tdma_demo", "path": "endoplasma/tdma_demo/250179743cbaf611024fa13cf21c7fc60371bb173439830cad5f4961f3ca1de8", "path_in_repo": "endoplasma/tdma_demo/contiki/projects/udpPlug/obj_native/rpl-dag.o", "objdump": "00000000000008d7 <rpl_alloc_instance>:\n     8d7:\t55                   \tpush   %rbp\n     8d8:\t48 89 e5             \tmov    %rsp,%rbp\n     8db:\t48 83 ec 20          \tsub    $0x20,%rsp\n     8df:\t89 f8                \tmov    %edi,%eax\n     8e1:\t88 45 ec             \tmov    %al,-0x14(%rbp)\n     8e4:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n     8eb:\t00 \n     8ec:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     8f0:\t48 05 68 01 00 00    \tadd    $0x168,%rax\n     8f6:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     8fa:\teb 5b                \tjmp    957 <rpl_alloc_instance+0x80>\n     8fc:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     900:\t0f b6 80 d1 00 00 00 \tmovzbl 0xd1(%rax),%eax\n     907:\t84 c0                \ttest   %al,%al\n     909:\t75 44                \tjne    94f <rpl_alloc_instance+0x78>\n     90b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     90f:\tba 68 01 00 00       \tmov    $0x168,%edx\n     914:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     919:\t48 89 c7             \tmov    %rax,%rdi\n     91c:\te8 00 00 00 00       \tcall   921 <rpl_alloc_instance+0x4a>\n     921:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     925:\t0f b6 55 ec          \tmovzbl -0x14(%rbp),%edx\n     929:\t88 90 d0 00 00 00    \tmov    %dl,0xd0(%rax)\n     92f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     933:\t48 c7 80 c8 00 00 00 \tmovq   $0x0,0xc8(%rax)\n     93a:\t00 00 00 00 \n     93e:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     942:\tc6 80 d1 00 00 00 01 \tmovb   $0x1,0xd1(%rax)\n     949:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     94d:\teb 17                \tjmp    966 <rpl_alloc_instance+0x8f>\n     94f:\t48 81 45 f8 68 01 00 \taddq   $0x168,-0x8(%rbp)\n     956:\t00 \n     957:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     95b:\t48 3b 45 f0          \tcmp    -0x10(%rbp),%rax\n     95f:\t72 9b                \tjb     8fc <rpl_alloc_instance+0x25>\n     961:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     966:\tc9                   \tleave  \n     967:\tc3                   \tret    ", "code_s": "undefined1 *rpl_alloc_instance(undefined <span class=\"supfact\">param_1</span>) {\n  undefined1 *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = instance_table;\n  while (true) {\n    if (instance_table + Number < <span class=\"supfact\">local_10</span>) {\n      return (undefined1 *)Number;\n    }\n    if (<span class=\"supfact\">local_10</span>[Number] == String)\n      break;\n    <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number;\n  }\n  memset(<span class=\"supfact\">local_10</span>, Number, Number);\n  <span class=\"supfact\">local_10</span>[Number] = <span class=\"supfact\">param_1</span>;\n  *(undefined8 *)(<span class=\"supfact\">local_10</span> + Number) = Number;\n  <span class=\"supfact\">local_10</span>[Number] = Number;\n  return <span class=\"supfact\">local_10</span>;\n}", "code_t": "rpl_instance_t *rpl_alloc_instance(uint8_t <span class=\"supfact\">instance_id</span>) {\n  uint8_t <span class=\"supfact\">instance_id</span> - local;\n  rpl_instance_t *end;\n  rpl_instance_t *<span class=\"supfact\">instance</span>;\n  <span class=\"supfact\">instance</span> = (rpl_instance_t *)instance_table;\n  while (true) {\n    if ((rpl_instance_t *)(instance_table + Number) <\n        <span class=\"supfact\">instance</span>) {\n      return (rpl_instance_t *)Number;\n    }\n    if (<span class=\"supfact\">instance</span>->used == String)\n      break;\n    <span class=\"supfact\">instance</span> = <span class=\"supfact\">instance</span> + Number;\n  }\n  memset(<span class=\"supfact\">instance</span>, Number, Number);\n  <span class=\"supfact\">instance</span>-><span class=\"supfact\">instance_id</span> =\n      <span class=\"supfact\">instance_id</span>;\n  <span class=\"supfact\">instance</span>->def_route = (uip_ds6_defrt_t *)Number;\n  <span class=\"supfact\">instance</span>->used = String;\n  return <span class=\"supfact\">instance</span>;\n}", "var": [{"name": "param_1", "type": "uint8_t", "pred_name": "instance_id", "ref_name": "instance_id", "ref_type": "uint8_t"}, {"name": "local_10", "type": "rpl_instance_t * *", "pred_name": "instance", "ref_name": "instance", "ref_type": "rpl_instance_t * *"}], "body_in_train": true}, {"repo_owner": "sreejithcools", "repo_name": "opensourceworkspace", "path": "sreejithcools/opensourceworkspace/0b1d41075ceeb613d97ce137b564e5495bba34f37a7888eb5888d0167f5d5e21", "path_in_repo": "sreejithcools/opensourceworkspace/xuggle-xuggler-iStreamLife/captive/openssl/csrc/apps/apps.o", "objdump": "0000000000002003 <copy_extensions>:\n    2003:\t55                   \tpush   %rbp\n    2004:\t48 89 e5             \tmov    %rsp,%rbp\n    2007:\t48 83 ec 50          \tsub    $0x50,%rsp\n    200b:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    200f:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n    2013:\t89 55 bc             \tmov    %edx,-0x44(%rbp)\n    2016:\t48 c7 45 e8 00 00 00 \tmovq   $0x0,-0x18(%rbp)\n    201d:\t00 \n    201e:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n    2025:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n    202a:\t74 0d                \tje     2039 <copy_extensions+0x36>\n    202c:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n    2031:\t74 06                \tje     2039 <copy_extensions+0x36>\n    2033:\t83 7d bc 00          \tcmpl   $0x0,-0x44(%rbp)\n    2037:\t75 0a                \tjne    2043 <copy_extensions+0x40>\n    2039:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    203e:\te9 11 01 00 00       \tjmp    2154 <copy_extensions+0x151>\n    2043:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    2047:\t48 89 c7             \tmov    %rax,%rdi\n    204a:\te8 00 00 00 00       \tcall   204f <copy_extensions+0x4c>\n    204f:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    2053:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    205a:\te9 c2 00 00 00       \tjmp    2121 <copy_extensions+0x11e>\n    205f:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    2062:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2066:\t89 d6                \tmov    %edx,%esi\n    2068:\t48 89 c7             \tmov    %rax,%rdi\n    206b:\te8 00 00 00 00       \tcall   2070 <copy_extensions+0x6d>\n    2070:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    2074:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    2078:\t48 89 c7             \tmov    %rax,%rdi\n    207b:\te8 00 00 00 00       \tcall   2080 <copy_extensions+0x7d>\n    2080:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    2084:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n    2088:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    208c:\tba ff ff ff ff       \tmov    $0xffffffff,%edx\n    2091:\t48 89 ce             \tmov    %rcx,%rsi\n    2094:\t48 89 c7             \tmov    %rax,%rdi\n    2097:\te8 00 00 00 00       \tcall   209c <copy_extensions+0x99>\n    209c:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n    209f:\t83 7d f8 ff          \tcmpl   $0xffffffff,-0x8(%rbp)\n    20a3:\t74 59                \tje     20fe <copy_extensions+0xfb>\n    20a5:\t83 7d bc 01          \tcmpl   $0x1,-0x44(%rbp)\n    20a9:\t74 71                \tje     211c <copy_extensions+0x119>\n    20ab:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    20ae:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    20b2:\t89 d6                \tmov    %edx,%esi\n    20b4:\t48 89 c7             \tmov    %rax,%rdi\n    20b7:\te8 00 00 00 00       \tcall   20bc <copy_extensions+0xb9>\n    20bc:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    20c0:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    20c3:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    20c7:\t89 d6                \tmov    %edx,%esi\n    20c9:\t48 89 c7             \tmov    %rax,%rdi\n    20cc:\te8 00 00 00 00       \tcall   20d1 <copy_extensions+0xce>\n    20d1:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    20d5:\t48 89 c7             \tmov    %rax,%rdi\n    20d8:\te8 00 00 00 00       \tcall   20dd <copy_extensions+0xda>\n    20dd:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n    20e1:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    20e5:\tba ff ff ff ff       \tmov    $0xffffffff,%edx\n    20ea:\t48 89 ce             \tmov    %rcx,%rsi\n    20ed:\t48 89 c7             \tmov    %rax,%rdi\n    20f0:\te8 00 00 00 00       \tcall   20f5 <copy_extensions+0xf2>\n    20f5:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n    20f8:\t83 7d f8 ff          \tcmpl   $0xffffffff,-0x8(%rbp)\n    20fc:\t75 ad                \tjne    20ab <copy_extensions+0xa8>\n    20fe:\t48 8b 4d e0          \tmov    -0x20(%rbp),%rcx\n    2102:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2106:\tba ff ff ff ff       \tmov    $0xffffffff,%edx\n    210b:\t48 89 ce             \tmov    %rcx,%rsi\n    210e:\t48 89 c7             \tmov    %rax,%rdi\n    2111:\te8 00 00 00 00       \tcall   2116 <copy_extensions+0x113>\n    2116:\t85 c0                \ttest   %eax,%eax\n    2118:\t74 25                \tje     213f <copy_extensions+0x13c>\n    211a:\teb 01                \tjmp    211d <copy_extensions+0x11a>\n    211c:\t90                   \tnop\n    211d:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    2121:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2125:\t48 89 c7             \tmov    %rax,%rdi\n    2128:\te8 00 00 00 00       \tcall   212d <copy_extensions+0x12a>\n    212d:\t39 45 fc             \tcmp    %eax,-0x4(%rbp)\n    2130:\t0f 8c 29 ff ff ff    \tjl     205f <copy_extensions+0x5c>\n    2136:\tc7 45 f4 01 00 00 00 \tmovl   $0x1,-0xc(%rbp)\n    213d:\teb 01                \tjmp    2140 <copy_extensions+0x13d>\n    213f:\t90                   \tnop\n    2140:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2144:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2149:\t48 89 c7             \tmov    %rax,%rdi\n    214c:\te8 00 00 00 00       \tcall   2151 <copy_extensions+0x14e>\n    2151:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    2154:\tc9                   \tleave  \n    2155:\tc3                   \tret    ", "code_s": "undefined4 copy_extensions(X509 *param_1, X509_REQ *<span class=\"supfact\">param_2</span>,\n                           int <span class=\"supfact\">param_3</span>) {\n  int iVar1;\n  _STACK *st;\n  X509_EXTENSION *ex;\n  ASN1_OBJECT *obj;\n  X509_EXTENSION *a;\n  undefined4 <span class=\"supfact\">local_14</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_14</span> = Number;\n  if (((param_1 == (X509 *)Number) ||\n       (<span class=\"supfact\">param_2</span> == (X509_REQ *)Number)) ||\n      (<span class=\"supfact\">param_3</span> == Number)) {\n    <span class=\"supfact\">local_14</span> = Number;\n  } else {\n    st = (_STACK *)X509_REQ_get_extensions(<span class=\"supfact\">param_2</span>);\n    for (<span class=\"supfact\">local_c</span> = Number;\n         iVar1 = sk_num(st), <span class=\"supfact\">local_c</span> < iVar1;\n         <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n      ex = (X509_EXTENSION *)sk_value(st, <span class=\"supfact\">local_c</span>);\n      obj = X509_EXTENSION_get_object(ex);\n      <span class=\"supfact\">local_10</span> = X509_get_ext_by_OBJ(param_1, obj, -Number);\n      if (<span class=\"supfact\">local_10</span> == -Number) {\n      LAB_001020fe:\n        iVar1 = X509_add_ext(param_1, ex, -Number);\n        if (iVar1 == Number)\n          goto LAB_00102140;\n      } else if (<span class=\"supfact\">param_3</span> != Number) {\n        do {\n          a = X509_get_ext(param_1, <span class=\"supfact\">local_10</span>);\n          X509_delete_ext(param_1, <span class=\"supfact\">local_10</span>);\n          X509_EXTENSION_free(a);\n          <span class=\"supfact\">local_10</span> = X509_get_ext_by_OBJ(param_1, obj, -Number);\n        } while (<span class=\"supfact\">local_10</span> != -Number);\n        goto LAB_001020fe;\n      }\n    }\n    <span class=\"supfact\">local_14</span> = Number;\n  LAB_00102140:\n    sk_pop_free(st, X509_EXTENSION_free);\n  }\n  return <span class=\"supfact\">local_14</span>;\n}", "code_t": "int copy_extensions(X509 *x, X509_REQ *<span class=\"supfact\">req</span>, int copy_type) {\n  int iVar1;\n  _STACK *st;\n  X509_EXTENSION *ex;\n  ASN1_OBJECT *obj_00;\n  X509_EXTENSION *a;\n  int copy_type - local;\n  X509_REQ *<span class=\"supfact\">req</span> - local;\n  X509 *x - local;\n  X509_EXTENSION *tmpext;\n  ASN1_OBJECT *obj;\n  X509_EXTENSION *ext;\n  stack_st_X509_EXTENSION *exts;\n  int <span class=\"supfact\">ret</span>;\n  int <span class=\"supfact\">idx</span>;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">ret</span> = Number;\n  if (((x == (X509 *)Number) || (<span class=\"supfact\">req</span> == (X509_REQ *)Number)) ||\n      (copy_type == Number)) {\n    <span class=\"supfact\">ret</span> = Number;\n  } else {\n    st = (_STACK *)X509_REQ_get_extensions((X509_REQ *)<span class=\"supfact\">req</span>);\n    for (<span class=\"supfact\">i</span> = Number;\n         iVar1 = sk_num(st), <span class=\"supfact\">i</span> < iVar1;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      ex = (X509_EXTENSION *)sk_value(st, <span class=\"supfact\">i</span>);\n      obj_00 = X509_EXTENSION_get_object(ex);\n      <span class=\"supfact\">idx</span> = X509_get_ext_by_OBJ((X509 *)x, obj_00, -Number);\n      if (<span class=\"supfact\">idx</span> == -Number) {\n      LAB_001020fe:\n        iVar1 = X509_add_ext((X509 *)x, ex, -Number);\n        if (iVar1 == Number)\n          goto end;\n      } else if (copy_type != Number) {\n        do {\n          a = X509_get_ext((X509 *)x, <span class=\"supfact\">idx</span>);\n          X509_delete_ext((X509 *)x, <span class=\"supfact\">idx</span>);\n          X509_EXTENSION_free(a);\n          <span class=\"supfact\">idx</span> = X509_get_ext_by_OBJ((X509 *)x, obj_00, -Number);\n        } while (<span class=\"supfact\">idx</span> != -Number);\n        goto LAB_001020fe;\n      }\n    }\n    <span class=\"supfact\">ret</span> = Number;\n  end:\n    sk_pop_free(st, X509_EXTENSION_free);\n  }\n  return <span class=\"supfact\">ret</span>;\n}", "var": [{"name": "param_2", "type": "X509_REQ * *", "pred_name": "req", "ref_name": "req", "ref_type": "X509_REQ * *"}, {"name": "param_3", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_14", "type": "int", "pred_name": "ret", "ref_name": "ret", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "idx", "ref_name": "idx", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "littledan", "repo_name": "libserver", "path": "littledan/libserver/22929d63a2a4db58fd0a3a4b77a5f8542bab1be8ea4fce359304b9618a7a786f", "path_in_repo": "littledan/libserver/libevent/evutil.o", "objdump": "0000000000001ef2 <evutil_inet_pton>:\n    1ef2:\t55                   \tpush   %rbp\n    1ef3:\t48 89 e5             \tmov    %rsp,%rbp\n    1ef6:\t48 81 ec b0 00 00 00 \tsub    $0xb0,%rsp\n    1efd:\t89 bd 6c ff ff ff    \tmov    %edi,-0x94(%rbp)\n    1f03:\t48 89 b5 60 ff ff ff \tmov    %rsi,-0xa0(%rbp)\n    1f0a:\t48 89 95 58 ff ff ff \tmov    %rdx,-0xa8(%rbp)\n    1f11:\t83 bd 6c ff ff ff 02 \tcmpl   $0x2,-0x94(%rbp)\n    1f18:\t0f 85 f6 00 00 00    \tjne    2014 <evutil_inet_pton+0x122>\n    1f1e:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    1f25:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    1f29:\t4c 8d 45 b0          \tlea    -0x50(%rbp),%r8\n    1f2d:\t48 8d 7d b4          \tlea    -0x4c(%rbp),%rdi\n    1f31:\t48 8d 4d b8          \tlea    -0x48(%rbp),%rcx\n    1f35:\t48 8d 55 bc          \tlea    -0x44(%rbp),%rdx\n    1f39:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    1f40:\t48 83 ec 08          \tsub    $0x8,%rsp\n    1f44:\t48 8d 75 af          \tlea    -0x51(%rbp),%rsi\n    1f48:\t56                   \tpush   %rsi\n    1f49:\t4d 89 c1             \tmov    %r8,%r9\n    1f4c:\t49 89 f8             \tmov    %rdi,%r8\n    1f4f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1f54:\t48 89 c7             \tmov    %rax,%rdi\n    1f57:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1f5c:\te8 00 00 00 00       \tcall   1f61 <evutil_inet_pton+0x6f>\n    1f61:\t48 83 c4 10          \tadd    $0x10,%rsp\n    1f65:\t83 f8 04             \tcmp    $0x4,%eax\n    1f68:\t74 0a                \tje     1f74 <evutil_inet_pton+0x82>\n    1f6a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1f6f:\te9 c3 04 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    1f74:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    1f77:\t85 c0                \ttest   %eax,%eax\n    1f79:\t78 0a                \tjs     1f85 <evutil_inet_pton+0x93>\n    1f7b:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    1f7e:\t3d ff 00 00 00       \tcmp    $0xff,%eax\n    1f83:\t7e 0a                \tjle    1f8f <evutil_inet_pton+0x9d>\n    1f85:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1f8a:\te9 a8 04 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    1f8f:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n    1f92:\t85 c0                \ttest   %eax,%eax\n    1f94:\t78 0a                \tjs     1fa0 <evutil_inet_pton+0xae>\n    1f96:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n    1f99:\t3d ff 00 00 00       \tcmp    $0xff,%eax\n    1f9e:\t7e 0a                \tjle    1faa <evutil_inet_pton+0xb8>\n    1fa0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1fa5:\te9 8d 04 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    1faa:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n    1fad:\t85 c0                \ttest   %eax,%eax\n    1faf:\t78 0a                \tjs     1fbb <evutil_inet_pton+0xc9>\n    1fb1:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n    1fb4:\t3d ff 00 00 00       \tcmp    $0xff,%eax\n    1fb9:\t7e 0a                \tjle    1fc5 <evutil_inet_pton+0xd3>\n    1fbb:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1fc0:\te9 72 04 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    1fc5:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n    1fc8:\t85 c0                \ttest   %eax,%eax\n    1fca:\t78 0a                \tjs     1fd6 <evutil_inet_pton+0xe4>\n    1fcc:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n    1fcf:\t3d ff 00 00 00       \tcmp    $0xff,%eax\n    1fd4:\t7e 0a                \tjle    1fe0 <evutil_inet_pton+0xee>\n    1fd6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1fdb:\te9 57 04 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    1fe0:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n    1fe3:\tc1 e0 18             \tshl    $0x18,%eax\n    1fe6:\t89 c2                \tmov    %eax,%edx\n    1fe8:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n    1feb:\tc1 e0 10             \tshl    $0x10,%eax\n    1fee:\t09 c2                \tor     %eax,%edx\n    1ff0:\t8b 45 b4             \tmov    -0x4c(%rbp),%eax\n    1ff3:\tc1 e0 08             \tshl    $0x8,%eax\n    1ff6:\t09 c2                \tor     %eax,%edx\n    1ff8:\t8b 45 b0             \tmov    -0x50(%rbp),%eax\n    1ffb:\t09 d0                \tor     %edx,%eax\n    1ffd:\t89 c7                \tmov    %eax,%edi\n    1fff:\te8 00 00 00 00       \tcall   2004 <evutil_inet_pton+0x112>\n    2004:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    2008:\t89 02                \tmov    %eax,(%rdx)\n    200a:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    200f:\te9 23 04 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    2014:\t83 bd 6c ff ff ff 0a \tcmpl   $0xa,-0x94(%rbp)\n    201b:\t0f 85 11 04 00 00    \tjne    2432 <evutil_inet_pton+0x540>\n    2021:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    2028:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    202c:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n    2033:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n    203a:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    2041:\tbe 2e 00 00 00       \tmov    $0x2e,%esi\n    2046:\t48 89 c7             \tmov    %rax,%rdi\n    2049:\te8 00 00 00 00       \tcall   204e <evutil_inet_pton+0x15c>\n    204e:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    2052:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    2056:\t48 3b 85 60 ff ff ff \tcmp    -0xa0(%rbp),%rax\n    205d:\t75 0a                \tjne    2069 <evutil_inet_pton+0x177>\n    205f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2064:\te9 ce 03 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    2069:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n    206e:\t75 22                \tjne    2092 <evutil_inet_pton+0x1a0>\n    2070:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    2077:\t48 89 c7             \tmov    %rax,%rdi\n    207a:\te8 00 00 00 00       \tcall   207f <evutil_inet_pton+0x18d>\n    207f:\t48 8b 95 60 ff ff ff \tmov    -0xa0(%rbp),%rdx\n    2086:\t48 01 d0             \tadd    %rdx,%rax\n    2089:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    208d:\te9 f9 00 00 00       \tjmp    218b <evutil_inet_pton+0x299>\n    2092:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    2096:\t48 83 e8 01          \tsub    $0x1,%rax\n    209a:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    209e:\teb 05                \tjmp    20a5 <evutil_inet_pton+0x1b3>\n    20a0:\t48 83 6d e8 01       \tsubq   $0x1,-0x18(%rbp)\n    20a5:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    20a9:\t48 3b 85 60 ff ff ff \tcmp    -0xa0(%rbp),%rax\n    20b0:\t72 15                \tjb     20c7 <evutil_inet_pton+0x1d5>\n    20b2:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    20b6:\t0f b6 00             \tmovzbl (%rax),%eax\n    20b9:\t0f be c0             \tmovsbl %al,%eax\n    20bc:\t89 c7                \tmov    %eax,%edi\n    20be:\te8 00 00 00 00       \tcall   20c3 <evutil_inet_pton+0x1d1>\n    20c3:\t85 c0                \ttest   %eax,%eax\n    20c5:\t75 d9                \tjne    20a0 <evutil_inet_pton+0x1ae>\n    20c7:\t48 83 45 e8 01       \taddq   $0x1,-0x18(%rbp)\n    20cc:\t4c 8d 45 80          \tlea    -0x80(%rbp),%r8\n    20d0:\t48 8d 7d 84          \tlea    -0x7c(%rbp),%rdi\n    20d4:\t48 8d 4d 88          \tlea    -0x78(%rbp),%rcx\n    20d8:\t48 8d 55 8c          \tlea    -0x74(%rbp),%rdx\n    20dc:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    20e0:\t48 83 ec 08          \tsub    $0x8,%rsp\n    20e4:\t48 8d b5 7f ff ff ff \tlea    -0x81(%rbp),%rsi\n    20eb:\t56                   \tpush   %rsi\n    20ec:\t4d 89 c1             \tmov    %r8,%r9\n    20ef:\t49 89 f8             \tmov    %rdi,%r8\n    20f2:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    20f7:\t48 89 c7             \tmov    %rax,%rdi\n    20fa:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    20ff:\te8 00 00 00 00       \tcall   2104 <evutil_inet_pton+0x212>\n    2104:\t48 83 c4 10          \tadd    $0x10,%rsp\n    2108:\t83 f8 04             \tcmp    $0x4,%eax\n    210b:\t74 0a                \tje     2117 <evutil_inet_pton+0x225>\n    210d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2112:\te9 20 03 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    2117:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    211a:\t3d ff 00 00 00       \tcmp    $0xff,%eax\n    211f:\t7f 3a                \tjg     215b <evutil_inet_pton+0x269>\n    2121:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    2124:\t85 c0                \ttest   %eax,%eax\n    2126:\t78 33                \tjs     215b <evutil_inet_pton+0x269>\n    2128:\t8b 45 88             \tmov    -0x78(%rbp),%eax\n    212b:\t3d ff 00 00 00       \tcmp    $0xff,%eax\n    2130:\t7f 29                \tjg     215b <evutil_inet_pton+0x269>\n    2132:\t8b 45 88             \tmov    -0x78(%rbp),%eax\n    2135:\t85 c0                \ttest   %eax,%eax\n    2137:\t78 22                \tjs     215b <evutil_inet_pton+0x269>\n    2139:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    213c:\t3d ff 00 00 00       \tcmp    $0xff,%eax\n    2141:\t7f 18                \tjg     215b <evutil_inet_pton+0x269>\n    2143:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    2146:\t85 c0                \ttest   %eax,%eax\n    2148:\t78 11                \tjs     215b <evutil_inet_pton+0x269>\n    214a:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    214d:\t3d ff 00 00 00       \tcmp    $0xff,%eax\n    2152:\t7f 07                \tjg     215b <evutil_inet_pton+0x269>\n    2154:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2157:\t85 c0                \ttest   %eax,%eax\n    2159:\t79 0a                \tjns    2165 <evutil_inet_pton+0x273>\n    215b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2160:\te9 d2 02 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    2165:\t8b 45 8c             \tmov    -0x74(%rbp),%eax\n    2168:\tc1 e0 08             \tshl    $0x8,%eax\n    216b:\t89 c2                \tmov    %eax,%edx\n    216d:\t8b 45 88             \tmov    -0x78(%rbp),%eax\n    2170:\t09 d0                \tor     %edx,%eax\n    2172:\t66 89 45 9c          \tmov    %ax,-0x64(%rbp)\n    2176:\t8b 45 84             \tmov    -0x7c(%rbp),%eax\n    2179:\tc1 e0 08             \tshl    $0x8,%eax\n    217c:\t89 c2                \tmov    %eax,%edx\n    217e:\t8b 45 80             \tmov    -0x80(%rbp),%eax\n    2181:\t09 d0                \tor     %edx,%eax\n    2183:\t66 89 45 9e          \tmov    %ax,-0x62(%rbp)\n    2187:\t83 45 f4 02          \taddl   $0x2,-0xc(%rbp)\n    218b:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n    2192:\te9 69 01 00 00       \tjmp    2300 <evutil_inet_pton+0x40e>\n    2197:\t83 7d f8 07          \tcmpl   $0x7,-0x8(%rbp)\n    219b:\t7e 0a                \tjle    21a7 <evutil_inet_pton+0x2b5>\n    219d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    21a2:\te9 90 02 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    21a7:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    21ae:\t0f b6 00             \tmovzbl (%rax),%eax\n    21b1:\t0f be c0             \tmovsbl %al,%eax\n    21b4:\t89 c7                \tmov    %eax,%edi\n    21b6:\te8 00 00 00 00       \tcall   21bb <evutil_inet_pton+0x2c9>\n    21bb:\t85 c0                \ttest   %eax,%eax\n    21bd:\t0f 84 cd 00 00 00    \tje     2290 <evutil_inet_pton+0x39e>\n    21c3:\t48 8d 8d 70 ff ff ff \tlea    -0x90(%rbp),%rcx\n    21ca:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    21d1:\tba 10 00 00 00       \tmov    $0x10,%edx\n    21d6:\t48 89 ce             \tmov    %rcx,%rsi\n    21d9:\t48 89 c7             \tmov    %rax,%rdi\n    21dc:\te8 00 00 00 00       \tcall   21e1 <evutil_inet_pton+0x2ef>\n    21e1:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    21e5:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    21ec:\t48 8d 50 04          \tlea    0x4(%rax),%rdx\n    21f0:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n    21f7:\t48 39 c2             \tcmp    %rax,%rdx\n    21fa:\t73 0a                \tjae    2206 <evutil_inet_pton+0x314>\n    21fc:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2201:\te9 31 02 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    2206:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n    220d:\t48 39 85 60 ff ff ff \tcmp    %rax,-0xa0(%rbp)\n    2214:\t75 0a                \tjne    2220 <evutil_inet_pton+0x32e>\n    2216:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    221b:\te9 17 02 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    2220:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n    2225:\t78 0a                \tjs     2231 <evutil_inet_pton+0x33f>\n    2227:\t48 81 7d c8 00 00 01 \tcmpq   $0x10000,-0x38(%rbp)\n    222e:\t00 \n    222f:\t7e 0a                \tjle    223b <evutil_inet_pton+0x349>\n    2231:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2236:\te9 fc 01 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    223b:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    223e:\t8d 50 01             \tlea    0x1(%rax),%edx\n    2241:\t89 55 f8             \tmov    %edx,-0x8(%rbp)\n    2244:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    2248:\t48 98                \tcltq   \n    224a:\t66 89 54 45 90       \tmov    %dx,-0x70(%rbp,%rax,2)\n    224f:\t83 45 f4 01          \taddl   $0x1,-0xc(%rbp)\n    2253:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n    225a:\t48 89 85 60 ff ff ff \tmov    %rax,-0xa0(%rbp)\n    2261:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    2268:\t0f b6 00             \tmovzbl (%rax),%eax\n    226b:\t3c 3a                \tcmp    $0x3a,%al\n    226d:\t74 17                \tje     2286 <evutil_inet_pton+0x394>\n    226f:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    2276:\t48 3b 45 e8          \tcmp    -0x18(%rbp),%rax\n    227a:\t74 0a                \tje     2286 <evutil_inet_pton+0x394>\n    227c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2281:\te9 b1 01 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    2286:\t48 83 85 60 ff ff ff \taddq   $0x1,-0xa0(%rbp)\n    228d:\t01 \n    228e:\teb 70                \tjmp    2300 <evutil_inet_pton+0x40e>\n    2290:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    2297:\t0f b6 00             \tmovzbl (%rax),%eax\n    229a:\t3c 3a                \tcmp    $0x3a,%al\n    229c:\t75 1c                \tjne    22ba <evutil_inet_pton+0x3c8>\n    229e:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n    22a2:\t7e 16                \tjle    22ba <evutil_inet_pton+0x3c8>\n    22a4:\t83 7d fc ff          \tcmpl   $0xffffffff,-0x4(%rbp)\n    22a8:\t75 10                \tjne    22ba <evutil_inet_pton+0x3c8>\n    22aa:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    22ad:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    22b0:\t48 83 85 60 ff ff ff \taddq   $0x1,-0xa0(%rbp)\n    22b7:\t01 \n    22b8:\teb 46                \tjmp    2300 <evutil_inet_pton+0x40e>\n    22ba:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    22c1:\t0f b6 00             \tmovzbl (%rax),%eax\n    22c4:\t3c 3a                \tcmp    $0x3a,%al\n    22c6:\t75 2e                \tjne    22f6 <evutil_inet_pton+0x404>\n    22c8:\t83 7d f8 00          \tcmpl   $0x0,-0x8(%rbp)\n    22cc:\t75 28                \tjne    22f6 <evutil_inet_pton+0x404>\n    22ce:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    22d5:\t48 83 c0 01          \tadd    $0x1,%rax\n    22d9:\t0f b6 00             \tmovzbl (%rax),%eax\n    22dc:\t3c 3a                \tcmp    $0x3a,%al\n    22de:\t75 16                \tjne    22f6 <evutil_inet_pton+0x404>\n    22e0:\t83 7d fc ff          \tcmpl   $0xffffffff,-0x4(%rbp)\n    22e4:\t75 10                \tjne    22f6 <evutil_inet_pton+0x404>\n    22e6:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    22e9:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    22ec:\t48 83 85 60 ff ff ff \taddq   $0x2,-0xa0(%rbp)\n    22f3:\t02 \n    22f4:\teb 0a                \tjmp    2300 <evutil_inet_pton+0x40e>\n    22f6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    22fb:\te9 37 01 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    2300:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    2307:\t48 3b 45 e8          \tcmp    -0x18(%rbp),%rax\n    230b:\t0f 82 86 fe ff ff    \tjb     2197 <evutil_inet_pton+0x2a5>\n    2311:\t83 7d f4 08          \tcmpl   $0x8,-0xc(%rbp)\n    2315:\t7f 18                \tjg     232f <evutil_inet_pton+0x43d>\n    2317:\t83 7d f4 08          \tcmpl   $0x8,-0xc(%rbp)\n    231b:\t75 06                \tjne    2323 <evutil_inet_pton+0x431>\n    231d:\t83 7d fc ff          \tcmpl   $0xffffffff,-0x4(%rbp)\n    2321:\t75 0c                \tjne    232f <evutil_inet_pton+0x43d>\n    2323:\t83 7d f4 07          \tcmpl   $0x7,-0xc(%rbp)\n    2327:\t7f 10                \tjg     2339 <evutil_inet_pton+0x447>\n    2329:\t83 7d fc ff          \tcmpl   $0xffffffff,-0x4(%rbp)\n    232d:\t75 0a                \tjne    2339 <evutil_inet_pton+0x447>\n    232f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    2334:\te9 fe 00 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    2339:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    233d:\t0f 88 98 00 00 00    \tjs     23db <evutil_inet_pton+0x4e9>\n    2343:\t48 83 7d d8 00       \tcmpq   $0x0,-0x28(%rbp)\n    2348:\t74 07                \tje     2351 <evutil_inet_pton+0x45f>\n    234a:\tba 02 00 00 00       \tmov    $0x2,%edx\n    234f:\teb 05                \tjmp    2356 <evutil_inet_pton+0x464>\n    2351:\tba 00 00 00 00       \tmov    $0x0,%edx\n    2356:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n    2359:\t29 d0                \tsub    %edx,%eax\n    235b:\t2b 45 fc             \tsub    -0x4(%rbp),%eax\n    235e:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n    2361:\tb8 08 00 00 00       \tmov    $0x8,%eax\n    2366:\t2b 45 f4             \tsub    -0xc(%rbp),%eax\n    2369:\t89 45 d0             \tmov    %eax,-0x30(%rbp)\n    236c:\t83 7d d4 00          \tcmpl   $0x0,-0x2c(%rbp)\n    2370:\t79 0a                \tjns    237c <evutil_inet_pton+0x48a>\n    2372:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    2377:\te9 bb 00 00 00       \tjmp    2437 <evutil_inet_pton+0x545>\n    237c:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    237f:\t48 98                \tcltq   \n    2381:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    2385:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    2389:\t8b 4d fc             \tmov    -0x4(%rbp),%ecx\n    238c:\t48 63 c9             \tmovslq %ecx,%rcx\n    238f:\t48 01 c9             \tadd    %rcx,%rcx\n    2392:\t48 01 c1             \tadd    %rax,%rcx\n    2395:\t8b 75 fc             \tmov    -0x4(%rbp),%esi\n    2398:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n    239b:\t01 c6                \tadd    %eax,%esi\n    239d:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    23a1:\t48 63 f6             \tmovslq %esi,%rsi\n    23a4:\t48 01 f6             \tadd    %rsi,%rsi\n    23a7:\t48 01 f0             \tadd    %rsi,%rax\n    23aa:\t48 89 ce             \tmov    %rcx,%rsi\n    23ad:\t48 89 c7             \tmov    %rax,%rdi\n    23b0:\te8 00 00 00 00       \tcall   23b5 <evutil_inet_pton+0x4c3>\n    23b5:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n    23b8:\t48 98                \tcltq   \n    23ba:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    23be:\t48 8d 45 90          \tlea    -0x70(%rbp),%rax\n    23c2:\t8b 4d fc             \tmov    -0x4(%rbp),%ecx\n    23c5:\t48 63 c9             \tmovslq %ecx,%rcx\n    23c8:\t48 01 c9             \tadd    %rcx,%rcx\n    23cb:\t48 01 c8             \tadd    %rcx,%rax\n    23ce:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    23d3:\t48 89 c7             \tmov    %rax,%rdi\n    23d6:\te8 00 00 00 00       \tcall   23db <evutil_inet_pton+0x4e9>\n    23db:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n    23e2:\teb 41                \tjmp    2425 <evutil_inet_pton+0x533>\n    23e4:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    23e7:\t48 98                \tcltq   \n    23e9:\t0f b7 44 45 90       \tmovzwl -0x70(%rbp,%rax,2),%eax\n    23ee:\t66 c1 e8 08          \tshr    $0x8,%ax\n    23f2:\t89 c2                \tmov    %eax,%edx\n    23f4:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    23f7:\t01 c0                \tadd    %eax,%eax\n    23f9:\t89 d1                \tmov    %edx,%ecx\n    23fb:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    23ff:\t48 98                \tcltq   \n    2401:\t88 0c 02             \tmov    %cl,(%rdx,%rax,1)\n    2404:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2407:\t48 98                \tcltq   \n    2409:\t0f b7 54 45 90       \tmovzwl -0x70(%rbp,%rax,2),%edx\n    240e:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    2411:\t01 c0                \tadd    %eax,%eax\n    2413:\t83 c0 01             \tadd    $0x1,%eax\n    2416:\t89 d1                \tmov    %edx,%ecx\n    2418:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    241c:\t48 98                \tcltq   \n    241e:\t88 0c 02             \tmov    %cl,(%rdx,%rax,1)\n    2421:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n    2425:\t83 7d f8 07          \tcmpl   $0x7,-0x8(%rbp)\n    2429:\t7e b9                \tjle    23e4 <evutil_inet_pton+0x4f2>\n    242b:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    2430:\teb 05                \tjmp    2437 <evutil_inet_pton+0x545>\n    2432:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    2437:\tc9                   \tleave  \n    2438:\tc3                   \tret    ", "code_s": "undefined8 evutil_inet_pton(int param_1, char *<span class=\"supfact\">param_2</span>,\n                            uint32_t *<span class=\"supfact\">param_3</span>) {\n  int iVar1;\n  uint32_t uVar2;\n  undefined8 uVar3;\n  size_t sVar4;\n  long lVar5;\n  char *<span class=\"supfact\">local_a8</span>;\n  char *<span class=\"supfact\">local_98</span>;\n  undefined <span class=\"supfact\">local_89</span>;\n  int <span class=\"supfact\">local_88</span>;\n  int <span class=\"supfact\">local_84</span>;\n  int <span class=\"supfact\">local_80</span>;\n  int <span class=\"supfact\">local_7c</span>;\n  ushort <span class=\"supfact\">local_78</span>[Number];\n  undefined <span class=\"supfact\">local_59</span>;\n  uint <span class=\"supfact\">local_58</span>;\n  int <span class=\"supfact\">local_54</span>;\n  int <span class=\"supfact\">local_50</span>;\n  int <span class=\"supfact\">local_4c</span>;\n  uint32_t *<span class=\"supfact\">local_48</span>;\n  long <span class=\"supfact\">local_40</span>;\n  int <span class=\"supfact\">local_38</span>;\n  int <span class=\"supfact\">local_34</span>;\n  char *<span class=\"supfact\">local_30</span>;\n  uint32_t *<span class=\"supfact\">local_28</span>;\n  char *<span class=\"supfact\">local_20</span>;\n  int <span class=\"supfact\">local_14</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  if (param_1 == Number) {\n    <span class=\"supfact\">local_48</span> = <span class=\"supfact\">param_3</span>;\n    iVar1 = sscanf(<span class=\"supfact\">param_2</span>, String, &<span class=\"supfact\">local_4c</span>,\n                   &<span class=\"supfact\">local_50</span>, &<span class=\"supfact\">local_54</span>,\n                   &<span class=\"supfact\">local_58</span>, &<span class=\"supfact\">local_59</span>);\n    if (iVar1 == Number) {\n      if ((<span class=\"supfact\">local_4c</span> < Number) ||\n          (Number < <span class=\"supfact\">local_4c</span>)) {\n        uVar3 = Number;\n      } else if ((<span class=\"supfact\">local_50</span> < Number) ||\n                 (Number < <span class=\"supfact\">local_50</span>)) {\n        uVar3 = Number;\n      } else if ((<span class=\"supfact\">local_54</span> < Number) ||\n                 (Number < <span class=\"supfact\">local_54</span>)) {\n        uVar3 = Number;\n      } else if (((int)<span class=\"supfact\">local_58</span> < Number) ||\n                 (Number < (int)<span class=\"supfact\">local_58</span>)) {\n        uVar3 = Number;\n      } else {\n        uVar2 = htonl(<span class=\"supfact\">local_58</span> |\n                      <span class=\"supfact\">local_4c</span> << Number |\n                      <span class=\"supfact\">local_50</span> << Number |\n                      <span class=\"supfact\">local_54</span> << Number);\n        *<span class=\"supfact\">local_48</span> = uVar2;\n        uVar3 = Number;\n      }\n    } else {\n      uVar3 = Number;\n    }\n  } else if (param_1 == Number) {\n    <span class=\"supfact\">local_c</span> = -Number;\n    <span class=\"supfact\">local_14</span> = Number;\n    <span class=\"supfact\">local_28</span> = <span class=\"supfact\">param_3</span>;\n    <span class=\"supfact\">local_30</span> = strchr(<span class=\"supfact\">param_2</span>, Number);\n    if (<span class=\"supfact\">local_30</span> == <span class=\"supfact\">param_2</span>) {\n      uVar3 = Number;\n    } else {\n      <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_30</span>;\n      if (<span class=\"supfact\">local_30</span> == (char *)Number) {\n        sVar4 = strlen(<span class=\"supfact\">param_2</span>);\n        <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_2</span> + sVar4;\n      } else {\n        do {\n          <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_20</span> + -Number;\n          if (<span class=\"supfact\">local_20</span> < <span class=\"supfact\">param_2</span>)\n            break;\n          iVar1 = EVUTIL_ISDIGIT((int)*<span class=\"supfact\">local_20</span>);\n        } while (iVar1 != Number);\n        <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_20</span> + Number;\n        iVar1 =\n            sscanf(<span class=\"supfact\">local_20</span>, String, &<span class=\"supfact\">local_7c</span>,\n                   &<span class=\"supfact\">local_80</span>, &<span class=\"supfact\">local_84</span>,\n                   &<span class=\"supfact\">local_88</span>, &<span class=\"supfact\">local_89</span>);\n        if (iVar1 != Number) {\n          return Number;\n        }\n        if (((((Number < <span class=\"supfact\">local_7c</span>) ||\n               (<span class=\"supfact\">local_7c</span> < Number)) ||\n              (Number < <span class=\"supfact\">local_80</span>)) ||\n             ((<span class=\"supfact\">local_80</span> < Number ||\n               (Number < <span class=\"supfact\">local_84</span>)))) ||\n            ((<span class=\"supfact\">local_84</span> < Number ||\n              ((Number < <span class=\"supfact\">local_88</span> ||\n                (<span class=\"supfact\">local_88</span> < Number)))))) {\n          return Number;\n        }\n        <span class=\"supfact\">local_78</span>[Number] =\n            (ushort)<span class=\"supfact\">local_80</span> |\n            (ushort)(<span class=\"supfact\">local_7c</span> << Number);\n        <span class=\"supfact\">local_78</span>[Number] =\n            (ushort)<span class=\"supfact\">local_88</span> |\n            (ushort)(<span class=\"supfact\">local_84</span> << Number);\n        <span class=\"supfact\">local_14</span> = <span class=\"supfact\">local_14</span> + Number;\n      }\n      <span class=\"supfact\">local_10</span> = Number;\n      <span class=\"supfact\">local_a8</span> = <span class=\"supfact\">param_2</span>;\n      while (<span class=\"supfact\">local_a8</span> < <span class=\"supfact\">local_20</span>) {\n        if (Number < <span class=\"supfact\">local_10</span>) {\n          return Number;\n        }\n        iVar1 = EVUTIL_ISXDIGIT((int)*<span class=\"supfact\">local_a8</span>);\n        if (iVar1 == Number) {\n          if (((*<span class=\"supfact\">local_a8</span> == String) &&\n               (Number < <span class=\"supfact\">local_10</span>)) &&\n              (<span class=\"supfact\">local_c</span> == -Number)) {\n            <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_10</span>;\n            <span class=\"supfact\">local_a8</span> = <span class=\"supfact\">local_a8</span> + Number;\n          } else {\n            if (((*<span class=\"supfact\">local_a8</span> != String) ||\n                 (<span class=\"supfact\">local_10</span> != Number)) ||\n                ((<span class=\"supfact\">local_a8</span>[Number] != String ||\n                  (<span class=\"supfact\">local_c</span> != -Number)))) {\n              return Number;\n            }\n            <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_10</span>;\n            <span class=\"supfact\">local_a8</span> = <span class=\"supfact\">local_a8</span> + Number;\n          }\n        } else {\n          <span class=\"supfact\">local_40</span> = strtol(<span class=\"supfact\">local_a8</span>,\n                                            &<span class=\"supfact\">local_98</span>, Number);\n          if (<span class=\"supfact\">local_a8</span> + Number < <span class=\"supfact\">local_98</span>) {\n            return Number;\n          }\n          if (<span class=\"supfact\">local_a8</span> == <span class=\"supfact\">local_98</span>) {\n            return Number;\n          }\n          if ((<span class=\"supfact\">local_40</span> < Number) ||\n              (Number < <span class=\"supfact\">local_40</span>)) {\n            return Number;\n          }\n          lVar5 = (long)<span class=\"supfact\">local_10</span>;\n          <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number;\n          <span class=\"supfact\">local_78</span>[lVar5] = (ushort)<span class=\"supfact\">local_40</span>;\n          <span class=\"supfact\">local_14</span> = <span class=\"supfact\">local_14</span> + Number;\n          if ((*<span class=\"supfact\">local_98</span> != String) &&\n              (<span class=\"supfact\">local_98</span> != <span class=\"supfact\">local_20</span>)) {\n            return Number;\n          }\n          <span class=\"supfact\">local_a8</span> = <span class=\"supfact\">local_98</span> + Number;\n        }\n      }\n      if (((<span class=\"supfact\">local_14</span> < Number) &&\n           ((<span class=\"supfact\">local_14</span> != Number ||\n             (<span class=\"supfact\">local_c</span> == -Number)))) &&\n          ((Number < <span class=\"supfact\">local_14</span> ||\n            (<span class=\"supfact\">local_c</span> != -Number)))) {\n        if (-Number < <span class=\"supfact\">local_c</span>) {\n          if (<span class=\"supfact\">local_30</span> == (char *)Number) {\n            iVar1 = Number;\n          } else {\n            iVar1 = Number;\n          }\n          <span class=\"supfact\">local_34</span> =\n              (<span class=\"supfact\">local_14</span> - iVar1) - <span class=\"supfact\">local_c</span>;\n          <span class=\"supfact\">local_38</span> = Number - <span class=\"supfact\">local_14</span>;\n          if (<span class=\"supfact\">local_34</span> < Number) {\n            return Number;\n          }\n          memmove(<span class=\"supfact\">local_78</span> +\n                      (<span class=\"supfact\">local_c</span> + <span class=\"supfact\">local_38</span>),\n                  <span class=\"supfact\">local_78</span> + <span class=\"supfact\">local_c</span>,\n                  (long)<span class=\"supfact\">local_34</span> * Number);\n          memset(<span class=\"supfact\">local_78</span> + <span class=\"supfact\">local_c</span>, Number,\n                 (long)<span class=\"supfact\">local_38</span> * Number);\n        }\n        for (<span class=\"supfact\">local_10</span> = Number;\n             <span class=\"supfact\">local_10</span> < Number;\n             <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n          *(char *)((long)<span class=\"supfact\">local_28</span> +\n                    (long)(<span class=\"supfact\">local_10</span> * Number)) =\n              (char)(<span class=\"supfact\">local_78</span>[<span class=\"supfact\">local_10</span>] >>\n                     Number);\n          *(char *)((long)<span class=\"supfact\">local_28</span> +\n                    (long)(<span class=\"supfact\">local_10</span> * Number + Number)) =\n              (char)<span class=\"supfact\">local_78</span>[<span class=\"supfact\">local_10</span>];\n        }\n        uVar3 = Number;\n      } else {\n        uVar3 = Number;\n      }\n    }\n  } else {\n    uVar3 = Number;\n  }\n  return uVar3;\n}", "code_t": "int evutil_inet_pton(int af, char *<span class=\"supfact\">src</span>,\n                     void *<span class=\"supfact\">dst</span>) {\n  int iVar1;\n  uint32_t uVar2;\n  size_t sVar3;\n  long lVar4;\n  void *<span class=\"supfact\">dst</span> - local;\n  char *<span class=\"supfact\">src</span> - local;\n  int af - local;\n  char *<span class=\"supfact\">next</span>;\n  char <span class=\"supfact\">more_1</span>;\n  int <span class=\"supfact\">byte4</span>;\n  int <span class=\"supfact\">byte3</span>;\n  int <span class=\"supfact\">byte2</span>;\n  int <span class=\"supfact\">byte1</span>;\n  uint16_t <span class=\"supfact\">words</span>[Number];\n  char <span class=\"supfact\">more</span>;\n  int <span class=\"supfact\">d</span>;\n  int <span class=\"supfact\">c</span>;\n  int <span class=\"supfact\">b</span>;\n  int <span class=\"supfact\">a</span>;\n  in_addr *<span class=\"supfact\">addr</span>;\n  long <span class=\"supfact\">r</span>;\n  int <span class=\"supfact\">gapLen</span>;\n  int <span class=\"supfact\">nToMove</span>;\n  char *<span class=\"supfact\">dot</span>;\n  in6_addr *<span class=\"supfact\">out</span>;\n  char *<span class=\"supfact\">eow</span>;\n  int <span class=\"supfact\">setWords</span>;\n  int <span class=\"supfact\">i</span>;\n  int <span class=\"supfact\">gapPos</span>;\n  if (af == Number) {\n    <span class=\"supfact\">addr</span> = (in_addr *)<span class=\"supfact\">dst</span>;\n    iVar1 = sscanf(<span class=\"supfact\">src</span>, String, &<span class=\"supfact\">a</span>,\n                   &<span class=\"supfact\">b</span>, &<span class=\"supfact\">c</span>, &<span class=\"supfact\">d</span>,\n                   &<span class=\"supfact\">more</span>);\n    if (iVar1 == Number) {\n      if ((<span class=\"supfact\">a</span> < Number) || (Number < <span class=\"supfact\">a</span>)) {\n        iVar1 = Number;\n      } else if ((<span class=\"supfact\">b</span> < Number) || (Number < <span class=\"supfact\">b</span>)) {\n        iVar1 = Number;\n      } else if ((<span class=\"supfact\">c</span> < Number) || (Number < <span class=\"supfact\">c</span>)) {\n        iVar1 = Number;\n      } else if ((<span class=\"supfact\">d</span> < Number) || (Number < <span class=\"supfact\">d</span>)) {\n        iVar1 = Number;\n      } else {\n        uVar2 =\n            htonl(<span class=\"supfact\">d</span> | <span class=\"supfact\">a</span> << Number |\n                  <span class=\"supfact\">b</span> << Number | <span class=\"supfact\">c</span> << Number);\n        <span class=\"supfact\">addr</span>->s_addr = uVar2;\n        iVar1 = Number;\n      }\n    } else {\n      iVar1 = Number;\n    }\n  } else if (af == Number) {\n    <span class=\"supfact\">gapPos</span> = -Number;\n    <span class=\"supfact\">setWords</span> = Number;\n    <span class=\"supfact\">out</span> = (in6_addr *)<span class=\"supfact\">dst</span>;\n    <span class=\"supfact\">dot</span> = strchr(<span class=\"supfact\">src</span>, Number);\n    if (<span class=\"supfact\">dot</span> == <span class=\"supfact\">src</span>) {\n      iVar1 = Number;\n    } else {\n      <span class=\"supfact\">eow</span> = <span class=\"supfact\">dot</span>;\n      if (<span class=\"supfact\">dot</span> == (char *)Number) {\n        sVar3 = strlen(<span class=\"supfact\">src</span>);\n        <span class=\"supfact\">eow</span> = <span class=\"supfact\">src</span> + sVar3;\n      } else {\n        do {\n          <span class=\"supfact\">eow</span> = <span class=\"supfact\">eow</span> + -Number;\n          if (<span class=\"supfact\">eow</span> < <span class=\"supfact\">src</span>)\n            break;\n          iVar1 = EVUTIL_ISDIGIT(*<span class=\"supfact\">eow</span>);\n        } while (iVar1 != Number);\n        <span class=\"supfact\">eow</span> = <span class=\"supfact\">eow</span> + Number;\n        iVar1 = sscanf(<span class=\"supfact\">eow</span>, String, &<span class=\"supfact\">byte1</span>,\n                       &<span class=\"supfact\">byte2</span>, &<span class=\"supfact\">byte3</span>,\n                       &<span class=\"supfact\">byte4</span>, &<span class=\"supfact\">more_1</span>);\n        if (iVar1 != Number) {\n          return Number;\n        }\n        if (((((Number < <span class=\"supfact\">byte1</span>) ||\n               (<span class=\"supfact\">byte1</span> < Number)) ||\n              (Number < <span class=\"supfact\">byte2</span>)) ||\n             ((<span class=\"supfact\">byte2</span> < Number ||\n               (Number < <span class=\"supfact\">byte3</span>)))) ||\n            ((<span class=\"supfact\">byte3</span> < Number ||\n              ((Number < <span class=\"supfact\">byte4</span> ||\n                (<span class=\"supfact\">byte4</span> < Number)))))) {\n          return Number;\n        }\n        <span class=\"supfact\">words</span>[Number] =\n            (ushort)<span class=\"supfact\">byte2</span> |\n            (ushort)(<span class=\"supfact\">byte1</span> << Number);\n        <span class=\"supfact\">words</span>[Number] =\n            (ushort)<span class=\"supfact\">byte4</span> |\n            (ushort)(<span class=\"supfact\">byte3</span> << Number);\n        <span class=\"supfact\">setWords</span> = <span class=\"supfact\">setWords</span> + Number;\n      }\n      <span class=\"supfact\">i</span> = Number;\n      <span class=\"supfact\">src</span> - local = <span class=\"supfact\">src</span>;\n      while (<span class=\"supfact\">src</span> - local < <span class=\"supfact\">eow</span>) {\n        if (Number < <span class=\"supfact\">i</span>) {\n          return Number;\n        }\n        iVar1 = EVUTIL_ISXDIGIT(*<span class=\"supfact\">src</span> - local);\n        if (iVar1 == Number) {\n          if (((*<span class=\"supfact\">src</span> - local == String) &&\n               (Number < <span class=\"supfact\">i</span>)) &&\n              (<span class=\"supfact\">gapPos</span> == -Number)) {\n            <span class=\"supfact\">gapPos</span> = <span class=\"supfact\">i</span>;\n            <span class=\"supfact\">src</span> - local = <span class=\"supfact\">src</span> - local + Number;\n          } else {\n            if (((*<span class=\"supfact\">src</span> - local != String) ||\n                 (<span class=\"supfact\">i</span> != Number)) ||\n                ((<span class=\"supfact\">src</span> - local[Number] != String ||\n                  (<span class=\"supfact\">gapPos</span> != -Number)))) {\n              return Number;\n            }\n            <span class=\"supfact\">gapPos</span> = <span class=\"supfact\">i</span>;\n            <span class=\"supfact\">src</span> - local = <span class=\"supfact\">src</span> - local + Number;\n          }\n        } else {\n          <span class=\"supfact\">r</span> = strtol(<span class=\"supfact\">src</span> - local,\n                                     &<span class=\"supfact\">next</span>, Number);\n          if (<span class=\"supfact\">src</span> - local + Number < <span class=\"supfact\">next</span>) {\n            return Number;\n          }\n          if (<span class=\"supfact\">src</span> - local == <span class=\"supfact\">next</span>) {\n            return Number;\n          }\n          if ((<span class=\"supfact\">r</span> < Number) || (Number < <span class=\"supfact\">r</span>)) {\n            return Number;\n          }\n          lVar4 = (long)<span class=\"supfact\">i</span>;\n          <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n          <span class=\"supfact\">words</span>[lVar4] = (uint16_t)<span class=\"supfact\">r</span>;\n          <span class=\"supfact\">setWords</span> = <span class=\"supfact\">setWords</span> + Number;\n          if ((*<span class=\"supfact\">next</span> != String) &&\n              (<span class=\"supfact\">next</span> != <span class=\"supfact\">eow</span>)) {\n            return Number;\n          }\n          <span class=\"supfact\">src</span> - local = <span class=\"supfact\">next</span> + Number;\n        }\n      }\n      if (((<span class=\"supfact\">setWords</span> < Number) &&\n           ((<span class=\"supfact\">setWords</span> != Number ||\n             (<span class=\"supfact\">gapPos</span> == -Number)))) &&\n          ((Number < <span class=\"supfact\">setWords</span> ||\n            (<span class=\"supfact\">gapPos</span> != -Number)))) {\n        if (-Number < <span class=\"supfact\">gapPos</span>) {\n          if (<span class=\"supfact\">dot</span> == (char *)Number) {\n            iVar1 = Number;\n          } else {\n            iVar1 = Number;\n          }\n          <span class=\"supfact\">nToMove</span> =\n              (<span class=\"supfact\">setWords</span> - iVar1) - <span class=\"supfact\">gapPos</span>;\n          <span class=\"supfact\">gapLen</span> = Number - <span class=\"supfact\">setWords</span>;\n          if (<span class=\"supfact\">nToMove</span> < Number) {\n            return -Number;\n          }\n          memmove(<span class=\"supfact\">words</span> +\n                      (<span class=\"supfact\">gapPos</span> + <span class=\"supfact\">gapLen</span>),\n                  <span class=\"supfact\">words</span> + <span class=\"supfact\">gapPos</span>,\n                  (long)<span class=\"supfact\">nToMove</span> * Number);\n          memset(<span class=\"supfact\">words</span> + <span class=\"supfact\">gapPos</span>, Number,\n                 (long)<span class=\"supfact\">gapLen</span> * Number);\n        }\n        for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < Number;\n             <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n          (<span class=\"supfact\">out</span>->__in6_u)\n              .__u6_addr8[<span class=\"supfact\">i</span> * Number] =\n              (uint8_t)(<span class=\"supfact\">words</span>[<span class=\"supfact\">i</span>] >> Number);\n          (<span class=\"supfact\">out</span>->__in6_u)\n              .__u6_addr8[<span class=\"supfact\">i</span> * Number + Number] =\n              (uint8_t)<span class=\"supfact\">words</span>[<span class=\"supfact\">i</span>];\n        }\n        iVar1 = Number;\n      } else {\n        iVar1 = Number;\n      }\n    }\n  } else {\n    iVar1 = -Number;\n  }\n  return iVar1;\n}", "var": [{"name": "param_2", "type": "uint8_t * *", "pred_name": "rd", "ref_name": "src", "ref_type": "char * *"}, {"name": "param_3", "type": "size_t * *", "pred_name": "len", "ref_name": "dst", "ref_type": "void * *"}, {"name": "local_a8", "type": "undefined[16][16]", "pred_name": "local_a8", "ref_name": "src-local", "ref_type": "char * *"}, {"name": "local_98", "type": "size_t", "pred_name": "local_98", "ref_name": "next", "ref_type": "char * *"}, {"name": "local_89", "type": "uint8_t", "pred_name": "byte", "ref_name": "more_1", "ref_type": "char"}, {"name": "local_88", "type": "int", "pred_name": "__unk__", "ref_name": "byte4", "ref_type": "int"}, {"name": "local_84", "type": "int", "pred_name": "__unk__", "ref_name": "byte3", "ref_type": "int"}, {"name": "local_80", "type": "int", "pred_name": "__unk__", "ref_name": "byte2", "ref_type": "int"}, {"name": "local_7c", "type": "int", "pred_name": "__unk__", "ref_name": "byte1", "ref_type": "int"}, {"name": "local_78", "type": "__unk__", "pred_name": "__unk__", "ref_name": "words", "ref_type": "uint16_t[8][8]"}, {"name": "local_59", "type": "uint8_t", "pred_name": "__unk__", "ref_name": "more", "ref_type": "char"}, {"name": "local_58", "type": "uint32_t", "pred_name": "__unk__", "ref_name": "d", "ref_type": "int"}, {"name": "local_54", "type": "uint32_t", "pred_name": "__unk__", "ref_name": "c", "ref_type": "int"}, {"name": "local_50", "type": "uint32_t", "pred_name": "__unk__", "ref_name": "b", "ref_type": "int"}, {"name": "local_4c", "type": "uint32_t", "pred_name": "__unk__", "ref_name": "a", "ref_type": "int"}, {"name": "local_48", "type": "__unk__", "pred_name": "__unk__", "ref_name": "addr", "ref_type": "in_addr * *"}, {"name": "local_40", "type": "__unk__", "pred_name": "__unk__", "ref_name": "r", "ref_type": "long"}, {"name": "local_38", "type": "uint32_t", "pred_name": "__unk__", "ref_name": "gapLen", "ref_type": "int"}, {"name": "local_34", "type": "uint32_t", "pred_name": "__unk__", "ref_name": "nToMove", "ref_type": "int"}, {"name": "local_30", "type": "uint8_t * *", "pred_name": "__unk__", "ref_name": "dot", "ref_type": "char * *"}, {"name": "local_28", "type": "char * *", "pred_name": "__unk__", "ref_name": "out", "ref_type": "in6_addr * *"}, {"name": "local_20", "type": "char * *", "pred_name": "__unk__", "ref_name": "eow", "ref_type": "char * *"}, {"name": "local_14", "type": "int", "pred_name": "__unk__", "ref_name": "setWords", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "__unk__", "ref_name": "i", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "gapPos", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "DashW", "repo_name": "Ingenuity", "path": "DashW/Ingenuity/449b11873d23cdafe6019e168659cca8767448df50ba3f3149aa7affb0ea9e1c", "path_in_repo": "DashW/Ingenuity/Third Party/FreeImage3154/Source/LibTIFF4/tif_dirinfo.o", "objdump": "000000000000099e <TIFFFieldWriteCount>:\n     99e:\t55                   \tpush   %rbp\n     99f:\t48 89 e5             \tmov    %rsp,%rbp\n     9a2:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n     9a6:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     9aa:\t0f b7 40 06          \tmovzwl 0x6(%rax),%eax\n     9ae:\t98                   \tcwtl   \n     9af:\t5d                   \tpop    %rbp\n     9b0:\tc3                   \tret    ", "code_s": "int TIFFFieldWriteCount(long <span class=\"supfact\">param_1</span>) {\n  return (int)*(short *)(<span class=\"supfact\">param_1</span> + Number);\n}", "code_t": "int TIFFFieldWriteCount(TIFFField *<span class=\"supfact\">fip</span>) {\n  TIFFField *<span class=\"supfact\">fip</span> - local;\n  return (int)<span class=\"supfact\">fip</span>->field_writecount;\n}", "var": [{"name": "param_1", "type": "TIFF * *", "pred_name": "tif", "ref_name": "fip", "ref_type": "TIFFField * *"}], "body_in_train": false}, {"repo_owner": "ruslancheb", "repo_name": "juliakernel", "path": "ruslancheb/juliakernel/c316d8bf62f8e26ede18f950f94f5aa12e12a1e5f1074e323a3aa543afdaf3a9", "path_in_repo": "ruslancheb/juliakernel/juliakernel/ext_libraries/gsl/cblas/dspmv.o", "objdump": "0000000000000000 <cblas_dspmv>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 81 ec b0 00 00 00 \tsub    $0xb0,%rsp\n   b:\t89 bd 7c ff ff ff    \tmov    %edi,-0x84(%rbp)\n  11:\t89 b5 78 ff ff ff    \tmov    %esi,-0x88(%rbp)\n  17:\t89 95 74 ff ff ff    \tmov    %edx,-0x8c(%rbp)\n  1d:\tf2 0f 11 85 68 ff ff \tmovsd  %xmm0,-0x98(%rbp)\n  24:\tff \n  25:\t48 89 8d 60 ff ff ff \tmov    %rcx,-0xa0(%rbp)\n  2c:\t4c 89 85 58 ff ff ff \tmov    %r8,-0xa8(%rbp)\n  33:\t44 89 8d 70 ff ff ff \tmov    %r9d,-0x90(%rbp)\n  3a:\tf2 0f 11 8d 50 ff ff \tmovsd  %xmm1,-0xb0(%rbp)\n  41:\tff \n  42:\tc7 45 f4 00 00 00 00 \tmovl   $0x0,-0xc(%rbp)\n  49:\t83 bd 7c ff ff ff 65 \tcmpl   $0x65,-0x84(%rbp)\n  50:\t74 10                \tje     62 <cblas_dspmv+0x62>\n  52:\t83 bd 7c ff ff ff 66 \tcmpl   $0x66,-0x84(%rbp)\n  59:\t74 07                \tje     62 <cblas_dspmv+0x62>\n  5b:\tc7 45 f4 01 00 00 00 \tmovl   $0x1,-0xc(%rbp)\n  62:\t83 bd 78 ff ff ff 79 \tcmpl   $0x79,-0x88(%rbp)\n  69:\t74 10                \tje     7b <cblas_dspmv+0x7b>\n  6b:\t83 bd 78 ff ff ff 7a \tcmpl   $0x7a,-0x88(%rbp)\n  72:\t74 07                \tje     7b <cblas_dspmv+0x7b>\n  74:\tc7 45 f4 02 00 00 00 \tmovl   $0x2,-0xc(%rbp)\n  7b:\t83 bd 74 ff ff ff 00 \tcmpl   $0x0,-0x8c(%rbp)\n  82:\t79 07                \tjns    8b <cblas_dspmv+0x8b>\n  84:\tc7 45 f4 03 00 00 00 \tmovl   $0x3,-0xc(%rbp)\n  8b:\t83 bd 70 ff ff ff 00 \tcmpl   $0x0,-0x90(%rbp)\n  92:\t75 07                \tjne    9b <cblas_dspmv+0x9b>\n  94:\tc7 45 f4 07 00 00 00 \tmovl   $0x7,-0xc(%rbp)\n  9b:\t83 7d 18 00          \tcmpl   $0x0,0x18(%rbp)\n  9f:\t75 07                \tjne    a8 <cblas_dspmv+0xa8>\n  a1:\tc7 45 f4 0a 00 00 00 \tmovl   $0xa,-0xc(%rbp)\n  a8:\t83 7d f4 00          \tcmpl   $0x0,-0xc(%rbp)\n  ac:\t74 19                \tje     c7 <cblas_dspmv+0xc7>\n  ae:\t8b 45 f4             \tmov    -0xc(%rbp),%eax\n  b1:\tba 00 00 00 00       \tmov    $0x0,%edx\n  b6:\tbe 00 00 00 00       \tmov    $0x0,%esi\n  bb:\t89 c7                \tmov    %eax,%edi\n  bd:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  c2:\te8 00 00 00 00       \tcall   c7 <cblas_dspmv+0xc7>\n  c7:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  cb:\t66 0f 2e 85 68 ff ff \tucomisd -0x98(%rbp),%xmm0\n  d2:\tff \n  d3:\t7a 36                \tjp     10b <cblas_dspmv+0x10b>\n  d5:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n  d9:\t66 0f 2e 85 68 ff ff \tucomisd -0x98(%rbp),%xmm0\n  e0:\tff \n  e1:\t75 28                \tjne    10b <cblas_dspmv+0x10b>\n  e3:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # eb <cblas_dspmv+0xeb>\n  ea:\t00 \n  eb:\t66 0f 2e 85 50 ff ff \tucomisd -0xb0(%rbp),%xmm0\n  f2:\tff \n  f3:\t7a 16                \tjp     10b <cblas_dspmv+0x10b>\n  f5:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # fd <cblas_dspmv+0xfd>\n  fc:\t00 \n  fd:\t66 0f 2e 85 50 ff ff \tucomisd -0xb0(%rbp),%xmm0\n 104:\tff \n 105:\t0f 84 e8 06 00 00    \tje     7f3 <cblas_dspmv+0x7f3>\n 10b:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n 10f:\t66 0f 2e 85 50 ff ff \tucomisd -0xb0(%rbp),%xmm0\n 116:\tff \n 117:\t7a 6e                \tjp     187 <cblas_dspmv+0x187>\n 119:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n 11d:\t66 0f 2e 85 50 ff ff \tucomisd -0xb0(%rbp),%xmm0\n 124:\tff \n 125:\t75 60                \tjne    187 <cblas_dspmv+0x187>\n 127:\t83 7d 18 00          \tcmpl   $0x0,0x18(%rbp)\n 12b:\t7f 13                \tjg     140 <cblas_dspmv+0x140>\n 12d:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 133:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n 136:\t8b 45 18             \tmov    0x18(%rbp),%eax\n 139:\tf7 d8                \tneg    %eax\n 13b:\t0f af c2             \timul   %edx,%eax\n 13e:\teb 05                \tjmp    145 <cblas_dspmv+0x145>\n 140:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 145:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n 148:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n 14f:\teb 26                \tjmp    177 <cblas_dspmv+0x177>\n 151:\t8b 45 f0             \tmov    -0x10(%rbp),%eax\n 154:\t48 98                \tcltq   \n 156:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 15d:\t00 \n 15e:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 162:\t48 01 d0             \tadd    %rdx,%rax\n 165:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n 169:\tf2 0f 11 00          \tmovsd  %xmm0,(%rax)\n 16d:\t8b 45 18             \tmov    0x18(%rbp),%eax\n 170:\t01 45 f0             \tadd    %eax,-0x10(%rbp)\n 173:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 177:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 17a:\t3b 85 74 ff ff ff    \tcmp    -0x8c(%rbp),%eax\n 180:\t7c cf                \tjl     151 <cblas_dspmv+0x151>\n 182:\te9 9b 00 00 00       \tjmp    222 <cblas_dspmv+0x222>\n 187:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # 18f <cblas_dspmv+0x18f>\n 18e:\t00 \n 18f:\t66 0f 2e 85 50 ff ff \tucomisd -0xb0(%rbp),%xmm0\n 196:\tff \n 197:\t7a 12                \tjp     1ab <cblas_dspmv+0x1ab>\n 199:\tf2 0f 10 05 00 00 00 \tmovsd  0x0(%rip),%xmm0        # 1a1 <cblas_dspmv+0x1a1>\n 1a0:\t00 \n 1a1:\t66 0f 2e 85 50 ff ff \tucomisd -0xb0(%rbp),%xmm0\n 1a8:\tff \n 1a9:\t74 77                \tje     222 <cblas_dspmv+0x222>\n 1ab:\t83 7d 18 00          \tcmpl   $0x0,0x18(%rbp)\n 1af:\t7f 13                \tjg     1c4 <cblas_dspmv+0x1c4>\n 1b1:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 1b7:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n 1ba:\t8b 45 18             \tmov    0x18(%rbp),%eax\n 1bd:\tf7 d8                \tneg    %eax\n 1bf:\t0f af c2             \timul   %edx,%eax\n 1c2:\teb 05                \tjmp    1c9 <cblas_dspmv+0x1c9>\n 1c4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 1c9:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n 1cc:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n 1d3:\teb 42                \tjmp    217 <cblas_dspmv+0x217>\n 1d5:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 1d8:\t48 98                \tcltq   \n 1da:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 1e1:\t00 \n 1e2:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 1e6:\t48 01 d0             \tadd    %rdx,%rax\n 1e9:\tf2 0f 10 00          \tmovsd  (%rax),%xmm0\n 1ed:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n 1f0:\t48 98                \tcltq   \n 1f2:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 1f9:\t00 \n 1fa:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 1fe:\t48 01 d0             \tadd    %rdx,%rax\n 201:\tf2 0f 59 85 50 ff ff \tmulsd  -0xb0(%rbp),%xmm0\n 208:\tff \n 209:\tf2 0f 11 00          \tmovsd  %xmm0,(%rax)\n 20d:\t8b 45 18             \tmov    0x18(%rbp),%eax\n 210:\t01 45 ec             \tadd    %eax,-0x14(%rbp)\n 213:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 217:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 21a:\t3b 85 74 ff ff ff    \tcmp    -0x8c(%rbp),%eax\n 220:\t7c b3                \tjl     1d5 <cblas_dspmv+0x1d5>\n 222:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n 226:\t66 0f 2e 85 68 ff ff \tucomisd -0x98(%rbp),%xmm0\n 22d:\tff \n 22e:\t7a 12                \tjp     242 <cblas_dspmv+0x242>\n 230:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n 234:\t66 0f 2e 85 68 ff ff \tucomisd -0x98(%rbp),%xmm0\n 23b:\tff \n 23c:\t0f 84 b4 05 00 00    \tje     7f6 <cblas_dspmv+0x7f6>\n 242:\t83 bd 7c ff ff ff 65 \tcmpl   $0x65,-0x84(%rbp)\n 249:\t75 09                \tjne    254 <cblas_dspmv+0x254>\n 24b:\t83 bd 78 ff ff ff 79 \tcmpl   $0x79,-0x88(%rbp)\n 252:\t74 1a                \tje     26e <cblas_dspmv+0x26e>\n 254:\t83 bd 7c ff ff ff 66 \tcmpl   $0x66,-0x84(%rbp)\n 25b:\t0f 85 bb 02 00 00    \tjne    51c <cblas_dspmv+0x51c>\n 261:\t83 bd 78 ff ff ff 7a \tcmpl   $0x7a,-0x88(%rbp)\n 268:\t0f 85 ae 02 00 00    \tjne    51c <cblas_dspmv+0x51c>\n 26e:\t83 bd 70 ff ff ff 00 \tcmpl   $0x0,-0x90(%rbp)\n 275:\t7f 16                \tjg     28d <cblas_dspmv+0x28d>\n 277:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 27d:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n 280:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n 286:\tf7 d8                \tneg    %eax\n 288:\t0f af c2             \timul   %edx,%eax\n 28b:\teb 05                \tjmp    292 <cblas_dspmv+0x292>\n 28d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 292:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n 295:\t83 7d 18 00          \tcmpl   $0x0,0x18(%rbp)\n 299:\t7f 13                \tjg     2ae <cblas_dspmv+0x2ae>\n 29b:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 2a1:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n 2a4:\t8b 45 18             \tmov    0x18(%rbp),%eax\n 2a7:\tf7 d8                \tneg    %eax\n 2a9:\t0f af c2             \timul   %edx,%eax\n 2ac:\teb 05                \tjmp    2b3 <cblas_dspmv+0x2b3>\n 2ae:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 2b3:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n 2b6:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n 2bd:\te9 46 02 00 00       \tjmp    508 <cblas_dspmv+0x508>\n 2c2:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n 2c5:\t48 98                \tcltq   \n 2c7:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 2ce:\t00 \n 2cf:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n 2d6:\t48 01 d0             \tadd    %rdx,%rax\n 2d9:\tf2 0f 10 00          \tmovsd  (%rax),%xmm0\n 2dd:\tf2 0f 10 8d 68 ff ff \tmovsd  -0x98(%rbp),%xmm1\n 2e4:\tff \n 2e5:\tf2 0f 59 c1          \tmulsd  %xmm1,%xmm0\n 2e9:\tf2 0f 11 45 98       \tmovsd  %xmm0,-0x68(%rbp)\n 2ee:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n 2f2:\tf2 0f 11 45 d8       \tmovsd  %xmm0,-0x28(%rbp)\n 2f7:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 2fa:\t83 c0 01             \tadd    $0x1,%eax\n 2fd:\t89 45 94             \tmov    %eax,-0x6c(%rbp)\n 300:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 306:\t89 45 90             \tmov    %eax,-0x70(%rbp)\n 309:\t83 bd 70 ff ff ff 00 \tcmpl   $0x0,-0x90(%rbp)\n 310:\t7f 16                \tjg     328 <cblas_dspmv+0x328>\n 312:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 318:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n 31b:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n 321:\tf7 d8                \tneg    %eax\n 323:\t0f af c2             \timul   %edx,%eax\n 326:\teb 05                \tjmp    32d <cblas_dspmv+0x32d>\n 328:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 32d:\t8b 55 94             \tmov    -0x6c(%rbp),%edx\n 330:\t0f af 95 70 ff ff ff \timul   -0x90(%rbp),%edx\n 337:\t01 d0                \tadd    %edx,%eax\n 339:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n 33c:\t83 7d 18 00          \tcmpl   $0x0,0x18(%rbp)\n 340:\t7f 13                \tjg     355 <cblas_dspmv+0x355>\n 342:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 348:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n 34b:\t8b 45 18             \tmov    0x18(%rbp),%eax\n 34e:\tf7 d8                \tneg    %eax\n 350:\t0f af c2             \timul   %edx,%eax\n 353:\teb 05                \tjmp    35a <cblas_dspmv+0x35a>\n 355:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 35a:\t8b 55 94             \tmov    -0x6c(%rbp),%edx\n 35d:\t0f af 55 18          \timul   0x18(%rbp),%edx\n 361:\t01 d0                \tadd    %edx,%eax\n 363:\t89 45 d0             \tmov    %eax,-0x30(%rbp)\n 366:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n 369:\t48 98                \tcltq   \n 36b:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 372:\t00 \n 373:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 377:\t48 01 d0             \tadd    %rdx,%rax\n 37a:\tf2 0f 10 08          \tmovsd  (%rax),%xmm1\n 37e:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 384:\t8d 14 00             \tlea    (%rax,%rax,1),%edx\n 387:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 38a:\t83 e8 01             \tsub    $0x1,%eax\n 38d:\t29 c2                \tsub    %eax,%edx\n 38f:\t89 d0                \tmov    %edx,%eax\n 391:\t0f af 45 fc          \timul   -0x4(%rbp),%eax\n 395:\t89 c2                \tmov    %eax,%edx\n 397:\tc1 ea 1f             \tshr    $0x1f,%edx\n 39a:\t01 d0                \tadd    %edx,%eax\n 39c:\td1 f8                \tsar    %eax\n 39e:\t48 98                \tcltq   \n 3a0:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 3a7:\t00 \n 3a8:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n 3af:\t48 01 d0             \tadd    %rdx,%rax\n 3b2:\tf2 0f 10 00          \tmovsd  (%rax),%xmm0\n 3b6:\tf2 0f 59 45 98       \tmulsd  -0x68(%rbp),%xmm0\n 3bb:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n 3be:\t48 98                \tcltq   \n 3c0:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 3c7:\t00 \n 3c8:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 3cc:\t48 01 d0             \tadd    %rdx,%rax\n 3cf:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n 3d3:\tf2 0f 11 00          \tmovsd  %xmm0,(%rax)\n 3d7:\t8b 45 94             \tmov    -0x6c(%rbp),%eax\n 3da:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n 3dd:\te9 c6 00 00 00       \tjmp    4a8 <cblas_dspmv+0x4a8>\n 3e2:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 3e8:\t8d 14 00             \tlea    (%rax,%rax,1),%edx\n 3eb:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 3ee:\t83 e8 01             \tsub    $0x1,%eax\n 3f1:\t29 c2                \tsub    %eax,%edx\n 3f3:\t89 d0                \tmov    %edx,%eax\n 3f5:\t0f af 45 fc          \timul   -0x4(%rbp),%eax\n 3f9:\t89 c2                \tmov    %eax,%edx\n 3fb:\tc1 ea 1f             \tshr    $0x1f,%edx\n 3fe:\t01 d0                \tadd    %edx,%eax\n 400:\td1 f8                \tsar    %eax\n 402:\t89 c2                \tmov    %eax,%edx\n 404:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 407:\t01 d0                \tadd    %edx,%eax\n 409:\t2b 45 fc             \tsub    -0x4(%rbp),%eax\n 40c:\t48 98                \tcltq   \n 40e:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 415:\t00 \n 416:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n 41d:\t48 01 d0             \tadd    %rdx,%rax\n 420:\tf2 0f 10 00          \tmovsd  (%rax),%xmm0\n 424:\tf2 0f 11 45 88       \tmovsd  %xmm0,-0x78(%rbp)\n 429:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n 42c:\t48 98                \tcltq   \n 42e:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 435:\t00 \n 436:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 43a:\t48 01 d0             \tadd    %rdx,%rax\n 43d:\tf2 0f 10 08          \tmovsd  (%rax),%xmm1\n 441:\tf2 0f 10 45 98       \tmovsd  -0x68(%rbp),%xmm0\n 446:\tf2 0f 59 45 88       \tmulsd  -0x78(%rbp),%xmm0\n 44b:\t8b 45 d0             \tmov    -0x30(%rbp),%eax\n 44e:\t48 98                \tcltq   \n 450:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 457:\t00 \n 458:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 45c:\t48 01 d0             \tadd    %rdx,%rax\n 45f:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n 463:\tf2 0f 11 00          \tmovsd  %xmm0,(%rax)\n 467:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n 46a:\t48 98                \tcltq   \n 46c:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 473:\t00 \n 474:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n 47b:\t48 01 d0             \tadd    %rdx,%rax\n 47e:\tf2 0f 10 00          \tmovsd  (%rax),%xmm0\n 482:\tf2 0f 59 45 88       \tmulsd  -0x78(%rbp),%xmm0\n 487:\tf2 0f 10 4d d8       \tmovsd  -0x28(%rbp),%xmm1\n 48c:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n 490:\tf2 0f 11 45 d8       \tmovsd  %xmm0,-0x28(%rbp)\n 495:\t8b 45 18             \tmov    0x18(%rbp),%eax\n 498:\t01 45 d0             \tadd    %eax,-0x30(%rbp)\n 49b:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n 4a1:\t01 45 d4             \tadd    %eax,-0x2c(%rbp)\n 4a4:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n 4a8:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 4ab:\t3b 45 90             \tcmp    -0x70(%rbp),%eax\n 4ae:\t0f 8c 2e ff ff ff    \tjl     3e2 <cblas_dspmv+0x3e2>\n 4b4:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n 4b7:\t48 98                \tcltq   \n 4b9:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 4c0:\t00 \n 4c1:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 4c5:\t48 01 d0             \tadd    %rdx,%rax\n 4c8:\tf2 0f 10 08          \tmovsd  (%rax),%xmm1\n 4cc:\tf2 0f 10 85 68 ff ff \tmovsd  -0x98(%rbp),%xmm0\n 4d3:\tff \n 4d4:\tf2 0f 59 45 d8       \tmulsd  -0x28(%rbp),%xmm0\n 4d9:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n 4dc:\t48 98                \tcltq   \n 4de:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 4e5:\t00 \n 4e6:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 4ea:\t48 01 d0             \tadd    %rdx,%rax\n 4ed:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n 4f1:\tf2 0f 11 00          \tmovsd  %xmm0,(%rax)\n 4f5:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n 4fb:\t01 45 e8             \tadd    %eax,-0x18(%rbp)\n 4fe:\t8b 45 18             \tmov    0x18(%rbp),%eax\n 501:\t01 45 e4             \tadd    %eax,-0x1c(%rbp)\n 504:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 508:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 50b:\t3b 85 74 ff ff ff    \tcmp    -0x8c(%rbp),%eax\n 511:\t0f 8c ab fd ff ff    \tjl     2c2 <cblas_dspmv+0x2c2>\n 517:\te9 db 02 00 00       \tjmp    7f7 <cblas_dspmv+0x7f7>\n 51c:\t83 bd 7c ff ff ff 65 \tcmpl   $0x65,-0x84(%rbp)\n 523:\t75 09                \tjne    52e <cblas_dspmv+0x52e>\n 525:\t83 bd 78 ff ff ff 7a \tcmpl   $0x7a,-0x88(%rbp)\n 52c:\t74 1a                \tje     548 <cblas_dspmv+0x548>\n 52e:\t83 bd 7c ff ff ff 66 \tcmpl   $0x66,-0x84(%rbp)\n 535:\t0f 85 9d 02 00 00    \tjne    7d8 <cblas_dspmv+0x7d8>\n 53b:\t83 bd 78 ff ff ff 79 \tcmpl   $0x79,-0x88(%rbp)\n 542:\t0f 85 90 02 00 00    \tjne    7d8 <cblas_dspmv+0x7d8>\n 548:\t83 bd 70 ff ff ff 00 \tcmpl   $0x0,-0x90(%rbp)\n 54f:\t7f 16                \tjg     567 <cblas_dspmv+0x567>\n 551:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 557:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n 55a:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n 560:\tf7 d8                \tneg    %eax\n 562:\t0f af c2             \timul   %edx,%eax\n 565:\teb 05                \tjmp    56c <cblas_dspmv+0x56c>\n 567:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 56c:\t89 45 cc             \tmov    %eax,-0x34(%rbp)\n 56f:\t83 7d 18 00          \tcmpl   $0x0,0x18(%rbp)\n 573:\t7f 13                \tjg     588 <cblas_dspmv+0x588>\n 575:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 57b:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n 57e:\t8b 45 18             \tmov    0x18(%rbp),%eax\n 581:\tf7 d8                \tneg    %eax\n 583:\t0f af c2             \timul   %edx,%eax\n 586:\teb 05                \tjmp    58d <cblas_dspmv+0x58d>\n 588:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 58d:\t89 45 c8             \tmov    %eax,-0x38(%rbp)\n 590:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n 597:\te9 2b 02 00 00       \tjmp    7c7 <cblas_dspmv+0x7c7>\n 59c:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n 59f:\t48 98                \tcltq   \n 5a1:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 5a8:\t00 \n 5a9:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n 5b0:\t48 01 d0             \tadd    %rdx,%rax\n 5b3:\tf2 0f 10 00          \tmovsd  (%rax),%xmm0\n 5b7:\tf2 0f 10 8d 68 ff ff \tmovsd  -0x98(%rbp),%xmm1\n 5be:\tff \n 5bf:\tf2 0f 59 c1          \tmulsd  %xmm1,%xmm0\n 5c3:\tf2 0f 11 45 b0       \tmovsd  %xmm0,-0x50(%rbp)\n 5c8:\t66 0f ef c0          \tpxor   %xmm0,%xmm0\n 5cc:\tf2 0f 11 45 c0       \tmovsd  %xmm0,-0x40(%rbp)\n 5d1:\tc7 45 ac 00 00 00 00 \tmovl   $0x0,-0x54(%rbp)\n 5d8:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 5db:\t89 45 a8             \tmov    %eax,-0x58(%rbp)\n 5de:\t83 bd 70 ff ff ff 00 \tcmpl   $0x0,-0x90(%rbp)\n 5e5:\t7f 16                \tjg     5fd <cblas_dspmv+0x5fd>\n 5e7:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 5ed:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n 5f0:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n 5f6:\tf7 d8                \tneg    %eax\n 5f8:\t0f af c2             \timul   %edx,%eax\n 5fb:\teb 05                \tjmp    602 <cblas_dspmv+0x602>\n 5fd:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 602:\t8b 55 ac             \tmov    -0x54(%rbp),%edx\n 605:\t0f af 95 70 ff ff ff \timul   -0x90(%rbp),%edx\n 60c:\t01 d0                \tadd    %edx,%eax\n 60e:\t89 45 bc             \tmov    %eax,-0x44(%rbp)\n 611:\t83 7d 18 00          \tcmpl   $0x0,0x18(%rbp)\n 615:\t7f 13                \tjg     62a <cblas_dspmv+0x62a>\n 617:\t8b 85 74 ff ff ff    \tmov    -0x8c(%rbp),%eax\n 61d:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n 620:\t8b 45 18             \tmov    0x18(%rbp),%eax\n 623:\tf7 d8                \tneg    %eax\n 625:\t0f af c2             \timul   %edx,%eax\n 628:\teb 05                \tjmp    62f <cblas_dspmv+0x62f>\n 62a:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 62f:\t8b 55 ac             \tmov    -0x54(%rbp),%edx\n 632:\t0f af 55 18          \timul   0x18(%rbp),%edx\n 636:\t01 d0                \tadd    %edx,%eax\n 638:\t89 45 b8             \tmov    %eax,-0x48(%rbp)\n 63b:\t8b 45 c8             \tmov    -0x38(%rbp),%eax\n 63e:\t48 98                \tcltq   \n 640:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 647:\t00 \n 648:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 64c:\t48 01 d0             \tadd    %rdx,%rax\n 64f:\tf2 0f 10 08          \tmovsd  (%rax),%xmm1\n 653:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 656:\t83 c0 01             \tadd    $0x1,%eax\n 659:\t0f af 45 fc          \timul   -0x4(%rbp),%eax\n 65d:\t89 c2                \tmov    %eax,%edx\n 65f:\tc1 ea 1f             \tshr    $0x1f,%edx\n 662:\t01 d0                \tadd    %edx,%eax\n 664:\td1 f8                \tsar    %eax\n 666:\t89 c2                \tmov    %eax,%edx\n 668:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 66b:\t01 d0                \tadd    %edx,%eax\n 66d:\t48 98                \tcltq   \n 66f:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 676:\t00 \n 677:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n 67e:\t48 01 d0             \tadd    %rdx,%rax\n 681:\tf2 0f 10 00          \tmovsd  (%rax),%xmm0\n 685:\tf2 0f 59 45 b0       \tmulsd  -0x50(%rbp),%xmm0\n 68a:\t8b 45 c8             \tmov    -0x38(%rbp),%eax\n 68d:\t48 98                \tcltq   \n 68f:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 696:\t00 \n 697:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 69b:\t48 01 d0             \tadd    %rdx,%rax\n 69e:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n 6a2:\tf2 0f 11 00          \tmovsd  %xmm0,(%rax)\n 6a6:\t8b 45 ac             \tmov    -0x54(%rbp),%eax\n 6a9:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n 6ac:\te9 b6 00 00 00       \tjmp    767 <cblas_dspmv+0x767>\n 6b1:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 6b4:\t83 c0 01             \tadd    $0x1,%eax\n 6b7:\t0f af 45 fc          \timul   -0x4(%rbp),%eax\n 6bb:\t89 c2                \tmov    %eax,%edx\n 6bd:\tc1 ea 1f             \tshr    $0x1f,%edx\n 6c0:\t01 d0                \tadd    %edx,%eax\n 6c2:\td1 f8                \tsar    %eax\n 6c4:\t89 c2                \tmov    %eax,%edx\n 6c6:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 6c9:\t01 d0                \tadd    %edx,%eax\n 6cb:\t48 98                \tcltq   \n 6cd:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 6d4:\t00 \n 6d5:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n 6dc:\t48 01 d0             \tadd    %rdx,%rax\n 6df:\tf2 0f 10 00          \tmovsd  (%rax),%xmm0\n 6e3:\tf2 0f 11 45 a0       \tmovsd  %xmm0,-0x60(%rbp)\n 6e8:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n 6eb:\t48 98                \tcltq   \n 6ed:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 6f4:\t00 \n 6f5:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 6f9:\t48 01 d0             \tadd    %rdx,%rax\n 6fc:\tf2 0f 10 08          \tmovsd  (%rax),%xmm1\n 700:\tf2 0f 10 45 b0       \tmovsd  -0x50(%rbp),%xmm0\n 705:\tf2 0f 59 45 a0       \tmulsd  -0x60(%rbp),%xmm0\n 70a:\t8b 45 b8             \tmov    -0x48(%rbp),%eax\n 70d:\t48 98                \tcltq   \n 70f:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 716:\t00 \n 717:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 71b:\t48 01 d0             \tadd    %rdx,%rax\n 71e:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n 722:\tf2 0f 11 00          \tmovsd  %xmm0,(%rax)\n 726:\t8b 45 bc             \tmov    -0x44(%rbp),%eax\n 729:\t48 98                \tcltq   \n 72b:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 732:\t00 \n 733:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n 73a:\t48 01 d0             \tadd    %rdx,%rax\n 73d:\tf2 0f 10 00          \tmovsd  (%rax),%xmm0\n 741:\tf2 0f 59 45 a0       \tmulsd  -0x60(%rbp),%xmm0\n 746:\tf2 0f 10 4d c0       \tmovsd  -0x40(%rbp),%xmm1\n 74b:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n 74f:\tf2 0f 11 45 c0       \tmovsd  %xmm0,-0x40(%rbp)\n 754:\t8b 45 18             \tmov    0x18(%rbp),%eax\n 757:\t01 45 b8             \tadd    %eax,-0x48(%rbp)\n 75a:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n 760:\t01 45 bc             \tadd    %eax,-0x44(%rbp)\n 763:\t83 45 f8 01          \taddl   $0x1,-0x8(%rbp)\n 767:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n 76a:\t3b 45 a8             \tcmp    -0x58(%rbp),%eax\n 76d:\t0f 8c 3e ff ff ff    \tjl     6b1 <cblas_dspmv+0x6b1>\n 773:\t8b 45 c8             \tmov    -0x38(%rbp),%eax\n 776:\t48 98                \tcltq   \n 778:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 77f:\t00 \n 780:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 784:\t48 01 d0             \tadd    %rdx,%rax\n 787:\tf2 0f 10 08          \tmovsd  (%rax),%xmm1\n 78b:\tf2 0f 10 85 68 ff ff \tmovsd  -0x98(%rbp),%xmm0\n 792:\tff \n 793:\tf2 0f 59 45 c0       \tmulsd  -0x40(%rbp),%xmm0\n 798:\t8b 45 c8             \tmov    -0x38(%rbp),%eax\n 79b:\t48 98                \tcltq   \n 79d:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 7a4:\t00 \n 7a5:\t48 8b 45 10          \tmov    0x10(%rbp),%rax\n 7a9:\t48 01 d0             \tadd    %rdx,%rax\n 7ac:\tf2 0f 58 c1          \taddsd  %xmm1,%xmm0\n 7b0:\tf2 0f 11 00          \tmovsd  %xmm0,(%rax)\n 7b4:\t8b 85 70 ff ff ff    \tmov    -0x90(%rbp),%eax\n 7ba:\t01 45 cc             \tadd    %eax,-0x34(%rbp)\n 7bd:\t8b 45 18             \tmov    0x18(%rbp),%eax\n 7c0:\t01 45 c8             \tadd    %eax,-0x38(%rbp)\n 7c3:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 7c7:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 7ca:\t3b 85 74 ff ff ff    \tcmp    -0x8c(%rbp),%eax\n 7d0:\t0f 8c c6 fd ff ff    \tjl     59c <cblas_dspmv+0x59c>\n 7d6:\teb 1f                \tjmp    7f7 <cblas_dspmv+0x7f7>\n 7d8:\tba 00 00 00 00       \tmov    $0x0,%edx\n 7dd:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 7e2:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 7e7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 7ec:\te8 00 00 00 00       \tcall   7f1 <cblas_dspmv+0x7f1>\n 7f1:\teb 04                \tjmp    7f7 <cblas_dspmv+0x7f7>\n 7f3:\t90                   \tnop\n 7f4:\teb 01                \tjmp    7f7 <cblas_dspmv+0x7f7>\n 7f6:\t90                   \tnop\n 7f7:\tc9                   \tleave  \n 7f8:\tc3                   \tret    \n", "code_s": "void cblas_dspmv(double <span class=\"supfact\">param_1</span>, double <span class=\"supfact\">param_2</span>,\n                 int param_3, int <span class=\"supfact\">param_4</span>, int param_5,\n                 long <span class=\"supfact\">param_6</span>, long <span class=\"supfact\">param_7_00</span>,\n                 int <span class=\"supfact\">param_8_00</span>, long <span class=\"supfact\">param_7</span>,\n                 int <span class=\"supfact\">param_8</span>) {\n  double dVar1;\n  double dVar2;\n  int <span class=\"supfact\">local_50</span>;\n  int <span class=\"supfact\">local_4c</span>;\n  double <span class=\"supfact\">local_48</span>;\n  int <span class=\"supfact\">local_40</span>;\n  int <span class=\"supfact\">local_3c</span>;\n  int <span class=\"supfact\">local_38</span>;\n  int <span class=\"supfact\">local_34</span>;\n  double <span class=\"supfact\">local_30</span>;\n  int <span class=\"supfact\">local_24</span>;\n  int <span class=\"supfact\">local_20</span>;\n  int <span class=\"supfact\">local_1c</span>;\n  int <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_14</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_14</span> = Number;\n  if ((param_3 != Number) && (param_3 != Number)) {\n    <span class=\"supfact\">local_14</span> = Number;\n  }\n  if ((<span class=\"supfact\">param_4</span> != Number) &&\n      (<span class=\"supfact\">param_4</span> != Number)) {\n    <span class=\"supfact\">local_14</span> = Number;\n  }\n  if (param_5 < Number) {\n    <span class=\"supfact\">local_14</span> = Number;\n  }\n  if (<span class=\"supfact\">param_8_00</span> == Number) {\n    <span class=\"supfact\">local_14</span> = Number;\n  }\n  if (<span class=\"supfact\">param_8</span> == Number) {\n    <span class=\"supfact\">local_14</span> = Number;\n  }\n  if (<span class=\"supfact\">local_14</span> != Number) {\n    cblas_xerbla(<span class=\"supfact\">local_14</span>, String, &DAT_00100800);\n  }\n  if ((<span class=\"supfact\">param_1</span> != Number) ||\n      (DAT_00100828 != <span class=\"supfact\">param_2</span>)) {\n    if (<span class=\"supfact\">param_2</span> == Number) {\n      if (<span class=\"supfact\">param_8</span> < Number) {\n        <span class=\"supfact\">local_18</span> =\n            -<span class=\"supfact\">param_8</span> * (param_5 + -Number);\n      } else {\n        <span class=\"supfact\">local_18</span> = Number;\n      }\n      for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < param_5;\n           <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n        *(undefined8 *)(<span class=\"supfact\">param_7</span> +\n                        (long)<span class=\"supfact\">local_18</span> * Number) = Number;\n        <span class=\"supfact\">local_18</span> =\n            <span class=\"supfact\">local_18</span> + <span class=\"supfact\">param_8</span>;\n      }\n    } else if (DAT_00100828 != <span class=\"supfact\">param_2</span>) {\n      if (<span class=\"supfact\">param_8</span> < Number) {\n        <span class=\"supfact\">local_1c</span> =\n            -<span class=\"supfact\">param_8</span> * (param_5 + -Number);\n      } else {\n        <span class=\"supfact\">local_1c</span> = Number;\n      }\n      for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> < param_5;\n           <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n        *(double *)(<span class=\"supfact\">param_7</span> +\n                    (long)<span class=\"supfact\">local_1c</span> * Number) =\n            *(double *)(<span class=\"supfact\">param_7</span> +\n                        (long)<span class=\"supfact\">local_1c</span> * Number) *\n            <span class=\"supfact\">param_2</span>;\n        <span class=\"supfact\">local_1c</span> =\n            <span class=\"supfact\">local_1c</span> + <span class=\"supfact\">param_8</span>;\n      }\n    }\n    if (<span class=\"supfact\">param_1</span> != Number) {\n      if (((param_3 == Number) && (<span class=\"supfact\">param_4</span> == Number)) ||\n          ((param_3 == Number && (<span class=\"supfact\">param_4</span> == Number)))) {\n        if (<span class=\"supfact\">param_8_00</span> < Number) {\n          <span class=\"supfact\">local_20</span> =\n              -<span class=\"supfact\">param_8_00</span> * (param_5 + -Number);\n        } else {\n          <span class=\"supfact\">local_20</span> = Number;\n        }\n        if (<span class=\"supfact\">param_8</span> < Number) {\n          <span class=\"supfact\">local_24</span> =\n              -<span class=\"supfact\">param_8</span> * (param_5 + -Number);\n        } else {\n          <span class=\"supfact\">local_24</span> = Number;\n        }\n        for (<span class=\"supfact\">local_c</span> = Number;\n             <span class=\"supfact\">local_c</span> < param_5;\n             <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n          dVar2 = *(double *)(<span class=\"supfact\">param_7_00</span> +\n                              (long)<span class=\"supfact\">local_20</span> * Number) *\n                  <span class=\"supfact\">param_1</span>;\n          <span class=\"supfact\">local_30</span> = Number;\n          <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_c</span> + Number;\n          if (<span class=\"supfact\">param_8_00</span> < Number) {\n            <span class=\"supfact\">local_34</span> =\n                -<span class=\"supfact\">param_8_00</span> * (param_5 + -Number);\n          } else {\n            <span class=\"supfact\">local_34</span> = Number;\n          }\n          <span class=\"supfact\">local_34</span> =\n              <span class=\"supfact\">local_34</span> +\n              <span class=\"supfact\">local_10</span> * <span class=\"supfact\">param_8_00</span>;\n          if (<span class=\"supfact\">param_8</span> < Number) {\n            <span class=\"supfact\">local_38</span> =\n                -<span class=\"supfact\">param_8</span> * (param_5 + -Number);\n          } else {\n            <span class=\"supfact\">local_38</span> = Number;\n          }\n          <span class=\"supfact\">local_38</span> =\n              <span class=\"supfact\">local_38</span> +\n              <span class=\"supfact\">local_10</span> * <span class=\"supfact\">param_8</span>;\n          *(double *)(<span class=\"supfact\">param_7</span> +\n                      (long)<span class=\"supfact\">local_24</span> * Number) =\n              *(double *)(<span class=\"supfact\">param_6</span> +\n                          (long)(((param_5 * Number -\n                                   (<span class=\"supfact\">local_c</span> + -Number)) *\n                                  <span class=\"supfact\">local_c</span>) /\n                                 Number) *\n                              Number) *\n                  dVar2 +\n              *(double *)(<span class=\"supfact\">param_7</span> +\n                          (long)<span class=\"supfact\">local_24</span> * Number);\n          for (; <span class=\"supfact\">local_10</span> < param_5;\n               <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n            dVar1 = *(double *)(<span class=\"supfact\">param_6</span> +\n                                (long)((<span class=\"supfact\">local_10</span> +\n                                        ((param_5 * Number -\n                                          (<span class=\"supfact\">local_c</span> + -Number)) *\n                                         <span class=\"supfact\">local_c</span>) /\n                                            Number) -\n                                       <span class=\"supfact\">local_c</span>) *\n                                    Number);\n            *(double *)(<span class=\"supfact\">param_7</span> +\n                        (long)<span class=\"supfact\">local_38</span> * Number) =\n                dVar2 * dVar1 +\n                *(double *)(<span class=\"supfact\">param_7</span> +\n                            (long)<span class=\"supfact\">local_38</span> * Number);\n            <span class=\"supfact\">local_30</span> =\n                *(double *)(<span class=\"supfact\">param_7_00</span> +\n                            (long)<span class=\"supfact\">local_34</span> * Number) *\n                    dVar1 +\n                <span class=\"supfact\">local_30</span>;\n            <span class=\"supfact\">local_38</span> =\n                <span class=\"supfact\">local_38</span> + <span class=\"supfact\">param_8</span>;\n            <span class=\"supfact\">local_34</span> =\n                <span class=\"supfact\">local_34</span> + <span class=\"supfact\">param_8_00</span>;\n          }\n          *(double *)(<span class=\"supfact\">param_7</span> +\n                      (long)<span class=\"supfact\">local_24</span> * Number) =\n              <span class=\"supfact\">param_1</span> * <span class=\"supfact\">local_30</span> +\n              *(double *)(<span class=\"supfact\">param_7</span> +\n                          (long)<span class=\"supfact\">local_24</span> * Number);\n          <span class=\"supfact\">local_20</span> =\n              <span class=\"supfact\">local_20</span> + <span class=\"supfact\">param_8_00</span>;\n          <span class=\"supfact\">local_24</span> =\n              <span class=\"supfact\">local_24</span> + <span class=\"supfact\">param_8</span>;\n        }\n      } else if (((param_3 == Number) && (<span class=\"supfact\">param_4</span> == Number)) ||\n                 ((param_3 == Number && (<span class=\"supfact\">param_4</span> == Number)))) {\n        if (<span class=\"supfact\">param_8_00</span> < Number) {\n          <span class=\"supfact\">local_3c</span> =\n              -<span class=\"supfact\">param_8_00</span> * (param_5 + -Number);\n        } else {\n          <span class=\"supfact\">local_3c</span> = Number;\n        }\n        if (<span class=\"supfact\">param_8</span> < Number) {\n          <span class=\"supfact\">local_40</span> =\n              -<span class=\"supfact\">param_8</span> * (param_5 + -Number);\n        } else {\n          <span class=\"supfact\">local_40</span> = Number;\n        }\n        for (<span class=\"supfact\">local_c</span> = Number;\n             <span class=\"supfact\">local_c</span> < param_5;\n             <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n          dVar2 = *(double *)(<span class=\"supfact\">param_7_00</span> +\n                              (long)<span class=\"supfact\">local_3c</span> * Number) *\n                  <span class=\"supfact\">param_1</span>;\n          <span class=\"supfact\">local_48</span> = Number;\n          if (<span class=\"supfact\">param_8_00</span> < Number) {\n            <span class=\"supfact\">local_4c</span> =\n                -<span class=\"supfact\">param_8_00</span> * (param_5 + -Number);\n          } else {\n            <span class=\"supfact\">local_4c</span> = Number;\n          }\n          if (<span class=\"supfact\">param_8</span> < Number) {\n            <span class=\"supfact\">local_50</span> =\n                -<span class=\"supfact\">param_8</span> * (param_5 + -Number);\n          } else {\n            <span class=\"supfact\">local_50</span> = Number;\n          }\n          *(double *)(<span class=\"supfact\">param_7</span> +\n                      (long)<span class=\"supfact\">local_40</span> * Number) =\n              *(double *)(<span class=\"supfact\">param_6</span> +\n                          (long)(<span class=\"supfact\">local_c</span> +\n                                 ((<span class=\"supfact\">local_c</span> + Number) *\n                                  <span class=\"supfact\">local_c</span>) /\n                                     Number) *\n                              Number) *\n                  dVar2 +\n              *(double *)(<span class=\"supfact\">param_7</span> +\n                          (long)<span class=\"supfact\">local_40</span> * Number);\n          for (<span class=\"supfact\">local_10</span> = Number;\n               <span class=\"supfact\">local_10</span> < <span class=\"supfact\">local_c</span>;\n               <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n            dVar1 = *(double *)(<span class=\"supfact\">param_6</span> +\n                                (long)(<span class=\"supfact\">local_10</span> +\n                                       ((<span class=\"supfact\">local_c</span> + Number) *\n                                        <span class=\"supfact\">local_c</span>) /\n                                           Number) *\n                                    Number);\n            *(double *)(<span class=\"supfact\">param_7</span> +\n                        (long)<span class=\"supfact\">local_50</span> * Number) =\n                dVar2 * dVar1 +\n                *(double *)(<span class=\"supfact\">param_7</span> +\n                            (long)<span class=\"supfact\">local_50</span> * Number);\n            <span class=\"supfact\">local_48</span> =\n                *(double *)(<span class=\"supfact\">param_7_00</span> +\n                            (long)<span class=\"supfact\">local_4c</span> * Number) *\n                    dVar1 +\n                <span class=\"supfact\">local_48</span>;\n            <span class=\"supfact\">local_50</span> =\n                <span class=\"supfact\">local_50</span> + <span class=\"supfact\">param_8</span>;\n            <span class=\"supfact\">local_4c</span> =\n                <span class=\"supfact\">local_4c</span> + <span class=\"supfact\">param_8_00</span>;\n          }\n          *(double *)(<span class=\"supfact\">param_7</span> +\n                      (long)<span class=\"supfact\">local_40</span> * Number) =\n              <span class=\"supfact\">param_1</span> * <span class=\"supfact\">local_48</span> +\n              *(double *)(<span class=\"supfact\">param_7</span> +\n                          (long)<span class=\"supfact\">local_40</span> * Number);\n          <span class=\"supfact\">local_3c</span> =\n              <span class=\"supfact\">local_3c</span> + <span class=\"supfact\">param_8_00</span>;\n          <span class=\"supfact\">local_40</span> =\n              <span class=\"supfact\">local_40</span> + <span class=\"supfact\">param_8</span>;\n        }\n      } else {\n        cblas_xerbla(Number, String, String);\n      }\n    }\n  }\n  return;\n}", "code_t": "void cblas_dspmv(CBLAS_ORDER order, CBLAS_UPLO <span class=\"supfact\">Uplo</span>, int N,\n                 double <span class=\"supfact\">alpha</span>, double *<span class=\"supfact\">Ap</span>,\n                 double *<span class=\"supfact\">X</span>, int <span class=\"supfact\">incX</span>,\n                 double <span class=\"supfact\">beta</span>, double *<span class=\"supfact\">Y</span>,\n                 int <span class=\"supfact\">incY</span>) {\n  double dVar1;\n  double dVar2;\n  int iVar3;\n  double <span class=\"supfact\">beta</span> - local;\n  double *<span class=\"supfact\">X</span> - local;\n  double *<span class=\"supfact\">Ap</span> - local;\n  double <span class=\"supfact\">alpha</span> - local;\n  int <span class=\"supfact\">incX</span> - local;\n  int N - local;\n  CBLAS_UPLO <span class=\"supfact\">Uplo</span> - local;\n  CBLAS_ORDER order - local;\n  double apk;\n  int j_max;\n  int j_min;\n  double tmp1;\n  double apk_1;\n  int j_max_1;\n  int j_min_1;\n  double tmp1_1;\n  int <span class=\"supfact\">jy_1</span>;\n  int <span class=\"supfact\">jx_1</span>;\n  double <span class=\"supfact\">tmp2_1</span>;\n  int <span class=\"supfact\">iy_3</span>;\n  int <span class=\"supfact\">ix_1</span>;\n  int <span class=\"supfact\">jy</span>;\n  int <span class=\"supfact\">jx</span>;\n  double <span class=\"supfact\">tmp2</span>;\n  int <span class=\"supfact\">iy_2</span>;\n  int <span class=\"supfact\">ix</span>;\n  int <span class=\"supfact\">iy_1</span>;\n  int <span class=\"supfact\">iy</span>;\n  int <span class=\"supfact\">pos</span>;\n  int <span class=\"supfact\">j</span>;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">pos</span> = Number;\n  if ((order != CblasRowMajor) && (order != CblasColMajor)) {\n    <span class=\"supfact\">pos</span> = Number;\n  }\n  if ((<span class=\"supfact\">Uplo</span> != CblasUpper) &&\n      (<span class=\"supfact\">Uplo</span> != CblasLower)) {\n    <span class=\"supfact\">pos</span> = Number;\n  }\n  if (N < Number) {\n    <span class=\"supfact\">pos</span> = Number;\n  }\n  if (<span class=\"supfact\">incX</span> == Number) {\n    <span class=\"supfact\">pos</span> = Number;\n  }\n  if (<span class=\"supfact\">incY</span> == Number) {\n    <span class=\"supfact\">pos</span> = Number;\n  }\n  if (<span class=\"supfact\">pos</span> != Number) {\n    cblas_xerbla(<span class=\"supfact\">pos</span>, String, &DAT_00100800);\n  }\n  if ((<span class=\"supfact\">alpha</span> != Number) ||\n      (DAT_00100828 != <span class=\"supfact\">beta</span>)) {\n    if (<span class=\"supfact\">beta</span> == Number) {\n      if (<span class=\"supfact\">incY</span> < Number) {\n        <span class=\"supfact\">iy</span> = -<span class=\"supfact\">incY</span> * (N + -Number);\n      } else {\n        <span class=\"supfact\">iy</span> = Number;\n      }\n      for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < N;\n           <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n        <span class=\"supfact\">Y</span>[<span class=\"supfact\">iy</span>] = Number;\n        <span class=\"supfact\">iy</span> = <span class=\"supfact\">iy</span> + <span class=\"supfact\">incY</span>;\n      }\n    } else if (DAT_00100828 != <span class=\"supfact\">beta</span>) {\n      if (<span class=\"supfact\">incY</span> < Number) {\n        <span class=\"supfact\">iy_1</span> = -<span class=\"supfact\">incY</span> * (N + -Number);\n      } else {\n        <span class=\"supfact\">iy_1</span> = Number;\n      }\n      for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < N;\n           <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n        <span class=\"supfact\">Y</span>[<span class=\"supfact\">iy_1</span>] =\n            <span class=\"supfact\">Y</span>[<span class=\"supfact\">iy_1</span>] * <span class=\"supfact\">beta</span>;\n        <span class=\"supfact\">iy_1</span> = <span class=\"supfact\">iy_1</span> + <span class=\"supfact\">incY</span>;\n      }\n    }\n    if (<span class=\"supfact\">alpha</span> != Number) {\n      if (((order == CblasRowMajor) && (<span class=\"supfact\">Uplo</span> == CblasUpper)) ||\n          ((order == CblasColMajor && (<span class=\"supfact\">Uplo</span> == CblasLower)))) {\n        if (<span class=\"supfact\">incX</span> < Number) {\n          <span class=\"supfact\">ix</span> = -<span class=\"supfact\">incX</span> * (N + -Number);\n        } else {\n          <span class=\"supfact\">ix</span> = Number;\n        }\n        if (<span class=\"supfact\">incY</span> < Number) {\n          <span class=\"supfact\">iy_2</span> = -<span class=\"supfact\">incY</span> * (N + -Number);\n        } else {\n          <span class=\"supfact\">iy_2</span> = Number;\n        }\n        for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < N;\n             <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n          dVar1 = <span class=\"supfact\">X</span>[<span class=\"supfact\">ix</span>];\n          <span class=\"supfact\">tmp2</span> = Number;\n          <span class=\"supfact\">j</span> = <span class=\"supfact\">i</span> + Number;\n          if (<span class=\"supfact\">incX</span> < Number) {\n            iVar3 = -<span class=\"supfact\">incX</span> * (N + -Number);\n          } else {\n            iVar3 = Number;\n          }\n          <span class=\"supfact\">jx</span> = iVar3 + <span class=\"supfact\">j</span> * <span class=\"supfact\">incX</span>;\n          if (<span class=\"supfact\">incY</span> < Number) {\n            iVar3 = -<span class=\"supfact\">incY</span> * (N + -Number);\n          } else {\n            iVar3 = Number;\n          }\n          <span class=\"supfact\">jy</span> = iVar3 + <span class=\"supfact\">j</span> * <span class=\"supfact\">incY</span>;\n          <span class=\"supfact\">Y</span>[<span class=\"supfact\">iy_2</span>] =\n              <span class=\"supfact\">Ap</span>[((N * Number - (<span class=\"supfact\">i</span> + -Number)) *\n                                  <span class=\"supfact\">i</span>) /\n                                 Number] *\n                  dVar1 * <span class=\"supfact\">alpha</span> +\n              <span class=\"supfact\">Y</span>[<span class=\"supfact\">iy_2</span>];\n          for (; <span class=\"supfact\">j</span> < N;\n               <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number) {\n            dVar2 = <span class=\"supfact\">Ap</span>[(<span class=\"supfact\">j</span> +\n                                        ((N * Number -\n                                          (<span class=\"supfact\">i</span> + -Number)) *\n                                         <span class=\"supfact\">i</span>) /\n                                            Number) -\n                                       <span class=\"supfact\">i</span>];\n            <span class=\"supfact\">Y</span>[<span class=\"supfact\">jy</span>] =\n                dVar1 * <span class=\"supfact\">alpha</span> * dVar2 +\n                <span class=\"supfact\">Y</span>[<span class=\"supfact\">jy</span>];\n            <span class=\"supfact\">tmp2</span> =\n                <span class=\"supfact\">X</span>[<span class=\"supfact\">jx</span>] * dVar2 +\n                <span class=\"supfact\">tmp2</span>;\n            <span class=\"supfact\">jy</span> = <span class=\"supfact\">jy</span> + <span class=\"supfact\">incY</span>;\n            <span class=\"supfact\">jx</span> = <span class=\"supfact\">jx</span> + <span class=\"supfact\">incX</span>;\n          }\n          <span class=\"supfact\">Y</span>[<span class=\"supfact\">iy_2</span>] =\n              <span class=\"supfact\">alpha</span> * <span class=\"supfact\">tmp2</span> +\n              <span class=\"supfact\">Y</span>[<span class=\"supfact\">iy_2</span>];\n          <span class=\"supfact\">ix</span> = <span class=\"supfact\">ix</span> + <span class=\"supfact\">incX</span>;\n          <span class=\"supfact\">iy_2</span> = <span class=\"supfact\">iy_2</span> + <span class=\"supfact\">incY</span>;\n        }\n      } else if (((order == CblasRowMajor) &&\n                  (<span class=\"supfact\">Uplo</span> == CblasLower)) ||\n                 ((order == CblasColMajor &&\n                   (<span class=\"supfact\">Uplo</span> == CblasUpper)))) {\n        if (<span class=\"supfact\">incX</span> < Number) {\n          <span class=\"supfact\">ix_1</span> = -<span class=\"supfact\">incX</span> * (N + -Number);\n        } else {\n          <span class=\"supfact\">ix_1</span> = Number;\n        }\n        if (<span class=\"supfact\">incY</span> < Number) {\n          <span class=\"supfact\">iy_3</span> = -<span class=\"supfact\">incY</span> * (N + -Number);\n        } else {\n          <span class=\"supfact\">iy_3</span> = Number;\n        }\n        for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> < N;\n             <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n          dVar1 = <span class=\"supfact\">X</span>[<span class=\"supfact\">ix_1</span>];\n          <span class=\"supfact\">tmp2_1</span> = Number;\n          if (<span class=\"supfact\">incX</span> < Number) {\n            <span class=\"supfact\">jx_1</span> = -<span class=\"supfact\">incX</span> * (N + -Number);\n          } else {\n            <span class=\"supfact\">jx_1</span> = Number;\n          }\n          if (<span class=\"supfact\">incY</span> < Number) {\n            <span class=\"supfact\">jy_1</span> = -<span class=\"supfact\">incY</span> * (N + -Number);\n          } else {\n            <span class=\"supfact\">jy_1</span> = Number;\n          }\n          <span class=\"supfact\">Y</span>[<span class=\"supfact\">iy_3</span>] =\n              <span class=\"supfact\">Ap</span>[<span class=\"supfact\">i</span> +\n                                 ((<span class=\"supfact\">i</span> + Number) *\n                                  <span class=\"supfact\">i</span>) /\n                                     Number] *\n                  dVar1 * <span class=\"supfact\">alpha</span> +\n              <span class=\"supfact\">Y</span>[<span class=\"supfact\">iy_3</span>];\n          for (<span class=\"supfact\">j</span> = Number;\n               <span class=\"supfact\">j</span> < <span class=\"supfact\">i</span>;\n               <span class=\"supfact\">j</span> = <span class=\"supfact\">j</span> + Number) {\n            dVar2 = <span class=\"supfact\">Ap</span>[<span class=\"supfact\">j</span> +\n                                       ((<span class=\"supfact\">i</span> + Number) *\n                                        <span class=\"supfact\">i</span>) /\n                                           Number];\n            <span class=\"supfact\">Y</span>[<span class=\"supfact\">jy_1</span>] =\n                dVar1 * <span class=\"supfact\">alpha</span> * dVar2 +\n                <span class=\"supfact\">Y</span>[<span class=\"supfact\">jy_1</span>];\n            <span class=\"supfact\">tmp2_1</span> =\n                <span class=\"supfact\">X</span>[<span class=\"supfact\">jx_1</span>] * dVar2 +\n                <span class=\"supfact\">tmp2_1</span>;\n            <span class=\"supfact\">jy_1</span> = <span class=\"supfact\">jy_1</span> + <span class=\"supfact\">incY</span>;\n            <span class=\"supfact\">jx_1</span> = <span class=\"supfact\">jx_1</span> + <span class=\"supfact\">incX</span>;\n          }\n          <span class=\"supfact\">Y</span>[<span class=\"supfact\">iy_3</span>] =\n              <span class=\"supfact\">alpha</span> * <span class=\"supfact\">tmp2_1</span> +\n              <span class=\"supfact\">Y</span>[<span class=\"supfact\">iy_3</span>];\n          <span class=\"supfact\">ix_1</span> = <span class=\"supfact\">ix_1</span> + <span class=\"supfact\">incX</span>;\n          <span class=\"supfact\">iy_3</span> = <span class=\"supfact\">iy_3</span> + <span class=\"supfact\">incY</span>;\n        }\n      } else {\n        cblas_xerbla(Number, String, String);\n      }\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "double", "pred_name": "alpha", "ref_name": "alpha", "ref_type": "double"}, {"name": "param_2", "type": "double", "pred_name": "beta", "ref_name": "beta", "ref_type": "double"}, {"name": "param_4", "type": "CBLAS_UPLO", "pred_name": "Uplo", "ref_name": "Uplo", "ref_type": "CBLAS_UPLO"}, {"name": "param_6", "type": "double * *", "pred_name": "Ap", "ref_name": "Ap", "ref_type": "double * *"}, {"name": "param_7_00", "type": "double * *", "pred_name": "X", "ref_name": "X", "ref_type": "double * *"}, {"name": "param_8_00", "type": "int", "pred_name": "incX", "ref_name": "incX", "ref_type": "int"}, {"name": "param_7", "type": "double * *", "pred_name": "Y", "ref_name": "Y", "ref_type": "double * *"}, {"name": "param_8", "type": "int", "pred_name": "incY", "ref_name": "incY", "ref_type": "int"}, {"name": "local_50", "type": "int", "pred_name": "jy_1", "ref_name": "jy_1", "ref_type": "int"}, {"name": "local_4c", "type": "int", "pred_name": "jx_1", "ref_name": "jx_1", "ref_type": "int"}, {"name": "local_48", "type": "double", "pred_name": "tmp2_1", "ref_name": "tmp2_1", "ref_type": "double"}, {"name": "local_40", "type": "int", "pred_name": "iy_3", "ref_name": "iy_3", "ref_type": "int"}, {"name": "local_3c", "type": "int", "pred_name": "ix_1", "ref_name": "ix_1", "ref_type": "int"}, {"name": "local_38", "type": "int", "pred_name": "jy", "ref_name": "jy", "ref_type": "int"}, {"name": "local_34", "type": "int", "pred_name": "jx", "ref_name": "jx", "ref_type": "int"}, {"name": "local_30", "type": "double", "pred_name": "tmp2", "ref_name": "tmp2", "ref_type": "double"}, {"name": "local_24", "type": "int", "pred_name": "iy_2", "ref_name": "iy_2", "ref_type": "int"}, {"name": "local_20", "type": "int", "pred_name": "iy_2", "ref_name": "ix", "ref_type": "int"}, {"name": "local_1c", "type": "int", "pred_name": "iy_1", "ref_name": "iy_1", "ref_type": "int"}, {"name": "local_18", "type": "int", "pred_name": "iy", "ref_name": "iy", "ref_type": "int"}, {"name": "local_14", "type": "int", "pred_name": "pos", "ref_name": "pos", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "j", "ref_name": "j", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "sreejithcools", "repo_name": "opensourceworkspace", "path": "sreejithcools/opensourceworkspace/0b1d41075ceeb613d97ce137b564e5495bba34f37a7888eb5888d0167f5d5e21", "path_in_repo": "sreejithcools/opensourceworkspace/xuggle-xuggler-iStreamLife/captive/openssl/csrc/apps/apps.o", "objdump": "00000000000016fa <load_pubkey>:\n    16fa:\t55                   \tpush   %rbp\n    16fb:\t48 89 e5             \tmov    %rsp,%rbp\n    16fe:\t48 83 ec 60          \tsub    $0x60,%rsp\n    1702:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    1706:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n    170a:\t89 55 bc             \tmov    %edx,-0x44(%rbp)\n    170d:\t89 4d b8             \tmov    %ecx,-0x48(%rbp)\n    1710:\t4c 89 45 b0          \tmov    %r8,-0x50(%rbp)\n    1714:\t4c 89 4d a8          \tmov    %r9,-0x58(%rbp)\n    1718:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n    171f:\t00 \n    1720:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    1727:\t00 \n    1728:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    172c:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    1730:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    1734:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    1738:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n    173d:\t75 27                \tjne    1766 <load_pubkey+0x6c>\n    173f:\t83 7d b8 00          \tcmpl   $0x0,-0x48(%rbp)\n    1743:\t74 06                \tje     174b <load_pubkey+0x51>\n    1745:\t83 7d bc 07          \tcmpl   $0x7,-0x44(%rbp)\n    1749:\t75 1b                \tjne    1766 <load_pubkey+0x6c>\n    174b:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    174f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1754:\t48 89 c7             \tmov    %rax,%rdi\n    1757:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    175c:\te8 00 00 00 00       \tcall   1761 <load_pubkey+0x67>\n    1761:\te9 93 02 00 00       \tjmp    19f9 <load_pubkey+0x2ff>\n    1766:\t83 7d bc 07          \tcmpl   $0x7,-0x44(%rbp)\n    176a:\t75 49                \tjne    17b5 <load_pubkey+0xbb>\n    176c:\t48 83 7d a8 00       \tcmpq   $0x0,-0x58(%rbp)\n    1771:\t75 1e                \tjne    1791 <load_pubkey+0x97>\n    1773:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 177a <load_pubkey+0x80>\n    177a:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    177f:\t48 89 c7             \tmov    %rax,%rdi\n    1782:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1787:\te8 00 00 00 00       \tcall   178c <load_pubkey+0x92>\n    178c:\te9 68 02 00 00       \tjmp    19f9 <load_pubkey+0x2ff>\n    1791:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 1798 <load_pubkey+0x9e>\n    1798:\t48 8d 4d d0          \tlea    -0x30(%rbp),%rcx\n    179c:\t48 8b 75 c0          \tmov    -0x40(%rbp),%rsi\n    17a0:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    17a4:\t48 89 c7             \tmov    %rax,%rdi\n    17a7:\te8 00 00 00 00       \tcall   17ac <load_pubkey+0xb2>\n    17ac:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    17b0:\te9 44 02 00 00       \tjmp    19f9 <load_pubkey+0x2ff>\n    17b5:\te8 00 00 00 00       \tcall   17ba <load_pubkey+0xc0>\n    17ba:\t48 89 c7             \tmov    %rax,%rdi\n    17bd:\te8 00 00 00 00       \tcall   17c2 <load_pubkey+0xc8>\n    17c2:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    17c6:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    17cb:\t75 11                \tjne    17de <load_pubkey+0xe4>\n    17cd:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    17d1:\t48 89 c7             \tmov    %rax,%rdi\n    17d4:\te8 00 00 00 00       \tcall   17d9 <load_pubkey+0xdf>\n    17d9:\te9 1b 02 00 00       \tjmp    19f9 <load_pubkey+0x2ff>\n    17de:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n    17e3:\t75 46                \tjne    182b <load_pubkey+0x131>\n    17e5:\t83 7d b8 00          \tcmpl   $0x0,-0x48(%rbp)\n    17e9:\t74 40                \tje     182b <load_pubkey+0x131>\n    17eb:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 17f2 <load_pubkey+0xf8>\n    17f2:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    17f7:\tba 02 00 00 00       \tmov    $0x2,%edx\n    17fc:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1801:\t48 89 c7             \tmov    %rax,%rdi\n    1804:\te8 00 00 00 00       \tcall   1809 <load_pubkey+0x10f>\n    1809:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 1810 <load_pubkey+0x116>\n    1810:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1814:\t48 89 d1             \tmov    %rdx,%rcx\n    1817:\tba 00 00 00 00       \tmov    $0x0,%edx\n    181c:\tbe 6a 00 00 00       \tmov    $0x6a,%esi\n    1821:\t48 89 c7             \tmov    %rax,%rdi\n    1824:\te8 00 00 00 00       \tcall   1829 <load_pubkey+0x12f>\n    1829:\teb 54                \tjmp    187f <load_pubkey+0x185>\n    182b:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    182f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1833:\t48 89 d1             \tmov    %rdx,%rcx\n    1836:\tba 03 00 00 00       \tmov    $0x3,%edx\n    183b:\tbe 6c 00 00 00       \tmov    $0x6c,%esi\n    1840:\t48 89 c7             \tmov    %rax,%rdi\n    1843:\te8 00 00 00 00       \tcall   1848 <load_pubkey+0x14e>\n    1848:\t48 85 c0             \ttest   %rax,%rax\n    184b:\t7f 32                \tjg     187f <load_pubkey+0x185>\n    184d:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    1851:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1855:\t48 89 d1             \tmov    %rdx,%rcx\n    1858:\t48 8b 55 10          \tmov    0x10(%rbp),%rdx\n    185c:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1861:\t48 89 c7             \tmov    %rax,%rdi\n    1864:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1869:\te8 00 00 00 00       \tcall   186e <load_pubkey+0x174>\n    186e:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1872:\t48 89 c7             \tmov    %rax,%rdi\n    1875:\te8 00 00 00 00       \tcall   187a <load_pubkey+0x180>\n    187a:\te9 7a 01 00 00       \tjmp    19f9 <load_pubkey+0x2ff>\n    187f:\t83 7d bc 01          \tcmpl   $0x1,-0x44(%rbp)\n    1883:\t75 1a                \tjne    189f <load_pubkey+0x1a5>\n    1885:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1889:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    188e:\t48 89 c7             \tmov    %rax,%rdi\n    1891:\te8 00 00 00 00       \tcall   1896 <load_pubkey+0x19c>\n    1896:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    189a:\te9 5a 01 00 00       \tjmp    19f9 <load_pubkey+0x2ff>\n    189f:\t83 7d bc 0a          \tcmpl   $0xa,-0x44(%rbp)\n    18a3:\t75 5d                \tjne    1902 <load_pubkey+0x208>\n    18a5:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    18a9:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    18ae:\t48 89 c7             \tmov    %rax,%rdi\n    18b1:\te8 00 00 00 00       \tcall   18b6 <load_pubkey+0x1bc>\n    18b6:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    18ba:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n    18bf:\t74 34                \tje     18f5 <load_pubkey+0x1fb>\n    18c1:\te8 00 00 00 00       \tcall   18c6 <load_pubkey+0x1cc>\n    18c6:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    18ca:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    18cf:\t74 13                \tje     18e4 <load_pubkey+0x1ea>\n    18d1:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    18d5:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    18d9:\t48 89 d6             \tmov    %rdx,%rsi\n    18dc:\t48 89 c7             \tmov    %rax,%rdi\n    18df:\te8 00 00 00 00       \tcall   18e4 <load_pubkey+0x1ea>\n    18e4:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    18e8:\t48 89 c7             \tmov    %rax,%rdi\n    18eb:\te8 00 00 00 00       \tcall   18f0 <load_pubkey+0x1f6>\n    18f0:\te9 04 01 00 00       \tjmp    19f9 <load_pubkey+0x2ff>\n    18f5:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    18fc:\t00 \n    18fd:\te9 f7 00 00 00       \tjmp    19f9 <load_pubkey+0x2ff>\n    1902:\t83 7d bc 09          \tcmpl   $0x9,-0x44(%rbp)\n    1906:\t75 69                \tjne    1971 <load_pubkey+0x277>\n    1908:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    190c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1910:\t48 89 d1             \tmov    %rdx,%rcx\n    1913:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1918:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    191d:\t48 89 c7             \tmov    %rax,%rdi\n    1920:\te8 00 00 00 00       \tcall   1925 <load_pubkey+0x22b>\n    1925:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    1929:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    192e:\t74 34                \tje     1964 <load_pubkey+0x26a>\n    1930:\te8 00 00 00 00       \tcall   1935 <load_pubkey+0x23b>\n    1935:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1939:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    193e:\t74 13                \tje     1953 <load_pubkey+0x259>\n    1940:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    1944:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1948:\t48 89 d6             \tmov    %rdx,%rsi\n    194b:\t48 89 c7             \tmov    %rax,%rdi\n    194e:\te8 00 00 00 00       \tcall   1953 <load_pubkey+0x259>\n    1953:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1957:\t48 89 c7             \tmov    %rax,%rdi\n    195a:\te8 00 00 00 00       \tcall   195f <load_pubkey+0x265>\n    195f:\te9 95 00 00 00       \tjmp    19f9 <load_pubkey+0x2ff>\n    1964:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    196b:\t00 \n    196c:\te9 88 00 00 00       \tjmp    19f9 <load_pubkey+0x2ff>\n    1971:\t83 7d bc 03          \tcmpl   $0x3,-0x44(%rbp)\n    1975:\t75 23                \tjne    199a <load_pubkey+0x2a0>\n    1977:\t48 8d 55 d0          \tlea    -0x30(%rbp),%rdx\n    197b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    197f:\t48 89 d1             \tmov    %rdx,%rcx\n    1982:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1987:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    198c:\t48 89 c7             \tmov    %rax,%rdi\n    198f:\te8 00 00 00 00       \tcall   1994 <load_pubkey+0x29a>\n    1994:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1998:\teb 5f                \tjmp    19f9 <load_pubkey+0x2ff>\n    199a:\t83 7d bc 04          \tcmpl   $0x4,-0x44(%rbp)\n    199e:\t74 06                \tje     19a6 <load_pubkey+0x2ac>\n    19a0:\t83 7d bc 08          \tcmpl   $0x8,-0x44(%rbp)\n    19a4:\t75 24                \tjne    19ca <load_pubkey+0x2d0>\n    19a6:\t8b 4d bc             \tmov    -0x44(%rbp),%ecx\n    19a9:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    19ad:\t48 8b 75 f8          \tmov    -0x8(%rbp),%rsi\n    19b1:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    19b5:\t41 89 c8             \tmov    %ecx,%r8d\n    19b8:\t48 8b 4d 10          \tmov    0x10(%rbp),%rcx\n    19bc:\t48 89 c7             \tmov    %rax,%rdi\n    19bf:\te8 6f 00 00 00       \tcall   1a33 <load_netscape_key>\n    19c4:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    19c8:\teb 2f                \tjmp    19f9 <load_pubkey+0x2ff>\n    19ca:\t83 7d bc 0b          \tcmpl   $0xb,-0x44(%rbp)\n    19ce:\t75 12                \tjne    19e2 <load_pubkey+0x2e8>\n    19d0:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    19d4:\t48 89 c7             \tmov    %rax,%rdi\n    19d7:\te8 00 00 00 00       \tcall   19dc <load_pubkey+0x2e2>\n    19dc:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    19e0:\teb 17                \tjmp    19f9 <load_pubkey+0x2ff>\n    19e2:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    19e6:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    19eb:\t48 89 c7             \tmov    %rax,%rdi\n    19ee:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    19f3:\te8 00 00 00 00       \tcall   19f8 <load_pubkey+0x2fe>\n    19f8:\t90                   \tnop\n    19f9:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    19fe:\t74 0c                \tje     1a0c <load_pubkey+0x312>\n    1a00:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1a04:\t48 89 c7             \tmov    %rax,%rdi\n    1a07:\te8 00 00 00 00       \tcall   1a0c <load_pubkey+0x312>\n    1a0c:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    1a11:\t75 1a                \tjne    1a2d <load_pubkey+0x333>\n    1a13:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    1a17:\t48 8b 55 10          \tmov    0x10(%rbp),%rdx\n    1a1b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1a20:\t48 89 c7             \tmov    %rax,%rdi\n    1a23:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1a28:\te8 00 00 00 00       \tcall   1a2d <load_pubkey+0x333>\n    1a2d:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1a31:\tc9                   \tleave  \n    1a32:\tc3                   \tret    ", "code_s": "EVP_PKEY *load_pubkey(BIO *param_1, char *<span class=\"supfact\">param_2</span>, int param_3,\n                      int <span class=\"supfact\">param_4</span>, undefined8 param_5,\n                      ENGINE *<span class=\"supfact\">param_6</span>,\n                      undefined8 <span class=\"supfact\">param_7</span>) {\n  BIO_METHOD *type;\n  long lVar1;\n  undefined8 <span class=\"supfact\">local_38</span>;\n  char *<span class=\"supfact\">local_30</span>;\n  rsa_st *<span class=\"supfact\">local_28</span>;\n  rsa_st *<span class=\"supfact\">local_20</span>;\n  EVP_PKEY *<span class=\"supfact\">local_18</span>;\n  BIO *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = (BIO *)Number;\n  <span class=\"supfact\">local_18</span> = (EVP_PKEY *)Number;\n  <span class=\"supfact\">local_38</span> = param_5;\n  <span class=\"supfact\">local_30</span> = <span class=\"supfact\">param_2</span>;\n  if ((<span class=\"supfact\">param_2</span> == (char *)Number) &&\n      ((<span class=\"supfact\">param_4</span> == Number || (param_3 == Number)))) {\n    BIO_printf(param_1, String);\n  } else if (param_3 == Number) {\n    if (<span class=\"supfact\">param_6</span> == (ENGINE *)Number) {\n      BIO_printf(_bio_err, String);\n    } else {\n      <span class=\"supfact\">local_18</span> = ENGINE_load_public_key(\n          <span class=\"supfact\">param_6</span>, <span class=\"supfact\">param_2</span>, DAT_001049f8,\n          &<span class=\"supfact\">local_38</span>);\n    }\n  } else {\n    type = BIO_s_file();\n    <span class=\"supfact\">local_10</span> = BIO_new(type);\n    if (<span class=\"supfact\">local_10</span> == (BIO *)Number) {\n      ERR_print_errors(param_1);\n    } else {\n      if ((<span class=\"supfact\">param_2</span> == (char *)Number) &&\n          (<span class=\"supfact\">param_4</span> != Number)) {\n        setvbuf(_stdin, (char *)Number, Number, Number);\n        BIO_ctrl(<span class=\"supfact\">local_10</span>, Number, Number, _stdin);\n      } else {\n        lVar1 = BIO_ctrl(<span class=\"supfact\">local_10</span>, Number, Number,\n                         <span class=\"supfact\">param_2</span>);\n        if (lVar1 < Number) {\n          BIO_printf(param_1, String, <span class=\"supfact\">param_7</span>,\n                     <span class=\"supfact\">param_2</span>);\n          ERR_print_errors(param_1);\n          goto LAB_001019f9;\n        }\n      }\n      if (param_3 == Number) {\n        <span class=\"supfact\">local_18</span> =\n            d2i_PUBKEY_bio(<span class=\"supfact\">local_10</span>, (EVP_PKEY **)Number);\n      } else if (param_3 == Number) {\n        <span class=\"supfact\">local_28</span> =\n            d2i_RSAPublicKey_bio(<span class=\"supfact\">local_10</span>, (RSA **)Number);\n        if (<span class=\"supfact\">local_28</span> == (rsa_st *)Number) {\n          <span class=\"supfact\">local_18</span> = (EVP_PKEY *)Number;\n        } else {\n          <span class=\"supfact\">local_18</span> = EVP_PKEY_new();\n          if (<span class=\"supfact\">local_18</span> != (EVP_PKEY *)Number) {\n            EVP_PKEY_set1_RSA(<span class=\"supfact\">local_18</span>,\n                              <span class=\"supfact\">local_28</span>);\n          }\n          RSA_free(<span class=\"supfact\">local_28</span>);\n        }\n      } else if (param_3 == Number) {\n        <span class=\"supfact\">local_20</span> = PEM_read_bio_RSAPublicKey(\n            <span class=\"supfact\">local_10</span>, (RSA **)Number, password_callback,\n            &<span class=\"supfact\">local_38</span>);\n        if (<span class=\"supfact\">local_20</span> == (rsa_st *)Number) {\n          <span class=\"supfact\">local_18</span> = (EVP_PKEY *)Number;\n        } else {\n          <span class=\"supfact\">local_18</span> = EVP_PKEY_new();\n          if (<span class=\"supfact\">local_18</span> != (EVP_PKEY *)Number) {\n            EVP_PKEY_set1_RSA(<span class=\"supfact\">local_18</span>,\n                              <span class=\"supfact\">local_20</span>);\n          }\n          RSA_free(<span class=\"supfact\">local_20</span>);\n        }\n      } else if (param_3 == Number) {\n        <span class=\"supfact\">local_18</span> =\n            PEM_read_bio_PUBKEY(<span class=\"supfact\">local_10</span>, (EVP_PKEY **)Number,\n                                password_callback, &<span class=\"supfact\">local_38</span>);\n      } else if ((param_3 == Number) || (param_3 == Number)) {\n        <span class=\"supfact\">local_18</span> = (EVP_PKEY *)FUN_00101a33(\n            param_1, <span class=\"supfact\">local_10</span>, <span class=\"supfact\">param_2</span>,\n            <span class=\"supfact\">param_7</span>, param_3);\n      } else if (param_3 == Number) {\n        <span class=\"supfact\">local_18</span> = b2i_PublicKey_bio(<span class=\"supfact\">local_10</span>);\n      } else {\n        BIO_printf(param_1, String);\n      }\n    }\n  }\nLAB_001019f9:\n  if (<span class=\"supfact\">local_10</span> != (BIO *)Number) {\n    BIO_free(<span class=\"supfact\">local_10</span>);\n  }\n  if (<span class=\"supfact\">local_18</span> == (EVP_PKEY *)Number) {\n    BIO_printf(param_1, String, <span class=\"supfact\">param_7</span>);\n  }\n  return <span class=\"supfact\">local_18</span>;\n}", "code_t": "EVP_PKEY *load_pubkey(BIO *err, char *<span class=\"supfact\">file</span>, int format,\n                      int <span class=\"supfact\">maybe_stdin</span>, char *pass,\n                      ENGINE *<span class=\"supfact\">e</span>,\n                      char *<span class=\"supfact\">key_descrip</span>) {\n  BIO_METHOD *type;\n  long lVar1;\n  rsa_st *prVar2;\n  ENGINE *<span class=\"supfact\">e</span> - local;\n  char *pass - local;\n  int <span class=\"supfact\">maybe_stdin</span> - local;\n  int format - local;\n  char *<span class=\"supfact\">file</span> - local;\n  BIO *err - local;\n  PW_CB_DATA <span class=\"supfact\">cb_data</span>;\n  RSA *<span class=\"supfact\">rsa</span>;\n  RSA *<span class=\"supfact\">rsa_1</span>;\n  EVP_PKEY *<span class=\"supfact\">pkey</span>;\n  BIO *<span class=\"supfact\">key</span>;\n  <span class=\"supfact\">key</span> = (BIO *)Number;\n  <span class=\"supfact\">pkey</span> = (EVP_PKEY *)Number;\n  <span class=\"supfact\">cb_data</span>.password = pass;\n  <span class=\"supfact\">cb_data</span>.prompt_info = <span class=\"supfact\">file</span>;\n  if ((<span class=\"supfact\">file</span> == (char *)Number) &&\n      ((<span class=\"supfact\">maybe_stdin</span> == Number || (format == Number)))) {\n    BIO_printf((BIO *)err, String);\n  } else if (format == Number) {\n    if (<span class=\"supfact\">e</span> == (ENGINE *)Number) {\n      BIO_printf(_bio_err, String);\n    } else {\n      <span class=\"supfact\">pkey</span> = (EVP_PKEY *)ENGINE_load_public_key(\n          (ENGINE *)<span class=\"supfact\">e</span>, <span class=\"supfact\">file</span>,\n          (UI_METHOD *)ui_method, &<span class=\"supfact\">cb_data</span>);\n    }\n  } else {\n    type = BIO_s_file();\n    <span class=\"supfact\">key</span> = (BIO *)BIO_new(type);\n    if (<span class=\"supfact\">key</span> == (BIO *)Number) {\n      ERR_print_errors((BIO *)err);\n    } else {\n      if ((<span class=\"supfact\">file</span> == (char *)Number) &&\n          (<span class=\"supfact\">maybe_stdin</span> != Number)) {\n        setvbuf(_stdin, (char *)Number, Number, Number);\n        BIO_ctrl((BIO *)<span class=\"supfact\">key</span>, Number, Number, _stdin);\n      } else {\n        lVar1 = BIO_ctrl((BIO *)<span class=\"supfact\">key</span>, Number, Number,\n                         <span class=\"supfact\">file</span>);\n        if (lVar1 < Number) {\n          BIO_printf((BIO *)err, String, <span class=\"supfact\">key_descrip</span>,\n                     <span class=\"supfact\">file</span>);\n          ERR_print_errors((BIO *)err);\n          goto end;\n        }\n      }\n      if (format == Number) {\n        <span class=\"supfact\">pkey</span> = (EVP_PKEY *)d2i_PUBKEY_bio(\n            (BIO *)<span class=\"supfact\">key</span>, (EVP_PKEY **)Number);\n      } else if (format == Number) {\n        prVar2 =\n            d2i_RSAPublicKey_bio((BIO *)<span class=\"supfact\">key</span>, (RSA **)Number);\n        if (prVar2 == (rsa_st *)Number) {\n          <span class=\"supfact\">pkey</span> = (EVP_PKEY *)Number;\n        } else {\n          <span class=\"supfact\">pkey</span> = (EVP_PKEY *)EVP_PKEY_new();\n          if (<span class=\"supfact\">pkey</span> != (EVP_PKEY *)Number) {\n            EVP_PKEY_set1_RSA((EVP_PKEY *)<span class=\"supfact\">pkey</span>, prVar2);\n          }\n          RSA_free(prVar2);\n        }\n      } else if (format == Number) {\n        prVar2 = PEM_read_bio_RSAPublicKey((BIO *)<span class=\"supfact\">key</span>,\n                                           (RSA **)Number, password_callback,\n                                           &<span class=\"supfact\">cb_data</span>);\n        if (prVar2 == (rsa_st *)Number) {\n          <span class=\"supfact\">pkey</span> = (EVP_PKEY *)Number;\n        } else {\n          <span class=\"supfact\">pkey</span> = (EVP_PKEY *)EVP_PKEY_new();\n          if (<span class=\"supfact\">pkey</span> != (EVP_PKEY *)Number) {\n            EVP_PKEY_set1_RSA((EVP_PKEY *)<span class=\"supfact\">pkey</span>, prVar2);\n          }\n          RSA_free(prVar2);\n        }\n      } else if (format == Number) {\n        <span class=\"supfact\">pkey</span> = (EVP_PKEY *)PEM_read_bio_PUBKEY(\n            (BIO *)<span class=\"supfact\">key</span>, (EVP_PKEY **)Number, password_callback,\n            &<span class=\"supfact\">cb_data</span>);\n      } else if ((format == Number) || (format == Number)) {\n        <span class=\"supfact\">pkey</span> =\n            load_netscape_key(err, <span class=\"supfact\">key</span>, <span class=\"supfact\">file</span>,\n                              <span class=\"supfact\">key_descrip</span>, format);\n      } else if (format == Number) {\n        <span class=\"supfact\">pkey</span> =\n            (EVP_PKEY *)b2i_PublicKey_bio((BIO *)<span class=\"supfact\">key</span>);\n      } else {\n        BIO_printf((BIO *)err, String);\n      }\n    }\n  }\nend:\n  if (<span class=\"supfact\">key</span> != (BIO *)Number) {\n    BIO_free((BIO *)<span class=\"supfact\">key</span>);\n  }\n  if (<span class=\"supfact\">pkey</span> == (EVP_PKEY *)Number) {\n    BIO_printf((BIO *)err, String, <span class=\"supfact\">key_descrip</span>);\n  }\n  return <span class=\"supfact\">pkey</span>;\n}", "var": [{"name": "param_2", "type": "char * *", "pred_name": "file", "ref_name": "file", "ref_type": "char * *"}, {"name": "param_4", "type": "int", "pred_name": "__unk__", "ref_name": "maybe_stdin", "ref_type": "int"}, {"name": "param_6", "type": "ENGINE * *", "pred_name": "e", "ref_name": "e", "ref_type": "ENGINE * *"}, {"name": "param_7", "type": "char * *", "pred_name": "__unk__", "ref_name": "key_descrip", "ref_type": "char * *"}, {"name": "local_38", "type": "PW_CB_DATA", "pred_name": "cb_data", "ref_name": "cb_data", "ref_type": "PW_CB_DATA"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_28", "type": "RSA * *", "pred_name": "rsa", "ref_name": "rsa", "ref_type": "RSA * *"}, {"name": "local_20", "type": "RSA * *", "pred_name": "__unk__", "ref_name": "rsa_1", "ref_type": "RSA * *"}, {"name": "local_18", "type": "EVP_PKEY * *", "pred_name": "pkey", "ref_name": "pkey", "ref_type": "EVP_PKEY * *"}, {"name": "local_10", "type": "BIO * *", "pred_name": "key", "ref_name": "key", "ref_type": "BIO * *"}], "body_in_train": false}, {"repo_owner": "qiupq", "repo_name": "ffmpeg", "path": "qiupq/ffmpeg/21b57fba34a5621901c137739a252b406aa72d59ab1b75281ab85bb6148fefbf", "path_in_repo": "qiupq/ffmpeg//libavformat/mux.o", "objdump": "000000000000472f <av_write_uncoded_frame>:\n    472f:\t48 83 ec 28          \tsub    $0x28,%rsp\n    4733:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n    4738:\t89 74 24 14          \tmov    %esi,0x14(%rsp)\n    473c:\t48 89 54 24 08       \tmov    %rdx,0x8(%rsp)\n    4741:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n    4746:\t8b 74 24 14          \tmov    0x14(%rsp),%esi\n    474a:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    474f:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    4754:\t48 89 c7             \tmov    %rax,%rdi\n    4757:\te8 a7 fe ff ff       \tcall   4603 <av_write_uncoded_frame_internal>\n    475c:\t48 83 c4 28          \tadd    $0x28,%rsp\n    4760:\tc3                   \tret    ", "code_s": "void av_write_uncoded_frame(undefined8 param_1,\n                            undefined4 <span class=\"supfact\">param_2</span>,\n                            undefined8 <span class=\"supfact\">param_3</span>) {\n  FUN_00104603(param_1, <span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>,\n               Number);\n  return;\n}", "code_t": "int av_write_uncoded_frame(AVFormatContext *s, int <span class=\"supfact\">stream_index</span>,\n                           AVFrame *<span class=\"supfact\">frame</span>) {\n  int iVar1;\n  AVFrame *<span class=\"supfact\">frame</span> - local;\n  int <span class=\"supfact\">stream_index</span> - local;\n  AVFormatContext *s - local;\n  iVar1 = av_write_uncoded_frame_internal(s, <span class=\"supfact\">stream_index</span>,\n                                          <span class=\"supfact\">frame</span>, Number);\n  return iVar1;\n}", "var": [{"name": "param_2", "type": "int32_t", "pred_name": "len", "ref_name": "stream_index", "ref_type": "int"}, {"name": "param_3", "type": "QEMUSGList * *", "pred_name": "sg", "ref_name": "frame", "ref_type": "AVFrame * *"}], "body_in_train": false}, {"repo_owner": "DashW", "repo_name": "Ingenuity", "path": "DashW/Ingenuity/449b11873d23cdafe6019e168659cca8767448df50ba3f3149aa7affb0ea9e1c", "path_in_repo": "DashW/Ingenuity/Third Party/FreeImage3154/Source/LibTIFF4/tif_dirinfo.o", "objdump": "00000000000008dd <TIFFFieldWithName>:\n     8dd:\t55                   \tpush   %rbp\n     8de:\t48 89 e5             \tmov    %rsp,%rbp\n     8e1:\t48 83 ec 20          \tsub    $0x20,%rsp\n     8e5:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     8e9:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n     8ed:\t48 8b 4d e0          \tmov    -0x20(%rbp),%rcx\n     8f1:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     8f5:\tba 00 00 00 00       \tmov    $0x0,%edx\n     8fa:\t48 89 ce             \tmov    %rcx,%rsi\n     8fd:\t48 89 c7             \tmov    %rax,%rdi\n     900:\te8 00 00 00 00       \tcall   905 <TIFFFieldWithName+0x28>\n     905:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     909:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n     90e:\t75 2d                \tjne    93d <TIFFFieldWithName+0x60>\n     910:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     914:\t48 8b 80 b8 03 00 00 \tmov    0x3b8(%rax),%rax\n     91b:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n     91f:\t48 89 d1             \tmov    %rdx,%rcx\n     922:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 929 <TIFFFieldWithName+0x4c>\n     929:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 930 <TIFFFieldWithName+0x53>\n     930:\t48 89 c7             \tmov    %rax,%rdi\n     933:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     938:\te8 00 00 00 00       \tcall   93d <TIFFFieldWithName+0x60>\n     93d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     941:\tc9                   \tleave  \n     942:\tc3                   \tret    ", "code_s": "long TIFFFieldWithName(long param_1, undefined8 <span class=\"supfact\">param_2</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  <span class=\"supfact\">lVar1</span> =\n      _TIFFFindFieldByName(param_1, <span class=\"supfact\">param_2</span>, Number);\n  if (<span class=\"supfact\">lVar1</span> == Number) {\n    TIFFErrorExt(*(undefined8 *)(param_1 + Number), String, String,\n                 <span class=\"supfact\">param_2</span>);\n  }\n  return <span class=\"supfact\">lVar1</span>;\n}", "code_t": "TIFFField *TIFFFieldWithName(TIFF *tif, char *<span class=\"supfact\">field_name</span>) {\n  TIFFField *<span class=\"supfact\">pTVar1</span>;\n  char *<span class=\"supfact\">field_name</span> - local;\n  TIFF *tif - local;\n  TIFFField *fip;\n  <span class=\"supfact\">pTVar1</span> =\n      _TIFFFindFieldByName(tif, <span class=\"supfact\">field_name</span>, TIFF_NOTYPE);\n  if (<span class=\"supfact\">pTVar1</span> == (TIFFField *)Number) {\n    TIFFErrorExt(tif->tif_clientdata, String, String,\n                 <span class=\"supfact\">field_name</span>);\n  }\n  return <span class=\"supfact\">pTVar1</span>;\n}", "var": [{"name": "param_2", "type": "char * *", "pred_name": "field_name", "ref_name": "field_name", "ref_type": "char * *"}, {"name": "lVar1", "type": "TIFFFieldInfo * *", "pred_name": "pTVar1", "ref_name": "pTVar1", "ref_type": "TIFFField * *"}], "body_in_train": false}, {"repo_owner": "sreejithcools", "repo_name": "opensourceworkspace", "path": "sreejithcools/opensourceworkspace/0b1d41075ceeb613d97ce137b564e5495bba34f37a7888eb5888d0167f5d5e21", "path_in_repo": "sreejithcools/opensourceworkspace/xuggle-xuggler-iStreamLife/captive/openssl/csrc/apps/apps.o", "objdump": "00000000000022e2 <print_name>:\n    22e2:\t55                   \tpush   %rbp\n    22e3:\t48 89 e5             \tmov    %rsp,%rbp\n    22e6:\t48 83 ec 30          \tsub    $0x30,%rsp\n    22ea:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    22ee:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    22f2:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    22f6:\t48 89 4d d0          \tmov    %rcx,-0x30(%rbp)\n    22fa:\tc6 45 ff 00          \tmovb   $0x0,-0x1(%rbp)\n    22fe:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n    2305:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n    230a:\t74 13                \tje     231f <print_name+0x3d>\n    230c:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    2310:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2314:\t48 89 d6             \tmov    %rdx,%rsi\n    2317:\t48 89 c7             \tmov    %rax,%rdi\n    231a:\te8 00 00 00 00       \tcall   231f <print_name+0x3d>\n    231f:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    2323:\t25 00 00 0f 00       \tand    $0xf0000,%eax\n    2328:\t48 3d 00 00 04 00    \tcmp    $0x40000,%rax\n    232e:\t75 0b                \tjne    233b <print_name+0x59>\n    2330:\tc6 45 ff 01          \tmovb   $0x1,-0x1(%rbp)\n    2334:\tc7 45 f8 04 00 00 00 \tmovl   $0x4,-0x8(%rbp)\n    233b:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n    2340:\t75 4c                \tjne    238e <print_name+0xac>\n    2342:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    2346:\tba 00 00 00 00       \tmov    $0x0,%edx\n    234b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2350:\t48 89 c7             \tmov    %rax,%rdi\n    2353:\te8 00 00 00 00       \tcall   2358 <print_name+0x76>\n    2358:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    235c:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    2360:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2364:\t48 89 d6             \tmov    %rdx,%rsi\n    2367:\t48 89 c7             \tmov    %rax,%rdi\n    236a:\te8 00 00 00 00       \tcall   236f <print_name+0x8d>\n    236f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2373:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    2378:\t48 89 c7             \tmov    %rax,%rdi\n    237b:\te8 00 00 00 00       \tcall   2380 <print_name+0x9e>\n    2380:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    2384:\t48 89 c7             \tmov    %rax,%rdi\n    2387:\te8 00 00 00 00       \tcall   238c <print_name+0xaa>\n    238c:\teb 3f                \tjmp    23cd <print_name+0xeb>\n    238e:\t80 7d ff 00          \tcmpb   $0x0,-0x1(%rbp)\n    2392:\t74 11                \tje     23a5 <print_name+0xc3>\n    2394:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2398:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    239d:\t48 89 c7             \tmov    %rax,%rdi\n    23a0:\te8 00 00 00 00       \tcall   23a5 <print_name+0xc3>\n    23a5:\t48 8b 4d d0          \tmov    -0x30(%rbp),%rcx\n    23a9:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    23ac:\t48 8b 75 d8          \tmov    -0x28(%rbp),%rsi\n    23b0:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    23b4:\t48 89 c7             \tmov    %rax,%rdi\n    23b7:\te8 00 00 00 00       \tcall   23bc <print_name+0xda>\n    23bc:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    23c0:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    23c5:\t48 89 c7             \tmov    %rax,%rdi\n    23c8:\te8 00 00 00 00       \tcall   23cd <print_name+0xeb>\n    23cd:\t90                   \tnop\n    23ce:\tc9                   \tleave  \n    23cf:\tc3                   \tret    ", "code_s": "void print_name(BIO *param_1, char *<span class=\"supfact\">param_2</span>, X509_NAME *param_3,\n                ulong <span class=\"supfact\">param_4</span>) {\n  char *buf;\n  bool <span class=\"supfact\">bVar1</span>;\n  int <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = Number;\n  if (<span class=\"supfact\">param_2</span> != (char *)Number) {\n    BIO_puts(param_1, <span class=\"supfact\">param_2</span>);\n  }\n  <span class=\"supfact\">bVar1</span> = ((uint)<span class=\"supfact\">param_4</span> & Number) == Number;\n  if (<span class=\"supfact\">bVar1</span>) {\n    <span class=\"supfact\">local_10</span> = Number;\n  }\n  if (<span class=\"supfact\">param_4</span> == Number) {\n    buf = X509_NAME_oneline(param_3, (char *)Number, Number);\n    BIO_puts(param_1, buf);\n    BIO_puts(param_1, String);\n    CRYPTO_free(buf);\n  } else {\n    if (<span class=\"supfact\">bVar1</span>) {\n      BIO_puts(param_1, String);\n    }\n    X509_NAME_print_ex(param_1, param_3, <span class=\"supfact\">local_10</span>,\n                       <span class=\"supfact\">param_4</span>);\n    BIO_puts(param_1, String);\n  }\n  return;\n}", "code_t": "void print_name(BIO *out, char *<span class=\"supfact\">title</span>, X509_NAME *nm,\n                ulong <span class=\"supfact\">lflags</span>) {\n  char *buf_00;\n  bool <span class=\"supfact\">bVar1</span>;\n  ulong <span class=\"supfact\">lflags</span> - local;\n  X509_NAME *nm - local;\n  char *<span class=\"supfact\">title</span> - local;\n  BIO *out - local;\n  char *buf;\n  int <span class=\"supfact\">indent</span>;\n  char mline;\n  <span class=\"supfact\">indent</span> = Number;\n  if (<span class=\"supfact\">title</span> != (char *)Number) {\n    BIO_puts((BIO *)out, <span class=\"supfact\">title</span>);\n  }\n  <span class=\"supfact\">bVar1</span> = ((uint)<span class=\"supfact\">lflags</span> & Number) == Number;\n  if (<span class=\"supfact\">bVar1</span>) {\n    <span class=\"supfact\">indent</span> = Number;\n  }\n  if (<span class=\"supfact\">lflags</span> == Number) {\n    buf_00 = X509_NAME_oneline((X509_NAME *)nm, (char *)Number, Number);\n    BIO_puts((BIO *)out, buf_00);\n    BIO_puts((BIO *)out, String);\n    CRYPTO_free(buf_00);\n  } else {\n    if (<span class=\"supfact\">bVar1</span>) {\n      BIO_puts((BIO *)out, String);\n    }\n    X509_NAME_print_ex((BIO *)out, (X509_NAME *)nm, <span class=\"supfact\">indent</span>,\n                       <span class=\"supfact\">lflags</span>);\n    BIO_puts((BIO *)out, String);\n  }\n  return;\n}", "var": [{"name": "param_2", "type": "char * *", "pred_name": "title", "ref_name": "title", "ref_type": "char * *"}, {"name": "param_4", "type": "ulong", "pred_name": "__unk__", "ref_name": "lflags", "ref_type": "ulong"}, {"name": "bVar1", "type": "bool", "pred_name": "bVar1", "ref_name": "bVar1", "ref_type": "bool"}, {"name": "local_10", "type": "int", "pred_name": "indent", "ref_name": "indent", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "eh2k", "repo_name": "teapot-viewer", "path": "eh2k/teapot-viewer/01e54f0ad817f53763b88f0c84c28f44cf5c09bd98d84e1b61aa7da1df951c62", "path_in_repo": "eh2k/teapot-viewer/SceneGraph/minizip/unzip.o", "objdump": "0000000000001159 <unzOpen64>:\n    1159:\t55                   \tpush   %rbp\n    115a:\t48 89 e5             \tmov    %rsp,%rbp\n    115d:\t48 83 ec 10          \tsub    $0x10,%rsp\n    1161:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    1165:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1169:\tba 01 00 00 00       \tmov    $0x1,%edx\n    116e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1173:\t48 89 c7             \tmov    %rax,%rdi\n    1176:\te8 3a f8 ff ff       \tcall   9b5 <unzOpenInternal>\n    117b:\tc9                   \tleave  \n    117c:\tc3                   \tret    ", "code_s": "void unzOpen64(undefined8 <span class=\"supfact\">param_1</span>) {\n  FUN_001009b5(<span class=\"supfact\">param_1</span>, Number, Number);\n  return;\n}", "code_t": "unzFile unzOpen64(void *<span class=\"supfact\">path</span>) {\n  unzFile pvVar1;\n  void *<span class=\"supfact\">path</span> - local;\n  pvVar1 = unzOpenInternal(<span class=\"supfact\">path</span>,\n                           (zlib_filefunc64_32_def *)Number, Number);\n  return pvVar1;\n}", "var": [{"name": "param_1", "type": "void * *", "pred_name": "path", "ref_name": "path", "ref_type": "void * *"}], "body_in_train": true}, {"repo_owner": "RSB4760", "repo_name": "apq8016_external_elfutils", "path": "RSB4760/apq8016_external_elfutils/8f7b12949f86d79be5307a7da19431644a8cfe5d4820c1b1f10e734604306fc2", "path_in_repo": "RSB4760/apq8016_external_elfutils/src/src/size", "objdump": "", "code_s": "int strcmp(char *__s1, char *__s2) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_strcmp_00405090)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int strcmp(char *__s1, char *__s2) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_strcmp_00405090)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "open-ragnarok", "repo_name": "open-ragnarok", "path": "open-ragnarok/open-ragnarok/f162f79bf37a7758d9661f691c489178d7d9e039fc6a26a0c2a226bd27f9a465", "path_in_repo": "open-ragnarok/open-ragnarok/ronet/.objs/packets/pkt_keepalive.o", "objdump": "", "code_s": "undefined8 __thiscall ronet pktKeepAlive\nDecode(pktKeepAlive *this, ucBuffer *<span class=\"supfact\">param_1</span>) {\n  char <span class=\"supfact\">cVar1</span>;\n  uint uVar2;\n  undefined8 <span class=\"supfact\">uVar3</span>;\n  uint <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">cVar1</span> = ronet Packet CheckID((ucBuffer *)this);\n  if (<span class=\"supfact\">cVar1</span> == String) {\n    uVar2 = Buffer<unsigned_char, Number> dataSize(\n        (Buffer<unsigned_char, Number> *)<span class=\"supfact\">param_1</span>);\n    if (uVar2 < Number) {\n      <span class=\"supfact\">uVar3</span> = Number;\n    } else {\n      <span class=\"supfact\">local_c</span> = Number;\n      Buffer<unsigned_char, Number> ignore(\n          (Buffer<unsigned_char, Number> *)<span class=\"supfact\">param_1</span>,\n          &<span class=\"supfact\">local_c</span>);\n      ronet ucBuffer operator>>(<span class=\"supfact\">param_1</span>,\n                                (uint *)(this + Number));\n      <span class=\"supfact\">uVar3</span> = Number;\n    }\n  } else {\n    <span class=\"supfact\">uVar3</span> = Number;\n  }\n  return <span class=\"supfact\">uVar3</span>;\n}", "code_t": "bool __thiscall ronet pktKeepAlive Decode(pktKeepAlive *this,\n                                          ucBuffer *<span class=\"supfact\">buf</span>) {\n  char cVar1;\n  bool bVar2;\n  uint <span class=\"supfact\">uVar3</span>;\n  ucBuffer *<span class=\"supfact\">buf</span> - local;\n  pktKeepAlive *this - local;\n  uint <span class=\"supfact\">local_c</span>;\n  cVar1 = ronet Packet CheckID((ucBuffer *)this);\n  if (cVar1 == String) {\n    <span class=\"supfact\">uVar3</span> = Buffer<unsigned_char, _2048> dataSize(\n        &<span class=\"supfact\">buf</span>->super_Buffer<unsigned_char, _2048>);\n    if (<span class=\"supfact\">uVar3</span> < Number) {\n      bVar2 = false;\n    } else {\n      <span class=\"supfact\">local_c</span> = Number;\n      Buffer<unsigned_char, _2048> ignore(\n          &<span class=\"supfact\">buf</span>->super_Buffer<unsigned_char, _2048>,\n          &<span class=\"supfact\">local_c</span>);\n      ronet ucBuffer operator>>(<span class=\"supfact\">buf</span>, &this->account_id);\n      bVar2 = true;\n    }\n  } else {\n    bVar2 = false;\n  }\n  return bVar2;\n}", "var": [{"name": "param_1", "type": "sockaddr_storage * *", "pred_name": "ss", "ref_name": "buf", "ref_type": "ucBuffer * *"}, {"name": "cVar1", "type": "char", "pred_name": "cVar1", "ref_name": "", "ref_type": "disappear"}, {"name": "uVar3", "type": "uchar * *", "pred_name": "puVar3", "ref_name": "uVar3", "ref_type": "uint"}, {"name": "local_c", "type": "uint", "pred_name": "i", "ref_name": "local_c", "ref_type": "uint"}], "body_in_train": false}]