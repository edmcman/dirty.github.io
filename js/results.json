[{"repo_owner": "OS2World", "repo_name": "LIB-MM-libvpx", "path": "OS2World/LIB-MM-libvpx/a7088cfebd81848840fd3c4b6142aa0c7e187a711be54a9f44ccdb6471c56511", "path_in_repo": "OS2World/LIB-MM-libvpx/src/third_party/googletest/src/make/gtest-all.o", "objdump": "", "code_s": "void testing internal posix StrNCpy(char *<span class=\"supfact\">param_1</span>,\n                                    char *<span class=\"supfact\">param_2</span>,\n                                    ulong <span class=\"supfact\">param_3</span>) {\n  strncpy(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n          <span class=\"supfact\">param_3</span>);\n  return;\n}", "code_t": "char *testing internal posix StrNCpy(char *<span class=\"supfact\">dest</span>,\n                                     char *<span class=\"supfact\">src</span>,\n                                     size_t <span class=\"supfact\">n</span>) {\n  char *pcVar1;\n  size_t <span class=\"supfact\">n</span> - local;\n  char *<span class=\"supfact\">src</span> - local;\n  char *<span class=\"supfact\">dest</span> - local;\n  pcVar1 =\n      strncpy(<span class=\"supfact\">dest</span>, <span class=\"supfact\">src</span>, <span class=\"supfact\">n</span>);\n  return pcVar1;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "dest", "ref_name": "dest", "ref_type": "char * *"}, {"name": "param_2", "type": "char * *", "pred_name": "src", "ref_name": "src", "ref_type": "char * *"}, {"name": "param_3", "type": "size_t", "pred_name": "size", "ref_name": "n", "ref_type": "size_t"}], "body_in_train": false}, {"repo_owner": "VangelisTsiatouras", "repo_name": "software-development-di", "path": "VangelisTsiatouras/software-development-di/9a49f6dfd22150c2e96248a84c78be2be682de2997f86dcbe49e3b2c7e80f9b6", "path_in_repo": "VangelisTsiatouras/software-development-di/part_2/src/ngrams", "objdump": "", "code_s": "char *strtok(char *__s, char *__delim) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strtok_0040a0c8)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *strtok(char *__s, char *__delim) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strtok_0040a0c8)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "webosose", "repo_name": "gst-libav", "path": "webosose/gst-libav/c7c39d9cc9f169072de8bc09a7fa0d974b9ed3e37314e65b26a2d02a48fb2def", "path_in_repo": "webosose/gst-libav/gst-libs/ext/libav/libavcodec/x86/hevcdsp_init.o", "objdump": "0000000000023324 <ff_hevc_put_hevc_bi_w_epel_v8_12_sse4>:\n   23324:\t48 81 ec c8 23 00 00 \tsub    $0x23c8,%rsp\n   2332b:\t48 89 7c 24 28       \tmov    %rdi,0x28(%rsp)\n   23330:\t48 89 74 24 20       \tmov    %rsi,0x20(%rsp)\n   23335:\t48 89 54 24 18       \tmov    %rdx,0x18(%rsp)\n   2333a:\t48 89 4c 24 10       \tmov    %rcx,0x10(%rsp)\n   2333f:\t4c 89 44 24 08       \tmov    %r8,0x8(%rsp)\n   23344:\t44 89 4c 24 04       \tmov    %r9d,0x4(%rsp)\n   23349:\t48 8d 44 24 30       \tlea    0x30(%rsp),%rax\n   2334e:\t48 89 84 24 b8 23 00 \tmov    %rax,0x23b8(%rsp)\n   23355:\t00 \n   23356:\t4c 8b 8c 24 00 24 00 \tmov    0x2400(%rsp),%r9\n   2335d:\t00 \n   2335e:\t4c 8b 84 24 f8 23 00 \tmov    0x23f8(%rsp),%r8\n   23365:\t00 \n   23366:\t8b 4c 24 04          \tmov    0x4(%rsp),%ecx\n   2336a:\t48 8b 54 24 10       \tmov    0x10(%rsp),%rdx\n   2336f:\t48 8b 74 24 18       \tmov    0x18(%rsp),%rsi\n   23374:\t48 8b 84 24 b8 23 00 \tmov    0x23b8(%rsp),%rax\n   2337b:\t00 \n   2337c:\t48 83 ec 08          \tsub    $0x8,%rsp\n   23380:\t8b bc 24 10 24 00 00 \tmov    0x2410(%rsp),%edi\n   23387:\t57                   \tpush   %rdi\n   23388:\t48 89 c7             \tmov    %rax,%rdi\n   2338b:\te8 00 00 00 00       \tcall   23390 <ff_hevc_put_hevc_bi_w_epel_v8_12_sse4+0x6c>\n   23390:\t48 83 c4 10          \tadd    $0x10,%rsp\n   23394:\t44 8b 44 24 04       \tmov    0x4(%rsp),%r8d\n   23399:\t48 8b 4c 24 08       \tmov    0x8(%rsp),%rcx\n   2339e:\t48 8b 94 24 b8 23 00 \tmov    0x23b8(%rsp),%rdx\n   233a5:\t00 \n   233a6:\t48 8b 74 24 20       \tmov    0x20(%rsp),%rsi\n   233ab:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n   233b0:\t8b bc 24 f0 23 00 00 \tmov    0x23f0(%rsp),%edi\n   233b7:\t57                   \tpush   %rdi\n   233b8:\t8b bc 24 f0 23 00 00 \tmov    0x23f0(%rsp),%edi\n   233bf:\t57                   \tpush   %rdi\n   233c0:\t8b bc 24 f0 23 00 00 \tmov    0x23f0(%rsp),%edi\n   233c7:\t57                   \tpush   %rdi\n   233c8:\t8b bc 24 f0 23 00 00 \tmov    0x23f0(%rsp),%edi\n   233cf:\t57                   \tpush   %rdi\n   233d0:\t44 8b 8c 24 f0 23 00 \tmov    0x23f0(%rsp),%r9d\n   233d7:\t00 \n   233d8:\t48 89 c7             \tmov    %rax,%rdi\n   233db:\te8 00 00 00 00       \tcall   233e0 <ff_hevc_put_hevc_bi_w_epel_v8_12_sse4+0xbc>\n   233e0:\t48 83 c4 20          \tadd    $0x20,%rsp\n   233e4:\t90                   \tnop\n   233e5:\t48 81 c4 c8 23 00 00 \tadd    $0x23c8,%rsp\n   233ec:\tc3                   \tret    ", "code_s": "void ff_hevc_put_hevc_bi_w_epel_v8_12_sse4(\n    undefined8 <span class=\"supfact\">param_1</span>, undefined8 <span class=\"supfact\">param_2</span>,\n    undefined8 <span class=\"supfact\">param_3</span>, undefined8 <span class=\"supfact\">param_4</span>,\n    undefined8 <span class=\"supfact\">param_5</span>, undefined4 <span class=\"supfact\">param_6</span>,\n    undefined4 <span class=\"supfact\">param_7</span>, undefined4 <span class=\"supfact\">param_8</span>,\n    undefined4 <span class=\"supfact\">param_9</span>, undefined4 <span class=\"supfact\">param_10</span>,\n    undefined4 <span class=\"supfact\">param_11</span>, undefined8 <span class=\"supfact\">param_12</span>,\n    undefined8 <span class=\"supfact\">param_13</span>, undefined4 <span class=\"supfact\">param_14</span>) {\n  undefined <span class=\"supfact\">local_2398</span>[Number];\n  undefined *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_2398</span>;\n  ff_hevc_put_hevc_epel_v8_12_sse4(\n      <span class=\"supfact\">local_10</span>, <span class=\"supfact\">param_3</span>,\n      <span class=\"supfact\">param_4</span>, <span class=\"supfact\">param_6</span>,\n      <span class=\"supfact\">param_12</span>, <span class=\"supfact\">param_13</span>,\n      <span class=\"supfact\">param_14</span>);\n  ff_hevc_put_hevc_bi_w8_12_sse4(\n      <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n      <span class=\"supfact\">local_10</span>, <span class=\"supfact\">param_5</span>,\n      <span class=\"supfact\">param_6</span>, <span class=\"supfact\">param_7</span>, <span class=\"supfact\">param_8</span>,\n      <span class=\"supfact\">param_9</span>, <span class=\"supfact\">param_10</span>,\n      <span class=\"supfact\">param_11</span>);\n  return;\n}", "code_t": "void ff_hevc_put_hevc_bi_w_epel_v8_12_sse4(\n    uint8_t *<span class=\"supfact\">_dst</span>, ptrdiff_t <span class=\"supfact\">_dststride</span>,\n    uint8_t *<span class=\"supfact\">_src</span>, ptrdiff_t <span class=\"supfact\">_srcstride</span>,\n    int16_t *<span class=\"supfact\">_src2</span>, int <span class=\"supfact\">height</span>,\n    int <span class=\"supfact\">denom</span>, int <span class=\"supfact\">_wx0</span>,\n    int <span class=\"supfact\">_wx1</span>, int <span class=\"supfact\">_ox0</span>,\n    int <span class=\"supfact\">_ox1</span>, intptr_t <span class=\"supfact\">mx</span>,\n    intptr_t <span class=\"supfact\">my</span>, int <span class=\"supfact\">width</span>) {\n  int <span class=\"supfact\">height</span> - local;\n  int16_t *<span class=\"supfact\">_src2</span> - local;\n  ptrdiff_t <span class=\"supfact\">_srcstride</span> - local;\n  uint8_t *<span class=\"supfact\">_src</span> - local;\n  ptrdiff_t <span class=\"supfact\">_dststride</span> - local;\n  uint8_t *<span class=\"supfact\">_dst</span> - local;\n  int16_t <span class=\"supfact\">la_temp</span>[Number];\n  int16_t *<span class=\"supfact\">temp</span>;\n  ff_hevc_put_hevc_epel_v8_12_sse4(\n      <span class=\"supfact\">la_temp</span>, <span class=\"supfact\">_src</span>, <span class=\"supfact\">_srcstride</span>,\n      <span class=\"supfact\">height</span>, <span class=\"supfact\">mx</span>, <span class=\"supfact\">my</span>,\n      <span class=\"supfact\">width</span>);\n  ff_hevc_put_hevc_bi_w8_12_sse4(\n      <span class=\"supfact\">_dst</span>, <span class=\"supfact\">_dststride</span>, <span class=\"supfact\">la_temp</span>,\n      <span class=\"supfact\">_src2</span>, <span class=\"supfact\">height</span>, <span class=\"supfact\">denom</span>,\n      <span class=\"supfact\">_wx0</span>, <span class=\"supfact\">_wx1</span>, <span class=\"supfact\">_ox0</span>,\n      <span class=\"supfact\">_ox1</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "uint8_t * *", "pred_name": "_dst", "ref_name": "_dst", "ref_type": "uint8_t * *"}, {"name": "param_2", "type": "ptrdiff_t", "pred_name": "_dststride", "ref_name": "_dststride", "ref_type": "ptrdiff_t"}, {"name": "param_3", "type": "uint8_t * *", "pred_name": "_src", "ref_name": "_src", "ref_type": "uint8_t * *"}, {"name": "param_4", "type": "ptrdiff_t", "pred_name": "_srcstride", "ref_name": "_srcstride", "ref_type": "ptrdiff_t"}, {"name": "param_5", "type": "int16_t * *", "pred_name": "_src2", "ref_name": "_src2", "ref_type": "int16_t * *"}, {"name": "param_6", "type": "int", "pred_name": "height", "ref_name": "height", "ref_type": "int"}, {"name": "param_7", "type": "int", "pred_name": "denom", "ref_name": "denom", "ref_type": "int"}, {"name": "param_8", "type": "int", "pred_name": "_wx0", "ref_name": "_wx0", "ref_type": "int"}, {"name": "param_9", "type": "int", "pred_name": "_wx1", "ref_name": "_wx1", "ref_type": "int"}, {"name": "param_10", "type": "int", "pred_name": "_ox0", "ref_name": "_ox0", "ref_type": "int"}, {"name": "param_11", "type": "int", "pred_name": "_ox1", "ref_name": "_ox1", "ref_type": "int"}, {"name": "param_12", "type": "intptr_t", "pred_name": "mx", "ref_name": "mx", "ref_type": "intptr_t"}, {"name": "param_13", "type": "intptr_t", "pred_name": "my", "ref_name": "my", "ref_type": "intptr_t"}, {"name": "param_14", "type": "int", "pred_name": "width", "ref_name": "width", "ref_type": "int"}, {"name": "local_2398", "type": "int16_t[4544][4544]", "pred_name": "la_temp", "ref_name": "la_temp", "ref_type": "int16_t[4544][4544]"}, {"name": "local_10", "type": "int16_t * *", "pred_name": "temp", "ref_name": "temp", "ref_type": "int16_t * *"}], "body_in_train": true}, {"repo_owner": "davsinghm", "repo_name": "4E2", "path": "davsinghm/4E2/122a4573d9dbcfa85716176a76d81f6b2c0a6ab2ec367a108163847bec2ee82a", "path_in_repo": "davsinghm/4E2/FFmpeg/libavutil/fifo.o", "objdump": "0000000000000161 <av_fifo_reset>:\n 161:\t48 89 7c 24 f8       \tmov    %rdi,-0x8(%rsp)\n 166:\t48 8b 44 24 f8       \tmov    -0x8(%rsp),%rax\n 16b:\t48 8b 10             \tmov    (%rax),%rdx\n 16e:\t48 8b 44 24 f8       \tmov    -0x8(%rsp),%rax\n 173:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n 177:\t48 8b 44 24 f8       \tmov    -0x8(%rsp),%rax\n 17c:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n 180:\t48 8b 44 24 f8       \tmov    -0x8(%rsp),%rax\n 185:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n 189:\t48 8b 44 24 f8       \tmov    -0x8(%rsp),%rax\n 18e:\tc7 40 20 00 00 00 00 \tmovl   $0x0,0x20(%rax)\n 195:\t48 8b 44 24 f8       \tmov    -0x8(%rsp),%rax\n 19a:\t8b 50 20             \tmov    0x20(%rax),%edx\n 19d:\t48 8b 44 24 f8       \tmov    -0x8(%rsp),%rax\n 1a2:\t89 50 24             \tmov    %edx,0x24(%rax)\n 1a5:\t90                   \tnop\n 1a6:\tc3                   \tret    ", "code_s": "void av_fifo_reset(undefined8 *<span class=\"supfact\">param_1</span>) {\n  <span class=\"supfact\">param_1</span>[Number] = *<span class=\"supfact\">param_1</span>;\n  <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">param_1</span>[Number];\n  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  *(undefined4 *)((long)<span class=\"supfact\">param_1</span> + Number) =\n      *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n  return;\n}", "code_t": "void av_fifo_reset(AVFifoBuffer *<span class=\"supfact\">f</span>) {\n  AVFifoBuffer *<span class=\"supfact\">f</span> - local;\n  <span class=\"supfact\">f</span> - &gt;\n  rptr = <span class=\"supfact\">f</span> - &gt;\n  buffer;\n  <span class=\"supfact\">f</span> - &gt;\n  wptr = <span class=\"supfact\">f</span> - &gt;\n  rptr;\n  <span class=\"supfact\">f</span> - &gt;\n  rndx = Number;\n  <span class=\"supfact\">f</span> - &gt;\n  wndx = <span class=\"supfact\">f</span> - &gt;\n  rndx;\n  return;\n}", "var": [{"name": "param_1", "type": "AVFifoBuffer * *", "pred_name": "f", "ref_name": "f", "ref_type": "AVFifoBuffer * *"}], "body_in_train": true}, {"repo_owner": "lattera", "repo_name": "dd-wrt", "path": "lattera/dd-wrt/1abc9879fb5229b98fb8f3df63da49397b5ccb6c9aa0214d2cc6602ece5e7953", "path_in_repo": "lattera/dd-wrt/trunk/src/others/squashfs-3.2-r2/mksquashfs.o", "objdump": "000000000000597e <add_dir>:\n    597e:\t55                   \tpush   %rbp\n    597f:\t48 89 e5             \tmov    %rsp,%rbp\n    5982:\t48 81 ec 50 01 00 00 \tsub    $0x150,%rsp\n    5989:\t48 89 bd c8 fe ff ff \tmov    %rdi,-0x138(%rbp)\n    5990:\t89 b5 c4 fe ff ff    \tmov    %esi,-0x13c(%rbp)\n    5996:\t48 89 95 b8 fe ff ff \tmov    %rdx,-0x148(%rbp)\n    599d:\t89 8d c0 fe ff ff    \tmov    %ecx,-0x140(%rbp)\n    59a3:\t4c 89 85 b0 fe ff ff \tmov    %r8,-0x150(%rbp)\n    59aa:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n    59b1:\t48 c1 f8 10          \tsar    $0x10,%rax\n    59b5:\t89 85 54 ff ff ff    \tmov    %eax,-0xac(%rbp)\n    59bb:\t48 8b 85 c8 fe ff ff \tmov    -0x138(%rbp),%rax\n    59c2:\t25 ff ff 00 00       \tand    $0xffff,%eax\n    59c7:\t89 85 50 ff ff ff    \tmov    %eax,-0xb0(%rbp)\n    59cd:\t48 8b 85 b8 fe ff ff \tmov    -0x148(%rbp),%rax\n    59d4:\t48 89 c7             \tmov    %rax,%rdi\n    59d7:\te8 00 00 00 00       \tcall   59dc <add_dir+0x5e>\n    59dc:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    59df:\t81 7d fc 00 01 00 00 \tcmpl   $0x100,-0x4(%rbp)\n    59e6:\t76 25                \tjbe    5a0d <add_dir+0x8f>\n    59e8:\tc7 45 fc 00 01 00 00 \tmovl   $0x100,-0x4(%rbp)\n    59ef:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 59f6 <add_dir+0x78>\n    59f6:\tba 00 01 00 00       \tmov    $0x100,%edx\n    59fb:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    5a00:\t48 89 c7             \tmov    %rax,%rdi\n    5a03:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5a08:\te8 00 00 00 00       \tcall   5a0d <add_dir+0x8f>\n    5a0d:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5a14:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    5a18:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    5a1b:\t48 83 c2 0e          \tadd    $0xe,%rdx\n    5a1f:\t48 8d 0c 10          \tlea    (%rax,%rdx,1),%rcx\n    5a23:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5a2a:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    5a2e:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5a35:\t8b 40 04             \tmov    0x4(%rax),%eax\n    5a38:\t89 c0                \tmov    %eax,%eax\n    5a3a:\t48 01 d0             \tadd    %rdx,%rax\n    5a3d:\t48 39 c1             \tcmp    %rax,%rcx\n    5a40:\t0f 82 76 01 00 00    \tjb     5bbc <add_dir+0x23e>\n    5a46:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5a4d:\t8b 40 04             \tmov    0x4(%rax),%eax\n    5a50:\t8d 90 00 20 00 00    \tlea    0x2000(%rax),%edx\n    5a56:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5a5d:\t89 50 04             \tmov    %edx,0x4(%rax)\n    5a60:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5a67:\t8b 40 04             \tmov    0x4(%rax),%eax\n    5a6a:\t89 c2                \tmov    %eax,%edx\n    5a6c:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5a73:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    5a77:\t48 89 d6             \tmov    %rdx,%rsi\n    5a7a:\t48 89 c7             \tmov    %rax,%rdi\n    5a7d:\te8 00 00 00 00       \tcall   5a82 <add_dir+0x104>\n    5a82:\t48 89 85 48 ff ff ff \tmov    %rax,-0xb8(%rbp)\n    5a89:\t48 83 bd 48 ff ff ff \tcmpq   $0x0,-0xb8(%rbp)\n    5a90:\t00 \n    5a91:\t75 6b                \tjne    5afe <add_dir+0x180>\n    5a93:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5a9a <add_dir+0x11c>\n    5a9a:\t48 89 c1             \tmov    %rax,%rcx\n    5a9d:\tba 38 00 00 00       \tmov    $0x38,%edx\n    5aa2:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    5aa7:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    5aac:\te8 00 00 00 00       \tcall   5ab1 <add_dir+0x133>\n    5ab1:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 5ab7 <add_dir+0x139>\n    5ab7:\t85 c0                \ttest   %eax,%eax\n    5ab9:\t74 0a                \tje     5ac5 <add_dir+0x147>\n    5abb:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5ac0:\te8 00 00 00 00       \tcall   5ac5 <add_dir+0x147>\n    5ac5:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 5acb <add_dir+0x14d>\n    5acb:\t85 c0                \ttest   %eax,%eax\n    5acd:\t74 25                \tje     5af4 <add_dir+0x176>\n    5acf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5ad6 <add_dir+0x158>\n    5ad6:\t48 85 c0             \ttest   %rax,%rax\n    5ad9:\t74 19                \tje     5af4 <add_dir+0x176>\n    5adb:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 5ae1 <add_dir+0x163>\n    5ae1:\t85 c0                \ttest   %eax,%eax\n    5ae3:\t75 0f                \tjne    5af4 <add_dir+0x176>\n    5ae5:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5aec <add_dir+0x16e>\n    5aec:\t48 89 c7             \tmov    %rax,%rdi\n    5aef:\te8 00 00 00 00       \tcall   5af4 <add_dir+0x176>\n    5af4:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    5af9:\te8 00 00 00 00       \tcall   5afe <add_dir+0x180>\n    5afe:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5b05:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n    5b09:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5b10:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    5b14:\t48 29 c2             \tsub    %rax,%rdx\n    5b17:\t48 89 d0             \tmov    %rdx,%rax\n    5b1a:\t48 89 c2             \tmov    %rax,%rdx\n    5b1d:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    5b24:\t48 01 c2             \tadd    %rax,%rdx\n    5b27:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5b2e:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n    5b32:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5b39:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    5b3d:\t48 85 c0             \ttest   %rax,%rax\n    5b40:\t74 34                \tje     5b76 <add_dir+0x1f8>\n    5b42:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5b49:\t48 8b 50 20          \tmov    0x20(%rax),%rdx\n    5b4d:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5b54:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    5b58:\t48 29 c2             \tsub    %rax,%rdx\n    5b5b:\t48 89 d0             \tmov    %rdx,%rax\n    5b5e:\t48 89 c2             \tmov    %rax,%rdx\n    5b61:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    5b68:\t48 01 c2             \tadd    %rax,%rdx\n    5b6b:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5b72:\t48 89 50 20          \tmov    %rdx,0x20(%rax)\n    5b76:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5b7d:\t48 8b 50 38          \tmov    0x38(%rax),%rdx\n    5b81:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5b88:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    5b8c:\t48 29 c2             \tsub    %rax,%rdx\n    5b8f:\t48 89 d0             \tmov    %rdx,%rax\n    5b92:\t48 89 c2             \tmov    %rax,%rdx\n    5b95:\t48 8b 85 48 ff ff ff \tmov    -0xb8(%rbp),%rax\n    5b9c:\t48 01 c2             \tadd    %rax,%rdx\n    5b9f:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5ba6:\t48 89 50 38          \tmov    %rdx,0x38(%rax)\n    5baa:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5bb1:\t48 8b 95 48 ff ff ff \tmov    -0xb8(%rbp),%rdx\n    5bb8:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n    5bbc:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5bc3:\t8b 40 18             \tmov    0x18(%rax),%eax\n    5bc6:\t3d 00 01 00 00       \tcmp    $0x100,%eax\n    5bcb:\t0f 84 97 00 00 00    \tje     5c68 <add_dir+0x2ea>\n    5bd1:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5bd8:\t8b 00                \tmov    (%rax),%eax\n    5bda:\t39 85 54 ff ff ff    \tcmp    %eax,-0xac(%rbp)\n    5be0:\t0f 85 82 00 00 00    \tjne    5c68 <add_dir+0x2ea>\n    5be6:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5bed:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    5bf1:\t48 85 c0             \ttest   %rax,%rax\n    5bf4:\t74 2e                \tje     5c24 <add_dir+0x2a6>\n    5bf6:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5bfd:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    5c01:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    5c04:\t48 83 c2 05          \tadd    $0x5,%rdx\n    5c08:\t48 01 c2             \tadd    %rax,%rdx\n    5c0b:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5c12:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n    5c16:\t48 29 c2             \tsub    %rax,%rdx\n    5c19:\t48 89 d0             \tmov    %rdx,%rax\n    5c1c:\t48 3d 00 20 00 00    \tcmp    $0x2000,%rax\n    5c22:\t7f 44                \tjg     5c68 <add_dir+0x2ea>\n    5c24:\t8b 95 c4 fe ff ff    \tmov    -0x13c(%rbp),%edx\n    5c2a:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5c31:\t8b 40 40             \tmov    0x40(%rax),%eax\n    5c34:\t89 c0                \tmov    %eax,%eax\n    5c36:\t48 29 c2             \tsub    %rax,%rdx\n    5c39:\t48 89 d0             \tmov    %rdx,%rax\n    5c3c:\t48 3d ff 7f 00 00    \tcmp    $0x7fff,%rax\n    5c42:\t7f 24                \tjg     5c68 <add_dir+0x2ea>\n    5c44:\t8b 95 c4 fe ff ff    \tmov    -0x13c(%rbp),%edx\n    5c4a:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5c51:\t8b 40 40             \tmov    0x40(%rax),%eax\n    5c54:\t89 c0                \tmov    %eax,%eax\n    5c56:\t48 29 c2             \tsub    %rax,%rdx\n    5c59:\t48 89 d0             \tmov    %rdx,%rax\n    5c5c:\t48 3d 00 80 ff ff    \tcmp    $0xffffffffffff8000,%rax\n    5c62:\t0f 8d 7a 04 00 00    \tjge    60e2 <add_dir+0x764>\n    5c68:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5c6f:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    5c73:\t48 85 c0             \ttest   %rax,%rax\n    5c76:\t0f 84 09 04 00 00    \tje     6085 <add_dir+0x707>\n    5c7c:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5c83:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    5c87:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    5c8a:\t48 83 c2 05          \tadd    $0x5,%rdx\n    5c8e:\t48 01 c2             \tadd    %rax,%rdx\n    5c91:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5c98:\t48 8b 40 38          \tmov    0x38(%rax),%rax\n    5c9c:\t48 29 c2             \tsub    %rax,%rdx\n    5c9f:\t48 89 d0             \tmov    %rdx,%rax\n    5ca2:\t48 3d 00 20 00 00    \tcmp    $0x2000,%rax\n    5ca8:\t0f 8e bb 01 00 00    \tjle    5e69 <add_dir+0x4eb>\n    5cae:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5cb5:\t8b 40 28             \tmov    0x28(%rax),%eax\n    5cb8:\t83 e0 7f             \tand    $0x7f,%eax\n    5cbb:\t85 c0                \ttest   %eax,%eax\n    5cbd:\t0f 85 bb 00 00 00    \tjne    5d7e <add_dir+0x400>\n    5cc3:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5cca:\t8b 40 28             \tmov    0x28(%rax),%eax\n    5ccd:\t83 e8 80             \tsub    $0xffffff80,%eax\n    5cd0:\t89 c2                \tmov    %eax,%edx\n    5cd2:\t48 89 d0             \tmov    %rdx,%rax\n    5cd5:\t48 01 c0             \tadd    %rax,%rax\n    5cd8:\t48 01 d0             \tadd    %rdx,%rax\n    5cdb:\t48 c1 e0 03          \tshl    $0x3,%rax\n    5cdf:\t48 89 c2             \tmov    %rax,%rdx\n    5ce2:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5ce9:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    5ced:\t48 89 d6             \tmov    %rdx,%rsi\n    5cf0:\t48 89 c7             \tmov    %rax,%rdi\n    5cf3:\te8 00 00 00 00       \tcall   5cf8 <add_dir+0x37a>\n    5cf8:\t48 8b 95 b0 fe ff ff \tmov    -0x150(%rbp),%rdx\n    5cff:\t48 89 42 30          \tmov    %rax,0x30(%rdx)\n    5d03:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5d0a:\t48 8b 40 30          \tmov    0x30(%rax),%rax\n    5d0e:\t48 85 c0             \ttest   %rax,%rax\n    5d11:\t75 6b                \tjne    5d7e <add_dir+0x400>\n    5d13:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5d1a <add_dir+0x39c>\n    5d1a:\t48 89 c1             \tmov    %rax,%rcx\n    5d1d:\tba 41 00 00 00       \tmov    $0x41,%edx\n    5d22:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    5d27:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    5d2c:\te8 00 00 00 00       \tcall   5d31 <add_dir+0x3b3>\n    5d31:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 5d37 <add_dir+0x3b9>\n    5d37:\t85 c0                \ttest   %eax,%eax\n    5d39:\t74 0a                \tje     5d45 <add_dir+0x3c7>\n    5d3b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    5d40:\te8 00 00 00 00       \tcall   5d45 <add_dir+0x3c7>\n    5d45:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 5d4b <add_dir+0x3cd>\n    5d4b:\t85 c0                \ttest   %eax,%eax\n    5d4d:\t74 25                \tje     5d74 <add_dir+0x3f6>\n    5d4f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5d56 <add_dir+0x3d8>\n    5d56:\t48 85 c0             \ttest   %rax,%rax\n    5d59:\t74 19                \tje     5d74 <add_dir+0x3f6>\n    5d5b:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 5d61 <add_dir+0x3e3>\n    5d61:\t85 c0                \ttest   %eax,%eax\n    5d63:\t75 0f                \tjne    5d74 <add_dir+0x3f6>\n    5d65:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 5d6c <add_dir+0x3ee>\n    5d6c:\t48 89 c7             \tmov    %rax,%rdi\n    5d6f:\te8 00 00 00 00       \tcall   5d74 <add_dir+0x3f6>\n    5d74:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    5d79:\te8 00 00 00 00       \tcall   5d7e <add_dir+0x400>\n    5d7e:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5d85:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n    5d89:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5d90:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    5d94:\t48 89 d6             \tmov    %rdx,%rsi\n    5d97:\t48 29 c6             \tsub    %rax,%rsi\n    5d9a:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5da1:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n    5da5:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5dac:\t8b 40 28             \tmov    0x28(%rax),%eax\n    5daf:\t89 c1                \tmov    %eax,%ecx\n    5db1:\t48 89 c8             \tmov    %rcx,%rax\n    5db4:\t48 01 c0             \tadd    %rax,%rax\n    5db7:\t48 01 c8             \tadd    %rcx,%rax\n    5dba:\t48 c1 e0 03          \tshl    $0x3,%rax\n    5dbe:\t48 01 d0             \tadd    %rdx,%rax\n    5dc1:\t89 f2                \tmov    %esi,%edx\n    5dc3:\t89 10                \tmov    %edx,(%rax)\n    5dc5:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    5dc8:\t89 c6                \tmov    %eax,%esi\n    5dca:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5dd1:\t48 8b 50 30          \tmov    0x30(%rax),%rdx\n    5dd5:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5ddc:\t8b 40 28             \tmov    0x28(%rax),%eax\n    5ddf:\t89 c1                \tmov    %eax,%ecx\n    5de1:\t48 89 c8             \tmov    %rcx,%rax\n    5de4:\t48 01 c0             \tadd    %rax,%rax\n    5de7:\t48 01 c8             \tadd    %rcx,%rax\n    5dea:\t48 c1 e0 03          \tshl    $0x3,%rax\n    5dee:\t48 01 d0             \tadd    %rdx,%rax\n    5df1:\t8d 56 ff             \tlea    -0x1(%rsi),%edx\n    5df4:\t88 50 08             \tmov    %dl,0x8(%rax)\n    5df7:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5dfe:\t48 8b 70 30          \tmov    0x30(%rax),%rsi\n    5e02:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5e09:\t8b 40 28             \tmov    0x28(%rax),%eax\n    5e0c:\t8d 48 01             \tlea    0x1(%rax),%ecx\n    5e0f:\t48 8b 95 b0 fe ff ff \tmov    -0x150(%rbp),%rdx\n    5e16:\t89 4a 28             \tmov    %ecx,0x28(%rdx)\n    5e19:\t89 c2                \tmov    %eax,%edx\n    5e1b:\t48 89 d0             \tmov    %rdx,%rax\n    5e1e:\t48 01 c0             \tadd    %rax,%rax\n    5e21:\t48 01 d0             \tadd    %rdx,%rax\n    5e24:\t48 c1 e0 03          \tshl    $0x3,%rax\n    5e28:\t48 8d 14 06          \tlea    (%rsi,%rax,1),%rdx\n    5e2c:\t48 8b 85 b8 fe ff ff \tmov    -0x148(%rbp),%rax\n    5e33:\t48 89 42 10          \tmov    %rax,0x10(%rdx)\n    5e37:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5e3e:\t8b 50 2c             \tmov    0x2c(%rax),%edx\n    5e41:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    5e44:\t01 d0                \tadd    %edx,%eax\n    5e46:\t8d 50 09             \tlea    0x9(%rax),%edx\n    5e49:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5e50:\t89 50 2c             \tmov    %edx,0x2c(%rax)\n    5e53:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5e5a:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n    5e5e:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5e65:\t48 89 50 38          \tmov    %rdx,0x38(%rax)\n    5e69:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5e70:\t8b 40 18             \tmov    0x18(%rax),%eax\n    5e73:\t83 e8 01             \tsub    $0x1,%eax\n    5e76:\t88 85 12 ff ff ff    \tmov    %al,-0xee(%rbp)\n    5e7c:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5e83:\t8b 00                \tmov    (%rax),%eax\n    5e85:\t89 85 13 ff ff ff    \tmov    %eax,-0xed(%rbp)\n    5e8b:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5e92:\t8b 40 40             \tmov    0x40(%rax),%eax\n    5e95:\t89 85 17 ff ff ff    \tmov    %eax,-0xe9(%rbp)\n    5e9b:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 5ea1 <add_dir+0x523>\n    5ea1:\t85 c0                \ttest   %eax,%eax\n    5ea3:\t75 24                \tjne    5ec9 <add_dir+0x54b>\n    5ea5:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5eac:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    5eb0:\t48 8b 95 12 ff ff ff \tmov    -0xee(%rbp),%rdx\n    5eb7:\t48 89 10             \tmov    %rdx,(%rax)\n    5eba:\t0f b6 95 1a ff ff ff \tmovzbl -0xe6(%rbp),%edx\n    5ec1:\t88 50 08             \tmov    %dl,0x8(%rax)\n    5ec4:\te9 bc 01 00 00       \tjmp    6085 <add_dir+0x707>\n    5ec9:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5ed0:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    5ed4:\tba 09 00 00 00       \tmov    $0x9,%edx\n    5ed9:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    5ede:\t48 89 c7             \tmov    %rax,%rdi\n    5ee1:\te8 00 00 00 00       \tcall   5ee6 <add_dir+0x568>\n    5ee6:\tc7 85 44 ff ff ff 00 \tmovl   $0x0,-0xbc(%rbp)\n    5eed:\t00 00 00 \n    5ef0:\t0f b6 85 12 ff ff ff \tmovzbl -0xee(%rbp),%eax\n    5ef7:\t0f b6 d0             \tmovzbl %al,%edx\n    5efa:\tb8 38 00 00 00       \tmov    $0x38,%eax\n    5eff:\t2b 85 44 ff ff ff    \tsub    -0xbc(%rbp),%eax\n    5f05:\t89 c1                \tmov    %eax,%ecx\n    5f07:\t48 d3 e2             \tshl    %cl,%rdx\n    5f0a:\t48 89 d0             \tmov    %rdx,%rax\n    5f0d:\t48 89 85 08 ff ff ff \tmov    %rax,-0xf8(%rbp)\n    5f14:\t48 8d 85 08 ff ff ff \tlea    -0xf8(%rbp),%rax\n    5f1b:\t48 83 c0 07          \tadd    $0x7,%rax\n    5f1f:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    5f23:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5f2a:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    5f2e:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    5f32:\tc7 45 f8 00 00 00 00 \tmovl   $0x0,-0x8(%rbp)\n    5f39:\teb 26                \tjmp    5f61 <add_dir+0x5e3>\n    5f3b:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    5f3f:\t48 8d 50 ff          \tlea    -0x1(%rax),%rdx\n    5f43:\t48 89 55 f0          \tmov    %rdx,-0x10(%rbp)\n    5f47:\t0f b6 08             \tmovzbl (%rax),%ecx\n    5f4a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    5f4e:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    5f52:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n    5f56:\t0f b6 10             \tmovzbl (%rax),%edx\n    5f59:\t09 ca                \tor     %ecx,%edx\n    5f5b:\t88 10                \tmov    %dl,(%rax)\n    5f5d:\t83 45 f8 08          \taddl   $0x8,-0x8(%rbp)\n    5f61:\t8b 85 44 ff ff ff    \tmov    -0xbc(%rbp),%eax\n    5f67:\t83 c0 07             \tadd    $0x7,%eax\n    5f6a:\t39 45 f8             \tcmp    %eax,-0x8(%rbp)\n    5f6d:\t7e cc                \tjle    5f3b <add_dir+0x5bd>\n    5f6f:\tc7 85 40 ff ff ff 00 \tmovl   $0x0,-0xc0(%rbp)\n    5f76:\t00 00 00 \n    5f79:\t8b 85 13 ff ff ff    \tmov    -0xed(%rbp),%eax\n    5f7f:\t89 c2                \tmov    %eax,%edx\n    5f81:\tb8 20 00 00 00       \tmov    $0x20,%eax\n    5f86:\t2b 85 40 ff ff ff    \tsub    -0xc0(%rbp),%eax\n    5f8c:\t89 c1                \tmov    %eax,%ecx\n    5f8e:\t48 d3 e2             \tshl    %cl,%rdx\n    5f91:\t48 89 d0             \tmov    %rdx,%rax\n    5f94:\t48 89 85 00 ff ff ff \tmov    %rax,-0x100(%rbp)\n    5f9b:\t48 8d 85 00 ff ff ff \tlea    -0x100(%rbp),%rax\n    5fa2:\t48 83 c0 07          \tadd    $0x7,%rax\n    5fa6:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    5faa:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    5fb1:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    5fb5:\t48 83 c0 01          \tadd    $0x1,%rax\n    5fb9:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    5fbd:\tc7 45 e4 00 00 00 00 \tmovl   $0x0,-0x1c(%rbp)\n    5fc4:\teb 26                \tjmp    5fec <add_dir+0x66e>\n    5fc6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    5fca:\t48 8d 50 ff          \tlea    -0x1(%rax),%rdx\n    5fce:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    5fd2:\t0f b6 08             \tmovzbl (%rax),%ecx\n    5fd5:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    5fd9:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    5fdd:\t48 89 55 d0          \tmov    %rdx,-0x30(%rbp)\n    5fe1:\t0f b6 10             \tmovzbl (%rax),%edx\n    5fe4:\t09 ca                \tor     %ecx,%edx\n    5fe6:\t88 10                \tmov    %dl,(%rax)\n    5fe8:\t83 45 e4 08          \taddl   $0x8,-0x1c(%rbp)\n    5fec:\t8b 85 40 ff ff ff    \tmov    -0xc0(%rbp),%eax\n    5ff2:\t83 c0 1f             \tadd    $0x1f,%eax\n    5ff5:\t39 45 e4             \tcmp    %eax,-0x1c(%rbp)\n    5ff8:\t7e cc                \tjle    5fc6 <add_dir+0x648>\n    5ffa:\tc7 85 3c ff ff ff 00 \tmovl   $0x0,-0xc4(%rbp)\n    6001:\t00 00 00 \n    6004:\t8b 85 17 ff ff ff    \tmov    -0xe9(%rbp),%eax\n    600a:\t89 c2                \tmov    %eax,%edx\n    600c:\tb8 20 00 00 00       \tmov    $0x20,%eax\n    6011:\t2b 85 3c ff ff ff    \tsub    -0xc4(%rbp),%eax\n    6017:\t89 c1                \tmov    %eax,%ecx\n    6019:\t48 d3 e2             \tshl    %cl,%rdx\n    601c:\t48 89 d0             \tmov    %rdx,%rax\n    601f:\t48 89 85 f8 fe ff ff \tmov    %rax,-0x108(%rbp)\n    6026:\t48 8d 85 f8 fe ff ff \tlea    -0x108(%rbp),%rax\n    602d:\t48 83 c0 07          \tadd    $0x7,%rax\n    6031:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    6035:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    603c:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    6040:\t48 83 c0 05          \tadd    $0x5,%rax\n    6044:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n    6048:\tc7 45 cc 00 00 00 00 \tmovl   $0x0,-0x34(%rbp)\n    604f:\teb 26                \tjmp    6077 <add_dir+0x6f9>\n    6051:\t48 8b 45 c0          \tmov    -0x40(%rbp),%rax\n    6055:\t48 8d 50 ff          \tlea    -0x1(%rax),%rdx\n    6059:\t48 89 55 c0          \tmov    %rdx,-0x40(%rbp)\n    605d:\t0f b6 08             \tmovzbl (%rax),%ecx\n    6060:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    6064:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    6068:\t48 89 55 b8          \tmov    %rdx,-0x48(%rbp)\n    606c:\t0f b6 10             \tmovzbl (%rax),%edx\n    606f:\t09 ca                \tor     %ecx,%edx\n    6071:\t88 10                \tmov    %dl,(%rax)\n    6073:\t83 45 cc 08          \taddl   $0x8,-0x34(%rbp)\n    6077:\t8b 85 3c ff ff ff    \tmov    -0xc4(%rbp),%eax\n    607d:\t83 c0 1f             \tadd    $0x1f,%eax\n    6080:\t39 45 cc             \tcmp    %eax,-0x34(%rbp)\n    6083:\t7e cc                \tjle    6051 <add_dir+0x6d3>\n    6085:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    608c:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n    6090:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    6097:\t48 89 50 20          \tmov    %rdx,0x20(%rax)\n    609b:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    60a2:\t8b 95 54 ff ff ff    \tmov    -0xac(%rbp),%edx\n    60a8:\t89 10                \tmov    %edx,(%rax)\n    60aa:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    60b1:\tc7 40 18 00 00 00 00 \tmovl   $0x0,0x18(%rax)\n    60b8:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    60bf:\t8b 95 c4 fe ff ff    \tmov    -0x13c(%rbp),%edx\n    60c5:\t89 50 40             \tmov    %edx,0x40(%rax)\n    60c8:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    60cf:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    60d3:\t48 8d 50 09          \tlea    0x9(%rax),%rdx\n    60d7:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    60de:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n    60e2:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    60e9:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    60ed:\t48 89 85 30 ff ff ff \tmov    %rax,-0xd0(%rbp)\n    60f4:\t8b 85 50 ff ff ff    \tmov    -0xb0(%rbp),%eax\n    60fa:\t66 25 ff 1f          \tand    $0x1fff,%ax\n    60fe:\t0f b7 d0             \tmovzwl %ax,%edx\n    6101:\t0f b6 ca             \tmovzbl %dl,%ecx\n    6104:\t0f b6 95 1b ff ff ff \tmovzbl -0xe5(%rbp),%edx\n    610b:\t83 e2 00             \tand    $0x0,%edx\n    610e:\t09 ca                \tor     %ecx,%edx\n    6110:\t88 95 1b ff ff ff    \tmov    %dl,-0xe5(%rbp)\n    6116:\t66 c1 e8 08          \tshr    $0x8,%ax\n    611a:\t0f b7 c0             \tmovzwl %ax,%eax\n    611d:\t83 e0 1f             \tand    $0x1f,%eax\n    6120:\t89 c2                \tmov    %eax,%edx\n    6122:\t83 e2 1f             \tand    $0x1f,%edx\n    6125:\t0f b6 85 1c ff ff ff \tmovzbl -0xe4(%rbp),%eax\n    612c:\t83 e0 e0             \tand    $0xffffffe0,%eax\n    612f:\t09 d0                \tor     %edx,%eax\n    6131:\t88 85 1c ff ff ff    \tmov    %al,-0xe4(%rbp)\n    6137:\t8b 85 c0 fe ff ff    \tmov    -0x140(%rbp),%eax\n    613d:\t83 e0 07             \tand    $0x7,%eax\n    6140:\tc1 e0 05             \tshl    $0x5,%eax\n    6143:\t89 c2                \tmov    %eax,%edx\n    6145:\t0f b6 85 1c ff ff ff \tmovzbl -0xe4(%rbp),%eax\n    614c:\t83 e0 1f             \tand    $0x1f,%eax\n    614f:\t09 d0                \tor     %edx,%eax\n    6151:\t88 85 1c ff ff ff    \tmov    %al,-0xe4(%rbp)\n    6157:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    615a:\t83 e8 01             \tsub    $0x1,%eax\n    615d:\t88 85 1d ff ff ff    \tmov    %al,-0xe3(%rbp)\n    6163:\t8b 85 c4 fe ff ff    \tmov    -0x13c(%rbp),%eax\n    6169:\t89 c2                \tmov    %eax,%edx\n    616b:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    6172:\t8b 40 40             \tmov    0x40(%rax),%eax\n    6175:\t29 c2                \tsub    %eax,%edx\n    6177:\t89 d0                \tmov    %edx,%eax\n    6179:\t0f b7 d0             \tmovzwl %ax,%edx\n    617c:\t0f b6 ca             \tmovzbl %dl,%ecx\n    617f:\t0f b6 95 1e ff ff ff \tmovzbl -0xe2(%rbp),%edx\n    6186:\t83 e2 00             \tand    $0x0,%edx\n    6189:\t09 ca                \tor     %ecx,%edx\n    618b:\t88 95 1e ff ff ff    \tmov    %dl,-0xe2(%rbp)\n    6191:\t66 c1 e8 08          \tshr    $0x8,%ax\n    6195:\t0f b7 d0             \tmovzwl %ax,%edx\n    6198:\t0f b6 85 1f ff ff ff \tmovzbl -0xe1(%rbp),%eax\n    619f:\t83 e0 00             \tand    $0x0,%eax\n    61a2:\t09 d0                \tor     %edx,%eax\n    61a4:\t88 85 1f ff ff ff    \tmov    %al,-0xe1(%rbp)\n    61aa:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 61b0 <add_dir+0x832>\n    61b0:\t85 c0                \ttest   %eax,%eax\n    61b2:\t75 1e                \tjne    61d2 <add_dir+0x854>\n    61b4:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    61bb:\t8b 95 1b ff ff ff    \tmov    -0xe5(%rbp),%edx\n    61c1:\t89 10                \tmov    %edx,(%rax)\n    61c3:\t0f b6 95 1f ff ff ff \tmovzbl -0xe1(%rbp),%edx\n    61ca:\t88 50 04             \tmov    %dl,0x4(%rax)\n    61cd:\te9 7b 02 00 00       \tjmp    644d <add_dir+0xacf>\n    61d2:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    61d9:\tba 05 00 00 00       \tmov    $0x5,%edx\n    61de:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    61e3:\t48 89 c7             \tmov    %rax,%rdi\n    61e6:\te8 00 00 00 00       \tcall   61eb <add_dir+0x86d>\n    61eb:\tc7 85 2c ff ff ff 00 \tmovl   $0x0,-0xd4(%rbp)\n    61f2:\t00 00 00 \n    61f5:\t0f b6 85 1b ff ff ff \tmovzbl -0xe5(%rbp),%eax\n    61fc:\t0f b6 95 1c ff ff ff \tmovzbl -0xe4(%rbp),%edx\n    6203:\t83 e2 1f             \tand    $0x1f,%edx\n    6206:\t48 c1 e2 08          \tshl    $0x8,%rdx\n    620a:\t48 09 d0             \tor     %rdx,%rax\n    620d:\t0f b7 d0             \tmovzwl %ax,%edx\n    6210:\tb8 33 00 00 00       \tmov    $0x33,%eax\n    6215:\t2b 85 2c ff ff ff    \tsub    -0xd4(%rbp),%eax\n    621b:\t89 c1                \tmov    %eax,%ecx\n    621d:\t48 d3 e2             \tshl    %cl,%rdx\n    6220:\t48 89 d0             \tmov    %rdx,%rax\n    6223:\t48 89 85 f0 fe ff ff \tmov    %rax,-0x110(%rbp)\n    622a:\t48 8d 85 f0 fe ff ff \tlea    -0x110(%rbp),%rax\n    6231:\t48 83 c0 07          \tadd    $0x7,%rax\n    6235:\t48 89 45 a8          \tmov    %rax,-0x58(%rbp)\n    6239:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    6240:\t48 89 45 a0          \tmov    %rax,-0x60(%rbp)\n    6244:\tc7 45 b4 00 00 00 00 \tmovl   $0x0,-0x4c(%rbp)\n    624b:\teb 26                \tjmp    6273 <add_dir+0x8f5>\n    624d:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    6251:\t48 8d 50 ff          \tlea    -0x1(%rax),%rdx\n    6255:\t48 89 55 a8          \tmov    %rdx,-0x58(%rbp)\n    6259:\t0f b6 08             \tmovzbl (%rax),%ecx\n    625c:\t48 8b 45 a0          \tmov    -0x60(%rbp),%rax\n    6260:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    6264:\t48 89 55 a0          \tmov    %rdx,-0x60(%rbp)\n    6268:\t0f b6 10             \tmovzbl (%rax),%edx\n    626b:\t09 ca                \tor     %ecx,%edx\n    626d:\t88 10                \tmov    %dl,(%rax)\n    626f:\t83 45 b4 08          \taddl   $0x8,-0x4c(%rbp)\n    6273:\t8b 85 2c ff ff ff    \tmov    -0xd4(%rbp),%eax\n    6279:\t83 c0 0c             \tadd    $0xc,%eax\n    627c:\t39 45 b4             \tcmp    %eax,-0x4c(%rbp)\n    627f:\t7e cc                \tjle    624d <add_dir+0x8cf>\n    6281:\tc7 85 28 ff ff ff 05 \tmovl   $0x5,-0xd8(%rbp)\n    6288:\t00 00 00 \n    628b:\t0f b6 85 1c ff ff ff \tmovzbl -0xe4(%rbp),%eax\n    6292:\tc0 e8 05             \tshr    $0x5,%al\n    6295:\t0f b6 d0             \tmovzbl %al,%edx\n    6298:\tb8 3d 00 00 00       \tmov    $0x3d,%eax\n    629d:\t2b 85 28 ff ff ff    \tsub    -0xd8(%rbp),%eax\n    62a3:\t89 c1                \tmov    %eax,%ecx\n    62a5:\t48 d3 e2             \tshl    %cl,%rdx\n    62a8:\t48 89 d0             \tmov    %rdx,%rax\n    62ab:\t48 89 85 e8 fe ff ff \tmov    %rax,-0x118(%rbp)\n    62b2:\t48 8d 85 e8 fe ff ff \tlea    -0x118(%rbp),%rax\n    62b9:\t48 83 c0 07          \tadd    $0x7,%rax\n    62bd:\t48 89 45 90          \tmov    %rax,-0x70(%rbp)\n    62c1:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    62c8:\t48 83 c0 01          \tadd    $0x1,%rax\n    62cc:\t48 89 45 88          \tmov    %rax,-0x78(%rbp)\n    62d0:\tc7 45 9c 00 00 00 00 \tmovl   $0x0,-0x64(%rbp)\n    62d7:\teb 26                \tjmp    62ff <add_dir+0x981>\n    62d9:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n    62dd:\t48 8d 50 ff          \tlea    -0x1(%rax),%rdx\n    62e1:\t48 89 55 90          \tmov    %rdx,-0x70(%rbp)\n    62e5:\t0f b6 08             \tmovzbl (%rax),%ecx\n    62e8:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    62ec:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    62f0:\t48 89 55 88          \tmov    %rdx,-0x78(%rbp)\n    62f4:\t0f b6 10             \tmovzbl (%rax),%edx\n    62f7:\t09 ca                \tor     %ecx,%edx\n    62f9:\t88 10                \tmov    %dl,(%rax)\n    62fb:\t83 45 9c 08          \taddl   $0x8,-0x64(%rbp)\n    62ff:\t8b 85 28 ff ff ff    \tmov    -0xd8(%rbp),%eax\n    6305:\t83 c0 02             \tadd    $0x2,%eax\n    6308:\t39 45 9c             \tcmp    %eax,-0x64(%rbp)\n    630b:\t7e cc                \tjle    62d9 <add_dir+0x95b>\n    630d:\tc7 85 24 ff ff ff 00 \tmovl   $0x0,-0xdc(%rbp)\n    6314:\t00 00 00 \n    6317:\t0f b6 85 1d ff ff ff \tmovzbl -0xe3(%rbp),%eax\n    631e:\t0f b6 d0             \tmovzbl %al,%edx\n    6321:\tb8 38 00 00 00       \tmov    $0x38,%eax\n    6326:\t2b 85 24 ff ff ff    \tsub    -0xdc(%rbp),%eax\n    632c:\t89 c1                \tmov    %eax,%ecx\n    632e:\t48 d3 e2             \tshl    %cl,%rdx\n    6331:\t48 89 d0             \tmov    %rdx,%rax\n    6334:\t48 89 85 e0 fe ff ff \tmov    %rax,-0x120(%rbp)\n    633b:\t48 8d 85 e0 fe ff ff \tlea    -0x120(%rbp),%rax\n    6342:\t48 83 c0 07          \tadd    $0x7,%rax\n    6346:\t48 89 85 78 ff ff ff \tmov    %rax,-0x88(%rbp)\n    634d:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    6354:\t48 83 c0 02          \tadd    $0x2,%rax\n    6358:\t48 89 85 70 ff ff ff \tmov    %rax,-0x90(%rbp)\n    635f:\tc7 45 84 00 00 00 00 \tmovl   $0x0,-0x7c(%rbp)\n    6366:\teb 32                \tjmp    639a <add_dir+0xa1c>\n    6368:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    636f:\t48 8d 50 ff          \tlea    -0x1(%rax),%rdx\n    6373:\t48 89 95 78 ff ff ff \tmov    %rdx,-0x88(%rbp)\n    637a:\t0f b6 08             \tmovzbl (%rax),%ecx\n    637d:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n    6384:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    6388:\t48 89 95 70 ff ff ff \tmov    %rdx,-0x90(%rbp)\n    638f:\t0f b6 10             \tmovzbl (%rax),%edx\n    6392:\t09 ca                \tor     %ecx,%edx\n    6394:\t88 10                \tmov    %dl,(%rax)\n    6396:\t83 45 84 08          \taddl   $0x8,-0x7c(%rbp)\n    639a:\t8b 85 24 ff ff ff    \tmov    -0xdc(%rbp),%eax\n    63a0:\t83 c0 07             \tadd    $0x7,%eax\n    63a3:\t39 45 84             \tcmp    %eax,-0x7c(%rbp)\n    63a6:\t7e c0                \tjle    6368 <add_dir+0x9ea>\n    63a8:\tc7 85 20 ff ff ff 00 \tmovl   $0x0,-0xe0(%rbp)\n    63af:\t00 00 00 \n    63b2:\t0f b7 85 1e ff ff ff \tmovzwl -0xe2(%rbp),%eax\n    63b9:\t48 0f bf d0          \tmovswq %ax,%rdx\n    63bd:\tb8 30 00 00 00       \tmov    $0x30,%eax\n    63c2:\t2b 85 20 ff ff ff    \tsub    -0xe0(%rbp),%eax\n    63c8:\t89 c1                \tmov    %eax,%ecx\n    63ca:\t48 d3 e2             \tshl    %cl,%rdx\n    63cd:\t48 89 d0             \tmov    %rdx,%rax\n    63d0:\t48 89 85 d8 fe ff ff \tmov    %rax,-0x128(%rbp)\n    63d7:\t48 8d 85 d8 fe ff ff \tlea    -0x128(%rbp),%rax\n    63de:\t48 83 c0 07          \tadd    $0x7,%rax\n    63e2:\t48 89 85 60 ff ff ff \tmov    %rax,-0xa0(%rbp)\n    63e9:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    63f0:\t48 83 c0 03          \tadd    $0x3,%rax\n    63f4:\t48 89 85 58 ff ff ff \tmov    %rax,-0xa8(%rbp)\n    63fb:\tc7 85 6c ff ff ff 00 \tmovl   $0x0,-0x94(%rbp)\n    6402:\t00 00 00 \n    6405:\teb 35                \tjmp    643c <add_dir+0xabe>\n    6407:\t48 8b 85 60 ff ff ff \tmov    -0xa0(%rbp),%rax\n    640e:\t48 8d 50 ff          \tlea    -0x1(%rax),%rdx\n    6412:\t48 89 95 60 ff ff ff \tmov    %rdx,-0xa0(%rbp)\n    6419:\t0f b6 08             \tmovzbl (%rax),%ecx\n    641c:\t48 8b 85 58 ff ff ff \tmov    -0xa8(%rbp),%rax\n    6423:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    6427:\t48 89 95 58 ff ff ff \tmov    %rdx,-0xa8(%rbp)\n    642e:\t0f b6 10             \tmovzbl (%rax),%edx\n    6431:\t09 ca                \tor     %ecx,%edx\n    6433:\t88 10                \tmov    %dl,(%rax)\n    6435:\t83 85 6c ff ff ff 08 \taddl   $0x8,-0x94(%rbp)\n    643c:\t8b 85 20 ff ff ff    \tmov    -0xe0(%rbp),%eax\n    6442:\t83 c0 0f             \tadd    $0xf,%eax\n    6445:\t39 85 6c ff ff ff    \tcmp    %eax,-0x94(%rbp)\n    644b:\t7e ba                \tjle    6407 <add_dir+0xa89>\n    644d:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    6450:\t48 8b 85 30 ff ff ff \tmov    -0xd0(%rbp),%rax\n    6457:\t48 8d 48 05          \tlea    0x5(%rax),%rcx\n    645b:\t48 8b 85 b8 fe ff ff \tmov    -0x148(%rbp),%rax\n    6462:\t48 89 c6             \tmov    %rax,%rsi\n    6465:\t48 89 cf             \tmov    %rcx,%rdi\n    6468:\te8 00 00 00 00       \tcall   646d <add_dir+0xaef>\n    646d:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    6474:\t48 8b 40 10          \tmov    0x10(%rax),%rax\n    6478:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    647b:\t48 83 c2 05          \tadd    $0x5,%rdx\n    647f:\t48 01 c2             \tadd    %rax,%rdx\n    6482:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    6489:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n    648d:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    6494:\t8b 40 18             \tmov    0x18(%rax),%eax\n    6497:\t8d 50 01             \tlea    0x1(%rax),%edx\n    649a:\t48 8b 85 b0 fe ff ff \tmov    -0x150(%rbp),%rax\n    64a1:\t89 50 18             \tmov    %edx,0x18(%rax)\n    64a4:\t90                   \tnop\n    64a5:\tc9                   \tleave  \n    64a6:\tc3                   \tret    ", "code_s": "void add_dir(undefined8 <span class=\"supfact\">param_1</span>, uint <span class=\"supfact\">param_2</span>,\n             char *<span class=\"supfact\">param_3</span>, uint <span class=\"supfact\">param_4</span>,\n             uint *<span class=\"supfact\">param_5</span>) {\n  uint uVar1;\n  undefined8 *puVar2;\n  ushort <span class=\"supfact\">uVar3</span>;\n  size_t sVar4;\n  void *pvVar5;\n  undefined8 <span class=\"supfact\">local_130</span>;\n  undefined8 <span class=\"supfact\">local_128</span>;\n  undefined8 <span class=\"supfact\">local_120</span>;\n  undefined8 <span class=\"supfact\">local_118</span>;\n  undefined8 <span class=\"supfact\">local_110</span>;\n  undefined8 <span class=\"supfact\">local_108</span>;\n  undefined8 <span class=\"supfact\">local_100</span>;\n  byte <span class=\"supfact\">local_f6</span>;\n  uint uStack_f5;\n  undefined4 uStack_f1;\n  byte <span class=\"supfact\">local_ed</span>;\n  byte bStack_ec;\n  byte bStack_eb;\n  undefined <span class=\"supfact\">uStack_ea</span>;\n  byte bStack_e9;\n  undefined4 <span class=\"supfact\">local_e8</span>;\n  undefined4 <span class=\"supfact\">local_e4</span>;\n  undefined4 <span class=\"supfact\">local_e0</span>;\n  undefined4 <span class=\"supfact\">local_dc</span>;\n  undefined4 *<span class=\"supfact\">local_d8</span>;\n  undefined4 <span class=\"supfact\">local_cc</span>;\n  undefined4 <span class=\"supfact\">local_c8</span>;\n  undefined4 <span class=\"supfact\">local_c4</span>;\n  void *<span class=\"supfact\">local_c0</span>;\n  uint <span class=\"supfact\">local_b8</span>;\n  uint <span class=\"supfact\">local_b4</span>;\n  byte *<span class=\"supfact\">local_b0</span>;\n  byte *<span class=\"supfact\">local_a8</span>;\n  int <span class=\"supfact\">local_9c</span>;\n  byte *<span class=\"supfact\">local_98</span>;\n  byte *<span class=\"supfact\">local_90</span>;\n  int local_84;\n  undefined4 *local_80;\n  byte *local_78;\n  int local_6c;\n  undefined4 *local_68;\n  byte *local_60;\n  int local_54;\n  byte *local_50;\n  byte *local_48;\n  int local_3c;\n  byte *local_38;\n  byte *local_30;\n  int local_24;\n  byte *local_20;\n  byte *local_18;\n  int local_10;\n  uint local_c;\n  <span class=\"supfact\">local_b4</span> =\n      (uint)((ulong)<span class=\"supfact\">param_1</span> & gt; &gt; Number);\n  <span class=\"supfact\">local_b8</span> = (uint)<span class=\"supfact\">param_1</span> & amp;\n  Number;\n  sVar4 = strlen(<span class=\"supfact\">param_3</span>);\n  local_c = (uint)sVar4;\n  if (Number & lt; local_c) {\n    local_c = Number;\n    fprintf(_stderr, String, Number);\n  }\n  if ((ulong)<span class=\"supfact\">param_5</span>[Number] +\n          *(long *)(<span class=\"supfact\">param_5</span> + Number) &lt;\n      = *(long *)(<span class=\"supfact\">param_5</span> + Number) + (ulong)local_c + Number) {\n    <span class=\"supfact\">param_5</span>[Number] = <span class=\"supfact\">param_5</span>[Number] + Number;\n    <span class=\"supfact\">local_c0</span> =\n        realloc(*(void **)(<span class=\"supfact\">param_5</span> + Number),\n                (ulong)<span class=\"supfact\">param_5</span>[Number]);\n    if (<span class=\"supfact\">local_c0</span> == (void *)Number) {\n      fwrite(String, Number, Number, _stderr);\n      if (restore != Number) {\n        restorefs();\n      }\n      if (((delete != Number) & amp; &amp;\n           (destination_file != (char *)Number)) &\n              amp;\n          &amp; (block_device == Number)) {\n        unlink(destination_file);\n      }\n      exit(Number);\n    }\n    *(long *)(<span class=\"supfact\">param_5</span> + Number) =\n        (*(long *)(<span class=\"supfact\">param_5</span> + Number) -\n         *(long *)(<span class=\"supfact\">param_5</span> + Number)) +\n        (long)<span class=\"supfact\">local_c0</span>;\n    if (*(long *)(<span class=\"supfact\">param_5</span> + Number) != Number) {\n      *(long *)(<span class=\"supfact\">param_5</span> + Number) =\n          (*(long *)(<span class=\"supfact\">param_5</span> + Number) -\n           *(long *)(<span class=\"supfact\">param_5</span> + Number)) +\n          (long)<span class=\"supfact\">local_c0</span>;\n    }\n    *(long *)(<span class=\"supfact\">param_5</span> + Number) =\n        (*(long *)(<span class=\"supfact\">param_5</span> + Number) -\n         *(long *)(<span class=\"supfact\">param_5</span> + Number)) +\n        (long)<span class=\"supfact\">local_c0</span>;\n    *(void **)(<span class=\"supfact\">param_5</span> + Number) = <span class=\"supfact\">local_c0</span>;\n  }\n  if ((((<span class=\"supfact\">param_5</span>[Number] == Number) ||\n        (<span class=\"supfact\">local_b4</span> != *<span class=\"supfact\">param_5</span>)) ||\n       ((*(long *)(<span class=\"supfact\">param_5</span> + Number) != Number & amp; &amp;\n         (Number & lt;\n          (long)(((ulong)local_c + Number +\n                  *(long *)(<span class=\"supfact\">param_5</span> + Number)) -\n                 *(long *)(<span class=\"supfact\">param_5</span> + Number)))))) ||\n      ((Number & lt; (long)((ulong)<span class=\"supfact\">param_2</span> -\n                            (ulong)<span class=\"supfact\">param_5</span>[Number]) ||\n                     ((long)((ulong)<span class=\"supfact\">param_2</span> -\n                             (ulong)<span class=\"supfact\">param_5</span>[Number]) &\n                          lt;\n                      - Number)))) {\n    if (*(long *)(<span class=\"supfact\">param_5</span> + Number) != Number) {\n      if (Number & lt; (long)(((ulong)local_c + Number +\n                               *(long *)(<span class=\"supfact\">param_5</span> + Number)) -\n                              *(long *)(<span class=\"supfact\">param_5</span> + Number))) {\n        if ((<span class=\"supfact\">param_5</span>[Number] & amp; Number) == Number) {\n          pvVar5 = realloc(*(void **)(<span class=\"supfact\">param_5</span> + Number),\n                           (ulong)(<span class=\"supfact\">param_5</span>[Number] + Number) *\n                               Number);\n          *(void **)(<span class=\"supfact\">param_5</span> + Number) = pvVar5;\n          if (*(long *)(<span class=\"supfact\">param_5</span> + Number) == Number) {\n            fwrite(String, Number, Number, _stderr);\n            if (restore != Number) {\n              restorefs();\n            }\n            if (((delete != Number) & amp; &amp;\n                 (destination_file != (char *)Number)) &\n                    amp;\n                &amp; (block_device == Number)) {\n              unlink(destination_file);\n            }\n            exit(Number);\n          }\n        }\n        *(int *)((ulong)<span class=\"supfact\">param_5</span>[Number] * Number +\n                 *(long *)(<span class=\"supfact\">param_5</span> + Number)) =\n            (int)*(undefined8 *)(<span class=\"supfact\">param_5</span> + Number) -\n            (int)*(undefined8 *)(<span class=\"supfact\">param_5</span> + Number);\n        *(char *)((ulong)<span class=\"supfact\">param_5</span>[Number] * Number +\n                  *(long *)(<span class=\"supfact\">param_5</span> + Number) + Number) =\n            (char)local_c + -Number;\n        uVar1 = <span class=\"supfact\">param_5</span>[Number];\n        <span class=\"supfact\">param_5</span>[Number] = uVar1 + Number;\n        *(char **)(*(long *)(<span class=\"supfact\">param_5</span> + Number) +\n                   (ulong)uVar1 * Number + Number) = <span class=\"supfact\">param_3</span>;\n        <span class=\"supfact\">param_5</span>[Number] =\n            local_c + <span class=\"supfact\">param_5</span>[Number] + Number;\n        *(undefined8 *)(<span class=\"supfact\">param_5</span> + Number) =\n            *(undefined8 *)(<span class=\"supfact\">param_5</span> + Number);\n      }\n      <span class=\"supfact\">local_f6</span> = (char)<span class=\"supfact\">param_5</span>[Number] - Number;\n      uStack_f5 = *<span class=\"supfact\">param_5</span>;\n      uStack_f1 = <span class=\"supfact\">param_5</span>[Number];\n      if (swap == Number) {\n        puVar2 = *(undefined8 **)(<span class=\"supfact\">param_5</span> + Number);\n        *puVar2 = CONCAT35((undefined3)uStack_f1,\n                           CONCAT41(uStack_f5, <span class=\"supfact\">local_f6</span>));\n        uStack_f1._3_1_ = (undefined)(uStack_f1 & gt; &gt; Number);\n        *(undefined *)(puVar2 + Number) = uStack_f1._3_1_;\n      } else {\n        memset(*(void **)(<span class=\"supfact\">param_5</span> + Number), Number, Number);\n        <span class=\"supfact\">local_c4</span> = Number;\n        <span class=\"supfact\">local_100</span> = (ulong)<span class=\"supfact\">local_f6</span> & lt;\n        &lt;\n        Number;\n        local_20 = *(byte **)(<span class=\"supfact\">param_5</span> + Number);\n        local_18 = (byte *)((long)&amp; <span class=\"supfact\">local_100</span> + Number);\n        for (local_10 = Number; local_10 & lt; Number;\n             local_10 = local_10 + Number) {\n          *local_20 = *local_20 | *local_18;\n          local_20 = local_20 + Number;\n          local_18 = local_18 + -Number;\n        }\n        <span class=\"supfact\">local_c8</span> = Number;\n        <span class=\"supfact\">local_108</span> = (ulong)uStack_f5 & lt;\n        &lt;\n        Number;\n        local_38 = *(byte **)(<span class=\"supfact\">param_5</span> + Number);\n        local_30 = (byte *)((long)&amp; <span class=\"supfact\">local_108</span> + Number);\n        for (local_24 = Number; local_38 = local_38 + Number, local_24 & lt;\n             Number; local_24 = local_24 + Number) {\n          *local_38 = *local_38 | *local_30;\n          local_30 = local_30 + -Number;\n        }\n        <span class=\"supfact\">local_cc</span> = Number;\n        <span class=\"supfact\">local_110</span> = (ulong)uStack_f1 & lt;\n        &lt;\n        Number;\n        local_50 =\n            (byte *)(*(long *)(<span class=\"supfact\">param_5</span> + Number) + Number);\n        local_48 = (byte *)((long)&amp; <span class=\"supfact\">local_110</span> + Number);\n        for (local_3c = Number; local_3c & lt; Number;\n             local_3c = local_3c + Number) {\n          *local_50 = *local_50 | *local_48;\n          local_50 = local_50 + Number;\n          local_48 = local_48 + -Number;\n        }\n      }\n    }\n    *(undefined8 *)(<span class=\"supfact\">param_5</span> + Number) =\n        *(undefined8 *)(<span class=\"supfact\">param_5</span> + Number);\n    *<span class=\"supfact\">param_5</span> = <span class=\"supfact\">local_b4</span>;\n    <span class=\"supfact\">param_5</span>[Number] = Number;\n    <span class=\"supfact\">param_5</span>[Number] = <span class=\"supfact\">param_2</span>;\n    *(long *)(<span class=\"supfact\">param_5</span> + Number) =\n        *(long *)(<span class=\"supfact\">param_5</span> + Number) + Number;\n  }\n  <span class=\"supfact\">local_d8</span> = *(undefined4 **)(<span class=\"supfact\">param_5</span> + Number);\n  <span class=\"supfact\">uVar3</span> = (ushort)<span class=\"supfact\">local_b8</span> & amp;\n  Number;\n  <span class=\"supfact\">local_ed</span> = (byte)<span class=\"supfact\">uVar3</span>;\n  bStack_ec = (byte)(<span class=\"supfact\">uVar3</span> & gt; &gt; Number) |\n              (byte)((<span class=\"supfact\">param_4</span> & amp; Number) & lt; &lt; Number);\n  bStack_eb = (char)local_c - Number;\n  <span class=\"supfact\">uStack_ea</span> =\n      (undefined)(<span class=\"supfact\">param_2</span> - <span class=\"supfact\">param_5</span>[Number]);\n  bStack_e9 =\n      (byte)(<span class=\"supfact\">param_2</span> - <span class=\"supfact\">param_5</span>[Number] & gt;\n             &gt; Number);\n  if (swap == Number) {\n    *<span class=\"supfact\">local_d8</span> = CONCAT13(\n        <span class=\"supfact\">uStack_ea</span>,\n        CONCAT12(bStack_eb, CONCAT11(bStack_ec, <span class=\"supfact\">local_ed</span>)));\n    *(byte *)(<span class=\"supfact\">local_d8</span> + Number) = bStack_e9;\n  } else {\n    memset(<span class=\"supfact\">local_d8</span>, Number, Number);\n    <span class=\"supfact\">local_dc</span> = Number;\n    <span class=\"supfact\">local_118</span> =\n        (ulong)(ushort)((ushort)<span class=\"supfact\">local_ed</span> |\n                            (bStack_ec & amp; Number) & lt;\n                        &lt; Number) &\n        lt;\n    &lt;\n    Number;\n    local_68 = <span class=\"supfact\">local_d8</span>;\n    local_60 = (byte *)((long)&amp; <span class=\"supfact\">local_118</span> + Number);\n    for (local_54 = Number; local_54 & lt; Number;\n         local_54 = local_54 + Number) {\n      *(byte *)local_68 = *(byte *)local_68 | *local_60;\n      local_68 = (undefined4 *)((long)local_68 + Number);\n      local_60 = local_60 + -Number;\n    }\n    <span class=\"supfact\">local_e0</span> = Number;\n    <span class=\"supfact\">local_120</span> = (ulong)(bStack_ec & gt; &gt; Number) & lt;\n    &lt;\n    Number;\n    local_78 = (byte *)((long)&amp; <span class=\"supfact\">local_120</span> + Number);\n    local_80 = <span class=\"supfact\">local_d8</span>;\n    for (local_6c = Number;\n         local_80 = (undefined4 *)((long)local_80 + Number), local_6c & lt;\n         Number; local_6c = local_6c + Number) {\n      *(byte *)local_80 = *(byte *)local_80 | *local_78;\n      local_78 = local_78 + -Number;\n    }\n    <span class=\"supfact\">local_e4</span> = Number;\n    <span class=\"supfact\">local_128</span> = (ulong)bStack_eb & lt;\n    &lt;\n    Number;\n    <span class=\"supfact\">local_98</span> =\n        (byte *)((long)<span class=\"supfact\">local_d8</span> + Number);\n    <span class=\"supfact\">local_90</span> =\n        (byte *)((long)&amp; <span class=\"supfact\">local_128</span> + Number);\n    for (local_84 = Number; local_84 & lt; Number;\n         local_84 = local_84 + Number) {\n      *<span class=\"supfact\">local_98</span> =\n          *<span class=\"supfact\">local_98</span> | *<span class=\"supfact\">local_90</span>;\n      <span class=\"supfact\">local_98</span> = <span class=\"supfact\">local_98</span> + Number;\n      <span class=\"supfact\">local_90</span> = <span class=\"supfact\">local_90</span> + -Number;\n    }\n    <span class=\"supfact\">local_e8</span> = Number;\n    <span class=\"supfact\">local_130</span> =\n        (long)CONCAT11(bStack_e9, <span class=\"supfact\">uStack_ea</span>) & lt;\n    &lt;\n    Number;\n    <span class=\"supfact\">local_b0</span> =\n        (byte *)((long)<span class=\"supfact\">local_d8</span> + Number);\n    <span class=\"supfact\">local_a8</span> =\n        (byte *)((long)&amp; <span class=\"supfact\">local_130</span> + Number);\n    for (<span class=\"supfact\">local_9c</span> = Number; <span class=\"supfact\">local_9c</span> & lt;\n         Number; <span class=\"supfact\">local_9c</span> = <span class=\"supfact\">local_9c</span> + Number) {\n      *<span class=\"supfact\">local_b0</span> =\n          *<span class=\"supfact\">local_b0</span> | *<span class=\"supfact\">local_a8</span>;\n      <span class=\"supfact\">local_b0</span> = <span class=\"supfact\">local_b0</span> + Number;\n      <span class=\"supfact\">local_a8</span> = <span class=\"supfact\">local_a8</span> + -Number;\n    }\n  }\n  strncpy((char *)((long)<span class=\"supfact\">local_d8</span> + Number),\n          <span class=\"supfact\">param_3</span>, (ulong)local_c);\n  *(ulong *)(<span class=\"supfact\">param_5</span> + Number) =\n      (ulong)local_c + Number + *(long *)(<span class=\"supfact\">param_5</span> + Number);\n  <span class=\"supfact\">param_5</span>[Number] = <span class=\"supfact\">param_5</span>[Number] + Number;\n  return;\n}", "code_t": "void add_dir(squashfs_inode <span class=\"supfact\">inode</span>,\n             uint <span class=\"supfact\">inode_number</span>, char *<span class=\"supfact\">name</span>,\n             int <span class=\"supfact\">type</span>, directory *<span class=\"supfact\">dir</span>) {\n  uint uVar1;\n  undefined8 *puVar2;\n  undefined4 *__s;\n  byte bVar3;\n  byte bVar4;\n  byte bVar5;\n  ushort <span class=\"supfact\">uVar6</span>;\n  uint uVar7;\n  size_t sVar8;\n  uchar *puVar9;\n  cached_dir_index *pcVar10;\n  int iVar11;\n  directory *<span class=\"supfact\">dir</span> - local;\n  char *<span class=\"supfact\">name</span> - local;\n  int <span class=\"supfact\">type</span> - local;\n  uint <span class=\"supfact\">inode_number</span> - local;\n  squashfs_inode <span class=\"supfact\">inode</span> - local;\n  ulonglong <span class=\"supfact\">val_6</span>;\n  ulonglong <span class=\"supfact\">val_5</span>;\n  ulonglong <span class=\"supfact\">val_4</span>;\n  ulonglong <span class=\"supfact\">val_3</span>;\n  ulonglong <span class=\"supfact\">val_2</span>;\n  ulonglong <span class=\"supfact\">val_1</span>;\n  ulonglong <span class=\"supfact\">val</span>;\n  squashfs_dir_header <span class=\"supfact\">dir_header</span>;\n  squashfs_dir_entry <span class=\"supfact\">idir</span>;\n  int <span class=\"supfact\">b_pos_6</span>;\n  int <span class=\"supfact\">b_pos_5</span>;\n  int <span class=\"supfact\">b_pos_4</span>;\n  int <span class=\"supfact\">b_pos_3</span>;\n  squashfs_dir_entry *<span class=\"supfact\">idirp</span>;\n  int <span class=\"supfact\">b_pos_2</span>;\n  int <span class=\"supfact\">b_pos_1</span>;\n  int <span class=\"supfact\">b_pos</span>;\n  uchar *<span class=\"supfact\">buff</span>;\n  uint <span class=\"supfact\">offset</span>;\n  uint <span class=\"supfact\">start_block</span>;\n  uchar *<span class=\"supfact\">d_6</span>;\n  uchar *<span class=\"supfact\">s_6</span>;\n  int <span class=\"supfact\">bits_6</span>;\n  uchar *<span class=\"supfact\">d_5</span>;\n  uchar *<span class=\"supfact\">s_5</span>;\n  int <span class=\"supfact\">bits_5</span>;\n  uchar *<span class=\"supfact\">d_4</span>;\n  uchar *<span class=\"supfact\">s_4</span>;\n  int <span class=\"supfact\">bits_4</span>;\n  uchar *<span class=\"supfact\">d_3</span>;\n  uchar *<span class=\"supfact\">s_3</span>;\n  int <span class=\"supfact\">bits_3</span>;\n  uchar *<span class=\"supfact\">d_2</span>;\n  uchar *<span class=\"supfact\">s_2</span>;\n  int <span class=\"supfact\">bits_2</span>;\n  uchar *<span class=\"supfact\">d_1</span>;\n  uchar *<span class=\"supfact\">s_1</span>;\n  int <span class=\"supfact\">bits_1</span>;\n  uchar *<span class=\"supfact\">d</span>;\n  uchar *<span class=\"supfact\">s</span>;\n  int <span class=\"supfact\">bits</span>;\n  uint <span class=\"supfact\">size</span>;\n  uVar7 = (uint)((ulong)<span class=\"supfact\">inode</span> & gt; &gt; Number);\n  sVar8 = strlen(<span class=\"supfact\">name</span>);\n  <span class=\"supfact\">size</span> = (uint)sVar8;\n  if (Number & lt; <span class=\"supfact\">size</span>) {\n    <span class=\"supfact\">size</span> = Number;\n    fprintf(_stderr, String, Number);\n  }\n  if (<span class=\"supfact\">dir</span> - &gt;\n      <span class=\"supfact\">buff</span> + <span class=\"supfact\">dir</span> - &gt;\n      <span class=\"supfact\">size</span> &lt; = <span class=\"supfact\">dir</span> - &gt;\n      p + (ulong)<span class=\"supfact\">size</span> + Number) {\n    <span class=\"supfact\">dir</span> - &gt;\n    <span class=\"supfact\">size</span> = <span class=\"supfact\">dir</span> - &gt;\n    <span class=\"supfact\">size</span> + Number;\n    puVar9 =\n        (uchar *)realloc(<span class=\"supfact\">dir</span> - &gt;\n                         <span class=\"supfact\">buff</span>, (ulong)<span class=\"supfact\">dir</span> - &gt;\n                         <span class=\"supfact\">size</span>);\n    if (puVar9 == (uchar *)Number) {\n      fwrite(String, Number, Number, _stderr);\n      if (restore != Number) {\n        restorefs();\n      }\n      if (((delete != Number) & amp; &amp;\n           (destination_file != (char *)Number)) &\n              amp;\n          &amp; (block_device == Number)) {\n        unlink(destination_file);\n      }\n      exit(Number);\n    }\n    <span class=\"supfact\">dir</span> - &gt;\n    p = puVar9 + ((long)<span class=\"supfact\">dir</span> - &gt;\n                  p - (long)<span class=\"supfact\">dir</span> - &gt; <span class=\"supfact\">buff</span>);\n    if (<span class=\"supfact\">dir</span> - &gt; entry_count_p != (uchar *)Number) {\n      <span class=\"supfact\">dir</span> - &gt;\n      entry_count_p = puVar9 + ((long)<span class=\"supfact\">dir</span> - &gt;\n                                entry_count_p - (long)<span class=\"supfact\">dir</span> - &gt;\n                                <span class=\"supfact\">buff</span>);\n    }\n    <span class=\"supfact\">dir</span> - &gt;\n    index_count_p = puVar9 + ((long)<span class=\"supfact\">dir</span> - &gt;\n                              index_count_p - (long)<span class=\"supfact\">dir</span> - &gt;\n                              <span class=\"supfact\">buff</span>);\n    <span class=\"supfact\">dir</span> - &gt;\n    <span class=\"supfact\">buff</span> = puVar9;\n  }\n  if ((((<span class=\"supfact\">dir</span> - &gt; entry_count == Number) ||\n        (uVar7 != <span class=\"supfact\">dir</span> - &gt; <span class=\"supfact\">start_block</span>)) ||\n       ((<span class=\"supfact\">dir</span> - &gt; entry_count_p != (uchar *)Number & amp;\n         &amp;\n         (Number & lt; (long)(<span class=\"supfact\">dir</span> - &gt;\n                              p + (((ulong)<span class=\"supfact\">size</span> + Number) -\n                                       (long)<span class=\"supfact\">dir</span> - &gt;\n                                   index_count_p)))))) ||\n      ((Number & lt; (long)((ulong)<span class=\"supfact\">inode_number</span> -\n                                (ulong)<span class=\"supfact\">dir</span> - &gt;\n                            <span class=\"supfact\">inode_number</span>) ||\n                     ((long)((ulong)<span class=\"supfact\">inode_number</span> -\n                                 (ulong)<span class=\"supfact\">dir</span> - &gt;\n                             <span class=\"supfact\">inode_number</span>) &\n                          lt;\n                      - Number)))) {\n    if (<span class=\"supfact\">dir</span> - &gt; entry_count_p != (uchar *)Number) {\n      if (Number & lt; (long)(<span class=\"supfact\">dir</span> - &gt;\n                              p + (((ulong)<span class=\"supfact\">size</span> + Number) -\n                                       (long)<span class=\"supfact\">dir</span> - &gt;\n                                   index_count_p))) {\n        if ((<span class=\"supfact\">dir</span> - &gt; i_count & amp; Number) == Number) {\n          pcVar10 = (cached_dir_index *)realloc(\n              <span class=\"supfact\">dir</span> - &gt;\n              index,\n              (ulong)(<span class=\"supfact\">dir</span> - &gt; i_count + Number) * Number);\n          <span class=\"supfact\">dir</span> - &gt;\n          index = pcVar10;\n          if (<span class=\"supfact\">dir</span> - &gt; index == (cached_dir_index *)Number) {\n            fwrite(String, Number, Number, _stderr);\n            if (restore != Number) {\n              restorefs();\n            }\n            if (((delete != Number) & amp; &amp;\n                 (destination_file != (char *)Number)) &\n                    amp;\n                &amp; (block_device == Number)) {\n              unlink(destination_file);\n            }\n            exit(Number);\n          }\n        }\n        <span class=\"supfact\">dir</span> - &gt;\n        index[<span class=\"supfact\">dir</span> - &gt; i_count].index.index =\n            (int)<span class=\"supfact\">dir</span> - &gt;\n        p - (int)<span class=\"supfact\">dir</span> - &gt;\n        <span class=\"supfact\">buff</span>;\n        <span class=\"supfact\">dir</span> - &gt;\n        index[<span class=\"supfact\">dir</span> - &gt; i_count].index.<span class=\"supfact\">size</span> =\n            (char)<span class=\"supfact\">size</span> + Number;\n        uVar1 = <span class=\"supfact\">dir</span> - &gt;\n        i_count;\n        <span class=\"supfact\">dir</span> - &gt;\n        i_count = uVar1 + Number;\n        <span class=\"supfact\">dir</span> - &gt;\n        index[uVar1].<span class=\"supfact\">name</span> = <span class=\"supfact\">name</span>;\n        <span class=\"supfact\">dir</span> - &gt;\n        i_size = <span class=\"supfact\">size</span> + <span class=\"supfact\">dir</span> - &gt;\n        i_size + Number;\n        <span class=\"supfact\">dir</span> - &gt;\n        index_count_p = <span class=\"supfact\">dir</span> - &gt;\n        p;\n      }\n      <span class=\"supfact\">dir_header</span>._0_1_ = (char)<span class=\"supfact\">dir</span> - &gt;\n      entry_count + -Number;\n      <span class=\"supfact\">dir_header</span>.<span class=\"supfact\">start_block</span> =\n          <span class=\"supfact\">dir</span> - &gt;\n      <span class=\"supfact\">start_block</span>;\n      uVar1 = <span class=\"supfact\">dir</span> - &gt;\n      <span class=\"supfact\">inode_number</span>;\n      <span class=\"supfact\">dir_header</span>.<span class=\"supfact\">inode_number</span> = uVar1;\n      if (swap == Number) {\n        puVar2 = (undefined8 *)<span class=\"supfact\">dir</span> - &gt;\n        entry_count_p;\n        <span class=\"supfact\">dir_header</span>.<span class=\"supfact\">inode_number</span>._0_3_ =\n            (undefined3)uVar1;\n        *puVar2 = CONCAT35(\n            (undefined3)<span class=\"supfact\">dir_header</span>.<span class=\"supfact\">inode_number</span>,\n            CONCAT41(<span class=\"supfact\">dir_header</span>.<span class=\"supfact\">start_block</span>,\n                     <span class=\"supfact\">dir_header</span>._0_1_));\n        <span class=\"supfact\">dir_header</span>.<span class=\"supfact\">inode_number</span>._3_1_ =\n            (undefined)(uVar1 & gt; &gt; Number);\n        *(undefined *)(puVar2 + Number) =\n            <span class=\"supfact\">dir_header</span>.<span class=\"supfact\">inode_number</span>._3_1_;\n      } else {\n        memset(<span class=\"supfact\">dir</span> - &gt; entry_count_p, Number, Number);\n        <span class=\"supfact\">val</span> =\n            (ulong)(byte)<span class=\"supfact\">dir_header</span>._0_1_ & lt;\n        &lt;\n        Number;\n        <span class=\"supfact\">d</span> = <span class=\"supfact\">dir</span> - &gt;\n        entry_count_p;\n        <span class=\"supfact\">s</span> = (uchar *)((long)&amp; <span class=\"supfact\">val</span> + Number);\n        for (<span class=\"supfact\">bits</span> = Number; <span class=\"supfact\">bits</span> & lt; Number;\n             <span class=\"supfact\">bits</span> = <span class=\"supfact\">bits</span> + Number) {\n          *<span class=\"supfact\">d</span> = *<span class=\"supfact\">d</span> | *<span class=\"supfact\">s</span>;\n          <span class=\"supfact\">d</span> = <span class=\"supfact\">d</span> + Number;\n          <span class=\"supfact\">s</span> = <span class=\"supfact\">s</span> + -Number;\n        }\n        <span class=\"supfact\">val_1</span> =\n            (ulong)<span class=\"supfact\">dir_header</span>.<span class=\"supfact\">start_block</span> & lt;\n        &lt;\n        Number;\n        <span class=\"supfact\">d_1</span> = <span class=\"supfact\">dir</span> - &gt;\n        entry_count_p;\n        <span class=\"supfact\">s_1</span> =\n            (uchar *)((long)&amp; <span class=\"supfact\">val_1</span> + Number);\n        for (<span class=\"supfact\">bits_1</span> = Number;\n             <span class=\"supfact\">d_1</span> = <span class=\"supfact\">d_1</span> + Number,\n            <span class=\"supfact\">bits_1</span> & lt;\n             Number; <span class=\"supfact\">bits_1</span> = <span class=\"supfact\">bits_1</span> + Number) {\n          *<span class=\"supfact\">d_1</span> = *<span class=\"supfact\">d_1</span> | *<span class=\"supfact\">s_1</span>;\n          <span class=\"supfact\">s_1</span> = <span class=\"supfact\">s_1</span> + -Number;\n        }\n        <span class=\"supfact\">val_2</span> =\n            (ulong)<span class=\"supfact\">dir_header</span>.<span class=\"supfact\">inode_number</span> & lt;\n        &lt;\n        Number;\n        <span class=\"supfact\">d_2</span> = <span class=\"supfact\">dir</span> - &gt;\n        entry_count_p + Number;\n        <span class=\"supfact\">s_2</span> =\n            (uchar *)((long)&amp; <span class=\"supfact\">val_2</span> + Number);\n        for (<span class=\"supfact\">bits_2</span> = Number; <span class=\"supfact\">bits_2</span> & lt;\n             Number; <span class=\"supfact\">bits_2</span> = <span class=\"supfact\">bits_2</span> + Number) {\n          *<span class=\"supfact\">d_2</span> = *<span class=\"supfact\">d_2</span> | *<span class=\"supfact\">s_2</span>;\n          <span class=\"supfact\">d_2</span> = <span class=\"supfact\">d_2</span> + Number;\n          <span class=\"supfact\">s_2</span> = <span class=\"supfact\">s_2</span> + -Number;\n        }\n      }\n    }\n    <span class=\"supfact\">dir</span> - &gt;\n    entry_count_p = <span class=\"supfact\">dir</span> - &gt;\n    p;\n    <span class=\"supfact\">dir</span> - &gt;\n    <span class=\"supfact\">start_block</span> = uVar7;\n    <span class=\"supfact\">dir</span> - &gt;\n    entry_count = Number;\n    <span class=\"supfact\">dir</span> - &gt;\n    <span class=\"supfact\">inode_number</span> = <span class=\"supfact\">inode_number</span>;\n    <span class=\"supfact\">dir</span> - &gt;\n    p = <span class=\"supfact\">dir</span> - &gt;\n    p + Number;\n  }\n  __s = (undefined4 *)<span class=\"supfact\">dir</span> - &gt;\n  p;\n  <span class=\"supfact\">uVar6</span> = (ushort)<span class=\"supfact\">inode</span> & amp;\n  Number;\n  bVar3 = (byte)((<span class=\"supfact\">type</span> & amp; Number) & lt; &lt; Number);\n  bVar4 = (byte)(<span class=\"supfact\">uVar6</span> & gt; &gt; Number) | bVar3;\n  bVar5 = (char)<span class=\"supfact\">size</span> - Number;\n  iVar11 = <span class=\"supfact\">inode_number</span> - <span class=\"supfact\">dir</span> - &gt;\n  <span class=\"supfact\">inode_number</span>;\n  if (swap == Number) {\n    *__s =\n        CONCAT13((char)iVar11,\n                 CONCAT12(bVar5, CONCAT11(bVar4, (char)<span class=\"supfact\">uVar6</span>)));\n    *(char *)(__s + Number) = (char)((uint)iVar11 & gt; &gt; Number);\n  } else {\n    memset(__s, Number, Number);\n    <span class=\"supfact\">val_3</span> =\n        (ulong)(ushort)((ushort)<span class=\"supfact\">inode</span> & amp;\n                        Number | (bVar4 & amp; Number) & lt; &lt; Number) &\n        lt;\n    &lt;\n    Number;\n    <span class=\"supfact\">d_3</span> = (uchar *)__s;\n    <span class=\"supfact\">s_3</span> = (uchar *)((long)&amp; <span class=\"supfact\">val_3</span> + Number);\n    for (<span class=\"supfact\">bits_3</span> = Number; <span class=\"supfact\">bits_3</span> & lt; Number;\n         <span class=\"supfact\">bits_3</span> = <span class=\"supfact\">bits_3</span> + Number) {\n      *<span class=\"supfact\">d_3</span> = *<span class=\"supfact\">d_3</span> | *<span class=\"supfact\">s_3</span>;\n      <span class=\"supfact\">d_3</span> = <span class=\"supfact\">d_3</span> + Number;\n      <span class=\"supfact\">s_3</span> = <span class=\"supfact\">s_3</span> + -Number;\n    }\n    <span class=\"supfact\">val_4</span> = (ulong)(bVar3 & gt; &gt; Number) & lt;\n    &lt;\n    Number;\n    <span class=\"supfact\">s_4</span> = (uchar *)((long)&amp; <span class=\"supfact\">val_4</span> + Number);\n    <span class=\"supfact\">d_4</span> = (uchar *)__s;\n    for (<span class=\"supfact\">bits_4</span> = Number;\n         <span class=\"supfact\">d_4</span> = (uchar *)((long)<span class=\"supfact\">d_4</span> + Number),\n        <span class=\"supfact\">bits_4</span> & lt;\n         Number; <span class=\"supfact\">bits_4</span> = <span class=\"supfact\">bits_4</span> + Number) {\n      *<span class=\"supfact\">d_4</span> = *<span class=\"supfact\">d_4</span> | *<span class=\"supfact\">s_4</span>;\n      <span class=\"supfact\">s_4</span> = <span class=\"supfact\">s_4</span> + -Number;\n    }\n    <span class=\"supfact\">val_5</span> = (ulong)bVar5 & lt;\n    &lt;\n    Number;\n    <span class=\"supfact\">d_5</span> = (uchar *)((long)__s + Number);\n    <span class=\"supfact\">s_5</span> = (uchar *)((long)&amp; <span class=\"supfact\">val_5</span> + Number);\n    for (<span class=\"supfact\">bits_5</span> = Number; <span class=\"supfact\">bits_5</span> & lt; Number;\n         <span class=\"supfact\">bits_5</span> = <span class=\"supfact\">bits_5</span> + Number) {\n      *<span class=\"supfact\">d_5</span> = *<span class=\"supfact\">d_5</span> | *<span class=\"supfact\">s_5</span>;\n      <span class=\"supfact\">d_5</span> = <span class=\"supfact\">d_5</span> + Number;\n      <span class=\"supfact\">s_5</span> = <span class=\"supfact\">s_5</span> + -Number;\n    }\n    <span class=\"supfact\">val_6</span> = (long)(short)iVar11 & lt;\n    &lt;\n    Number;\n    <span class=\"supfact\">d_6</span> = (uchar *)((long)__s + Number);\n    <span class=\"supfact\">s_6</span> = (uchar *)((long)&amp; <span class=\"supfact\">val_6</span> + Number);\n    for (<span class=\"supfact\">bits_6</span> = Number; <span class=\"supfact\">bits_6</span> & lt; Number;\n         <span class=\"supfact\">bits_6</span> = <span class=\"supfact\">bits_6</span> + Number) {\n      *<span class=\"supfact\">d_6</span> = *<span class=\"supfact\">d_6</span> | *<span class=\"supfact\">s_6</span>;\n      <span class=\"supfact\">d_6</span> = <span class=\"supfact\">d_6</span> + Number;\n      <span class=\"supfact\">s_6</span> = <span class=\"supfact\">s_6</span> + -Number;\n    }\n  }\n  strncpy((char *)((long)__s + Number), <span class=\"supfact\">name</span>,\n          (ulong)<span class=\"supfact\">size</span>);\n  <span class=\"supfact\">dir</span> - &gt;\n  p = <span class=\"supfact\">dir</span> - &gt;\n  p + (ulong)<span class=\"supfact\">size</span> + Number;\n  <span class=\"supfact\">dir</span> - &gt;\n  entry_count = <span class=\"supfact\">dir</span> - &gt;\n  entry_count + Number;\n  return;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "varName", "ref_name": "inode", "ref_type": "squashfs_inode"}, {"name": "param_2", "type": "int", "pred_name": "__unk__", "ref_name": "inode_number", "ref_type": "uint"}, {"name": "param_3", "type": "char * *", "pred_name": "__unk__", "ref_name": "name", "ref_type": "char * *"}, {"name": "param_4", "type": "int", "pred_name": "__unk__", "ref_name": "type", "ref_type": "int"}, {"name": "param_5", "type": "char * *", "pred_name": "__unk__", "ref_name": "dir", "ref_type": "directory * *"}, {"name": "uVar3", "type": "short", "pred_name": "sVar2", "ref_name": "uVar6", "ref_type": "ushort"}, {"name": "local_130", "type": "char * *", "pred_name": "__unk__", "ref_name": "val_6", "ref_type": "ulonglong"}, {"name": "local_128", "type": "char * *", "pred_name": "local_128", "ref_name": "val_5", "ref_type": "ulonglong"}, {"name": "local_120", "type": "char * *", "pred_name": "local_120", "ref_name": "val_4", "ref_type": "ulonglong"}, {"name": "local_118", "type": "__unk__", "pred_name": "__unk__", "ref_name": "val_3", "ref_type": "ulonglong"}, {"name": "local_110", "type": "disappear", "pred_name": "", "ref_name": "val_2", "ref_type": "ulonglong"}, {"name": "local_108", "type": "disappear", "pred_name": "", "ref_name": "val_1", "ref_type": "ulonglong"}, {"name": "local_100", "type": "disappear", "pred_name": "", "ref_name": "val", "ref_type": "ulonglong"}, {"name": "local_f6", "type": "disappear", "pred_name": "", "ref_name": "dir_header", "ref_type": "struct squashfs_dir_header { uint:8 count; uint start_block; uint inode_number; }"}, {"name": "local_ed", "type": "disappear", "pred_name": "", "ref_name": "idir", "ref_type": "struct squashfs_dir_entry { uint:13 offset; uint:3 type; uint:8 size; int:16 inode_number; PADDING (0); }"}, {"name": "uStack_ea", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_e8", "type": "disappear", "pred_name": "", "ref_name": "b_pos_6", "ref_type": "int"}, {"name": "local_e4", "type": "disappear", "pred_name": "", "ref_name": "b_pos_5", "ref_type": "int"}, {"name": "local_e0", "type": "disappear", "pred_name": "", "ref_name": "b_pos_4", "ref_type": "int"}, {"name": "local_dc", "type": "disappear", "pred_name": "", "ref_name": "b_pos_3", "ref_type": "int"}, {"name": "local_d8", "type": "disappear", "pred_name": "", "ref_name": "idirp", "ref_type": "squashfs_dir_entry * *"}, {"name": "local_cc", "type": "int", "pred_name": "__unk__", "ref_name": "b_pos_2", "ref_type": "int"}, {"name": "local_c8", "type": "int", "pred_name": "__unk__", "ref_name": "b_pos_1", "ref_type": "int"}, {"name": "local_c4", "type": "int", "pred_name": "__unk__", "ref_name": "b_pos", "ref_type": "int"}, {"name": "local_c0", "type": "char * *", "pred_name": "__unk__", "ref_name": "buff", "ref_type": "uchar * *"}, {"name": "local_b8", "type": "int", "pred_name": "__unk__", "ref_name": "offset", "ref_type": "uint"}, {"name": "local_b4", "type": "int", "pred_name": "__unk__", "ref_name": "start_block", "ref_type": "uint"}, {"name": "local_b0", "type": "char * *", "pred_name": "__unk__", "ref_name": "d_6", "ref_type": "uchar * *"}, {"name": "local_a8", "type": "char * *", "pred_name": "__unk__", "ref_name": "s_6", "ref_type": "uchar * *"}, {"name": "local_9c", "type": "int", "pred_name": "__unk__", "ref_name": "bits_6", "ref_type": "int"}, {"name": "local_98", "type": "char * *", "pred_name": "__unk__", "ref_name": "d_5", "ref_type": "uchar * *"}, {"name": "local_90", "type": "char * *", "pred_name": "__unk__", "ref_name": "s_5", "ref_type": "uchar * *"}], "body_in_train": false}, {"repo_owner": "marcoscunha", "repo_name": "reverse", "path": "marcoscunha/reverse/df1e6d6a5ae4cf868a1939103019f06685519669be28e99ee7bfb4b6ab1823ed", "path_in_repo": "marcoscunha/reverse/platform/hardware/rabbits/rabbits/qemu/sc_qemu/mipsel-linux-user/op_helper.o", "objdump": "000000000000126c <helper_pmon>:\n    126c:\t55                   \tpush   %rbp\n    126d:\t48 89 e5             \tmov    %rsp,%rbp\n    1270:\t48 83 ec 20          \tsub    $0x20,%rsp\n    1274:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n    1277:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    127e:\t00 00 \n    1280:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1284:\t31 c0                \txor    %eax,%eax\n    1286:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    1289:\t89 c2                \tmov    %eax,%edx\n    128b:\tc1 ea 1f             \tshr    $0x1f,%edx\n    128e:\t01 d0                \tadd    %edx,%eax\n    1290:\td1 f8                \tsar    %eax\n    1292:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n    1295:\t83 7d ec 11          \tcmpl   $0x11,-0x14(%rbp)\n    1299:\t7f 37                \tjg     12d2 <helper_pmon+0x66>\n    129b:\t83 7d ec 02          \tcmpl   $0x2,-0x14(%rbp)\n    129f:\t0f 8c 91 00 00 00    \tjl     1336 <helper_pmon+0xca>\n    12a5:\t83 7d ec 11          \tcmpl   $0x11,-0x14(%rbp)\n    12a9:\t0f 87 87 00 00 00    \tja     1336 <helper_pmon+0xca>\n    12af:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    12b2:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    12b9:\t00 \n    12ba:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # 12c1 <helper_pmon+0x55>\n    12c1:\t8b 04 02             \tmov    (%rdx,%rax,1),%eax\n    12c4:\t48 98                \tcltq   \n    12c6:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 12cd <helper_pmon+0x61>\n    12cd:\t48 01 d0             \tadd    %rdx,%rax\n    12d0:\tff e0                \tjmp    *%rax\n    12d2:\t81 7d ec 9e 00 00 00 \tcmpl   $0x9e,-0x14(%rbp)\n    12d9:\t74 34                \tje     130f <helper_pmon+0xa3>\n    12db:\teb 59                \tjmp    1336 <helper_pmon+0xca>\n    12dd:\t4c 89 f0             \tmov    %r14,%rax\n    12e0:\t8b 40 10             \tmov    0x10(%rax),%eax\n    12e3:\t85 c0                \ttest   %eax,%eax\n    12e5:\t75 0a                \tjne    12f1 <helper_pmon+0x85>\n    12e7:\t4c 89 f0             \tmov    %r14,%rax\n    12ea:\tc7 40 08 ff ff ff ff \tmovl   $0xffffffff,0x8(%rax)\n    12f1:\t4c 89 f0             \tmov    %r14,%rax\n    12f4:\tc7 40 08 ff ff ff ff \tmovl   $0xffffffff,0x8(%rax)\n    12fb:\teb 39                \tjmp    1336 <helper_pmon+0xca>\n    12fd:\t4c 89 f0             \tmov    %r14,%rax\n    1300:\t8b 40 10             \tmov    0x10(%rax),%eax\n    1303:\t0f be c0             \tmovsbl %al,%eax\n    1306:\t89 c7                \tmov    %eax,%edi\n    1308:\te8 00 00 00 00       \tcall   130d <helper_pmon+0xa1>\n    130d:\teb 27                \tjmp    1336 <helper_pmon+0xca>\n    130f:\t4c 89 f0             \tmov    %r14,%rax\n    1312:\t8b 40 10             \tmov    0x10(%rax),%eax\n    1315:\t89 c0                \tmov    %eax,%eax\n    1317:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    131b:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    131f:\t48 89 c6             \tmov    %rax,%rsi\n    1322:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 1329 <helper_pmon+0xbd>\n    1329:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    132e:\te8 00 00 00 00       \tcall   1333 <helper_pmon+0xc7>\n    1333:\teb 01                \tjmp    1336 <helper_pmon+0xca>\n    1335:\t90                   \tnop\n    1336:\t90                   \tnop\n    1337:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    133b:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    1342:\t00 00 \n    1344:\t74 05                \tje     134b <helper_pmon+0xdf>\n    1346:\te8 00 00 00 00       \tcall   134b <helper_pmon+0xdf>\n    134b:\tc9                   \tleave  \n    134c:\tc3                   \tret    ", "code_s": "void helper_pmon(int <span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  long <span class=\"supfact\">unaff_R14</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">param_1</span> = <span class=\"supfact\">param_1</span> / Number;\n  if (<span class=\"supfact\">param_1</span> & lt; Number) {\n    switch (<span class=\"supfact\">param_1</span>) {\n    case Number:\n      if (*(int *)(<span class=\"supfact\">unaff_R14</span> + Number) == Number) {\n        *(undefined4 *)(<span class=\"supfact\">unaff_R14</span> + Number) = Number;\n      }\n    case Number:\n      *(undefined4 *)(<span class=\"supfact\">unaff_R14</span> + Number) = Number;\n      break;\n    case Number:\n    case Number:\n      putchar((int)(char)*(undefined4 *)(<span class=\"supfact\">unaff_R14</span> + Number));\n    }\n  } else if (<span class=\"supfact\">param_1</span> == Number) {\n    printf(String, (ulong) * (uint *)(<span class=\"supfact\">unaff_R14</span> + Number));\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "code_t": "void helper_pmon(int <span class=\"supfact\">function</span>) {\n  long lVar1;\n  int iVar2;\n  long <span class=\"supfact\">unaff_R14</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">function</span> - local;\n  uchar *fmt;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  iVar2 = <span class=\"supfact\">function</span> / Number;\n  if (iVar2 & lt; Number) {\n    switch (iVar2) {\n    case Number:\n      if (*(int *)(<span class=\"supfact\">unaff_R14</span> + Number) == Number) {\n        *(undefined4 *)(<span class=\"supfact\">unaff_R14</span> + Number) = Number;\n      }\n    case Number:\n      *(undefined4 *)(<span class=\"supfact\">unaff_R14</span> + Number) = Number;\n      break;\n    case Number:\n    case Number:\n      putchar((int)(char)*(undefined4 *)(<span class=\"supfact\">unaff_R14</span> + Number));\n    }\n  } else if (iVar2 == Number) {\n    printf(String, (ulong) * (uint *)(<span class=\"supfact\">unaff_R14</span> + Number));\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "function", "ref_name": "function", "ref_type": "int"}, {"name": "unaff_R14", "type": "long", "pred_name": "unaff_R14", "ref_name": "unaff_R14", "ref_type": "long"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "vbastioni", "repo_name": "fractol", "path": "vbastioni/fractol/0c9ad26008075acc55f7e02ab2d2cd95a05efbc6f387a18b58466cba84491b24", "path_in_repo": "vbastioni/fractol/libft/ft_memalloc.o", "objdump": "0000000000000000 <ft_memalloc>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 83 ec 20          \tsub    $0x20,%rsp\n   8:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n  10:\t48 89 c7             \tmov    %rax,%rdi\n  13:\te8 00 00 00 00       \tcall   18 <ft_memalloc+0x18>\n  18:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  1c:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n  21:\t75 07                \tjne    2a <ft_memalloc+0x2a>\n  23:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  28:\teb 2b                \tjmp    55 <ft_memalloc+0x55>\n  2a:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n  31:\t00 \n  32:\teb 13                \tjmp    47 <ft_memalloc+0x47>\n  34:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n  38:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  3c:\t48 01 d0             \tadd    %rdx,%rax\n  3f:\tc6 00 00             \tmovb   $0x0,(%rax)\n  42:\t48 83 45 f8 01       \taddq   $0x1,-0x8(%rbp)\n  47:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  4b:\t48 3b 45 e8          \tcmp    -0x18(%rbp),%rax\n  4f:\t72 e3                \tjb     34 <ft_memalloc+0x34>\n  51:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  55:\tc9                   \tleave  \n  56:\tc3                   \tret    \n", "code_s": "void *ft_memalloc(size_t <span class=\"supfact\">param_1</span>) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  ulong <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">pvVar1</span> = malloc(<span class=\"supfact\">param_1</span>);\n  if (<span class=\"supfact\">pvVar1</span> == (void *)Number) {\n    <span class=\"supfact\">pvVar1</span> = (void *)Number;\n  } else {\n    for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> & lt;\n         <span class=\"supfact\">param_1</span>;\n         <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n      *(undefined *)(<span class=\"supfact\">local_10</span> + (long)<span class=\"supfact\">pvVar1</span>) =\n          Number;\n    }\n  }\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *ft_memalloc(size_t <span class=\"supfact\">size</span>) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  size_t <span class=\"supfact\">size</span> - local;\n  void *ret;\n  size_t <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">pvVar1</span> = malloc(<span class=\"supfact\">size</span>);\n  if (<span class=\"supfact\">pvVar1</span> == (void *)Number) {\n    <span class=\"supfact\">pvVar1</span> = (void *)Number;\n  } else {\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n         <span class=\"supfact\">size</span>; <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      *(undefined *)(<span class=\"supfact\">i</span> + (long)<span class=\"supfact\">pvVar1</span>) = Number;\n    }\n  }\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "param_1", "type": "size_t", "pred_name": "size", "ref_name": "size", "ref_type": "size_t"}, {"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}, {"name": "local_10", "type": "size_t", "pred_name": "index", "ref_name": "i", "ref_type": "size_t"}], "body_in_train": false}, {"repo_owner": "otubo", "repo_name": "qemu", "path": "otubo/qemu/16d8ba2c4068410b0b35dbaf0cdce2d8af61ab5539c8297115e58137351df224", "path_in_repo": "otubo/qemu//s390x-softmmu/hw/rdma/rdma_backend.o", "objdump": "0000000000002767 <rdma_backend_get_gid_index>:\n    2767:\t55                   \tpush   %rbp\n    2768:\t48 89 e5             \tmov    %rsp,%rbp\n    276b:\t48 83 ec 40          \tsub    $0x40,%rsp\n    276f:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    2773:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n    2777:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    277e:\t00 00 \n    2780:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    2784:\t31 c0                \txor    %eax,%eax\n    2786:\tc7 45 d8 00 00 00 00 \tmovl   $0x0,-0x28(%rbp)\n    278d:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    2791:\t0f b6 40 68          \tmovzbl 0x68(%rax),%eax\n    2795:\t0f b6 f0             \tmovzbl %al,%esi\n    2798:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    279c:\t48 8b 40 58          \tmov    0x58(%rax),%rax\n    27a0:\t48 8d 4d e0          \tlea    -0x20(%rbp),%rcx\n    27a4:\t8b 55 d8             \tmov    -0x28(%rbp),%edx\n    27a7:\t48 89 c7             \tmov    %rax,%rdi\n    27aa:\te8 00 00 00 00       \tcall   27af <rdma_backend_get_gid_index+0x48>\n    27af:\t89 45 dc             \tmov    %eax,-0x24(%rbp)\n    27b2:\t83 45 d8 01          \taddl   $0x1,-0x28(%rbp)\n    27b6:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n    27ba:\t75 1c                \tjne    27d8 <rdma_backend_get_gid_index+0x71>\n    27bc:\t48 8b 4d c0          \tmov    -0x40(%rbp),%rcx\n    27c0:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n    27c4:\tba 10 00 00 00       \tmov    $0x10,%edx\n    27c9:\t48 89 ce             \tmov    %rcx,%rsi\n    27cc:\t48 89 c7             \tmov    %rax,%rdi\n    27cf:\te8 00 00 00 00       \tcall   27d4 <rdma_backend_get_gid_index+0x6d>\n    27d4:\t85 c0                \ttest   %eax,%eax\n    27d6:\t75 b5                \tjne    278d <rdma_backend_get_gid_index+0x26>\n    27d8:\t83 7d dc 00          \tcmpl   $0x0,-0x24(%rbp)\n    27dc:\t75 08                \tjne    27e6 <rdma_backend_get_gid_index+0x7f>\n    27de:\t8b 45 d8             \tmov    -0x28(%rbp),%eax\n    27e1:\t83 e8 01             \tsub    $0x1,%eax\n    27e4:\teb 03                \tjmp    27e9 <rdma_backend_get_gid_index+0x82>\n    27e6:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    27e9:\t48 8b 7d f8          \tmov    -0x8(%rbp),%rdi\n    27ed:\t64 48 33 3c 25 28 00 \txor    %fs:0x28,%rdi\n    27f4:\t00 00 \n    27f6:\t74 05                \tje     27fd <rdma_backend_get_gid_index+0x96>\n    27f8:\te8 00 00 00 00       \tcall   27fd <rdma_backend_get_gid_index+0x96>\n    27fd:\tc9                   \tleave  \n    27fe:\tc3                   \tret    ", "code_s": "int rdma_backend_get_gid_index(long <span class=\"supfact\">param_1</span>,\n                               void *<span class=\"supfact\">param_2</span>) {\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">local_30</span>;\n  undefined <span class=\"supfact\">local_28</span>[Number];\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_30</span> = Number;\n  iVar1 = <span class=\"supfact\">local_30</span>;\n  do {\n    <span class=\"supfact\">local_30</span> = iVar1;\n    iVar2 = ibv_query_gid(*(undefined8 *)(<span class=\"supfact\">param_1</span> + Number),\n                          *(undefined *)(<span class=\"supfact\">param_1</span> + Number),\n                          <span class=\"supfact\">local_30</span>, <span class=\"supfact\">local_28</span>);\n    if (iVar2 != Number)\n      break;\n    iVar3 = memcmp(<span class=\"supfact\">local_28</span>, <span class=\"supfact\">param_2</span>, Number);\n    iVar1 = <span class=\"supfact\">local_30</span> + Number;\n  } while (iVar3 != Number);\n  if (iVar2 == Number) {\n    iVar2 = <span class=\"supfact\">local_30</span>;\n  }\n  if (<span class=\"supfact\">local_10</span> ==\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return iVar2;\n  }\n  __stack_chk_fail();\n}", "code_t": "int rdma_backend_get_gid_index(RdmaBackendDev *<span class=\"supfact\">backend_dev</span>,\n                               ibv_gid *<span class=\"supfact\">gid</span>) {\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  ibv_gid *<span class=\"supfact\">gid</span> - local;\n  RdmaBackendDev *<span class=\"supfact\">backend_dev</span> - local;\n  int <span class=\"supfact\">i</span>;\n  int ret;\n  ibv_gid <span class=\"supfact\">sgid</span>;\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">i</span> = Number;\n  iVar1 = <span class=\"supfact\">i</span>;\n  do {\n    <span class=\"supfact\">i</span> = iVar1;\n    iVar2 =\n        ibv_query_gid(<span class=\"supfact\">backend_dev</span> - &gt;\n                      context, <span class=\"supfact\">backend_dev</span> - &gt;\n                      port_num, <span class=\"supfact\">i</span>, &amp; <span class=\"supfact\">sgid</span>);\n    if (iVar2 != Number)\n      break;\n    iVar3 = memcmp(&amp; <span class=\"supfact\">sgid</span>, <span class=\"supfact\">gid</span>, Number);\n    iVar1 = <span class=\"supfact\">i</span> + Number;\n  } while (iVar3 != Number);\n  if (iVar2 == Number) {\n    iVar2 = <span class=\"supfact\">i</span>;\n  }\n  if (<span class=\"supfact\">local_10</span> ==\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return iVar2;\n  }\n  __stack_chk_fail();\n}", "var": [{"name": "param_1", "type": "QEMUTimer * *", "pred_name": "ts", "ref_name": "backend_dev", "ref_type": "RdmaBackendDev * *"}, {"name": "param_2", "type": "int64_t", "pred_name": "expire_time", "ref_name": "gid", "ref_type": "ibv_gid * *"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_30", "type": "int", "pred_name": "__unk__", "ref_name": "i", "ref_type": "int"}, {"name": "local_28", "type": "uint8_t[16][16]", "pred_name": "__unk__", "ref_name": "sgid", "ref_type": "union ibv_gid { uint8_t[16] raw; anon_struct_16_2_2050bb64_for_global global; PADDING (14); }"}, {"name": "local_10", "type": "long", "pred_name": "local_10", "ref_name": "local_10", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "0x90", "repo_name": "openwips-ng", "path": "0x90/openwips-ng/f32f82915263282b0316f4df7ae62aeb41f6035d4ee5cdb10595f081928ec945", "path_in_repo": "0x90/openwips-ng/sensor/Release/common/pcap.o", "objdump": "0000000000000053 <free_packet_list>:\n      53:\t55                   \tpush   %rbp\n      54:\t48 89 e5             \tmov    %rsp,%rbp\n      57:\t48 83 ec 10          \tsub    $0x10,%rsp\n      5b:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n      5f:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n      64:\t74 0c                \tje     72 <free_packet_list+0x1f>\n      66:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n      6a:\t48 8b 00             \tmov    (%rax),%rax\n      6d:\t48 85 c0             \ttest   %rax,%rax\n      70:\t75 0a                \tjne    7c <free_packet_list+0x29>\n      72:\tb8 01 00 00 00       \tmov    $0x1,%eax\n      77:\te9 88 00 00 00       \tjmp    104 <free_packet_list+0xb1>\n      7c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n      80:\t48 8b 00             \tmov    (%rax),%rax\n      83:\t48 83 c0 18          \tadd    $0x18,%rax\n      87:\t48 89 c7             \tmov    %rax,%rdi\n      8a:\te8 00 00 00 00       \tcall   8f <free_packet_list+0x3c>\n      8f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n      93:\t48 8b 00             \tmov    (%rax),%rax\n      96:\t48 83 c0 08          \tadd    $0x8,%rax\n      9a:\tbe 01 00 00 00       \tmov    $0x1,%esi\n      9f:\t48 89 c7             \tmov    %rax,%rdi\n      a2:\te8 00 00 00 00       \tcall   a7 <free_packet_list+0x54>\n      a7:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n      ab:\t48 8b 00             \tmov    (%rax),%rax\n      ae:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n      b2:\t48 85 c0             \ttest   %rax,%rax\n      b5:\t74 13                \tje     ca <free_packet_list+0x77>\n      b7:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n      bb:\t48 8b 00             \tmov    (%rax),%rax\n      be:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n      c2:\t48 89 c7             \tmov    %rax,%rdi\n      c5:\te8 00 00 00 00       \tcall   ca <free_packet_list+0x77>\n      ca:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n      ce:\t48 8b 00             \tmov    (%rax),%rax\n      d1:\t48 c7 40 40 00 00 00 \tmovq   $0x0,0x40(%rax)\n      d8:\t00 \n      d9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n      dd:\t48 8b 00             \tmov    (%rax),%rax\n      e0:\t48 85 c0             \ttest   %rax,%rax\n      e3:\t74 0f                \tje     f4 <free_packet_list+0xa1>\n      e5:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n      e9:\t48 8b 00             \tmov    (%rax),%rax\n      ec:\t48 89 c7             \tmov    %rax,%rdi\n      ef:\te8 00 00 00 00       \tcall   f4 <free_packet_list+0xa1>\n      f4:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n      f8:\t48 c7 00 00 00 00 00 \tmovq   $0x0,(%rax)\n      ff:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     104:\tc9                   \tleave  \n     105:\tc3                   \tret    ", "code_s": "undefined8 free_packet_list(void **<span class=\"supfact\">param_1</span>) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  if ((<span class=\"supfact\">param_1</span> == (void **)Number) ||\n      (*<span class=\"supfact\">param_1</span> == (void *)Number)) {\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else {\n    pthread_mutex_destroy(\n        (pthread_mutex_t *)((long)*<span class=\"supfact\">param_1</span> + Number));\n    free_pcap_packet((long)*<span class=\"supfact\">param_1</span> + Number, Number);\n    if (*(long *)((long)*<span class=\"supfact\">param_1</span> + Number) != Number) {\n      free(*(void **)((long)*<span class=\"supfact\">param_1</span> + Number));\n    }\n    *(undefined8 *)((long)*<span class=\"supfact\">param_1</span> + Number) = Number;\n    if (*<span class=\"supfact\">param_1</span> != (void *)Number) {\n      free(*<span class=\"supfact\">param_1</span>);\n    }\n    *<span class=\"supfact\">param_1</span> = (void *)Number;\n    <span class=\"supfact\">uVar1</span> = Number;\n  }\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "int free_packet_list(packet_list **<span class=\"supfact\">ptr</span>) {\n  int iVar1;\n  packet_list **<span class=\"supfact\">ptr</span> - local;\n  if ((<span class=\"supfact\">ptr</span> == (packet_list **)Number) ||\n      (*<span class=\"supfact\">ptr</span> == (packet_list *)Number)) {\n    iVar1 = Number;\n  } else {\n    pthread_mutex_destroy((pthread_mutex_t *)&amp; (*<span class=\"supfact\">ptr</span>) - &gt;\n                          mutex);\n    free_pcap_packet(&amp; (*<span class=\"supfact\">ptr</span>) - &gt; packets, Number);\n    if ((*<span class=\"supfact\">ptr</span>) - &gt;\n        pcap_header != (pcap_file_header *)Number) {\n      free((*<span class=\"supfact\">ptr</span>) - &gt; pcap_header);\n    }\n    (*<span class=\"supfact\">ptr</span>) - &gt;\n    pcap_header = (pcap_file_header *)Number;\n    if (*<span class=\"supfact\">ptr</span> != (packet_list *)Number) {\n      free(*<span class=\"supfact\">ptr</span>);\n    }\n    *<span class=\"supfact\">ptr</span> = (packet_list *)Number;\n    iVar1 = Number;\n  }\n  return iVar1;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "self", "ref_name": "ptr", "ref_type": "packet_list * * *"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "DavisDev", "repo_name": "pmplayer-advance", "path": "DavisDev/pmplayer-advance/13264fd768e4e7d3048d19394343d18b61af803aacb5716ea5b26d66cbe8f789", "path_in_repo": "DavisDev/pmplayer-advance/ffmpeg-psp.0.5/libavcodec/dsputil.o", "objdump": "0000000000005ffc <ff_gmc_c>:\n    5ffc:\t53                   \tpush   %rbx\n    5ffd:\t48 83 ec 50          \tsub    $0x50,%rsp\n    6001:\t48 89 7c 24 18       \tmov    %rdi,0x18(%rsp)\n    6006:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n    600b:\t89 54 24 0c          \tmov    %edx,0xc(%rsp)\n    600f:\t89 4c 24 08          \tmov    %ecx,0x8(%rsp)\n    6013:\t44 89 44 24 04       \tmov    %r8d,0x4(%rsp)\n    6018:\t44 89 0c 24          \tmov    %r9d,(%rsp)\n    601c:\t8b 84 24 80 00 00 00 \tmov    0x80(%rsp),%eax\n    6023:\tba 01 00 00 00       \tmov    $0x1,%edx\n    6028:\t89 c1                \tmov    %eax,%ecx\n    602a:\td3 e2                \tshl    %cl,%edx\n    602c:\t89 d0                \tmov    %edx,%eax\n    602e:\t89 44 24 3c          \tmov    %eax,0x3c(%rsp)\n    6032:\t83 ac 24 90 00 00 00 \tsubl   $0x1,0x90(%rsp)\n    6039:\t01 \n    603a:\t83 ac 24 98 00 00 00 \tsubl   $0x1,0x98(%rsp)\n    6041:\t01 \n    6042:\tc7 44 24 4c 00 00 00 \tmovl   $0x0,0x4c(%rsp)\n    6049:\t00 \n    604a:\te9 85 03 00 00       \tjmp    63d4 <ff_gmc_c+0x3d8>\n    604f:\t8b 44 24 04          \tmov    0x4(%rsp),%eax\n    6053:\t89 44 24 48          \tmov    %eax,0x48(%rsp)\n    6057:\t8b 04 24             \tmov    (%rsp),%eax\n    605a:\t89 44 24 44          \tmov    %eax,0x44(%rsp)\n    605e:\tc7 44 24 40 00 00 00 \tmovl   $0x0,0x40(%rsp)\n    6065:\t00 \n    6066:\te9 4a 03 00 00       \tjmp    63b5 <ff_gmc_c+0x3b9>\n    606b:\t8b 44 24 48          \tmov    0x48(%rsp),%eax\n    606f:\tc1 f8 10             \tsar    $0x10,%eax\n    6072:\t89 44 24 38          \tmov    %eax,0x38(%rsp)\n    6076:\t8b 44 24 44          \tmov    0x44(%rsp),%eax\n    607a:\tc1 f8 10             \tsar    $0x10,%eax\n    607d:\t89 44 24 34          \tmov    %eax,0x34(%rsp)\n    6081:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    6085:\t83 e8 01             \tsub    $0x1,%eax\n    6088:\t23 44 24 38          \tand    0x38(%rsp),%eax\n    608c:\t89 44 24 30          \tmov    %eax,0x30(%rsp)\n    6090:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    6094:\t83 e8 01             \tsub    $0x1,%eax\n    6097:\t23 44 24 34          \tand    0x34(%rsp),%eax\n    609b:\t89 44 24 2c          \tmov    %eax,0x2c(%rsp)\n    609f:\t8b 84 24 80 00 00 00 \tmov    0x80(%rsp),%eax\n    60a6:\t89 c1                \tmov    %eax,%ecx\n    60a8:\td3 7c 24 38          \tsarl   %cl,0x38(%rsp)\n    60ac:\t8b 84 24 80 00 00 00 \tmov    0x80(%rsp),%eax\n    60b3:\t89 c1                \tmov    %eax,%ecx\n    60b5:\td3 7c 24 34          \tsarl   %cl,0x34(%rsp)\n    60b9:\t8b 54 24 38          \tmov    0x38(%rsp),%edx\n    60bd:\t8b 84 24 90 00 00 00 \tmov    0x90(%rsp),%eax\n    60c4:\t39 c2                \tcmp    %eax,%edx\n    60c6:\t0f 83 ac 01 00 00    \tjae    6278 <ff_gmc_c+0x27c>\n    60cc:\t8b 54 24 34          \tmov    0x34(%rsp),%edx\n    60d0:\t8b 84 24 98 00 00 00 \tmov    0x98(%rsp),%eax\n    60d7:\t39 c2                \tcmp    %eax,%edx\n    60d9:\t0f 83 ee 00 00 00    \tjae    61cd <ff_gmc_c+0x1d1>\n    60df:\t8b 44 24 34          \tmov    0x34(%rsp),%eax\n    60e3:\t0f af 44 24 0c       \timul   0xc(%rsp),%eax\n    60e8:\t89 c2                \tmov    %eax,%edx\n    60ea:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    60ee:\t01 d0                \tadd    %edx,%eax\n    60f0:\t89 44 24 28          \tmov    %eax,0x28(%rsp)\n    60f4:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n    60f8:\t48 63 d0             \tmovslq %eax,%rdx\n    60fb:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    6100:\t48 01 d0             \tadd    %rdx,%rax\n    6103:\t0f b6 00             \tmovzbl (%rax),%eax\n    6106:\t0f b6 d0             \tmovzbl %al,%edx\n    6109:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    610d:\t2b 44 24 30          \tsub    0x30(%rsp),%eax\n    6111:\t0f af d0             \timul   %eax,%edx\n    6114:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n    6118:\t48 98                \tcltq   \n    611a:\t48 8d 48 01          \tlea    0x1(%rax),%rcx\n    611e:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    6123:\t48 01 c8             \tadd    %rcx,%rax\n    6126:\t0f b6 00             \tmovzbl (%rax),%eax\n    6129:\t0f b6 c0             \tmovzbl %al,%eax\n    612c:\t0f af 44 24 30       \timul   0x30(%rsp),%eax\n    6131:\t01 c2                \tadd    %eax,%edx\n    6133:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    6137:\t2b 44 24 2c          \tsub    0x2c(%rsp),%eax\n    613b:\t0f af d0             \timul   %eax,%edx\n    613e:\t8b 4c 24 28          \tmov    0x28(%rsp),%ecx\n    6142:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    6146:\t01 c8                \tadd    %ecx,%eax\n    6148:\t48 63 c8             \tmovslq %eax,%rcx\n    614b:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    6150:\t48 01 c8             \tadd    %rcx,%rax\n    6153:\t0f b6 00             \tmovzbl (%rax),%eax\n    6156:\t0f b6 c8             \tmovzbl %al,%ecx\n    6159:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    615d:\t2b 44 24 30          \tsub    0x30(%rsp),%eax\n    6161:\t0f af c8             \timul   %eax,%ecx\n    6164:\t8b 74 24 28          \tmov    0x28(%rsp),%esi\n    6168:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    616c:\t01 f0                \tadd    %esi,%eax\n    616e:\t48 98                \tcltq   \n    6170:\t48 8d 70 01          \tlea    0x1(%rax),%rsi\n    6174:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    6179:\t48 01 f0             \tadd    %rsi,%rax\n    617c:\t0f b6 00             \tmovzbl (%rax),%eax\n    617f:\t0f b6 c0             \tmovzbl %al,%eax\n    6182:\t0f af 44 24 30       \timul   0x30(%rsp),%eax\n    6187:\t01 c8                \tadd    %ecx,%eax\n    6189:\t0f af 44 24 2c       \timul   0x2c(%rsp),%eax\n    618e:\t01 c2                \tadd    %eax,%edx\n    6190:\t8b 84 24 88 00 00 00 \tmov    0x88(%rsp),%eax\n    6197:\t01 c2                \tadd    %eax,%edx\n    6199:\t8b 84 24 80 00 00 00 \tmov    0x80(%rsp),%eax\n    61a0:\t01 c0                \tadd    %eax,%eax\n    61a2:\t89 c1                \tmov    %eax,%ecx\n    61a4:\td3 fa                \tsar    %cl,%edx\n    61a6:\t89 d1                \tmov    %edx,%ecx\n    61a8:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n    61ac:\t0f af 44 24 0c       \timul   0xc(%rsp),%eax\n    61b1:\t89 c2                \tmov    %eax,%edx\n    61b3:\t8b 44 24 40          \tmov    0x40(%rsp),%eax\n    61b7:\t01 d0                \tadd    %edx,%eax\n    61b9:\t48 63 d0             \tmovslq %eax,%rdx\n    61bc:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    61c1:\t48 01 d0             \tadd    %rdx,%rax\n    61c4:\t89 ca                \tmov    %ecx,%edx\n    61c6:\t88 10                \tmov    %dl,(%rax)\n    61c8:\te9 d3 01 00 00       \tjmp    63a0 <ff_gmc_c+0x3a4>\n    61cd:\t8b 94 24 98 00 00 00 \tmov    0x98(%rsp),%edx\n    61d4:\t8b 44 24 34          \tmov    0x34(%rsp),%eax\n    61d8:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    61dd:\t89 c7                \tmov    %eax,%edi\n    61df:\te8 1c 9e ff ff       \tcall   0 <av_clip>\n    61e4:\t0f af 44 24 0c       \timul   0xc(%rsp),%eax\n    61e9:\t89 c2                \tmov    %eax,%edx\n    61eb:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    61ef:\t01 d0                \tadd    %edx,%eax\n    61f1:\t89 44 24 28          \tmov    %eax,0x28(%rsp)\n    61f5:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n    61f9:\t48 63 d0             \tmovslq %eax,%rdx\n    61fc:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    6201:\t48 01 d0             \tadd    %rdx,%rax\n    6204:\t0f b6 00             \tmovzbl (%rax),%eax\n    6207:\t0f b6 d0             \tmovzbl %al,%edx\n    620a:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    620e:\t2b 44 24 30          \tsub    0x30(%rsp),%eax\n    6212:\t0f af d0             \timul   %eax,%edx\n    6215:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n    6219:\t48 98                \tcltq   \n    621b:\t48 8d 48 01          \tlea    0x1(%rax),%rcx\n    621f:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    6224:\t48 01 c8             \tadd    %rcx,%rax\n    6227:\t0f b6 00             \tmovzbl (%rax),%eax\n    622a:\t0f b6 c0             \tmovzbl %al,%eax\n    622d:\t0f af 44 24 30       \timul   0x30(%rsp),%eax\n    6232:\t01 d0                \tadd    %edx,%eax\n    6234:\t0f af 44 24 3c       \timul   0x3c(%rsp),%eax\n    6239:\t89 c2                \tmov    %eax,%edx\n    623b:\t8b 84 24 88 00 00 00 \tmov    0x88(%rsp),%eax\n    6242:\t01 c2                \tadd    %eax,%edx\n    6244:\t8b 84 24 80 00 00 00 \tmov    0x80(%rsp),%eax\n    624b:\t01 c0                \tadd    %eax,%eax\n    624d:\t89 c1                \tmov    %eax,%ecx\n    624f:\td3 fa                \tsar    %cl,%edx\n    6251:\t89 d1                \tmov    %edx,%ecx\n    6253:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n    6257:\t0f af 44 24 0c       \timul   0xc(%rsp),%eax\n    625c:\t89 c2                \tmov    %eax,%edx\n    625e:\t8b 44 24 40          \tmov    0x40(%rsp),%eax\n    6262:\t01 d0                \tadd    %edx,%eax\n    6264:\t48 63 d0             \tmovslq %eax,%rdx\n    6267:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    626c:\t48 01 d0             \tadd    %rdx,%rax\n    626f:\t89 ca                \tmov    %ecx,%edx\n    6271:\t88 10                \tmov    %dl,(%rax)\n    6273:\te9 28 01 00 00       \tjmp    63a0 <ff_gmc_c+0x3a4>\n    6278:\t8b 54 24 34          \tmov    0x34(%rsp),%edx\n    627c:\t8b 84 24 98 00 00 00 \tmov    0x98(%rsp),%eax\n    6283:\t39 c2                \tcmp    %eax,%edx\n    6285:\t0f 83 a9 00 00 00    \tjae    6334 <ff_gmc_c+0x338>\n    628b:\t8b 94 24 90 00 00 00 \tmov    0x90(%rsp),%edx\n    6292:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    6296:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    629b:\t89 c7                \tmov    %eax,%edi\n    629d:\te8 5e 9d ff ff       \tcall   0 <av_clip>\n    62a2:\t8b 54 24 34          \tmov    0x34(%rsp),%edx\n    62a6:\t0f af 54 24 0c       \timul   0xc(%rsp),%edx\n    62ab:\t01 d0                \tadd    %edx,%eax\n    62ad:\t89 44 24 28          \tmov    %eax,0x28(%rsp)\n    62b1:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n    62b5:\t48 63 d0             \tmovslq %eax,%rdx\n    62b8:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    62bd:\t48 01 d0             \tadd    %rdx,%rax\n    62c0:\t0f b6 00             \tmovzbl (%rax),%eax\n    62c3:\t0f b6 d0             \tmovzbl %al,%edx\n    62c6:\t8b 44 24 3c          \tmov    0x3c(%rsp),%eax\n    62ca:\t2b 44 24 2c          \tsub    0x2c(%rsp),%eax\n    62ce:\t0f af d0             \timul   %eax,%edx\n    62d1:\t8b 4c 24 28          \tmov    0x28(%rsp),%ecx\n    62d5:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    62d9:\t01 c8                \tadd    %ecx,%eax\n    62db:\t48 63 c8             \tmovslq %eax,%rcx\n    62de:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    62e3:\t48 01 c8             \tadd    %rcx,%rax\n    62e6:\t0f b6 00             \tmovzbl (%rax),%eax\n    62e9:\t0f b6 c0             \tmovzbl %al,%eax\n    62ec:\t0f af 44 24 2c       \timul   0x2c(%rsp),%eax\n    62f1:\t01 d0                \tadd    %edx,%eax\n    62f3:\t0f af 44 24 3c       \timul   0x3c(%rsp),%eax\n    62f8:\t89 c2                \tmov    %eax,%edx\n    62fa:\t8b 84 24 88 00 00 00 \tmov    0x88(%rsp),%eax\n    6301:\t01 c2                \tadd    %eax,%edx\n    6303:\t8b 84 24 80 00 00 00 \tmov    0x80(%rsp),%eax\n    630a:\t01 c0                \tadd    %eax,%eax\n    630c:\t89 c1                \tmov    %eax,%ecx\n    630e:\td3 fa                \tsar    %cl,%edx\n    6310:\t89 d1                \tmov    %edx,%ecx\n    6312:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n    6316:\t0f af 44 24 0c       \timul   0xc(%rsp),%eax\n    631b:\t89 c2                \tmov    %eax,%edx\n    631d:\t8b 44 24 40          \tmov    0x40(%rsp),%eax\n    6321:\t01 d0                \tadd    %edx,%eax\n    6323:\t48 63 d0             \tmovslq %eax,%rdx\n    6326:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    632b:\t48 01 d0             \tadd    %rdx,%rax\n    632e:\t89 ca                \tmov    %ecx,%edx\n    6330:\t88 10                \tmov    %dl,(%rax)\n    6332:\teb 6c                \tjmp    63a0 <ff_gmc_c+0x3a4>\n    6334:\t8b 94 24 90 00 00 00 \tmov    0x90(%rsp),%edx\n    633b:\t8b 44 24 38          \tmov    0x38(%rsp),%eax\n    633f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    6344:\t89 c7                \tmov    %eax,%edi\n    6346:\te8 b5 9c ff ff       \tcall   0 <av_clip>\n    634b:\t89 c3                \tmov    %eax,%ebx\n    634d:\t8b 94 24 98 00 00 00 \tmov    0x98(%rsp),%edx\n    6354:\t8b 44 24 34          \tmov    0x34(%rsp),%eax\n    6358:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    635d:\t89 c7                \tmov    %eax,%edi\n    635f:\te8 9c 9c ff ff       \tcall   0 <av_clip>\n    6364:\t0f af 44 24 0c       \timul   0xc(%rsp),%eax\n    6369:\t01 d8                \tadd    %ebx,%eax\n    636b:\t89 44 24 28          \tmov    %eax,0x28(%rsp)\n    636f:\t8b 44 24 28          \tmov    0x28(%rsp),%eax\n    6373:\t48 63 d0             \tmovslq %eax,%rdx\n    6376:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n    637b:\t48 8d 0c 02          \tlea    (%rdx,%rax,1),%rcx\n    637f:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n    6383:\t0f af 44 24 0c       \timul   0xc(%rsp),%eax\n    6388:\t89 c2                \tmov    %eax,%edx\n    638a:\t8b 44 24 40          \tmov    0x40(%rsp),%eax\n    638e:\t01 d0                \tadd    %edx,%eax\n    6390:\t48 63 d0             \tmovslq %eax,%rdx\n    6393:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    6398:\t48 01 c2             \tadd    %rax,%rdx\n    639b:\t0f b6 01             \tmovzbl (%rcx),%eax\n    639e:\t88 02                \tmov    %al,(%rdx)\n    63a0:\t8b 44 24 60          \tmov    0x60(%rsp),%eax\n    63a4:\t01 44 24 48          \tadd    %eax,0x48(%rsp)\n    63a8:\t8b 44 24 70          \tmov    0x70(%rsp),%eax\n    63ac:\t01 44 24 44          \tadd    %eax,0x44(%rsp)\n    63b0:\t83 44 24 40 01       \taddl   $0x1,0x40(%rsp)\n    63b5:\t83 7c 24 40 07       \tcmpl   $0x7,0x40(%rsp)\n    63ba:\t0f 8e ab fc ff ff    \tjle    606b <ff_gmc_c+0x6f>\n    63c0:\t8b 44 24 68          \tmov    0x68(%rsp),%eax\n    63c4:\t01 44 24 04          \tadd    %eax,0x4(%rsp)\n    63c8:\t8b 44 24 78          \tmov    0x78(%rsp),%eax\n    63cc:\t01 04 24             \tadd    %eax,(%rsp)\n    63cf:\t83 44 24 4c 01       \taddl   $0x1,0x4c(%rsp)\n    63d4:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n    63d8:\t3b 44 24 08          \tcmp    0x8(%rsp),%eax\n    63dc:\t0f 8c 6d fc ff ff    \tjl     604f <ff_gmc_c+0x53>\n    63e2:\t90                   \tnop\n    63e3:\t90                   \tnop\n    63e4:\t48 83 c4 50          \tadd    $0x50,%rsp\n    63e8:\t5b                   \tpop    %rbx\n    63e9:\tc3                   \tret    ", "code_s": "void ff_gmc_c(long <span class=\"supfact\">param_1</span>, long <span class=\"supfact\">param_2</span>,\n              int <span class=\"supfact\">param_3</span>, int <span class=\"supfact\">param_4</span>,\n              int <span class=\"supfact\">param_5</span>, int <span class=\"supfact\">param_6</span>,\n              int <span class=\"supfact\">param_7</span>, int <span class=\"supfact\">param_8</span>,\n              int <span class=\"supfact\">param_9</span>, int <span class=\"supfact\">param_10</span>,\n              byte <span class=\"supfact\">param_11</span>, int <span class=\"supfact\">param_12</span>,\n              int <span class=\"supfact\">param_13</span>, int <span class=\"supfact\">param_14</span>) {\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int <span class=\"supfact\">local_58</span>;\n  int <span class=\"supfact\">local_54</span>;\n  int <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_14</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  iVar9 = Number & lt;\n  &lt;\n  (<span class=\"supfact\">param_11</span> & amp; Number);\n  uVar1 = <span class=\"supfact\">param_13</span> - Number;\n  uVar2 = <span class=\"supfact\">param_14</span> - Number;\n  <span class=\"supfact\">local_58</span> = <span class=\"supfact\">param_6</span>;\n  <span class=\"supfact\">local_54</span> = <span class=\"supfact\">param_5</span>;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n       <span class=\"supfact\">param_4</span>;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_54</span>;\n    <span class=\"supfact\">local_14</span> = <span class=\"supfact\">local_58</span>;\n    for (<span class=\"supfact\">local_18</span> = Number; <span class=\"supfact\">local_18</span> & lt;\n         Number; <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> + Number) {\n      uVar5 = iVar9 - Number & amp;\n      <span class=\"supfact\">local_10</span> &gt;\n      &gt;\n      Number;\n      uVar6 = iVar9 - Number & amp;\n      <span class=\"supfact\">local_14</span> &gt;\n      &gt;\n      Number;\n      uVar3 = (<span class=\"supfact\">local_10</span> & gt; &gt; Number) & gt;\n      &gt;\n      (<span class=\"supfact\">param_11</span> & amp; Number);\n      uVar4 = (<span class=\"supfact\">local_14</span> & gt; &gt; Number) & gt;\n      &gt;\n      (<span class=\"supfact\">param_11</span> & amp; Number);\n      if (uVar3 & lt; uVar1) {\n        if (uVar4 & lt; uVar2) {\n          iVar7 = uVar3 + uVar4 * <span class=\"supfact\">param_3</span>;\n          *(char *)(<span class=\"supfact\">param_1</span> +\n                    (<span class=\"supfact\">local_18</span> +\n                     <span class=\"supfact\">local_c</span> * <span class=\"supfact\">param_3</span>)) =\n              (char)((int)(((uint) * (byte *)(<span class=\"supfact\">param_2</span> + iVar7) *\n                                (iVar9 - uVar5) +\n                            *(byte *)(<span class=\"supfact\">param_2</span> + (long)iVar7 +\n                                      Number) *\n                                uVar5) *\n                               (iVar9 - uVar6) +\n                           (*(byte *)(<span class=\"supfact\">param_2</span> +\n                                      (long)(<span class=\"supfact\">param_3</span> + iVar7) +\n                                      Number) *\n                                uVar5 +\n                            (uint) *\n                                (byte *)(<span class=\"supfact\">param_2</span> +\n                                         (<span class=\"supfact\">param_3</span> + iVar7)) *\n                                (iVar9 - uVar5)) *\n                               uVar6 +\n                           <span class=\"supfact\">param_12</span>) &\n                         gt;\n                     &gt; (<span class=\"supfact\">param_11</span> * String & amp; Number));\n        } else {\n          iVar7 = FUN_00100000(uVar4, Number, uVar2);\n          iVar7 = uVar3 + iVar7 * <span class=\"supfact\">param_3</span>;\n          *(char *)(<span class=\"supfact\">param_1</span> +\n                    (<span class=\"supfact\">local_18</span> +\n                     <span class=\"supfact\">local_c</span> * <span class=\"supfact\">param_3</span>)) =\n              (char)((int)((*(byte *)(<span class=\"supfact\">param_2</span> + (long)iVar7 +\n                                      Number) *\n                                uVar5 +\n                            (uint) * (byte *)(<span class=\"supfact\">param_2</span> + iVar7) *\n                                (iVar9 - uVar5)) *\n                               iVar9 +\n                           <span class=\"supfact\">param_12</span>) &\n                         gt;\n                     &gt; (<span class=\"supfact\">param_11</span> * String & amp; Number));\n        }\n      } else if (uVar4 & lt; uVar2) {\n        iVar7 = FUN_00100000(uVar3, Number, uVar1);\n        iVar7 = iVar7 + uVar4 * <span class=\"supfact\">param_3</span>;\n        *(char *)(<span class=\"supfact\">param_1</span> +\n                  (<span class=\"supfact\">local_18</span> +\n                   <span class=\"supfact\">local_c</span> * <span class=\"supfact\">param_3</span>)) =\n            (char)((int)((*(byte *)(<span class=\"supfact\">param_2</span> +\n                                    (<span class=\"supfact\">param_3</span> + iVar7)) *\n                              uVar6 +\n                          (uint) * (byte *)(<span class=\"supfact\">param_2</span> + iVar7) *\n                              (iVar9 - uVar6)) *\n                             iVar9 +\n                         <span class=\"supfact\">param_12</span>) &\n                       gt;\n                   &gt; (<span class=\"supfact\">param_11</span> * String & amp; Number));\n      } else {\n        iVar7 = FUN_00100000(uVar3, Number, uVar1);\n        iVar8 = FUN_00100000(uVar4, Number, uVar2);\n        *(undefined *)((<span class=\"supfact\">local_18</span> +\n                        <span class=\"supfact\">local_c</span> * <span class=\"supfact\">param_3</span>) +\n                       <span class=\"supfact\">param_1</span>) =\n            *(undefined *)((iVar8 * <span class=\"supfact\">param_3</span> + iVar7) +\n                           <span class=\"supfact\">param_2</span>);\n      }\n      <span class=\"supfact\">local_10</span> =\n          <span class=\"supfact\">local_10</span> + <span class=\"supfact\">param_7</span>;\n      <span class=\"supfact\">local_14</span> =\n          <span class=\"supfact\">local_14</span> + <span class=\"supfact\">param_9</span>;\n    }\n    <span class=\"supfact\">local_54</span> =\n        <span class=\"supfact\">local_54</span> + <span class=\"supfact\">param_8</span>;\n    <span class=\"supfact\">local_58</span> =\n        <span class=\"supfact\">local_58</span> + <span class=\"supfact\">param_10</span>;\n  }\n  return;\n}", "code_t": "void ff_gmc_c(uint8_t *<span class=\"supfact\">dst</span>, uint8_t *<span class=\"supfact\">src</span>,\n              int <span class=\"supfact\">stride</span>, int <span class=\"supfact\">h</span>,\n              int <span class=\"supfact\">ox</span>, int <span class=\"supfact\">oy</span>,\n              int <span class=\"supfact\">dxx</span>, int <span class=\"supfact\">dxy</span>,\n              int <span class=\"supfact\">dyx</span>, int <span class=\"supfact\">dyy</span>,\n              int <span class=\"supfact\">shift</span>, int <span class=\"supfact\">r</span>,\n              int <span class=\"supfact\">width</span>, int <span class=\"supfact\">height</span>) {\n  uint amax;\n  uint amax_00;\n  uint a;\n  uint a_00;\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  int iVar4;\n  byte bVar5;\n  int iVar6;\n  int <span class=\"supfact\">oy</span> - local;\n  int <span class=\"supfact\">ox</span> - local;\n  int <span class=\"supfact\">h</span> - local;\n  int <span class=\"supfact\">stride</span> - local;\n  uint8_t *<span class=\"supfact\">src</span> - local;\n  uint8_t *<span class=\"supfact\">dst</span> - local;\n  int index;\n  int frac_y;\n  int frac_x;\n  int src_y;\n  int src_x;\n  int s;\n  int <span class=\"supfact\">x</span>;\n  int <span class=\"supfact\">vy</span>;\n  int <span class=\"supfact\">vx</span>;\n  int <span class=\"supfact\">y</span>;\n  bVar5 = (byte)<span class=\"supfact\">shift</span>;\n  iVar6 = Number & lt;\n  &lt;\n  (bVar5 & amp; Number);\n  amax = <span class=\"supfact\">width</span> - Number;\n  amax_00 = <span class=\"supfact\">height</span> - Number;\n  <span class=\"supfact\">oy</span> - local = <span class=\"supfact\">oy</span>;\n  <span class=\"supfact\">ox</span> - local = <span class=\"supfact\">ox</span>;\n  for (<span class=\"supfact\">y</span> = Number; <span class=\"supfact\">y</span> & lt; <span class=\"supfact\">h</span>;\n       <span class=\"supfact\">y</span> = <span class=\"supfact\">y</span> + Number) {\n    <span class=\"supfact\">vx</span> = <span class=\"supfact\">ox</span> - local;\n    <span class=\"supfact\">vy</span> = <span class=\"supfact\">oy</span> - local;\n    for (<span class=\"supfact\">x</span> = Number; <span class=\"supfact\">x</span> & lt; Number;\n         <span class=\"supfact\">x</span> = <span class=\"supfact\">x</span> + Number) {\n      uVar1 = iVar6 - Number & amp;\n      <span class=\"supfact\">vx</span> &gt;\n      &gt;\n      Number;\n      uVar2 = iVar6 - Number & amp;\n      <span class=\"supfact\">vy</span> &gt;\n      &gt;\n      Number;\n      a = (<span class=\"supfact\">vx</span> & gt; &gt; Number) & gt;\n      &gt;\n      (bVar5 & amp; Number);\n      a_00 = (<span class=\"supfact\">vy</span> & gt; &gt; Number) & gt;\n      &gt;\n      (bVar5 & amp; Number);\n      if (a & lt; amax) {\n        if (a_00 & lt; amax_00) {\n          iVar3 = a + a_00 * <span class=\"supfact\">stride</span>;\n          <span class=\"supfact\">dst</span>[<span class=\"supfact\">x</span> +\n                              <span class=\"supfact\">y</span> * <span class=\"supfact\">stride</span>] =\n              (uint8_t)((int)(((uint)<span class=\"supfact\">src</span>[iVar3] *\n                                   (iVar6 - uVar1) +\n                               <span class=\"supfact\">src</span>[(long)iVar3 + Number] *\n                                   uVar1) *\n                                  (iVar6 - uVar2) +\n                              (<span class=\"supfact\">src</span>\n                                       [(long)(<span class=\"supfact\">stride</span> + iVar3) +\n                                        Number] *\n                                   uVar1 +\n                               (uint)<span class=\"supfact\">src</span>\n                                       [<span class=\"supfact\">stride</span> + iVar3] *\n                                   (iVar6 - uVar1)) *\n                                  uVar2 +\n                              <span class=\"supfact\">r</span>) &\n                            gt;\n                        &gt; (bVar5 * String & amp; Number));\n        } else {\n          iVar3 = av_clip(a_00, Number, amax_00);\n          iVar3 = a + iVar3 * <span class=\"supfact\">stride</span>;\n          <span class=\"supfact\">dst</span>[<span class=\"supfact\">x</span> +\n                              <span class=\"supfact\">y</span> * <span class=\"supfact\">stride</span>] =\n              (uint8_t)((int)((<span class=\"supfact\">src</span>[(long)iVar3 + Number] *\n                                   uVar1 +\n                               (uint)<span class=\"supfact\">src</span>[iVar3] *\n                                   (iVar6 - uVar1)) *\n                                  iVar6 +\n                              <span class=\"supfact\">r</span>) &\n                            gt;\n                        &gt; (bVar5 * String & amp; Number));\n        }\n      } else if (a_00 & lt; amax_00) {\n        iVar3 = av_clip(a, Number, amax);\n        iVar3 = iVar3 + a_00 * <span class=\"supfact\">stride</span>;\n        <span class=\"supfact\">dst</span>[<span class=\"supfact\">x</span> +\n                            <span class=\"supfact\">y</span> * <span class=\"supfact\">stride</span>] =\n            (uint8_t)((int)((<span class=\"supfact\">src</span>[<span class=\"supfact\">stride</span> +\n                                                 iVar3] *\n                                 uVar2 +\n                             (uint)<span class=\"supfact\">src</span>[iVar3] *\n                                 (iVar6 - uVar2)) *\n                                iVar6 +\n                            <span class=\"supfact\">r</span>) &\n                          gt;\n                      &gt; (bVar5 * String & amp; Number));\n      } else {\n        iVar3 = av_clip(a, Number, amax);\n        iVar4 = av_clip(a_00, Number, amax_00);\n        <span class=\"supfact\">dst</span>[<span class=\"supfact\">x</span> +\n                            <span class=\"supfact\">y</span> * <span class=\"supfact\">stride</span>] =\n            <span class=\"supfact\">src</span>[iVar4 * <span class=\"supfact\">stride</span> + iVar3];\n      }\n      <span class=\"supfact\">vx</span> = <span class=\"supfact\">vx</span> + <span class=\"supfact\">dxx</span>;\n      <span class=\"supfact\">vy</span> = <span class=\"supfact\">vy</span> + <span class=\"supfact\">dyx</span>;\n    }\n    <span class=\"supfact\">ox</span> - local =\n        <span class=\"supfact\">ox</span> - local + <span class=\"supfact\">dxy</span>;\n    <span class=\"supfact\">oy</span> - local =\n        <span class=\"supfact\">oy</span> - local + <span class=\"supfact\">dyy</span>;\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "uint8_t * *", "pred_name": "dst", "ref_name": "dst", "ref_type": "uint8_t * *"}, {"name": "param_2", "type": "uint8_t * *", "pred_name": "src", "ref_name": "src", "ref_type": "uint8_t * *"}, {"name": "param_3", "type": "int", "pred_name": "stride", "ref_name": "stride", "ref_type": "int"}, {"name": "param_4", "type": "int", "pred_name": "h", "ref_name": "h", "ref_type": "int"}, {"name": "param_5", "type": "int", "pred_name": "ox", "ref_name": "ox", "ref_type": "int"}, {"name": "param_6", "type": "int", "pred_name": "oy", "ref_name": "oy", "ref_type": "int"}, {"name": "param_7", "type": "int", "pred_name": "dxx", "ref_name": "dxx", "ref_type": "int"}, {"name": "param_8", "type": "int", "pred_name": "dxy", "ref_name": "dxy", "ref_type": "int"}, {"name": "param_9", "type": "int", "pred_name": "dyx", "ref_name": "dyx", "ref_type": "int"}, {"name": "param_10", "type": "int", "pred_name": "dyy", "ref_name": "dyy", "ref_type": "int"}, {"name": "param_11", "type": "int", "pred_name": "shift", "ref_name": "shift", "ref_type": "int"}, {"name": "param_12", "type": "int", "pred_name": "r", "ref_name": "r", "ref_type": "int"}, {"name": "param_13", "type": "int", "pred_name": "width", "ref_name": "width", "ref_type": "int"}, {"name": "param_14", "type": "int", "pred_name": "height", "ref_name": "height", "ref_type": "int"}, {"name": "local_58", "type": "int", "pred_name": "oy-local", "ref_name": "oy-local", "ref_type": "int"}, {"name": "local_54", "type": "int", "pred_name": "ox-local", "ref_name": "ox-local", "ref_type": "int"}, {"name": "local_18", "type": "int", "pred_name": "x", "ref_name": "x", "ref_type": "int"}, {"name": "local_14", "type": "int", "pred_name": "vy", "ref_name": "vy", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "vx", "ref_name": "vx", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "y", "ref_name": "y", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "BlueLibrary", "repo_name": "opengui", "path": "BlueLibrary/opengui/0f26497a93375d932177b0cdeb12015bd69b8cc2456dfe5ad0b9ebab826f1da5", "path_in_repo": "BlueLibrary/opengui/deps/tinyxml/tinyxml.o", "objdump": "", "code_s": "void __thiscall TiXmlBase\n    StringToBuffer ~StringToBuffer(StringToBuffer *<span class=\"supfact\">this</span>) {\n  if (*(long *)<span class=\"supfact\">this</span> != Number) {\n    operator.delete[](*(void **)<span class=\"supfact\">this</span>);\n  }\n  return;\n}", "code_t": "void __thiscall TiXmlBase\n    StringToBuffer ~StringToBuffer(StringToBuffer *<span class=\"supfact\">this</span>,\n                                   int __in_chrg) {\n  StringToBuffer *<span class=\"supfact\">this</span> - local;\n  if (<span class=\"supfact\">this</span> - &gt; buffer != (char *)Number) {\n    operator.delete[](<span class=\"supfact\">this</span> - &gt; buffer);\n  }\n  return;\n}", "var": [{"name": "this", "type": "__unk__", "pred_name": "this", "ref_name": "this", "ref_type": "StringToBuffer * *"}], "body_in_train": false}, {"repo_owner": "ystk", "repo_name": "debian-qemu", "path": "ystk/debian-qemu/122a9f32b2e5e0e83e378ef02973ebad5069bca9ba3f353ec0be72c599aad2b2", "path_in_repo": "ystk/debian-qemu//mipsel-softmmu/tcg/tcg.o", "objdump": "00000000000033a6 <tcg_target_init>:\n    33a6:\t55                   \tpush   %rbp\n    33a7:\t48 89 e5             \tmov    %rsp,%rbp\n    33aa:\t48 83 ec 10          \tsub    $0x10,%rsp\n    33ae:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    33b2:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 33b8 <tcg_target_init+0x12>\n    33b8:\t0d ff ff 00 00       \tor     $0xffff,%eax\n    33bd:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 33c3 <tcg_target_init+0x1d>\n    33c3:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 33c9 <tcg_target_init+0x23>\n    33c9:\t0d ff ff 00 00       \tor     $0xffff,%eax\n    33ce:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 33d4 <tcg_target_init+0x2e>\n    33d4:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 33da <tcg_target_init+0x34>\n    33da:\t0d c7 0f 00 00       \tor     $0xfc7,%eax\n    33df:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 33e5 <tcg_target_init+0x3f>\n    33e5:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    33e9:\tc7 80 b8 00 00 00 00 \tmovl   $0x0,0xb8(%rax)\n    33f0:\t00 00 00 \n    33f3:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    33f7:\t8b 80 b8 00 00 00    \tmov    0xb8(%rax),%eax\n    33fd:\t83 c8 10             \tor     $0x10,%eax\n    3400:\t89 c2                \tmov    %eax,%edx\n    3402:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    3406:\t89 90 b8 00 00 00    \tmov    %edx,0xb8(%rax)\n    340c:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3411:\te8 00 00 00 00       \tcall   3416 <tcg_target_init+0x70>\n    3416:\t90                   \tnop\n    3417:\tc9                   \tleave  \n    3418:\tc3                   \tret    ", "code_s": "void tcg_target_init(long <span class=\"supfact\">param_1</span>) {\n  DAT_00107ed8 = DAT_00107ed8 | Number;\n  DAT_00107edc = DAT_00107edc | Number;\n  DAT_00107ee0 = DAT_00107ee0 | Number;\n  *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n  *(uint *)(<span class=\"supfact\">param_1</span> + Number) =\n      *(uint *)(<span class=\"supfact\">param_1</span> + Number) | Number;\n  tcg_add_target_add_op_defs(&amp; DAT_001087e0);\n  return;\n}", "code_t": "void tcg_target_init(TCGContext *<span class=\"supfact\">s</span>) {\n  TCGContext *<span class=\"supfact\">s</span> - local;\n  tcg_target_available_regs[Number] =\n      tcg_target_available_regs[Number] | Number;\n  tcg_target_available_regs[Number] =\n      tcg_target_available_regs[Number] | Number;\n  tcg_target_call_clobber_regs = tcg_target_call_clobber_regs | Number;\n  <span class=\"supfact\">s</span> - &gt;\n  reserved_regs = Number;\n  <span class=\"supfact\">s</span> - &gt;\n  reserved_regs = <span class=\"supfact\">s</span> - &gt;\n  reserved_regs | Number;\n  tcg_add_target_add_op_defs(x86_64_op_defs);\n  return;\n}", "var": [{"name": "param_1", "type": "TCGContext * *", "pred_name": "s", "ref_name": "s", "ref_type": "TCGContext * *"}], "body_in_train": true}, {"repo_owner": "comealong", "repo_name": "myMini2440", "path": "comealong/myMini2440/00ed29c4d087da6264fe27cb6f816816aa62a0be2efc95d86935de212523aec6", "path_in_repo": "comealong/myMini2440/mini2440-qemu/sh4eb-softmmu/op_helper.o", "objdump": "00000000000022f9 <helper_addc>:\n    22f9:\t55                   \tpush   %rbp\n    22fa:\t48 89 e5             \tmov    %rsp,%rbp\n    22fd:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n    2300:\t89 75 e8             \tmov    %esi,-0x18(%rbp)\n    2303:\t8b 55 ec             \tmov    -0x14(%rbp),%edx\n    2306:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n    2309:\t01 d0                \tadd    %edx,%eax\n    230b:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    230e:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n    2311:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n    2314:\t4c 89 f0             \tmov    %r14,%rax\n    2317:\t8b 80 e8 00 00 00    \tmov    0xe8(%rax),%eax\n    231d:\t83 e0 01             \tand    $0x1,%eax\n    2320:\t89 c2                \tmov    %eax,%edx\n    2322:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    2325:\t01 d0                \tadd    %edx,%eax\n    2327:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n    232a:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    232d:\t3b 45 fc             \tcmp    -0x4(%rbp),%eax\n    2330:\t76 17                \tjbe    2349 <helper_addc+0x50>\n    2332:\t4c 89 f0             \tmov    %r14,%rax\n    2335:\t8b 80 e8 00 00 00    \tmov    0xe8(%rax),%eax\n    233b:\t4c 89 f2             \tmov    %r14,%rdx\n    233e:\t83 c8 01             \tor     $0x1,%eax\n    2341:\t89 82 e8 00 00 00    \tmov    %eax,0xe8(%rdx)\n    2347:\teb 15                \tjmp    235e <helper_addc+0x65>\n    2349:\t4c 89 f0             \tmov    %r14,%rax\n    234c:\t8b 80 e8 00 00 00    \tmov    0xe8(%rax),%eax\n    2352:\t4c 89 f2             \tmov    %r14,%rdx\n    2355:\t83 e0 fe             \tand    $0xfffffffe,%eax\n    2358:\t89 82 e8 00 00 00    \tmov    %eax,0xe8(%rdx)\n    235e:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    2361:\t3b 45 e8             \tcmp    -0x18(%rbp),%eax\n    2364:\t76 15                \tjbe    237b <helper_addc+0x82>\n    2366:\t4c 89 f0             \tmov    %r14,%rax\n    2369:\t8b 80 e8 00 00 00    \tmov    0xe8(%rax),%eax\n    236f:\t4c 89 f2             \tmov    %r14,%rdx\n    2372:\t83 c8 01             \tor     $0x1,%eax\n    2375:\t89 82 e8 00 00 00    \tmov    %eax,0xe8(%rdx)\n    237b:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n    237e:\t5d                   \tpop    %rbp\n    237f:\tc3                   \tret    ", "code_s": "uint helper_addc(int <span class=\"supfact\">param_1</span>, uint <span class=\"supfact\">param_2</span>) {\n  uint uVar1;\n  uint uVar2;\n  long <span class=\"supfact\">unaff_R14</span>;\n  uVar1 = <span class=\"supfact\">param_2</span> + <span class=\"supfact\">param_1</span>;\n  uVar2 = uVar1 + (*(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) & amp; Number);\n  if (uVar1 & lt; <span class=\"supfact\">param_2</span>) {\n    *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) =\n        *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) | Number;\n  } else {\n    *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) =\n        *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) & amp;\n    Number;\n  }\n  if (uVar2 & lt; uVar1) {\n    *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) =\n        *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) | Number;\n  }\n  return uVar2;\n}", "code_t": "uint32_t helper_addc(uint32_t <span class=\"supfact\">arg0</span>,\n                     uint32_t <span class=\"supfact\">arg1</span>) {\n  uint uVar1;\n  uint uVar2;\n  long <span class=\"supfact\">unaff_R14</span>;\n  uint32_t <span class=\"supfact\">arg1</span> - local;\n  uint32_t <span class=\"supfact\">arg0</span> - local;\n  uint32_t tmp0;\n  uint32_t tmp1;\n  uVar1 = <span class=\"supfact\">arg1</span> + <span class=\"supfact\">arg0</span>;\n  uVar2 = uVar1 + (*(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) & amp; Number);\n  if (uVar1 & lt; <span class=\"supfact\">arg1</span>) {\n    *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) =\n        *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) | Number;\n  } else {\n    *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) =\n        *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) & amp;\n    Number;\n  }\n  if (uVar2 & lt; uVar1) {\n    *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) =\n        *(uint *)(<span class=\"supfact\">unaff_R14</span> + Number) | Number;\n  }\n  return uVar2;\n}", "var": [{"name": "param_1", "type": "uint32_t", "pred_name": "arg0", "ref_name": "arg0", "ref_type": "uint32_t"}, {"name": "param_2", "type": "uint32_t", "pred_name": "arg1", "ref_name": "arg1", "ref_type": "uint32_t"}, {"name": "unaff_R14", "type": "long", "pred_name": "unaff_R14", "ref_name": "unaff_R14", "ref_type": "long"}], "body_in_train": true}, {"repo_owner": "jv4779", "repo_name": "openlase-mame", "path": "jv4779/openlase-mame/b97473f91831563f894ea7443a460b4aae920d4b840b91af5890086b3cd73784", "path_in_repo": "jv4779/openlase-mame/xmame-0.106/xmame.obj/drivers/galpani2.o", "objdump": "000000000000044c <galpani2_coin_lockout_w>:\n     44c:\t55                   \tpush   %rbp\n     44d:\t48 89 e5             \tmov    %rsp,%rbp\n     450:\t48 83 ec 10          \tsub    $0x10,%rsp\n     454:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n     457:\t89 f1                \tmov    %esi,%ecx\n     459:\t89 d0                \tmov    %edx,%eax\n     45b:\t89 ca                \tmov    %ecx,%edx\n     45d:\t66 89 55 f8          \tmov    %dx,-0x8(%rbp)\n     461:\t66 89 45 f4          \tmov    %ax,-0xc(%rbp)\n     465:\t0f b7 45 f4          \tmovzwl -0xc(%rbp),%eax\n     469:\t25 00 ff 00 00       \tand    $0xff00,%eax\n     46e:\t85 c0                \ttest   %eax,%eax\n     470:\t75 58                \tjne    4ca <galpani2_coin_lockout_w+0x7e>\n     472:\t0f b7 45 f8          \tmovzwl -0x8(%rbp),%eax\n     476:\t25 00 01 00 00       \tand    $0x100,%eax\n     47b:\t89 c6                \tmov    %eax,%esi\n     47d:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     482:\te8 00 00 00 00       \tcall   487 <galpani2_coin_lockout_w+0x3b>\n     487:\t0f b7 45 f8          \tmovzwl -0x8(%rbp),%eax\n     48b:\t25 00 02 00 00       \tand    $0x200,%eax\n     490:\t89 c6                \tmov    %eax,%esi\n     492:\tbf 01 00 00 00       \tmov    $0x1,%edi\n     497:\te8 00 00 00 00       \tcall   49c <galpani2_coin_lockout_w+0x50>\n     49c:\t0f b7 45 f8          \tmovzwl -0x8(%rbp),%eax\n     4a0:\tf7 d0                \tnot    %eax\n     4a2:\t25 00 04 00 00       \tand    $0x400,%eax\n     4a7:\t89 c6                \tmov    %eax,%esi\n     4a9:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     4ae:\te8 00 00 00 00       \tcall   4b3 <galpani2_coin_lockout_w+0x67>\n     4b3:\t0f b7 45 f8          \tmovzwl -0x8(%rbp),%eax\n     4b7:\tf7 d0                \tnot    %eax\n     4b9:\t25 00 08 00 00       \tand    $0x800,%eax\n     4be:\t89 c6                \tmov    %eax,%esi\n     4c0:\tbf 01 00 00 00       \tmov    $0x1,%edi\n     4c5:\te8 00 00 00 00       \tcall   4ca <galpani2_coin_lockout_w+0x7e>\n     4ca:\t90                   \tnop\n     4cb:\tc9                   \tleave  \n     4cc:\tc3                   \tret    ", "code_s": "void galpani2_coin_lockout_w(undefined8 param_1, ushort <span class=\"supfact\">param_2</span>,\n                             ushort <span class=\"supfact\">param_3</span>) {\n  if ((<span class=\"supfact\">param_3</span> & amp; Number) == Number) {\n    coin_counter_w(Number, <span class=\"supfact\">param_2</span> & amp; Number);\n    coin_counter_w(Number, <span class=\"supfact\">param_2</span> & amp; Number);\n    coin_lockout_w(Number, ~<span class=\"supfact\">param_2</span> & amp; Number);\n    coin_lockout_w(Number, ~<span class=\"supfact\">param_2</span> & amp; Number);\n  }\n  return;\n}", "code_t": "void galpani2_coin_lockout_w(offs_t offset, UINT16 <span class=\"supfact\">data</span>,\n                             UINT16 <span class=\"supfact\">mem_mask</span>) {\n  UINT16 <span class=\"supfact\">mem_mask</span> - local;\n  UINT16 <span class=\"supfact\">data</span> - local;\n  offs_t offset - local;\n  if ((<span class=\"supfact\">mem_mask</span> & amp; Number) == Number) {\n    coin_counter_w(Number, <span class=\"supfact\">data</span> & amp; Number);\n    coin_counter_w(Number, <span class=\"supfact\">data</span> & amp; Number);\n    coin_lockout_w(Number, ~<span class=\"supfact\">data</span> & amp; Number);\n    coin_lockout_w(Number, ~<span class=\"supfact\">data</span> & amp; Number);\n  }\n  return;\n}", "var": [{"name": "param_2", "type": "UINT16", "pred_name": "data", "ref_name": "data", "ref_type": "UINT16"}, {"name": "param_3", "type": "UINT16", "pred_name": "mem_mask", "ref_name": "mem_mask", "ref_type": "UINT16"}], "body_in_train": false}, {"repo_owner": "alquez", "repo_name": "lenovo_yt3_x90_osc", "path": "alquez/lenovo_yt3_x90_osc/bb6c0872b8b57a218d3f55c40d99cf581fee0e3a344d63e80dd9925c72c8ba11", "path_in_repo": "alquez/lenovo_yt3_x90_osc/external/elfutils/src/libdw/libdw.so", "objdump": "000000000001596f <dwarf_getscopes_die>:\n   1596f:\t55                   \tpush   %rbp\n   15970:\t48 89 e5             \tmov    %rsp,%rbp\n   15973:\t53                   \tpush   %rbx\n   15974:\t48 81 ec 88 00 00 00 \tsub    $0x88,%rsp\n   1597b:\t48 89 bd 78 ff ff ff \tmov    %rdi,-0x88(%rbp)\n   15982:\t48 89 b5 70 ff ff ff \tmov    %rsi,-0x90(%rbp)\n   15989:\t48 83 bd 78 ff ff ff \tcmpq   $0x0,-0x88(%rbp)\n   15990:\t00 \n   15991:\t75 0a                \tjne    1599d <dwarf_getscopes_die+0x2e>\n   15993:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n   15998:\te9 31 01 00 00       \tjmp    15ace <dwarf_getscopes_die+0x15f>\n   1599d:\t48 c7 45 b0 00 00 00 \tmovq   $0x0,-0x50(%rbp)\n   159a4:\t00 \n   159a5:\t48 c7 45 b8 00 00 00 \tmovq   $0x0,-0x48(%rbp)\n   159ac:\t00 \n   159ad:\t48 c7 45 c0 00 00 00 \tmovq   $0x0,-0x40(%rbp)\n   159b4:\t00 \n   159b5:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n   159bc:\t00 \n   159bd:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n   159c4:\t00 \n   159c5:\t48 c7 45 d8 00 00 00 \tmovq   $0x0,-0x28(%rbp)\n   159cc:\t00 \n   159cd:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n   159d4:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n   159d8:\t48 8b 18             \tmov    (%rax),%rbx\n   159db:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n   159e2:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n   159e6:\t48 89 c7             \tmov    %rax,%rdi\n   159e9:\te8 7b fe ff ff       \tcall   15869 <cu_sec_idx>\n   159ee:\t48 83 c0 02          \tadd    $0x2,%rax\n   159f2:\t48 8b 04 c3          \tmov    (%rbx,%rax,8),%rax\n   159f6:\t48 8b 08             \tmov    (%rax),%rcx\n   159f9:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n   15a00:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n   15a04:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n   15a08:\t48 85 c0             \ttest   %rax,%rax\n   15a0b:\t74 2f                \tje     15a3c <dwarf_getscopes_die+0xcd>\n   15a0d:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n   15a14:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n   15a18:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n   15a1c:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n   15a23:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n   15a27:\t0f b6 40 19          \tmovzbl 0x19(%rax),%eax\n   15a2b:\t0f b6 c0             \tmovzbl %al,%eax\n   15a2e:\tc1 e0 02             \tshl    $0x2,%eax\n   15a31:\t48 98                \tcltq   \n   15a33:\t48 01 d0             \tadd    %rdx,%rax\n   15a36:\t48 83 c0 07          \tadd    $0x7,%rax\n   15a3a:\teb 30                \tjmp    15a6c <dwarf_getscopes_die+0xfd>\n   15a3c:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n   15a43:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n   15a47:\t48 8b 70 08          \tmov    0x8(%rax),%rsi\n   15a4b:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n   15a52:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n   15a56:\t0f b6 40 19          \tmovzbl 0x19(%rax),%eax\n   15a5a:\t0f b6 d0             \tmovzbl %al,%edx\n   15a5d:\t89 d0                \tmov    %edx,%eax\n   15a5f:\t01 c0                \tadd    %eax,%eax\n   15a61:\t01 d0                \tadd    %edx,%eax\n   15a63:\t48 98                \tcltq   \n   15a65:\t48 01 f0             \tadd    %rsi,%rax\n   15a68:\t48 83 e8 01          \tsub    $0x1,%rax\n   15a6c:\t48 01 c8             \tadd    %rcx,%rax\n   15a6f:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n   15a73:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n   15a7a:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n   15a7e:\t48 89 45 b8          \tmov    %rax,-0x48(%rbp)\n   15a82:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n   15a89:\t48 8b 00             \tmov    (%rax),%rax\n   15a8c:\t48 89 45 88          \tmov    %rax,-0x78(%rbp)\n   15a90:\t48 8d 55 88          \tlea    -0x78(%rbp),%rdx\n   15a94:\t48 8d 45 b0          \tlea    -0x50(%rbp),%rax\n   15a98:\t49 89 d0             \tmov    %rdx,%r8\n   15a9b:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n   15aa0:\t48 8d 15 dd fd ff ff \tlea    -0x223(%rip),%rdx        # 15884 <scope_visitor>\n   15aa7:\t48 89 c6             \tmov    %rax,%rsi\n   15aaa:\tbf 01 00 00 00       \tmov    $0x1,%edi\n   15aaf:\te8 52 7d 00 00       \tcall   1d806 <__libdw_visit_scopes>\n   15ab4:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n   15ab7:\t83 7d ec 00          \tcmpl   $0x0,-0x14(%rbp)\n   15abb:\t7e 0e                \tjle    15acb <dwarf_getscopes_die+0x15c>\n   15abd:\t48 8b 55 88          \tmov    -0x78(%rbp),%rdx\n   15ac1:\t48 8b 85 70 ff ff ff \tmov    -0x90(%rbp),%rax\n   15ac8:\t48 89 10             \tmov    %rdx,(%rax)\n   15acb:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n   15ace:\t48 81 c4 88 00 00 00 \tadd    $0x88,%rsp\n   15ad5:\t5b                   \tpop    %rbx\n   15ad6:\t5d                   \tpop    %rbp\n   15ad7:\tc3                   \tret    ", "code_s": "int dwarf_getscopes_die(undefined8 *<span class=\"supfact\">param_1</span>,\n                        undefined8 *<span class=\"supfact\">param_2</span>) {\n  long lVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  long <span class=\"supfact\">lVar3</span>;\n  undefined8 <span class=\"supfact\">local_80</span>[Number];\n  long <span class=\"supfact\">local_58</span>;\n  undefined8 <span class=\"supfact\">local_50</span>;\n  undefined8 <span class=\"supfact\">local_48</span>;\n  undefined8 <span class=\"supfact\">local_40</span>;\n  undefined8 <span class=\"supfact\">local_38</span>;\n  undefined8 <span class=\"supfact\">local_30</span>;\n  if (<span class=\"supfact\">param_1</span> == (undefined8 *)Number) {\n    <span class=\"supfact\">iVar2</span> = -Number;\n  } else {\n    <span class=\"supfact\">local_58</span> = Number;\n    <span class=\"supfact\">local_50</span> = Number;\n    <span class=\"supfact\">local_48</span> = Number;\n    <span class=\"supfact\">local_40</span> = Number;\n    <span class=\"supfact\">local_38</span> = Number;\n    <span class=\"supfact\">local_30</span> = Number;\n    lVar1 = *(long *)<span class=\"supfact\">param_1</span>[Number];\n    <span class=\"supfact\">lVar3</span> = FUN_00115869(<span class=\"supfact\">param_1</span>[Number]);\n    if (*(long *)(<span class=\"supfact\">param_1</span>[Number] + Number) == Number) {\n      <span class=\"supfact\">local_58</span> =\n          (long)(int)((uint) *\n                          (byte *)(<span class=\"supfact\">param_1</span>[Number] + Number) *\n                          Number +\n                      (uint) *\n                          (byte *)(<span class=\"supfact\">param_1</span>[Number] + Number)) +\n          *(long *)(<span class=\"supfact\">param_1</span>[Number] + Number) + -Number;\n    } else {\n      <span class=\"supfact\">local_58</span> =\n          (long)(int)((uint) * (byte *)(<span class=\"supfact\">param_1</span>[Number] +\n                                        Number) &\n                          lt;\n                      &lt; Number) +\n          *(long *)(<span class=\"supfact\">param_1</span>[Number] + Number) + Number;\n    }\n    <span class=\"supfact\">local_58</span> =\n        <span class=\"supfact\">local_58</span> +\n        **(long **)(lVar1 + (<span class=\"supfact\">lVar3</span> + Number) * Number);\n    <span class=\"supfact\">local_50</span> = <span class=\"supfact\">param_1</span>[Number];\n    <span class=\"supfact\">local_80</span>[Number] = *<span class=\"supfact\">param_1</span>;\n    <span class=\"supfact\">iVar2</span> =\n        FUN_0011d806(Number, &amp; <span class=\"supfact\">local_58</span>, FUN_00115884,\n                                   Number, <span class=\"supfact\">local_80</span>);\n    if (Number & lt; <span class=\"supfact\">iVar2</span>) {\n      *<span class=\"supfact\">param_2</span> = <span class=\"supfact\">local_80</span>[Number];\n    }\n  }\n  return <span class=\"supfact\">iVar2</span>;\n}", "code_t": "int dwarf_getscopes_die(Dwarf_Die *<span class=\"supfact\">die</span>,\n                        Dwarf_Die **<span class=\"supfact\">scopes</span>) {\n  byte bVar1;\n  Dwarf *pDVar2;\n  int <span class=\"supfact\">iVar3</span>;\n  size_t sVar4;\n  long lVar5;\n  Dwarf_Die **<span class=\"supfact\">scopes</span> - local;\n  Dwarf_Die *<span class=\"supfact\">die</span> - local;\n  void *<span class=\"supfact\">info</span>;\n  Dwarf_Die_Chain <span class=\"supfact\">cu</span>;\n  int result;\n  if (<span class=\"supfact\">die</span> == (Dwarf_Die *)Number) {\n    <span class=\"supfact\">iVar3</span> = -Number;\n  } else {\n    <span class=\"supfact\">cu</span>.<span class=\"supfact\">die</span>.addr = (void *)Number;\n    <span class=\"supfact\">cu</span>.<span class=\"supfact\">die</span>.<span class=\"supfact\">cu</span> =\n        (Dwarf_CU *)Number;\n    <span class=\"supfact\">cu</span>.<span class=\"supfact\">die</span>.abbrev = (Dwarf_Abbrev *)Number;\n    <span class=\"supfact\">cu</span>.<span class=\"supfact\">die</span>.padding__ = Number;\n    <span class=\"supfact\">cu</span>.parent = (Dwarf_Die_Chain *)Number;\n    <span class=\"supfact\">cu</span>.prune = false;\n    <span class=\"supfact\">cu</span>._41_7_ = Number;\n    pDVar2 = <span class=\"supfact\">die</span> - &gt;\n    <span class=\"supfact\">cu</span> - &gt;\n    dbg;\n    sVar4 = cu_sec_idx(<span class=\"supfact\">die</span> - &gt; <span class=\"supfact\">cu</span>);\n    if (<span class=\"supfact\">die</span> - &gt; <span class=\"supfact\">cu</span> - &gt;\n        type_offset == Number) {\n      bVar1 = <span class=\"supfact\">die</span> - &gt;\n      <span class=\"supfact\">cu</span> - &gt;\n      offset_size;\n      lVar5 = (long)(int)((uint)bVar1 * Number + (uint)bVar1) +\n              <span class=\"supfact\">die</span> - &gt;\n      <span class=\"supfact\">cu</span> - &gt;\n      start + -Number;\n    } else {\n      lVar5 =\n          (long)(int)((uint)<span class=\"supfact\">die</span> - &gt; <span class=\"supfact\">cu</span> - &gt;\n                      offset_size & lt; &lt; Number) +\n          <span class=\"supfact\">die</span> - &gt;\n      <span class=\"supfact\">cu</span> - &gt;\n      start + Number;\n    }\n    <span class=\"supfact\">cu</span>.<span class=\"supfact\">die</span>.addr =\n        (void *)(lVar5 + (long)pDVar2 - &gt; sectiondata[sVar4] - &gt; d_buf);\n    <span class=\"supfact\">cu</span>.<span class=\"supfact\">die</span>.<span class=\"supfact\">cu</span> =\n        <span class=\"supfact\">die</span> - &gt;\n    <span class=\"supfact\">cu</span>;\n    <span class=\"supfact\">info</span> = <span class=\"supfact\">die</span> - &gt;\n    addr;\n    <span class=\"supfact\">iVar3</span> = __libdw_visit_scopes(\n        Number, &amp;\n        <span class=\"supfact\">cu</span>, scope_visitor,\n        (_func_int_uint_Dwarf_Die_Chain_ptr_void_ptr *)Number, &amp;\n        <span class=\"supfact\">info</span>);\n    if (Number & lt; <span class=\"supfact\">iVar3</span>) {\n      *<span class=\"supfact\">scopes</span> = (Dwarf_Die *)<span class=\"supfact\">info</span>;\n    }\n  }\n  return <span class=\"supfact\">iVar3</span>;\n}", "var": [{"name": "param_1", "type": "Dwarf_Die * *", "pred_name": "dw_die", "ref_name": "die", "ref_type": "Dwarf_Die * *"}, {"name": "param_2", "type": "char * *", "pred_name": "tname", "ref_name": "scopes", "ref_type": "Dwarf_Die * * *"}, {"name": "iVar2", "type": "int", "pred_name": "iVar3", "ref_name": "iVar3", "ref_type": "int"}, {"name": "lVar3", "type": "long", "pred_name": "lVar4", "ref_name": "", "ref_type": "disappear"}, {"name": "local_80", "type": "__unk__", "pred_name": "__unk__", "ref_name": "info", "ref_type": "void * *"}, {"name": "local_58", "type": "__unk__", "pred_name": "__unk__", "ref_name": "cu", "ref_type": "struct Dwarf_Die_Chain { Dwarf_Die die; Dwarf_Die_Chain * parent; _Bool prune; PADDING (7); }"}, {"name": "local_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_48", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_40", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_38", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "weiwang-ca", "repo_name": "openssl0.9.7", "path": "weiwang-ca/openssl0.9.7/2ee76b521b95ff651255b487ce817a881bfb0bb30879c27d3dbd8fd6ad0a31f9", "path_in_repo": "weiwang-ca/openssl0.9.7/crypto/asn1/x_crl.o", "objdump": "0000000000000264 <X509_CRL_free>:\n 264:\t55                   \tpush   %rbp\n 265:\t48 89 e5             \tmov    %rsp,%rbp\n 268:\t48 83 ec 10          \tsub    $0x10,%rsp\n 26c:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n 270:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 274:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 279:\t48 89 c7             \tmov    %rax,%rdi\n 27c:\te8 00 00 00 00       \tcall   281 <X509_CRL_free+0x1d>\n 281:\t90                   \tnop\n 282:\tc9                   \tleave  \n 283:\tc3                   \tret    ", "code_s": "void X509_CRL_free(X509_CRL *<span class=\"supfact\">a</span>) {\n  ASN1_item_free((ASN1_VALUE *)<span class=\"supfact\">a</span>, (ASN1_ITEM *)X509_CRL_it);\n  return;\n}", "code_t": "void X509_CRL_free(X509_CRL *<span class=\"supfact\">a</span>) {\n  X509_CRL *<span class=\"supfact\">a</span> - local;\n  ASN1_item_free((ASN1_VALUE *)<span class=\"supfact\">a</span>, (ASN1_ITEM *)&amp;\n                 X509_CRL_it);\n  return;\n}", "var": [{"name": "a", "type": "X509_CRL * *", "pred_name": "a", "ref_name": "a", "ref_type": "X509_CRL * *"}], "body_in_train": true}, {"repo_owner": "SSLAB-HSA", "repo_name": "HSAemu", "path": "SSLAB-HSA/HSAemu/4b3ead8b851797ca2c2e8df03ed1f7330ce430377dedefcb72b3b962de6a461e", "path_in_repo": "SSLAB-HSA/HSAemu/qemu/armeb-linux-user/fpu/softfloat.o", "objdump": "000000000000b5eb <float64_le_quiet>:\n    b5eb:\t55                   \tpush   %rbp\n    b5ec:\t48 89 e5             \tmov    %rsp,%rbp\n    b5ef:\t48 83 ec 40          \tsub    $0x40,%rsp\n    b5f3:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    b5f7:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n    b5fb:\t48 89 55 c8          \tmov    %rdx,-0x38(%rbp)\n    b5ff:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    b606:\t00 00 \n    b608:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    b60c:\t31 c0                \txor    %eax,%eax\n    b60e:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    b612:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    b616:\t48 89 d6             \tmov    %rdx,%rsi\n    b619:\t48 89 c7             \tmov    %rax,%rdi\n    b61c:\te8 7e 7b ff ff       \tcall   319f <float64_squash_input_denormal>\n    b621:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    b625:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    b629:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b62d:\t48 89 d6             \tmov    %rdx,%rsi\n    b630:\t48 89 c7             \tmov    %rax,%rdi\n    b633:\te8 67 7b ff ff       \tcall   319f <float64_squash_input_denormal>\n    b638:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    b63c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    b640:\t48 89 c7             \tmov    %rax,%rdi\n    b643:\te8 e0 7a ff ff       \tcall   3128 <extractFloat64Exp>\n    b648:\t48 3d ff 07 00 00    \tcmp    $0x7ff,%rax\n    b64e:\t75 11                \tjne    b661 <float64_le_quiet+0x76>\n    b650:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    b654:\t48 89 c7             \tmov    %rax,%rdi\n    b657:\te8 8d 7a ff ff       \tcall   30e9 <extractFloat64Frac>\n    b65c:\t48 85 c0             \ttest   %rax,%rax\n    b65f:\t75 25                \tjne    b686 <float64_le_quiet+0x9b>\n    b661:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b665:\t48 89 c7             \tmov    %rax,%rdi\n    b668:\te8 bb 7a ff ff       \tcall   3128 <extractFloat64Exp>\n    b66d:\t48 3d ff 07 00 00    \tcmp    $0x7ff,%rax\n    b673:\t75 4c                \tjne    b6c1 <float64_le_quiet+0xd6>\n    b675:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b679:\t48 89 c7             \tmov    %rax,%rdi\n    b67c:\te8 68 7a ff ff       \tcall   30e9 <extractFloat64Frac>\n    b681:\t48 85 c0             \ttest   %rax,%rax\n    b684:\t74 3b                \tje     b6c1 <float64_le_quiet+0xd6>\n    b686:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    b68a:\t48 89 c7             \tmov    %rax,%rdi\n    b68d:\te8 00 00 00 00       \tcall   b692 <float64_le_quiet+0xa7>\n    b692:\t85 c0                \ttest   %eax,%eax\n    b694:\t75 10                \tjne    b6a6 <float64_le_quiet+0xbb>\n    b696:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b69a:\t48 89 c7             \tmov    %rax,%rdi\n    b69d:\te8 00 00 00 00       \tcall   b6a2 <float64_le_quiet+0xb7>\n    b6a2:\t85 c0                \ttest   %eax,%eax\n    b6a4:\t74 11                \tje     b6b7 <float64_le_quiet+0xcc>\n    b6a6:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    b6aa:\t48 89 c6             \tmov    %rax,%rsi\n    b6ad:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    b6b2:\te8 00 00 00 00       \tcall   b6b7 <float64_le_quiet+0xcc>\n    b6b7:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    b6bc:\te9 87 00 00 00       \tjmp    b748 <float64_le_quiet+0x15d>\n    b6c1:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    b6c5:\t48 89 c7             \tmov    %rax,%rdi\n    b6c8:\te8 99 7a ff ff       \tcall   3166 <extractFloat64Sign>\n    b6cd:\t88 45 e6             \tmov    %al,-0x1a(%rbp)\n    b6d0:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b6d4:\t48 89 c7             \tmov    %rax,%rdi\n    b6d7:\te8 8a 7a ff ff       \tcall   3166 <extractFloat64Sign>\n    b6dc:\t88 45 e7             \tmov    %al,-0x19(%rbp)\n    b6df:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    b6e3:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    b6e7:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b6eb:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    b6ef:\t0f b6 45 e6          \tmovzbl -0x1a(%rbp),%eax\n    b6f3:\t3a 45 e7             \tcmp    -0x19(%rbp),%al\n    b6f6:\t74 24                \tje     b71c <float64_le_quiet+0x131>\n    b6f8:\t80 7d e6 00          \tcmpb   $0x0,-0x1a(%rbp)\n    b6fc:\t75 10                \tjne    b70e <float64_le_quiet+0x123>\n    b6fe:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    b702:\t48 0b 45 f0          \tor     -0x10(%rbp),%rax\n    b706:\t48 01 c0             \tadd    %rax,%rax\n    b709:\t48 85 c0             \ttest   %rax,%rax\n    b70c:\t75 07                \tjne    b715 <float64_le_quiet+0x12a>\n    b70e:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    b713:\teb 33                \tjmp    b748 <float64_le_quiet+0x15d>\n    b715:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    b71a:\teb 2c                \tjmp    b748 <float64_le_quiet+0x15d>\n    b71c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    b720:\t48 3b 45 f0          \tcmp    -0x10(%rbp),%rax\n    b724:\t74 16                \tje     b73c <float64_le_quiet+0x151>\n    b726:\t0f b6 55 e6          \tmovzbl -0x1a(%rbp),%edx\n    b72a:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    b72e:\t48 3b 45 f0          \tcmp    -0x10(%rbp),%rax\n    b732:\t0f 92 c0             \tsetb   %al\n    b735:\t0f b6 c0             \tmovzbl %al,%eax\n    b738:\t39 c2                \tcmp    %eax,%edx\n    b73a:\t74 07                \tje     b743 <float64_le_quiet+0x158>\n    b73c:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    b741:\teb 05                \tjmp    b748 <float64_le_quiet+0x15d>\n    b743:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    b748:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    b74c:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n    b753:\t00 00 \n    b755:\t74 05                \tje     b75c <float64_le_quiet+0x171>\n    b757:\te8 00 00 00 00       \tcall   b75c <float64_le_quiet+0x171>\n    b75c:\tc9                   \tleave  \n    b75d:\tc3                   \tret    ", "code_s": "undefined8 float64_le_quiet(undefined8 <span class=\"supfact\">param_1</span>,\n                            undefined8 <span class=\"supfact\">param_2</span>,\n                            undefined8 <span class=\"supfact\">param_3</span>) {\n  long lVar1;\n  char cVar2;\n  char cVar3;\n  int <span class=\"supfact\">iVar4</span>;\n  ulong uVar5;\n  ulong uVar6;\n  long lVar7;\n  undefined8 uVar8;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  uVar5 = FUN_0010319f(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_3</span>);\n  uVar6 = FUN_0010319f(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>);\n  lVar7 = FUN_00103128(uVar5);\n  if (lVar7 != Number) {\n  LAB_0010b661:\n    lVar7 = FUN_00103128(uVar6);\n    if (lVar7 == Number) {\n      lVar7 = FUN_001030e9(uVar6);\n      if (lVar7 != Number)\n        goto LAB_0010b686;\n    }\n    cVar2 = FUN_00103166(uVar5);\n    cVar3 = FUN_00103166(uVar6);\n    if (cVar2 == cVar3) {\n      if ((uVar5 == uVar6) || ((bool)cVar2 != uVar5 & lt; uVar6)) {\n        uVar8 = Number;\n      } else {\n        uVar8 = Number;\n      }\n    } else if ((cVar2 == String) & amp; &amp;\n               (((uVar5 | uVar6) & amp; Number) != Number)) {\n      uVar8 = Number;\n    } else {\n      uVar8 = Number;\n    }\n    goto LAB_0010b748;\n  }\n  lVar7 = FUN_001030e9(uVar5);\n  if (lVar7 == Number)\n    goto LAB_0010b661;\nLAB_0010b686:\n  <span class=\"supfact\">iVar4</span> = float64_is_signaling_nan(uVar5);\n  if (<span class=\"supfact\">iVar4</span> == Number) {\n    <span class=\"supfact\">iVar4</span> = float64_is_signaling_nan(uVar6);\n    if (<span class=\"supfact\">iVar4</span> != Number)\n      goto LAB_0010b6a6;\n  } else {\n  LAB_0010b6a6:\n    float_raise(Number, <span class=\"supfact\">param_3</span>);\n  }\n  uVar8 = Number;\nLAB_0010b748:\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return uVar8;\n}", "code_t": "int float64_le_quiet(float64 <span class=\"supfact\">a</span>, float64 <span class=\"supfact\">b</span>,\n                     float_status *<span class=\"supfact\">status</span>) {\n  long lVar1;\n  flag fVar2;\n  flag fVar3;\n  int <span class=\"supfact\">iVar4</span>;\n  float64 a_00;\n  float64 a_01;\n  int_fast16_t iVar5;\n  uint64_t uVar6;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  float_status *<span class=\"supfact\">status</span> - local;\n  float64 <span class=\"supfact\">b</span> - local;\n  float64 <span class=\"supfact\">a</span> - local;\n  flag aSign;\n  flag bSign;\n  uint64_t av;\n  uint64_t bv;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  a_00 =\n      float64_squash_input_denormal(<span class=\"supfact\">a</span>, <span class=\"supfact\">status</span>);\n  a_01 =\n      float64_squash_input_denormal(<span class=\"supfact\">b</span>, <span class=\"supfact\">status</span>);\n  iVar5 = extractFloat64Exp(a_00);\n  if (iVar5 != Number) {\n  LAB_0010b661:\n    iVar5 = extractFloat64Exp(a_01);\n    if (iVar5 == Number) {\n      uVar6 = extractFloat64Frac(a_01);\n      if (uVar6 != Number)\n        goto LAB_0010b686;\n    }\n    fVar2 = extractFloat64Sign(a_00);\n    fVar3 = extractFloat64Sign(a_01);\n    if (fVar2 == fVar3) {\n      if ((a_00 == a_01) || ((bool)fVar2 != a_00 & lt; a_01)) {\n        <span class=\"supfact\">iVar4</span> = Number;\n      } else {\n        <span class=\"supfact\">iVar4</span> = Number;\n      }\n    } else if ((fVar2 == String) & amp; &amp;\n               (((a_00 | a_01) & amp; Number) != Number)) {\n      <span class=\"supfact\">iVar4</span> = Number;\n    } else {\n      <span class=\"supfact\">iVar4</span> = Number;\n    }\n    goto LAB_0010b748;\n  }\n  uVar6 = extractFloat64Frac(a_00);\n  if (uVar6 == Number)\n    goto LAB_0010b661;\nLAB_0010b686:\n  <span class=\"supfact\">iVar4</span> = float64_is_signaling_nan(a_00);\n  if (<span class=\"supfact\">iVar4</span> == Number) {\n    <span class=\"supfact\">iVar4</span> = float64_is_signaling_nan(a_01);\n    if (<span class=\"supfact\">iVar4</span> != Number)\n      goto LAB_0010b6a6;\n  } else {\n  LAB_0010b6a6:\n    float_raise(String, <span class=\"supfact\">status</span>);\n  }\n  <span class=\"supfact\">iVar4</span> = Number;\nLAB_0010b748:\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return <span class=\"supfact\">iVar4</span>;\n}", "var": [{"name": "param_1", "type": "float64", "pred_name": "a", "ref_name": "a", "ref_type": "float64"}, {"name": "param_2", "type": "float64", "pred_name": "b", "ref_name": "b", "ref_type": "float64"}, {"name": "param_3", "type": "float_status * *", "pred_name": "status", "ref_name": "status", "ref_type": "float_status * *"}, {"name": "iVar4", "type": "int", "pred_name": "iVar4", "ref_name": "iVar4", "ref_type": "int"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": true}, {"repo_owner": "sndels", "repo_name": "skunkwork", "path": "sndels/skunkwork/95885ee075ca5a7ca5a47276456d96cd7177ad1d243c7678b7bf1d174a1b6a51", "path_in_repo": "sndels/skunkwork/ext/rocket/lib/device.o", "objdump": "00000000000012e3 <sync_get_track>:\n    12e3:\t55                   \tpush   %rbp\n    12e4:\t48 89 e5             \tmov    %rsp,%rbp\n    12e7:\t48 83 ec 20          \tsub    $0x20,%rsp\n    12eb:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    12ef:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    12f3:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    12f7:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    12fb:\t48 89 d6             \tmov    %rdx,%rsi\n    12fe:\t48 89 c7             \tmov    %rax,%rdi\n    1301:\te8 fa ec ff ff       \tcall   0 <find_track>\n    1306:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    1309:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    130d:\t78 1a                \tjs     1329 <sync_get_track+0x46>\n    130f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1313:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1317:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    131a:\t48 63 d2             \tmovslq %edx,%rdx\n    131d:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    1321:\t48 01 d0             \tadd    %rdx,%rax\n    1324:\t48 8b 00             \tmov    (%rax),%rax\n    1327:\teb 77                \tjmp    13a0 <sync_get_track+0xbd>\n    1329:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    132d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1331:\t48 89 d6             \tmov    %rdx,%rsi\n    1334:\t48 89 c7             \tmov    %rax,%rdi\n    1337:\te8 92 fe ff ff       \tcall   11ce <create_track>\n    133c:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    133f:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    1343:\t79 07                \tjns    134c <sync_get_track+0x69>\n    1345:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    134a:\teb 54                \tjmp    13a0 <sync_get_track+0xbd>\n    134c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1350:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    1354:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    1357:\t48 63 d2             \tmovslq %edx,%rdx\n    135a:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    135e:\t48 01 d0             \tadd    %rdx,%rax\n    1361:\t48 8b 00             \tmov    (%rax),%rax\n    1364:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1368:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    136c:\t8b 40 1c             \tmov    0x1c(%rax),%eax\n    136f:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    1372:\t74 15                \tje     1389 <sync_get_track+0xa6>\n    1374:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    1378:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    137c:\t48 89 d6             \tmov    %rdx,%rsi\n    137f:\t48 89 c7             \tmov    %rax,%rdi\n    1382:\te8 87 f7 ff ff       \tcall   b0e <fetch_track_data>\n    1387:\teb 13                \tjmp    139c <sync_get_track+0xb9>\n    1389:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    138d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1391:\t48 89 d6             \tmov    %rdx,%rsi\n    1394:\t48 89 c7             \tmov    %rax,%rdi\n    1397:\te8 41 f3 ff ff       \tcall   6dd <read_track_data>\n    139c:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    13a0:\tc9                   \tleave  \n    13a1:\tc3                   \tret    \n", "code_s": "undefined8 sync_get_track(long <span class=\"supfact\">param_1</span>,\n                          undefined8 <span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  undefined8 <span class=\"supfact\">uVar2</span>;\n  <span class=\"supfact\">iVar1</span> =\n      FUN_00100000(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n  if (<span class=\"supfact\">iVar1</span> & lt; Number) {\n    <span class=\"supfact\">iVar1</span> =\n        FUN_001011ce(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n    if (<span class=\"supfact\">iVar1</span> & lt; Number) {\n      <span class=\"supfact\">uVar2</span> = Number;\n    } else {\n      <span class=\"supfact\">uVar2</span> =\n          *(undefined8 *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                          (long)<span class=\"supfact\">iVar1</span> * Number);\n      if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == -Number) {\n        FUN_001006dd(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">uVar2</span>);\n      } else {\n        FUN_00100b0e(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">uVar2</span>);\n      }\n    }\n  } else {\n    <span class=\"supfact\">uVar2</span> =\n        *(undefined8 *)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                        (long)<span class=\"supfact\">iVar1</span> * Number);\n  }\n  return <span class=\"supfact\">uVar2</span>;\n}", "code_t": "sync_track *sync_get_track(sync_device *<span class=\"supfact\">d</span>,\n                           char *<span class=\"supfact\">name</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  sync_track *<span class=\"supfact\">t_00</span>;\n  char *<span class=\"supfact\">name</span> - local;\n  sync_device *<span class=\"supfact\">d</span> - local;\n  sync_track *t;\n  int idx;\n  <span class=\"supfact\">iVar1</span> = find_track(<span class=\"supfact\">d</span>, <span class=\"supfact\">name</span>);\n  if (<span class=\"supfact\">iVar1</span> & lt; Number) {\n    <span class=\"supfact\">iVar1</span> =\n        create_track(<span class=\"supfact\">d</span>, <span class=\"supfact\">name</span>);\n    if (<span class=\"supfact\">iVar1</span> & lt; Number) {\n      <span class=\"supfact\">t_00</span> = (sync_track *)Number;\n    } else {\n      <span class=\"supfact\">t_00</span> = <span class=\"supfact\">d</span> - &gt;\n      tracks[<span class=\"supfact\">iVar1</span>];\n      if (<span class=\"supfact\">d</span> - &gt; sock == -Number) {\n        read_track_data(<span class=\"supfact\">d</span>, <span class=\"supfact\">t_00</span>);\n      } else {\n        fetch_track_data(<span class=\"supfact\">d</span>, <span class=\"supfact\">t_00</span>);\n      }\n    }\n  } else {\n    <span class=\"supfact\">t_00</span> = <span class=\"supfact\">d</span> - &gt;\n    tracks[<span class=\"supfact\">iVar1</span>];\n  }\n  return <span class=\"supfact\">t_00</span>;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "c", "ref_name": "d", "ref_type": "sync_device * *"}, {"name": "param_2", "type": "uint64_t", "pred_name": "key", "ref_name": "name", "ref_type": "char * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "uVar2", "type": "uint64_t", "pred_name": "uVar2", "ref_name": "t_00", "ref_type": "sync_track * *"}], "body_in_train": false}, {"repo_owner": "kostyll", "repo_name": "sff", "path": "kostyll/sff/e40498ffe1251b82e2110037dc246fa0fe75777e60341b3399bd0bda0f9d2800", "path_in_repo": "kostyll/sff/FFmpeg/libavcodec/h264idct.o", "objdump": "0000000000006caa <ff_h264_chroma422_dc_dequant_idct_10_c>:\n    6caa:\t48 89 7c 24 a8       \tmov    %rdi,-0x58(%rsp)\n    6caf:\t89 74 24 a4          \tmov    %esi,-0x5c(%rsp)\n    6cb3:\tc7 44 24 f8 20 00 00 \tmovl   $0x20,-0x8(%rsp)\n    6cba:\t00 \n    6cbb:\tc7 44 24 f4 10 00 00 \tmovl   $0x10,-0xc(%rsp)\n    6cc2:\t00 \n    6cc3:\t48 8b 44 24 a8       \tmov    -0x58(%rsp),%rax\n    6cc8:\t48 89 44 24 e8       \tmov    %rax,-0x18(%rsp)\n    6ccd:\tc7 44 24 fc 00 00 00 \tmovl   $0x0,-0x4(%rsp)\n    6cd4:\t00 \n    6cd5:\te9 aa 00 00 00       \tjmp    6d84 <ff_h264_chroma422_dc_dequant_idct_10_c+0xda>\n    6cda:\t8b 44 24 f8          \tmov    -0x8(%rsp),%eax\n    6cde:\t0f af 44 24 fc       \timul   -0x4(%rsp),%eax\n    6ce3:\t48 98                \tcltq   \n    6ce5:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    6cec:\t00 \n    6ced:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    6cf2:\t48 01 d0             \tadd    %rdx,%rax\n    6cf5:\t8b 10                \tmov    (%rax),%edx\n    6cf7:\t8b 44 24 f8          \tmov    -0x8(%rsp),%eax\n    6cfb:\t0f af 44 24 fc       \timul   -0x4(%rsp),%eax\n    6d00:\t89 c1                \tmov    %eax,%ecx\n    6d02:\t8b 44 24 f4          \tmov    -0xc(%rsp),%eax\n    6d06:\t01 c8                \tadd    %ecx,%eax\n    6d08:\t48 98                \tcltq   \n    6d0a:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    6d11:\t00 \n    6d12:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    6d17:\t48 01 c8             \tadd    %rcx,%rax\n    6d1a:\t8b 00                \tmov    (%rax),%eax\n    6d1c:\t8b 4c 24 fc          \tmov    -0x4(%rsp),%ecx\n    6d20:\t01 c9                \tadd    %ecx,%ecx\n    6d22:\t01 c2                \tadd    %eax,%edx\n    6d24:\t48 63 c1             \tmovslq %ecx,%rax\n    6d27:\t89 54 84 b0          \tmov    %edx,-0x50(%rsp,%rax,4)\n    6d2b:\t8b 44 24 f8          \tmov    -0x8(%rsp),%eax\n    6d2f:\t0f af 44 24 fc       \timul   -0x4(%rsp),%eax\n    6d34:\t48 98                \tcltq   \n    6d36:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    6d3d:\t00 \n    6d3e:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    6d43:\t48 01 d0             \tadd    %rdx,%rax\n    6d46:\t8b 10                \tmov    (%rax),%edx\n    6d48:\t8b 44 24 f8          \tmov    -0x8(%rsp),%eax\n    6d4c:\t0f af 44 24 fc       \timul   -0x4(%rsp),%eax\n    6d51:\t89 c1                \tmov    %eax,%ecx\n    6d53:\t8b 44 24 f4          \tmov    -0xc(%rsp),%eax\n    6d57:\t01 c8                \tadd    %ecx,%eax\n    6d59:\t48 98                \tcltq   \n    6d5b:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    6d62:\t00 \n    6d63:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    6d68:\t48 01 c8             \tadd    %rcx,%rax\n    6d6b:\t8b 00                \tmov    (%rax),%eax\n    6d6d:\t8b 4c 24 fc          \tmov    -0x4(%rsp),%ecx\n    6d71:\t01 c9                \tadd    %ecx,%ecx\n    6d73:\t83 c1 01             \tadd    $0x1,%ecx\n    6d76:\t29 c2                \tsub    %eax,%edx\n    6d78:\t48 63 c1             \tmovslq %ecx,%rax\n    6d7b:\t89 54 84 b0          \tmov    %edx,-0x50(%rsp,%rax,4)\n    6d7f:\t83 44 24 fc 01       \taddl   $0x1,-0x4(%rsp)\n    6d84:\t83 7c 24 fc 03       \tcmpl   $0x3,-0x4(%rsp)\n    6d89:\t0f 8e 4b ff ff ff    \tjle    6cda <ff_h264_chroma422_dc_dequant_idct_10_c+0x30>\n    6d8f:\tc7 44 24 fc 00 00 00 \tmovl   $0x0,-0x4(%rsp)\n    6d96:\t00 \n    6d97:\te9 72 01 00 00       \tjmp    6f0e <ff_h264_chroma422_dc_dequant_idct_10_c+0x264>\n    6d9c:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    6da0:\t48 98                \tcltq   \n    6da2:\t0f b6 80 00 00 00 00 \tmovzbl 0x0(%rax),%eax\n    6da9:\t0f b6 c0             \tmovzbl %al,%eax\n    6dac:\t89 44 24 e4          \tmov    %eax,-0x1c(%rsp)\n    6db0:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    6db4:\t48 98                \tcltq   \n    6db6:\t8b 54 84 b0          \tmov    -0x50(%rsp,%rax,4),%edx\n    6dba:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    6dbe:\t83 c0 04             \tadd    $0x4,%eax\n    6dc1:\t48 98                \tcltq   \n    6dc3:\t8b 44 84 b0          \tmov    -0x50(%rsp,%rax,4),%eax\n    6dc7:\t01 d0                \tadd    %edx,%eax\n    6dc9:\t89 44 24 e0          \tmov    %eax,-0x20(%rsp)\n    6dcd:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    6dd1:\t48 98                \tcltq   \n    6dd3:\t8b 54 84 b0          \tmov    -0x50(%rsp,%rax,4),%edx\n    6dd7:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    6ddb:\t83 c0 04             \tadd    $0x4,%eax\n    6dde:\t48 98                \tcltq   \n    6de0:\t8b 44 84 b0          \tmov    -0x50(%rsp,%rax,4),%eax\n    6de4:\t29 c2                \tsub    %eax,%edx\n    6de6:\t89 d0                \tmov    %edx,%eax\n    6de8:\t89 44 24 dc          \tmov    %eax,-0x24(%rsp)\n    6dec:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    6df0:\t83 c0 02             \tadd    $0x2,%eax\n    6df3:\t48 98                \tcltq   \n    6df5:\t8b 54 84 b0          \tmov    -0x50(%rsp,%rax,4),%edx\n    6df9:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    6dfd:\t83 c0 06             \tadd    $0x6,%eax\n    6e00:\t48 98                \tcltq   \n    6e02:\t8b 44 84 b0          \tmov    -0x50(%rsp,%rax,4),%eax\n    6e06:\t29 c2                \tsub    %eax,%edx\n    6e08:\t89 d0                \tmov    %edx,%eax\n    6e0a:\t89 44 24 d8          \tmov    %eax,-0x28(%rsp)\n    6e0e:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    6e12:\t83 c0 02             \tadd    $0x2,%eax\n    6e15:\t48 98                \tcltq   \n    6e17:\t8b 54 84 b0          \tmov    -0x50(%rsp,%rax,4),%edx\n    6e1b:\t8b 44 24 fc          \tmov    -0x4(%rsp),%eax\n    6e1f:\t83 c0 06             \tadd    $0x6,%eax\n    6e22:\t48 98                \tcltq   \n    6e24:\t8b 44 84 b0          \tmov    -0x50(%rsp,%rax,4),%eax\n    6e28:\t01 d0                \tadd    %edx,%eax\n    6e2a:\t89 44 24 d4          \tmov    %eax,-0x2c(%rsp)\n    6e2e:\t8b 54 24 e0          \tmov    -0x20(%rsp),%edx\n    6e32:\t8b 44 24 d4          \tmov    -0x2c(%rsp),%eax\n    6e36:\t01 d0                \tadd    %edx,%eax\n    6e38:\t0f af 44 24 a4       \timul   -0x5c(%rsp),%eax\n    6e3d:\t8d 90 80 00 00 00    \tlea    0x80(%rax),%edx\n    6e43:\t8b 44 24 e4          \tmov    -0x1c(%rsp),%eax\n    6e47:\t48 98                \tcltq   \n    6e49:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    6e50:\t00 \n    6e51:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    6e56:\t48 01 c8             \tadd    %rcx,%rax\n    6e59:\tc1 fa 08             \tsar    $0x8,%edx\n    6e5c:\t89 10                \tmov    %edx,(%rax)\n    6e5e:\t8b 54 24 dc          \tmov    -0x24(%rsp),%edx\n    6e62:\t8b 44 24 d8          \tmov    -0x28(%rsp),%eax\n    6e66:\t01 d0                \tadd    %edx,%eax\n    6e68:\t0f af 44 24 a4       \timul   -0x5c(%rsp),%eax\n    6e6d:\t8d 88 80 00 00 00    \tlea    0x80(%rax),%ecx\n    6e73:\t8b 54 24 f8          \tmov    -0x8(%rsp),%edx\n    6e77:\t8b 44 24 e4          \tmov    -0x1c(%rsp),%eax\n    6e7b:\t01 d0                \tadd    %edx,%eax\n    6e7d:\t48 98                \tcltq   \n    6e7f:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    6e86:\t00 \n    6e87:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    6e8c:\t48 01 d0             \tadd    %rdx,%rax\n    6e8f:\tc1 f9 08             \tsar    $0x8,%ecx\n    6e92:\t89 ca                \tmov    %ecx,%edx\n    6e94:\t89 10                \tmov    %edx,(%rax)\n    6e96:\t8b 44 24 dc          \tmov    -0x24(%rsp),%eax\n    6e9a:\t2b 44 24 d8          \tsub    -0x28(%rsp),%eax\n    6e9e:\t0f af 44 24 a4       \timul   -0x5c(%rsp),%eax\n    6ea3:\t8d 90 80 00 00 00    \tlea    0x80(%rax),%edx\n    6ea9:\t8b 44 24 f8          \tmov    -0x8(%rsp),%eax\n    6ead:\t8d 0c 00             \tlea    (%rax,%rax,1),%ecx\n    6eb0:\t8b 44 24 e4          \tmov    -0x1c(%rsp),%eax\n    6eb4:\t01 c8                \tadd    %ecx,%eax\n    6eb6:\t48 98                \tcltq   \n    6eb8:\t48 8d 0c 85 00 00 00 \tlea    0x0(,%rax,4),%rcx\n    6ebf:\t00 \n    6ec0:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    6ec5:\t48 01 c8             \tadd    %rcx,%rax\n    6ec8:\tc1 fa 08             \tsar    $0x8,%edx\n    6ecb:\t89 10                \tmov    %edx,(%rax)\n    6ecd:\t8b 44 24 e0          \tmov    -0x20(%rsp),%eax\n    6ed1:\t2b 44 24 d4          \tsub    -0x2c(%rsp),%eax\n    6ed5:\t0f af 44 24 a4       \timul   -0x5c(%rsp),%eax\n    6eda:\t8d 88 80 00 00 00    \tlea    0x80(%rax),%ecx\n    6ee0:\t8b 54 24 f8          \tmov    -0x8(%rsp),%edx\n    6ee4:\t89 d0                \tmov    %edx,%eax\n    6ee6:\t01 c0                \tadd    %eax,%eax\n    6ee8:\t01 c2                \tadd    %eax,%edx\n    6eea:\t8b 44 24 e4          \tmov    -0x1c(%rsp),%eax\n    6eee:\t01 d0                \tadd    %edx,%eax\n    6ef0:\t48 98                \tcltq   \n    6ef2:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    6ef9:\t00 \n    6efa:\t48 8b 44 24 e8       \tmov    -0x18(%rsp),%rax\n    6eff:\t48 01 d0             \tadd    %rdx,%rax\n    6f02:\tc1 f9 08             \tsar    $0x8,%ecx\n    6f05:\t89 ca                \tmov    %ecx,%edx\n    6f07:\t89 10                \tmov    %edx,(%rax)\n    6f09:\t83 44 24 fc 01       \taddl   $0x1,-0x4(%rsp)\n    6f0e:\t83 7c 24 fc 01       \tcmpl   $0x1,-0x4(%rsp)\n    6f13:\t0f 8e 83 fe ff ff    \tjle    6d9c <ff_h264_chroma422_dc_dequant_idct_10_c+0xf2>\n    6f19:\t90                   \tnop\n    6f1a:\t90                   \tnop\n    6f1b:\tc3                   \tret    ", "code_s": "void ff_h264_chroma422_dc_dequant_idct_10_c(long <span class=\"supfact\">param_1</span>,\n                                            int <span class=\"supfact\">param_2</span>) {\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  uint <span class=\"supfact\">uVar9</span>;\n  int <span class=\"supfact\">aiStack_50</span>[Number];\n  long <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_c</span>;\n  int <span class=\"supfact\">local_8</span>;\n  int <span class=\"supfact\">local_4</span>;\n  <span class=\"supfact\">local_8</span> = Number;\n  <span class=\"supfact\">local_c</span> = Number;\n  <span class=\"supfact\">local_18</span> = <span class=\"supfact\">param_1</span>;\n  for (<span class=\"supfact\">local_4</span> = Number; <span class=\"supfact\">local_4</span> & lt; Number;\n       <span class=\"supfact\">local_4</span> = <span class=\"supfact\">local_4</span> + Number) {\n    <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> * Number] =\n        *(int *)(<span class=\"supfact\">local_18</span> +\n                 (long)(<span class=\"supfact\">local_8</span> * <span class=\"supfact\">local_4</span>) *\n                     Number) +\n        *(int *)(<span class=\"supfact\">local_18</span> +\n                 (long)(<span class=\"supfact\">local_c</span> +\n                        <span class=\"supfact\">local_8</span> * <span class=\"supfact\">local_4</span>) *\n                     Number);\n    <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> * Number + Number] =\n        *(int *)(<span class=\"supfact\">local_18</span> +\n                 (long)(<span class=\"supfact\">local_8</span> * <span class=\"supfact\">local_4</span>) *\n                     Number) -\n        *(int *)(<span class=\"supfact\">local_18</span> +\n                 (long)(<span class=\"supfact\">local_c</span> +\n                        <span class=\"supfact\">local_8</span> * <span class=\"supfact\">local_4</span>) *\n                     Number);\n  }\n  for (<span class=\"supfact\">local_4</span> = Number; <span class=\"supfact\">local_4</span> & lt; Number;\n       <span class=\"supfact\">local_4</span> = <span class=\"supfact\">local_4</span> + Number) {\n    <span class=\"supfact\">uVar9</span> =\n        (uint)(byte)(&amp; DAT_0010bd83)[<span class=\"supfact\">local_4</span>];\n    iVar1 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span>];\n    iVar2 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> + Number];\n    iVar3 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span>];\n    iVar4 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> + Number];\n    iVar5 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> + Number];\n    iVar6 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> + Number];\n    iVar7 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> + Number];\n    iVar8 = <span class=\"supfact\">aiStack_50</span>[<span class=\"supfact\">local_4</span> + Number];\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)<span class=\"supfact\">uVar9</span> * Number) =\n        (iVar8 + iVar7 + iVar2 + iVar1) * <span class=\"supfact\">param_2</span> + Number & gt;\n    &gt;\n    Number;\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)(<span class=\"supfact\">uVar9</span> + <span class=\"supfact\">local_8</span>) *\n                 Number) =\n        ((iVar5 - iVar6) + (iVar3 - iVar4)) * <span class=\"supfact\">param_2</span> + Number &\n        gt;\n    &gt;\n    Number;\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)(<span class=\"supfact\">uVar9</span> +\n                         <span class=\"supfact\">local_8</span> * Number) *\n                 Number) =\n        ((iVar3 - iVar4) - (iVar5 - iVar6)) * <span class=\"supfact\">param_2</span> + Number &\n        gt;\n    &gt;\n    Number;\n    *(int *)(<span class=\"supfact\">local_18</span> +\n             (long)(int)(<span class=\"supfact\">uVar9</span> +\n                         <span class=\"supfact\">local_8</span> * Number) *\n                 Number) =\n        ((iVar2 + iVar1) - (iVar8 + iVar7)) * <span class=\"supfact\">param_2</span> + Number &\n        gt;\n    &gt;\n    Number;\n  }\n  return;\n}", "code_t": "void ff_h264_chroma422_dc_dequant_idct_10_c(int16_t *<span class=\"supfact\">_block</span>,\n                                            int <span class=\"supfact\">qmul</span>) {\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  uint <span class=\"supfact\">uVar9</span>;\n  int <span class=\"supfact\">qmul</span> - local;\n  int16_t *<span class=\"supfact\">_block</span> - local;\n  int <span class=\"supfact\">temp</span>[Number];\n  int z3;\n  int z2;\n  int z1;\n  int z0;\n  int offset;\n  int32_t *<span class=\"supfact\">block</span>;\n  int <span class=\"supfact\">xStride</span>;\n  int <span class=\"supfact\">stride</span>;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">stride</span> = Number;\n  <span class=\"supfact\">xStride</span> = Number;\n  <span class=\"supfact\">block</span> = (int32_t *)<span class=\"supfact\">_block</span>;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt; Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> * Number] =\n        <span class=\"supfact\">block</span>[<span class=\"supfact\">stride</span> * <span class=\"supfact\">i</span>] +\n        <span class=\"supfact\">block</span>[<span class=\"supfact\">xStride</span> +\n                              <span class=\"supfact\">stride</span> * <span class=\"supfact\">i</span>];\n    <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> * Number + Number] =\n        <span class=\"supfact\">block</span>[<span class=\"supfact\">stride</span> * <span class=\"supfact\">i</span>] -\n        <span class=\"supfact\">block</span>[<span class=\"supfact\">xStride</span> +\n                              <span class=\"supfact\">stride</span> * <span class=\"supfact\">i</span>];\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt; Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    <span class=\"supfact\">uVar9</span> = (uint)String[<span class=\"supfact\">i</span>];\n    iVar1 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span>];\n    iVar2 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar3 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span>];\n    iVar4 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar5 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar6 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar7 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    iVar8 = <span class=\"supfact\">temp</span>[<span class=\"supfact\">i</span> + Number];\n    <span class=\"supfact\">block</span>[(int)<span class=\"supfact\">uVar9</span>] =\n        (iVar8 + iVar7 + iVar2 + iVar1) * <span class=\"supfact\">qmul</span> + Number & gt;\n    &gt;\n    Number;\n    <span class=\"supfact\">block</span>[(int)(<span class=\"supfact\">uVar9</span> +\n                                <span class=\"supfact\">stride</span>)] =\n        ((iVar5 - iVar6) + (iVar3 - iVar4)) * <span class=\"supfact\">qmul</span> + Number &\n        gt;\n    &gt;\n    Number;\n    <span class=\"supfact\">block</span>[(int)(<span class=\"supfact\">uVar9</span> +\n                                <span class=\"supfact\">stride</span> * Number)] =\n        ((iVar3 - iVar4) - (iVar5 - iVar6)) * <span class=\"supfact\">qmul</span> + Number &\n        gt;\n    &gt;\n    Number;\n    <span class=\"supfact\">block</span>[(int)(<span class=\"supfact\">uVar9</span> +\n                                <span class=\"supfact\">stride</span> * Number)] =\n        ((iVar2 + iVar1) - (iVar8 + iVar7)) * <span class=\"supfact\">qmul</span> + Number &\n        gt;\n    &gt;\n    Number;\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "DCTELEM * *", "pred_name": "_block", "ref_name": "_block", "ref_type": "int16_t * *"}, {"name": "param_2", "type": "int", "pred_name": "qmul", "ref_name": "qmul", "ref_type": "int"}, {"name": "uVar9", "type": "uint", "pred_name": "uVar9", "ref_name": "uVar9", "ref_type": "uint"}, {"name": "aiStack_50", "type": "int[8][8]", "pred_name": "temp", "ref_name": "temp", "ref_type": "int[8][8]"}, {"name": "local_18", "type": "int32_t * *", "pred_name": "block", "ref_name": "block", "ref_type": "int32_t * *"}, {"name": "local_c", "type": "int", "pred_name": "xStride", "ref_name": "xStride", "ref_type": "int"}, {"name": "local_8", "type": "int", "pred_name": "stride", "ref_name": "stride", "ref_type": "int"}, {"name": "local_4", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "aerospike", "repo_name": "aerospike-common", "path": "aerospike/aerospike-common/63a1af67d49a03d641695fc81552de9124cb0e19f425e66f76dc111c17c28243", "path_in_repo": "aerospike/aerospike-common//target/Linux-x86_64/lib/libaerospike-common.so", "objdump": "000000000001e07d <as_vector_to_array>:\n   1e07d:\t55                   \tpush   %rbp\n   1e07e:\t48 89 e5             \tmov    %rsp,%rbp\n   1e081:\t48 83 ec 20          \tsub    $0x20,%rsp\n   1e085:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n   1e089:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n   1e08d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1e091:\t8b 50 0c             \tmov    0xc(%rax),%edx\n   1e094:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1e098:\t8b 40 10             \tmov    0x10(%rax),%eax\n   1e09b:\t0f af c2             \timul   %edx,%eax\n   1e09e:\t89 c0                \tmov    %eax,%eax\n   1e0a0:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n   1e0a4:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   1e0a8:\t48 89 c7             \tmov    %rax,%rdi\n   1e0ab:\te8 e0 af fe ff       \tcall   9090 <cf_malloc@plt>\n   1e0b0:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n   1e0b4:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1e0b8:\t48 8b 08             \tmov    (%rax),%rcx\n   1e0bb:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n   1e0bf:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1e0c3:\t48 89 ce             \tmov    %rcx,%rsi\n   1e0c6:\t48 89 c7             \tmov    %rax,%rdi\n   1e0c9:\te8 a2 b5 fe ff       \tcall   9670 <memcpy@plt>\n   1e0ce:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n   1e0d2:\t8b 50 0c             \tmov    0xc(%rax),%edx\n   1e0d5:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   1e0d9:\t89 10                \tmov    %edx,(%rax)\n   1e0db:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   1e0df:\tc9                   \tleave  \n   1e0e0:\tc3                   \tret    ", "code_s": "void *as_vector_to_array(void **<span class=\"supfact\">param_1</span>,\n                         undefined4 *<span class=\"supfact\">param_2</span>) {\n  ulong __n;\n  void *__dest;\n  __n = (ulong)(uint)(*(int *)(<span class=\"supfact\">param_1</span> + Number) *\n                      *(int *)((long)<span class=\"supfact\">param_1</span> + Number));\n  __dest = (void *)cf_malloc(__n);\n  memcpy(__dest, *<span class=\"supfact\">param_1</span>, __n);\n  *<span class=\"supfact\">param_2</span> =\n      *(undefined4 *)((long)<span class=\"supfact\">param_1</span> + Number);\n  return __dest;\n}", "code_t": "void *as_vector_to_array(as_vector *<span class=\"supfact\">vector</span>,\n                         uint32_t *<span class=\"supfact\">size</span>) {\n  ulong sz;\n  void *__dest;\n  uint32_t *<span class=\"supfact\">size</span> - local;\n  as_vector *<span class=\"supfact\">vector</span> - local;\n  void *array;\n  size_t len;\n  sz = (ulong)(<span class=\"supfact\">vector</span> - &gt;\n               item_size * <span class=\"supfact\">vector</span> - &gt; <span class=\"supfact\">size</span>);\n  __dest = cf_malloc(sz);\n  memcpy(__dest, <span class=\"supfact\">vector</span> - &gt; list, sz);\n  *<span class=\"supfact\">size</span> = <span class=\"supfact\">vector</span> - &gt;\n  <span class=\"supfact\">size</span>;\n  return __dest;\n}", "var": [{"name": "param_1", "type": "VlGMM * *", "pred_name": "self", "ref_name": "vector", "ref_type": "as_vector * *"}, {"name": "param_2", "type": "void * *", "pred_name": "priors", "ref_name": "size", "ref_type": "uint32_t * *"}], "body_in_train": false}, {"repo_owner": "dtatulea", "repo_name": "qemu", "path": "dtatulea/qemu/1f10a903e30db4a0a0a14c4a9010aa42e460c0f770c1afccd3335101e6c1b997", "path_in_repo": "dtatulea/qemu//m68k-softmmu/monitor.o", "objdump": "0000000000008e00 <monitor_resume>:\n    8e00:\t55                   \tpush   %rbp\n    8e01:\t48 89 e5             \tmov    %rsp,%rbp\n    8e04:\t48 83 ec 20          \tsub    $0x20,%rsp\n    8e08:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    8e0c:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    8e13:\t00 00 \n    8e15:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    8e19:\t31 c0                \txor    %eax,%eax\n    8e1b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    8e1f:\t48 8b 80 20 04 00 00 \tmov    0x420(%rax),%rax\n    8e26:\t48 85 c0             \ttest   %rax,%rax\n    8e29:\t74 31                \tje     8e5c <monitor_resume+0x5c>\n    8e2b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    8e2f:\t8b 40 14             \tmov    0x14(%rax),%eax\n    8e32:\t8d 50 ff             \tlea    -0x1(%rax),%edx\n    8e35:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    8e39:\t89 50 14             \tmov    %edx,0x14(%rax)\n    8e3c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    8e40:\t8b 40 14             \tmov    0x14(%rax),%eax\n    8e43:\t85 c0                \ttest   %eax,%eax\n    8e45:\t75 16                \tjne    8e5d <monitor_resume+0x5d>\n    8e47:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    8e4b:\t48 8b 80 20 04 00 00 \tmov    0x420(%rax),%rax\n    8e52:\t48 89 c7             \tmov    %rax,%rdi\n    8e55:\te8 00 00 00 00       \tcall   8e5a <monitor_resume+0x5a>\n    8e5a:\teb 01                \tjmp    8e5d <monitor_resume+0x5d>\n    8e5c:\t90                   \tnop\n    8e5d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    8e61:\t64 48 33 04 25 28 00 \txor    %fs:0x28,%rax\n    8e68:\t00 00 \n    8e6a:\t74 05                \tje     8e71 <monitor_resume+0x71>\n    8e6c:\te8 00 00 00 00       \tcall   8e71 <monitor_resume+0x71>\n    8e71:\tc9                   \tleave  \n    8e72:\tc3                   \tret    ", "code_s": "void monitor_resume(long <span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  if (*(long *)(<span class=\"supfact\">param_1</span> + Number) != Number) {\n    *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n        *(int *)(<span class=\"supfact\">param_1</span> + Number) + -Number;\n    if (*(int *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n      readline_show_prompt(*(undefined8 *)(<span class=\"supfact\">param_1</span> + Number));\n    }\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "code_t": "void monitor_resume(Monitor *<span class=\"supfact\">mon</span>) {\n  long lVar1;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  Monitor *<span class=\"supfact\">mon</span> - local;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  if (<span class=\"supfact\">mon</span> - &gt; rs != (ReadLineState *)Number) {\n    <span class=\"supfact\">mon</span> - &gt;\n    suspend_cnt = <span class=\"supfact\">mon</span> - &gt;\n    suspend_cnt + -Number;\n    if (<span class=\"supfact\">mon</span> - &gt; suspend_cnt == Number) {\n      readline_show_prompt(<span class=\"supfact\">mon</span> - &gt; rs);\n    }\n  }\n  if (lVar1 != *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "Monitor * *", "pred_name": "mon", "ref_name": "mon", "ref_type": "Monitor * *"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": true}, {"repo_owner": "grpc", "repo_name": "grpc", "path": "grpc/grpc/bf086d6d3c6149624cbc2443de9f8274a52887ab583f8104da0d465b47e0219c", "path_in_repo": "grpc/grpc//libs/opt/libgpr.so.9.0.0", "objdump": "", "code_s": "ulong gpr_parse_nonnegative_int(char *<span class=\"supfact\">param_1</span>) {\n  ulong uVar1;\n  ulong uVar2;\n  char *<span class=\"supfact\">local_10</span>[Number];\n  uVar1 = strtol(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_10</span>, Number);\n  if (*<span class=\"supfact\">local_10</span>[Number] == String) {\n    uVar2 = uVar1 & amp;\n    Number;\n    if (Number & lt; uVar1) {\n      uVar2 = Number;\n    }\n  } else {\n    uVar2 = Number;\n  }\n  return uVar2;\n}", "code_t": "int gpr_parse_nonnegative_int(char *<span class=\"supfact\">value</span>) {\n  int iVar1;\n  ulong uVar2;\n  long result;\n  char *<span class=\"supfact\">end</span>;\n  uVar2 = strtol(<span class=\"supfact\">value</span>, &amp; <span class=\"supfact\">end</span>, Number);\n  if (*<span class=\"supfact\">end</span> == String) {\n    iVar1 = (int)uVar2;\n    if (Number & lt; uVar2) {\n      iVar1 = -Number;\n    }\n  } else {\n    iVar1 = -Number;\n  }\n  return iVar1;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "name", "ref_name": "value", "ref_type": "char * *"}, {"name": "local_10", "type": "ulong", "pred_name": "value", "ref_name": "end", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "trueos", "repo_name": "dhcpcd", "path": "trueos/dhcpcd/826a445a16ef849bf5b336aa098a631abe502f3d79cb6be83409847ffd97e84d", "path_in_repo": "trueos/dhcpcd//route.o", "objdump": "00000000000004d2 <rt_dispose>:\n     4d2:\t55                   \tpush   %rbp\n     4d3:\t48 89 e5             \tmov    %rsp,%rbp\n     4d6:\t48 83 ec 10          \tsub    $0x10,%rsp\n     4da:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n     4de:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     4e2:\t48 05 b0 00 00 00    \tadd    $0xb0,%rax\n     4e8:\t48 89 c7             \tmov    %rax,%rdi\n     4eb:\te8 6f ff ff ff       \tcall   45f <rt_headfree>\n     4f0:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     4f4:\t48 05 c0 00 00 00    \tadd    $0xc0,%rax\n     4fa:\t48 89 c7             \tmov    %rax,%rdi\n     4fd:\te8 5d ff ff ff       \tcall   45f <rt_headfree>\n     502:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     506:\t48 05 d0 00 00 00    \tadd    $0xd0,%rax\n     50c:\t48 89 c7             \tmov    %rax,%rdi\n     50f:\te8 4b ff ff ff       \tcall   45f <rt_headfree>\n     514:\t90                   \tnop\n     515:\tc9                   \tleave  \n     516:\tc3                   \tret    ", "code_s": "void rt_dispose(long <span class=\"supfact\">param_1</span>) {\n  FUN_0010045f(<span class=\"supfact\">param_1</span> + Number);\n  FUN_0010045f(<span class=\"supfact\">param_1</span> + Number);\n  FUN_0010045f(<span class=\"supfact\">param_1</span> + Number);\n  return;\n}", "code_t": "void rt_dispose(dhcpcd_ctx *<span class=\"supfact\">ctx</span>) {\n  dhcpcd_ctx *<span class=\"supfact\">ctx</span> - local;\n  rt_headfree(&amp; <span class=\"supfact\">ctx</span> - &gt; routes);\n  rt_headfree(&amp; <span class=\"supfact\">ctx</span> - &gt; kroutes);\n  rt_headfree(&amp; <span class=\"supfact\">ctx</span> - &gt; froutes);\n  return;\n}", "var": [{"name": "param_1", "type": "roff * *", "pred_name": "r", "ref_name": "ctx", "ref_type": "dhcpcd_ctx * *"}], "body_in_train": false}, {"repo_owner": "kentalabur", "repo_name": "egs", "path": "kentalabur/egs/6f4018511ead2a9304dcc05885393cf530d43bc72f7ee99cb06d5cfcf21c2f73", "path_in_repo": "kentalabur/egs/ps_6/network7", "objdump": "", "code_s": "int sigaddset(sigset_t *__set, int __signo) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_sigaddset_00416200)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int sigaddset(sigset_t *__set, int __signo) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_sigaddset_00416200)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "GeekHorse", "repo_name": "Pinto", "path": "GeekHorse/Pinto/80f4c04730cc52e0c0d0cd9cc8bb2a901086b1538377ceaca1abf0b29cb78c82", "path_in_repo": "GeekHorse/Pinto/source/pintoLib/pinto.o", "objdump": "00000000000015af <pintoSimpleInflate>:\n    15af:\t55                   \tpush   %rbp\n    15b0:\t48 89 e5             \tmov    %rsp,%rbp\n    15b3:\t48 83 ec 30          \tsub    $0x30,%rsp\n    15b7:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    15bb:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n    15bf:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    15c6:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    15cd:\t00 \n    15ce:\tc6 45 ef 00          \tmovb   $0x0,-0x11(%rbp)\n    15d2:\tc7 45 e8 00 00 00 00 \tmovl   $0x0,-0x18(%rbp)\n    15d9:\tc7 45 e4 00 00 00 00 \tmovl   $0x0,-0x1c(%rbp)\n    15e0:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n    15e4:\t48 89 c7             \tmov    %rax,%rdi\n    15e7:\te8 00 00 00 00       \tcall   15ec <pintoSimpleInflate+0x3d>\n    15ec:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    15ef:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    15f3:\t0f 85 88 01 00 00    \tjne    1781 <pintoSimpleInflate+0x1d2>\n    15f9:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    15fd:\t48 8b 00             \tmov    (%rax),%rax\n    1600:\t48 89 c7             \tmov    %rax,%rdi\n    1603:\te8 00 00 00 00       \tcall   1608 <pintoSimpleInflate+0x59>\n    1608:\t85 c0                \ttest   %eax,%eax\n    160a:\t0f 85 4f 01 00 00    \tjne    175f <pintoSimpleInflate+0x1b0>\n    1610:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1614:\t48 8b 00             \tmov    (%rax),%rax\n    1617:\t48 8d 55 ef          \tlea    -0x11(%rbp),%rdx\n    161b:\t48 89 d6             \tmov    %rdx,%rsi\n    161e:\t48 89 c7             \tmov    %rax,%rdi\n    1621:\te8 00 00 00 00       \tcall   1626 <pintoSimpleInflate+0x77>\n    1626:\t0f b6 45 ef          \tmovzbl -0x11(%rbp),%eax\n    162a:\t3c 3f                \tcmp    $0x3f,%al\n    162c:\t75 73                \tjne    16a1 <pintoSimpleInflate+0xf2>\n    162e:\tc7 45 e8 00 00 00 00 \tmovl   $0x0,-0x18(%rbp)\n    1635:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1639:\t48 8b 00             \tmov    (%rax),%rax\n    163c:\t48 8d 55 e8          \tlea    -0x18(%rbp),%rdx\n    1640:\t48 89 d6             \tmov    %rdx,%rsi\n    1643:\t48 89 c7             \tmov    %rax,%rdi\n    1646:\te8 00 00 00 00       \tcall   164b <pintoSimpleInflate+0x9c>\n    164b:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    164e:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    1652:\t0f 85 2c 01 00 00    \tjne    1784 <pintoSimpleInflate+0x1d5>\n    1658:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    165c:\t48 8b 00             \tmov    (%rax),%rax\n    165f:\t48 8d 55 e4          \tlea    -0x1c(%rbp),%rdx\n    1663:\t48 89 d6             \tmov    %rdx,%rsi\n    1666:\t48 89 c7             \tmov    %rax,%rdi\n    1669:\te8 00 00 00 00       \tcall   166e <pintoSimpleInflate+0xbf>\n    166e:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    1671:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    1675:\t0f 85 0c 01 00 00    \tjne    1787 <pintoSimpleInflate+0x1d8>\n    167b:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n    167e:\t8b 4d e8             \tmov    -0x18(%rbp),%ecx\n    1681:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1685:\t89 ce                \tmov    %ecx,%esi\n    1687:\t48 89 c7             \tmov    %rax,%rdi\n    168a:\te8 00 00 00 00       \tcall   168f <pintoSimpleInflate+0xe0>\n    168f:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    1692:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    1696:\t0f 84 5d ff ff ff    \tje     15f9 <pintoSimpleInflate+0x4a>\n    169c:\te9 f3 00 00 00       \tjmp    1794 <pintoSimpleInflate+0x1e5>\n    16a1:\t0f b6 45 ef          \tmovzbl -0x11(%rbp),%eax\n    16a5:\t3c 40                \tcmp    $0x40,%al\n    16a7:\t0f 85 8f 00 00 00    \tjne    173c <pintoSimpleInflate+0x18d>\n    16ad:\tc7 45 e8 00 00 00 00 \tmovl   $0x0,-0x18(%rbp)\n    16b4:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    16b8:\t48 8b 00             \tmov    (%rax),%rax\n    16bb:\t48 8d 55 e8          \tlea    -0x18(%rbp),%rdx\n    16bf:\t48 89 d6             \tmov    %rdx,%rsi\n    16c2:\t48 89 c7             \tmov    %rax,%rdi\n    16c5:\te8 00 00 00 00       \tcall   16ca <pintoSimpleInflate+0x11b>\n    16ca:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    16cd:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    16d1:\t0f 85 b3 00 00 00    \tjne    178a <pintoSimpleInflate+0x1db>\n    16d7:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    16db:\t48 8b 00             \tmov    (%rax),%rax\n    16de:\t48 8d 55 e8          \tlea    -0x18(%rbp),%rdx\n    16e2:\t48 89 d6             \tmov    %rdx,%rsi\n    16e5:\t48 89 c7             \tmov    %rax,%rdi\n    16e8:\te8 00 00 00 00       \tcall   16ed <pintoSimpleInflate+0x13e>\n    16ed:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    16f0:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    16f4:\t0f 85 93 00 00 00    \tjne    178d <pintoSimpleInflate+0x1de>\n    16fa:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    16fe:\t48 8b 00             \tmov    (%rax),%rax\n    1701:\t48 8d 55 e4          \tlea    -0x1c(%rbp),%rdx\n    1705:\t48 89 d6             \tmov    %rdx,%rsi\n    1708:\t48 89 c7             \tmov    %rax,%rdi\n    170b:\te8 00 00 00 00       \tcall   1710 <pintoSimpleInflate+0x161>\n    1710:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    1713:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    1717:\t75 77                \tjne    1790 <pintoSimpleInflate+0x1e1>\n    1719:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n    171c:\t8b 4d e8             \tmov    -0x18(%rbp),%ecx\n    171f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1723:\t89 ce                \tmov    %ecx,%esi\n    1725:\t48 89 c7             \tmov    %rax,%rdi\n    1728:\te8 00 00 00 00       \tcall   172d <pintoSimpleInflate+0x17e>\n    172d:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    1730:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    1734:\t0f 84 bf fe ff ff    \tje     15f9 <pintoSimpleInflate+0x4a>\n    173a:\teb 58                \tjmp    1794 <pintoSimpleInflate+0x1e5>\n    173c:\t0f b6 45 ef          \tmovzbl -0x11(%rbp),%eax\n    1740:\t0f be d0             \tmovsbl %al,%edx\n    1743:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1747:\t89 d6                \tmov    %edx,%esi\n    1749:\t48 89 c7             \tmov    %rax,%rdi\n    174c:\te8 00 00 00 00       \tcall   1751 <pintoSimpleInflate+0x1a2>\n    1751:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    1754:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n    1758:\t75 39                \tjne    1793 <pintoSimpleInflate+0x1e4>\n    175a:\te9 9a fe ff ff       \tjmp    15f9 <pintoSimpleInflate+0x4a>\n    175f:\t90                   \tnop\n    1760:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1764:\t48 89 c7             \tmov    %rax,%rdi\n    1767:\te8 00 00 00 00       \tcall   176c <pintoSimpleInflate+0x1bd>\n    176c:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    1770:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    1774:\t48 89 10             \tmov    %rdx,(%rax)\n    1777:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    177e:\t00 \n    177f:\teb 13                \tjmp    1794 <pintoSimpleInflate+0x1e5>\n    1781:\t90                   \tnop\n    1782:\teb 10                \tjmp    1794 <pintoSimpleInflate+0x1e5>\n    1784:\t90                   \tnop\n    1785:\teb 0d                \tjmp    1794 <pintoSimpleInflate+0x1e5>\n    1787:\t90                   \tnop\n    1788:\teb 0a                \tjmp    1794 <pintoSimpleInflate+0x1e5>\n    178a:\t90                   \tnop\n    178b:\teb 07                \tjmp    1794 <pintoSimpleInflate+0x1e5>\n    178d:\t90                   \tnop\n    178e:\teb 04                \tjmp    1794 <pintoSimpleInflate+0x1e5>\n    1790:\t90                   \tnop\n    1791:\teb 01                \tjmp    1794 <pintoSimpleInflate+0x1e5>\n    1793:\t90                   \tnop\n    1794:\t48 8d 45 f0          \tlea    -0x10(%rbp),%rax\n    1798:\t48 89 c7             \tmov    %rax,%rdi\n    179b:\te8 00 00 00 00       \tcall   17a0 <pintoSimpleInflate+0x1f1>\n    17a0:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    17a3:\tc9                   \tleave  \n    17a4:\tc3                   \tret    ", "code_s": "int pintoSimpleInflate(undefined8 *<span class=\"supfact\">param_1</span>,\n                       undefined8 *<span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  undefined4 <span class=\"supfact\">local_24</span>;\n  undefined4 <span class=\"supfact\">local_20</span>;\n  char <span class=\"supfact\">local_19</span>;\n  undefined8 <span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_c</span> = Number;\n  <span class=\"supfact\">local_18</span> = Number;\n  <span class=\"supfact\">local_19</span> = String;\n  <span class=\"supfact\">local_20</span> = Number;\n  <span class=\"supfact\">local_24</span> = Number;\n  <span class=\"supfact\">local_c</span> = pintoTextInit(&amp; <span class=\"supfact\">local_18</span>);\n  do {\n    if (<span class=\"supfact\">local_c</span> != Number) {\n    LAB_00101794:\n      pintoTextFree(&amp; <span class=\"supfact\">local_18</span>);\n      return <span class=\"supfact\">local_c</span>;\n    }\n    <span class=\"supfact\">iVar1</span> = pintoTextAtEnd(*<span class=\"supfact\">param_1</span>);\n    if (<span class=\"supfact\">iVar1</span> != Number) {\n      pintoTextFree(<span class=\"supfact\">param_1</span>);\n      *<span class=\"supfact\">param_2</span> = <span class=\"supfact\">local_18</span>;\n      <span class=\"supfact\">local_18</span> = Number;\n      goto LAB_00101794;\n    }\n    pintoTextGetChar(*<span class=\"supfact\">param_1</span>, &amp; <span class=\"supfact\">local_19</span>);\n    if (<span class=\"supfact\">local_19</span> == String) {\n      <span class=\"supfact\">local_20</span> = Number;\n      <span class=\"supfact\">local_c</span> = pintoTextUpdateValue(\n          *<span class=\"supfact\">param_1</span>, &amp; <span class=\"supfact\">local_20</span>);\n      if ((<span class=\"supfact\">local_c</span> != Number) ||\n          (<span class=\"supfact\">local_c</span> = pintoTextGetValue(\n               *<span class=\"supfact\">param_1</span>, &amp; <span class=\"supfact\">local_24</span>),\n           <span class=\"supfact\">local_c</span> != Number))\n        goto LAB_00101794;\n      <span class=\"supfact\">local_c</span> = pintoTextInflateHelper(\n          <span class=\"supfact\">local_18</span>, <span class=\"supfact\">local_20</span>,\n          <span class=\"supfact\">local_24</span>);\n    } else if (<span class=\"supfact\">local_19</span> == String) {\n      <span class=\"supfact\">local_20</span> = Number;\n      <span class=\"supfact\">local_c</span> = pintoTextUpdateValue(\n          *<span class=\"supfact\">param_1</span>, &amp; <span class=\"supfact\">local_20</span>);\n      if (((<span class=\"supfact\">local_c</span> != Number) ||\n           (<span class=\"supfact\">local_c</span> = pintoTextUpdateValue(\n                *<span class=\"supfact\">param_1</span>, &amp; <span class=\"supfact\">local_20</span>),\n            <span class=\"supfact\">local_c</span> != Number)) ||\n          (<span class=\"supfact\">local_c</span> = pintoTextGetValue(\n               *<span class=\"supfact\">param_1</span>, &amp; <span class=\"supfact\">local_24</span>),\n           <span class=\"supfact\">local_c</span> != Number))\n        goto LAB_00101794;\n      <span class=\"supfact\">local_c</span> = pintoTextInflateHelper(\n          <span class=\"supfact\">local_18</span>, <span class=\"supfact\">local_20</span>,\n          <span class=\"supfact\">local_24</span>);\n    } else {\n      <span class=\"supfact\">local_c</span> = pintoTextAddChar(<span class=\"supfact\">local_18</span>,\n                                                 (int)<span class=\"supfact\">local_19</span>);\n    }\n  } while (true);\n}", "code_t": "int pintoSimpleInflate(PintoText **<span class=\"supfact\">textToInflate_F</span>,\n                       PintoText **<span class=\"supfact\">text_A</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  PintoText **<span class=\"supfact\">text_A</span> - local;\n  PintoText **<span class=\"supfact\">textToInflate_F</span> - local;\n  int <span class=\"supfact\">length</span>;\n  int <span class=\"supfact\">distance</span>;\n  char <span class=\"supfact\">ch</span>;\n  PintoText *<span class=\"supfact\">newText</span>;\n  int <span class=\"supfact\">rc</span>;\n  <span class=\"supfact\">rc</span> = Number;\n  <span class=\"supfact\">newText</span> = (PintoText *)Number;\n  <span class=\"supfact\">ch</span> = String;\n  <span class=\"supfact\">distance</span> = Number;\n  <span class=\"supfact\">length</span> = Number;\n  <span class=\"supfact\">rc</span> = pintoTextInit(&amp; <span class=\"supfact\">newText</span>);\n  do {\n    if (<span class=\"supfact\">rc</span> != Number) {\n    cleanup:\n      pintoTextFree(&amp; <span class=\"supfact\">newText</span>);\n      return <span class=\"supfact\">rc</span>;\n    }\n    <span class=\"supfact\">iVar1</span> = pintoTextAtEnd(*<span class=\"supfact\">textToInflate_F</span>);\n    if (<span class=\"supfact\">iVar1</span> != Number) {\n      pintoTextFree(<span class=\"supfact\">textToInflate_F</span>);\n      *<span class=\"supfact\">text_A</span> = <span class=\"supfact\">newText</span>;\n      <span class=\"supfact\">newText</span> = (PintoText *)Number;\n      goto cleanup;\n    }\n    pintoTextGetChar(*<span class=\"supfact\">textToInflate_F</span>, &amp;\n                     <span class=\"supfact\">ch</span>);\n    if (<span class=\"supfact\">ch</span> == String) {\n      <span class=\"supfact\">distance</span> = Number;\n      <span class=\"supfact\">rc</span> = pintoTextUpdateValue(\n          *<span class=\"supfact\">textToInflate_F</span>, &amp; <span class=\"supfact\">distance</span>);\n      if ((<span class=\"supfact\">rc</span> != Number) ||\n          (<span class=\"supfact\">rc</span> = pintoTextGetValue(\n               *<span class=\"supfact\">textToInflate_F</span>, &amp; <span class=\"supfact\">length</span>),\n           <span class=\"supfact\">rc</span> != Number))\n        goto cleanup;\n      <span class=\"supfact\">rc</span> = pintoTextInflateHelper(<span class=\"supfact\">newText</span>,\n                                                  <span class=\"supfact\">distance</span>,\n                                                  <span class=\"supfact\">length</span>);\n    } else if (<span class=\"supfact\">ch</span> == String) {\n      <span class=\"supfact\">distance</span> = Number;\n      <span class=\"supfact\">rc</span> = pintoTextUpdateValue(\n          *<span class=\"supfact\">textToInflate_F</span>, &amp; <span class=\"supfact\">distance</span>);\n      if (((<span class=\"supfact\">rc</span> != Number) ||\n           (<span class=\"supfact\">rc</span> =\n                pintoTextUpdateValue(*<span class=\"supfact\">textToInflate_F</span>, &amp;\n                                     <span class=\"supfact\">distance</span>),\n            <span class=\"supfact\">rc</span> != Number)) ||\n          (<span class=\"supfact\">rc</span> = pintoTextGetValue(\n               *<span class=\"supfact\">textToInflate_F</span>, &amp; <span class=\"supfact\">length</span>),\n           <span class=\"supfact\">rc</span> != Number))\n        goto cleanup;\n      <span class=\"supfact\">rc</span> = pintoTextInflateHelper(<span class=\"supfact\">newText</span>,\n                                                  <span class=\"supfact\">distance</span>,\n                                                  <span class=\"supfact\">length</span>);\n    } else {\n      <span class=\"supfact\">rc</span> =\n          pintoTextAddChar(<span class=\"supfact\">newText</span>, (int)<span class=\"supfact\">ch</span>);\n    }\n  } while (true);\n}", "var": [{"name": "param_1", "type": "bot_state_t * *", "pred_name": "bs", "ref_name": "textToInflate_F", "ref_type": "PintoText * * *"}, {"name": "param_2", "type": "char * *", "pred_name": "__unk__", "ref_name": "text_A", "ref_type": "PintoText * * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "local_24", "type": "int", "pred_name": "i", "ref_name": "length", "ref_type": "int"}, {"name": "local_20", "type": "int", "pred_name": "__unk__", "ref_name": "distance", "ref_type": "int"}, {"name": "local_19", "type": "_Bool", "pred_name": "__unk__", "ref_name": "ch", "ref_type": "char"}, {"name": "local_18", "type": "bot_goal_t * *", "pred_name": "__unk__", "ref_name": "newText", "ref_type": "PintoText * *"}, {"name": "local_c", "type": "int", "pred_name": "ret", "ref_name": "rc", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "asiekierka", "repo_name": "pixmess", "path": "asiekierka/pixmess/7b9bf1e7f347abd5dd867b8a7d1748b80bc48af5b1f460d98bf999a1a2003af5", "path_in_repo": "asiekierka/pixmess//interface.o", "objdump": "0000000000000fd1 <render_ui>:\n     fd1:\t55                   \tpush   %rbp\n     fd2:\t48 89 e5             \tmov    %rsp,%rbp\n     fd5:\t48 83 ec 10          \tsub    $0x10,%rsp\n     fd9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     fde:\te8 00 00 00 00       \tcall   fe3 <render_ui+0x12>\n     fe3:\t89 45 f8             \tmov    %eax,-0x8(%rbp)\n     fe6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     feb:\te8 00 00 00 00       \tcall   ff0 <render_ui+0x1f>\n     ff0:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n     ff3:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n     ff9:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n     ffe:\tba 80 02 00 00       \tmov    $0x280,%edx\n    1003:\tbe 80 01 00 00       \tmov    $0x180,%esi\n    1008:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    100d:\te8 00 00 00 00       \tcall   1012 <render_ui+0x41>\n    1012:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1017:\te8 00 00 00 00       \tcall   101c <render_ui+0x4b>\n    101c:\tc6 45 ff 00          \tmovb   $0x0,-0x1(%rbp)\n    1020:\t83 7d f8 0f          \tcmpl   $0xf,-0x8(%rbp)\n    1024:\t0f 8e db 00 00 00    \tjle    1105 <render_ui+0x134>\n    102a:\t81 7d f4 7f 01 00 00 \tcmpl   $0x17f,-0xc(%rbp)\n    1031:\t0f 8e ce 00 00 00    \tjle    1105 <render_ui+0x134>\n    1037:\t83 7d f8 3f          \tcmpl   $0x3f,-0x8(%rbp)\n    103b:\t0f 8f c4 00 00 00    \tjg     1105 <render_ui+0x134>\n    1041:\t81 7d f4 8f 01 00 00 \tcmpl   $0x18f,-0xc(%rbp)\n    1048:\t0f 8f b7 00 00 00    \tjg     1105 <render_ui+0x134>\n    104e:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    1051:\tc1 f8 04             \tsar    $0x4,%eax\n    1054:\t88 45 ff             \tmov    %al,-0x1(%rbp)\n    1057:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    105c:\te8 00 00 00 00       \tcall   1061 <render_ui+0x90>\n    1061:\t85 c0                \ttest   %eax,%eax\n    1063:\t0f 84 9c 00 00 00    \tje     1105 <render_ui+0x134>\n    1069:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 1070 <render_ui+0x9f>\n    1070:\t84 c0                \ttest   %al,%al\n    1072:\t0f 85 8d 00 00 00    \tjne    1105 <render_ui+0x134>\n    1078:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 107f <render_ui+0xae>\n    107f:\t84 c0                \ttest   %al,%al\n    1081:\t74 27                \tje     10aa <render_ui+0xd9>\n    1083:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 108a <render_ui+0xb9>\n    108a:\t3c 03                \tcmp    $0x3,%al\n    108c:\t77 1c                \tja     10aa <render_ui+0xd9>\n    108e:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 1095 <render_ui+0xc4>\n    1095:\t0f b6 c0             \tmovzbl %al,%eax\n    1098:\t83 e8 01             \tsub    $0x1,%eax\n    109b:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # 10a1 <render_ui+0xd0>\n    10a1:\t48 98                \tcltq   \n    10a3:\t89 14 85 00 00 00 00 \tmov    %edx,0x0(,%rax,4)\n    10aa:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 10b1 <render_ui+0xe0>\n    10b1:\t0f b6 c0             \tmovzbl %al,%eax\n    10b4:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    10b7:\tc1 fa 04             \tsar    $0x4,%edx\n    10ba:\t39 d0                \tcmp    %edx,%eax\n    10bc:\t75 09                \tjne    10c7 <render_ui+0xf6>\n    10be:\tc6 05 00 00 00 00 00 \tmovb   $0x0,0x0(%rip)        # 10c5 <render_ui+0xf4>\n    10c5:\teb 0c                \tjmp    10d3 <render_ui+0x102>\n    10c7:\t8b 45 f8             \tmov    -0x8(%rbp),%eax\n    10ca:\tc1 f8 04             \tsar    $0x4,%eax\n    10cd:\t88 05 00 00 00 00    \tmov    %al,0x0(%rip)        # 10d3 <render_ui+0x102>\n    10d3:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 10da <render_ui+0x109>\n    10da:\t84 c0                \ttest   %al,%al\n    10dc:\t74 27                \tje     1105 <render_ui+0x134>\n    10de:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 10e5 <render_ui+0x114>\n    10e5:\t3c 03                \tcmp    $0x3,%al\n    10e7:\t77 1c                \tja     1105 <render_ui+0x134>\n    10e9:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 10f0 <render_ui+0x11f>\n    10f0:\t0f b6 c0             \tmovzbl %al,%eax\n    10f3:\t83 e8 01             \tsub    $0x1,%eax\n    10f6:\t48 98                \tcltq   \n    10f8:\t8b 04 85 00 00 00 00 \tmov    0x0(,%rax,4),%eax\n    10ff:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 1105 <render_ui+0x134>\n    1105:\t41 b8 b3 00 00 00    \tmov    $0xb3,%r8d\n    110b:\tb9 08 00 00 00       \tmov    $0x8,%ecx\n    1110:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1115:\tbe 18 00 00 00       \tmov    $0x18,%esi\n    111a:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    111f:\te8 00 00 00 00       \tcall   1124 <render_ui+0x153>\n    1124:\t41 b8 b3 00 00 00    \tmov    $0xb3,%r8d\n    112a:\tb9 08 00 00 00       \tmov    $0x8,%ecx\n    112f:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1134:\tbe 18 00 00 00       \tmov    $0x18,%esi\n    1139:\tbf 04 00 00 00       \tmov    $0x4,%edi\n    113e:\te8 00 00 00 00       \tcall   1143 <render_ui+0x172>\n    1143:\t41 b8 b3 00 00 00    \tmov    $0xb3,%r8d\n    1149:\tb9 08 00 00 00       \tmov    $0x8,%ecx\n    114e:\tba 00 00 00 00       \tmov    $0x0,%edx\n    1153:\tbe 18 00 00 00       \tmov    $0x18,%esi\n    1158:\tbf 06 00 00 00       \tmov    $0x6,%edi\n    115d:\te8 00 00 00 00       \tcall   1162 <render_ui+0x191>\n    1162:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1169 <render_ui+0x198>\n    1169:\t0f b7 40 02          \tmovzwl 0x2(%rax),%eax\n    116d:\t0f b7 c8             \tmovzwl %ax,%ecx\n    1170:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1177 <render_ui+0x1a6>\n    1177:\t0f b6 40 04          \tmovzbl 0x4(%rax),%eax\n    117b:\t0f b6 c0             \tmovzbl %al,%eax\n    117e:\t83 e0 0f             \tand    $0xf,%eax\n    1181:\t89 c2                \tmov    %eax,%edx\n    1183:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 118a <render_ui+0x1b9>\n    118a:\t0f b6 40 04          \tmovzbl 0x4(%rax),%eax\n    118e:\tc0 e8 04             \tshr    $0x4,%al\n    1191:\t0f b6 c0             \tmovzbl %al,%eax\n    1194:\t41 89 c8             \tmov    %ecx,%r8d\n    1197:\t89 d1                \tmov    %edx,%ecx\n    1199:\t89 c2                \tmov    %eax,%edx\n    119b:\tbe 18 00 00 00       \tmov    $0x18,%esi\n    11a0:\tbf 05 00 00 00       \tmov    $0x5,%edi\n    11a5:\te8 00 00 00 00       \tcall   11aa <render_ui+0x1d9>\n    11aa:\t80 7d ff 01          \tcmpb   $0x1,-0x1(%rbp)\n    11ae:\t74 0b                \tje     11bb <render_ui+0x1ea>\n    11b0:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 11b7 <render_ui+0x1e6>\n    11b7:\t3c 01                \tcmp    $0x1,%al\n    11b9:\t75 07                \tjne    11c2 <render_ui+0x1f1>\n    11bb:\tba 0c 00 00 00       \tmov    $0xc,%edx\n    11c0:\teb 05                \tjmp    11c7 <render_ui+0x1f6>\n    11c2:\tba 04 00 00 00       \tmov    $0x4,%edx\n    11c7:\t80 7d ff 01          \tcmpb   $0x1,-0x1(%rbp)\n    11cb:\t74 0b                \tje     11d8 <render_ui+0x207>\n    11cd:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 11d4 <render_ui+0x203>\n    11d4:\t3c 01                \tcmp    $0x1,%al\n    11d6:\t75 07                \tjne    11df <render_ui+0x20e>\n    11d8:\tb8 08 00 00 00       \tmov    $0x8,%eax\n    11dd:\teb 05                \tjmp    11e4 <render_ui+0x213>\n    11df:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    11e4:\t41 b8 54 00 00 00    \tmov    $0x54,%r8d\n    11ea:\t89 d1                \tmov    %edx,%ecx\n    11ec:\t89 c2                \tmov    %eax,%edx\n    11ee:\tbe 18 00 00 00       \tmov    $0x18,%esi\n    11f3:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    11f8:\te8 00 00 00 00       \tcall   11fd <render_ui+0x22c>\n    11fd:\t80 7d ff 02          \tcmpb   $0x2,-0x1(%rbp)\n    1201:\t74 0b                \tje     120e <render_ui+0x23d>\n    1203:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 120a <render_ui+0x239>\n    120a:\t3c 02                \tcmp    $0x2,%al\n    120c:\t75 07                \tjne    1215 <render_ui+0x244>\n    120e:\tba 0f 00 00 00       \tmov    $0xf,%edx\n    1213:\teb 05                \tjmp    121a <render_ui+0x249>\n    1215:\tba 07 00 00 00       \tmov    $0x7,%edx\n    121a:\t80 7d ff 02          \tcmpb   $0x2,-0x1(%rbp)\n    121e:\t74 0b                \tje     122b <render_ui+0x25a>\n    1220:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 1227 <render_ui+0x256>\n    1227:\t3c 02                \tcmp    $0x2,%al\n    1229:\t75 07                \tjne    1232 <render_ui+0x261>\n    122b:\tb8 09 00 00 00       \tmov    $0x9,%eax\n    1230:\teb 05                \tjmp    1237 <render_ui+0x266>\n    1232:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    1237:\t41 b8 02 00 00 00    \tmov    $0x2,%r8d\n    123d:\t89 d1                \tmov    %edx,%ecx\n    123f:\t89 c2                \tmov    %eax,%edx\n    1241:\tbe 18 00 00 00       \tmov    $0x18,%esi\n    1246:\tbf 02 00 00 00       \tmov    $0x2,%edi\n    124b:\te8 00 00 00 00       \tcall   1250 <render_ui+0x27f>\n    1250:\t80 7d ff 03          \tcmpb   $0x3,-0x1(%rbp)\n    1254:\t74 0b                \tje     1261 <render_ui+0x290>\n    1256:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 125d <render_ui+0x28c>\n    125d:\t3c 03                \tcmp    $0x3,%al\n    125f:\t75 07                \tjne    1268 <render_ui+0x297>\n    1261:\tba 0e 00 00 00       \tmov    $0xe,%edx\n    1266:\teb 05                \tjmp    126d <render_ui+0x29c>\n    1268:\tba 06 00 00 00       \tmov    $0x6,%edx\n    126d:\t80 7d ff 03          \tcmpb   $0x3,-0x1(%rbp)\n    1271:\t74 0b                \tje     127e <render_ui+0x2ad>\n    1273:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 127a <render_ui+0x2a9>\n    127a:\t3c 03                \tcmp    $0x3,%al\n    127c:\t75 07                \tjne    1285 <render_ui+0x2b4>\n    127e:\tb8 08 00 00 00       \tmov    $0x8,%eax\n    1283:\teb 05                \tjmp    128a <render_ui+0x2b9>\n    1285:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    128a:\t41 b8 43 00 00 00    \tmov    $0x43,%r8d\n    1290:\t89 d1                \tmov    %edx,%ecx\n    1292:\t89 c2                \tmov    %eax,%edx\n    1294:\tbe 18 00 00 00       \tmov    $0x18,%esi\n    1299:\tbf 03 00 00 00       \tmov    $0x3,%edi\n    129e:\te8 00 00 00 00       \tcall   12a3 <render_ui+0x2d2>\n    12a3:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 12aa <render_ui+0x2d9>\n    12aa:\t84 c0                \ttest   %al,%al\n    12ac:\t74 07                \tje     12b5 <render_ui+0x2e4>\n    12ae:\tb8 f8 00 00 00       \tmov    $0xf8,%eax\n    12b3:\teb 05                \tjmp    12ba <render_ui+0x2e9>\n    12b5:\tb8 8f 00 00 00       \tmov    $0x8f,%eax\n    12ba:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    12c0:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    12c5:\t89 c2                \tmov    %eax,%edx\n    12c7:\tbe 80 01 00 00       \tmov    $0x180,%esi\n    12cc:\tbf 70 00 00 00       \tmov    $0x70,%edi\n    12d1:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    12d6:\te8 00 00 00 00       \tcall   12db <render_ui+0x30a>\n    12db:\t83 7d f8 6f          \tcmpl   $0x6f,-0x8(%rbp)\n    12df:\t7e 4a                \tjle    132b <render_ui+0x35a>\n    12e1:\t81 7d f4 7f 01 00 00 \tcmpl   $0x17f,-0xc(%rbp)\n    12e8:\t7e 41                \tjle    132b <render_ui+0x35a>\n    12ea:\t81 7d f8 97 00 00 00 \tcmpl   $0x97,-0x8(%rbp)\n    12f1:\t7f 38                \tjg     132b <render_ui+0x35a>\n    12f3:\t81 7d f4 87 01 00 00 \tcmpl   $0x187,-0xc(%rbp)\n    12fa:\t7f 2f                \tjg     132b <render_ui+0x35a>\n    12fc:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1301:\te8 00 00 00 00       \tcall   1306 <render_ui+0x335>\n    1306:\t85 c0                \ttest   %eax,%eax\n    1308:\t74 21                \tje     132b <render_ui+0x35a>\n    130a:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 1311 <render_ui+0x340>\n    1311:\t84 c0                \ttest   %al,%al\n    1313:\t75 16                \tjne    132b <render_ui+0x35a>\n    1315:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 131c <render_ui+0x34b>\n    131c:\tba 01 00 00 00       \tmov    $0x1,%edx\n    1321:\t29 c2                \tsub    %eax,%edx\n    1323:\t89 d0                \tmov    %edx,%eax\n    1325:\t88 05 00 00 00 00    \tmov    %al,0x0(%rip)        # 132b <render_ui+0x35a>\n    132b:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 1332 <render_ui+0x361>\n    1332:\t0f b6 c0             \tmovzbl %al,%eax\n    1335:\t83 f8 03             \tcmp    $0x3,%eax\n    1338:\t74 1f                \tje     1359 <render_ui+0x388>\n    133a:\t83 f8 03             \tcmp    $0x3,%eax\n    133d:\t7f 20                \tjg     135f <render_ui+0x38e>\n    133f:\t83 f8 01             \tcmp    $0x1,%eax\n    1342:\t74 07                \tje     134b <render_ui+0x37a>\n    1344:\t83 f8 02             \tcmp    $0x2,%eax\n    1347:\t74 09                \tje     1352 <render_ui+0x381>\n    1349:\teb 14                \tjmp    135f <render_ui+0x38e>\n    134b:\te8 00 00 00 00       \tcall   1350 <render_ui+0x37f>\n    1350:\teb 0d                \tjmp    135f <render_ui+0x38e>\n    1352:\te8 00 00 00 00       \tcall   1357 <render_ui+0x386>\n    1357:\teb 06                \tjmp    135f <render_ui+0x38e>\n    1359:\te8 00 00 00 00       \tcall   135e <render_ui+0x38d>\n    135e:\t90                   \tnop\n    135f:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 1366 <render_ui+0x395>\n    1366:\t84 c0                \ttest   %al,%al\n    1368:\t75 15                \tjne    137f <render_ui+0x3ae>\n    136a:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    136f:\te8 00 00 00 00       \tcall   1374 <render_ui+0x3a3>\n    1374:\t85 c0                \ttest   %eax,%eax\n    1376:\t74 07                \tje     137f <render_ui+0x3ae>\n    1378:\tc6 05 00 00 00 00 01 \tmovb   $0x1,0x0(%rip)        # 137f <render_ui+0x3ae>\n    137f:\t0f b6 05 00 00 00 00 \tmovzbl 0x0(%rip),%eax        # 1386 <render_ui+0x3b5>\n    1386:\t3c 01                \tcmp    $0x1,%al\n    1388:\t75 15                \tjne    139f <render_ui+0x3ce>\n    138a:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    138f:\te8 00 00 00 00       \tcall   1394 <render_ui+0x3c3>\n    1394:\t85 c0                \ttest   %eax,%eax\n    1396:\t75 07                \tjne    139f <render_ui+0x3ce>\n    1398:\tc6 05 00 00 00 00 00 \tmovb   $0x0,0x0(%rip)        # 139f <render_ui+0x3ce>\n    139f:\t83 7d f8 4f          \tcmpl   $0x4f,-0x8(%rbp)\n    13a3:\t7e 2c                \tjle    13d1 <render_ui+0x400>\n    13a5:\t81 7d f4 7f 01 00 00 \tcmpl   $0x17f,-0xc(%rbp)\n    13ac:\t7e 23                \tjle    13d1 <render_ui+0x400>\n    13ae:\t83 7d f8 5f          \tcmpl   $0x5f,-0x8(%rbp)\n    13b2:\t7f 1d                \tjg     13d1 <render_ui+0x400>\n    13b4:\t81 7d f4 8f 01 00 00 \tcmpl   $0x18f,-0xc(%rbp)\n    13bb:\t7f 14                \tjg     13d1 <render_ui+0x400>\n    13bd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 13c4 <render_ui+0x3f3>\n    13c4:\t0f b6 00             \tmovzbl (%rax),%eax\n    13c7:\t0f b6 c0             \tmovzbl %al,%eax\n    13ca:\t89 c7                \tmov    %eax,%edi\n    13cc:\te8 00 00 00 00       \tcall   13d1 <render_ui+0x400>\n    13d1:\t90                   \tnop\n    13d2:\tc9                   \tleave  \n    13d3:\tc3                   \tret    ", "code_s": "void render_ui(void) {\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  undefined4 uVar5;\n  undefined8 <span class=\"supfact\">uVar6</span>;\n  byte <span class=\"supfact\">local_9</span>;\n  iVar1 = sfp_event_mouse_x();\n  iVar2 = sfp_event_mouse_y();\n  sfp_fill_rect(Number, Number, Number, Number, Number);\n  verify_tile();\n  <span class=\"supfact\">local_9</span> = Number;\n  if ((((Number & lt; iVar1) & amp; &amp; (Number & lt; iVar2)) & amp; &amp;\n       (iVar1 & lt; Number)) &\n          amp;\n      &amp; (iVar2 & lt; Number)) {\n    <span class=\"supfact\">local_9</span> = (byte)(iVar1 & gt; &gt; Number);\n    iVar3 = sfp_event_mouse_button(Number);\n    if ((iVar3 != Number) & amp; &amp; (mouse_left_down == String)) {\n      if ((activeUI != Number) & amp; &amp; (activeUI & lt; Number)) {\n        *(undefined4 *)(scrollbar_pos_save + (long)(int)(activeUI - Number) *\n                                                 Number) = scrollbar_pos;\n      }\n      uVar4 = (uint)activeUI;\n      activeUI = <span class=\"supfact\">local_9</span>;\n      if (uVar4 == iVar1 & gt; &gt; Number) {\n        activeUI = Number;\n      }\n      if ((activeUI != Number) & amp; &amp; (activeUI & lt; Number)) {\n        scrollbar_pos =\n            *(undefined4 *)(scrollbar_pos_save +\n                            (long)(int)(activeUI - Number) * Number);\n      }\n    }\n  }\n  sfp_putc_block_2x(Number, Number, Number, Number, Number);\n  sfp_putc_block_2x(Number, Number, Number, Number, Number);\n  sfp_putc_block_2x(Number, Number, Number, Number, Number);\n  sfp_putc_block_2x(Number, Number, (byte)drawing_tile[Number] & gt; &gt;\n                    Number, drawing_tile[Number] & amp;\n                    Number, *(undefined2 *)(drawing_tile + Number));\n  if ((<span class=\"supfact\">local_9</span> == Number) || (activeUI == Number)) {\n    <span class=\"supfact\">uVar6</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar6</span> = Number;\n  }\n  if ((<span class=\"supfact\">local_9</span> == Number) || (activeUI == Number)) {\n    uVar5 = Number;\n  } else {\n    uVar5 = Number;\n  }\n  sfp_putc_block_2x(Number, Number, uVar5, <span class=\"supfact\">uVar6</span>, Number);\n  if ((<span class=\"supfact\">local_9</span> == Number) || (activeUI == Number)) {\n    <span class=\"supfact\">uVar6</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar6</span> = Number;\n  }\n  if ((<span class=\"supfact\">local_9</span> == Number) || (activeUI == Number)) {\n    uVar5 = Number;\n  } else {\n    uVar5 = Number;\n  }\n  sfp_putc_block_2x(Number, Number, uVar5, <span class=\"supfact\">uVar6</span>, Number);\n  if ((<span class=\"supfact\">local_9</span> == Number) || (activeUI == Number)) {\n    <span class=\"supfact\">uVar6</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar6</span> = Number;\n  }\n  if ((<span class=\"supfact\">local_9</span> == Number) || (activeUI == Number)) {\n    uVar5 = Number;\n  } else {\n    uVar5 = Number;\n  }\n  sfp_putc_block_2x(Number, Number, uVar5, <span class=\"supfact\">uVar6</span>, Number);\n  if (maximized == String) {\n    uVar5 = Number;\n  } else {\n    uVar5 = Number;\n  }\n  sfp_printf_1x(Number, Number, uVar5, Number, String);\n  if ((((Number & lt; iVar1) & amp; &amp; (Number & lt; iVar2)) & amp; &amp;\n       (iVar1 & lt; Number)) &\n          amp;\n      &amp; (((iVar2 & lt; Number & amp; &amp;\n               (iVar3 = sfp_event_mouse_button(Number), iVar3 != Number)) &\n                  amp;\n              &amp; (mouse_left_down == String)))) {\n    maximized = String - maximized;\n  }\n  if (activeUI == Number) {\n    render_color_window();\n  } else if (activeUI & lt; Number) {\n    if (activeUI == Number) {\n      render_type_window();\n    } else if (activeUI == Number) {\n      render_char_window();\n    }\n  }\n  if ((mouse_left_down == String) & amp; &amp;\n      (iVar3 = sfp_event_mouse_button(Number), iVar3 != Number)) {\n    mouse_left_down = String;\n  }\n  if ((mouse_left_down == String) & amp; &amp;\n      (iVar3 = sfp_event_mouse_button(Number), iVar3 == Number)) {\n    mouse_left_down = String;\n  }\n  if ((((Number & lt; iVar1) & amp; &amp; (Number & lt; iVar2)) & amp; &amp;\n       (iVar1 & lt; Number)) &\n          amp;\n      &amp; (iVar2 & lt; Number)) {\n    render_type_tooltip(*drawing_tile);\n  }\n  return;\n}", "code_t": "void render_ui(void) {\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  undefined4 uVar5;\n  undefined8 <span class=\"supfact\">uVar6</span>;\n  int mousey;\n  int mousex;\n  u8 <span class=\"supfact\">whichHL</span>;\n  iVar1 = sfp_event_mouse_x();\n  iVar2 = sfp_event_mouse_y();\n  sfp_fill_rect(Number, Number, Number, Number, Number);\n  verify_tile();\n  <span class=\"supfact\">whichHL</span> = String;\n  if ((((Number & lt; iVar1) & amp; &amp; (Number & lt; iVar2)) & amp; &amp;\n       (iVar1 & lt; Number)) &\n          amp;\n      &amp; (iVar2 & lt; Number)) {\n    <span class=\"supfact\">whichHL</span> = (u8)(iVar1 & gt; &gt; Number);\n    iVar3 = sfp_event_mouse_button(Number);\n    if ((iVar3 != Number) & amp; &amp; (mouse_left_down == String)) {\n      if ((activeUI != String) & amp; &amp; (activeUI & lt; Number)) {\n        scrollbar_pos_save[(int)(activeUI - Number)] = scrollbar_pos;\n      }\n      uVar4 = (uint)activeUI;\n      activeUI = <span class=\"supfact\">whichHL</span>;\n      if (uVar4 == iVar1 & gt; &gt; Number) {\n        activeUI = String;\n      }\n      if ((activeUI != String) & amp; &amp; (activeUI & lt; Number)) {\n        scrollbar_pos = scrollbar_pos_save[(int)(activeUI - Number)];\n      }\n    }\n  }\n  sfp_putc_block_2x(Number, Number, Number, Number, Number);\n  sfp_putc_block_2x(Number, Number, Number, Number, Number);\n  sfp_putc_block_2x(Number, Number, Number, Number, Number);\n  sfp_putc_block_2x(Number, Number, drawing_tile - &gt; col & gt; &gt;\n                    Number, drawing_tile - &gt; col & amp;\n                    Number, drawing_tile - &gt; chr);\n  if ((<span class=\"supfact\">whichHL</span> == String) || (activeUI == String)) {\n    <span class=\"supfact\">uVar6</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar6</span> = Number;\n  }\n  if ((<span class=\"supfact\">whichHL</span> == String) || (activeUI == String)) {\n    uVar5 = Number;\n  } else {\n    uVar5 = Number;\n  }\n  sfp_putc_block_2x(Number, Number, uVar5, <span class=\"supfact\">uVar6</span>, Number);\n  if ((<span class=\"supfact\">whichHL</span> == String) || (activeUI == String)) {\n    <span class=\"supfact\">uVar6</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar6</span> = Number;\n  }\n  if ((<span class=\"supfact\">whichHL</span> == String) || (activeUI == String)) {\n    uVar5 = Number;\n  } else {\n    uVar5 = Number;\n  }\n  sfp_putc_block_2x(Number, Number, uVar5, <span class=\"supfact\">uVar6</span>, Number);\n  if ((<span class=\"supfact\">whichHL</span> == String) || (activeUI == String)) {\n    <span class=\"supfact\">uVar6</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar6</span> = Number;\n  }\n  if ((<span class=\"supfact\">whichHL</span> == String) || (activeUI == String)) {\n    uVar5 = Number;\n  } else {\n    uVar5 = Number;\n  }\n  sfp_putc_block_2x(Number, Number, uVar5, <span class=\"supfact\">uVar6</span>, Number);\n  if (maximized == String) {\n    uVar5 = Number;\n  } else {\n    uVar5 = Number;\n  }\n  sfp_printf_1x(Number, Number, uVar5, Number, String);\n  if ((((Number & lt; iVar1) & amp; &amp; (Number & lt; iVar2)) & amp; &amp;\n       (iVar1 & lt; Number)) &\n          amp;\n      &amp; (((iVar2 & lt; Number & amp; &amp;\n               (iVar3 = sfp_event_mouse_button(Number), iVar3 != Number)) &\n                  amp;\n              &amp; (mouse_left_down == String)))) {\n    maximized = String - maximized;\n  }\n  if (activeUI == String) {\n    render_color_window();\n  } else if (activeUI & lt; Number) {\n    if (activeUI == String) {\n      render_type_window();\n    } else if (activeUI == String) {\n      render_char_window();\n    }\n  }\n  if ((mouse_left_down == String) & amp; &amp;\n      (iVar3 = sfp_event_mouse_button(Number), iVar3 != Number)) {\n    mouse_left_down = String;\n  }\n  if ((mouse_left_down == String) & amp; &amp;\n      (iVar3 = sfp_event_mouse_button(Number), iVar3 == Number)) {\n    mouse_left_down = String;\n  }\n  if ((((Number & lt; iVar1) & amp; &amp; (Number & lt; iVar2)) & amp; &amp;\n       (iVar1 & lt; Number)) &\n          amp;\n      &amp; (iVar2 & lt; Number)) {\n    render_type_tooltip(drawing_tile - &gt; type);\n  }\n  return;\n}", "var": [{"name": "uVar6", "type": "undefined8", "pred_name": "uVar6", "ref_name": "uVar6", "ref_type": "undefined8"}, {"name": "local_9", "type": "uchar", "pred_name": "i", "ref_name": "whichHL", "ref_type": "u8"}], "body_in_train": false}, {"repo_owner": "yash101", "repo_name": "DevServer", "path": "yash101/DevServer/9a7a4645707e5725a4fd7297fd36af61c375931561cbef2faf7a2a4a961fec8e", "path_in_repo": "yash101/DevServer/linux/CMAKE/src/dlib/test/max_sum_submatrix.o", "objdump": "", "code_s": "void __thiscall dlib row_major_layout layout &lt;\ndouble, Number, Number, dlib memory_manager_stateless_kernel_1 &lt;\nchar &gt;\n, Number &gt;\nlayout(layout &lt;\n       double, Number, Number, dlib memory_manager_stateless_kernel_1 &lt;\n       char &gt;, Number &gt; *<span class=\"supfact\">this</span>) {\n  boost noncopyable_ noncopyable noncopyable(\n      (noncopyable *)<span class=\"supfact\">this</span>);\n  *(undefined8 *)<span class=\"supfact\">this</span> = Number;\n  *(undefined8 *)(<span class=\"supfact\">this</span> + Number) = Number;\n  *(undefined8 *)(<span class=\"supfact\">this</span> + Number) = Number;\n  memory_manager_stateless_kernel_1 &lt;\n  double &gt;\n  memory_manager_stateless_kernel_1((memory_manager_stateless_kernel_1 & lt;\n                                     double &gt;\n                                         *)(<span class=\"supfact\">this</span> + Number));\n  return;\n}", "code_t": "void __thiscall dlib row_major_layout layout &lt;\ndouble, _0, _0, _dlib memory_manager_stateless_kernel_1 &lt;\nchar &gt;\n, _5 &gt;\nlayout(layout &lt; double, _0, _0, _dlib memory_manager_stateless_kernel_1 &lt;\n       char &gt;, _5 &gt; *<span class=\"supfact\">this</span>) {\n  layout &lt;\n  double, _0, _0, _dlib memory_manager_stateless_kernel_1 &lt;\n  char &gt;\n  , _5 &gt;\n  *<span class=\"supfact\">this</span> - local;\n  boost noncopyable_ noncopyable noncopyable(\n      (noncopyable *)<span class=\"supfact\">this</span>);\n  <span class=\"supfact\">this</span> - &gt;\n  data = (double *)Number;\n  <span class=\"supfact\">this</span> - &gt;\n  nr_ = Number;\n  <span class=\"supfact\">this</span> - &gt;\n  nc_ = Number;\n  memory_manager_stateless_kernel_1 &lt;\n  double &gt;\n  memory_manager_stateless_kernel_1(&amp; <span class=\"supfact\">this</span> - &gt; pool);\n  return;\n}", "var": [{"name": "this", "type": "layout&lt;double,_0,_0,_dlib::memory_manager_stateless_kernel_1&lt;char&gt;,_5&gt; * *", "pred_name": "this", "ref_name": "this", "ref_type": "layout&lt;long_long_int,_0,_0,_dlib::memory_manager_stateless_kernel_1&lt;char&gt;,_5&gt; * *"}], "body_in_train": false}, {"repo_owner": "HeylelOS", "repo_name": "initramfs", "path": "HeylelOS/initramfs/c5ed60c51113ca0ff8eaa8a724fd82769843998e16ea306718c29b1730926dcb", "path_in_repo": "HeylelOS/initramfs/linux/tools/testing/selftests/bpf/test_tcp_check_syncookie_user", "objdump": "", "code_s": "size_t fwrite(void *__ptr, size_t __size, size_t __n, FILE *__s) {\n  size_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_fwrite_0041e240)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "size_t fwrite(void *__ptr, size_t __size, size_t __n, FILE *__s) {\n  size_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_fwrite_0041e240)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "size_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "size_t"}], "body_in_train": false}, {"repo_owner": "lu1221", "repo_name": "Architecture-Tomasulo", "path": "lu1221/Architecture-Tomasulo/002bec8e3c55ac2677d8af45c78859b1b5162b349dc91767fb27610bd36fc801", "path_in_repo": "lu1221/Architecture-Tomasulo//sim-profile", "objdump": "", "code_s": "int utimes(char *__file, timeval *__tvp) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_utimes_00436168)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int utimes(char *__file, timeval *__tvp) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_utimes_00436168)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "darklegion", "repo_name": "tremulous", "path": "darklegion/tremulous/324ed2579203d9f3a63d7c5064bc864223e7054ac1f258b4dd6f3f1e81e90a90", "path_in_repo": "darklegion/tremulous//build/release-linux-x86_64/base/cgame/ui_shared.o", "objdump": "000000000000bd64 <Item_Slider_Paint>:\n    bd64:\t55                   \tpush   %rbp\n    bd65:\t48 89 e5             \tmov    %rsp,%rbp\n    bd68:\t48 83 ec 40          \tsub    $0x40,%rsp\n    bd6c:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    bd70:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bd74:\t48 8b 80 00 01 00 00 \tmov    0x100(%rax),%rax\n    bd7b:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    bd7f:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bd83:\t48 89 c7             \tmov    %rax,%rdi\n    bd86:\te8 97 9c ff ff       \tcall   5a22 <Item_Slider_VScale>\n    bd8b:\t66 0f 7e c0          \tmovd   %xmm0,%eax\n    bd8f:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n    bd92:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bd96:\t8b 40 58             \tmov    0x58(%rax),%eax\n    bd99:\t83 e0 02             \tand    $0x2,%eax\n    bd9c:\t85 c0                \ttest   %eax,%eax\n    bd9e:\t74 1b                \tje     bdbb <Item_Slider_Paint+0x57>\n    bda0:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    bda4:\t48 05 10 01 00 00    \tadd    $0x110,%rax\n    bdaa:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    bdae:\t48 8b 00             \tmov    (%rax),%rax\n    bdb1:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    bdb5:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    bdb9:\teb 19                \tjmp    bdd4 <Item_Slider_Paint+0x70>\n    bdbb:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bdbf:\t48 05 84 00 00 00    \tadd    $0x84,%rax\n    bdc5:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    bdc9:\t48 8b 00             \tmov    (%rax),%rax\n    bdcc:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    bdd0:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    bdd4:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bdd8:\t48 8b 80 f8 00 00 00 \tmov    0xf8(%rax),%rax\n    bddf:\t48 85 c0             \ttest   %rax,%rax\n    bde2:\t0f 84 90 00 00 00    \tje     be78 <Item_Slider_Paint+0x114>\n    bde8:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bdec:\t48 89 c7             \tmov    %rax,%rdi\n    bdef:\te8 00 00 00 00       \tcall   bdf4 <Item_Slider_Paint+0x90>\n    bdf4:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bdf8:\tf3 0f 10 88 c8 00 00 \tmovss  0xc8(%rax),%xmm1\n    bdff:\t00 \n    be00:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    be04:\tf3 0f 10 80 d0 00 00 \tmovss  0xd0(%rax),%xmm0\n    be0b:\t00 \n    be0c:\tf3 0f 58 c8          \taddss  %xmm0,%xmm1\n    be10:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # be18 <Item_Slider_Paint+0xb4>\n    be17:\t00 \n    be18:\tf3 0f 58 c1          \taddss  %xmm1,%xmm0\n    be1c:\tf3 0f 11 45 fc       \tmovss  %xmm0,-0x4(%rbp)\n    be21:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    be25:\tf3 0f 10 80 cc 00 00 \tmovss  0xcc(%rax),%xmm0\n    be2c:\t00 \n    be2d:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    be31:\tf3 0f 10 88 d4 00 00 \tmovss  0xd4(%rax),%xmm1\n    be38:\t00 \n    be39:\tf3 0f 5c c1          \tsubss  %xmm1,%xmm0\n    be3d:\t0f 28 c8             \tmovaps %xmm0,%xmm1\n    be40:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    be44:\tf3 0f 10 80 d4 00 00 \tmovss  0xd4(%rax),%xmm0\n    be4b:\t00 \n    be4c:\tf3 0f 10 5d ec       \tmovss  -0x14(%rbp),%xmm3\n    be51:\tf3 0f 10 15 00 00 00 \tmovss  0x0(%rip),%xmm2        # be59 <Item_Slider_Paint+0xf5>\n    be58:\t00 \n    be59:\tf3 0f 59 d3          \tmulss  %xmm3,%xmm2\n    be5d:\tf3 0f 5c c2          \tsubss  %xmm2,%xmm0\n    be61:\tf3 0f 10 15 00 00 00 \tmovss  0x0(%rip),%xmm2        # be69 <Item_Slider_Paint+0x105>\n    be68:\t00 \n    be69:\tf3 0f 5e c2          \tdivss  %xmm2,%xmm0\n    be6d:\tf3 0f 58 c1          \taddss  %xmm1,%xmm0\n    be71:\tf3 0f 11 45 f8       \tmovss  %xmm0,-0x8(%rbp)\n    be76:\teb 1b                \tjmp    be93 <Item_Slider_Paint+0x12f>\n    be78:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    be7c:\tf3 0f 10 00          \tmovss  (%rax),%xmm0\n    be80:\tf3 0f 11 45 fc       \tmovss  %xmm0,-0x4(%rbp)\n    be85:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    be89:\tf3 0f 10 40 04       \tmovss  0x4(%rax),%xmm0\n    be8e:\tf3 0f 11 45 f8       \tmovss  %xmm0,-0x8(%rbp)\n    be93:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # be9a <Item_Slider_Paint+0x136>\n    be9a:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    be9e:\t48 8d 45 d0          \tlea    -0x30(%rbp),%rax\n    bea2:\t48 89 c7             \tmov    %rax,%rdi\n    bea5:\tff d2                \tcall   *%rdx\n    bea7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # beae <Item_Slider_Paint+0x14a>\n    beae:\t48 8b 48 10          \tmov    0x10(%rax),%rcx\n    beb2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # beb9 <Item_Slider_Paint+0x155>\n    beb9:\t8b 90 b0 f2 00 00    \tmov    0xf2b0(%rax),%edx\n    bebf:\tf3 0f 10 4d ec       \tmovss  -0x14(%rbp),%xmm1\n    bec4:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # becc <Item_Slider_Paint+0x168>\n    becb:\t00 \n    becc:\t0f 28 d1             \tmovaps %xmm1,%xmm2\n    becf:\tf3 0f 59 d0          \tmulss  %xmm0,%xmm2\n    bed3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # beda <Item_Slider_Paint+0x176>\n    beda:\tf3 0f 10 88 80 01 00 \tmovss  0x180(%rax),%xmm1\n    bee1:\t00 \n    bee2:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # beea <Item_Slider_Paint+0x186>\n    bee9:\t00 \n    beea:\tf3 0f 59 c8          \tmulss  %xmm0,%xmm1\n    beee:\tf3 0f 10 45 f8       \tmovss  -0x8(%rbp),%xmm0\n    bef3:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    bef6:\t89 d7                \tmov    %edx,%edi\n    bef8:\t0f 28 da             \tmovaps %xmm2,%xmm3\n    befb:\t0f 28 d1             \tmovaps %xmm1,%xmm2\n    befe:\t0f 28 c8             \tmovaps %xmm0,%xmm1\n    bf01:\t66 0f 6e c0          \tmovd   %eax,%xmm0\n    bf05:\tff d1                \tcall   *%rcx\n    bf07:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bf0b:\tf3 0f 10 80 cc 00 00 \tmovss  0xcc(%rax),%xmm0\n    bf12:\t00 \n    bf13:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bf17:\tf3 0f 10 88 d4 00 00 \tmovss  0xd4(%rax),%xmm1\n    bf1e:\t00 \n    bf1f:\tf3 0f 5c c1          \tsubss  %xmm1,%xmm0\n    bf23:\t0f 28 c8             \tmovaps %xmm0,%xmm1\n    bf26:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bf2a:\tf3 0f 10 80 d4 00 00 \tmovss  0xd4(%rax),%xmm0\n    bf31:\t00 \n    bf32:\tf3 0f 10 5d ec       \tmovss  -0x14(%rbp),%xmm3\n    bf37:\tf3 0f 10 15 00 00 00 \tmovss  0x0(%rip),%xmm2        # bf3f <Item_Slider_Paint+0x1db>\n    bf3e:\t00 \n    bf3f:\tf3 0f 59 d3          \tmulss  %xmm3,%xmm2\n    bf43:\tf3 0f 5c c2          \tsubss  %xmm2,%xmm0\n    bf47:\tf3 0f 10 15 00 00 00 \tmovss  0x0(%rip),%xmm2        # bf4f <Item_Slider_Paint+0x1eb>\n    bf4e:\t00 \n    bf4f:\tf3 0f 5e c2          \tdivss  %xmm2,%xmm0\n    bf53:\tf3 0f 58 c1          \taddss  %xmm1,%xmm0\n    bf57:\tf3 0f 11 45 f8       \tmovss  %xmm0,-0x8(%rbp)\n    bf5c:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bf60:\t48 89 c7             \tmov    %rax,%rdi\n    bf63:\te8 00 00 00 00       \tcall   bf68 <Item_Slider_Paint+0x204>\n    bf68:\t66 0f 7e c0          \tmovd   %xmm0,%eax\n    bf6c:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    bf6f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # bf76 <Item_Slider_Paint+0x212>\n    bf76:\t48 8b 50 10          \tmov    0x10(%rax),%rdx\n    bf7a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # bf81 <Item_Slider_Paint+0x21d>\n    bf81:\t8b 80 b4 f2 00 00    \tmov    0xf2b4(%rax),%eax\n    bf87:\tf3 0f 10 4d ec       \tmovss  -0x14(%rbp),%xmm1\n    bf8c:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # bf94 <Item_Slider_Paint+0x230>\n    bf93:\t00 \n    bf94:\t0f 28 d9             \tmovaps %xmm1,%xmm3\n    bf97:\tf3 0f 59 d8          \tmulss  %xmm0,%xmm3\n    bf9b:\t48 8b 0d 00 00 00 00 \tmov    0x0(%rip),%rcx        # bfa2 <Item_Slider_Paint+0x23e>\n    bfa2:\tf3 0f 10 89 80 01 00 \tmovss  0x180(%rcx),%xmm1\n    bfa9:\t00 \n    bfaa:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # bfb2 <Item_Slider_Paint+0x24e>\n    bfb1:\t00 \n    bfb2:\t0f 28 d1             \tmovaps %xmm1,%xmm2\n    bfb5:\tf3 0f 59 d0          \tmulss  %xmm0,%xmm2\n    bfb9:\t48 8b 0d 00 00 00 00 \tmov    0x0(%rip),%rcx        # bfc0 <Item_Slider_Paint+0x25c>\n    bfc0:\tf3 0f 10 89 80 01 00 \tmovss  0x180(%rcx),%xmm1\n    bfc7:\t00 \n    bfc8:\tf3 0f 10 05 00 00 00 \tmovss  0x0(%rip),%xmm0        # bfd0 <Item_Slider_Paint+0x26c>\n    bfcf:\t00 \n    bfd0:\tf3 0f 59 c1          \tmulss  %xmm1,%xmm0\n    bfd4:\tf3 0f 10 0d 00 00 00 \tmovss  0x0(%rip),%xmm1        # bfdc <Item_Slider_Paint+0x278>\n    bfdb:\t00 \n    bfdc:\tf3 0f 5e c1          \tdivss  %xmm1,%xmm0\n    bfe0:\t0f 28 c8             \tmovaps %xmm0,%xmm1\n    bfe3:\tf3 0f 10 45 fc       \tmovss  -0x4(%rbp),%xmm0\n    bfe8:\tf3 0f 5c c1          \tsubss  %xmm1,%xmm0\n    bfec:\tf3 0f 10 4d f8       \tmovss  -0x8(%rbp),%xmm1\n    bff1:\t89 c7                \tmov    %eax,%edi\n    bff3:\tff d2                \tcall   *%rdx\n    bff5:\t90                   \tnop\n    bff6:\tc9                   \tleave  \n    bff7:\tc3                   \tret    ", "code_s": "void Item_Slider_Paint(float *<span class=\"supfact\">param_1</span>) {\n  undefined8 <span class=\"supfact\">local_38</span>;\n  undefined8 <span class=\"supfact\">local_30</span>;\n  float <span class=\"supfact\">local_1c</span>;\n  long <span class=\"supfact\">local_18</span>;\n  float <span class=\"supfact\">local_10</span>;\n  float <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_18</span> = *(long *)(<span class=\"supfact\">param_1</span> + Number);\n  <span class=\"supfact\">local_1c</span> = (float)FUN_00105a22(<span class=\"supfact\">param_1</span>);\n  if (((uint)<span class=\"supfact\">param_1</span>[Number] & amp; Number) == Number) {\n    <span class=\"supfact\">local_30</span> =\n        *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n    <span class=\"supfact\">local_38</span> =\n        *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n  } else {\n    <span class=\"supfact\">local_30</span> =\n        *(undefined8 *)(<span class=\"supfact\">local_18</span> + Number);\n    <span class=\"supfact\">local_38</span> =\n        *(undefined8 *)(<span class=\"supfact\">local_18</span> + Number);\n  }\n  if (*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) {\n    <span class=\"supfact\">local_c</span> = *<span class=\"supfact\">param_1</span>;\n    <span class=\"supfact\">local_10</span> = <span class=\"supfact\">param_1</span>[Number];\n  } else {\n    Item_Text_Paint(<span class=\"supfact\">param_1</span>);\n    <span class=\"supfact\">local_c</span> = DAT_001de098 + <span class=\"supfact\">param_1</span>[Number] +\n                              <span class=\"supfact\">param_1</span>[Number];\n    <span class=\"supfact\">local_10</span> =\n        (<span class=\"supfact\">param_1</span>[Number] -\n         DAT_001de094 * <span class=\"supfact\">local_1c</span>) /\n            DAT_001de08c +\n        (<span class=\"supfact\">param_1</span>[Number] - <span class=\"supfact\">param_1</span>[Number]);\n  }\n  (**(code **)(DC + Number))(&amp; <span class=\"supfact\">local_38</span>);\n  (**(code **)(DC + Number))(<span class=\"supfact\">local_c</span>, <span class=\"supfact\">local_10</span>,\n                             *(float *)(DC + Number) * DAT_001de09c,\n                             <span class=\"supfact\">local_1c</span> * DAT_001de094,\n                             *(undefined4 *)(DC + Number));\n  <span class=\"supfact\">local_10</span> =\n      (<span class=\"supfact\">param_1</span>[Number] -\n       DAT_001de0a0 * <span class=\"supfact\">local_1c</span>) /\n          DAT_001de08c +\n      (<span class=\"supfact\">param_1</span>[Number] - <span class=\"supfact\">param_1</span>[Number]);\n  <span class=\"supfact\">local_c</span> =\n      (float)Item_Slider_ThumbPosition(<span class=\"supfact\">param_1</span>);\n  (**(code **)(DC + Number))(\n      <span class=\"supfact\">local_c</span> -\n          (DAT_001de0a4 * *(float *)(DC + Number)) / DAT_001de08c,\n      <span class=\"supfact\">local_10</span>, *(float *)(DC + Number) * DAT_001de0a4,\n      <span class=\"supfact\">local_1c</span> * DAT_001de0a0, *(undefined4 *)(DC + Number));\n  return;\n}", "code_t": "void Item_Slider_Paint(itemDef_t *<span class=\"supfact\">item</span>) {\n  float fVar1;\n  float fVar2;\n  void *pvVar3;\n  float fVar4;\n  float fVar5;\n  float fVar6;\n  itemDef_t *<span class=\"supfact\">item</span> - local;\n  vec4_t <span class=\"supfact\">newColor</span>;\n  float <span class=\"supfact\">vScale</span>;\n  menuDef_t *<span class=\"supfact\">parent</span>;\n  float <span class=\"supfact\">y</span>;\n  float <span class=\"supfact\">x</span>;\n  pvVar3 = <span class=\"supfact\">item</span> - &gt;\n  <span class=\"supfact\">parent</span>;\n  fVar4 = Item_Slider_VScale(<span class=\"supfact\">item</span>);\n  if (((<span class=\"supfact\">item</span> - &gt; window).flags & amp; Number) == Number) {\n    <span class=\"supfact\">newColor</span>._8_8_ = *(\n        undefined8 *)((<span class=\"supfact\">item</span> - &gt; window).foreColor + Number);\n    <span class=\"supfact\">newColor</span>._0_8_ =\n        *(undefined8 *)(<span class=\"supfact\">item</span> - &gt; window).foreColor;\n  } else {\n    <span class=\"supfact\">newColor</span>._8_8_ = *(undefined8 *)((long)pvVar3 + Number);\n    <span class=\"supfact\">newColor</span>._0_8_ = *(undefined8 *)((long)pvVar3 + Number);\n  }\n  if (<span class=\"supfact\">item</span> - &gt; text == (char *)Number) {\n    <span class=\"supfact\">x</span> =\n        (<span class=\"supfact\">item</span> - &gt; window).rect.<span class=\"supfact\">x</span>;\n    <span class=\"supfact\">y</span> =\n        (<span class=\"supfact\">item</span> - &gt; window).rect.<span class=\"supfact\">y</span>;\n  } else {\n    Item_Text_Paint(<span class=\"supfact\">item</span>);\n    <span class=\"supfact\">x</span> =\n        DAT_001de098 +\n        (<span class=\"supfact\">item</span> - &gt; textRect).<span class=\"supfact\">x</span> +\n        (<span class=\"supfact\">item</span> - &gt; textRect).w;\n    <span class=\"supfact\">y</span> =\n        ((<span class=\"supfact\">item</span> - &gt; textRect).h - DAT_001de094 * fVar4) /\n            DAT_001de08c +\n        ((<span class=\"supfact\">item</span> - &gt; textRect).<span class=\"supfact\">y</span> -\n         (<span class=\"supfact\">item</span> - &gt; textRect).h);\n  }\n  (*DC - &gt; setColor)(<span class=\"supfact\">newColor</span>);\n  (*DC - &gt; drawHandlePic)(<span class=\"supfact\">x</span>, <span class=\"supfact\">y</span>, DC - &gt;\n                             aspectScale * DAT_001de09c, fVar4 * DAT_001de094,\n                             (DC - &gt; Assets).sliderBar);\n  fVar1 = (<span class=\"supfact\">item</span> - &gt; textRect).<span class=\"supfact\">y</span>;\n  fVar2 = (<span class=\"supfact\">item</span> - &gt; textRect).h;\n  fVar5 = ((<span class=\"supfact\">item</span> - &gt; textRect).h - DAT_001de0a0 * fVar4) /\n          DAT_001de08c;\n  fVar6 = Item_Slider_ThumbPosition(<span class=\"supfact\">item</span>);\n  (*DC - &gt;\n   drawHandlePic)(fVar6 - (DAT_001de0a4 * DC - &gt; aspectScale) / DAT_001de08c,\n                  fVar5 + (fVar1 - fVar2), DC - &gt;\n                  aspectScale * DAT_001de0a4, fVar4 * DAT_001de0a0,\n                  (DC - &gt; Assets).sliderThumb);\n  return;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "item", "ref_type": "itemDef_t * *"}, {"name": "local_38", "type": "__unk__", "pred_name": "__unk__", "ref_name": "newColor", "ref_type": "vec4_t"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_1c", "type": "float", "pred_name": "__unk__", "ref_name": "vScale", "ref_type": "float"}, {"name": "local_18", "type": "float * *", "pred_name": "__unk__", "ref_name": "parent", "ref_type": "menuDef_t * *"}, {"name": "local_10", "type": "float", "pred_name": "__unk__", "ref_name": "y", "ref_type": "float"}, {"name": "local_c", "type": "float", "pred_name": "__unk__", "ref_name": "x", "ref_type": "float"}], "body_in_train": false}, {"repo_owner": "uyjulian", "repo_name": "krkr2_extra_plugin", "path": "uyjulian/krkr2_extra_plugin/05c087c423314ea593f988e3a849acc4c1a7c7dc14ba076d75aba38f09a16447", "path_in_repo": "uyjulian/krkr2_extra_plugin/drawdeviceIrrlicht/irrlicht/source/Irrlicht/jpeglib/jmemnobs.o", "objdump": "0000000000000000 <jpeg_get_small>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 83 ec 10          \tsub    $0x10,%rsp\n   8:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n   c:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n  10:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  14:\t48 89 c7             \tmov    %rax,%rdi\n  17:\te8 00 00 00 00       \tcall   1c <jpeg_get_small+0x1c>\n  1c:\tc9                   \tleave  \n  1d:\tc3                   \tret    ", "code_s": "void jpeg_get_small(undefined8 param_1, size_t <span class=\"supfact\">param_2</span>) {\n  malloc(<span class=\"supfact\">param_2</span>);\n  return;\n}", "code_t": "void *jpeg_get_small(j_common_ptr cinfo, size_t <span class=\"supfact\">sizeofobject</span>) {\n  void *pvVar1;\n  size_t <span class=\"supfact\">sizeofobject</span> - local;\n  j_common_ptr cinfo - local;\n  pvVar1 = malloc(<span class=\"supfact\">sizeofobject</span>);\n  return pvVar1;\n}", "var": [{"name": "param_2", "type": "size_t", "pred_name": "sizeofobject", "ref_name": "sizeofobject", "ref_type": "size_t"}], "body_in_train": true}, {"repo_owner": "tiwai", "repo_name": "vkeybd", "path": "tiwai/vkeybd/eb173d6241785510e6bde52756be1fe452c21884bd15ca52fc3289c8eb078c4b", "path_in_repo": "tiwai/vkeybd//sftovkb", "objdump": "", "code_s": "int fseek(FILE *__stream, long __off, int __whence) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fseek_00405068)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int fseek(FILE *__stream, long __off, int __whence) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fseek_00405068)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "aerospike", "repo_name": "aerospike-common", "path": "aerospike/aerospike-common/63a1af67d49a03d641695fc81552de9124cb0e19f425e66f76dc111c17c28243", "path_in_repo": "aerospike/aerospike-common//target/Linux-x86_64/lib/libaerospike-common.so", "objdump": "00000000000225f1 <_crypt_output_magic>:\n   225f1:\t55                   \tpush   %rbp\n   225f2:\t48 89 e5             \tmov    %rsp,%rbp\n   225f5:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n   225f9:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n   225fd:\t89 55 ec             \tmov    %edx,-0x14(%rbp)\n   22600:\t83 7d ec 02          \tcmpl   $0x2,-0x14(%rbp)\n   22604:\t7f 07                \tjg     2260d <_crypt_output_magic+0x1c>\n   22606:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n   2260b:\teb 47                \tjmp    22654 <_crypt_output_magic+0x63>\n   2260d:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   22611:\tc6 00 2a             \tmovb   $0x2a,(%rax)\n   22614:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   22618:\t48 83 c0 01          \tadd    $0x1,%rax\n   2261c:\tc6 00 30             \tmovb   $0x30,(%rax)\n   2261f:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   22623:\t48 83 c0 02          \tadd    $0x2,%rax\n   22627:\tc6 00 00             \tmovb   $0x0,(%rax)\n   2262a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   2262e:\t0f b6 00             \tmovzbl (%rax),%eax\n   22631:\t3c 2a                \tcmp    $0x2a,%al\n   22633:\t75 1a                \tjne    2264f <_crypt_output_magic+0x5e>\n   22635:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   22639:\t48 83 c0 01          \tadd    $0x1,%rax\n   2263d:\t0f b6 00             \tmovzbl (%rax),%eax\n   22640:\t3c 30                \tcmp    $0x30,%al\n   22642:\t75 0b                \tjne    2264f <_crypt_output_magic+0x5e>\n   22644:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n   22648:\t48 83 c0 01          \tadd    $0x1,%rax\n   2264c:\tc6 00 31             \tmovb   $0x31,(%rax)\n   2264f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   22654:\t5d                   \tpop    %rbp\n   22655:\tc3                   \tret    ", "code_s": "undefined8 _crypt_output_magic(char *<span class=\"supfact\">param_1</span>,\n                               undefined *<span class=\"supfact\">param_2</span>,\n                               int <span class=\"supfact\">param_3</span>) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  if (<span class=\"supfact\">param_3</span> & lt; Number) {\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else {\n    *<span class=\"supfact\">param_2</span> = Number;\n    <span class=\"supfact\">param_2</span>[Number] = Number;\n    <span class=\"supfact\">param_2</span>[Number] = Number;\n    if ((*<span class=\"supfact\">param_1</span> == String) & amp; &amp;\n        (<span class=\"supfact\">param_1</span>[Number] == String)) {\n      <span class=\"supfact\">param_2</span>[Number] = Number;\n    }\n    <span class=\"supfact\">uVar1</span> = Number;\n  }\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "int _crypt_output_magic(char *<span class=\"supfact\">setting</span>,\n                        char *<span class=\"supfact\">output</span>,\n                        int <span class=\"supfact\">size</span>) {\n  int iVar1;\n  iVar1 = (*(code *)PTR__crypt_output_magic_0013e238)();\n  return iVar1;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "setting", "ref_type": "char * *"}, {"name": "param_2", "type": "uchar * *", "pred_name": "buf", "ref_name": "output", "ref_type": "char * *"}, {"name": "param_3", "type": "uint", "pred_name": "len", "ref_name": "size", "ref_type": "int"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "Kiloutre", "repo_name": "42", "path": "Kiloutre/42/12f69d03b3614100156626c47b7592397f2691571d12e3f3ce4c7b5437cfe318", "path_in_repo": "Kiloutre/42/fdf/Libft/unicode.o", "objdump": "0000000000000000 <print_three_bytes>:\n   0:\t55                   \tpush   %rbp\n   1:\t48 89 e5             \tmov    %rsp,%rbp\n   4:\t48 83 ec 20          \tsub    $0x20,%rsp\n   8:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n   b:\t89 75 e8             \tmov    %esi,-0x18(%rbp)\n   e:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  11:\t83 e0 3f             \tand    $0x3f,%eax\n  14:\t0d 80 80 e0 00       \tor     $0xe08080,%eax\n  19:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  1c:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  1f:\tc1 e0 02             \tshl    $0x2,%eax\n  22:\t25 00 3f 00 00       \tand    $0x3f00,%eax\n  27:\t09 45 fc             \tor     %eax,-0x4(%rbp)\n  2a:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n  2d:\tc1 e0 04             \tshl    $0x4,%eax\n  30:\t25 00 00 0f 00       \tand    $0xf0000,%eax\n  35:\t09 45 fc             \tor     %eax,-0x4(%rbp)\n  38:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  3b:\tc1 e8 10             \tshr    $0x10,%eax\n  3e:\t0f b6 c0             \tmovzbl %al,%eax\n  41:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n  44:\t48 8d 4d ec          \tlea    -0x14(%rbp),%rcx\n  48:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n  4b:\tba 01 00 00 00       \tmov    $0x1,%edx\n  50:\t48 89 ce             \tmov    %rcx,%rsi\n  53:\t89 c7                \tmov    %eax,%edi\n  55:\te8 00 00 00 00       \tcall   5a <print_three_bytes+0x5a>\n  5a:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  5d:\tc1 e8 08             \tshr    $0x8,%eax\n  60:\t0f b6 c0             \tmovzbl %al,%eax\n  63:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n  66:\t48 8d 4d ec          \tlea    -0x14(%rbp),%rcx\n  6a:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n  6d:\tba 01 00 00 00       \tmov    $0x1,%edx\n  72:\t48 89 ce             \tmov    %rcx,%rsi\n  75:\t89 c7                \tmov    %eax,%edi\n  77:\te8 00 00 00 00       \tcall   7c <print_three_bytes+0x7c>\n  7c:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  7f:\t0f b6 c0             \tmovzbl %al,%eax\n  82:\t89 45 ec             \tmov    %eax,-0x14(%rbp)\n  85:\t48 8d 4d ec          \tlea    -0x14(%rbp),%rcx\n  89:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n  8c:\tba 01 00 00 00       \tmov    $0x1,%edx\n  91:\t48 89 ce             \tmov    %rcx,%rsi\n  94:\t89 c7                \tmov    %eax,%edi\n  96:\te8 00 00 00 00       \tcall   9b <print_three_bytes+0x9b>\n  9b:\t90                   \tnop\n  9c:\tc9                   \tleave  \n  9d:\tc3                   \tret    ", "code_s": "void print_three_bytes(uint <span class=\"supfact\">param_1</span>,\n                       int <span class=\"supfact\">param_2</span>) {\n  uint <span class=\"supfact\">local_1c</span>[Number];\n  uint <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_c</span> = <span class=\"supfact\">param_1</span> & amp;\n  Number | Number | (<span class=\"supfact\">param_1</span> & amp; Number) & lt;\n  &lt;\n  Number | (<span class=\"supfact\">param_1</span> & amp; Number) & lt;\n  &lt;\n  Number;\n  <span class=\"supfact\">local_1c</span>[Number] = <span class=\"supfact\">local_c</span> & gt;\n  &gt;\n  Number;\n  write(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">local_1c</span>, Number);\n  <span class=\"supfact\">local_1c</span>[Number] = <span class=\"supfact\">local_c</span> & gt;\n  &gt;\n  Number &amp;\n  Number;\n  write(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">local_1c</span>, Number);\n  <span class=\"supfact\">local_1c</span>[Number] = <span class=\"supfact\">local_c</span> & amp;\n  Number;\n  write(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">local_1c</span>, Number);\n  return;\n}", "code_t": "void print_three_bytes(uint <span class=\"supfact\">c</span>, int <span class=\"supfact\">fd</span>) {\n  int <span class=\"supfact\">fd</span> - local;\n  uint <span class=\"supfact\">c</span> - local;\n  uint <span class=\"supfact\">tmp</span>;\n  <span class=\"supfact\">tmp</span> = <span class=\"supfact\">c</span> & amp;\n  Number | Number | (<span class=\"supfact\">c</span> & amp; Number) & lt;\n  &lt;\n  Number | (<span class=\"supfact\">c</span> & amp; Number) & lt;\n  &lt;\n  Number;\n  <span class=\"supfact\">c</span> - local = <span class=\"supfact\">tmp</span> & gt;\n  &gt;\n  Number;\n  write(<span class=\"supfact\">fd</span>, &amp; <span class=\"supfact\">c</span> - local, Number);\n  <span class=\"supfact\">c</span> - local = <span class=\"supfact\">tmp</span> & gt;\n  &gt;\n  Number &amp;\n  Number;\n  write(<span class=\"supfact\">fd</span>, &amp; <span class=\"supfact\">c</span> - local, Number);\n  <span class=\"supfact\">c</span> - local = <span class=\"supfact\">tmp</span> & amp;\n  Number;\n  write(<span class=\"supfact\">fd</span>, &amp; <span class=\"supfact\">c</span> - local, Number);\n  return;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "n", "ref_name": "c", "ref_type": "uint"}, {"name": "param_2", "type": "int", "pred_name": "c", "ref_name": "fd", "ref_type": "int"}, {"name": "local_1c", "type": "int", "pred_name": "n-local", "ref_name": "c-local", "ref_type": "uint"}, {"name": "local_c", "type": "int", "pred_name": "c-local", "ref_name": "tmp", "ref_type": "uint"}], "body_in_train": false}, {"repo_owner": "lineay", "repo_name": "RetroArch", "path": "lineay/RetroArch/867872c1c945fb669d45425e63261cc3b1f299ba74d63a917dd4f377edbcf66e", "path_in_repo": "lineay/RetroArch//obj-unix/gfx/drivers_renderchain/gl2_renderchain.o", "objdump": "0000000000002560 <gl_renderchain_bind_prev_texture>:\n    2560:\t55                   \tpush   %rbp\n    2561:\t48 89 e5             \tmov    %rsp,%rbp\n    2564:\t48 83 ec 20          \tsub    $0x20,%rsp\n    2568:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    256c:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    2570:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    2574:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    2578:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    257c:\t8b 80 a4 01 00 00    \tmov    0x1a4(%rax),%eax\n    2582:\t83 e8 01             \tsub    $0x1,%eax\n    2585:\t89 c2                \tmov    %eax,%edx\n    2587:\t48 89 d0             \tmov    %rdx,%rax\n    258a:\t48 01 c0             \tadd    %rax,%rax\n    258d:\t48 01 d0             \tadd    %rdx,%rax\n    2590:\t48 c1 e0 02          \tshl    $0x2,%rax\n    2594:\t48 01 d0             \tadd    %rdx,%rax\n    2597:\t48 c1 e0 02          \tshl    $0x2,%rax\n    259b:\t48 89 c2             \tmov    %rax,%rdx\n    259e:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    25a2:\t48 8d 88 08 05 00 00 \tlea    0x508(%rax),%rcx\n    25a9:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    25ad:\t48 05 08 05 00 00    \tadd    $0x508,%rax\n    25b3:\t48 83 c0 34          \tadd    $0x34,%rax\n    25b7:\t48 89 ce             \tmov    %rcx,%rsi\n    25ba:\t48 89 c7             \tmov    %rax,%rdi\n    25bd:\te8 00 00 00 00       \tcall   25c2 <gl_renderchain_bind_prev_texture+0x62>\n    25c2:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    25c6:\t48 8d 88 08 05 00 00 \tlea    0x508(%rax),%rcx\n    25cd:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    25d1:\tba 34 00 00 00       \tmov    $0x34,%edx\n    25d6:\t48 89 c6             \tmov    %rax,%rsi\n    25d9:\t48 89 cf             \tmov    %rcx,%rdi\n    25dc:\te8 00 00 00 00       \tcall   25e1 <gl_renderchain_bind_prev_texture+0x81>\n    25e1:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    25e5:\t0f b6 40 13          \tmovzbl 0x13(%rax),%eax\n    25e9:\t84 c0                \ttest   %al,%al\n    25eb:\t0f 84 86 00 00 00    \tje     2677 <gl_renderchain_bind_prev_texture+0x117>\n    25f1:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    25f5:\t8b 40 40             \tmov    0x40(%rax),%eax\n    25f8:\t89 45 f4             \tmov    %eax,-0xc(%rbp)\n    25fb:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    25ff:\t8b 40 44             \tmov    0x44(%rax),%eax\n    2602:\t89 45 f0             \tmov    %eax,-0x10(%rbp)\n    2605:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2609:\t8b 90 a8 01 00 00    \tmov    0x1a8(%rax),%edx\n    260f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2613:\t89 d2                \tmov    %edx,%edx\n    2615:\t48 83 c2 24          \tadd    $0x24,%rdx\n    2619:\t8b 14 90             \tmov    (%rax,%rdx,4),%edx\n    261c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2620:\t89 50 40             \tmov    %edx,0x40(%rax)\n    2623:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2627:\t8b 90 a8 01 00 00    \tmov    0x1a8(%rax),%edx\n    262d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2631:\t89 d2                \tmov    %edx,%edx\n    2633:\t48 83 c2 3c          \tadd    $0x3c,%rdx\n    2637:\t8b 54 90 08          \tmov    0x8(%rax,%rdx,4),%edx\n    263b:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    263f:\t89 50 44             \tmov    %edx,0x44(%rax)\n    2642:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2646:\t8b 90 a8 01 00 00    \tmov    0x1a8(%rax),%edx\n    264c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2650:\t89 d2                \tmov    %edx,%edx\n    2652:\t48 8d 4a 24          \tlea    0x24(%rdx),%rcx\n    2656:\t8b 55 f4             \tmov    -0xc(%rbp),%edx\n    2659:\t89 14 88             \tmov    %edx,(%rax,%rcx,4)\n    265c:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2660:\t8b 90 a8 01 00 00    \tmov    0x1a8(%rax),%edx\n    2666:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    266a:\t89 d2                \tmov    %edx,%edx\n    266c:\t48 8d 4a 3c          \tlea    0x3c(%rdx),%rcx\n    2670:\t8b 55 f0             \tmov    -0x10(%rbp),%edx\n    2673:\t89 54 88 08          \tmov    %edx,0x8(%rax,%rcx,4)\n    2677:\t90                   \tnop\n    2678:\tc9                   \tleave  \n    2679:\tc3                   \tret    ", "code_s": "void gl_renderchain_bind_prev_texture(long <span class=\"supfact\">param_1</span>,\n                                      void *<span class=\"supfact\">param_2</span>) {\n  undefined4 uVar1;\n  undefined4 uVar2;\n  memmove((void *)(<span class=\"supfact\">param_1</span> + Number),\n          (void *)(<span class=\"supfact\">param_1</span> + Number),\n          (ulong)(*(int *)(<span class=\"supfact\">param_1</span> + Number) - Number) *\n              Number);\n  memcpy((void *)(<span class=\"supfact\">param_1</span> + Number), <span class=\"supfact\">param_2</span>,\n         Number);\n  if (*(char *)(<span class=\"supfact\">param_1</span> + Number) != String) {\n    uVar1 = *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n    uVar2 = *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number);\n    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) =\n        *(undefined4 *)(<span class=\"supfact\">param_1</span> +\n                        ((ulong) * (uint *)(<span class=\"supfact\">param_1</span> + Number) +\n                         Number) *\n                            Number);\n    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) =\n        *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number +\n                        ((ulong) * (uint *)(<span class=\"supfact\">param_1</span> + Number) +\n                         Number) *\n                            Number);\n    *(undefined4 *)(<span class=\"supfact\">param_1</span> +\n                    ((ulong) * (uint *)(<span class=\"supfact\">param_1</span> + Number) +\n                     Number) *\n                        Number) = uVar1;\n    *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number +\n                    ((ulong) * (uint *)(<span class=\"supfact\">param_1</span> + Number) +\n                     Number) *\n                        Number) = uVar2;\n  }\n  return;\n}", "code_t": "void gl_renderchain_bind_prev_texture(\n    void *<span class=\"supfact\">data</span>, video_tex_info *<span class=\"supfact\">tex_info</span>) {\n  undefined4 uVar1;\n  undefined4 uVar2;\n  video_tex_info *<span class=\"supfact\">tex_info</span> - local;\n  void *<span class=\"supfact\">data</span> - local;\n  GLuint tmp_tex;\n  GLuint tmp_fbo;\n  gl_t *gl;\n  memmove((void *)((long)<span class=\"supfact\">data</span> + Number),\n          (void *)((long)<span class=\"supfact\">data</span> + Number),\n          (ulong)(*(int *)((long)<span class=\"supfact\">data</span> + Number) - Number) *\n              Number);\n  memcpy((void *)((long)<span class=\"supfact\">data</span> + Number),\n         <span class=\"supfact\">tex_info</span>, Number);\n  if (*(char *)((long)<span class=\"supfact\">data</span> + Number) != String) {\n    uVar1 = *(undefined4 *)((long)<span class=\"supfact\">data</span> + Number);\n    uVar2 = *(undefined4 *)((long)<span class=\"supfact\">data</span> + Number);\n    *(undefined4 *)((long)<span class=\"supfact\">data</span> + Number) = *(\n        undefined4 *)((long)<span class=\"supfact\">data</span> +\n                      ((ulong) * (uint *)((long)<span class=\"supfact\">data</span> + Number) +\n                       Number) *\n                          Number);\n    *(undefined4 *)((long)<span class=\"supfact\">data</span> + Number) = *(\n        undefined4 *)((long)<span class=\"supfact\">data</span> +\n                      ((ulong) * (uint *)((long)<span class=\"supfact\">data</span> + Number) +\n                       Number) *\n                          Number +\n                      Number);\n    *(undefined4 *)((long)<span class=\"supfact\">data</span> +\n                    ((ulong) * (uint *)((long)<span class=\"supfact\">data</span> + Number) +\n                     Number) *\n                        Number) = uVar1;\n    *(undefined4 *)((long)<span class=\"supfact\">data</span> +\n                    ((ulong) * (uint *)((long)<span class=\"supfact\">data</span> + Number) +\n                     Number) *\n                        Number +\n                    Number) = uVar2;\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "ctx", "ref_name": "data", "ref_type": "void * *"}, {"name": "param_2", "type": "uint8_t * *", "pred_name": "__unk__", "ref_name": "tex_info", "ref_type": "video_tex_info * *"}], "body_in_train": false}, {"repo_owner": "OS2World", "repo_name": "LIB-MM-libvpx", "path": "OS2World/LIB-MM-libvpx/a7088cfebd81848840fd3c4b6142aa0c7e187a711be54a9f44ccdb6471c56511", "path_in_repo": "OS2World/LIB-MM-libvpx/src/third_party/googletest/src/make/gtest-all.o", "objdump": "", "code_s": "void std allocator &lt;\ntesting internal TraceInfo &gt;\nallocator(allocator *<span class=\"supfact\">param_1</span>) {\n  __gnu_cxx new_allocator &lt;\n  testing internal TraceInfo &gt;\n  new_allocator((new_allocator *)<span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "void __thiscall std allocator &lt;\ntesting internal ParameterizedTestCaseInfoBase *&gt;\nallocator(allocator &lt; testing internal ParameterizedTestCaseInfoBase * &gt;\n          *<span class=\"supfact\">this</span>) {\n  allocator &lt;\n  testing internal ParameterizedTestCaseInfoBase *&gt;\n  *<span class=\"supfact\">this</span> - local;\n  __gnu_cxx new_allocator &lt;\n  testing internal ParameterizedTestCaseInfoBase *&gt;\n  new_allocator((new_allocator & lt;\n                 testing internal ParameterizedTestCaseInfoBase * &gt;\n                     *)<span class=\"supfact\">this</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "this", "ref_name": "this", "ref_type": "allocator&lt;testing::internal::TraceInfo&gt; * *"}], "body_in_train": true}, {"repo_owner": "ENCODE-DCC", "repo_name": "kentUtils", "path": "ENCODE-DCC/kentUtils/237953a2c24d861fad143785e96a39068fee532da7cde52a7f8054c16a25ec1e", "path_in_repo": "ENCODE-DCC/kentUtils//bin/toLower", "objdump": "", "code_s": "char *ERR_reason_error_string(ulong e) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> =\n      (char *)(*(code *)PTR_ERR_reason_error_string_00445020)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *ERR_reason_error_string(ulong e) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> =\n      (char *)(*(code *)PTR_ERR_reason_error_string_00445020)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": true}, {"code_s": "void vfio_quirk_reset(long <span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">local_1c</span>;\n  undefined8 *<span class=\"supfact\">local_18</span>;\n  for (<span class=\"supfact\">local_1c</span> = Number; <span class=\"supfact\">local_1c</span> & lt; Number;\n       <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number) {\n    for (<span class=\"supfact\">local_18</span> =\n             *(undefined8 **)(<span class=\"supfact\">param_1</span> +\n                              (long)<span class=\"supfact\">local_1c</span> * Number + Number);\n         <span class=\"supfact\">local_18</span> != (undefined8 *)Number;\n         <span class=\"supfact\">local_18</span> = (undefined8 *)*<span class=\"supfact\">local_18</span>) {\n      if (<span class=\"supfact\">local_18</span>[Number] != Number) {\n        (*(code *)<span class=\"supfact\">local_18</span>[Number])(<span class=\"supfact\">param_1</span>,\n                                                    <span class=\"supfact\">local_18</span>);\n      }\n    }\n  }\n  return;\n}", "code_t": "void vfio_quirk_reset(VFIOPCIDevice *<span class=\"supfact\">vdev</span>) {\n  VFIOPCIDevice *<span class=\"supfact\">vdev</span> - local;\n  int <span class=\"supfact\">i</span>;\n  VFIOQuirk *<span class=\"supfact\">quirk</span>;\n  VFIOBAR *bar;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt; Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    for (<span class=\"supfact\">quirk</span> = <span class=\"supfact\">vdev</span> - &gt;\n         bars[<span class=\"supfact\">i</span>].quirks.lh_first;\n         <span class=\"supfact\">quirk</span> != (VFIOQuirk *)Number;\n         <span class=\"supfact\">quirk</span> = (<span class=\"supfact\">quirk</span> - &gt; next).le_next) {\n      if (<span class=\"supfact\">quirk</span> - &gt;\n          reset != (_func_void_VFIOPCIDevice_ptr_VFIOQuirk_ptr *)Number) {\n        (*<span class=\"supfact\">quirk</span> - &gt;\n         reset)(<span class=\"supfact\">vdev</span>, <span class=\"supfact\">quirk</span>);\n      }\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "QDict * *", "pred_name": "qdict", "ref_name": "vdev", "ref_type": "VFIOPCIDevice * *"}, {"name": "local_1c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}, {"name": "local_18", "type": "QDictEntry * *", "pred_name": "entry", "ref_name": "quirk", "ref_type": "VFIOQuirk * *"}], "body_in_train": true}, {"repo_owner": "jcespinoza", "repo_name": "compilers_class", "path": "jcespinoza/compilers_class/07aebc6f00759c39e59904f00966db01c3c8e0ca594313105faf0955d3381643", "path_in_repo": "jcespinoza/compilers_class/hw_expr_printer/expr_lexer.o", "objdump": "0000000000002522 <yyset_in>:\n    2522:\t55                   \tpush   %rbp\n    2523:\t48 89 e5             \tmov    %rsp,%rbp\n    2526:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    252a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    252e:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # 2535 <yyset_in+0x13>\n    2535:\t90                   \tnop\n    2536:\t5d                   \tpop    %rbp\n    2537:\tc3                   \tret    ", "code_s": "void yyset_in(undefined8 <span class=\"supfact\">param_1</span>) {\n  yyin = <span class=\"supfact\">param_1</span>;\n  return;\n}", "code_t": "void yyset_in(FILE *<span class=\"supfact\">_in_str</span>) {\n  FILE *<span class=\"supfact\">_in_str</span> - local;\n  yyin = <span class=\"supfact\">_in_str</span>;\n  return;\n}", "var": [{"name": "param_1", "type": "FILE * *", "pred_name": "_in_str", "ref_name": "_in_str", "ref_type": "FILE * *"}], "body_in_train": true}, {"repo_owner": "blacklion", "repo_name": "GEOM-Events", "path": "blacklion/GEOM-Events/2eaec29c62dd5fd19068374886790a505ac0b4dafe4bbf5da99157992ea81782", "path_in_repo": "blacklion/GEOM-Events/gnu/usr.bin/gdb/libgdb/gdbtypes.so", "objdump": "000000000000161e <create_string_type>:\n    161e:\t55                   \tpush   %rbp\n    161f:\t48 89 e5             \tmov    %rsp,%rbp\n    1622:\t48 83 ec 10          \tsub    $0x10,%rsp\n    1626:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    162a:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n    162e:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 1635 <create_string_type+0x17>\n    1635:\t48 8b 00             \tmov    (%rax),%rax\n    1638:\t48 8b 80 30 01 00 00 \tmov    0x130(%rax),%rax\n    163f:\t48 8b 08             \tmov    (%rax),%rcx\n    1642:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    1646:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    164a:\t48 89 ce             \tmov    %rcx,%rsi\n    164d:\t48 89 c7             \tmov    %rax,%rdi\n    1650:\te8 00 00 00 00       \tcall   1655 <create_string_type+0x37>\n    1655:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    1659:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    165d:\t48 8b 40 20          \tmov    0x20(%rax),%rax\n    1661:\tc6 00 0c             \tmovb   $0xc,(%rax)\n    1664:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    1668:\tc9                   \tleave  \n    1669:\tc3                   \tret    ", "code_s": "long create_string_type(undefined8 <span class=\"supfact\">param_1</span>,\n                        undefined8 <span class=\"supfact\">param_2</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  <span class=\"supfact\">lVar1</span> = create_array_type(\n      <span class=\"supfact\">param_1</span>, **(undefined8 **)(_current_language + Number),\n      <span class=\"supfact\">param_2</span>);\n  **(undefined **)(<span class=\"supfact\">lVar1</span> + Number) = Number;\n  return <span class=\"supfact\">lVar1</span>;\n}", "code_t": "type *create_string_type(type *<span class=\"supfact\">result_type</span>,\n                         type *<span class=\"supfact\">range_type</span>) {\n  type *<span class=\"supfact\">ptVar1</span>;\n  type *<span class=\"supfact\">range_type</span> - local;\n  type *<span class=\"supfact\">result_type</span> - local;\n  <span class=\"supfact\">ptVar1</span> = create_array_type(\n      <span class=\"supfact\">result_type</span>, **(type ***)(_current_language + Number),\n      <span class=\"supfact\">range_type</span>);\n  *(undefined *)<span class=\"supfact\">ptVar1</span> - &gt;\n  main_type = Number;\n  return <span class=\"supfact\">ptVar1</span>;\n}", "var": [{"name": "param_1", "type": "eap_sm * *", "pred_name": "sm", "ref_name": "result_type", "ref_type": "type * *"}, {"name": "param_2", "type": "size_t * *", "pred_name": "len", "ref_name": "range_type", "ref_type": "type * *"}, {"name": "lVar1", "type": "long", "pred_name": "lVar1", "ref_name": "ptVar1", "ref_type": "type * *"}], "body_in_train": false}, {"repo_owner": "bcho", "repo_name": "homework", "path": "bcho/homework/fec4f5d06374516bb5c235b2dc3c6bffa1a41ca3781816a64d4ab6ee9db5377c", "path_in_repo": "bcho/homework/data_structures/calculator/main.o", "objdump": "00000000000000dc <print_formula>:\n  dc:\t55                   \tpush   %rbp\n  dd:\t48 89 e5             \tmov    %rsp,%rbp\n  e0:\t48 83 ec 20          \tsub    $0x20,%rsp\n  e4:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n  e8:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n  eb:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n  f2:\te9 97 00 00 00       \tjmp    18e <print_formula+0xb2>\n  f7:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  fa:\t48 98                \tcltq   \n  fc:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 103:\t00 \n 104:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 108:\t48 01 d0             \tadd    %rdx,%rax\n 10b:\t48 8b 00             \tmov    (%rax),%rax\n 10e:\t8b 00                \tmov    (%rax),%eax\n 110:\t85 c0                \ttest   %eax,%eax\n 112:\t75 2d                \tjne    141 <print_formula+0x65>\n 114:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 117:\t48 98                \tcltq   \n 119:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 120:\t00 \n 121:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 125:\t48 01 d0             \tadd    %rdx,%rax\n 128:\t48 8b 00             \tmov    (%rax),%rax\n 12b:\t8b 40 04             \tmov    0x4(%rax),%eax\n 12e:\t89 c6                \tmov    %eax,%esi\n 130:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 135:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 13a:\te8 00 00 00 00       \tcall   13f <print_formula+0x63>\n 13f:\teb 49                \tjmp    18a <print_formula+0xae>\n 141:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 144:\t48 98                \tcltq   \n 146:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 14d:\t00 \n 14e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 152:\t48 01 d0             \tadd    %rdx,%rax\n 155:\t48 8b 00             \tmov    (%rax),%rax\n 158:\t8b 00                \tmov    (%rax),%eax\n 15a:\t83 f8 01             \tcmp    $0x1,%eax\n 15d:\t75 2b                \tjne    18a <print_formula+0xae>\n 15f:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 162:\t48 98                \tcltq   \n 164:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n 16b:\t00 \n 16c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 170:\t48 01 d0             \tadd    %rdx,%rax\n 173:\t48 8b 00             \tmov    (%rax),%rax\n 176:\t8b 40 04             \tmov    0x4(%rax),%eax\n 179:\t89 c6                \tmov    %eax,%esi\n 17b:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 180:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 185:\te8 00 00 00 00       \tcall   18a <print_formula+0xae>\n 18a:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n 18e:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 191:\t3b 45 e4             \tcmp    -0x1c(%rbp),%eax\n 194:\t0f 8c 5d ff ff ff    \tjl     f7 <print_formula+0x1b>\n 19a:\tbf 0a 00 00 00       \tmov    $0xa,%edi\n 19f:\te8 00 00 00 00       \tcall   1a4 <print_formula+0xc8>\n 1a4:\t90                   \tnop\n 1a5:\tc9                   \tleave  \n 1a6:\tc3                   \tret    ", "code_s": "void print_formula(long <span class=\"supfact\">param_1</span>, int <span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">local_c</span>;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n       <span class=\"supfact\">param_2</span>;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    if (**(int **)(<span class=\"supfact\">param_1</span> +\n                   (long)<span class=\"supfact\">local_c</span> * Number) == Number) {\n      printf(String,\n             (ulong) *\n                 (uint *)(*(long *)(<span class=\"supfact\">param_1</span> +\n                                    (long)<span class=\"supfact\">local_c</span> * Number) +\n                          Number));\n    } else if (**(int **)(<span class=\"supfact\">param_1</span> +\n                          (long)<span class=\"supfact\">local_c</span> * Number) == Number) {\n      printf(String,\n             (ulong) *\n                 (uint *)(*(long *)(<span class=\"supfact\">param_1</span> +\n                                    (long)<span class=\"supfact\">local_c</span> * Number) +\n                          Number));\n    }\n  }\n  putchar(Number);\n  return;\n}", "code_t": "void print_formula(token_t *<span class=\"supfact\">formula</span>,\n                   int <span class=\"supfact\">length</span>) {\n  int <span class=\"supfact\">length</span> - local;\n  token_t *<span class=\"supfact\">formula</span> - local;\n  int <span class=\"supfact\">i</span>;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n       <span class=\"supfact\">length</span>; <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    if (<span class=\"supfact\">formula</span>[<span class=\"supfact\">i</span>] - &gt; type == OPERATOR) {\n      printf(String,\n             (ulong)(uint)<span class=\"supfact\">formula</span>[<span class=\"supfact\">i</span>] - &gt;\n             value);\n    } else if (<span class=\"supfact\">formula</span>[<span class=\"supfact\">i</span>] - &gt;\n               type == OPERAND) {\n      printf(String,\n             (ulong)(uint)<span class=\"supfact\">formula</span>[<span class=\"supfact\">i</span>] - &gt;\n             value);\n    }\n  }\n  putchar(Number);\n  return;\n}", "var": [{"name": "param_1", "type": "void * *", "pred_name": "this", "ref_name": "formula", "ref_type": "token_t * *"}, {"name": "param_2", "type": "int", "pred_name": "n", "ref_name": "length", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "plopgrizzly", "repo_name": "mfi", "path": "plopgrizzly/mfi/397f061ad84f69768e922980b228d6c2bce7933ad2ae871e1c1feae86c875301", "path_in_repo": "plopgrizzly/mfi/libav-12.3/libavformat/format.o", "objdump": "000000000000001f <av_oformat_next>:\n  1f:\t48 89 7c 24 f8       \tmov    %rdi,-0x8(%rsp)\n  24:\t48 83 7c 24 f8 00    \tcmpq   $0x0,-0x8(%rsp)\n  2a:\t74 0a                \tje     36 <av_oformat_next+0x17>\n  2c:\t48 8b 44 24 f8       \tmov    -0x8(%rsp),%rax\n  31:\t48 8b 40 40          \tmov    0x40(%rax),%rax\n  35:\tc3                   \tret    \n  36:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3d <av_oformat_next+0x1e>\n  3d:\tc3                   \tret    ", "code_s": "undefined8 av_oformat_next(long <span class=\"supfact\">param_1</span>) {\n  if (<span class=\"supfact\">param_1</span> != Number) {\n    return *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number);\n  }\n  return DAT_00100ac0;\n}", "code_t": "AVOutputFormat *av_oformat_next(AVOutputFormat *<span class=\"supfact\">f</span>) {\n  AVOutputFormat *<span class=\"supfact\">f</span> - local;\n  if (<span class=\"supfact\">f</span> != (AVOutputFormat *)Number) {\n    return <span class=\"supfact\">f</span> - &gt;\n    next;\n  }\n  return first_oformat;\n}", "var": [{"name": "param_1", "type": "AVOutputFormat * *", "pred_name": "f", "ref_name": "f", "ref_type": "AVOutputFormat * *"}], "body_in_train": false}, {"repo_owner": "sookee", "repo_name": "oa-mod", "path": "sookee/oa-mod/27669db08d365bb8db09ce098b7ce5de820a660293f1b119151240e186050881", "path_in_repo": "sookee/oa-mod//ioq3/build/debug-linux-x86_64/ded/cvar.o", "objdump": "0000000000001d71 <Cvar_InfoStringBuffer>:\n    1d71:\t55                   \tpush   %rbp\n    1d72:\t48 89 e5             \tmov    %rsp,%rbp\n    1d75:\t48 83 ec 10          \tsub    $0x10,%rsp\n    1d79:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n    1d7c:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n    1d80:\t89 55 f8             \tmov    %edx,-0x8(%rbp)\n    1d83:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    1d86:\t89 c7                \tmov    %eax,%edi\n    1d88:\te8 00 00 00 00       \tcall   1d8d <Cvar_InfoStringBuffer+0x1c>\n    1d8d:\t48 89 c1             \tmov    %rax,%rcx\n    1d90:\t8b 55 f8             \tmov    -0x8(%rbp),%edx\n    1d93:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1d97:\t48 89 ce             \tmov    %rcx,%rsi\n    1d9a:\t48 89 c7             \tmov    %rax,%rdi\n    1d9d:\te8 00 00 00 00       \tcall   1da2 <Cvar_InfoStringBuffer+0x31>\n    1da2:\t90                   \tnop\n    1da3:\tc9                   \tleave  \n    1da4:\tc3                   \tret    ", "code_s": "void Cvar_InfoStringBuffer(undefined4 <span class=\"supfact\">param_1</span>,\n                           undefined8 <span class=\"supfact\">param_2</span>,\n                           undefined4 <span class=\"supfact\">param_3</span>) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  <span class=\"supfact\">uVar1</span> = Cvar_InfoString(<span class=\"supfact\">param_1</span>);\n  Q_strncpyz(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">uVar1</span>,\n             <span class=\"supfact\">param_3</span>);\n  return;\n}", "code_t": "void Cvar_InfoStringBuffer(int <span class=\"supfact\">bit</span>, char *<span class=\"supfact\">buff</span>,\n                           int <span class=\"supfact\">buffsize</span>) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  char *<span class=\"supfact\">buff</span> - local;\n  int <span class=\"supfact\">buffsize</span> - local;\n  int <span class=\"supfact\">bit</span> - local;\n  <span class=\"supfact\">pcVar1</span> = Cvar_InfoString(<span class=\"supfact\">bit</span>);\n  Q_strncpyz(<span class=\"supfact\">buff</span>, <span class=\"supfact\">pcVar1</span>,\n             <span class=\"supfact\">buffsize</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "bit", "ref_name": "bit", "ref_type": "int"}, {"name": "param_2", "type": "char * *", "pred_name": "buff", "ref_name": "buff", "ref_type": "char * *"}, {"name": "param_3", "type": "int", "pred_name": "buffsize", "ref_name": "buffsize", "ref_type": "int"}, {"name": "uVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": true}, {"repo_owner": "pfrag", "repo_name": "ptpv2-les", "path": "pfrag/ptpv2-les/60dba9f6df2c57b3f257b80633224abf0857d7e646b9dc97776644e48fbd06d7", "path_in_repo": "pfrag/ptpv2-les/les-0.2/funceval.lex.o", "objdump": "0000000000001908 <yy_scan_bytes>:\n    1908:\t55                   \tpush   %rbp\n    1909:\t48 89 e5             \tmov    %rsp,%rbp\n    190c:\t48 83 ec 30          \tsub    $0x30,%rsp\n    1910:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n    1914:\t89 75 d4             \tmov    %esi,-0x2c(%rbp)\n    1917:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    191a:\t83 c0 02             \tadd    $0x2,%eax\n    191d:\t48 98                \tcltq   \n    191f:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    1923:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    1927:\t48 89 c7             \tmov    %rax,%rdi\n    192a:\te8 00 00 00 00       \tcall   192f <yy_scan_bytes+0x27>\n    192f:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    1933:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    1938:\t75 0a                \tjne    1944 <yy_scan_bytes+0x3c>\n    193a:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    193f:\te8 92 00 00 00       \tcall   19d6 <yy_fatal_error>\n    1944:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n    194b:\teb 23                \tjmp    1970 <yy_scan_bytes+0x68>\n    194d:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    1950:\t48 63 d0             \tmovslq %eax,%rdx\n    1953:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1957:\t48 01 d0             \tadd    %rdx,%rax\n    195a:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n    195d:\t48 63 ca             \tmovslq %edx,%rcx\n    1960:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    1964:\t48 01 ca             \tadd    %rcx,%rdx\n    1967:\t0f b6 00             \tmovzbl (%rax),%eax\n    196a:\t88 02                \tmov    %al,(%rdx)\n    196c:\t83 45 fc 01          \taddl   $0x1,-0x4(%rbp)\n    1970:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    1973:\t3b 45 d4             \tcmp    -0x2c(%rbp),%eax\n    1976:\t7c d5                \tjl     194d <yy_scan_bytes+0x45>\n    1978:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    197b:\t48 98                \tcltq   \n    197d:\t48 8d 50 01          \tlea    0x1(%rax),%rdx\n    1981:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    1985:\t48 01 d0             \tadd    %rdx,%rax\n    1988:\tc6 00 00             \tmovb   $0x0,(%rax)\n    198b:\t8b 55 d4             \tmov    -0x2c(%rbp),%edx\n    198e:\t48 63 ca             \tmovslq %edx,%rcx\n    1991:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    1995:\t48 01 ca             \tadd    %rcx,%rdx\n    1998:\t0f b6 00             \tmovzbl (%rax),%eax\n    199b:\t88 02                \tmov    %al,(%rdx)\n    199d:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n    19a1:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    19a5:\t48 89 d6             \tmov    %rdx,%rsi\n    19a8:\t48 89 c7             \tmov    %rax,%rdi\n    19ab:\te8 00 00 00 00       \tcall   19b0 <yy_scan_bytes+0xa8>\n    19b0:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    19b4:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n    19b9:\t75 0a                \tjne    19c5 <yy_scan_bytes+0xbd>\n    19bb:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    19c0:\te8 11 00 00 00       \tcall   19d6 <yy_fatal_error>\n    19c5:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    19c9:\tc7 40 24 01 00 00 00 \tmovl   $0x1,0x24(%rax)\n    19d0:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    19d4:\tc9                   \tleave  \n    19d5:\tc3                   \tret    ", "code_s": "long yy_scan_bytes(long <span class=\"supfact\">param_1</span>, int <span class=\"supfact\">param_2</span>) {\n  long lVar1;\n  undefined *puVar2;\n  int <span class=\"supfact\">local_c</span>;\n  lVar1 = yyalloc((long)(<span class=\"supfact\">param_2</span> + Number));\n  if (lVar1 == Number) {\n    FUN_001019d6(String);\n  }\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n       <span class=\"supfact\">param_2</span>;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    *(undefined *)(lVar1 + <span class=\"supfact\">local_c</span>) =\n        *(undefined *)(<span class=\"supfact\">param_1</span> + <span class=\"supfact\">local_c</span>);\n  }\n  puVar2 = (undefined *)(lVar1 + (long)<span class=\"supfact\">param_2</span> + Number);\n  *puVar2 = Number;\n  *(undefined *)(lVar1 + <span class=\"supfact\">param_2</span>) = *puVar2;\n  lVar1 = yy_scan_buffer(lVar1, (long)(<span class=\"supfact\">param_2</span> + Number));\n  if (lVar1 == Number) {\n    FUN_001019d6(String);\n  }\n  *(undefined4 *)(lVar1 + Number) = Number;\n  return lVar1;\n}", "code_t": "YY_BUFFER_STATE yy_scan_bytes(char *<span class=\"supfact\">yybytes</span>,\n                              int <span class=\"supfact\">_yybytes_len</span>) {\n  char *base;\n  YY_BUFFER_STATE pyVar1;\n  int <span class=\"supfact\">_yybytes_len</span> - local;\n  char *<span class=\"supfact\">yybytes</span> - local;\n  YY_BUFFER_STATE b;\n  char *buf;\n  yy_size_t n;\n  int <span class=\"supfact\">i</span>;\n  base = (char *)yyalloc((long)(<span class=\"supfact\">_yybytes_len</span> + Number));\n  if (base == (char *)Number) {\n    yy_fatal_error(String);\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n       <span class=\"supfact\">_yybytes_len</span>;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    base[<span class=\"supfact\">i</span>] = <span class=\"supfact\">yybytes</span>[<span class=\"supfact\">i</span>];\n  }\n  base[(long)<span class=\"supfact\">_yybytes_len</span> + Number] = String;\n  base[<span class=\"supfact\">_yybytes_len</span>] =\n      base[(long)<span class=\"supfact\">_yybytes_len</span> + Number];\n  pyVar1 = yy_scan_buffer(base, (long)(<span class=\"supfact\">_yybytes_len</span> + Number));\n  if (pyVar1 == (YY_BUFFER_STATE)Number) {\n    yy_fatal_error(String);\n  }\n  pyVar1 - &gt;\n  yy_is_our_buffer = Number;\n  return pyVar1;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "yybytes", "ref_name": "yybytes", "ref_type": "char * *"}, {"name": "param_2", "type": "int", "pred_name": "_yybytes_len", "ref_name": "_yybytes_len", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "Caltoopia", "repo_name": "caltoopia-calvin", "path": "Caltoopia/caltoopia-calvin/e5eb3bcb05aaa4293c03453ddd452d25708f94116b9635efe61e2329e0c73a7b", "path_in_repo": "Caltoopia/caltoopia-calvin/examples/decoderDemo/RVC__decoder__texture_U__idct2d__transpose.so", "objdump": "", "code_s": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*_DAT_00104030)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *malloc(size_t __size) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*_DAT_00104030)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "iortcw", "repo_name": "iortcw", "path": "iortcw/iortcw/7b87d9fde8c09ac7c6799e22650b339af00d873828d67708be41e12f9c41dd1e", "path_in_repo": "iortcw/iortcw/MP/build/release-linux-x86_64/main/game/g_trigger.o", "objdump": "0000000000000683 <SP_trigger_multiple>:\n     683:\t55                   \tpush   %rbp\n     684:\t48 89 e5             \tmov    %rsp,%rbp\n     687:\t48 83 ec 10          \tsub    $0x10,%rsp\n     68b:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n     68f:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     693:\t48 05 94 04 00 00    \tadd    $0x494,%rax\n     699:\t48 89 c2             \tmov    %rax,%rdx\n     69c:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6a3 <SP_trigger_multiple+0x20>\n     6a3:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6aa <SP_trigger_multiple+0x27>\n     6aa:\te8 00 00 00 00       \tcall   6af <SP_trigger_multiple+0x2c>\n     6af:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     6b3:\t48 05 98 04 00 00    \tadd    $0x498,%rax\n     6b9:\t48 89 c2             \tmov    %rax,%rdx\n     6bc:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 6c3 <SP_trigger_multiple+0x40>\n     6c3:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 6ca <SP_trigger_multiple+0x47>\n     6ca:\te8 00 00 00 00       \tcall   6cf <SP_trigger_multiple+0x4c>\n     6cf:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     6d3:\tf3 0f 10 80 98 04 00 \tmovss  0x498(%rax),%xmm0\n     6da:\t00 \n     6db:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     6df:\tf3 0f 10 88 94 04 00 \tmovss  0x494(%rax),%xmm1\n     6e6:\t00 \n     6e7:\t0f 2f c1             \tcomiss %xmm1,%xmm0\n     6ea:\t72 4a                \tjb     736 <SP_trigger_multiple+0xb3>\n     6ec:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     6f0:\tf3 0f 10 80 94 04 00 \tmovss  0x494(%rax),%xmm0\n     6f7:\t00 \n     6f8:\t66 0f ef c9          \tpxor   %xmm1,%xmm1\n     6fc:\t0f 2f c1             \tcomiss %xmm1,%xmm0\n     6ff:\t72 35                \tjb     736 <SP_trigger_multiple+0xb3>\n     701:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     705:\tf3 0f 10 80 94 04 00 \tmovss  0x494(%rax),%xmm0\n     70c:\t00 \n     70d:\tf3 0f 10 0d 00 00 00 \tmovss  0x0(%rip),%xmm1        # 715 <SP_trigger_multiple+0x92>\n     714:\t00 \n     715:\tf3 0f 5c c1          \tsubss  %xmm1,%xmm0\n     719:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     71d:\tf3 0f 11 80 98 04 00 \tmovss  %xmm0,0x498(%rax)\n     724:\t00 \n     725:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 72c <SP_trigger_multiple+0xa9>\n     72c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     731:\te8 00 00 00 00       \tcall   736 <SP_trigger_multiple+0xb3>\n     736:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     73a:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 741 <SP_trigger_multiple+0xbe>\n     741:\t48 89 90 10 04 00 00 \tmov    %rdx,0x410(%rax)\n     748:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     74c:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 753 <SP_trigger_multiple+0xd0>\n     753:\t48 89 90 18 04 00 00 \tmov    %rdx,0x418(%rax)\n     75a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     75e:\t48 89 c7             \tmov    %rax,%rdi\n     761:\te8 00 00 00 00       \tcall   766 <SP_trigger_multiple+0xe3>\n     766:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     76a:\t48 89 c7             \tmov    %rax,%rdi\n     76d:\te8 00 00 00 00       \tcall   772 <SP_trigger_multiple+0xef>\n     772:\t90                   \tnop\n     773:\tc9                   \tleave  \n     774:\tc3                   \tret    ", "code_s": "void SP_trigger_multiple(long <span class=\"supfact\">param_1</span>) {\n  G_SpawnFloat(&amp; DAT_00102334, &amp;\n               DAT_00102330, <span class=\"supfact\">param_1</span> + Number);\n  G_SpawnFloat(String, &amp; DAT_00102339, <span class=\"supfact\">param_1</span> + Number);\n  if ((*(float *)(<span class=\"supfact\">param_1</span> + Number) &lt;\n       = *(float *)(<span class=\"supfact\">param_1</span> + Number)) &\n          amp;\n      &amp; (Number &lt; = *(float *)(<span class=\"supfact\">param_1</span> + Number))) {\n    *(float *)(<span class=\"supfact\">param_1</span> + Number) =\n        *(float *)(<span class=\"supfact\">param_1</span> + Number) - DAT_00102594;\n    G_Printf(String);\n  }\n  *(code **)(<span class=\"supfact\">param_1</span> + Number) = Touch_Multi;\n  *(code **)(<span class=\"supfact\">param_1</span> + Number) = Use_Multi;\n  InitTrigger(<span class=\"supfact\">param_1</span>);\n  trap_LinkEntity(<span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "void SP_trigger_multiple(gentity_t *<span class=\"supfact\">ent</span>) {\n  gentity_t *<span class=\"supfact\">ent</span> - local;\n  G_SpawnFloat(&amp; DAT_00102334, &amp; DAT_00102330, &amp;\n               <span class=\"supfact\">ent</span> - &gt; wait);\n  G_SpawnFloat(String, &amp; DAT_00102339, &amp; <span class=\"supfact\">ent</span> - &gt;\n               random);\n  if ((<span class=\"supfact\">ent</span> - &gt; wait &lt; = <span class=\"supfact\">ent</span> - &gt;\n       random) &\n          amp;\n      &amp; (Number &lt; = <span class=\"supfact\">ent</span> - &gt; wait)) {\n    <span class=\"supfact\">ent</span> - &gt;\n    random = <span class=\"supfact\">ent</span> - &gt;\n    wait - DAT_00102594;\n    G_Printf(String);\n  }\n  <span class=\"supfact\">ent</span> - &gt;\n  touch = Touch_Multi;\n  <span class=\"supfact\">ent</span> - &gt;\n  use = Use_Multi;\n  InitTrigger(<span class=\"supfact\">ent</span>);\n  trap_LinkEntity(<span class=\"supfact\">ent</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "gentity_t * *", "pred_name": "ent", "ref_name": "ent", "ref_type": "gentity_t * *"}], "body_in_train": false}, {"repo_owner": "lattera", "repo_name": "openbsd", "path": "lattera/openbsd/24c024ec7b1416b55a6b24169595d9a718f1e19985ef179c1bc57aa08cf38ab5", "path_in_repo": "lattera/openbsd//usr.sbin/rtadvd/advcap.o", "objdump": "0000000000000427 <anamatch>:\n 427:\t55                   \tpush   %rbp\n 428:\t48 89 e5             \tmov    %rsp,%rbp\n 42b:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n 42f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 436 <anamatch+0xf>\n 436:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n 43a:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 43e:\t0f b6 00             \tmovzbl (%rax),%eax\n 441:\t3c 23                \tcmp    $0x23,%al\n 443:\t75 0a                \tjne    44f <anamatch+0x28>\n 445:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 44a:\te9 b1 00 00 00       \tjmp    500 <anamatch+0xd9>\n 44f:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 453:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 457:\teb 0a                \tjmp    463 <anamatch+0x3c>\n 459:\t48 83 45 f0 01       \taddq   $0x1,-0x10(%rbp)\n 45e:\t48 83 45 f8 01       \taddq   $0x1,-0x8(%rbp)\n 463:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 467:\t0f b6 00             \tmovzbl (%rax),%eax\n 46a:\t84 c0                \ttest   %al,%al\n 46c:\t74 12                \tje     480 <anamatch+0x59>\n 46e:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 472:\t0f b6 10             \tmovzbl (%rax),%edx\n 475:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 479:\t0f b6 00             \tmovzbl (%rax),%eax\n 47c:\t38 c2                \tcmp    %al,%dl\n 47e:\t74 d9                \tje     459 <anamatch+0x32>\n 480:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 484:\t0f b6 00             \tmovzbl (%rax),%eax\n 487:\t84 c0                \ttest   %al,%al\n 489:\t75 2d                \tjne    4b8 <anamatch+0x91>\n 48b:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 48f:\t0f b6 00             \tmovzbl (%rax),%eax\n 492:\t3c 7c                \tcmp    $0x7c,%al\n 494:\t74 16                \tje     4ac <anamatch+0x85>\n 496:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 49a:\t0f b6 00             \tmovzbl (%rax),%eax\n 49d:\t3c 3a                \tcmp    $0x3a,%al\n 49f:\t74 0b                \tje     4ac <anamatch+0x85>\n 4a1:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 4a5:\t0f b6 00             \tmovzbl (%rax),%eax\n 4a8:\t84 c0                \ttest   %al,%al\n 4aa:\t75 0c                \tjne    4b8 <anamatch+0x91>\n 4ac:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 4b1:\teb 4d                \tjmp    500 <anamatch+0xd9>\n 4b3:\t48 83 45 f0 01       \taddq   $0x1,-0x10(%rbp)\n 4b8:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 4bc:\t0f b6 00             \tmovzbl (%rax),%eax\n 4bf:\t84 c0                \ttest   %al,%al\n 4c1:\t74 16                \tje     4d9 <anamatch+0xb2>\n 4c3:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 4c7:\t0f b6 00             \tmovzbl (%rax),%eax\n 4ca:\t3c 3a                \tcmp    $0x3a,%al\n 4cc:\t74 0b                \tje     4d9 <anamatch+0xb2>\n 4ce:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 4d2:\t0f b6 00             \tmovzbl (%rax),%eax\n 4d5:\t3c 7c                \tcmp    $0x7c,%al\n 4d7:\t75 da                \tjne    4b3 <anamatch+0x8c>\n 4d9:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 4dd:\t0f b6 00             \tmovzbl (%rax),%eax\n 4e0:\t84 c0                \ttest   %al,%al\n 4e2:\t74 0b                \tje     4ef <anamatch+0xc8>\n 4e4:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n 4e8:\t0f b6 00             \tmovzbl (%rax),%eax\n 4eb:\t3c 3a                \tcmp    $0x3a,%al\n 4ed:\t75 07                \tjne    4f6 <anamatch+0xcf>\n 4ef:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 4f4:\teb 0a                \tjmp    500 <anamatch+0xd9>\n 4f6:\t48 83 45 f0 01       \taddq   $0x1,-0x10(%rbp)\n 4fb:\te9 4f ff ff ff       \tjmp    44f <anamatch+0x28>\n 500:\t5d                   \tpop    %rbp\n 501:\tc3                   \tret    ", "code_s": "undefined8 anamatch(char *<span class=\"supfact\">param_1</span>) {\n  char *<span class=\"supfact\">local_18</span>;\n  char *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_18</span> = DAT_00100a40;\n  <span class=\"supfact\">local_10</span> = <span class=\"supfact\">param_1</span>;\n  if (*DAT_00100a40 != String) {\n    while (true) {\n      for (; (*<span class=\"supfact\">local_10</span> != String & amp; &amp;\n              (*<span class=\"supfact\">local_18</span> == *<span class=\"supfact\">local_10</span>));\n           <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> + Number) {\n        <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number;\n      }\n      if ((*<span class=\"supfact\">local_10</span> == String) & amp; &amp;\n          (((*<span class=\"supfact\">local_18</span> == String ||\n             (*<span class=\"supfact\">local_18</span> == String)) ||\n            (*<span class=\"supfact\">local_18</span> == String)))) {\n        return Number;\n      }\n      for (; ((*<span class=\"supfact\">local_18</span> != String & amp; &amp;\n               (*<span class=\"supfact\">local_18</span> != String)) &\n                  amp;\n              &amp; (*<span class=\"supfact\">local_18</span> != String));\n           <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> + Number) {\n      }\n      if ((*<span class=\"supfact\">local_18</span> == String) ||\n          (*<span class=\"supfact\">local_18</span> == String))\n        break;\n      <span class=\"supfact\">local_18</span> = <span class=\"supfact\">local_18</span> + Number;\n      <span class=\"supfact\">local_10</span> = <span class=\"supfact\">param_1</span>;\n    }\n  }\n  return Number;\n}", "code_t": "int anamatch(char *<span class=\"supfact\">np</span>) {\n  char *<span class=\"supfact\">np</span> - local;\n  char *<span class=\"supfact\">Bp</span>;\n  char *<span class=\"supfact\">Np</span>;\n  <span class=\"supfact\">Bp</span> = tbuf;\n  <span class=\"supfact\">Np</span> = <span class=\"supfact\">np</span>;\n  if (*tbuf != String) {\n    while (true) {\n      for (; (*<span class=\"supfact\">Np</span> != String & amp; &amp;\n              (*<span class=\"supfact\">Bp</span> == *<span class=\"supfact\">Np</span>));\n           <span class=\"supfact\">Bp</span> = <span class=\"supfact\">Bp</span> + Number) {\n        <span class=\"supfact\">Np</span> = <span class=\"supfact\">Np</span> + Number;\n      }\n      if ((*<span class=\"supfact\">Np</span> == String) & amp; &amp;\n          (((*<span class=\"supfact\">Bp</span> == String ||\n             (*<span class=\"supfact\">Bp</span> == String)) ||\n            (*<span class=\"supfact\">Bp</span> == String)))) {\n        return Number;\n      }\n      for (; ((*<span class=\"supfact\">Bp</span> != String & amp; &amp;\n               (*<span class=\"supfact\">Bp</span> != String)) &\n                  amp;\n              &amp; (*<span class=\"supfact\">Bp</span> != String));\n           <span class=\"supfact\">Bp</span> = <span class=\"supfact\">Bp</span> + Number) {\n      }\n      if ((*<span class=\"supfact\">Bp</span> == String) || (*<span class=\"supfact\">Bp</span> == String))\n        break;\n      <span class=\"supfact\">Bp</span> = <span class=\"supfact\">Bp</span> + Number;\n      <span class=\"supfact\">Np</span> = <span class=\"supfact\">np</span>;\n    }\n  }\n  return Number;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "np", "ref_name": "np", "ref_type": "char * *"}, {"name": "local_18", "type": "char * *", "pred_name": "Bp", "ref_name": "Bp", "ref_type": "char * *"}, {"name": "local_10", "type": "char * *", "pred_name": "__unk__", "ref_name": "Np", "ref_type": "char * *"}], "body_in_train": true}, {"repo_owner": "PadWorld-Entertainment", "repo_name": "wop-gamesource", "path": "PadWorld-Entertainment/wop-gamesource/0840edd2c74fe894f1680eac49e896a8de2d9641921ebf91165f17c4b54d716c", "path_in_repo": "PadWorld-Entertainment/wop-gamesource//build/release-linux-x86_64/ded/q_shared.o", "objdump": "0000000000000b76 <COM_MatchToken>:\n     b76:\t48 83 ec 28          \tsub    $0x28,%rsp\n     b7a:\t48 89 7c 24 08       \tmov    %rdi,0x8(%rsp)\n     b7f:\t48 89 34 24          \tmov    %rsi,(%rsp)\n     b83:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n     b88:\t48 89 c7             \tmov    %rax,%rdi\n     b8b:\te8 00 00 00 00       \tcall   b90 <COM_MatchToken+0x1a>\n     b90:\t48 89 44 24 18       \tmov    %rax,0x18(%rsp)\n     b95:\t48 8b 14 24          \tmov    (%rsp),%rdx\n     b99:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     b9e:\t48 89 d6             \tmov    %rdx,%rsi\n     ba1:\t48 89 c7             \tmov    %rax,%rdi\n     ba4:\te8 00 00 00 00       \tcall   ba9 <COM_MatchToken+0x33>\n     ba9:\t85 c0                \ttest   %eax,%eax\n     bab:\t74 23                \tje     bd0 <COM_MatchToken+0x5a>\n     bad:\t48 8b 14 24          \tmov    (%rsp),%rdx\n     bb1:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n     bb6:\t48 89 d1             \tmov    %rdx,%rcx\n     bb9:\t48 89 c2             \tmov    %rax,%rdx\n     bbc:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     bc1:\tbf 01 00 00 00       \tmov    $0x1,%edi\n     bc6:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     bcb:\te8 00 00 00 00       \tcall   bd0 <COM_MatchToken+0x5a>\n     bd0:\t90                   \tnop\n     bd1:\t48 83 c4 28          \tadd    $0x28,%rsp\n     bd5:\tc3                   \tret    ", "code_s": "void COM_MatchToken(undefined8 <span class=\"supfact\">param_1</span>,\n                    char *<span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  char *<span class=\"supfact\">__s1</span>;\n  <span class=\"supfact\">__s1</span> = (char *)COM_Parse(<span class=\"supfact\">param_1</span>);\n  <span class=\"supfact\">iVar1</span> = strcmp(<span class=\"supfact\">__s1</span>, <span class=\"supfact\">param_2</span>);\n  if (<span class=\"supfact\">iVar1</span> != Number) {\n    Com_Error(Number, String, <span class=\"supfact\">__s1</span>, <span class=\"supfact\">param_2</span>);\n  }\n  return;\n}", "code_t": "void COM_MatchToken(char **<span class=\"supfact\">buf_p</span>, char *<span class=\"supfact\">match</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  char *<span class=\"supfact\">__s1</span>;\n  char *<span class=\"supfact\">match</span> - local;\n  char **<span class=\"supfact\">buf_p</span> - local;\n  char *token;\n  <span class=\"supfact\">__s1</span> = COM_Parse(<span class=\"supfact\">buf_p</span>);\n  <span class=\"supfact\">iVar1</span> = strcmp(<span class=\"supfact\">__s1</span>, <span class=\"supfact\">match</span>);\n  if (<span class=\"supfact\">iVar1</span> != Number) {\n    Com_Error(Number, String, <span class=\"supfact\">__s1</span>, <span class=\"supfact\">match</span>);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "char * * *", "pred_name": "buf_p", "ref_name": "buf_p", "ref_type": "char * * *"}, {"name": "param_2", "type": "char * *", "pred_name": "match", "ref_name": "match", "ref_type": "char * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "__s1", "type": "char * *", "pred_name": "__s1", "ref_name": "__s1", "ref_type": "char * *"}], "body_in_train": true}, {"repo_owner": "ystk", "repo_name": "debian-mesa", "path": "ystk/debian-mesa/231f4175b8f4876b43dba6da8e6d4d54b749cdd19af4b20d2e073896d0672da9", "path_in_repo": "ystk/debian-mesa/src/glx/x11/glxextensions.o", "objdump": "0000000000000d85 <__glXGetGLVersion>:\n d85:\t55                   \tpush   %rbp\n d86:\t48 89 e5             \tmov    %rsp,%rbp\n d89:\t48 83 ec 10          \tsub    $0x10,%rsp\n d8d:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n d91:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n d95:\te8 75 f5 ff ff       \tcall   30f <__glXExtensionsCtr>\n d9a:\tb8 01 00 00 00       \tmov    $0x1,%eax\n d9f:\t89 c2                \tmov    %eax,%edx\n da1:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n da5:\t89 10                \tmov    %edx,(%rax)\n da7:\tb8 04 00 00 00       \tmov    $0x4,%eax\n dac:\t89 c2                \tmov    %eax,%edx\n dae:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n db2:\t89 10                \tmov    %edx,(%rax)\n db4:\t90                   \tnop\n db5:\tc9                   \tleave  \n db6:\tc3                   \tret    ", "code_s": "void __glXGetGLVersion(undefined4 *<span class=\"supfact\">param_1</span>,\n                       undefined4 *<span class=\"supfact\">param_2</span>) {\n  FUN_0010030f();\n  *<span class=\"supfact\">param_1</span> = Number;\n  *<span class=\"supfact\">param_2</span> = Number;\n  return;\n}", "code_t": "void __glXGetGLVersion(int *<span class=\"supfact\">major_version</span>,\n                       int *<span class=\"supfact\">minor_version</span>) {\n  int *<span class=\"supfact\">minor_version</span> - local;\n  int *<span class=\"supfact\">major_version</span> - local;\n  __glXExtensionsCtr();\n  *<span class=\"supfact\">major_version</span> = Number;\n  *<span class=\"supfact\">minor_version</span> = Number;\n  return;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "__unk__", "ref_name": "major_version", "ref_type": "int * *"}, {"name": "param_2", "type": "__unk__", "pred_name": "__unk__", "ref_name": "minor_version", "ref_type": "int * *"}], "body_in_train": false}, {"repo_owner": "1163781843", "repo_name": "freeswitch-1.8.5", "path": "1163781843/freeswitch-1.8.5/88dab6b1f009ea54ce92d4634517be982eafb9b04c0e3b77630e7a799908e7ef", "path_in_repo": "1163781843/freeswitch-1.8.5/libs/xmlrpc-c/src/cpp/test/server_abyss.o", "objdump": "", "code_s": "void __thiscall xmlrpc_c\n    registryPtr ~registryPtr(registryPtr *<span class=\"supfact\">this</span>) {\n  girmem autoObjectPtr ~autoObjectPtr((autoObjectPtr *)<span class=\"supfact\">this</span>);\n  return;\n}", "code_t": "void __thiscall xmlrpc_c\n    registryPtr ~registryPtr(registryPtr *<span class=\"supfact\">this</span>, int __in_chrg) {\n  registryPtr *<span class=\"supfact\">this</span> - local;\n  girmem autoObjectPtr ~autoObjectPtr(&amp; <span class=\"supfact\">this</span> - &gt;\n                                      super_autoObjectPtr);\n  return;\n}", "var": [{"name": "this", "type": "registryPtr * *", "pred_name": "this", "ref_name": "this", "ref_type": "registryPtr * *"}], "body_in_train": true}, {"repo_owner": "brainsmoke", "repo_name": "ptrace-burrito", "path": "brainsmoke/ptrace-burrito/21082712d2c0e22d75500a17217b856e0a8f858e4e13a860873ddbc1dc2a40e1", "path_in_repo": "brainsmoke/ptrace-burrito//testcases/sigalrm-sysv", "objdump": "", "code_s": "ssize_t read(int __fd, void *__buf, size_t __nbytes) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_read_00404038)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "code_t": "ssize_t read(int __fd, void *__buf, size_t __nbytes) {\n  ssize_t <span class=\"supfact\">sVar1</span>;\n  <span class=\"supfact\">sVar1</span> = (*(code *)PTR_read_00404038)();\n  return <span class=\"supfact\">sVar1</span>;\n}", "var": [{"name": "sVar1", "type": "ssize_t", "pred_name": "sVar1", "ref_name": "sVar1", "ref_type": "ssize_t"}], "body_in_train": true}, {"repo_owner": "drakeguan", "repo_name": "ffmpeg", "path": "drakeguan/ffmpeg/5c103116d1dcd6f1c182cab8896d6fda296a040fbcda08899ae3c73856508ab1", "path_in_repo": "drakeguan/ffmpeg//libavcodec/h264.o", "objdump": "000000000000928b <ff_h264_alloc_tables>:\n    928b:\t48 83 ec 38          \tsub    $0x38,%rsp\n    928f:\t48 89 7c 24 08       \tmov    %rdi,0x8(%rsp)\n    9294:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9299:\t8b 90 a0 cb 06 00    \tmov    0x6cba0(%rax),%edx\n    929f:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    92a4:\t8b 80 98 cb 06 00    \tmov    0x6cb98(%rax),%eax\n    92aa:\t83 c0 01             \tadd    $0x1,%eax\n    92ad:\t0f af c2             \timul   %edx,%eax\n    92b0:\t89 44 24 20          \tmov    %eax,0x20(%rsp)\n    92b4:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    92b9:\t8b 90 a0 cb 06 00    \tmov    0x6cba0(%rax),%edx\n    92bf:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    92c4:\t48 8b 00             \tmov    (%rax),%rax\n    92c7:\t8b 80 88 03 00 00    \tmov    0x388(%rax),%eax\n    92cd:\tb9 01 00 00 00       \tmov    $0x1,%ecx\n    92d2:\t85 c0                \ttest   %eax,%eax\n    92d4:\t0f 4e c1             \tcmovle %ecx,%eax\n    92d7:\t0f af c2             \timul   %edx,%eax\n    92da:\t01 c0                \tadd    %eax,%eax\n    92dc:\t89 44 24 1c          \tmov    %eax,0x1c(%rsp)\n    92e0:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    92e4:\t48 98                \tcltq   \n    92e6:\tbe 08 00 00 00       \tmov    $0x8,%esi\n    92eb:\t48 89 c7             \tmov    %rax,%rdi\n    92ee:\te8 0d 6d ff ff       \tcall   0 <av_mallocz_array>\n    92f3:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n    92f8:\t48 89 82 a0 15 00 00 \tmov    %rax,0x15a0(%rdx)\n    92ff:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9304:\t48 8b 80 a0 15 00 00 \tmov    0x15a0(%rax),%rax\n    930b:\t48 85 c0             \ttest   %rax,%rax\n    930e:\t75 24                \tjne    9334 <ff_h264_alloc_tables+0xa9>\n    9310:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9315:\t48 8b 00             \tmov    (%rax),%rax\n    9318:\tba 00 00 00 00       \tmov    $0x0,%edx\n    931d:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    9322:\t48 89 c7             \tmov    %rax,%rdi\n    9325:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    932a:\te8 00 00 00 00       \tcall   932f <ff_h264_alloc_tables+0xa4>\n    932f:\te9 b8 05 00 00       \tjmp    98ec <ff_h264_alloc_tables+0x661>\n    9334:\t8b 54 24 20          \tmov    0x20(%rsp),%edx\n    9338:\t89 d0                \tmov    %edx,%eax\n    933a:\t01 c0                \tadd    %eax,%eax\n    933c:\t01 d0                \tadd    %edx,%eax\n    933e:\tc1 e0 04             \tshl    $0x4,%eax\n    9341:\t48 98                \tcltq   \n    9343:\t48 89 c7             \tmov    %rax,%rdi\n    9346:\te8 00 00 00 00       \tcall   934b <ff_h264_alloc_tables+0xc0>\n    934b:\t48 89 c2             \tmov    %rax,%rdx\n    934e:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9353:\t48 89 90 18 18 00 00 \tmov    %rdx,0x1818(%rax)\n    935a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    935f:\t48 8b 80 18 18 00 00 \tmov    0x1818(%rax),%rax\n    9366:\t48 85 c0             \ttest   %rax,%rax\n    9369:\t75 2b                \tjne    9396 <ff_h264_alloc_tables+0x10b>\n    936b:\t83 7c 24 20 00       \tcmpl   $0x0,0x20(%rsp)\n    9370:\t74 24                \tje     9396 <ff_h264_alloc_tables+0x10b>\n    9372:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9377:\t48 8b 00             \tmov    (%rax),%rax\n    937a:\tba 00 00 00 00       \tmov    $0x0,%edx\n    937f:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    9384:\t48 89 c7             \tmov    %rax,%rdi\n    9387:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    938c:\te8 00 00 00 00       \tcall   9391 <ff_h264_alloc_tables+0x106>\n    9391:\te9 56 05 00 00       \tjmp    98ec <ff_h264_alloc_tables+0x661>\n    9396:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    939b:\t8b 90 a0 cb 06 00    \tmov    0x6cba0(%rax),%edx\n    93a1:\t8b 44 24 20          \tmov    0x20(%rsp),%eax\n    93a5:\t01 d0                \tadd    %edx,%eax\n    93a7:\t48 98                \tcltq   \n    93a9:\t48 01 c0             \tadd    %rax,%rax\n    93ac:\t48 89 c7             \tmov    %rax,%rdi\n    93af:\te8 00 00 00 00       \tcall   93b4 <ff_h264_alloc_tables+0x129>\n    93b4:\t48 89 c2             \tmov    %rax,%rdx\n    93b7:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    93bc:\t48 89 90 00 d5 06 00 \tmov    %rdx,0x6d500(%rax)\n    93c3:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    93c8:\t48 8b 80 00 d5 06 00 \tmov    0x6d500(%rax),%rax\n    93cf:\t48 85 c0             \ttest   %rax,%rax\n    93d2:\t75 3f                \tjne    9413 <ff_h264_alloc_tables+0x188>\n    93d4:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    93d9:\t8b 90 a0 cb 06 00    \tmov    0x6cba0(%rax),%edx\n    93df:\t8b 44 24 20          \tmov    0x20(%rsp),%eax\n    93e3:\t01 d0                \tadd    %edx,%eax\n    93e5:\t48 98                \tcltq   \n    93e7:\t48 01 c0             \tadd    %rax,%rax\n    93ea:\t48 85 c0             \ttest   %rax,%rax\n    93ed:\t74 24                \tje     9413 <ff_h264_alloc_tables+0x188>\n    93ef:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    93f4:\t48 8b 00             \tmov    (%rax),%rax\n    93f7:\tba 00 00 00 00       \tmov    $0x0,%edx\n    93fc:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    9401:\t48 89 c7             \tmov    %rax,%rdi\n    9404:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9409:\te8 00 00 00 00       \tcall   940e <ff_h264_alloc_tables+0x183>\n    940e:\te9 d9 04 00 00       \tjmp    98ec <ff_h264_alloc_tables+0x661>\n    9413:\t8b 44 24 20          \tmov    0x20(%rsp),%eax\n    9417:\t48 98                \tcltq   \n    9419:\t48 01 c0             \tadd    %rax,%rax\n    941c:\t48 89 c7             \tmov    %rax,%rdi\n    941f:\te8 00 00 00 00       \tcall   9424 <ff_h264_alloc_tables+0x199>\n    9424:\t48 89 c2             \tmov    %rax,%rdx\n    9427:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    942c:\t48 89 90 30 c8 06 00 \tmov    %rdx,0x6c830(%rax)\n    9433:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9438:\t48 8b 80 30 c8 06 00 \tmov    0x6c830(%rax),%rax\n    943f:\t48 85 c0             \ttest   %rax,%rax\n    9442:\t75 32                \tjne    9476 <ff_h264_alloc_tables+0x1eb>\n    9444:\t8b 44 24 20          \tmov    0x20(%rsp),%eax\n    9448:\t48 98                \tcltq   \n    944a:\t48 01 c0             \tadd    %rax,%rax\n    944d:\t48 85 c0             \ttest   %rax,%rax\n    9450:\t74 24                \tje     9476 <ff_h264_alloc_tables+0x1eb>\n    9452:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9457:\t48 8b 00             \tmov    (%rax),%rax\n    945a:\tba 00 00 00 00       \tmov    $0x0,%edx\n    945f:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    9464:\t48 89 c7             \tmov    %rax,%rdi\n    9467:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    946c:\te8 00 00 00 00       \tcall   9471 <ff_h264_alloc_tables+0x1e6>\n    9471:\te9 76 04 00 00       \tjmp    98ec <ff_h264_alloc_tables+0x661>\n    9476:\t8b 44 24 20          \tmov    0x20(%rsp),%eax\n    947a:\t48 98                \tcltq   \n    947c:\t48 89 c7             \tmov    %rax,%rdi\n    947f:\te8 00 00 00 00       \tcall   9484 <ff_h264_alloc_tables+0x1f9>\n    9484:\t48 89 c2             \tmov    %rax,%rdx\n    9487:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    948c:\t48 89 90 48 c8 06 00 \tmov    %rdx,0x6c848(%rax)\n    9493:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9498:\t48 8b 80 48 c8 06 00 \tmov    0x6c848(%rax),%rax\n    949f:\t48 85 c0             \ttest   %rax,%rax\n    94a2:\t75 2b                \tjne    94cf <ff_h264_alloc_tables+0x244>\n    94a4:\t83 7c 24 20 00       \tcmpl   $0x0,0x20(%rsp)\n    94a9:\t74 24                \tje     94cf <ff_h264_alloc_tables+0x244>\n    94ab:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    94b0:\t48 8b 00             \tmov    (%rax),%rax\n    94b3:\tba 00 00 00 00       \tmov    $0x0,%edx\n    94b8:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    94bd:\t48 89 c7             \tmov    %rax,%rdi\n    94c0:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    94c5:\te8 00 00 00 00       \tcall   94ca <ff_h264_alloc_tables+0x23f>\n    94ca:\te9 1d 04 00 00       \tjmp    98ec <ff_h264_alloc_tables+0x661>\n    94cf:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    94d3:\t48 98                \tcltq   \n    94d5:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    94da:\t48 89 c7             \tmov    %rax,%rdi\n    94dd:\te8 1e 6b ff ff       \tcall   0 <av_mallocz_array>\n    94e2:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n    94e7:\t48 89 82 58 c8 06 00 \tmov    %rax,0x6c858(%rdx)\n    94ee:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    94f3:\t48 8b 80 58 c8 06 00 \tmov    0x6c858(%rax),%rax\n    94fa:\t48 85 c0             \ttest   %rax,%rax\n    94fd:\t75 24                \tjne    9523 <ff_h264_alloc_tables+0x298>\n    94ff:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9504:\t48 8b 00             \tmov    (%rax),%rax\n    9507:\tba 00 00 00 00       \tmov    $0x0,%edx\n    950c:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    9511:\t48 89 c7             \tmov    %rax,%rdi\n    9514:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9519:\te8 00 00 00 00       \tcall   951e <ff_h264_alloc_tables+0x293>\n    951e:\te9 c9 03 00 00       \tjmp    98ec <ff_h264_alloc_tables+0x661>\n    9523:\t8b 44 24 1c          \tmov    0x1c(%rsp),%eax\n    9527:\t48 98                \tcltq   \n    9529:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    952e:\t48 89 c7             \tmov    %rax,%rdi\n    9531:\te8 ca 6a ff ff       \tcall   0 <av_mallocz_array>\n    9536:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n    953b:\t48 89 82 60 c8 06 00 \tmov    %rax,0x6c860(%rdx)\n    9542:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9547:\t48 8b 80 60 c8 06 00 \tmov    0x6c860(%rax),%rax\n    954e:\t48 85 c0             \ttest   %rax,%rax\n    9551:\t75 24                \tjne    9577 <ff_h264_alloc_tables+0x2ec>\n    9553:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9558:\t48 8b 00             \tmov    (%rax),%rax\n    955b:\tba 00 00 00 00       \tmov    $0x0,%edx\n    9560:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    9565:\t48 89 c7             \tmov    %rax,%rdi\n    9568:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    956d:\te8 00 00 00 00       \tcall   9572 <ff_h264_alloc_tables+0x2e7>\n    9572:\te9 75 03 00 00       \tjmp    98ec <ff_h264_alloc_tables+0x661>\n    9577:\t8b 44 24 20          \tmov    0x20(%rsp),%eax\n    957b:\tc1 e0 02             \tshl    $0x2,%eax\n    957e:\t48 98                \tcltq   \n    9580:\t48 89 c7             \tmov    %rax,%rdi\n    9583:\te8 00 00 00 00       \tcall   9588 <ff_h264_alloc_tables+0x2fd>\n    9588:\t48 89 c2             \tmov    %rax,%rdx\n    958b:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9590:\t48 89 90 10 c9 06 00 \tmov    %rdx,0x6c910(%rax)\n    9597:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    959c:\t48 8b 80 10 c9 06 00 \tmov    0x6c910(%rax),%rax\n    95a3:\t48 85 c0             \ttest   %rax,%rax\n    95a6:\t75 2b                \tjne    95d3 <ff_h264_alloc_tables+0x348>\n    95a8:\t83 7c 24 20 00       \tcmpl   $0x0,0x20(%rsp)\n    95ad:\t74 24                \tje     95d3 <ff_h264_alloc_tables+0x348>\n    95af:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    95b4:\t48 8b 00             \tmov    (%rax),%rax\n    95b7:\tba 00 00 00 00       \tmov    $0x0,%edx\n    95bc:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    95c1:\t48 89 c7             \tmov    %rax,%rdi\n    95c4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    95c9:\te8 00 00 00 00       \tcall   95ce <ff_h264_alloc_tables+0x343>\n    95ce:\te9 19 03 00 00       \tjmp    98ec <ff_h264_alloc_tables+0x661>\n    95d3:\t8b 44 24 20          \tmov    0x20(%rsp),%eax\n    95d7:\t48 98                \tcltq   \n    95d9:\t48 89 c7             \tmov    %rax,%rdi\n    95dc:\te8 00 00 00 00       \tcall   95e1 <ff_h264_alloc_tables+0x356>\n    95e1:\t48 89 c2             \tmov    %rax,%rdx\n    95e4:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    95e9:\t48 89 90 b8 0e 03 00 \tmov    %rdx,0x30eb8(%rax)\n    95f0:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    95f5:\t48 8b 80 b8 0e 03 00 \tmov    0x30eb8(%rax),%rax\n    95fc:\t48 85 c0             \ttest   %rax,%rax\n    95ff:\t75 2b                \tjne    962c <ff_h264_alloc_tables+0x3a1>\n    9601:\t83 7c 24 20 00       \tcmpl   $0x0,0x20(%rsp)\n    9606:\t74 24                \tje     962c <ff_h264_alloc_tables+0x3a1>\n    9608:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    960d:\t48 8b 00             \tmov    (%rax),%rax\n    9610:\tba 00 00 00 00       \tmov    $0x0,%edx\n    9615:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    961a:\t48 89 c7             \tmov    %rax,%rdi\n    961d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    9622:\te8 00 00 00 00       \tcall   9627 <ff_h264_alloc_tables+0x39c>\n    9627:\te9 c0 02 00 00       \tjmp    98ec <ff_h264_alloc_tables+0x661>\n    962c:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9631:\t8b 90 a0 cb 06 00    \tmov    0x6cba0(%rax),%edx\n    9637:\t8b 44 24 20          \tmov    0x20(%rsp),%eax\n    963b:\t01 d0                \tadd    %edx,%eax\n    963d:\t48 98                \tcltq   \n    963f:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    9643:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9648:\t48 8b 80 00 d5 06 00 \tmov    0x6d500(%rax),%rax\n    964f:\tbe ff ff ff ff       \tmov    $0xffffffff,%esi\n    9654:\t48 89 c7             \tmov    %rax,%rdi\n    9657:\te8 00 00 00 00       \tcall   965c <ff_h264_alloc_tables+0x3d1>\n    965c:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9661:\t48 8b 90 00 d5 06 00 \tmov    0x6d500(%rax),%rdx\n    9668:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    966d:\t8b 80 a0 cb 06 00    \tmov    0x6cba0(%rax),%eax\n    9673:\t01 c0                \tadd    %eax,%eax\n    9675:\t48 98                \tcltq   \n    9677:\t48 83 c0 01          \tadd    $0x1,%rax\n    967b:\t48 01 c0             \tadd    %rax,%rax\n    967e:\t48 01 c2             \tadd    %rax,%rdx\n    9681:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9686:\t48 89 90 60 b7 02 00 \tmov    %rdx,0x2b760(%rax)\n    968d:\t8b 44 24 20          \tmov    0x20(%rsp),%eax\n    9691:\t48 98                \tcltq   \n    9693:\t48 c1 e0 02          \tshl    $0x2,%rax\n    9697:\t48 89 c7             \tmov    %rax,%rdi\n    969a:\te8 00 00 00 00       \tcall   969f <ff_h264_alloc_tables+0x414>\n    969f:\t48 89 c2             \tmov    %rax,%rdx\n    96a2:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    96a7:\t48 89 90 38 1b 00 00 \tmov    %rdx,0x1b38(%rax)\n    96ae:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    96b3:\t48 8b 80 38 1b 00 00 \tmov    0x1b38(%rax),%rax\n    96ba:\t48 85 c0             \ttest   %rax,%rax\n    96bd:\t75 33                \tjne    96f2 <ff_h264_alloc_tables+0x467>\n    96bf:\t8b 44 24 20          \tmov    0x20(%rsp),%eax\n    96c3:\t48 98                \tcltq   \n    96c5:\t48 c1 e0 02          \tshl    $0x2,%rax\n    96c9:\t48 85 c0             \ttest   %rax,%rax\n    96cc:\t74 24                \tje     96f2 <ff_h264_alloc_tables+0x467>\n    96ce:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    96d3:\t48 8b 00             \tmov    (%rax),%rax\n    96d6:\tba 00 00 00 00       \tmov    $0x0,%edx\n    96db:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    96e0:\t48 89 c7             \tmov    %rax,%rdi\n    96e3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    96e8:\te8 00 00 00 00       \tcall   96ed <ff_h264_alloc_tables+0x462>\n    96ed:\te9 fa 01 00 00       \tjmp    98ec <ff_h264_alloc_tables+0x661>\n    96f2:\t8b 44 24 20          \tmov    0x20(%rsp),%eax\n    96f6:\t48 98                \tcltq   \n    96f8:\t48 c1 e0 02          \tshl    $0x2,%rax\n    96fc:\t48 89 c7             \tmov    %rax,%rdi\n    96ff:\te8 00 00 00 00       \tcall   9704 <ff_h264_alloc_tables+0x479>\n    9704:\t48 89 c2             \tmov    %rax,%rdx\n    9707:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    970c:\t48 89 90 40 1b 00 00 \tmov    %rdx,0x1b40(%rax)\n    9713:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9718:\t48 8b 80 40 1b 00 00 \tmov    0x1b40(%rax),%rax\n    971f:\t48 85 c0             \ttest   %rax,%rax\n    9722:\t75 33                \tjne    9757 <ff_h264_alloc_tables+0x4cc>\n    9724:\t8b 44 24 20          \tmov    0x20(%rsp),%eax\n    9728:\t48 98                \tcltq   \n    972a:\t48 c1 e0 02          \tshl    $0x2,%rax\n    972e:\t48 85 c0             \ttest   %rax,%rax\n    9731:\t74 24                \tje     9757 <ff_h264_alloc_tables+0x4cc>\n    9733:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9738:\t48 8b 00             \tmov    (%rax),%rax\n    973b:\tba 00 00 00 00       \tmov    $0x0,%edx\n    9740:\tbe 10 00 00 00       \tmov    $0x10,%esi\n    9745:\t48 89 c7             \tmov    %rax,%rdi\n    9748:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    974d:\te8 00 00 00 00       \tcall   9752 <ff_h264_alloc_tables+0x4c7>\n    9752:\te9 95 01 00 00       \tjmp    98ec <ff_h264_alloc_tables+0x661>\n    9757:\tc7 44 24 28 00 00 00 \tmovl   $0x0,0x28(%rsp)\n    975e:\t00 \n    975f:\te9 c3 00 00 00       \tjmp    9827 <ff_h264_alloc_tables+0x59c>\n    9764:\tc7 44 24 2c 00 00 00 \tmovl   $0x0,0x2c(%rsp)\n    976b:\t00 \n    976c:\te9 9c 00 00 00       \tjmp    980d <ff_h264_alloc_tables+0x582>\n    9771:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9776:\t8b 80 a0 cb 06 00    \tmov    0x6cba0(%rax),%eax\n    977c:\t0f af 44 24 28       \timul   0x28(%rsp),%eax\n    9781:\t89 c2                \tmov    %eax,%edx\n    9783:\t8b 44 24 2c          \tmov    0x2c(%rsp),%eax\n    9787:\t01 d0                \tadd    %edx,%eax\n    9789:\t89 44 24 18          \tmov    %eax,0x18(%rsp)\n    978d:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9792:\t8b 80 48 1b 00 00    \tmov    0x1b48(%rax),%eax\n    9798:\t0f af 44 24 28       \timul   0x28(%rsp),%eax\n    979d:\t89 c2                \tmov    %eax,%edx\n    979f:\t8b 44 24 2c          \tmov    0x2c(%rsp),%eax\n    97a3:\t01 d0                \tadd    %edx,%eax\n    97a5:\tc1 e0 02             \tshl    $0x2,%eax\n    97a8:\t89 44 24 14          \tmov    %eax,0x14(%rsp)\n    97ac:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    97b1:\t48 8b 80 38 1b 00 00 \tmov    0x1b38(%rax),%rax\n    97b8:\t8b 54 24 18          \tmov    0x18(%rsp),%edx\n    97bc:\t48 63 d2             \tmovslq %edx,%rdx\n    97bf:\t48 c1 e2 02          \tshl    $0x2,%rdx\n    97c3:\t48 01 c2             \tadd    %rax,%rdx\n    97c6:\t8b 44 24 14          \tmov    0x14(%rsp),%eax\n    97ca:\t89 02                \tmov    %eax,(%rdx)\n    97cc:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    97d1:\t8b 80 a0 cb 06 00    \tmov    0x6cba0(%rax),%eax\n    97d7:\t8d 0c 00             \tlea    (%rax,%rax,1),%ecx\n    97da:\t8b 44 24 18          \tmov    0x18(%rsp),%eax\n    97de:\t99                   \tcltd   \n    97df:\tf7 f9                \tidiv   %ecx\n    97e1:\t89 d0                \tmov    %edx,%eax\n    97e3:\t8d 0c c5 00 00 00 00 \tlea    0x0(,%rax,8),%ecx\n    97ea:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    97ef:\t48 8b 80 40 1b 00 00 \tmov    0x1b40(%rax),%rax\n    97f6:\t8b 54 24 18          \tmov    0x18(%rsp),%edx\n    97fa:\t48 63 d2             \tmovslq %edx,%rdx\n    97fd:\t48 c1 e2 02          \tshl    $0x2,%rdx\n    9801:\t48 01 d0             \tadd    %rdx,%rax\n    9804:\t89 ca                \tmov    %ecx,%edx\n    9806:\t89 10                \tmov    %edx,(%rax)\n    9808:\t83 44 24 2c 01       \taddl   $0x1,0x2c(%rsp)\n    980d:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9812:\t8b 80 9c cb 06 00    \tmov    0x6cb9c(%rax),%eax\n    9818:\t39 44 24 2c          \tcmp    %eax,0x2c(%rsp)\n    981c:\t0f 8c 4f ff ff ff    \tjl     9771 <ff_h264_alloc_tables+0x4e6>\n    9822:\t83 44 24 28 01       \taddl   $0x1,0x28(%rsp)\n    9827:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    982c:\t8b 80 98 cb 06 00    \tmov    0x6cb98(%rax),%eax\n    9832:\t39 44 24 28          \tcmp    %eax,0x28(%rsp)\n    9836:\t0f 8c 28 ff ff ff    \tjl     9764 <ff_h264_alloc_tables+0x4d9>\n    983c:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9841:\t48 8b 80 f8 b6 02 00 \tmov    0x2b6f8(%rax),%rax\n    9848:\t48 85 c0             \ttest   %rax,%rax\n    984b:\t75 0d                \tjne    985a <ff_h264_alloc_tables+0x5cf>\n    984d:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    9852:\t48 89 c7             \tmov    %rax,%rdi\n    9855:\te8 00 00 00 00       \tcall   985a <ff_h264_alloc_tables+0x5cf>\n    985a:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    985f:\t48 8b 80 70 0b 00 00 \tmov    0xb70(%rax),%rax\n    9866:\t48 85 c0             \ttest   %rax,%rax\n    9869:\t75 79                \tjne    98e4 <ff_h264_alloc_tables+0x659>\n    986b:\tbe 60 09 00 00       \tmov    $0x960,%esi\n    9870:\tbf 24 00 00 00       \tmov    $0x24,%edi\n    9875:\te8 86 67 ff ff       \tcall   0 <av_mallocz_array>\n    987a:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n    987f:\t48 89 82 70 0b 00 00 \tmov    %rax,0xb70(%rdx)\n    9886:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    988b:\t48 8b 80 70 0b 00 00 \tmov    0xb70(%rax),%rax\n    9892:\t48 85 c0             \ttest   %rax,%rax\n    9895:\t74 54                \tje     98eb <ff_h264_alloc_tables+0x660>\n    9897:\tc7 44 24 24 00 00 00 \tmovl   $0x0,0x24(%rsp)\n    989e:\t00 \n    989f:\teb 29                \tjmp    98ca <ff_h264_alloc_tables+0x63f>\n    98a1:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    98a6:\t48 8b 90 70 0b 00 00 \tmov    0xb70(%rax),%rdx\n    98ad:\t8b 44 24 24          \tmov    0x24(%rsp),%eax\n    98b1:\t48 98                \tcltq   \n    98b3:\t48 69 c0 60 09 00 00 \timul   $0x960,%rax,%rax\n    98ba:\t48 01 d0             \tadd    %rdx,%rax\n    98bd:\t48 89 c7             \tmov    %rax,%rdi\n    98c0:\te8 00 00 00 00       \tcall   98c5 <ff_h264_alloc_tables+0x63a>\n    98c5:\t83 44 24 24 01       \taddl   $0x1,0x24(%rsp)\n    98ca:\t83 7c 24 24 23       \tcmpl   $0x23,0x24(%rsp)\n    98cf:\t7e d0                \tjle    98a1 <ff_h264_alloc_tables+0x616>\n    98d1:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    98d6:\t48 05 80 0b 00 00    \tadd    $0xb80,%rax\n    98dc:\t48 89 c7             \tmov    %rax,%rdi\n    98df:\te8 00 00 00 00       \tcall   98e4 <ff_h264_alloc_tables+0x659>\n    98e4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    98e9:\teb 18                \tjmp    9903 <ff_h264_alloc_tables+0x678>\n    98eb:\t90                   \tnop\n    98ec:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    98f1:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    98f6:\t48 89 c7             \tmov    %rax,%rdi\n    98f9:\te8 00 00 00 00       \tcall   98fe <ff_h264_alloc_tables+0x673>\n    98fe:\tb8 f4 ff ff ff       \tmov    $0xfffffff4,%eax\n    9903:\t48 83 c4 38          \tadd    $0x38,%rsp\n    9907:\tc3                   \tret    ", "code_s": "undefined8 ff_h264_alloc_tables(long *<span class=\"supfact\">param_1</span>) {\n  int iVar1;\n  int iVar2;\n  long <span class=\"supfact\">lVar3</span>;\n  int <span class=\"supfact\">local_14</span>;\n  int <span class=\"supfact\">local_10</span>;\n  int <span class=\"supfact\">local_c</span>;\n  iVar1 = (*(int *)(<span class=\"supfact\">param_1</span> + Number) + Number) *\n          *(int *)(<span class=\"supfact\">param_1</span> + Number);\n  iVar2 = *(int *)(*<span class=\"supfact\">param_1</span> + Number);\n  if (iVar2 & lt; Number) {\n    iVar2 = Number;\n  }\n  iVar2 = iVar2 * *(int *)(<span class=\"supfact\">param_1</span> + Number) * Number;\n  <span class=\"supfact\">lVar3</span> = FUN_00100000((long)iVar2, Number);\n  <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">lVar3</span>;\n  if (<span class=\"supfact\">param_1</span>[Number] == Number) {\n    av_log(*<span class=\"supfact\">param_1</span>, Number, String);\n  } else {\n    <span class=\"supfact\">lVar3</span> = av_mallocz((long)(iVar1 * Number));\n    <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">lVar3</span>;\n    if ((<span class=\"supfact\">param_1</span>[Number] == Number) & amp; &amp;\n        (iVar1 != Number)) {\n      av_log(*<span class=\"supfact\">param_1</span>, Number, String);\n    } else {\n      <span class=\"supfact\">lVar3</span> = av_mallocz(\n          (long)(iVar1 + *(int *)(<span class=\"supfact\">param_1</span> + Number)) * Number);\n      <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">lVar3</span>;\n      if ((<span class=\"supfact\">param_1</span>[Number] == Number) & amp; &amp;\n          (((long)(iVar1 + *(int *)(<span class=\"supfact\">param_1</span> + Number)) & amp;\n            Number) != Number)) {\n        av_log(*<span class=\"supfact\">param_1</span>, Number, String);\n      } else {\n        <span class=\"supfact\">lVar3</span> = av_mallocz((long)iVar1 * Number);\n        <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">lVar3</span>;\n        if ((<span class=\"supfact\">param_1</span>[Number] == Number) & amp; &amp;\n            (((long)iVar1 & amp; Number) != Number)) {\n          av_log(*<span class=\"supfact\">param_1</span>, Number, String);\n        } else {\n          <span class=\"supfact\">lVar3</span> = av_mallocz((long)iVar1);\n          <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">lVar3</span>;\n          if ((<span class=\"supfact\">param_1</span>[Number] == Number) & amp; &amp;\n              (iVar1 != Number)) {\n            av_log(*<span class=\"supfact\">param_1</span>, Number, String);\n          } else {\n            <span class=\"supfact\">lVar3</span> = FUN_00100000((long)iVar2, Number);\n            <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">lVar3</span>;\n            if (<span class=\"supfact\">param_1</span>[Number] == Number) {\n              av_log(*<span class=\"supfact\">param_1</span>, Number, String);\n            } else {\n              <span class=\"supfact\">lVar3</span> = FUN_00100000((long)iVar2, Number);\n              <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">lVar3</span>;\n              if (<span class=\"supfact\">param_1</span>[Number] == Number) {\n                av_log(*<span class=\"supfact\">param_1</span>, Number, String);\n              } else {\n                <span class=\"supfact\">lVar3</span> = av_mallocz((long)(iVar1 * Number));\n                <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">lVar3</span>;\n                if ((<span class=\"supfact\">param_1</span>[Number] == Number) & amp; &amp;\n                    (iVar1 != Number)) {\n                  av_log(*<span class=\"supfact\">param_1</span>, Number, String);\n                } else {\n                  <span class=\"supfact\">lVar3</span> = av_mallocz((long)iVar1);\n                  <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">lVar3</span>;\n                  if ((<span class=\"supfact\">param_1</span>[Number] == Number) & amp; &amp;\n                      (iVar1 != Number)) {\n                    av_log(*<span class=\"supfact\">param_1</span>, Number, String);\n                  } else {\n                    memset((void *)<span class=\"supfact\">param_1</span>[Number], -Number,\n                           (long)(iVar1 +\n                                  *(int *)(<span class=\"supfact\">param_1</span> + Number)) *\n                               Number);\n                    <span class=\"supfact\">param_1</span>[Number] =\n                        <span class=\"supfact\">param_1</span>[Number] +\n                        ((long)(*(int *)(<span class=\"supfact\">param_1</span> + Number) *\n                                Number) +\n                         Number) *\n                            Number;\n                    <span class=\"supfact\">lVar3</span> =\n                        av_mallocz((long)iVar1 & lt; &lt; Number);\n                    <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">lVar3</span>;\n                    if ((<span class=\"supfact\">param_1</span>[Number] == Number) & amp; &amp;\n                        (((long)iVar1 & amp; Number) != Number)) {\n                      av_log(*<span class=\"supfact\">param_1</span>, Number, String);\n                    } else {\n                      <span class=\"supfact\">lVar3</span> =\n                          av_mallocz((long)iVar1 & lt; &lt; Number);\n                      <span class=\"supfact\">param_1</span>[Number] = <span class=\"supfact\">lVar3</span>;\n                      if ((<span class=\"supfact\">param_1</span>[Number] != Number) ||\n                          (((long)iVar1 & amp; Number) == Number)) {\n                        for (<span class=\"supfact\">local_10</span> = Number;\n                             <span class=\"supfact\">local_10</span> & lt;\n                             *(int *)(<span class=\"supfact\">param_1</span> + Number);\n                             <span class=\"supfact\">local_10</span> =\n                                 <span class=\"supfact\">local_10</span> + Number) {\n                          for (<span class=\"supfact\">local_c</span> = Number;\n                               <span class=\"supfact\">local_c</span> & lt;\n                               *(int *)((long)<span class=\"supfact\">param_1</span> + Number);\n                               <span class=\"supfact\">local_c</span> =\n                                   <span class=\"supfact\">local_c</span> + Number) {\n                            iVar2 = <span class=\"supfact\">local_c</span> +\n                                    *(int *)(<span class=\"supfact\">param_1</span> + Number) *\n                                        <span class=\"supfact\">local_10</span>;\n                            *(int *)((long)iVar2 * Number +\n                                     <span class=\"supfact\">param_1</span>[Number]) =\n                                (<span class=\"supfact\">local_c</span> +\n                                 *(int *)(<span class=\"supfact\">param_1</span> + Number) *\n                                     <span class=\"supfact\">local_10</span>) *\n                                Number;\n                            *(int *)(<span class=\"supfact\">param_1</span>[Number] +\n                                     (long)iVar2 * Number) =\n                                (iVar2 %\n                                 (*(int *)(<span class=\"supfact\">param_1</span> + Number) *\n                                  Number)) *\n                                Number;\n                          }\n                        }\n                        if (<span class=\"supfact\">param_1</span>[Number] == Number) {\n                          h264_init_dequant_tables(<span class=\"supfact\">param_1</span>);\n                        }\n                        if (<span class=\"supfact\">param_1</span>[Number] == Number) {\n                          <span class=\"supfact\">lVar3</span> = FUN_00100000(Number, Number);\n                          <span class=\"supfact\">param_1</span>[Number] =\n                              <span class=\"supfact\">lVar3</span>;\n                          if (<span class=\"supfact\">param_1</span>[Number] == Number)\n                            goto LAB_001098ec;\n                          for (<span class=\"supfact\">local_14</span> = Number;\n                               <span class=\"supfact\">local_14</span> & lt; Number;\n                               <span class=\"supfact\">local_14</span> =\n                                   <span class=\"supfact\">local_14</span> + Number) {\n                            av_frame_unref((long)<span class=\"supfact\">local_14</span> *\n                                               Number +\n                                           <span class=\"supfact\">param_1</span>[Number]);\n                          }\n                          av_frame_unref(<span class=\"supfact\">param_1</span> + Number);\n                        }\n                        return Number;\n                      }\n                      av_log(*<span class=\"supfact\">param_1</span>, Number, String);\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\nLAB_001098ec:\n  ff_h264_free_tables(<span class=\"supfact\">param_1</span>, Number);\n  return Number;\n}", "code_t": "int ff_h264_alloc_tables(H264Context *<span class=\"supfact\">h</span>) {\n  int iVar1;\n  int iVar2;\n  int8_t *piVar3;\n  uint8_t(*pauVar4)[Number];\n  uint16_t *puVar5;\n  uint8_t *puVar6;\n  uint8_t(*pauVar7)[Number];\n  uint32_t *puVar8;\n  H264Picture *pHVar9;\n  H264Context *<span class=\"supfact\">h</span> - local;\n  int b_xy;\n  int mb_xy;\n  int row_mb_num;\n  int big_mb_num;\n  int <span class=\"supfact\">i</span>;\n  int <span class=\"supfact\">y</span>;\n  int <span class=\"supfact\">x</span>;\n  iVar1 =\n      (<span class=\"supfact\">h</span> - &gt; mb_height + Number) * <span class=\"supfact\">h</span> - &gt;\n  mb_stride;\n  iVar2 = <span class=\"supfact\">h</span> - &gt;\n  avctx - &gt;\n  thread_count;\n  if (iVar2 & lt; Number) {\n    iVar2 = Number;\n  }\n  iVar2 = iVar2 * <span class=\"supfact\">h</span> - &gt;\n  mb_stride *Number;\n  piVar3 = (int8_t *)av_mallocz_array((long)iVar2, Number);\n  <span class=\"supfact\">h</span> - &gt;\n  intra4x4_pred_mode = piVar3;\n  if (<span class=\"supfact\">h</span> - &gt; intra4x4_pred_mode == (int8_t *)Number) {\n    av_log(<span class=\"supfact\">h</span> - &gt; avctx, Number, String);\n  } else {\n    pauVar4 = (uint8_t(*)[Number])av_mallocz((long)(iVar1 * Number));\n    <span class=\"supfact\">h</span> - &gt;\n    non_zero_count = pauVar4;\n    if ((<span class=\"supfact\">h</span> - &gt;\n         non_zero_count == (uint8_t(*)[Number])Number) &\n            amp;\n        &amp; (iVar1 != Number)) {\n      av_log(<span class=\"supfact\">h</span> - &gt; avctx, Number, String);\n    } else {\n      puVar5 = (uint16_t *)av_mallocz(\n          (long)(iVar1 + <span class=\"supfact\">h</span> - &gt; mb_stride) * Number);\n      <span class=\"supfact\">h</span> - &gt;\n      slice_table_base = puVar5;\n      if ((<span class=\"supfact\">h</span> - &gt; slice_table_base == (uint16_t *)Number) &\n              amp;\n          &amp; (((long)(iVar1 + <span class=\"supfact\">h</span> - &gt; mb_stride) & amp;\n                  Number) != Number)) {\n        av_log(<span class=\"supfact\">h</span> - &gt; avctx, Number, String);\n      } else {\n        puVar5 = (uint16_t *)av_mallocz((long)iVar1 * Number);\n        <span class=\"supfact\">h</span> - &gt;\n        cbp_table = puVar5;\n        if ((<span class=\"supfact\">h</span> - &gt; cbp_table == (uint16_t *)Number) & amp;\n            &amp; (((long)iVar1 & amp; Number) != Number)) {\n          av_log(<span class=\"supfact\">h</span> - &gt; avctx, Number, String);\n        } else {\n          puVar6 = (uint8_t *)av_mallocz((long)iVar1);\n          <span class=\"supfact\">h</span> - &gt;\n          chroma_pred_mode_table = puVar6;\n          if ((<span class=\"supfact\">h</span> - &gt;\n               chroma_pred_mode_table == (uint8_t *)Number) &\n                  amp;\n              &amp; (iVar1 != Number)) {\n            av_log(<span class=\"supfact\">h</span> - &gt; avctx, Number, String);\n          } else {\n            pauVar7 = (uint8_t(*)[Number])av_mallocz_array((long)iVar2, Number);\n            <span class=\"supfact\">h</span> - &gt;\n            mvd_table[Number] = pauVar7;\n            if (<span class=\"supfact\">h</span> - &gt;\n                mvd_table[Number] == (uint8_t(*)[Number])Number) {\n              av_log(<span class=\"supfact\">h</span> - &gt; avctx, Number, String);\n            } else {\n              pauVar7 =\n                  (uint8_t(*)[Number])av_mallocz_array((long)iVar2, Number);\n              <span class=\"supfact\">h</span> - &gt;\n              mvd_table[Number] = pauVar7;\n              if (<span class=\"supfact\">h</span> - &gt;\n                  mvd_table[Number] == (uint8_t(*)[Number])Number) {\n                av_log(<span class=\"supfact\">h</span> - &gt; avctx, Number, String);\n              } else {\n                puVar6 = (uint8_t *)av_mallocz((long)(iVar1 * Number));\n                <span class=\"supfact\">h</span> - &gt;\n                direct_table = puVar6;\n                if ((<span class=\"supfact\">h</span> - &gt;\n                     direct_table == (uint8_t *)Number) &\n                        amp;\n                    &amp; (iVar1 != Number)) {\n                  av_log(<span class=\"supfact\">h</span> - &gt; avctx, Number, String);\n                } else {\n                  puVar6 = (uint8_t *)av_mallocz((long)iVar1);\n                  <span class=\"supfact\">h</span> - &gt;\n                  list_counts = puVar6;\n                  if ((<span class=\"supfact\">h</span> - &gt;\n                       list_counts == (uint8_t *)Number) &\n                          amp;\n                      &amp; (iVar1 != Number)) {\n                    av_log(<span class=\"supfact\">h</span> - &gt; avctx, Number, String);\n                  } else {\n                    memset(<span class=\"supfact\">h</span> - &gt;\n                           slice_table_base, -Number,\n                           (long)(iVar1 + <span class=\"supfact\">h</span> - &gt; mb_stride) *\n                               Number);\n                    <span class=\"supfact\">h</span> - &gt;\n                    slice_table = <span class=\"supfact\">h</span> - &gt;\n                    slice_table_base +\n                        (long)(<span class=\"supfact\">h</span> - &gt; mb_stride * Number) +\n                        Number;\n                    puVar8 =\n                        (uint32_t *)av_mallocz((long)iVar1 & lt; &lt; Number);\n                    <span class=\"supfact\">h</span> - &gt;\n                    mb2b_xy = puVar8;\n                    if ((<span class=\"supfact\">h</span> - &gt;\n                         mb2b_xy == (uint32_t *)Number) &\n                            amp;\n                        &amp; (((long)iVar1 & amp; Number) != Number)) {\n                      av_log(<span class=\"supfact\">h</span> - &gt; avctx, Number, String);\n                    } else {\n                      puVar8 =\n                          (uint32_t *)av_mallocz((long)iVar1 & lt; &lt; Number);\n                      <span class=\"supfact\">h</span> - &gt;\n                      mb2br_xy = puVar8;\n                      if ((<span class=\"supfact\">h</span> - &gt;\n                           mb2br_xy != (uint32_t *)Number) ||\n                          (((long)iVar1 & amp; Number) == Number)) {\n                        for (<span class=\"supfact\">y</span> = Number; <span class=\"supfact\">y</span> & lt;\n                             <span class=\"supfact\">h</span> - &gt; mb_height;\n                             <span class=\"supfact\">y</span> = <span class=\"supfact\">y</span> + Number) {\n                          for (<span class=\"supfact\">x</span> = Number;\n                               <span class=\"supfact\">x</span> & lt; <span class=\"supfact\">h</span> - &gt;\n                               mb_width;\n                               <span class=\"supfact\">x</span> = <span class=\"supfact\">x</span> + Number) {\n                            iVar2 = <span class=\"supfact\">x</span> + <span class=\"supfact\">h</span> - &gt;\n                            mb_stride *<span class=\"supfact\">y</span>;\n                            <span class=\"supfact\">h</span> - &gt;\n                            mb2b_xy[iVar2] =\n                                (<span class=\"supfact\">x</span> + <span class=\"supfact\">h</span> - &gt;\n                                 b_stride * <span class=\"supfact\">y</span>) *\n                                Number;\n                            <span class=\"supfact\">h</span> - &gt;\n                            mb2br_xy[iVar2] = (iVar2 % (<span class=\"supfact\">h</span> - &gt;\n                                                        mb_stride * Number)) *\n                                              Number;\n                          }\n                        }\n                        if (<span class=\"supfact\">h</span> - &gt;\n                            dequant4_coeff[Number] ==\n                            (uint32_t(*)[Number])Number) {\n                          h264_init_dequant_tables(<span class=\"supfact\">h</span>);\n                        }\n                        if (<span class=\"supfact\">h</span> - &gt;\n                            DPB == (H264Picture *)Number) {\n                          pHVar9 =\n                              (H264Picture *)av_mallocz_array(Number, Number);\n                          <span class=\"supfact\">h</span> - &gt;\n                          DPB = pHVar9;\n                          if (<span class=\"supfact\">h</span> - &gt;\n                              DPB == (H264Picture *)Number)\n                            goto fail;\n                          for (<span class=\"supfact\">i</span> = Number;\n                               <span class=\"supfact\">i</span> & lt; Number;\n                               <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n                            av_frame_unref(<span class=\"supfact\">h</span> - &gt;\n                                           DPB + <span class=\"supfact\">i</span>);\n                          }\n                          av_frame_unref(&amp; <span class=\"supfact\">h</span> - &gt;\n                                         cur_pic);\n                        }\n                        return Number;\n                      }\n                      av_log(<span class=\"supfact\">h</span> - &gt; avctx, Number, String);\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\nfail:\n  ff_h264_free_tables(<span class=\"supfact\">h</span>, Number);\n  return -Number;\n}", "var": [{"name": "param_1", "type": "H264Context * *", "pred_name": "h", "ref_name": "h", "ref_type": "H264Context * *"}, {"name": "lVar3", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_14", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}, {"name": "local_10", "type": "int", "pred_name": "y", "ref_name": "y", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "x", "ref_name": "x", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "mZer0ne", "repo_name": "vak-opensource", "path": "mZer0ne/vak-opensource/ed7661dd69ebcd95cb331872b21e22d068645a6be08b5e6e5b215bd00f1551c7", "path_in_repo": "mZer0ne/vak-opensource/utilities/ufstool/utils/fsdb", "objdump": "000000000040565a <_time_to_time64>:\n  40565a:\t55                   \tpush   %rbp\n  40565b:\t48 89 e5             \tmov    %rsp,%rbp\n  40565e:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  405662:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  405666:\t5d                   \tpop    %rbp\n  405667:\tc3                   \tret    ", "code_s": "undefined8 _time_to_time64(undefined8 <span class=\"supfact\">param_1</span>) {\n  return <span class=\"supfact\">param_1</span>;\n}", "code_t": "__int64_t _time_to_time64(time_t <span class=\"supfact\">t</span>) {\n  time_t <span class=\"supfact\">t</span> - local;\n  return <span class=\"supfact\">t</span>;\n}", "var": [{"name": "param_1", "type": "QEMUFile * *", "pred_name": "f", "ref_name": "t", "ref_type": "time_t"}], "body_in_train": false}, {"repo_owner": "Huawei-msm8937", "repo_name": "android_kernel_huawei_msm8937", "path": "Huawei-msm8937/android_kernel_huawei_msm8937/0c5f15cbc99f2b01213762bc9ef3a9be0bf6d90795fdb8e000c72242171e20cb", "path_in_repo": "Huawei-msm8937/android_kernel_huawei_msm8937/tools/lib/traceevent/libtraceevent.so", "objdump": "0000000000010fe7 <traceevent_print_plugins>:\n   10fe7:\t55                   \tpush   %rbp\n   10fe8:\t48 89 e5             \tmov    %rsp,%rbp\n   10feb:\t48 83 ec 20          \tsub    $0x20,%rsp\n   10fef:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n   10ff3:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n   10ff7:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n   10ffb:\t48 89 4d e0          \tmov    %rcx,-0x20(%rbp)\n   10fff:\teb 36                \tjmp    11037 <traceevent_print_plugins+0x50>\n   11001:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   11005:\t48 8b 48 08          \tmov    0x8(%rax),%rcx\n   11009:\t48 8b 75 e8          \tmov    -0x18(%rbp),%rsi\n   1100d:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n   11011:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n   11015:\t49 89 f0             \tmov    %rsi,%r8\n   11018:\t48 8d 35 07 89 00 00 \tlea    0x8907(%rip),%rsi        # 19926 <__func__.5437+0x2e>\n   1101f:\t48 89 c7             \tmov    %rax,%rdi\n   11022:\tb8 00 00 00 00       \tmov    $0x0,%eax\n   11027:\te8 64 31 ff ff       \tcall   4190 <trace_seq_printf@plt>\n   1102c:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n   11030:\t48 8b 00             \tmov    (%rax),%rax\n   11033:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n   11037:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n   1103c:\t75 c3                \tjne    11001 <traceevent_print_plugins+0x1a>\n   1103e:\t90                   \tnop\n   1103f:\t90                   \tnop\n   11040:\tc9                   \tleave  \n   11041:\tc3                   \tret    ", "code_s": "void traceevent_print_plugins(undefined8 <span class=\"supfact\">param_1</span>,\n                              undefined8 <span class=\"supfact\">param_2</span>,\n                              undefined8 <span class=\"supfact\">param_3</span>,\n                              undefined8 *<span class=\"supfact\">param_4</span>) {\n  undefined8 *<span class=\"supfact\">local_28</span>;\n  for (<span class=\"supfact\">local_28</span> = <span class=\"supfact\">param_4</span>;\n       <span class=\"supfact\">local_28</span> != (undefined8 *)Number;\n       <span class=\"supfact\">local_28</span> = (undefined8 *)*<span class=\"supfact\">local_28</span>) {\n    trace_seq_printf(<span class=\"supfact\">param_1</span>, String, <span class=\"supfact\">param_2</span>,\n                     <span class=\"supfact\">local_28</span>[Number], <span class=\"supfact\">param_3</span>);\n  }\n  return;\n}", "code_t": "void traceevent_print_plugins(trace_seq *<span class=\"supfact\">s</span>,\n                              char *<span class=\"supfact\">prefix</span>,\n                              char *<span class=\"supfact\">suffix</span>,\n                              plugin_list *<span class=\"supfact\">list</span>) {\n  plugin_list *<span class=\"supfact\">list</span> - local;\n  char *<span class=\"supfact\">suffix</span> - local;\n  char *<span class=\"supfact\">prefix</span> - local;\n  trace_seq *<span class=\"supfact\">s</span> - local;\n  for (<span class=\"supfact\">list</span> - local = <span class=\"supfact\">list</span>;\n       <span class=\"supfact\">list</span> - local != (plugin_list *)Number;\n       <span class=\"supfact\">list</span> - local = <span class=\"supfact\">list</span> - local - &gt;\n       next) {\n    trace_seq_printf(<span class=\"supfact\">s</span>, String, <span class=\"supfact\">prefix</span>,\n                     <span class=\"supfact\">list</span> - local - &gt;\n                     name, <span class=\"supfact\">suffix</span>);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "trace_seq * *", "pred_name": "s", "ref_name": "s", "ref_type": "trace_seq * *"}, {"name": "param_2", "type": "char * *", "pred_name": "prefix", "ref_name": "prefix", "ref_type": "char * *"}, {"name": "param_3", "type": "char * *", "pred_name": "suffix", "ref_name": "suffix", "ref_type": "char * *"}, {"name": "param_4", "type": "plugin_list * *", "pred_name": "list", "ref_name": "list", "ref_type": "plugin_list * *"}, {"name": "local_28", "type": "plugin_list * *", "pred_name": "list-local", "ref_name": "list-local", "ref_type": "plugin_list * *"}], "body_in_train": true}, {"repo_owner": "webosose", "repo_name": "gst-libav", "path": "webosose/gst-libav/c7c39d9cc9f169072de8bc09a7fa0d974b9ed3e37314e65b26a2d02a48fb2def", "path_in_repo": "webosose/gst-libav/gst-libs/ext/libav/libavcodec/x86/hevcdsp_init.o", "objdump": "00000000000045a6 <ff_hevc_put_hevc_bi_qpel_v64_10_avx2>:\n    45a6:\t48 83 ec 58          \tsub    $0x58,%rsp\n    45aa:\t48 89 7c 24 28       \tmov    %rdi,0x28(%rsp)\n    45af:\t48 89 74 24 20       \tmov    %rsi,0x20(%rsp)\n    45b4:\t48 89 54 24 18       \tmov    %rdx,0x18(%rsp)\n    45b9:\t48 89 4c 24 10       \tmov    %rcx,0x10(%rsp)\n    45be:\t4c 89 44 24 08       \tmov    %r8,0x8(%rsp)\n    45c3:\t44 89 4c 24 04       \tmov    %r9d,0x4(%rsp)\n    45c8:\tc7 44 24 4c 00 00 00 \tmovl   $0x0,0x4c(%rsp)\n    45cf:\t00 \n    45d0:\te9 83 00 00 00       \tjmp    4658 <ff_hevc_put_hevc_bi_qpel_v64_10_avx2+0xb2>\n    45d5:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n    45d9:\t01 c0                \tadd    %eax,%eax\n    45db:\t48 63 d0             \tmovslq %eax,%rdx\n    45de:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    45e3:\t48 01 d0             \tadd    %rdx,%rax\n    45e6:\t48 89 44 24 40       \tmov    %rax,0x40(%rsp)\n    45eb:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n    45ef:\t01 c0                \tadd    %eax,%eax\n    45f1:\t48 63 d0             \tmovslq %eax,%rdx\n    45f4:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    45f9:\t48 01 d0             \tadd    %rdx,%rax\n    45fc:\t48 89 44 24 38       \tmov    %rax,0x38(%rsp)\n    4601:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n    4605:\t48 98                \tcltq   \n    4607:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n    460b:\t48 8b 44 24 08       \tmov    0x8(%rsp),%rax\n    4610:\t48 01 d0             \tadd    %rdx,%rax\n    4613:\t48 89 44 24 30       \tmov    %rax,0x30(%rsp)\n    4618:\t44 8b 4c 24 04       \tmov    0x4(%rsp),%r9d\n    461d:\t4c 8b 44 24 30       \tmov    0x30(%rsp),%r8\n    4622:\t48 8b 4c 24 10       \tmov    0x10(%rsp),%rcx\n    4627:\t48 8b 54 24 40       \tmov    0x40(%rsp),%rdx\n    462c:\t48 8b 74 24 20       \tmov    0x20(%rsp),%rsi\n    4631:\t48 8b 44 24 38       \tmov    0x38(%rsp),%rax\n    4636:\t48 83 ec 08          \tsub    $0x8,%rsp\n    463a:\t8b 7c 24 78          \tmov    0x78(%rsp),%edi\n    463e:\t57                   \tpush   %rdi\n    463f:\tff 74 24 78          \tpush   0x78(%rsp)\n    4643:\tff 74 24 78          \tpush   0x78(%rsp)\n    4647:\t48 89 c7             \tmov    %rax,%rdi\n    464a:\te8 00 00 00 00       \tcall   464f <ff_hevc_put_hevc_bi_qpel_v64_10_avx2+0xa9>\n    464f:\t48 83 c4 20          \tadd    $0x20,%rsp\n    4653:\t83 44 24 4c 20       \taddl   $0x20,0x4c(%rsp)\n    4658:\t83 7c 24 4c 3f       \tcmpl   $0x3f,0x4c(%rsp)\n    465d:\t0f 8e 72 ff ff ff    \tjle    45d5 <ff_hevc_put_hevc_bi_qpel_v64_10_avx2+0x2f>\n    4663:\t90                   \tnop\n    4664:\t90                   \tnop\n    4665:\t48 83 c4 58          \tadd    $0x58,%rsp\n    4669:\tc3                   \tret    ", "code_s": "void ff_hevc_put_hevc_bi_qpel_v64_10_avx2(\n    long <span class=\"supfact\">param_1</span>, undefined8 <span class=\"supfact\">param_2</span>,\n    long <span class=\"supfact\">param_3</span>, undefined8 <span class=\"supfact\">param_4</span>,\n    long <span class=\"supfact\">param_5</span>, undefined4 <span class=\"supfact\">param_6</span>,\n    undefined8 <span class=\"supfact\">param_7</span>, undefined8 <span class=\"supfact\">param_8</span>,\n    undefined4 <span class=\"supfact\">param_9</span>) {\n  int <span class=\"supfact\">local_c</span>;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt; Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    ff_hevc_put_hevc_bi_qpel_v32_10_avx2(\n        <span class=\"supfact\">param_1</span> + <span class=\"supfact\">local_c</span> * Number,\n        <span class=\"supfact\">param_2</span>,\n        <span class=\"supfact\">param_3</span> + <span class=\"supfact\">local_c</span> * Number,\n        <span class=\"supfact\">param_4</span>,\n        <span class=\"supfact\">param_5</span> + (long)<span class=\"supfact\">local_c</span> * Number,\n        <span class=\"supfact\">param_6</span>, <span class=\"supfact\">param_7</span>,\n        <span class=\"supfact\">param_8</span>, <span class=\"supfact\">param_9</span>);\n  }\n  return;\n}", "code_t": "void ff_hevc_put_hevc_bi_qpel_v64_10_avx2(\n    uint8_t *<span class=\"supfact\">_dst</span>, ptrdiff_t <span class=\"supfact\">dststride</span>,\n    uint8_t *<span class=\"supfact\">_src</span>, ptrdiff_t <span class=\"supfact\">_srcstride</span>,\n    int16_t *<span class=\"supfact\">_src2</span>, int <span class=\"supfact\">height</span>,\n    intptr_t <span class=\"supfact\">mx</span>, intptr_t <span class=\"supfact\">my</span>,\n    int <span class=\"supfact\">width</span>) {\n  int <span class=\"supfact\">height</span> - local;\n  int16_t *<span class=\"supfact\">_src2</span> - local;\n  ptrdiff_t <span class=\"supfact\">_srcstride</span> - local;\n  uint8_t *<span class=\"supfact\">_src</span> - local;\n  ptrdiff_t <span class=\"supfact\">dststride</span> - local;\n  uint8_t *<span class=\"supfact\">_dst</span> - local;\n  int16_t *src2;\n  uint8_t *dst;\n  uint8_t *src;\n  int <span class=\"supfact\">i</span>;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt; Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    ff_hevc_put_hevc_bi_qpel_v32_10_avx2(\n        <span class=\"supfact\">_dst</span> + <span class=\"supfact\">i</span> * Number,\n        <span class=\"supfact\">dststride</span>,\n        <span class=\"supfact\">_src</span> + <span class=\"supfact\">i</span> * Number,\n        <span class=\"supfact\">_srcstride</span>, <span class=\"supfact\">_src2</span> + <span class=\"supfact\">i</span>,\n        <span class=\"supfact\">height</span>, <span class=\"supfact\">mx</span>, <span class=\"supfact\">my</span>,\n        <span class=\"supfact\">width</span>);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "uint8_t * *", "pred_name": "_dst", "ref_name": "_dst", "ref_type": "uint8_t * *"}, {"name": "param_2", "type": "ptrdiff_t", "pred_name": "dststride", "ref_name": "dststride", "ref_type": "ptrdiff_t"}, {"name": "param_3", "type": "uint8_t * *", "pred_name": "_src", "ref_name": "_src", "ref_type": "uint8_t * *"}, {"name": "param_4", "type": "ptrdiff_t", "pred_name": "_srcstride", "ref_name": "_srcstride", "ref_type": "ptrdiff_t"}, {"name": "param_5", "type": "int16_t * *", "pred_name": "_src2", "ref_name": "_src2", "ref_type": "int16_t * *"}, {"name": "param_6", "type": "int", "pred_name": "height", "ref_name": "height", "ref_type": "int"}, {"name": "param_7", "type": "intptr_t", "pred_name": "mx", "ref_name": "mx", "ref_type": "intptr_t"}, {"name": "param_8", "type": "intptr_t", "pred_name": "my", "ref_name": "my", "ref_type": "intptr_t"}, {"name": "param_9", "type": "int", "pred_name": "width", "ref_name": "width", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "DougHamil", "repo_name": "OculusQ3", "path": "DougHamil/OculusQ3/5a8c948fb8208bee6a0dd1b9e37d4a10597cc4f0aacfd0c6461e8c4b4004882e", "path_in_repo": "DougHamil/OculusQ3//build/release-linux-x86_64/ded/be_ai_chat.o", "objdump": "0000000000006fa8 <BotShutdownChatAI>:\n    6fa8:\t48 83 ec 18          \tsub    $0x18,%rsp\n    6fac:\tc7 44 24 0c 00 00 00 \tmovl   $0x0,0xc(%rsp)\n    6fb3:\t00 \n    6fb4:\teb 23                \tjmp    6fd9 <BotShutdownChatAI+0x31>\n    6fb6:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    6fba:\t48 98                \tcltq   \n    6fbc:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    6fc3:\t00 \n    6fc4:\t48 85 c0             \ttest   %rax,%rax\n    6fc7:\t74 0b                \tje     6fd4 <BotShutdownChatAI+0x2c>\n    6fc9:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    6fcd:\t89 c7                \tmov    %eax,%edi\n    6fcf:\te8 00 00 00 00       \tcall   6fd4 <BotShutdownChatAI+0x2c>\n    6fd4:\t83 44 24 0c 01       \taddl   $0x1,0xc(%rsp)\n    6fd9:\t83 7c 24 0c 3f       \tcmpl   $0x3f,0xc(%rsp)\n    6fde:\t7e d6                \tjle    6fb6 <BotShutdownChatAI+0xe>\n    6fe0:\tc7 44 24 0c 00 00 00 \tmovl   $0x0,0xc(%rsp)\n    6fe7:\t00 \n    6fe8:\teb 59                \tjmp    7043 <BotShutdownChatAI+0x9b>\n    6fea:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    6fee:\t48 98                \tcltq   \n    6ff0:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    6ff7:\t00 \n    6ff8:\t48 85 c0             \ttest   %rax,%rax\n    6ffb:\t74 41                \tje     703e <BotShutdownChatAI+0x96>\n    6ffd:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    7001:\t48 98                \tcltq   \n    7003:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    700a:\t00 \n    700b:\t48 8b 00             \tmov    (%rax),%rax\n    700e:\t48 89 c7             \tmov    %rax,%rdi\n    7011:\te8 00 00 00 00       \tcall   7016 <BotShutdownChatAI+0x6e>\n    7016:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    701a:\t48 98                \tcltq   \n    701c:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    7023:\t00 \n    7024:\t48 89 c7             \tmov    %rax,%rdi\n    7027:\te8 00 00 00 00       \tcall   702c <BotShutdownChatAI+0x84>\n    702c:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    7030:\t48 98                \tcltq   \n    7032:\t48 c7 04 c5 00 00 00 \tmovq   $0x0,0x0(,%rax,8)\n    7039:\t00 00 00 00 00 \n    703e:\t83 44 24 0c 01       \taddl   $0x1,0xc(%rsp)\n    7043:\t83 7c 24 0c 3f       \tcmpl   $0x3f,0xc(%rsp)\n    7048:\t7e a0                \tjle    6fea <BotShutdownChatAI+0x42>\n    704a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7051 <BotShutdownChatAI+0xa9>\n    7051:\t48 85 c0             \ttest   %rax,%rax\n    7054:\t74 0f                \tje     7065 <BotShutdownChatAI+0xbd>\n    7056:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 705d <BotShutdownChatAI+0xb5>\n    705d:\t48 89 c7             \tmov    %rax,%rdi\n    7060:\te8 00 00 00 00       \tcall   7065 <BotShutdownChatAI+0xbd>\n    7065:\t48 c7 05 00 00 00 00 \tmovq   $0x0,0x0(%rip)        # 7070 <BotShutdownChatAI+0xc8>\n    706c:\t00 00 00 00 \n    7070:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7077 <BotShutdownChatAI+0xcf>\n    7077:\t48 85 c0             \ttest   %rax,%rax\n    707a:\t74 0f                \tje     708b <BotShutdownChatAI+0xe3>\n    707c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 7083 <BotShutdownChatAI+0xdb>\n    7083:\t48 89 c7             \tmov    %rax,%rdi\n    7086:\te8 00 00 00 00       \tcall   708b <BotShutdownChatAI+0xe3>\n    708b:\t48 c7 05 00 00 00 00 \tmovq   $0x0,0x0(%rip)        # 7096 <BotShutdownChatAI+0xee>\n    7092:\t00 00 00 00 \n    7096:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 709d <BotShutdownChatAI+0xf5>\n    709d:\t48 85 c0             \ttest   %rax,%rax\n    70a0:\t74 0f                \tje     70b1 <BotShutdownChatAI+0x109>\n    70a2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70a9 <BotShutdownChatAI+0x101>\n    70a9:\t48 89 c7             \tmov    %rax,%rdi\n    70ac:\te8 00 00 00 00       \tcall   70b1 <BotShutdownChatAI+0x109>\n    70b1:\t48 c7 05 00 00 00 00 \tmovq   $0x0,0x0(%rip)        # 70bc <BotShutdownChatAI+0x114>\n    70b8:\t00 00 00 00 \n    70bc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70c3 <BotShutdownChatAI+0x11b>\n    70c3:\t48 85 c0             \ttest   %rax,%rax\n    70c6:\t74 0f                \tje     70d7 <BotShutdownChatAI+0x12f>\n    70c8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70cf <BotShutdownChatAI+0x127>\n    70cf:\t48 89 c7             \tmov    %rax,%rdi\n    70d2:\te8 00 00 00 00       \tcall   70d7 <BotShutdownChatAI+0x12f>\n    70d7:\t48 c7 05 00 00 00 00 \tmovq   $0x0,0x0(%rip)        # 70e2 <BotShutdownChatAI+0x13a>\n    70de:\t00 00 00 00 \n    70e2:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70e9 <BotShutdownChatAI+0x141>\n    70e9:\t48 85 c0             \ttest   %rax,%rax\n    70ec:\t74 0f                \tje     70fd <BotShutdownChatAI+0x155>\n    70ee:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 70f5 <BotShutdownChatAI+0x14d>\n    70f5:\t48 89 c7             \tmov    %rax,%rdi\n    70f8:\te8 00 00 00 00       \tcall   70fd <BotShutdownChatAI+0x155>\n    70fd:\t48 c7 05 00 00 00 00 \tmovq   $0x0,0x0(%rip)        # 7108 <BotShutdownChatAI+0x160>\n    7104:\t00 00 00 00 \n    7108:\t90                   \tnop\n    7109:\t48 83 c4 18          \tadd    $0x18,%rsp\n    710d:\tc3                   \tret    \n", "code_s": "void BotShutdownChatAI(void) {\n  int <span class=\"supfact\">local_c</span>;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt; Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    if (*(long *)(botchatstates + (long)<span class=\"supfact\">local_c</span> * Number) !=\n        Number) {\n      BotFreeChatState(<span class=\"supfact\">local_c</span>);\n    }\n  }\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt; Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    if (*(long *)(ichatdata + (long)<span class=\"supfact\">local_c</span> * Number) !=\n        Number) {\n      FreeMemory(**(undefined8 **)(ichatdata +\n                                   (long)<span class=\"supfact\">local_c</span> * Number));\n      FreeMemory(\n          *(undefined8 *)(ichatdata + (long)<span class=\"supfact\">local_c</span> * Number));\n      *(undefined8 *)(ichatdata + (long)<span class=\"supfact\">local_c</span> * Number) =\n          Number;\n    }\n  }\n  if (consolemessageheap != Number) {\n    FreeMemory(consolemessageheap);\n  }\n  consolemessageheap = Number;\n  if (matchtemplates != Number) {\n    BotFreeMatchTemplates(matchtemplates);\n  }\n  matchtemplates = Number;\n  if (randomstrings != Number) {\n    FreeMemory(randomstrings);\n  }\n  randomstrings = Number;\n  if (synonyms != Number) {\n    FreeMemory(synonyms);\n  }\n  synonyms = Number;\n  if (replychats != Number) {\n    BotFreeReplyChat(replychats);\n  }\n  replychats = Number;\n  return;\n}", "code_t": "void BotShutdownChatAI(void) {\n  int <span class=\"supfact\">i</span>;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt; Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    if (botchatstates[<span class=\"supfact\">i</span>] != (bot_chatstate_t *)Number) {\n      BotFreeChatState(<span class=\"supfact\">i</span>);\n    }\n  }\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt; Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    if (ichatdata[<span class=\"supfact\">i</span>] != (bot_ichatdata_t *)Number) {\n      FreeMemory(ichatdata[<span class=\"supfact\">i</span>] - &gt; chat);\n      FreeMemory(ichatdata[<span class=\"supfact\">i</span>]);\n      ichatdata[<span class=\"supfact\">i</span>] = (bot_ichatdata_t *)Number;\n    }\n  }\n  if (consolemessageheap != (bot_consolemessage_t *)Number) {\n    FreeMemory(consolemessageheap);\n  }\n  consolemessageheap = (bot_consolemessage_t *)Number;\n  if (matchtemplates != (bot_matchtemplate_t *)Number) {\n    BotFreeMatchTemplates(matchtemplates);\n  }\n  matchtemplates = (bot_matchtemplate_t *)Number;\n  if (randomstrings != (bot_randomlist_t *)Number) {\n    FreeMemory(randomstrings);\n  }\n  randomstrings = (bot_randomlist_t *)Number;\n  if (synonyms != (bot_synonymlist_t *)Number) {\n    FreeMemory(synonyms);\n  }\n  synonyms = (bot_synonymlist_t *)Number;\n  if (replychats != (bot_replychat_t *)Number) {\n    BotFreeReplyChat(replychats);\n  }\n  replychats = (bot_replychat_t *)Number;\n  return;\n}", "var": [{"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "yash101", "repo_name": "DevServer", "path": "yash101/DevServer/9a7a4645707e5725a4fd7297fd36af61c375931561cbef2faf7a2a4a961fec8e", "path_in_repo": "yash101/DevServer/linux/CMAKE/src/dlib/test/max_sum_submatrix.o", "objdump": "", "code_s": "void __thiscall std exception exception(exception *<span class=\"supfact\">this</span>) {\n  *(code **)<span class=\"supfact\">this</span> = std __cxx11 basic_string & lt;\n  char, std char_traits &lt;\n  char &gt;\n  , std allocator &lt;\n  char &gt;\n  &gt;\n  basic_string;\n  return;\n}", "code_t": "void __thiscall std exception exception(exception *<span class=\"supfact\">this</span>) {\n  exception *<span class=\"supfact\">this</span> - local;\n  *(code **)<span class=\"supfact\">this</span> = std __cxx11 basic_string & lt;\n  char, std char_traits &lt;\n  char &gt;\n  , std allocator &lt;\n  char &gt;\n  &gt;\n  basic_string;\n  return;\n}", "var": [{"name": "this", "type": "exception * *", "pred_name": "this", "ref_name": "this", "ref_type": "exception * *"}], "body_in_train": true}, {"repo_owner": "slazav", "repo_name": "pico_osc", "path": "slazav/pico_osc/2fd4162226c9a3da5246f139935a11968b87e79f3e292d31a50f48ea43b0f043", "path_in_repo": "slazav/pico_osc/sig_filter/testsig_2decay", "objdump": "", "code_s": "void *operator.new(ulong param_1) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_operator.new_0042a178)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "code_t": "void *operator.new(ulong param_1) {\n  void *<span class=\"supfact\">pvVar1</span>;\n  <span class=\"supfact\">pvVar1</span> = (void *)(*(code *)PTR_operator.new_0042a178)();\n  return <span class=\"supfact\">pvVar1</span>;\n}", "var": [{"name": "pvVar1", "type": "void * *", "pred_name": "pvVar1", "ref_name": "pvVar1", "ref_type": "void * *"}], "body_in_train": false}, {"repo_owner": "balabit-deps", "repo_name": "balabit-os-7-autofs", "path": "balabit-deps/balabit-os-7-autofs/001a1d4e4dabce746674dc668c354f4d8ab4d27a85b32b4cc268cf19bb148a06", "path_in_repo": "balabit-deps/balabit-os-7-autofs/lib/defaults.o", "objdump": "0000000000002408 <defaults_read_config>:\n    2408:\t55                   \tpush   %rbp\n    2409:\t48 89 e5             \tmov    %rsp,%rbp\n    240c:\t48 81 ec 70 01 00 00 \tsub    $0x170,%rsp\n    2413:\t89 bd 9c fe ff ff    \tmov    %edi,-0x164(%rbp)\n    2419:\tc7 45 ec 01 00 00 00 \tmovl   $0x1,-0x14(%rbp)\n    2420:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n    2427:\t00 \n    2428:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    242c:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    2430:\te8 1e de ff ff       \tcall   253 <defaults_mutex_lock>\n    2435:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 243c <defaults_read_config+0x34>\n    243c:\t48 85 c0             \ttest   %rax,%rax\n    243f:\t75 2e                \tjne    246f <defaults_read_config+0x67>\n    2441:\te8 d3 df ff ff       \tcall   419 <conf_init>\n    2446:\t85 c0                \ttest   %eax,%eax\n    2448:\t74 25                \tje     246f <defaults_read_config+0x67>\n    244a:\t8b 85 9c fe ff ff    \tmov    -0x164(%rbp),%eax\n    2450:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 2457 <defaults_read_config+0x4f>\n    2457:\t89 c7                \tmov    %eax,%edi\n    2459:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    245e:\te8 ce de ff ff       \tcall   331 <message>\n    2463:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n    246a:\te9 ba 02 00 00       \tjmp    2729 <defaults_read_config+0x321>\n    246f:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 2476 <defaults_read_config+0x6e>\n    2476:\te8 4c dd ff ff       \tcall   1c7 <open_fopen_r>\n    247b:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    247f:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    2484:\t75 20                \tjne    24a6 <defaults_read_config+0x9e>\n    2486:\t8b 85 9c fe ff ff    \tmov    -0x164(%rbp),%eax\n    248c:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 2493 <defaults_read_config+0x8b>\n    2493:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 249a <defaults_read_config+0x92>\n    249a:\t89 c7                \tmov    %eax,%edi\n    249c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    24a1:\te8 8b de ff ff       \tcall   331 <message>\n    24a6:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 24ad <defaults_read_config+0xa5>\n    24ad:\te8 15 dd ff ff       \tcall   1c7 <open_fopen_r>\n    24b2:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    24b6:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    24bb:\t75 20                \tjne    24dd <defaults_read_config+0xd5>\n    24bd:\t8b 85 9c fe ff ff    \tmov    -0x164(%rbp),%eax\n    24c3:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 24ca <defaults_read_config+0xc2>\n    24ca:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 24d1 <defaults_read_config+0xc9>\n    24d1:\t89 c7                \tmov    %eax,%edi\n    24d3:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    24d8:\te8 54 de ff ff       \tcall   331 <message>\n    24dd:\tc7 45 e4 ff ff ff ff \tmovl   $0xffffffff,-0x1c(%rbp)\n    24e4:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n    24e7:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n    24ea:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    24ef:\t0f 84 9c 00 00 00    \tje     2591 <defaults_read_config+0x189>\n    24f5:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    24fa:\t0f 84 91 00 00 00    \tje     2591 <defaults_read_config+0x189>\n    2500:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2504:\t48 89 c7             \tmov    %rax,%rdi\n    2507:\te8 00 00 00 00       \tcall   250c <defaults_read_config+0x104>\n    250c:\t89 c2                \tmov    %eax,%edx\n    250e:\t48 8d 85 30 ff ff ff \tlea    -0xd0(%rbp),%rax\n    2515:\t48 89 c6             \tmov    %rax,%rsi\n    2518:\t89 d7                \tmov    %edx,%edi\n    251a:\te8 00 00 00 00       \tcall   251f <defaults_read_config+0x117>\n    251f:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    2522:\t0f 95 c0             \tsetne  %al\n    2525:\t0f b6 c0             \tmovzbl %al,%eax\n    2528:\t89 45 e8             \tmov    %eax,-0x18(%rbp)\n    252b:\t83 7d e8 00          \tcmpl   $0x0,-0x18(%rbp)\n    252f:\t74 60                \tje     2591 <defaults_read_config+0x189>\n    2531:\t48 8b 55 88          \tmov    -0x78(%rbp),%rdx\n    2535:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 253c <defaults_read_config+0x134>\n    253c:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2540:\t48 39 c2             \tcmp    %rax,%rdx\n    2543:\t7f 4c                \tjg     2591 <defaults_read_config+0x189>\n    2545:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    2549:\t48 89 c7             \tmov    %rax,%rdi\n    254c:\te8 00 00 00 00       \tcall   2551 <defaults_read_config+0x149>\n    2551:\t89 c2                \tmov    %eax,%edx\n    2553:\t48 8d 85 a0 fe ff ff \tlea    -0x160(%rbp),%rax\n    255a:\t48 89 c6             \tmov    %rax,%rsi\n    255d:\t89 d7                \tmov    %edx,%edi\n    255f:\te8 00 00 00 00       \tcall   2564 <defaults_read_config+0x15c>\n    2564:\t83 f8 ff             \tcmp    $0xffffffff,%eax\n    2567:\t0f 94 c0             \tsete   %al\n    256a:\t0f b6 c0             \tmovzbl %al,%eax\n    256d:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n    2570:\t83 7d e4 00          \tcmpl   $0x0,-0x1c(%rbp)\n    2574:\t74 1b                \tje     2591 <defaults_read_config+0x189>\n    2576:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n    257d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2584 <defaults_read_config+0x17c>\n    2584:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    2588:\t48 39 c2             \tcmp    %rax,%rdx\n    258b:\t0f 8e 94 01 00 00    \tjle    2725 <defaults_read_config+0x31d>\n    2591:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    2596:\t75 07                \tjne    259f <defaults_read_config+0x197>\n    2598:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    259d:\t74 1d                \tje     25bc <defaults_read_config+0x1b4>\n    259f:\t8b 85 9c fe ff ff    \tmov    -0x164(%rbp),%eax\n    25a5:\t89 c7                \tmov    %eax,%edi\n    25a7:\te8 f4 fd ff ff       \tcall   23a0 <reset_defaults>\n    25ac:\t85 c0                \ttest   %eax,%eax\n    25ae:\t75 0c                \tjne    25bc <defaults_read_config+0x1b4>\n    25b0:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n    25b7:\te9 6d 01 00 00       \tjmp    2729 <defaults_read_config+0x321>\n    25bc:\t83 7d e8 ff          \tcmpl   $0xffffffff,-0x18(%rbp)\n    25c0:\t74 4a                \tje     260c <defaults_read_config+0x204>\n    25c2:\t83 7d e4 ff          \tcmpl   $0xffffffff,-0x1c(%rbp)\n    25c6:\t75 11                \tjne    25d9 <defaults_read_config+0x1d1>\n    25c8:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 25cf <defaults_read_config+0x1c7>\n    25cf:\t48 8b 55 88          \tmov    -0x78(%rbp),%rdx\n    25d3:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n    25d7:\teb 33                \tjmp    260c <defaults_read_config+0x204>\n    25d9:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n    25e0:\t48 8b 45 88          \tmov    -0x78(%rbp),%rax\n    25e4:\t48 39 c2             \tcmp    %rax,%rdx\n    25e7:\t7d 14                \tjge    25fd <defaults_read_config+0x1f5>\n    25e9:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 25f0 <defaults_read_config+0x1e8>\n    25f0:\t48 8b 95 f8 fe ff ff \tmov    -0x108(%rbp),%rdx\n    25f7:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n    25fb:\teb 0f                \tjmp    260c <defaults_read_config+0x204>\n    25fd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2604 <defaults_read_config+0x1fc>\n    2604:\t48 8b 55 88          \tmov    -0x78(%rbp),%rdx\n    2608:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n    260c:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    2611:\t74 1b                \tje     262e <defaults_read_config+0x226>\n    2613:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n    2617:\t8b 85 9c fe ff ff    \tmov    -0x164(%rbp),%eax\n    261d:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 2624 <defaults_read_config+0x21c>\n    2624:\t48 89 ce             \tmov    %rcx,%rsi\n    2627:\t89 c7                \tmov    %eax,%edi\n    2629:\te8 bc f4 ff ff       \tcall   1aea <read_config>\n    262e:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    2633:\t0f 84 ef 00 00 00    \tje     2728 <defaults_read_config+0x320>\n    2639:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 2640 <defaults_read_config+0x238>\n    2640:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    2644:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 264b <defaults_read_config+0x243>\n    264b:\te8 00 00 00 00       \tcall   2650 <defaults_read_config+0x248>\n    2650:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    2654:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n    2659:\t74 0c                \tje     2667 <defaults_read_config+0x25f>\n    265b:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 2662 <defaults_read_config+0x25a>\n    2662:\te8 e5 fc ff ff       \tcall   234c <clean_ldap_multi_option>\n    2667:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 266e <defaults_read_config+0x266>\n    266e:\te8 00 00 00 00       \tcall   2673 <defaults_read_config+0x26b>\n    2673:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    2677:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n    267c:\t74 0c                \tje     268a <defaults_read_config+0x282>\n    267e:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # 2685 <defaults_read_config+0x27d>\n    2685:\te8 c2 fc ff ff       \tcall   234c <clean_ldap_multi_option>\n    268a:\t48 8b 4d f0          \tmov    -0x10(%rbp),%rcx\n    268e:\t8b 85 9c fe ff ff    \tmov    -0x164(%rbp),%eax\n    2694:\t48 8d 15 00 00 00 00 \tlea    0x0(%rip),%rdx        # 269b <defaults_read_config+0x293>\n    269b:\t48 89 ce             \tmov    %rcx,%rsi\n    269e:\t89 c7                \tmov    %eax,%edi\n    26a0:\te8 45 f4 ff ff       \tcall   1aea <read_config>\n    26a5:\t48 83 7d d0 00       \tcmpq   $0x0,-0x30(%rbp)\n    26aa:\t74 38                \tje     26e4 <defaults_read_config+0x2dc>\n    26ac:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    26b0:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 26b7 <defaults_read_config+0x2af>\n    26b7:\t48 89 c7             \tmov    %rax,%rdi\n    26ba:\te8 b7 ee ff ff       \tcall   1576 <conf_lookup>\n    26bf:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    26c3:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n    26c8:\t74 0e                \tje     26d8 <defaults_read_config+0x2d0>\n    26ca:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    26ce:\t48 89 c7             \tmov    %rax,%rdi\n    26d1:\te8 00 00 00 00       \tcall   26d6 <defaults_read_config+0x2ce>\n    26d6:\teb 0c                \tjmp    26e4 <defaults_read_config+0x2dc>\n    26d8:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    26dc:\t48 89 c7             \tmov    %rax,%rdi\n    26df:\te8 00 00 00 00       \tcall   26e4 <defaults_read_config+0x2dc>\n    26e4:\t48 83 7d c8 00       \tcmpq   $0x0,-0x38(%rbp)\n    26e9:\t74 3d                \tje     2728 <defaults_read_config+0x320>\n    26eb:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    26ef:\t48 8d 35 00 00 00 00 \tlea    0x0(%rip),%rsi        # 26f6 <defaults_read_config+0x2ee>\n    26f6:\t48 89 c7             \tmov    %rax,%rdi\n    26f9:\te8 78 ee ff ff       \tcall   1576 <conf_lookup>\n    26fe:\t48 89 45 c0          \tmov    %rax,-0x40(%rbp)\n    2702:\t48 83 7d c0 00       \tcmpq   $0x0,-0x40(%rbp)\n    2707:\t74 0e                \tje     2717 <defaults_read_config+0x30f>\n    2709:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    270d:\t48 89 c7             \tmov    %rax,%rdi\n    2710:\te8 00 00 00 00       \tcall   2715 <defaults_read_config+0x30d>\n    2715:\teb 12                \tjmp    2729 <defaults_read_config+0x321>\n    2717:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    271b:\t48 89 c7             \tmov    %rax,%rdi\n    271e:\te8 00 00 00 00       \tcall   2723 <defaults_read_config+0x31b>\n    2723:\teb 04                \tjmp    2729 <defaults_read_config+0x321>\n    2725:\t90                   \tnop\n    2726:\teb 01                \tjmp    2729 <defaults_read_config+0x321>\n    2728:\t90                   \tnop\n    2729:\t48 83 7d f8 00       \tcmpq   $0x0,-0x8(%rbp)\n    272e:\t74 0c                \tje     273c <defaults_read_config+0x334>\n    2730:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    2734:\t48 89 c7             \tmov    %rax,%rdi\n    2737:\te8 00 00 00 00       \tcall   273c <defaults_read_config+0x334>\n    273c:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    2741:\t74 0c                \tje     274f <defaults_read_config+0x347>\n    2743:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    2747:\t48 89 c7             \tmov    %rax,%rdi\n    274a:\te8 00 00 00 00       \tcall   274f <defaults_read_config+0x347>\n    274f:\te8 6e db ff ff       \tcall   2c2 <defaults_mutex_unlock>\n    2754:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    2757:\tc9                   \tleave  \n    2758:\tc3                   \tret    ", "code_s": "undefined4 defaults_read_config(undefined4 <span class=\"supfact\">param_1</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  stat64 <span class=\"supfact\">local_168</span>;\n  stat64 <span class=\"supfact\">local_d8</span>;\n  long <span class=\"supfact\">local_48</span>;\n  long <span class=\"supfact\">local_40</span>;\n  long <span class=\"supfact\">local_38</span>;\n  undefined *<span class=\"supfact\">local_30</span>;\n  uint <span class=\"supfact\">local_24</span>;\n  uint <span class=\"supfact\">local_20</span>;\n  undefined4 <span class=\"supfact\">local_1c</span>;\n  FILE *<span class=\"supfact\">local_18</span>;\n  FILE *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_1c</span> = Number;\n  <span class=\"supfact\">local_18</span> = (FILE *)Number;\n  <span class=\"supfact\">local_10</span> = (FILE *)Number;\n  FUN_00100253();\n  if ((DAT_00103e68 == Number) & amp; &amp;\n      (<span class=\"supfact\">iVar1</span> = FUN_00100419(),\n       <span class=\"supfact\">iVar1</span> != Number)) {\n    FUN_00100331(<span class=\"supfact\">param_1</span>, String);\n    <span class=\"supfact\">local_1c</span> = Number;\n  } else {\n    <span class=\"supfact\">local_10</span> = (FILE *)FUN_001001c7(String);\n    if (<span class=\"supfact\">local_10</span> == (FILE *)Number) {\n      FUN_00100331(<span class=\"supfact\">param_1</span>, String, String);\n    }\n    <span class=\"supfact\">local_18</span> = (FILE *)FUN_001001c7(String);\n    if (<span class=\"supfact\">local_18</span> == (FILE *)Number) {\n      FUN_00100331(<span class=\"supfact\">param_1</span>, String, String);\n    }\n    <span class=\"supfact\">local_24</span> = Number;\n    <span class=\"supfact\">local_20</span> = Number;\n    if ((<span class=\"supfact\">local_10</span> != (FILE *)Number) & amp; &amp;\n        (<span class=\"supfact\">local_18</span> != (FILE *)Number)) {\n      <span class=\"supfact\">iVar1</span> = fileno(<span class=\"supfact\">local_10</span>);\n      <span class=\"supfact\">iVar1</span> =\n          fstat64(<span class=\"supfact\">iVar1</span>, &amp; <span class=\"supfact\">local_d8</span>);\n      <span class=\"supfact\">local_20</span> = (uint)(<span class=\"supfact\">iVar1</span> != -Number);\n      if ((<span class=\"supfact\">local_20</span> != Number) & amp; &amp;\n          (<span class=\"supfact\">local_d8</span>.st_mtim.tv_sec &lt;\n           = *(long *)(DAT_00103e68 + Number))) {\n        <span class=\"supfact\">iVar1</span> = fileno(<span class=\"supfact\">local_18</span>);\n        <span class=\"supfact\">iVar1</span> =\n            fstat64(<span class=\"supfact\">iVar1</span>, &amp; <span class=\"supfact\">local_168</span>);\n        <span class=\"supfact\">local_24</span> = (uint)(<span class=\"supfact\">iVar1</span> == -Number);\n        if ((<span class=\"supfact\">local_24</span> != Number) & amp; &amp;\n            (<span class=\"supfact\">local_168</span>.st_mtim.tv_sec &lt;\n             = *(long *)(DAT_00103e68 + Number)))\n          goto LAB_00102729;\n      }\n    }\n    if (((<span class=\"supfact\">local_10</span> == (FILE *)Number) & amp; &amp;\n         (<span class=\"supfact\">local_18</span> == (FILE *)Number)) ||\n        (<span class=\"supfact\">iVar1</span> = FUN_001023a0(<span class=\"supfact\">param_1</span>),\n         <span class=\"supfact\">iVar1</span> != Number)) {\n      if (<span class=\"supfact\">local_20</span> != Number) {\n        if (<span class=\"supfact\">local_24</span> == Number) {\n          *(__time_t *)(DAT_00103e68 + Number) =\n              <span class=\"supfact\">local_d8</span>.st_mtim.tv_sec;\n        } else if (<span class=\"supfact\">local_168</span>.st_mtim.tv_sec & lt;\n                   <span class=\"supfact\">local_d8</span>.st_mtim.tv_sec) {\n          *(__time_t *)(DAT_00103e68 + Number) =\n              <span class=\"supfact\">local_168</span>.st_mtim.tv_sec;\n        } else {\n          *(__time_t *)(DAT_00103e68 + Number) =\n              <span class=\"supfact\">local_d8</span>.st_mtim.tv_sec;\n        }\n      }\n      if (<span class=\"supfact\">local_10</span> != (FILE *)Number) {\n        FUN_00101aea(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_10</span>, String);\n      }\n      if (<span class=\"supfact\">local_18</span> != (FILE *)Number) {\n        <span class=\"supfact\">local_30</span> = PTR_DAT_00104738;\n        <span class=\"supfact\">local_38</span> = save_ldap_option_list(String);\n        if (<span class=\"supfact\">local_38</span> != Number) {\n          FUN_0010234c(String);\n        }\n        <span class=\"supfact\">local_40</span> = save_ldap_option_list(String);\n        if (<span class=\"supfact\">local_40</span> != Number) {\n          FUN_0010234c(String);\n        }\n        FUN_00101aea(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">local_18</span>, String);\n        if (<span class=\"supfact\">local_38</span> != Number) {\n          <span class=\"supfact\">local_48</span> =\n              FUN_00101576(<span class=\"supfact\">local_30</span>, String);\n          if (<span class=\"supfact\">local_48</span> == Number) {\n            restore_ldap_option_list(<span class=\"supfact\">local_38</span>);\n          } else {\n            free_ldap_option_list(<span class=\"supfact\">local_38</span>);\n          }\n        }\n        if (<span class=\"supfact\">local_40</span> != Number) {\n          <span class=\"supfact\">local_48</span> =\n              FUN_00101576(<span class=\"supfact\">local_30</span>, String);\n          if (<span class=\"supfact\">local_48</span> == Number) {\n            restore_ldap_option_list(<span class=\"supfact\">local_40</span>);\n          } else {\n            free_ldap_option_list(<span class=\"supfact\">local_40</span>);\n          }\n        }\n      }\n    } else {\n      <span class=\"supfact\">local_1c</span> = Number;\n    }\n  }\nLAB_00102729:\n  if (<span class=\"supfact\">local_10</span> != (FILE *)Number) {\n    fclose(<span class=\"supfact\">local_10</span>);\n  }\n  if (<span class=\"supfact\">local_18</span> != (FILE *)Number) {\n    fclose(<span class=\"supfact\">local_18</span>);\n  }\n  FUN_001002c2();\n  return <span class=\"supfact\">local_1c</span>;\n}", "code_t": "uint defaults_read_config(uint <span class=\"supfact\">to_syslog</span>) {\n  char *section;\n  int <span class=\"supfact\">iVar1</span>;\n  conf_option *pcVar2;\n  conf_option *list;\n  conf_option *pcVar3;\n  uint <span class=\"supfact\">to_syslog</span> - local;\n  <span class=\"supfact\">stat</span> <span class=\"supfact\">oldstb</span>;\n  <span class=\"supfact\">stat</span> <span class=\"supfact\">stb</span>;\n  conf_option *<span class=\"supfact\">co</span>;\n  conf_option *<span class=\"supfact\">ldap_uris</span>;\n  conf_option *<span class=\"supfact\">ldap_search_base</span>;\n  char *<span class=\"supfact\">sec</span>;\n  int <span class=\"supfact\">oldstat</span>;\n  int <span class=\"supfact\">stat</span>;\n  int <span class=\"supfact\">ret</span>;\n  FILE *<span class=\"supfact\">oldconf</span>;\n  FILE *<span class=\"supfact\">conf</span>;\n  <span class=\"supfact\">ret</span> = Number;\n  <span class=\"supfact\">oldconf</span> = (FILE *)Number;\n  <span class=\"supfact\">conf</span> = (FILE *)Number;\n  defaults_mutex_lock();\n  if ((config == (conf_cache *)Number) & amp; &amp;\n      (<span class=\"supfact\">iVar1</span> = conf_init(), <span class=\"supfact\">iVar1</span> != Number)) {\n    message(<span class=\"supfact\">to_syslog</span>, String);\n    <span class=\"supfact\">ret</span> = Number;\n  } else {\n    <span class=\"supfact\">conf</span> = open_fopen_r(String);\n    if ((FILE *)<span class=\"supfact\">conf</span> == (FILE *)Number) {\n      message(<span class=\"supfact\">to_syslog</span>, String, String);\n    }\n    <span class=\"supfact\">oldconf</span> = open_fopen_r(String);\n    if ((FILE *)<span class=\"supfact\">oldconf</span> == (FILE *)Number) {\n      message(<span class=\"supfact\">to_syslog</span>, String, String);\n    }\n    <span class=\"supfact\">oldstat</span> = -Number;\n    <span class=\"supfact\">stat</span> = -Number;\n    if (((FILE *)<span class=\"supfact\">conf</span> != (FILE *)Number) & amp; &amp;\n        ((FILE *)<span class=\"supfact\">oldconf</span> != (FILE *)Number)) {\n      <span class=\"supfact\">iVar1</span> = fileno((FILE *)<span class=\"supfact\">conf</span>);\n      <span class=\"supfact\">iVar1</span> =\n          fstat64(<span class=\"supfact\">iVar1</span>, (stat64 *)&amp; <span class=\"supfact\">stb</span>);\n      <span class=\"supfact\">stat</span> = (int)(<span class=\"supfact\">iVar1</span> != -Number);\n      if ((<span class=\"supfact\">stat</span> != Number) & amp; &amp;\n          (<span class=\"supfact\">stb</span>.st_mtim.tv_sec &lt; = config - &gt; modified)) {\n        <span class=\"supfact\">iVar1</span> = fileno((FILE *)<span class=\"supfact\">oldconf</span>);\n        <span class=\"supfact\">iVar1</span> = fstat64(<span class=\"supfact\">iVar1</span>, (stat64 *)&amp;\n                                        <span class=\"supfact\">oldstb</span>);\n        <span class=\"supfact\">oldstat</span> = (int)(<span class=\"supfact\">iVar1</span> == -Number);\n        if ((<span class=\"supfact\">oldstat</span> != Number) & amp; &amp;\n            (<span class=\"supfact\">oldstb</span>.st_mtim.tv_sec &lt; = config - &gt;\n             modified))\n          goto out;\n      }\n    }\n    if ((((FILE *)<span class=\"supfact\">conf</span> == (FILE *)Number) & amp; &amp;\n         ((FILE *)<span class=\"supfact\">oldconf</span> == (FILE *)Number)) ||\n        (<span class=\"supfact\">iVar1</span> = reset_defaults(<span class=\"supfact\">to_syslog</span>),\n         <span class=\"supfact\">iVar1</span> != Number)) {\n      if (<span class=\"supfact\">stat</span> != -Number) {\n        if (<span class=\"supfact\">oldstat</span> == -Number) {\n          config - &gt;\n          modified = <span class=\"supfact\">stb</span>.st_mtim.tv_sec;\n        } else if (<span class=\"supfact\">oldstb</span>.st_mtim.tv_sec & lt;\n                   <span class=\"supfact\">stb</span>.st_mtim.tv_sec) {\n          config - &gt;\n          modified = <span class=\"supfact\">oldstb</span>.st_mtim.tv_sec;\n        } else {\n          config - &gt;\n          modified = <span class=\"supfact\">stb</span>.st_mtim.tv_sec;\n        }\n      }\n      if ((FILE *)<span class=\"supfact\">conf</span> != (FILE *)Number) {\n        read_config(<span class=\"supfact\">to_syslog</span>, <span class=\"supfact\">conf</span>, String);\n      }\n      section = amd_gbl_sec;\n      if ((FILE *)<span class=\"supfact\">oldconf</span> != (FILE *)Number) {\n        pcVar2 = save_ldap_option_list(String);\n        if (pcVar2 != (conf_option *)Number) {\n          clean_ldap_multi_option(String);\n        }\n        list = save_ldap_option_list(String);\n        if (list != (conf_option *)Number) {\n          clean_ldap_multi_option(String);\n        }\n        read_config(<span class=\"supfact\">to_syslog</span>, <span class=\"supfact\">oldconf</span>, String);\n        if (pcVar2 != (conf_option *)Number) {\n          pcVar3 = conf_lookup(section, String);\n          if (pcVar3 == (conf_option *)Number) {\n            restore_ldap_option_list(pcVar2);\n          } else {\n            free_ldap_option_list(pcVar2);\n          }\n        }\n        if (list != (conf_option *)Number) {\n          pcVar2 = conf_lookup(section, String);\n          if (pcVar2 == (conf_option *)Number) {\n            restore_ldap_option_list(list);\n          } else {\n            free_ldap_option_list(list);\n          }\n        }\n      }\n    } else {\n      <span class=\"supfact\">ret</span> = Number;\n    }\n  }\nout:\n  if (<span class=\"supfact\">conf</span> != (FILE *)Number) {\n    fclose((FILE *)<span class=\"supfact\">conf</span>);\n  }\n  if (<span class=\"supfact\">oldconf</span> != (FILE *)Number) {\n    fclose((FILE *)<span class=\"supfact\">oldconf</span>);\n  }\n  defaults_mutex_unlock();\n  return <span class=\"supfact\">ret</span>;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "version", "ref_name": "to_syslog", "ref_type": "uint"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "local_168", "type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }", "pred_name": "__unk__", "ref_name": "oldstb", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }"}, {"name": "local_d8", "type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }", "pred_name": "__unk__", "ref_name": "stb", "ref_type": "struct stat { __dev_t st_dev; __ino_t st_ino; __nlink_t st_nlink; __mode_t st_mode; __uid_t st_uid; __gid_t st_gid; int __pad0; __dev_t st_rdev; __off_t st_size; __blksize_t st_blksize; __blkcnt_t st_blocks; timespec st_atim; timespec st_mtim; timespec st_ctim; __syscall_slong_t[3] __glibc_reserved; }"}, {"name": "local_48", "type": "__unk__", "pred_name": "__unk__", "ref_name": "co", "ref_type": "conf_option * *"}, {"name": "local_40", "type": "disappear", "pred_name": "", "ref_name": "ldap_uris", "ref_type": "conf_option * *"}, {"name": "local_38", "type": "__unk__", "pred_name": "__unk__", "ref_name": "ldap_search_base", "ref_type": "conf_option * *"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "sec", "ref_type": "char * *"}, {"name": "local_24", "type": "disappear", "pred_name": "", "ref_name": "oldstat", "ref_type": "int"}, {"name": "local_20", "type": "int", "pred_name": "res", "ref_name": "stat", "ref_type": "int"}, {"name": "local_1c", "type": "int", "pred_name": "retcode", "ref_name": "ret", "ref_type": "int"}, {"name": "local_18", "type": "FILE * *", "pred_name": "file", "ref_name": "oldconf", "ref_type": "FILE * *"}, {"name": "local_10", "type": "__unk__", "pred_name": "__unk__", "ref_name": "conf", "ref_type": "FILE * *"}], "body_in_train": false}, {"repo_owner": "imammedo", "repo_name": "qemu", "path": "imammedo/qemu/27fb4f84b7fcc78e94a358f50bc0ffa8990577fe8052303086c241e73b33b8df", "path_in_repo": "imammedo/qemu//microblaze-softmmu/accel/tcg/cputlb.o", "objdump": "0000000000011657 <helper_atomic_or_fetchq_le_mmu>:\n   11657:\t55                   \tpush   %rbp\n   11658:\t48 89 e5             \tmov    %rsp,%rbp\n   1165b:\t53                   \tpush   %rbx\n   1165c:\t48 81 ec 88 00 00 00 \tsub    $0x88,%rsp\n   11663:\t48 89 7d 98          \tmov    %rdi,-0x68(%rbp)\n   11667:\t48 89 75 90          \tmov    %rsi,-0x70(%rbp)\n   1166b:\t48 89 55 88          \tmov    %rdx,-0x78(%rbp)\n   1166f:\t89 4d 84             \tmov    %ecx,-0x7c(%rbp)\n   11672:\t4c 89 85 78 ff ff ff \tmov    %r8,-0x88(%rbp)\n   11679:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n   11680:\t00 00 \n   11682:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n   11686:\t31 c0                \txor    %eax,%eax\n   11688:\t48 8d 7d c0          \tlea    -0x40(%rbp),%rdi\n   1168c:\t48 8b 8d 78 ff ff ff \tmov    -0x88(%rbp),%rcx\n   11693:\t8b 55 84             \tmov    -0x7c(%rbp),%edx\n   11696:\t48 8b 75 90          \tmov    -0x70(%rbp),%rsi\n   1169a:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   1169e:\t49 89 f8             \tmov    %rdi,%r8\n   116a1:\t48 89 c7             \tmov    %rax,%rdi\n   116a4:\te8 30 25 ff ff       \tcall   3bd9 <atomic_mmu_lookup>\n   116a9:\t48 89 45 b0          \tmov    %rax,-0x50(%rbp)\n   116ad:\tbe 00 00 00 00       \tmov    $0x0,%esi\n   116b2:\tbf 03 00 00 00       \tmov    $0x3,%edi\n   116b7:\te8 6b f7 fe ff       \tcall   e27 <trace_mem_build_info_no_se_le>\n   116bc:\t88 45 af             \tmov    %al,-0x51(%rbp)\n   116bf:\t0f b6 5d af          \tmovzbl -0x51(%rbp),%ebx\n   116c3:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   116c7:\t48 89 c7             \tmov    %rax,%rdi\n   116ca:\te8 65 f3 fe ff       \tcall   a34 <env_cpu>\n   116cf:\t48 89 c1             \tmov    %rax,%rcx\n   116d2:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n   116d6:\t89 da                \tmov    %ebx,%edx\n   116d8:\t48 89 c6             \tmov    %rax,%rsi\n   116db:\t48 89 cf             \tmov    %rcx,%rdi\n   116de:\te8 90 f6 fe ff       \tcall   d73 <trace_guest_mem_before_exec>\n   116e3:\t0f b6 45 af          \tmovzbl -0x51(%rbp),%eax\n   116e7:\t83 c8 20             \tor     $0x20,%eax\n   116ea:\t0f b6 d8             \tmovzbl %al,%ebx\n   116ed:\t48 8b 45 98          \tmov    -0x68(%rbp),%rax\n   116f1:\t48 89 c7             \tmov    %rax,%rdi\n   116f4:\te8 3b f3 fe ff       \tcall   a34 <env_cpu>\n   116f9:\t48 89 c1             \tmov    %rax,%rcx\n   116fc:\t48 8b 45 90          \tmov    -0x70(%rbp),%rax\n   11700:\t89 da                \tmov    %ebx,%edx\n   11702:\t48 89 c6             \tmov    %rax,%rsi\n   11705:\t48 89 cf             \tmov    %rcx,%rdi\n   11708:\te8 66 f6 fe ff       \tcall   d73 <trace_guest_mem_before_exec>\n   1170d:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n   11711:\t48 8b 02             \tmov    (%rdx),%rax\n   11714:\t48 89 c1             \tmov    %rax,%rcx\n   11717:\t48 0b 4d 88          \tor     -0x78(%rbp),%rcx\n   1171b:\t48 89 ce             \tmov    %rcx,%rsi\n   1171e:\tf0 48 0f b1 0a       \tlock cmpxchg %rcx,(%rdx)\n   11723:\t0f 94 c1             \tsete   %cl\n   11726:\t84 c9                \ttest   %cl,%cl\n   11728:\t74 ea                \tje     11714 <helper_atomic_or_fetchq_le_mmu+0xbd>\n   1172a:\t48 89 75 b8          \tmov    %rsi,-0x48(%rbp)\n   1172e:\t0f b6 45 e4          \tmovzbl -0x1c(%rbp),%eax\n   11732:\t0f b6 c0             \tmovzbl %al,%eax\n   11735:\t48 85 c0             \ttest   %rax,%rax\n   11738:\t74 0c                \tje     11746 <helper_atomic_or_fetchq_le_mmu+0xef>\n   1173a:\t48 8d 45 c0          \tlea    -0x40(%rbp),%rax\n   1173e:\t48 89 c7             \tmov    %rax,%rdi\n   11741:\te8 00 00 00 00       \tcall   11746 <helper_atomic_or_fetchq_le_mmu+0xef>\n   11746:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n   1174a:\t48 8b 5d e8          \tmov    -0x18(%rbp),%rbx\n   1174e:\t64 48 33 1c 25 28 00 \txor    %fs:0x28,%rbx\n   11755:\t00 00 \n   11757:\t74 05                \tje     1175e <helper_atomic_or_fetchq_le_mmu+0x107>\n   11759:\te8 00 00 00 00       \tcall   1175e <helper_atomic_or_fetchq_le_mmu+0x107>\n   1175e:\t48 81 c4 88 00 00 00 \tadd    $0x88,%rsp\n   11765:\t5b                   \tpop    %rbx\n   11766:\t5d                   \tpop    %rbp\n   11767:\tc3                   \tret    ", "code_s": "ulong helper_atomic_or_fetchq_le_mmu(undefined8 <span class=\"supfact\">param_1</span>,\n                                     undefined8 <span class=\"supfact\">param_2</span>,\n                                     ulong <span class=\"supfact\">param_3</span>,\n                                     undefined4 <span class=\"supfact\">param_4</span>,\n                                     undefined8 <span class=\"supfact\">param_5</span>) {\n  byte <span class=\"supfact\">bVar1</span>;\n  ulong *puVar2;\n  undefined8 uVar3;\n  ulong uVar4;\n  ulong uVar5;\n  ulong <span class=\"supfact\">uVar6</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  bool <span class=\"supfact\">bVar7</span>;\n  undefined <span class=\"supfact\">local_48</span>[Number];\n  char <span class=\"supfact\">local_24</span>;\n  long <span class=\"supfact\">local_20</span>;\n  <span class=\"supfact\">local_20</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  puVar2 = (ulong *)FUN_00103bd9(\n      <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_4</span>,\n      <span class=\"supfact\">param_5</span>, <span class=\"supfact\">local_48</span>);\n  <span class=\"supfact\">bVar1</span> = FUN_00100e27(Number, Number);\n  uVar3 = FUN_00100a34(<span class=\"supfact\">param_1</span>);\n  FUN_00100d73(uVar3, <span class=\"supfact\">param_2</span>, <span class=\"supfact\">bVar1</span>);\n  uVar3 = FUN_00100a34(<span class=\"supfact\">param_1</span>);\n  FUN_00100d73(uVar3, <span class=\"supfact\">param_2</span>, <span class=\"supfact\">bVar1</span> | Number);\n  uVar4 = *puVar2;\n  do {\n    <span class=\"supfact\">uVar6</span> = uVar4 | <span class=\"supfact\">param_3</span>;\n    LOCK();\n    uVar5 = *puVar2;\n    <span class=\"supfact\">bVar7</span> = uVar4 == uVar5;\n    if (<span class=\"supfact\">bVar7</span>) {\n      *puVar2 = <span class=\"supfact\">uVar6</span>;\n      uVar5 = uVar4;\n    }\n    UNLOCK();\n    uVar4 = uVar5;\n  } while (!<span class=\"supfact\">bVar7</span>);\n  if (<span class=\"supfact\">local_24</span> != String) {\n    memory_notdirty_write_complete(<span class=\"supfact\">local_48</span>);\n  }\n  if (<span class=\"supfact\">local_20</span> ==\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">uVar6</span>;\n  }\n  __stack_chk_fail();\n}", "code_t": "uint64_t helper_atomic_or_fetchq_le_mmu(CPUArchState *<span class=\"supfact\">env</span>,\n                                        target_ulong <span class=\"supfact\">addr</span>,\n                                        uint64_t <span class=\"supfact\">val</span>,\n                                        TCGMemOpIdx <span class=\"supfact\">oi</span>,\n                                        uintptr_t <span class=\"supfact\">retaddr</span>) {\n  long lVar1;\n  byte <span class=\"supfact\">info_00</span>;\n  ulong *puVar2;\n  CPUState *pCVar3;\n  ulong uVar4;\n  ulong uVar5;\n  ulong <span class=\"supfact\">uVar6</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  bool <span class=\"supfact\">bVar7</span>;\n  uintptr_t <span class=\"supfact\">retaddr</span> - local;\n  TCGMemOpIdx <span class=\"supfact\">oi</span> - local;\n  uint64_t <span class=\"supfact\">val</span> - local;\n  target_ulong <span class=\"supfact\">addr</span> - local;\n  CPUArchState *<span class=\"supfact\">env</span> - local;\n  uint8_t info;\n  uint64_t *haddr;\n  uint64_t ret;\n  NotDirtyInfo <span class=\"supfact\">ndi</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  puVar2 = (ulong *)atomic_mmu_lookup(<span class=\"supfact\">env</span>, <span class=\"supfact\">addr</span>,\n                                      <span class=\"supfact\">oi</span>,\n                                      <span class=\"supfact\">retaddr</span>, &amp;\n                                      <span class=\"supfact\">ndi</span>);\n  <span class=\"supfact\">info_00</span> = trace_mem_build_info_no_se_le(Number, false);\n  pCVar3 = env_cpu(<span class=\"supfact\">env</span>);\n  trace_guest_mem_before_exec(pCVar3, <span class=\"supfact\">addr</span>,\n                              <span class=\"supfact\">info_00</span>);\n  pCVar3 = env_cpu(<span class=\"supfact\">env</span>);\n  trace_guest_mem_before_exec(pCVar3, <span class=\"supfact\">addr</span>,\n                              <span class=\"supfact\">info_00</span> | Number);\n  uVar4 = *puVar2;\n  do {\n    <span class=\"supfact\">uVar6</span> = uVar4 | <span class=\"supfact\">val</span>;\n    LOCK();\n    uVar5 = *puVar2;\n    <span class=\"supfact\">bVar7</span> = uVar4 == uVar5;\n    if (<span class=\"supfact\">bVar7</span>) {\n      *puVar2 = <span class=\"supfact\">uVar6</span>;\n      uVar5 = uVar4;\n    }\n    UNLOCK();\n    uVar4 = uVar5;\n  } while (!<span class=\"supfact\">bVar7</span>);\n  if (<span class=\"supfact\">ndi</span>.active != false) {\n    memory_notdirty_write_complete(&amp; <span class=\"supfact\">ndi</span>);\n  }\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">uVar6</span>;\n  }\n  __stack_chk_fail();\n}", "var": [{"name": "param_1", "type": "CPUArchState * *", "pred_name": "env", "ref_name": "env", "ref_type": "CPUArchState * *"}, {"name": "param_2", "type": "target_ulong", "pred_name": "addr", "ref_name": "addr", "ref_type": "target_ulong"}, {"name": "param_3", "type": "uint64_t", "pred_name": "val", "ref_name": "val", "ref_type": "uint64_t"}, {"name": "param_4", "type": "TCGMemOpIdx", "pred_name": "oi", "ref_name": "oi", "ref_type": "TCGMemOpIdx"}, {"name": "param_5", "type": "uintptr_t", "pred_name": "retaddr", "ref_name": "retaddr", "ref_type": "uintptr_t"}, {"name": "bVar1", "type": "byte", "pred_name": "info_00", "ref_name": "info_00", "ref_type": "byte"}, {"name": "uVar6", "type": "ulong", "pred_name": "uVar6", "ref_name": "uVar6", "ref_type": "ulong"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "bVar7", "type": "bool", "pred_name": "bVar7", "ref_name": "bVar7", "ref_type": "bool"}, {"name": "local_48", "type": "struct NotDirtyInfo { CPUState * cpu; page_collection * pages; ram_addr_t ram_addr; vaddr mem_vaddr; uint size; _Bool active; PADDING (3); }", "pred_name": "ndi", "ref_name": "ndi", "ref_type": "struct NotDirtyInfo { CPUState * cpu; page_collection * pages; ram_addr_t ram_addr; vaddr mem_vaddr; uint size; _Bool active; PADDING (3); }"}, {"name": "local_24", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_20", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "cristim", "repo_name": "coreboot", "path": "cristim/coreboot/25e7a237fd4a11c2833a6b4287cffbc5619ca90d1d438c58a56593bfaa9eec4c", "path_in_repo": "cristim/coreboot/util/cbfstool/minilzma.o", "objdump": "", "code_s": "void __thiscall IUnknown ~IUnknown(IUnknown *<span class=\"supfact\">this</span>) {\n  *(undefined **)<span class=\"supfact\">this</span> = &amp;\n  DAT_00104d78;\n  return;\n}", "code_t": "void __thiscall IUnknown ~IUnknown(IUnknown *<span class=\"supfact\">this</span>,\n                                   int __in_chrg) {\n  IUnknown *<span class=\"supfact\">this</span> - local;\n  <span class=\"supfact\">this</span> - &gt;\n  _vptr.IUnknown = (_func_int_varargs **)&amp;\n  DAT_00104d78;\n  return;\n}", "var": [{"name": "this", "type": "void * *", "pred_name": "this", "ref_name": "this", "ref_type": "IUnknown * *"}], "body_in_train": false}, {"repo_owner": "jkent", "repo_name": "tremulous-derelict", "path": "jkent/tremulous-derelict/4fd1a32b52d8ed213d429faad03d3a53c06c994efc770bef9ed9cd3377b0edcc", "path_in_repo": "jkent/tremulous-derelict//build/release-linux-x86_64/base/ui/ui_gameinfo.o", "objdump": "0000000000000aae <UI_GetBotInfoByNumber>:\n aae:\t48 83 ec 18          \tsub    $0x18,%rsp\n ab2:\t89 7c 24 0c          \tmov    %edi,0xc(%rsp)\n ab6:\t83 7c 24 0c 00       \tcmpl   $0x0,0xc(%rsp)\n abb:\t78 0f                \tjs     acc <UI_GetBotInfoByNumber+0x1e>\n abd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # ac4 <UI_GetBotInfoByNumber+0x16>\n ac4:\t8b 00                \tmov    (%rax),%eax\n ac6:\t39 44 24 0c          \tcmp    %eax,0xc(%rsp)\n aca:\t7c 26                \tjl     af2 <UI_GetBotInfoByNumber+0x44>\n acc:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n ad0:\t89 c6                \tmov    %eax,%esi\n ad2:\t48 8d 3d 00 00 00 00 \tlea    0x0(%rip),%rdi        # ad9 <UI_GetBotInfoByNumber+0x2b>\n ad9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n ade:\te8 00 00 00 00       \tcall   ae3 <UI_GetBotInfoByNumber+0x35>\n ae3:\t48 89 c7             \tmov    %rax,%rdi\n ae6:\te8 00 00 00 00       \tcall   aeb <UI_GetBotInfoByNumber+0x3d>\n aeb:\tb8 00 00 00 00       \tmov    $0x0,%eax\n af0:\teb 19                \tjmp    b0b <UI_GetBotInfoByNumber+0x5d>\n af2:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n af6:\t48 98                \tcltq   \n af8:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n aff:\t00 \n b00:\t48 8d 05 00 00 00 00 \tlea    0x0(%rip),%rax        # b07 <UI_GetBotInfoByNumber+0x59>\n b07:\t48 8b 04 02          \tmov    (%rdx,%rax,1),%rax\n b0b:\t48 83 c4 18          \tadd    $0x18,%rsp\n b0f:\tc3                   \tret    ", "code_s": "undefined8 UI_GetBotInfoByNumber(int <span class=\"supfact\">param_1</span>) {\n  undefined8 <span class=\"supfact\">uVar1</span>;\n  if ((<span class=\"supfact\">param_1</span> & lt; Number) ||\n      (ui_numBots &lt; = <span class=\"supfact\">param_1</span>)) {\n    <span class=\"supfact\">uVar1</span> = va(String, <span class=\"supfact\">param_1</span>);\n    trap_Print(<span class=\"supfact\">uVar1</span>);\n    <span class=\"supfact\">uVar1</span> = Number;\n  } else {\n    <span class=\"supfact\">uVar1</span> =\n        *(undefined8 *)(&amp;\n                        DAT_00100d40 + (long)<span class=\"supfact\">param_1</span> * Number);\n  }\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "char *UI_GetBotInfoByNumber(int <span class=\"supfact\">num</span>) {\n  undefined8 uVar1;\n  char *pcVar2;\n  int <span class=\"supfact\">num</span> - local;\n  if ((<span class=\"supfact\">num</span> & lt; Number) ||\n      (ui_numBots &lt; = <span class=\"supfact\">num</span>)) {\n    uVar1 = va(String, <span class=\"supfact\">num</span>);\n    trap_Print(uVar1);\n    pcVar2 = (char *)Number;\n  } else {\n    pcVar2 = ui_botInfos[<span class=\"supfact\">num</span>];\n  }\n  return pcVar2;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "num", "ref_name": "num", "ref_type": "int"}, {"name": "uVar1", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "Sponk", "repo_name": "NeoEditor", "path": "Sponk/NeoEditor/9cb49605218a5d3174c5e3481dc22abe978f77b8fa5ba16559847bea4713c85c", "path_in_repo": "Sponk/NeoEditor/3rdparty/fltk/test/tabs", "objdump": "", "code_s": "int snprintf(char *__s, size_t __maxlen, char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_snprintf_0046d5d8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int snprintf(char *__s, size_t __maxlen, char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_snprintf_0046d5d8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "SeanL49", "repo_name": "vm2016", "path": "SeanL49/vm2016/5ca693a694b38b863da3380cde23dabb4f4a27314207028b0c6700a8e059fd1b", "path_in_repo": "SeanL49/vm2016//mips64-softmmu/exec.o", "objdump": "0000000000003641 <cpu_str_to_log_mask>:\n    3641:\t55                   \tpush   %rbp\n    3642:\t48 89 e5             \tmov    %rsp,%rbp\n    3645:\t48 83 ec 40          \tsub    $0x40,%rsp\n    3649:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    364d:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    3654:\t00 00 \n    3656:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    365a:\t31 c0                \txor    %eax,%eax\n    365c:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    3660:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    3664:\tc7 45 dc 00 00 00 00 \tmovl   $0x0,-0x24(%rbp)\n    366b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    366f:\tbe 2c 00 00 00       \tmov    $0x2c,%esi\n    3674:\t48 89 c7             \tmov    %rax,%rdi\n    3677:\te8 00 00 00 00       \tcall   367c <cpu_str_to_log_mask+0x3b>\n    367c:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    3680:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n    3685:\t75 17                \tjne    369e <cpu_str_to_log_mask+0x5d>\n    3687:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    368b:\t48 89 c7             \tmov    %rax,%rdi\n    368e:\te8 00 00 00 00       \tcall   3693 <cpu_str_to_log_mask+0x52>\n    3693:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    3697:\t48 01 d0             \tadd    %rdx,%rax\n    369a:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    369e:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    36a2:\t48 2b 45 e8          \tsub    -0x18(%rbp),%rax\n    36a6:\t89 c1                \tmov    %eax,%ecx\n    36a8:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    36ac:\tba 00 00 00 00       \tmov    $0x0,%edx\n    36b1:\t89 ce                \tmov    %ecx,%esi\n    36b3:\t48 89 c7             \tmov    %rax,%rdi\n    36b6:\te8 0f ff ff ff       \tcall   35ca <cmp1>\n    36bb:\t85 c0                \ttest   %eax,%eax\n    36bd:\t74 24                \tje     36e3 <cpu_str_to_log_mask+0xa2>\n    36bf:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    36c6:\t00 \n    36c7:\teb 0e                \tjmp    36d7 <cpu_str_to_log_mask+0x96>\n    36c9:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    36cd:\t8b 00                \tmov    (%rax),%eax\n    36cf:\t09 45 dc             \tor     %eax,-0x24(%rbp)\n    36d2:\t48 83 45 e0 18       \taddq   $0x18,-0x20(%rbp)\n    36d7:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    36db:\t8b 00                \tmov    (%rax),%eax\n    36dd:\t85 c0                \ttest   %eax,%eax\n    36df:\t75 e8                \tjne    36c9 <cpu_str_to_log_mask+0x88>\n    36e1:\teb 45                \tjmp    3728 <cpu_str_to_log_mask+0xe7>\n    36e3:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    36ea:\t00 \n    36eb:\teb 29                \tjmp    3716 <cpu_str_to_log_mask+0xd5>\n    36ed:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    36f1:\t48 8b 50 08          \tmov    0x8(%rax),%rdx\n    36f5:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    36f9:\t48 2b 45 e8          \tsub    -0x18(%rbp),%rax\n    36fd:\t89 c1                \tmov    %eax,%ecx\n    36ff:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    3703:\t89 ce                \tmov    %ecx,%esi\n    3705:\t48 89 c7             \tmov    %rax,%rdi\n    3708:\te8 bd fe ff ff       \tcall   35ca <cmp1>\n    370d:\t85 c0                \ttest   %eax,%eax\n    370f:\t75 16                \tjne    3727 <cpu_str_to_log_mask+0xe6>\n    3711:\t48 83 45 e0 18       \taddq   $0x18,-0x20(%rbp)\n    3716:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    371a:\t8b 00                \tmov    (%rax),%eax\n    371c:\t85 c0                \ttest   %eax,%eax\n    371e:\t75 cd                \tjne    36ed <cpu_str_to_log_mask+0xac>\n    3720:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3725:\teb 2a                \tjmp    3751 <cpu_str_to_log_mask+0x110>\n    3727:\t90                   \tnop\n    3728:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    372c:\t8b 00                \tmov    (%rax),%eax\n    372e:\t09 45 dc             \tor     %eax,-0x24(%rbp)\n    3731:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3735:\t0f b6 00             \tmovzbl (%rax),%eax\n    3738:\t3c 2c                \tcmp    $0x2c,%al\n    373a:\t75 11                \tjne    374d <cpu_str_to_log_mask+0x10c>\n    373c:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    3740:\t48 83 c0 01          \tadd    $0x1,%rax\n    3744:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    3748:\te9 1e ff ff ff       \tjmp    366b <cpu_str_to_log_mask+0x2a>\n    374d:\t90                   \tnop\n    374e:\t8b 45 dc             \tmov    -0x24(%rbp),%eax\n    3751:\t48 8b 75 f8          \tmov    -0x8(%rbp),%rsi\n    3755:\t64 48 33 34 25 28 00 \txor    %fs:0x28,%rsi\n    375c:\t00 00 \n    375e:\t74 05                \tje     3765 <cpu_str_to_log_mask+0x124>\n    3760:\te8 00 00 00 00       \tcall   3765 <cpu_str_to_log_mask+0x124>\n    3765:\tc9                   \tleave  \n    3766:\tc3                   \tret    ", "code_s": "uint cpu_str_to_log_mask(char *<span class=\"supfact\">param_1</span>) {\n  long lVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  size_t <span class=\"supfact\">sVar3</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  uint <span class=\"supfact\">local_2c</span>;\n  uint *<span class=\"supfact\">local_28</span>;\n  char *<span class=\"supfact\">local_20</span>;\n  char *<span class=\"supfact\">local_18</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_2c</span> = Number;\n  <span class=\"supfact\">local_20</span> = <span class=\"supfact\">param_1</span>;\n  while (true) {\n    <span class=\"supfact\">local_18</span> = strchr(<span class=\"supfact\">local_20</span>, Number);\n    if (<span class=\"supfact\">local_18</span> == (char *)Number) {\n      <span class=\"supfact\">sVar3</span> = strlen(<span class=\"supfact\">local_20</span>);\n      <span class=\"supfact\">local_18</span> =\n          <span class=\"supfact\">local_20</span> + <span class=\"supfact\">sVar3</span>;\n    }\n    <span class=\"supfact\">iVar2</span> = FUN_001035ca(\n        <span class=\"supfact\">local_20</span>,\n        (int)<span class=\"supfact\">local_18</span> - (int)<span class=\"supfact\">local_20</span>, &amp;\n        DAT_00109d00);\n    if (<span class=\"supfact\">iVar2</span> == Number) {\n      <span class=\"supfact\">local_28</span> = &amp;\n      cpu_log_items;\n      while (true) {\n        if (*<span class=\"supfact\">local_28</span> == Number) {\n          <span class=\"supfact\">local_2c</span> = Number;\n          goto LAB_00103751;\n        }\n        <span class=\"supfact\">iVar2</span> = FUN_001035ca(\n            <span class=\"supfact\">local_20</span>,\n            (int)<span class=\"supfact\">local_18</span> - (int)<span class=\"supfact\">local_20</span>,\n            *(undefined8 *)(<span class=\"supfact\">local_28</span> + Number));\n        if (<span class=\"supfact\">iVar2</span> != Number)\n          break;\n        <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_28</span> + Number;\n      }\n    } else {\n      for (<span class=\"supfact\">local_28</span> = &amp; cpu_log_items;\n           *<span class=\"supfact\">local_28</span> != Number;\n           <span class=\"supfact\">local_28</span> = <span class=\"supfact\">local_28</span> + Number) {\n        <span class=\"supfact\">local_2c</span> =\n            <span class=\"supfact\">local_2c</span> | *<span class=\"supfact\">local_28</span>;\n      }\n    }\n    <span class=\"supfact\">local_2c</span> =\n        <span class=\"supfact\">local_2c</span> | *<span class=\"supfact\">local_28</span>;\n    if (*<span class=\"supfact\">local_18</span> != String)\n      break;\n    <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_18</span> + Number;\n  }\nLAB_00103751:\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">local_2c</span>;\n  }\n  __stack_chk_fail();\n}", "code_t": "int cpu_str_to_log_mask(char *<span class=\"supfact\">str</span>) {\n  long lVar1;\n  int <span class=\"supfact\">iVar2</span>;\n  size_t <span class=\"supfact\">sVar3</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  char *<span class=\"supfact\">str</span> - local;\n  int <span class=\"supfact\">mask</span>;\n  CPULogItem *<span class=\"supfact\">item</span>;\n  char *<span class=\"supfact\">p</span>;\n  char *<span class=\"supfact\">p1</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">mask</span> = Number;\n  <span class=\"supfact\">p</span> = <span class=\"supfact\">str</span>;\n  while (true) {\n    <span class=\"supfact\">p1</span> = strchr(<span class=\"supfact\">p</span>, Number);\n    if (<span class=\"supfact\">p1</span> == (char *)Number) {\n      <span class=\"supfact\">sVar3</span> = strlen(<span class=\"supfact\">p</span>);\n      <span class=\"supfact\">p1</span> = <span class=\"supfact\">p</span> + <span class=\"supfact\">sVar3</span>;\n    }\n    <span class=\"supfact\">iVar2</span> =\n        cmp1(<span class=\"supfact\">p</span>,\n             (int)<span class=\"supfact\">p1</span> - (int)<span class=\"supfact\">p</span>, String);\n    if (<span class=\"supfact\">iVar2</span> == Number) {\n      <span class=\"supfact\">item</span> = (CPULogItem *)&amp;\n      cpu_log_items;\n      while (true) {\n        if (<span class=\"supfact\">item</span> - &gt; <span class=\"supfact\">mask</span> == Number) {\n          <span class=\"supfact\">mask</span> = Number;\n          goto LAB_00103751;\n        }\n        <span class=\"supfact\">iVar2</span> = cmp1(\n            <span class=\"supfact\">p</span>, (int)<span class=\"supfact\">p1</span> - (int)<span class=\"supfact\">p</span>,\n            <span class=\"supfact\">item</span> - &gt;\n            name);\n        if (<span class=\"supfact\">iVar2</span> != Number)\n          break;\n        <span class=\"supfact\">item</span> = <span class=\"supfact\">item</span> + Number;\n      }\n    } else {\n      for (<span class=\"supfact\">item</span> = (CPULogItem *)&amp; cpu_log_items;\n           <span class=\"supfact\">item</span> - &gt; <span class=\"supfact\">mask</span> != Number;\n           <span class=\"supfact\">item</span> = <span class=\"supfact\">item</span> + Number) {\n        <span class=\"supfact\">mask</span> =\n            <span class=\"supfact\">mask</span> | <span class=\"supfact\">item</span> - &gt;\n        <span class=\"supfact\">mask</span>;\n      }\n    }\n    <span class=\"supfact\">mask</span> = <span class=\"supfact\">mask</span> | <span class=\"supfact\">item</span> - &gt;\n    <span class=\"supfact\">mask</span>;\n    if (*<span class=\"supfact\">p1</span> != String)\n      break;\n    <span class=\"supfact\">p</span> = <span class=\"supfact\">p1</span> + Number;\n  }\nLAB_00103751:\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">mask</span>;\n  }\n  __stack_chk_fail();\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "str", "ref_name": "str", "ref_type": "char * *"}, {"name": "iVar2", "type": "int", "pred_name": "iVar2", "ref_name": "iVar2", "ref_type": "int"}, {"name": "sVar3", "type": "size_t", "pred_name": "sVar3", "ref_name": "sVar3", "ref_type": "size_t"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_2c", "type": "int", "pred_name": "mask", "ref_name": "mask", "ref_type": "int"}, {"name": "local_28", "type": "CPULogItem * *", "pred_name": "item", "ref_name": "item", "ref_type": "CPULogItem * *"}, {"name": "local_20", "type": "char * *", "pred_name": "p", "ref_name": "p", "ref_type": "char * *"}, {"name": "local_18", "type": "char * *", "pred_name": "p1", "ref_name": "p1", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "amremam2004", "repo_name": "pjsip-trunk", "path": "amremam2004/pjsip-trunk/99aaa9f9ea944575f6e73434e074f6b410f36dfc5bfd3fe914004442c55bfc6d", "path_in_repo": "amremam2004/pjsip-trunk//pjsip-apps/bin/samples/x86_64-unknown-linux-gnu/httpdemo", "objdump": "", "code_s": "int fprintf(FILE *__stream, char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fprintf_004521e8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int fprintf(FILE *__stream, char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_fprintf_004521e8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "romankap", "repo_name": "Using-dlib", "path": "romankap/Using-dlib/032cec18fc63bdc83b4a70641e5ae5398c0bb150c465d0b1d3139b223fece5ef", "path_in_repo": "romankap/Using-dlib/Lot_w_dlib/dlib-18.10/dlib/test/std_vector_c.o", "objdump": "", "code_s": "void __thiscall dlib fatal_error\ncheck_for_previous_fatal_errors(fatal_error *<span class=\"supfact\">this</span>) {\n  bool bVar1;\n  basic_ostream *pbVar2;\n  char *pcVar3;\n  long lVar4;\n  ulong uVar5;\n  undefined *puVar6;\n  ulong <span class=\"supfact\">local_20</span>;\n  if (check_for_previous_fatal_errors() is_first_fatal_error == String) {\n    pbVar2 = std operator& lt;\n    &lt;\n    ((basic_ostream *)&amp; std cerr, String);\n    std basic_ostream &lt;\n    char, std char_traits &lt;\n    char &gt;\n    &gt;\n    operator& lt;\n    &lt;\n    ((basic_ostream & lt; char, std char_traits &lt; char &gt; &gt; *)pbVar2,\n     std endl & lt;\n     char, std char_traits &lt; char &gt; &gt;);\n    pbVar2 = std operator& lt;\n    &lt;\n    ((basic_ostream *)&amp; std cerr, String);\n    std basic_ostream &lt;\n    char, std char_traits &lt;\n    char &gt;\n    &gt;\n    operator& lt;\n    &lt;\n    ((basic_ostream & lt; char, std char_traits &lt; char &gt; &gt; *)pbVar2,\n     std endl & lt;\n     char, std char_traits &lt; char &gt; &gt;);\n    pbVar2 = std operator& lt;\n    &lt;\n    ((basic_ostream *)&amp; std cerr, String);\n    std basic_ostream &lt;\n    char, std char_traits &lt;\n    char &gt;\n    &gt;\n    operator& lt;\n    &lt;\n    ((basic_ostream & lt; char, std char_traits &lt; char &gt; &gt; *)pbVar2,\n     std endl & lt;\n     char, std char_traits &lt; char &gt; &gt;);\n    pbVar2 = std operator& lt;\n    &lt;\n    ((basic_ostream *)&amp; std cerr, String);\n    pbVar2 = std operator& lt;\n    &lt;\n    (pbVar2, String);\n    pbVar2 = std operator& lt;\n    &lt;\n    (pbVar2, String);\n    pbVar2 = std operator& lt;\n    &lt;\n    (pbVar2, String);\n    pcVar3 = (char *)(**(code **)(*(long *)<span class=\"supfact\">this</span> + Number))(\n        <span class=\"supfact\">this</span>);\n    pbVar2 = std operator& lt;\n    &lt;\n    (pbVar2, pcVar3);\n    pbVar2 = std operator& lt;\n    &lt;\n    (pbVar2, String);\n    std basic_ostream &lt;\n    char, std char_traits &lt;\n    char &gt;\n    &gt;\n    operator& lt;\n    &lt;\n    ((basic_ostream & lt; char, std char_traits &lt; char &gt; &gt; *)pbVar2,\n     std endl & lt;\n     char, std char_traits &lt; char &gt; &gt;);\n    __assert_fail(String, String, Number, String);\n  }\n  lVar4 = message();\n  <span class=\"supfact\">local_20</span> = Number;\n  do {\n    if (<span class=\"supfact\">local_20</span> & lt; Number) {\n      uVar5 = std __cxx11 basic_string & lt;\n      char, std char_traits &lt;\n      char &gt;\n      , std allocator &lt;\n      char &gt;\n      &gt;\n      size();\n      if (uVar5 &lt; = <span class=\"supfact\">local_20</span>)\n        goto LAB_0010262d;\n      bVar1 = true;\n    } else {\n    LAB_0010262d:\n      bVar1 = false;\n    }\n    if (!bVar1) {\n      *(undefined *)(<span class=\"supfact\">local_20</span> + lVar4) = Number;\n      std set_terminate(dlib_fatal_error_terminate);\n      check_for_previous_fatal_errors() is_first_fatal_error = Number;\n      return;\n    }\n    puVar6 = (undefined *)std __cxx11 basic_string & lt;\n    char, std char_traits &lt;\n    char &gt;\n    , std allocator &lt;\n    char &gt;\n    &gt;\n    operator[]((ulong)(<span class=\"supfact\">this</span> + Number));\n    *(undefined *)(<span class=\"supfact\">local_20</span> + lVar4) = *puVar6;\n    <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_20</span> + Number;\n  } while (true);\n}", "code_t": "void __thiscall dlib fatal_error\ncheck_for_previous_fatal_errors(fatal_error *<span class=\"supfact\">this</span>) {\n  bool bVar1;\n  basic_ostream *pbVar2;\n  char *pcVar3;\n  ulong uVar4;\n  char *pcVar5;\n  fatal_error *<span class=\"supfact\">this</span> - local;\n  char *msg;\n  ulong <span class=\"supfact\">i</span>;\n  if (!check_for_previous_fatal_errors is_first_fatal_error) {\n    pbVar2 = std operator& lt;\n    &lt;\n    ((basic_ostream *)&amp; std cerr, String);\n    std basic_ostream &lt;\n    char, std char_traits &lt;\n    char &gt;\n    &gt;\n    operator& lt;\n    &lt;\n    ((basic_ostream & lt; char, std char_traits &lt; char &gt; &gt; *)pbVar2,\n     std endl & lt;\n     char, std char_traits &lt; char &gt; &gt;);\n    pbVar2 = std operator& lt;\n    &lt;\n    ((basic_ostream *)&amp; std cerr, String);\n    std basic_ostream &lt;\n    char, std char_traits &lt;\n    char &gt;\n    &gt;\n    operator& lt;\n    &lt;\n    ((basic_ostream & lt; char, std char_traits &lt; char &gt; &gt; *)pbVar2,\n     std endl & lt;\n     char, std char_traits &lt; char &gt; &gt;);\n    pbVar2 = std operator& lt;\n    &lt;\n    ((basic_ostream *)&amp; std cerr, String);\n    std basic_ostream &lt;\n    char, std char_traits &lt;\n    char &gt;\n    &gt;\n    operator& lt;\n    &lt;\n    ((basic_ostream & lt; char, std char_traits &lt; char &gt; &gt; *)pbVar2,\n     std endl & lt;\n     char, std char_traits &lt; char &gt; &gt;);\n    pbVar2 = std operator& lt;\n    &lt;\n    ((basic_ostream *)&amp; std cerr, String);\n    pbVar2 = std operator& lt;\n    &lt;\n    (pbVar2, String);\n    pbVar2 = std operator& lt;\n    &lt;\n    (pbVar2, String);\n    pbVar2 = std operator& lt;\n    &lt;\n    (pbVar2, String);\n    pcVar3 = (char *)(**(code **)(*(long *)&amp; <span class=\"supfact\">this</span> - &gt;\n                                  super_error + Number))(<span class=\"supfact\">this</span>);\n    pbVar2 = std operator& lt;\n    &lt;\n    (pbVar2, pcVar3);\n    pbVar2 = std operator& lt;\n    &lt;\n    (pbVar2, String);\n    std basic_ostream &lt;\n    char, std char_traits &lt;\n    char &gt;\n    &gt;\n    operator& lt;\n    &lt;\n    ((basic_ostream & lt; char, std char_traits &lt; char &gt; &gt; *)pbVar2,\n     std endl & lt;\n     char, std char_traits &lt; char &gt; &gt;);\n    __assert_fail(String, String, Number, String);\n  }\n  pcVar3 = message();\n  <span class=\"supfact\">i</span> = Number;\n  do {\n    if (<span class=\"supfact\">i</span> & lt; Number) {\n      uVar4 = std __cxx11 basic_string & lt;\n      char, std char_traits &lt;\n      char &gt;\n      , std allocator &lt;\n      char &gt;\n      &gt;\n      size();\n      if (uVar4 &lt; = <span class=\"supfact\">i</span>)\n        goto LAB_0010262d;\n      bVar1 = true;\n    } else {\n    LAB_0010262d:\n      bVar1 = false;\n    }\n    if (!bVar1) {\n      pcVar3[<span class=\"supfact\">i</span>] = String;\n      std set_terminate(dlib_fatal_error_terminate);\n      check_for_previous_fatal_errors is_first_fatal_error = false;\n      return;\n    }\n    pcVar5 = (char *)std __cxx11 basic_string & lt;\n    char, std char_traits &lt;\n    char &gt;\n    , std allocator &lt;\n    char &gt;\n    &gt;\n    operator[]((ulong)&amp; (<span class=\"supfact\">this</span> - &gt; super_error).info);\n    pcVar3[<span class=\"supfact\">i</span>] = *pcVar5;\n    <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number;\n  } while (true);\n}", "var": [{"name": "this", "type": "fatal_error * *", "pred_name": "this", "ref_name": "this", "ref_type": "fatal_error * *"}, {"name": "local_20", "type": "ulong", "pred_name": "i", "ref_name": "i", "ref_type": "ulong"}], "body_in_train": false}, {"repo_owner": "StefanLage", "repo_name": "WikiDoc", "path": "StefanLage/WikiDoc/096fb4e91a4a385c61d1ccc0f0b7bbef113c26fcaa9199fb10e347c042a77709", "path_in_repo": "StefanLage/WikiDoc/src/.nit_compile/metamodel___abstractmetamodel._sep._savo.o", "objdump": "000000000000b787 <metamodel___abstractmetamodel___MMLocalProperty___full_name>:\n    b787:\t55                   \tpush   %rbp\n    b788:\t48 89 e5             \tmov    %rsp,%rbp\n    b78b:\t48 81 ec 90 00 00 00 \tsub    $0x90,%rsp\n    b792:\t48 89 bd 78 ff ff ff \tmov    %rdi,-0x88(%rbp)\n    b799:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # b7a0 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x19>\n    b7a0:\t48 89 45 80          \tmov    %rax,-0x80(%rbp)\n    b7a4:\t48 8d 45 80          \tlea    -0x80(%rbp),%rax\n    b7a8:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # b7af <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x28>\n    b7af:\t48 c7 45 88 00 00 00 \tmovq   $0x0,-0x78(%rbp)\n    b7b6:\t00 \n    b7b7:\tc7 45 90 6e 02 00 00 \tmovl   $0x26e,-0x70(%rbp)\n    b7be:\t48 c7 45 98 00 00 00 \tmovq   $0x0,-0x68(%rbp)\n    b7c5:\t00 \n    b7c6:\tc7 45 b0 00 00 00 00 \tmovl   $0x0,-0x50(%rbp)\n    b7cd:\tc7 45 c0 04 00 00 00 \tmovl   $0x4,-0x40(%rbp)\n    b7d4:\t48 c7 45 b8 00 00 00 \tmovq   $0x0,-0x48(%rbp)\n    b7db:\t00 \n    b7dc:\t48 c7 45 c8 00 00 00 \tmovq   $0x0,-0x38(%rbp)\n    b7e3:\t00 \n    b7e4:\t48 c7 45 d0 00 00 00 \tmovq   $0x0,-0x30(%rbp)\n    b7eb:\t00 \n    b7ec:\t48 c7 45 d8 00 00 00 \tmovq   $0x0,-0x28(%rbp)\n    b7f3:\t00 \n    b7f4:\t48 c7 45 e0 00 00 00 \tmovq   $0x0,-0x20(%rbp)\n    b7fb:\t00 \n    b7fc:\t48 8b 85 78 ff ff ff \tmov    -0x88(%rbp),%rax\n    b803:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    b807:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # b80d <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x86>\n    b80d:\t48 98                \tcltq   \n    b80f:\t48 8d 14 c5 00 00 00 \tlea    0x0(,%rax,8),%rdx\n    b816:\t00 \n    b817:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    b81b:\t48 01 d0             \tadd    %rdx,%rax\n    b81e:\t48 83 c0 10          \tadd    $0x10,%rax\n    b822:\t48 8b 00             \tmov    (%rax),%rax\n    b825:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    b829:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b82d:\t48 85 c0             \ttest   %rax,%rax\n    b830:\t75 07                \tjne    b839 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xb2>\n    b832:\tb8 07 00 00 00       \tmov    $0x7,%eax\n    b837:\teb 05                \tjmp    b83e <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xb7>\n    b839:\tb8 03 00 00 00       \tmov    $0x3,%eax\n    b83e:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    b842:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    b846:\tc1 f8 02             \tsar    $0x2,%eax\n    b849:\t85 c0                \ttest   %eax,%eax\n    b84b:\t0f 85 90 00 00 00    \tjne    b8e1 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x15a>\n    b851:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b855:\t48 85 c0             \ttest   %rax,%rax\n    b858:\t75 07                \tjne    b861 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xda>\n    b85a:\tb8 07 00 00 00       \tmov    $0x7,%eax\n    b85f:\teb 05                \tjmp    b866 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xdf>\n    b861:\tb8 03 00 00 00       \tmov    $0x3,%eax\n    b866:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    b86a:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    b86e:\tc1 f8 02             \tsar    $0x2,%eax\n    b871:\t85 c0                \ttest   %eax,%eax\n    b873:\t74 12                \tje     b887 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x100>\n    b875:\t48 c7 45 f0 03 00 00 \tmovq   $0x3,-0x10(%rbp)\n    b87c:\t00 \n    b87d:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    b881:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    b885:\teb 5a                \tjmp    b8e1 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x15a>\n    b887:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b88b:\t83 e0 03             \tand    $0x3,%eax\n    b88e:\t85 c0                \ttest   %eax,%eax\n    b890:\t75 0d                \tjne    b89f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x118>\n    b892:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b896:\t48 8b 00             \tmov    (%rax),%rax\n    b899:\t48 83 c0 18          \tadd    $0x18,%rax\n    b89d:\teb 15                \tjmp    b8b4 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x12d>\n    b89f:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b8a3:\t83 e0 03             \tand    $0x3,%eax\n    b8a6:\t48 98                \tcltq   \n    b8a8:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    b8af:\t00 \n    b8b0:\t48 83 c0 18          \tadd    $0x18,%rax\n    b8b4:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # b8ba <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x133>\n    b8ba:\t48 63 d2             \tmovslq %edx,%rdx\n    b8bd:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    b8c1:\t48 01 d0             \tadd    %rdx,%rax\n    b8c4:\t48 8b 10             \tmov    (%rax),%rdx\n    b8c7:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b8cb:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    b8d0:\t48 89 c7             \tmov    %rax,%rdi\n    b8d3:\tff d2                \tcall   *%rdx\n    b8d5:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    b8d9:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    b8dd:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    b8e1:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    b8e5:\tc1 f8 02             \tsar    $0x2,%eax\n    b8e8:\t85 c0                \ttest   %eax,%eax\n    b8ea:\t0f 84 21 06 00 00    \tje     bf11 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x78a>\n    b8f0:\t48 c7 45 f8 1d 00 00 \tmovq   $0x1d,-0x8(%rbp)\n    b8f7:\t00 \n    b8f8:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    b8fc:\t48 89 c7             \tmov    %rax,%rdi\n    b8ff:\te8 00 00 00 00       \tcall   b904 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x17d>\n    b904:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    b908:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # b90f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x188>\n    b90f:\t48 85 c0             \ttest   %rax,%rax\n    b912:\t75 44                \tjne    b958 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1d1>\n    b914:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    b919:\te8 00 00 00 00       \tcall   b91e <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x197>\n    b91e:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    b922:\t48 c7 45 f8 01 00 00 \tmovq   $0x1,-0x8(%rbp)\n    b929:\t00 \n    b92a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    b92e:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    b932:\t48 89 d6             \tmov    %rdx,%rsi\n    b935:\t48 89 c7             \tmov    %rax,%rdi\n    b938:\te8 00 00 00 00       \tcall   b93d <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1b6>\n    b93d:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    b941:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    b945:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # b94c <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1c5>\n    b94c:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    b951:\te8 00 00 00 00       \tcall   b956 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1cf>\n    b956:\teb 0b                \tjmp    b963 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1dc>\n    b958:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # b95f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1d8>\n    b95f:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    b963:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    b967:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    b96b:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b96f:\t83 e0 03             \tand    $0x3,%eax\n    b972:\t85 c0                \ttest   %eax,%eax\n    b974:\t75 0d                \tjne    b983 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1fc>\n    b976:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b97a:\t48 8b 00             \tmov    (%rax),%rax\n    b97d:\t48 83 c0 08          \tadd    $0x8,%rax\n    b981:\teb 15                \tjmp    b998 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x211>\n    b983:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b987:\t83 e0 03             \tand    $0x3,%eax\n    b98a:\t48 98                \tcltq   \n    b98c:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    b993:\t00 \n    b994:\t48 83 c0 08          \tadd    $0x8,%rax\n    b998:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # b99e <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x217>\n    b99e:\t48 63 d2             \tmovslq %edx,%rdx\n    b9a1:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    b9a5:\t48 01 d0             \tadd    %rdx,%rax\n    b9a8:\t48 8b 08             \tmov    (%rax),%rcx\n    b9ab:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    b9af:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    b9b3:\t48 89 d6             \tmov    %rdx,%rsi\n    b9b6:\t48 89 c7             \tmov    %rax,%rdi\n    b9b9:\tff d1                \tcall   *%rcx\n    b9bb:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    b9bf:\t83 e0 03             \tand    $0x3,%eax\n    b9c2:\t85 c0                \ttest   %eax,%eax\n    b9c4:\t75 0d                \tjne    b9d3 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x24c>\n    b9c6:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    b9ca:\t48 8b 00             \tmov    (%rax),%rax\n    b9cd:\t48 83 c0 10          \tadd    $0x10,%rax\n    b9d1:\teb 15                \tjmp    b9e8 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x261>\n    b9d3:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    b9d7:\t83 e0 03             \tand    $0x3,%eax\n    b9da:\t48 98                \tcltq   \n    b9dc:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    b9e3:\t00 \n    b9e4:\t48 83 c0 10          \tadd    $0x10,%rax\n    b9e8:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # b9ee <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x267>\n    b9ee:\t48 63 d2             \tmovslq %edx,%rdx\n    b9f1:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    b9f5:\t48 01 d0             \tadd    %rdx,%rax\n    b9f8:\t48 8b 10             \tmov    (%rax),%rdx\n    b9fb:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    b9ff:\t48 89 c7             \tmov    %rax,%rdi\n    ba02:\tff d2                \tcall   *%rdx\n    ba04:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    ba08:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ba0c:\t83 e0 03             \tand    $0x3,%eax\n    ba0f:\t85 c0                \ttest   %eax,%eax\n    ba11:\t75 0d                \tjne    ba20 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x299>\n    ba13:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ba17:\t48 8b 00             \tmov    (%rax),%rax\n    ba1a:\t48 83 c0 18          \tadd    $0x18,%rax\n    ba1e:\teb 15                \tjmp    ba35 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x2ae>\n    ba20:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ba24:\t83 e0 03             \tand    $0x3,%eax\n    ba27:\t48 98                \tcltq   \n    ba29:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    ba30:\t00 \n    ba31:\t48 83 c0 18          \tadd    $0x18,%rax\n    ba35:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # ba3b <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x2b4>\n    ba3b:\t48 63 d2             \tmovslq %edx,%rdx\n    ba3e:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    ba42:\t48 01 d0             \tadd    %rdx,%rax\n    ba45:\t48 8b 10             \tmov    (%rax),%rdx\n    ba48:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ba4c:\t48 89 c7             \tmov    %rax,%rdi\n    ba4f:\tff d2                \tcall   *%rdx\n    ba51:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    ba55:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ba59:\t83 e0 03             \tand    $0x3,%eax\n    ba5c:\t85 c0                \ttest   %eax,%eax\n    ba5e:\t75 09                \tjne    ba69 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x2e2>\n    ba60:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ba64:\t48 8b 00             \tmov    (%rax),%rax\n    ba67:\teb 11                \tjmp    ba7a <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x2f3>\n    ba69:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ba6d:\t83 e0 03             \tand    $0x3,%eax\n    ba70:\t48 98                \tcltq   \n    ba72:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    ba79:\t00 \n    ba7a:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # ba80 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x2f9>\n    ba80:\t48 63 d2             \tmovslq %edx,%rdx\n    ba83:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    ba87:\t48 01 d0             \tadd    %rdx,%rax\n    ba8a:\t48 8b 10             \tmov    (%rax),%rdx\n    ba8d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ba91:\t48 89 c7             \tmov    %rax,%rdi\n    ba94:\tff d2                \tcall   *%rdx\n    ba96:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    ba9a:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    ba9e:\t83 e0 03             \tand    $0x3,%eax\n    baa1:\t85 c0                \ttest   %eax,%eax\n    baa3:\t75 0d                \tjne    bab2 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x32b>\n    baa5:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    baa9:\t48 8b 00             \tmov    (%rax),%rax\n    baac:\t48 83 c0 08          \tadd    $0x8,%rax\n    bab0:\teb 15                \tjmp    bac7 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x340>\n    bab2:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bab6:\t83 e0 03             \tand    $0x3,%eax\n    bab9:\t48 98                \tcltq   \n    babb:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    bac2:\t00 \n    bac3:\t48 83 c0 08          \tadd    $0x8,%rax\n    bac7:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # bacd <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x346>\n    bacd:\t48 63 d2             \tmovslq %edx,%rdx\n    bad0:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    bad4:\t48 01 d0             \tadd    %rdx,%rax\n    bad7:\t48 8b 08             \tmov    (%rax),%rcx\n    bada:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    bade:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bae2:\t48 89 d6             \tmov    %rdx,%rsi\n    bae5:\t48 89 c7             \tmov    %rax,%rdi\n    bae8:\tff d1                \tcall   *%rcx\n    baea:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # baf1 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x36a>\n    baf1:\t48 85 c0             \ttest   %rax,%rax\n    baf4:\t75 44                \tjne    bb3a <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x3b3>\n    baf6:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    bafb:\te8 00 00 00 00       \tcall   bb00 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x379>\n    bb00:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    bb04:\t48 c7 45 f8 09 00 00 \tmovq   $0x9,-0x8(%rbp)\n    bb0b:\t00 \n    bb0c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bb10:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    bb14:\t48 89 d6             \tmov    %rdx,%rsi\n    bb17:\t48 89 c7             \tmov    %rax,%rdi\n    bb1a:\te8 00 00 00 00       \tcall   bb1f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x398>\n    bb1f:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    bb23:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bb27:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # bb2e <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x3a7>\n    bb2e:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    bb33:\te8 00 00 00 00       \tcall   bb38 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x3b1>\n    bb38:\teb 0b                \tjmp    bb45 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x3be>\n    bb3a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # bb41 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x3ba>\n    bb41:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    bb45:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bb49:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    bb4d:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bb51:\t83 e0 03             \tand    $0x3,%eax\n    bb54:\t85 c0                \ttest   %eax,%eax\n    bb56:\t75 0d                \tjne    bb65 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x3de>\n    bb58:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bb5c:\t48 8b 00             \tmov    (%rax),%rax\n    bb5f:\t48 83 c0 08          \tadd    $0x8,%rax\n    bb63:\teb 15                \tjmp    bb7a <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x3f3>\n    bb65:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bb69:\t83 e0 03             \tand    $0x3,%eax\n    bb6c:\t48 98                \tcltq   \n    bb6e:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    bb75:\t00 \n    bb76:\t48 83 c0 08          \tadd    $0x8,%rax\n    bb7a:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # bb80 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x3f9>\n    bb80:\t48 63 d2             \tmovslq %edx,%rdx\n    bb83:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    bb87:\t48 01 d0             \tadd    %rdx,%rax\n    bb8a:\t48 8b 08             \tmov    (%rax),%rcx\n    bb8d:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    bb91:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bb95:\t48 89 d6             \tmov    %rdx,%rsi\n    bb98:\t48 89 c7             \tmov    %rax,%rdi\n    bb9b:\tff d1                \tcall   *%rcx\n    bb9d:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bba1:\t83 e0 03             \tand    $0x3,%eax\n    bba4:\t85 c0                \ttest   %eax,%eax\n    bba6:\t75 0d                \tjne    bbb5 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x42e>\n    bba8:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bbac:\t48 8b 00             \tmov    (%rax),%rax\n    bbaf:\t48 83 c0 10          \tadd    $0x10,%rax\n    bbb3:\teb 15                \tjmp    bbca <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x443>\n    bbb5:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bbb9:\t83 e0 03             \tand    $0x3,%eax\n    bbbc:\t48 98                \tcltq   \n    bbbe:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    bbc5:\t00 \n    bbc6:\t48 83 c0 10          \tadd    $0x10,%rax\n    bbca:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # bbd0 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x449>\n    bbd0:\t48 63 d2             \tmovslq %edx,%rdx\n    bbd3:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    bbd7:\t48 01 d0             \tadd    %rdx,%rax\n    bbda:\t48 8b 10             \tmov    (%rax),%rdx\n    bbdd:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bbe1:\t48 89 c7             \tmov    %rax,%rdi\n    bbe4:\tff d2                \tcall   *%rdx\n    bbe6:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    bbea:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bbee:\t83 e0 03             \tand    $0x3,%eax\n    bbf1:\t85 c0                \ttest   %eax,%eax\n    bbf3:\t75 09                \tjne    bbfe <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x477>\n    bbf5:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bbf9:\t48 8b 00             \tmov    (%rax),%rax\n    bbfc:\teb 11                \tjmp    bc0f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x488>\n    bbfe:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bc02:\t83 e0 03             \tand    $0x3,%eax\n    bc05:\t48 98                \tcltq   \n    bc07:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    bc0e:\t00 \n    bc0f:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # bc15 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x48e>\n    bc15:\t48 63 d2             \tmovslq %edx,%rdx\n    bc18:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    bc1c:\t48 01 d0             \tadd    %rdx,%rax\n    bc1f:\t48 8b 10             \tmov    (%rax),%rdx\n    bc22:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bc26:\t48 89 c7             \tmov    %rax,%rdi\n    bc29:\tff d2                \tcall   *%rdx\n    bc2b:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    bc2f:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bc33:\t83 e0 03             \tand    $0x3,%eax\n    bc36:\t85 c0                \ttest   %eax,%eax\n    bc38:\t75 0d                \tjne    bc47 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x4c0>\n    bc3a:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bc3e:\t48 8b 00             \tmov    (%rax),%rax\n    bc41:\t48 83 c0 08          \tadd    $0x8,%rax\n    bc45:\teb 15                \tjmp    bc5c <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x4d5>\n    bc47:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bc4b:\t83 e0 03             \tand    $0x3,%eax\n    bc4e:\t48 98                \tcltq   \n    bc50:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    bc57:\t00 \n    bc58:\t48 83 c0 08          \tadd    $0x8,%rax\n    bc5c:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # bc62 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x4db>\n    bc62:\t48 63 d2             \tmovslq %edx,%rdx\n    bc65:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    bc69:\t48 01 d0             \tadd    %rdx,%rax\n    bc6c:\t48 8b 08             \tmov    (%rax),%rcx\n    bc6f:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    bc73:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bc77:\t48 89 d6             \tmov    %rdx,%rsi\n    bc7a:\t48 89 c7             \tmov    %rax,%rdi\n    bc7d:\tff d1                \tcall   *%rcx\n    bc7f:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # bc86 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x4ff>\n    bc86:\t48 85 c0             \ttest   %rax,%rax\n    bc89:\t75 44                \tjne    bccf <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x548>\n    bc8b:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    bc90:\te8 00 00 00 00       \tcall   bc95 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x50e>\n    bc95:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    bc99:\t48 c7 45 f8 19 00 00 \tmovq   $0x19,-0x8(%rbp)\n    bca0:\t00 \n    bca1:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bca5:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    bca9:\t48 89 d6             \tmov    %rdx,%rsi\n    bcac:\t48 89 c7             \tmov    %rax,%rdi\n    bcaf:\te8 00 00 00 00       \tcall   bcb4 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x52d>\n    bcb4:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    bcb8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bcbc:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # bcc3 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x53c>\n    bcc3:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    bcc8:\te8 00 00 00 00       \tcall   bccd <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x546>\n    bccd:\teb 0b                \tjmp    bcda <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x553>\n    bccf:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # bcd6 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x54f>\n    bcd6:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    bcda:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bcde:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    bce2:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bce6:\t83 e0 03             \tand    $0x3,%eax\n    bce9:\t85 c0                \ttest   %eax,%eax\n    bceb:\t75 0d                \tjne    bcfa <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x573>\n    bced:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bcf1:\t48 8b 00             \tmov    (%rax),%rax\n    bcf4:\t48 83 c0 08          \tadd    $0x8,%rax\n    bcf8:\teb 15                \tjmp    bd0f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x588>\n    bcfa:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bcfe:\t83 e0 03             \tand    $0x3,%eax\n    bd01:\t48 98                \tcltq   \n    bd03:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    bd0a:\t00 \n    bd0b:\t48 83 c0 08          \tadd    $0x8,%rax\n    bd0f:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # bd15 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x58e>\n    bd15:\t48 63 d2             \tmovslq %edx,%rdx\n    bd18:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    bd1c:\t48 01 d0             \tadd    %rdx,%rax\n    bd1f:\t48 8b 08             \tmov    (%rax),%rcx\n    bd22:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    bd26:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bd2a:\t48 89 d6             \tmov    %rdx,%rsi\n    bd2d:\t48 89 c7             \tmov    %rax,%rdi\n    bd30:\tff d1                \tcall   *%rcx\n    bd32:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bd36:\t83 e0 03             \tand    $0x3,%eax\n    bd39:\t85 c0                \ttest   %eax,%eax\n    bd3b:\t75 0d                \tjne    bd4a <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x5c3>\n    bd3d:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bd41:\t48 8b 00             \tmov    (%rax),%rax\n    bd44:\t48 83 c0 08          \tadd    $0x8,%rax\n    bd48:\teb 15                \tjmp    bd5f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x5d8>\n    bd4a:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bd4e:\t83 e0 03             \tand    $0x3,%eax\n    bd51:\t48 98                \tcltq   \n    bd53:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    bd5a:\t00 \n    bd5b:\t48 83 c0 08          \tadd    $0x8,%rax\n    bd5f:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # bd65 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x5de>\n    bd65:\t48 63 d2             \tmovslq %edx,%rdx\n    bd68:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    bd6c:\t48 01 d0             \tadd    %rdx,%rax\n    bd6f:\t48 8b 10             \tmov    (%rax),%rdx\n    bd72:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bd76:\t48 89 c7             \tmov    %rax,%rdi\n    bd79:\tff d2                \tcall   *%rdx\n    bd7b:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    bd7f:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bd83:\t83 e0 03             \tand    $0x3,%eax\n    bd86:\t85 c0                \ttest   %eax,%eax\n    bd88:\t75 09                \tjne    bd93 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x60c>\n    bd8a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bd8e:\t48 8b 00             \tmov    (%rax),%rax\n    bd91:\teb 11                \tjmp    bda4 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x61d>\n    bd93:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bd97:\t83 e0 03             \tand    $0x3,%eax\n    bd9a:\t48 98                \tcltq   \n    bd9c:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    bda3:\t00 \n    bda4:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # bdaa <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x623>\n    bdaa:\t48 63 d2             \tmovslq %edx,%rdx\n    bdad:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    bdb1:\t48 01 d0             \tadd    %rdx,%rax\n    bdb4:\t48 8b 10             \tmov    (%rax),%rdx\n    bdb7:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bdbb:\t48 89 c7             \tmov    %rax,%rdi\n    bdbe:\tff d2                \tcall   *%rdx\n    bdc0:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    bdc4:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bdc8:\t83 e0 03             \tand    $0x3,%eax\n    bdcb:\t85 c0                \ttest   %eax,%eax\n    bdcd:\t75 0d                \tjne    bddc <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x655>\n    bdcf:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bdd3:\t48 8b 00             \tmov    (%rax),%rax\n    bdd6:\t48 83 c0 08          \tadd    $0x8,%rax\n    bdda:\teb 15                \tjmp    bdf1 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x66a>\n    bddc:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bde0:\t83 e0 03             \tand    $0x3,%eax\n    bde3:\t48 98                \tcltq   \n    bde5:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    bdec:\t00 \n    bded:\t48 83 c0 08          \tadd    $0x8,%rax\n    bdf1:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # bdf7 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x670>\n    bdf7:\t48 63 d2             \tmovslq %edx,%rdx\n    bdfa:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    bdfe:\t48 01 d0             \tadd    %rdx,%rax\n    be01:\t48 8b 08             \tmov    (%rax),%rcx\n    be04:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    be08:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    be0c:\t48 89 d6             \tmov    %rdx,%rsi\n    be0f:\t48 89 c7             \tmov    %rax,%rdi\n    be12:\tff d1                \tcall   *%rcx\n    be14:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # be1b <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x694>\n    be1b:\t48 85 c0             \ttest   %rax,%rax\n    be1e:\t75 44                \tjne    be64 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x6dd>\n    be20:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    be25:\te8 00 00 00 00       \tcall   be2a <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x6a3>\n    be2a:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    be2e:\t48 c7 45 f8 05 00 00 \tmovq   $0x5,-0x8(%rbp)\n    be35:\t00 \n    be36:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    be3a:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    be3e:\t48 89 d6             \tmov    %rdx,%rsi\n    be41:\t48 89 c7             \tmov    %rax,%rdi\n    be44:\te8 00 00 00 00       \tcall   be49 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x6c2>\n    be49:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    be4d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    be51:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # be58 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x6d1>\n    be58:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    be5d:\te8 00 00 00 00       \tcall   be62 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x6db>\n    be62:\teb 0b                \tjmp    be6f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x6e8>\n    be64:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # be6b <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x6e4>\n    be6b:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    be6f:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    be73:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    be77:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    be7b:\t83 e0 03             \tand    $0x3,%eax\n    be7e:\t85 c0                \ttest   %eax,%eax\n    be80:\t75 0d                \tjne    be8f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x708>\n    be82:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    be86:\t48 8b 00             \tmov    (%rax),%rax\n    be89:\t48 83 c0 08          \tadd    $0x8,%rax\n    be8d:\teb 15                \tjmp    bea4 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x71d>\n    be8f:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    be93:\t83 e0 03             \tand    $0x3,%eax\n    be96:\t48 98                \tcltq   \n    be98:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    be9f:\t00 \n    bea0:\t48 83 c0 08          \tadd    $0x8,%rax\n    bea4:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # beaa <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x723>\n    beaa:\t48 63 d2             \tmovslq %edx,%rdx\n    bead:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    beb1:\t48 01 d0             \tadd    %rdx,%rax\n    beb4:\t48 8b 08             \tmov    (%rax),%rcx\n    beb7:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    bebb:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bebf:\t48 89 d6             \tmov    %rdx,%rsi\n    bec2:\t48 89 c7             \tmov    %rax,%rdi\n    bec5:\tff d1                \tcall   *%rcx\n    bec7:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    becb:\t83 e0 03             \tand    $0x3,%eax\n    bece:\t85 c0                \ttest   %eax,%eax\n    bed0:\t75 09                \tjne    bedb <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x754>\n    bed2:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bed6:\t48 8b 00             \tmov    (%rax),%rax\n    bed9:\teb 11                \tjmp    beec <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x765>\n    bedb:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bedf:\t83 e0 03             \tand    $0x3,%eax\n    bee2:\t48 98                \tcltq   \n    bee4:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    beeb:\t00 \n    beec:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # bef2 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x76b>\n    bef2:\t48 63 d2             \tmovslq %edx,%rdx\n    bef5:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    bef9:\t48 01 d0             \tadd    %rdx,%rax\n    befc:\t48 8b 10             \tmov    (%rax),%rdx\n    beff:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    bf03:\t48 89 c7             \tmov    %rax,%rdi\n    bf06:\tff d2                \tcall   *%rdx\n    bf08:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    bf0c:\te9 2b 0e 00 00       \tjmp    cd3c <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x15b5>\n    bf11:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bf15:\t83 e0 03             \tand    $0x3,%eax\n    bf18:\t85 c0                \ttest   %eax,%eax\n    bf1a:\t75 0d                \tjne    bf29 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x7a2>\n    bf1c:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bf20:\t48 8b 00             \tmov    (%rax),%rax\n    bf23:\t48 83 c0 18          \tadd    $0x18,%rax\n    bf27:\teb 15                \tjmp    bf3e <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x7b7>\n    bf29:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bf2d:\t83 e0 03             \tand    $0x3,%eax\n    bf30:\t48 98                \tcltq   \n    bf32:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    bf39:\t00 \n    bf3a:\t48 83 c0 18          \tadd    $0x18,%rax\n    bf3e:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # bf44 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x7bd>\n    bf44:\t48 63 d2             \tmovslq %edx,%rdx\n    bf47:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    bf4b:\t48 01 d0             \tadd    %rdx,%rax\n    bf4e:\t48 8b 10             \tmov    (%rax),%rdx\n    bf51:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bf55:\t48 89 c7             \tmov    %rax,%rdi\n    bf58:\tff d2                \tcall   *%rdx\n    bf5a:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    bf5e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bf62:\t83 e0 03             \tand    $0x3,%eax\n    bf65:\t85 c0                \ttest   %eax,%eax\n    bf67:\t75 0d                \tjne    bf76 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x7ef>\n    bf69:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bf6d:\t48 8b 00             \tmov    (%rax),%rax\n    bf70:\t48 83 c0 08          \tadd    $0x8,%rax\n    bf74:\teb 15                \tjmp    bf8b <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x804>\n    bf76:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bf7a:\t83 e0 03             \tand    $0x3,%eax\n    bf7d:\t48 98                \tcltq   \n    bf7f:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    bf86:\t00 \n    bf87:\t48 83 c0 08          \tadd    $0x8,%rax\n    bf8b:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # bf91 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x80a>\n    bf91:\t48 63 d2             \tmovslq %edx,%rdx\n    bf94:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    bf98:\t48 01 d0             \tadd    %rdx,%rax\n    bf9b:\t48 8b 10             \tmov    (%rax),%rdx\n    bf9e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bfa2:\t48 89 c7             \tmov    %rax,%rdi\n    bfa5:\tff d2                \tcall   *%rdx\n    bfa7:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    bfab:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    bfaf:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bfb3:\t48 39 c2             \tcmp    %rax,%rdx\n    bfb6:\t74 53                \tje     c00b <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x884>\n    bfb8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bfbc:\t83 e0 03             \tand    $0x3,%eax\n    bfbf:\t85 c0                \ttest   %eax,%eax\n    bfc1:\t75 4f                \tjne    c012 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x88b>\n    bfc3:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bfc7:\t48 8b 00             \tmov    (%rax),%rax\n    bfca:\t48 8b 00             \tmov    (%rax),%rax\n    bfcd:\t48 85 c0             \ttest   %rax,%rax\n    bfd0:\t79 40                \tjns    c012 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x88b>\n    bfd2:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bfd6:\t83 e0 03             \tand    $0x3,%eax\n    bfd9:\t85 c0                \ttest   %eax,%eax\n    bfdb:\t75 35                \tjne    c012 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x88b>\n    bfdd:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bfe1:\t48 83 c0 10          \tadd    $0x10,%rax\n    bfe5:\t48 8b 10             \tmov    (%rax),%rdx\n    bfe8:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    bfec:\t48 83 c0 10          \tadd    $0x10,%rax\n    bff0:\t48 8b 00             \tmov    (%rax),%rax\n    bff3:\t48 39 c2             \tcmp    %rax,%rdx\n    bff6:\t75 1a                \tjne    c012 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x88b>\n    bff8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    bffc:\t48 8b 10             \tmov    (%rax),%rdx\n    bfff:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c003:\t48 8b 00             \tmov    (%rax),%rax\n    c006:\t48 39 c2             \tcmp    %rax,%rdx\n    c009:\t75 07                \tjne    c012 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x88b>\n    c00b:\tb8 01 00 00 00       \tmov    $0x1,%eax\n    c010:\teb 05                \tjmp    c017 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x890>\n    c012:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    c017:\tc1 e0 02             \tshl    $0x2,%eax\n    c01a:\t83 c8 03             \tor     $0x3,%eax\n    c01d:\t48 98                \tcltq   \n    c01f:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    c023:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    c027:\tc1 f8 02             \tsar    $0x2,%eax\n    c02a:\t85 c0                \ttest   %eax,%eax\n    c02c:\t75 5c                \tjne    c08a <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x903>\n    c02e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c032:\t83 e0 03             \tand    $0x3,%eax\n    c035:\t85 c0                \ttest   %eax,%eax\n    c037:\t75 0d                \tjne    c046 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x8bf>\n    c039:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c03d:\t48 8b 00             \tmov    (%rax),%rax\n    c040:\t48 83 c0 18          \tadd    $0x18,%rax\n    c044:\teb 15                \tjmp    c05b <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x8d4>\n    c046:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c04a:\t83 e0 03             \tand    $0x3,%eax\n    c04d:\t48 98                \tcltq   \n    c04f:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c056:\t00 \n    c057:\t48 83 c0 18          \tadd    $0x18,%rax\n    c05b:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c061 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x8da>\n    c061:\t48 63 d2             \tmovslq %edx,%rdx\n    c064:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c068:\t48 01 d0             \tadd    %rdx,%rax\n    c06b:\t48 8b 08             \tmov    (%rax),%rcx\n    c06e:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    c072:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c076:\t48 89 d6             \tmov    %rdx,%rsi\n    c079:\t48 89 c7             \tmov    %rax,%rdi\n    c07c:\tff d1                \tcall   *%rcx\n    c07e:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    c082:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    c086:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    c08a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    c08e:\tc1 f8 02             \tsar    $0x2,%eax\n    c091:\t85 c0                \ttest   %eax,%eax\n    c093:\t0f 84 29 06 00 00    \tje     c6c2 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xf3b>\n    c099:\t48 c7 45 f8 1d 00 00 \tmovq   $0x1d,-0x8(%rbp)\n    c0a0:\t00 \n    c0a1:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    c0a5:\t48 89 c7             \tmov    %rax,%rdi\n    c0a8:\te8 00 00 00 00       \tcall   c0ad <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x926>\n    c0ad:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    c0b1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c0b8 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x931>\n    c0b8:\t48 85 c0             \ttest   %rax,%rax\n    c0bb:\t75 44                \tjne    c101 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x97a>\n    c0bd:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    c0c2:\te8 00 00 00 00       \tcall   c0c7 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x940>\n    c0c7:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c0cb:\t48 c7 45 f8 01 00 00 \tmovq   $0x1,-0x8(%rbp)\n    c0d2:\t00 \n    c0d3:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c0d7:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    c0db:\t48 89 d6             \tmov    %rdx,%rsi\n    c0de:\t48 89 c7             \tmov    %rax,%rdi\n    c0e1:\te8 00 00 00 00       \tcall   c0e6 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x95f>\n    c0e6:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c0ea:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c0ee:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # c0f5 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x96e>\n    c0f5:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    c0fa:\te8 00 00 00 00       \tcall   c0ff <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x978>\n    c0ff:\teb 0b                \tjmp    c10c <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x985>\n    c101:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c108 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x981>\n    c108:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c10c:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c110:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c114:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c118:\t83 e0 03             \tand    $0x3,%eax\n    c11b:\t85 c0                \ttest   %eax,%eax\n    c11d:\t75 0d                \tjne    c12c <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x9a5>\n    c11f:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c123:\t48 8b 00             \tmov    (%rax),%rax\n    c126:\t48 83 c0 08          \tadd    $0x8,%rax\n    c12a:\teb 15                \tjmp    c141 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x9ba>\n    c12c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c130:\t83 e0 03             \tand    $0x3,%eax\n    c133:\t48 98                \tcltq   \n    c135:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c13c:\t00 \n    c13d:\t48 83 c0 08          \tadd    $0x8,%rax\n    c141:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c147 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x9c0>\n    c147:\t48 63 d2             \tmovslq %edx,%rdx\n    c14a:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c14e:\t48 01 d0             \tadd    %rdx,%rax\n    c151:\t48 8b 08             \tmov    (%rax),%rcx\n    c154:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    c158:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c15c:\t48 89 d6             \tmov    %rdx,%rsi\n    c15f:\t48 89 c7             \tmov    %rax,%rdi\n    c162:\tff d1                \tcall   *%rcx\n    c164:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c168:\t83 e0 03             \tand    $0x3,%eax\n    c16b:\t85 c0                \ttest   %eax,%eax\n    c16d:\t75 0d                \tjne    c17c <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x9f5>\n    c16f:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c173:\t48 8b 00             \tmov    (%rax),%rax\n    c176:\t48 83 c0 10          \tadd    $0x10,%rax\n    c17a:\teb 15                \tjmp    c191 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xa0a>\n    c17c:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c180:\t83 e0 03             \tand    $0x3,%eax\n    c183:\t48 98                \tcltq   \n    c185:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c18c:\t00 \n    c18d:\t48 83 c0 10          \tadd    $0x10,%rax\n    c191:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c197 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xa10>\n    c197:\t48 63 d2             \tmovslq %edx,%rdx\n    c19a:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c19e:\t48 01 d0             \tadd    %rdx,%rax\n    c1a1:\t48 8b 10             \tmov    (%rax),%rdx\n    c1a4:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c1a8:\t48 89 c7             \tmov    %rax,%rdi\n    c1ab:\tff d2                \tcall   *%rdx\n    c1ad:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c1b1:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c1b5:\t83 e0 03             \tand    $0x3,%eax\n    c1b8:\t85 c0                \ttest   %eax,%eax\n    c1ba:\t75 0d                \tjne    c1c9 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xa42>\n    c1bc:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c1c0:\t48 8b 00             \tmov    (%rax),%rax\n    c1c3:\t48 83 c0 18          \tadd    $0x18,%rax\n    c1c7:\teb 15                \tjmp    c1de <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xa57>\n    c1c9:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c1cd:\t83 e0 03             \tand    $0x3,%eax\n    c1d0:\t48 98                \tcltq   \n    c1d2:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c1d9:\t00 \n    c1da:\t48 83 c0 18          \tadd    $0x18,%rax\n    c1de:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c1e4 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xa5d>\n    c1e4:\t48 63 d2             \tmovslq %edx,%rdx\n    c1e7:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c1eb:\t48 01 d0             \tadd    %rdx,%rax\n    c1ee:\t48 8b 10             \tmov    (%rax),%rdx\n    c1f1:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c1f5:\t48 89 c7             \tmov    %rax,%rdi\n    c1f8:\tff d2                \tcall   *%rdx\n    c1fa:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c1fe:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c202:\t83 e0 03             \tand    $0x3,%eax\n    c205:\t85 c0                \ttest   %eax,%eax\n    c207:\t75 09                \tjne    c212 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xa8b>\n    c209:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c20d:\t48 8b 00             \tmov    (%rax),%rax\n    c210:\teb 11                \tjmp    c223 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xa9c>\n    c212:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c216:\t83 e0 03             \tand    $0x3,%eax\n    c219:\t48 98                \tcltq   \n    c21b:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c222:\t00 \n    c223:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c229 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xaa2>\n    c229:\t48 63 d2             \tmovslq %edx,%rdx\n    c22c:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c230:\t48 01 d0             \tadd    %rdx,%rax\n    c233:\t48 8b 10             \tmov    (%rax),%rdx\n    c236:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c23a:\t48 89 c7             \tmov    %rax,%rdi\n    c23d:\tff d2                \tcall   *%rdx\n    c23f:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c243:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c247:\t83 e0 03             \tand    $0x3,%eax\n    c24a:\t85 c0                \ttest   %eax,%eax\n    c24c:\t75 0d                \tjne    c25b <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xad4>\n    c24e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c252:\t48 8b 00             \tmov    (%rax),%rax\n    c255:\t48 83 c0 08          \tadd    $0x8,%rax\n    c259:\teb 15                \tjmp    c270 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xae9>\n    c25b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c25f:\t83 e0 03             \tand    $0x3,%eax\n    c262:\t48 98                \tcltq   \n    c264:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c26b:\t00 \n    c26c:\t48 83 c0 08          \tadd    $0x8,%rax\n    c270:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c276 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xaef>\n    c276:\t48 63 d2             \tmovslq %edx,%rdx\n    c279:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c27d:\t48 01 d0             \tadd    %rdx,%rax\n    c280:\t48 8b 08             \tmov    (%rax),%rcx\n    c283:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    c287:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c28b:\t48 89 d6             \tmov    %rdx,%rsi\n    c28e:\t48 89 c7             \tmov    %rax,%rdi\n    c291:\tff d1                \tcall   *%rcx\n    c293:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c29a <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xb13>\n    c29a:\t48 85 c0             \ttest   %rax,%rax\n    c29d:\t75 44                \tjne    c2e3 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xb5c>\n    c29f:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    c2a4:\te8 00 00 00 00       \tcall   c2a9 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xb22>\n    c2a9:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c2ad:\t48 c7 45 f8 09 00 00 \tmovq   $0x9,-0x8(%rbp)\n    c2b4:\t00 \n    c2b5:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c2b9:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    c2bd:\t48 89 d6             \tmov    %rdx,%rsi\n    c2c0:\t48 89 c7             \tmov    %rax,%rdi\n    c2c3:\te8 00 00 00 00       \tcall   c2c8 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xb41>\n    c2c8:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c2cc:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c2d0:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # c2d7 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xb50>\n    c2d7:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    c2dc:\te8 00 00 00 00       \tcall   c2e1 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xb5a>\n    c2e1:\teb 0b                \tjmp    c2ee <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xb67>\n    c2e3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c2ea <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xb63>\n    c2ea:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c2ee:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c2f2:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c2f6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c2fa:\t83 e0 03             \tand    $0x3,%eax\n    c2fd:\t85 c0                \ttest   %eax,%eax\n    c2ff:\t75 0d                \tjne    c30e <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xb87>\n    c301:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c305:\t48 8b 00             \tmov    (%rax),%rax\n    c308:\t48 83 c0 08          \tadd    $0x8,%rax\n    c30c:\teb 15                \tjmp    c323 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xb9c>\n    c30e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c312:\t83 e0 03             \tand    $0x3,%eax\n    c315:\t48 98                \tcltq   \n    c317:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c31e:\t00 \n    c31f:\t48 83 c0 08          \tadd    $0x8,%rax\n    c323:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c329 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xba2>\n    c329:\t48 63 d2             \tmovslq %edx,%rdx\n    c32c:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c330:\t48 01 d0             \tadd    %rdx,%rax\n    c333:\t48 8b 08             \tmov    (%rax),%rcx\n    c336:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    c33a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c33e:\t48 89 d6             \tmov    %rdx,%rsi\n    c341:\t48 89 c7             \tmov    %rax,%rdi\n    c344:\tff d1                \tcall   *%rcx\n    c346:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c34a:\t83 e0 03             \tand    $0x3,%eax\n    c34d:\t85 c0                \ttest   %eax,%eax\n    c34f:\t75 0d                \tjne    c35e <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xbd7>\n    c351:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c355:\t48 8b 00             \tmov    (%rax),%rax\n    c358:\t48 83 c0 10          \tadd    $0x10,%rax\n    c35c:\teb 15                \tjmp    c373 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xbec>\n    c35e:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c362:\t83 e0 03             \tand    $0x3,%eax\n    c365:\t48 98                \tcltq   \n    c367:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c36e:\t00 \n    c36f:\t48 83 c0 10          \tadd    $0x10,%rax\n    c373:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c379 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xbf2>\n    c379:\t48 63 d2             \tmovslq %edx,%rdx\n    c37c:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c380:\t48 01 d0             \tadd    %rdx,%rax\n    c383:\t48 8b 10             \tmov    (%rax),%rdx\n    c386:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c38a:\t48 89 c7             \tmov    %rax,%rdi\n    c38d:\tff d2                \tcall   *%rdx\n    c38f:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c393:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c397:\t83 e0 03             \tand    $0x3,%eax\n    c39a:\t85 c0                \ttest   %eax,%eax\n    c39c:\t75 09                \tjne    c3a7 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xc20>\n    c39e:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c3a2:\t48 8b 00             \tmov    (%rax),%rax\n    c3a5:\teb 11                \tjmp    c3b8 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xc31>\n    c3a7:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c3ab:\t83 e0 03             \tand    $0x3,%eax\n    c3ae:\t48 98                \tcltq   \n    c3b0:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c3b7:\t00 \n    c3b8:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c3be <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xc37>\n    c3be:\t48 63 d2             \tmovslq %edx,%rdx\n    c3c1:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c3c5:\t48 01 d0             \tadd    %rdx,%rax\n    c3c8:\t48 8b 10             \tmov    (%rax),%rdx\n    c3cb:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c3cf:\t48 89 c7             \tmov    %rax,%rdi\n    c3d2:\tff d2                \tcall   *%rdx\n    c3d4:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c3d8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c3dc:\t83 e0 03             \tand    $0x3,%eax\n    c3df:\t85 c0                \ttest   %eax,%eax\n    c3e1:\t75 0d                \tjne    c3f0 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xc69>\n    c3e3:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c3e7:\t48 8b 00             \tmov    (%rax),%rax\n    c3ea:\t48 83 c0 08          \tadd    $0x8,%rax\n    c3ee:\teb 15                \tjmp    c405 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xc7e>\n    c3f0:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c3f4:\t83 e0 03             \tand    $0x3,%eax\n    c3f7:\t48 98                \tcltq   \n    c3f9:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c400:\t00 \n    c401:\t48 83 c0 08          \tadd    $0x8,%rax\n    c405:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c40b <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xc84>\n    c40b:\t48 63 d2             \tmovslq %edx,%rdx\n    c40e:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c412:\t48 01 d0             \tadd    %rdx,%rax\n    c415:\t48 8b 08             \tmov    (%rax),%rcx\n    c418:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    c41c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c420:\t48 89 d6             \tmov    %rdx,%rsi\n    c423:\t48 89 c7             \tmov    %rax,%rdi\n    c426:\tff d1                \tcall   *%rcx\n    c428:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c42f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xca8>\n    c42f:\t48 85 c0             \ttest   %rax,%rax\n    c432:\t75 44                \tjne    c478 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xcf1>\n    c434:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    c439:\te8 00 00 00 00       \tcall   c43e <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xcb7>\n    c43e:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c442:\t48 c7 45 f8 09 00 00 \tmovq   $0x9,-0x8(%rbp)\n    c449:\t00 \n    c44a:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c44e:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    c452:\t48 89 d6             \tmov    %rdx,%rsi\n    c455:\t48 89 c7             \tmov    %rax,%rdi\n    c458:\te8 00 00 00 00       \tcall   c45d <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xcd6>\n    c45d:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c461:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c465:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # c46c <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xce5>\n    c46c:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    c471:\te8 00 00 00 00       \tcall   c476 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xcef>\n    c476:\teb 0b                \tjmp    c483 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xcfc>\n    c478:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c47f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xcf8>\n    c47f:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c483:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c487:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c48b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c48f:\t83 e0 03             \tand    $0x3,%eax\n    c492:\t85 c0                \ttest   %eax,%eax\n    c494:\t75 0d                \tjne    c4a3 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xd1c>\n    c496:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c49a:\t48 8b 00             \tmov    (%rax),%rax\n    c49d:\t48 83 c0 08          \tadd    $0x8,%rax\n    c4a1:\teb 15                \tjmp    c4b8 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xd31>\n    c4a3:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c4a7:\t83 e0 03             \tand    $0x3,%eax\n    c4aa:\t48 98                \tcltq   \n    c4ac:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c4b3:\t00 \n    c4b4:\t48 83 c0 08          \tadd    $0x8,%rax\n    c4b8:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c4be <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xd37>\n    c4be:\t48 63 d2             \tmovslq %edx,%rdx\n    c4c1:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c4c5:\t48 01 d0             \tadd    %rdx,%rax\n    c4c8:\t48 8b 08             \tmov    (%rax),%rcx\n    c4cb:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    c4cf:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c4d3:\t48 89 d6             \tmov    %rdx,%rsi\n    c4d6:\t48 89 c7             \tmov    %rax,%rdi\n    c4d9:\tff d1                \tcall   *%rcx\n    c4db:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c4df:\t83 e0 03             \tand    $0x3,%eax\n    c4e2:\t85 c0                \ttest   %eax,%eax\n    c4e4:\t75 0d                \tjne    c4f3 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xd6c>\n    c4e6:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c4ea:\t48 8b 00             \tmov    (%rax),%rax\n    c4ed:\t48 83 c0 08          \tadd    $0x8,%rax\n    c4f1:\teb 15                \tjmp    c508 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xd81>\n    c4f3:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c4f7:\t83 e0 03             \tand    $0x3,%eax\n    c4fa:\t48 98                \tcltq   \n    c4fc:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c503:\t00 \n    c504:\t48 83 c0 08          \tadd    $0x8,%rax\n    c508:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c50e <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xd87>\n    c50e:\t48 63 d2             \tmovslq %edx,%rdx\n    c511:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c515:\t48 01 d0             \tadd    %rdx,%rax\n    c518:\t48 8b 10             \tmov    (%rax),%rdx\n    c51b:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c51f:\t48 89 c7             \tmov    %rax,%rdi\n    c522:\tff d2                \tcall   *%rdx\n    c524:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c528:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c52c:\t83 e0 03             \tand    $0x3,%eax\n    c52f:\t85 c0                \ttest   %eax,%eax\n    c531:\t75 09                \tjne    c53c <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xdb5>\n    c533:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c537:\t48 8b 00             \tmov    (%rax),%rax\n    c53a:\teb 11                \tjmp    c54d <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xdc6>\n    c53c:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c540:\t83 e0 03             \tand    $0x3,%eax\n    c543:\t48 98                \tcltq   \n    c545:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c54c:\t00 \n    c54d:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c553 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xdcc>\n    c553:\t48 63 d2             \tmovslq %edx,%rdx\n    c556:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c55a:\t48 01 d0             \tadd    %rdx,%rax\n    c55d:\t48 8b 10             \tmov    (%rax),%rdx\n    c560:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c564:\t48 89 c7             \tmov    %rax,%rdi\n    c567:\tff d2                \tcall   *%rdx\n    c569:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c56d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c571:\t83 e0 03             \tand    $0x3,%eax\n    c574:\t85 c0                \ttest   %eax,%eax\n    c576:\t75 0d                \tjne    c585 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xdfe>\n    c578:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c57c:\t48 8b 00             \tmov    (%rax),%rax\n    c57f:\t48 83 c0 08          \tadd    $0x8,%rax\n    c583:\teb 15                \tjmp    c59a <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xe13>\n    c585:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c589:\t83 e0 03             \tand    $0x3,%eax\n    c58c:\t48 98                \tcltq   \n    c58e:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c595:\t00 \n    c596:\t48 83 c0 08          \tadd    $0x8,%rax\n    c59a:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c5a0 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xe19>\n    c5a0:\t48 63 d2             \tmovslq %edx,%rdx\n    c5a3:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c5a7:\t48 01 d0             \tadd    %rdx,%rax\n    c5aa:\t48 8b 08             \tmov    (%rax),%rcx\n    c5ad:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    c5b1:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c5b5:\t48 89 d6             \tmov    %rdx,%rsi\n    c5b8:\t48 89 c7             \tmov    %rax,%rdi\n    c5bb:\tff d1                \tcall   *%rcx\n    c5bd:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c5c4 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xe3d>\n    c5c4:\t48 85 c0             \ttest   %rax,%rax\n    c5c7:\t75 44                \tjne    c60d <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xe86>\n    c5c9:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    c5ce:\te8 00 00 00 00       \tcall   c5d3 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xe4c>\n    c5d3:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c5d7:\t48 c7 45 f8 01 00 00 \tmovq   $0x1,-0x8(%rbp)\n    c5de:\t00 \n    c5df:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c5e3:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    c5e7:\t48 89 d6             \tmov    %rdx,%rsi\n    c5ea:\t48 89 c7             \tmov    %rax,%rdi\n    c5ed:\te8 00 00 00 00       \tcall   c5f2 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xe6b>\n    c5f2:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c5f6:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c5fa:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # c601 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xe7a>\n    c601:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    c606:\te8 00 00 00 00       \tcall   c60b <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xe84>\n    c60b:\teb 0b                \tjmp    c618 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xe91>\n    c60d:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c614 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xe8d>\n    c614:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c618:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c61c:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c620:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c624:\t83 e0 03             \tand    $0x3,%eax\n    c627:\t85 c0                \ttest   %eax,%eax\n    c629:\t75 0d                \tjne    c638 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xeb1>\n    c62b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c62f:\t48 8b 00             \tmov    (%rax),%rax\n    c632:\t48 83 c0 08          \tadd    $0x8,%rax\n    c636:\teb 15                \tjmp    c64d <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xec6>\n    c638:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c63c:\t83 e0 03             \tand    $0x3,%eax\n    c63f:\t48 98                \tcltq   \n    c641:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c648:\t00 \n    c649:\t48 83 c0 08          \tadd    $0x8,%rax\n    c64d:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c653 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xecc>\n    c653:\t48 63 d2             \tmovslq %edx,%rdx\n    c656:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c65a:\t48 01 d0             \tadd    %rdx,%rax\n    c65d:\t48 8b 08             \tmov    (%rax),%rcx\n    c660:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    c664:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c668:\t48 89 d6             \tmov    %rdx,%rsi\n    c66b:\t48 89 c7             \tmov    %rax,%rdi\n    c66e:\tff d1                \tcall   *%rcx\n    c670:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c674:\t83 e0 03             \tand    $0x3,%eax\n    c677:\t85 c0                \ttest   %eax,%eax\n    c679:\t75 09                \tjne    c684 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xefd>\n    c67b:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c67f:\t48 8b 00             \tmov    (%rax),%rax\n    c682:\teb 11                \tjmp    c695 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xf0e>\n    c684:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c688:\t83 e0 03             \tand    $0x3,%eax\n    c68b:\t48 98                \tcltq   \n    c68d:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c694:\t00 \n    c695:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c69b <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xf14>\n    c69b:\t48 63 d2             \tmovslq %edx,%rdx\n    c69e:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c6a2:\t48 01 d0             \tadd    %rdx,%rax\n    c6a5:\t48 8b 10             \tmov    (%rax),%rdx\n    c6a8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c6ac:\t48 89 c7             \tmov    %rax,%rdi\n    c6af:\tff d2                \tcall   *%rdx\n    c6b1:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    c6b5:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c6b9:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    c6bd:\te9 7a 06 00 00       \tjmp    cd3c <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x15b5>\n    c6c2:\t48 c7 45 f8 1d 00 00 \tmovq   $0x1d,-0x8(%rbp)\n    c6c9:\t00 \n    c6ca:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    c6ce:\t48 89 c7             \tmov    %rax,%rdi\n    c6d1:\te8 00 00 00 00       \tcall   c6d6 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xf4f>\n    c6d6:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    c6da:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c6e1 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xf5a>\n    c6e1:\t48 85 c0             \ttest   %rax,%rax\n    c6e4:\t75 44                \tjne    c72a <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xfa3>\n    c6e6:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    c6eb:\te8 00 00 00 00       \tcall   c6f0 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xf69>\n    c6f0:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c6f4:\t48 c7 45 f8 01 00 00 \tmovq   $0x1,-0x8(%rbp)\n    c6fb:\t00 \n    c6fc:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c700:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    c704:\t48 89 d6             \tmov    %rdx,%rsi\n    c707:\t48 89 c7             \tmov    %rax,%rdi\n    c70a:\te8 00 00 00 00       \tcall   c70f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xf88>\n    c70f:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c713:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c717:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # c71e <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xf97>\n    c71e:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    c723:\te8 00 00 00 00       \tcall   c728 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xfa1>\n    c728:\teb 0b                \tjmp    c735 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xfae>\n    c72a:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c731 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xfaa>\n    c731:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c735:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c739:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c73d:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c741:\t83 e0 03             \tand    $0x3,%eax\n    c744:\t85 c0                \ttest   %eax,%eax\n    c746:\t75 0d                \tjne    c755 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xfce>\n    c748:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c74c:\t48 8b 00             \tmov    (%rax),%rax\n    c74f:\t48 83 c0 08          \tadd    $0x8,%rax\n    c753:\teb 15                \tjmp    c76a <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xfe3>\n    c755:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c759:\t83 e0 03             \tand    $0x3,%eax\n    c75c:\t48 98                \tcltq   \n    c75e:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c765:\t00 \n    c766:\t48 83 c0 08          \tadd    $0x8,%rax\n    c76a:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c770 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0xfe9>\n    c770:\t48 63 d2             \tmovslq %edx,%rdx\n    c773:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c777:\t48 01 d0             \tadd    %rdx,%rax\n    c77a:\t48 8b 08             \tmov    (%rax),%rcx\n    c77d:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    c781:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c785:\t48 89 d6             \tmov    %rdx,%rsi\n    c788:\t48 89 c7             \tmov    %rax,%rdi\n    c78b:\tff d1                \tcall   *%rcx\n    c78d:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c791:\t83 e0 03             \tand    $0x3,%eax\n    c794:\t85 c0                \ttest   %eax,%eax\n    c796:\t75 0d                \tjne    c7a5 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x101e>\n    c798:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c79c:\t48 8b 00             \tmov    (%rax),%rax\n    c79f:\t48 83 c0 10          \tadd    $0x10,%rax\n    c7a3:\teb 15                \tjmp    c7ba <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1033>\n    c7a5:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c7a9:\t83 e0 03             \tand    $0x3,%eax\n    c7ac:\t48 98                \tcltq   \n    c7ae:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c7b5:\t00 \n    c7b6:\t48 83 c0 10          \tadd    $0x10,%rax\n    c7ba:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c7c0 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1039>\n    c7c0:\t48 63 d2             \tmovslq %edx,%rdx\n    c7c3:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c7c7:\t48 01 d0             \tadd    %rdx,%rax\n    c7ca:\t48 8b 10             \tmov    (%rax),%rdx\n    c7cd:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c7d1:\t48 89 c7             \tmov    %rax,%rdi\n    c7d4:\tff d2                \tcall   *%rdx\n    c7d6:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c7da:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c7de:\t83 e0 03             \tand    $0x3,%eax\n    c7e1:\t85 c0                \ttest   %eax,%eax\n    c7e3:\t75 0d                \tjne    c7f2 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x106b>\n    c7e5:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c7e9:\t48 8b 00             \tmov    (%rax),%rax\n    c7ec:\t48 83 c0 18          \tadd    $0x18,%rax\n    c7f0:\teb 15                \tjmp    c807 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1080>\n    c7f2:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c7f6:\t83 e0 03             \tand    $0x3,%eax\n    c7f9:\t48 98                \tcltq   \n    c7fb:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c802:\t00 \n    c803:\t48 83 c0 18          \tadd    $0x18,%rax\n    c807:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c80d <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1086>\n    c80d:\t48 63 d2             \tmovslq %edx,%rdx\n    c810:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c814:\t48 01 d0             \tadd    %rdx,%rax\n    c817:\t48 8b 10             \tmov    (%rax),%rdx\n    c81a:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c81e:\t48 89 c7             \tmov    %rax,%rdi\n    c821:\tff d2                \tcall   *%rdx\n    c823:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c827:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c82b:\t83 e0 03             \tand    $0x3,%eax\n    c82e:\t85 c0                \ttest   %eax,%eax\n    c830:\t75 09                \tjne    c83b <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x10b4>\n    c832:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c836:\t48 8b 00             \tmov    (%rax),%rax\n    c839:\teb 11                \tjmp    c84c <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x10c5>\n    c83b:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c83f:\t83 e0 03             \tand    $0x3,%eax\n    c842:\t48 98                \tcltq   \n    c844:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c84b:\t00 \n    c84c:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c852 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x10cb>\n    c852:\t48 63 d2             \tmovslq %edx,%rdx\n    c855:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c859:\t48 01 d0             \tadd    %rdx,%rax\n    c85c:\t48 8b 10             \tmov    (%rax),%rdx\n    c85f:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c863:\t48 89 c7             \tmov    %rax,%rdi\n    c866:\tff d2                \tcall   *%rdx\n    c868:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c86c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c870:\t83 e0 03             \tand    $0x3,%eax\n    c873:\t85 c0                \ttest   %eax,%eax\n    c875:\t75 0d                \tjne    c884 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x10fd>\n    c877:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c87b:\t48 8b 00             \tmov    (%rax),%rax\n    c87e:\t48 83 c0 08          \tadd    $0x8,%rax\n    c882:\teb 15                \tjmp    c899 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1112>\n    c884:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c888:\t83 e0 03             \tand    $0x3,%eax\n    c88b:\t48 98                \tcltq   \n    c88d:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c894:\t00 \n    c895:\t48 83 c0 08          \tadd    $0x8,%rax\n    c899:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c89f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1118>\n    c89f:\t48 63 d2             \tmovslq %edx,%rdx\n    c8a2:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c8a6:\t48 01 d0             \tadd    %rdx,%rax\n    c8a9:\t48 8b 08             \tmov    (%rax),%rcx\n    c8ac:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    c8b0:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c8b4:\t48 89 d6             \tmov    %rdx,%rsi\n    c8b7:\t48 89 c7             \tmov    %rax,%rdi\n    c8ba:\tff d1                \tcall   *%rcx\n    c8bc:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c8c3 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x113c>\n    c8c3:\t48 85 c0             \ttest   %rax,%rax\n    c8c6:\t75 44                \tjne    c90c <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1185>\n    c8c8:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    c8cd:\te8 00 00 00 00       \tcall   c8d2 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x114b>\n    c8d2:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c8d6:\t48 c7 45 f8 09 00 00 \tmovq   $0x9,-0x8(%rbp)\n    c8dd:\t00 \n    c8de:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c8e2:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    c8e6:\t48 89 d6             \tmov    %rdx,%rsi\n    c8e9:\t48 89 c7             \tmov    %rax,%rdi\n    c8ec:\te8 00 00 00 00       \tcall   c8f1 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x116a>\n    c8f1:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c8f5:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c8f9:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # c900 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1179>\n    c900:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    c905:\te8 00 00 00 00       \tcall   c90a <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1183>\n    c90a:\teb 0b                \tjmp    c917 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1190>\n    c90c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # c913 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x118c>\n    c913:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c917:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c91b:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c91f:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c923:\t83 e0 03             \tand    $0x3,%eax\n    c926:\t85 c0                \ttest   %eax,%eax\n    c928:\t75 0d                \tjne    c937 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x11b0>\n    c92a:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c92e:\t48 8b 00             \tmov    (%rax),%rax\n    c931:\t48 83 c0 08          \tadd    $0x8,%rax\n    c935:\teb 15                \tjmp    c94c <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x11c5>\n    c937:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c93b:\t83 e0 03             \tand    $0x3,%eax\n    c93e:\t48 98                \tcltq   \n    c940:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c947:\t00 \n    c948:\t48 83 c0 08          \tadd    $0x8,%rax\n    c94c:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c952 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x11cb>\n    c952:\t48 63 d2             \tmovslq %edx,%rdx\n    c955:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c959:\t48 01 d0             \tadd    %rdx,%rax\n    c95c:\t48 8b 08             \tmov    (%rax),%rcx\n    c95f:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    c963:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    c967:\t48 89 d6             \tmov    %rdx,%rsi\n    c96a:\t48 89 c7             \tmov    %rax,%rdi\n    c96d:\tff d1                \tcall   *%rcx\n    c96f:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c973:\t83 e0 03             \tand    $0x3,%eax\n    c976:\t85 c0                \ttest   %eax,%eax\n    c978:\t75 0d                \tjne    c987 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1200>\n    c97a:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c97e:\t48 8b 00             \tmov    (%rax),%rax\n    c981:\t48 83 c0 10          \tadd    $0x10,%rax\n    c985:\teb 15                \tjmp    c99c <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1215>\n    c987:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c98b:\t83 e0 03             \tand    $0x3,%eax\n    c98e:\t48 98                \tcltq   \n    c990:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c997:\t00 \n    c998:\t48 83 c0 10          \tadd    $0x10,%rax\n    c99c:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c9a2 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x121b>\n    c9a2:\t48 63 d2             \tmovslq %edx,%rdx\n    c9a5:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c9a9:\t48 01 d0             \tadd    %rdx,%rax\n    c9ac:\t48 8b 10             \tmov    (%rax),%rdx\n    c9af:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    c9b3:\t48 89 c7             \tmov    %rax,%rdi\n    c9b6:\tff d2                \tcall   *%rdx\n    c9b8:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    c9bc:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c9c0:\t83 e0 03             \tand    $0x3,%eax\n    c9c3:\t85 c0                \ttest   %eax,%eax\n    c9c5:\t75 09                \tjne    c9d0 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1249>\n    c9c7:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c9cb:\t48 8b 00             \tmov    (%rax),%rax\n    c9ce:\teb 11                \tjmp    c9e1 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x125a>\n    c9d0:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c9d4:\t83 e0 03             \tand    $0x3,%eax\n    c9d7:\t48 98                \tcltq   \n    c9d9:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    c9e0:\t00 \n    c9e1:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # c9e7 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1260>\n    c9e7:\t48 63 d2             \tmovslq %edx,%rdx\n    c9ea:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    c9ee:\t48 01 d0             \tadd    %rdx,%rax\n    c9f1:\t48 8b 10             \tmov    (%rax),%rdx\n    c9f4:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    c9f8:\t48 89 c7             \tmov    %rax,%rdi\n    c9fb:\tff d2                \tcall   *%rdx\n    c9fd:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    ca01:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ca05:\t83 e0 03             \tand    $0x3,%eax\n    ca08:\t85 c0                \ttest   %eax,%eax\n    ca0a:\t75 0d                \tjne    ca19 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1292>\n    ca0c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ca10:\t48 8b 00             \tmov    (%rax),%rax\n    ca13:\t48 83 c0 08          \tadd    $0x8,%rax\n    ca17:\teb 15                \tjmp    ca2e <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x12a7>\n    ca19:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ca1d:\t83 e0 03             \tand    $0x3,%eax\n    ca20:\t48 98                \tcltq   \n    ca22:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    ca29:\t00 \n    ca2a:\t48 83 c0 08          \tadd    $0x8,%rax\n    ca2e:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # ca34 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x12ad>\n    ca34:\t48 63 d2             \tmovslq %edx,%rdx\n    ca37:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    ca3b:\t48 01 d0             \tadd    %rdx,%rax\n    ca3e:\t48 8b 08             \tmov    (%rax),%rcx\n    ca41:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    ca45:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ca49:\t48 89 d6             \tmov    %rdx,%rsi\n    ca4c:\t48 89 c7             \tmov    %rax,%rdi\n    ca4f:\tff d1                \tcall   *%rcx\n    ca51:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # ca58 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x12d1>\n    ca58:\t48 85 c0             \ttest   %rax,%rax\n    ca5b:\t75 44                \tjne    caa1 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x131a>\n    ca5d:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    ca62:\te8 00 00 00 00       \tcall   ca67 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x12e0>\n    ca67:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    ca6b:\t48 c7 45 f8 0d 00 00 \tmovq   $0xd,-0x8(%rbp)\n    ca72:\t00 \n    ca73:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    ca77:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    ca7b:\t48 89 d6             \tmov    %rdx,%rsi\n    ca7e:\t48 89 c7             \tmov    %rax,%rdi\n    ca81:\te8 00 00 00 00       \tcall   ca86 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x12ff>\n    ca86:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    ca8a:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    ca8e:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # ca95 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x130e>\n    ca95:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    ca9a:\te8 00 00 00 00       \tcall   ca9f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1318>\n    ca9f:\teb 0b                \tjmp    caac <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1325>\n    caa1:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # caa8 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1321>\n    caa8:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    caac:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    cab0:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    cab4:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    cab8:\t83 e0 03             \tand    $0x3,%eax\n    cabb:\t85 c0                \ttest   %eax,%eax\n    cabd:\t75 0d                \tjne    cacc <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1345>\n    cabf:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    cac3:\t48 8b 00             \tmov    (%rax),%rax\n    cac6:\t48 83 c0 08          \tadd    $0x8,%rax\n    caca:\teb 15                \tjmp    cae1 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x135a>\n    cacc:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    cad0:\t83 e0 03             \tand    $0x3,%eax\n    cad3:\t48 98                \tcltq   \n    cad5:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    cadc:\t00 \n    cadd:\t48 83 c0 08          \tadd    $0x8,%rax\n    cae1:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # cae7 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1360>\n    cae7:\t48 63 d2             \tmovslq %edx,%rdx\n    caea:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    caee:\t48 01 d0             \tadd    %rdx,%rax\n    caf1:\t48 8b 08             \tmov    (%rax),%rcx\n    caf4:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    caf8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    cafc:\t48 89 d6             \tmov    %rdx,%rsi\n    caff:\t48 89 c7             \tmov    %rax,%rdi\n    cb02:\tff d1                \tcall   *%rcx\n    cb04:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cb08:\t83 e0 03             \tand    $0x3,%eax\n    cb0b:\t85 c0                \ttest   %eax,%eax\n    cb0d:\t75 0d                \tjne    cb1c <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1395>\n    cb0f:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cb13:\t48 8b 00             \tmov    (%rax),%rax\n    cb16:\t48 83 c0 18          \tadd    $0x18,%rax\n    cb1a:\teb 15                \tjmp    cb31 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x13aa>\n    cb1c:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cb20:\t83 e0 03             \tand    $0x3,%eax\n    cb23:\t48 98                \tcltq   \n    cb25:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    cb2c:\t00 \n    cb2d:\t48 83 c0 18          \tadd    $0x18,%rax\n    cb31:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # cb37 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x13b0>\n    cb37:\t48 63 d2             \tmovslq %edx,%rdx\n    cb3a:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    cb3e:\t48 01 d0             \tadd    %rdx,%rax\n    cb41:\t48 8b 10             \tmov    (%rax),%rdx\n    cb44:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cb48:\t48 89 c7             \tmov    %rax,%rdi\n    cb4b:\tff d2                \tcall   *%rdx\n    cb4d:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    cb51:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cb55:\t83 e0 03             \tand    $0x3,%eax\n    cb58:\t85 c0                \ttest   %eax,%eax\n    cb5a:\t75 0d                \tjne    cb69 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x13e2>\n    cb5c:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cb60:\t48 8b 00             \tmov    (%rax),%rax\n    cb63:\t48 83 c0 08          \tadd    $0x8,%rax\n    cb67:\teb 15                \tjmp    cb7e <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x13f7>\n    cb69:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cb6d:\t83 e0 03             \tand    $0x3,%eax\n    cb70:\t48 98                \tcltq   \n    cb72:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    cb79:\t00 \n    cb7a:\t48 83 c0 08          \tadd    $0x8,%rax\n    cb7e:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # cb84 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x13fd>\n    cb84:\t48 63 d2             \tmovslq %edx,%rdx\n    cb87:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    cb8b:\t48 01 d0             \tadd    %rdx,%rax\n    cb8e:\t48 8b 10             \tmov    (%rax),%rdx\n    cb91:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cb95:\t48 89 c7             \tmov    %rax,%rdi\n    cb98:\tff d2                \tcall   *%rdx\n    cb9a:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    cb9e:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cba2:\t83 e0 03             \tand    $0x3,%eax\n    cba5:\t85 c0                \ttest   %eax,%eax\n    cba7:\t75 0d                \tjne    cbb6 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x142f>\n    cba9:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cbad:\t48 8b 00             \tmov    (%rax),%rax\n    cbb0:\t48 83 c0 38          \tadd    $0x38,%rax\n    cbb4:\teb 15                \tjmp    cbcb <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1444>\n    cbb6:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cbba:\t83 e0 03             \tand    $0x3,%eax\n    cbbd:\t48 98                \tcltq   \n    cbbf:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    cbc6:\t00 \n    cbc7:\t48 83 c0 38          \tadd    $0x38,%rax\n    cbcb:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # cbd1 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x144a>\n    cbd1:\t48 63 d2             \tmovslq %edx,%rdx\n    cbd4:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    cbd8:\t48 01 d0             \tadd    %rdx,%rax\n    cbdb:\t48 8b 10             \tmov    (%rax),%rdx\n    cbde:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cbe2:\t48 89 c7             \tmov    %rax,%rdi\n    cbe5:\tff d2                \tcall   *%rdx\n    cbe7:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    cbeb:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    cbef:\t83 e0 03             \tand    $0x3,%eax\n    cbf2:\t85 c0                \ttest   %eax,%eax\n    cbf4:\t75 0d                \tjne    cc03 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x147c>\n    cbf6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    cbfa:\t48 8b 00             \tmov    (%rax),%rax\n    cbfd:\t48 83 c0 08          \tadd    $0x8,%rax\n    cc01:\teb 15                \tjmp    cc18 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1491>\n    cc03:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    cc07:\t83 e0 03             \tand    $0x3,%eax\n    cc0a:\t48 98                \tcltq   \n    cc0c:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    cc13:\t00 \n    cc14:\t48 83 c0 08          \tadd    $0x8,%rax\n    cc18:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # cc1e <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1497>\n    cc1e:\t48 63 d2             \tmovslq %edx,%rdx\n    cc21:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    cc25:\t48 01 d0             \tadd    %rdx,%rax\n    cc28:\t48 8b 08             \tmov    (%rax),%rcx\n    cc2b:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    cc2f:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    cc33:\t48 89 d6             \tmov    %rdx,%rsi\n    cc36:\t48 89 c7             \tmov    %rax,%rdi\n    cc39:\tff d1                \tcall   *%rcx\n    cc3b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # cc42 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x14bb>\n    cc42:\t48 85 c0             \ttest   %rax,%rax\n    cc45:\t75 44                \tjne    cc8b <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1504>\n    cc47:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    cc4c:\te8 00 00 00 00       \tcall   cc51 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x14ca>\n    cc51:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    cc55:\t48 c7 45 f8 05 00 00 \tmovq   $0x5,-0x8(%rbp)\n    cc5c:\t00 \n    cc5d:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cc61:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    cc65:\t48 89 d6             \tmov    %rdx,%rsi\n    cc68:\t48 89 c7             \tmov    %rax,%rdi\n    cc6b:\te8 00 00 00 00       \tcall   cc70 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x14e9>\n    cc70:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    cc74:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cc78:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # cc7f <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x14f8>\n    cc7f:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    cc84:\te8 00 00 00 00       \tcall   cc89 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1502>\n    cc89:\teb 0b                \tjmp    cc96 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x150f>\n    cc8b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # cc92 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x150b>\n    cc92:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    cc96:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    cc9a:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n    cc9e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    cca2:\t83 e0 03             \tand    $0x3,%eax\n    cca5:\t85 c0                \ttest   %eax,%eax\n    cca7:\t75 0d                \tjne    ccb6 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x152f>\n    cca9:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ccad:\t48 8b 00             \tmov    (%rax),%rax\n    ccb0:\t48 83 c0 08          \tadd    $0x8,%rax\n    ccb4:\teb 15                \tjmp    cccb <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1544>\n    ccb6:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ccba:\t83 e0 03             \tand    $0x3,%eax\n    ccbd:\t48 98                \tcltq   \n    ccbf:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    ccc6:\t00 \n    ccc7:\t48 83 c0 08          \tadd    $0x8,%rax\n    cccb:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # ccd1 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x154a>\n    ccd1:\t48 63 d2             \tmovslq %edx,%rdx\n    ccd4:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    ccd8:\t48 01 d0             \tadd    %rdx,%rax\n    ccdb:\t48 8b 08             \tmov    (%rax),%rcx\n    ccde:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    cce2:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    cce6:\t48 89 d6             \tmov    %rdx,%rsi\n    cce9:\t48 89 c7             \tmov    %rax,%rdi\n    ccec:\tff d1                \tcall   *%rcx\n    ccee:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ccf2:\t83 e0 03             \tand    $0x3,%eax\n    ccf5:\t85 c0                \ttest   %eax,%eax\n    ccf7:\t75 09                \tjne    cd02 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x157b>\n    ccf9:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    ccfd:\t48 8b 00             \tmov    (%rax),%rax\n    cd00:\teb 11                \tjmp    cd13 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x158c>\n    cd02:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    cd06:\t83 e0 03             \tand    $0x3,%eax\n    cd09:\t48 98                \tcltq   \n    cd0b:\t48 8b 04 c5 00 00 00 \tmov    0x0(,%rax,8),%rax\n    cd12:\t00 \n    cd13:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # cd19 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x1592>\n    cd19:\t48 63 d2             \tmovslq %edx,%rdx\n    cd1c:\t48 c1 e2 03          \tshl    $0x3,%rdx\n    cd20:\t48 01 d0             \tadd    %rdx,%rax\n    cd23:\t48 8b 10             \tmov    (%rax),%rdx\n    cd26:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    cd2a:\t48 89 c7             \tmov    %rax,%rdi\n    cd2d:\tff d2                \tcall   *%rdx\n    cd2f:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    cd33:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    cd37:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    cd3b:\t90                   \tnop\n    cd3c:\t90                   \tnop\n    cd3d:\t48 8b 45 80          \tmov    -0x80(%rbp),%rax\n    cd41:\t48 89 05 00 00 00 00 \tmov    %rax,0x0(%rip)        # cd48 <metamodel___abstractmetamodel___MMLocalProperty___full_name+0x15c1>\n    cd48:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    cd4c:\tc9                   \tleave  \n    cd4d:\tc3                   \tret    ", "code_s": "undefined8 metamodel___abstractmetamodel___MMLocalProperty___full_name(\n    long **<span class=\"supfact\">param_1</span>) {\n  long *plVar1;\n  int iVar2;\n  uint uVar3;\n  long <span class=\"supfact\">lVar4</span>;\n  undefined8 <span class=\"supfact\">local_88</span>;\n  undefined *<span class=\"supfact\">local_80</span>;\n  undefined4 <span class=\"supfact\">local_78</span>;\n  char *<span class=\"supfact\">local_70</span>;\n  undefined4 <span class=\"supfact\">local_58</span>;\n  undefined8 <span class=\"supfact\">local_50</span>;\n  undefined4 <span class=\"supfact\">local_48</span>;\n  long **<span class=\"supfact\">local_40</span>;\n  long *<span class=\"supfact\">local_38</span>;\n  long **<span class=\"supfact\">local_30</span>;\n  long *<span class=\"supfact\">local_28</span>;\n  long <span class=\"supfact\">local_18</span>;\n  long <span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_88</span> = _stack_frame_head;\n  _stack_frame_head = &amp;\n  <span class=\"supfact\">local_88</span>;\n  <span class=\"supfact\">local_80</span> = &amp;\n  LOCATE_metamodel___abstractmetamodel;\n  <span class=\"supfact\">local_78</span> = Number;\n  <span class=\"supfact\">local_70</span> = String;\n  <span class=\"supfact\">local_58</span> = Number;\n  <span class=\"supfact\">local_48</span> = Number;\n  <span class=\"supfact\">local_50</span> = Number;\n  <span class=\"supfact\">local_30</span> = (long **)Number;\n  <span class=\"supfact\">local_28</span> = (long *)Number;\n  <span class=\"supfact\">local_38</span> =\n      <span class=\"supfact\">param_1</span>[(long)_BOX_NativeString + Number];\n  if (<span class=\"supfact\">local_38</span> == (long *)Number) {\n    <span class=\"supfact\">local_10</span> = Number;\n  } else {\n    <span class=\"supfact\">local_10</span> = Number;\n  }\n  <span class=\"supfact\">local_40</span> = <span class=\"supfact\">param_1</span>;\n  if ((int)<span class=\"supfact\">local_10</span> & gt; &gt; Number == Number) {\n    if (<span class=\"supfact\">local_38</span> == (long *)Number) {\n      <span class=\"supfact\">local_18</span> = Number;\n    } else {\n      <span class=\"supfact\">local_18</span> = Number;\n    }\n    if ((int)<span class=\"supfact\">local_18</span> & gt; &gt; Number == Number) {\n      if (((ulong)<span class=\"supfact\">local_38</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_38</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_38</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      <span class=\"supfact\">local_18</span> =\n          (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                       (long)_LOCATE_standard___kernel * Number))(\n              <span class=\"supfact\">local_38</span>, Number);\n      <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_18</span>;\n    } else {\n      <span class=\"supfact\">local_18</span> = Number;\n      <span class=\"supfact\">local_10</span> = Number;\n    }\n  }\n  if ((int)<span class=\"supfact\">local_10</span> & gt; &gt; Number == Number) {\n    if (((ulong)<span class=\"supfact\">local_40</span> & amp; Number) == Number) {\n      plVar1 = *<span class=\"supfact\">local_40</span>;\n    } else {\n      plVar1 =\n          *(long **)(&amp;\n                     TAG2VFT +\n                     (long)(int)((uint)<span class=\"supfact\">local_40</span> & amp; Number) *\n                         Number);\n    }\n    <span class=\"supfact\">local_30</span> = (long **)(*(\n        code *)plVar1[(long)_DAT_0011106c + Number])(<span class=\"supfact\">local_40</span>);\n    if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n      <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n    } else {\n      <span class=\"supfact\">lVar4</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp; Number) *\n                        Number);\n    }\n    <span class=\"supfact\">local_30</span> = (long **)(**(\n        code **)(<span class=\"supfact\">lVar4</span> + Number +\n                 (long)_DAT_0011105c * Number))(<span class=\"supfact\">local_30</span>);\n    if ((<span class=\"supfact\">local_30</span> == <span class=\"supfact\">local_40</span>) ||\n        ((((((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number & amp;\n            &amp; (**<span class=\"supfact\">local_30</span> & lt; Number)) &\n               amp;\n           &amp; (((ulong)<span class=\"supfact\">local_40</span> & amp; Number) == Number)) &\n              amp;\n          &amp; ((<span class=\"supfact\">local_30</span>[Number] ==\n                          <span class=\"supfact\">local_40</span>[Number] &\n                      amp;\n                  &amp; (*<span class=\"supfact\">local_30</span> ==\n                         *<span class=\"supfact\">local_40</span>)))))) {\n      iVar2 = Number;\n    } else {\n      iVar2 = Number;\n    }\n    uVar3 = iVar2 & lt;\n    &lt;\n    Number | Number;\n    <span class=\"supfact\">local_10</span> = (long)(int)uVar3;\n    if ((int)uVar3 & gt; &gt; Number == Number) {\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        plVar1 = *<span class=\"supfact\">local_30</span>;\n      } else {\n        plVar1 =\n            *(long **)(&amp; TAG2VFT +\n                             (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                         Number) *\n                                 Number);\n      }\n      <span class=\"supfact\">local_18</span> =\n          (*(code *)plVar1[(long)_LOCATE_standard___kernel + Number])(\n              <span class=\"supfact\">local_30</span>, <span class=\"supfact\">local_40</span>);\n      <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_18</span>;\n    }\n    if ((int)<span class=\"supfact\">local_10</span> & gt; &gt; Number == Number) {\n      <span class=\"supfact\">local_10</span> = Number;\n      <span class=\"supfact\">local_30</span> = (long **)\n          NEW_Array_standard___collection___array___Array___with_capacity(\n              Number);\n      if (DAT_0010dc10 == Number) {\n        <span class=\"supfact\">local_28</span> = (long *)BOX_NativeString(&amp; DAT_0010e06e);\n        <span class=\"supfact\">local_10</span> = Number;\n        DAT_0010dc10 = NEW_String_standard___string___String___with_native(\n            <span class=\"supfact\">local_28</span>, Number);\n        <span class=\"supfact\">local_28</span> = (long *)DAT_0010dc10;\n        register_static_object(&amp; DAT_0010dc10);\n      } else {\n        <span class=\"supfact\">local_28</span> = (long *)DAT_0010dc10;\n      }\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_SFT_symbol * Number))(<span class=\"supfact\">local_30</span>,\n                                                <span class=\"supfact\">local_28</span>);\n      if (((ulong)<span class=\"supfact\">local_40</span> & amp; Number) == Number) {\n        plVar1 = *<span class=\"supfact\">local_40</span>;\n      } else {\n        plVar1 =\n            *(long **)(&amp; TAG2VFT +\n                             (long)(int)((uint)<span class=\"supfact\">local_40</span> & amp;\n                                         Number) *\n                                 Number);\n      }\n      <span class=\"supfact\">local_28</span> =\n          (long *)(*(code *)plVar1[(long)_DAT_0011106c + Number])(\n              <span class=\"supfact\">local_40</span>);\n      if (((ulong)<span class=\"supfact\">local_28</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_28</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_28</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      <span class=\"supfact\">local_28</span> = (long *)(**(\n          code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_DAT_0011104c * Number))(<span class=\"supfact\">local_28</span>);\n      if (((ulong)<span class=\"supfact\">local_28</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_28</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_28</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      <span class=\"supfact\">local_28</span> = (long *)(**(\n          code **)(<span class=\"supfact\">lVar4</span> + (long)_DAT_001110ac * Number))(\n          <span class=\"supfact\">local_28</span>);\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_SFT_symbol * Number))(<span class=\"supfact\">local_30</span>,\n                                                <span class=\"supfact\">local_28</span>);\n      if (DAT_0010dc18 == Number) {\n        <span class=\"supfact\">local_28</span> = (long *)BOX_NativeString(&amp; DAT_0010f84e);\n        <span class=\"supfact\">local_10</span> = Number;\n        DAT_0010dc18 = NEW_String_standard___string___String___with_native(\n            <span class=\"supfact\">local_28</span>, Number);\n        <span class=\"supfact\">local_28</span> = (long *)DAT_0010dc18;\n        register_static_object(&amp; DAT_0010dc18);\n      } else {\n        <span class=\"supfact\">local_28</span> = (long *)DAT_0010dc18;\n      }\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_SFT_symbol * Number))(<span class=\"supfact\">local_30</span>,\n                                                <span class=\"supfact\">local_28</span>);\n      if (((ulong)<span class=\"supfact\">local_40</span> & amp; Number) == Number) {\n        plVar1 = *<span class=\"supfact\">local_40</span>;\n      } else {\n        plVar1 =\n            *(long **)(&amp; TAG2VFT +\n                             (long)(int)((uint)<span class=\"supfact\">local_40</span> & amp;\n                                         Number) *\n                                 Number);\n      }\n      <span class=\"supfact\">local_28</span> =\n          (long *)(*(code *)plVar1[(long)_DAT_0011106c + Number])(\n              <span class=\"supfact\">local_40</span>);\n      if (((ulong)<span class=\"supfact\">local_28</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_28</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_28</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      <span class=\"supfact\">local_28</span> = (long *)(**(\n          code **)(<span class=\"supfact\">lVar4</span> + (long)_DAT_001110ac * Number))(\n          <span class=\"supfact\">local_28</span>);\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_SFT_symbol * Number))(<span class=\"supfact\">local_30</span>,\n                                                <span class=\"supfact\">local_28</span>);\n      if (DAT_0010dc20 == Number) {\n        <span class=\"supfact\">local_28</span> = (long *)BOX_NativeString(&amp; DAT_0010f85a);\n        <span class=\"supfact\">local_10</span> = Number;\n        DAT_0010dc20 = NEW_String_standard___string___String___with_native(\n            <span class=\"supfact\">local_28</span>, Number);\n        <span class=\"supfact\">local_28</span> = (long *)DAT_0010dc20;\n        register_static_object(&amp; DAT_0010dc20);\n      } else {\n        <span class=\"supfact\">local_28</span> = (long *)DAT_0010dc20;\n      }\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_SFT_symbol * Number))(<span class=\"supfact\">local_30</span>,\n                                                <span class=\"supfact\">local_28</span>);\n      if (((ulong)<span class=\"supfact\">local_40</span> & amp; Number) == Number) {\n        plVar1 = *<span class=\"supfact\">local_40</span>;\n      } else {\n        plVar1 =\n            *(long **)(&amp; TAG2VFT +\n                             (long)(int)((uint)<span class=\"supfact\">local_40</span> & amp;\n                                         Number) *\n                                 Number);\n      }\n      <span class=\"supfact\">local_40</span> =\n          (long **)(*(code *)plVar1[(long)_DAT_0011106c + Number])(\n              <span class=\"supfact\">local_40</span>);\n      if (((ulong)<span class=\"supfact\">local_40</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_40</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_40</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      <span class=\"supfact\">local_40</span> = (long **)(**(\n          code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_DAT_0011105c * Number))(<span class=\"supfact\">local_40</span>);\n      if (((ulong)<span class=\"supfact\">local_40</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_40</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_40</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      <span class=\"supfact\">local_40</span> = (long **)(**(\n          code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_DAT_0011106c * Number))(<span class=\"supfact\">local_40</span>);\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_SFT_symbol * Number))(<span class=\"supfact\">local_30</span>,\n                                                <span class=\"supfact\">local_40</span>);\n      if (DAT_0010dc28 == Number) {\n        <span class=\"supfact\">local_40</span> =\n            (long **)BOX_NativeString(&amp; DAT_0010f858);\n        <span class=\"supfact\">local_10</span> = Number;\n        DAT_0010dc28 = NEW_String_standard___string___String___with_native(\n            <span class=\"supfact\">local_40</span>, Number);\n        <span class=\"supfact\">local_40</span> = (long **)DAT_0010dc28;\n        register_static_object(&amp; DAT_0010dc28);\n      } else {\n        <span class=\"supfact\">local_40</span> = (long **)DAT_0010dc28;\n      }\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_SFT_symbol * Number))(<span class=\"supfact\">local_30</span>,\n                                                <span class=\"supfact\">local_40</span>);\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      <span class=\"supfact\">local_38</span> = (long *)(**(\n          code **)(<span class=\"supfact\">lVar4</span> + (long)_DAT_001110ac * Number))(\n          <span class=\"supfact\">local_30</span>);\n    } else {\n      <span class=\"supfact\">local_10</span> = Number;\n      <span class=\"supfact\">local_30</span> = (long **)\n          NEW_Array_standard___collection___array___Array___with_capacity(\n              Number);\n      if (DAT_0010dbf0 == Number) {\n        <span class=\"supfact\">local_28</span> = (long *)BOX_NativeString(&amp; DAT_0010e06e);\n        <span class=\"supfact\">local_10</span> = Number;\n        DAT_0010dbf0 = NEW_String_standard___string___String___with_native(\n            <span class=\"supfact\">local_28</span>, Number);\n        <span class=\"supfact\">local_28</span> = (long *)DAT_0010dbf0;\n        register_static_object(&amp; DAT_0010dbf0);\n      } else {\n        <span class=\"supfact\">local_28</span> = (long *)DAT_0010dbf0;\n      }\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_SFT_symbol * Number))(<span class=\"supfact\">local_30</span>,\n                                                <span class=\"supfact\">local_28</span>);\n      if (((ulong)<span class=\"supfact\">local_40</span> & amp; Number) == Number) {\n        plVar1 = *<span class=\"supfact\">local_40</span>;\n      } else {\n        plVar1 =\n            *(long **)(&amp; TAG2VFT +\n                             (long)(int)((uint)<span class=\"supfact\">local_40</span> & amp;\n                                         Number) *\n                                 Number);\n      }\n      <span class=\"supfact\">local_28</span> =\n          (long *)(*(code *)plVar1[(long)_DAT_0011106c + Number])(\n              <span class=\"supfact\">local_40</span>);\n      if (((ulong)<span class=\"supfact\">local_28</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_28</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_28</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      <span class=\"supfact\">local_28</span> = (long *)(**(\n          code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_DAT_0011104c * Number))(<span class=\"supfact\">local_28</span>);\n      if (((ulong)<span class=\"supfact\">local_28</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_28</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_28</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      <span class=\"supfact\">local_28</span> = (long *)(**(\n          code **)(<span class=\"supfact\">lVar4</span> + (long)_DAT_001110ac * Number))(\n          <span class=\"supfact\">local_28</span>);\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_SFT_symbol * Number))(<span class=\"supfact\">local_30</span>,\n                                                <span class=\"supfact\">local_28</span>);\n      if (DAT_0010dbf8 == Number) {\n        <span class=\"supfact\">local_28</span> = (long *)BOX_NativeString(&amp; DAT_0010f84e);\n        <span class=\"supfact\">local_10</span> = Number;\n        DAT_0010dbf8 = NEW_String_standard___string___String___with_native(\n            <span class=\"supfact\">local_28</span>, Number);\n        <span class=\"supfact\">local_28</span> = (long *)DAT_0010dbf8;\n        register_static_object(&amp; DAT_0010dbf8);\n      } else {\n        <span class=\"supfact\">local_28</span> = (long *)DAT_0010dbf8;\n      }\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_SFT_symbol * Number))(<span class=\"supfact\">local_30</span>,\n                                                <span class=\"supfact\">local_28</span>);\n      if (((ulong)<span class=\"supfact\">local_40</span> & amp; Number) == Number) {\n        plVar1 = *<span class=\"supfact\">local_40</span>;\n      } else {\n        plVar1 =\n            *(long **)(&amp; TAG2VFT +\n                             (long)(int)((uint)<span class=\"supfact\">local_40</span> & amp;\n                                         Number) *\n                                 Number);\n      }\n      <span class=\"supfact\">local_28</span> =\n          (long *)(*(code *)plVar1[(long)_DAT_0011106c + Number])(\n              <span class=\"supfact\">local_40</span>);\n      if (((ulong)<span class=\"supfact\">local_28</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_28</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_28</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      <span class=\"supfact\">local_28</span> = (long *)(**(\n          code **)(<span class=\"supfact\">lVar4</span> + (long)_DAT_001110ac * Number))(\n          <span class=\"supfact\">local_28</span>);\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_SFT_symbol * Number))(<span class=\"supfact\">local_30</span>,\n                                                <span class=\"supfact\">local_28</span>);\n      if (DAT_0010dc00 == Number) {\n        <span class=\"supfact\">local_28</span> = (long *)BOX_NativeString(&amp; DAT_0010f84e);\n        <span class=\"supfact\">local_10</span> = Number;\n        DAT_0010dc00 = NEW_String_standard___string___String___with_native(\n            <span class=\"supfact\">local_28</span>, Number);\n        <span class=\"supfact\">local_28</span> = (long *)DAT_0010dc00;\n        register_static_object(&amp; DAT_0010dc00);\n      } else {\n        <span class=\"supfact\">local_28</span> = (long *)DAT_0010dc00;\n      }\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_SFT_symbol * Number))(<span class=\"supfact\">local_30</span>,\n                                                <span class=\"supfact\">local_28</span>);\n      if (((ulong)<span class=\"supfact\">local_40</span> & amp; Number) == Number) {\n        plVar1 = *<span class=\"supfact\">local_40</span>;\n      } else {\n        plVar1 =\n            *(long **)(&amp; TAG2VFT +\n                             (long)(int)((uint)<span class=\"supfact\">local_40</span> & amp;\n                                         Number) *\n                                 Number);\n      }\n      <span class=\"supfact\">local_28</span> =\n          (long *)(*(code *)plVar1[(long)_DAT_0011106c + Number])(\n              <span class=\"supfact\">local_40</span>);\n      if (((ulong)<span class=\"supfact\">local_28</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_28</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_28</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      <span class=\"supfact\">local_28</span> = (long *)(**(\n          code **)(<span class=\"supfact\">lVar4</span> + (long)_DAT_001110ac * Number))(\n          <span class=\"supfact\">local_28</span>);\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_SFT_symbol * Number))(<span class=\"supfact\">local_30</span>,\n                                                <span class=\"supfact\">local_28</span>);\n      if (DAT_0010dc08 == Number) {\n        <span class=\"supfact\">local_28</span> = (long *)BOX_NativeString(&amp; DAT_0010e06e);\n        <span class=\"supfact\">local_10</span> = Number;\n        DAT_0010dc08 = NEW_String_standard___string___String___with_native(\n            <span class=\"supfact\">local_28</span>, Number);\n        <span class=\"supfact\">local_28</span> = (long *)DAT_0010dc08;\n        register_static_object(&amp; DAT_0010dc08);\n      } else {\n        <span class=\"supfact\">local_28</span> = (long *)DAT_0010dc08;\n      }\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar4</span> + Number +\n                   (long)_SFT_symbol * Number))(<span class=\"supfact\">local_30</span>,\n                                                <span class=\"supfact\">local_28</span>);\n      if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n        <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n      } else {\n        <span class=\"supfact\">lVar4</span> =\n            *(long *)(&amp; TAG2VFT +\n                            (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp;\n                                        Number) *\n                                Number);\n      }\n      <span class=\"supfact\">local_38</span> = (long *)(**(\n          code **)(<span class=\"supfact\">lVar4</span> + (long)_DAT_001110ac * Number))(\n          <span class=\"supfact\">local_30</span>);\n    }\n  } else {\n    <span class=\"supfact\">local_10</span> = Number;\n    <span class=\"supfact\">local_38</span> =\n        (long *)NEW_Array_standard___collection___array___Array___with_capacity(\n            Number);\n    if (DAT_0010dbd0 == Number) {\n      <span class=\"supfact\">local_30</span> = (long **)BOX_NativeString(&amp; DAT_0010e06e);\n      <span class=\"supfact\">local_10</span> = Number;\n      DAT_0010dbd0 = NEW_String_standard___string___String___with_native(\n          <span class=\"supfact\">local_30</span>, Number);\n      <span class=\"supfact\">local_30</span> = (long **)DAT_0010dbd0;\n      register_static_object(&amp; DAT_0010dbd0);\n    } else {\n      <span class=\"supfact\">local_30</span> = (long **)DAT_0010dbd0;\n    }\n    if (((ulong)<span class=\"supfact\">local_38</span> & amp; Number) == Number) {\n      <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_38</span>;\n    } else {\n      <span class=\"supfact\">lVar4</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">local_38</span> & amp; Number) *\n                        Number);\n    }\n    (**(code **)(<span class=\"supfact\">lVar4</span> + Number + (long)_SFT_symbol * Number))(\n        <span class=\"supfact\">local_38</span>, <span class=\"supfact\">local_30</span>);\n    if (((ulong)<span class=\"supfact\">local_40</span> & amp; Number) == Number) {\n      plVar1 = *<span class=\"supfact\">local_40</span>;\n    } else {\n      plVar1 =\n          *(long **)(&amp;\n                     TAG2VFT +\n                     (long)(int)((uint)<span class=\"supfact\">local_40</span> & amp; Number) *\n                         Number);\n    }\n    <span class=\"supfact\">local_30</span> = (long **)(*(\n        code *)plVar1[(long)_DAT_0011106c + Number])(<span class=\"supfact\">local_40</span>);\n    if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n      <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n    } else {\n      <span class=\"supfact\">lVar4</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp; Number) *\n                        Number);\n    }\n    <span class=\"supfact\">local_30</span> = (long **)(**(\n        code **)(<span class=\"supfact\">lVar4</span> + Number +\n                 (long)_DAT_0011104c * Number))(<span class=\"supfact\">local_30</span>);\n    if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n      <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n    } else {\n      <span class=\"supfact\">lVar4</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp; Number) *\n                        Number);\n    }\n    <span class=\"supfact\">local_30</span> = (long **)(**(\n        code **)(<span class=\"supfact\">lVar4</span> + (long)_DAT_001110ac * Number))(\n        <span class=\"supfact\">local_30</span>);\n    if (((ulong)<span class=\"supfact\">local_38</span> & amp; Number) == Number) {\n      <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_38</span>;\n    } else {\n      <span class=\"supfact\">lVar4</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">local_38</span> & amp; Number) *\n                        Number);\n    }\n    (**(code **)(<span class=\"supfact\">lVar4</span> + Number + (long)_SFT_symbol * Number))(\n        <span class=\"supfact\">local_38</span>, <span class=\"supfact\">local_30</span>);\n    if (DAT_0010dbd8 == Number) {\n      <span class=\"supfact\">local_30</span> = (long **)BOX_NativeString(&amp; DAT_0010f84e);\n      <span class=\"supfact\">local_10</span> = Number;\n      DAT_0010dbd8 = NEW_String_standard___string___String___with_native(\n          <span class=\"supfact\">local_30</span>, Number);\n      <span class=\"supfact\">local_30</span> = (long **)DAT_0010dbd8;\n      register_static_object(&amp; DAT_0010dbd8);\n    } else {\n      <span class=\"supfact\">local_30</span> = (long **)DAT_0010dbd8;\n    }\n    if (((ulong)<span class=\"supfact\">local_38</span> & amp; Number) == Number) {\n      <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_38</span>;\n    } else {\n      <span class=\"supfact\">lVar4</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">local_38</span> & amp; Number) *\n                        Number);\n    }\n    (**(code **)(<span class=\"supfact\">lVar4</span> + Number + (long)_SFT_symbol * Number))(\n        <span class=\"supfact\">local_38</span>, <span class=\"supfact\">local_30</span>);\n    if (((ulong)<span class=\"supfact\">local_40</span> & amp; Number) == Number) {\n      plVar1 = *<span class=\"supfact\">local_40</span>;\n    } else {\n      plVar1 =\n          *(long **)(&amp;\n                     TAG2VFT +\n                     (long)(int)((uint)<span class=\"supfact\">local_40</span> & amp; Number) *\n                         Number);\n    }\n    <span class=\"supfact\">local_30</span> = (long **)(*(\n        code *)plVar1[(long)_DAT_0011106c + Number])(<span class=\"supfact\">local_40</span>);\n    if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n      <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n    } else {\n      <span class=\"supfact\">lVar4</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp; Number) *\n                        Number);\n    }\n    <span class=\"supfact\">local_30</span> = (long **)(**(\n        code **)(<span class=\"supfact\">lVar4</span> + (long)_DAT_001110ac * Number))(\n        <span class=\"supfact\">local_30</span>);\n    if (((ulong)<span class=\"supfact\">local_38</span> & amp; Number) == Number) {\n      <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_38</span>;\n    } else {\n      <span class=\"supfact\">lVar4</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">local_38</span> & amp; Number) *\n                        Number);\n    }\n    (**(code **)(<span class=\"supfact\">lVar4</span> + Number + (long)_SFT_symbol * Number))(\n        <span class=\"supfact\">local_38</span>, <span class=\"supfact\">local_30</span>);\n    if (DAT_0010dbe0 == Number) {\n      <span class=\"supfact\">local_30</span> = (long **)BOX_NativeString(String);\n      <span class=\"supfact\">local_10</span> = Number;\n      DAT_0010dbe0 = NEW_String_standard___string___String___with_native(\n          <span class=\"supfact\">local_30</span>, Number);\n      <span class=\"supfact\">local_30</span> = (long **)DAT_0010dbe0;\n      register_static_object(&amp; DAT_0010dbe0);\n    } else {\n      <span class=\"supfact\">local_30</span> = (long **)DAT_0010dbe0;\n    }\n    if (((ulong)<span class=\"supfact\">local_38</span> & amp; Number) == Number) {\n      <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_38</span>;\n    } else {\n      <span class=\"supfact\">lVar4</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">local_38</span> & amp; Number) *\n                        Number);\n    }\n    (**(code **)(<span class=\"supfact\">lVar4</span> + Number + (long)_SFT_symbol * Number))(\n        <span class=\"supfact\">local_38</span>, <span class=\"supfact\">local_30</span>);\n    if (((ulong)<span class=\"supfact\">local_40</span> & amp; Number) == Number) {\n      plVar1 = *<span class=\"supfact\">local_40</span>;\n    } else {\n      plVar1 =\n          *(long **)(&amp;\n                     TAG2VFT +\n                     (long)(int)((uint)<span class=\"supfact\">local_40</span> & amp; Number) *\n                         Number);\n    }\n    <span class=\"supfact\">local_30</span> = (long **)(*(\n        code *)plVar1[(long)_DAT_0011106c + Number])(<span class=\"supfact\">local_40</span>);\n    if (((ulong)<span class=\"supfact\">local_30</span> & amp; Number) == Number) {\n      <span class=\"supfact\">lVar4</span> = (long)*<span class=\"supfact\">local_30</span>;\n    } else {\n      <span class=\"supfact\">lVar4</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">local_30</span> & amp; Number) *\n                        Number);\n    }\n    <span class=\"supfact\">local_30</span> = (long **)(**(\n        code **)(<span class=\"supfact\">lVar4</span> + (long)_DAT_001110ac * Number))(\n        <span class=\"supfact\">local_30</span>);\n    if (((ulong)<span class=\"supfact\">local_38</span> & amp; Number) == Number) {\n      <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_38</span>;\n    } else {\n      <span class=\"supfact\">lVar4</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">local_38</span> & amp; Number) *\n                        Number);\n    }\n    (**(code **)(<span class=\"supfact\">lVar4</span> + Number + (long)_SFT_symbol * Number))(\n        <span class=\"supfact\">local_38</span>, <span class=\"supfact\">local_30</span>);\n    if (DAT_0010dbe8 == Number) {\n      <span class=\"supfact\">local_30</span> = (long **)BOX_NativeString(&amp; DAT_0010f858);\n      <span class=\"supfact\">local_10</span> = Number;\n      DAT_0010dbe8 = NEW_String_standard___string___String___with_native(\n          <span class=\"supfact\">local_30</span>, Number);\n      <span class=\"supfact\">local_30</span> = (long **)DAT_0010dbe8;\n      register_static_object(&amp; DAT_0010dbe8);\n    } else {\n      <span class=\"supfact\">local_30</span> = (long **)DAT_0010dbe8;\n    }\n    if (((ulong)<span class=\"supfact\">local_38</span> & amp; Number) == Number) {\n      <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_38</span>;\n    } else {\n      <span class=\"supfact\">lVar4</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">local_38</span> & amp; Number) *\n                        Number);\n    }\n    (**(code **)(<span class=\"supfact\">lVar4</span> + Number + (long)_SFT_symbol * Number))(\n        <span class=\"supfact\">local_38</span>, <span class=\"supfact\">local_30</span>);\n    if (((ulong)<span class=\"supfact\">local_38</span> & amp; Number) == Number) {\n      <span class=\"supfact\">lVar4</span> = *<span class=\"supfact\">local_38</span>;\n    } else {\n      <span class=\"supfact\">lVar4</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">local_38</span> & amp; Number) *\n                        Number);\n    }\n    <span class=\"supfact\">local_38</span> = (long *)(**(\n        code **)(<span class=\"supfact\">lVar4</span> + (long)_DAT_001110ac * Number))(\n        <span class=\"supfact\">local_38</span>);\n  }\n  _stack_frame_head = (undefined8 *)<span class=\"supfact\">local_88</span>;\n  return <span class=\"supfact\">local_38</span>;\n}", "code_t": "val_t metamodel___abstractmetamodel___MMLocalProperty___full_name(\n    val_t <span class=\"supfact\">p0</span>) {\n  long *plVar1;\n  int iVar2;\n  long <span class=\"supfact\">lVar3</span>;\n  val_t <span class=\"supfact\">p0</span> - local;\n  anon_struct_104_2_ac2df418 <span class=\"supfact\">fra</span>;\n  val_t <span class=\"supfact\">REGB1</span>;\n  val_t <span class=\"supfact\">REGB0</span>;\n  <span class=\"supfact\">fra</span>.me.prev = &amp;\n  _stack_frame_head - &gt;\n  me;\n  _stack_frame_head = &amp;\n  <span class=\"supfact\">fra</span>;\n  <span class=\"supfact\">fra</span>.me.file = &amp;\n  LOCATE_metamodel___abstractmetamodel;\n  <span class=\"supfact\">fra</span>.me.line = Number;\n  <span class=\"supfact\">fra</span>.me.meth = String;\n  <span class=\"supfact\">fra</span>.me.has_broke = Number;\n  <span class=\"supfact\">fra</span>.me.REG_size = Number;\n  <span class=\"supfact\">fra</span>.me.nitni_local_ref_head = (nitni_ref_array_link *)Number;\n  <span class=\"supfact\">fra</span>.MORE_REG[Number] = Number;\n  <span class=\"supfact\">fra</span>.MORE_REG[Number] = Number;\n  <span class=\"supfact\">fra</span>.MORE_REG[Number] = *(\n      val_t *)(<span class=\"supfact\">p0</span> + (long)_BOX_NativeString * Number + Number);\n  if ((long *)<span class=\"supfact\">fra</span>.MORE_REG[Number] == (long *)Number) {\n    <span class=\"supfact\">REGB0</span>._0_4_ = Number;\n  } else {\n    <span class=\"supfact\">REGB0</span>._0_4_ = Number;\n  }\n  <span class=\"supfact\">fra</span>.me.REG[Number] = <span class=\"supfact\">p0</span>;\n  if ((int)(uint)<span class=\"supfact\">REGB0</span> & gt; &gt; Number == Number) {\n    if ((long *)<span class=\"supfact\">fra</span>.MORE_REG[Number] == (long *)Number) {\n      <span class=\"supfact\">REGB0</span>._0_4_ = Number;\n    } else {\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      <span class=\"supfact\">REGB0</span>._0_4_ =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                       (long)_LOCATE_standard___kernel * Number))(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number], Number);\n    }\n  }\n  if ((int)(uint)<span class=\"supfact\">REGB0</span> & gt; &gt; Number == Number) {\n    if ((<span class=\"supfact\">fra</span>.me.REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.me.REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">fra</span>.me.REG[Number] & amp;\n                                Number) *\n                        Number);\n    }\n    <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n        (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                     (long)_DAT_0011106c * Number))(\n            <span class=\"supfact\">fra</span>.me.REG[Number]);\n    if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> = *(\n          long *)(&amp;\n                  TAG2VFT +\n                  (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp;\n                              Number) *\n                      Number);\n    }\n    <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n        (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                     (long)_DAT_0011105c * Number))(\n            <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n    if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] ==\n         <span class=\"supfact\">fra</span>.me.REG[Number]) ||\n        (((((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number &\n                amp;\n            &amp;\n            (**(long **)<span class=\"supfact\">fra</span>.MORE_REG[Number] & lt; Number)) &\n               amp;\n           &amp;\n           ((<span class=\"supfact\">fra</span>.me.REG[Number] & amp; Number) == Number)) &\n              amp;\n          &amp;\n          ((*(long **)(<span class=\"supfact\">fra</span>.MORE_REG[Number] + Number) ==\n                    *(long **)(<span class=\"supfact\">fra</span>.me.REG[Number] + Number) &\n                amp;\n            &amp; (*(long **)<span class=\"supfact\">fra</span>.MORE_REG[Number] ==\n                   *(long **)<span class=\"supfact\">fra</span>.me.REG[Number])))))) {\n      iVar2 = Number;\n    } else {\n      iVar2 = Number;\n    }\n    <span class=\"supfact\">REGB0</span>._0_4_ = iVar2 & lt;\n    &lt;\n    Number | Number;\n    if ((int)(uint)<span class=\"supfact\">REGB0</span> & gt; &gt; Number == Number) {\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        plVar1 = *(long **)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        plVar1 =\n            *(long **)(&amp;\n                       TAG2VFT +\n                       (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                       amp;\n                                   Number) *\n                           Number);\n      }\n      <span class=\"supfact\">REGB0</span>._0_4_ =\n          (*(code *)plVar1[(long)_LOCATE_standard___kernel + Number])(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number],\n              <span class=\"supfact\">fra</span>.me.REG[Number]);\n    }\n    if ((int)(uint)<span class=\"supfact\">REGB0</span> & gt; &gt; Number == Number) {\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          NEW_Array_standard___collection___array___Array___with_capacity(\n              Number);\n      if (metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_10 == Number) {\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            BOX_NativeString(&amp; DAT_0010e06e);\n        metamodel___abstractmetamodel___MMLocalProperty___full_name\n            once_value_10 = NEW_String_standard___string___String___with_native(\n                <span class=\"supfact\">fra</span>.MORE_REG[Number], Number);\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_10;\n        register_static_object(\n            &amp; metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_10);\n      } else {\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_10;\n      }\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                   (long)_SFT_symbol * Number))(\n          <span class=\"supfact\">fra</span>.MORE_REG[Number],\n          <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.me.REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.me.REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> = *(\n            long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">fra</span>.me.REG[Number] & amp;\n                                Number) *\n                        Number);\n      }\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                       (long)_DAT_0011106c * Number))(\n              <span class=\"supfact\">fra</span>.me.REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                       (long)_DAT_0011104c * Number))(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + (long)_DAT_001110ac * Number))(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                   (long)_SFT_symbol * Number))(\n          <span class=\"supfact\">fra</span>.MORE_REG[Number],\n          <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if (metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_11 == Number) {\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            BOX_NativeString(&amp; DAT_0010f84e);\n        metamodel___abstractmetamodel___MMLocalProperty___full_name\n            once_value_11 = NEW_String_standard___string___String___with_native(\n                <span class=\"supfact\">fra</span>.MORE_REG[Number], Number);\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_11;\n        register_static_object(\n            &amp; metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_11);\n      } else {\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_11;\n      }\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                   (long)_SFT_symbol * Number))(\n          <span class=\"supfact\">fra</span>.MORE_REG[Number],\n          <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.me.REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.me.REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> = *(\n            long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">fra</span>.me.REG[Number] & amp;\n                                Number) *\n                        Number);\n      }\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                       (long)_DAT_0011106c * Number))(\n              <span class=\"supfact\">fra</span>.me.REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + (long)_DAT_001110ac * Number))(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                   (long)_SFT_symbol * Number))(\n          <span class=\"supfact\">fra</span>.MORE_REG[Number],\n          <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if (metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_12 == Number) {\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            BOX_NativeString(&amp; DAT_0010f85a);\n        metamodel___abstractmetamodel___MMLocalProperty___full_name\n            once_value_12 = NEW_String_standard___string___String___with_native(\n                <span class=\"supfact\">fra</span>.MORE_REG[Number], Number);\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_12;\n        register_static_object(\n            &amp; metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_12);\n      } else {\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_12;\n      }\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                   (long)_SFT_symbol * Number))(\n          <span class=\"supfact\">fra</span>.MORE_REG[Number],\n          <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.me.REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.me.REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> = *(\n            long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">fra</span>.me.REG[Number] & amp;\n                                Number) *\n                        Number);\n      }\n      <span class=\"supfact\">fra</span>.me.REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                       (long)_DAT_0011106c * Number))(\n              <span class=\"supfact\">fra</span>.me.REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.me.REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.me.REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> = *(\n            long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">fra</span>.me.REG[Number] & amp;\n                                Number) *\n                        Number);\n      }\n      <span class=\"supfact\">fra</span>.me.REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                       (long)_DAT_0011105c * Number))(\n              <span class=\"supfact\">fra</span>.me.REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.me.REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.me.REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> = *(\n            long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">fra</span>.me.REG[Number] & amp;\n                                Number) *\n                        Number);\n      }\n      <span class=\"supfact\">fra</span>.me.REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                       (long)_DAT_0011106c * Number))(\n              <span class=\"supfact\">fra</span>.me.REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                   (long)_SFT_symbol * Number))(\n          <span class=\"supfact\">fra</span>.MORE_REG[Number],\n          <span class=\"supfact\">fra</span>.me.REG[Number]);\n      if (metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_13 == Number) {\n        <span class=\"supfact\">fra</span>.me.REG[Number] =\n            BOX_NativeString(&amp; DAT_0010f858);\n        metamodel___abstractmetamodel___MMLocalProperty___full_name\n            once_value_13 = NEW_String_standard___string___String___with_native(\n                <span class=\"supfact\">fra</span>.me.REG[Number], Number);\n        <span class=\"supfact\">fra</span>.me.REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_13;\n        register_static_object(\n            &amp; metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_13);\n      } else {\n        <span class=\"supfact\">fra</span>.me.REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_13;\n      }\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                   (long)_SFT_symbol * Number))(\n          <span class=\"supfact\">fra</span>.MORE_REG[Number],\n          <span class=\"supfact\">fra</span>.me.REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + (long)_DAT_001110ac * Number))(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n    } else {\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          NEW_Array_standard___collection___array___Array___with_capacity(\n              Number);\n      if (metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_6 == Number) {\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            BOX_NativeString(&amp; DAT_0010e06e);\n        metamodel___abstractmetamodel___MMLocalProperty___full_name\n            once_value_6 = NEW_String_standard___string___String___with_native(\n                <span class=\"supfact\">fra</span>.MORE_REG[Number], Number);\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_6;\n        register_static_object(\n            &amp; metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_6);\n      } else {\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_6;\n      }\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                   (long)_SFT_symbol * Number))(\n          <span class=\"supfact\">fra</span>.MORE_REG[Number],\n          <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.me.REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.me.REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> = *(\n            long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">fra</span>.me.REG[Number] & amp;\n                                Number) *\n                        Number);\n      }\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                       (long)_DAT_0011106c * Number))(\n              <span class=\"supfact\">fra</span>.me.REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                       (long)_DAT_0011104c * Number))(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + (long)_DAT_001110ac * Number))(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                   (long)_SFT_symbol * Number))(\n          <span class=\"supfact\">fra</span>.MORE_REG[Number],\n          <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if (metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_7 == Number) {\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            BOX_NativeString(&amp; DAT_0010f84e);\n        metamodel___abstractmetamodel___MMLocalProperty___full_name\n            once_value_7 = NEW_String_standard___string___String___with_native(\n                <span class=\"supfact\">fra</span>.MORE_REG[Number], Number);\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_7;\n        register_static_object(\n            &amp; metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_7);\n      } else {\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_7;\n      }\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                   (long)_SFT_symbol * Number))(\n          <span class=\"supfact\">fra</span>.MORE_REG[Number],\n          <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.me.REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.me.REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> = *(\n            long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">fra</span>.me.REG[Number] & amp;\n                                Number) *\n                        Number);\n      }\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                       (long)_DAT_0011106c * Number))(\n              <span class=\"supfact\">fra</span>.me.REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + (long)_DAT_001110ac * Number))(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                   (long)_SFT_symbol * Number))(\n          <span class=\"supfact\">fra</span>.MORE_REG[Number],\n          <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if (metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_8 == Number) {\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            BOX_NativeString(&amp; DAT_0010f84e);\n        metamodel___abstractmetamodel___MMLocalProperty___full_name\n            once_value_8 = NEW_String_standard___string___String___with_native(\n                <span class=\"supfact\">fra</span>.MORE_REG[Number], Number);\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_8;\n        register_static_object(\n            &amp; metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_8);\n      } else {\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_8;\n      }\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                   (long)_SFT_symbol * Number))(\n          <span class=\"supfact\">fra</span>.MORE_REG[Number],\n          <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.me.REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.me.REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> = *(\n            long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">fra</span>.me.REG[Number] & amp;\n                                Number) *\n                        Number);\n      }\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                       (long)_DAT_0011106c * Number))(\n              <span class=\"supfact\">fra</span>.me.REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + (long)_DAT_001110ac * Number))(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                   (long)_SFT_symbol * Number))(\n          <span class=\"supfact\">fra</span>.MORE_REG[Number],\n          <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if (metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_9 == Number) {\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            BOX_NativeString(&amp; DAT_0010e06e);\n        metamodel___abstractmetamodel___MMLocalProperty___full_name\n            once_value_9 = NEW_String_standard___string___String___with_native(\n                <span class=\"supfact\">fra</span>.MORE_REG[Number], Number);\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_9;\n        register_static_object(\n            &amp; metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_9);\n      } else {\n        <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n            metamodel___abstractmetamodel___MMLocalProperty___full_name\n                once_value_9;\n      }\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                   (long)_SFT_symbol * Number))(\n          <span class=\"supfact\">fra</span>.MORE_REG[Number],\n          <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n      if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n        <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n      } else {\n        <span class=\"supfact\">lVar3</span> =\n            *(long *)(&amp;\n                      TAG2VFT +\n                      (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] &\n                                      amp;\n                                  Number) *\n                          Number);\n      }\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          (**(code **)(<span class=\"supfact\">lVar3</span> + (long)_DAT_001110ac * Number))(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n    }\n  } else {\n    <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n        NEW_Array_standard___collection___array___Array___with_capacity(Number);\n    if (metamodel___abstractmetamodel___MMLocalProperty___full_name\n            once_value_1 == Number) {\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          BOX_NativeString(&amp; DAT_0010e06e);\n      metamodel___abstractmetamodel___MMLocalProperty___full_name once_value_1 =\n          NEW_String_standard___string___String___with_native(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number], Number);\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_1;\n      register_static_object(\n          &amp; metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_1);\n    } else {\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_1;\n    }\n    if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> = *(\n          long *)(&amp;\n                  TAG2VFT +\n                  (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp;\n                              Number) *\n                      Number);\n    }\n    (**(code **)(<span class=\"supfact\">lVar3</span> + Number + (long)_SFT_symbol * Number))(\n        <span class=\"supfact\">fra</span>.MORE_REG[Number],\n        <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n    if ((<span class=\"supfact\">fra</span>.me.REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.me.REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">fra</span>.me.REG[Number] & amp;\n                                Number) *\n                        Number);\n    }\n    <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n        (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                     (long)_DAT_0011106c * Number))(\n            <span class=\"supfact\">fra</span>.me.REG[Number]);\n    if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> = *(\n          long *)(&amp;\n                  TAG2VFT +\n                  (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp;\n                              Number) *\n                      Number);\n    }\n    <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n        (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                     (long)_DAT_0011104c * Number))(\n            <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n    if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> = *(\n          long *)(&amp;\n                  TAG2VFT +\n                  (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp;\n                              Number) *\n                      Number);\n    }\n    <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n        (**(code **)(<span class=\"supfact\">lVar3</span> + (long)_DAT_001110ac * Number))(\n            <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n    if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> = *(\n          long *)(&amp;\n                  TAG2VFT +\n                  (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp;\n                              Number) *\n                      Number);\n    }\n    (**(code **)(<span class=\"supfact\">lVar3</span> + Number + (long)_SFT_symbol * Number))(\n        <span class=\"supfact\">fra</span>.MORE_REG[Number],\n        <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n    if (metamodel___abstractmetamodel___MMLocalProperty___full_name\n            once_value_2 == Number) {\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          BOX_NativeString(&amp; DAT_0010f84e);\n      metamodel___abstractmetamodel___MMLocalProperty___full_name once_value_2 =\n          NEW_String_standard___string___String___with_native(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number], Number);\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_2;\n      register_static_object(\n          &amp; metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_2);\n    } else {\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_2;\n    }\n    if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> = *(\n          long *)(&amp;\n                  TAG2VFT +\n                  (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp;\n                              Number) *\n                      Number);\n    }\n    (**(code **)(<span class=\"supfact\">lVar3</span> + Number + (long)_SFT_symbol * Number))(\n        <span class=\"supfact\">fra</span>.MORE_REG[Number],\n        <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n    if ((<span class=\"supfact\">fra</span>.me.REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.me.REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">fra</span>.me.REG[Number] & amp;\n                                Number) *\n                        Number);\n    }\n    <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n        (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                     (long)_DAT_0011106c * Number))(\n            <span class=\"supfact\">fra</span>.me.REG[Number]);\n    if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> = *(\n          long *)(&amp;\n                  TAG2VFT +\n                  (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp;\n                              Number) *\n                      Number);\n    }\n    <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n        (**(code **)(<span class=\"supfact\">lVar3</span> + (long)_DAT_001110ac * Number))(\n            <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n    if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> = *(\n          long *)(&amp;\n                  TAG2VFT +\n                  (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp;\n                              Number) *\n                      Number);\n    }\n    (**(code **)(<span class=\"supfact\">lVar3</span> + Number + (long)_SFT_symbol * Number))(\n        <span class=\"supfact\">fra</span>.MORE_REG[Number],\n        <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n    if (metamodel___abstractmetamodel___MMLocalProperty___full_name\n            once_value_3 == Number) {\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] = BOX_NativeString(String);\n      metamodel___abstractmetamodel___MMLocalProperty___full_name once_value_3 =\n          NEW_String_standard___string___String___with_native(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number], Number);\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_3;\n      register_static_object(\n          &amp; metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_3);\n    } else {\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_3;\n    }\n    if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> = *(\n          long *)(&amp;\n                  TAG2VFT +\n                  (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp;\n                              Number) *\n                      Number);\n    }\n    (**(code **)(<span class=\"supfact\">lVar3</span> + Number + (long)_SFT_symbol * Number))(\n        <span class=\"supfact\">fra</span>.MORE_REG[Number],\n        <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n    if ((<span class=\"supfact\">fra</span>.me.REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.me.REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> =\n          *(long *)(&amp;\n                    TAG2VFT +\n                    (long)(int)((uint)<span class=\"supfact\">fra</span>.me.REG[Number] & amp;\n                                Number) *\n                        Number);\n    }\n    <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n        (**(code **)(<span class=\"supfact\">lVar3</span> + Number +\n                     (long)_DAT_0011106c * Number))(\n            <span class=\"supfact\">fra</span>.me.REG[Number]);\n    if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> = *(\n          long *)(&amp;\n                  TAG2VFT +\n                  (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp;\n                              Number) *\n                      Number);\n    }\n    <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n        (**(code **)(<span class=\"supfact\">lVar3</span> + (long)_DAT_001110ac * Number))(\n            <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n    if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> = *(\n          long *)(&amp;\n                  TAG2VFT +\n                  (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp;\n                              Number) *\n                      Number);\n    }\n    (**(code **)(<span class=\"supfact\">lVar3</span> + Number + (long)_SFT_symbol * Number))(\n        <span class=\"supfact\">fra</span>.MORE_REG[Number],\n        <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n    if (metamodel___abstractmetamodel___MMLocalProperty___full_name\n            once_value_4 == Number) {\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          BOX_NativeString(&amp; DAT_0010f858);\n      metamodel___abstractmetamodel___MMLocalProperty___full_name once_value_4 =\n          NEW_String_standard___string___String___with_native(\n              <span class=\"supfact\">fra</span>.MORE_REG[Number], Number);\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_4;\n      register_static_object(\n          &amp; metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_4);\n    } else {\n      <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n          metamodel___abstractmetamodel___MMLocalProperty___full_name\n              once_value_4;\n    }\n    if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> = *(\n          long *)(&amp;\n                  TAG2VFT +\n                  (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp;\n                              Number) *\n                      Number);\n    }\n    (**(code **)(<span class=\"supfact\">lVar3</span> + Number + (long)_SFT_symbol * Number))(\n        <span class=\"supfact\">fra</span>.MORE_REG[Number],\n        <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n    if ((<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp; Number) == Number) {\n      <span class=\"supfact\">lVar3</span> = *(long *)<span class=\"supfact\">fra</span>.MORE_REG[Number];\n    } else {\n      <span class=\"supfact\">lVar3</span> = *(\n          long *)(&amp;\n                  TAG2VFT +\n                  (long)(int)((uint)<span class=\"supfact\">fra</span>.MORE_REG[Number] & amp;\n                              Number) *\n                      Number);\n    }\n    <span class=\"supfact\">fra</span>.MORE_REG[Number] =\n        (**(code **)(<span class=\"supfact\">lVar3</span> + (long)_DAT_001110ac * Number))(\n            <span class=\"supfact\">fra</span>.MORE_REG[Number]);\n  }\n  _stack_frame_head = (anon_struct_104_2_ac2df418 *)<span class=\"supfact\">fra</span>.me.prev;\n  return <span class=\"supfact\">fra</span>.MORE_REG[Number];\n}", "var": [{"name": "param_1", "type": "val_t", "pred_name": "p0", "ref_name": "p0", "ref_type": "val_t"}, {"name": "lVar4", "type": "long", "pred_name": "lVar4", "ref_name": "lVar3", "ref_type": "long"}, {"name": "local_88", "type": "struct anon_struct_96_2_ac2df418 { stack_frame_t me; val_t[2] MORE_REG; }", "pred_name": "fra", "ref_name": "fra", "ref_type": "struct anon_struct_104_2_ac2df418 { stack_frame_t me; val_t[3] MORE_REG; }"}, {"name": "local_80", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_78", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_70", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_58", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_50", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_48", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_40", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_38", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_30", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_28", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_18", "type": "val_t", "pred_name": "REGB1", "ref_name": "REGB1", "ref_type": "val_t"}, {"name": "local_10", "type": "val_t", "pred_name": "REGB0", "ref_name": "REGB0", "ref_type": "val_t"}], "body_in_train": false}, {"repo_owner": "wchengsir", "repo_name": "tiny4412", "path": "wchengsir/tiny4412/0bc0d52011631e994a8a2abe246c224421da7797ce3a3db017f43e1b64721ce0", "path_in_repo": "wchengsir/tiny4412/linux-5.0/tools/testing/selftests/cgroup/test_core", "objdump": "", "code_s": "int __fxstat(int __ver, int __fildes, stat *__stat_buf) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR___fxstat_004050a8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int __fxstat(int __ver, int __fildes, stat *__stat_buf) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR___fxstat_004050a8)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "uardoq", "repo_name": "CSE320", "path": "uardoq/CSE320/4a111450fdd3e1b80b108794c8f275ae0ed55283725859abdd4d4db5e5bcd79c", "path_in_repo": "uardoq/CSE320/hw5/bin/cream", "objdump": "", "code_s": "int sigfillset(sigset_t *__set) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_sigfillset_00409158)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int sigfillset(sigset_t *__set) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_sigfillset_00409158)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "garfield19", "repo_name": "meshpeep", "path": "garfield19/meshpeep/749760d59601106f7771c0ce84d3fd83ea2f6e32e242861d64a8da9e56e10597", "path_in_repo": "garfield19/meshpeep/submodules/bcmatroska2/corec/tools/coremake/corerc", "objdump": "", "code_s": "char *strrchr(char *__s, int __c) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strrchr_00404038)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "code_t": "char *strrchr(char *__s, int __c) {\n  char *<span class=\"supfact\">pcVar1</span>;\n  <span class=\"supfact\">pcVar1</span> = (char *)(*(code *)PTR_strrchr_00404038)();\n  return <span class=\"supfact\">pcVar1</span>;\n}", "var": [{"name": "pcVar1", "type": "char * *", "pred_name": "pcVar1", "ref_name": "pcVar1", "ref_type": "char * *"}], "body_in_train": true}, {"repo_owner": "solomonwzs", "repo_name": "container_exercise", "path": "solomonwzs/container_exercise/2f882f05ca20fba5a04047e84414efb4f9a6406ba17dba4e5b620a44dc32736a", "path_in_repo": "solomonwzs/container_exercise/go/deps/iproute2/ip/rtmon", "objdump": "000000000040c9a3 <jsonw_float_field>:\n  40c9a3:\t55                   \tpush   %rbp\n  40c9a4:\t48 89 e5             \tmov    %rsp,%rbp\n  40c9a7:\t48 83 ec 20          \tsub    $0x20,%rsp\n  40c9ab:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n  40c9af:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n  40c9b3:\tf2 0f 11 45 e8       \tmovsd  %xmm0,-0x18(%rbp)\n  40c9b8:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n  40c9bc:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40c9c0:\t48 89 d6             \tmov    %rdx,%rsi\n  40c9c3:\t48 89 c7             \tmov    %rax,%rdi\n  40c9c6:\te8 0c fb ff ff       \tcall   40c4d7 <jsonw_name>\n  40c9cb:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n  40c9cf:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n  40c9d3:\t66 48 0f 6e c2       \tmovq   %rdx,%xmm0\n  40c9d8:\t48 89 c7             \tmov    %rax,%rdi\n  40c9db:\te8 9e fd ff ff       \tcall   40c77e <jsonw_float>\n  40c9e0:\t90                   \tnop\n  40c9e1:\tc9                   \tleave  \n  40c9e2:\tc3                   \tret    ", "code_s": "void jsonw_float_field(undefined8 <span class=\"supfact\">param_1</span>,\n                       undefined8 <span class=\"supfact\">param_2</span>,\n                       undefined8 <span class=\"supfact\">param_3</span>) {\n  jsonw_name(<span class=\"supfact\">param_2</span>, <span class=\"supfact\">param_3</span>);\n  jsonw_float(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n  return;\n}", "code_t": "void jsonw_float_field(json_writer_t *<span class=\"supfact\">self</span>,\n                       char *<span class=\"supfact\">prop</span>, double <span class=\"supfact\">val</span>) {\n  double <span class=\"supfact\">val</span> - local;\n  char *<span class=\"supfact\">prop</span> - local;\n  json_writer_t *<span class=\"supfact\">self</span> - local;\n  jsonw_name(<span class=\"supfact\">self</span>, <span class=\"supfact\">prop</span>);\n  jsonw_float(<span class=\"supfact\">self</span>, <span class=\"supfact\">val</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "double", "pred_name": "val", "ref_name": "val", "ref_type": "double"}, {"name": "param_2", "type": "char * *", "pred_name": "prop", "ref_name": "self", "ref_type": "json_writer_t * *"}, {"name": "param_3", "type": "char * *", "pred_name": "fmt", "ref_name": "prop", "ref_type": "char * *"}], "body_in_train": false}, {"repo_owner": "bitnine-oss", "repo_name": "agensgraph", "path": "bitnine-oss/agensgraph/a111c93a4face6a56cc614fbbe83b5be0e11cb451f9b324061c7fb8a19f5fab7", "path_in_repo": "bitnine-oss/agensgraph//src/backend/nodes/extensible.o", "objdump": "0000000000000197 <RegisterCustomScanMethods>:\n 197:\t55                   \tpush   %rbp\n 198:\t48 89 e5             \tmov    %rsp,%rbp\n 19b:\t48 83 ec 10          \tsub    $0x10,%rsp\n 19f:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n 1a3:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 1a7:\t48 8b 00             \tmov    (%rax),%rax\n 1aa:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n 1ae:\t48 89 d1             \tmov    %rdx,%rcx\n 1b1:\t48 89 c2             \tmov    %rax,%rdx\n 1b4:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 1b9:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 1be:\te8 3d fe ff ff       \tcall   0 <RegisterExtensibleNodeEntry>\n 1c3:\t90                   \tnop\n 1c4:\tc9                   \tleave  \n 1c5:\tc3                   \tret    ", "code_s": "void RegisterCustomScanMethods(undefined8 *<span class=\"supfact\">param_1</span>) {\n  FUN_00100000(&amp; DAT_001002e8, String, *<span class=\"supfact\">param_1</span>,\n                     <span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "void RegisterCustomScanMethods(CustomScanMethods *<span class=\"supfact\">methods</span>) {\n  CustomScanMethods *<span class=\"supfact\">methods</span> - local;\n  RegisterExtensibleNodeEntry(&amp; custom_scan_methods, String,\n                                    <span class=\"supfact\">methods</span> - &gt;\n                              CustomName, <span class=\"supfact\">methods</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "p", "ref_name": "methods", "ref_type": "CustomScanMethods * *"}], "body_in_train": false}, {"repo_owner": "mZer0ne", "repo_name": "vak-opensource", "path": "mZer0ne/vak-opensource/ed7661dd69ebcd95cb331872b21e22d068645a6be08b5e6e5b215bd00f1551c7", "path_in_repo": "mZer0ne/vak-opensource/utilities/ufstool/utils/fsdb", "objdump": "", "code_s": "group *getgrgid(__gid_t __gid) {\n  group *<span class=\"supfact\">pgVar1</span>;\n  <span class=\"supfact\">pgVar1</span> = (group *)(*(code *)PTR_getgrgid_004290a0)();\n  return <span class=\"supfact\">pgVar1</span>;\n}", "code_t": "group *getgrgid(__gid_t __gid) {\n  group *<span class=\"supfact\">pgVar1</span>;\n  <span class=\"supfact\">pgVar1</span> = (group *)(*(code *)PTR_getgrgid_004290a0)();\n  return <span class=\"supfact\">pgVar1</span>;\n}", "var": [{"name": "pgVar1", "type": "group * *", "pred_name": "pgVar1", "ref_name": "pgVar1", "ref_type": "group * *"}], "body_in_train": false}, {"repo_owner": "webosose", "repo_name": "gst-libav", "path": "webosose/gst-libav/c7c39d9cc9f169072de8bc09a7fa0d974b9ed3e37314e65b26a2d02a48fb2def", "path_in_repo": "webosose/gst-libav/gst-libs/ext/libav/libavcodec/x86/hevcdsp_init.o", "objdump": "00000000000142c1 <ff_hevc_put_hevc_bi_w12_12_sse4>:\n   142c1:\t48 83 ec 58          \tsub    $0x58,%rsp\n   142c5:\t48 89 7c 24 28       \tmov    %rdi,0x28(%rsp)\n   142ca:\t48 89 74 24 20       \tmov    %rsi,0x20(%rsp)\n   142cf:\t48 89 54 24 18       \tmov    %rdx,0x18(%rsp)\n   142d4:\t48 89 4c 24 10       \tmov    %rcx,0x10(%rsp)\n   142d9:\t44 89 44 24 0c       \tmov    %r8d,0xc(%rsp)\n   142de:\t44 89 4c 24 08       \tmov    %r9d,0x8(%rsp)\n   142e3:\tc7 44 24 4c 00 00 00 \tmovl   $0x0,0x4c(%rsp)\n   142ea:\t00 \n   142eb:\te9 87 00 00 00       \tjmp    14377 <ff_hevc_put_hevc_bi_w12_12_sse4+0xb6>\n   142f0:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n   142f4:\t48 98                \tcltq   \n   142f6:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n   142fa:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n   142ff:\t48 01 d0             \tadd    %rdx,%rax\n   14302:\t48 89 44 24 40       \tmov    %rax,0x40(%rsp)\n   14307:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n   1430b:\t48 98                \tcltq   \n   1430d:\t48 8d 14 00          \tlea    (%rax,%rax,1),%rdx\n   14311:\t48 8b 44 24 10       \tmov    0x10(%rsp),%rax\n   14316:\t48 01 d0             \tadd    %rdx,%rax\n   14319:\t48 89 44 24 38       \tmov    %rax,0x38(%rsp)\n   1431e:\t8b 44 24 4c          \tmov    0x4c(%rsp),%eax\n   14322:\t01 c0                \tadd    %eax,%eax\n   14324:\t48 63 d0             \tmovslq %eax,%rdx\n   14327:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n   1432c:\t48 01 d0             \tadd    %rdx,%rax\n   1432f:\t48 89 44 24 30       \tmov    %rax,0x30(%rsp)\n   14334:\t44 8b 4c 24 08       \tmov    0x8(%rsp),%r9d\n   14339:\t44 8b 44 24 0c       \tmov    0xc(%rsp),%r8d\n   1433e:\t48 8b 4c 24 38       \tmov    0x38(%rsp),%rcx\n   14343:\t48 8b 54 24 40       \tmov    0x40(%rsp),%rdx\n   14348:\t48 8b 74 24 20       \tmov    0x20(%rsp),%rsi\n   1434d:\t48 8b 44 24 30       \tmov    0x30(%rsp),%rax\n   14352:\t8b 7c 24 78          \tmov    0x78(%rsp),%edi\n   14356:\t57                   \tpush   %rdi\n   14357:\t8b 7c 24 78          \tmov    0x78(%rsp),%edi\n   1435b:\t57                   \tpush   %rdi\n   1435c:\t8b 7c 24 78          \tmov    0x78(%rsp),%edi\n   14360:\t57                   \tpush   %rdi\n   14361:\t8b 7c 24 78          \tmov    0x78(%rsp),%edi\n   14365:\t57                   \tpush   %rdi\n   14366:\t48 89 c7             \tmov    %rax,%rdi\n   14369:\te8 00 00 00 00       \tcall   1436e <ff_hevc_put_hevc_bi_w12_12_sse4+0xad>\n   1436e:\t48 83 c4 20          \tadd    $0x20,%rsp\n   14372:\t83 44 24 4c 06       \taddl   $0x6,0x4c(%rsp)\n   14377:\t83 7c 24 4c 0b       \tcmpl   $0xb,0x4c(%rsp)\n   1437c:\t0f 8e 6e ff ff ff    \tjle    142f0 <ff_hevc_put_hevc_bi_w12_12_sse4+0x2f>\n   14382:\t90                   \tnop\n   14383:\t90                   \tnop\n   14384:\t48 83 c4 58          \tadd    $0x58,%rsp\n   14388:\tc3                   \tret    ", "code_s": "void ff_hevc_put_hevc_bi_w12_12_sse4(\n    long <span class=\"supfact\">param_1</span>, undefined8 <span class=\"supfact\">param_2</span>,\n    long <span class=\"supfact\">param_3</span>, long <span class=\"supfact\">param_4</span>,\n    undefined4 <span class=\"supfact\">param_5</span>, undefined4 <span class=\"supfact\">param_6</span>,\n    undefined4 <span class=\"supfact\">param_7</span>, undefined4 <span class=\"supfact\">param_8</span>,\n    undefined4 <span class=\"supfact\">param_9</span>, undefined4 <span class=\"supfact\">param_10</span>) {\n  int <span class=\"supfact\">local_c</span>;\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt; Number;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    ff_hevc_put_hevc_bi_w6_12_sse4(\n        <span class=\"supfact\">param_1</span> + <span class=\"supfact\">local_c</span> * Number,\n        <span class=\"supfact\">param_2</span>,\n        <span class=\"supfact\">param_3</span> + (long)<span class=\"supfact\">local_c</span> * Number,\n        <span class=\"supfact\">param_4</span> + (long)<span class=\"supfact\">local_c</span> * Number,\n        <span class=\"supfact\">param_5</span>, <span class=\"supfact\">param_6</span>,\n        <span class=\"supfact\">param_7</span>, <span class=\"supfact\">param_8</span>,\n        <span class=\"supfact\">param_9</span>, <span class=\"supfact\">param_10</span>);\n  }\n  return;\n}", "code_t": "void ff_hevc_put_hevc_bi_w12_12_sse4(\n    uint8_t *<span class=\"supfact\">_dst</span>, ptrdiff_t <span class=\"supfact\">dststride</span>,\n    int16_t *<span class=\"supfact\">_src</span>, int16_t *<span class=\"supfact\">_src2</span>,\n    int <span class=\"supfact\">height</span>, int <span class=\"supfact\">denom</span>,\n    int <span class=\"supfact\">_wx0</span>, int <span class=\"supfact\">_wx1</span>,\n    int <span class=\"supfact\">_ox0</span>, int <span class=\"supfact\">_ox1</span>) {\n  int <span class=\"supfact\">denom</span> - local;\n  int <span class=\"supfact\">height</span> - local;\n  int16_t *<span class=\"supfact\">_src2</span> - local;\n  int16_t *<span class=\"supfact\">_src</span> - local;\n  ptrdiff_t <span class=\"supfact\">dststride</span> - local;\n  uint8_t *<span class=\"supfact\">_dst</span> - local;\n  uint8_t *dst;\n  int16_t *src2;\n  int16_t *src;\n  int <span class=\"supfact\">i</span>;\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt; Number;\n       <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    ff_hevc_put_hevc_bi_w6_12_sse4(\n        <span class=\"supfact\">_dst</span> + <span class=\"supfact\">i</span> * Number,\n        <span class=\"supfact\">dststride</span>, <span class=\"supfact\">_src</span> + <span class=\"supfact\">i</span>,\n        <span class=\"supfact\">_src2</span> + <span class=\"supfact\">i</span>, <span class=\"supfact\">height</span>,\n        <span class=\"supfact\">denom</span>, <span class=\"supfact\">_wx0</span>, <span class=\"supfact\">_wx1</span>,\n        <span class=\"supfact\">_ox0</span>, <span class=\"supfact\">_ox1</span>);\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "uint8_t * *", "pred_name": "_dst", "ref_name": "_dst", "ref_type": "uint8_t * *"}, {"name": "param_2", "type": "ptrdiff_t", "pred_name": "dststride", "ref_name": "dststride", "ref_type": "ptrdiff_t"}, {"name": "param_3", "type": "int16_t * *", "pred_name": "_src", "ref_name": "_src", "ref_type": "int16_t * *"}, {"name": "param_4", "type": "int16_t * *", "pred_name": "_src2", "ref_name": "_src2", "ref_type": "int16_t * *"}, {"name": "param_5", "type": "int", "pred_name": "height", "ref_name": "height", "ref_type": "int"}, {"name": "param_6", "type": "int", "pred_name": "denom", "ref_name": "denom", "ref_type": "int"}, {"name": "param_7", "type": "int", "pred_name": "_wx0", "ref_name": "_wx0", "ref_type": "int"}, {"name": "param_8", "type": "int", "pred_name": "_wx1", "ref_name": "_wx1", "ref_type": "int"}, {"name": "param_9", "type": "int", "pred_name": "_ox0", "ref_name": "_ox0", "ref_type": "int"}, {"name": "param_10", "type": "int", "pred_name": "_ox1", "ref_name": "_ox1", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "nexgenta", "repo_name": "ffmpeg", "path": "nexgenta/ffmpeg/1ff868f53d56c1507517597d9cfd9b27cb2478cdaacf5bda90bfab0c9c4d048d", "path_in_repo": "nexgenta/ffmpeg//libavcodec/dsputil.o", "objdump": "0000000000014771 <ff_avg_qpel8_mc33_old_c>:\n   14771:\t48 81 ec 78 01 00 00 \tsub    $0x178,%rsp\n   14778:\t48 89 7c 24 10       \tmov    %rdi,0x10(%rsp)\n   1477d:\t48 89 74 24 08       \tmov    %rsi,0x8(%rsp)\n   14782:\t89 54 24 04          \tmov    %edx,0x4(%rsp)\n   14786:\t8b 54 24 04          \tmov    0x4(%rsp),%edx\n   1478a:\t48 8b 74 24 08       \tmov    0x8(%rsp),%rsi\n   1478f:\t48 8d 84 24 e8 00 00 \tlea    0xe8(%rsp),%rax\n   14796:\t00 \n   14797:\t41 b8 09 00 00 00    \tmov    $0x9,%r8d\n   1479d:\t89 d1                \tmov    %edx,%ecx\n   1479f:\tba 10 00 00 00       \tmov    $0x10,%edx\n   147a4:\t48 89 c7             \tmov    %rax,%rdi\n   147a7:\te8 31 ba fe ff       \tcall   1dd <copy_block9>\n   147ac:\t48 8d b4 24 e8 00 00 \tlea    0xe8(%rsp),%rsi\n   147b3:\t00 \n   147b4:\t48 8d 84 24 98 00 00 \tlea    0x98(%rsp),%rax\n   147bb:\t00 \n   147bc:\t41 b8 09 00 00 00    \tmov    $0x9,%r8d\n   147c2:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n   147c7:\tba 08 00 00 00       \tmov    $0x8,%edx\n   147cc:\t48 89 c7             \tmov    %rax,%rdi\n   147cf:\te8 0d 52 ff ff       \tcall   99e1 <put_mpeg4_qpel8_h_lowpass>\n   147d4:\t48 8d 84 24 e8 00 00 \tlea    0xe8(%rsp),%rax\n   147db:\t00 \n   147dc:\t48 83 c0 01          \tadd    $0x1,%rax\n   147e0:\t48 8d 7c 24 58       \tlea    0x58(%rsp),%rdi\n   147e5:\tb9 10 00 00 00       \tmov    $0x10,%ecx\n   147ea:\tba 08 00 00 00       \tmov    $0x8,%edx\n   147ef:\t48 89 c6             \tmov    %rax,%rsi\n   147f2:\te8 33 58 ff ff       \tcall   a02a <put_mpeg4_qpel8_v_lowpass>\n   147f7:\t48 8d b4 24 98 00 00 \tlea    0x98(%rsp),%rsi\n   147fe:\t00 \n   147ff:\t48 8d 44 24 18       \tlea    0x18(%rsp),%rax\n   14804:\tb9 08 00 00 00       \tmov    $0x8,%ecx\n   14809:\tba 08 00 00 00       \tmov    $0x8,%edx\n   1480e:\t48 89 c7             \tmov    %rax,%rdi\n   14811:\te8 14 58 ff ff       \tcall   a02a <put_mpeg4_qpel8_v_lowpass>\n   14816:\t48 8d 94 24 98 00 00 \tlea    0x98(%rsp),%rdx\n   1481d:\t00 \n   1481e:\t48 83 c2 08          \tadd    $0x8,%rdx\n   14822:\t48 8d 84 24 e8 00 00 \tlea    0xe8(%rsp),%rax\n   14829:\t00 \n   1482a:\t48 83 c0 11          \tadd    $0x11,%rax\n   1482e:\t44 8b 44 24 04       \tmov    0x4(%rsp),%r8d\n   14833:\t48 8d 74 24 18       \tlea    0x18(%rsp),%rsi\n   14838:\t48 8d 4c 24 58       \tlea    0x58(%rsp),%rcx\n   1483d:\t48 8b 7c 24 10       \tmov    0x10(%rsp),%rdi\n   14842:\t6a 08                \tpush   $0x8\n   14844:\t6a 08                \tpush   $0x8\n   14846:\t6a 08                \tpush   $0x8\n   14848:\t6a 08                \tpush   $0x8\n   1484a:\t6a 10                \tpush   $0x10\n   1484c:\t45 89 c1             \tmov    %r8d,%r9d\n   1484f:\t49 89 f0             \tmov    %rsi,%r8\n   14852:\t48 89 c6             \tmov    %rax,%rsi\n   14855:\te8 61 e7 fe ff       \tcall   2fbb <avg_pixels8_l4>\n   1485a:\t48 83 c4 28          \tadd    $0x28,%rsp\n   1485e:\t90                   \tnop\n   1485f:\t48 81 c4 78 01 00 00 \tadd    $0x178,%rsp\n   14866:\tc3                   \tret    ", "code_s": "void ff_avg_qpel8_mc33_old_c(undefined8 <span class=\"supfact\">param_1</span>,\n                             undefined8 <span class=\"supfact\">param_2</span>,\n                             undefined4 <span class=\"supfact\">param_3</span>) {\n  undefined <span class=\"supfact\">local_160</span>[Number];\n  undefined <span class=\"supfact\">local_120</span>[Number];\n  undefined <span class=\"supfact\">local_e0</span>[Number];\n  undefined <span class=\"supfact\">auStack_d8</span>[Number];\n  undefined <span class=\"supfact\">local_90</span>;\n  undefined <span class=\"supfact\">auStack_8f</span>[Number];\n  undefined <span class=\"supfact\">auStack_7f</span>[Number];\n  FUN_001001dd(&amp; <span class=\"supfact\">local_90</span>, <span class=\"supfact\">param_2</span>, Number,\n                     <span class=\"supfact\">param_3</span>, Number);\n  FUN_001099e1(<span class=\"supfact\">local_e0</span>, &amp;\n               <span class=\"supfact\">local_90</span>, Number, Number, Number);\n  FUN_0010a02a(<span class=\"supfact\">local_120</span>, <span class=\"supfact\">auStack_8f</span>, Number,\n               Number);\n  FUN_0010a02a(<span class=\"supfact\">local_160</span>, <span class=\"supfact\">local_e0</span>, Number,\n               Number);\n  FUN_00102fbb(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">auStack_7f</span>,\n               <span class=\"supfact\">auStack_d8</span>, <span class=\"supfact\">local_120</span>,\n               <span class=\"supfact\">local_160</span>, <span class=\"supfact\">param_3</span>, Number,\n               Number, Number, Number, Number);\n  return;\n}", "code_t": "void ff_avg_qpel8_mc33_old_c(uint8_t *<span class=\"supfact\">dst</span>,\n                             uint8_t *<span class=\"supfact\">src</span>,\n                             int <span class=\"supfact\">stride</span>) {\n  int <span class=\"supfact\">stride</span> - local;\n  uint8_t *<span class=\"supfact\">src</span> - local;\n  uint8_t *<span class=\"supfact\">dst</span> - local;\n  uint8_t <span class=\"supfact\">halfHV</span>[Number];\n  uint8_t <span class=\"supfact\">halfV</span>[Number];\n  uint8_t <span class=\"supfact\">halfH</span>[Number];\n  uint8_t <span class=\"supfact\">full</span>[Number];\n  copy_block9(<span class=\"supfact\">full</span>, <span class=\"supfact\">src</span>, Number,\n              <span class=\"supfact\">stride</span>, Number);\n  put_mpeg4_qpel8_h_lowpass(<span class=\"supfact\">halfH</span>, <span class=\"supfact\">full</span>, Number,\n                            Number, Number);\n  put_mpeg4_qpel8_v_lowpass(<span class=\"supfact\">halfV</span>,\n                            <span class=\"supfact\">full</span> + Number, Number, Number);\n  put_mpeg4_qpel8_v_lowpass(<span class=\"supfact\">halfHV</span>, <span class=\"supfact\">halfH</span>,\n                            Number, Number);\n  avg_pixels8_l4(<span class=\"supfact\">dst</span>, <span class=\"supfact\">full</span> + Number,\n                 <span class=\"supfact\">halfH</span> + Number, <span class=\"supfact\">halfV</span>,\n                 <span class=\"supfact\">halfHV</span>, <span class=\"supfact\">stride</span>, Number, Number,\n                 Number, Number, Number);\n  return;\n}", "var": [{"name": "param_1", "type": "uint8_t * *", "pred_name": "dst", "ref_name": "dst", "ref_type": "uint8_t * *"}, {"name": "param_2", "type": "uint8_t * *", "pred_name": "src", "ref_name": "src", "ref_type": "uint8_t * *"}, {"name": "param_3", "type": "int", "pred_name": "stride", "ref_name": "stride", "ref_type": "int"}, {"name": "local_160", "type": "uint8_t[64][64]", "pred_name": "halfHV", "ref_name": "halfHV", "ref_type": "uint8_t[64][64]"}, {"name": "local_120", "type": "uint8_t[64][64]", "pred_name": "halfV", "ref_name": "halfV", "ref_type": "uint8_t[64][64]"}, {"name": "local_e0", "type": "uint8_t[72][72]", "pred_name": "halfH", "ref_name": "halfH", "ref_type": "uint8_t[72][72]"}, {"name": "auStack_d8", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_90", "type": "uint8_t[144][144]", "pred_name": "full", "ref_name": "full", "ref_type": "uint8_t[144][144]"}, {"name": "auStack_8f", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "auStack_7f", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}], "body_in_train": true}, {"repo_owner": "abgoyal-archive", "repo_name": "OT_5035D", "path": "abgoyal-archive/OT_5035D/2938ccbade9e7ae663d6a653d21b21db2c275d0bf45aa4f4755af71f0c92515a", "path_in_repo": "abgoyal-archive/OT_5035D/kernel/tools/perf/util/symbol.o", "objdump": "00000000000003fe <dso__loaded>:\n     3fe:\t55                   \tpush   %rbp\n     3ff:\t48 89 e5             \tmov    %rsp,%rbp\n     402:\t48 83 ec 20          \tsub    $0x20,%rsp\n     406:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     40a:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n     40d:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     414:\t00 00 \n     416:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     41a:\t31 c0                \txor    %eax,%eax\n     41c:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     420:\t0f b6 40 37          \tmovzbl 0x37(%rax),%eax\n     424:\t0f b6 d0             \tmovzbl %al,%edx\n     427:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n     42a:\tbe 01 00 00 00       \tmov    $0x1,%esi\n     42f:\t89 c1                \tmov    %eax,%ecx\n     431:\td3 e6                \tshl    %cl,%esi\n     433:\t89 f0                \tmov    %esi,%eax\n     435:\t21 d0                \tand    %edx,%eax\n     437:\t85 c0                \ttest   %eax,%eax\n     439:\t0f 95 c0             \tsetne  %al\n     43c:\t48 8b 7d f8          \tmov    -0x8(%rbp),%rdi\n     440:\t64 48 33 3c 25 28 00 \txor    %fs:0x28,%rdi\n     447:\t00 00 \n     449:\t74 05                \tje     450 <dso__loaded+0x52>\n     44b:\te8 00 00 00 00       \tcall   450 <dso__loaded+0x52>\n     450:\tc9                   \tleave  \n     451:\tc3                   \tret    ", "code_s": "bool dso__loaded(long <span class=\"supfact\">param_1</span>, byte <span class=\"supfact\">param_2</span>) {\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  if (*(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number) !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return (Number & lt; &lt; (<span class=\"supfact\">param_2</span> & amp; Number) & amp;\n          (uint) * (byte *)(<span class=\"supfact\">param_1</span> + Number)) != Number;\n}", "code_t": "_Bool dso__loaded(<span class=\"supfact\">dso</span> *<span class=\"supfact\">dso</span>, map_type type) {\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  map_type type - local;\n  <span class=\"supfact\">dso</span> *<span class=\"supfact\">dso</span> - local;\n  if (*(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number) !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return (Number & lt; &lt; ((byte)type & amp; Number) & amp;\n          (uint)<span class=\"supfact\">dso</span> - &gt; loaded) != Number;\n}", "var": [{"name": "param_1", "type": "dso * *", "pred_name": "dso", "ref_name": "dso", "ref_type": "dso * *"}, {"name": "param_2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": true}, {"repo_owner": "andyhui", "repo_name": "iproute2", "path": "andyhui/iproute2/5059d8584922be62f8701d44aa06a90da62e4d5d170d4e44266ea21ab88e3e5b", "path_in_repo": "andyhui/iproute2//ip/rtmon", "objdump": "0000000000406a9e <__get_hz>:\n  406a9e:\t55                   \tpush   %rbp\n  406a9f:\t48 89 e5             \tmov    %rsp,%rbp\n  406aa2:\t48 81 ec 20 04 00 00 \tsub    $0x420,%rsp\n  406aa9:\tc7 45 fc 00 00 00 00 \tmovl   $0x0,-0x4(%rbp)\n  406ab0:\t48 8d 3d 83 1c 00 00 \tlea    0x1c83(%rip),%rdi        # 40873a <SNAPSHOT+0x732>\n  406ab7:\te8 84 c5 ff ff       \tcall   403040 <getenv@plt>\n  406abc:\t48 85 c0             \ttest   %rax,%rax\n  406abf:\t74 26                \tje     406ae7 <__get_hz+0x49>\n  406ac1:\t48 8d 3d 72 1c 00 00 \tlea    0x1c72(%rip),%rdi        # 40873a <SNAPSHOT+0x732>\n  406ac8:\te8 73 c5 ff ff       \tcall   403040 <getenv@plt>\n  406acd:\t48 89 c7             \tmov    %rax,%rdi\n  406ad0:\te8 1b c8 ff ff       \tcall   4032f0 <atoi@plt>\n  406ad5:\t85 c0                \ttest   %eax,%eax\n  406ad7:\t0f 85 38 01 00 00    \tjne    406c15 <__get_hz+0x177>\n  406add:\tb8 64 00 00 00       \tmov    $0x64,%eax\n  406ae2:\te9 2e 01 00 00       \tjmp    406c15 <__get_hz+0x177>\n  406ae7:\t48 8d 3d 4f 1c 00 00 \tlea    0x1c4f(%rip),%rdi        # 40873d <SNAPSHOT+0x735>\n  406aee:\te8 4d c5 ff ff       \tcall   403040 <getenv@plt>\n  406af3:\t48 85 c0             \ttest   %rax,%rax\n  406af6:\t74 34                \tje     406b2c <__get_hz+0x8e>\n  406af8:\t48 8d 3d 3e 1c 00 00 \tlea    0x1c3e(%rip),%rdi        # 40873d <SNAPSHOT+0x735>\n  406aff:\te8 3c c5 ff ff       \tcall   403040 <getenv@plt>\n  406b04:\t48 89 c2             \tmov    %rax,%rdx\n  406b07:\t48 8d 85 f0 fb ff ff \tlea    -0x410(%rbp),%rax\n  406b0e:\t48 89 d1             \tmov    %rdx,%rcx\n  406b11:\t48 8d 15 35 1c 00 00 \tlea    0x1c35(%rip),%rdx        # 40874d <SNAPSHOT+0x745>\n  406b18:\tbe ff 03 00 00       \tmov    $0x3ff,%esi\n  406b1d:\t48 89 c7             \tmov    %rax,%rdi\n  406b20:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  406b25:\te8 16 c6 ff ff       \tcall   403140 <snprintf@plt>\n  406b2a:\teb 6b                \tjmp    406b97 <__get_hz+0xf9>\n  406b2c:\t48 8d 3d 1d 1c 00 00 \tlea    0x1c1d(%rip),%rdi        # 408750 <SNAPSHOT+0x748>\n  406b33:\te8 08 c5 ff ff       \tcall   403040 <getenv@plt>\n  406b38:\t48 85 c0             \ttest   %rax,%rax\n  406b3b:\t74 34                \tje     406b71 <__get_hz+0xd3>\n  406b3d:\t48 8d 3d 0c 1c 00 00 \tlea    0x1c0c(%rip),%rdi        # 408750 <SNAPSHOT+0x748>\n  406b44:\te8 f7 c4 ff ff       \tcall   403040 <getenv@plt>\n  406b49:\t48 89 c2             \tmov    %rax,%rdx\n  406b4c:\t48 8d 85 f0 fb ff ff \tlea    -0x410(%rbp),%rax\n  406b53:\t48 89 d1             \tmov    %rdx,%rcx\n  406b56:\t48 8d 15 fd 1b 00 00 \tlea    0x1bfd(%rip),%rdx        # 40875a <SNAPSHOT+0x752>\n  406b5d:\tbe ff 03 00 00       \tmov    $0x3ff,%esi\n  406b62:\t48 89 c7             \tmov    %rax,%rdi\n  406b65:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  406b6a:\te8 d1 c5 ff ff       \tcall   403140 <snprintf@plt>\n  406b6f:\teb 26                \tjmp    406b97 <__get_hz+0xf9>\n  406b71:\t48 8d 85 f0 fb ff ff \tlea    -0x410(%rbp),%rax\n  406b78:\t48 be 2f 70 72 6f 63 \tmovabs $0x656e2f636f72702f,%rsi\n  406b7f:\t2f 6e 65 \n  406b82:\t48 bf 74 2f 70 73 63 \tmovabs $0x6465686373702f74,%rdi\n  406b89:\t68 65 64 \n  406b8c:\t48 89 30             \tmov    %rsi,(%rax)\n  406b8f:\t48 89 78 08          \tmov    %rdi,0x8(%rax)\n  406b93:\tc6 40 10 00          \tmovb   $0x0,0x10(%rax)\n  406b97:\t48 8d 85 f0 fb ff ff \tlea    -0x410(%rbp),%rax\n  406b9e:\t48 8d 35 c3 1b 00 00 \tlea    0x1bc3(%rip),%rsi        # 408768 <SNAPSHOT+0x760>\n  406ba5:\t48 89 c7             \tmov    %rax,%rdi\n  406ba8:\te8 e3 c6 ff ff       \tcall   403290 <fopen@plt>\n  406bad:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n  406bb1:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n  406bb6:\t74 4d                \tje     406c05 <__get_hz+0x167>\n  406bb8:\t48 8d 8d e8 fb ff ff \tlea    -0x418(%rbp),%rcx\n  406bbf:\t48 8d 95 ec fb ff ff \tlea    -0x414(%rbp),%rdx\n  406bc6:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  406bca:\t48 8d 35 99 1b 00 00 \tlea    0x1b99(%rip),%rsi        # 40876a <SNAPSHOT+0x762>\n  406bd1:\t48 89 c7             \tmov    %rax,%rdi\n  406bd4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  406bd9:\te8 a2 c5 ff ff       \tcall   403180 <fscanf@plt>\n  406bde:\t83 f8 02             \tcmp    $0x2,%eax\n  406be1:\t75 16                \tjne    406bf9 <__get_hz+0x15b>\n  406be3:\t8b 85 ec fb ff ff    \tmov    -0x414(%rbp),%eax\n  406be9:\t3d 40 42 0f 00       \tcmp    $0xf4240,%eax\n  406bee:\t75 09                \tjne    406bf9 <__get_hz+0x15b>\n  406bf0:\t8b 85 e8 fb ff ff    \tmov    -0x418(%rbp),%eax\n  406bf6:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n  406bf9:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n  406bfd:\t48 89 c7             \tmov    %rax,%rdi\n  406c00:\te8 db c4 ff ff       \tcall   4030e0 <fclose@plt>\n  406c05:\t83 7d fc 00          \tcmpl   $0x0,-0x4(%rbp)\n  406c09:\t74 05                \tje     406c10 <__get_hz+0x172>\n  406c0b:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n  406c0e:\teb 05                \tjmp    406c15 <__get_hz+0x177>\n  406c10:\tb8 64 00 00 00       \tmov    $0x64,%eax\n  406c15:\tc9                   \tleave  \n  406c16:\tc3                   \tret    ", "code_s": "int __get_hz(void) {\n  int <span class=\"supfact\">iVar1</span>;\n  char *<span class=\"supfact\">pcVar2</span>;\n  int <span class=\"supfact\">local_420</span>;\n  int <span class=\"supfact\">local_41c</span>;\n  undefined8 <span class=\"supfact\">local_418</span>;\n  undefined8 <span class=\"supfact\">local_410</span>;\n  undefined <span class=\"supfact\">local_408</span>;\n  FILE *<span class=\"supfact\">local_18</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">local_c</span> = Number;\n  <span class=\"supfact\">pcVar2</span> = getenv(String);\n  if (<span class=\"supfact\">pcVar2</span> == (char *)Number) {\n    <span class=\"supfact\">pcVar2</span> = getenv(String);\n    if (<span class=\"supfact\">pcVar2</span> == (char *)Number) {\n      <span class=\"supfact\">pcVar2</span> = getenv(String);\n      if (<span class=\"supfact\">pcVar2</span> == (char *)Number) {\n        <span class=\"supfact\">local_418</span> = Number;\n        <span class=\"supfact\">local_410</span> = Number;\n        <span class=\"supfact\">local_408</span> = Number;\n      } else {\n        <span class=\"supfact\">pcVar2</span> = getenv(String);\n        snprintf((char *)&amp; <span class=\"supfact\">local_418</span>, Number, String,\n                               <span class=\"supfact\">pcVar2</span>);\n      }\n    } else {\n      <span class=\"supfact\">pcVar2</span> = getenv(String);\n      snprintf((char *)&amp; <span class=\"supfact\">local_418</span>, Number, String,\n                             <span class=\"supfact\">pcVar2</span>);\n    }\n    <span class=\"supfact\">local_18</span> =\n        fopen((char *)&amp; <span class=\"supfact\">local_418</span>, String);\n    if (<span class=\"supfact\">local_18</span> != (FILE *)Number) {\n      <span class=\"supfact\">iVar1</span> =\n          fscanf(<span class=\"supfact\">local_18</span>, String, &amp;\n                 <span class=\"supfact\">local_41c</span>, &amp; <span class=\"supfact\">local_420</span>);\n      if ((<span class=\"supfact\">iVar1</span> == Number) & amp; &amp;\n          (<span class=\"supfact\">local_41c</span> == Number)) {\n        <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_420</span>;\n      }\n      fclose(<span class=\"supfact\">local_18</span>);\n    }\n    if (<span class=\"supfact\">local_c</span> == Number) {\n      <span class=\"supfact\">local_c</span> = Number;\n    }\n  } else {\n    <span class=\"supfact\">pcVar2</span> = getenv(String);\n    <span class=\"supfact\">local_c</span> = atoi(<span class=\"supfact\">pcVar2</span>);\n    if (<span class=\"supfact\">local_c</span> == Number) {\n      <span class=\"supfact\">local_c</span> = Number;\n    }\n  }\n  return <span class=\"supfact\">local_c</span>;\n}", "code_t": "int __get_hz(void) {\n  int <span class=\"supfact\">iVar1</span>;\n  char *pcVar2;\n  FILE *__stream;\n  uint <span class=\"supfact\">denom</span>;\n  uint <span class=\"supfact\">nom</span>;\n  char <span class=\"supfact\">name</span>[Number];\n  FILE *<span class=\"supfact\">fp</span>;\n  int <span class=\"supfact\">hz</span>;\n  <span class=\"supfact\">hz</span> = Number;\n  pcVar2 = getenv(String);\n  if (pcVar2 == (char *)Number) {\n    pcVar2 = getenv(String);\n    if (pcVar2 == (char *)Number) {\n      pcVar2 = getenv(String);\n      if (pcVar2 == (char *)Number) {\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n        <span class=\"supfact\">name</span>[Number] = String;\n      } else {\n        pcVar2 = getenv(String);\n        snprintf(<span class=\"supfact\">name</span>, Number, String, pcVar2);\n      }\n    } else {\n      pcVar2 = getenv(String);\n      snprintf(<span class=\"supfact\">name</span>, Number, String, pcVar2);\n    }\n    __stream = fopen(<span class=\"supfact\">name</span>, String);\n    if (__stream != (FILE *)Number) {\n      <span class=\"supfact\">iVar1</span> =\n          fscanf(__stream, String, &amp; <span class=\"supfact\">nom</span>, &amp;\n                 <span class=\"supfact\">denom</span>);\n      if ((<span class=\"supfact\">iVar1</span> == Number) & amp; &amp;\n          (<span class=\"supfact\">nom</span> == Number)) {\n        <span class=\"supfact\">hz</span> = <span class=\"supfact\">denom</span>;\n      }\n      fclose(__stream);\n    }\n    if (<span class=\"supfact\">hz</span> == Number) {\n      <span class=\"supfact\">hz</span> = Number;\n    }\n  } else {\n    pcVar2 = getenv(String);\n    <span class=\"supfact\">hz</span> = atoi(pcVar2);\n    if (<span class=\"supfact\">hz</span> == Number) {\n      <span class=\"supfact\">hz</span> = Number;\n    }\n  }\n  return <span class=\"supfact\">hz</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "pcVar2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_420", "type": "uint", "pred_name": "denom", "ref_name": "denom", "ref_type": "uint"}, {"name": "local_41c", "type": "uint", "pred_name": "nom", "ref_name": "nom", "ref_type": "uint"}, {"name": "local_418", "type": "char[1024][1024]", "pred_name": "name", "ref_name": "name", "ref_type": "char[1024][1024]"}, {"name": "local_410", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_408", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_18", "type": "FILE * *", "pred_name": "fp", "ref_name": "fp", "ref_type": "FILE * *"}, {"name": "local_c", "type": "int", "pred_name": "hz", "ref_name": "hz", "ref_type": "int"}], "body_in_train": true}, {"code_s": "void ex_get_reflectivity(long <span class=\"supfact\">param_1</span>,\n                         int <span class=\"supfact\">param_2</span>,\n                         int <span class=\"supfact\">param_3</span>,\n                         long <span class=\"supfact\">param_4</span>,\n                         long <span class=\"supfact\">param_5</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">iVar1</span> =\n      ex_ncalc(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n  for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n       <span class=\"supfact\">iVar1</span>;\n       <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n    *(undefined8 *)(<span class=\"supfact\">param_4</span> +\n                    (long)<span class=\"supfact\">local_c</span> * Number) =\n        *(undefined8 *)((long)<span class=\"supfact\">local_c</span> * Number +\n                        *(long *)(<span class=\"supfact\">param_1</span> +\n                                  (long)<span class=\"supfact\">param_2</span> * Number +\n                                  Number));\n  }\n  if (<span class=\"supfact\">param_3</span> == Number) {\n    for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n         <span class=\"supfact\">iVar1</span>;\n         <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n      *(undefined8 *)(<span class=\"supfact\">param_5</span> +\n                      (long)<span class=\"supfact\">local_c</span> * Number) =\n          *(undefined8 *)((long)<span class=\"supfact\">local_c</span> * Number +\n                          *(long *)(<span class=\"supfact\">param_1</span> +\n                                    (long)<span class=\"supfact\">param_2</span> * Number +\n                                    Number));\n    }\n  } else if (<span class=\"supfact\">param_3</span> == Number) {\n    for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n         <span class=\"supfact\">iVar1</span>;\n         <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n      *(undefined8 *)(<span class=\"supfact\">param_5</span> +\n                      (long)<span class=\"supfact\">local_c</span> * Number) =\n          *(undefined8 *)((long)<span class=\"supfact\">local_c</span> * Number +\n                          *(long *)(<span class=\"supfact\">param_1</span> +\n                                    (long)<span class=\"supfact\">param_2</span> * Number +\n                                    Number));\n    }\n  } else if (<span class=\"supfact\">param_3</span> == Number) {\n    for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n         <span class=\"supfact\">iVar1</span>;\n         <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n      *(undefined8 *)(<span class=\"supfact\">param_5</span> +\n                      (long)<span class=\"supfact\">local_c</span> * Number) =\n          *(undefined8 *)((long)<span class=\"supfact\">local_c</span> * Number +\n                          *(long *)(<span class=\"supfact\">param_1</span> +\n                                    (long)<span class=\"supfact\">param_2</span> * Number +\n                                    Number));\n    }\n  } else if (<span class=\"supfact\">param_3</span> == Number) {\n    for (<span class=\"supfact\">local_c</span> = Number; <span class=\"supfact\">local_c</span> & lt;\n         <span class=\"supfact\">iVar1</span>;\n         <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + Number) {\n      *(undefined8 *)(<span class=\"supfact\">param_5</span> +\n                      (long)<span class=\"supfact\">local_c</span> * Number) =\n          *(undefined8 *)((long)<span class=\"supfact\">local_c</span> * Number +\n                          *(long *)(<span class=\"supfact\">param_1</span> +\n                                    (long)<span class=\"supfact\">param_2</span> * Number +\n                                    Number));\n    }\n  }\n  return;\n}", "code_t": "void ex_get_reflectivity(fitinfo *<span class=\"supfact\">fit</span>, int <span class=\"supfact\">k</span>,\n                         int <span class=\"supfact\">xs</span>, double *<span class=\"supfact\">Q</span>,\n                         double *<span class=\"supfact\">R</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  double *<span class=\"supfact\">R</span> - local;\n  double *<span class=\"supfact\">Q</span> - local;\n  int <span class=\"supfact\">xs</span> - local;\n  int <span class=\"supfact\">k</span> - local;\n  fitinfo *<span class=\"supfact\">fit</span> - local;\n  int nQ;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">iVar1</span> = ex_ncalc(<span class=\"supfact\">fit</span>, <span class=\"supfact\">k</span>);\n  for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n       <span class=\"supfact\">iVar1</span>; <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n    <span class=\"supfact\">Q</span>[<span class=\"supfact\">i</span>] =\n        <span class=\"supfact\">fit</span>[<span class=\"supfact\">k</span>].fitQ[<span class=\"supfact\">i</span>];\n  }\n  if (<span class=\"supfact\">xs</span> == Number) {\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n         <span class=\"supfact\">iVar1</span>;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      <span class=\"supfact\">R</span>[<span class=\"supfact\">i</span>] =\n          <span class=\"supfact\">fit</span>[<span class=\"supfact\">k</span>].fitA[<span class=\"supfact\">i</span>];\n    }\n  } else if (<span class=\"supfact\">xs</span> == Number) {\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n         <span class=\"supfact\">iVar1</span>;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      <span class=\"supfact\">R</span>[<span class=\"supfact\">i</span>] =\n          <span class=\"supfact\">fit</span>[<span class=\"supfact\">k</span>].fitB[<span class=\"supfact\">i</span>];\n    }\n  } else if (<span class=\"supfact\">xs</span> == Number) {\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n         <span class=\"supfact\">iVar1</span>;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      <span class=\"supfact\">R</span>[<span class=\"supfact\">i</span>] =\n          <span class=\"supfact\">fit</span>[<span class=\"supfact\">k</span>].fitC[<span class=\"supfact\">i</span>];\n    }\n  } else if (<span class=\"supfact\">xs</span> == Number) {\n    for (<span class=\"supfact\">i</span> = Number; <span class=\"supfact\">i</span> & lt;\n         <span class=\"supfact\">iVar1</span>;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + Number) {\n      <span class=\"supfact\">R</span>[<span class=\"supfact\">i</span>] =\n          <span class=\"supfact\">fit</span>[<span class=\"supfact\">k</span>].fitD[<span class=\"supfact\">i</span>];\n    }\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "u8 * *", "pred_name": "k", "ref_name": "fit", "ref_type": "fitinfo * *"}, {"name": "param_2", "type": "int", "pred_name": "__unk__", "ref_name": "k", "ref_type": "int"}, {"name": "param_3", "type": "int", "pred_name": "__unk__", "ref_name": "xs", "ref_type": "int"}, {"name": "param_4", "type": "u8 * *", "pred_name": "__unk__", "ref_name": "Q", "ref_type": "double * *"}, {"name": "param_5", "type": "u8 * *", "pred_name": "__unk__", "ref_name": "R", "ref_type": "double * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "homewsn", "repo_name": "whsnbg", "path": "homewsn/whsnbg/008e2809518e5592145d70fa8b1ae5f177457bd7ed586ba683492c3a3e7c2413", "path_in_repo": "homewsn/whsnbg//whsnbg", "objdump": "", "code_s": "int pthread_detach(pthread_t __th) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_detach_0041c030)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int pthread_detach(pthread_t __th) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_pthread_detach_0041c030)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "z80inside", "repo_name": "contiki", "path": "z80inside/contiki/bba96f2068757dbee110a520e1a769c9fbda248bc7433d17ef8c1ba5306ca424", "path_in_repo": "z80inside/contiki/examples/nvm_test/obj_native/netflood.o", "objdump": "00000000000002a9 <netflood_send>:\n 2a9:\t55                   \tpush   %rbp\n 2aa:\t48 89 e5             \tmov    %rsp,%rbp\n 2ad:\t48 83 ec 20          \tsub    $0x20,%rsp\n 2b1:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n 2b5:\t89 f0                \tmov    %esi,%eax\n 2b7:\t88 45 e4             \tmov    %al,-0x1c(%rbp)\n 2ba:\tbf 06 00 00 00       \tmov    $0x6,%edi\n 2bf:\te8 00 00 00 00       \tcall   2c4 <netflood_send+0x1b>\n 2c4:\t85 c0                \ttest   %eax,%eax\n 2c6:\t74 7b                \tje     343 <netflood_send+0x9a>\n 2c8:\te8 00 00 00 00       \tcall   2cd <netflood_send+0x24>\n 2cd:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n 2d1:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 2d5:\t48 83 c0 02          \tadd    $0x2,%rax\n 2d9:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 2de:\t48 89 c7             \tmov    %rax,%rdi\n 2e1:\te8 00 00 00 00       \tcall   2e6 <netflood_send+0x3d>\n 2e6:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 2ea:\t48 8d 50 02          \tlea    0x2(%rax),%rdx\n 2ee:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 2f2:\t48 05 98 00 00 00    \tadd    $0x98,%rax\n 2f8:\t48 89 d6             \tmov    %rdx,%rsi\n 2fb:\t48 89 c7             \tmov    %rax,%rdi\n 2fe:\te8 00 00 00 00       \tcall   303 <netflood_send+0x5a>\n 303:\t0f b6 55 e4          \tmovzbl -0x1c(%rbp),%edx\n 307:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 30b:\t66 89 10             \tmov    %dx,(%rax)\n 30e:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 312:\t0f b7 00             \tmovzwl (%rax),%eax\n 315:\t89 c2                \tmov    %eax,%edx\n 317:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 31b:\t88 90 9a 00 00 00    \tmov    %dl,0x9a(%rax)\n 321:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n 325:\t66 c7 40 04 00 00    \tmovw   $0x0,0x4(%rax)\n 32b:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 32f:\tba 04 00 00 00       \tmov    $0x4,%edx\n 334:\tbe 00 00 00 00       \tmov    $0x0,%esi\n 339:\t48 89 c7             \tmov    %rax,%rdi\n 33c:\te8 00 00 00 00       \tcall   341 <netflood_send+0x98>\n 341:\teb 05                \tjmp    348 <netflood_send+0x9f>\n 343:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 348:\tc9                   \tleave  \n 349:\tc3                   \tret    ", "code_s": "undefined8 netflood_send(long <span class=\"supfact\">param_1</span>,\n                         byte <span class=\"supfact\">param_2</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  ushort *puVar2;\n  undefined8 uVar3;\n  <span class=\"supfact\">iVar1</span> = packetbuf_hdralloc(Number);\n  if (<span class=\"supfact\">iVar1</span> == Number) {\n    uVar3 = Number;\n  } else {\n    puVar2 = (ushort *)packetbuf_hdrptr();\n    rimeaddr_copy(puVar2 + Number, &amp; rimeaddr_node_addr);\n    rimeaddr_copy(<span class=\"supfact\">param_1</span> + Number, puVar2 + Number);\n    *puVar2 = (ushort)<span class=\"supfact\">param_2</span>;\n    *(char *)(<span class=\"supfact\">param_1</span> + Number) = (char)*puVar2;\n    puVar2[Number] = Number;\n    uVar3 = ipolite_send(<span class=\"supfact\">param_1</span>, Number, Number);\n  }\n  return uVar3;\n}", "code_t": "int netflood_send(netflood_conn *<span class=\"supfact\">c</span>,\n                  uint8_t <span class=\"supfact\">seqno</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  ushort *puVar2;\n  uint8_t <span class=\"supfact\">seqno</span> - local;\n  netflood_conn *<span class=\"supfact\">c</span> - local;\n  netflood_hdr *hdr;\n  <span class=\"supfact\">iVar1</span> = packetbuf_hdralloc(Number);\n  if (<span class=\"supfact\">iVar1</span> == Number) {\n    <span class=\"supfact\">iVar1</span> = Number;\n  } else {\n    puVar2 = (ushort *)packetbuf_hdrptr();\n    rimeaddr_copy(puVar2 + Number, &amp; rimeaddr_node_addr);\n    rimeaddr_copy(&amp; <span class=\"supfact\">c</span> - &gt;\n                  last_originator, puVar2 + Number);\n    *puVar2 = (ushort)<span class=\"supfact\">seqno</span>;\n    <span class=\"supfact\">c</span> - &gt;\n    last_originator_seqno = (uint8_t)*puVar2;\n    puVar2[Number] = Number;\n    <span class=\"supfact\">iVar1</span> = ipolite_send(<span class=\"supfact\">c</span>, Number, Number);\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "param_1", "type": "netflood_conn * *", "pred_name": "c", "ref_name": "c", "ref_type": "netflood_conn * *"}, {"name": "param_2", "type": "uint8_t", "pred_name": "seqno", "ref_name": "seqno", "ref_type": "uint8_t"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "mdxy2010", "repo_name": "forlinux-ok6410", "path": "mdxy2010/forlinux-ok6410/24063faae7638ef71c1a17071cbc9738359526644e13a1f9703c40b69f64b474", "path_in_repo": "mdxy2010/forlinux-ok6410/kernel/scripts/kconfig/zconf.tab.o", "objdump": "0000000000007b40 <expr_alloc_two>:\n    7b40:\t48 83 ec 38          \tsub    $0x38,%rsp\n    7b44:\t89 7c 24 1c          \tmov    %edi,0x1c(%rsp)\n    7b48:\t48 89 74 24 10       \tmov    %rsi,0x10(%rsp)\n    7b4d:\t48 89 54 24 08       \tmov    %rdx,0x8(%rsp)\n    7b52:\tbf 18 00 00 00       \tmov    $0x18,%edi\n    7b57:\te8 00 00 00 00       \tcall   7b5c <expr_alloc_two+0x1c>\n    7b5c:\t48 89 44 24 28       \tmov    %rax,0x28(%rsp)\n    7b61:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    7b66:\tba 18 00 00 00       \tmov    $0x18,%edx\n    7b6b:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    7b70:\t48 89 c7             \tmov    %rax,%rdi\n    7b73:\te8 00 00 00 00       \tcall   7b78 <expr_alloc_two+0x38>\n    7b78:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    7b7d:\t8b 54 24 1c          \tmov    0x1c(%rsp),%edx\n    7b81:\t89 10                \tmov    %edx,(%rax)\n    7b83:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    7b88:\t48 8b 54 24 10       \tmov    0x10(%rsp),%rdx\n    7b8d:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n    7b91:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    7b96:\t48 8b 54 24 08       \tmov    0x8(%rsp),%rdx\n    7b9b:\t48 89 50 10          \tmov    %rdx,0x10(%rax)\n    7b9f:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n    7ba4:\t48 83 c4 38          \tadd    $0x38,%rsp\n    7ba8:\tc3                   \tret    ", "code_s": "undefined4 *expr_alloc_two(undefined4 <span class=\"supfact\">param_1</span>,\n                           undefined8 <span class=\"supfact\">param_2</span>,\n                           undefined8 <span class=\"supfact\">param_3</span>) {\n  undefined4 *<span class=\"supfact\">__s</span>;\n  <span class=\"supfact\">__s</span> = (undefined4 *)malloc(Number);\n  memset(<span class=\"supfact\">__s</span>, Number, Number);\n  *<span class=\"supfact\">__s</span> = <span class=\"supfact\">param_1</span>;\n  *(undefined8 *)(<span class=\"supfact\">__s</span> + Number) = <span class=\"supfact\">param_2</span>;\n  *(undefined8 *)(<span class=\"supfact\">__s</span> + Number) = <span class=\"supfact\">param_3</span>;\n  return <span class=\"supfact\">__s</span>;\n}", "code_t": "expr *expr_alloc_two(expr_type <span class=\"supfact\">type</span>, expr *<span class=\"supfact\">e1</span>,\n                     expr *<span class=\"supfact\">e2</span>) {\n  expr *<span class=\"supfact\">__s</span>;\n  expr *<span class=\"supfact\">e2</span> - local;\n  expr *<span class=\"supfact\">e1</span> - local;\n  expr_type <span class=\"supfact\">type</span> - local;\n  expr *e;\n  <span class=\"supfact\">__s</span> = (expr *)malloc(Number);\n  memset(<span class=\"supfact\">__s</span>, Number, Number);\n  <span class=\"supfact\">__s</span> - &gt;\n  <span class=\"supfact\">type</span> = <span class=\"supfact\">type</span>;\n  (<span class=\"supfact\">__s</span> - &gt; left).expr = <span class=\"supfact\">e1</span>;\n  (<span class=\"supfact\">__s</span> - &gt; right).expr = <span class=\"supfact\">e2</span>;\n  return <span class=\"supfact\">__s</span>;\n}", "var": [{"name": "param_1", "type": "expr_type", "pred_name": "type", "ref_name": "type", "ref_type": "expr_type"}, {"name": "param_2", "type": "expr * *", "pred_name": "e1", "ref_name": "e1", "ref_type": "expr * *"}, {"name": "param_3", "type": "expr * *", "pred_name": "e2", "ref_name": "e2", "ref_type": "expr * *"}, {"name": "__s", "type": "expr * *", "pred_name": "__s", "ref_name": "__s", "ref_type": "expr * *"}], "body_in_train": true}, {"repo_owner": "att-kin9", "repo_name": "MineWorld", "path": "att-kin9/MineWorld/596622e88c7ab660d48c9ac8b137a5692ae110d4920aee65a577b2c0d14dc121", "path_in_repo": "att-kin9/MineWorld/build/android/deps/irrlicht/source/Irrlicht/CTRTextureGouraudWire.o", "objdump": "", "code_s": "CTRTextureGouraudWire *irr video\ncreateTriangleRendererTextureGouraudWire(IZBuffer *<span class=\"supfact\">param_1</span>) {\n  CTRTextureGouraudWire *<span class=\"supfact\">this</span>;\n  <span class=\"supfact\">this</span> = (CTRTextureGouraudWire *)operator.new(Number);\n  CTRTextureGouraudWire CTRTextureGouraudWire(<span class=\"supfact\">this</span>,\n                                              <span class=\"supfact\">param_1</span>);\n  return <span class=\"supfact\">this</span>;\n}", "code_t": "ITriangleRenderer *irr video\ncreateTriangleRendererTextureGouraudWire(IZBuffer *<span class=\"supfact\">zbuffer</span>) {\n  CTRTextureGouraudWire *<span class=\"supfact\">this</span>;\n  IZBuffer *in_RCX;\n  void **__vtt_parm;\n  IZBuffer *<span class=\"supfact\">zbuffer</span> - local;\n  <span class=\"supfact\">this</span> = (CTRTextureGouraudWire *)operator.new(Number);\n  CTRTextureGouraudWire CTRTextureGouraudWire(\n      <span class=\"supfact\">this</span>, (int)<span class=\"supfact\">zbuffer</span>, __vtt_parm, in_RCX);\n  return (ITriangleRenderer *)<span class=\"supfact\">this</span>;\n}", "var": [{"name": "param_1", "type": "__unk__", "pred_name": "op", "ref_name": "zbuffer", "ref_type": "IZBuffer * *"}, {"name": "this", "type": "__unk__", "pred_name": "this", "ref_name": "this", "ref_type": "CTRTextureGouraudWire * *"}], "body_in_train": false}, {"repo_owner": "mnhrdt", "repo_name": "imscript", "path": "mnhrdt/imscript/dbe579d38277eb725551baf698a571c824dfa48b9e8f714c8b12de04c54df748", "path_in_repo": "mnhrdt/imscript//bin/iion", "objdump": "", "code_s": "int strcmp(char *__s1, char *__s2) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_strcmp_004201f0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int strcmp(char *__s1, char *__s2) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_strcmp_004201f0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "SSLAB-HSA", "repo_name": "HSAemu", "path": "SSLAB-HSA/HSAemu/4b3ead8b851797ca2c2e8df03ed1f7330ce430377dedefcb72b3b962de6a461e", "path_in_repo": "SSLAB-HSA/HSAemu/qemu/armeb-linux-user/fpu/softfloat.o", "objdump": "000000000000ea8c <float128_to_int32>:\n    ea8c:\t55                   \tpush   %rbp\n    ea8d:\t48 89 e5             \tmov    %rsp,%rbp\n    ea90:\t53                   \tpush   %rbx\n    ea91:\t48 83 ec 58          \tsub    $0x58,%rsp\n    ea95:\t48 89 f9             \tmov    %rdi,%rcx\n    ea98:\t48 89 f0             \tmov    %rsi,%rax\n    ea9b:\t48 89 c3             \tmov    %rax,%rbx\n    ea9e:\t48 89 4d b0          \tmov    %rcx,-0x50(%rbp)\n    eaa2:\t48 89 5d b8          \tmov    %rbx,-0x48(%rbp)\n    eaa6:\t48 89 55 a8          \tmov    %rdx,-0x58(%rbp)\n    eaaa:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n    eab1:\t00 00 \n    eab3:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    eab7:\t31 c0                \txor    %eax,%eax\n    eab9:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n    eabd:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    eac1:\t48 89 d7             \tmov    %rdx,%rdi\n    eac4:\t48 89 c6             \tmov    %rax,%rsi\n    eac7:\te8 aa 53 ff ff       \tcall   3e76 <extractFloat128Frac1>\n    eacc:\t48 89 45 e0          \tmov    %rax,-0x20(%rbp)\n    ead0:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n    ead4:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    ead8:\t48 89 d7             \tmov    %rdx,%rdi\n    eadb:\t48 89 c6             \tmov    %rax,%rsi\n    eade:\te8 d5 53 ff ff       \tcall   3eb8 <extractFloat128Frac0>\n    eae3:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    eae7:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n    eaeb:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    eaef:\t48 89 d7             \tmov    %rdx,%rdi\n    eaf2:\t48 89 c6             \tmov    %rax,%rsi\n    eaf5:\te8 0d 54 ff ff       \tcall   3f07 <extractFloat128Exp>\n    eafa:\t89 45 d0             \tmov    %eax,-0x30(%rbp)\n    eafd:\t48 8b 55 b0          \tmov    -0x50(%rbp),%rdx\n    eb01:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n    eb05:\t48 89 d7             \tmov    %rdx,%rdi\n    eb08:\t48 89 c6             \tmov    %rax,%rsi\n    eb0b:\te8 42 54 ff ff       \tcall   3f52 <extractFloat128Sign>\n    eb10:\t88 45 cf             \tmov    %al,-0x31(%rbp)\n    eb13:\t81 7d d0 ff 7f 00 00 \tcmpl   $0x7fff,-0x30(%rbp)\n    eb1a:\t75 11                \tjne    eb2d <float128_to_int32+0xa1>\n    eb1c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    eb20:\t48 0b 45 e0          \tor     -0x20(%rbp),%rax\n    eb24:\t48 85 c0             \ttest   %rax,%rax\n    eb27:\t74 04                \tje     eb2d <float128_to_int32+0xa1>\n    eb29:\tc6 45 cf 00          \tmovb   $0x0,-0x31(%rbp)\n    eb2d:\t83 7d d0 00          \tcmpl   $0x0,-0x30(%rbp)\n    eb31:\t74 15                \tje     eb48 <float128_to_int32+0xbc>\n    eb33:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    eb37:\t48 ba 00 00 00 00 00 \tmovabs $0x1000000000000,%rdx\n    eb3e:\t00 01 00 \n    eb41:\t48 09 d0             \tor     %rdx,%rax\n    eb44:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    eb48:\t48 83 7d e0 00       \tcmpq   $0x0,-0x20(%rbp)\n    eb4d:\t0f 95 c0             \tsetne  %al\n    eb50:\t0f b6 d0             \tmovzbl %al,%edx\n    eb53:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    eb57:\t48 09 d0             \tor     %rdx,%rax\n    eb5a:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    eb5e:\tb8 28 40 00 00       \tmov    $0x4028,%eax\n    eb63:\t2b 45 d0             \tsub    -0x30(%rbp),%eax\n    eb66:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n    eb69:\t83 7d d4 00          \tcmpl   $0x0,-0x2c(%rbp)\n    eb6d:\t7e 19                \tjle    eb88 <float128_to_int32+0xfc>\n    eb6f:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n    eb72:\t48 63 c8             \tmovslq %eax,%rcx\n    eb75:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    eb79:\t48 8d 55 d8          \tlea    -0x28(%rbp),%rdx\n    eb7d:\t48 89 ce             \tmov    %rcx,%rsi\n    eb80:\t48 89 c7             \tmov    %rax,%rdi\n    eb83:\te8 a2 15 ff ff       \tcall   12a <shift64RightJamming>\n    eb88:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n    eb8c:\t0f b6 45 cf          \tmovzbl -0x31(%rbp),%eax\n    eb90:\t48 8b 55 a8          \tmov    -0x58(%rbp),%rdx\n    eb94:\t48 89 ce             \tmov    %rcx,%rsi\n    eb97:\t89 c7                \tmov    %eax,%edi\n    eb99:\te8 45 3e ff ff       \tcall   29e3 <roundAndPackInt32>\n    eb9e:\t48 8b 5d e8          \tmov    -0x18(%rbp),%rbx\n    eba2:\t64 48 33 1c 25 28 00 \txor    %fs:0x28,%rbx\n    eba9:\t00 00 \n    ebab:\t74 05                \tje     ebb2 <float128_to_int32+0x126>\n    ebad:\te8 00 00 00 00       \tcall   ebb2 <float128_to_int32+0x126>\n    ebb2:\t48 83 c4 58          \tadd    $0x58,%rsp\n    ebb6:\t5b                   \tpop    %rbx\n    ebb7:\t5d                   \tpop    %rbp\n    ebb8:\tc3                   \tret    ", "code_s": "void float128_to_int32(undefined8 <span class=\"supfact\">param_1</span>,\n                       undefined8 <span class=\"supfact\">param_2</span>,\n                       undefined8 <span class=\"supfact\">param_3</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  undefined <span class=\"supfact\">local_39</span>;\n  ulong <span class=\"supfact\">local_30</span>;\n  ulong <span class=\"supfact\">local_28</span>;\n  long <span class=\"supfact\">local_20</span>;\n  <span class=\"supfact\">local_20</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_28</span> =\n      FUN_00103e76(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n  <span class=\"supfact\">local_30</span> =\n      FUN_00103eb8(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n  <span class=\"supfact\">iVar1</span> =\n      FUN_00103f07(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n  <span class=\"supfact\">local_39</span> =\n      FUN_00103f52(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n  if ((<span class=\"supfact\">iVar1</span> == Number) & amp; &amp;\n      ((<span class=\"supfact\">local_30</span> | <span class=\"supfact\">local_28</span>) != Number)) {\n    <span class=\"supfact\">local_39</span> = Number;\n  }\n  if (<span class=\"supfact\">iVar1</span> != Number) {\n    <span class=\"supfact\">local_30</span> = <span class=\"supfact\">local_30</span> | Number;\n  }\n  <span class=\"supfact\">local_30</span> =\n      <span class=\"supfact\">local_30</span> | <span class=\"supfact\">local_28</span> != Number;\n  if (Number & lt; Number - <span class=\"supfact\">iVar1</span>) {\n    FUN_0010012a(<span class=\"supfact\">local_30</span>,\n                 (long)(Number - <span class=\"supfact\">iVar1</span>), &amp;\n                 <span class=\"supfact\">local_30</span>);\n  }\n  FUN_001029e3(<span class=\"supfact\">local_39</span>, <span class=\"supfact\">local_30</span>,\n               <span class=\"supfact\">param_3</span>);\n  if (<span class=\"supfact\">local_20</span> !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return;\n}", "code_t": "int32 float128_to_int32(float128 a, float_status *<span class=\"supfact\">status</span>) {\n  float128 a_00;\n  float128 a_01;\n  float128 a_02;\n  float128 a_03;\n  int32 <span class=\"supfact\">iVar1</span>;\n  float_status *<span class=\"supfact\">in_RDX</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  uint64_t uStack_68;\n  float_status *<span class=\"supfact\">status</span> - local;\n  float128 a - local;\n  flag <span class=\"supfact\">aSign</span>;\n  int32 aExp;\n  int32 shiftCount;\n  uint64_t <span class=\"supfact\">aSig0</span>;\n  uint64_t <span class=\"supfact\">aSig1</span>;\n  long <span class=\"supfact\">local_20</span>;\n  <span class=\"supfact\">local_20</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  a_00.high = (uint64_t)<span class=\"supfact\">in_RDX</span>;\n  a_00.low = uStack_68;\n  <span class=\"supfact\">aSig1</span> = extractFloat128Frac1(a_00);\n  a_01.high = (uint64_t)<span class=\"supfact\">in_RDX</span>;\n  a_01.low = uStack_68;\n  <span class=\"supfact\">aSig0</span> = extractFloat128Frac0(a_01);\n  a_02.high = (uint64_t)<span class=\"supfact\">in_RDX</span>;\n  a_02.low = uStack_68;\n  <span class=\"supfact\">iVar1</span> = extractFloat128Exp(a_02);\n  a_03.high = (uint64_t)<span class=\"supfact\">in_RDX</span>;\n  a_03.low = uStack_68;\n  <span class=\"supfact\">aSign</span> = extractFloat128Sign(a_03);\n  if ((<span class=\"supfact\">iVar1</span> == Number) & amp; &amp;\n      ((<span class=\"supfact\">aSig0</span> | <span class=\"supfact\">aSig1</span>) != Number)) {\n    <span class=\"supfact\">aSign</span> = String;\n  }\n  if (<span class=\"supfact\">iVar1</span> != Number) {\n    <span class=\"supfact\">aSig0</span> = <span class=\"supfact\">aSig0</span> | Number;\n  }\n  <span class=\"supfact\">aSig0</span> =\n      <span class=\"supfact\">aSig0</span> | <span class=\"supfact\">aSig1</span> != Number;\n  if (Number & lt; Number - <span class=\"supfact\">iVar1</span>) {\n    shift64RightJamming(<span class=\"supfact\">aSig0</span>,\n                        (long)(Number - <span class=\"supfact\">iVar1</span>), &amp;\n                        <span class=\"supfact\">aSig0</span>);\n  }\n  <span class=\"supfact\">iVar1</span> = roundAndPackInt32(\n      <span class=\"supfact\">aSign</span>, <span class=\"supfact\">aSig0</span>, <span class=\"supfact\">in_RDX</span>);\n  if (<span class=\"supfact\">local_20</span> !=\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    __stack_chk_fail();\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "param_1", "type": "float_status * *", "pred_name": "status", "ref_name": "status", "ref_type": "float_status * *"}, {"name": "param_2", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "param_3", "type": "float_status * *", "pred_name": "in_RDX", "ref_name": "in_RDX", "ref_type": "float_status * *"}, {"name": "iVar1", "type": "int32", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int32"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_39", "type": "flag", "pred_name": "aSign", "ref_name": "aSign", "ref_type": "flag"}, {"name": "local_30", "type": "bits64", "pred_name": "aSig0", "ref_name": "aSig0", "ref_type": "uint64_t"}, {"name": "local_28", "type": "bits64", "pred_name": "aSig1", "ref_name": "aSig1", "ref_type": "uint64_t"}, {"name": "local_20", "type": "long", "pred_name": "local_20", "ref_name": "local_20", "ref_type": "long"}], "body_in_train": true}, {"repo_owner": "knizhnik", "repo_name": "postgresql", "path": "knizhnik/postgresql/86396f9bb8a0c668b6b5b7fdcbf0713893444cf390b301ecb569ff86734ae2c3", "path_in_repo": "knizhnik/postgresql//src/backend/storage/file/fd.o", "objdump": "0000000000003c15 <OpenPipeStream>:\n    3c15:\t55                   \tpush   %rbp\n    3c16:\t48 89 e5             \tmov    %rsp,%rbp\n    3c19:\t53                   \tpush   %rbx\n    3c1a:\t48 83 ec 38          \tsub    $0x38,%rsp\n    3c1e:\t48 89 7d c8          \tmov    %rdi,-0x38(%rbp)\n    3c22:\t48 89 75 c0          \tmov    %rsi,-0x40(%rbp)\n    3c26:\te8 3d fc ff ff       \tcall   3868 <reserveAllocatedDesc>\n    3c2b:\t84 c0                \ttest   %al,%al\n    3c2d:\t75 58                \tjne    3c87 <OpenPipeStream+0x72>\n    3c2f:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    3c35:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    3c3a:\tba 31 09 00 00       \tmov    $0x931,%edx\n    3c3f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    3c44:\tbf 14 00 00 00       \tmov    $0x14,%edi\n    3c49:\te8 00 00 00 00       \tcall   3c4e <OpenPipeStream+0x39>\n    3c4e:\t84 c0                \ttest   %al,%al\n    3c50:\t74 35                \tje     3c87 <OpenPipeStream+0x72>\n    3c52:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 3c58 <OpenPipeStream+0x43>\n    3c58:\t48 8b 55 c8          \tmov    -0x38(%rbp),%rdx\n    3c5c:\t89 c6                \tmov    %eax,%esi\n    3c5e:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3c63:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3c68:\te8 00 00 00 00       \tcall   3c6d <OpenPipeStream+0x58>\n    3c6d:\t89 c3                \tmov    %eax,%ebx\n    3c6f:\tbf c5 00 00 00       \tmov    $0xc5,%edi\n    3c74:\te8 00 00 00 00       \tcall   3c79 <OpenPipeStream+0x64>\n    3c79:\t89 de                \tmov    %ebx,%esi\n    3c7b:\t89 c7                \tmov    %eax,%edi\n    3c7d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3c82:\te8 00 00 00 00       \tcall   3c87 <OpenPipeStream+0x72>\n    3c87:\te8 c6 d2 ff ff       \tcall   f52 <ReleaseLruFiles>\n    3c8c:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3c93 <OpenPipeStream+0x7e>\n    3c93:\t48 89 c7             \tmov    %rax,%rdi\n    3c96:\te8 00 00 00 00       \tcall   3c9b <OpenPipeStream+0x86>\n    3c9b:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3ca2 <OpenPipeStream+0x8d>\n    3ca2:\t48 89 c7             \tmov    %rax,%rdi\n    3ca5:\te8 00 00 00 00       \tcall   3caa <OpenPipeStream+0x95>\n    3caa:\te8 00 00 00 00       \tcall   3caf <OpenPipeStream+0x9a>\n    3caf:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n    3cb5:\t48 8b 55 c0          \tmov    -0x40(%rbp),%rdx\n    3cb9:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n    3cbd:\t48 89 d6             \tmov    %rdx,%rsi\n    3cc0:\t48 89 c7             \tmov    %rax,%rdi\n    3cc3:\te8 00 00 00 00       \tcall   3cc8 <OpenPipeStream+0xb3>\n    3cc8:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n    3ccc:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n    3cd1:\t74 59                \tje     3d2c <OpenPipeStream+0x117>\n    3cd3:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 3cda <OpenPipeStream+0xc5>\n    3cda:\t8b 15 00 00 00 00    \tmov    0x0(%rip),%edx        # 3ce0 <OpenPipeStream+0xcb>\n    3ce0:\t48 63 d2             \tmovslq %edx,%rdx\n    3ce3:\t48 c1 e2 04          \tshl    $0x4,%rdx\n    3ce7:\t48 01 d0             \tadd    %rdx,%rax\n    3cea:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    3cee:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    3cf2:\tc7 00 01 00 00 00    \tmovl   $0x1,(%rax)\n    3cf8:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    3cfc:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    3d00:\t48 89 50 08          \tmov    %rdx,0x8(%rax)\n    3d04:\te8 00 00 00 00       \tcall   3d09 <OpenPipeStream+0xf4>\n    3d09:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n    3d0d:\t89 42 04             \tmov    %eax,0x4(%rdx)\n    3d10:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # 3d16 <OpenPipeStream+0x101>\n    3d16:\t83 c0 01             \tadd    $0x1,%eax\n    3d19:\t89 05 00 00 00 00    \tmov    %eax,0x0(%rip)        # 3d1f <OpenPipeStream+0x10a>\n    3d1f:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    3d23:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    3d27:\te9 96 00 00 00       \tjmp    3dc2 <OpenPipeStream+0x1ad>\n    3d2c:\te8 00 00 00 00       \tcall   3d31 <OpenPipeStream+0x11c>\n    3d31:\t8b 00                \tmov    (%rax),%eax\n    3d33:\t83 f8 18             \tcmp    $0x18,%eax\n    3d36:\t74 0c                \tje     3d44 <OpenPipeStream+0x12f>\n    3d38:\te8 00 00 00 00       \tcall   3d3d <OpenPipeStream+0x128>\n    3d3d:\t8b 00                \tmov    (%rax),%eax\n    3d3f:\t83 f8 17             \tcmp    $0x17,%eax\n    3d42:\t75 79                \tjne    3dbd <OpenPipeStream+0x1a8>\n    3d44:\te8 00 00 00 00       \tcall   3d49 <OpenPipeStream+0x134>\n    3d49:\t8b 00                \tmov    (%rax),%eax\n    3d4b:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n    3d4e:\t41 b8 00 00 00 00    \tmov    $0x0,%r8d\n    3d54:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n    3d59:\tba 4c 09 00 00       \tmov    $0x94c,%edx\n    3d5e:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    3d63:\tbf 0f 00 00 00       \tmov    $0xf,%edi\n    3d68:\te8 00 00 00 00       \tcall   3d6d <OpenPipeStream+0x158>\n    3d6d:\t84 c0                \ttest   %al,%al\n    3d6f:\t74 29                \tje     3d9a <OpenPipeStream+0x185>\n    3d71:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    3d76:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3d7b:\te8 00 00 00 00       \tcall   3d80 <OpenPipeStream+0x16b>\n    3d80:\t89 c3                \tmov    %eax,%ebx\n    3d82:\tbf c5 00 00 00       \tmov    $0xc5,%edi\n    3d87:\te8 00 00 00 00       \tcall   3d8c <OpenPipeStream+0x177>\n    3d8c:\t89 de                \tmov    %ebx,%esi\n    3d8e:\t89 c7                \tmov    %eax,%edi\n    3d90:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3d95:\te8 00 00 00 00       \tcall   3d9a <OpenPipeStream+0x185>\n    3d9a:\te8 00 00 00 00       \tcall   3d9f <OpenPipeStream+0x18a>\n    3d9f:\tc7 00 00 00 00 00    \tmovl   $0x0,(%rax)\n    3da5:\te8 7b d1 ff ff       \tcall   f25 <ReleaseLruFile>\n    3daa:\t84 c0                \ttest   %al,%al\n    3dac:\t74 05                \tje     3db3 <OpenPipeStream+0x19e>\n    3dae:\te9 d9 fe ff ff       \tjmp    3c8c <OpenPipeStream+0x77>\n    3db3:\te8 00 00 00 00       \tcall   3db8 <OpenPipeStream+0x1a3>\n    3db8:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n    3dbb:\t89 10                \tmov    %edx,(%rax)\n    3dbd:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3dc2:\t48 83 c4 38          \tadd    $0x38,%rsp\n    3dc6:\t5b                   \tpop    %rbx\n    3dc7:\t5d                   \tpop    %rbp\n    3dc8:\tc3                   \tret    ", "code_s": "undefined8 OpenPipeStream(char *<span class=\"supfact\">param_1</span>,\n                          char *<span class=\"supfact\">param_2</span>) {\n  int iVar1;\n  char <span class=\"supfact\">cVar2</span>;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  int *piVar5;\n  FILE *pFVar6;\n  undefined4 *puVar7;\n  <span class=\"supfact\">cVar2</span> = FUN_00103868();\n  if ((<span class=\"supfact\">cVar2</span> == String) & amp; &amp;\n      (<span class=\"supfact\">cVar2</span> =\n           errstart(Number, &amp; DAT_00105500, Number, String, Number),\n       <span class=\"supfact\">cVar2</span> != String)) {\n    uVar3 = errmsg(String, DAT_001054c4, <span class=\"supfact\">param_1</span>);\n    uVar4 = errcode(Number);\n    errfinish(uVar4, uVar3);\n  }\n  FUN_00100f52();\n  while (true) {\n    fflush(_stdout);\n    fflush(_stderr);\n    piVar5 = __errno_location();\n    *piVar5 = Number;\n    pFVar6 = popen(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n    if (pFVar6 != (FILE *)Number) {\n      puVar7 = (undefined4 *)(DAT_001054c8 + (long)DAT_001054c0 * Number);\n      *puVar7 = Number;\n      *(FILE **)(puVar7 + Number) = pFVar6;\n      uVar3 = GetCurrentSubTransactionId();\n      puVar7[Number] = uVar3;\n      DAT_001054c0 = DAT_001054c0 + Number;\n      return *(undefined8 *)(puVar7 + Number);\n    }\n    piVar5 = __errno_location();\n    if ((*piVar5 != Number) & amp; &amp;\n        (piVar5 = __errno_location(), *piVar5 != Number))\n      break;\n    piVar5 = __errno_location();\n    iVar1 = *piVar5;\n    <span class=\"supfact\">cVar2</span> =\n        errstart(Number, &amp; DAT_00105500, Number, String, Number);\n    if (<span class=\"supfact\">cVar2</span> != String) {\n      uVar3 = errmsg(String);\n      uVar4 = errcode(Number);\n      errfinish(uVar4, uVar3);\n    }\n    piVar5 = __errno_location();\n    *piVar5 = Number;\n    <span class=\"supfact\">cVar2</span> = FUN_00100f25();\n    if (<span class=\"supfact\">cVar2</span> == String) {\n      piVar5 = __errno_location();\n      *piVar5 = iVar1;\n      return Number;\n    }\n  }\n  return Number;\n}", "code_t": "FILE *OpenPipeStream(char *<span class=\"supfact\">command</span>,\n                     char *<span class=\"supfact\">mode</span>) {\n  int iVar1;\n  bool bVar2;\n  char cVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  SubTransactionId SVar6;\n  int *piVar7;\n  FILE *pFVar8;\n  AllocateDesc *pAVar9;\n  char *<span class=\"supfact\">mode</span> - local;\n  char *<span class=\"supfact\">command</span> - local;\n  AllocateDesc *desc;\n  int save_errno;\n  FILE *file;\n  bVar2 = reserveAllocatedDesc();\n  if ((!bVar2) & amp; &amp;\n      (cVar3 = errstart(Number, &amp; DAT_00105500, Number, String, Number),\n       cVar3 != String)) {\n    uVar4 = errmsg(String, maxAllocatedDescs, <span class=\"supfact\">command</span>);\n    uVar5 = errcode(Number);\n    errfinish(uVar5, uVar4);\n  }\n  ReleaseLruFiles();\n  while (true) {\n    fflush(_stdout);\n    fflush(_stderr);\n    piVar7 = __errno_location();\n    *piVar7 = Number;\n    pFVar8 = popen(<span class=\"supfact\">command</span>, <span class=\"supfact\">mode</span>);\n    if (pFVar8 != (FILE *)Number) {\n      pAVar9 = allocatedDescs + numAllocatedDescs;\n      pAVar9 - &gt;\n      kind = AllocateDescPipe;\n      (pAVar9 - &gt; desc).file = (FILE *)pFVar8;\n      SVar6 = GetCurrentSubTransactionId();\n      pAVar9 - &gt;\n      create_subid = SVar6;\n      numAllocatedDescs = numAllocatedDescs + Number;\n      return (pAVar9 - &gt; desc).file;\n    }\n    piVar7 = __errno_location();\n    if ((*piVar7 != Number) & amp; &amp;\n        (piVar7 = __errno_location(), *piVar7 != Number))\n      break;\n    piVar7 = __errno_location();\n    iVar1 = *piVar7;\n    cVar3 = errstart(Number, &amp; DAT_00105500, Number, String, Number);\n    if (cVar3 != String) {\n      uVar4 = errmsg(String);\n      uVar5 = errcode(Number);\n      errfinish(uVar5, uVar4);\n    }\n    piVar7 = __errno_location();\n    *piVar7 = Number;\n    bVar2 = ReleaseLruFile();\n    if (!bVar2) {\n      piVar7 = __errno_location();\n      *piVar7 = iVar1;\n      return (FILE *)Number;\n    }\n  }\n  return (FILE *)Number;\n}", "var": [{"name": "param_1", "type": "FILE * *", "pred_name": "pFile", "ref_name": "command", "ref_type": "char * *"}, {"name": "param_2", "type": "char * *", "pred_name": "__unk__", "ref_name": "mode", "ref_type": "char * *"}, {"name": "cVar2", "type": "char", "pred_name": "cVar2", "ref_name": "", "ref_type": "disappear"}], "body_in_train": false}, {"repo_owner": "cp790621656", "repo_name": "Light3D", "path": "cp790621656/Light3D/a136bce5c031817fc56370eecf58dffeacfa1ef1a0e36d8968a0c77dae86f1b2", "path_in_repo": "cp790621656/Light3D/Light3D/Dependencies/FreeImage3170/FreeImage/Source/LibJXR/jxrgluelib/JXRGluePFC.o", "objdump": "0000000000003786 <Gray32Float_Gray8>:\n    3786:\t55                   \tpush   %rbp\n    3787:\t48 89 e5             \tmov    %rsp,%rbp\n    378a:\t53                   \tpush   %rbx\n    378b:\t48 83 ec 58          \tsub    $0x58,%rsp\n    378f:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n    3793:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n    3797:\t48 89 55 a8          \tmov    %rdx,-0x58(%rbp)\n    379b:\t89 4d a4             \tmov    %ecx,-0x5c(%rbp)\n    379e:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    37a2:\t8b 40 0c             \tmov    0xc(%rax),%eax\n    37a5:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n    37a8:\t48 8b 45 b0          \tmov    -0x50(%rbp),%rax\n    37ac:\t8b 40 08             \tmov    0x8(%rax),%eax\n    37af:\t89 45 e0             \tmov    %eax,-0x20(%rbp)\n    37b2:\tc7 45 ec 00 00 00 00 \tmovl   $0x0,-0x14(%rbp)\n    37b9:\teb 6e                \tjmp    3829 <Gray32Float_Gray8+0xa3>\n    37bb:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    37be:\t0f af 45 a4          \timul   -0x5c(%rbp),%eax\n    37c2:\t89 c2                \tmov    %eax,%edx\n    37c4:\t48 8b 45 a8          \tmov    -0x58(%rbp),%rax\n    37c8:\t48 01 d0             \tadd    %rdx,%rax\n    37cb:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n    37cf:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    37d3:\t48 89 45 d0          \tmov    %rax,-0x30(%rbp)\n    37d7:\tc7 45 e8 00 00 00 00 \tmovl   $0x0,-0x18(%rbp)\n    37de:\teb 3d                \tjmp    381d <Gray32Float_Gray8+0x97>\n    37e0:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n    37e3:\t48 98                \tcltq   \n    37e5:\t48 8d 14 85 00 00 00 \tlea    0x0(,%rax,4),%rdx\n    37ec:\t00 \n    37ed:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    37f1:\t48 01 d0             \tadd    %rdx,%rax\n    37f4:\tf3 0f 10 00          \tmovss  (%rax),%xmm0\n    37f8:\tf3 0f 11 45 cc       \tmovss  %xmm0,-0x34(%rbp)\n    37fd:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n    3800:\t48 63 d0             \tmovslq %eax,%rdx\n    3803:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    3807:\t48 8d 1c 02          \tlea    (%rdx,%rax,1),%rbx\n    380b:\t8b 45 cc             \tmov    -0x34(%rbp),%eax\n    380e:\t66 0f 6e c0          \tmovd   %eax,%xmm0\n    3812:\te8 34 c9 ff ff       \tcall   14b <Convert_Float_To_U8>\n    3817:\t88 03                \tmov    %al,(%rbx)\n    3819:\t83 45 e8 01          \taddl   $0x1,-0x18(%rbp)\n    381d:\t8b 45 e8             \tmov    -0x18(%rbp),%eax\n    3820:\t3b 45 e0             \tcmp    -0x20(%rbp),%eax\n    3823:\t7c bb                \tjl     37e0 <Gray32Float_Gray8+0x5a>\n    3825:\t83 45 ec 01          \taddl   $0x1,-0x14(%rbp)\n    3829:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    382c:\t3b 45 e4             \tcmp    -0x1c(%rbp),%eax\n    382f:\t7c 8a                \tjl     37bb <Gray32Float_Gray8+0x35>\n    3831:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    3836:\t48 83 c4 58          \tadd    $0x58,%rsp\n    383a:\t5b                   \tpop    %rbx\n    383b:\t5d                   \tpop    %rbp\n    383c:\tc3                   \tret    ", "code_s": "undefined8 Gray32Float_Gray8(undefined8 param_1, long <span class=\"supfact\">param_2</span>,\n                             long <span class=\"supfact\">param_3</span>,\n                             int <span class=\"supfact\">param_4</span>) {\n  int iVar1;\n  int iVar2;\n  undefined <span class=\"supfact\">uVar3</span>;\n  long <span class=\"supfact\">lVar4</span>;\n  int <span class=\"supfact\">local_20</span>;\n  int <span class=\"supfact\">local_1c</span>;\n  iVar1 = *(int *)(<span class=\"supfact\">param_2</span> + Number);\n  iVar2 = *(int *)(<span class=\"supfact\">param_2</span> + Number);\n  for (<span class=\"supfact\">local_1c</span> = Number; <span class=\"supfact\">local_1c</span> & lt; iVar1;\n       <span class=\"supfact\">local_1c</span> = <span class=\"supfact\">local_1c</span> + Number) {\n    <span class=\"supfact\">lVar4</span> =\n        <span class=\"supfact\">param_3</span> +\n        (ulong)(uint)(<span class=\"supfact\">local_1c</span> * <span class=\"supfact\">param_4</span>);\n    for (<span class=\"supfact\">local_20</span> = Number; <span class=\"supfact\">local_20</span> & lt;\n         iVar2; <span class=\"supfact\">local_20</span> = <span class=\"supfact\">local_20</span> + Number) {\n      <span class=\"supfact\">uVar3</span> = FUN_0010014b(\n          *(undefined4 *)(<span class=\"supfact\">lVar4</span> +\n                          (long)<span class=\"supfact\">local_20</span> * Number));\n      *(undefined *)(<span class=\"supfact\">local_20</span> + <span class=\"supfact\">lVar4</span>) =\n          <span class=\"supfact\">uVar3</span>;\n    }\n  }\n  return Number;\n}", "code_t": "ERR Gray32Float_Gray8(PKFormatConverter *pFC, PKRect *<span class=\"supfact\">pRect</span>,\n                      U8 *<span class=\"supfact\">pb</span>, U32 <span class=\"supfact\">cbStride</span>) {\n  int iVar1;\n  int iVar2;\n  U8 <span class=\"supfact\">UVar3</span>;\n  U32 <span class=\"supfact\">cbStride</span> - local;\n  U8 *<span class=\"supfact\">pb</span> - local;\n  PKRect *<span class=\"supfact\">pRect</span> - local;\n  PKFormatConverter *pFC - local;\n  float v;\n  float *piSrcPixel;\n  U8 *piDstPixel;\n  I32 iWidth;\n  I32 iHeight;\n  I32 <span class=\"supfact\">x</span>;\n  I32 <span class=\"supfact\">y</span>;\n  iVar1 = <span class=\"supfact\">pRect</span> - &gt;\n  Height;\n  iVar2 = <span class=\"supfact\">pRect</span> - &gt;\n  Width;\n  for (<span class=\"supfact\">y</span> = Number; <span class=\"supfact\">y</span> & lt; iVar1;\n       <span class=\"supfact\">y</span> = <span class=\"supfact\">y</span> + Number) {\n    for (<span class=\"supfact\">x</span> = Number; <span class=\"supfact\">x</span> & lt; iVar2;\n         <span class=\"supfact\">x</span> = <span class=\"supfact\">x</span> + Number) {\n      <span class=\"supfact\">UVar3</span> = Convert_Float_To_U8(\n          *(float *)(<span class=\"supfact\">pb</span> + (long)<span class=\"supfact\">x</span> * Number +\n                     (ulong)(<span class=\"supfact\">y</span> * <span class=\"supfact\">cbStride</span>)));\n      <span class=\"supfact\">pb</span>[(long)<span class=\"supfact\">x</span> +\n                         (ulong)(<span class=\"supfact\">y</span> *\n                                 <span class=\"supfact\">cbStride</span>)] =\n          <span class=\"supfact\">UVar3</span>;\n    }\n  }\n  return Number;\n}", "var": [{"name": "param_2", "type": "BYTE * *", "pred_name": "caCmdBuf", "ref_name": "pRect", "ref_type": "PKRect * *"}, {"name": "param_3", "type": "DdNode * * *", "pred_name": "x", "ref_name": "pb", "ref_type": "U8 * *"}, {"name": "param_4", "type": "int", "pred_name": "n", "ref_name": "cbStride", "ref_type": "U32"}, {"name": "uVar3", "type": "uint8_t", "pred_name": "uVar3", "ref_name": "UVar3", "ref_type": "U8"}, {"name": "lVar4", "type": "long", "pred_name": "lVar4", "ref_name": "", "ref_type": "disappear"}, {"name": "local_20", "type": "int", "pred_name": "j", "ref_name": "x", "ref_type": "I32"}, {"name": "local_1c", "type": "int", "pred_name": "i", "ref_name": "y", "ref_type": "I32"}], "body_in_train": false}, {"repo_owner": "gaozhiyu", "repo_name": "linux-4.20.4", "path": "gaozhiyu/linux-4.20.4/dacd109fcc150efbdafe2afbecef5a62d12a73e14df9dd413e49ffcfe95ebf48", "path_in_repo": "gaozhiyu/linux-4.20.4/tools/testing/selftests/bpf/libbpf-in.o", "objdump": "0000000000005458 <bpf_program__is_socket_filter>:\n    5458:\t55                   \tpush   %rbp\n    5459:\t48 89 e5             \tmov    %rsp,%rbp\n    545c:\t48 83 ec 08          \tsub    $0x8,%rsp\n    5460:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n    5464:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    5468:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    546d:\t48 89 c7             \tmov    %rax,%rdi\n    5470:\te8 82 ff ff ff       \tcall   53f7 <bpf_program__is_type>\n    5475:\tc9                   \tleave  \n    5476:\tc3                   \tret    ", "code_s": "void bpf_program__is_socket_filter(undefined8 <span class=\"supfact\">param_1</span>) {\n  FUN_001053f7(<span class=\"supfact\">param_1</span>, Number);\n  return;\n}", "code_t": "_Bool bpf_program__is_socket_filter(bpf_program *<span class=\"supfact\">prog</span>) {\n  _Bool _Var1;\n  bpf_program *<span class=\"supfact\">prog</span> - local;\n  _Var1 =\n      bpf_program__is_type(<span class=\"supfact\">prog</span>, BPF_PROG_TYPE_SOCKET_FILTER);\n  return _Var1;\n}", "var": [{"name": "param_1", "type": "bpf_program * *", "pred_name": "prog", "ref_name": "prog", "ref_type": "bpf_program * *"}], "body_in_train": false}, {"repo_owner": "Epsynus", "repo_name": "Tripping-nemesis", "path": "Epsynus/Tripping-nemesis/294546881b65e1379c63765df3f888ab9bf34782ee12580cfa26110f7e28abf2", "path_in_repo": "Epsynus/Tripping-nemesis/src/map/obj_sql/pc.o", "objdump": "000000000000c615 <pc_cartitem_amount>:\n    c615:\t55                   \tpush   %rbp\n    c616:\t48 89 e5             \tmov    %rsp,%rbp\n    c619:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n    c61d:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n    c620:\t89 55 e0             \tmov    %edx,-0x20(%rbp)\n    c623:\t8b 45 e4             \tmov    -0x1c(%rbp),%eax\n    c626:\t48 63 d0             \tmovslq %eax,%rdx\n    c629:\t48 89 d0             \tmov    %rdx,%rax\n    c62c:\t48 c1 e0 03          \tshl    $0x3,%rax\n    c630:\t48 29 d0             \tsub    %rdx,%rax\n    c633:\t48 c1 e0 02          \tshl    $0x2,%rax\n    c637:\t48 8d 90 a0 18 00 00 \tlea    0x18a0(%rax),%rdx\n    c63e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    c642:\t48 01 d0             \tadd    %rdx,%rax\n    c645:\t48 83 c0 10          \tadd    $0x10,%rax\n    c649:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n    c64d:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    c651:\t0f b7 40 04          \tmovzwl 0x4(%rax),%eax\n    c655:\t66 85 c0             \ttest   %ax,%ax\n    c658:\t74 0d                \tje     c667 <pc_cartitem_amount+0x52>\n    c65a:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    c65e:\t0f b7 40 06          \tmovzwl 0x6(%rax),%eax\n    c662:\t66 85 c0             \ttest   %ax,%ax\n    c665:\t75 07                \tjne    c66e <pc_cartitem_amount+0x59>\n    c667:\tb8 ff ff ff ff       \tmov    $0xffffffff,%eax\n    c66c:\teb 0c                \tjmp    c67a <pc_cartitem_amount+0x65>\n    c66e:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n    c672:\t0f b7 40 06          \tmovzwl 0x6(%rax),%eax\n    c676:\t98                   \tcwtl   \n    c677:\t2b 45 e0             \tsub    -0x20(%rbp),%eax\n    c67a:\t5d                   \tpop    %rbp\n    c67b:\tc3                   \tret    ", "code_s": "int pc_cartitem_amount(long <span class=\"supfact\">param_1</span>,\n                       int <span class=\"supfact\">param_2</span>,\n                       int <span class=\"supfact\">param_3</span>) {\n  <span class=\"supfact\">param_1</span> =\n      <span class=\"supfact\">param_1</span> + (long)<span class=\"supfact\">param_2</span> * Number;\n  if ((*(short *)(<span class=\"supfact\">param_1</span> + Number) == Number) ||\n      (*(short *)(<span class=\"supfact\">param_1</span> + Number) == Number)) {\n    <span class=\"supfact\">param_3</span> = -Number;\n  } else {\n    <span class=\"supfact\">param_3</span> =\n        *(short *)(<span class=\"supfact\">param_1</span> + Number) - <span class=\"supfact\">param_3</span>;\n  }\n  return <span class=\"supfact\">param_3</span>;\n}", "code_t": "int pc_cartitem_amount(map_session_data *<span class=\"supfact\">sd</span>,\n                       int <span class=\"supfact\">idx</span>, int <span class=\"supfact\">amount</span>) {\n  int iVar1;\n  int <span class=\"supfact\">amount</span> - local;\n  int <span class=\"supfact\">idx</span> - local;\n  map_session_data *<span class=\"supfact\">sd</span> - local;\n  item *item_data;\n  if (((<span class=\"supfact\">sd</span> - &gt; status).cart[<span class=\"supfact\">idx</span>].nameid ==\n       Number) ||\n      ((<span class=\"supfact\">sd</span> - &gt; status)\n           .cart[<span class=\"supfact\">idx</span>]\n           .<span class=\"supfact\">amount</span> == Number)) {\n    iVar1 = -Number;\n  } else {\n    iVar1 = (<span class=\"supfact\">sd</span> - &gt; status)\n                .cart[<span class=\"supfact\">idx</span>]\n                .<span class=\"supfact\">amount</span> -\n            <span class=\"supfact\">amount</span>;\n  }\n  return iVar1;\n}", "var": [{"name": "param_1", "type": "map_session_data * *", "pred_name": "sd", "ref_name": "sd", "ref_type": "map_session_data * *"}, {"name": "param_2", "type": "int", "pred_name": "count", "ref_name": "idx", "ref_type": "int"}, {"name": "param_3", "type": "int", "pred_name": "amount", "ref_name": "amount", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "bulkin042", "repo_name": "cyanogenmod_kernel_lenovo_a5000_lollipop", "path": "bulkin042/cyanogenmod_kernel_lenovo_a5000_lollipop/c5cd895e9551dab0f1a5bfc105627c88aca3752b2f3b29e1258e97e85ee80e5b", "path_in_repo": "bulkin042/cyanogenmod_kernel_lenovo_a5000_lollipop/tools/perf/util/hist.o", "objdump": "000000000000044e <hists__new_col_len>:\n     44e:\t55                   \tpush   %rbp\n     44f:\t48 89 e5             \tmov    %rsp,%rbp\n     452:\t48 83 ec 20          \tsub    $0x20,%rsp\n     456:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n     45a:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n     45d:\t89 d0                \tmov    %edx,%eax\n     45f:\t66 89 45 e0          \tmov    %ax,-0x20(%rbp)\n     463:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n     46a:\t00 00 \n     46c:\t48 89 45 f8          \tmov    %rax,-0x8(%rbp)\n     470:\t31 c0                \txor    %eax,%eax\n     472:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n     475:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     479:\t89 d6                \tmov    %edx,%esi\n     47b:\t48 89 c7             \tmov    %rax,%rdi\n     47e:\te8 00 00 00 00       \tcall   483 <hists__new_col_len+0x35>\n     483:\t66 39 45 e0          \tcmp    %ax,-0x20(%rbp)\n     487:\t76 1c                \tjbe    4a5 <hists__new_col_len+0x57>\n     489:\t0f b7 55 e0          \tmovzwl -0x20(%rbp),%edx\n     48d:\t8b 4d e4             \tmov    -0x1c(%rbp),%ecx\n     490:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     494:\t89 ce                \tmov    %ecx,%esi\n     496:\t48 89 c7             \tmov    %rax,%rdi\n     499:\te8 00 00 00 00       \tcall   49e <hists__new_col_len+0x50>\n     49e:\tb8 01 00 00 00       \tmov    $0x1,%eax\n     4a3:\teb 05                \tjmp    4aa <hists__new_col_len+0x5c>\n     4a5:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     4aa:\t48 8b 4d f8          \tmov    -0x8(%rbp),%rcx\n     4ae:\t64 48 33 0c 25 28 00 \txor    %fs:0x28,%rcx\n     4b5:\t00 00 \n     4b7:\t74 05                \tje     4be <hists__new_col_len+0x70>\n     4b9:\te8 00 00 00 00       \tcall   4be <hists__new_col_len+0x70>\n     4be:\tc9                   \tleave  \n     4bf:\tc3                   \tret    ", "code_s": "bool hists__new_col_len(undefined8 <span class=\"supfact\">param_1</span>,\n                        undefined4 <span class=\"supfact\">param_2</span>,\n                        ushort <span class=\"supfact\">param_3</span>) {\n  long lVar1;\n  ushort <span class=\"supfact\">uVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">uVar2</span> =\n      hists__col_len(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>);\n  if (<span class=\"supfact\">uVar2</span> & lt; <span class=\"supfact\">param_3</span>) {\n    hists__set_col_len(<span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n                       <span class=\"supfact\">param_3</span>);\n  }\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">uVar2</span> & lt;\n    <span class=\"supfact\">param_3</span>;\n  }\n  __stack_chk_fail();\n}", "code_t": "_Bool hists__new_col_len(<span class=\"supfact\">hists</span> *<span class=\"supfact\">hists</span>,\n                         hist_column <span class=\"supfact\">col</span>,\n                         u16 <span class=\"supfact\">len</span>) {\n  long lVar1;\n  u16 <span class=\"supfact\">uVar2</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  u16 <span class=\"supfact\">len</span> - local;\n  hist_column <span class=\"supfact\">col</span> - local;\n  <span class=\"supfact\">hists</span> *<span class=\"supfact\">hists</span> - local;\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">uVar2</span> =\n      hists__col_len(<span class=\"supfact\">hists</span>, <span class=\"supfact\">col</span>);\n  if (<span class=\"supfact\">uVar2</span> & lt; <span class=\"supfact\">len</span>) {\n    hists__set_col_len(<span class=\"supfact\">hists</span>, <span class=\"supfact\">col</span>,\n                       <span class=\"supfact\">len</span>);\n  }\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">uVar2</span> & lt;\n    <span class=\"supfact\">len</span>;\n  }\n  __stack_chk_fail();\n}", "var": [{"name": "param_1", "type": "hists * *", "pred_name": "hists", "ref_name": "hists", "ref_type": "hists * *"}, {"name": "param_2", "type": "hist_column", "pred_name": "col", "ref_name": "col", "ref_type": "hist_column"}, {"name": "param_3", "type": "u16", "pred_name": "len", "ref_name": "len", "ref_type": "u16"}, {"name": "uVar2", "type": "u16", "pred_name": "uVar2", "ref_name": "uVar2", "ref_type": "u16"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}], "body_in_train": true}, {"repo_owner": "Chong-Li", "repo_name": "RTDS-ToolStack", "path": "Chong-Li/RTDS-ToolStack/437a68cfce96d2c34bf252c9133681fcf867b28c7d833f3bce027c858b9ec5d3", "path_in_repo": "Chong-Li/RTDS-ToolStack/xen/arch/x86/hvm/vlapic.o", "objdump": "0000000000000ea9 <vlapic_lowest_prio>:\n     ea9:\t55                   \tpush   %rbp\n     eaa:\t48 89 e5             \tmov    %rsp,%rbp\n     ead:\t48 83 ec 60          \tsub    $0x60,%rsp\n     eb1:\t48 89 7d b8          \tmov    %rdi,-0x48(%rbp)\n     eb5:\t48 89 75 b0          \tmov    %rsi,-0x50(%rbp)\n     eb9:\t89 55 ac             \tmov    %edx,-0x54(%rbp)\n     ebc:\t89 4d a8             \tmov    %ecx,-0x58(%rbp)\n     ebf:\t44 89 c0             \tmov    %r8d,%eax\n     ec2:\t88 45 a4             \tmov    %al,-0x5c(%rbp)\n     ec5:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     ec9:\t0f b6 80 28 07 00 00 \tmovzbl 0x728(%rax),%eax\n     ed0:\t0f b6 c0             \tmovzbl %al,%eax\n     ed3:\t89 45 e4             \tmov    %eax,-0x1c(%rbp)\n     ed6:\tc7 45 fc ff ff ff ff \tmovl   $0xffffffff,-0x4(%rbp)\n     edd:\t48 c7 45 f0 00 00 00 \tmovq   $0x0,-0x10(%rbp)\n     ee4:\t00 \n     ee5:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     ee9:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     eed:\t48 85 c0             \ttest   %rax,%rax\n     ef0:\t0f 94 c0             \tsete   %al\n     ef3:\t0f b6 c0             \tmovzbl %al,%eax\n     ef6:\t48 85 c0             \ttest   %rax,%rax\n     ef9:\t75 2c                \tjne    f27 <vlapic_lowest_prio+0x7e>\n     efb:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     eff:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     f03:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n     f06:\t48 63 d2             \tmovslq %edx,%rdx\n     f09:\t48 c1 e2 03          \tshl    $0x3,%rdx\n     f0d:\t48 01 d0             \tadd    %rdx,%rax\n     f10:\t48 8b 00             \tmov    (%rax),%rax\n     f13:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     f17:\t48 83 7d e8 00       \tcmpq   $0x0,-0x18(%rbp)\n     f1c:\t0f 94 c0             \tsete   %al\n     f1f:\t0f b6 c0             \tmovzbl %al,%eax\n     f22:\t48 85 c0             \ttest   %rax,%rax\n     f25:\t74 0a                \tje     f31 <vlapic_lowest_prio+0x88>\n     f27:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     f2c:\te9 b5 00 00 00       \tjmp    fe6 <vlapic_lowest_prio+0x13d>\n     f31:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     f35:\t48 8b 40 18          \tmov    0x18(%rax),%rax\n     f39:\t48 85 c0             \ttest   %rax,%rax\n     f3c:\t75 0b                \tjne    f49 <vlapic_lowest_prio+0xa0>\n     f3e:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     f42:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n     f46:\t48 8b 00             \tmov    (%rax),%rax\n     f49:\t48 89 45 e8          \tmov    %rax,-0x18(%rbp)\n     f4d:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     f51:\t48 05 18 04 00 00    \tadd    $0x418,%rax\n     f57:\t48 89 45 d8          \tmov    %rax,-0x28(%rbp)\n     f5b:\t0f be 7d a4          \tmovsbl -0x5c(%rbp),%edi\n     f5f:\t8b 4d a8             \tmov    -0x58(%rbp),%ecx\n     f62:\t8b 55 ac             \tmov    -0x54(%rbp),%edx\n     f65:\t48 8b 75 b0          \tmov    -0x50(%rbp),%rsi\n     f69:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     f6d:\t41 89 f8             \tmov    %edi,%r8d\n     f70:\t48 89 c7             \tmov    %rax,%rdi\n     f73:\te8 00 00 00 00       \tcall   f78 <vlapic_lowest_prio+0xcf>\n     f78:\t84 c0                \ttest   %al,%al\n     f7a:\t74 30                \tje     fac <vlapic_lowest_prio+0x103>\n     f7c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     f80:\t8b 40 08             \tmov    0x8(%rax),%eax\n     f83:\t85 c0                \ttest   %eax,%eax\n     f85:\t75 25                \tjne    fac <vlapic_lowest_prio+0x103>\n     f87:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     f8b:\t48 89 c7             \tmov    %rax,%rdi\n     f8e:\te8 63 f6 ff ff       \tcall   5f6 <vlapic_get_ppr>\n     f93:\t89 45 d4             \tmov    %eax,-0x2c(%rbp)\n     f96:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n     f99:\t3b 45 fc             \tcmp    -0x4(%rbp),%eax\n     f9c:\t73 0e                \tjae    fac <vlapic_lowest_prio+0x103>\n     f9e:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n     fa2:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n     fa6:\t8b 45 d4             \tmov    -0x2c(%rbp),%eax\n     fa9:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n     fac:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n     fb0:\t8b 00                \tmov    (%rax),%eax\n     fb2:\t39 45 e4             \tcmp    %eax,-0x1c(%rbp)\n     fb5:\t0f 85 76 ff ff ff    \tjne    f31 <vlapic_lowest_prio+0x88>\n     fbb:\t48 83 7d f0 00       \tcmpq   $0x0,-0x10(%rbp)\n     fc0:\t74 20                \tje     fe2 <vlapic_lowest_prio+0x139>\n     fc2:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     fc6:\t48 89 45 c8          \tmov    %rax,-0x38(%rbp)\n     fca:\t48 8b 45 c8          \tmov    -0x38(%rbp),%rax\n     fce:\t48 2d 18 04 00 00    \tsub    $0x418,%rax\n     fd4:\t8b 00                \tmov    (%rax),%eax\n     fd6:\t89 c2                \tmov    %eax,%edx\n     fd8:\t48 8b 45 b8          \tmov    -0x48(%rbp),%rax\n     fdc:\t88 90 28 07 00 00    \tmov    %dl,0x728(%rax)\n     fe2:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n     fe6:\tc9                   \tleave  \n     fe7:\tc3                   \tret    ", "code_s": "uint *vlapic_lowest_prio(long <span class=\"supfact\">param_1</span>,\n                         undefined8 <span class=\"supfact\">param_2</span>,\n                         undefined4 <span class=\"supfact\">param_3</span>,\n                         undefined4 <span class=\"supfact\">param_4</span>,\n                         char <span class=\"supfact\">param_5</span>) {\n  byte bVar1;\n  char <span class=\"supfact\">cVar2</span>;\n  uint <span class=\"supfact\">uVar3</span>;\n  uint *<span class=\"supfact\">puVar4</span>;\n  uint *<span class=\"supfact\">local_20</span>;\n  uint *<span class=\"supfact\">local_18</span>;\n  uint <span class=\"supfact\">local_c</span>;\n  bVar1 = *(byte *)(<span class=\"supfact\">param_1</span> + Number);\n  <span class=\"supfact\">local_c</span> = Number;\n  <span class=\"supfact\">local_18</span> = (uint *)Number;\n  if ((*(long *)(<span class=\"supfact\">param_1</span> + Number) == Number) ||\n      (<span class=\"supfact\">local_20</span> =\n           *(uint **)(*(long *)(<span class=\"supfact\">param_1</span> + Number) +\n                      (long)(int)(uint)bVar1 * Number),\n       <span class=\"supfact\">local_20</span> == (uint *)Number)) {\n    <span class=\"supfact\">local_18</span> = (uint *)Number;\n  } else {\n    do {\n      <span class=\"supfact\">local_20</span> = *(uint **)(<span class=\"supfact\">local_20</span> + Number);\n      if (<span class=\"supfact\">local_20</span> == (uint *)Number) {\n        <span class=\"supfact\">local_20</span> =\n            **(uint ***)(<span class=\"supfact\">param_1</span> + Number);\n      }\n      <span class=\"supfact\">puVar4</span> = <span class=\"supfact\">local_20</span> + Number;\n      <span class=\"supfact\">cVar2</span> =\n          vlapic_match_dest(<span class=\"supfact\">puVar4</span>, <span class=\"supfact\">param_2</span>,\n                            <span class=\"supfact\">param_3</span>, <span class=\"supfact\">param_4</span>,\n                            (int)<span class=\"supfact\">param_5</span>);\n      if (((<span class=\"supfact\">cVar2</span> != String) & amp; &amp;\n           (<span class=\"supfact\">local_20</span>[Number] == Number)) &\n              amp;\n          &amp; (<span class=\"supfact\">uVar3</span> = FUN_001005f6(<span class=\"supfact\">puVar4</span>),\n                 <span class=\"supfact\">uVar3</span> & lt;\n                 <span class=\"supfact\">local_c</span>)) {\n        <span class=\"supfact\">local_18</span> = <span class=\"supfact\">puVar4</span>;\n        <span class=\"supfact\">local_c</span> = <span class=\"supfact\">uVar3</span>;\n      }\n    } while ((uint)bVar1 != *<span class=\"supfact\">local_20</span>);\n    if (<span class=\"supfact\">local_18</span> != (uint *)Number) {\n      *(char *)(<span class=\"supfact\">param_1</span> + Number) =\n          (char)<span class=\"supfact\">local_18</span>[-Number];\n    }\n  }\n  return <span class=\"supfact\">local_18</span>;\n}", "code_t": "vlapic *vlapic_lowest_prio(domain *<span class=\"supfact\">d</span>,\n                           vlapic *<span class=\"supfact\">source</span>,\n                           int <span class=\"supfact\">short_hand</span>,\n                           uint32_t <span class=\"supfact\">dest</span>,\n                           bool_t <span class=\"supfact\">dest_mode</span>) {\n  bool_t <span class=\"supfact\">bVar1</span>;\n  uint uVar2;\n  uint32_t uVar3;\n  vlapic *<span class=\"supfact\">target_00</span>;\n  bool_t <span class=\"supfact\">dest_mode</span> - local;\n  uint32_t <span class=\"supfact\">dest</span> - local;\n  int <span class=\"supfact\">short_hand</span> - local;\n  vlapic *<span class=\"supfact\">source</span> - local;\n  domain *<span class=\"supfact\">d</span> - local;\n  vlapic *__mptr;\n  uint32_t ppr;\n  vlapic *vlapic;\n  int old;\n  vcpu *<span class=\"supfact\">v</span>;\n  vlapic *<span class=\"supfact\">target</span>;\n  uint32_t <span class=\"supfact\">target_ppr</span>;\n  uVar2 = (uint) * (byte *)((long)&amp;\n                            (<span class=\"supfact\">d</span> - &gt; arch).field_8 + Number);\n  <span class=\"supfact\">target_ppr</span> = Number;\n  <span class=\"supfact\">target</span> = (vlapic *)Number;\n  if ((<span class=\"supfact\">d</span> - &gt; vcpu == (vcpu **)Number) ||\n      (<span class=\"supfact\">v</span> = <span class=\"supfact\">d</span> - &gt;\n       vcpu[(int)uVar2], <span class=\"supfact\">v</span> == (vcpu *)Number)) {\n    <span class=\"supfact\">target</span> = (vlapic *)Number;\n  } else {\n    do {\n      <span class=\"supfact\">v</span> = <span class=\"supfact\">v</span> - &gt;\n      next_in_list;\n      if (<span class=\"supfact\">v</span> == (vcpu *)Number) {\n        <span class=\"supfact\">v</span> = *<span class=\"supfact\">d</span> - &gt;\n        vcpu;\n      }\n      <span class=\"supfact\">target_00</span> = &amp;\n      (<span class=\"supfact\">v</span> - &gt; arch).field_8.hvm_vcpu.vlapic;\n      <span class=\"supfact\">bVar1</span> =\n          vlapic_match_dest(<span class=\"supfact\">target_00</span>, <span class=\"supfact\">source</span>,\n                            <span class=\"supfact\">short_hand</span>, <span class=\"supfact\">dest</span>,\n                            <span class=\"supfact\">dest_mode</span>);\n      if (((<span class=\"supfact\">bVar1</span> != String) & amp; &amp;\n           ((<span class=\"supfact\">v</span> - &gt; arch)\n                .field_8.pv_vcpu.mapcache.hash[Number]\n                .idx == Number)) &\n              amp;\n          &amp; (uVar3 = vlapic_get_ppr(<span class=\"supfact\">target_00</span>), uVar3 & lt;\n                 <span class=\"supfact\">target_ppr</span>)) {\n        <span class=\"supfact\">target</span> = <span class=\"supfact\">target_00</span>;\n        <span class=\"supfact\">target_ppr</span> = uVar3;\n      }\n    } while (uVar2 != <span class=\"supfact\">v</span> - &gt; vcpu_id);\n    if (<span class=\"supfact\">target</span> != (vlapic *)Number) {\n      *(char *)((long)&amp; (<span class=\"supfact\">d</span> - &gt; arch).field_8 + Number) =\n          (char)*(undefined4 *)&amp;\n      <span class=\"supfact\">target</span>[-Number].regs_page;\n    }\n  }\n  return <span class=\"supfact\">target</span>;\n}", "var": [{"name": "param_1", "type": "lua_State * *", "pred_name": "L", "ref_name": "d", "ref_type": "domain * *"}, {"name": "param_2", "type": "char * *", "pred_name": "what", "ref_name": "source", "ref_type": "vlapic * *"}, {"name": "param_3", "type": "int", "pred_name": "__unk__", "ref_name": "short_hand", "ref_type": "int"}, {"name": "param_4", "type": "int", "pred_name": "__unk__", "ref_name": "dest", "ref_type": "uint32_t"}, {"name": "param_5", "type": "uchar", "pred_name": "__unk__", "ref_name": "dest_mode", "ref_type": "bool_t"}, {"name": "cVar2", "type": "char", "pred_name": "cVar2", "ref_name": "bVar1", "ref_type": "bool_t"}, {"name": "uVar3", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "puVar4", "type": "disappear", "pred_name": "", "ref_name": "target_00", "ref_type": "vlapic * *"}, {"name": "local_20", "type": "char * *", "pred_name": "p", "ref_name": "v", "ref_type": "vcpu * *"}, {"name": "local_18", "type": "char * *", "pred_name": "s", "ref_name": "target", "ref_type": "vlapic * *"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "target_ppr", "ref_type": "uint32_t"}], "body_in_train": false}, {"code_s": "int setsockopt(int __fd, int __level, int __optname, void *__optval,\n               socklen_t __optlen) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_setsockopt_004a5178)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int setsockopt(int __fd, int __level, int __optname, void *__optval,\n               socklen_t __optlen) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_setsockopt_004a5178)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "rxin", "repo_name": "db-benchmarks", "path": "rxin/db-benchmarks/218d532b0a731cca2e35145005919289a9a640a66b4d64f413b24d51b65f815e", "path_in_repo": "rxin/db-benchmarks/tpch-dbgen/build.o", "objdump": "0000000000000f5b <mk_part>:\n     f5b:\t55                   \tpush   %rbp\n     f5c:\t48 89 e5             \tmov    %rsp,%rbp\n     f5f:\t48 83 ec 30          \tsub    $0x30,%rsp\n     f63:\t48 89 7d d8          \tmov    %rdi,-0x28(%rbp)\n     f67:\t48 89 75 d0          \tmov    %rsi,-0x30(%rbp)\n     f6b:\t8b 05 00 00 00 00    \tmov    0x0(%rip),%eax        # f71 <mk_part+0x16>\n     f71:\t85 c0                \ttest   %eax,%eax\n     f73:\t75 4c                \tjne    fc1 <mk_part+0x66>\n     f75:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     f7a:\t48 89 c1             \tmov    %rax,%rcx\n     f7d:\tba 01 00 00 00       \tmov    $0x1,%edx\n     f82:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     f87:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     f8c:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     f91:\te8 00 00 00 00       \tcall   f96 <mk_part+0x3b>\n     f96:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     f9b:\t48 89 c1             \tmov    %rax,%rcx\n     f9e:\tba 02 00 00 00       \tmov    $0x2,%edx\n     fa3:\tbe 00 00 00 00       \tmov    $0x0,%esi\n     fa8:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     fad:\tb8 00 00 00 00       \tmov    $0x0,%eax\n     fb2:\te8 00 00 00 00       \tcall   fb7 <mk_part+0x5c>\n     fb7:\tc7 05 00 00 00 00 01 \tmovl   $0x1,0x0(%rip)        # fc1 <mk_part+0x66>\n     fbe:\t00 00 00 \n     fc1:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     fc5:\t48 8b 55 d8          \tmov    -0x28(%rbp),%rdx\n     fc9:\t48 89 10             \tmov    %rdx,(%rax)\n     fcc:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n     fd0:\t48 83 c0 08          \tadd    $0x8,%rax\n     fd4:\t48 89 c1             \tmov    %rax,%rcx\n     fd7:\tba 25 00 00 00       \tmov    $0x25,%edx\n     fdc:\tbe 05 00 00 00       \tmov    $0x5,%esi\n     fe1:\tbf 00 00 00 00       \tmov    $0x0,%edi\n     fe6:\te8 00 00 00 00       \tcall   feb <mk_part+0x90>\n     feb:\t48 8d 45 e8          \tlea    -0x18(%rbp),%rax\n     fef:\tb9 00 00 00 00       \tmov    $0x0,%ecx\n     ff4:\tba 05 00 00 00       \tmov    $0x5,%edx\n     ff9:\tbe 01 00 00 00       \tmov    $0x1,%esi\n     ffe:\t48 89 c7             \tmov    %rax,%rdi\n    1001:\te8 00 00 00 00       \tcall   1006 <mk_part+0xab>\n    1006:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n    100a:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    100e:\t48 8d 7a 44          \tlea    0x44(%rdx),%rdi\n    1012:\t48 89 c1             \tmov    %rax,%rcx\n    1015:\tba 00 00 00 00       \tmov    $0x0,%edx\n    101a:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    101f:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1024:\te8 00 00 00 00       \tcall   1029 <mk_part+0xce>\n    1029:\t48 8d 45 e0          \tlea    -0x20(%rbp),%rax\n    102d:\tb9 01 00 00 00       \tmov    $0x1,%ecx\n    1032:\tba 05 00 00 00       \tmov    $0x5,%edx\n    1037:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    103c:\t48 89 c7             \tmov    %rax,%rdi\n    103f:\te8 00 00 00 00       \tcall   1044 <mk_part+0xe9>\n    1044:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n    1048:\t48 89 d0             \tmov    %rdx,%rax\n    104b:\t48 c1 e0 02          \tshl    $0x2,%rax\n    104f:\t48 01 d0             \tadd    %rdx,%rax\n    1052:\t48 01 c0             \tadd    %rax,%rax\n    1055:\t48 89 c2             \tmov    %rax,%rdx\n    1058:\t48 8b 45 e0          \tmov    -0x20(%rbp),%rax\n    105c:\t48 01 c2             \tadd    %rax,%rdx\n    105f:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    1063:\t48 83 c0 5e          \tadd    $0x5e,%rax\n    1067:\t48 89 d1             \tmov    %rdx,%rcx\n    106a:\tba 00 00 00 00       \tmov    $0x0,%edx\n    106f:\tbe 00 00 00 00       \tmov    $0x0,%esi\n    1074:\t48 89 c7             \tmov    %rax,%rdi\n    1077:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    107c:\te8 00 00 00 00       \tcall   1081 <mk_part+0x126>\n    1081:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    1085:\t48 83 c0 69          \tadd    $0x69,%rax\n    1089:\t48 89 c2             \tmov    %rax,%rdx\n    108c:\tbe 02 00 00 00       \tmov    $0x2,%esi\n    1091:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    1096:\te8 00 00 00 00       \tcall   109b <mk_part+0x140>\n    109b:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    109f:\t89 82 84 00 00 00    \tmov    %eax,0x84(%rdx)\n    10a5:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 10ac <mk_part+0x151>\n    10ac:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    10b0:\t8b 80 84 00 00 00    \tmov    0x84(%rax),%eax\n    10b6:\t48 98                \tcltq   \n    10b8:\t48 c1 e0 04          \tshl    $0x4,%rax\n    10bc:\t48 01 d0             \tadd    %rdx,%rax\n    10bf:\t48 8b 40 08          \tmov    0x8(%rax),%rax\n    10c3:\t48 89 c7             \tmov    %rax,%rdi\n    10c6:\te8 00 00 00 00       \tcall   10cb <mk_part+0x170>\n    10cb:\t89 c2                \tmov    %eax,%edx\n    10cd:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    10d1:\t89 90 84 00 00 00    \tmov    %edx,0x84(%rax)\n    10d7:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    10db:\t48 05 88 00 00 00    \tadd    $0x88,%rax\n    10e1:\tb9 03 00 00 00       \tmov    $0x3,%ecx\n    10e6:\tba 32 00 00 00       \tmov    $0x32,%edx\n    10eb:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    10f0:\t48 89 c7             \tmov    %rax,%rdi\n    10f3:\te8 00 00 00 00       \tcall   10f8 <mk_part+0x19d>\n    10f8:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    10fc:\t48 05 90 00 00 00    \tadd    $0x90,%rax\n    1102:\t48 89 c2             \tmov    %rax,%rdx\n    1105:\tbe 04 00 00 00       \tmov    $0x4,%esi\n    110a:\tbf 00 00 00 00       \tmov    $0x0,%edi\n    110f:\te8 00 00 00 00       \tcall   1114 <mk_part+0x1b9>\n    1114:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    1118:\t48 89 c7             \tmov    %rax,%rdi\n    111b:\te8 00 00 00 00       \tcall   1120 <mk_part+0x1c5>\n    1120:\t48 8b 55 d0          \tmov    -0x30(%rbp),%rdx\n    1124:\t48 89 82 a0 00 00 00 \tmov    %rax,0xa0(%rdx)\n    112b:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    112f:\t48 05 a8 00 00 00    \tadd    $0xa8,%rax\n    1135:\tb9 06 00 00 00       \tmov    $0x6,%ecx\n    113a:\tba 16 00 00 00       \tmov    $0x16,%edx\n    113f:\tbe 05 00 00 00       \tmov    $0x5,%esi\n    1144:\t48 89 c7             \tmov    %rax,%rdi\n    1147:\te8 00 00 00 00       \tcall   114c <mk_part+0x1f1>\n    114c:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    1150:\t48 05 a8 00 00 00    \tadd    $0xa8,%rax\n    1156:\t48 89 c7             \tmov    %rax,%rdi\n    1159:\te8 00 00 00 00       \tcall   115e <mk_part+0x203>\n    115e:\t89 c2                \tmov    %eax,%edx\n    1160:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    1164:\t89 90 c0 00 00 00    \tmov    %edx,0xc0(%rax)\n    116a:\t48 c7 45 f8 00 00 00 \tmovq   $0x0,-0x8(%rbp)\n    1171:\t00 \n    1172:\te9 a9 01 00 00       \tjmp    1320 <mk_part+0x3c5>\n    1177:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    117b:\t48 8b 08             \tmov    (%rax),%rcx\n    117e:\t48 8b 75 d0          \tmov    -0x30(%rbp),%rsi\n    1182:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    1186:\t48 89 d0             \tmov    %rdx,%rax\n    1189:\t48 c1 e0 04          \tshl    $0x4,%rax\n    118d:\t48 29 d0             \tsub    %rdx,%rax\n    1190:\t48 c1 e0 04          \tshl    $0x4,%rax\n    1194:\t48 01 f0             \tadd    %rsi,%rax\n    1197:\t48 05 c8 00 00 00    \tadd    $0xc8,%rax\n    119d:\t48 89 08             \tmov    %rcx,(%rax)\n    11a0:\t48 8b 15 00 00 00 00 \tmov    0x0(%rip),%rdx        # 11a7 <mk_part+0x24c>\n    11a7:\t48 8b 05 00 00 00 00 \tmov    0x0(%rip),%rax        # 11ae <mk_part+0x253>\n    11ae:\t48 0f af c2          \timul   %rdx,%rax\n    11b2:\t48 89 45 f0          \tmov    %rax,-0x10(%rbp)\n    11b6:\t48 8b 45 f0          \tmov    -0x10(%rbp),%rax\n    11ba:\t48 8d 50 03          \tlea    0x3(%rax),%rdx\n    11be:\t48 85 c0             \ttest   %rax,%rax\n    11c1:\t48 0f 48 c2          \tcmovs  %rdx,%rax\n    11c5:\t48 c1 f8 02          \tsar    $0x2,%rax\n    11c9:\t48 89 c1             \tmov    %rax,%rcx\n    11cc:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    11d0:\t48 83 e8 01          \tsub    $0x1,%rax\n    11d4:\t48 99                \tcqto   \n    11d6:\t48 f7 7d f0          \tidivq  -0x10(%rbp)\n    11da:\t48 01 c8             \tadd    %rcx,%rax\n    11dd:\t48 0f af 45 f8       \timul   -0x8(%rbp),%rax\n    11e2:\t48 89 c2             \tmov    %rax,%rdx\n    11e5:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n    11e9:\t48 01 d0             \tadd    %rdx,%rax\n    11ec:\t48 99                \tcqto   \n    11ee:\t48 f7 7d f0          \tidivq  -0x10(%rbp)\n    11f2:\t48 89 d0             \tmov    %rdx,%rax\n    11f5:\t48 8d 48 01          \tlea    0x1(%rax),%rcx\n    11f9:\t48 8b 75 d0          \tmov    -0x30(%rbp),%rsi\n    11fd:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    1201:\t48 89 d0             \tmov    %rdx,%rax\n    1204:\t48 c1 e0 04          \tshl    $0x4,%rax\n    1208:\t48 29 d0             \tsub    %rdx,%rax\n    120b:\t48 c1 e0 04          \tshl    $0x4,%rax\n    120f:\t48 01 f0             \tadd    %rsi,%rax\n    1212:\t48 05 d0 00 00 00    \tadd    $0xd0,%rax\n    1218:\t48 89 08             \tmov    %rcx,(%rax)\n    121b:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    121f:\t48 89 d0             \tmov    %rdx,%rax\n    1222:\t48 c1 e0 04          \tshl    $0x4,%rax\n    1226:\t48 29 d0             \tsub    %rdx,%rax\n    1229:\t48 c1 e0 04          \tshl    $0x4,%rax\n    122d:\t48 8d 90 d0 00 00 00 \tlea    0xd0(%rax),%rdx\n    1234:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    1238:\t48 01 d0             \tadd    %rdx,%rax\n    123b:\t48 83 c0 08          \tadd    $0x8,%rax\n    123f:\tb9 07 00 00 00       \tmov    $0x7,%ecx\n    1244:\tba 0f 27 00 00       \tmov    $0x270f,%edx\n    1249:\tbe 01 00 00 00       \tmov    $0x1,%esi\n    124e:\t48 89 c7             \tmov    %rax,%rdi\n    1251:\te8 00 00 00 00       \tcall   1256 <mk_part+0x2fb>\n    1256:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    125a:\t48 89 d0             \tmov    %rdx,%rax\n    125d:\t48 c1 e0 04          \tshl    $0x4,%rax\n    1261:\t48 29 d0             \tsub    %rdx,%rax\n    1264:\t48 c1 e0 04          \tshl    $0x4,%rax\n    1268:\t48 8d 90 d0 00 00 00 \tlea    0xd0(%rax),%rdx\n    126f:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    1273:\t48 01 d0             \tadd    %rdx,%rax\n    1276:\t48 83 c0 10          \tadd    $0x10,%rax\n    127a:\tb9 08 00 00 00       \tmov    $0x8,%ecx\n    127f:\tba a0 86 01 00       \tmov    $0x186a0,%edx\n    1284:\tbe 64 00 00 00       \tmov    $0x64,%esi\n    1289:\t48 89 c7             \tmov    %rax,%rdi\n    128c:\te8 00 00 00 00       \tcall   1291 <mk_part+0x336>\n    1291:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    1295:\t48 89 d0             \tmov    %rdx,%rax\n    1298:\t48 c1 e0 04          \tshl    $0x4,%rax\n    129c:\t48 29 d0             \tsub    %rdx,%rax\n    129f:\t48 c1 e0 04          \tshl    $0x4,%rax\n    12a3:\t48 8d 90 e0 00 00 00 \tlea    0xe0(%rax),%rdx\n    12aa:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    12ae:\t48 01 d0             \tadd    %rdx,%rax\n    12b1:\t48 83 c0 08          \tadd    $0x8,%rax\n    12b5:\tb9 09 00 00 00       \tmov    $0x9,%ecx\n    12ba:\tba c6 00 00 00       \tmov    $0xc6,%edx\n    12bf:\tbe 31 00 00 00       \tmov    $0x31,%esi\n    12c4:\t48 89 c7             \tmov    %rax,%rdi\n    12c7:\te8 00 00 00 00       \tcall   12cc <mk_part+0x371>\n    12cc:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    12d0:\t48 89 d0             \tmov    %rdx,%rax\n    12d3:\t48 c1 e0 04          \tshl    $0x4,%rax\n    12d7:\t48 29 d0             \tsub    %rdx,%rax\n    12da:\t48 c1 e0 04          \tshl    $0x4,%rax\n    12de:\t48 8d 90 e0 00 00 00 \tlea    0xe0(%rax),%rdx\n    12e5:\t48 8b 45 d0          \tmov    -0x30(%rbp),%rax\n    12e9:\t48 01 d0             \tadd    %rdx,%rax\n    12ec:\t48 83 c0 08          \tadd    $0x8,%rax\n    12f0:\t48 89 c7             \tmov    %rax,%rdi\n    12f3:\te8 00 00 00 00       \tcall   12f8 <mk_part+0x39d>\n    12f8:\t89 c6                \tmov    %eax,%esi\n    12fa:\t48 8b 4d d0          \tmov    -0x30(%rbp),%rcx\n    12fe:\t48 8b 55 f8          \tmov    -0x8(%rbp),%rdx\n    1302:\t48 89 d0             \tmov    %rdx,%rax\n    1305:\t48 c1 e0 04          \tshl    $0x4,%rax\n    1309:\t48 29 d0             \tsub    %rdx,%rax\n    130c:\t48 c1 e0 04          \tshl    $0x4,%rax\n    1310:\t48 01 c8             \tadd    %rcx,%rax\n    1313:\t48 05 b0 01 00 00    \tadd    $0x1b0,%rax\n    1319:\t89 30                \tmov    %esi,(%rax)\n    131b:\t48 83 45 f8 01       \taddq   $0x1,-0x8(%rbp)\n    1320:\t48 83 7d f8 03       \tcmpq   $0x3,-0x8(%rbp)\n    1325:\t0f 8e 4c fe ff ff    \tjle    1177 <mk_part+0x21c>\n    132b:\tb8 00 00 00 00       \tmov    $0x0,%eax\n    1330:\tc9                   \tleave  \n    1331:\tc3                   \tret    ", "code_s": "undefined8 mk_part(long <span class=\"supfact\">param_1</span>,\n                   long *<span class=\"supfact\">param_2</span>) {\n  undefined4 <span class=\"supfact\">uVar1</span>;\n  size_t sVar2;\n  long lVar3;\n  long <span class=\"supfact\">local_28</span>;\n  long <span class=\"supfact\">local_20</span>;\n  long <span class=\"supfact\">local_18</span>;\n  long <span class=\"supfact\">local_10</span>;\n  if (DAT_00101c90 == Number) {\n    sprintf(&amp; DAT_00101ca0, String, Number, &amp; DAT_00101e14);\n    sprintf(&amp; DAT_00101d20, String, Number, &amp; DAT_00101e14);\n    DAT_00101c90 = Number;\n  }\n  *<span class=\"supfact\">param_2</span> = <span class=\"supfact\">param_1</span>;\n  agg_str(&amp; colors, Number, Number, <span class=\"supfact\">param_2</span> + Number);\n  dss_random(&amp; <span class=\"supfact\">local_20</span>, Number, Number, Number);\n  sprintf((char *)((long)<span class=\"supfact\">param_2</span> + Number), &amp;\n          DAT_00101ca0, String, <span class=\"supfact\">local_20</span>);\n  dss_random(&amp; <span class=\"supfact\">local_28</span>, Number, Number, Number);\n  sprintf((char *)((long)<span class=\"supfact\">param_2</span> + Number), &amp;\n          DAT_00101d20, String,\n          <span class=\"supfact\">local_20</span> * Number + <span class=\"supfact\">local_28</span>);\n  <span class=\"supfact\">uVar1</span> = pick_str(\n      &amp; p_types_set, Number, (long)<span class=\"supfact\">param_2</span> + Number);\n  *(undefined4 *)((long)<span class=\"supfact\">param_2</span> + Number) =\n      <span class=\"supfact\">uVar1</span>;\n  sVar2 = strlen(*(\n      char **)((long)*(int *)((long)<span class=\"supfact\">param_2</span> + Number) * Number +\n               _p_cntr_set + Number));\n  *(int *)((long)<span class=\"supfact\">param_2</span> + Number) = (int)sVar2;\n  dss_random(<span class=\"supfact\">param_2</span> + Number, Number, Number, Number);\n  pick_str(&amp; p_cntr_set, Number, <span class=\"supfact\">param_2</span> + Number);\n  lVar3 = rpb_routine(<span class=\"supfact\">param_1</span>);\n  <span class=\"supfact\">param_2</span>[Number] = lVar3;\n  dbg_text(<span class=\"supfact\">param_2</span> + Number, Number, Number, Number);\n  sVar2 = strlen((char *)(<span class=\"supfact\">param_2</span> + Number));\n  *(int *)(<span class=\"supfact\">param_2</span> + Number) = (int)sVar2;\n  for (<span class=\"supfact\">local_10</span> = Number; <span class=\"supfact\">local_10</span> & lt; Number;\n       <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_10</span> + Number) {\n    <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_10</span> * Number + Number] =\n        *<span class=\"supfact\">param_2</span>;\n    <span class=\"supfact\">local_18</span> = _scale * _DAT_001030d0;\n    lVar3 = <span class=\"supfact\">local_18</span>;\n    if (<span class=\"supfact\">local_18</span> & lt; Number) {\n      lVar3 = <span class=\"supfact\">local_18</span> + Number;\n    }\n    <span class=\"supfact\">param_2</span>[<span class=\"supfact\">local_10</span> * Number + Number] =\n        (<span class=\"supfact\">param_1</span> +\n         ((<span class=\"supfact\">param_1</span> + -Number) / <span class=\"supfact\">local_18</span> +\n          (lVar3 & gt; &gt; Number)) *\n             <span class=\"supfact\">local_10</span>) %\n            <span class=\"supfact\">local_18</span> +\n        Number;\n    dss_random(<span class=\"supfact\">param_2</span> + <span class=\"supfact\">local_10</span> * Number +\n                   Number,\n               Number, Number, Number);\n    dss_random(<span class=\"supfact\">param_2</span> + <span class=\"supfact\">local_10</span> * Number +\n                   Number,\n               Number, Number, Number);\n    dbg_text(<span class=\"supfact\">param_2</span> + <span class=\"supfact\">local_10</span> * Number +\n                 Number,\n             Number, Number, Number);\n    sVar2 = strlen((char *)(<span class=\"supfact\">param_2</span> +\n                            <span class=\"supfact\">local_10</span> * Number + Number));\n    *(int *)(<span class=\"supfact\">param_2</span> + <span class=\"supfact\">local_10</span> * Number +\n             Number) = (int)sVar2;\n  }\n  return Number;\n}", "code_t": "long mk_part(long <span class=\"supfact\">index</span>, part_t *<span class=\"supfact\">p</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  size_t sVar2;\n  long lVar3;\n  part_t *<span class=\"supfact\">p</span> - local;\n  long <span class=\"supfact\">index</span> - local;\n  long <span class=\"supfact\">brnd</span>;\n  long <span class=\"supfact\">temp</span>;\n  long <span class=\"supfact\">tot_scnt</span>;\n  long <span class=\"supfact\">snum</span>;\n  if (mk_part bInit == Number) {\n    sprintf(mk_part szFormat, String, Number, &amp; DAT_00101e14);\n    sprintf(mk_part szBrandFormat, String, Number, &amp; DAT_00101e14);\n    mk_part bInit = Number;\n  }\n  <span class=\"supfact\">p</span> - &gt;\n  partkey = <span class=\"supfact\">index</span>;\n  agg_str(&amp; colors, Number, Number, <span class=\"supfact\">p</span> - &gt; name);\n  dss_random(&amp; <span class=\"supfact\">temp</span>, Number, Number, Number);\n  sprintf(<span class=\"supfact\">p</span> - &gt;\n          mfgr, mk_part szFormat, String, <span class=\"supfact\">temp</span>);\n  dss_random(&amp; <span class=\"supfact\">brnd</span>, Number, Number, Number);\n  sprintf(<span class=\"supfact\">p</span> - &gt;\n          brand, mk_part szBrandFormat, String,\n          <span class=\"supfact\">temp</span> * Number + <span class=\"supfact\">brnd</span>);\n  <span class=\"supfact\">iVar1</span> =\n      pick_str(&amp; p_types_set, Number, <span class=\"supfact\">p</span> - &gt; type);\n  <span class=\"supfact\">p</span> - &gt;\n  tlen = <span class=\"supfact\">iVar1</span>;\n  sVar2 = strlen(*(char **)((long)<span class=\"supfact\">p</span> - &gt;\n                            tlen * Number + _p_cntr_set + Number));\n  <span class=\"supfact\">p</span> - &gt;\n  tlen = (int)sVar2;\n  dss_random(&amp; <span class=\"supfact\">p</span> - &gt; size, Number, Number, Number);\n  pick_str(&amp; p_cntr_set, Number, <span class=\"supfact\">p</span> - &gt; container);\n  lVar3 = rpb_routine(<span class=\"supfact\">index</span>);\n  <span class=\"supfact\">p</span> - &gt;\n  retailprice = lVar3;\n  dbg_text(<span class=\"supfact\">p</span> - &gt; comment, Number, Number, Number);\n  sVar2 = strlen(<span class=\"supfact\">p</span> - &gt; comment);\n  <span class=\"supfact\">p</span> - &gt;\n  clen = (int)sVar2;\n  for (<span class=\"supfact\">snum</span> = Number; <span class=\"supfact\">snum</span> & lt; Number;\n       <span class=\"supfact\">snum</span> = <span class=\"supfact\">snum</span> + Number) {\n    <span class=\"supfact\">p</span> - &gt;\n    s[<span class=\"supfact\">snum</span>].partkey = <span class=\"supfact\">p</span> - &gt;\n    partkey;\n    <span class=\"supfact\">tot_scnt</span> = _scale * _DAT_001030d0;\n    lVar3 = <span class=\"supfact\">tot_scnt</span>;\n    if (<span class=\"supfact\">tot_scnt</span> & lt; Number) {\n      lVar3 = <span class=\"supfact\">tot_scnt</span> + Number;\n    }\n    <span class=\"supfact\">p</span> - &gt;\n    s[<span class=\"supfact\">snum</span>].suppkey =\n        (<span class=\"supfact\">index</span> +\n         ((<span class=\"supfact\">index</span> + -Number) / <span class=\"supfact\">tot_scnt</span> +\n          (lVar3 & gt; &gt; Number)) *\n             <span class=\"supfact\">snum</span>) %\n            <span class=\"supfact\">tot_scnt</span> +\n        Number;\n    dss_random(&amp; <span class=\"supfact\">p</span> - &gt;\n               s[<span class=\"supfact\">snum</span>].qty, Number, Number, Number);\n    dss_random(&amp; <span class=\"supfact\">p</span> - &gt;\n               s[<span class=\"supfact\">snum</span>].scost, Number, Number, Number);\n    dbg_text(<span class=\"supfact\">p</span> - &gt;\n             s[<span class=\"supfact\">snum</span>].comment, Number, Number, Number);\n    sVar2 = strlen(<span class=\"supfact\">p</span> - &gt; s[<span class=\"supfact\">snum</span>].comment);\n    <span class=\"supfact\">p</span> - &gt;\n    s[<span class=\"supfact\">snum</span>].clen = (int)sVar2;\n  }\n  return Number;\n}", "var": [{"name": "param_1", "type": "char * *", "pred_name": "buf", "ref_name": "index", "ref_type": "long"}, {"name": "param_2", "type": "user_t * *", "pred_name": "user", "ref_name": "p", "ref_type": "part_t * *"}, {"name": "uVar1", "type": "uint", "pred_name": "uVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "local_28", "type": "__unk__", "pred_name": "__unk__", "ref_name": "brnd", "ref_type": "long"}, {"name": "local_20", "type": "disappear", "pred_name": "", "ref_name": "temp", "ref_type": "long"}, {"name": "local_18", "type": "disappear", "pred_name": "", "ref_name": "tot_scnt", "ref_type": "long"}, {"name": "local_10", "type": "disappear", "pred_name": "", "ref_name": "snum", "ref_type": "long"}], "body_in_train": false}, {"repo_owner": "Deskshell-Core", "repo_name": "PhoenixEngine", "path": "Deskshell-Core/PhoenixEngine/d092181ca074e08b82e16e48eba1e98139e1ffe3952089beb8dc3980ed27ab43", "path_in_repo": "Deskshell-Core/PhoenixEngine/AngelScript/sdk/tests/test_feature/projects/gnuc/obj/scriptstdstring.o", "objdump": "", "code_s": "void __thiscall std allocator &lt;\nstd __detail _Hash_node &lt;\nstd pair &lt;\nchar_const *const, std __cxx11 basic_string &lt;\nchar, std char_traits &lt;\nchar &gt;\n, std allocator &lt;\nchar &gt;\n&gt;\n&gt;\n, false & gt;\n&gt;\n~allocator(allocator &lt; std __detail _Hash_node & lt; std pair & lt;\n           char_const *const, std __cxx11 basic_string &lt;\n           char, std char_traits &lt; char &gt;, std allocator &lt; char &gt;\n           &gt; &gt;, false & gt; &gt; *<span class=\"supfact\">this</span>) {\n  __gnu_cxx new_allocator &lt;\n  std __detail _Hash_node &lt;\n  std pair &lt;\n  char_const *const, std __cxx11 basic_string &lt;\n  char, std char_traits &lt;\n  char &gt;\n  , std allocator &lt;\n  char &gt;\n  &gt;\n  &gt;\n  , false & gt;\n  &gt;\n  ~new_allocator((new_allocator & lt; std __detail _Hash_node & lt;\n                  std pair & lt;\n                  char_const *const, std __cxx11 basic_string &lt;\n                  char, std char_traits &lt; char &gt;, std allocator & lt;\n                  char &gt; &gt; &gt;, false & gt; &gt; *)<span class=\"supfact\">this</span>);\n  return;\n}", "code_t": "void __thiscall std allocator &lt;\nstd __detail _Hash_node &lt;\nstd pair &lt;\nchar_const *_const, _std __cxx11 basic_string &lt;\nchar, _std char_traits &lt;\nchar &gt;\n, _std allocator &lt;\nchar &gt;\n_ &gt;\n_ &gt;\n, _false &gt;\n_ &gt;\n~allocator(allocator &lt; std __detail _Hash_node & lt; std pair & lt;\n           char_const * _const, _std __cxx11 basic_string &lt;\n           char, _std char_traits &lt; char &gt;, _std allocator &lt; char &gt;\n           _ & gt; _ & gt;, _false &gt; _ & gt;\n           *<span class=\"supfact\">this</span>, int __in_chrg) {\n  allocator &lt;\n  std __detail _Hash_node &lt;\n  std pair &lt;\n  char_const *_const, _std __cxx11 basic_string &lt;\n  char, _std char_traits &lt;\n  char &gt;\n  , _std allocator &lt;\n  char &gt;\n  _ &gt;\n  _ &gt;\n  , _false &gt;\n  _ &gt;\n  *<span class=\"supfact\">this</span> - local;\n  __gnu_cxx new_allocator &lt;\n  std __detail _Hash_node &lt;\n  std pair &lt;\n  char_const *_const, _std __cxx11 basic_string &lt;\n  char, _std char_traits &lt;\n  char &gt;\n  , _std allocator &lt;\n  char &gt;\n  _ &gt;\n  _ &gt;\n  , _false &gt;\n  _ &gt;\n  ~new_allocator(\n      (new_allocator & lt; std __detail _Hash_node & lt; std pair & lt;\n       char_const * _const, _std __cxx11 basic_string & lt;\n       char, _std char_traits &lt; char &gt;, _std allocator & lt; char &gt;\n       _ & gt; _ & gt;, _false & gt; _ & gt; *)<span class=\"supfact\">this</span>,\n      __in_chrg);\n  return;\n}", "var": [{"name": "this", "type": "__unk__", "pred_name": "this", "ref_name": "this", "ref_type": "allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;char_const*_const,_std::__cxx11::basic_string&lt;char,_std::char_traits&lt;char&gt;,_std::allocator&lt;char&gt;_&gt;_&gt;,_false&gt;_&gt; * *"}], "body_in_train": true}, {"repo_owner": "DougHamil", "repo_name": "OculusQ3", "path": "DougHamil/OculusQ3/5a8c948fb8208bee6a0dd1b9e37d4a10597cc4f0aacfd0c6461e8c4b4004882e", "path_in_repo": "DougHamil/OculusQ3//build/release-linux-x86_64/ded/be_ai_chat.o", "objdump": "0000000000004e64 <BotFreeChatFile>:\n    4e64:\t48 83 ec 28          \tsub    $0x28,%rsp\n    4e68:\t89 7c 24 0c          \tmov    %edi,0xc(%rsp)\n    4e6c:\t8b 44 24 0c          \tmov    0xc(%rsp),%eax\n    4e70:\t89 c7                \tmov    %eax,%edi\n    4e72:\te8 00 00 00 00       \tcall   4e77 <BotFreeChatFile+0x13>\n    4e77:\t48 89 44 24 18       \tmov    %rax,0x18(%rsp)\n    4e7c:\t48 83 7c 24 18 00    \tcmpq   $0x0,0x18(%rsp)\n    4e82:\t74 37                \tje     4ebb <BotFreeChatFile+0x57>\n    4e84:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    4e89:\t48 8b 80 48 01 00 00 \tmov    0x148(%rax),%rax\n    4e90:\t48 85 c0             \ttest   %rax,%rax\n    4e93:\t74 14                \tje     4ea9 <BotFreeChatFile+0x45>\n    4e95:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    4e9a:\t48 8b 80 48 01 00 00 \tmov    0x148(%rax),%rax\n    4ea1:\t48 89 c7             \tmov    %rax,%rdi\n    4ea4:\te8 00 00 00 00       \tcall   4ea9 <BotFreeChatFile+0x45>\n    4ea9:\t48 8b 44 24 18       \tmov    0x18(%rsp),%rax\n    4eae:\t48 c7 80 48 01 00 00 \tmovq   $0x0,0x148(%rax)\n    4eb5:\t00 00 00 00 \n    4eb9:\teb 01                \tjmp    4ebc <BotFreeChatFile+0x58>\n    4ebb:\t90                   \tnop\n    4ebc:\t48 83 c4 28          \tadd    $0x28,%rsp\n    4ec0:\tc3                   \tret    \n    4ec1:\t90                   \tnop", "code_s": "void BotFreeChatFile(undefined4 <span class=\"supfact\">param_1</span>) {\n  long <span class=\"supfact\">lVar1</span>;\n  <span class=\"supfact\">lVar1</span> = BotChatStateFromHandle(<span class=\"supfact\">param_1</span>);\n  if (<span class=\"supfact\">lVar1</span> != Number) {\n    if (*(long *)(<span class=\"supfact\">lVar1</span> + Number) != Number) {\n      FreeMemory(*(undefined8 *)(<span class=\"supfact\">lVar1</span> + Number));\n    }\n    *(undefined8 *)(<span class=\"supfact\">lVar1</span> + Number) = Number;\n  }\n  return;\n}", "code_t": "void BotFreeChatFile(int <span class=\"supfact\">chatstate</span>) {\n  bot_chatstate_t *<span class=\"supfact\">pbVar1</span>;\n  int <span class=\"supfact\">chatstate</span> - local;\n  bot_chatstate_t *cs;\n  <span class=\"supfact\">pbVar1</span> = BotChatStateFromHandle(<span class=\"supfact\">chatstate</span>);\n  if (<span class=\"supfact\">pbVar1</span> != (bot_chatstate_t *)Number) {\n    if (<span class=\"supfact\">pbVar1</span> - &gt; chat != (bot_chat_t *)Number) {\n      FreeMemory(<span class=\"supfact\">pbVar1</span> - &gt; chat);\n    }\n    <span class=\"supfact\">pbVar1</span> - &gt;\n    chat = (bot_chat_t *)Number;\n  }\n  return;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "chatstate", "ref_name": "chatstate", "ref_type": "int"}, {"name": "lVar1", "type": "bot_chatstate_t * *", "pred_name": "pbVar1", "ref_name": "pbVar1", "ref_type": "bot_chatstate_t * *"}], "body_in_train": true}, {"repo_owner": "webosose", "repo_name": "gst-libav", "path": "webosose/gst-libav/c7c39d9cc9f169072de8bc09a7fa0d974b9ed3e37314e65b26a2d02a48fb2def", "path_in_repo": "webosose/gst-libav/gst-libs/ext/libav/libavcodec/x86/hevcdsp_init.o", "objdump": "0000000000024f68 <ff_hevc_put_hevc_bi_w_qpel_hv16_12_sse4>:\n   24f68:\t48 81 ec c8 23 00 00 \tsub    $0x23c8,%rsp\n   24f6f:\t48 89 7c 24 28       \tmov    %rdi,0x28(%rsp)\n   24f74:\t48 89 74 24 20       \tmov    %rsi,0x20(%rsp)\n   24f79:\t48 89 54 24 18       \tmov    %rdx,0x18(%rsp)\n   24f7e:\t48 89 4c 24 10       \tmov    %rcx,0x10(%rsp)\n   24f83:\t4c 89 44 24 08       \tmov    %r8,0x8(%rsp)\n   24f88:\t44 89 4c 24 04       \tmov    %r9d,0x4(%rsp)\n   24f8d:\t48 8d 44 24 30       \tlea    0x30(%rsp),%rax\n   24f92:\t48 89 84 24 b8 23 00 \tmov    %rax,0x23b8(%rsp)\n   24f99:\t00 \n   24f9a:\t4c 8b 8c 24 00 24 00 \tmov    0x2400(%rsp),%r9\n   24fa1:\t00 \n   24fa2:\t4c 8b 84 24 f8 23 00 \tmov    0x23f8(%rsp),%r8\n   24fa9:\t00 \n   24faa:\t8b 4c 24 04          \tmov    0x4(%rsp),%ecx\n   24fae:\t48 8b 54 24 10       \tmov    0x10(%rsp),%rdx\n   24fb3:\t48 8b 74 24 18       \tmov    0x18(%rsp),%rsi\n   24fb8:\t48 8b 84 24 b8 23 00 \tmov    0x23b8(%rsp),%rax\n   24fbf:\t00 \n   24fc0:\t48 83 ec 08          \tsub    $0x8,%rsp\n   24fc4:\t8b bc 24 10 24 00 00 \tmov    0x2410(%rsp),%edi\n   24fcb:\t57                   \tpush   %rdi\n   24fcc:\t48 89 c7             \tmov    %rax,%rdi\n   24fcf:\te8 00 00 00 00       \tcall   24fd4 <ff_hevc_put_hevc_bi_w_qpel_hv16_12_sse4+0x6c>\n   24fd4:\t48 83 c4 10          \tadd    $0x10,%rsp\n   24fd8:\t44 8b 44 24 04       \tmov    0x4(%rsp),%r8d\n   24fdd:\t48 8b 4c 24 08       \tmov    0x8(%rsp),%rcx\n   24fe2:\t48 8b 94 24 b8 23 00 \tmov    0x23b8(%rsp),%rdx\n   24fe9:\t00 \n   24fea:\t48 8b 74 24 20       \tmov    0x20(%rsp),%rsi\n   24fef:\t48 8b 44 24 28       \tmov    0x28(%rsp),%rax\n   24ff4:\t8b bc 24 f0 23 00 00 \tmov    0x23f0(%rsp),%edi\n   24ffb:\t57                   \tpush   %rdi\n   24ffc:\t8b bc 24 f0 23 00 00 \tmov    0x23f0(%rsp),%edi\n   25003:\t57                   \tpush   %rdi\n   25004:\t8b bc 24 f0 23 00 00 \tmov    0x23f0(%rsp),%edi\n   2500b:\t57                   \tpush   %rdi\n   2500c:\t8b bc 24 f0 23 00 00 \tmov    0x23f0(%rsp),%edi\n   25013:\t57                   \tpush   %rdi\n   25014:\t44 8b 8c 24 f0 23 00 \tmov    0x23f0(%rsp),%r9d\n   2501b:\t00 \n   2501c:\t48 89 c7             \tmov    %rax,%rdi\n   2501f:\te8 00 00 00 00       \tcall   25024 <ff_hevc_put_hevc_bi_w_qpel_hv16_12_sse4+0xbc>\n   25024:\t48 83 c4 20          \tadd    $0x20,%rsp\n   25028:\t90                   \tnop\n   25029:\t48 81 c4 c8 23 00 00 \tadd    $0x23c8,%rsp\n   25030:\tc3                   \tret    ", "code_s": "void ff_hevc_put_hevc_bi_w_qpel_hv16_12_sse4(\n    undefined8 <span class=\"supfact\">param_1</span>, undefined8 <span class=\"supfact\">param_2</span>,\n    undefined8 <span class=\"supfact\">param_3</span>, undefined8 <span class=\"supfact\">param_4</span>,\n    undefined8 <span class=\"supfact\">param_5</span>, undefined4 <span class=\"supfact\">param_6</span>,\n    undefined4 <span class=\"supfact\">param_7</span>, undefined4 <span class=\"supfact\">param_8</span>,\n    undefined4 <span class=\"supfact\">param_9</span>, undefined4 <span class=\"supfact\">param_10</span>,\n    undefined4 <span class=\"supfact\">param_11</span>, undefined8 <span class=\"supfact\">param_12</span>,\n    undefined8 <span class=\"supfact\">param_13</span>, undefined4 <span class=\"supfact\">param_14</span>) {\n  undefined <span class=\"supfact\">local_2398</span>[Number];\n  undefined *<span class=\"supfact\">local_10</span>;\n  <span class=\"supfact\">local_10</span> = <span class=\"supfact\">local_2398</span>;\n  ff_hevc_put_hevc_qpel_hv16_12_sse4(\n      <span class=\"supfact\">local_10</span>, <span class=\"supfact\">param_3</span>,\n      <span class=\"supfact\">param_4</span>, <span class=\"supfact\">param_6</span>,\n      <span class=\"supfact\">param_12</span>, <span class=\"supfact\">param_13</span>,\n      <span class=\"supfact\">param_14</span>);\n  ff_hevc_put_hevc_bi_w16_12_sse4(\n      <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n      <span class=\"supfact\">local_10</span>, <span class=\"supfact\">param_5</span>,\n      <span class=\"supfact\">param_6</span>, <span class=\"supfact\">param_7</span>, <span class=\"supfact\">param_8</span>,\n      <span class=\"supfact\">param_9</span>, <span class=\"supfact\">param_10</span>,\n      <span class=\"supfact\">param_11</span>);\n  return;\n}", "code_t": "void ff_hevc_put_hevc_bi_w_qpel_hv16_12_sse4(\n    uint8_t *<span class=\"supfact\">_dst</span>, ptrdiff_t <span class=\"supfact\">_dststride</span>,\n    uint8_t *<span class=\"supfact\">_src</span>, ptrdiff_t <span class=\"supfact\">_srcstride</span>,\n    int16_t *<span class=\"supfact\">_src2</span>, int <span class=\"supfact\">height</span>,\n    int <span class=\"supfact\">denom</span>, int <span class=\"supfact\">_wx0</span>,\n    int <span class=\"supfact\">_wx1</span>, int <span class=\"supfact\">_ox0</span>,\n    int <span class=\"supfact\">_ox1</span>, intptr_t <span class=\"supfact\">mx</span>,\n    intptr_t <span class=\"supfact\">my</span>, int <span class=\"supfact\">width</span>) {\n  int <span class=\"supfact\">height</span> - local;\n  int16_t *<span class=\"supfact\">_src2</span> - local;\n  ptrdiff_t <span class=\"supfact\">_srcstride</span> - local;\n  uint8_t *<span class=\"supfact\">_src</span> - local;\n  ptrdiff_t <span class=\"supfact\">_dststride</span> - local;\n  uint8_t *<span class=\"supfact\">_dst</span> - local;\n  int16_t <span class=\"supfact\">la_temp</span>[Number];\n  int16_t *<span class=\"supfact\">temp</span>;\n  ff_hevc_put_hevc_qpel_hv16_12_sse4(\n      <span class=\"supfact\">la_temp</span>, <span class=\"supfact\">_src</span>, <span class=\"supfact\">_srcstride</span>,\n      <span class=\"supfact\">height</span>, <span class=\"supfact\">mx</span>, <span class=\"supfact\">my</span>,\n      <span class=\"supfact\">width</span>);\n  ff_hevc_put_hevc_bi_w16_12_sse4(\n      <span class=\"supfact\">_dst</span>, <span class=\"supfact\">_dststride</span>, <span class=\"supfact\">la_temp</span>,\n      <span class=\"supfact\">_src2</span>, <span class=\"supfact\">height</span>, <span class=\"supfact\">denom</span>,\n      <span class=\"supfact\">_wx0</span>, <span class=\"supfact\">_wx1</span>, <span class=\"supfact\">_ox0</span>,\n      <span class=\"supfact\">_ox1</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "uint8_t * *", "pred_name": "_dst", "ref_name": "_dst", "ref_type": "uint8_t * *"}, {"name": "param_2", "type": "ptrdiff_t", "pred_name": "_dststride", "ref_name": "_dststride", "ref_type": "ptrdiff_t"}, {"name": "param_3", "type": "uint8_t * *", "pred_name": "_src", "ref_name": "_src", "ref_type": "uint8_t * *"}, {"name": "param_4", "type": "ptrdiff_t", "pred_name": "_srcstride", "ref_name": "_srcstride", "ref_type": "ptrdiff_t"}, {"name": "param_5", "type": "int16_t * *", "pred_name": "_src2", "ref_name": "_src2", "ref_type": "int16_t * *"}, {"name": "param_6", "type": "int", "pred_name": "height", "ref_name": "height", "ref_type": "int"}, {"name": "param_7", "type": "int", "pred_name": "denom", "ref_name": "denom", "ref_type": "int"}, {"name": "param_8", "type": "int", "pred_name": "_wx0", "ref_name": "_wx0", "ref_type": "int"}, {"name": "param_9", "type": "int", "pred_name": "_wx1", "ref_name": "_wx1", "ref_type": "int"}, {"name": "param_10", "type": "int", "pred_name": "_ox0", "ref_name": "_ox0", "ref_type": "int"}, {"name": "param_11", "type": "int", "pred_name": "_ox1", "ref_name": "_ox1", "ref_type": "int"}, {"name": "param_12", "type": "intptr_t", "pred_name": "mx", "ref_name": "mx", "ref_type": "intptr_t"}, {"name": "param_13", "type": "intptr_t", "pred_name": "my", "ref_name": "my", "ref_type": "intptr_t"}, {"name": "param_14", "type": "int", "pred_name": "width", "ref_name": "width", "ref_type": "int"}, {"name": "local_2398", "type": "int16_t[4544][4544]", "pred_name": "la_temp", "ref_name": "la_temp", "ref_type": "int16_t[4544][4544]"}, {"name": "local_10", "type": "int16_t * *", "pred_name": "temp", "ref_name": "temp", "ref_type": "int16_t * *"}], "body_in_train": true}, {"repo_owner": "Ecdosis", "repo_name": "standoff", "path": "Ecdosis/standoff/689e33f8380639e748b7c9c4387e5c90e19754ce7bba865f33dd73e48f78a310", "path_in_repo": "Ecdosis/standoff/formatter/build/Debug/GNU-Linux/src/range_array.o", "objdump": "00000000000002d6 <range_array_insert>:\n 2d6:\t55                   \tpush   %rbp\n 2d7:\t48 89 e5             \tmov    %rsp,%rbp\n 2da:\t48 83 ec 30          \tsub    $0x30,%rsp\n 2de:\t48 89 7d e8          \tmov    %rdi,-0x18(%rbp)\n 2e2:\t89 75 e4             \tmov    %esi,-0x1c(%rbp)\n 2e5:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n 2e9:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 2ed:\t48 89 c7             \tmov    %rax,%rdi\n 2f0:\te8 7d fe ff ff       \tcall   172 <range_array_expand>\n 2f5:\t85 c0                \ttest   %eax,%eax\n 2f7:\t0f 84 99 00 00 00    \tje     396 <range_array_insert+0xc0>\n 2fd:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 301:\t8b 40 08             \tmov    0x8(%rax),%eax\n 304:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n 307:\teb 37                \tjmp    340 <range_array_insert+0x6a>\n 309:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 30d:\t48 8b 00             \tmov    (%rax),%rax\n 310:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n 313:\t48 63 d2             \tmovslq %edx,%rdx\n 316:\t48 c1 e2 03          \tshl    $0x3,%rdx\n 31a:\t48 83 ea 08          \tsub    $0x8,%rdx\n 31e:\t48 8d 0c 10          \tlea    (%rax,%rdx,1),%rcx\n 322:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 326:\t48 8b 00             \tmov    (%rax),%rax\n 329:\t8b 55 fc             \tmov    -0x4(%rbp),%edx\n 32c:\t48 63 d2             \tmovslq %edx,%rdx\n 32f:\t48 c1 e2 03          \tshl    $0x3,%rdx\n 333:\t48 01 c2             \tadd    %rax,%rdx\n 336:\t48 8b 01             \tmov    (%rcx),%rax\n 339:\t48 89 02             \tmov    %rax,(%rdx)\n 33c:\t83 6d fc 01          \tsubl   $0x1,-0x4(%rbp)\n 340:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n 343:\t3b 45 e4             \tcmp    -0x1c(%rbp),%eax\n 346:\t7f c1                \tjg     309 <range_array_insert+0x33>\n 348:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 34c:\t48 8b 00             \tmov    (%rax),%rax\n 34f:\t8b 55 e4             \tmov    -0x1c(%rbp),%edx\n 352:\t48 63 d2             \tmovslq %edx,%rdx\n 355:\t48 c1 e2 03          \tshl    $0x3,%rdx\n 359:\t48 01 c2             \tadd    %rax,%rdx\n 35c:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 360:\t48 89 02             \tmov    %rax,(%rdx)\n 363:\t48 8b 45 d8          \tmov    -0x28(%rbp),%rax\n 367:\t48 89 c7             \tmov    %rax,%rdi\n 36a:\te8 00 00 00 00       \tcall   36f <range_array_insert+0x99>\n 36f:\t85 c0                \ttest   %eax,%eax\n 371:\t74 0b                \tje     37e <range_array_insert+0xa8>\n 373:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 377:\tc7 40 10 01 00 00 00 \tmovl   $0x1,0x10(%rax)\n 37e:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 382:\t8b 40 08             \tmov    0x8(%rax),%eax\n 385:\t8d 50 01             \tlea    0x1(%rax),%edx\n 388:\t48 8b 45 e8          \tmov    -0x18(%rbp),%rax\n 38c:\t89 50 08             \tmov    %edx,0x8(%rax)\n 38f:\tb8 01 00 00 00       \tmov    $0x1,%eax\n 394:\teb 05                \tjmp    39b <range_array_insert+0xc5>\n 396:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 39b:\tc9                   \tleave  \n 39c:\tc3                   \tret    ", "code_s": "undefined8 range_array_insert(long *<span class=\"supfact\">param_1</span>,\n                              int <span class=\"supfact\">param_2</span>,\n                              undefined8 <span class=\"supfact\">param_3</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  undefined8 <span class=\"supfact\">uVar2</span>;\n  int <span class=\"supfact\">local_c</span>;\n  <span class=\"supfact\">iVar1</span> = FUN_00100172(<span class=\"supfact\">param_1</span>);\n  if (<span class=\"supfact\">iVar1</span> == Number) {\n    <span class=\"supfact\">uVar2</span> = Number;\n  } else {\n    for (<span class=\"supfact\">local_c</span> = *(int *)(<span class=\"supfact\">param_1</span> + Number);\n         <span class=\"supfact\">param_2</span> & lt; <span class=\"supfact\">local_c</span>;\n         <span class=\"supfact\">local_c</span> = <span class=\"supfact\">local_c</span> + -Number) {\n      *(undefined8 *)((long)<span class=\"supfact\">local_c</span> * Number +\n                      *<span class=\"supfact\">param_1</span>) =\n          *(undefined8 *)(*<span class=\"supfact\">param_1</span> +\n                          (long)<span class=\"supfact\">local_c</span> * Number + -Number);\n    }\n    *(undefined8 *)((long)<span class=\"supfact\">param_2</span> * Number +\n                    *<span class=\"supfact\">param_1</span>) = <span class=\"supfact\">param_3</span>;\n    <span class=\"supfact\">iVar1</span> = range_get_removed(<span class=\"supfact\">param_3</span>);\n    if (<span class=\"supfact\">iVar1</span> != Number) {\n      *(undefined4 *)(<span class=\"supfact\">param_1</span> + Number) = Number;\n    }\n    *(int *)(<span class=\"supfact\">param_1</span> + Number) =\n        *(int *)(<span class=\"supfact\">param_1</span> + Number) + Number;\n    <span class=\"supfact\">uVar2</span> = Number;\n  }\n  return <span class=\"supfact\">uVar2</span>;\n}", "code_t": "int range_array_insert(range_array *<span class=\"supfact\">ra</span>, int <span class=\"supfact\">at</span>,\n                       range *<span class=\"supfact\">r</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  range *<span class=\"supfact\">r</span> - local;\n  int <span class=\"supfact\">at</span> - local;\n  range_array *<span class=\"supfact\">ra</span> - local;\n  int <span class=\"supfact\">i</span>;\n  <span class=\"supfact\">iVar1</span> = range_array_expand(<span class=\"supfact\">ra</span>);\n  if (<span class=\"supfact\">iVar1</span> == Number) {\n    <span class=\"supfact\">iVar1</span> = Number;\n  } else {\n    for (<span class=\"supfact\">i</span> = <span class=\"supfact\">ra</span> - &gt; num_ranges;\n         <span class=\"supfact\">at</span> & lt; <span class=\"supfact\">i</span>;\n         <span class=\"supfact\">i</span> = <span class=\"supfact\">i</span> + -Number) {\n      <span class=\"supfact\">ra</span> - &gt;\n      ranges[<span class=\"supfact\">i</span>] = <span class=\"supfact\">ra</span> - &gt;\n      ranges[(long)<span class=\"supfact\">i</span> + -Number];\n    }\n    <span class=\"supfact\">ra</span> - &gt;\n    ranges[<span class=\"supfact\">at</span>] = <span class=\"supfact\">r</span>;\n    <span class=\"supfact\">iVar1</span> = range_get_removed(<span class=\"supfact\">r</span>);\n    if (<span class=\"supfact\">iVar1</span> != Number) {\n      <span class=\"supfact\">ra</span> - &gt;\n      has_removed = Number;\n    }\n    <span class=\"supfact\">ra</span> - &gt;\n    num_ranges = <span class=\"supfact\">ra</span> - &gt;\n    num_ranges + Number;\n    <span class=\"supfact\">iVar1</span> = Number;\n  }\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "param_1", "type": "AVStream * *", "pred_name": "st", "ref_name": "ra", "ref_type": "range_array * *"}, {"name": "param_2", "type": "AVPacketSideDataType", "pred_name": "type", "ref_name": "at", "ref_type": "int"}, {"name": "param_3", "type": "int * *", "pred_name": "size", "ref_name": "r", "ref_type": "range * *"}, {"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}, {"name": "uVar2", "type": "uint8_t * *", "pred_name": "puVar2", "ref_name": "", "ref_type": "disappear"}, {"name": "local_c", "type": "int", "pred_name": "i", "ref_name": "i", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "optixx", "repo_name": "lm32_qemu_soc", "path": "optixx/lm32_qemu_soc/5eef71528da62b0753e635eda5c2431a6294877cc0ce45658bea26fa3e33930d", "path_in_repo": "optixx/lm32_qemu_soc//sh4eb-linux-user/tcg/tcg.o", "objdump": "0000000000003417 <tcg_global_mem_new_i64>:\n    3417:\t55                   \tpush   %rbp\n    3418:\t48 89 e5             \tmov    %rsp,%rbp\n    341b:\t48 83 ec 30          \tsub    $0x30,%rsp\n    341f:\t89 7d ec             \tmov    %edi,-0x14(%rbp)\n    3422:\t48 89 75 e0          \tmov    %rsi,-0x20(%rbp)\n    3426:\t48 89 55 d8          \tmov    %rdx,-0x28(%rbp)\n    342a:\t48 8b 4d d8          \tmov    -0x28(%rbp),%rcx\n    342e:\t48 8b 55 e0          \tmov    -0x20(%rbp),%rdx\n    3432:\t8b 45 ec             \tmov    -0x14(%rbp),%eax\n    3435:\t89 c6                \tmov    %eax,%esi\n    3437:\tbf 01 00 00 00       \tmov    $0x1,%edi\n    343c:\te8 d6 fe ff ff       \tcall   3317 <tcg_global_mem_new_internal>\n    3441:\t89 45 fc             \tmov    %eax,-0x4(%rbp)\n    3444:\t8b 45 fc             \tmov    -0x4(%rbp),%eax\n    3447:\tc9                   \tleave  \n    3448:\tc3                   \tret    ", "code_s": "undefined4 tcg_global_mem_new_i64(undefined4 <span class=\"supfact\">param_1</span>,\n                                  undefined8 <span class=\"supfact\">param_2</span>,\n                                  undefined8 <span class=\"supfact\">param_3</span>) {\n  undefined4 <span class=\"supfact\">uVar1</span>;\n  <span class=\"supfact\">uVar1</span> =\n      FUN_00103317(Number, <span class=\"supfact\">param_1</span>, <span class=\"supfact\">param_2</span>,\n                   <span class=\"supfact\">param_3</span>);\n  return <span class=\"supfact\">uVar1</span>;\n}", "code_t": "TCGv_i64 tcg_global_mem_new_i64(int <span class=\"supfact\">reg</span>,\n                                tcg_target_long <span class=\"supfact\">offset</span>,\n                                char *<span class=\"supfact\">name</span>) {\n  int <span class=\"supfact\">iVar1</span>;\n  char *<span class=\"supfact\">name</span> - local;\n  tcg_target_long <span class=\"supfact\">offset</span> - local;\n  int <span class=\"supfact\">reg</span> - local;\n  int idx;\n  <span class=\"supfact\">iVar1</span> =\n      tcg_global_mem_new_internal(Number, <span class=\"supfact\">reg</span>,\n                                  <span class=\"supfact\">offset</span>, <span class=\"supfact\">name</span>);\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "param_1", "type": "int", "pred_name": "reg", "ref_name": "reg", "ref_type": "int"}, {"name": "param_2", "type": "tcg_target_long", "pred_name": "offset", "ref_name": "offset", "ref_type": "tcg_target_long"}, {"name": "param_3", "type": "char * *", "pred_name": "name", "ref_name": "name", "ref_type": "char * *"}, {"name": "uVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": true}, {"repo_owner": "Smilo-platform", "repo_name": "Smilo-Quake", "path": "Smilo-platform/Smilo-Quake/0d1231aa47797f1f013a812a090f9067b25300a876cf33e956a6bd7808780a00", "path_in_repo": "Smilo-platform/Smilo-Quake//.baseq2/src/baseq2/g_trigger.o", "objdump": "00000000000001d7 <Use_Multi>:\n     1d7:\t55                   \tpush   %rbp\n     1d8:\t48 89 e5             \tmov    %rsp,%rbp\n     1db:\t48 83 ec 20          \tsub    $0x20,%rsp\n     1df:\t48 89 7d f8          \tmov    %rdi,-0x8(%rbp)\n     1e3:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n     1e7:\t48 89 55 e8          \tmov    %rdx,-0x18(%rbp)\n     1eb:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     1ef:\t48 8b 55 e8          \tmov    -0x18(%rbp),%rdx\n     1f3:\t48 89 90 b0 02 00 00 \tmov    %rdx,0x2b0(%rax)\n     1fa:\t48 8b 45 f8          \tmov    -0x8(%rbp),%rax\n     1fe:\t48 89 c7             \tmov    %rax,%rdi\n     201:\te8 00 00 00 00       \tcall   206 <Use_Multi+0x2f>\n     206:\t90                   \tnop\n     207:\tc9                   \tleave  \n     208:\tc3                   \tret    ", "code_s": "void Use_Multi(long <span class=\"supfact\">param_1</span>, undefined8 param_2,\n               undefined8 <span class=\"supfact\">param_3</span>) {\n  *(undefined8 *)(<span class=\"supfact\">param_1</span> + Number) = <span class=\"supfact\">param_3</span>;\n  multi_trigger(<span class=\"supfact\">param_1</span>);\n  return;\n}", "code_t": "void Use_Multi(edict_t *<span class=\"supfact\">ent</span>, edict_t *other,\n               edict_t *<span class=\"supfact\">activator</span>) {\n  edict_t *<span class=\"supfact\">activator</span> - local;\n  edict_t *other - local;\n  edict_t *<span class=\"supfact\">ent</span> - local;\n  <span class=\"supfact\">ent</span> - &gt;\n  <span class=\"supfact\">activator</span> = <span class=\"supfact\">activator</span>;\n  multi_trigger(<span class=\"supfact\">ent</span>);\n  return;\n}", "var": [{"name": "param_1", "type": "script_state * *", "pred_name": "st", "ref_name": "ent", "ref_type": "edict_t * *"}, {"name": "param_3", "type": "char * *", "pred_name": "msg", "ref_name": "activator", "ref_type": "edict_t * *"}], "body_in_train": false}, {"repo_owner": "redspot", "repo_name": "theia-ki-target-agent", "path": "redspot/theia-ki-target-agent/b020f48990056be5ebcf9fdfb6cfdc151b9cca9e7215f7365f947ef978d3c842", "path_in_repo": "redspot/theia-ki-target-agent/linux-lts-quantal-3.5.0/tools/lib/traceevent/libtraceevent.so", "objdump": "", "code_s": "int printf(char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_printf_001170e0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "code_t": "int printf(char *__format, ...) {\n  int <span class=\"supfact\">iVar1</span>;\n  <span class=\"supfact\">iVar1</span> = (*(code *)PTR_printf_001170e0)();\n  return <span class=\"supfact\">iVar1</span>;\n}", "var": [{"name": "iVar1", "type": "int", "pred_name": "iVar1", "ref_name": "iVar1", "ref_type": "int"}], "body_in_train": false}, {"repo_owner": "jiehui-eason", "repo_name": "ubl_uboot_kernel", "path": "jiehui-eason/ubl_uboot_kernel/64f8e88a6d778c3f82cefafc764104a7994114b1db67f14c0198dc930ccd1ea4", "path_in_repo": "jiehui-eason/ubl_uboot_kernel/linux-2.6.35.3/tools/perf/util/exec_cmd.o", "objdump": "000000000000060a <execl_perf_cmd>:\n 60a:\t55                   \tpush   %rbp\n 60b:\t48 89 e5             \tmov    %rsp,%rbp\n 60e:\t48 81 ec 00 02 00 00 \tsub    $0x200,%rsp\n 615:\t48 89 bd 08 fe ff ff \tmov    %rdi,-0x1f8(%rbp)\n 61c:\t48 89 b5 58 ff ff ff \tmov    %rsi,-0xa8(%rbp)\n 623:\t48 89 95 60 ff ff ff \tmov    %rdx,-0xa0(%rbp)\n 62a:\t48 89 8d 68 ff ff ff \tmov    %rcx,-0x98(%rbp)\n 631:\t4c 89 85 70 ff ff ff \tmov    %r8,-0x90(%rbp)\n 638:\t4c 89 8d 78 ff ff ff \tmov    %r9,-0x88(%rbp)\n 63f:\t84 c0                \ttest   %al,%al\n 641:\t74 20                \tje     663 <execl_perf_cmd+0x59>\n 643:\t0f 29 45 80          \tmovaps %xmm0,-0x80(%rbp)\n 647:\t0f 29 4d 90          \tmovaps %xmm1,-0x70(%rbp)\n 64b:\t0f 29 55 a0          \tmovaps %xmm2,-0x60(%rbp)\n 64f:\t0f 29 5d b0          \tmovaps %xmm3,-0x50(%rbp)\n 653:\t0f 29 65 c0          \tmovaps %xmm4,-0x40(%rbp)\n 657:\t0f 29 6d d0          \tmovaps %xmm5,-0x30(%rbp)\n 65b:\t0f 29 75 e0          \tmovaps %xmm6,-0x20(%rbp)\n 65f:\t0f 29 7d f0          \tmovaps %xmm7,-0x10(%rbp)\n 663:\t64 48 8b 04 25 28 00 \tmov    %fs:0x28,%rax\n 66a:\t00 00 \n 66c:\t48 89 85 48 ff ff ff \tmov    %rax,-0xb8(%rbp)\n 673:\t31 c0                \txor    %eax,%eax\n 675:\tc7 85 28 fe ff ff 08 \tmovl   $0x8,-0x1d8(%rbp)\n 67c:\t00 00 00 \n 67f:\tc7 85 2c fe ff ff 30 \tmovl   $0x30,-0x1d4(%rbp)\n 686:\t00 00 00 \n 689:\t48 8d 45 10          \tlea    0x10(%rbp),%rax\n 68d:\t48 89 85 30 fe ff ff \tmov    %rax,-0x1d0(%rbp)\n 694:\t48 8d 85 50 ff ff ff \tlea    -0xb0(%rbp),%rax\n 69b:\t48 89 85 38 fe ff ff \tmov    %rax,-0x1c8(%rbp)\n 6a2:\t48 8b 85 08 fe ff ff \tmov    -0x1f8(%rbp),%rax\n 6a9:\t48 89 85 40 fe ff ff \tmov    %rax,-0x1c0(%rbp)\n 6b0:\tc7 85 1c fe ff ff 01 \tmovl   $0x1,-0x1e4(%rbp)\n 6b7:\t00 00 00 \n 6ba:\teb 79                \tjmp    735 <execl_perf_cmd+0x12b>\n 6bc:\t8b 95 1c fe ff ff    \tmov    -0x1e4(%rbp),%edx\n 6c2:\t8d 42 01             \tlea    0x1(%rdx),%eax\n 6c5:\t89 85 1c fe ff ff    \tmov    %eax,-0x1e4(%rbp)\n 6cb:\t8b 85 28 fe ff ff    \tmov    -0x1d8(%rbp),%eax\n 6d1:\t83 f8 2f             \tcmp    $0x2f,%eax\n 6d4:\t77 23                \tja     6f9 <execl_perf_cmd+0xef>\n 6d6:\t48 8b 85 38 fe ff ff \tmov    -0x1c8(%rbp),%rax\n 6dd:\t8b 8d 28 fe ff ff    \tmov    -0x1d8(%rbp),%ecx\n 6e3:\t89 c9                \tmov    %ecx,%ecx\n 6e5:\t48 01 c8             \tadd    %rcx,%rax\n 6e8:\t8b 8d 28 fe ff ff    \tmov    -0x1d8(%rbp),%ecx\n 6ee:\t83 c1 08             \tadd    $0x8,%ecx\n 6f1:\t89 8d 28 fe ff ff    \tmov    %ecx,-0x1d8(%rbp)\n 6f7:\teb 12                \tjmp    70b <execl_perf_cmd+0x101>\n 6f9:\t48 8b 85 30 fe ff ff \tmov    -0x1d0(%rbp),%rax\n 700:\t48 8d 48 08          \tlea    0x8(%rax),%rcx\n 704:\t48 89 8d 30 fe ff ff \tmov    %rcx,-0x1d0(%rbp)\n 70b:\t48 8b 08             \tmov    (%rax),%rcx\n 70e:\t48 63 c2             \tmovslq %edx,%rax\n 711:\t48 89 8c c5 40 fe ff \tmov    %rcx,-0x1c0(%rbp,%rax,8)\n 718:\tff \n 719:\t48 63 c2             \tmovslq %edx,%rax\n 71c:\t48 8b 84 c5 40 fe ff \tmov    -0x1c0(%rbp,%rax,8),%rax\n 723:\tff \n 724:\t48 89 85 20 fe ff ff \tmov    %rax,-0x1e0(%rbp)\n 72b:\t48 83 bd 20 fe ff ff \tcmpq   $0x0,-0x1e0(%rbp)\n 732:\t00 \n 733:\t74 0f                \tje     744 <execl_perf_cmd+0x13a>\n 735:\t83 bd 1c fe ff ff 1f \tcmpl   $0x1f,-0x1e4(%rbp)\n 73c:\t0f 8e 7a ff ff ff    \tjle    6bc <execl_perf_cmd+0xb2>\n 742:\teb 01                \tjmp    745 <execl_perf_cmd+0x13b>\n 744:\t90                   \tnop\n 745:\t83 bd 1c fe ff ff 1f \tcmpl   $0x1f,-0x1e4(%rbp)\n 74c:\t7e 1b                \tjle    769 <execl_perf_cmd+0x15f>\n 74e:\t48 8b 85 08 fe ff ff \tmov    -0x1f8(%rbp),%rax\n 755:\t48 89 c6             \tmov    %rax,%rsi\n 758:\tbf 00 00 00 00       \tmov    $0x0,%edi\n 75d:\tb8 00 00 00 00       \tmov    $0x0,%eax\n 762:\te8 00 00 00 00       \tcall   767 <execl_perf_cmd+0x15d>\n 767:\teb 23                \tjmp    78c <execl_perf_cmd+0x182>\n 769:\t8b 85 1c fe ff ff    \tmov    -0x1e4(%rbp),%eax\n 76f:\t48 98                \tcltq   \n 771:\t48 c7 84 c5 40 fe ff \tmovq   $0x0,-0x1c0(%rbp,%rax,8)\n 778:\tff 00 00 00 00 \n 77d:\t48 8d 85 40 fe ff ff \tlea    -0x1c0(%rbp),%rax\n 784:\t48 89 c7             \tmov    %rax,%rdi\n 787:\te8 00 00 00 00       \tcall   78c <execl_perf_cmd+0x182>\n 78c:\t48 8b b5 48 ff ff ff \tmov    -0xb8(%rbp),%rsi\n 793:\t64 48 33 34 25 28 00 \txor    %fs:0x28,%rsi\n 79a:\t00 00 \n 79c:\t74 05                \tje     7a3 <execl_perf_cmd+0x199>\n 79e:\te8 00 00 00 00       \tcall   7a3 <execl_perf_cmd+0x199>\n 7a3:\tc9                   \tleave  \n 7a4:\tc3                   \tret    \n", "code_s": "void execl_perf_cmd(\n    undefined4 <span class=\"supfact\">param_1</span>, undefined4 <span class=\"supfact\">param_2</span>,\n    undefined4 <span class=\"supfact\">param_3</span>, undefined4 <span class=\"supfact\">param_4</span>,\n    undefined4 <span class=\"supfact\">param_5</span>, undefined4 <span class=\"supfact\">param_6</span>,\n    undefined4 <span class=\"supfact\">param_7</span>, undefined4 <span class=\"supfact\">param_8</span>,\n    long <span class=\"supfact\">param_9</span>, undefined8 <span class=\"supfact\">param_10</span>,\n    undefined8 <span class=\"supfact\">param_11</span>, undefined8 <span class=\"supfact\">param_12</span>,\n    undefined8 <span class=\"supfact\">param_13</span>, undefined8 <span class=\"supfact\">param_14</span>) {\n  char <span class=\"supfact\">in_AL</span>;\n  int <span class=\"supfact\">iVar1</span>;\n  long *plVar2;\n  long lVar3;\n  ulong uVar4;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  int <span class=\"supfact\">local_1ec</span>;\n  uint <span class=\"supfact\">local_1e0</span>;\n  long *<span class=\"supfact\">local_1d8</span>;\n  long <span class=\"supfact\">local_1c8</span>[Number];\n  long <span class=\"supfact\">local_c0</span>;\n  long <span class=\"supfact\">local_b8</span>[Number];\n  undefined8 <span class=\"supfact\">local_98</span>;\n  undefined8 <span class=\"supfact\">local_90</span>;\n  undefined4 <span class=\"supfact\">local_88</span>;\n  undefined4 <span class=\"supfact\">local_78</span>;\n  undefined4 <span class=\"supfact\">local_68</span>;\n  undefined4 <span class=\"supfact\">local_58</span>;\n  undefined4 <span class=\"supfact\">local_48</span>;\n  undefined4 <span class=\"supfact\">local_38</span>;\n  undefined4 <span class=\"supfact\">local_28</span>;\n  undefined4 local_18;\n  if (<span class=\"supfact\">in_AL</span> != String) {\n    <span class=\"supfact\">local_88</span> = <span class=\"supfact\">param_1</span>;\n    <span class=\"supfact\">local_78</span> = <span class=\"supfact\">param_2</span>;\n    <span class=\"supfact\">local_68</span> = <span class=\"supfact\">param_3</span>;\n    <span class=\"supfact\">local_58</span> = <span class=\"supfact\">param_4</span>;\n    <span class=\"supfact\">local_48</span> = <span class=\"supfact\">param_5</span>;\n    <span class=\"supfact\">local_38</span> = <span class=\"supfact\">param_6</span>;\n    <span class=\"supfact\">local_28</span> = <span class=\"supfact\">param_7</span>;\n    local_18 = <span class=\"supfact\">param_8</span>;\n  }\n  <span class=\"supfact\">local_c0</span> = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">local_1e0</span> = Number;\n  <span class=\"supfact\">local_1d8</span> = (long *)&amp;\n  stack0x00000008;\n  <span class=\"supfact\">local_1ec</span> = Number;\n  do {\n    if (Number & lt; <span class=\"supfact\">local_1ec</span>)\n      break;\n    <span class=\"supfact\">iVar1</span> = <span class=\"supfact\">local_1ec</span> + Number;\n    if (<span class=\"supfact\">local_1e0</span> & lt; Number) {\n      uVar4 = (ulong)<span class=\"supfact\">local_1e0</span>;\n      <span class=\"supfact\">local_1e0</span> = <span class=\"supfact\">local_1e0</span> + Number;\n      plVar2 = (long *)((long)<span class=\"supfact\">local_b8</span> + uVar4);\n    } else {\n      plVar2 = <span class=\"supfact\">local_1d8</span>;\n      <span class=\"supfact\">local_1d8</span> = <span class=\"supfact\">local_1d8</span> + Number;\n    }\n    <span class=\"supfact\">local_1c8</span>[<span class=\"supfact\">local_1ec</span>] = *plVar2;\n    lVar3 = (long)<span class=\"supfact\">local_1ec</span>;\n    <span class=\"supfact\">local_1ec</span> = <span class=\"supfact\">iVar1</span>;\n  } while (<span class=\"supfact\">local_1c8</span>[lVar3] != Number);\n  <span class=\"supfact\">local_1c8</span>[Number] = <span class=\"supfact\">param_9</span>;\n  <span class=\"supfact\">local_b8</span>[Number] = <span class=\"supfact\">param_10</span>;\n  <span class=\"supfact\">local_b8</span>[Number] = <span class=\"supfact\">param_11</span>;\n  <span class=\"supfact\">local_b8</span>[Number] = <span class=\"supfact\">param_12</span>;\n  <span class=\"supfact\">local_98</span> = <span class=\"supfact\">param_13</span>;\n  <span class=\"supfact\">local_90</span> = <span class=\"supfact\">param_14</span>;\n  if (<span class=\"supfact\">local_1ec</span> & lt; Number) {\n    <span class=\"supfact\">local_1c8</span>[<span class=\"supfact\">local_1ec</span>] = Number;\n    execv_perf_cmd(<span class=\"supfact\">local_1c8</span>);\n  } else {\n    error(String, <span class=\"supfact\">param_9</span>);\n  }\n  if (<span class=\"supfact\">local_c0</span> ==\n      *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return;\n  }\n  __stack_chk_fail();\n}", "code_t": "int execl_perf_cmd(char *<span class=\"supfact\">cmd</span>, ...) {\n  long lVar1;\n  char <span class=\"supfact\">in_AL</span>;\n  int <span class=\"supfact\">iVar2</span>;\n  char **ppcVar3;\n  long lVar4;\n  undefined8 in_RCX;\n  ulong uVar5;\n  undefined8 <span class=\"supfact\">in_RDX</span>;\n  undefined8 <span class=\"supfact\">in_RSI</span>;\n  undefined8 <span class=\"supfact\">in_R8</span>;\n  undefined8 <span class=\"supfact\">in_R9</span>;\n  long <span class=\"supfact\">in_FS_OFFSET</span>;\n  undefined4 <span class=\"supfact\">in_XMM0_Da</span>;\n  undefined4 <span class=\"supfact\">in_XMM1_Da</span>;\n  undefined4 <span class=\"supfact\">in_XMM2_Da</span>;\n  undefined4 <span class=\"supfact\">in_XMM3_Da</span>;\n  undefined4 <span class=\"supfact\">in_XMM4_Da</span>;\n  undefined4 <span class=\"supfact\">in_XMM5_Da</span>;\n  undefined4 <span class=\"supfact\">in_XMM6_Da</span>;\n  undefined4 <span class=\"supfact\">in_XMM7_Da</span>;\n  char *<span class=\"supfact\">cmd</span> - local;\n  int <span class=\"supfact\">argc</span>;\n  char *arg;\n  va_list <span class=\"supfact\">param</span>;\n  char *<span class=\"supfact\">argv</span>[Number];\n  char *<span class=\"supfact\">local_b8</span>[Number];\n  undefined8 <span class=\"supfact\">local_98</span>;\n  undefined8 <span class=\"supfact\">local_90</span>;\n  undefined4 <span class=\"supfact\">local_88</span>;\n  undefined4 <span class=\"supfact\">local_78</span>;\n  undefined4 <span class=\"supfact\">local_68</span>;\n  undefined4 <span class=\"supfact\">local_58</span>;\n  undefined4 <span class=\"supfact\">local_48</span>;\n  undefined4 <span class=\"supfact\">local_38</span>;\n  undefined4 <span class=\"supfact\">local_28</span>;\n  undefined4 <span class=\"supfact\">local_18</span>;\n  if (<span class=\"supfact\">in_AL</span> != String) {\n    <span class=\"supfact\">local_88</span> = <span class=\"supfact\">in_XMM0_Da</span>;\n    <span class=\"supfact\">local_78</span> = <span class=\"supfact\">in_XMM1_Da</span>;\n    <span class=\"supfact\">local_68</span> = <span class=\"supfact\">in_XMM2_Da</span>;\n    <span class=\"supfact\">local_58</span> = <span class=\"supfact\">in_XMM3_Da</span>;\n    <span class=\"supfact\">local_48</span> = <span class=\"supfact\">in_XMM4_Da</span>;\n    <span class=\"supfact\">local_38</span> = <span class=\"supfact\">in_XMM5_Da</span>;\n    <span class=\"supfact\">local_28</span> = <span class=\"supfact\">in_XMM6_Da</span>;\n    <span class=\"supfact\">local_18</span> = <span class=\"supfact\">in_XMM7_Da</span>;\n  }\n  lVar1 = *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number);\n  <span class=\"supfact\">param</span>[Number].gp_offset = Number;\n  <span class=\"supfact\">param</span>[Number].overflow_arg_area = &amp;\n  stack0x00000008;\n  <span class=\"supfact\">argc</span> = Number;\n  do {\n    if (Number & lt; <span class=\"supfact\">argc</span>)\n      break;\n    <span class=\"supfact\">iVar2</span> = <span class=\"supfact\">argc</span> + Number;\n    if (<span class=\"supfact\">param</span>[Number].gp_offset & lt; Number) {\n      uVar5 = (ulong)<span class=\"supfact\">param</span>[Number].gp_offset;\n      <span class=\"supfact\">param</span>[Number].gp_offset =\n          <span class=\"supfact\">param</span>[Number].gp_offset + Number;\n      ppcVar3 = (char **)((long)<span class=\"supfact\">local_b8</span> + uVar5);\n    } else {\n      ppcVar3 = (char **)<span class=\"supfact\">param</span>[Number].overflow_arg_area;\n      <span class=\"supfact\">param</span>[Number].overflow_arg_area =\n          (void *)((long)<span class=\"supfact\">param</span>[Number].overflow_arg_area +\n                   Number);\n    }\n    <span class=\"supfact\">argv</span>[<span class=\"supfact\">argc</span>] = *ppcVar3;\n    lVar4 = (long)<span class=\"supfact\">argc</span>;\n    <span class=\"supfact\">argc</span> = <span class=\"supfact\">iVar2</span>;\n  } while (<span class=\"supfact\">argv</span>[lVar4] != (char *)Number);\n  <span class=\"supfact\">argv</span>[Number] = <span class=\"supfact\">cmd</span>;\n  <span class=\"supfact\">local_b8</span>[Number] = (char *)<span class=\"supfact\">in_RSI</span>;\n  <span class=\"supfact\">local_b8</span>[Number] = (char *)<span class=\"supfact\">in_RDX</span>;\n  <span class=\"supfact\">local_b8</span>[Number] = (char *)in_RCX;\n  <span class=\"supfact\">local_98</span> = <span class=\"supfact\">in_R8</span>;\n  <span class=\"supfact\">local_90</span> = <span class=\"supfact\">in_R9</span>;\n  if (<span class=\"supfact\">argc</span> & lt; Number) {\n    <span class=\"supfact\">argv</span>[<span class=\"supfact\">argc</span>] = (char *)Number;\n    <span class=\"supfact\">iVar2</span> = execv_perf_cmd(<span class=\"supfact\">argv</span>);\n  } else {\n    <span class=\"supfact\">iVar2</span> = error(String, <span class=\"supfact\">cmd</span>);\n  }\n  if (lVar1 == *(long *)(<span class=\"supfact\">in_FS_OFFSET</span> + Number)) {\n    return <span class=\"supfact\">iVar2</span>;\n  }\n  __stack_chk_fail();\n}", "var": [{"name": "param_1", "type": "undefined4", "pred_name": "in_XMM0_Da", "ref_name": "in_XMM0_Da", "ref_type": "undefined4"}, {"name": "param_2", "type": "undefined4", "pred_name": "in_XMM1_Da", "ref_name": "in_XMM1_Da", "ref_type": "undefined4"}, {"name": "param_3", "type": "undefined4", "pred_name": "in_XMM2_Da", "ref_name": "in_XMM2_Da", "ref_type": "undefined4"}, {"name": "param_4", "type": "undefined4", "pred_name": "in_XMM3_Da", "ref_name": "in_XMM3_Da", "ref_type": "undefined4"}, {"name": "param_5", "type": "undefined4", "pred_name": "in_XMM4_Da", "ref_name": "in_XMM4_Da", "ref_type": "undefined4"}, {"name": "param_6", "type": "undefined4", "pred_name": "in_XMM5_Da", "ref_name": "in_XMM5_Da", "ref_type": "undefined4"}, {"name": "param_7", "type": "undefined4", "pred_name": "in_XMM6_Da", "ref_name": "in_XMM6_Da", "ref_type": "undefined4"}, {"name": "param_8", "type": "undefined4", "pred_name": "in_XMM7_Da", "ref_name": "in_XMM7_Da", "ref_type": "undefined4"}, {"name": "param_9", "type": "char * *", "pred_name": "cmd", "ref_name": "cmd", "ref_type": "char * *"}, {"name": "param_10", "type": "undefined8", "pred_name": "in_RSI", "ref_name": "in_RSI", "ref_type": "undefined8"}, {"name": "param_11", "type": "undefined8", "pred_name": "in_RDX", "ref_name": "in_RDX", "ref_type": "undefined8"}, {"name": "param_12", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "param_13", "type": "undefined8", "pred_name": "in_R8", "ref_name": "in_R8", "ref_type": "undefined8"}, {"name": "param_14", "type": "undefined8", "pred_name": "in_R9", "ref_name": "in_R9", "ref_type": "undefined8"}, {"name": "in_AL", "type": "char", "pred_name": "in_AL", "ref_name": "in_AL", "ref_type": "char"}, {"name": "iVar1", "type": "int", "pred_name": "iVar2", "ref_name": "iVar2", "ref_type": "int"}, {"name": "in_FS_OFFSET", "type": "long", "pred_name": "in_FS_OFFSET", "ref_name": "in_FS_OFFSET", "ref_type": "long"}, {"name": "local_1ec", "type": "int", "pred_name": "argc", "ref_name": "argc", "ref_type": "int"}, {"name": "local_1e0", "type": "va_list", "pred_name": "param", "ref_name": "param", "ref_type": "va_list"}, {"name": "local_1d8", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_1c8", "type": "char *[33][33]", "pred_name": "argv", "ref_name": "argv", "ref_type": "char *[33][33]"}, {"name": "local_c0", "type": "disappear", "pred_name": "", "ref_name": "", "ref_type": "disappear"}, {"name": "local_b8", "type": "char *[4][4]", "pred_name": "local_b8", "ref_name": "local_b8", "ref_type": "char *[4][4]"}, {"name": "local_98", "type": "undefined8", "pred_name": "local_98", "ref_name": "local_98", "ref_type": "undefined8"}, {"name": "local_90", "type": "undefined8", "pred_name": "local_90", "ref_name": "local_90", "ref_type": "undefined8"}, {"name": "local_88", "type": "undefined4", "pred_name": "local_88", "ref_name": "local_88", "ref_type": "undefined4"}, {"name": "local_78", "type": "undefined4", "pred_name": "local_78", "ref_name": "local_78", "ref_type": "undefined4"}, {"name": "local_68", "type": "undefined4", "pred_name": "local_68", "ref_name": "local_68", "ref_type": "undefined4"}, {"name": "local_58", "type": "undefined4", "pred_name": "local_58", "ref_name": "local_58", "ref_type": "undefined4"}, {"name": "local_48", "type": "undefined4", "pred_name": "local_48", "ref_name": "local_48", "ref_type": "undefined4"}, {"name": "local_38", "type": "undefined4", "pred_name": "local_38", "ref_name": "local_38", "ref_type": "undefined4"}, {"name": "local_28", "type": "undefined4", "pred_name": "local_28", "ref_name": "local_28", "ref_type": "undefined4"}], "body_in_train": true}]